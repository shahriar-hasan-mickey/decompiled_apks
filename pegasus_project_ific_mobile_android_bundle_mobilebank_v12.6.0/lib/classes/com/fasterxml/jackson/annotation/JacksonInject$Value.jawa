record `com.fasterxml.jackson.annotation.JacksonInject$Value` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `java.lang.Object` `com.fasterxml.jackson.annotation.JacksonInject$Value._id` @AccessFlag PROTECTED_FINAL;
  `java.lang.Boolean` `com.fasterxml.jackson.annotation.JacksonInject$Value._useInput` @AccessFlag PROTECTED_FINAL;
}
global `com.fasterxml.jackson.annotation.JacksonInject$Value` `@@com.fasterxml.jackson.annotation.JacksonInject$Value.EMPTY` @AccessFlag PROTECTED_STATIC_FINAL;
global `long` `@@com.fasterxml.jackson.annotation.JacksonInject$Value.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Boolean` v2 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.<init>:(Ljava/lang/Object;Ljava/lang/Boolean;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `_empty`(`java.lang.Object` v0 @kind object, `java.lang.Boolean` v1 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;._empty:(Ljava/lang/Object;Ljava/lang/Boolean;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.fasterxml.jackson.annotation.JacksonInject$Value` `construct`(`java.lang.Object` v1 @kind object, `java.lang.Boolean` v2 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.construct:(Ljava/lang/Object;Ljava/lang/Boolean;)Lcom/fasterxml/jackson/annotation/JacksonInject$Value;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.fasterxml.jackson.annotation.JacksonInject$Value` `forId`(`java.lang.Object` v1 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.forId:(Ljava/lang/Object;)Lcom/fasterxml/jackson/annotation/JacksonInject$Value;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.fasterxml.jackson.annotation.JacksonInject$Value` `from`(`com.fasterxml.jackson.annotation.JacksonInject` v1 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.from:(Lcom/fasterxml/jackson/annotation/JacksonInject;)Lcom/fasterxml/jackson/annotation/JacksonInject$Value;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `equals`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `getId`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v1 @kind this) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.getId:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasId`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v1 @kind this) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.hasId:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v2 @kind this) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v4 @kind this) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.annotation.JacksonInject$Value` `withId`(`com.fasterxml.jackson.annotation.JacksonInject$Value` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/annotation/JacksonInject$Value;.withId:(Ljava/lang/Object;)Lcom/fasterxml/jackson/annotation/JacksonInject$Value;` @AccessFlag PUBLIC {

  # return;
}
