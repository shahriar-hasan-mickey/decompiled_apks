record `com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` @kind class @AccessFlag FINAL extends `java.util.StringTokenizer` @kind class {
  `int` `com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._index` @AccessFlag PROTECTED;
  `java.lang.String` `com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._input` @AccessFlag PROTECTED_FINAL;
  `java.lang.String` `com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer._pushbackToken` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getAllInput`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.getAllInput:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getRemainingInput`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.getRemainingInput:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasMoreTokens`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.hasMoreTokens:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `nextToken`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v3 @kind this) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.nextToken:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `pushBack`(`com.fasterxml.jackson.databind.type.TypeParser$MyTokenizer` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/type/TypeParser$MyTokenizer;.pushBack:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
