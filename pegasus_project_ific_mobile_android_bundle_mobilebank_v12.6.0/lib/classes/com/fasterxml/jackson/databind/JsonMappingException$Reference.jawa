record `com.fasterxml.jackson.databind.JsonMappingException$Reference` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `java.lang.String` `com.fasterxml.jackson.databind.JsonMappingException$Reference._desc` @AccessFlag PROTECTED;
  `java.lang.String` `com.fasterxml.jackson.databind.JsonMappingException$Reference._fieldName` @AccessFlag PROTECTED;
  `java.lang.Object` `com.fasterxml.jackson.databind.JsonMappingException$Reference._from` @AccessFlag PROTECTED_TRANSIENT;
  `int` `com.fasterxml.jackson.databind.JsonMappingException$Reference._index` @AccessFlag PROTECTED;
}
global `long` `@@com.fasterxml.jackson.databind.JsonMappingException$Reference.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.<init>:(Ljava/lang/Object;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.<init>:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `getDescription`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v4 @kind this) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.getDescription:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.fasterxml.jackson.databind.JsonMappingException$Reference` v0 @kind this) @signature `Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
