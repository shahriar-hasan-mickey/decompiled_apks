record `com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.InputStream` @kind class {
  `java.nio.ByteBuffer` `com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream._b` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `int` `available`(`com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.fasterxml.jackson.databind.util.ByteBufferBackedInputStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/databind/util/ByteBufferBackedInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
