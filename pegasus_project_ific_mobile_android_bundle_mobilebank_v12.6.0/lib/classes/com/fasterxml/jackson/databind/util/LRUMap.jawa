record `com.fasterxml.jackson.databind.util.LRUMap` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `int` `com.fasterxml.jackson.databind.util.LRUMap._jdkSerializeMaxEntries` @AccessFlag PROTECTED_TRANSIENT;
  `java.util.concurrent.ConcurrentHashMap` `com.fasterxml.jackson.databind.util.LRUMap._map` @AccessFlag PROTECTED_FINAL_TRANSIENT;
  `int` `com.fasterxml.jackson.databind.util.LRUMap._maxEntries` @AccessFlag PROTECTED_FINAL_TRANSIENT;
}
global `long` `@@com.fasterxml.jackson.databind.util.LRUMap.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.util.LRUMap` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `readObject`(`com.fasterxml.jackson.databind.util.LRUMap` v0 @kind this, `java.io.ObjectInputStream` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `writeObject`(`com.fasterxml.jackson.databind.util.LRUMap` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clear`(`com.fasterxml.jackson.databind.util.LRUMap` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.fasterxml.jackson.databind.util.LRUMap` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.fasterxml.jackson.databind.util.LRUMap` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `putIfAbsent`(`com.fasterxml.jackson.databind.util.LRUMap` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `readResolve`(`com.fasterxml.jackson.databind.util.LRUMap` v3 @kind this) @signature `Lcom/fasterxml/jackson/databind/util/LRUMap;.readResolve:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
