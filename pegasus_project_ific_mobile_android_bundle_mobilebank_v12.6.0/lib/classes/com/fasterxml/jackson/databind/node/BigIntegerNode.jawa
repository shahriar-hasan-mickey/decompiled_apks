record `com.fasterxml.jackson.databind.node.BigIntegerNode` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.node.NumericNode` @kind class {
  `java.math.BigInteger` `com.fasterxml.jackson.databind.node.BigIntegerNode._value` @AccessFlag PROTECTED_FINAL;
}
global `java.math.BigInteger` `@@com.fasterxml.jackson.databind.node.BigIntegerNode.MAX_INTEGER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.fasterxml.jackson.databind.node.BigIntegerNode.MAX_LONG` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.fasterxml.jackson.databind.node.BigIntegerNode.MIN_INTEGER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.math.BigInteger` `@@com.fasterxml.jackson.databind.node.BigIntegerNode.MIN_LONG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v0 @kind this, `java.math.BigInteger` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.<init>:(Ljava/math/BigInteger;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.node.BigIntegerNode` `valueOf`(`java.math.BigInteger` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.valueOf:(Ljava/math/BigInteger;)Lcom/fasterxml/jackson/databind/node/BigIntegerNode;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `asText`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.asText:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `asToken`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.asToken:()Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `doubleValue`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v2 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.doubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `equals`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `hashCode`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.hashCode:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.node.BigIntegerNode` v0 @kind this, `com.fasterxml.jackson.core.JsonGenerator` v1 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/node/BigIntegerNode;.serialize:(Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
