record `com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.databind.ser.ContainerSerializer` @kind class, `com.fasterxml.jackson.databind.ser.ContextualSerializer` @kind interface {
  `com.fasterxml.jackson.databind.BeanProperty` `com.fasterxml.jackson.databind.ser.std.ArraySerializerBase._property` @AccessFlag PROTECTED_FINAL;
  `java.lang.Boolean` `com.fasterxml.jackson.databind.ser.std.ArraySerializerBase._unwrapSingle` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v1 @kind this, `com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v2 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v3 @kind object, `java.lang.Boolean` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.<init>:(Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.<init>:(Ljava/lang/Class;)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `boolean` `_shouldUnwrapSingle`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;._shouldUnwrapSingle:(Lcom/fasterxml/jackson/databind/SerializerProvider;)Z` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `_withResolved`(`com.fasterxml.jackson.databind.BeanProperty` v0 @kind object, `java.lang.Boolean` v1 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;._withResolved:(Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `createContextual`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v1 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object, `com.fasterxml.jackson.databind.BeanProperty` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.createContextual:(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v1 @kind this, `java.lang.Object` v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeContents`(`java.lang.Object` v0 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v1 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.serializeContents:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.ArraySerializerBase` v1 @kind this, `java.lang.Object` v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ArraySerializerBase;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC_FINAL {

  # return;
}
