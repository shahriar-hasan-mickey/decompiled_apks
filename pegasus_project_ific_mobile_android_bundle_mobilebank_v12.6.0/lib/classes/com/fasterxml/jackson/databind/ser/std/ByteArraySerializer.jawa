record `com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.StdSerializer` @kind class {
}
global `long` `@@com.fasterxml.jackson.databind.ser.std.ByteArraySerializer.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;[B)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v2 @kind this, `byte`[] v3 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v4 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.serialize:([BLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v4 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.ByteArraySerializer` v3 @kind this, `byte`[] v4 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v5 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v6 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v7 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ByteArraySerializer;.serializeWithType:([BLcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
