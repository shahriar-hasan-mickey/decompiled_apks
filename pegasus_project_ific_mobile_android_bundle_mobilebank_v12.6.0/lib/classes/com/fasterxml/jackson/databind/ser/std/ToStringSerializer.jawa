record `com.fasterxml.jackson.databind.ser.std.ToStringSerializer` @kind class @AccessFlag PUBLIC extends `com.fasterxml.jackson.databind.ser.std.StdSerializer` @kind class {
}
global `com.fasterxml.jackson.databind.ser.std.ToStringSerializer` `@@com.fasterxml.jackson.databind.ser.std.ToStringSerializer.instance` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ToStringSerializer` v1 @kind this) @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.std.ToStringSerializer` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `isEmpty`(`com.fasterxml.jackson.databind.ser.std.ToStringSerializer` v0 @kind this, `com.fasterxml.jackson.databind.SerializerProvider` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.isEmpty:(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serialize`(`com.fasterxml.jackson.databind.ser.std.ToStringSerializer` v0 @kind this, `java.lang.Object` v1 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v2 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v3 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.serialize:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `serializeWithType`(`com.fasterxml.jackson.databind.ser.std.ToStringSerializer` v1 @kind this, `java.lang.Object` v2 @kind object, `com.fasterxml.jackson.core.JsonGenerator` v3 @kind object, `com.fasterxml.jackson.databind.SerializerProvider` v4 @kind object, `com.fasterxml.jackson.databind.jsontype.TypeSerializer` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/std/ToStringSerializer;.serializeWithType:(Ljava/lang/Object;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V` @AccessFlag PUBLIC {

  # return;
}
