record `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi` @kind class @AccessFlag FINAL extends `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap` @kind class {
  `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer`[] `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi._entries` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi` v0 @kind this, `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap` v1 @kind object, `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$TypeAndSerializer`[] v2 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap$Multi;.<init>:(Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;[Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap$TypeAndSerializer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap` `newWith`(`com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi` v3 @kind this, `java.lang.Class` v4 @kind object, `com.fasterxml.jackson.databind.JsonSerializer` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap$Multi;.newWith:(Ljava/lang/Class;Lcom/fasterxml/jackson/databind/JsonSerializer;)Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.databind.JsonSerializer` `serializerFor`(`com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$Multi` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap$Multi;.serializerFor:(Ljava/lang/Class;)Lcom/fasterxml/jackson/databind/JsonSerializer;` @AccessFlag PUBLIC {

  # return;
}
