record `com.fasterxml.jackson.core.base.ParserBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.fasterxml.jackson.core.base.ParserMinimalBase` @kind class {
  `byte`[] `com.fasterxml.jackson.core.base.ParserBase._binaryValue` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.util.ByteArrayBuilder` `com.fasterxml.jackson.core.base.ParserBase._byteArrayBuilder` @AccessFlag PROTECTED;
  `boolean` `com.fasterxml.jackson.core.base.ParserBase._closed` @AccessFlag PROTECTED;
  `long` `com.fasterxml.jackson.core.base.ParserBase._currInputProcessed` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._currInputRow` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._currInputRowStart` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._expLength` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._fractLength` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._inputEnd` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._inputPtr` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._intLength` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.io.IOContext` `com.fasterxml.jackson.core.base.ParserBase._ioContext` @AccessFlag PROTECTED_FINAL;
  `boolean` `com.fasterxml.jackson.core.base.ParserBase._nameCopied` @AccessFlag PROTECTED;
  `char`[] `com.fasterxml.jackson.core.base.ParserBase._nameCopyBuffer` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.JsonToken` `com.fasterxml.jackson.core.base.ParserBase._nextToken` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._numTypesValid` @AccessFlag PROTECTED;
  `java.math.BigDecimal` `com.fasterxml.jackson.core.base.ParserBase._numberBigDecimal` @AccessFlag PROTECTED;
  `java.math.BigInteger` `com.fasterxml.jackson.core.base.ParserBase._numberBigInt` @AccessFlag PROTECTED;
  `double` `com.fasterxml.jackson.core.base.ParserBase._numberDouble` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._numberInt` @AccessFlag PROTECTED;
  `long` `com.fasterxml.jackson.core.base.ParserBase._numberLong` @AccessFlag PROTECTED;
  `boolean` `com.fasterxml.jackson.core.base.ParserBase._numberNegative` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.json.JsonReadContext` `com.fasterxml.jackson.core.base.ParserBase._parsingContext` @AccessFlag PROTECTED;
  `com.fasterxml.jackson.core.util.TextBuffer` `com.fasterxml.jackson.core.base.ParserBase._textBuffer` @AccessFlag PROTECTED_FINAL;
  `int` `com.fasterxml.jackson.core.base.ParserBase._tokenInputCol` @AccessFlag PROTECTED;
  `int` `com.fasterxml.jackson.core.base.ParserBase._tokenInputRow` @AccessFlag PROTECTED;
  `long` `com.fasterxml.jackson.core.base.ParserBase._tokenInputTotal` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `com.fasterxml.jackson.core.io.IOContext` v2 @kind object, `int` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.<init>:(Lcom/fasterxml/jackson/core/io/IOContext;I)V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `void` `_parseSlowFloat`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this, `int` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._parseSlowFloat:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `_parseSlowInt`(`com.fasterxml.jackson.core.base.ParserBase` v4 @kind this, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._parseSlowInt:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `_checkStdFeatureChanges`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._checkStdFeatureChanges:(II)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_closeInput`() @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._closeInput:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `_decodeBase64Escape`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `com.fasterxml.jackson.core.Base64Variant` v2 @kind object, `char` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._decodeBase64Escape:(Lcom/fasterxml/jackson/core/Base64Variant;CI)I` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `char` `_decodeEscaped`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._decodeEscaped:()C` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `_eofAsNextChar`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._eofAsNextChar:()I` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `_finishString`(`com.fasterxml.jackson.core.base.ParserBase` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._finishString:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.core.util.ByteArrayBuilder` `_getByteArrayBuilder`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._getByteArrayBuilder:()Lcom/fasterxml/jackson/core/util/ByteArrayBuilder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `_getSourceReference`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._getSourceReference:()Ljava/lang/Object;` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_handleEOF`(`com.fasterxml.jackson.core.base.ParserBase` v5 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._handleEOF:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `int` `_parseIntValue`(`com.fasterxml.jackson.core.base.ParserBase` v3 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._parseIntValue:()I` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_parseNumericValue`(`com.fasterxml.jackson.core.base.ParserBase` v5 @kind this, `int` v6 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._parseNumericValue:(I)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_releaseBuffers`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._releaseBuffers:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `_reportMismatchedEndMarker`(`com.fasterxml.jackson.core.base.ParserBase` v4 @kind this, `int` v5 , `char` v6 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;._reportMismatchedEndMarker:(IC)V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `close`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `convertNumberToBigDecimal`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.convertNumberToBigDecimal:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `convertNumberToBigInteger`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.convertNumberToBigInteger:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `convertNumberToDouble`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.convertNumberToDouble:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `convertNumberToInt`(`com.fasterxml.jackson.core.base.ParserBase` v6 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.convertNumberToInt:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `convertNumberToLong`(`com.fasterxml.jackson.core.base.ParserBase` v5 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.convertNumberToLong:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.math.BigInteger` `getBigIntegerValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getBigIntegerValue:()Ljava/math/BigInteger;` @AccessFlag PUBLIC {

  # return;
}
procedure `byte`[] `getBinaryValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this, `com.fasterxml.jackson.core.Base64Variant` v3 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getBinaryValue:(Lcom/fasterxml/jackson/core/Base64Variant;)[B` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonLocation` `getCurrentLocation`(`com.fasterxml.jackson.core.base.ParserBase` v11 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getCurrentLocation:()Lcom/fasterxml/jackson/core/JsonLocation;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getCurrentName`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getCurrentName:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.math.BigDecimal` `getDecimalValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getDecimalValue:()Ljava/math/BigDecimal;` @AccessFlag PUBLIC {

  # return;
}
procedure `double` `getDoubleValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getDoubleValue:()D` @AccessFlag PUBLIC {

  # return;
}
procedure `float` `getFloatValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getFloatValue:()F` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getIntValue`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getIntValue:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getLongValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getLongValue:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser$NumberType` `getNumberType`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getNumberType:()Lcom/fasterxml/jackson/core/JsonParser$NumberType;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Number` `getNumberValue`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getNumberValue:()Ljava/lang/Number;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonStreamContext` `getParsingContext`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getParsingContext:()Lcom/fasterxml/jackson/core/JsonStreamContext;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.fasterxml.jackson.core.json.JsonReadContext` `getParsingContext`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getParsingContext:()Lcom/fasterxml/jackson/core/json/JsonReadContext;` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getTokenCharacterOffset`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getTokenCharacterOffset:()J` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTokenColumnNr`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getTokenColumnNr:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getTokenLineNr`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getTokenLineNr:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonLocation` `getTokenLocation`(`com.fasterxml.jackson.core.base.ParserBase` v9 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.getTokenLocation:()Lcom/fasterxml/jackson/core/JsonLocation;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `hasTextCharacters`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.hasTextCharacters:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isNaN`(`com.fasterxml.jackson.core.base.ParserBase` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.isNaN:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `overrideStdFeatures`(`com.fasterxml.jackson.core.base.ParserBase` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.overrideStdFeatures:(II)Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.IllegalArgumentException` `reportInvalidBase64Char`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `com.fasterxml.jackson.core.Base64Variant` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;II)Ljava/lang/IllegalArgumentException;` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.IllegalArgumentException` `reportInvalidBase64Char`(`com.fasterxml.jackson.core.base.ParserBase` v3 @kind this, `com.fasterxml.jackson.core.Base64Variant` v4 @kind object, `int` v5 , `int` v6 , `java.lang.String` v7 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.reportInvalidBase64Char:(Lcom/fasterxml/jackson/core/Base64Variant;IILjava/lang/String;)Ljava/lang/IllegalArgumentException;` @AccessFlag PROTECTED {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `reset`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `boolean` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.reset:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `resetAsNaN`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `java.lang.String` v2 @kind object, `double` v3 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.resetAsNaN:(Ljava/lang/String;D)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `resetFloat`(`com.fasterxml.jackson.core.base.ParserBase` v0 @kind this, `boolean` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.resetFloat:(ZIII)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonToken` `resetInt`(`com.fasterxml.jackson.core.base.ParserBase` v0 @kind this, `boolean` v1 , `int` v2 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.resetInt:(ZI)Lcom/fasterxml/jackson/core/JsonToken;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `void` `setCurrentValue`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.setCurrentValue:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.fasterxml.jackson.core.JsonParser` `setFeatureMask`(`com.fasterxml.jackson.core.base.ParserBase` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/base/ParserBase;.setFeatureMask:(I)Lcom/fasterxml/jackson/core/JsonParser;` @AccessFlag PUBLIC {

  # return;
}
