record `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._count` @AccessFlag PRIVATE;
  `boolean` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._failOnDoS` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._hashArea` @AccessFlag PRIVATE;
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._hashSize` @AccessFlag PRIVATE;
  `boolean` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._intern` @AccessFlag PRIVATE;
  `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._parent` @AccessFlag PRIVATE_FINAL;
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._secondaryStart` @AccessFlag PRIVATE;
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._seed` @AccessFlag PRIVATE_FINAL;
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._spilloverEnd` @AccessFlag PRIVATE;
  `java.util.concurrent.atomic.AtomicReference` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._tableInfo` @AccessFlag PRIVATE_FINAL;
  `int` `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer._tertiaryStart` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v1 @kind this, `int` v2 , `boolean` v3 , `int` v4 , `boolean` v5 ) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.<init>:(IZIZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `int` `_calcTertiaryShift`(`int` v1 ) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;._calcTertiaryShift:(I)I` @AccessFlag STATIC {

  # return;
}
procedure `int` `_spilloverStart`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;._spilloverStart:()I` @AccessFlag PRIVATE_FINAL {

  # return;
}
procedure `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` `createRoot`() @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.createRoot:()Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` `createRoot`(`int` v3 ) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.createRoot:(I)Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;` @AccessFlag PROTECTED_STATIC {

  # return;
}
procedure `int` `primaryCount`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.primaryCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `secondaryCount`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.secondaryCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `spilloverCount`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.spilloverCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `tertiaryCount`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.tertiaryCount:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v9 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `totalCount`(`com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer` v4 @kind this) @signature `Lcom/fasterxml/jackson/core/sym/ByteQuadsCanonicalizer;.totalCount:()I` @AccessFlag PUBLIC {

  # return;
}
