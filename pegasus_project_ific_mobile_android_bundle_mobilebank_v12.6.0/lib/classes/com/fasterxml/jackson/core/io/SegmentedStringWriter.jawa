record `com.fasterxml.jackson.core.io.SegmentedStringWriter` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Writer` @kind class {
  `com.fasterxml.jackson.core.util.TextBuffer` `com.fasterxml.jackson.core.io.SegmentedStringWriter._buffer` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v1 @kind this, `com.fasterxml.jackson.core.util.BufferRecycler` v2 @kind object) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.<init>:(Lcom/fasterxml/jackson/core/util/BufferRecycler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `java.io.Writer` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this, `char` v1 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(C)Ljava/io/Writer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.Writer` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v3 @kind this, `java.lang.CharSequence` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(Ljava/lang/CharSequence;)Ljava/io/Writer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.io.Writer` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v1 @kind this, `java.lang.CharSequence` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/io/Writer;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Appendable` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this, `char` v1 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(C)Ljava/lang/Appendable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Appendable` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this, `java.lang.CharSequence` v1 @kind object) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Appendable` `append`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this, `java.lang.CharSequence` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.append:(Ljava/lang/CharSequence;II)Ljava/lang/Appendable;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `void` `close`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `flush`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v0 @kind this) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.flush:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getAndClear`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v2 @kind this) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.getAndClear:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v1 @kind this, `int` v2 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.write:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.write:(Ljava/lang/String;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.write:(Ljava/lang/String;II)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v3 @kind this, `char`[] v4 @kind object) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.write:([C)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.fasterxml.jackson.core.io.SegmentedStringWriter` v1 @kind this, `char`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/SegmentedStringWriter;.write:([CII)V` @AccessFlag PUBLIC {

  # return;
}
