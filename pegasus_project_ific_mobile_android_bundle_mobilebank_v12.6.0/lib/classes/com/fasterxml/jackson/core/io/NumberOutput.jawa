record `com.fasterxml.jackson.core.io.NumberOutput` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.fasterxml.jackson.core.io.NumberOutput.BILLION` @AccessFlag PRIVATE_STATIC;
global `long` `@@com.fasterxml.jackson.core.io.NumberOutput.BILLION_L` @AccessFlag PRIVATE_STATIC;
global `long` `@@com.fasterxml.jackson.core.io.NumberOutput.MAX_INT_AS_LONG` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.fasterxml.jackson.core.io.NumberOutput.MILLION` @AccessFlag PRIVATE_STATIC;
global `long` `@@com.fasterxml.jackson.core.io.NumberOutput.MIN_INT_AS_LONG` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_INT` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.fasterxml.jackson.core.io.NumberOutput.SMALLEST_LONG` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.fasterxml.jackson.core.io.NumberOutput.TRIPLET_TO_CHARS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@com.fasterxml.jackson.core.io.NumberOutput.sSmallIntStrs2` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `int` `_full3`(`int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._full3:(I[BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_full3`(`int` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._full3:(I[CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_leading3`(`int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._leading3:(I[BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_leading3`(`int` v2 , `char`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._leading3:(I[CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputFullBillion`(`int` v4 , `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputFullBillion:(I[BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputFullBillion`(`int` v5 , `char`[] v6 @kind object, `int` v7 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputFullBillion:(I[CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputSmallestI`(`byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputSmallestI:([BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputSmallestI`(`char`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputSmallestI:([CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputSmallestL`(`byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputSmallestL:([BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputSmallestL`(`char`[] v3 @kind object, `int` v4 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputSmallestL:([CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputUptoBillion`(`int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputUptoBillion:(I[BI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputUptoBillion`(`int` v3 , `char`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputUptoBillion:(I[CI)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputUptoMillion`(`byte`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputUptoMillion:([BIII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `_outputUptoMillion`(`char`[] v2 @kind object, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;._outputUptoMillion:([CIII)I` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `int` `outputInt`(`int` v3 , `byte`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.outputInt:(I[BI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `outputInt`(`int` v3 , `char`[] v4 @kind object, `int` v5 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.outputInt:(I[CI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `outputLong`(`long` v8 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.outputLong:(J[BI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `int` `outputLong`(`long` v8 , `char`[] v10 @kind object, `int` v11 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.outputLong:(J[CI)I` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`double` v0 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.toString:(D)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`float` v0 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.toString:(F)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`int` v2 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.toString:(I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.lang.String` `toString`(`long` v3 ) @signature `Lcom/fasterxml/jackson/core/io/NumberOutput;.toString:(J)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
