record `com.facebook.AccessTokenManager$4` @kind class @AccessFlag  extends `com.facebook.GraphRequestBatch$Callback` @kind interface {
  `com.facebook.AccessTokenManager` `com.facebook.AccessTokenManager$4.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.facebook.AccessToken` `com.facebook.AccessTokenManager$4.val$accessToken` @AccessFlag FINAL_SYNTHETIC;
  `com.facebook.AccessToken$AccessTokenRefreshCallback` `com.facebook.AccessTokenManager$4.val$callback` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Set` `com.facebook.AccessTokenManager$4.val$declinedPermissions` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Set` `com.facebook.AccessTokenManager$4.val$permissions` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.atomic.AtomicBoolean` `com.facebook.AccessTokenManager$4.val$permissionsCallSucceeded` @AccessFlag FINAL_SYNTHETIC;
  `com.facebook.AccessTokenManager$RefreshResult` `com.facebook.AccessTokenManager$4.val$refreshResult` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.facebook.AccessTokenManager$4` v0 @kind this, `com.facebook.AccessTokenManager` v1 @kind object, `com.facebook.AccessToken` v2 @kind object, `com.facebook.AccessToken$AccessTokenRefreshCallback` v3 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v4 @kind object, `com.facebook.AccessTokenManager$RefreshResult` v5 @kind object, `java.util.Set` v6 @kind object, `java.util.Set` v7 @kind object) @signature `Lcom/facebook/AccessTokenManager$4;.<init>:(Lcom/facebook/AccessTokenManager;Lcom/facebook/AccessToken;Lcom/facebook/AccessToken$AccessTokenRefreshCallback;Ljava/util/concurrent/atomic/AtomicBoolean;Lcom/facebook/AccessTokenManager$RefreshResult;Ljava/util/Set;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `onBatchCompleted`(`com.facebook.AccessTokenManager$4` v14 @kind this, `com.facebook.GraphRequestBatch` v15 @kind object) @signature `Lcom/facebook/AccessTokenManager$4;.onBatchCompleted:(Lcom/facebook/GraphRequestBatch;)V` @AccessFlag PUBLIC {

  # return;
}
