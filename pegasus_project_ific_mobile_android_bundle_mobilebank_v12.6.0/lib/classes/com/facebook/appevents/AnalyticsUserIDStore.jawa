record `com.facebook.appevents.AnalyticsUserIDStore` @kind class @AccessFlag  {
}
global `java.lang.String` `@@com.facebook.appevents.AnalyticsUserIDStore.ANALYTICS_USER_ID_KEY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.appevents.AnalyticsUserIDStore.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@com.facebook.appevents.AnalyticsUserIDStore.initialized` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.util.concurrent.locks.ReentrantReadWriteLock` `@@com.facebook.appevents.AnalyticsUserIDStore.lock` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@com.facebook.appevents.AnalyticsUserIDStore.userID` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.appevents.AnalyticsUserIDStore` v0 @kind this) @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `access$000`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.access$000:()V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.locks.ReentrantReadWriteLock` `access$100`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.access$100:()Ljava/util/concurrent/locks/ReentrantReadWriteLock;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `access$200`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.access$200:()Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `access$202`(`java.lang.String` v0 @kind object) @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.access$202:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.String` `getUserID`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.getUserID:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `initAndWait`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.initAndWait:()V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `initStore`() @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.initStore:()V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `setUserID`(`java.lang.String` v2 @kind object) @signature `Lcom/facebook/appevents/AnalyticsUserIDStore;.setUserID:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
