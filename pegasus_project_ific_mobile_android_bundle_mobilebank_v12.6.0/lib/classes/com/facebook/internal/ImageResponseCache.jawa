record `com.facebook.internal.ImageResponseCache` @kind class @AccessFlag  {
}
global `java.lang.String` `@@com.facebook.internal.ImageResponseCache.TAG` @AccessFlag STATIC_FINAL;
global `com.facebook.internal.FileLruCache` `@@com.facebook.internal.ImageResponseCache.imageCache` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/facebook/internal/ImageResponseCache;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.internal.ImageResponseCache` v0 @kind this) @signature `Lcom/facebook/internal/ImageResponseCache;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `clearCache`(`android.content.Context` v5 @kind object) @signature `Lcom/facebook/internal/ImageResponseCache;.clearCache:(Landroid/content/Context;)V` @AccessFlag STATIC {

  # return;
}
procedure `com.facebook.internal.FileLruCache` `getCache`(`android.content.Context` v3 @kind object) @signature `Lcom/facebook/internal/ImageResponseCache;.getCache:(Landroid/content/Context;)Lcom/facebook/internal/FileLruCache;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.InputStream` `getCachedImageStream`(`android.net.Uri` v2 @kind object, `android.content.Context` v3 @kind object) @signature `Lcom/facebook/internal/ImageResponseCache;.getCachedImageStream:(Landroid/net/Uri;Landroid/content/Context;)Ljava/io/InputStream;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.InputStream` `interceptAndCacheImageStream`(`android.content.Context` v3 @kind object, `java.net.HttpURLConnection` v4 @kind object) @signature `Lcom/facebook/internal/ImageResponseCache;.interceptAndCacheImageStream:(Landroid/content/Context;Ljava/net/HttpURLConnection;)Ljava/io/InputStream;` @AccessFlag STATIC {

  # return;
}
procedure `boolean` `isCDNURL`(`android.net.Uri` v2 @kind object) @signature `Lcom/facebook/internal/ImageResponseCache;.isCDNURL:(Landroid/net/Uri;)Z` @AccessFlag PRIVATE_STATIC {

  # return;
}
