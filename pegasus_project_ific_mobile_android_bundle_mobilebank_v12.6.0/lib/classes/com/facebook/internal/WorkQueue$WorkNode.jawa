record `com.facebook.internal.WorkQueue$WorkNode` @kind class @AccessFlag  extends `com.facebook.internal.WorkQueue$WorkItem` @kind interface {
  `java.lang.Runnable` `com.facebook.internal.WorkQueue$WorkNode.callback` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.facebook.internal.WorkQueue$WorkNode.isRunning` @AccessFlag PRIVATE;
  `com.facebook.internal.WorkQueue$WorkNode` `com.facebook.internal.WorkQueue$WorkNode.next` @AccessFlag PRIVATE;
  `com.facebook.internal.WorkQueue$WorkNode` `com.facebook.internal.WorkQueue$WorkNode.prev` @AccessFlag PRIVATE;
  `com.facebook.internal.WorkQueue` `com.facebook.internal.WorkQueue$WorkNode.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@com.facebook.internal.WorkQueue$WorkNode.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.internal.WorkQueue$WorkNode` v0 @kind this, `com.facebook.internal.WorkQueue` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.<init>:(Lcom/facebook/internal/WorkQueue;Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.facebook.internal.WorkQueue$WorkNode` `addToList`(`com.facebook.internal.WorkQueue$WorkNode` v2 @kind this, `com.facebook.internal.WorkQueue$WorkNode` v3 @kind object, `boolean` v4 ) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.addToList:(Lcom/facebook/internal/WorkQueue$WorkNode;Z)Lcom/facebook/internal/WorkQueue$WorkNode;` @AccessFlag  {

  # return;
}
procedure `boolean` `cancel`(`com.facebook.internal.WorkQueue$WorkNode` v3 @kind this) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.cancel:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Runnable` `getCallback`(`com.facebook.internal.WorkQueue$WorkNode` v1 @kind this) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.getCallback:()Ljava/lang/Runnable;` @AccessFlag  {

  # return;
}
procedure `com.facebook.internal.WorkQueue$WorkNode` `getNext`(`com.facebook.internal.WorkQueue$WorkNode` v1 @kind this) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.getNext:()Lcom/facebook/internal/WorkQueue$WorkNode;` @AccessFlag  {

  # return;
}
procedure `boolean` `isRunning`(`com.facebook.internal.WorkQueue$WorkNode` v1 @kind this) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.isRunning:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `moveToFront`(`com.facebook.internal.WorkQueue$WorkNode` v4 @kind this) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.moveToFront:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `com.facebook.internal.WorkQueue$WorkNode` `removeFromList`(`com.facebook.internal.WorkQueue$WorkNode` v3 @kind this, `com.facebook.internal.WorkQueue$WorkNode` v4 @kind object) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.removeFromList:(Lcom/facebook/internal/WorkQueue$WorkNode;)Lcom/facebook/internal/WorkQueue$WorkNode;` @AccessFlag  {

  # return;
}
procedure `void` `setIsRunning`(`com.facebook.internal.WorkQueue$WorkNode` v0 @kind this, `boolean` v1 ) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.setIsRunning:(Z)V` @AccessFlag  {

  # return;
}
procedure `void` `verify`(`com.facebook.internal.WorkQueue$WorkNode` v0 @kind this, `boolean` v1 ) @signature `Lcom/facebook/internal/WorkQueue$WorkNode;.verify:(Z)V` @AccessFlag  {

  # return;
}
