record `com.facebook.internal.NativeAppCallAttachmentStore` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@com.facebook.internal.NativeAppCallAttachmentStore.ATTACHMENTS_DIR_NAME` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@com.facebook.internal.NativeAppCallAttachmentStore.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.io.File` `@@com.facebook.internal.NativeAppCallAttachmentStore.attachmentsDirectory` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.internal.NativeAppCallAttachmentStore` v0 @kind this) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `addAttachments`(`java.util.Collection` v5 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.addAttachments:(Ljava/util/Collection;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `cleanupAllAttachments`() @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.cleanupAllAttachments:()V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `cleanupAttachmentsForCall`(`java.util.UUID` v1 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.cleanupAttachmentsForCall:(Ljava/util/UUID;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.facebook.internal.NativeAppCallAttachmentStore$Attachment` `createAttachment`(`java.util.UUID` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.createAttachment:(Ljava/util/UUID;Landroid/graphics/Bitmap;)Lcom/facebook/internal/NativeAppCallAttachmentStore$Attachment;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.facebook.internal.NativeAppCallAttachmentStore$Attachment` `createAttachment`(`java.util.UUID` v2 @kind object, `android.net.Uri` v3 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.createAttachment:(Ljava/util/UUID;Landroid/net/Uri;)Lcom/facebook/internal/NativeAppCallAttachmentStore$Attachment;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `java.io.File` `ensureAttachmentsDirectoryExists`() @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.ensureAttachmentsDirectoryExists:()Ljava/io/File;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.File` `getAttachmentFile`(`java.util.UUID` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.getAttachmentFile:(Ljava/util/UUID;Ljava/lang/String;Z)Ljava/io/File;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.File` `getAttachmentsDirectory`() @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.getAttachmentsDirectory:()Ljava/io/File;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.File` `getAttachmentsDirectoryForCall`(`java.util.UUID` v2 @kind object, `boolean` v3 ) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.getAttachmentsDirectoryForCall:(Ljava/util/UUID;Z)Ljava/io/File;` @AccessFlag STATIC {

  # return;
}
procedure `java.io.File` `openAttachment`(`java.util.UUID` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.openAttachment:(Ljava/util/UUID;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `processAttachmentBitmap`(`android.graphics.Bitmap` v2 @kind object, `java.io.File` v3 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.processAttachmentBitmap:(Landroid/graphics/Bitmap;Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `processAttachmentFile`(`android.net.Uri` v1 @kind object, `boolean` v2 , `java.io.File` v3 @kind object) @signature `Lcom/facebook/internal/NativeAppCallAttachmentStore;.processAttachmentFile:(Landroid/net/Uri;ZLjava/io/File;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
