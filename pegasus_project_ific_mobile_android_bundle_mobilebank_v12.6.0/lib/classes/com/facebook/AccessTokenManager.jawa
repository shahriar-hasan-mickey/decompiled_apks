record `com.facebook.AccessTokenManager` @kind class @AccessFlag PUBLIC_FINAL {
  `com.facebook.AccessTokenCache` `com.facebook.AccessTokenManager.accessTokenCache` @AccessFlag PRIVATE_FINAL;
  `com.facebook.AccessToken` `com.facebook.AccessTokenManager.currentAccessToken` @AccessFlag PRIVATE;
  `java.util.Date` `com.facebook.AccessTokenManager.lastAttemptedTokenExtendDate` @AccessFlag PRIVATE;
  `android.support.v4.content.f` `com.facebook.AccessTokenManager.localBroadcastManager` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `com.facebook.AccessTokenManager.tokenRefreshInProgress` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.facebook.AccessTokenManager.ACTION_CURRENT_ACCESS_TOKEN_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.EXTRA_NEW_ACCESS_TOKEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.EXTRA_OLD_ACCESS_TOKEN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.ME_PERMISSIONS_GRAPH_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.SHARED_PREFERENCES_NAME` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.TAG` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@com.facebook.AccessTokenManager.TOKEN_EXTEND_GRAPH_PATH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.facebook.AccessTokenManager.TOKEN_EXTEND_RETRY_SECONDS` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.facebook.AccessTokenManager.TOKEN_EXTEND_THRESHOLD_SECONDS` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.facebook.AccessTokenManager` `@@com.facebook.AccessTokenManager.instance` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<init>`(`com.facebook.AccessTokenManager` v3 @kind this, `android.support.v4.content.f` v4 @kind object, `com.facebook.AccessTokenCache` v5 @kind object) @signature `Lcom/facebook/AccessTokenManager;.<init>:(Landroid/support/v4/content/f;Lcom/facebook/AccessTokenCache;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `access$000`(`com.facebook.AccessTokenManager` v0 @kind object, `com.facebook.AccessToken$AccessTokenRefreshCallback` v1 @kind object) @signature `Lcom/facebook/AccessTokenManager;.access$000:(Lcom/facebook/AccessTokenManager;Lcom/facebook/AccessToken$AccessTokenRefreshCallback;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.util.concurrent.atomic.AtomicBoolean` `access$200`(`com.facebook.AccessTokenManager` v0 @kind object) @signature `Lcom/facebook/AccessTokenManager;.access$200:(Lcom/facebook/AccessTokenManager;)Ljava/util/concurrent/atomic/AtomicBoolean;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.facebook.GraphRequest` `createExtendAccessTokenRequest`(`com.facebook.AccessToken` v7 @kind object, `com.facebook.GraphRequest$Callback` v8 @kind object) @signature `Lcom/facebook/AccessTokenManager;.createExtendAccessTokenRequest:(Lcom/facebook/AccessToken;Lcom/facebook/GraphRequest$Callback;)Lcom/facebook/GraphRequest;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.facebook.GraphRequest` `createGrantedPermissionsRequest`(`com.facebook.AccessToken` v7 @kind object, `com.facebook.GraphRequest$Callback` v8 @kind object) @signature `Lcom/facebook/AccessTokenManager;.createGrantedPermissionsRequest:(Lcom/facebook/AccessToken;Lcom/facebook/GraphRequest$Callback;)Lcom/facebook/GraphRequest;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.facebook.AccessTokenManager` `getInstance`() @signature `Lcom/facebook/AccessTokenManager;.getInstance:()Lcom/facebook/AccessTokenManager;` @AccessFlag STATIC {

  # return;
}
procedure `void` `refreshCurrentAccessTokenImpl`(`com.facebook.AccessTokenManager` v10 @kind this, `com.facebook.AccessToken$AccessTokenRefreshCallback` v11 @kind object) @signature `Lcom/facebook/AccessTokenManager;.refreshCurrentAccessTokenImpl:(Lcom/facebook/AccessToken$AccessTokenRefreshCallback;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `sendCurrentAccessTokenChangedBroadcast`(`com.facebook.AccessTokenManager` v2 @kind this, `com.facebook.AccessToken` v3 @kind object, `com.facebook.AccessToken` v4 @kind object) @signature `Lcom/facebook/AccessTokenManager;.sendCurrentAccessTokenChangedBroadcast:(Lcom/facebook/AccessToken;Lcom/facebook/AccessToken;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `setCurrentAccessToken`(`com.facebook.AccessTokenManager` v4 @kind this, `com.facebook.AccessToken` v5 @kind object, `boolean` v6 ) @signature `Lcom/facebook/AccessTokenManager;.setCurrentAccessToken:(Lcom/facebook/AccessToken;Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `shouldExtendAccessToken`(`com.facebook.AccessTokenManager` v8 @kind this) @signature `Lcom/facebook/AccessTokenManager;.shouldExtendAccessToken:()Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `extendAccessTokenIfNeeded`(`com.facebook.AccessTokenManager` v1 @kind this) @signature `Lcom/facebook/AccessTokenManager;.extendAccessTokenIfNeeded:()V` @AccessFlag  {

  # return;
}
procedure `com.facebook.AccessToken` `getCurrentAccessToken`(`com.facebook.AccessTokenManager` v1 @kind this) @signature `Lcom/facebook/AccessTokenManager;.getCurrentAccessToken:()Lcom/facebook/AccessToken;` @AccessFlag  {

  # return;
}
procedure `boolean` `loadCurrentAccessToken`(`com.facebook.AccessTokenManager` v2 @kind this) @signature `Lcom/facebook/AccessTokenManager;.loadCurrentAccessToken:()Z` @AccessFlag  {

  # return;
}
procedure `void` `refreshCurrentAccessToken`(`com.facebook.AccessTokenManager` v2 @kind this, `com.facebook.AccessToken$AccessTokenRefreshCallback` v3 @kind object) @signature `Lcom/facebook/AccessTokenManager;.refreshCurrentAccessToken:(Lcom/facebook/AccessToken$AccessTokenRefreshCallback;)V` @AccessFlag  {

  # return;
}
procedure `void` `setCurrentAccessToken`(`com.facebook.AccessTokenManager` v1 @kind this, `com.facebook.AccessToken` v2 @kind object) @signature `Lcom/facebook/AccessTokenManager;.setCurrentAccessToken:(Lcom/facebook/AccessToken;)V` @AccessFlag  {

  # return;
}
