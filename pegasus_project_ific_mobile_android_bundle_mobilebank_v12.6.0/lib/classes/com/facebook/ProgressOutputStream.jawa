record `com.facebook.ProgressOutputStream` @kind class @AccessFlag  extends `java.io.FilterOutputStream` @kind class, `com.facebook.RequestOutputStream` @kind interface {
  `long` `com.facebook.ProgressOutputStream.batchProgress` @AccessFlag PRIVATE;
  `com.facebook.RequestProgress` `com.facebook.ProgressOutputStream.currentRequestProgress` @AccessFlag PRIVATE;
  `long` `com.facebook.ProgressOutputStream.lastReportedProgress` @AccessFlag PRIVATE;
  `long` `com.facebook.ProgressOutputStream.maxProgress` @AccessFlag PRIVATE;
  `java.util.Map` `com.facebook.ProgressOutputStream.progressMap` @AccessFlag PRIVATE_FINAL;
  `com.facebook.GraphRequestBatch` `com.facebook.ProgressOutputStream.requests` @AccessFlag PRIVATE_FINAL;
  `long` `com.facebook.ProgressOutputStream.threshold` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.facebook.ProgressOutputStream` v0 @kind this, `java.io.OutputStream` v1 @kind object, `com.facebook.GraphRequestBatch` v2 @kind object, `java.util.Map` v3 @kind object, `long` v4 ) @signature `Lcom/facebook/ProgressOutputStream;.<init>:(Ljava/io/OutputStream;Lcom/facebook/GraphRequestBatch;Ljava/util/Map;J)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.facebook.GraphRequestBatch` `access$000`(`com.facebook.ProgressOutputStream` v0 @kind object) @signature `Lcom/facebook/ProgressOutputStream;.access$000:(Lcom/facebook/ProgressOutputStream;)Lcom/facebook/GraphRequestBatch;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$100`(`com.facebook.ProgressOutputStream` v2 @kind object) @signature `Lcom/facebook/ProgressOutputStream;.access$100:(Lcom/facebook/ProgressOutputStream;)J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `long` `access$200`(`com.facebook.ProgressOutputStream` v2 @kind object) @signature `Lcom/facebook/ProgressOutputStream;.access$200:(Lcom/facebook/ProgressOutputStream;)J` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `addProgress`(`com.facebook.ProgressOutputStream` v6 @kind this, `long` v7 ) @signature `Lcom/facebook/ProgressOutputStream;.addProgress:(J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `reportBatchProgress`(`com.facebook.ProgressOutputStream` v9 @kind this) @signature `Lcom/facebook/ProgressOutputStream;.reportBatchProgress:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `close`(`com.facebook.ProgressOutputStream` v2 @kind this) @signature `Lcom/facebook/ProgressOutputStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `getBatchProgress`(`com.facebook.ProgressOutputStream` v2 @kind this) @signature `Lcom/facebook/ProgressOutputStream;.getBatchProgress:()J` @AccessFlag  {

  # return;
}
procedure `long` `getMaxProgress`(`com.facebook.ProgressOutputStream` v2 @kind this) @signature `Lcom/facebook/ProgressOutputStream;.getMaxProgress:()J` @AccessFlag  {

  # return;
}
procedure `void` `setCurrentRequest`(`com.facebook.ProgressOutputStream` v1 @kind this, `com.facebook.GraphRequest` v2 @kind object) @signature `Lcom/facebook/ProgressOutputStream;.setCurrentRequest:(Lcom/facebook/GraphRequest;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.ProgressOutputStream` v2 @kind this, `int` v3 ) @signature `Lcom/facebook/ProgressOutputStream;.write:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.ProgressOutputStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/facebook/ProgressOutputStream;.write:([B)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `write`(`com.facebook.ProgressOutputStream` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/facebook/ProgressOutputStream;.write:([BII)V` @AccessFlag PUBLIC {

  # return;
}
