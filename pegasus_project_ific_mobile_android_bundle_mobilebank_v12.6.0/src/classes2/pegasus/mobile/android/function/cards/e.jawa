record `pegasus.mobile.android.function.cards.e` @kind class @AccessFlag PUBLIC extends `pegasus.mobile.android.function.cards.f` @kind interface {
}
procedure `void` `<init>`(`pegasus.mobile.android.function.cards.e` v0 @kind this) @signature `Lpegasus/mobile/android/function/cards/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1604e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1604e6.  return @kind void;
}
procedure `java.lang.String` `a`(`pegasus.mobile.android.function.cards.e` v10 @kind this, `java.lang.CharSequence` v11 @kind object) @signature `Lpegasus/mobile/android/function/cards/e;.a:(Ljava/lang/CharSequence;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L160434.  if v11 == 0 then goto L1604ca;
  #L160438.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L16043e.  v0:= temp;
  #L160440.  v1:= 4I;
  #L160442.  if v0 >= v1 then goto L160448;
  #L160446.  goto L1604ca;
  #L160448.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L16044e.  v0:= temp;
  #L160450.  v1:= 0I;
  #L160452.  call temp:= `charAt`(v11, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L160458.  v2:= temp;
  #L16045a.  v3:= 1I;
  #L16045c.  v5:= v2;
  #L16045e.  v2:= 1I;
  #L160460.  v4:= 1I;
  #L160462.  v6:= 1I;
  #L160464.  v7:= 1I;
  #L160466.  if v2 >= v0 then goto L1604a6;
  #L16046a.  call temp:= `charAt`(v11, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L160470.  v8:= temp;
  #L160472.  v9:= v5 + 1;
  #L160476.  if v9 != v8 then goto L16047e;
  #L16047a.  v9:= 1I;
  #L16047c.  goto L160480;
  #L16047e.  v9:= 0I;
  #L160480.  v4:= v4 ^& v9 @kind int;
  #L160482.  v9:= v5 + -1;
  #L160486.  if v9 != v8 then goto L16048e;
  #L16048a.  v9:= 1I;
  #L16048c.  goto L160490;
  #L16048e.  v9:= 0I;
  #L160490.  v6:= v6 ^& v9 @kind int;
  #L160492.  if v5 != v8 then goto L16049a;
  #L160496.  v5:= 1I;
  #L160498.  goto L16049c;
  #L16049a.  v5:= 0I;
  #L16049c.  v7:= v7 ^& v5 @kind int;
  #L16049e.  v2:= v2 + 1;
  #L1604a2.  v5:= v8;
  #L1604a4.  goto L160466;
  #L1604a6.  if v4 == 0 then goto L1604b0;
  #L1604aa.  v11:= "Ascending numbers" @kind object;
  #L1604ae.  return v11 @kind object;
  #L1604b0.  if v6 == 0 then goto L1604ba;
  #L1604b4.  v11:= "Descending numbers" @kind object;
  #L1604b8.  return v11 @kind object;
  #L1604ba.  if v7 == 0 then goto L1604c4;
  #L1604be.  v11:= "Same numbers" @kind object;
  #L1604c2.  return v11 @kind object;
  #L1604c4.  v11:= "OK" @kind object;
  #L1604c8.  return v11 @kind object;
  #L1604ca.  v11:= "Too short" @kind object;
  #L1604ce.  return v11 @kind object;
}
