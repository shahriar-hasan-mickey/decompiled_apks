record `c.y$1` @kind class @AccessFlag FINAL extends `c.y` @kind class {
  `c.t` `c.y$1.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `c.y$1.b` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `c.y$1.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `c.y$1.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.y$1` v0 @kind this, `c.t` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lc/y$1;.<init>:(Lc/t;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28578c.  v0.`c.y$1.a` @type ^`c.t` := v1 @kind object;
  #L285790.  v0.`c.y$1.b` @type ^`int` := v2;
  #L285794.  v0.`c.y$1.c` @type ^`byte`[] := v3 @kind object;
  #L285798.  v0.`c.y$1.d` @type ^`int` := v4;
  #L28579c.  call `<init>`(v0) @signature `Lc/y;.<init>:()V` @kind direct;
  #L2857a2.  return @kind void;
}
procedure `c.t` `a`(`c.y$1` v1 @kind this) @signature `Lc/y$1;.a:()Lc/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28575c.  v0:= v1.`c.y$1.a` @type ^`c.t` @kind object;
  #L285760.  return v0 @kind object;
}
procedure `void` `a`(`c.y$1` v3 @kind this, `d.d` v4 @kind object) @signature `Lc/y$1;.a:(Ld/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2857b4.  v0:= v3.`c.y$1.c` @type ^`byte`[] @kind object;
  #L2857b8.  v1:= v3.`c.y$1.d` @type ^`int`;
  #L2857bc.  v2:= v3.`c.y$1.b` @type ^`int`;
  #L2857c0.  call temp:= `c`(v4, v0, v1, v2) @signature `Ld/d;.c:([BII)Ld/d;` @kind interface;
  #L2857c6.  return @kind void;
}
procedure `long` `b`(`c.y$1` v2 @kind this) @signature `Lc/y$1;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L285774.  v0:= v2.`c.y$1.b` @type ^`int`;
  #L285778.  v0:= (`long`) v0 @kind i2l;
  #L28577a.  return v0 @kind wide;
}
