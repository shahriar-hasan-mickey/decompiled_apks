record `c.d` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.d.c` @AccessFlag ;
  `boolean` `c.d.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.e` @AccessFlag PRIVATE_FINAL;
  `int` `c.d.f` @AccessFlag PRIVATE_FINAL;
  `int` `c.d.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.j` @AccessFlag PRIVATE_FINAL;
  `int` `c.d.k` @AccessFlag PRIVATE_FINAL;
  `int` `c.d.l` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.m` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.n` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.d.o` @AccessFlag PRIVATE_FINAL;
}
global `c.d` `@@c.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.d` `@@c.d.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L27eef4.  v0:= new `c.d$a`;
  #L27eef8.  call `<init>`(v0) @signature `Lc/d$a;.<init>:()V` @kind direct;
  #L27eefe.  call temp:= `a`(v0) @signature `Lc/d$a;.a:()Lc/d$a;` @kind virtual;
  #L27ef04.  v0:= temp @kind object;
  #L27ef06.  call temp:= `c`(v0) @signature `Lc/d$a;.c:()Lc/d;` @kind virtual;
  #L27ef0c.  v0:= temp @kind object;
  #L27ef0e.  `@@c.d.a` @type ^`c.d` := v0 @kind object;
  #L27ef12.  v0:= new `c.d$a`;
  #L27ef16.  call `<init>`(v0) @signature `Lc/d$a;.<init>:()V` @kind direct;
  #L27ef1c.  call temp:= `b`(v0) @signature `Lc/d$a;.b:()Lc/d$a;` @kind virtual;
  #L27ef22.  v0:= temp @kind object;
  #L27ef24.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L27ef28.  v2:= 2147483647I;
  #L27ef2e.  call temp:= `a`(v0, v2, v1) @signature `Lc/d$a;.a:(ILjava/util/concurrent/TimeUnit;)Lc/d$a;` @kind virtual;
  #L27ef34.  v0:= temp @kind object;
  #L27ef36.  call temp:= `c`(v0) @signature `Lc/d$a;.c:()Lc/d;` @kind virtual;
  #L27ef3c.  v0:= temp @kind object;
  #L27ef3e.  `@@c.d.b` @type ^`c.d` := v0 @kind object;
  #L27ef42.  return @kind void;
}
procedure `void` `<init>`(`c.d` v1 @kind this, `c.d$a` v2 @kind object) @signature `Lc/d;.<init>:(Lc/d$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L27efa0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27efa6.  v0:= v2.`c.d$a.a` @type ^`boolean` @kind boolean;
  #L27efaa.  v1.`c.d.d` @type ^`boolean` := v0 @kind boolean;
  #L27efae.  v0:= v2.`c.d$a.b` @type ^`boolean` @kind boolean;
  #L27efb2.  v1.`c.d.e` @type ^`boolean` := v0 @kind boolean;
  #L27efb6.  v0:= v2.`c.d$a.c` @type ^`int`;
  #L27efba.  v1.`c.d.f` @type ^`int` := v0;
  #L27efbe.  v0:= -1I;
  #L27efc0.  v1.`c.d.g` @type ^`int` := v0;
  #L27efc4.  v0:= 0I;
  #L27efc6.  v1.`c.d.h` @type ^`boolean` := v0 @kind boolean;
  #L27efca.  v1.`c.d.i` @type ^`boolean` := v0 @kind boolean;
  #L27efce.  v1.`c.d.j` @type ^`boolean` := v0 @kind boolean;
  #L27efd2.  v0:= v2.`c.d$a.d` @type ^`int`;
  #L27efd6.  v1.`c.d.k` @type ^`int` := v0;
  #L27efda.  v0:= v2.`c.d$a.e` @type ^`int`;
  #L27efde.  v1.`c.d.l` @type ^`int` := v0;
  #L27efe2.  v0:= v2.`c.d$a.f` @type ^`boolean` @kind boolean;
  #L27efe6.  v1.`c.d.m` @type ^`boolean` := v0 @kind boolean;
  #L27efea.  v0:= v2.`c.d$a.g` @type ^`boolean` @kind boolean;
  #L27efee.  v1.`c.d.n` @type ^`boolean` := v0 @kind boolean;
  #L27eff2.  v2:= v2.`c.d$a.h` @type ^`boolean` @kind boolean;
  #L27eff6.  v1.`c.d.o` @type ^`boolean` := v2 @kind boolean;
  #L27effa.  return @kind void;
}
procedure `void` `<init>`(`c.d` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lc/d;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27ef54.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27ef5a.  v0.`c.d.d` @type ^`boolean` := v1 @kind boolean;
  #L27ef5e.  v0.`c.d.e` @type ^`boolean` := v2 @kind boolean;
  #L27ef62.  v0.`c.d.f` @type ^`int` := v3;
  #L27ef66.  v0.`c.d.g` @type ^`int` := v4;
  #L27ef6a.  v0.`c.d.h` @type ^`boolean` := v5 @kind boolean;
  #L27ef6e.  v0.`c.d.i` @type ^`boolean` := v6 @kind boolean;
  #L27ef72.  v0.`c.d.j` @type ^`boolean` := v7 @kind boolean;
  #L27ef76.  v0.`c.d.k` @type ^`int` := v8;
  #L27ef7a.  v0.`c.d.l` @type ^`int` := v9;
  #L27ef7e.  v0.`c.d.m` @type ^`boolean` := v10 @kind boolean;
  #L27ef82.  v0.`c.d.n` @type ^`boolean` := v11 @kind boolean;
  #L27ef86.  v0.`c.d.o` @type ^`boolean` := v12 @kind boolean;
  #L27ef8a.  v0.`c.d.c` @type ^`java.lang.String` := v13 @kind object;
  #L27ef8e.  return @kind void;
}
procedure `c.d` `a`(`c.q` v24 @kind object) @signature `Lc/d;.a:(Lc/q;)Lc/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L27ea44.  v0:= v24 @kind object;
  #L27ea48.  call temp:= `a`(v24) @signature `Lc/q;.a:()I` @kind virtual;
  #L27ea4e.  v1:= temp;
  #L27ea50.  v6:= 0I;
  #L27ea52.  v7:= 1I;
  #L27ea54.  v8:= 0I;
  #L27ea56.  v10:= 0I;
  #L27ea58.  v11:= 0I;
  #L27ea5a.  v12:= -1I;
  #L27ea5c.  v13:= -1I;
  #L27ea5e.  v14:= 0I;
  #L27ea60.  v15:= 0I;
  #L27ea62.  v16:= 0I;
  #L27ea66.  v17:= -1I;
  #L27ea6a.  v18:= -1I;
  #L27ea6e.  v19:= 0I;
  #L27ea72.  v20:= 0I;
  #L27ea76.  v21:= 0I;
  #L27ea7a.  if v6 >= v1 then goto L27ecdc;
  #L27ea7e.  call temp:= `a`(v0, v6) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L27ea84.  v9:= temp @kind object;
  #L27ea86.  call temp:= `b`(v0, v6) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L27ea8c.  v2:= temp @kind object;
  #L27ea8e.  v4:= "Cache-Control" @kind object;
  #L27ea92.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ea98.  v4:= temp;
  #L27ea9a.  if v4 == 0 then goto L27eaaa;
  #L27ea9e.  if v8 == 0 then goto L27eaa6;
  #L27eaa2.  v7:= 0I;
  #L27eaa4.  goto L27eabc;
  #L27eaa6.  v8:= v2 @kind object;
  #L27eaa8.  goto L27eabc;
  #L27eaaa.  v4:= "Pragma" @kind object;
  #L27eaae.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27eab4.  v4:= temp;
  #L27eab6.  if v4 == 0 then goto L27ecce;
  #L27eaba.  goto L27eaa2;
  #L27eabc.  v4:= 0I;
  #L27eabe.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27eac4.  v9:= temp;
  #L27eac6.  if v4 >= v9 then goto L27ecce;
  #L27eaca.  v9:= "=,;" @kind object;
  #L27eace.  call temp:= `a`(v2, v4, v9) @signature `Lc/a/c/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L27ead4.  v9:= temp;
  #L27ead6.  call temp:= `substring`(v2, v4, v9) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L27eadc.  v4:= temp @kind object;
  #L27eade.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L27eae4.  v4:= temp @kind object;
  #L27eae6.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27eaec.  v3:= temp;
  #L27eaee.  if v9 == v3 then goto L27eb80;
  #L27eaf2.  call temp:= `charAt`(v2, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27eaf8.  v3:= temp;
  #L27eafa.  v5:= 44I;
  #L27eafe.  if v3 == v5 then goto L27eb80;
  #L27eb02.  call temp:= `charAt`(v2, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27eb08.  v3:= temp;
  #L27eb0a.  v5:= 59I;
  #L27eb0e.  if v3 != v5 then goto L27eb14;
  #L27eb12.  goto L27eb80;
  #L27eb14.  v9:= v9 + 1;
  #L27eb18.  call temp:= `a`(v2, v9) @signature `Lc/a/c/e;.a:(Ljava/lang/String;I)I` @kind static;
  #L27eb1e.  v3:= temp;
  #L27eb20.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27eb26.  v5:= temp;
  #L27eb28.  if v3 >= v5 then goto L27eb5e;
  #L27eb2c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27eb32.  v5:= temp;
  #L27eb34.  v9:= 34I;
  #L27eb38.  if v5 != v9 then goto L27eb5e;
  #L27eb3c.  v3:= v3 + 1;
  #L27eb40.  v5:= "\"" @kind object;
  #L27eb44.  call temp:= `a`(v2, v3, v5) @signature `Lc/a/c/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L27eb4a.  v5:= temp;
  #L27eb4c.  call temp:= `substring`(v2, v3, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L27eb52.  v3:= temp @kind object;
  #L27eb54.  v22:= 1I;
  #L27eb58.  v5:= v5 + 1;
  #L27eb5c.  goto L27eb8c;
  #L27eb5e.  v22:= 1I;
  #L27eb62.  v5:= ",;" @kind object;
  #L27eb66.  call temp:= `a`(v2, v3, v5) @signature `Lc/a/c/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L27eb6c.  v5:= temp;
  #L27eb6e.  call temp:= `substring`(v2, v3, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L27eb74.  v3:= temp @kind object;
  #L27eb76.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L27eb7c.  v3:= temp @kind object;
  #L27eb7e.  goto L27eb8c;
  #L27eb80.  v22:= 1I;
  #L27eb84.  v9:= v9 + 1;
  #L27eb88.  v5:= v9;
  #L27eb8a.  v3:= 0I;
  #L27eb8c.  v9:= "no-cache" @kind object;
  #L27eb90.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27eb96.  v9:= temp;
  #L27eb98.  if v9 == 0 then goto L27eba4;
  #L27eb9c.  v9:= -1I;
  #L27eb9e.  v10:= 1I;
  #L27eba0.  goto L27ecc8;
  #L27eba4.  v9:= "no-store" @kind object;
  #L27eba8.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ebae.  v9:= temp;
  #L27ebb0.  if v9 == 0 then goto L27ebbc;
  #L27ebb4.  v9:= -1I;
  #L27ebb6.  v11:= 1I;
  #L27ebb8.  goto L27ecc8;
  #L27ebbc.  v9:= "max-age" @kind object;
  #L27ebc0.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ebc6.  v9:= temp;
  #L27ebc8.  if v9 == 0 then goto L27ebdc;
  #L27ebcc.  v9:= -1I;
  #L27ebce.  call temp:= `b`(v3, v9) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L27ebd4.  v3:= temp;
  #L27ebd6.  v12:= v3;
  #L27ebd8.  goto L27ecc8;
  #L27ebdc.  v9:= "s-maxage" @kind object;
  #L27ebe0.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ebe6.  v9:= temp;
  #L27ebe8.  if v9 == 0 then goto L27ebfc;
  #L27ebec.  v9:= -1I;
  #L27ebee.  call temp:= `b`(v3, v9) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L27ebf4.  v3:= temp;
  #L27ebf6.  v13:= v3;
  #L27ebf8.  goto L27ecc8;
  #L27ebfc.  v9:= "private" @kind object;
  #L27ec00.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec06.  v9:= temp;
  #L27ec08.  if v9 == 0 then goto L27ec12;
  #L27ec0c.  v9:= -1I;
  #L27ec0e.  v14:= 1I;
  #L27ec10.  goto L27ecc8;
  #L27ec12.  v9:= "public" @kind object;
  #L27ec16.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec1c.  v9:= temp;
  #L27ec1e.  if v9 == 0 then goto L27ec28;
  #L27ec22.  v9:= -1I;
  #L27ec24.  v15:= 1I;
  #L27ec26.  goto L27ecc8;
  #L27ec28.  v9:= "must-revalidate" @kind object;
  #L27ec2c.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec32.  v9:= temp;
  #L27ec34.  if v9 == 0 then goto L27ec40;
  #L27ec38.  v9:= -1I;
  #L27ec3a.  v16:= 1I;
  #L27ec3e.  goto L27ecc8;
  #L27ec40.  v9:= "max-stale" @kind object;
  #L27ec44.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec4a.  v9:= temp;
  #L27ec4c.  if v9 == 0 then goto L27ec66;
  #L27ec50.  v4:= 2147483647I;
  #L27ec56.  call temp:= `b`(v3, v4) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L27ec5c.  v3:= temp;
  #L27ec5e.  v17:= v3;
  #L27ec62.  v9:= -1I;
  #L27ec64.  goto L27ecc8;
  #L27ec66.  v9:= "min-fresh" @kind object;
  #L27ec6a.  call temp:= `equalsIgnoreCase`(v9, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec70.  v9:= temp;
  #L27ec72.  if v9 == 0 then goto L27ec86;
  #L27ec76.  v9:= -1I;
  #L27ec78.  call temp:= `b`(v3, v9) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L27ec7e.  v3:= temp;
  #L27ec80.  v18:= v3;
  #L27ec84.  goto L27ecc8;
  #L27ec86.  v9:= -1I;
  #L27ec88.  v3:= "only-if-cached" @kind object;
  #L27ec8c.  call temp:= `equalsIgnoreCase`(v3, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ec92.  v3:= temp;
  #L27ec94.  if v3 == 0 then goto L27ec9e;
  #L27ec98.  v19:= 1I;
  #L27ec9c.  goto L27ecc8;
  #L27ec9e.  v3:= "no-transform" @kind object;
  #L27eca2.  call temp:= `equalsIgnoreCase`(v3, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27eca8.  v3:= temp;
  #L27ecaa.  if v3 == 0 then goto L27ecb4;
  #L27ecae.  v20:= 1I;
  #L27ecb2.  goto L27ecc8;
  #L27ecb4.  v3:= "immutable" @kind object;
  #L27ecb8.  call temp:= `equalsIgnoreCase`(v3, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27ecbe.  v3:= temp;
  #L27ecc0.  if v3 == 0 then goto L27ecc8;
  #L27ecc4.  v21:= 1I;
  #L27ecc8.  v4:= v5;
  #L27ecca.  goto L27eabe;
  #L27ecce.  v9:= -1I;
  #L27ecd0.  v22:= 1I;
  #L27ecd4.  v6:= v6 + 1;
  #L27ecd8.  goto L27ea7a;
  #L27ecdc.  if v7 != 0 then goto L27ece6;
  #L27ece0.  v22:= 0I;
  #L27ece4.  goto L27ecea;
  #L27ece6.  v22:= v8 @kind object;
  #L27ecea.  v0:= new `c.d`;
  #L27ecee.  v9:= v0 @kind object;
  #L27ecf0.  call `<init>`(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lc/d;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L27ecf6.  return v0 @kind object;
}
procedure `java.lang.String` `k`(`c.d` v3 @kind this) @signature `Lc/d;.k:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27ed50.  v0:= new `java.lang.StringBuilder`;
  #L27ed54.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27ed5a.  v1:= v3.`c.d.d` @type ^`boolean` @kind boolean;
  #L27ed5e.  if v1 == 0 then goto L27ed6c;
  #L27ed62.  v1:= "no-cache, " @kind object;
  #L27ed66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ed6c.  v1:= v3.`c.d.e` @type ^`boolean` @kind boolean;
  #L27ed70.  if v1 == 0 then goto L27ed7e;
  #L27ed74.  v1:= "no-store, " @kind object;
  #L27ed78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ed7e.  v1:= v3.`c.d.f` @type ^`int`;
  #L27ed82.  v2:= -1I;
  #L27ed84.  if v1 == v2 then goto L27eda6;
  #L27ed88.  v1:= "max-age=" @kind object;
  #L27ed8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ed92.  v1:= v3.`c.d.f` @type ^`int`;
  #L27ed96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ed9c.  v1:= ", " @kind object;
  #L27eda0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27eda6.  v1:= v3.`c.d.g` @type ^`int`;
  #L27edaa.  if v1 == v2 then goto L27edcc;
  #L27edae.  v1:= "s-maxage=" @kind object;
  #L27edb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27edb8.  v1:= v3.`c.d.g` @type ^`int`;
  #L27edbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27edc2.  v1:= ", " @kind object;
  #L27edc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27edcc.  v1:= v3.`c.d.h` @type ^`boolean` @kind boolean;
  #L27edd0.  if v1 == 0 then goto L27edde;
  #L27edd4.  v1:= "private, " @kind object;
  #L27edd8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27edde.  v1:= v3.`c.d.i` @type ^`boolean` @kind boolean;
  #L27ede2.  if v1 == 0 then goto L27edf0;
  #L27ede6.  v1:= "public, " @kind object;
  #L27edea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27edf0.  v1:= v3.`c.d.j` @type ^`boolean` @kind boolean;
  #L27edf4.  if v1 == 0 then goto L27ee02;
  #L27edf8.  v1:= "must-revalidate, " @kind object;
  #L27edfc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee02.  v1:= v3.`c.d.k` @type ^`int`;
  #L27ee06.  if v1 == v2 then goto L27ee28;
  #L27ee0a.  v1:= "max-stale=" @kind object;
  #L27ee0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee14.  v1:= v3.`c.d.k` @type ^`int`;
  #L27ee18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee1e.  v1:= ", " @kind object;
  #L27ee22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee28.  v1:= v3.`c.d.l` @type ^`int`;
  #L27ee2c.  if v1 == v2 then goto L27ee4e;
  #L27ee30.  v1:= "min-fresh=" @kind object;
  #L27ee34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee3a.  v1:= v3.`c.d.l` @type ^`int`;
  #L27ee3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee44.  v1:= ", " @kind object;
  #L27ee48.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee4e.  v1:= v3.`c.d.m` @type ^`boolean` @kind boolean;
  #L27ee52.  if v1 == 0 then goto L27ee60;
  #L27ee56.  v1:= "only-if-cached, " @kind object;
  #L27ee5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee60.  v1:= v3.`c.d.n` @type ^`boolean` @kind boolean;
  #L27ee64.  if v1 == 0 then goto L27ee72;
  #L27ee68.  v1:= "no-transform, " @kind object;
  #L27ee6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee72.  v1:= v3.`c.d.o` @type ^`boolean` @kind boolean;
  #L27ee76.  if v1 == 0 then goto L27ee84;
  #L27ee7a.  v1:= "immutable, " @kind object;
  #L27ee7e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27ee84.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L27ee8a.  v1:= temp;
  #L27ee8c.  if v1 != 0 then goto L27ee96;
  #L27ee90.  v0:= "" @kind object;
  #L27ee94.  return v0 @kind object;
  #L27ee96.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L27ee9c.  v1:= temp;
  #L27ee9e.  v1:= v1 + -2;
  #L27eea2.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L27eea8.  v2:= temp;
  #L27eeaa.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L27eeb0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27eeb6.  v0:= temp @kind object;
  #L27eeb8.  return v0 @kind object;
}
procedure `boolean` `a`(`c.d` v1 @kind this) @signature `Lc/d;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e99c.  v0:= v1.`c.d.d` @type ^`boolean` @kind boolean;
  #L27e9a0.  return v0;
}
procedure `boolean` `b`(`c.d` v1 @kind this) @signature `Lc/d;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e9b4.  v0:= v1.`c.d.e` @type ^`boolean` @kind boolean;
  #L27e9b8.  return v0;
}
procedure `int` `c`(`c.d` v1 @kind this) @signature `Lc/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ed08.  v0:= v1.`c.d.f` @type ^`int`;
  #L27ed0c.  return v0;
}
procedure `boolean` `d`(`c.d` v1 @kind this) @signature `Lc/d;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e9cc.  v0:= v1.`c.d.h` @type ^`boolean` @kind boolean;
  #L27e9d0.  return v0;
}
procedure `boolean` `e`(`c.d` v1 @kind this) @signature `Lc/d;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e9e4.  v0:= v1.`c.d.i` @type ^`boolean` @kind boolean;
  #L27e9e8.  return v0;
}
procedure `boolean` `f`(`c.d` v1 @kind this) @signature `Lc/d;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e9fc.  v0:= v1.`c.d.j` @type ^`boolean` @kind boolean;
  #L27ea00.  return v0;
}
procedure `int` `g`(`c.d` v1 @kind this) @signature `Lc/d;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ed20.  v0:= v1.`c.d.k` @type ^`int`;
  #L27ed24.  return v0;
}
procedure `int` `h`(`c.d` v1 @kind this) @signature `Lc/d;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ed38.  v0:= v1.`c.d.l` @type ^`int`;
  #L27ed3c.  return v0;
}
procedure `boolean` `i`(`c.d` v1 @kind this) @signature `Lc/d;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ea14.  v0:= v1.`c.d.m` @type ^`boolean` @kind boolean;
  #L27ea18.  return v0;
}
procedure `boolean` `j`(`c.d` v1 @kind this) @signature `Lc/d;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ea2c.  v0:= v1.`c.d.o` @type ^`boolean` @kind boolean;
  #L27ea30.  return v0;
}
procedure `java.lang.String` `toString`(`c.d` v1 @kind this) @signature `Lc/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27eecc.  v0:= v1.`c.d.c` @type ^`java.lang.String` @kind object;
  #L27eed0.  if v0 == 0 then goto L27eed6;
  #L27eed4.  goto L27eee2;
  #L27eed6.  call temp:= `k`(v1) @signature `Lc/d;.k:()Ljava/lang/String;` @kind direct;
  #L27eedc.  v0:= temp @kind object;
  #L27eede.  v1.`c.d.c` @type ^`java.lang.String` := v0 @kind object;
  #L27eee2.  return v0 @kind object;
}
