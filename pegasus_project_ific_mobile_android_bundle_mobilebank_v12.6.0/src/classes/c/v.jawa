record `c.v` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `c.v.f` @AccessFlag PRIVATE_FINAL;
}
global `c.v` `@@c.v.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.v` `@@c.v.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.v` `@@c.v.c` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.v` `@@c.v.d` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.v` `@@c.v.e` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `c.v`[] `@@c.v.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lc/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L284cf8.  v0:= new `c.v`;
  #L284cfc.  v1:= "HTTP_1_0" @kind object;
  #L284d00.  v2:= "http/1.0" @kind object;
  #L284d04.  v3:= 0I;
  #L284d06.  call `<init>`(v0, v1, v3, v2) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L284d0c.  `@@c.v.a` @type ^`c.v` := v0 @kind object;
  #L284d10.  v0:= new `c.v`;
  #L284d14.  v1:= "HTTP_1_1" @kind object;
  #L284d18.  v2:= "http/1.1" @kind object;
  #L284d1c.  v4:= 1I;
  #L284d1e.  call `<init>`(v0, v1, v4, v2) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L284d24.  `@@c.v.b` @type ^`c.v` := v0 @kind object;
  #L284d28.  v0:= new `c.v`;
  #L284d2c.  v1:= "SPDY_3" @kind object;
  #L284d30.  v2:= "spdy/3.1" @kind object;
  #L284d34.  v5:= 2I;
  #L284d36.  call `<init>`(v0, v1, v5, v2) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L284d3c.  `@@c.v.c` @type ^`c.v` := v0 @kind object;
  #L284d40.  v0:= new `c.v`;
  #L284d44.  v1:= "HTTP_2" @kind object;
  #L284d48.  v2:= "h2" @kind object;
  #L284d4c.  v6:= 3I;
  #L284d4e.  call `<init>`(v0, v1, v6, v2) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L284d54.  `@@c.v.d` @type ^`c.v` := v0 @kind object;
  #L284d58.  v0:= new `c.v`;
  #L284d5c.  v1:= "QUIC" @kind object;
  #L284d60.  v2:= "quic" @kind object;
  #L284d64.  v7:= 4I;
  #L284d66.  call `<init>`(v0, v1, v7, v2) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L284d6c.  `@@c.v.e` @type ^`c.v` := v0 @kind object;
  #L284d70.  v0:= 5I;
  #L284d72.  v0:= new `c.v`[v0];
  #L284d76.  v1:= `@@c.v.a` @type ^`c.v` @kind object;
  #L284d7a.  v0[v3]:= v1 @kind object;
  #L284d7e.  v1:= `@@c.v.b` @type ^`c.v` @kind object;
  #L284d82.  v0[v4]:= v1 @kind object;
  #L284d86.  v1:= `@@c.v.c` @type ^`c.v` @kind object;
  #L284d8a.  v0[v5]:= v1 @kind object;
  #L284d8e.  v1:= `@@c.v.d` @type ^`c.v` @kind object;
  #L284d92.  v0[v6]:= v1 @kind object;
  #L284d96.  v1:= `@@c.v.e` @type ^`c.v` @kind object;
  #L284d9a.  v0[v7]:= v1 @kind object;
  #L284d9e.  `@@c.v.g` @type ^`c.v`[] := v0 @kind object;
  #L284da2.  return @kind void;
}
procedure `void` `<init>`(`c.v` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lc/v;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L284db4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L284dba.  v0.`c.v.f` @type ^`java.lang.String` := v3 @kind object;
  #L284dbe.  return @kind void;
}
procedure `c.v` `a`(`java.lang.String` v3 @kind object) @signature `Lc/v;.a:(Ljava/lang/String;)Lc/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L284bd8.  v0:= `@@c.v.a` @type ^`c.v` @kind object;
  #L284bdc.  v0:= v0.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284be0.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L284be6.  v0:= temp;
  #L284be8.  if v0 == 0 then goto L284bf2;
  #L284bec.  v3:= `@@c.v.a` @type ^`c.v` @kind object;
  #L284bf0.  return v3 @kind object;
  #L284bf2.  v0:= `@@c.v.b` @type ^`c.v` @kind object;
  #L284bf6.  v0:= v0.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284bfa.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L284c00.  v0:= temp;
  #L284c02.  if v0 == 0 then goto L284c0c;
  #L284c06.  v3:= `@@c.v.b` @type ^`c.v` @kind object;
  #L284c0a.  return v3 @kind object;
  #L284c0c.  v0:= `@@c.v.d` @type ^`c.v` @kind object;
  #L284c10.  v0:= v0.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284c14.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L284c1a.  v0:= temp;
  #L284c1c.  if v0 == 0 then goto L284c26;
  #L284c20.  v3:= `@@c.v.d` @type ^`c.v` @kind object;
  #L284c24.  return v3 @kind object;
  #L284c26.  v0:= `@@c.v.c` @type ^`c.v` @kind object;
  #L284c2a.  v0:= v0.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284c2e.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L284c34.  v0:= temp;
  #L284c36.  if v0 == 0 then goto L284c40;
  #L284c3a.  v3:= `@@c.v.c` @type ^`c.v` @kind object;
  #L284c3e.  return v3 @kind object;
  #L284c40.  v0:= `@@c.v.e` @type ^`c.v` @kind object;
  #L284c44.  v0:= v0.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284c48.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L284c4e.  v0:= temp;
  #L284c50.  if v0 == 0 then goto L284c5a;
  #L284c54.  v3:= `@@c.v.e` @type ^`c.v` @kind object;
  #L284c58.  return v3 @kind object;
  #L284c5a.  v0:= new `java.io.IOException`;
  #L284c5e.  v1:= new `java.lang.StringBuilder`;
  #L284c62.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L284c68.  v2:= "Unexpected protocol: " @kind object;
  #L284c6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284c72.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284c78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L284c7e.  v3:= temp @kind object;
  #L284c80.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L284c86.  throw v0;
}
procedure `c.v` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lc/v;.valueOf:(Ljava/lang/String;)Lc/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L284c98.  v0:= constclass @type ^`c.v` @kind object;
  #L284c9c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L284ca2.  v1:= temp @kind object;
  #L284ca4.  v1:= (`c.v`) v1 @kind object;
  #L284ca8.  return v1 @kind object;
}
procedure `c.v`[] `values`() @signature `Lc/v;.values:()[Lc/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L284cbc.  v0:= `@@c.v.g` @type ^`c.v`[] @kind object;
  #L284cc0.  call temp:= `clone`(v0) @signature `[Lc/v;.clone:()Ljava/lang/Object;` @kind virtual;
  #L284cc6.  v0:= temp @kind object;
  #L284cc8.  v0:= (`c.v`[]) v0 @kind object;
  #L284ccc.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`c.v` v1 @kind this) @signature `Lc/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284ce0.  v0:= v1.`c.v.f` @type ^`java.lang.String` @kind object;
  #L284ce4.  return v0 @kind object;
}
