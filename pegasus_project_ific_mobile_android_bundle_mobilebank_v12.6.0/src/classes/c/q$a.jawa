record `c.q$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `c.q$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.q$a` v2 @kind this) @signature `Lc/q$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L282334.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28233a.  v0:= new `java.util.ArrayList`;
  #L28233e.  v1:= 20I;
  #L282342.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L282348.  v2.`c.q$a.a` @type ^`java.util.List` := v0 @kind object;
  #L28234c.  return @kind void;
}
procedure `void` `d`(`c.q$a` v9 @kind this, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object) @signature `Lc/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L282360.  if v10 != 0 then goto L282374;
  #L282364.  v10:= new `java.lang.NullPointerException`;
  #L282368.  v11:= "name == null" @kind object;
  #L28236c.  call `<init>`(v10, v11) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282372.  throw v10;
  #L282374.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L28237a.  v0:= temp;
  #L28237c.  if v0 == 0 then goto L282390;
  #L282380.  v10:= new `java.lang.IllegalArgumentException`;
  #L282384.  v11:= "name is empty" @kind object;
  #L282388.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28238e.  throw v10;
  #L282390.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282396.  v0:= temp;
  #L282398.  v1:= 0I;
  #L28239a.  v2:= 0I;
  #L28239c.  v3:= 2I;
  #L28239e.  v4:= 3I;
  #L2823a0.  v5:= 127I;
  #L2823a4.  v6:= 1I;
  #L2823a6.  if v2 >= v0 then goto L2823fe;
  #L2823aa.  call temp:= `charAt`(v10, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2823b0.  v7:= temp;
  #L2823b2.  v8:= 32I;
  #L2823b6.  if v7 <= v8 then goto L2823c6;
  #L2823ba.  if v7 < v5 then goto L2823c0;
  #L2823be.  goto L2823c6;
  #L2823c0.  v2:= v2 + 1;
  #L2823c4.  goto L28239c;
  #L2823c6.  v11:= new `java.lang.IllegalArgumentException`;
  #L2823ca.  v0:= "Unexpected char %#04x at %d in header name: %s" @kind object;
  #L2823ce.  v4:= new `java.lang.Object`[v4];
  #L2823d2.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2823d8.  v5:= temp @kind object;
  #L2823da.  v4[v1]:= v5 @kind object;
  #L2823de.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2823e4.  v1:= temp @kind object;
  #L2823e6.  v4[v6]:= v1 @kind object;
  #L2823ea.  v4[v3]:= v10 @kind object;
  #L2823ee.  call temp:= `a`(v0, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2823f4.  v10:= temp @kind object;
  #L2823f6.  call `<init>`(v11, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2823fc.  throw v11;
  #L2823fe.  if v11 != 0 then goto L28243a;
  #L282402.  v11:= new `java.lang.NullPointerException`;
  #L282406.  v0:= new `java.lang.StringBuilder`;
  #L28240a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L282410.  v1:= "value for name " @kind object;
  #L282414.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28241a.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282420.  v10:= " == null" @kind object;
  #L282424.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28242a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L282430.  v10:= temp @kind object;
  #L282432.  call `<init>`(v11, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282438.  throw v11;
  #L28243a.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282440.  v0:= temp;
  #L282442.  v2:= 0I;
  #L282444.  if v2 >= v0 then goto L2824a8;
  #L282448.  call temp:= `charAt`(v11, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L28244e.  v7:= temp;
  #L282450.  v8:= 31I;
  #L282454.  if v7 > v8 then goto L282460;
  #L282458.  v8:= 9I;
  #L28245c.  if v7 != v8 then goto L282464;
  #L282460.  if v7 < v5 then goto L2824a2;
  #L282464.  v0:= new `java.lang.IllegalArgumentException`;
  #L282468.  v5:= "Unexpected char %#04x at %d in %s value: %s" @kind object;
  #L28246c.  v8:= 4I;
  #L28246e.  v8:= new `java.lang.Object`[v8];
  #L282472.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L282478.  v7:= temp @kind object;
  #L28247a.  v8[v1]:= v7 @kind object;
  #L28247e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L282484.  v1:= temp @kind object;
  #L282486.  v8[v6]:= v1 @kind object;
  #L28248a.  v8[v3]:= v10 @kind object;
  #L28248e.  v8[v4]:= v11 @kind object;
  #L282492.  call temp:= `a`(v5, v8) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L282498.  v10:= temp @kind object;
  #L28249a.  call `<init>`(v0, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2824a0.  throw v0;
  #L2824a2.  v2:= v2 + 1;
  #L2824a6.  goto L282444;
  #L2824a8.  return @kind void;
}
procedure `c.q$a` `a`(`c.q$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lc/q$a;.a:(Ljava/lang/String;)Lc/q$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2821e8.  v0:= ":" @kind object;
  #L2821ec.  v1:= 1I;
  #L2821ee.  call temp:= `indexOf`(v4, v0, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L2821f4.  v0:= temp;
  #L2821f6.  v2:= -1I;
  #L2821f8.  if v0 == v2 then goto L28221a;
  #L2821fc.  v2:= 0I;
  #L2821fe.  call temp:= `substring`(v4, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L282204.  v2:= temp @kind object;
  #L282206.  v0:= v0 + v1 @kind int;
  #L282208.  call temp:= `substring`(v4, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L28220e.  v4:= temp @kind object;
  #L282210.  call temp:= `b`(v3, v2, v4) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L282216.  v4:= temp @kind object;
  #L282218.  return v4 @kind object;
  #L28221a.  v0:= ":" @kind object;
  #L28221e.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L282224.  v0:= temp;
  #L282226.  if v0 == 0 then goto L282240;
  #L28222a.  v0:= "" @kind object;
  #L28222e.  call temp:= `substring`(v4, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L282234.  v4:= temp @kind object;
  #L282236.  call temp:= `b`(v3, v0, v4) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L28223c.  v4:= temp @kind object;
  #L28223e.  return v4 @kind object;
  #L282240.  v0:= "" @kind object;
  #L282244.  call temp:= `b`(v3, v0, v4) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L28224a.  v4:= temp @kind object;
  #L28224c.  return v4 @kind object;
}
procedure `c.q$a` `a`(`c.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lc/q$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @AccessFlag PUBLIC {
    temp;

  #L282260.  call `d`(v0, v1, v2) @signature `Lc/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L282266.  call temp:= `b`(v0, v1, v2) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L28226c.  v1:= temp @kind object;
  #L28226e.  return v1 @kind object;
}
procedure `c.q` `a`(`c.q$a` v1 @kind this) @signature `Lc/q$a;.a:()Lc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2821cc.  v0:= new `c.q`;
  #L2821d0.  call `<init>`(v0, v1) @signature `Lc/q;.<init>:(Lc/q$a;)V` @kind direct;
  #L2821d6.  return v0 @kind object;
}
procedure `c.q$a` `b`(`c.q$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lc/q$a;.b:(Ljava/lang/String;)Lc/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L282280.  v0:= 0I;
  #L282282.  v1:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L282286.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28228c.  v1:= temp;
  #L28228e.  if v0 >= v1 then goto L2822cc;
  #L282292.  v1:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L282296.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L28229c.  v1:= temp @kind object;
  #L28229e.  v1:= (`java.lang.String`) v1 @kind object;
  #L2822a2.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2822a8.  v1:= temp;
  #L2822aa.  if v1 == 0 then goto L2822c6;
  #L2822ae.  v1:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2822b2.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2822b8.  v1:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2822bc.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2822c2.  v0:= v0 + -2;
  #L2822c6.  v0:= v0 + 2;
  #L2822ca.  goto L282282;
  #L2822cc.  return v2 @kind object;
}
procedure `c.q$a` `b`(`c.q$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @AccessFlag  {
    temp;
    v0;

  #L2822e0.  v0:= v1.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2822e4.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2822ea.  v2:= v1.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2822ee.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2822f4.  v3:= temp @kind object;
  #L2822f6.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2822fc.  return v1 @kind object;
}
procedure `c.q$a` `c`(`c.q$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lc/q$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @AccessFlag PUBLIC {
    temp;

  #L282310.  call `d`(v0, v1, v2) @signature `Lc/q$a;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L282316.  call temp:= `b`(v0, v1) @signature `Lc/q$a;.b:(Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L28231c.  call temp:= `b`(v0, v1, v2) @signature `Lc/q$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lc/q$a;` @kind virtual;
  #L282322.  return v0 @kind object;
}
