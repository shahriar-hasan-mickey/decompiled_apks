record `c.j` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `c.j.d` @AccessFlag FINAL;
  `boolean` `c.j.e` @AccessFlag FINAL;
  `java.lang.String`[] `c.j.f` @AccessFlag FINAL;
  `java.lang.String`[] `c.j.g` @AccessFlag FINAL;
}
global `c.j` `@@c.j.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.j` `@@c.j.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.j` `@@c.j.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.g`[] `@@c.j.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L280b00.  v0:= 13I;
  #L280b04.  v0:= new `c.g`[v0];
  #L280b08.  v1:= `@@c.g.aX` @type ^`c.g` @kind object;
  #L280b0c.  v2:= 0I;
  #L280b0e.  v0[v2]:= v1 @kind object;
  #L280b12.  v1:= `@@c.g.bb` @type ^`c.g` @kind object;
  #L280b16.  v3:= 1I;
  #L280b18.  v0[v3]:= v1 @kind object;
  #L280b1c.  v1:= `@@c.g.aY` @type ^`c.g` @kind object;
  #L280b20.  v4:= 2I;
  #L280b22.  v0[v4]:= v1 @kind object;
  #L280b26.  v1:= `@@c.g.bc` @type ^`c.g` @kind object;
  #L280b2a.  v5:= 3I;
  #L280b2c.  v0[v5]:= v1 @kind object;
  #L280b30.  v1:= `@@c.g.bi` @type ^`c.g` @kind object;
  #L280b34.  v6:= 4I;
  #L280b36.  v0[v6]:= v1 @kind object;
  #L280b3a.  v1:= `@@c.g.bh` @type ^`c.g` @kind object;
  #L280b3e.  v7:= 5I;
  #L280b40.  v0[v7]:= v1 @kind object;
  #L280b44.  v1:= `@@c.g.aI` @type ^`c.g` @kind object;
  #L280b48.  v7:= 6I;
  #L280b4a.  v0[v7]:= v1 @kind object;
  #L280b4e.  v1:= `@@c.g.aJ` @type ^`c.g` @kind object;
  #L280b52.  v7:= 7I;
  #L280b54.  v0[v7]:= v1 @kind object;
  #L280b58.  v1:= `@@c.g.ag` @type ^`c.g` @kind object;
  #L280b5c.  v7:= 8I;
  #L280b60.  v0[v7]:= v1 @kind object;
  #L280b64.  v1:= `@@c.g.ah` @type ^`c.g` @kind object;
  #L280b68.  v7:= 9I;
  #L280b6c.  v0[v7]:= v1 @kind object;
  #L280b70.  v1:= `@@c.g.E` @type ^`c.g` @kind object;
  #L280b74.  v7:= 10I;
  #L280b78.  v0[v7]:= v1 @kind object;
  #L280b7c.  v1:= `@@c.g.I` @type ^`c.g` @kind object;
  #L280b80.  v7:= 11I;
  #L280b84.  v0[v7]:= v1 @kind object;
  #L280b88.  v1:= `@@c.g.i` @type ^`c.g` @kind object;
  #L280b8c.  v7:= 12I;
  #L280b90.  v0[v7]:= v1 @kind object;
  #L280b94.  `@@c.j.h` @type ^`c.g`[] := v0 @kind object;
  #L280b98.  v0:= new `c.j$a`;
  #L280b9c.  call `<init>`(v0, v3) @signature `Lc/j$a;.<init>:(Z)V` @kind direct;
  #L280ba2.  v1:= `@@c.j.h` @type ^`c.g`[] @kind object;
  #L280ba6.  call temp:= `a`(v0, v1) @signature `Lc/j$a;.a:([Lc/g;)Lc/j$a;` @kind virtual;
  #L280bac.  v0:= temp @kind object;
  #L280bae.  v1:= new `c.ac`[v6];
  #L280bb2.  v6:= `@@c.ac.a` @type ^`c.ac` @kind object;
  #L280bb6.  v1[v2]:= v6 @kind object;
  #L280bba.  v6:= `@@c.ac.b` @type ^`c.ac` @kind object;
  #L280bbe.  v1[v3]:= v6 @kind object;
  #L280bc2.  v6:= `@@c.ac.c` @type ^`c.ac` @kind object;
  #L280bc6.  v1[v4]:= v6 @kind object;
  #L280bca.  v4:= `@@c.ac.d` @type ^`c.ac` @kind object;
  #L280bce.  v1[v5]:= v4 @kind object;
  #L280bd2.  call temp:= `a`(v0, v1) @signature `Lc/j$a;.a:([Lc/ac;)Lc/j$a;` @kind virtual;
  #L280bd8.  v0:= temp @kind object;
  #L280bda.  call temp:= `a`(v0, v3) @signature `Lc/j$a;.a:(Z)Lc/j$a;` @kind virtual;
  #L280be0.  v0:= temp @kind object;
  #L280be2.  call temp:= `a`(v0) @signature `Lc/j$a;.a:()Lc/j;` @kind virtual;
  #L280be8.  v0:= temp @kind object;
  #L280bea.  `@@c.j.a` @type ^`c.j` := v0 @kind object;
  #L280bee.  v0:= new `c.j$a`;
  #L280bf2.  v1:= `@@c.j.a` @type ^`c.j` @kind object;
  #L280bf6.  call `<init>`(v0, v1) @signature `Lc/j$a;.<init>:(Lc/j;)V` @kind direct;
  #L280bfc.  v1:= new `c.ac`[v3];
  #L280c00.  v4:= `@@c.ac.d` @type ^`c.ac` @kind object;
  #L280c04.  v1[v2]:= v4 @kind object;
  #L280c08.  call temp:= `a`(v0, v1) @signature `Lc/j$a;.a:([Lc/ac;)Lc/j$a;` @kind virtual;
  #L280c0e.  v0:= temp @kind object;
  #L280c10.  call temp:= `a`(v0, v3) @signature `Lc/j$a;.a:(Z)Lc/j$a;` @kind virtual;
  #L280c16.  v0:= temp @kind object;
  #L280c18.  call temp:= `a`(v0) @signature `Lc/j$a;.a:()Lc/j;` @kind virtual;
  #L280c1e.  v0:= temp @kind object;
  #L280c20.  `@@c.j.b` @type ^`c.j` := v0 @kind object;
  #L280c24.  v0:= new `c.j$a`;
  #L280c28.  call `<init>`(v0, v2) @signature `Lc/j$a;.<init>:(Z)V` @kind direct;
  #L280c2e.  call temp:= `a`(v0) @signature `Lc/j$a;.a:()Lc/j;` @kind virtual;
  #L280c34.  v0:= temp @kind object;
  #L280c36.  `@@c.j.c` @type ^`c.j` := v0 @kind object;
  #L280c3a.  return @kind void;
}
procedure `void` `<init>`(`c.j` v1 @kind this, `c.j$a` v2 @kind object) @signature `Lc/j;.<init>:(Lc/j$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L280c4c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L280c52.  v0:= v2.`c.j$a.a` @type ^`boolean` @kind boolean;
  #L280c56.  v1.`c.j.d` @type ^`boolean` := v0 @kind boolean;
  #L280c5a.  v0:= v2.`c.j$a.b` @type ^`java.lang.String`[] @kind object;
  #L280c5e.  v1.`c.j.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L280c62.  v0:= v2.`c.j$a.c` @type ^`java.lang.String`[] @kind object;
  #L280c66.  v1.`c.j.g` @type ^`java.lang.String`[] := v0 @kind object;
  #L280c6a.  v2:= v2.`c.j$a.d` @type ^`boolean` @kind boolean;
  #L280c6e.  v1.`c.j.e` @type ^`boolean` := v2 @kind boolean;
  #L280c72.  return @kind void;
}
procedure `c.j` `b`(`c.j` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lc/j;.b:(Ljavax/net/ssl/SSLSocket;Z)Lc/j;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2808f0.  v0:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L2808f4.  if v0 == 0 then goto L280912;
  #L2808f8.  v0:= `@@c.g.a` @type ^`java.util.Comparator` @kind object;
  #L2808fc.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L280902.  v1:= temp @kind object;
  #L280904.  v2:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280908.  call temp:= `a`(v0, v1, v2) @signature `Lc/a/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L28090e.  v0:= temp @kind object;
  #L280910.  goto L28091a;
  #L280912.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L280918.  v0:= temp @kind object;
  #L28091a.  v1:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L28091e.  if v1 == 0 then goto L28093c;
  #L280922.  v1:= `@@c.a.c.h` @type ^`java.util.Comparator` @kind object;
  #L280926.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L28092c.  v2:= temp @kind object;
  #L28092e.  v3:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280932.  call temp:= `a`(v1, v2, v3) @signature `Lc/a/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L280938.  v1:= temp @kind object;
  #L28093a.  goto L280944;
  #L28093c.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L280942.  v1:= temp @kind object;
  #L280944.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L28094a.  v5:= temp @kind object;
  #L28094c.  v2:= `@@c.g.a` @type ^`java.util.Comparator` @kind object;
  #L280950.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L280954.  call temp:= `a`(v2, v5, v3) @signature `Lc/a/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L28095a.  v2:= temp;
  #L28095c.  if v6 == 0 then goto L280972;
  #L280960.  v6:= -1I;
  #L280962.  if v2 == v6 then goto L280972;
  #L280966.  v5:= v5[v2] @kind object;
  #L28096a.  call temp:= `a`(v0, v5) @signature `Lc/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L280970.  v0:= temp @kind object;
  #L280972.  v5:= new `c.j$a`;
  #L280976.  call `<init>`(v5, v4) @signature `Lc/j$a;.<init>:(Lc/j;)V` @kind direct;
  #L28097c.  call temp:= `a`(v5, v0) @signature `Lc/j$a;.a:([Ljava/lang/String;)Lc/j$a;` @kind virtual;
  #L280982.  v5:= temp @kind object;
  #L280984.  call temp:= `b`(v5, v1) @signature `Lc/j$a;.b:([Ljava/lang/String;)Lc/j$a;` @kind virtual;
  #L28098a.  v5:= temp @kind object;
  #L28098c.  call temp:= `a`(v5) @signature `Lc/j$a;.a:()Lc/j;` @kind virtual;
  #L280992.  v5:= temp @kind object;
  #L280994.  return v5 @kind object;
}
procedure `void` `a`(`c.j` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lc/j;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L280c84.  call temp:= `b`(v1, v2, v3) @signature `Lc/j;.b:(Ljavax/net/ssl/SSLSocket;Z)Lc/j;` @kind direct;
  #L280c8a.  v3:= temp @kind object;
  #L280c8c.  v0:= v3.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280c90.  if v0 == 0 then goto L280c9e;
  #L280c94.  v0:= v3.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280c98.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L280c9e.  v0:= v3.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280ca2.  if v0 == 0 then goto L280cb0;
  #L280ca6.  v3:= v3.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280caa.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L280cb0.  return @kind void;
}
procedure `boolean` `a`(`c.j` v1 @kind this) @signature `Lc/j;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2807d8.  v0:= v1.`c.j.d` @type ^`boolean` @kind boolean;
  #L2807dc.  return v0;
}
procedure `boolean` `a`(`c.j` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lc/j;.a:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2807f0.  v0:= v4.`c.j.d` @type ^`boolean` @kind boolean;
  #L2807f4.  v1:= 0I;
  #L2807f6.  if v0 != 0 then goto L2807fc;
  #L2807fa.  return v1;
  #L2807fc.  v0:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280800.  if v0 == 0 then goto L280822;
  #L280804.  v0:= `@@c.a.c.h` @type ^`java.util.Comparator` @kind object;
  #L280808.  v2:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L28080c.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L280812.  v3:= temp @kind object;
  #L280814.  call temp:= `b`(v0, v2, v3) @signature `Lc/a/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L28081a.  v0:= temp;
  #L28081c.  if v0 != 0 then goto L280822;
  #L280820.  return v1;
  #L280822.  v0:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280826.  if v0 == 0 then goto L280848;
  #L28082a.  v0:= `@@c.g.a` @type ^`java.util.Comparator` @kind object;
  #L28082e.  v2:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280832.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L280838.  v5:= temp @kind object;
  #L28083a.  call temp:= `b`(v0, v2, v5) @signature `Lc/a/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L280840.  v5:= temp;
  #L280842.  if v5 != 0 then goto L280848;
  #L280846.  return v1;
  #L280848.  v5:= 1I;
  #L28084a.  return v5;
}
procedure `java.util.List` `b`(`c.j` v1 @kind this) @signature `Lc/j;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280aa8.  v0:= v1.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280aac.  if v0 == 0 then goto L280abe;
  #L280ab0.  v0:= v1.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280ab4.  call temp:= `a`(v0) @signature `Lc/g;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L280aba.  v0:= temp @kind object;
  #L280abc.  goto L280ac0;
  #L280abe.  v0:= 0I;
  #L280ac0.  return v0 @kind object;
}
procedure `java.util.List` `c`(`c.j` v1 @kind this) @signature `Lc/j;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280ad4.  v0:= v1.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280ad8.  if v0 == 0 then goto L280aea;
  #L280adc.  v0:= v1.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280ae0.  call temp:= `a`(v0) @signature `Lc/ac;.a:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L280ae6.  v0:= temp @kind object;
  #L280ae8.  goto L280aec;
  #L280aea.  v0:= 0I;
  #L280aec.  return v0 @kind object;
}
procedure `boolean` `d`(`c.j` v1 @kind this) @signature `Lc/j;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28085c.  v0:= v1.`c.j.e` @type ^`boolean` @kind boolean;
  #L280860.  return v0;
}
procedure `boolean` `equals`(`c.j` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L280874.  v0:= instanceof @variable v5 @type ^`c.j` @kind boolean;
  #L280878.  v1:= 0I;
  #L28087a.  if v0 != 0 then goto L280880;
  #L28087e.  return v1;
  #L280880.  v0:= 1I;
  #L280882.  if v5 != v4 then goto L280888;
  #L280886.  return v0;
  #L280888.  v5:= (`c.j`) v5 @kind object;
  #L28088c.  v2:= v4.`c.j.d` @type ^`boolean` @kind boolean;
  #L280890.  v3:= v5.`c.j.d` @type ^`boolean` @kind boolean;
  #L280894.  if v2 == v3 then goto L28089a;
  #L280898.  return v1;
  #L28089a.  v2:= v4.`c.j.d` @type ^`boolean` @kind boolean;
  #L28089e.  if v2 == 0 then goto L2808dc;
  #L2808a2.  v2:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L2808a6.  v3:= v5.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L2808aa.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L2808b0.  v2:= temp;
  #L2808b2.  if v2 != 0 then goto L2808b8;
  #L2808b6.  return v1;
  #L2808b8.  v2:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L2808bc.  v3:= v5.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L2808c0.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L2808c6.  v2:= temp;
  #L2808c8.  if v2 != 0 then goto L2808ce;
  #L2808cc.  return v1;
  #L2808ce.  v2:= v4.`c.j.e` @type ^`boolean` @kind boolean;
  #L2808d2.  v5:= v5.`c.j.e` @type ^`boolean` @kind boolean;
  #L2808d6.  if v2 == v5 then goto L2808dc;
  #L2808da.  return v1;
  #L2808dc.  return v0;
}
procedure `int` `hashCode`(`c.j` v2 @kind this) @signature `Lc/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2809a8.  v0:= v2.`c.j.d` @type ^`boolean` @kind boolean;
  #L2809ac.  if v0 == 0 then goto L2809e4;
  #L2809b0.  v0:= 527I;
  #L2809b4.  v1:= v2.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L2809b8.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L2809be.  v1:= temp;
  #L2809c0.  v0:= v0 + v1 @kind int;
  #L2809c2.  v0:= v0 * 31;
  #L2809c6.  v1:= v2.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L2809ca.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L2809d0.  v1:= temp;
  #L2809d2.  v0:= v0 + v1 @kind int;
  #L2809d4.  v0:= v0 * 31;
  #L2809d8.  v1:= v2.`c.j.e` @type ^`boolean` @kind boolean;
  #L2809dc.  v1:= v1 ^~ 1;
  #L2809e0.  v0:= v0 + v1 @kind int;
  #L2809e2.  goto L2809e8;
  #L2809e4.  v0:= 17I;
  #L2809e8.  return v0;
}
procedure `java.lang.String` `toString`(`c.j` v4 @kind this) @signature `Lc/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2809fc.  v0:= v4.`c.j.d` @type ^`boolean` @kind boolean;
  #L280a00.  if v0 != 0 then goto L280a0a;
  #L280a04.  v0:= "ConnectionSpec()" @kind object;
  #L280a08.  return v0 @kind object;
  #L280a0a.  v0:= v4.`c.j.f` @type ^`java.lang.String`[] @kind object;
  #L280a0e.  if v0 == 0 then goto L280a24;
  #L280a12.  call temp:= `b`(v4) @signature `Lc/j;.b:()Ljava/util/List;` @kind virtual;
  #L280a18.  v0:= temp @kind object;
  #L280a1a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L280a20.  v0:= temp @kind object;
  #L280a22.  goto L280a28;
  #L280a24.  v0:= "[all enabled]" @kind object;
  #L280a28.  v1:= v4.`c.j.g` @type ^`java.lang.String`[] @kind object;
  #L280a2c.  if v1 == 0 then goto L280a42;
  #L280a30.  call temp:= `c`(v4) @signature `Lc/j;.c:()Ljava/util/List;` @kind virtual;
  #L280a36.  v1:= temp @kind object;
  #L280a38.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L280a3e.  v1:= temp @kind object;
  #L280a40.  goto L280a46;
  #L280a42.  v1:= "[all enabled]" @kind object;
  #L280a46.  v2:= new `java.lang.StringBuilder`;
  #L280a4a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L280a50.  v3:= "ConnectionSpec(cipherSuites=" @kind object;
  #L280a54.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a5a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a60.  v0:= ", tlsVersions=" @kind object;
  #L280a64.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a6a.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a70.  v0:= ", supportsTlsExtensions=" @kind object;
  #L280a74.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a7a.  v0:= v4.`c.j.e` @type ^`boolean` @kind boolean;
  #L280a7e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a84.  v0:= ")" @kind object;
  #L280a88.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L280a8e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L280a94.  v0:= temp @kind object;
  #L280a96.  return v0 @kind object;
}
