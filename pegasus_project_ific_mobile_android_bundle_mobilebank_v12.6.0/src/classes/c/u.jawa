record `c.u` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `int` `c.u.A` @AccessFlag FINAL;
  `int` `c.u.B` @AccessFlag FINAL;
  `int` `c.u.C` @AccessFlag FINAL;
  `c.m` `c.u.c` @AccessFlag FINAL;
  `java.net.Proxy` `c.u.d` @AccessFlag FINAL;
  `java.util.List` `c.u.e` @AccessFlag FINAL;
  `java.util.List` `c.u.f` @AccessFlag FINAL;
  `java.util.List` `c.u.g` @AccessFlag FINAL;
  `java.util.List` `c.u.h` @AccessFlag FINAL;
  `c.o$a` `c.u.i` @AccessFlag FINAL;
  `java.net.ProxySelector` `c.u.j` @AccessFlag FINAL;
  `c.l` `c.u.k` @AccessFlag FINAL;
  `c.c` `c.u.l` @AccessFlag FINAL;
  `c.a.a.e` `c.u.m` @AccessFlag FINAL;
  `javax.net.SocketFactory` `c.u.n` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `c.u.o` @AccessFlag FINAL;
  `c.a.i.c` `c.u.p` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `c.u.q` @AccessFlag FINAL;
  `c.f` `c.u.r` @AccessFlag FINAL;
  `c.b` `c.u.s` @AccessFlag FINAL;
  `c.b` `c.u.t` @AccessFlag FINAL;
  `c.i` `c.u.u` @AccessFlag FINAL;
  `c.n` `c.u.v` @AccessFlag FINAL;
  `boolean` `c.u.w` @AccessFlag FINAL;
  `boolean` `c.u.x` @AccessFlag FINAL;
  `boolean` `c.u.y` @AccessFlag FINAL;
  `int` `c.u.z` @AccessFlag FINAL;
}
global `java.util.List` `@@c.u.a` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@c.u.b` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/u;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28494c.  v0:= 2I;
  #L28494e.  v1:= new `c.v`[v0];
  #L284952.  v2:= `@@c.v.d` @type ^`c.v` @kind object;
  #L284956.  v3:= 0I;
  #L284958.  v1[v3]:= v2 @kind object;
  #L28495c.  v2:= `@@c.v.b` @type ^`c.v` @kind object;
  #L284960.  v4:= 1I;
  #L284962.  v1[v4]:= v2 @kind object;
  #L284966.  call temp:= `a`(v1) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L28496c.  v1:= temp @kind object;
  #L28496e.  `@@c.u.a` @type ^`java.util.List` := v1 @kind object;
  #L284972.  v0:= new `c.j`[v0];
  #L284976.  v1:= `@@c.j.a` @type ^`c.j` @kind object;
  #L28497a.  v0[v3]:= v1 @kind object;
  #L28497e.  v1:= `@@c.j.c` @type ^`c.j` @kind object;
  #L284982.  v0[v4]:= v1 @kind object;
  #L284986.  call temp:= `a`(v0) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L28498c.  v0:= temp @kind object;
  #L28498e.  `@@c.u.b` @type ^`java.util.List` := v0 @kind object;
  #L284992.  v0:= new `c.u$1`;
  #L284996.  call `<init>`(v0) @signature `Lc/u$1;.<init>:()V` @kind direct;
  #L28499c.  `@@c.a.a.a` @type ^`c.a.a` := v0 @kind object;
  #L2849a0.  return @kind void;
}
procedure `void` `<init>`(`c.u` v1 @kind this) @signature `Lc/u;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2849b4.  v0:= new `c.u$a`;
  #L2849b8.  call `<init>`(v0) @signature `Lc/u$a;.<init>:()V` @kind direct;
  #L2849be.  call `<init>`(v1, v0) @signature `Lc/u;.<init>:(Lc/u$a;)V` @kind direct;
  #L2849c4.  return @kind void;
}
procedure `void` `<init>`(`c.u` v4 @kind this, `c.u$a` v5 @kind object) @signature `Lc/u;.<init>:(Lc/u$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2849d8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2849de.  v0:= v5.`c.u$a.a` @type ^`c.m` @kind object;
  #L2849e2.  v4.`c.u.c` @type ^`c.m` := v0 @kind object;
  #L2849e6.  v0:= v5.`c.u$a.b` @type ^`java.net.Proxy` @kind object;
  #L2849ea.  v4.`c.u.d` @type ^`java.net.Proxy` := v0 @kind object;
  #L2849ee.  v0:= v5.`c.u$a.c` @type ^`java.util.List` @kind object;
  #L2849f2.  v4.`c.u.e` @type ^`java.util.List` := v0 @kind object;
  #L2849f6.  v0:= v5.`c.u$a.d` @type ^`java.util.List` @kind object;
  #L2849fa.  v4.`c.u.f` @type ^`java.util.List` := v0 @kind object;
  #L2849fe.  v0:= v5.`c.u$a.e` @type ^`java.util.List` @kind object;
  #L284a02.  call temp:= `a`(v0) @signature `Lc/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L284a08.  v0:= temp @kind object;
  #L284a0a.  v4.`c.u.g` @type ^`java.util.List` := v0 @kind object;
  #L284a0e.  v0:= v5.`c.u$a.f` @type ^`java.util.List` @kind object;
  #L284a12.  call temp:= `a`(v0) @signature `Lc/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L284a18.  v0:= temp @kind object;
  #L284a1a.  v4.`c.u.h` @type ^`java.util.List` := v0 @kind object;
  #L284a1e.  v0:= v5.`c.u$a.g` @type ^`c.o$a` @kind object;
  #L284a22.  v4.`c.u.i` @type ^`c.o$a` := v0 @kind object;
  #L284a26.  v0:= v5.`c.u$a.h` @type ^`java.net.ProxySelector` @kind object;
  #L284a2a.  v4.`c.u.j` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L284a2e.  v0:= v5.`c.u$a.i` @type ^`c.l` @kind object;
  #L284a32.  v4.`c.u.k` @type ^`c.l` := v0 @kind object;
  #L284a36.  v0:= v5.`c.u$a.j` @type ^`c.c` @kind object;
  #L284a3a.  v4.`c.u.l` @type ^`c.c` := v0 @kind object;
  #L284a3e.  v0:= v5.`c.u$a.k` @type ^`c.a.a.e` @kind object;
  #L284a42.  v4.`c.u.m` @type ^`c.a.a.e` := v0 @kind object;
  #L284a46.  v0:= v5.`c.u$a.l` @type ^`javax.net.SocketFactory` @kind object;
  #L284a4a.  v4.`c.u.n` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L284a4e.  v0:= v4.`c.u.f` @type ^`java.util.List` @kind object;
  #L284a52.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L284a58.  v0:= temp @kind object;
  #L284a5a.  v1:= 0I;
  #L284a5c.  v2:= 0I;
  #L284a5e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L284a64.  v3:= temp;
  #L284a66.  if v3 == 0 then goto L284a8a;
  #L284a6a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L284a70.  v3:= temp @kind object;
  #L284a72.  v3:= (`c.j`) v3 @kind object;
  #L284a76.  if v2 != 0 then goto L284a86;
  #L284a7a.  call temp:= `a`(v3) @signature `Lc/j;.a:()Z` @kind virtual;
  #L284a80.  v2:= temp;
  #L284a82.  if v2 == 0 then goto L284a5c;
  #L284a86.  v2:= 1I;
  #L284a88.  goto L284a5e;
  #L284a8a.  v0:= v5.`c.u$a.m` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L284a8e.  if v0 != 0 then goto L284aba;
  #L284a92.  if v2 != 0 then goto L284a98;
  #L284a96.  goto L284aba;
  #L284a98.  call temp:= `z`(v4) @signature `Lc/u;.z:()Ljavax/net/ssl/X509TrustManager;` @kind direct;
  #L284a9e.  v0:= temp @kind object;
  #L284aa0.  call temp:= `a`(v4, v0) @signature `Lc/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind direct;
  #L284aa6.  v1:= temp @kind object;
  #L284aa8.  v4.`c.u.o` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L284aac.  call temp:= `a`(v0) @signature `Lc/a/i/c;.a:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/c;` @kind static;
  #L284ab2.  v0:= temp @kind object;
  #L284ab4.  v4.`c.u.p` @type ^`c.a.i.c` := v0 @kind object;
  #L284ab8.  goto L284aca;
  #L284aba.  v0:= v5.`c.u$a.m` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L284abe.  v4.`c.u.o` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L284ac2.  v0:= v5.`c.u$a.n` @type ^`c.a.i.c` @kind object;
  #L284ac6.  v4.`c.u.p` @type ^`c.a.i.c` := v0 @kind object;
  #L284aca.  v0:= v5.`c.u$a.o` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L284ace.  v4.`c.u.q` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L284ad2.  v0:= v5.`c.u$a.p` @type ^`c.f` @kind object;
  #L284ad6.  v1:= v4.`c.u.p` @type ^`c.a.i.c` @kind object;
  #L284ada.  call temp:= `a`(v0, v1) @signature `Lc/f;.a:(Lc/a/i/c;)Lc/f;` @kind virtual;
  #L284ae0.  v0:= temp @kind object;
  #L284ae2.  v4.`c.u.r` @type ^`c.f` := v0 @kind object;
  #L284ae6.  v0:= v5.`c.u$a.q` @type ^`c.b` @kind object;
  #L284aea.  v4.`c.u.s` @type ^`c.b` := v0 @kind object;
  #L284aee.  v0:= v5.`c.u$a.r` @type ^`c.b` @kind object;
  #L284af2.  v4.`c.u.t` @type ^`c.b` := v0 @kind object;
  #L284af6.  v0:= v5.`c.u$a.s` @type ^`c.i` @kind object;
  #L284afa.  v4.`c.u.u` @type ^`c.i` := v0 @kind object;
  #L284afe.  v0:= v5.`c.u$a.t` @type ^`c.n` @kind object;
  #L284b02.  v4.`c.u.v` @type ^`c.n` := v0 @kind object;
  #L284b06.  v0:= v5.`c.u$a.u` @type ^`boolean` @kind boolean;
  #L284b0a.  v4.`c.u.w` @type ^`boolean` := v0 @kind boolean;
  #L284b0e.  v0:= v5.`c.u$a.v` @type ^`boolean` @kind boolean;
  #L284b12.  v4.`c.u.x` @type ^`boolean` := v0 @kind boolean;
  #L284b16.  v0:= v5.`c.u$a.w` @type ^`boolean` @kind boolean;
  #L284b1a.  v4.`c.u.y` @type ^`boolean` := v0 @kind boolean;
  #L284b1e.  v0:= v5.`c.u$a.x` @type ^`int`;
  #L284b22.  v4.`c.u.z` @type ^`int` := v0;
  #L284b26.  v0:= v5.`c.u$a.y` @type ^`int`;
  #L284b2a.  v4.`c.u.A` @type ^`int` := v0;
  #L284b2e.  v0:= v5.`c.u$a.z` @type ^`int`;
  #L284b32.  v4.`c.u.B` @type ^`int` := v0;
  #L284b36.  v5:= v5.`c.u$a.A` @type ^`int`;
  #L284b3a.  v4.`c.u.C` @type ^`int` := v5;
  #L284b3e.  v5:= v4.`c.u.g` @type ^`java.util.List` @kind object;
  #L284b42.  v0:= 0I;
  #L284b44.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L284b4a.  v5:= temp;
  #L284b4c.  if v5 == 0 then goto L284b82;
  #L284b50.  v5:= new `java.lang.IllegalStateException`;
  #L284b54.  v0:= new `java.lang.StringBuilder`;
  #L284b58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L284b5e.  v1:= "Null interceptor: " @kind object;
  #L284b62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284b68.  v1:= v4.`c.u.g` @type ^`java.util.List` @kind object;
  #L284b6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284b72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L284b78.  v0:= temp @kind object;
  #L284b7a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L284b80.  throw v5;
  #L284b82.  v5:= v4.`c.u.h` @type ^`java.util.List` @kind object;
  #L284b86.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L284b8c.  v5:= temp;
  #L284b8e.  if v5 == 0 then goto L284bc4;
  #L284b92.  v5:= new `java.lang.IllegalStateException`;
  #L284b96.  v0:= new `java.lang.StringBuilder`;
  #L284b9a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L284ba0.  v1:= "Null network interceptor: " @kind object;
  #L284ba4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284baa.  v1:= v4.`c.u.h` @type ^`java.util.List` @kind object;
  #L284bae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284bb4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L284bba.  v0:= temp @kind object;
  #L284bbc.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L284bc2.  throw v5;
  #L284bc4.  return @kind void;
}
procedure `javax.net.ssl.SSLSocketFactory` `a`(`c.u` v3 @kind this, `javax.net.ssl.X509TrustManager` v4 @kind object) @signature `Lc/u;.a:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L284828.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L28482e.  v0:= temp @kind object;
  #L284830.  call temp:= `n_`(v0) @signature `Lc/a/g/f;.n_:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L284836.  v0:= temp @kind object;
  #L284838.  v1:= 1I;
  #L28483a.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L28483e.  v2:= 0I;
  #L284840.  v1[v2]:= v4 @kind object;
  #L284844.  v4:= 0I;
  #L284846.  call `init`(v0, v4, v1, v4) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L28484c.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L284852.  v4:= temp @kind object;
  #L284854.  return v4 @kind object;
  #L284856.  v4:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L284858.  v0:= "No System TLS" @kind object;
  #L28485c.  call temp:= `a`(v0, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L284862.  v4:= temp @kind object;
  #L284864.  throw v4;
  catch `java.security.GeneralSecurityException` @[L284828..L284854] goto L284856;
}
procedure `javax.net.ssl.X509TrustManager` `z`(`c.u` v4 @kind this) @signature `Lc/u;.z:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2848a0.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L2848a6.  v0:= temp @kind object;
  #L2848a8.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L2848ae.  v0:= temp @kind object;
  #L2848b0.  v1:= 0I;
  #L2848b2.  v1:= (`java.security.KeyStore`) v1 @kind object;
  #L2848b6.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L2848bc.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L2848c2.  v0:= temp @kind object;
  #L2848c4.  v1:= length @variable v0;
  #L2848c6.  v2:= 1I;
  #L2848c8.  if v1 != v2 then goto L2848e6;
  #L2848cc.  v1:= 0I;
  #L2848ce.  v2:= v0[v1] @kind object;
  #L2848d2.  v2:= instanceof @variable v2 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L2848d6.  if v2 != 0 then goto L2848dc;
  #L2848da.  goto L2848e6;
  #L2848dc.  v0:= v0[v1] @kind object;
  #L2848e0.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L2848e4.  return v0 @kind object;
  #L2848e6.  v1:= new `java.lang.IllegalStateException`;
  #L2848ea.  v2:= new `java.lang.StringBuilder`;
  #L2848ee.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2848f4.  v3:= "Unexpected default trust managers:" @kind object;
  #L2848f8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2848fe.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L284904.  v0:= temp @kind object;
  #L284906.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28490c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L284912.  v0:= temp @kind object;
  #L284914.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28491a.  throw v1;
  #L28491c.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L28491e.  v1:= "No System TLS" @kind object;
  #L284922.  call temp:= `a`(v1, v0) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L284928.  v0:= temp @kind object;
  #L28492a.  throw v0;
  catch `java.security.GeneralSecurityException` @[L2848a0..L28491c] goto L28491c;
}
procedure `int` `a`(`c.u` v1 @kind this) @signature `Lc/u;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284708.  v0:= v1.`c.u.z` @type ^`int`;
  #L28470c.  return v0;
}
procedure `c.e` `a`(`c.u` v1 @kind this, `c.x` v2 @kind object) @signature `Lc/u;.a:(Lc/x;)Lc/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28465c.  v0:= 0I;
  #L28465e.  call temp:= `a`(v1, v2, v0) @signature `Lc/w;.a:(Lc/u;Lc/x;Z)Lc/w;` @kind static;
  #L284664.  v2:= temp @kind object;
  #L284666.  return v2 @kind object;
}
procedure `int` `b`(`c.u` v1 @kind this) @signature `Lc/u;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284720.  v0:= v1.`c.u.A` @type ^`int`;
  #L284724.  return v0;
}
procedure `int` `c`(`c.u` v1 @kind this) @signature `Lc/u;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284738.  v0:= v1.`c.u.B` @type ^`int`;
  #L28473c.  return v0;
}
procedure `int` `d`(`c.u` v1 @kind this) @signature `Lc/u;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284750.  v0:= v1.`c.u.C` @type ^`int`;
  #L284754.  return v0;
}
procedure `java.net.Proxy` `e`(`c.u` v1 @kind this) @signature `Lc/u;.e:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284768.  v0:= v1.`c.u.d` @type ^`java.net.Proxy` @kind object;
  #L28476c.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `f`(`c.u` v1 @kind this) @signature `Lc/u;.f:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284780.  v0:= v1.`c.u.j` @type ^`java.net.ProxySelector` @kind object;
  #L284784.  return v0 @kind object;
}
procedure `c.l` `g`(`c.u` v1 @kind this) @signature `Lc/u;.g:()Lc/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2846a8.  v0:= v1.`c.u.k` @type ^`c.l` @kind object;
  #L2846ac.  return v0 @kind object;
}
procedure `c.a.a.e` `h`(`c.u` v1 @kind this) @signature `Lc/u;.h:()Lc/a/a/e;` @AccessFlag  {
    temp;
    v0;

  #L284604.  v0:= v1.`c.u.l` @type ^`c.c` @kind object;
  #L284608.  if v0 == 0 then goto L284616;
  #L28460c.  v0:= v1.`c.u.l` @type ^`c.c` @kind object;
  #L284610.  v0:= v0.`c.c.a` @type ^`c.a.a.e` @kind object;
  #L284614.  goto L28461a;
  #L284616.  v0:= v1.`c.u.m` @type ^`c.a.a.e` @kind object;
  #L28461a.  return v0 @kind object;
}
procedure `c.n` `i`(`c.u` v1 @kind this) @signature `Lc/u;.i:()Lc/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2846d8.  v0:= v1.`c.u.v` @type ^`c.n` @kind object;
  #L2846dc.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `j`(`c.u` v1 @kind this) @signature `Lc/u;.j:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2847f8.  v0:= v1.`c.u.n` @type ^`javax.net.SocketFactory` @kind object;
  #L2847fc.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `k`(`c.u` v1 @kind this) @signature `Lc/u;.k:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284888.  v0:= v1.`c.u.o` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L28488c.  return v0 @kind object;
}
procedure `javax.net.ssl.HostnameVerifier` `l`(`c.u` v1 @kind this) @signature `Lc/u;.l:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284810.  v0:= v1.`c.u.q` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L284814.  return v0 @kind object;
}
procedure `c.f` `m`(`c.u` v1 @kind this) @signature `Lc/u;.m:()Lc/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284678.  v0:= v1.`c.u.r` @type ^`c.f` @kind object;
  #L28467c.  return v0 @kind object;
}
procedure `c.b` `n`(`c.u` v1 @kind this) @signature `Lc/u;.n:()Lc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28462c.  v0:= v1.`c.u.t` @type ^`c.b` @kind object;
  #L284630.  return v0 @kind object;
}
procedure `c.b` `o`(`c.u` v1 @kind this) @signature `Lc/u;.o:()Lc/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284644.  v0:= v1.`c.u.s` @type ^`c.b` @kind object;
  #L284648.  return v0 @kind object;
}
procedure `c.i` `p`(`c.u` v1 @kind this) @signature `Lc/u;.p:()Lc/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284690.  v0:= v1.`c.u.u` @type ^`c.i` @kind object;
  #L284694.  return v0 @kind object;
}
procedure `boolean` `q`(`c.u` v1 @kind this) @signature `Lc/u;.q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2845bc.  v0:= v1.`c.u.w` @type ^`boolean` @kind boolean;
  #L2845c0.  return v0;
}
procedure `boolean` `r`(`c.u` v1 @kind this) @signature `Lc/u;.r:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2845d4.  v0:= v1.`c.u.x` @type ^`boolean` @kind boolean;
  #L2845d8.  return v0;
}
procedure `boolean` `s`(`c.u` v1 @kind this) @signature `Lc/u;.s:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2845ec.  v0:= v1.`c.u.y` @type ^`boolean` @kind boolean;
  #L2845f0.  return v0;
}
procedure `c.m` `t`(`c.u` v1 @kind this) @signature `Lc/u;.t:()Lc/m;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2846c0.  v0:= v1.`c.u.c` @type ^`c.m` @kind object;
  #L2846c4.  return v0 @kind object;
}
procedure `java.util.List` `u`(`c.u` v1 @kind this) @signature `Lc/u;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284798.  v0:= v1.`c.u.e` @type ^`java.util.List` @kind object;
  #L28479c.  return v0 @kind object;
}
procedure `java.util.List` `v`(`c.u` v1 @kind this) @signature `Lc/u;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2847b0.  v0:= v1.`c.u.f` @type ^`java.util.List` @kind object;
  #L2847b4.  return v0 @kind object;
}
procedure `java.util.List` `w`(`c.u` v1 @kind this) @signature `Lc/u;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2847c8.  v0:= v1.`c.u.g` @type ^`java.util.List` @kind object;
  #L2847cc.  return v0 @kind object;
}
procedure `java.util.List` `x`(`c.u` v1 @kind this) @signature `Lc/u;.x:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2847e0.  v0:= v1.`c.u.h` @type ^`java.util.List` @kind object;
  #L2847e4.  return v0 @kind object;
}
procedure `c.o$a` `y`(`c.u` v1 @kind this) @signature `Lc/u;.y:()Lc/o$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2846f0.  v0:= v1.`c.u.i` @type ^`c.o$a` @kind object;
  #L2846f4.  return v0 @kind object;
}
