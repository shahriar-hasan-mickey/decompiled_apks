record `c.a.a.c$a` @kind class @AccessFlag PUBLIC {
  `long` `c.a.a.c$a.a` @AccessFlag FINAL;
  `c.x` `c.a.a.c$a.b` @AccessFlag FINAL;
  `c.z` `c.a.a.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `c.a.a.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `c.a.a.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `c.a.a.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `c.a.a.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `c.a.a.c$a.h` @AccessFlag PRIVATE;
  `long` `c.a.a.c$a.i` @AccessFlag PRIVATE;
  `long` `c.a.a.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `c.a.a.c$a.k` @AccessFlag PRIVATE;
  `int` `c.a.a.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.a.a.c$a` v3 @kind this, `long` v4 , `c.x` v6 @kind object, `c.z` v7 @kind object) @signature `Lc/a/a/c$a;.<init>:(JLc/x;Lc/z;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L26e870.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26e876.  v0:= -1I;
  #L26e878.  v3.`c.a.a.c$a.l` @type ^`int` := v0;
  #L26e87c.  v3.`c.a.a.c$a.a` @type ^`long` := v4 @kind wide;
  #L26e880.  v3.`c.a.a.c$a.b` @type ^`c.x` := v6 @kind object;
  #L26e884.  v3.`c.a.a.c$a.c` @type ^`c.z` := v7 @kind object;
  #L26e888.  if v7 == 0 then goto L26e964;
  #L26e88c.  call temp:= `j`(v7) @signature `Lc/z;.j:()J` @kind virtual;
  #L26e892.  v4:= temp @kind wide;
  #L26e894.  v3.`c.a.a.c$a.i` @type ^`long` := v4 @kind wide;
  #L26e898.  call temp:= `k`(v7) @signature `Lc/z;.k:()J` @kind virtual;
  #L26e89e.  v4:= temp @kind wide;
  #L26e8a0.  v3.`c.a.a.c$a.j` @type ^`long` := v4 @kind wide;
  #L26e8a4.  call temp:= `e`(v7) @signature `Lc/z;.e:()Lc/q;` @kind virtual;
  #L26e8aa.  v4:= temp @kind object;
  #L26e8ac.  v5:= 0I;
  #L26e8ae.  call temp:= `a`(v4) @signature `Lc/q;.a:()I` @kind virtual;
  #L26e8b4.  v6:= temp;
  #L26e8b6.  if v5 >= v6 then goto L26e964;
  #L26e8ba.  call temp:= `a`(v4, v5) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L26e8c0.  v7:= temp @kind object;
  #L26e8c2.  call temp:= `b`(v4, v5) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L26e8c8.  v1:= temp @kind object;
  #L26e8ca.  v2:= "Date" @kind object;
  #L26e8ce.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26e8d4.  v2:= temp;
  #L26e8d6.  if v2 == 0 then goto L26e8ec;
  #L26e8da.  call temp:= `a`(v1) @signature `Lc/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L26e8e0.  v7:= temp @kind object;
  #L26e8e2.  v3.`c.a.a.c$a.d` @type ^`java.util.Date` := v7 @kind object;
  #L26e8e6.  v3.`c.a.a.c$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L26e8ea.  goto L26e95e;
  #L26e8ec.  v2:= "Expires" @kind object;
  #L26e8f0.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26e8f6.  v2:= temp;
  #L26e8f8.  if v2 == 0 then goto L26e90a;
  #L26e8fc.  call temp:= `a`(v1) @signature `Lc/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L26e902.  v7:= temp @kind object;
  #L26e904.  v3.`c.a.a.c$a.h` @type ^`java.util.Date` := v7 @kind object;
  #L26e908.  goto L26e95e;
  #L26e90a.  v2:= "Last-Modified" @kind object;
  #L26e90e.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26e914.  v2:= temp;
  #L26e916.  if v2 == 0 then goto L26e92c;
  #L26e91a.  call temp:= `a`(v1) @signature `Lc/a/c/d;.a:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L26e920.  v7:= temp @kind object;
  #L26e922.  v3.`c.a.a.c$a.f` @type ^`java.util.Date` := v7 @kind object;
  #L26e926.  v3.`c.a.a.c$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L26e92a.  goto L26e95e;
  #L26e92c.  v2:= "ETag" @kind object;
  #L26e930.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26e936.  v2:= temp;
  #L26e938.  if v2 == 0 then goto L26e942;
  #L26e93c.  v3.`c.a.a.c$a.k` @type ^`java.lang.String` := v1 @kind object;
  #L26e940.  goto L26e95e;
  #L26e942.  v2:= "Age" @kind object;
  #L26e946.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26e94c.  v7:= temp;
  #L26e94e.  if v7 == 0 then goto L26e95e;
  #L26e952.  call temp:= `b`(v1, v0) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @kind static;
  #L26e958.  v7:= temp;
  #L26e95a.  v3.`c.a.a.c$a.l` @type ^`int` := v7;
  #L26e95e.  v5:= v5 + 1;
  #L26e962.  goto L26e8b6;
  #L26e964.  return @kind void;
}
procedure `boolean` `a`(`c.x` v1 @kind object) @signature `Lc/a/a/c$a;.a:(Lc/x;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L26e3bc.  v0:= "If-Modified-Since" @kind object;
  #L26e3c0.  call temp:= `a`(v1, v0) @signature `Lc/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L26e3c6.  v0:= temp @kind object;
  #L26e3c8.  if v0 != 0 then goto L26e3e2;
  #L26e3cc.  v0:= "If-None-Match" @kind object;
  #L26e3d0.  call temp:= `a`(v1, v0) @signature `Lc/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L26e3d6.  v1:= temp @kind object;
  #L26e3d8.  if v1 == 0 then goto L26e3de;
  #L26e3dc.  goto L26e3e2;
  #L26e3de.  v1:= 0I;
  #L26e3e0.  goto L26e3e4;
  #L26e3e2.  v1:= 1I;
  #L26e3e4.  return v1;
}
procedure `c.a.a.c` `b`(`c.a.a.c$a` v13 @kind this) @signature `Lc/a/a/c$a;.b:()Lc/a/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L26e47c.  v0:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e480.  v1:= 0I;
  #L26e482.  if v0 != 0 then goto L26e496;
  #L26e486.  v0:= new `c.a.a.c`;
  #L26e48a.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e48e.  call `<init>`(v0, v2, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e494.  return v0 @kind object;
  #L26e496.  v0:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e49a.  call temp:= `g`(v0) @signature `Lc/x;.g:()Z` @kind virtual;
  #L26e4a0.  v0:= temp;
  #L26e4a2.  if v0 == 0 then goto L26e4c6;
  #L26e4a6.  v0:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e4aa.  call temp:= `d`(v0) @signature `Lc/z;.d:()Lc/p;` @kind virtual;
  #L26e4b0.  v0:= temp @kind object;
  #L26e4b2.  if v0 != 0 then goto L26e4c6;
  #L26e4b6.  v0:= new `c.a.a.c`;
  #L26e4ba.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e4be.  call `<init>`(v0, v2, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e4c4.  return v0 @kind object;
  #L26e4c6.  v0:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e4ca.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e4ce.  call temp:= `a`(v0, v2) @signature `Lc/a/a/c;.a:(Lc/z;Lc/x;)Z` @kind static;
  #L26e4d4.  v0:= temp;
  #L26e4d6.  if v0 != 0 then goto L26e4ea;
  #L26e4da.  v0:= new `c.a.a.c`;
  #L26e4de.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e4e2.  call `<init>`(v0, v2, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e4e8.  return v0 @kind object;
  #L26e4ea.  v0:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e4ee.  call temp:= `f`(v0) @signature `Lc/x;.f:()Lc/d;` @kind virtual;
  #L26e4f4.  v0:= temp @kind object;
  #L26e4f6.  call temp:= `a`(v0) @signature `Lc/d;.a:()Z` @kind virtual;
  #L26e4fc.  v2:= temp;
  #L26e4fe.  if v2 != 0 then goto L26e6e2;
  #L26e502.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e506.  call temp:= `a`(v2) @signature `Lc/a/a/c$a;.a:(Lc/x;)Z` @kind static;
  #L26e50c.  v2:= temp;
  #L26e50e.  if v2 == 0 then goto L26e516;
  #L26e512.  goto L26e6e2;
  #L26e516.  v2:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e51a.  call temp:= `i`(v2) @signature `Lc/z;.i:()Lc/d;` @kind virtual;
  #L26e520.  v2:= temp @kind object;
  #L26e522.  call temp:= `j`(v2) @signature `Lc/d;.j:()Z` @kind virtual;
  #L26e528.  v3:= temp;
  #L26e52a.  if v3 == 0 then goto L26e53e;
  #L26e52e.  v0:= new `c.a.a.c`;
  #L26e532.  v2:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e536.  call `<init>`(v0, v1, v2) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e53c.  return v0 @kind object;
  #L26e53e.  call temp:= `d`(v13) @signature `Lc/a/a/c$a;.d:()J` @kind direct;
  #L26e544.  v3:= temp @kind wide;
  #L26e546.  call temp:= `c`(v13) @signature `Lc/a/a/c$a;.c:()J` @kind direct;
  #L26e54c.  v5:= temp @kind wide;
  #L26e54e.  call temp:= `c`(v0) @signature `Lc/d;.c:()I` @kind virtual;
  #L26e554.  v7:= temp;
  #L26e556.  v8:= -1I;
  #L26e558.  if v7 == v8 then goto L26e57a;
  #L26e55c.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26e560.  call temp:= `c`(v0) @signature `Lc/d;.c:()I` @kind virtual;
  #L26e566.  v9:= temp;
  #L26e568.  v9:= (`long`) v9 @kind i2l;
  #L26e56a.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L26e570.  v9:= temp @kind wide;
  #L26e572.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L26e578.  v5:= temp @kind wide;
  #L26e57a.  call temp:= `h`(v0) @signature `Lc/d;.h:()I` @kind virtual;
  #L26e580.  v7:= temp;
  #L26e582.  v9:= 0L;
  #L26e586.  if v7 == v8 then goto L26e5a2;
  #L26e58a.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26e58e.  call temp:= `h`(v0) @signature `Lc/d;.h:()I` @kind virtual;
  #L26e594.  v11:= temp;
  #L26e596.  v11:= (`long`) v11 @kind i2l;
  #L26e598.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L26e59e.  v11:= temp @kind wide;
  #L26e5a0.  goto L26e5a4;
  #L26e5a2.  v11:= v9 @kind wide;
  #L26e5a4.  call temp:= `f`(v2) @signature `Lc/d;.f:()Z` @kind virtual;
  #L26e5aa.  v7:= temp;
  #L26e5ac.  if v7 != 0 then goto L26e5d2;
  #L26e5b0.  call temp:= `g`(v0) @signature `Lc/d;.g:()I` @kind virtual;
  #L26e5b6.  v7:= temp;
  #L26e5b8.  if v7 == v8 then goto L26e5d2;
  #L26e5bc.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26e5c0.  call temp:= `g`(v0) @signature `Lc/d;.g:()I` @kind virtual;
  #L26e5c6.  v0:= temp;
  #L26e5c8.  v8:= (`long`) v0 @kind i2l;
  #L26e5ca.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L26e5d0.  v9:= temp @kind wide;
  #L26e5d2.  call temp:= `a`(v2) @signature `Lc/d;.a:()Z` @kind virtual;
  #L26e5d8.  v0:= temp;
  #L26e5da.  if v0 != 0 then goto L26e64c;
  #L26e5de.  v7:= v3 + v11 @kind long;
  #L26e5e2.  v11:= v5 + v9 @kind long;
  #L26e5e6.  v0:= lcmp(v7, v11);
  #L26e5ea.  if v0 >= 0 then goto L26e64c;
  #L26e5ee.  v0:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e5f2.  call temp:= `g`(v0) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e5f8.  v0:= temp @kind object;
  #L26e5fa.  v2:= lcmp(v7, v5);
  #L26e5fe.  if v2 < 0 then goto L26e610;
  #L26e602.  v2:= "Warning" @kind object;
  #L26e606.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L26e60a.  call temp:= `a`(v0, v2, v5) @signature `Lc/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/z$a;` @kind virtual;
  #L26e610.  v5:= 86400000L;
  #L26e616.  v2:= lcmp(v3, v5);
  #L26e61a.  if v2 <= 0 then goto L26e638;
  #L26e61e.  call temp:= `e`(v13) @signature `Lc/a/a/c$a;.e:()Z` @kind direct;
  #L26e624.  v2:= temp;
  #L26e626.  if v2 == 0 then goto L26e638;
  #L26e62a.  v2:= "Warning" @kind object;
  #L26e62e.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L26e632.  call temp:= `a`(v0, v2, v3) @signature `Lc/z$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/z$a;` @kind virtual;
  #L26e638.  v2:= new `c.a.a.c`;
  #L26e63c.  call temp:= `a`(v0) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e642.  v0:= temp @kind object;
  #L26e644.  call `<init>`(v2, v1, v0) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e64a.  return v2 @kind object;
  #L26e64c.  v0:= v13.`c.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L26e650.  if v0 == 0 then goto L26e65e;
  #L26e654.  v0:= "If-None-Match" @kind object;
  #L26e658.  v1:= v13.`c.a.a.c$a.k` @type ^`java.lang.String` @kind object;
  #L26e65c.  goto L26e680;
  #L26e65e.  v0:= v13.`c.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L26e662.  if v0 == 0 then goto L26e670;
  #L26e666.  v0:= "If-Modified-Since" @kind object;
  #L26e66a.  v1:= v13.`c.a.a.c$a.g` @type ^`java.lang.String` @kind object;
  #L26e66e.  goto L26e680;
  #L26e670.  v0:= v13.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e674.  if v0 == 0 then goto L26e6d2;
  #L26e678.  v0:= "If-Modified-Since" @kind object;
  #L26e67c.  v1:= v13.`c.a.a.c$a.e` @type ^`java.lang.String` @kind object;
  #L26e680.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e684.  call temp:= `c`(v2) @signature `Lc/x;.c:()Lc/q;` @kind virtual;
  #L26e68a.  v2:= temp @kind object;
  #L26e68c.  call temp:= `b`(v2) @signature `Lc/q;.b:()Lc/q$a;` @kind virtual;
  #L26e692.  v2:= temp @kind object;
  #L26e694.  v3:= `@@c.a.a.a` @type ^`c.a.a` @kind object;
  #L26e698.  call `a`(v3, v2, v0, v1) @signature `Lc/a/a;.a:(Lc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L26e69e.  v0:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e6a2.  call temp:= `e`(v0) @signature `Lc/x;.e:()Lc/x$a;` @kind virtual;
  #L26e6a8.  v0:= temp @kind object;
  #L26e6aa.  call temp:= `a`(v2) @signature `Lc/q$a;.a:()Lc/q;` @kind virtual;
  #L26e6b0.  v1:= temp @kind object;
  #L26e6b2.  call temp:= `a`(v0, v1) @signature `Lc/x$a;.a:(Lc/q;)Lc/x$a;` @kind virtual;
  #L26e6b8.  v0:= temp @kind object;
  #L26e6ba.  call temp:= `a`(v0) @signature `Lc/x$a;.a:()Lc/x;` @kind virtual;
  #L26e6c0.  v0:= temp @kind object;
  #L26e6c2.  v1:= new `c.a.a.c`;
  #L26e6c6.  v2:= v13.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e6ca.  call `<init>`(v1, v0, v2) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e6d0.  return v1 @kind object;
  #L26e6d2.  v0:= new `c.a.a.c`;
  #L26e6d6.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e6da.  call `<init>`(v0, v2, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e6e0.  return v0 @kind object;
  #L26e6e2.  v0:= new `c.a.a.c`;
  #L26e6e6.  v2:= v13.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e6ea.  call `<init>`(v0, v2, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e6f0.  return v0 @kind object;
}
procedure `long` `c`(`c.a.a.c$a` v9 @kind this) @signature `Lc/a/a/c$a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L26e704.  v0:= v9.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e708.  call temp:= `i`(v0) @signature `Lc/z;.i:()Lc/d;` @kind virtual;
  #L26e70e.  v0:= temp @kind object;
  #L26e710.  call temp:= `c`(v0) @signature `Lc/d;.c:()I` @kind virtual;
  #L26e716.  v1:= temp;
  #L26e718.  v2:= -1I;
  #L26e71a.  if v1 == v2 then goto L26e736;
  #L26e71e.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26e722.  call temp:= `c`(v0) @signature `Lc/d;.c:()I` @kind virtual;
  #L26e728.  v0:= temp;
  #L26e72a.  v2:= (`long`) v0 @kind i2l;
  #L26e72c.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L26e732.  v0:= temp @kind wide;
  #L26e734.  return v0 @kind wide;
  #L26e736.  v0:= v9.`c.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L26e73a.  v1:= 0L;
  #L26e73e.  if v0 == 0 then goto L26e778;
  #L26e742.  v0:= v9.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e746.  if v0 == 0 then goto L26e758;
  #L26e74a.  v0:= v9.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e74e.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L26e754.  v3:= temp @kind wide;
  #L26e756.  goto L26e75c;
  #L26e758.  v3:= v9.`c.a.a.c$a.j` @type ^`long` @kind wide;
  #L26e75c.  v0:= v9.`c.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L26e760.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L26e766.  v5:= temp @kind wide;
  #L26e768.  v7:= v5 - v3 @kind long;
  #L26e76c.  v0:= lcmp(v7, v1);
  #L26e770.  if v0 <= 0 then goto L26e776;
  #L26e774.  v1:= v7 @kind wide;
  #L26e776.  return v1 @kind wide;
  #L26e778.  v0:= v9.`c.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L26e77c.  if v0 == 0 then goto L26e7dc;
  #L26e780.  v0:= v9.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e784.  call temp:= `a`(v0) @signature `Lc/z;.a:()Lc/x;` @kind virtual;
  #L26e78a.  v0:= temp @kind object;
  #L26e78c.  call temp:= `a`(v0) @signature `Lc/x;.a:()Lc/r;` @kind virtual;
  #L26e792.  v0:= temp @kind object;
  #L26e794.  call temp:= `k`(v0) @signature `Lc/r;.k:()Ljava/lang/String;` @kind virtual;
  #L26e79a.  v0:= temp @kind object;
  #L26e79c.  if v0 != 0 then goto L26e7dc;
  #L26e7a0.  v0:= v9.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e7a4.  if v0 == 0 then goto L26e7b6;
  #L26e7a8.  v0:= v9.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e7ac.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L26e7b2.  v3:= temp @kind wide;
  #L26e7b4.  goto L26e7ba;
  #L26e7b6.  v3:= v9.`c.a.a.c$a.i` @type ^`long` @kind wide;
  #L26e7ba.  v0:= v9.`c.a.a.c$a.f` @type ^`java.util.Date` @kind object;
  #L26e7be.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L26e7c4.  v5:= temp @kind wide;
  #L26e7c6.  v7:= v3 - v5 @kind long;
  #L26e7ca.  v0:= lcmp(v7, v1);
  #L26e7ce.  if v0 <= 0 then goto L26e7da;
  #L26e7d2.  v0:= 10L;
  #L26e7d6.  v1:= v7 / v0 @kind long;
  #L26e7da.  return v1 @kind wide;
  #L26e7dc.  return v1 @kind wide;
}
procedure `long` `d`(`c.a.a.c$a` v11 @kind this) @signature `Lc/a/a/c$a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L26e7f0.  v0:= v11.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e7f4.  v1:= 0L;
  #L26e7f8.  if v0 == 0 then goto L26e818;
  #L26e7fc.  v3:= v11.`c.a.a.c$a.j` @type ^`long` @kind wide;
  #L26e800.  v0:= v11.`c.a.a.c$a.d` @type ^`java.util.Date` @kind object;
  #L26e804.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L26e80a.  v5:= temp @kind wide;
  #L26e80c.  v7:= v3 - v5 @kind long;
  #L26e810.  call temp:= `max`(v1, v7) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L26e816.  v1:= temp @kind wide;
  #L26e818.  v0:= v11.`c.a.a.c$a.l` @type ^`int`;
  #L26e81c.  v3:= -1I;
  #L26e81e.  if v0 == v3 then goto L26e83c;
  #L26e822.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26e826.  v3:= v11.`c.a.a.c$a.l` @type ^`int`;
  #L26e82a.  v3:= (`long`) v3 @kind i2l;
  #L26e82c.  call temp:= `toMillis`(v0, v3) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L26e832.  v3:= temp @kind wide;
  #L26e834.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L26e83a.  v1:= temp @kind wide;
  #L26e83c.  v3:= v11.`c.a.a.c$a.j` @type ^`long` @kind wide;
  #L26e840.  v5:= v11.`c.a.a.c$a.i` @type ^`long` @kind wide;
  #L26e844.  v7:= v3 - v5 @kind long;
  #L26e848.  v3:= v11.`c.a.a.c$a.a` @type ^`long` @kind wide;
  #L26e84c.  v5:= v11.`c.a.a.c$a.j` @type ^`long` @kind wide;
  #L26e850.  v9:= v3 - v5 @kind long;
  #L26e854.  v3:= v1 + v7 @kind long;
  #L26e858.  v0:= v3 + v9 @kind long;
  #L26e85c.  return v0 @kind wide;
}
procedure `boolean` `e`(`c.a.a.c$a` v2 @kind this) @signature `Lc/a/a/c$a;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L26e3f8.  v0:= v2.`c.a.a.c$a.c` @type ^`c.z` @kind object;
  #L26e3fc.  call temp:= `i`(v0) @signature `Lc/z;.i:()Lc/d;` @kind virtual;
  #L26e402.  v0:= temp @kind object;
  #L26e404.  call temp:= `c`(v0) @signature `Lc/d;.c:()I` @kind virtual;
  #L26e40a.  v0:= temp;
  #L26e40c.  v1:= -1I;
  #L26e40e.  if v0 != v1 then goto L26e41e;
  #L26e412.  v0:= v2.`c.a.a.c$a.h` @type ^`java.util.Date` @kind object;
  #L26e416.  if v0 != 0 then goto L26e41e;
  #L26e41a.  v0:= 1I;
  #L26e41c.  goto L26e420;
  #L26e41e.  v0:= 0I;
  #L26e420.  return v0;
}
procedure `c.a.a.c` `a`(`c.a.a.c$a` v2 @kind this) @signature `Lc/a/a/c$a;.a:()Lc/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26e434.  call temp:= `b`(v2) @signature `Lc/a/a/c$a;.b:()Lc/a/a/c;` @kind direct;
  #L26e43a.  v0:= temp @kind object;
  #L26e43c.  v1:= v0.`c.a.a.c.a` @type ^`c.x` @kind object;
  #L26e440.  if v1 == 0 then goto L26e46a;
  #L26e444.  v1:= v2.`c.a.a.c$a.b` @type ^`c.x` @kind object;
  #L26e448.  call temp:= `f`(v1) @signature `Lc/x;.f:()Lc/d;` @kind virtual;
  #L26e44e.  v1:= temp @kind object;
  #L26e450.  call temp:= `i`(v1) @signature `Lc/d;.i:()Z` @kind virtual;
  #L26e456.  v1:= temp;
  #L26e458.  if v1 == 0 then goto L26e46a;
  #L26e45c.  v0:= new `c.a.a.c`;
  #L26e460.  v1:= 0I;
  #L26e462.  call `<init>`(v0, v1, v1) @signature `Lc/a/a/c;.<init>:(Lc/x;Lc/z;)V` @kind direct;
  #L26e468.  return v0 @kind object;
  #L26e46a.  return v0 @kind object;
}
