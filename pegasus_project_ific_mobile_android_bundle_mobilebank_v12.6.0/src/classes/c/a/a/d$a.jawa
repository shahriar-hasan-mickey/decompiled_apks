record `c.a.a.d$a` @kind class @AccessFlag PUBLIC_FINAL {
  `c.a.a.d$b` `c.a.a.d$a.a` @AccessFlag FINAL;
  `boolean`[] `c.a.a.d$a.b` @AccessFlag FINAL;
  `c.a.a.d` `c.a.a.d$a.c` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `c.a.a.d$a.d` @AccessFlag PRIVATE;
}
procedure `void` `a`(`c.a.a.d$a` v3 @kind this) @signature `Lc/a/a/d$a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L26eaa4.  v0:= v3.`c.a.a.d$a.a` @type ^`c.a.a.d$b` @kind object;
  #L26eaa8.  v0:= v0.`c.a.a.d$b.f` @type ^`c.a.a.d$a` @kind object;
  #L26eaac.  if v0 != v3 then goto L26eae8;
  #L26eab0.  v0:= 0I;
  #L26eab2.  v1:= v3.`c.a.a.d$a.c` @type ^`c.a.a.d` @kind object;
  #L26eab6.  v1:= v1.`c.a.a.d.c` @type ^`int`;
  #L26eaba.  if v0 >= v1 then goto L26eade;
  #L26eabe.  v1:= v3.`c.a.a.d$a.c` @type ^`c.a.a.d` @kind object;
  #L26eac2.  v1:= v1.`c.a.a.d.b` @type ^`c.a.f.a` @kind object;
  #L26eac6.  v2:= v3.`c.a.a.d$a.a` @type ^`c.a.a.d$b` @kind object;
  #L26eaca.  v2:= v2.`c.a.a.d$b.d` @type ^`java.io.File`[] @kind object;
  #L26eace.  v2:= v2[v0] @kind object;
  #L26ead2.  call `a`(v1, v2) @signature `Lc/a/f/a;.a:(Ljava/io/File;)V` @kind interface;
  #L26ead8.  v0:= v0 + 1;
  #L26eadc.  goto L26eab2;
  #L26eade.  v0:= v3.`c.a.a.d$a.a` @type ^`c.a.a.d$b` @kind object;
  #L26eae2.  v1:= 0I;
  #L26eae4.  v0.`c.a.a.d$b.f` @type ^`c.a.a.d$a` := v1 @kind object;
  #L26eae8.  return @kind void;
  catch `java.io.IOException` @[L26eabe..L26ead8] goto L26ead8;
}
procedure `void` `b`(`c.a.a.d$a` v3 @kind this) @signature `Lc/a/a/d$a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L26eb0c.  v0:= v3.`c.a.a.d$a.c` @type ^`c.a.a.d` @kind object;
  #L26eb10.  @monitorenter v0
  #L26eb12.  v1:= v3.`c.a.a.d$a.d` @type ^`boolean` @kind boolean;
  #L26eb16.  if v1 == 0 then goto L26eb26;
  #L26eb1a.  v1:= new `java.lang.IllegalStateException`;
  #L26eb1e.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L26eb24.  throw v1;
  #L26eb26.  v1:= v3.`c.a.a.d$a.a` @type ^`c.a.a.d$b` @kind object;
  #L26eb2a.  v1:= v1.`c.a.a.d$b.f` @type ^`c.a.a.d$a` @kind object;
  #L26eb2e.  if v1 != v3 then goto L26eb3e;
  #L26eb32.  v1:= v3.`c.a.a.d$a.c` @type ^`c.a.a.d` @kind object;
  #L26eb36.  v2:= 0I;
  #L26eb38.  call `a`(v1, v3, v2) @signature `Lc/a/a/d;.a:(Lc/a/a/d$a;Z)V` @kind virtual;
  #L26eb3e.  v1:= 1I;
  #L26eb40.  v3.`c.a.a.d$a.d` @type ^`boolean` := v1 @kind boolean;
  #L26eb44.  @monitorexit v0
  #L26eb46.  return @kind void;
  #L26eb48.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26eb4a.  @monitorexit v0
  #L26eb4c.  throw v1;
  catch `java.lang.Throwable` @[L26eb12..L26eb4c] goto L26eb48;
}
