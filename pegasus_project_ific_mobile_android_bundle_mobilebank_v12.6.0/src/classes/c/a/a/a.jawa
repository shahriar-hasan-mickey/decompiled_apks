record `c.a.a.a` @kind class @AccessFlag PUBLIC_FINAL extends `c.s` @kind interface {
  `c.a.a.e` `c.a.a.a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.a.a.a` v0 @kind this, `c.a.a.e` v1 @kind object) @signature `Lc/a/a/a;.<init>:(Lc/a/a/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L26e3a0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26e3a6.  v0.`c.a.a.a.a` @type ^`c.a.a.e` := v1 @kind object;
  #L26e3aa.  return @kind void;
}
procedure `c.q` `a`(`c.q` v7 @kind object, `c.q` v8 @kind object) @signature `Lc/a/a/a;.a:(Lc/q;Lc/q;)Lc/q;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26df8c.  v0:= new `c.q$a`;
  #L26df90.  call `<init>`(v0) @signature `Lc/q$a;.<init>:()V` @kind direct;
  #L26df96.  call temp:= `a`(v7) @signature `Lc/q;.a:()I` @kind virtual;
  #L26df9c.  v1:= temp;
  #L26df9e.  v2:= 0I;
  #L26dfa0.  v3:= 0I;
  #L26dfa2.  if v3 >= v1 then goto L26e00c;
  #L26dfa6.  call temp:= `a`(v7, v3) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L26dfac.  v4:= temp @kind object;
  #L26dfae.  call temp:= `b`(v7, v3) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L26dfb4.  v5:= temp @kind object;
  #L26dfb6.  v6:= "Warning" @kind object;
  #L26dfba.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26dfc0.  v6:= temp;
  #L26dfc2.  if v6 == 0 then goto L26dfd8;
  #L26dfc6.  v6:= "1" @kind object;
  #L26dfca.  call temp:= `startsWith`(v5, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L26dfd0.  v6:= temp;
  #L26dfd2.  if v6 == 0 then goto L26dfd8;
  #L26dfd6.  goto L26e006;
  #L26dfd8.  call temp:= `b`(v4) @signature `Lc/a/a/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L26dfde.  v6:= temp;
  #L26dfe0.  if v6 != 0 then goto L26dffc;
  #L26dfe4.  call temp:= `a`(v4) @signature `Lc/a/a/a;.a:(Ljava/lang/String;)Z` @kind static;
  #L26dfea.  v6:= temp;
  #L26dfec.  if v6 == 0 then goto L26dffc;
  #L26dff0.  call temp:= `a`(v8, v4) @signature `Lc/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L26dff6.  v6:= temp @kind object;
  #L26dff8.  if v6 != 0 then goto L26e006;
  #L26dffc.  v6:= `@@c.a.a.a` @type ^`c.a.a` @kind object;
  #L26e000.  call `a`(v6, v0, v4, v5) @signature `Lc/a/a;.a:(Lc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L26e006.  v3:= v3 + 1;
  #L26e00a.  goto L26dfa2;
  #L26e00c.  call temp:= `a`(v8) @signature `Lc/q;.a:()I` @kind virtual;
  #L26e012.  v7:= temp;
  #L26e014.  if v2 >= v7 then goto L26e050;
  #L26e018.  call temp:= `a`(v8, v2) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L26e01e.  v1:= temp @kind object;
  #L26e020.  call temp:= `b`(v1) @signature `Lc/a/a/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L26e026.  v3:= temp;
  #L26e028.  if v3 != 0 then goto L26e04a;
  #L26e02c.  call temp:= `a`(v1) @signature `Lc/a/a/a;.a:(Ljava/lang/String;)Z` @kind static;
  #L26e032.  v3:= temp;
  #L26e034.  if v3 == 0 then goto L26e04a;
  #L26e038.  v3:= `@@c.a.a.a` @type ^`c.a.a` @kind object;
  #L26e03c.  call temp:= `b`(v8, v2) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L26e042.  v4:= temp @kind object;
  #L26e044.  call `a`(v3, v0, v1, v4) @signature `Lc/a/a;.a:(Lc/q$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L26e04a.  v2:= v2 + 1;
  #L26e04e.  goto L26e014;
  #L26e050.  call temp:= `a`(v0) @signature `Lc/q$a;.a:()Lc/q;` @kind virtual;
  #L26e056.  v7:= temp @kind object;
  #L26e058.  return v7 @kind object;
}
procedure `c.z` `a`(`c.a.a.a` v4 @kind this, `c.a.a.b` v5 @kind object, `c.z` v6 @kind object) @signature `Lc/a/a/a;.a:(Lc/a/a/b;Lc/z;)Lc/z;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26e06c.  if v5 != 0 then goto L26e072;
  #L26e070.  return v6 @kind object;
  #L26e072.  call temp:= `a`(v5) @signature `Lc/a/a/b;.a:()Ld/r;` @kind interface;
  #L26e078.  v0:= temp @kind object;
  #L26e07a.  if v0 != 0 then goto L26e080;
  #L26e07e.  return v6 @kind object;
  #L26e080.  call temp:= `f`(v6) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e086.  v1:= temp @kind object;
  #L26e088.  call temp:= `b`(v1) @signature `Lc/aa;.b:()Ld/e;` @kind virtual;
  #L26e08e.  v1:= temp @kind object;
  #L26e090.  call temp:= `a`(v0) @signature `Ld/l;.a:(Ld/r;)Ld/d;` @kind static;
  #L26e096.  v0:= temp @kind object;
  #L26e098.  v2:= new `c.a.a.a$1`;
  #L26e09c.  call `<init>`(v2, v4, v1, v5, v0) @signature `Lc/a/a/a$1;.<init>:(Lc/a/a/a;Ld/e;Lc/a/a/b;Ld/d;)V` @kind direct;
  #L26e0a2.  v5:= "Content-Type" @kind object;
  #L26e0a6.  call temp:= `a`(v6, v5) @signature `Lc/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L26e0ac.  v5:= temp @kind object;
  #L26e0ae.  call temp:= `f`(v6) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e0b4.  v0:= temp @kind object;
  #L26e0b6.  call temp:= `a`(v0) @signature `Lc/aa;.a:()J` @kind virtual;
  #L26e0bc.  v0:= temp @kind wide;
  #L26e0be.  call temp:= `g`(v6) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e0c4.  v6:= temp @kind object;
  #L26e0c6.  v3:= new `c.a.c.h`;
  #L26e0ca.  call temp:= `a`(v2) @signature `Ld/l;.a:(Ld/s;)Ld/e;` @kind static;
  #L26e0d0.  v2:= temp @kind object;
  #L26e0d2.  call `<init>`(v3, v5, v0, v2) @signature `Lc/a/c/h;.<init>:(Ljava/lang/String;JLd/e;)V` @kind direct;
  #L26e0d8.  call temp:= `a`(v6, v3) @signature `Lc/z$a;.a:(Lc/aa;)Lc/z$a;` @kind virtual;
  #L26e0de.  v5:= temp @kind object;
  #L26e0e0.  call temp:= `a`(v5) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e0e6.  v5:= temp @kind object;
  #L26e0e8.  return v5 @kind object;
}
procedure `c.z` `a`(`c.z` v1 @kind object) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L26e364.  if v1 == 0 then goto L26e38e;
  #L26e368.  call temp:= `f`(v1) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e36e.  v0:= temp @kind object;
  #L26e370.  if v0 == 0 then goto L26e38e;
  #L26e374.  call temp:= `g`(v1) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e37a.  v1:= temp @kind object;
  #L26e37c.  v0:= 0I;
  #L26e37e.  call temp:= `a`(v1, v0) @signature `Lc/z$a;.a:(Lc/aa;)Lc/z$a;` @kind virtual;
  #L26e384.  v1:= temp @kind object;
  #L26e386.  call temp:= `a`(v1) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e38c.  v1:= temp @kind object;
  #L26e38e.  return v1 @kind object;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object) @signature `Lc/a/a/a;.a:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L26dea8.  v0:= "Connection" @kind object;
  #L26deac.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26deb2.  v0:= temp;
  #L26deb4.  if v0 != 0 then goto L26df2c;
  #L26deb8.  v0:= "Keep-Alive" @kind object;
  #L26debc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26dec2.  v0:= temp;
  #L26dec4.  if v0 != 0 then goto L26df2c;
  #L26dec8.  v0:= "Proxy-Authenticate" @kind object;
  #L26decc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26ded2.  v0:= temp;
  #L26ded4.  if v0 != 0 then goto L26df2c;
  #L26ded8.  v0:= "Proxy-Authorization" @kind object;
  #L26dedc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26dee2.  v0:= temp;
  #L26dee4.  if v0 != 0 then goto L26df2c;
  #L26dee8.  v0:= "TE" @kind object;
  #L26deec.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26def2.  v0:= temp;
  #L26def4.  if v0 != 0 then goto L26df2c;
  #L26def8.  v0:= "Trailers" @kind object;
  #L26defc.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df02.  v0:= temp;
  #L26df04.  if v0 != 0 then goto L26df2c;
  #L26df08.  v0:= "Transfer-Encoding" @kind object;
  #L26df0c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df12.  v0:= temp;
  #L26df14.  if v0 != 0 then goto L26df2c;
  #L26df18.  v0:= "Upgrade" @kind object;
  #L26df1c.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df22.  v1:= temp;
  #L26df24.  if v1 != 0 then goto L26df2c;
  #L26df28.  v1:= 1I;
  #L26df2a.  goto L26df2e;
  #L26df2c.  v1:= 0I;
  #L26df2e.  return v1;
}
procedure `boolean` `b`(`java.lang.String` v1 @kind object) @signature `Lc/a/a/a;.b:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L26df40.  v0:= "Content-Length" @kind object;
  #L26df44.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df4a.  v0:= temp;
  #L26df4c.  if v0 != 0 then goto L26df76;
  #L26df50.  v0:= "Content-Encoding" @kind object;
  #L26df54.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df5a.  v0:= temp;
  #L26df5c.  if v0 != 0 then goto L26df76;
  #L26df60.  v0:= "Content-Type" @kind object;
  #L26df64.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26df6a.  v1:= temp;
  #L26df6c.  if v1 == 0 then goto L26df72;
  #L26df70.  goto L26df76;
  #L26df72.  v1:= 0I;
  #L26df74.  goto L26df78;
  #L26df76.  v1:= 1I;
  #L26df78.  return v1;
}
procedure `c.z` `a`(`c.a.a.a` v5 @kind this, `c.s$a` v6 @kind object) @signature `Lc/a/a/a;.a:(Lc/s$a;)Lc/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L26e0fc.  v0:= v5.`c.a.a.a.a` @type ^`c.a.a.e` @kind object;
  #L26e100.  if v0 == 0 then goto L26e11a;
  #L26e104.  v0:= v5.`c.a.a.a.a` @type ^`c.a.a.e` @kind object;
  #L26e108.  call temp:= `a`(v6) @signature `Lc/s$a;.a:()Lc/x;` @kind interface;
  #L26e10e.  v1:= temp @kind object;
  #L26e110.  call temp:= `a`(v0, v1) @signature `Lc/a/a/e;.a:(Lc/x;)Lc/z;` @kind interface;
  #L26e116.  v0:= temp @kind object;
  #L26e118.  goto L26e11c;
  #L26e11a.  v0:= 0I;
  #L26e11c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L26e122.  v1:= temp @kind wide;
  #L26e124.  v3:= new `c.a.a.c$a`;
  #L26e128.  call temp:= `a`(v6) @signature `Lc/s$a;.a:()Lc/x;` @kind interface;
  #L26e12e.  v4:= temp @kind object;
  #L26e130.  call `<init>`(v3, v1, v4, v0) @signature `Lc/a/a/c$a;.<init>:(JLc/x;Lc/z;)V` @kind direct;
  #L26e136.  call temp:= `a`(v3) @signature `Lc/a/a/c$a;.a:()Lc/a/a/c;` @kind virtual;
  #L26e13c.  v1:= temp @kind object;
  #L26e13e.  v2:= v1.`c.a.a.c.a` @type ^`c.x` @kind object;
  #L26e142.  v1:= v1.`c.a.a.c.b` @type ^`c.z` @kind object;
  #L26e146.  if v0 == 0 then goto L26e15c;
  #L26e14a.  if v1 != 0 then goto L26e15c;
  #L26e14e.  call temp:= `f`(v0) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e154.  v3:= temp @kind object;
  #L26e156.  call `a`(v3) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L26e15c.  if v2 != 0 then goto L26e1d4;
  #L26e160.  if v1 != 0 then goto L26e1d4;
  #L26e164.  v0:= new `c.z$a`;
  #L26e168.  call `<init>`(v0) @signature `Lc/z$a;.<init>:()V` @kind direct;
  #L26e16e.  call temp:= `a`(v6) @signature `Lc/s$a;.a:()Lc/x;` @kind interface;
  #L26e174.  v6:= temp @kind object;
  #L26e176.  call temp:= `a`(v0, v6) @signature `Lc/z$a;.a:(Lc/x;)Lc/z$a;` @kind virtual;
  #L26e17c.  v6:= temp @kind object;
  #L26e17e.  v0:= `@@c.v.b` @type ^`c.v` @kind object;
  #L26e182.  call temp:= `a`(v6, v0) @signature `Lc/z$a;.a:(Lc/v;)Lc/z$a;` @kind virtual;
  #L26e188.  v6:= temp @kind object;
  #L26e18a.  v0:= 504I;
  #L26e18e.  call temp:= `a`(v6, v0) @signature `Lc/z$a;.a:(I)Lc/z$a;` @kind virtual;
  #L26e194.  v6:= temp @kind object;
  #L26e196.  v0:= "Unsatisfiable Request (only-if-cached)" @kind object;
  #L26e19a.  call temp:= `a`(v6, v0) @signature `Lc/z$a;.a:(Ljava/lang/String;)Lc/z$a;` @kind virtual;
  #L26e1a0.  v6:= temp @kind object;
  #L26e1a2.  v0:= `@@c.a.c.c` @type ^`c.aa` @kind object;
  #L26e1a6.  call temp:= `a`(v6, v0) @signature `Lc/z$a;.a:(Lc/aa;)Lc/z$a;` @kind virtual;
  #L26e1ac.  v6:= temp @kind object;
  #L26e1ae.  v0:= -1L;
  #L26e1b2.  call temp:= `a`(v6, v0) @signature `Lc/z$a;.a:(J)Lc/z$a;` @kind virtual;
  #L26e1b8.  v6:= temp @kind object;
  #L26e1ba.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L26e1c0.  v0:= temp @kind wide;
  #L26e1c2.  call temp:= `b`(v6, v0) @signature `Lc/z$a;.b:(J)Lc/z$a;` @kind virtual;
  #L26e1c8.  v6:= temp @kind object;
  #L26e1ca.  call temp:= `a`(v6) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e1d0.  v6:= temp @kind object;
  #L26e1d2.  return v6 @kind object;
  #L26e1d4.  if v2 != 0 then goto L26e1fa;
  #L26e1d8.  call temp:= `g`(v1) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e1de.  v6:= temp @kind object;
  #L26e1e0.  call temp:= `a`(v1) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @kind static;
  #L26e1e6.  v0:= temp @kind object;
  #L26e1e8.  call temp:= `b`(v6, v0) @signature `Lc/z$a;.b:(Lc/z;)Lc/z$a;` @kind virtual;
  #L26e1ee.  v6:= temp @kind object;
  #L26e1f0.  call temp:= `a`(v6) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e1f6.  v6:= temp @kind object;
  #L26e1f8.  return v6 @kind object;
  #L26e1fa.  call temp:= `a`(v6, v2) @signature `Lc/s$a;.a:(Lc/x;)Lc/z;` @kind interface;
  #L26e200.  v6:= temp @kind object;
  #L26e202.  if v6 != 0 then goto L26e218;
  #L26e206.  if v0 == 0 then goto L26e218;
  #L26e20a.  call temp:= `f`(v0) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e210.  v0:= temp @kind object;
  #L26e212.  call `a`(v0) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L26e218.  if v1 == 0 then goto L26e2ba;
  #L26e21c.  call temp:= `b`(v6) @signature `Lc/z;.b:()I` @kind virtual;
  #L26e222.  v0:= temp;
  #L26e224.  v3:= 304I;
  #L26e228.  if v0 != v3 then goto L26e2ac;
  #L26e22c.  call temp:= `g`(v1) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e232.  v0:= temp @kind object;
  #L26e234.  call temp:= `e`(v1) @signature `Lc/z;.e:()Lc/q;` @kind virtual;
  #L26e23a.  v2:= temp @kind object;
  #L26e23c.  call temp:= `e`(v6) @signature `Lc/z;.e:()Lc/q;` @kind virtual;
  #L26e242.  v3:= temp @kind object;
  #L26e244.  call temp:= `a`(v2, v3) @signature `Lc/a/a/a;.a:(Lc/q;Lc/q;)Lc/q;` @kind static;
  #L26e24a.  v2:= temp @kind object;
  #L26e24c.  call temp:= `a`(v0, v2) @signature `Lc/z$a;.a:(Lc/q;)Lc/z$a;` @kind virtual;
  #L26e252.  v0:= temp @kind object;
  #L26e254.  call temp:= `j`(v6) @signature `Lc/z;.j:()J` @kind virtual;
  #L26e25a.  v2:= temp @kind wide;
  #L26e25c.  call temp:= `a`(v0, v2) @signature `Lc/z$a;.a:(J)Lc/z$a;` @kind virtual;
  #L26e262.  v0:= temp @kind object;
  #L26e264.  call temp:= `k`(v6) @signature `Lc/z;.k:()J` @kind virtual;
  #L26e26a.  v2:= temp @kind wide;
  #L26e26c.  call temp:= `b`(v0, v2) @signature `Lc/z$a;.b:(J)Lc/z$a;` @kind virtual;
  #L26e272.  v0:= temp @kind object;
  #L26e274.  call temp:= `a`(v1) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @kind static;
  #L26e27a.  v1:= temp @kind object;
  #L26e27c.  call temp:= `b`(v0, v1) @signature `Lc/z$a;.b:(Lc/z;)Lc/z$a;` @kind virtual;
  #L26e282.  v0:= temp @kind object;
  #L26e284.  call temp:= `a`(v6) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @kind static;
  #L26e28a.  v1:= temp @kind object;
  #L26e28c.  call temp:= `a`(v0, v1) @signature `Lc/z$a;.a:(Lc/z;)Lc/z$a;` @kind virtual;
  #L26e292.  v0:= temp @kind object;
  #L26e294.  call temp:= `a`(v0) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e29a.  v0:= temp @kind object;
  #L26e29c.  call temp:= `f`(v6) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e2a2.  v6:= temp @kind object;
  #L26e2a4.  call `close`(v6) @signature `Lc/aa;.close:()V` @kind virtual;
  #L26e2aa.  return v0 @kind object;
  #L26e2ac.  call temp:= `f`(v1) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e2b2.  v0:= temp @kind object;
  #L26e2b4.  call `a`(v0) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L26e2ba.  call temp:= `g`(v6) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L26e2c0.  v0:= temp @kind object;
  #L26e2c2.  call temp:= `a`(v1) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @kind static;
  #L26e2c8.  v1:= temp @kind object;
  #L26e2ca.  call temp:= `b`(v0, v1) @signature `Lc/z$a;.b:(Lc/z;)Lc/z$a;` @kind virtual;
  #L26e2d0.  v0:= temp @kind object;
  #L26e2d2.  call temp:= `a`(v6) @signature `Lc/a/a/a;.a:(Lc/z;)Lc/z;` @kind static;
  #L26e2d8.  v6:= temp @kind object;
  #L26e2da.  call temp:= `a`(v0, v6) @signature `Lc/z$a;.a:(Lc/z;)Lc/z$a;` @kind virtual;
  #L26e2e0.  v6:= temp @kind object;
  #L26e2e2.  call temp:= `a`(v6) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26e2e8.  v6:= temp @kind object;
  #L26e2ea.  v0:= v5.`c.a.a.a.a` @type ^`c.a.a.e` @kind object;
  #L26e2ee.  if v0 == 0 then goto L26e32e;
  #L26e2f2.  call temp:= `b`(v6) @signature `Lc/a/c/e;.b:(Lc/z;)Z` @kind static;
  #L26e2f8.  v0:= temp;
  #L26e2fa.  if v0 == 0 then goto L26e320;
  #L26e2fe.  call temp:= `a`(v6, v2) @signature `Lc/a/a/c;.a:(Lc/z;Lc/x;)Z` @kind static;
  #L26e304.  v0:= temp;
  #L26e306.  if v0 == 0 then goto L26e320;
  #L26e30a.  v0:= v5.`c.a.a.a.a` @type ^`c.a.a.e` @kind object;
  #L26e30e.  call temp:= `a`(v0, v6) @signature `Lc/a/a/e;.a:(Lc/z;)Lc/a/a/b;` @kind interface;
  #L26e314.  v0:= temp @kind object;
  #L26e316.  call temp:= `a`(v5, v0, v6) @signature `Lc/a/a/a;.a:(Lc/a/a/b;Lc/z;)Lc/z;` @kind direct;
  #L26e31c.  v6:= temp @kind object;
  #L26e31e.  return v6 @kind object;
  #L26e320.  call temp:= `b`(v2) @signature `Lc/x;.b:()Ljava/lang/String;` @kind virtual;
  #L26e326.  v0:= temp @kind object;
  #L26e328.  call temp:= `a`(v0) @signature `Lc/a/c/f;.a:(Ljava/lang/String;)Z` @kind static;
  #L26e32e.  return v6 @kind object;
  #L26e330.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26e332.  if v0 == 0 then goto L26e344;
  #L26e336.  call temp:= `f`(v0) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L26e33c.  v0:= temp @kind object;
  #L26e33e.  call `a`(v0) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L26e344.  throw v6;
  catch `java.lang.Throwable` @[L26e1fa..L26e202] goto L26e330;
}
