record `c.a.h.a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.concurrent.atomic.AtomicBoolean` `c.a.h.a.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.CountDownLatch` `c.a.h.a.f` @AccessFlag PRIVATE_FINAL;
  `byte`[] `c.a.h.a.g` @AccessFlag PRIVATE;
  `byte`[] `c.a.h.a.h` @AccessFlag PRIVATE;
}
global `byte`[] `@@c.a.h.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@c.a.h.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@c.a.h.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `c.a.h.a` `@@c.a.h.a.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/h/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L27d3f0.  v0:= 1I;
  #L27d3f2.  v0:= new `byte`[v0];
  #L27d3f6.  v1:= 0I;
  #L27d3f8.  v2:= 42I;
  #L27d3fc.  v0[v1]:= v2 @kind byte;
  #L27d400.  `@@c.a.h.a.a` @type ^`byte`[] := v0 @kind object;
  #L27d404.  v0:= new `java.lang.String`[v1];
  #L27d408.  `@@c.a.h.a.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L27d40c.  v0:= "*" @kind object;
  #L27d410.  temp:= new `java.lang.String`[v0];
  #L27d416.  v0:= temp @kind object;
  #L27d418.  `@@c.a.h.a.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L27d41c.  v0:= new `c.a.h.a`;
  #L27d420.  call `<init>`(v0) @signature `Lc/a/h/a;.<init>:()V` @kind direct;
  #L27d426.  `@@c.a.h.a.d` @type ^`c.a.h.a` := v0 @kind object;
  #L27d42a.  return @kind void;
}
procedure `void` `<init>`(`c.a.h.a` v2 @kind this) @signature `Lc/a/h/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L27d43c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27d442.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L27d446.  v1:= 0I;
  #L27d448.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L27d44e.  v2.`c.a.h.a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L27d452.  v0:= new `java.util.concurrent.CountDownLatch`;
  #L27d456.  v1:= 1I;
  #L27d458.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L27d45e.  v2.`c.a.h.a.f` @type ^`java.util.concurrent.CountDownLatch` := v0 @kind object;
  #L27d462.  return @kind void;
}
procedure `c.a.h.a` `a`() @signature `Lc/a/h/a;.a:()Lc/a/h/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27d024.  v0:= `@@c.a.h.a.d` @type ^`c.a.h.a` @kind object;
  #L27d028.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v16 @kind object, `byte`[][] v17 @kind object, `int` v18 ) @signature `Lc/a/h/a;.a:([B[[BI)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L27d03c.  v0:= v16 @kind object;
  #L27d040.  v1:= v17 @kind object;
  #L27d044.  v2:= length @variable v0;
  #L27d046.  v3:= 0I;
  #L27d048.  v4:= v2;
  #L27d04a.  v2:= 0I;
  #L27d04c.  if v2 >= v4 then goto L27d14e;
  #L27d050.  v5:= v2 + v4 @kind int;
  #L27d054.  v5:= v5 / 2;
  #L27d058.  v6:= 10I;
  #L27d05c.  v7:= -1I;
  #L27d05e.  if v5 <= v7 then goto L27d070;
  #L27d062.  v8:= v0[v5] @kind byte;
  #L27d066.  if v8 == v6 then goto L27d070;
  #L27d06a.  v5:= v5 + -1;
  #L27d06e.  goto L27d058;
  #L27d070.  v5:= v5 + 1;
  #L27d074.  v8:= 1I;
  #L27d076.  v9:= 1I;
  #L27d078.  v10:= v5 + v9 @kind int;
  #L27d07c.  v11:= v0[v10] @kind byte;
  #L27d080.  if v11 == v6 then goto L27d08a;
  #L27d084.  v9:= v9 + 1;
  #L27d088.  goto L27d078;
  #L27d08a.  v6:= v10 - v5 @kind int;
  #L27d08e.  v11:= v18;
  #L27d092.  v9:= 0I;
  #L27d094.  v12:= 0I;
  #L27d096.  v13:= 0I;
  #L27d098.  if v9 == 0 then goto L27d0a8;
  #L27d09c.  v9:= 46I;
  #L27d0a0.  v9:= 0I;
  #L27d0a2.  v14:= 46I;
  #L27d0a6.  goto L27d0b4;
  #L27d0a8.  v14:= v1[v11] @kind object;
  #L27d0ac.  v14:= v14[v12] @kind byte;
  #L27d0b0.  v14:= v14 ^& 255;
  #L27d0b4.  v15:= v5 + v13 @kind int;
  #L27d0b8.  v15:= v0[v15] @kind byte;
  #L27d0bc.  v15:= v15 ^& 255;
  #L27d0c0.  v14:= v14 - v15 @kind int;
  #L27d0c2.  if v14 == 0 then goto L27d0c8;
  #L27d0c6.  goto L27d0e8;
  #L27d0c8.  v13:= v13 + 1;
  #L27d0cc.  v12:= v12 + 1;
  #L27d0d0.  if v13 != v6 then goto L27d0d6;
  #L27d0d4.  goto L27d0e8;
  #L27d0d6.  v15:= v1[v11] @kind object;
  #L27d0da.  v15:= length @variable v15;
  #L27d0dc.  if v15 != v12 then goto L27d098;
  #L27d0e0.  v9:= length @variable v1;
  #L27d0e2.  v9:= v9 - v8 @kind int;
  #L27d0e4.  if v11 != v9 then goto L27d144;
  #L27d0e8.  if v14 >= 0 then goto L27d0f4;
  #L27d0ec.  v5:= v5 + -1;
  #L27d0f0.  v4:= v5;
  #L27d0f2.  goto L27d04c;
  #L27d0f4.  if v14 <= 0 then goto L27d100;
  #L27d0f8.  v10:= v10 + 1;
  #L27d0fc.  v2:= v10;
  #L27d0fe.  goto L27d04c;
  #L27d100.  v7:= v6 - v13 @kind int;
  #L27d104.  v8:= v1[v11] @kind object;
  #L27d108.  v8:= length @variable v8;
  #L27d10a.  v8:= v8 - v12 @kind int;
  #L27d10c.  v11:= v11 + 1;
  #L27d110.  v9:= length @variable v1;
  #L27d112.  if v11 >= v9 then goto L27d120;
  #L27d116.  v9:= v1[v11] @kind object;
  #L27d11a.  v9:= length @variable v9;
  #L27d11c.  v8:= v8 + v9 @kind int;
  #L27d11e.  goto L27d10c;
  #L27d120.  if v8 >= v7 then goto L27d12a;
  #L27d124.  v5:= v5 + -1;
  #L27d128.  goto L27d0f0;
  #L27d12a.  if v8 <= v7 then goto L27d134;
  #L27d12e.  v10:= v10 + 1;
  #L27d132.  goto L27d0fc;
  #L27d134.  v1:= new `java.lang.String`;
  #L27d138.  v2:= `@@c.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L27d13c.  call `<init>`(v1, v0, v5, v6, v2) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L27d142.  goto L27d150;
  #L27d144.  v11:= v11 + 1;
  #L27d148.  v9:= 1I;
  #L27d14a.  v12:= -1I;
  #L27d14c.  goto L27d098;
  #L27d14e.  v1:= 0I;
  #L27d150.  return v1 @kind object;
}
procedure `java.lang.String`[] `a`(`c.a.h.a` v7 @kind this, `java.lang.String`[] v8 @kind object) @signature `Lc/a/h/a;.a:([Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27d23c.  v0:= v7.`c.a.h.a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L27d240.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L27d246.  v0:= temp;
  #L27d248.  v1:= 0I;
  #L27d24a.  v2:= 1I;
  #L27d24c.  if v0 != 0 then goto L27d268;
  #L27d250.  v0:= v7.`c.a.h.a.e` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L27d254.  call temp:= `compareAndSet`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.compareAndSet:(ZZ)Z` @kind virtual;
  #L27d25a.  v0:= temp;
  #L27d25c.  if v0 == 0 then goto L27d268;
  #L27d260.  call `b`(v7) @signature `Lc/a/h/a;.b:()V` @kind direct;
  #L27d266.  goto L27d272;
  #L27d268.  v0:= v7.`c.a.h.a.f` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L27d26c.  call `await`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.await:()V` @kind virtual;
  #L27d272.  @monitorenter v7
  #L27d274.  v0:= v7.`c.a.h.a.g` @type ^`byte`[] @kind object;
  #L27d278.  if v0 != 0 then goto L27d28c;
  #L27d27c.  v8:= new `java.lang.IllegalStateException`;
  #L27d280.  v0:= "Unable to load publicsuffixes.gz resource from the classpath." @kind object;
  #L27d284.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27d28a.  throw v8;
  #L27d28c.  @monitorexit v7
  #L27d28e.  v0:= length @variable v8;
  #L27d290.  v0:= new `byte`[][v0];
  #L27d294.  v3:= 0I;
  #L27d296.  v4:= length @variable v8;
  #L27d298.  if v3 >= v4 then goto L27d2b6;
  #L27d29c.  v4:= v8[v3] @kind object;
  #L27d2a0.  v5:= `@@c.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L27d2a4.  call temp:= `getBytes`(v4, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L27d2aa.  v4:= temp @kind object;
  #L27d2ac.  v0[v3]:= v4 @kind object;
  #L27d2b0.  v3:= v3 + 1;
  #L27d2b4.  goto L27d296;
  #L27d2b6.  v8:= 0I;
  #L27d2b8.  v3:= length @variable v0;
  #L27d2ba.  v4:= 0I;
  #L27d2bc.  if v8 >= v3 then goto L27d2d8;
  #L27d2c0.  v3:= v7.`c.a.h.a.g` @type ^`byte`[] @kind object;
  #L27d2c4.  call temp:= `a`(v3, v0, v8) @signature `Lc/a/h/a;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L27d2ca.  v3:= temp @kind object;
  #L27d2cc.  if v3 == 0 then goto L27d2d2;
  #L27d2d0.  goto L27d2da;
  #L27d2d2.  v8:= v8 + 1;
  #L27d2d6.  goto L27d2b8;
  #L27d2d8.  v3:= v4 @kind object;
  #L27d2da.  v8:= length @variable v0;
  #L27d2dc.  if v8 <= v2 then goto L27d316;
  #L27d2e0.  call temp:= `clone`(v0) @signature `[[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L27d2e6.  v8:= temp @kind object;
  #L27d2e8.  v8:= (`byte`[][]) v8 @kind object;
  #L27d2ec.  v5:= 0I;
  #L27d2ee.  v6:= length @variable v8;
  #L27d2f0.  v6:= v6 - v2 @kind int;
  #L27d2f2.  if v5 >= v6 then goto L27d316;
  #L27d2f6.  v6:= `@@c.a.h.a.a` @type ^`byte`[] @kind object;
  #L27d2fa.  v8[v5]:= v6 @kind object;
  #L27d2fe.  v6:= v7.`c.a.h.a.g` @type ^`byte`[] @kind object;
  #L27d302.  call temp:= `a`(v6, v8, v5) @signature `Lc/a/h/a;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L27d308.  v6:= temp @kind object;
  #L27d30a.  if v6 == 0 then goto L27d310;
  #L27d30e.  goto L27d318;
  #L27d310.  v5:= v5 + 1;
  #L27d314.  goto L27d2ee;
  #L27d316.  v6:= v4 @kind object;
  #L27d318.  if v6 == 0 then goto L27d33c;
  #L27d31c.  v8:= length @variable v0;
  #L27d31e.  v8:= v8 - v2 @kind int;
  #L27d320.  if v1 >= v8 then goto L27d33c;
  #L27d324.  v8:= v7.`c.a.h.a.h` @type ^`byte`[] @kind object;
  #L27d328.  call temp:= `a`(v8, v0, v1) @signature `Lc/a/h/a;.a:([B[[BI)Ljava/lang/String;` @kind static;
  #L27d32e.  v8:= temp @kind object;
  #L27d330.  if v8 == 0 then goto L27d336;
  #L27d334.  goto L27d33e;
  #L27d336.  v1:= v1 + 1;
  #L27d33a.  goto L27d31c;
  #L27d33c.  v8:= v4 @kind object;
  #L27d33e.  if v8 == 0 then goto L27d372;
  #L27d342.  v0:= new `java.lang.StringBuilder`;
  #L27d346.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d34c.  v1:= "!" @kind object;
  #L27d350.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d356.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d35c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27d362.  v8:= temp @kind object;
  #L27d364.  v0:= "\\." @kind object;
  #L27d368.  call temp:= `split`(v8, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L27d36e.  v8:= temp @kind object;
  #L27d370.  return v8 @kind object;
  #L27d372.  if v3 != 0 then goto L27d380;
  #L27d376.  if v6 != 0 then goto L27d380;
  #L27d37a.  v8:= `@@c.a.h.a.c` @type ^`java.lang.String`[] @kind object;
  #L27d37e.  return v8 @kind object;
  #L27d380.  if v3 == 0 then goto L27d392;
  #L27d384.  v8:= "\\." @kind object;
  #L27d388.  call temp:= `split`(v3, v8) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L27d38e.  v8:= temp @kind object;
  #L27d390.  goto L27d396;
  #L27d392.  v8:= `@@c.a.h.a.b` @type ^`java.lang.String`[] @kind object;
  #L27d396.  if v6 == 0 then goto L27d3a8;
  #L27d39a.  v0:= "\\." @kind object;
  #L27d39e.  call temp:= `split`(v6, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L27d3a4.  v0:= temp @kind object;
  #L27d3a6.  goto L27d3ac;
  #L27d3a8.  v0:= `@@c.a.h.a.b` @type ^`java.lang.String`[] @kind object;
  #L27d3ac.  v1:= length @variable v8;
  #L27d3ae.  v2:= length @variable v0;
  #L27d3b0.  if v1 <= v2 then goto L27d3b6;
  #L27d3b4.  goto L27d3b8;
  #L27d3b6.  v8:= v0 @kind object;
  #L27d3b8.  return v8 @kind object;
  #L27d3ba.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27d3bc.  @monitorexit v7
  #L27d3be.  throw v8;
  catch `java.lang.InterruptedException` @[L27d268..L27d272] goto L27d272;
  catch `java.lang.Throwable` @[L27d274..L27d28e] goto L27d3ba;
  catch `java.lang.Throwable` @[L27d3bc..L27d3be] goto L27d3ba;
}
procedure `void` `b`(`c.a.h.a` v5 @kind this) @signature `Lc/a/h/a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27d474.  v0:= 0I;
  #L27d476.  call `c`(v5) @signature `Lc/a/h/a;.c:()V` @kind direct;
  #L27d47c.  if v0 == 0 then goto L27d48e;
  #L27d480.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L27d486.  v0:= temp @kind object;
  #L27d488.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L27d48e.  return @kind void;
  #L27d490.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27d492.  goto L27d4be;
  #L27d494.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L27d496.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L27d49c.  v2:= temp @kind object;
  #L27d49e.  v3:= 5I;
  #L27d4a0.  v4:= "Failed to read public suffix list" @kind object;
  #L27d4a4.  call `a`(v2, v3, v4, v1) @signature `Lc/a/g/f;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L27d4aa.  if v0 == 0 then goto L27d4bc;
  #L27d4ae.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L27d4b4.  v0:= temp @kind object;
  #L27d4b6.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L27d4bc.  return @kind void;
  #L27d4be.  if v0 == 0 then goto L27d4d0;
  #L27d4c2.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L27d4c8.  v0:= temp @kind object;
  #L27d4ca.  call `interrupt`(v0) @signature `Ljava/lang/Thread;.interrupt:()V` @kind virtual;
  #L27d4d0.  throw v1;
  #L27d4d2.  v0:= 1I;
  #L27d4d4.  goto L27d476;
  catch `java.io.InterruptedIOException` @[L27d476..L27d47c] goto L27d4d2;
  catch `java.io.IOException` @[L27d476..L27d47c] goto L27d494;
  catch `java.lang.Throwable` @[L27d476..L27d47c] goto L27d490;
  catch `java.lang.Throwable` @[L27d496..L27d4aa] goto L27d490;
}
procedure `void` `c`(`c.a.h.a` v3 @kind this) @signature `Lc/a/h/a;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27d504.  v0:= constclass @type ^`c.a.h.a` @kind object;
  #L27d508.  v1:= "publicsuffixes.gz" @kind object;
  #L27d50c.  call temp:= `getResourceAsStream`(v0, v1) @signature `Ljava/lang/Class;.getResourceAsStream:(Ljava/lang/String;)Ljava/io/InputStream;` @kind virtual;
  #L27d512.  v0:= temp @kind object;
  #L27d514.  if v0 != 0 then goto L27d51a;
  #L27d518.  return @kind void;
  #L27d51a.  v1:= new `d.j`;
  #L27d51e.  call temp:= `a`(v0) @signature `Ld/l;.a:(Ljava/io/InputStream;)Ld/s;` @kind static;
  #L27d524.  v0:= temp @kind object;
  #L27d526.  call `<init>`(v1, v0) @signature `Ld/j;.<init>:(Ld/s;)V` @kind direct;
  #L27d52c.  call temp:= `a`(v1) @signature `Ld/l;.a:(Ld/s;)Ld/e;` @kind static;
  #L27d532.  v0:= temp @kind object;
  #L27d534.  call temp:= `i`(v0) @signature `Ld/e;.i:()I` @kind interface;
  #L27d53a.  v1:= temp;
  #L27d53c.  v1:= new `byte`[v1];
  #L27d540.  call `a`(v0, v1) @signature `Ld/e;.a:([B)V` @kind interface;
  #L27d546.  call temp:= `i`(v0) @signature `Ld/e;.i:()I` @kind interface;
  #L27d54c.  v2:= temp;
  #L27d54e.  v2:= new `byte`[v2];
  #L27d552.  call `a`(v0, v2) @signature `Ld/e;.a:([B)V` @kind interface;
  #L27d558.  call `a`(v0) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L27d55e.  @monitorenter v3
  #L27d560.  v3.`c.a.h.a.g` @type ^`byte`[] := v1 @kind object;
  #L27d564.  v3.`c.a.h.a.h` @type ^`byte`[] := v2 @kind object;
  #L27d568.  @monitorexit v3
  #L27d56a.  v0:= v3.`c.a.h.a.f` @type ^`java.util.concurrent.CountDownLatch` @kind object;
  #L27d56e.  call `countDown`(v0) @signature `Ljava/util/concurrent/CountDownLatch;.countDown:()V` @kind virtual;
  #L27d574.  return @kind void;
  #L27d576.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27d578.  @monitorexit v3
  #L27d57a.  throw v0;
  #L27d57c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27d57e.  call `a`(v0) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @kind static;
  #L27d584.  throw v1;
  catch `java.lang.Throwable` @[L27d534..L27d558] goto L27d57c;
  catch `java.lang.Throwable` @[L27d560..L27d56a] goto L27d576;
  catch `java.lang.Throwable` @[L27d578..L27d57a] goto L27d576;
}
procedure `java.lang.String` `a`(`c.a.h.a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lc/a/h/a;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27d164.  if v7 != 0 then goto L27d178;
  #L27d168.  v7:= new `java.lang.NullPointerException`;
  #L27d16c.  v0:= "domain == null" @kind object;
  #L27d170.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27d176.  throw v7;
  #L27d178.  call temp:= `toUnicode`(v7) @signature `Ljava/net/IDN;.toUnicode:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L27d17e.  v0:= temp @kind object;
  #L27d180.  v1:= "\\." @kind object;
  #L27d184.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L27d18a.  v0:= temp @kind object;
  #L27d18c.  call temp:= `a`(v6, v0) @signature `Lc/a/h/a;.a:([Ljava/lang/String;)[Ljava/lang/String;` @kind direct;
  #L27d192.  v1:= temp @kind object;
  #L27d194.  v2:= length @variable v0;
  #L27d196.  v3:= length @variable v1;
  #L27d198.  v4:= 33I;
  #L27d19c.  v5:= 0I;
  #L27d19e.  if v2 != v3 then goto L27d1b6;
  #L27d1a2.  v2:= v1[v5] @kind object;
  #L27d1a6.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27d1ac.  v2:= temp;
  #L27d1ae.  if v2 == v4 then goto L27d1b6;
  #L27d1b2.  v7:= 0I;
  #L27d1b4.  return v7 @kind object;
  #L27d1b6.  v2:= v1[v5] @kind object;
  #L27d1ba.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27d1c0.  v2:= temp;
  #L27d1c2.  if v2 != v4 then goto L27d1ce;
  #L27d1c6.  v0:= length @variable v0;
  #L27d1c8.  v1:= length @variable v1;
  #L27d1ca.  v0:= v0 - v1 @kind int;
  #L27d1cc.  goto L27d1d8;
  #L27d1ce.  v0:= length @variable v0;
  #L27d1d0.  v1:= length @variable v1;
  #L27d1d2.  v1:= v1 + 1;
  #L27d1d6.  v0:= v0 - v1 @kind int;
  #L27d1d8.  v1:= new `java.lang.StringBuilder`;
  #L27d1dc.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d1e2.  v2:= "\\." @kind object;
  #L27d1e6.  call temp:= `split`(v7, v2) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L27d1ec.  v7:= temp @kind object;
  #L27d1ee.  v2:= length @variable v7;
  #L27d1f0.  if v0 >= v2 then goto L27d20e;
  #L27d1f4.  v2:= v7[v0] @kind object;
  #L27d1f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d1fe.  v2:= 46I;
  #L27d202.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d208.  v0:= v0 + 1;
  #L27d20c.  goto L27d1ee;
  #L27d20e.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L27d214.  v7:= temp;
  #L27d216.  v7:= v7 + -1;
  #L27d21a.  call temp:= `deleteCharAt`(v1, v7) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d220.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27d226.  v7:= temp @kind object;
  #L27d228.  return v7 @kind object;
}
