record `c.a.e.k` @kind class @AccessFlag  {
  `c.a.e.k$a` `c.a.e.k.d` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@c.a.e.k.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@c.a.e.k.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `c.a.e.k` `@@c.a.e.k.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/e/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L27afa4.  v0:= 256I;
  #L27afa8.  v1:= new `int`[v0];
  #L27afac.  goto L27afd4;
  #L27afb2.  `@@c.a.e.k.a` @type ^`int`[] := v1 @kind object;
  #L27afb6.  v0:= new `byte`[v0];
  #L27afba.  goto L27b3dc;
  #L27afc0.  `@@c.a.e.k.b` @type ^`byte`[] := v0 @kind object;
  #L27afc4.  v0:= new `c.a.e.k`;
  #L27afc8.  call `<init>`(v0) @signature `Lc/a/e/k;.<init>:()V` @kind direct;
  #L27afce.  `@@c.a.e.k.c` @type ^`c.a.e.k` := v0 @kind object;
  #L27afd2.  return @kind void;
  #L27afd4.  v1:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L27b3db.  goto L27afb2;
  #L27b3dc.  v0:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L27b4e3.  goto L27afc0;
}
procedure `void` `<init>`(`c.a.e.k` v1 @kind this) @signature `Lc/a/e/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L27b4f4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27b4fa.  v0:= new `c.a.e.k$a`;
  #L27b4fe.  call `<init>`(v0) @signature `Lc/a/e/k$a;.<init>:()V` @kind direct;
  #L27b504.  v1.`c.a.e.k.d` @type ^`c.a.e.k$a` := v0 @kind object;
  #L27b508.  call `b`(v1) @signature `Lc/a/e/k;.b:()V` @kind direct;
  #L27b50e.  return @kind void;
}
procedure `c.a.e.k` `a`() @signature `Lc/a/e/k;.a:()Lc/a/e/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27af34.  v0:= `@@c.a.e.k.c` @type ^`c.a.e.k` @kind object;
  #L27af38.  return v0 @kind object;
}
procedure `void` `a`(`c.a.e.k` v4 @kind this, `int` v5 , `int` v6 , `byte` v7 ) @signature `Lc/a/e/k;.a:(IIB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27b5ac.  v0:= new `c.a.e.k$a`;
  #L27b5b0.  call `<init>`(v0, v5, v7) @signature `Lc/a/e/k$a;.<init>:(II)V` @kind direct;
  #L27b5b6.  v5:= v4.`c.a.e.k.d` @type ^`c.a.e.k$a` @kind object;
  #L27b5ba.  v1:= 8I;
  #L27b5be.  if v7 <= v1 then goto L27b610;
  #L27b5c2.  v7:= v7 + -8;
  #L27b5c6.  v7:= (`byte`) v7 @kind i2b;
  #L27b5c8.  v1:= v6 ^>> v7 @kind int;
  #L27b5cc.  v1:= v1 ^& 255;
  #L27b5d0.  v2:= v5.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27b5d4.  if v2 != 0 then goto L27b5e8;
  #L27b5d8.  v5:= new `java.lang.IllegalStateException`;
  #L27b5dc.  v6:= "invalid dictionary: prefix not unique" @kind object;
  #L27b5e0.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27b5e6.  throw v5;
  #L27b5e8.  v2:= v5.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27b5ec.  v2:= v2[v1] @kind object;
  #L27b5f0.  if v2 != 0 then goto L27b606;
  #L27b5f4.  v2:= v5.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27b5f8.  v3:= new `c.a.e.k$a`;
  #L27b5fc.  call `<init>`(v3) @signature `Lc/a/e/k$a;.<init>:()V` @kind direct;
  #L27b602.  v2[v1]:= v3 @kind object;
  #L27b606.  v5:= v5.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27b60a.  v5:= v5[v1] @kind object;
  #L27b60e.  goto L27b5ba;
  #L27b610.  v1:= v1 - v7 @kind int;
  #L27b612.  v6:= v6 ^< v1 @kind int;
  #L27b614.  v6:= v6 ^& 255;
  #L27b618.  v7:= 1I;
  #L27b61a.  v7:= v7 ^< v1 @kind int;
  #L27b61c.  v1:= v6;
  #L27b61e.  v2:= v6 + v7 @kind int;
  #L27b622.  if v1 >= v2 then goto L27b634;
  #L27b626.  v2:= v5.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27b62a.  v2[v1]:= v0 @kind object;
  #L27b62e.  v1:= v1 + 1;
  #L27b632.  goto L27b61e;
  #L27b634.  return @kind void;
}
procedure `void` `b`(`c.a.e.k` v3 @kind this) @signature `Lc/a/e/k;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27b648.  v0:= 0I;
  #L27b64a.  v1:= `@@c.a.e.k.b` @type ^`byte`[] @kind object;
  #L27b64e.  v1:= length @variable v1;
  #L27b650.  if v0 >= v1 then goto L27b670;
  #L27b654.  v1:= `@@c.a.e.k.a` @type ^`int`[] @kind object;
  #L27b658.  v1:= v1[v0];
  #L27b65c.  v2:= `@@c.a.e.k.b` @type ^`byte`[] @kind object;
  #L27b660.  v2:= v2[v0] @kind byte;
  #L27b664.  call `a`(v3, v0, v1, v2) @signature `Lc/a/e/k;.a:(IIB)V` @kind direct;
  #L27b66a.  v0:= v0 + 1;
  #L27b66e.  goto L27b64a;
  #L27b670.  return @kind void;
}
procedure `int` `a`(`c.a.e.k` v7 @kind this, `d.f` v8 @kind object) @signature `Lc/a/e/k;.a:(Ld/f;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27af4c.  v0:= 0L;
  #L27af50.  v2:= 0I;
  #L27af52.  call temp:= `g`(v8) @signature `Ld/f;.g:()I` @kind virtual;
  #L27af58.  v3:= temp;
  #L27af5a.  if v2 >= v3 then goto L27af80;
  #L27af5e.  call temp:= `a`(v8, v2) @signature `Ld/f;.a:(I)B` @kind virtual;
  #L27af64.  v3:= temp;
  #L27af66.  v3:= v3 ^& 255;
  #L27af6a.  v4:= `@@c.a.e.k.b` @type ^`byte`[] @kind object;
  #L27af6e.  v3:= v4[v3] @kind byte;
  #L27af72.  v3:= (`long`) v3 @kind i2l;
  #L27af74.  v5:= v0 + v3 @kind long;
  #L27af78.  v2:= v2 + 1;
  #L27af7c.  v0:= v5 @kind wide;
  #L27af7e.  goto L27af52;
  #L27af80.  v2:= 7L;
  #L27af84.  v4:= v0 + v2 @kind long;
  #L27af88.  v8:= 3I;
  #L27af8a.  v0:= v4 ^> v8 @kind long;
  #L27af8e.  v8:= (`int`) v0 @kind l2i;
  #L27af90.  return v8;
}
procedure `void` `a`(`c.a.e.k` v10 @kind this, `d.f` v11 @kind object, `d.d` v12 @kind object) @signature `Lc/a/e/k;.a:(Ld/f;Ld/d;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L27b520.  v0:= 0I;
  #L27b522.  v1:= 0L;
  #L27b526.  v3:= 0I;
  #L27b528.  call temp:= `g`(v11) @signature `Ld/f;.g:()I` @kind virtual;
  #L27b52e.  v4:= temp;
  #L27b530.  v5:= 8I;
  #L27b534.  v6:= 255I;
  #L27b538.  if v0 >= v4 then goto L27b57e;
  #L27b53c.  call temp:= `a`(v11, v0) @signature `Ld/f;.a:(I)B` @kind virtual;
  #L27b542.  v4:= temp;
  #L27b544.  v4:= v4 ^& v6 @kind int;
  #L27b546.  v6:= `@@c.a.e.k.a` @type ^`int`[] @kind object;
  #L27b54a.  v6:= v6[v4];
  #L27b54e.  v7:= `@@c.a.e.k.b` @type ^`byte`[] @kind object;
  #L27b552.  v4:= v7[v4] @kind byte;
  #L27b556.  v1:= v1 ^< v4 @kind long;
  #L27b558.  v6:= (`long`) v6 @kind i2l;
  #L27b55a.  v8:= v1 ^| v6 @kind long;
  #L27b55e.  v3:= v3 + v4 @kind int;
  #L27b560.  if v3 < v5 then goto L27b576;
  #L27b564.  v3:= v3 + -8;
  #L27b568.  v1:= v8 ^> v3 @kind long;
  #L27b56c.  v1:= (`int`) v1 @kind l2i;
  #L27b56e.  call temp:= `i`(v12, v1) @signature `Ld/d;.i:(I)Ld/d;` @kind interface;
  #L27b574.  goto L27b560;
  #L27b576.  v0:= v0 + 1;
  #L27b57a.  v1:= v8 @kind wide;
  #L27b57c.  goto L27b528;
  #L27b57e.  if v3 <= 0 then goto L27b59a;
  #L27b582.  v5:= v5 - v3 @kind int;
  #L27b584.  v0:= v1 ^< v5 @kind long;
  #L27b588.  v11:= v6 ^>> v3 @kind int;
  #L27b58c.  v2:= (`long`) v11 @kind i2l;
  #L27b58e.  v4:= v0 ^| v2 @kind long;
  #L27b592.  v11:= (`int`) v4 @kind l2i;
  #L27b594.  call temp:= `i`(v12, v11) @signature `Ld/d;.i:(I)Ld/d;` @kind interface;
  #L27b59a.  return @kind void;
}
procedure `byte`[] `a`(`c.a.e.k` v7 @kind this, `byte`[] v8 @kind object) @signature `Lc/a/e/k;.a:([B)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27ae64.  v0:= new `java.io.ByteArrayOutputStream`;
  #L27ae68.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L27ae6e.  v1:= v7.`c.a.e.k.d` @type ^`c.a.e.k$a` @kind object;
  #L27ae72.  v2:= 0I;
  #L27ae74.  v4:= v1 @kind object;
  #L27ae76.  v1:= 0I;
  #L27ae78.  v3:= 0I;
  #L27ae7a.  v5:= length @variable v8;
  #L27ae7c.  v6:= 8I;
  #L27ae80.  if v2 >= v5 then goto L27aed8;
  #L27ae84.  v5:= v8[v2] @kind byte;
  #L27ae88.  v5:= v5 ^& 255;
  #L27ae8c.  v1:= v1 ^< 8;
  #L27ae90.  v1:= v1 ^| v5 @kind int;
  #L27ae92.  v3:= v3 + 8;
  #L27ae96.  if v3 < v6 then goto L27aed2;
  #L27ae9a.  v5:= v3 + -8;
  #L27ae9e.  v5:= v1 ^>> v5 @kind int;
  #L27aea2.  v5:= v5 ^& 255;
  #L27aea6.  v4:= v4.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27aeaa.  v4:= v4[v5] @kind object;
  #L27aeae.  v5:= v4.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27aeb2.  if v5 != 0 then goto L27aecc;
  #L27aeb6.  v5:= v4.`c.a.e.k$a.b` @type ^`int`;
  #L27aeba.  call `write`(v0, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L27aec0.  v4:= v4.`c.a.e.k$a.c` @type ^`int`;
  #L27aec4.  v3:= v3 - v4 @kind int;
  #L27aec6.  v4:= v7.`c.a.e.k.d` @type ^`c.a.e.k$a` @kind object;
  #L27aeca.  goto L27ae96;
  #L27aecc.  v3:= v3 + -8;
  #L27aed0.  goto L27ae96;
  #L27aed2.  v2:= v2 + 1;
  #L27aed6.  goto L27ae7a;
  #L27aed8.  if v3 <= 0 then goto L27af18;
  #L27aedc.  v8:= v3 - 8;
  #L27aee0.  v8:= v1 ^< v8 @kind int;
  #L27aee4.  v8:= v8 ^& 255;
  #L27aee8.  v2:= v4.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27aeec.  v8:= v2[v8] @kind object;
  #L27aef0.  v2:= v8.`c.a.e.k$a.a` @type ^`c.a.e.k$a`[] @kind object;
  #L27aef4.  if v2 != 0 then goto L27af18;
  #L27aef8.  v2:= v8.`c.a.e.k$a.c` @type ^`int`;
  #L27aefc.  if v2 <= v3 then goto L27af02;
  #L27af00.  goto L27af18;
  #L27af02.  v2:= v8.`c.a.e.k$a.b` @type ^`int`;
  #L27af06.  call `write`(v0, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L27af0c.  v8:= v8.`c.a.e.k$a.c` @type ^`int`;
  #L27af10.  v3:= v3 - v8 @kind int;
  #L27af12.  v4:= v7.`c.a.e.k.d` @type ^`c.a.e.k$a` @kind object;
  #L27af16.  goto L27aed8;
  #L27af18.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L27af1e.  v8:= temp @kind object;
  #L27af20.  return v8 @kind object;
}
