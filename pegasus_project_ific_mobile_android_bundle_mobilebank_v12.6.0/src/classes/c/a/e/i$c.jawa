record `c.a.e.i$c` @kind class @AccessFlag  extends `d.a` @kind class {
  `c.a.e.i` `c.a.e.i$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.a.e.i$c` v0 @kind this, `c.a.e.i` v1 @kind object) @signature `Lc/a/e/i$c;.<init>:(Lc/a/e/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L279de4.  v0.`c.a.e.i$c.a` @type ^`c.a.e.i` := v1 @kind object;
  #L279de8.  call `<init>`(v0) @signature `Ld/a;.<init>:()V` @kind direct;
  #L279dee.  return @kind void;
}
procedure `java.io.IOException` `a`(`c.a.e.i$c` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lc/a/e/i$c;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L279db8.  v0:= new `java.net.SocketTimeoutException`;
  #L279dbc.  v1:= "timeout" @kind object;
  #L279dc0.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L279dc6.  if v3 == 0 then goto L279dd0;
  #L279dca.  call temp:= `initCause`(v0, v3) @signature `Ljava/net/SocketTimeoutException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L279dd0.  return v0 @kind object;
}
procedure `void` `a`(`c.a.e.i$c` v2 @kind this) @signature `Lc/a/e/i$c;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L279e00.  v0:= v2.`c.a.e.i$c.a` @type ^`c.a.e.i` @kind object;
  #L279e04.  v1:= `@@c.a.e.b.f` @type ^`c.a.e.b` @kind object;
  #L279e08.  call `b`(v0, v1) @signature `Lc/a/e/i;.b:(Lc/a/e/b;)V` @kind virtual;
  #L279e0e.  return @kind void;
}
procedure `void` `b`(`c.a.e.i$c` v1 @kind this) @signature `Lc/a/e/i$c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L279e20.  call temp:= `j_`(v1) @signature `Lc/a/e/i$c;.j_:()Z` @kind virtual;
  #L279e26.  v0:= temp;
  #L279e28.  if v0 == 0 then goto L279e38;
  #L279e2c.  v0:= 0I;
  #L279e2e.  call temp:= `a`(v1, v0) @signature `Lc/a/e/i$c;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L279e34.  v0:= temp @kind object;
  #L279e36.  throw v0;
  #L279e38.  return @kind void;
}
