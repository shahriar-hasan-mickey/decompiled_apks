record `c.a.e.g$4` @kind class @AccessFlag  extends `c.a.b` @kind class {
  `int` `c.a.e.g$4.a` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `c.a.e.g$4.c` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `c.a.e.g$4.d` @AccessFlag FINAL_SYNTHETIC;
  `c.a.e.g` `c.a.e.g$4.e` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.a.e.g$4` v0 @kind this, `c.a.e.g` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lc/a/e/g$4;.<init>:(Lc/a/e/g;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2772f4.  v0.`c.a.e.g$4.e` @type ^`c.a.e.g` := v1 @kind object;
  #L2772f8.  v0.`c.a.e.g$4.a` @type ^`int` := v4;
  #L2772fc.  v0.`c.a.e.g$4.c` @type ^`java.util.List` := v5 @kind object;
  #L277300.  v0.`c.a.e.g$4.d` @type ^`boolean` := v6 @kind boolean;
  #L277304.  call `<init>`(v0, v2, v3) @signature `Lc/a/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L27730a.  return @kind void;
}
procedure `void` `c`(`c.a.e.g$4` v4 @kind this) @signature `Lc/a/e/g$4;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27731c.  v0:= v4.`c.a.e.g$4.e` @type ^`c.a.e.g` @kind object;
  #L277320.  v0:= v0.`c.a.e.g.h` @type ^`c.a.e.l` @kind object;
  #L277324.  v1:= v4.`c.a.e.g$4.a` @type ^`int`;
  #L277328.  v2:= v4.`c.a.e.g$4.c` @type ^`java.util.List` @kind object;
  #L27732c.  v3:= v4.`c.a.e.g$4.d` @type ^`boolean` @kind boolean;
  #L277330.  call temp:= `a`(v0, v1, v2, v3) @signature `Lc/a/e/l;.a:(ILjava/util/List;Z)Z` @kind interface;
  #L277336.  v0:= temp;
  #L277338.  if v0 == 0 then goto L277352;
  #L27733c.  v1:= v4.`c.a.e.g$4.e` @type ^`c.a.e.g` @kind object;
  #L277340.  v1:= v1.`c.a.e.g.o` @type ^`c.a.e.j` @kind object;
  #L277344.  v2:= v4.`c.a.e.g$4.a` @type ^`int`;
  #L277348.  v3:= `@@c.a.e.b.f` @type ^`c.a.e.b` @kind object;
  #L27734c.  call `a`(v1, v2, v3) @signature `Lc/a/e/j;.a:(ILc/a/e/b;)V` @kind virtual;
  #L277352.  if v0 != 0 then goto L27735e;
  #L277356.  v0:= v4.`c.a.e.g$4.d` @type ^`boolean` @kind boolean;
  #L27735a.  if v0 == 0 then goto L277388;
  #L27735e.  v0:= v4.`c.a.e.g$4.e` @type ^`c.a.e.g` @kind object;
  #L277362.  @monitorenter v0
  #L277364.  v1:= v4.`c.a.e.g$4.e` @type ^`c.a.e.g` @kind object;
  #L277368.  v1:= v1.`c.a.e.g.q` @type ^`java.util.Set` @kind object;
  #L27736c.  v2:= v4.`c.a.e.g$4.a` @type ^`int`;
  #L277370.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L277376.  v2:= temp @kind object;
  #L277378.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L27737e.  @monitorexit v0
  #L277380.  goto L277388;
  #L277382.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L277384.  @monitorexit v0
  #L277386.  throw v1;
  #L277388.  return @kind void;
  catch `java.io.IOException` @[L27733c..L277364] goto L277388;
  catch `java.lang.Throwable` @[L277364..L277386] goto L277382;
  catch `java.io.IOException` @[L277386..L277388] goto L277388;
}
