record `c.a.e.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `d.f` `@@c.a.e.e.a` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@c.a.e.e.b` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@c.a.e.e.c` @AccessFlag STATIC_FINAL;
global `java.lang.String`[] `@@c.a.e.e.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/e/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2768b4.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L2768b8.  call temp:= `a`(v0) @signature `Ld/f;.a:(Ljava/lang/String;)Ld/f;` @kind static;
  #L2768be.  v0:= temp @kind object;
  #L2768c0.  `@@c.a.e.e.a` @type ^`d.f` := v0 @kind object;
  #L2768c4.  v1:= "DATA" @kind object;
  #L2768c8.  v2:= "HEADERS" @kind object;
  #L2768cc.  v3:= "PRIORITY" @kind object;
  #L2768d0.  v4:= "RST_STREAM" @kind object;
  #L2768d4.  v5:= "SETTINGS" @kind object;
  #L2768d8.  v6:= "PUSH_PROMISE" @kind object;
  #L2768dc.  v7:= "PING" @kind object;
  #L2768e0.  v8:= "GOAWAY" @kind object;
  #L2768e4.  v9:= "WINDOW_UPDATE" @kind object;
  #L2768e8.  v10:= "CONTINUATION" @kind object;
  #L2768ec.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8, v9, v10];
  #L2768f2.  v0:= temp @kind object;
  #L2768f4.  `@@c.a.e.e.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L2768f8.  v0:= 64I;
  #L2768fc.  v0:= new `java.lang.String`[v0];
  #L276900.  `@@c.a.e.e.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L276904.  v0:= 256I;
  #L276908.  v0:= new `java.lang.String`[v0];
  #L27690c.  `@@c.a.e.e.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L276910.  v0:= 0I;
  #L276912.  v1:= 0I;
  #L276914.  v2:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L276918.  v2:= length @variable v2;
  #L27691a.  v3:= 32I;
  #L27691e.  v4:= 1I;
  #L276920.  if v1 >= v2 then goto L27695a;
  #L276924.  v2:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L276928.  v5:= "%8s" @kind object;
  #L27692c.  v4:= new `java.lang.Object`[v4];
  #L276930.  call temp:= `toBinaryString`(v1) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L276936.  v6:= temp @kind object;
  #L276938.  v4[v0]:= v6 @kind object;
  #L27693c.  call temp:= `a`(v5, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L276942.  v4:= temp @kind object;
  #L276944.  v5:= 48I;
  #L276948.  call temp:= `replace`(v4, v3, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L27694e.  v3:= temp @kind object;
  #L276950.  v2[v1]:= v3 @kind object;
  #L276954.  v1:= v1 + 1;
  #L276958.  goto L276914;
  #L27695a.  v1:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L27695e.  v2:= "" @kind object;
  #L276962.  v1[v0]:= v2 @kind object;
  #L276966.  v1:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L27696a.  v2:= "END_STREAM" @kind object;
  #L27696e.  v1[v4]:= v2 @kind object;
  #L276972.  v1:= new `int`[v4];
  #L276976.  v1[v0]:= v4;
  #L27697a.  v2:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L27697e.  v4:= "PADDED" @kind object;
  #L276982.  v5:= 8I;
  #L276986.  v2[v5]:= v4 @kind object;
  #L27698a.  v2:= length @variable v1;
  #L27698c.  v4:= 0I;
  #L27698e.  if v4 >= v2 then goto L2769d2;
  #L276992.  v6:= v1[v4];
  #L276996.  v7:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L27699a.  v8:= v6 ^| 8;
  #L27699e.  v9:= new `java.lang.StringBuilder`;
  #L2769a2.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2769a8.  v10:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L2769ac.  v6:= v10[v6] @kind object;
  #L2769b0.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2769b6.  v6:= "|PADDED" @kind object;
  #L2769ba.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2769c0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2769c6.  v6:= temp @kind object;
  #L2769c8.  v7[v8]:= v6 @kind object;
  #L2769cc.  v4:= v4 + 1;
  #L2769d0.  goto L27698e;
  #L2769d2.  v2:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L2769d6.  v4:= 4I;
  #L2769d8.  v6:= "END_HEADERS" @kind object;
  #L2769dc.  v2[v4]:= v6 @kind object;
  #L2769e0.  v2:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L2769e4.  v4:= "PRIORITY" @kind object;
  #L2769e8.  v2[v3]:= v4 @kind object;
  #L2769ec.  v2:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L2769f0.  v3:= 36I;
  #L2769f4.  v4:= "END_HEADERS|PRIORITY" @kind object;
  #L2769f8.  v2[v3]:= v4 @kind object;
  #L2769fc.  v2:= 3I;
  #L2769fe.  v2:= new `int`[v2];
  #L276a02.  goto L276ae8;
  #L276a08.  v3:= length @variable v2;
  #L276a0a.  v4:= 0I;
  #L276a0c.  if v4 >= v3 then goto L276ab8;
  #L276a10.  v6:= v2[v4];
  #L276a14.  v7:= length @variable v1;
  #L276a16.  v8:= 0I;
  #L276a18.  if v8 >= v7 then goto L276ab2;
  #L276a1c.  v9:= v1[v8];
  #L276a20.  v10:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a24.  v11:= v9 ^| v6 @kind int;
  #L276a28.  v12:= new `java.lang.StringBuilder`;
  #L276a2c.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L276a32.  v13:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a36.  v13:= v13[v9] @kind object;
  #L276a3a.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a40.  v13:= 124I;
  #L276a44.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a4a.  v14:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a4e.  v14:= v14[v6] @kind object;
  #L276a52.  call temp:= `append`(v12, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a58.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L276a5e.  v12:= temp @kind object;
  #L276a60.  v10[v11]:= v12 @kind object;
  #L276a64.  v10:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a68.  v11:= v11 ^| v5 @kind int;
  #L276a6a.  v12:= new `java.lang.StringBuilder`;
  #L276a6e.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L276a74.  v14:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a78.  v9:= v14[v9] @kind object;
  #L276a7c.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a82.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a88.  v9:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276a8c.  v9:= v9[v6] @kind object;
  #L276a90.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276a96.  v9:= "|PADDED" @kind object;
  #L276a9a.  call temp:= `append`(v12, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276aa0.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L276aa6.  v9:= temp @kind object;
  #L276aa8.  v10[v11]:= v9 @kind object;
  #L276aac.  v8:= v8 + 1;
  #L276ab0.  goto L276a18;
  #L276ab2.  v4:= v4 + 1;
  #L276ab6.  goto L276a0c;
  #L276ab8.  v1:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276abc.  v1:= length @variable v1;
  #L276abe.  if v0 >= v1 then goto L276ae4;
  #L276ac2.  v1:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276ac6.  v1:= v1[v0] @kind object;
  #L276aca.  if v1 != 0 then goto L276ade;
  #L276ace.  v1:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276ad2.  v2:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L276ad6.  v2:= v2[v0] @kind object;
  #L276ada.  v1[v0]:= v2 @kind object;
  #L276ade.  v0:= v0 + 1;
  #L276ae2.  goto L276ab8;
  #L276ae4.  return @kind void;
  #L276ae6.  
  #L276ae8.  v2:= (4I, 32I, 36I) @kind object;
  #L276afb.  goto L276a08;
}
procedure `void` `<init>`(`c.a.e.e` v0 @kind this) @signature `Lc/a/e/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L276b0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L276b12.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lc/a/e/e;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC {
    temp;
    v0;

  #L276738.  v0:= new `java.lang.IllegalArgumentException`;
  #L27673c.  call temp:= `a`(v1, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L276742.  v1:= temp @kind object;
  #L276744.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27674a.  throw v0;
}
procedure `java.lang.String` `a`(`byte` v2 , `byte` v3 ) @signature `Lc/a/e/e;.a:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2767f4.  if v3 != 0 then goto L2767fe;
  #L2767f8.  v2:= "" @kind object;
  #L2767fc.  return v2 @kind object;
  #L2767fe.  goto L276880;
  #L276804.  v0:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276808.  v0:= length @variable v0;
  #L27680a.  if v3 >= v0 then goto L276838;
  #L27680e.  v0:= `@@c.a.e.e.b` @type ^`java.lang.String`[] @kind object;
  #L276812.  v0:= v0[v3] @kind object;
  #L276816.  goto L276840;
  #L276818.  v2:= 1I;
  #L27681a.  if v3 != v2 then goto L276824;
  #L27681e.  v2:= "ACK" @kind object;
  #L276822.  goto L27682c;
  #L276824.  v2:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L276828.  v2:= v2[v3] @kind object;
  #L27682c.  return v2 @kind object;
  #L27682e.  v2:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L276832.  v2:= v2[v3] @kind object;
  #L276836.  return v2 @kind object;
  #L276838.  v0:= `@@c.a.e.e.c` @type ^`java.lang.String`[] @kind object;
  #L27683c.  v0:= v0[v3] @kind object;
  #L276840.  v1:= 5I;
  #L276842.  if v2 != v1 then goto L276860;
  #L276846.  v1:= v3 ^& 4;
  #L27684a.  if v1 == 0 then goto L276860;
  #L27684e.  v2:= "HEADERS" @kind object;
  #L276852.  v3:= "PUSH_PROMISE" @kind object;
  #L276856.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L27685c.  v2:= temp @kind object;
  #L27685e.  return v2 @kind object;
  #L276860.  if v2 != 0 then goto L27687e;
  #L276864.  v2:= v3 ^& 32;
  #L276868.  if v2 == 0 then goto L27687e;
  #L27686c.  v2:= "PRIORITY" @kind object;
  #L276870.  v3:= "COMPRESSED" @kind object;
  #L276874.  call temp:= `replace`(v0, v2, v3) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L27687a.  v2:= temp @kind object;
  #L27687c.  return v2 @kind object;
  #L27687e.  return v0 @kind object;
  #L276880.  switch v2
                  | 2 => goto L27682e
                  | 3 => goto L27682e
                  | 4 => goto L276818
                  | 5 => goto L276804
                  | 6 => goto L276818
                  | 7 => goto L27682e
                  | 8 => goto L27682e
                  | else => goto L276804;
}
procedure `java.lang.String` `a`(`boolean` v5 , `int` v6 , `int` v7 , `byte` v8 , `byte` v9 ) @signature `Lc/a/e/e;.a:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27675c.  v0:= `@@c.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L276760.  v0:= length @variable v0;
  #L276762.  v1:= 0I;
  #L276764.  v2:= 1I;
  #L276766.  if v8 >= v0 then goto L276774;
  #L27676a.  v0:= `@@c.a.e.e.d` @type ^`java.lang.String`[] @kind object;
  #L27676e.  v0:= v0[v8] @kind object;
  #L276772.  goto L276790;
  #L276774.  v0:= "0x%02x" @kind object;
  #L276778.  v3:= new `java.lang.Object`[v2];
  #L27677c.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L276782.  v4:= temp @kind object;
  #L276784.  v3[v1]:= v4 @kind object;
  #L276788.  call temp:= `a`(v0, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27678e.  v0:= temp @kind object;
  #L276790.  call temp:= `a`(v8, v9) @signature `Lc/a/e/e;.a:(BB)Ljava/lang/String;` @kind static;
  #L276796.  v8:= temp @kind object;
  #L276798.  v9:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L27679c.  v3:= 5I;
  #L27679e.  v3:= new `java.lang.Object`[v3];
  #L2767a2.  if v5 == 0 then goto L2767ac;
  #L2767a6.  v5:= "<<" @kind object;
  #L2767aa.  goto L2767b0;
  #L2767ac.  v5:= ">>" @kind object;
  #L2767b0.  v3[v1]:= v5 @kind object;
  #L2767b4.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2767ba.  v5:= temp @kind object;
  #L2767bc.  v3[v2]:= v5 @kind object;
  #L2767c0.  v5:= 2I;
  #L2767c2.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2767c8.  v6:= temp @kind object;
  #L2767ca.  v3[v5]:= v6 @kind object;
  #L2767ce.  v5:= 3I;
  #L2767d0.  v3[v5]:= v0 @kind object;
  #L2767d4.  v5:= 4I;
  #L2767d6.  v3[v5]:= v8 @kind object;
  #L2767da.  call temp:= `a`(v9, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2767e0.  v5:= temp @kind object;
  #L2767e2.  return v5 @kind object;
}
procedure `java.io.IOException` `b`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lc/a/e/e;.b:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC {
    temp;
    v0;

  #L276714.  v0:= new `java.io.IOException`;
  #L276718.  call temp:= `a`(v1, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L27671e.  v1:= temp @kind object;
  #L276720.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L276726.  throw v0;
}
