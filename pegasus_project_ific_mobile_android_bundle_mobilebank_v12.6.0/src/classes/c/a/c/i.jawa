record `c.a.c.i` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.String` `a`(`c.r` v2 @kind object) @signature `Lc/a/c/i;.a:(Lc/r;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2726c0.  call temp:= `h`(v2) @signature `Lc/r;.h:()Ljava/lang/String;` @kind virtual;
  #L2726c6.  v0:= temp @kind object;
  #L2726c8.  call temp:= `j`(v2) @signature `Lc/r;.j:()Ljava/lang/String;` @kind virtual;
  #L2726ce.  v2:= temp @kind object;
  #L2726d0.  if v2 == 0 then goto L2726fc;
  #L2726d4.  v1:= new `java.lang.StringBuilder`;
  #L2726d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2726de.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2726e4.  v0:= 63I;
  #L2726e8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2726ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2726f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2726fa.  v0:= temp @kind object;
  #L2726fc.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`c.x` v2 @kind object, `java.net.Proxy$Type` v3 @kind object) @signature `Lc/a/c/i;.a:(Lc/x;Ljava/net/Proxy$Type;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L272710.  v0:= new `java.lang.StringBuilder`;
  #L272714.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27271a.  call temp:= `b`(v2) @signature `Lc/x;.b:()Ljava/lang/String;` @kind virtual;
  #L272720.  v1:= temp @kind object;
  #L272722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L272728.  v1:= 32I;
  #L27272c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L272732.  call temp:= `b`(v2, v3) @signature `Lc/a/c/i;.b:(Lc/x;Ljava/net/Proxy$Type;)Z` @kind static;
  #L272738.  v3:= temp;
  #L27273a.  if v3 == 0 then goto L27274e;
  #L27273e.  call temp:= `a`(v2) @signature `Lc/x;.a:()Lc/r;` @kind virtual;
  #L272744.  v2:= temp @kind object;
  #L272746.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27274c.  goto L272764;
  #L27274e.  call temp:= `a`(v2) @signature `Lc/x;.a:()Lc/r;` @kind virtual;
  #L272754.  v2:= temp @kind object;
  #L272756.  call temp:= `a`(v2) @signature `Lc/a/c/i;.a:(Lc/r;)Ljava/lang/String;` @kind static;
  #L27275c.  v2:= temp @kind object;
  #L27275e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L272764.  v2:= " HTTP/1.1" @kind object;
  #L272768.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27276e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L272774.  v2:= temp @kind object;
  #L272776.  return v2 @kind object;
}
procedure `boolean` `b`(`c.x` v0 @kind object, `java.net.Proxy$Type` v1 @kind object) @signature `Lc/a/c/i;.b:(Lc/x;Ljava/net/Proxy$Type;)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L272694.  call temp:= `g`(v0) @signature `Lc/x;.g:()Z` @kind virtual;
  #L27269a.  v0:= temp;
  #L27269c.  if v0 != 0 then goto L2726ac;
  #L2726a0.  v0:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L2726a4.  if v1 != v0 then goto L2726ac;
  #L2726a8.  v0:= 1I;
  #L2726aa.  goto L2726ae;
  #L2726ac.  v0:= 0I;
  #L2726ae.  return v0;
}
