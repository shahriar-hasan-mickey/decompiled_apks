record `c.a.c.b` @kind class @AccessFlag PUBLIC_FINAL extends `c.s` @kind interface {
  `boolean` `c.a.c.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.c.b` v0 @kind this, `boolean` v1 ) @signature `Lc/a/c/b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L271d20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L271d26.  v0.`c.a.c.b.a` @type ^`boolean` := v1 @kind boolean;
  #L271d2a.  return @kind void;
}
procedure `c.z` `a`(`c.a.c.b` v11 @kind this, `c.s$a` v12 @kind object) @signature `Lc/a/c/b;.a:(Lc/s$a;)Lc/z;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2719d4.  v12:= (`c.a.c.g`) v12 @kind object;
  #L2719d8.  call temp:= `g`(v12) @signature `Lc/a/c/g;.g:()Lc/a/c/c;` @kind virtual;
  #L2719de.  v0:= temp @kind object;
  #L2719e0.  call temp:= `f`(v12) @signature `Lc/a/c/g;.f:()Lc/a/b/g;` @kind virtual;
  #L2719e6.  v1:= temp @kind object;
  #L2719e8.  call temp:= `e`(v12) @signature `Lc/a/c/g;.e:()Lc/h;` @kind virtual;
  #L2719ee.  v2:= temp @kind object;
  #L2719f0.  v2:= (`c.a.b.c`) v2 @kind object;
  #L2719f4.  call temp:= `a`(v12) @signature `Lc/a/c/g;.a:()Lc/x;` @kind virtual;
  #L2719fa.  v3:= temp @kind object;
  #L2719fc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L271a02.  v4:= temp @kind wide;
  #L271a04.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271a0a.  v6:= temp @kind object;
  #L271a0c.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271a12.  v7:= temp @kind object;
  #L271a14.  call `c`(v6, v7) @signature `Lc/o;.c:(Lc/e;)V` @kind virtual;
  #L271a1a.  call `a`(v0, v3) @signature `Lc/a/c/c;.a:(Lc/x;)V` @kind interface;
  #L271a20.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271a26.  v6:= temp @kind object;
  #L271a28.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271a2e.  v7:= temp @kind object;
  #L271a30.  call `a`(v6, v7, v3) @signature `Lc/o;.a:(Lc/e;Lc/x;)V` @kind virtual;
  #L271a36.  call temp:= `b`(v3) @signature `Lc/x;.b:()Ljava/lang/String;` @kind virtual;
  #L271a3c.  v6:= temp @kind object;
  #L271a3e.  call temp:= `c`(v6) @signature `Lc/a/c/f;.c:(Ljava/lang/String;)Z` @kind static;
  #L271a44.  v6:= temp;
  #L271a46.  v7:= 0I;
  #L271a48.  if v6 == 0 then goto L271b20;
  #L271a4c.  call temp:= `d`(v3) @signature `Lc/x;.d:()Lc/y;` @kind virtual;
  #L271a52.  v6:= temp @kind object;
  #L271a54.  if v6 == 0 then goto L271b20;
  #L271a58.  v6:= "100-continue" @kind object;
  #L271a5c.  v8:= "Expect" @kind object;
  #L271a60.  call temp:= `a`(v3, v8) @signature `Lc/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L271a66.  v8:= temp @kind object;
  #L271a68.  call temp:= `equalsIgnoreCase`(v6, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L271a6e.  v6:= temp;
  #L271a70.  if v6 == 0 then goto L271a9a;
  #L271a74.  call `a`(v0) @signature `Lc/a/c/c;.a:()V` @kind interface;
  #L271a7a.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271a80.  v6:= temp @kind object;
  #L271a82.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271a88.  v7:= temp @kind object;
  #L271a8a.  call `e`(v6, v7) @signature `Lc/o;.e:(Lc/e;)V` @kind virtual;
  #L271a90.  v6:= 1I;
  #L271a92.  call temp:= `a`(v0, v6) @signature `Lc/a/c/c;.a:(Z)Lc/z$a;` @kind interface;
  #L271a98.  v7:= temp @kind object;
  #L271a9a.  if v7 != 0 then goto L271b0e;
  #L271a9e.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271aa4.  v2:= temp @kind object;
  #L271aa6.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271aac.  v6:= temp @kind object;
  #L271aae.  call `d`(v2, v6) @signature `Lc/o;.d:(Lc/e;)V` @kind virtual;
  #L271ab4.  call temp:= `d`(v3) @signature `Lc/x;.d:()Lc/y;` @kind virtual;
  #L271aba.  v2:= temp @kind object;
  #L271abc.  call temp:= `b`(v2) @signature `Lc/y;.b:()J` @kind virtual;
  #L271ac2.  v8:= temp @kind wide;
  #L271ac4.  v2:= new `c.a.c.b$a`;
  #L271ac8.  call temp:= `a`(v0, v3, v8) @signature `Lc/a/c/c;.a:(Lc/x;J)Ld/r;` @kind interface;
  #L271ace.  v6:= temp @kind object;
  #L271ad0.  call `<init>`(v2, v6) @signature `Lc/a/c/b$a;.<init>:(Ld/r;)V` @kind direct;
  #L271ad6.  call temp:= `a`(v2) @signature `Ld/l;.a:(Ld/r;)Ld/d;` @kind static;
  #L271adc.  v6:= temp @kind object;
  #L271ade.  call temp:= `d`(v3) @signature `Lc/x;.d:()Lc/y;` @kind virtual;
  #L271ae4.  v8:= temp @kind object;
  #L271ae6.  call `a`(v8, v6) @signature `Lc/y;.a:(Ld/d;)V` @kind virtual;
  #L271aec.  call `close`(v6) @signature `Ld/d;.close:()V` @kind interface;
  #L271af2.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271af8.  v6:= temp @kind object;
  #L271afa.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271b00.  v8:= temp @kind object;
  #L271b02.  v9:= v2.`c.a.c.b$a.a` @type ^`long` @kind wide;
  #L271b06.  call `a`(v6, v8, v9) @signature `Lc/o;.a:(Lc/e;J)V` @kind virtual;
  #L271b0c.  goto L271b20;
  #L271b0e.  call temp:= `d`(v2) @signature `Lc/a/b/c;.d:()Z` @kind virtual;
  #L271b14.  v2:= temp;
  #L271b16.  if v2 != 0 then goto L271b20;
  #L271b1a.  call `e`(v1) @signature `Lc/a/b/g;.e:()V` @kind virtual;
  #L271b20.  call `b`(v0) @signature `Lc/a/c/c;.b:()V` @kind interface;
  #L271b26.  v2:= 0I;
  #L271b28.  if v7 != 0 then goto L271b4a;
  #L271b2c.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271b32.  v6:= temp @kind object;
  #L271b34.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271b3a.  v7:= temp @kind object;
  #L271b3c.  call `e`(v6, v7) @signature `Lc/o;.e:(Lc/e;)V` @kind virtual;
  #L271b42.  call temp:= `a`(v0, v2) @signature `Lc/a/c/c;.a:(Z)Lc/z$a;` @kind interface;
  #L271b48.  v7:= temp @kind object;
  #L271b4a.  call temp:= `a`(v7, v3) @signature `Lc/z$a;.a:(Lc/x;)Lc/z$a;` @kind virtual;
  #L271b50.  v6:= temp @kind object;
  #L271b52.  call temp:= `c`(v1) @signature `Lc/a/b/g;.c:()Lc/a/b/c;` @kind virtual;
  #L271b58.  v7:= temp @kind object;
  #L271b5a.  call temp:= `c`(v7) @signature `Lc/a/b/c;.c:()Lc/p;` @kind virtual;
  #L271b60.  v7:= temp @kind object;
  #L271b62.  call temp:= `a`(v6, v7) @signature `Lc/z$a;.a:(Lc/p;)Lc/z$a;` @kind virtual;
  #L271b68.  v6:= temp @kind object;
  #L271b6a.  call temp:= `a`(v6, v4) @signature `Lc/z$a;.a:(J)Lc/z$a;` @kind virtual;
  #L271b70.  v6:= temp @kind object;
  #L271b72.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L271b78.  v7:= temp @kind wide;
  #L271b7a.  call temp:= `b`(v6, v7) @signature `Lc/z$a;.b:(J)Lc/z$a;` @kind virtual;
  #L271b80.  v6:= temp @kind object;
  #L271b82.  call temp:= `a`(v6) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L271b88.  v6:= temp @kind object;
  #L271b8a.  call temp:= `b`(v6) @signature `Lc/z;.b:()I` @kind virtual;
  #L271b90.  v7:= temp;
  #L271b92.  v8:= 100I;
  #L271b96.  if v7 != v8 then goto L271bea;
  #L271b9a.  call temp:= `a`(v0, v2) @signature `Lc/a/c/c;.a:(Z)Lc/z$a;` @kind interface;
  #L271ba0.  v2:= temp @kind object;
  #L271ba2.  call temp:= `a`(v2, v3) @signature `Lc/z$a;.a:(Lc/x;)Lc/z$a;` @kind virtual;
  #L271ba8.  v2:= temp @kind object;
  #L271baa.  call temp:= `c`(v1) @signature `Lc/a/b/g;.c:()Lc/a/b/c;` @kind virtual;
  #L271bb0.  v3:= temp @kind object;
  #L271bb2.  call temp:= `c`(v3) @signature `Lc/a/b/c;.c:()Lc/p;` @kind virtual;
  #L271bb8.  v3:= temp @kind object;
  #L271bba.  call temp:= `a`(v2, v3) @signature `Lc/z$a;.a:(Lc/p;)Lc/z$a;` @kind virtual;
  #L271bc0.  v2:= temp @kind object;
  #L271bc2.  call temp:= `a`(v2, v4) @signature `Lc/z$a;.a:(J)Lc/z$a;` @kind virtual;
  #L271bc8.  v2:= temp @kind object;
  #L271bca.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L271bd0.  v3:= temp @kind wide;
  #L271bd2.  call temp:= `b`(v2, v3) @signature `Lc/z$a;.b:(J)Lc/z$a;` @kind virtual;
  #L271bd8.  v2:= temp @kind object;
  #L271bda.  call temp:= `a`(v2) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L271be0.  v6:= temp @kind object;
  #L271be2.  call temp:= `b`(v6) @signature `Lc/z;.b:()I` @kind virtual;
  #L271be8.  v7:= temp;
  #L271bea.  call temp:= `i`(v12) @signature `Lc/a/c/g;.i:()Lc/o;` @kind virtual;
  #L271bf0.  v2:= temp @kind object;
  #L271bf2.  call temp:= `h`(v12) @signature `Lc/a/c/g;.h:()Lc/e;` @kind virtual;
  #L271bf8.  v12:= temp @kind object;
  #L271bfa.  call `a`(v2, v12, v6) @signature `Lc/o;.a:(Lc/e;Lc/z;)V` @kind virtual;
  #L271c00.  v12:= v11.`c.a.c.b.a` @type ^`boolean` @kind boolean;
  #L271c04.  if v12 == 0 then goto L271c2e;
  #L271c08.  v12:= 101I;
  #L271c0c.  if v7 != v12 then goto L271c2e;
  #L271c10.  call temp:= `g`(v6) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L271c16.  v12:= temp @kind object;
  #L271c18.  v0:= `@@c.a.c.c` @type ^`c.aa` @kind object;
  #L271c1c.  call temp:= `a`(v12, v0) @signature `Lc/z$a;.a:(Lc/aa;)Lc/z$a;` @kind virtual;
  #L271c22.  v12:= temp @kind object;
  #L271c24.  call temp:= `a`(v12) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L271c2a.  v12:= temp @kind object;
  #L271c2c.  goto L271c4e;
  #L271c2e.  call temp:= `g`(v6) @signature `Lc/z;.g:()Lc/z$a;` @kind virtual;
  #L271c34.  v12:= temp @kind object;
  #L271c36.  call temp:= `a`(v0, v6) @signature `Lc/a/c/c;.a:(Lc/z;)Lc/aa;` @kind interface;
  #L271c3c.  v0:= temp @kind object;
  #L271c3e.  call temp:= `a`(v12, v0) @signature `Lc/z$a;.a:(Lc/aa;)Lc/z$a;` @kind virtual;
  #L271c44.  v12:= temp @kind object;
  #L271c46.  call temp:= `a`(v12) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L271c4c.  v12:= temp @kind object;
  #L271c4e.  v0:= "close" @kind object;
  #L271c52.  call temp:= `a`(v12) @signature `Lc/z;.a:()Lc/x;` @kind virtual;
  #L271c58.  v2:= temp @kind object;
  #L271c5a.  v3:= "Connection" @kind object;
  #L271c5e.  call temp:= `a`(v2, v3) @signature `Lc/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L271c64.  v2:= temp @kind object;
  #L271c66.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L271c6c.  v0:= temp;
  #L271c6e.  if v0 != 0 then goto L271c8e;
  #L271c72.  v0:= "close" @kind object;
  #L271c76.  v2:= "Connection" @kind object;
  #L271c7a.  call temp:= `a`(v12, v2) @signature `Lc/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L271c80.  v2:= temp @kind object;
  #L271c82.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L271c88.  v0:= temp;
  #L271c8a.  if v0 == 0 then goto L271c94;
  #L271c8e.  call `e`(v1) @signature `Lc/a/b/g;.e:()V` @kind virtual;
  #L271c94.  v0:= 204I;
  #L271c98.  if v7 == v0 then goto L271ca4;
  #L271c9c.  v0:= 205I;
  #L271ca0.  if v7 != v0 then goto L271d0e;
  #L271ca4.  call temp:= `f`(v12) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L271caa.  v0:= temp @kind object;
  #L271cac.  call temp:= `a`(v0) @signature `Lc/aa;.a:()J` @kind virtual;
  #L271cb2.  v0:= temp @kind wide;
  #L271cb4.  v2:= 0L;
  #L271cb8.  v4:= lcmp(v0, v2);
  #L271cbc.  if v4 <= 0 then goto L271d0e;
  #L271cc0.  v0:= new `java.net.ProtocolException`;
  #L271cc4.  v1:= new `java.lang.StringBuilder`;
  #L271cc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L271cce.  v2:= "HTTP " @kind object;
  #L271cd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L271cd8.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L271cde.  v2:= " had non-zero Content-Length: " @kind object;
  #L271ce2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L271ce8.  call temp:= `f`(v12) @signature `Lc/z;.f:()Lc/aa;` @kind virtual;
  #L271cee.  v12:= temp @kind object;
  #L271cf0.  call temp:= `a`(v12) @signature `Lc/aa;.a:()J` @kind virtual;
  #L271cf6.  v2:= temp @kind wide;
  #L271cf8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L271cfe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L271d04.  v12:= temp @kind object;
  #L271d06.  call `<init>`(v0, v12) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L271d0c.  throw v0;
  #L271d0e.  return v12 @kind object;
}
