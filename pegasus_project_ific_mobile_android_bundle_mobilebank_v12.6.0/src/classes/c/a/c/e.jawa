record `c.a.c.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.regex.Pattern` `@@c.a.c.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/c/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L272114.  v0:= " +([^ \"=]*)=(:?\"([^\"]*)\"|([^ \"=]*)) *(:?,|$)" @kind object;
  #L272118.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L27211e.  v0:= temp @kind object;
  #L272120.  `@@c.a.c.e.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L272124.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Lc/a/c/e;.a:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L271fc0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L271fc6.  v0:= temp;
  #L271fc8.  if v3 >= v0 then goto L271fec;
  #L271fcc.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L271fd2.  v0:= temp;
  #L271fd4.  v1:= 32I;
  #L271fd8.  if v0 == v1 then goto L271fe6;
  #L271fdc.  v1:= 9I;
  #L271fe0.  if v0 == v1 then goto L271fe6;
  #L271fe4.  goto L271fec;
  #L271fe6.  v3:= v3 + 1;
  #L271fea.  goto L271fc0;
  #L271fec.  return v3;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `java.lang.String` v4 @kind object) @signature `Lc/a/c/e;.a:(Ljava/lang/String;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L272000.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L272006.  v0:= temp;
  #L272008.  if v3 >= v0 then goto L27202a;
  #L27200c.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L272012.  v0:= temp;
  #L272014.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L27201a.  v0:= temp;
  #L27201c.  v1:= -1I;
  #L27201e.  if v0 == v1 then goto L272024;
  #L272022.  goto L27202a;
  #L272024.  v3:= v3 + 1;
  #L272028.  goto L272000;
  #L27202a.  return v3;
}
procedure `long` `a`(`c.q` v2 @kind object) @signature `Lc/a/c/e;.a:(Lc/q;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L272090.  v0:= "Content-Length" @kind object;
  #L272094.  call temp:= `a`(v2, v0) @signature `Lc/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L27209a.  v2:= temp @kind object;
  #L27209c.  call temp:= `a`(v2) @signature `Lc/a/c/e;.a:(Ljava/lang/String;)J` @kind static;
  #L2720a2.  v0:= temp @kind wide;
  #L2720a4.  return v0 @kind wide;
}
procedure `long` `a`(`c.z` v2 @kind object) @signature `Lc/a/c/e;.a:(Lc/z;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2720b8.  call temp:= `e`(v2) @signature `Lc/z;.e:()Lc/q;` @kind virtual;
  #L2720be.  v2:= temp @kind object;
  #L2720c0.  call temp:= `a`(v2) @signature `Lc/a/c/e;.a:(Lc/q;)J` @kind static;
  #L2720c6.  v0:= temp @kind wide;
  #L2720c8.  return v0 @kind wide;
}
procedure `long` `a`(`java.lang.String` v4 @kind object) @signature `Lc/a/c/e;.a:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2720dc.  v0:= -1L;
  #L2720e0.  if v4 != 0 then goto L2720e6;
  #L2720e4.  return v0 @kind wide;
  #L2720e6.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2720ec.  v2:= temp @kind wide;
  #L2720ee.  return v2 @kind wide;
  #L2720f0.  return v0 @kind wide;
  catch `java.lang.NumberFormatException` @[L2720e6..L2720ee] goto L2720f0;
}
procedure `void` `a`(`c.l` v1 @kind object, `c.r` v2 @kind object, `c.q` v3 @kind object) @signature `Lc/a/c/e;.a:(Lc/l;Lc/r;Lc/q;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L272138.  v0:= `@@c.l.a` @type ^`c.l` @kind object;
  #L27213c.  if v1 != v0 then goto L272142;
  #L272140.  return @kind void;
  #L272142.  call temp:= `parseAll`(v2, v3) @signature `Lc/k;.parseAll:(Lc/r;Lc/q;)Ljava/util/List;` @kind static;
  #L272148.  v3:= temp @kind object;
  #L27214a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L272150.  v0:= temp;
  #L272152.  if v0 == 0 then goto L272158;
  #L272156.  return @kind void;
  #L272158.  call `a`(v1, v2, v3) @signature `Lc/l;.a:(Lc/r;Ljava/util/List;)V` @kind interface;
  #L27215e.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v3 @kind object, `int` v4 ) @signature `Lc/a/c/e;.b:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L27203c.  call temp:= `parseLong`(v3) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L272042.  v0:= temp @kind wide;
  #L272044.  v3:= 2147483647L;
  #L27204a.  v2:= lcmp(v0, v3);
  #L27204e.  if v2 <= 0 then goto L27205a;
  #L272052.  v3:= 2147483647I;
  #L272058.  return v3;
  #L27205a.  v3:= 0L;
  #L27205e.  v2:= lcmp(v0, v3);
  #L272062.  if v2 >= 0 then goto L27206a;
  #L272066.  v3:= 0I;
  #L272068.  return v3;
  #L27206a.  v3:= (`int`) v0 @kind l2i;
  #L27206c.  return v3;
  #L27206e.  return v4;
  catch `java.lang.NumberFormatException` @[L27203c..L272044] goto L27206e;
}
procedure `boolean` `b`(`c.z` v8 @kind object) @signature `Lc/a/c/e;.b:(Lc/z;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L271f28.  call temp:= `a`(v8) @signature `Lc/z;.a:()Lc/x;` @kind virtual;
  #L271f2e.  v0:= temp @kind object;
  #L271f30.  call temp:= `b`(v0) @signature `Lc/x;.b:()Ljava/lang/String;` @kind virtual;
  #L271f36.  v0:= temp @kind object;
  #L271f38.  v1:= "HEAD" @kind object;
  #L271f3c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L271f42.  v0:= temp;
  #L271f44.  v1:= 0I;
  #L271f46.  if v0 == 0 then goto L271f4c;
  #L271f4a.  return v1;
  #L271f4c.  call temp:= `b`(v8) @signature `Lc/z;.b:()I` @kind virtual;
  #L271f52.  v0:= temp;
  #L271f54.  v2:= 100I;
  #L271f58.  v3:= 1I;
  #L271f5a.  if v0 < v2 then goto L271f66;
  #L271f5e.  v2:= 200I;
  #L271f62.  if v0 < v2 then goto L271f78;
  #L271f66.  v2:= 204I;
  #L271f6a.  if v0 == v2 then goto L271f78;
  #L271f6e.  v2:= 304I;
  #L271f72.  if v0 == v2 then goto L271f78;
  #L271f76.  return v3;
  #L271f78.  call temp:= `a`(v8) @signature `Lc/a/c/e;.a:(Lc/z;)J` @kind static;
  #L271f7e.  v4:= temp @kind wide;
  #L271f80.  v6:= -1L;
  #L271f84.  v0:= lcmp(v4, v6);
  #L271f88.  if v0 != 0 then goto L271fac;
  #L271f8c.  v0:= "chunked" @kind object;
  #L271f90.  v2:= "Transfer-Encoding" @kind object;
  #L271f94.  call temp:= `a`(v8, v2) @signature `Lc/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L271f9a.  v8:= temp @kind object;
  #L271f9c.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L271fa2.  v8:= temp;
  #L271fa4.  if v8 == 0 then goto L271faa;
  #L271fa8.  goto L271fac;
  #L271faa.  return v1;
  #L271fac.  return v3;
}
