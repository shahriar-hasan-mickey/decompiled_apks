record `c.a.g.f` @kind class @AccessFlag PUBLIC {
}
global `c.a.g.f` `@@c.a.g.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@c.a.g.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/g/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L27cf24.  call temp:= `b`() @signature `Lc/a/g/f;.b:()Lc/a/g/f;` @kind static;
  #L27cf2a.  v0:= temp @kind object;
  #L27cf2c.  `@@c.a.g.f.a` @type ^`c.a.g.f` := v0 @kind object;
  #L27cf30.  v0:= constclass @type ^`c.u` @kind object;
  #L27cf34.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L27cf3a.  v0:= temp @kind object;
  #L27cf3c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L27cf42.  v0:= temp @kind object;
  #L27cf44.  `@@c.a.g.f.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L27cf48.  return @kind void;
}
procedure `void` `<init>`(`c.a.g.f` v0 @kind this) @signature `Lc/a/g/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27cf5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27cf62.  return @kind void;
}
procedure `java.util.List` `a`(`java.util.List` v5 @kind object) @signature `Lc/a/g/f;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27ce88.  v0:= new `java.util.ArrayList`;
  #L27ce8c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27ce92.  v1:= temp;
  #L27ce94.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L27ce9a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27cea0.  v1:= temp;
  #L27cea2.  v2:= 0I;
  #L27cea4.  if v2 >= v1 then goto L27ced2;
  #L27cea8.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27ceae.  v3:= temp @kind object;
  #L27ceb0.  v3:= (`c.v`) v3 @kind object;
  #L27ceb4.  v4:= `@@c.v.a` @type ^`c.v` @kind object;
  #L27ceb8.  if v3 != v4 then goto L27cebe;
  #L27cebc.  goto L27cecc;
  #L27cebe.  call temp:= `toString`(v3) @signature `Lc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L27cec4.  v3:= temp @kind object;
  #L27cec6.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27cecc.  v2:= v2 + 1;
  #L27ced0.  goto L27cea4;
  #L27ced2.  return v0 @kind object;
}
procedure `c.a.g.f` `b`() @signature `Lc/a/g/f;.b:()Lc/a/g/f;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L27cd80.  call temp:= `a`() @signature `Lc/a/g/a;.a:()Lc/a/g/f;` @kind static;
  #L27cd86.  v0:= temp @kind object;
  #L27cd88.  if v0 == 0 then goto L27cd8e;
  #L27cd8c.  return v0 @kind object;
  #L27cd8e.  call temp:= `d`() @signature `Lc/a/g/f;.d:()Z` @kind static;
  #L27cd94.  v0:= temp;
  #L27cd96.  if v0 == 0 then goto L27cda8;
  #L27cd9a.  call temp:= `b`() @signature `Lc/a/g/b;.b:()Lc/a/g/f;` @kind static;
  #L27cda0.  v0:= temp @kind object;
  #L27cda2.  if v0 == 0 then goto L27cda8;
  #L27cda6.  return v0 @kind object;
  #L27cda8.  call temp:= `b`() @signature `Lc/a/g/c;.b:()Lc/a/g/c;` @kind static;
  #L27cdae.  v0:= temp @kind object;
  #L27cdb0.  if v0 == 0 then goto L27cdb6;
  #L27cdb4.  return v0 @kind object;
  #L27cdb6.  call temp:= `b`() @signature `Lc/a/g/d;.b:()Lc/a/g/f;` @kind static;
  #L27cdbc.  v0:= temp @kind object;
  #L27cdbe.  if v0 == 0 then goto L27cdc4;
  #L27cdc2.  return v0 @kind object;
  #L27cdc4.  v0:= new `c.a.g.f`;
  #L27cdc8.  call `<init>`(v0) @signature `Lc/a/g/f;.<init>:()V` @kind direct;
  #L27cdce.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.util.List` v5 @kind object) @signature `Lc/a/g/f;.b:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27cd0c.  v0:= new `d.c`;
  #L27cd10.  call `<init>`(v0) @signature `Ld/c;.<init>:()V` @kind direct;
  #L27cd16.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27cd1c.  v1:= temp;
  #L27cd1e.  v2:= 0I;
  #L27cd20.  if v2 >= v1 then goto L27cd64;
  #L27cd24.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27cd2a.  v3:= temp @kind object;
  #L27cd2c.  v3:= (`c.v`) v3 @kind object;
  #L27cd30.  v4:= `@@c.v.a` @type ^`c.v` @kind object;
  #L27cd34.  if v3 != v4 then goto L27cd3a;
  #L27cd38.  goto L27cd5e;
  #L27cd3a.  call temp:= `toString`(v3) @signature `Lc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L27cd40.  v4:= temp @kind object;
  #L27cd42.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27cd48.  v4:= temp;
  #L27cd4a.  call temp:= `b`(v0, v4) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L27cd50.  call temp:= `toString`(v3) @signature `Lc/v;.toString:()Ljava/lang/String;` @kind virtual;
  #L27cd56.  v3:= temp @kind object;
  #L27cd58.  call temp:= `a`(v0, v3) @signature `Ld/c;.a:(Ljava/lang/String;)Ld/c;` @kind virtual;
  #L27cd5e.  v2:= v2 + 1;
  #L27cd62.  goto L27cd20;
  #L27cd64.  call temp:= `p`(v0) @signature `Ld/c;.p:()[B` @kind virtual;
  #L27cd6a.  v5:= temp @kind object;
  #L27cd6c.  return v5 @kind object;
}
procedure `c.a.g.f` `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L27cde0.  v0:= `@@c.a.g.f.a` @type ^`c.a.g.f` @kind object;
  #L27cde4.  return v0 @kind object;
}
procedure `boolean` `d`() @signature `Lc/a/g/f;.d:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L27ccb8.  v0:= "conscrypt" @kind object;
  #L27ccbc.  v1:= "okhttp.platform" @kind object;
  #L27ccc0.  call temp:= `getProperty`(v1) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L27ccc6.  v1:= temp @kind object;
  #L27ccc8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27ccce.  v0:= temp;
  #L27ccd0.  if v0 == 0 then goto L27ccd8;
  #L27ccd4.  v0:= 1I;
  #L27ccd6.  return v0;
  #L27ccd8.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L27ccde.  v0:= temp @kind object;
  #L27cce0.  v1:= 0I;
  #L27cce2.  v0:= v0[v1] @kind object;
  #L27cce6.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L27ccec.  v0:= temp @kind object;
  #L27ccee.  v1:= "Conscrypt" @kind object;
  #L27ccf2.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27ccf8.  v0:= temp;
  #L27ccfa.  return v0;
}
procedure `c.a.i.c` `a`(`c.a.g.f` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27cdf8.  v0:= new `c.a.i.a`;
  #L27cdfc.  call temp:= `b`(v1, v2) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/e;` @kind virtual;
  #L27ce02.  v2:= temp @kind object;
  #L27ce04.  call `<init>`(v0, v2) @signature `Lc/a/i/a;.<init>:(Lc/a/i/e;)V` @kind direct;
  #L27ce0a.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`c.a.g.f` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lc/a/g/f;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27ce40.  v0:= `@@c.a.g.f.b` @type ^`java.util.logging.Logger` @kind object;
  #L27ce44.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L27ce48.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L27ce4e.  v0:= temp;
  #L27ce50.  if v0 == 0 then goto L27ce60;
  #L27ce54.  v0:= new `java.lang.Throwable`;
  #L27ce58.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27ce5e.  return v0 @kind object;
  #L27ce60.  v3:= 0I;
  #L27ce62.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`c.a.g.f` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L27ce74.  v1:= 0I;
  #L27ce76.  return v1 @kind object;
}
procedure `void` `a`(`c.a.g.f` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lc/a/g/f;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27cf74.  v0:= 5I;
  #L27cf76.  if v2 != v0 then goto L27cf80;
  #L27cf7a.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L27cf7e.  goto L27cf84;
  #L27cf80.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L27cf84.  v0:= `@@c.a.g.f.b` @type ^`java.util.logging.Logger` @kind object;
  #L27cf88.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L27cf8e.  return @kind void;
}
procedure `void` `a`(`c.a.g.f` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lc/a/g/f;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27cfa0.  if v3 != 0 then goto L27cfc6;
  #L27cfa4.  v0:= new `java.lang.StringBuilder`;
  #L27cfa8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27cfae.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27cfb4.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L27cfb8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27cfbe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27cfc4.  v2:= temp @kind object;
  #L27cfc6.  v0:= 5I;
  #L27cfc8.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L27cfcc.  call `a`(v1, v0, v2, v3) @signature `Lc/a/g/f;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L27cfd2.  return @kind void;
}
procedure `void` `a`(`c.a.g.f` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lc/a/g/f;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L27cfe4.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L27cfea.  return @kind void;
}
procedure `void` `a`(`c.a.g.f` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L27cffc.  return @kind void;
}
procedure `c.a.i.e` `b`(`c.a.g.f` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ce1c.  v0:= new `c.a.i.b`;
  #L27ce20.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L27ce26.  v2:= temp @kind object;
  #L27ce28.  call `<init>`(v0, v2) @signature `Lc/a/i/b;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L27ce2e.  return v0 @kind object;
}
procedure `void` `b`(`c.a.g.f` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L27d010.  return @kind void;
}
procedure `boolean` `b`(`c.a.g.f` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lc/a/g/f;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L27cca4.  v1:= 1I;
  #L27cca6.  return v1;
}
procedure `javax.net.ssl.SSLContext` `n_`(`c.a.g.f` v3 @kind this) @signature `Lc/a/g/f;.n_:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27cee4.  v0:= "TLS" @kind object;
  #L27cee8.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L27ceee.  v0:= temp @kind object;
  #L27cef0.  return v0 @kind object;
  #L27cef2.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L27cef4.  v1:= new `java.lang.IllegalStateException`;
  #L27cef8.  v2:= "No TLS provider" @kind object;
  #L27cefc.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L27cf02.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L27cee4..L27cef0] goto L27cef2;
}
