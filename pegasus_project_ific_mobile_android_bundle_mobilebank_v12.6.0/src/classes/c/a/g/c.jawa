record `c.a.g.c` @kind class @AccessFlag FINAL extends `c.a.g.f` @kind class {
  `java.lang.reflect.Method` `c.a.g.c.a` @AccessFlag FINAL;
  `java.lang.reflect.Method` `c.a.g.c.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.a.g.c` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lc/a/g/c;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27c558.  call `<init>`(v0) @signature `Lc/a/g/f;.<init>:()V` @kind direct;
  #L27c55e.  v0.`c.a.g.c.a` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L27c562.  v0.`c.a.g.c.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L27c566.  return @kind void;
}
procedure `c.a.g.c` `b`() @signature `Lc/a/g/c;.b:()Lc/a/g/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27c490.  v0:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L27c494.  v1:= "setApplicationProtocols" @kind object;
  #L27c498.  v2:= 1I;
  #L27c49a.  v2:= new `java.lang.Class`[v2];
  #L27c49e.  v3:= constclass @type ^`java.lang.String`[] @kind object;
  #L27c4a2.  v4:= 0I;
  #L27c4a4.  v2[v4]:= v3 @kind object;
  #L27c4a8.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27c4ae.  v0:= temp @kind object;
  #L27c4b0.  v1:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L27c4b4.  v2:= "getApplicationProtocol" @kind object;
  #L27c4b8.  v3:= new `java.lang.Class`[v4];
  #L27c4bc.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27c4c2.  v1:= temp @kind object;
  #L27c4c4.  v2:= new `c.a.g.c`;
  #L27c4c8.  call `<init>`(v2, v0, v1) @signature `Lc/a/g/c;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L27c4ce.  return v2 @kind object;
  #L27c4d0.  v0:= 0I;
  #L27c4d2.  return v0 @kind object;
  catch `java.lang.NoSuchMethodException` @[L27c490..L27c4ce] goto L27c4d0;
}
procedure `java.lang.String` `a`(`c.a.g.c` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `Lc/a/g/c;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27c4f4.  v0:= v2.`c.a.g.c.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27c4f8.  v1:= 0I;
  #L27c4fa.  v1:= new `java.lang.Object`[v1];
  #L27c4fe.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c504.  v3:= temp @kind object;
  #L27c506.  v3:= (`java.lang.String`) v3 @kind object;
  #L27c50a.  if v3 == 0 then goto L27c522;
  #L27c50e.  v0:= "" @kind object;
  #L27c512.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27c518.  v0:= temp;
  #L27c51a.  if v0 == 0 then goto L27c520;
  #L27c51e.  goto L27c522;
  #L27c520.  return v3 @kind object;
  #L27c522.  v3:= 0I;
  #L27c524.  return v3 @kind object;
  #L27c526.  v3:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L27c528.  v0:= "unable to get selected protocols" @kind object;
  #L27c52c.  call temp:= `a`(v0, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L27c532.  v3:= temp @kind object;
  #L27c534.  throw v3;
  catch `java.lang.IllegalAccessException` @[L27c4f4..L27c51a] goto L27c526;
  catch `java.lang.reflect.InvocationTargetException` @[L27c4f4..L27c51a] goto L27c526;
}
procedure `void` `a`(`c.a.g.c` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `java.lang.String` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lc/a/g/c;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27c578.  call temp:= `getSSLParameters`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L27c57e.  v6:= temp @kind object;
  #L27c580.  call temp:= `a`(v7) @signature `Lc/a/g/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L27c586.  v7:= temp @kind object;
  #L27c588.  v0:= v4.`c.a.g.c.a` @type ^`java.lang.reflect.Method` @kind object;
  #L27c58c.  v1:= 1I;
  #L27c58e.  v1:= new `java.lang.Object`[v1];
  #L27c592.  v2:= 0I;
  #L27c594.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27c59a.  v3:= temp;
  #L27c59c.  v3:= new `java.lang.String`[v3];
  #L27c5a0.  call temp:= `toArray`(v7, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L27c5a6.  v7:= temp @kind object;
  #L27c5a8.  v1[v2]:= v7 @kind object;
  #L27c5ac.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c5b2.  call `setSSLParameters`(v5, v6) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L27c5b8.  return @kind void;
  #L27c5ba.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L27c5bc.  v6:= "unable to set ssl parameters" @kind object;
  #L27c5c0.  call temp:= `a`(v6, v5) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L27c5c6.  v5:= temp @kind object;
  #L27c5c8.  throw v5;
  catch `java.lang.IllegalAccessException` @[L27c578..L27c5b8] goto L27c5ba;
  catch `java.lang.reflect.InvocationTargetException` @[L27c578..L27c5b8] goto L27c5ba;
}
