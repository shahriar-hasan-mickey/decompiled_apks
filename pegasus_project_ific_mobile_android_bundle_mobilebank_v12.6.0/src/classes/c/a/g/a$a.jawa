record `c.a.g.a$a` @kind class @AccessFlag FINAL extends `c.a.i.c` @kind class {
  `java.lang.Object` `c.a.g.a$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `c.a.g.a$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.g.a$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lc/a/g/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27bb14.  call `<init>`(v0) @signature `Lc/a/i/c;.<init>:()V` @kind direct;
  #L27bb1a.  v0.`c.a.g.a$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L27bb1e.  v0.`c.a.g.a$a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L27bb22.  return @kind void;
}
procedure `java.util.List` `a`(`c.a.g.a$a` v4 @kind this, `java.util.List` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lc/a/g/a$a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27ba80.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27ba86.  v0:= temp;
  #L27ba88.  v0:= new `java.security.cert.X509Certificate`[v0];
  #L27ba8c.  call temp:= `toArray`(v5, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L27ba92.  v5:= temp @kind object;
  #L27ba94.  v5:= (`java.security.cert.X509Certificate`[]) v5 @kind object;
  #L27ba98.  v0:= v4.`c.a.g.a$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27ba9c.  v1:= v4.`c.a.g.a$a.a` @type ^`java.lang.Object` @kind object;
  #L27baa0.  v2:= 3I;
  #L27baa2.  v2:= new `java.lang.Object`[v2];
  #L27baa6.  v3:= 0I;
  #L27baa8.  v2[v3]:= v5 @kind object;
  #L27baac.  v5:= 1I;
  #L27baae.  v3:= "RSA" @kind object;
  #L27bab2.  v2[v5]:= v3 @kind object;
  #L27bab6.  v5:= 2I;
  #L27bab8.  v2[v5]:= v6 @kind object;
  #L27babc.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27bac2.  v5:= temp @kind object;
  #L27bac4.  v5:= (`java.util.List`) v5 @kind object;
  #L27bac8.  return v5 @kind object;
  #L27baca.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L27bacc.  v6:= new `java.lang.AssertionError`;
  #L27bad0.  call `<init>`(v6, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L27bad6.  throw v6;
  #L27bad8.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L27bada.  v6:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L27bade.  call temp:= `getMessage`(v5) @signature `Ljava/lang/reflect/InvocationTargetException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L27bae4.  v0:= temp @kind object;
  #L27bae6.  call `<init>`(v6, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27baec.  call temp:= `initCause`(v6, v5) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L27baf2.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L27ba80..L27bac8] goto L27bad8;
  catch `java.lang.IllegalAccessException` @[L27ba80..L27bac8] goto L27baca;
}
procedure `boolean` `equals`(`c.a.g.a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lc/a/g/a$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L27ba54.  v1:= instanceof @variable v1 @type ^`c.a.g.a$a` @kind boolean;
  #L27ba58.  return v1;
}
procedure `int` `hashCode`(`c.a.g.a$a` v1 @kind this) @signature `Lc/a/g/a$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27ba6c.  v0:= 0I;
  #L27ba6e.  return v0;
}
