record `c.a.g.a$b` @kind class @AccessFlag FINAL extends `c.a.i.e` @kind interface {
  `javax.net.ssl.X509TrustManager` `c.a.g.a$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `c.a.g.a$b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.g.a$b` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lc/a/g/a$b;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27bc24.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27bc2a.  v0.`c.a.g.a$b.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L27bc2e.  v0.`c.a.g.a$b.a` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L27bc32.  return @kind void;
}
procedure `java.security.cert.X509Certificate` `a`(`c.a.g.a$b` v5 @kind this, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lc/a/g/a$b;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27bbbc.  v0:= 0I;
  #L27bbbe.  v1:= v5.`c.a.g.a$b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27bbc2.  v2:= v5.`c.a.g.a$b.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L27bbc6.  v3:= 1I;
  #L27bbc8.  v3:= new `java.lang.Object`[v3];
  #L27bbcc.  v4:= 0I;
  #L27bbce.  v3[v4]:= v6 @kind object;
  #L27bbd2.  call temp:= `invoke`(v1, v2, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27bbd8.  v6:= temp @kind object;
  #L27bbda.  v6:= (`java.security.cert.TrustAnchor`) v6 @kind object;
  #L27bbde.  if v6 == 0 then goto L27bbec;
  #L27bbe2.  call temp:= `getTrustedCert`(v6) @signature `Ljava/security/cert/TrustAnchor;.getTrustedCert:()Ljava/security/cert/X509Certificate;` @kind virtual;
  #L27bbe8.  v6:= temp @kind object;
  #L27bbea.  goto L27bbee;
  #L27bbec.  v6:= v0 @kind object;
  #L27bbee.  return v6 @kind object;
  #L27bbf0.  return v0 @kind object;
  #L27bbf2.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L27bbf4.  v0:= "unable to get issues and signature" @kind object;
  #L27bbf8.  call temp:= `a`(v0, v6) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L27bbfe.  v6:= temp @kind object;
  #L27bc00.  throw v6;
  catch `java.lang.IllegalAccessException` @[L27bbbe..L27bbea] goto L27bbf2;
  catch `java.lang.reflect.InvocationTargetException` @[L27bbbe..L27bbea] goto L27bbf0;
}
procedure `boolean` `equals`(`c.a.g.a$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lc/a/g/a$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27bb34.  v0:= 1I;
  #L27bb36.  if v5 != v4 then goto L27bb3c;
  #L27bb3a.  return v0;
  #L27bb3c.  v1:= instanceof @variable v5 @type ^`c.a.g.a$b` @kind boolean;
  #L27bb40.  v2:= 0I;
  #L27bb42.  if v1 != 0 then goto L27bb48;
  #L27bb46.  return v2;
  #L27bb48.  v5:= (`c.a.g.a$b`) v5 @kind object;
  #L27bb4c.  v1:= v4.`c.a.g.a$b.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L27bb50.  v3:= v5.`c.a.g.a$b.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L27bb54.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27bb5a.  v1:= temp;
  #L27bb5c.  if v1 == 0 then goto L27bb76;
  #L27bb60.  v1:= v4.`c.a.g.a$b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27bb64.  v5:= v5.`c.a.g.a$b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27bb68.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/reflect/Method;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27bb6e.  v5:= temp;
  #L27bb70.  if v5 == 0 then goto L27bb76;
  #L27bb74.  goto L27bb78;
  #L27bb76.  v0:= 0I;
  #L27bb78.  return v0;
}
procedure `int` `hashCode`(`c.a.g.a$b` v2 @kind this) @signature `Lc/a/g/a$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27bb8c.  v0:= v2.`c.a.g.a$b.a` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L27bb90.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L27bb96.  v0:= temp;
  #L27bb98.  v1:= v2.`c.a.g.a$b.b` @type ^`java.lang.reflect.Method` @kind object;
  #L27bb9c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/reflect/Method;.hashCode:()I` @kind virtual;
  #L27bba2.  v1:= temp;
  #L27bba4.  v1:= v1 * 31;
  #L27bba8.  v0:= v0 + v1 @kind int;
  #L27bbaa.  return v0;
}
