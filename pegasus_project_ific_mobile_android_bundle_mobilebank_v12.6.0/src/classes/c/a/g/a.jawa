record `c.a.g.a` @kind class @AccessFlag  extends `c.a.g.f` @kind class {
  `java.lang.Class` `c.a.g.a.a` @AccessFlag PRIVATE_FINAL;
  `c.a.g.e` `c.a.g.a.b` @AccessFlag PRIVATE_FINAL;
  `c.a.g.e` `c.a.g.a.c` @AccessFlag PRIVATE_FINAL;
  `c.a.g.e` `c.a.g.a.d` @AccessFlag PRIVATE_FINAL;
  `c.a.g.e` `c.a.g.a.e` @AccessFlag PRIVATE_FINAL;
  `c.a.g.a$c` `c.a.g.a.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.g.a` v1 @kind this, `java.lang.Class` v2 @kind object, `c.a.g.e` v3 @kind object, `c.a.g.e` v4 @kind object, `c.a.g.e` v5 @kind object, `c.a.g.e` v6 @kind object) @signature `Lc/a/g/a;.<init>:(Ljava/lang/Class;Lc/a/g/e;Lc/a/g/e;Lc/a/g/e;Lc/a/g/e;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L27c13c.  call `<init>`(v1) @signature `Lc/a/g/f;.<init>:()V` @kind direct;
  #L27c142.  call temp:= `a`() @signature `Lc/a/g/a$c;.a:()Lc/a/g/a$c;` @kind static;
  #L27c148.  v0:= temp @kind object;
  #L27c14a.  v1.`c.a.g.a.f` @type ^`c.a.g.a$c` := v0 @kind object;
  #L27c14e.  v1.`c.a.g.a.a` @type ^`java.lang.Class` := v2 @kind object;
  #L27c152.  v1.`c.a.g.a.b` @type ^`c.a.g.e` := v3 @kind object;
  #L27c156.  v1.`c.a.g.a.c` @type ^`c.a.g.e` := v4 @kind object;
  #L27c15a.  v1.`c.a.g.a.d` @type ^`c.a.g.e` := v5 @kind object;
  #L27c15e.  v1.`c.a.g.a.e` @type ^`c.a.g.e` := v6 @kind object;
  #L27c162.  return @kind void;
}
procedure `c.a.g.f` `a`() @signature `Lc/a/g/a;.a:()Lc/a/g/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L27bef0.  v0:= 0I;
  #L27bef2.  v1:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L27bef6.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27befc.  v1:= temp @kind object;
  #L27befe.  v3:= v1 @kind object;
  #L27bf00.  goto L27bf10;
  #L27bf02.  v1:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L27bf06.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27bf0c.  v1:= temp @kind object;
  #L27bf0e.  goto L27befe;
  #L27bf10.  v4:= new `c.a.g.e`;
  #L27bf14.  v1:= "setUseSessionTickets" @kind object;
  #L27bf18.  v2:= 1I;
  #L27bf1a.  v5:= new `java.lang.Class`[v2];
  #L27bf1e.  v6:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L27bf22.  v7:= 0I;
  #L27bf24.  v5[v7]:= v6 @kind object;
  #L27bf28.  call `<init>`(v4, v0, v1, v5) @signature `Lc/a/g/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L27bf2e.  v5:= new `c.a.g.e`;
  #L27bf32.  v1:= "setHostname" @kind object;
  #L27bf36.  v6:= new `java.lang.Class`[v2];
  #L27bf3a.  v8:= constclass @type ^`java.lang.String` @kind object;
  #L27bf3e.  v6[v7]:= v8 @kind object;
  #L27bf42.  call `<init>`(v5, v0, v1, v6) @signature `Lc/a/g/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L27bf48.  call temp:= `b`() @signature `Lc/a/g/a;.b:()Z` @kind static;
  #L27bf4e.  v1:= temp;
  #L27bf50.  if v1 == 0 then goto L27bf8a;
  #L27bf54.  v1:= new `c.a.g.e`;
  #L27bf58.  v6:= constclass @type ^`byte`[] @kind object;
  #L27bf5c.  v8:= "getAlpnSelectedProtocol" @kind object;
  #L27bf60.  v9:= new `java.lang.Class`[v7];
  #L27bf64.  call `<init>`(v1, v6, v8, v9) @signature `Lc/a/g/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L27bf6a.  v6:= new `c.a.g.e`;
  #L27bf6e.  v8:= "setAlpnProtocols" @kind object;
  #L27bf72.  v2:= new `java.lang.Class`[v2];
  #L27bf76.  v9:= constclass @type ^`byte`[] @kind object;
  #L27bf7a.  v2[v7]:= v9 @kind object;
  #L27bf7e.  call `<init>`(v6, v0, v8, v2) @signature `Lc/a/g/e;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L27bf84.  v7:= v6 @kind object;
  #L27bf86.  v6:= v1 @kind object;
  #L27bf88.  goto L27bf8e;
  #L27bf8a.  v6:= v0 @kind object;
  #L27bf8c.  v7:= v6 @kind object;
  #L27bf8e.  v1:= new `c.a.g.a`;
  #L27bf92.  v2:= v1 @kind object;
  #L27bf94.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lc/a/g/a;.<init>:(Ljava/lang/Class;Lc/a/g/e;Lc/a/g/e;Lc/a/g/e;Lc/a/g/e;)V` @kind direct;
  #L27bf9a.  return v1 @kind object;
  #L27bf9c.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L27bef2..L27befe] goto L27bf02;
  catch `java.lang.ClassNotFoundException` @[L27bf02..L27bf9a] goto L27bf9c;
}
procedure `boolean` `a`(`c.a.g.a` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lc/a/g/a;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27bd74.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L27bd78.  v1:= 1I;
  #L27bd7a.  v2:= new `java.lang.Class`[v1];
  #L27bd7e.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L27bd82.  v4:= 0I;
  #L27bd84.  v2[v4]:= v3 @kind object;
  #L27bd88.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27bd8e.  v0:= temp @kind object;
  #L27bd90.  v1:= new `java.lang.Object`[v1];
  #L27bd94.  v1[v4]:= v6 @kind object;
  #L27bd98.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27bd9e.  v0:= temp @kind object;
  #L27bda0.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L27bda4.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L27bdaa.  v0:= temp;
  #L27bdac.  return v0;
  #L27bdae.  call temp:= `b`(v5, v6, v7, v8) @signature `Lc/a/g/a;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L27bdb4.  v6:= temp;
  #L27bdb6.  return v6;
  catch `java.lang.NoSuchMethodException` @[L27bd74..L27bdac] goto L27bdae;
}
procedure `boolean` `b`() @signature `Lc/a/g/a;.b:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L27bdd8.  v0:= "GMSCore_OpenSSL" @kind object;
  #L27bddc.  call temp:= `getProvider`(v0) @signature `Ljava/security/Security;.getProvider:(Ljava/lang/String;)Ljava/security/Provider;` @kind static;
  #L27bde2.  v0:= temp @kind object;
  #L27bde4.  v1:= 1I;
  #L27bde6.  if v0 == 0 then goto L27bdec;
  #L27bdea.  return v1;
  #L27bdec.  v0:= "android.net.Network" @kind object;
  #L27bdf0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27bdf6.  return v1;
  #L27bdf8.  v0:= 0I;
  #L27bdfa.  return v0;
  catch `java.lang.ClassNotFoundException` @[L27bdec..L27bdf6] goto L27bdf8;
}
procedure `boolean` `b`(`c.a.g.a` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lc/a/g/a;.b:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27be98.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L27be9c.  v1:= 0I;
  #L27be9e.  v2:= new `java.lang.Class`[v1];
  #L27bea2.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27bea8.  v5:= temp @kind object;
  #L27beaa.  v0:= new `java.lang.Object`[v1];
  #L27beae.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27beb4.  v5:= temp @kind object;
  #L27beb6.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L27beba.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L27bec0.  v5:= temp;
  #L27bec2.  return v5;
  #L27bec4.  call temp:= `b`(v3, v4) @signature `Lc/a/g/f;.b:(Ljava/lang/String;)Z` @kind super;
  #L27beca.  v4:= temp;
  #L27becc.  return v4;
  catch `java.lang.NoSuchMethodException` @[L27be98..L27bec2] goto L27bec4;
}
procedure `c.a.i.c` `a`(`c.a.g.a` v7 @kind this, `javax.net.ssl.X509TrustManager` v8 @kind object) @signature `Lc/a/g/a;.a:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L27bfcc.  v0:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L27bfd0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27bfd6.  v0:= temp @kind object;
  #L27bfd8.  v1:= 1I;
  #L27bfda.  v2:= new `java.lang.Class`[v1];
  #L27bfde.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L27bfe2.  v4:= 0I;
  #L27bfe4.  v2[v4]:= v3 @kind object;
  #L27bfe8.  call temp:= `getConstructor`(v0, v2) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L27bfee.  v2:= temp @kind object;
  #L27bff0.  v3:= new `java.lang.Object`[v1];
  #L27bff4.  v3[v4]:= v8 @kind object;
  #L27bff8.  call temp:= `newInstance`(v2, v3) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27bffe.  v2:= temp @kind object;
  #L27c000.  v3:= "checkServerTrusted" @kind object;
  #L27c004.  v5:= 3I;
  #L27c006.  v5:= new `java.lang.Class`[v5];
  #L27c00a.  v6:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L27c00e.  v5[v4]:= v6 @kind object;
  #L27c012.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L27c016.  v5[v1]:= v4 @kind object;
  #L27c01a.  v1:= 2I;
  #L27c01c.  v4:= constclass @type ^`java.lang.String` @kind object;
  #L27c020.  v5[v1]:= v4 @kind object;
  #L27c024.  call temp:= `getMethod`(v0, v3, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27c02a.  v0:= temp @kind object;
  #L27c02c.  v1:= new `c.a.g.a$a`;
  #L27c030.  call `<init>`(v1, v2, v0) @signature `Lc/a/g/a$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L27c036.  return v1 @kind object;
  #L27c038.  call temp:= `a`(v7, v8) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/c;` @kind super;
  #L27c03e.  v8:= temp @kind object;
  #L27c040.  return v8 @kind object;
  catch `java.lang.Exception` @[L27bfcc..L27c036] goto L27c038;
}
procedure `java.lang.Object` `a`(`c.a.g.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/a/g/a;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27c0c4.  v0:= v1.`c.a.g.a.f` @type ^`c.a.g.a$c` @kind object;
  #L27c0c8.  call temp:= `a`(v0, v2) @signature `Lc/a/g/a$c;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L27c0ce.  v2:= temp @kind object;
  #L27c0d0.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`c.a.g.a` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lc/a/g/a;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27c0e4.  v0:= v3.`c.a.g.a.d` @type ^`c.a.g.e` @kind object;
  #L27c0e8.  v1:= 0I;
  #L27c0ea.  if v0 != 0 then goto L27c0f0;
  #L27c0ee.  return v1 @kind object;
  #L27c0f0.  v0:= v3.`c.a.g.a.d` @type ^`c.a.g.e` @kind object;
  #L27c0f4.  call temp:= `a`(v0, v4) @signature `Lc/a/g/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L27c0fa.  v0:= temp;
  #L27c0fc.  if v0 != 0 then goto L27c102;
  #L27c100.  return v1 @kind object;
  #L27c102.  v0:= v3.`c.a.g.a.d` @type ^`c.a.g.e` @kind object;
  #L27c106.  v2:= 0I;
  #L27c108.  v2:= new `java.lang.Object`[v2];
  #L27c10c.  call temp:= `d`(v0, v4, v2) @signature `Lc/a/g/e;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c112.  v4:= temp @kind object;
  #L27c114.  v4:= (`byte`[]) v4 @kind object;
  #L27c118.  if v4 == 0 then goto L27c12a;
  #L27c11c.  v1:= new `java.lang.String`;
  #L27c120.  v0:= `@@c.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L27c124.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L27c12a.  return v1 @kind object;
}
procedure `void` `a`(`c.a.g.a` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lc/a/g/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27c174.  v0:= 5I;
  #L27c176.  if v6 != v0 then goto L27c17c;
  #L27c17a.  goto L27c17e;
  #L27c17c.  v0:= 3I;
  #L27c17e.  v6:= 10I;
  #L27c182.  if v8 == 0 then goto L27c1b2;
  #L27c186.  v1:= new `java.lang.StringBuilder`;
  #L27c18a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27c190.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27c196.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L27c19c.  call temp:= `getStackTraceString`(v8) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L27c1a2.  v7:= temp @kind object;
  #L27c1a4.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27c1aa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27c1b0.  v7:= temp @kind object;
  #L27c1b2.  v8:= 0I;
  #L27c1b4.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27c1ba.  v1:= temp;
  #L27c1bc.  if v8 >= v1 then goto L27c1fe;
  #L27c1c0.  call temp:= `indexOf`(v7, v6, v8) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L27c1c6.  v2:= temp;
  #L27c1c8.  v3:= -1I;
  #L27c1ca.  if v2 == v3 then goto L27c1d0;
  #L27c1ce.  goto L27c1d2;
  #L27c1d0.  v2:= v1;
  #L27c1d2.  v3:= v8 + 4000;
  #L27c1d6.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L27c1dc.  v3:= temp;
  #L27c1de.  v4:= "OkHttp" @kind object;
  #L27c1e2.  call temp:= `substring`(v7, v8, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L27c1e8.  v8:= temp @kind object;
  #L27c1ea.  call temp:= `println`(v0, v4, v8) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L27c1f0.  if v3 < v2 then goto L27c1fa;
  #L27c1f4.  v8:= v3 + 1;
  #L27c1f8.  goto L27c1bc;
  #L27c1fa.  v8:= v3;
  #L27c1fc.  goto L27c1d2;
  #L27c1fe.  return @kind void;
}
procedure `void` `a`(`c.a.g.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lc/a/g/a;.a:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27c210.  v0:= v1.`c.a.g.a.f` @type ^`c.a.g.a$c` @kind object;
  #L27c214.  call temp:= `a`(v0, v3) @signature `Lc/a/g/a$c;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L27c21a.  v3:= temp;
  #L27c21c.  if v3 != 0 then goto L27c22a;
  #L27c220.  v3:= 5I;
  #L27c222.  v0:= 0I;
  #L27c224.  call `a`(v1, v3, v2, v0) @signature `Lc/a/g/a;.a:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L27c22a.  return @kind void;
}
procedure `void` `a`(`c.a.g.a` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lc/a/g/a;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L27c23c.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L27c242.  return @kind void;
  #L27c244.  v1:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L27c246.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L27c24a.  v3:= 26I;
  #L27c24e.  if v2 != v3 then goto L27c268;
  #L27c252.  v2:= new `java.io.IOException`;
  #L27c256.  v3:= "Exception in connect" @kind object;
  #L27c25a.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27c260.  call temp:= `initCause`(v2, v1) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L27c266.  throw v2;
  #L27c268.  throw v1;
  #L27c26a.  v1:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L27c26c.  v2:= new `java.io.IOException`;
  #L27c270.  v3:= "Exception in connect" @kind object;
  #L27c274.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27c27a.  call temp:= `initCause`(v2, v1) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L27c280.  throw v2;
  #L27c282.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L27c284.  call temp:= `a`(v1) @signature `Lc/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L27c28a.  v2:= temp;
  #L27c28c.  if v2 == 0 then goto L27c29c;
  #L27c290.  v2:= new `java.io.IOException`;
  #L27c294.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L27c29a.  throw v2;
  #L27c29c.  throw v1;
  catch `java.lang.AssertionError` @[L27c23c..L27c242] goto L27c282;
  catch `java.lang.SecurityException` @[L27c23c..L27c242] goto L27c26a;
  catch `java.lang.ClassCastException` @[L27c23c..L27c242] goto L27c244;
}
procedure `void` `a`(`c.a.g.a` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lc/a/g/a;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L27c2c4.  v0:= 0I;
  #L27c2c6.  v1:= 1I;
  #L27c2c8.  if v7 == 0 then goto L27c2f8;
  #L27c2cc.  v2:= v5.`c.a.g.a.b` @type ^`c.a.g.e` @kind object;
  #L27c2d0.  v3:= new `java.lang.Object`[v1];
  #L27c2d4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L27c2da.  v4:= temp @kind object;
  #L27c2dc.  v3[v0]:= v4 @kind object;
  #L27c2e0.  call temp:= `b`(v2, v6, v3) @signature `Lc/a/g/e;.b:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c2e6.  v2:= v5.`c.a.g.a.c` @type ^`c.a.g.e` @kind object;
  #L27c2ea.  v3:= new `java.lang.Object`[v1];
  #L27c2ee.  v3[v0]:= v7 @kind object;
  #L27c2f2.  call temp:= `b`(v2, v6, v3) @signature `Lc/a/g/e;.b:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c2f8.  v7:= v5.`c.a.g.a.e` @type ^`c.a.g.e` @kind object;
  #L27c2fc.  if v7 == 0 then goto L27c32a;
  #L27c300.  v7:= v5.`c.a.g.a.e` @type ^`c.a.g.e` @kind object;
  #L27c304.  call temp:= `a`(v7, v6) @signature `Lc/a/g/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L27c30a.  v7:= temp;
  #L27c30c.  if v7 == 0 then goto L27c32a;
  #L27c310.  v7:= new `java.lang.Object`[v1];
  #L27c314.  call temp:= `b`(v8) @signature `Lc/a/g/a;.b:(Ljava/util/List;)[B` @kind static;
  #L27c31a.  v8:= temp @kind object;
  #L27c31c.  v7[v0]:= v8 @kind object;
  #L27c320.  v8:= v5.`c.a.g.a.e` @type ^`c.a.g.e` @kind object;
  #L27c324.  call temp:= `d`(v8, v6, v7) @signature `Lc/a/g/e;.d:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27c32a.  return @kind void;
}
procedure `c.a.i.e` `b`(`c.a.g.a` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lc/a/g/a;.b:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27c064.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L27c06a.  v0:= temp @kind object;
  #L27c06c.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L27c070.  v2:= 1I;
  #L27c072.  v3:= new `java.lang.Class`[v2];
  #L27c076.  v4:= 0I;
  #L27c078.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L27c07c.  v3[v4]:= v5 @kind object;
  #L27c080.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27c086.  v0:= temp @kind object;
  #L27c088.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L27c08e.  v1:= new `c.a.g.a$b`;
  #L27c092.  call `<init>`(v1, v7, v0) @signature `Lc/a/g/a$b;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L27c098.  return v1 @kind object;
  #L27c09a.  call temp:= `b`(v6, v7) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/X509TrustManager;)Lc/a/i/e;` @kind super;
  #L27c0a0.  v7:= temp @kind object;
  #L27c0a2.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L27c064..L27c098] goto L27c09a;
}
procedure `boolean` `b`(`c.a.g.a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lc/a/g/a;.b:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27be1c.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L27be20.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L27be26.  v0:= temp @kind object;
  #L27be28.  v1:= "getInstance" @kind object;
  #L27be2c.  v2:= 0I;
  #L27be2e.  v3:= new `java.lang.Class`[v2];
  #L27be32.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L27be38.  v1:= temp @kind object;
  #L27be3a.  v3:= 0I;
  #L27be3c.  v2:= new `java.lang.Object`[v2];
  #L27be40.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L27be46.  v1:= temp @kind object;
  #L27be48.  call temp:= `a`(v4, v5, v0, v1) @signature `Lc/a/g/a;.a:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L27be4e.  v0:= temp;
  #L27be50.  return v0;
  #L27be52.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L27be54.  v0:= "unable to determine cleartext support" @kind object;
  #L27be58.  call temp:= `a`(v0, v5) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @kind static;
  #L27be5e.  v5:= temp @kind object;
  #L27be60.  throw v5;
  #L27be62.  call temp:= `b`(v4, v5) @signature `Lc/a/g/f;.b:(Ljava/lang/String;)Z` @kind super;
  #L27be68.  v5:= temp;
  #L27be6a.  return v5;
  catch `java.lang.ClassNotFoundException` @[L27be1c..L27be50] goto L27be62;
  catch `java.lang.NoSuchMethodException` @[L27be1c..L27be50] goto L27be62;
  catch `java.lang.IllegalAccessException` @[L27be1c..L27be50] goto L27be52;
  catch `java.lang.IllegalArgumentException` @[L27be1c..L27be50] goto L27be52;
  catch `java.lang.reflect.InvocationTargetException` @[L27be1c..L27be50] goto L27be52;
}
