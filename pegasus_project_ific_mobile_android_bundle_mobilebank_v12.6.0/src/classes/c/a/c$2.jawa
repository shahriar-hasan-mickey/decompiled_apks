record `c.a.c$2` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `c.a.c$2.a` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `c.a.c$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.a.c$2` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lc/a/c$2;.<init>:(Ljava/lang/String;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27169c.  v0.`c.a.c$2.a` @type ^`java.lang.String` := v1 @kind object;
  #L2716a0.  v0.`c.a.c$2.b` @type ^`boolean` := v2 @kind boolean;
  #L2716a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2716aa.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`c.a.c$2` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lc/a/c$2;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L271670.  v0:= new `java.lang.Thread`;
  #L271674.  v1:= v2.`c.a.c$2.a` @type ^`java.lang.String` @kind object;
  #L271678.  call `<init>`(v0, v3, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L27167e.  v3:= v2.`c.a.c$2.b` @type ^`boolean` @kind boolean;
  #L271682.  call `setDaemon`(v0, v3) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L271688.  return v0 @kind object;
}
