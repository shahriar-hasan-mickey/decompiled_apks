record `c.a.b.b` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `c.a.b.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `c.a.b.b.b` @AccessFlag PRIVATE;
  `boolean` `c.a.b.b.c` @AccessFlag PRIVATE;
  `boolean` `c.a.b.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.a.b.b` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lc/a/b/b;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L26f2e4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26f2ea.  v0:= 0I;
  #L26f2ec.  v1.`c.a.b.b.b` @type ^`int` := v0;
  #L26f2f0.  v1.`c.a.b.b.a` @type ^`java.util.List` := v2 @kind object;
  #L26f2f4.  return @kind void;
}
procedure `boolean` `b`(`c.a.b.b` v2 @kind this, `javax.net.ssl.SSLSocket` v3 @kind object) @signature `Lc/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L26f1bc.  v0:= v2.`c.a.b.b.b` @type ^`int`;
  #L26f1c0.  v1:= v2.`c.a.b.b.a` @type ^`java.util.List` @kind object;
  #L26f1c4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26f1ca.  v1:= temp;
  #L26f1cc.  if v0 >= v1 then goto L26f1f6;
  #L26f1d0.  v1:= v2.`c.a.b.b.a` @type ^`java.util.List` @kind object;
  #L26f1d4.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26f1da.  v1:= temp @kind object;
  #L26f1dc.  v1:= (`c.j`) v1 @kind object;
  #L26f1e0.  call temp:= `a`(v1, v3) @signature `Lc/j;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L26f1e6.  v1:= temp;
  #L26f1e8.  if v1 == 0 then goto L26f1f0;
  #L26f1ec.  v3:= 1I;
  #L26f1ee.  return v3;
  #L26f1f0.  v0:= v0 + 1;
  #L26f1f4.  goto L26f1c0;
  #L26f1f6.  v3:= 0I;
  #L26f1f8.  return v3;
}
procedure `c.j` `a`(`c.a.b.b` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lc/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)Lc/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f20c.  v0:= v4.`c.a.b.b.b` @type ^`int`;
  #L26f210.  v1:= v4.`c.a.b.b.a` @type ^`java.util.List` @kind object;
  #L26f214.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26f21a.  v1:= temp;
  #L26f21c.  if v0 >= v1 then goto L26f24c;
  #L26f220.  v2:= v4.`c.a.b.b.a` @type ^`java.util.List` @kind object;
  #L26f224.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26f22a.  v2:= temp @kind object;
  #L26f22c.  v2:= (`c.j`) v2 @kind object;
  #L26f230.  call temp:= `a`(v2, v5) @signature `Lc/j;.a:(Ljavax/net/ssl/SSLSocket;)Z` @kind virtual;
  #L26f236.  v3:= temp;
  #L26f238.  if v3 == 0 then goto L26f246;
  #L26f23c.  v0:= v0 + 1;
  #L26f240.  v4.`c.a.b.b.b` @type ^`int` := v0;
  #L26f244.  goto L26f24e;
  #L26f246.  v0:= v0 + 1;
  #L26f24a.  goto L26f21c;
  #L26f24c.  v2:= 0I;
  #L26f24e.  if v2 != 0 then goto L26f2b8;
  #L26f252.  v0:= new `java.net.UnknownServiceException`;
  #L26f256.  v1:= new `java.lang.StringBuilder`;
  #L26f25a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26f260.  v2:= "Unable to find acceptable protocols. isFallback=" @kind object;
  #L26f264.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f26a.  v2:= v4.`c.a.b.b.d` @type ^`boolean` @kind boolean;
  #L26f26e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f274.  v2:= ", modes=" @kind object;
  #L26f278.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f27e.  v2:= v4.`c.a.b.b.a` @type ^`java.util.List` @kind object;
  #L26f282.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f288.  v2:= ", supported protocols=" @kind object;
  #L26f28c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f292.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L26f298.  v5:= temp @kind object;
  #L26f29a.  call temp:= `toString`(v5) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L26f2a0.  v5:= temp @kind object;
  #L26f2a2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f2a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26f2ae.  v5:= temp @kind object;
  #L26f2b0.  call `<init>`(v0, v5) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26f2b6.  throw v0;
  #L26f2b8.  call temp:= `b`(v4, v5) @signature `Lc/a/b/b;.b:(Ljavax/net/ssl/SSLSocket;)Z` @kind direct;
  #L26f2be.  v0:= temp;
  #L26f2c0.  v4.`c.a.b.b.c` @type ^`boolean` := v0 @kind boolean;
  #L26f2c4.  v0:= `@@c.a.a.a` @type ^`c.a.a` @kind object;
  #L26f2c8.  v1:= v4.`c.a.b.b.d` @type ^`boolean` @kind boolean;
  #L26f2cc.  call `a`(v0, v2, v5, v1) @signature `Lc/a/a;.a:(Lc/j;Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L26f2d2.  return v2 @kind object;
}
procedure `boolean` `a`(`c.a.b.b` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lc/a/b/b;.a:(Ljava/io/IOException;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f150.  v0:= 1I;
  #L26f152.  v4.`c.a.b.b.d` @type ^`boolean` := v0 @kind boolean;
  #L26f156.  v1:= v4.`c.a.b.b.c` @type ^`boolean` @kind boolean;
  #L26f15a.  v2:= 0I;
  #L26f15c.  if v1 != 0 then goto L26f162;
  #L26f160.  return v2;
  #L26f162.  v1:= instanceof @variable v5 @type ^`java.net.ProtocolException` @kind boolean;
  #L26f166.  if v1 == 0 then goto L26f16c;
  #L26f16a.  return v2;
  #L26f16c.  v1:= instanceof @variable v5 @type ^`java.io.InterruptedIOException` @kind boolean;
  #L26f170.  if v1 == 0 then goto L26f176;
  #L26f174.  return v2;
  #L26f176.  v1:= instanceof @variable v5 @type ^`javax.net.ssl.SSLHandshakeException` @kind boolean;
  #L26f17a.  if v1 == 0 then goto L26f190;
  #L26f17e.  call temp:= `getCause`(v5) @signature `Ljava/io/IOException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L26f184.  v3:= temp @kind object;
  #L26f186.  v3:= instanceof @variable v3 @type ^`java.security.cert.CertificateException` @kind boolean;
  #L26f18a.  if v3 == 0 then goto L26f190;
  #L26f18e.  return v2;
  #L26f190.  v3:= instanceof @variable v5 @type ^`javax.net.ssl.SSLPeerUnverifiedException` @kind boolean;
  #L26f194.  if v3 == 0 then goto L26f19a;
  #L26f198.  return v2;
  #L26f19a.  if v1 != 0 then goto L26f1aa;
  #L26f19e.  v5:= instanceof @variable v5 @type ^`javax.net.ssl.SSLProtocolException` @kind boolean;
  #L26f1a2.  if v5 == 0 then goto L26f1a8;
  #L26f1a6.  goto L26f1aa;
  #L26f1a8.  v0:= 0I;
  #L26f1aa.  return v0;
}
