record `c.a.b.e` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.RuntimeException` @kind class {
  `java.io.IOException` `c.a.b.e.b` @AccessFlag PRIVATE;
}
global `java.lang.reflect.Method` `@@c.a.b.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/b/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L270414.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L270418.  v1:= "addSuppressed" @kind object;
  #L27041c.  v2:= 1I;
  #L27041e.  v2:= new `java.lang.Class`[v2];
  #L270422.  v3:= 0I;
  #L270424.  v4:= constclass @type ^`java.lang.Throwable` @kind object;
  #L270428.  v2[v3]:= v4 @kind object;
  #L27042c.  call temp:= `getDeclaredMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L270432.  v0:= temp @kind object;
  #L270434.  goto L270438;
  #L270436.  v0:= 0I;
  #L270438.  `@@c.a.b.e.a` @type ^`java.lang.reflect.Method` := v0 @kind object;
  #L27043c.  return @kind void;
  catch `java.lang.Exception` @[L270414..L270434] goto L270436;
}
procedure `void` `<init>`(`c.a.b.e` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lc/a/b/e;.<init>:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L270460.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L270466.  v0.`c.a.b.e.b` @type ^`java.io.IOException` := v1 @kind object;
  #L27046a.  return @kind void;
}
procedure `void` `a`(`c.a.b.e` v3 @kind this, `java.io.IOException` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lc/a/b/e;.a:(Ljava/io/IOException;Ljava/io/IOException;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L27049c.  v0:= `@@c.a.b.e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L2704a0.  if v0 == 0 then goto L2704ba;
  #L2704a4.  v0:= `@@c.a.b.e.a` @type ^`java.lang.reflect.Method` @kind object;
  #L2704a8.  v1:= 1I;
  #L2704aa.  v1:= new `java.lang.Object`[v1];
  #L2704ae.  v2:= 0I;
  #L2704b0.  v1[v2]:= v5 @kind object;
  #L2704b4.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2704ba.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L2704a4..L2704ba] goto L2704ba;
  catch `java.lang.IllegalAccessException` @[L2704a4..L2704ba] goto L2704ba;
}
procedure `java.io.IOException` `a`(`c.a.b.e` v1 @kind this) @signature `Lc/a/b/e;.a:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2703fc.  v0:= v1.`c.a.b.e.b` @type ^`java.io.IOException` @kind object;
  #L270400.  return v0 @kind object;
}
procedure `void` `a`(`c.a.b.e` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lc/a/b/e;.a:(Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27047c.  v0:= v1.`c.a.b.e.b` @type ^`java.io.IOException` @kind object;
  #L270480.  call `a`(v1, v2, v0) @signature `Lc/a/b/e;.a:(Ljava/io/IOException;Ljava/io/IOException;)V` @kind direct;
  #L270486.  v1.`c.a.b.e.b` @type ^`java.io.IOException` := v2 @kind object;
  #L27048a.  return @kind void;
}
