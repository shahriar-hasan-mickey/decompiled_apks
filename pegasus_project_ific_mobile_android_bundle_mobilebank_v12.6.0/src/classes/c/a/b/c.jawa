record `c.a.b.c` @kind class @AccessFlag PUBLIC_FINAL extends `c.a.e.g$b` @kind class, `c.h` @kind interface {
  `boolean` `c.a.b.c.a` @AccessFlag PUBLIC;
  `int` `c.a.b.c.b` @AccessFlag PUBLIC;
  `int` `c.a.b.c.c` @AccessFlag PUBLIC;
  `java.util.List` `c.a.b.c.d` @AccessFlag PUBLIC_FINAL;
  `long` `c.a.b.c.e` @AccessFlag PUBLIC;
  `c.i` `c.a.b.c.g` @AccessFlag PRIVATE_FINAL;
  `c.ab` `c.a.b.c.h` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `c.a.b.c.i` @AccessFlag PRIVATE;
  `java.net.Socket` `c.a.b.c.j` @AccessFlag PRIVATE;
  `c.p` `c.a.b.c.k` @AccessFlag PRIVATE;
  `c.v` `c.a.b.c.l` @AccessFlag PRIVATE;
  `c.a.e.g` `c.a.b.c.m` @AccessFlag PRIVATE;
  `d.e` `c.a.b.c.n` @AccessFlag PRIVATE;
  `d.d` `c.a.b.c.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.a.b.c` v2 @kind this, `c.i` v3 @kind object, `c.ab` v4 @kind object) @signature `Lc/a/b/c;.<init>:(Lc/i;Lc/ab;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L26faa4.  call `<init>`(v2) @signature `Lc/a/e/g$b;.<init>:()V` @kind direct;
  #L26faaa.  v0:= 1I;
  #L26faac.  v2.`c.a.b.c.c` @type ^`int` := v0;
  #L26fab0.  v0:= new `java.util.ArrayList`;
  #L26fab4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L26faba.  v2.`c.a.b.c.d` @type ^`java.util.List` := v0 @kind object;
  #L26fabe.  v0:= 9223372036854775807L;
  #L26fac8.  v2.`c.a.b.c.e` @type ^`long` := v0 @kind wide;
  #L26facc.  v2.`c.a.b.c.g` @type ^`c.i` := v3 @kind object;
  #L26fad0.  v2.`c.a.b.c.h` @type ^`c.ab` := v4 @kind object;
  #L26fad4.  return @kind void;
}
procedure `c.x` `a`(`c.a.b.c` v7 @kind this, `int` v8 , `int` v9 , `c.x` v10 @kind object, `c.r` v11 @kind object) @signature `Lc/a/b/c;.a:(IILc/x;Lc/r;)Lc/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26f728.  v0:= new `java.lang.StringBuilder`;
  #L26f72c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26f732.  v1:= "CONNECT " @kind object;
  #L26f736.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f73c.  v1:= 1I;
  #L26f73e.  call temp:= `a`(v11, v1) @signature `Lc/a/c;.a:(Lc/r;Z)Ljava/lang/String;` @kind static;
  #L26f744.  v11:= temp @kind object;
  #L26f746.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f74c.  v11:= " HTTP/1.1" @kind object;
  #L26f750.  call temp:= `append`(v0, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f756.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26f75c.  v11:= temp @kind object;
  #L26f75e.  v0:= new `c.a.d.a`;
  #L26f762.  v1:= v7.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f766.  v2:= v7.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26f76a.  v3:= 0I;
  #L26f76c.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lc/a/d/a;.<init>:(Lc/u;Lc/a/b/g;Ld/e;Ld/d;)V` @kind direct;
  #L26f772.  v1:= v7.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f776.  call temp:= `a`(v1) @signature `Ld/e;.a:()Ld/t;` @kind interface;
  #L26f77c.  v1:= temp @kind object;
  #L26f77e.  v4:= (`long`) v8 @kind i2l;
  #L26f780.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f784.  call temp:= `a`(v1, v4, v2) @signature `Ld/t;.a:(JLjava/util/concurrent/TimeUnit;)Ld/t;` @kind virtual;
  #L26f78a.  v1:= v7.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26f78e.  call temp:= `a`(v1) @signature `Ld/d;.a:()Ld/t;` @kind interface;
  #L26f794.  v1:= temp @kind object;
  #L26f796.  v4:= (`long`) v9 @kind i2l;
  #L26f798.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f79c.  call temp:= `a`(v1, v4, v2) @signature `Ld/t;.a:(JLjava/util/concurrent/TimeUnit;)Ld/t;` @kind virtual;
  #L26f7a2.  call temp:= `c`(v10) @signature `Lc/x;.c:()Lc/q;` @kind virtual;
  #L26f7a8.  v1:= temp @kind object;
  #L26f7aa.  call `a`(v0, v1, v11) @signature `Lc/a/d/a;.a:(Lc/q;Ljava/lang/String;)V` @kind virtual;
  #L26f7b0.  call `b`(v0) @signature `Lc/a/d/a;.b:()V` @kind virtual;
  #L26f7b6.  v1:= 0I;
  #L26f7b8.  call temp:= `a`(v0, v1) @signature `Lc/a/d/a;.a:(Z)Lc/z$a;` @kind virtual;
  #L26f7be.  v1:= temp @kind object;
  #L26f7c0.  call temp:= `a`(v1, v10) @signature `Lc/z$a;.a:(Lc/x;)Lc/z$a;` @kind virtual;
  #L26f7c6.  v10:= temp @kind object;
  #L26f7c8.  call temp:= `a`(v10) @signature `Lc/z$a;.a:()Lc/z;` @kind virtual;
  #L26f7ce.  v10:= temp @kind object;
  #L26f7d0.  call temp:= `a`(v10) @signature `Lc/a/c/e;.a:(Lc/z;)J` @kind static;
  #L26f7d6.  v1:= temp @kind wide;
  #L26f7d8.  v4:= -1L;
  #L26f7dc.  v6:= lcmp(v1, v4);
  #L26f7e0.  if v6 != 0 then goto L26f7e8;
  #L26f7e4.  v1:= 0L;
  #L26f7e8.  call temp:= `b`(v0, v1) @signature `Lc/a/d/a;.b:(J)Ld/s;` @kind virtual;
  #L26f7ee.  v0:= temp @kind object;
  #L26f7f0.  v1:= 2147483647I;
  #L26f7f6.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f7fa.  call temp:= `b`(v0, v1, v2) @signature `Lc/a/c;.b:(Ld/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L26f800.  call `close`(v0) @signature `Ld/s;.close:()V` @kind interface;
  #L26f806.  call temp:= `b`(v10) @signature `Lc/z;.b:()I` @kind virtual;
  #L26f80c.  v0:= temp;
  #L26f80e.  v1:= 200I;
  #L26f812.  if v0 == v1 then goto L26f8ac;
  #L26f816.  v1:= 407I;
  #L26f81a.  if v0 == v1 then goto L26f854;
  #L26f81e.  v8:= new `java.io.IOException`;
  #L26f822.  v9:= new `java.lang.StringBuilder`;
  #L26f826.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26f82c.  v11:= "Unexpected response code for CONNECT: " @kind object;
  #L26f830.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f836.  call temp:= `b`(v10) @signature `Lc/z;.b:()I` @kind virtual;
  #L26f83c.  v10:= temp;
  #L26f83e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f844.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26f84a.  v9:= temp @kind object;
  #L26f84c.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26f852.  throw v8;
  #L26f854.  v0:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f858.  call temp:= `a`(v0) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f85e.  v0:= temp @kind object;
  #L26f860.  call temp:= `d`(v0) @signature `Lc/a;.d:()Lc/b;` @kind virtual;
  #L26f866.  v0:= temp @kind object;
  #L26f868.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f86c.  call temp:= `a`(v0, v1, v10) @signature `Lc/b;.a:(Lc/ab;Lc/z;)Lc/x;` @kind interface;
  #L26f872.  v0:= temp @kind object;
  #L26f874.  if v0 != 0 then goto L26f888;
  #L26f878.  v8:= new `java.io.IOException`;
  #L26f87c.  v9:= "Failed to authenticate with proxy" @kind object;
  #L26f880.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26f886.  throw v8;
  #L26f888.  v1:= "close" @kind object;
  #L26f88c.  v2:= "Connection" @kind object;
  #L26f890.  call temp:= `a`(v10, v2) @signature `Lc/z;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L26f896.  v10:= temp @kind object;
  #L26f898.  call temp:= `equalsIgnoreCase`(v1, v10) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L26f89e.  v10:= temp;
  #L26f8a0.  if v10 == 0 then goto L26f8a6;
  #L26f8a4.  return v0 @kind object;
  #L26f8a6.  v10:= v0 @kind object;
  #L26f8a8.  goto L26f75e;
  #L26f8ac.  v8:= v7.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f8b0.  call temp:= `c`(v8) @signature `Ld/e;.c:()Ld/c;` @kind interface;
  #L26f8b6.  v8:= temp @kind object;
  #L26f8b8.  call temp:= `e`(v8) @signature `Ld/c;.e:()Z` @kind virtual;
  #L26f8be.  v8:= temp;
  #L26f8c0.  if v8 == 0 then goto L26f8e0;
  #L26f8c4.  v8:= v7.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26f8c8.  call temp:= `c`(v8) @signature `Ld/d;.c:()Ld/c;` @kind interface;
  #L26f8ce.  v8:= temp @kind object;
  #L26f8d0.  call temp:= `e`(v8) @signature `Ld/c;.e:()Z` @kind virtual;
  #L26f8d6.  v8:= temp;
  #L26f8d8.  if v8 != 0 then goto L26f8de;
  #L26f8dc.  goto L26f8e0;
  #L26f8de.  return v3 @kind object;
  #L26f8e0.  v8:= new `java.io.IOException`;
  #L26f8e4.  v9:= "TLS tunnel buffered too many bytes!" @kind object;
  #L26f8e8.  call `<init>`(v8, v9) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26f8ee.  throw v8;
}
procedure `void` `a`(`c.a.b.c` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `c.e` v10 @kind object, `c.o` v11 @kind object) @signature `Lc/a/b/c;.a:(IIILc/e;Lc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L270008.  call temp:= `e`(v6) @signature `Lc/a/b/c;.e:()Lc/x;` @kind direct;
  #L27000e.  v0:= temp @kind object;
  #L270010.  call temp:= `a`(v0) @signature `Lc/x;.a:()Lc/r;` @kind virtual;
  #L270016.  v1:= temp @kind object;
  #L270018.  v2:= 0I;
  #L27001a.  v3:= 21I;
  #L27001e.  if v2 >= v3 then goto L270072;
  #L270022.  call `a`(v6, v7, v8, v10, v11) @signature `Lc/a/b/c;.a:(IILc/e;Lc/o;)V` @kind direct;
  #L270028.  call temp:= `a`(v6, v8, v9, v0, v1) @signature `Lc/a/b/c;.a:(IILc/x;Lc/r;)Lc/x;` @kind direct;
  #L27002e.  v0:= temp @kind object;
  #L270030.  if v0 != 0 then goto L270036;
  #L270034.  goto L270072;
  #L270036.  v3:= v6.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L27003a.  call `a`(v3) @signature `Lc/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L270040.  v3:= 0I;
  #L270042.  v6.`c.a.b.c.i` @type ^`java.net.Socket` := v3 @kind object;
  #L270046.  v6.`c.a.b.c.o` @type ^`d.d` := v3 @kind object;
  #L27004a.  v6.`c.a.b.c.n` @type ^`d.e` := v3 @kind object;
  #L27004e.  v4:= v6.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L270052.  call temp:= `c`(v4) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L270058.  v4:= temp @kind object;
  #L27005a.  v5:= v6.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L27005e.  call temp:= `b`(v5) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L270064.  v5:= temp @kind object;
  #L270066.  call `a`(v11, v10, v4, v5, v3) @signature `Lc/o;.a:(Lc/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lc/v;)V` @kind virtual;
  #L27006c.  v2:= v2 + 1;
  #L270070.  goto L27001a;
  #L270072.  return @kind void;
}
procedure `void` `a`(`c.a.b.c` v4 @kind this, `int` v5 , `int` v6 , `c.e` v7 @kind object, `c.o` v8 @kind object) @signature `Lc/a/b/c;.a:(IILc/e;Lc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26feac.  v0:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26feb0.  call temp:= `b`(v0) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L26feb6.  v0:= temp @kind object;
  #L26feb8.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26febc.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26fec2.  v1:= temp @kind object;
  #L26fec4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L26feca.  v2:= temp @kind object;
  #L26fecc.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L26fed0.  if v2 == v3 then goto L26fef2;
  #L26fed4.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L26feda.  v2:= temp @kind object;
  #L26fedc.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L26fee0.  if v2 != v3 then goto L26fee6;
  #L26fee4.  goto L26fef2;
  #L26fee6.  v1:= new `java.net.Socket`;
  #L26feea.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L26fef0.  goto L26ff02;
  #L26fef2.  call temp:= `c`(v1) @signature `Lc/a;.c:()Ljavax/net/SocketFactory;` @kind virtual;
  #L26fef8.  v1:= temp @kind object;
  #L26fefa.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L26ff00.  v1:= temp @kind object;
  #L26ff02.  v4.`c.a.b.c.i` @type ^`java.net.Socket` := v1 @kind object;
  #L26ff06.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26ff0a.  call temp:= `c`(v1) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26ff10.  v1:= temp @kind object;
  #L26ff12.  call `a`(v8, v7, v1, v0) @signature `Lc/o;.a:(Lc/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L26ff18.  v7:= v4.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26ff1c.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26ff22.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L26ff28.  v6:= temp @kind object;
  #L26ff2a.  v7:= v4.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26ff2e.  v8:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26ff32.  call temp:= `c`(v8) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26ff38.  v8:= temp @kind object;
  #L26ff3a.  call `a`(v6, v7, v8, v5) @signature `Lc/a/g/f;.a:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L26ff40.  v5:= v4.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26ff44.  call temp:= `b`(v5) @signature `Ld/l;.b:(Ljava/net/Socket;)Ld/s;` @kind static;
  #L26ff4a.  v5:= temp @kind object;
  #L26ff4c.  call temp:= `a`(v5) @signature `Ld/l;.a:(Ld/s;)Ld/e;` @kind static;
  #L26ff52.  v5:= temp @kind object;
  #L26ff54.  v4.`c.a.b.c.n` @type ^`d.e` := v5 @kind object;
  #L26ff58.  v5:= v4.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26ff5c.  call temp:= `a`(v5) @signature `Ld/l;.a:(Ljava/net/Socket;)Ld/r;` @kind static;
  #L26ff62.  v5:= temp @kind object;
  #L26ff64.  call temp:= `a`(v5) @signature `Ld/l;.a:(Ld/r;)Ld/d;` @kind static;
  #L26ff6a.  v5:= temp @kind object;
  #L26ff6c.  v4.`c.a.b.c.o` @type ^`d.d` := v5 @kind object;
  #L26ff70.  goto L26ff98;
  #L26ff72.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L26ff74.  v6:= "throw with null exception" @kind object;
  #L26ff78.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L26ff7e.  v7:= temp @kind object;
  #L26ff80.  call temp:= `equals`(v6, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26ff86.  v6:= temp;
  #L26ff88.  if v6 == 0 then goto L26ff98;
  #L26ff8c.  v6:= new `java.io.IOException`;
  #L26ff90.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L26ff96.  throw v6;
  #L26ff98.  return @kind void;
  #L26ff9a.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L26ff9c.  v6:= new `java.net.ConnectException`;
  #L26ffa0.  v7:= new `java.lang.StringBuilder`;
  #L26ffa4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26ffaa.  v8:= "Failed to connect to " @kind object;
  #L26ffae.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26ffb4.  v8:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26ffb8.  call temp:= `c`(v8) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26ffbe.  v8:= temp @kind object;
  #L26ffc0.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26ffc6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26ffcc.  v7:= temp @kind object;
  #L26ffce.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26ffd4.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L26ffda.  throw v6;
  catch `java.net.ConnectException` @[L26ff22..L26ff40] goto L26ff9a;
  catch `java.lang.NullPointerException` @[L26ff40..L26ff70] goto L26ff72;
}
procedure `void` `a`(`c.a.b.c` v7 @kind this, `c.a.b.b` v8 @kind object) @signature `Lc/a/b/c;.a:(Lc/a/b/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26fae8.  v0:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26faec.  call temp:= `a`(v0) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26faf2.  v0:= temp @kind object;
  #L26faf4.  call temp:= `i`(v0) @signature `Lc/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L26fafa.  v1:= temp @kind object;
  #L26fafc.  v2:= 0I;
  #L26fafe.  v3:= v7.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26fb02.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fb08.  v4:= temp @kind object;
  #L26fb0a.  call temp:= `f`(v4) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fb10.  v4:= temp @kind object;
  #L26fb12.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fb18.  v5:= temp @kind object;
  #L26fb1a.  call temp:= `g`(v5) @signature `Lc/r;.g:()I` @kind virtual;
  #L26fb20.  v5:= temp;
  #L26fb22.  v6:= 1I;
  #L26fb24.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L26fb2a.  v1:= temp @kind object;
  #L26fb2c.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L26fb30.  call temp:= `a`(v8, v1) @signature `Lc/a/b/b;.a:(Ljavax/net/ssl/SSLSocket;)Lc/j;` @kind virtual;
  #L26fb36.  v8:= temp @kind object;
  #L26fb38.  call temp:= `d`(v8) @signature `Lc/j;.d:()Z` @kind virtual;
  #L26fb3e.  v3:= temp;
  #L26fb40.  if v3 == 0 then goto L26fb6a;
  #L26fb44.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L26fb4a.  v3:= temp @kind object;
  #L26fb4c.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fb52.  v4:= temp @kind object;
  #L26fb54.  call temp:= `f`(v4) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fb5a.  v4:= temp @kind object;
  #L26fb5c.  call temp:= `e`(v0) @signature `Lc/a;.e:()Ljava/util/List;` @kind virtual;
  #L26fb62.  v5:= temp @kind object;
  #L26fb64.  call `a`(v3, v1, v4, v5) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L26fb6a.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L26fb70.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L26fb76.  v3:= temp @kind object;
  #L26fb78.  call temp:= `a`(v7, v3) @signature `Lc/a/b/c;.a:(Ljavax/net/ssl/SSLSession;)Z` @kind direct;
  #L26fb7e.  v4:= temp;
  #L26fb80.  if v4 != 0 then goto L26fb94;
  #L26fb84.  v8:= new `java.io.IOException`;
  #L26fb88.  v0:= "a valid ssl session was not established" @kind object;
  #L26fb8c.  call `<init>`(v8, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26fb92.  throw v8;
  #L26fb94.  call temp:= `a`(v3) @signature `Lc/p;.a:(Ljavax/net/ssl/SSLSession;)Lc/p;` @kind static;
  #L26fb9a.  v4:= temp @kind object;
  #L26fb9c.  call temp:= `j`(v0) @signature `Lc/a;.j:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L26fba2.  v5:= temp @kind object;
  #L26fba4.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fbaa.  v6:= temp @kind object;
  #L26fbac.  call temp:= `f`(v6) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fbb2.  v6:= temp @kind object;
  #L26fbb4.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L26fbba.  v3:= temp;
  #L26fbbc.  if v3 != 0 then goto L26fc64;
  #L26fbc0.  call temp:= `b`(v4) @signature `Lc/p;.b:()Ljava/util/List;` @kind virtual;
  #L26fbc6.  v8:= temp @kind object;
  #L26fbc8.  v2:= 0I;
  #L26fbca.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26fbd0.  v8:= temp @kind object;
  #L26fbd2.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L26fbd6.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L26fbda.  v3:= new `java.lang.StringBuilder`;
  #L26fbde.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26fbe4.  v4:= "Hostname " @kind object;
  #L26fbe8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fbee.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fbf4.  v0:= temp @kind object;
  #L26fbf6.  call temp:= `f`(v0) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fbfc.  v0:= temp @kind object;
  #L26fbfe.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc04.  v0:= " not verified:\n    certificate: " @kind object;
  #L26fc08.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc0e.  call temp:= `a`(v8) @signature `Lc/f;.a:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L26fc14.  v0:= temp @kind object;
  #L26fc16.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc1c.  v0:= "\n    DN: " @kind object;
  #L26fc20.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc26.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L26fc2c.  v0:= temp @kind object;
  #L26fc2e.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L26fc34.  v0:= temp @kind object;
  #L26fc36.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc3c.  v0:= "\n    subjectAltNames: " @kind object;
  #L26fc40.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc46.  call temp:= `a`(v8) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L26fc4c.  v8:= temp @kind object;
  #L26fc4e.  call temp:= `append`(v3, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fc54.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26fc5a.  v8:= temp @kind object;
  #L26fc5c.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L26fc62.  throw v2;
  #L26fc64.  call temp:= `k`(v0) @signature `Lc/a;.k:()Lc/f;` @kind virtual;
  #L26fc6a.  v3:= temp @kind object;
  #L26fc6c.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fc72.  v0:= temp @kind object;
  #L26fc74.  call temp:= `f`(v0) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fc7a.  v0:= temp @kind object;
  #L26fc7c.  call temp:= `b`(v4) @signature `Lc/p;.b:()Ljava/util/List;` @kind virtual;
  #L26fc82.  v5:= temp @kind object;
  #L26fc84.  call `a`(v3, v0, v5) @signature `Lc/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L26fc8a.  call temp:= `d`(v8) @signature `Lc/j;.d:()Z` @kind virtual;
  #L26fc90.  v8:= temp;
  #L26fc92.  if v8 == 0 then goto L26fca6;
  #L26fc96.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L26fc9c.  v8:= temp @kind object;
  #L26fc9e.  call temp:= `a`(v8, v1) @signature `Lc/a/g/f;.a:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L26fca4.  v2:= temp @kind object;
  #L26fca6.  v7.`c.a.b.c.j` @type ^`java.net.Socket` := v1 @kind object;
  #L26fcaa.  v8:= v7.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26fcae.  call temp:= `b`(v8) @signature `Ld/l;.b:(Ljava/net/Socket;)Ld/s;` @kind static;
  #L26fcb4.  v8:= temp @kind object;
  #L26fcb6.  call temp:= `a`(v8) @signature `Ld/l;.a:(Ld/s;)Ld/e;` @kind static;
  #L26fcbc.  v8:= temp @kind object;
  #L26fcbe.  v7.`c.a.b.c.n` @type ^`d.e` := v8 @kind object;
  #L26fcc2.  v8:= v7.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26fcc6.  call temp:= `a`(v8) @signature `Ld/l;.a:(Ljava/net/Socket;)Ld/r;` @kind static;
  #L26fccc.  v8:= temp @kind object;
  #L26fcce.  call temp:= `a`(v8) @signature `Ld/l;.a:(Ld/r;)Ld/d;` @kind static;
  #L26fcd4.  v8:= temp @kind object;
  #L26fcd6.  v7.`c.a.b.c.o` @type ^`d.d` := v8 @kind object;
  #L26fcda.  v7.`c.a.b.c.k` @type ^`c.p` := v4 @kind object;
  #L26fcde.  if v2 == 0 then goto L26fcec;
  #L26fce2.  call temp:= `a`(v2) @signature `Lc/v;.a:(Ljava/lang/String;)Lc/v;` @kind static;
  #L26fce8.  v8:= temp @kind object;
  #L26fcea.  goto L26fcf0;
  #L26fcec.  v8:= `@@c.v.b` @type ^`c.v` @kind object;
  #L26fcf0.  v7.`c.a.b.c.l` @type ^`c.v` := v8 @kind object;
  #L26fcf4.  if v1 == 0 then goto L26fd06;
  #L26fcf8.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L26fcfe.  v8:= temp @kind object;
  #L26fd00.  call `b`(v8, v1) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L26fd06.  return @kind void;
  #L26fd08.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26fd0a.  goto L26fd34;
  #L26fd0c.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L26fd0e.  v2:= v1 @kind object;
  #L26fd10.  goto L26fd1a;
  #L26fd12.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26fd14.  v1:= v2 @kind object;
  #L26fd16.  goto L26fd34;
  #L26fd18.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L26fd1a.  call temp:= `a`(v8) @signature `Lc/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L26fd20.  v0:= temp;
  #L26fd22.  if v0 == 0 then goto L26fd32;
  #L26fd26.  v0:= new `java.io.IOException`;
  #L26fd2a.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L26fd30.  throw v0;
  #L26fd32.  throw v8;
  #L26fd34.  if v1 == 0 then goto L26fd46;
  #L26fd38.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L26fd3e.  v0:= temp @kind object;
  #L26fd40.  call `b`(v0, v1) @signature `Lc/a/g/f;.b:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L26fd46.  call `a`(v1) @signature `Lc/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L26fd4c.  throw v8;
  catch `java.lang.AssertionError` @[L26fafe..L26fb30] goto L26fd18;
  catch `java.lang.Throwable` @[L26fafe..L26fb30] goto L26fd12;
  catch `java.lang.AssertionError` @[L26fb30..L26fcf4] goto L26fd0c;
  catch `java.lang.Throwable` @[L26fb30..L26fcf4] goto L26fd08;
  catch `java.lang.Throwable` @[L26fd1a..L26fd34] goto L26fd12;
}
procedure `void` `a`(`c.a.b.c` v2 @kind this, `c.a.b.b` v3 @kind object, `int` v4 , `c.e` v5 @kind object, `c.o` v6 @kind object) @signature `Lc/a/b/c;.a:(Lc/a/b/b;ILc/e;Lc/o;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L26fd8c.  v0:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26fd90.  call temp:= `a`(v0) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26fd96.  v0:= temp @kind object;
  #L26fd98.  call temp:= `i`(v0) @signature `Lc/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L26fd9e.  v0:= temp @kind object;
  #L26fda0.  if v0 != 0 then goto L26fdb6;
  #L26fda4.  v3:= `@@c.v.b` @type ^`c.v` @kind object;
  #L26fda8.  v2.`c.a.b.c.l` @type ^`c.v` := v3 @kind object;
  #L26fdac.  v3:= v2.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L26fdb0.  v2.`c.a.b.c.j` @type ^`java.net.Socket` := v3 @kind object;
  #L26fdb4.  return @kind void;
  #L26fdb6.  call `b`(v6, v5) @signature `Lc/o;.b:(Lc/e;)V` @kind virtual;
  #L26fdbc.  call `a`(v2, v3) @signature `Lc/a/b/c;.a:(Lc/a/b/b;)V` @kind direct;
  #L26fdc2.  v3:= v2.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26fdc6.  call `a`(v6, v5, v3) @signature `Lc/o;.a:(Lc/e;Lc/p;)V` @kind virtual;
  #L26fdcc.  v3:= v2.`c.a.b.c.l` @type ^`c.v` @kind object;
  #L26fdd0.  v5:= `@@c.v.d` @type ^`c.v` @kind object;
  #L26fdd4.  if v3 != v5 then goto L26fe46;
  #L26fdd8.  v3:= v2.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26fddc.  v5:= 0I;
  #L26fdde.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26fde4.  v3:= new `c.a.e.g$a`;
  #L26fde8.  v5:= 1I;
  #L26fdea.  call `<init>`(v3, v5) @signature `Lc/a/e/g$a;.<init>:(Z)V` @kind direct;
  #L26fdf0.  v5:= v2.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26fdf4.  v6:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26fdf8.  call temp:= `a`(v6) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26fdfe.  v6:= temp @kind object;
  #L26fe00.  call temp:= `a`(v6) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26fe06.  v6:= temp @kind object;
  #L26fe08.  call temp:= `f`(v6) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26fe0e.  v6:= temp @kind object;
  #L26fe10.  v0:= v2.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26fe14.  v1:= v2.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26fe18.  call temp:= `a`(v3, v5, v6, v0, v1) @signature `Lc/a/e/g$a;.a:(Ljava/net/Socket;Ljava/lang/String;Ld/e;Ld/d;)Lc/a/e/g$a;` @kind virtual;
  #L26fe1e.  v3:= temp @kind object;
  #L26fe20.  call temp:= `a`(v3, v2) @signature `Lc/a/e/g$a;.a:(Lc/a/e/g$b;)Lc/a/e/g$a;` @kind virtual;
  #L26fe26.  v3:= temp @kind object;
  #L26fe28.  call temp:= `a`(v3, v4) @signature `Lc/a/e/g$a;.a:(I)Lc/a/e/g$a;` @kind virtual;
  #L26fe2e.  v3:= temp @kind object;
  #L26fe30.  call temp:= `a`(v3) @signature `Lc/a/e/g$a;.a:()Lc/a/e/g;` @kind virtual;
  #L26fe36.  v3:= temp @kind object;
  #L26fe38.  v2.`c.a.b.c.m` @type ^`c.a.e.g` := v3 @kind object;
  #L26fe3c.  v3:= v2.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26fe40.  call `c`(v3) @signature `Lc/a/e/g;.c:()V` @kind virtual;
  #L26fe46.  return @kind void;
}
procedure `boolean` `a`(`c.a.b.c` v2 @kind this, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lc/a/b/c;.a:(Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L26f600.  v0:= "NONE" @kind object;
  #L26f604.  call temp:= `getProtocol`(v3) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L26f60a.  v1:= temp @kind object;
  #L26f60c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26f612.  v0:= temp;
  #L26f614.  if v0 != 0 then goto L26f634;
  #L26f618.  v0:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L26f61c.  call temp:= `getCipherSuite`(v3) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L26f622.  v3:= temp @kind object;
  #L26f624.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26f62a.  v3:= temp;
  #L26f62c.  if v3 != 0 then goto L26f634;
  #L26f630.  v3:= 1I;
  #L26f632.  goto L26f636;
  #L26f634.  v3:= 0I;
  #L26f636.  return v3;
}
procedure `c.x` `e`(`c.a.b.c` v4 @kind this) @signature `Lc/a/b/c;.e:()Lc/x;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f900.  v0:= new `c.x$a`;
  #L26f904.  call `<init>`(v0) @signature `Lc/x$a;.<init>:()V` @kind direct;
  #L26f90a.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f90e.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f914.  v1:= temp @kind object;
  #L26f916.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f91c.  v1:= temp @kind object;
  #L26f91e.  call temp:= `a`(v0, v1) @signature `Lc/x$a;.a:(Lc/r;)Lc/x$a;` @kind virtual;
  #L26f924.  v0:= temp @kind object;
  #L26f926.  v1:= "Host" @kind object;
  #L26f92a.  v2:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f92e.  call temp:= `a`(v2) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f934.  v2:= temp @kind object;
  #L26f936.  call temp:= `a`(v2) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f93c.  v2:= temp @kind object;
  #L26f93e.  v3:= 1I;
  #L26f940.  call temp:= `a`(v2, v3) @signature `Lc/a/c;.a:(Lc/r;Z)Ljava/lang/String;` @kind static;
  #L26f946.  v2:= temp @kind object;
  #L26f948.  call temp:= `a`(v0, v1, v2) @signature `Lc/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/x$a;` @kind virtual;
  #L26f94e.  v0:= temp @kind object;
  #L26f950.  v1:= "Proxy-Connection" @kind object;
  #L26f954.  v2:= "Keep-Alive" @kind object;
  #L26f958.  call temp:= `a`(v0, v1, v2) @signature `Lc/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/x$a;` @kind virtual;
  #L26f95e.  v0:= temp @kind object;
  #L26f960.  v1:= "User-Agent" @kind object;
  #L26f964.  call temp:= `a`() @signature `Lc/a/d;.a:()Ljava/lang/String;` @kind static;
  #L26f96a.  v2:= temp @kind object;
  #L26f96c.  call temp:= `a`(v0, v1, v2) @signature `Lc/x$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lc/x$a;` @kind virtual;
  #L26f972.  v0:= temp @kind object;
  #L26f974.  call temp:= `a`(v0) @signature `Lc/x$a;.a:()Lc/x;` @kind virtual;
  #L26f97a.  v0:= temp @kind object;
  #L26f97c.  return v0 @kind object;
}
procedure `c.a.c.c` `a`(`c.a.b.c` v4 @kind this, `c.u` v5 @kind object, `c.s$a` v6 @kind object, `c.a.b.g` v7 @kind object) @signature `Lc/a/b/c;.a:(Lc/u;Lc/s$a;Lc/a/b/g;)Lc/a/c/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f668.  v0:= v4.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f66c.  if v0 == 0 then goto L26f680;
  #L26f670.  v0:= new `c.a.e.f`;
  #L26f674.  v1:= v4.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f678.  call `<init>`(v0, v5, v6, v7, v1) @signature `Lc/a/e/f;.<init>:(Lc/u;Lc/s$a;Lc/a/b/g;Lc/a/e/g;)V` @kind direct;
  #L26f67e.  return v0 @kind object;
  #L26f680.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f684.  call temp:= `c`(v6) @signature `Lc/s$a;.c:()I` @kind interface;
  #L26f68a.  v1:= temp;
  #L26f68c.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26f692.  v0:= v4.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f696.  call temp:= `a`(v0) @signature `Ld/e;.a:()Ld/t;` @kind interface;
  #L26f69c.  v0:= temp @kind object;
  #L26f69e.  call temp:= `c`(v6) @signature `Lc/s$a;.c:()I` @kind interface;
  #L26f6a4.  v1:= temp;
  #L26f6a6.  v1:= (`long`) v1 @kind i2l;
  #L26f6a8.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f6ac.  call temp:= `a`(v0, v1, v3) @signature `Ld/t;.a:(JLjava/util/concurrent/TimeUnit;)Ld/t;` @kind virtual;
  #L26f6b2.  v0:= v4.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26f6b6.  call temp:= `a`(v0) @signature `Ld/d;.a:()Ld/t;` @kind interface;
  #L26f6bc.  v0:= temp @kind object;
  #L26f6be.  call temp:= `d`(v6) @signature `Lc/s$a;.d:()I` @kind interface;
  #L26f6c4.  v6:= temp;
  #L26f6c6.  v1:= (`long`) v6 @kind i2l;
  #L26f6c8.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L26f6cc.  call temp:= `a`(v0, v1, v6) @signature `Ld/t;.a:(JLjava/util/concurrent/TimeUnit;)Ld/t;` @kind virtual;
  #L26f6d2.  v6:= new `c.a.d.a`;
  #L26f6d6.  v0:= v4.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f6da.  v1:= v4.`c.a.b.c.o` @type ^`d.d` @kind object;
  #L26f6de.  call `<init>`(v6, v5, v7, v0, v1) @signature `Lc/a/d/a;.<init>:(Lc/u;Lc/a/b/g;Ld/e;Ld/d;)V` @kind direct;
  #L26f6e4.  return v6 @kind object;
}
procedure `c.ab` `a`(`c.a.b.c` v1 @kind this) @signature `Lc/a/b/c;.a:()Lc/ab;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f6f8.  v0:= v1.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f6fc.  return v0 @kind object;
}
procedure `void` `a`(`c.a.b.c` v17 @kind this, `int` v18 , `int` v19 , `int` v20 , `int` v21 , `boolean` v22 , `c.e` v23 @kind object, `c.o` v24 @kind object) @signature `Lc/a/b/c;.a:(IIIIZLc/e;Lc/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L270084.  v7:= v17 @kind object;
  #L270088.  v8:= v23 @kind object;
  #L27008c.  v9:= v24 @kind object;
  #L270090.  v1:= v7.`c.a.b.c.l` @type ^`c.v` @kind object;
  #L270094.  if v1 == 0 then goto L2700a8;
  #L270098.  v1:= new `java.lang.IllegalStateException`;
  #L27009c.  v2:= "already connected" @kind object;
  #L2700a0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2700a6.  throw v1;
  #L2700a8.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2700ac.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L2700b2.  v1:= temp @kind object;
  #L2700b4.  call temp:= `f`(v1) @signature `Lc/a;.f:()Ljava/util/List;` @kind virtual;
  #L2700ba.  v1:= temp @kind object;
  #L2700bc.  v10:= new `c.a.b.b`;
  #L2700c0.  call `<init>`(v10, v1) @signature `Lc/a/b/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2700c6.  v2:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2700ca.  call temp:= `a`(v2) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L2700d0.  v2:= temp @kind object;
  #L2700d2.  call temp:= `i`(v2) @signature `Lc/a;.i:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L2700d8.  v2:= temp @kind object;
  #L2700da.  if v2 != 0 then goto L27017a;
  #L2700de.  v2:= `@@c.j.c` @type ^`c.j` @kind object;
  #L2700e2.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2700e8.  v1:= temp;
  #L2700ea.  if v1 != 0 then goto L270108;
  #L2700ee.  v1:= new `c.a.b.e`;
  #L2700f2.  v2:= new `java.net.UnknownServiceException`;
  #L2700f6.  v3:= "CLEARTEXT communication not enabled for client" @kind object;
  #L2700fa.  call `<init>`(v2, v3) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270100.  call `<init>`(v1, v2) @signature `Lc/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L270106.  throw v1;
  #L270108.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L27010c.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L270112.  v1:= temp @kind object;
  #L270114.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L27011a.  v1:= temp @kind object;
  #L27011c.  call temp:= `f`(v1) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L270122.  v1:= temp @kind object;
  #L270124.  call temp:= `c`() @signature `Lc/a/g/f;.c:()Lc/a/g/f;` @kind static;
  #L27012a.  v2:= temp @kind object;
  #L27012c.  call temp:= `b`(v2, v1) @signature `Lc/a/g/f;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L270132.  v2:= temp;
  #L270134.  if v2 != 0 then goto L27017a;
  #L270138.  v2:= new `c.a.b.e`;
  #L27013c.  v3:= new `java.net.UnknownServiceException`;
  #L270140.  v4:= new `java.lang.StringBuilder`;
  #L270144.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27014a.  v5:= "CLEARTEXT communication to " @kind object;
  #L27014e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270154.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27015a.  v1:= " not permitted by network security policy" @kind object;
  #L27015e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270164.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27016a.  v1:= temp @kind object;
  #L27016c.  call `<init>`(v3, v1) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270172.  call `<init>`(v2, v3) @signature `Lc/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L270178.  throw v2;
  #L27017a.  v11:= 0I;
  #L27017c.  v12:= v11 @kind object;
  #L27017e.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L270182.  call temp:= `d`(v1) @signature `Lc/ab;.d:()Z` @kind virtual;
  #L270188.  v1:= temp;
  #L27018a.  if v1 == 0 then goto L2701ba;
  #L27018e.  v1:= v7 @kind object;
  #L270190.  v2:= v18;
  #L270194.  v3:= v19;
  #L270198.  v4:= v20;
  #L27019c.  v5:= v8 @kind object;
  #L27019e.  v6:= v9 @kind object;
  #L2701a0.  call `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/a/b/c;.a:(IIILc/e;Lc/o;)V` @kind direct;
  #L2701a6.  v1:= v7.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L2701aa.  if v1 != 0 then goto L2701b0;
  #L2701ae.  goto L2701f4;
  #L2701b0.  v13:= v18;
  #L2701b4.  v14:= v19;
  #L2701b8.  goto L2701c8;
  #L2701ba.  v13:= v18;
  #L2701be.  v14:= v19;
  #L2701c2.  call `a`(v7, v13, v14, v8, v9) @signature `Lc/a/b/c;.a:(IILc/e;Lc/o;)V` @kind direct;
  #L2701c8.  v15:= v21;
  #L2701cc.  call `a`(v7, v10, v15, v8, v9) @signature `Lc/a/b/c;.a:(Lc/a/b/b;ILc/e;Lc/o;)V` @kind direct;
  #L2701d2.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2701d6.  call temp:= `c`(v1) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L2701dc.  v1:= temp @kind object;
  #L2701de.  v2:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2701e2.  call temp:= `b`(v2) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L2701e8.  v2:= temp @kind object;
  #L2701ea.  v3:= v7.`c.a.b.c.l` @type ^`c.v` @kind object;
  #L2701ee.  call `a`(v9, v8, v1, v2, v3) @signature `Lc/o;.a:(Lc/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lc/v;)V` @kind virtual;
  #L2701f4.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2701f8.  call temp:= `d`(v1) @signature `Lc/ab;.d:()Z` @kind virtual;
  #L2701fe.  v1:= temp;
  #L270200.  if v1 == 0 then goto L270226;
  #L270204.  v1:= v7.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L270208.  if v1 != 0 then goto L270226;
  #L27020c.  v1:= new `java.net.ProtocolException`;
  #L270210.  v2:= "Too many tunnel connections attempted: 21" @kind object;
  #L270214.  call `<init>`(v1, v2) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27021a.  v2:= new `c.a.b.e`;
  #L27021e.  call `<init>`(v2, v1) @signature `Lc/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L270224.  throw v2;
  #L270226.  v1:= v7.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L27022a.  if v1 == 0 then goto L270250;
  #L27022e.  v1:= v7.`c.a.b.c.g` @type ^`c.i` @kind object;
  #L270232.  @monitorenter v1
  #L270234.  v2:= v7.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L270238.  call temp:= `a`(v2) @signature `Lc/a/e/g;.a:()I` @kind virtual;
  #L27023e.  v2:= temp;
  #L270240.  v7.`c.a.b.c.c` @type ^`int` := v2;
  #L270244.  @monitorexit v1
  #L270246.  goto L270250;
  #L270248.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L27024a.  v2:= v0 @kind object;
  #L27024c.  @monitorexit v1
  #L27024e.  throw v2;
  #L270250.  return @kind void;
  #L270252.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L270254.  goto L270268;
  #L270256.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L270258.  goto L270264;
  #L27025a.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L27025c.  v13:= v18;
  #L270260.  v14:= v19;
  #L270264.  v15:= v21;
  #L270268.  v6:= v0 @kind object;
  #L27026a.  v1:= v7.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L27026e.  call `a`(v1) @signature `Lc/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L270274.  v1:= v7.`c.a.b.c.i` @type ^`java.net.Socket` @kind object;
  #L270278.  call `a`(v1) @signature `Lc/a/c;.a:(Ljava/net/Socket;)V` @kind static;
  #L27027e.  v7.`c.a.b.c.j` @type ^`java.net.Socket` := v11 @kind object;
  #L270282.  v7.`c.a.b.c.i` @type ^`java.net.Socket` := v11 @kind object;
  #L270286.  v7.`c.a.b.c.n` @type ^`d.e` := v11 @kind object;
  #L27028a.  v7.`c.a.b.c.o` @type ^`d.d` := v11 @kind object;
  #L27028e.  v7.`c.a.b.c.k` @type ^`c.p` := v11 @kind object;
  #L270292.  v7.`c.a.b.c.l` @type ^`c.v` := v11 @kind object;
  #L270296.  v7.`c.a.b.c.m` @type ^`c.a.e.g` := v11 @kind object;
  #L27029a.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L27029e.  call temp:= `c`(v1) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L2702a4.  v3:= temp @kind object;
  #L2702a6.  v1:= v7.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L2702aa.  call temp:= `b`(v1) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L2702b0.  v4:= temp @kind object;
  #L2702b2.  v5:= 0I;
  #L2702b4.  v1:= v9 @kind object;
  #L2702b6.  v2:= v8 @kind object;
  #L2702b8.  v16:= v6 @kind object;
  #L2702bc.  call `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/o;.a:(Lc/e;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lc/v;Ljava/io/IOException;)V` @kind virtual;
  #L2702c2.  if v12 != 0 then goto L2702d8;
  #L2702c6.  v1:= new `c.a.b.e`;
  #L2702ca.  v2:= v16 @kind object;
  #L2702ce.  call `<init>`(v1, v2) @signature `Lc/a/b/e;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L2702d4.  v12:= v1 @kind object;
  #L2702d6.  goto L2702e2;
  #L2702d8.  v2:= v16 @kind object;
  #L2702dc.  call `a`(v12, v2) @signature `Lc/a/b/e;.a:(Ljava/io/IOException;)V` @kind virtual;
  #L2702e2.  if v22 == 0 then goto L2702f2;
  #L2702e6.  call temp:= `a`(v10, v2) @signature `Lc/a/b/b;.a:(Ljava/io/IOException;)Z` @kind virtual;
  #L2702ec.  v2:= temp;
  #L2702ee.  if v2 != 0 then goto L27017e;
  #L2702f2.  throw v12;
  catch `java.io.IOException` @[L27017e..L2701aa] goto L27025a;
  catch `java.io.IOException` @[L2701c2..L2701c8] goto L270256;
  catch `java.io.IOException` @[L2701cc..L2701f4] goto L270252;
  catch `java.lang.Throwable` @[L270234..L27024e] goto L270248;
}
procedure `void` `a`(`c.a.b.c` v1 @kind this, `c.a.e.g` v2 @kind object) @signature `Lc/a/b/c;.a:(Lc/a/e/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26fe58.  v0:= v1.`c.a.b.c.g` @type ^`c.i` @kind object;
  #L26fe5c.  @monitorenter v0
  #L26fe5e.  call temp:= `a`(v2) @signature `Lc/a/e/g;.a:()I` @kind virtual;
  #L26fe64.  v2:= temp;
  #L26fe66.  v1.`c.a.b.c.c` @type ^`int` := v2;
  #L26fe6a.  @monitorexit v0
  #L26fe6c.  return @kind void;
  #L26fe6e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26fe70.  @monitorexit v0
  #L26fe72.  throw v2;
  catch `java.lang.Throwable` @[L26fe5e..L26fe72] goto L26fe6e;
}
procedure `void` `a`(`c.a.b.c` v1 @kind this, `c.a.e.i` v2 @kind object) @signature `Lc/a/b/c;.a:(Lc/a/e/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26fe90.  v0:= `@@c.a.e.b.e` @type ^`c.a.e.b` @kind object;
  #L26fe94.  call `a`(v2, v0) @signature `Lc/a/e/i;.a:(Lc/a/e/b;)V` @kind virtual;
  #L26fe9a.  return @kind void;
}
procedure `boolean` `a`(`c.a.b.c` v4 @kind this, `c.a` v5 @kind object, `c.ab` v6 @kind object) @signature `Lc/a/b/c;.a:(Lc/a;Lc/ab;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f3e0.  v0:= v4.`c.a.b.c.d` @type ^`java.util.List` @kind object;
  #L26f3e4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26f3ea.  v0:= temp;
  #L26f3ec.  v1:= v4.`c.a.b.c.c` @type ^`int`;
  #L26f3f0.  v2:= 0I;
  #L26f3f2.  if v0 >= v1 then goto L26f52c;
  #L26f3f6.  v0:= v4.`c.a.b.c.a` @type ^`boolean` @kind boolean;
  #L26f3fa.  if v0 == 0 then goto L26f402;
  #L26f3fe.  goto L26f52c;
  #L26f402.  v0:= `@@c.a.a.a` @type ^`c.a.a` @kind object;
  #L26f406.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f40a.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f410.  v1:= temp @kind object;
  #L26f412.  call temp:= `a`(v0, v1, v5) @signature `Lc/a/a;.a:(Lc/a;Lc/a;)Z` @kind virtual;
  #L26f418.  v0:= temp;
  #L26f41a.  if v0 != 0 then goto L26f420;
  #L26f41e.  return v2;
  #L26f420.  call temp:= `a`(v5) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f426.  v0:= temp @kind object;
  #L26f428.  call temp:= `f`(v0) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f42e.  v0:= temp @kind object;
  #L26f430.  call temp:= `a`(v4) @signature `Lc/a/b/c;.a:()Lc/ab;` @kind virtual;
  #L26f436.  v1:= temp @kind object;
  #L26f438.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f43e.  v1:= temp @kind object;
  #L26f440.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f446.  v1:= temp @kind object;
  #L26f448.  call temp:= `f`(v1) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f44e.  v1:= temp @kind object;
  #L26f450.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26f456.  v0:= temp;
  #L26f458.  v1:= 1I;
  #L26f45a.  if v0 == 0 then goto L26f460;
  #L26f45e.  return v1;
  #L26f460.  v0:= v4.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f464.  if v0 != 0 then goto L26f46a;
  #L26f468.  return v2;
  #L26f46a.  if v6 != 0 then goto L26f470;
  #L26f46e.  return v2;
  #L26f470.  call temp:= `b`(v6) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L26f476.  v0:= temp @kind object;
  #L26f478.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L26f47e.  v0:= temp @kind object;
  #L26f480.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L26f484.  if v0 == v3 then goto L26f48a;
  #L26f488.  return v2;
  #L26f48a.  v0:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f48e.  call temp:= `b`(v0) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L26f494.  v0:= temp @kind object;
  #L26f496.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L26f49c.  v0:= temp @kind object;
  #L26f49e.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L26f4a2.  if v0 == v3 then goto L26f4a8;
  #L26f4a6.  return v2;
  #L26f4a8.  v0:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f4ac.  call temp:= `c`(v0) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26f4b2.  v0:= temp @kind object;
  #L26f4b4.  call temp:= `c`(v6) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26f4ba.  v3:= temp @kind object;
  #L26f4bc.  call temp:= `equals`(v0, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26f4c2.  v0:= temp;
  #L26f4c4.  if v0 != 0 then goto L26f4ca;
  #L26f4c8.  return v2;
  #L26f4ca.  call temp:= `a`(v6) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f4d0.  v6:= temp @kind object;
  #L26f4d2.  call temp:= `j`(v6) @signature `Lc/a;.j:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L26f4d8.  v6:= temp @kind object;
  #L26f4da.  v0:= `@@c.a.i.d.a` @type ^`c.a.i.d` @kind object;
  #L26f4de.  if v6 == v0 then goto L26f4e4;
  #L26f4e2.  return v2;
  #L26f4e4.  call temp:= `a`(v5) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f4ea.  v6:= temp @kind object;
  #L26f4ec.  call temp:= `a`(v4, v6) @signature `Lc/a/b/c;.a:(Lc/r;)Z` @kind virtual;
  #L26f4f2.  v6:= temp;
  #L26f4f4.  if v6 != 0 then goto L26f4fa;
  #L26f4f8.  return v2;
  #L26f4fa.  call temp:= `k`(v5) @signature `Lc/a;.k:()Lc/f;` @kind virtual;
  #L26f500.  v6:= temp @kind object;
  #L26f502.  call temp:= `a`(v5) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f508.  v5:= temp @kind object;
  #L26f50a.  call temp:= `f`(v5) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f510.  v5:= temp @kind object;
  #L26f512.  call temp:= `c`(v4) @signature `Lc/a/b/c;.c:()Lc/p;` @kind virtual;
  #L26f518.  v0:= temp @kind object;
  #L26f51a.  call temp:= `b`(v0) @signature `Lc/p;.b:()Ljava/util/List;` @kind virtual;
  #L26f520.  v0:= temp @kind object;
  #L26f522.  call `a`(v6, v5, v0) @signature `Lc/f;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L26f528.  return v1;
  #L26f52a.  return v2;
  #L26f52c.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L26f4fa..L26f528] goto L26f52a;
}
procedure `boolean` `a`(`c.a.b.c` v4 @kind this, `c.r` v5 @kind object) @signature `Lc/a/b/c;.a:(Lc/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f550.  call temp:= `g`(v5) @signature `Lc/r;.g:()I` @kind virtual;
  #L26f556.  v0:= temp;
  #L26f558.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f55c.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f562.  v1:= temp @kind object;
  #L26f564.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f56a.  v1:= temp @kind object;
  #L26f56c.  call temp:= `g`(v1) @signature `Lc/r;.g:()I` @kind virtual;
  #L26f572.  v1:= temp;
  #L26f574.  v2:= 0I;
  #L26f576.  if v0 == v1 then goto L26f57c;
  #L26f57a.  return v2;
  #L26f57c.  call temp:= `f`(v5) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f582.  v0:= temp @kind object;
  #L26f584.  v1:= v4.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f588.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f58e.  v1:= temp @kind object;
  #L26f590.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f596.  v1:= temp @kind object;
  #L26f598.  call temp:= `f`(v1) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f59e.  v1:= temp @kind object;
  #L26f5a0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L26f5a6.  v0:= temp;
  #L26f5a8.  v1:= 1I;
  #L26f5aa.  if v0 != 0 then goto L26f5ec;
  #L26f5ae.  v0:= v4.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26f5b2.  if v0 == 0 then goto L26f5e8;
  #L26f5b6.  v0:= `@@c.a.i.d.a` @type ^`c.a.i.d` @kind object;
  #L26f5ba.  call temp:= `f`(v5) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f5c0.  v5:= temp @kind object;
  #L26f5c2.  v3:= v4.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26f5c6.  call temp:= `b`(v3) @signature `Lc/p;.b:()Ljava/util/List;` @kind virtual;
  #L26f5cc.  v3:= temp @kind object;
  #L26f5ce.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26f5d4.  v3:= temp @kind object;
  #L26f5d6.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L26f5da.  call temp:= `a`(v0, v5, v3) @signature `Lc/a/i/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L26f5e0.  v5:= temp;
  #L26f5e2.  if v5 == 0 then goto L26f5e8;
  #L26f5e6.  goto L26f5ea;
  #L26f5e8.  v1:= 0I;
  #L26f5ea.  return v1;
  #L26f5ec.  return v1;
}
procedure `boolean` `a`(`c.a.b.c` v4 @kind this, `boolean` v5 ) @signature `Lc/a/b/c;.a:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L26f308.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f30c.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L26f312.  v0:= temp;
  #L26f314.  v1:= 0I;
  #L26f316.  if v0 != 0 then goto L26f3aa;
  #L26f31a.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f31e.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L26f324.  v0:= temp;
  #L26f326.  if v0 != 0 then goto L26f3aa;
  #L26f32a.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f32e.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L26f334.  v0:= temp;
  #L26f336.  if v0 == 0 then goto L26f33c;
  #L26f33a.  goto L26f3aa;
  #L26f33c.  v0:= v4.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f340.  v2:= 1I;
  #L26f342.  if v0 == 0 then goto L26f356;
  #L26f346.  v5:= v4.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f34a.  call temp:= `d`(v5) @signature `Lc/a/e/g;.d:()Z` @kind virtual;
  #L26f350.  v5:= temp;
  #L26f352.  v5:= v5 ^~ v2 @kind int;
  #L26f354.  return v5;
  #L26f356.  if v5 == 0 then goto L26f3a8;
  #L26f35a.  v5:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f35e.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L26f364.  v5:= temp;
  #L26f366.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f36a.  call `setSoTimeout`(v0, v2) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26f370.  v0:= v4.`c.a.b.c.n` @type ^`d.e` @kind object;
  #L26f374.  call temp:= `e`(v0) @signature `Ld/e;.e:()Z` @kind interface;
  #L26f37a.  v0:= temp;
  #L26f37c.  if v0 == 0 then goto L26f38c;
  #L26f380.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f384.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26f38a.  return v1;
  #L26f38c.  v0:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f390.  call `setSoTimeout`(v0, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26f396.  return v2;
  #L26f398.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L26f39a.  v3:= v4.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26f39e.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L26f3a4.  throw v0;
  #L26f3a6.  return v1;
  #L26f3a8.  return v2;
  #L26f3aa.  return v1;
  catch `java.net.SocketTimeoutException` @[L26f35a..L26f366] goto L26f3a8;
  catch `java.io.IOException` @[L26f35a..L26f366] goto L26f3a6;
  catch `java.lang.Throwable` @[L26f366..L26f37c] goto L26f398;
  catch `java.net.SocketTimeoutException` @[L26f380..L26f3a6] goto L26f3a8;
  catch `java.io.IOException` @[L26f380..L26f3a6] goto L26f3a6;
}
procedure `java.net.Socket` `b`(`c.a.b.c` v1 @kind this) @signature `Lc/a/b/c;.b:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26fa8c.  v0:= v1.`c.a.b.c.j` @type ^`java.net.Socket` @kind object;
  #L26fa90.  return v0 @kind object;
}
procedure `c.p` `c`(`c.a.b.c` v1 @kind this) @signature `Lc/a/b/c;.c:()Lc/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f710.  v0:= v1.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26f714.  return v0 @kind object;
}
procedure `boolean` `d`(`c.a.b.c` v1 @kind this) @signature `Lc/a/b/c;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L26f648.  v0:= v1.`c.a.b.c.m` @type ^`c.a.e.g` @kind object;
  #L26f64c.  if v0 == 0 then goto L26f654;
  #L26f650.  v0:= 1I;
  #L26f652.  goto L26f656;
  #L26f654.  v0:= 0I;
  #L26f656.  return v0;
}
procedure `java.lang.String` `toString`(`c.a.b.c` v2 @kind this) @signature `Lc/a/b/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L26f990.  v0:= new `java.lang.StringBuilder`;
  #L26f994.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L26f99a.  v1:= "Connection{" @kind object;
  #L26f99e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f9a4.  v1:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f9a8.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f9ae.  v1:= temp @kind object;
  #L26f9b0.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f9b6.  v1:= temp @kind object;
  #L26f9b8.  call temp:= `f`(v1) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L26f9be.  v1:= temp @kind object;
  #L26f9c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f9c6.  v1:= ":" @kind object;
  #L26f9ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f9d0.  v1:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26f9d4.  call temp:= `a`(v1) @signature `Lc/ab;.a:()Lc/a;` @kind virtual;
  #L26f9da.  v1:= temp @kind object;
  #L26f9dc.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L26f9e2.  v1:= temp @kind object;
  #L26f9e4.  call temp:= `g`(v1) @signature `Lc/r;.g:()I` @kind virtual;
  #L26f9ea.  v1:= temp;
  #L26f9ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f9f2.  v1:= ", proxy=" @kind object;
  #L26f9f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26f9fc.  v1:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26fa00.  call temp:= `b`(v1) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L26fa06.  v1:= temp @kind object;
  #L26fa08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa0e.  v1:= " hostAddress=" @kind object;
  #L26fa12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa18.  v1:= v2.`c.a.b.c.h` @type ^`c.ab` @kind object;
  #L26fa1c.  call temp:= `c`(v1) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L26fa22.  v1:= temp @kind object;
  #L26fa24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa2a.  v1:= " cipherSuite=" @kind object;
  #L26fa2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa34.  v1:= v2.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26fa38.  if v1 == 0 then goto L26fa4a;
  #L26fa3c.  v1:= v2.`c.a.b.c.k` @type ^`c.p` @kind object;
  #L26fa40.  call temp:= `a`(v1) @signature `Lc/p;.a:()Lc/g;` @kind virtual;
  #L26fa46.  v1:= temp @kind object;
  #L26fa48.  goto L26fa4e;
  #L26fa4a.  v1:= "none" @kind object;
  #L26fa4e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa54.  v1:= " protocol=" @kind object;
  #L26fa58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa5e.  v1:= v2.`c.a.b.c.l` @type ^`c.v` @kind object;
  #L26fa62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa68.  v1:= 125I;
  #L26fa6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L26fa72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L26fa78.  v0:= temp @kind object;
  #L26fa7a.  return v0 @kind object;
}
