record `c.a.b.f` @kind class @AccessFlag PUBLIC_FINAL {
  `c.a` `c.a.b.f.a` @AccessFlag PRIVATE_FINAL;
  `c.a.b.d` `c.a.b.f.b` @AccessFlag PRIVATE_FINAL;
  `c.e` `c.a.b.f.c` @AccessFlag PRIVATE_FINAL;
  `c.o` `c.a.b.f.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `c.a.b.f.e` @AccessFlag PRIVATE;
  `int` `c.a.b.f.f` @AccessFlag PRIVATE;
  `java.util.List` `c.a.b.f.g` @AccessFlag PRIVATE;
  `java.util.List` `c.a.b.f.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.b.f` v1 @kind this, `c.a` v2 @kind object, `c.a.b.d` v3 @kind object, `c.e` v4 @kind object, `c.o` v5 @kind object) @signature `Lc/a/b/f;.<init>:(Lc/a;Lc/a/b/d;Lc/e;Lc/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L270798.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27079e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2707a4.  v0:= temp @kind object;
  #L2707a6.  v1.`c.a.b.f.e` @type ^`java.util.List` := v0 @kind object;
  #L2707aa.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2707b0.  v0:= temp @kind object;
  #L2707b2.  v1.`c.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L2707b6.  v0:= new `java.util.ArrayList`;
  #L2707ba.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2707c0.  v1.`c.a.b.f.h` @type ^`java.util.List` := v0 @kind object;
  #L2707c4.  v1.`c.a.b.f.a` @type ^`c.a` := v2 @kind object;
  #L2707c8.  v1.`c.a.b.f.b` @type ^`c.a.b.d` := v3 @kind object;
  #L2707cc.  v1.`c.a.b.f.c` @type ^`c.e` := v4 @kind object;
  #L2707d0.  v1.`c.a.b.f.d` @type ^`c.o` := v5 @kind object;
  #L2707d4.  call temp:= `a`(v2) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L2707da.  v3:= temp @kind object;
  #L2707dc.  call temp:= `h`(v2) @signature `Lc/a;.h:()Ljava/net/Proxy;` @kind virtual;
  #L2707e2.  v2:= temp @kind object;
  #L2707e4.  call `a`(v1, v3, v2) @signature `Lc/a/b/f;.a:(Lc/r;Ljava/net/Proxy;)V` @kind direct;
  #L2707ea.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lc/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L2706d0.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L2706d6.  v0:= temp @kind object;
  #L2706d8.  if v0 != 0 then goto L2706e6;
  #L2706dc.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L2706e2.  v1:= temp @kind object;
  #L2706e4.  return v1 @kind object;
  #L2706e6.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L2706ec.  v1:= temp @kind object;
  #L2706ee.  return v1 @kind object;
}
procedure `void` `a`(`c.a.b.f` v1 @kind this, `c.r` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lc/a/b/f;.a:(Lc/r;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L270878.  v0:= 0I;
  #L27087a.  if v3 == 0 then goto L27088c;
  #L27087e.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L270884.  v2:= temp @kind object;
  #L270886.  v1.`c.a.b.f.e` @type ^`java.util.List` := v2 @kind object;
  #L27088a.  goto L2708dc;
  #L27088c.  v3:= v1.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270890.  call temp:= `g`(v3) @signature `Lc/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L270896.  v3:= temp @kind object;
  #L270898.  call temp:= `a`(v2) @signature `Lc/r;.a:()Ljava/net/URI;` @kind virtual;
  #L27089e.  v2:= temp @kind object;
  #L2708a0.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L2708a6.  v2:= temp @kind object;
  #L2708a8.  if v2 == 0 then goto L2708c2;
  #L2708ac.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2708b2.  v3:= temp;
  #L2708b4.  if v3 != 0 then goto L2708c2;
  #L2708b8.  call temp:= `a`(v2) @signature `Lc/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2708be.  v2:= temp @kind object;
  #L2708c0.  goto L2708d8;
  #L2708c2.  v2:= 1I;
  #L2708c4.  v2:= new `java.net.Proxy`[v2];
  #L2708c8.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L2708cc.  v2[v0]:= v3 @kind object;
  #L2708d0.  call temp:= `a`(v2) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2708d6.  v2:= temp @kind object;
  #L2708d8.  v1.`c.a.b.f.e` @type ^`java.util.List` := v2 @kind object;
  #L2708dc.  v1.`c.a.b.f.f` @type ^`int` := v0;
  #L2708e0.  return @kind void;
}
procedure `void` `a`(`c.a.b.f` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lc/a/b/f;.a:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2708f4.  v0:= new `java.util.ArrayList`;
  #L2708f8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2708fe.  v6.`c.a.b.f.g` @type ^`java.util.List` := v0 @kind object;
  #L270902.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L270908.  v0:= temp @kind object;
  #L27090a.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L27090e.  if v0 == v1 then goto L270980;
  #L270912.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L270918.  v0:= temp @kind object;
  #L27091a.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L27091e.  if v0 != v1 then goto L270924;
  #L270922.  goto L270980;
  #L270924.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L27092a.  v0:= temp @kind object;
  #L27092c.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L270930.  if v1 != 0 then goto L27096a;
  #L270934.  v7:= new `java.lang.IllegalArgumentException`;
  #L270938.  v1:= new `java.lang.StringBuilder`;
  #L27093c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L270942.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L270946.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27094c.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L270952.  v0:= temp @kind object;
  #L270954.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27095a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L270960.  v0:= temp @kind object;
  #L270962.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270968.  throw v7;
  #L27096a.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L27096e.  call temp:= `a`(v0) @signature `Lc/a/b/f;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L270974.  v1:= temp @kind object;
  #L270976.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L27097c.  v0:= temp;
  #L27097e.  goto L2709a8;
  #L270980.  v0:= v6.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270984.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L27098a.  v0:= temp @kind object;
  #L27098c.  call temp:= `f`(v0) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L270992.  v1:= temp @kind object;
  #L270994.  v0:= v6.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270998.  call temp:= `a`(v0) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L27099e.  v0:= temp @kind object;
  #L2709a0.  call temp:= `g`(v0) @signature `Lc/r;.g:()I` @kind virtual;
  #L2709a6.  v0:= temp;
  #L2709a8.  v2:= 1I;
  #L2709aa.  if v0 < v2 then goto L270a90;
  #L2709ae.  v2:= 65535I;
  #L2709b4.  if v0 <= v2 then goto L2709ba;
  #L2709b8.  goto L270a90;
  #L2709ba.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2709c0.  v7:= temp @kind object;
  #L2709c2.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L2709c6.  if v7 != v2 then goto L2709de;
  #L2709ca.  v7:= v6.`c.a.b.f.g` @type ^`java.util.List` @kind object;
  #L2709ce.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L2709d4.  v0:= temp @kind object;
  #L2709d6.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2709dc.  goto L270a8e;
  #L2709de.  v7:= v6.`c.a.b.f.d` @type ^`c.o` @kind object;
  #L2709e2.  v2:= v6.`c.a.b.f.c` @type ^`c.e` @kind object;
  #L2709e6.  call `a`(v7, v2, v1) @signature `Lc/o;.a:(Lc/e;Ljava/lang/String;)V` @kind virtual;
  #L2709ec.  v7:= v6.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L2709f0.  call temp:= `b`(v7) @signature `Lc/a;.b:()Lc/n;` @kind virtual;
  #L2709f6.  v7:= temp @kind object;
  #L2709f8.  call temp:= `a`(v7, v1) @signature `Lc/n;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L2709fe.  v7:= temp @kind object;
  #L270a00.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L270a06.  v2:= temp;
  #L270a08.  if v2 == 0 then goto L270a4c;
  #L270a0c.  v7:= new `java.net.UnknownHostException`;
  #L270a10.  v0:= new `java.lang.StringBuilder`;
  #L270a14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L270a1a.  v2:= v6.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270a1e.  call temp:= `b`(v2) @signature `Lc/a;.b:()Lc/n;` @kind virtual;
  #L270a24.  v2:= temp @kind object;
  #L270a26.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270a2c.  v2:= " returned no addresses for " @kind object;
  #L270a30.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270a36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270a3c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L270a42.  v0:= temp @kind object;
  #L270a44.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270a4a.  throw v7;
  #L270a4c.  v2:= v6.`c.a.b.f.d` @type ^`c.o` @kind object;
  #L270a50.  v3:= v6.`c.a.b.f.c` @type ^`c.e` @kind object;
  #L270a54.  call `a`(v2, v3, v1, v7) @signature `Lc/o;.a:(Lc/e;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L270a5a.  v1:= 0I;
  #L270a5c.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L270a62.  v2:= temp;
  #L270a64.  if v1 >= v2 then goto L270a8e;
  #L270a68.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L270a6e.  v3:= temp @kind object;
  #L270a70.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L270a74.  v4:= v6.`c.a.b.f.g` @type ^`java.util.List` @kind object;
  #L270a78.  v5:= new `java.net.InetSocketAddress`;
  #L270a7c.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L270a82.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L270a88.  v1:= v1 + 1;
  #L270a8c.  goto L270a64;
  #L270a8e.  return @kind void;
  #L270a90.  v7:= new `java.net.SocketException`;
  #L270a94.  v2:= new `java.lang.StringBuilder`;
  #L270a98.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L270a9e.  v3:= "No route to " @kind object;
  #L270aa2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270aa8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270aae.  v1:= ":" @kind object;
  #L270ab2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270ab8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L270abe.  v0:= "; port is out of range" @kind object;
  #L270ac2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270ac8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L270ace.  v0:= temp @kind object;
  #L270ad0.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270ad6.  throw v7;
}
procedure `boolean` `c`(`c.a.b.f` v2 @kind this) @signature `Lc/a/b/f;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2705cc.  v0:= v2.`c.a.b.f.f` @type ^`int`;
  #L2705d0.  v1:= v2.`c.a.b.f.e` @type ^`java.util.List` @kind object;
  #L2705d4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2705da.  v1:= temp;
  #L2705dc.  if v0 >= v1 then goto L2705e4;
  #L2705e0.  v0:= 1I;
  #L2705e2.  goto L2705e6;
  #L2705e4.  v0:= 0I;
  #L2705e6.  return v0;
}
procedure `java.net.Proxy` `d`(`c.a.b.f` v3 @kind this) @signature `Lc/a/b/f;.d:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L270700.  call temp:= `c`(v3) @signature `Lc/a/b/f;.c:()Z` @kind direct;
  #L270706.  v0:= temp;
  #L270708.  if v0 != 0 then goto L270762;
  #L27070c.  v0:= new `java.net.SocketException`;
  #L270710.  v1:= new `java.lang.StringBuilder`;
  #L270714.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27071a.  v2:= "No route to " @kind object;
  #L27071e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270724.  v2:= v3.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270728.  call temp:= `a`(v2) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L27072e.  v2:= temp @kind object;
  #L270730.  call temp:= `f`(v2) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L270736.  v2:= temp @kind object;
  #L270738.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27073e.  v2:= "; exhausted proxy configurations: " @kind object;
  #L270742.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270748.  v2:= v3.`c.a.b.f.e` @type ^`java.util.List` @kind object;
  #L27074c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L270752.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L270758.  v1:= temp @kind object;
  #L27075a.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L270760.  throw v0;
  #L270762.  v0:= v3.`c.a.b.f.e` @type ^`java.util.List` @kind object;
  #L270766.  v1:= v3.`c.a.b.f.f` @type ^`int`;
  #L27076a.  v2:= v1 + 1;
  #L27076e.  v3.`c.a.b.f.f` @type ^`int` := v2;
  #L270772.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L270778.  v0:= temp @kind object;
  #L27077a.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L27077e.  call `a`(v3, v0) @signature `Lc/a/b/f;.a:(Ljava/net/Proxy;)V` @kind direct;
  #L270784.  return v0 @kind object;
}
procedure `void` `a`(`c.a.b.f` v3 @kind this, `c.ab` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lc/a/b/f;.a:(Lc/ab;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2707fc.  call temp:= `b`(v4) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L270802.  v0:= temp @kind object;
  #L270804.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L27080a.  v0:= temp @kind object;
  #L27080c.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L270810.  if v0 == v1 then goto L27085a;
  #L270814.  v0:= v3.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270818.  call temp:= `g`(v0) @signature `Lc/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L27081e.  v0:= temp @kind object;
  #L270820.  if v0 == 0 then goto L27085a;
  #L270824.  v0:= v3.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270828.  call temp:= `g`(v0) @signature `Lc/a;.g:()Ljava/net/ProxySelector;` @kind virtual;
  #L27082e.  v0:= temp @kind object;
  #L270830.  v1:= v3.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270834.  call temp:= `a`(v1) @signature `Lc/a;.a:()Lc/r;` @kind virtual;
  #L27083a.  v1:= temp @kind object;
  #L27083c.  call temp:= `a`(v1) @signature `Lc/r;.a:()Ljava/net/URI;` @kind virtual;
  #L270842.  v1:= temp @kind object;
  #L270844.  call temp:= `b`(v4) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @kind virtual;
  #L27084a.  v2:= temp @kind object;
  #L27084c.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L270852.  v2:= temp @kind object;
  #L270854.  call `connectFailed`(v0, v1, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L27085a.  v5:= v3.`c.a.b.f.b` @type ^`c.a.b.d` @kind object;
  #L27085e.  call `a`(v5, v4) @signature `Lc/a/b/d;.a:(Lc/ab;)V` @kind virtual;
  #L270864.  return @kind void;
}
procedure `boolean` `a`(`c.a.b.f` v1 @kind this) @signature `Lc/a/b/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L270594.  call temp:= `c`(v1) @signature `Lc/a/b/f;.c:()Z` @kind direct;
  #L27059a.  v0:= temp;
  #L27059c.  if v0 != 0 then goto L2705b6;
  #L2705a0.  v0:= v1.`c.a.b.f.h` @type ^`java.util.List` @kind object;
  #L2705a4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2705aa.  v0:= temp;
  #L2705ac.  if v0 != 0 then goto L2705b2;
  #L2705b0.  goto L2705b6;
  #L2705b2.  v0:= 0I;
  #L2705b4.  goto L2705b8;
  #L2705b6.  v0:= 1I;
  #L2705b8.  return v0;
}
procedure `c.a.b.f$a` `b`(`c.a.b.f` v7 @kind this) @signature `Lc/a/b/f;.b:()Lc/a/b/f$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2705f8.  call temp:= `a`(v7) @signature `Lc/a/b/f;.a:()Z` @kind virtual;
  #L2705fe.  v0:= temp;
  #L270600.  if v0 != 0 then goto L270610;
  #L270604.  v0:= new `java.util.NoSuchElementException`;
  #L270608.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L27060e.  throw v0;
  #L270610.  v0:= new `java.util.ArrayList`;
  #L270614.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L27061a.  call temp:= `c`(v7) @signature `Lc/a/b/f;.c:()Z` @kind direct;
  #L270620.  v1:= temp;
  #L270622.  if v1 == 0 then goto L270692;
  #L270626.  call temp:= `d`(v7) @signature `Lc/a/b/f;.d:()Ljava/net/Proxy;` @kind direct;
  #L27062c.  v1:= temp @kind object;
  #L27062e.  v2:= 0I;
  #L270630.  v3:= v7.`c.a.b.f.g` @type ^`java.util.List` @kind object;
  #L270634.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27063a.  v3:= temp;
  #L27063c.  if v2 >= v3 then goto L270686;
  #L270640.  v4:= new `c.ab`;
  #L270644.  v5:= v7.`c.a.b.f.a` @type ^`c.a` @kind object;
  #L270648.  v6:= v7.`c.a.b.f.g` @type ^`java.util.List` @kind object;
  #L27064c.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L270652.  v6:= temp @kind object;
  #L270654.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L270658.  call `<init>`(v4, v5, v1, v6) @signature `Lc/ab;.<init>:(Lc/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L27065e.  v5:= v7.`c.a.b.f.b` @type ^`c.a.b.d` @kind object;
  #L270662.  call temp:= `c`(v5, v4) @signature `Lc/a/b/d;.c:(Lc/ab;)Z` @kind virtual;
  #L270668.  v5:= temp;
  #L27066a.  if v5 == 0 then goto L27067a;
  #L27066e.  v5:= v7.`c.a.b.f.h` @type ^`java.util.List` @kind object;
  #L270672.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L270678.  goto L270680;
  #L27067a.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L270680.  v2:= v2 + 1;
  #L270684.  goto L27063c;
  #L270686.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L27068c.  v1:= temp;
  #L27068e.  if v1 != 0 then goto L27061a;
  #L270692.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L270698.  v1:= temp;
  #L27069a.  if v1 == 0 then goto L2706b2;
  #L27069e.  v1:= v7.`c.a.b.f.h` @type ^`java.util.List` @kind object;
  #L2706a2.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L2706a8.  v1:= v7.`c.a.b.f.h` @type ^`java.util.List` @kind object;
  #L2706ac.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2706b2.  v1:= new `c.a.b.f$a`;
  #L2706b6.  call `<init>`(v1, v0) @signature `Lc/a/b/f$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L2706bc.  return v1 @kind object;
}
