record `c.a.d.a$a` @kind class @AccessFlag ABSTRACT extends `d.s` @kind interface {
  `d.i` `c.a.d.a$a.a` @AccessFlag PROTECTED_FINAL;
  `boolean` `c.a.d.a$a.b` @AccessFlag PROTECTED;
  `long` `c.a.d.a$a.c` @AccessFlag PROTECTED;
  `c.a.d.a` `c.a.d.a$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`c.a.d.a$a` v2 @kind this, `c.a.d.a` v3 @kind object) @signature `Lc/a/d/a$a;.<init>:(Lc/a/d/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L273ffc.  v2.`c.a.d.a$a.d` @type ^`c.a.d.a` := v3 @kind object;
  #L274000.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L274006.  v3:= new `d.i`;
  #L27400a.  v0:= v2.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L27400e.  v0:= v0.`c.a.d.a.c` @type ^`d.e` @kind object;
  #L274012.  call temp:= `a`(v0) @signature `Ld/e;.a:()Ld/t;` @kind interface;
  #L274018.  v0:= temp @kind object;
  #L27401a.  call `<init>`(v3, v0) @signature `Ld/i;.<init>:(Ld/t;)V` @kind direct;
  #L274020.  v2.`c.a.d.a$a.a` @type ^`d.i` := v3 @kind object;
  #L274024.  v0:= 0L;
  #L274028.  v2.`c.a.d.a$a.c` @type ^`long` := v0 @kind wide;
  #L27402c.  return @kind void;
}
procedure `void` `<init>`(`c.a.d.a$a` v0 @kind this, `c.a.d.a` v1 @kind object, `c.a.d.a$1` v2 @kind object) @signature `Lc/a/d/a$a;.<init>:(Lc/a/d/a;Lc/a/d/a$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L274040.  call `<init>`(v0, v1) @signature `Lc/a/d/a$a;.<init>:(Lc/a/d/a;)V` @kind direct;
  #L274046.  return @kind void;
}
procedure `long` `a`(`c.a.d.a$a` v4 @kind this, `d.c` v5 @kind object, `long` v6 ) @signature `Lc/a/d/a$a;.a:(Ld/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L273fa4.  v0:= v4.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L273fa8.  v0:= v0.`c.a.d.a.c` @type ^`d.e` @kind object;
  #L273fac.  call temp:= `a`(v0, v5, v6) @signature `Ld/e;.a:(Ld/c;J)J` @kind interface;
  #L273fb2.  v5:= temp @kind wide;
  #L273fb4.  v0:= 0L;
  #L273fb8.  v7:= lcmp(v5, v0);
  #L273fbc.  if v7 <= 0 then goto L273fce;
  #L273fc0.  v0:= v4.`c.a.d.a$a.c` @type ^`long` @kind wide;
  #L273fc4.  v7:= 0I;
  #L273fc6.  v2:= v0 + v5 @kind long;
  #L273fca.  v4.`c.a.d.a$a.c` @type ^`long` := v2 @kind wide;
  #L273fce.  return v5 @kind wide;
  #L273fd0.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L273fd2.  v6:= 0I;
  #L273fd4.  call `a`(v4, v6, v5) @signature `Lc/a/d/a$a;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L273fda.  throw v5;
  catch `java.io.IOException` @[L273fa4..L273fce] goto L273fd0;
}
procedure `d.t` `a`(`c.a.d.a$a` v1 @kind this) @signature `Lc/a/d/a$a;.a:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L273f8c.  v0:= v1.`c.a.d.a$a.a` @type ^`d.i` @kind object;
  #L273f90.  return v0 @kind object;
}
procedure `void` `a`(`c.a.d.a$a` v7 @kind this, `boolean` v8 , `java.io.IOException` v9 @kind object) @signature `Lc/a/d/a$a;.a:(ZLjava/io/IOException;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L274058.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L27405c.  v0:= v0.`c.a.d.a.e` @type ^`int`;
  #L274060.  v1:= 6I;
  #L274062.  if v0 != v1 then goto L274068;
  #L274066.  return @kind void;
  #L274068.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L27406c.  v0:= v0.`c.a.d.a.e` @type ^`int`;
  #L274070.  v2:= 5I;
  #L274072.  if v0 == v2 then goto L2740ac;
  #L274076.  v8:= new `java.lang.IllegalStateException`;
  #L27407a.  v9:= new `java.lang.StringBuilder`;
  #L27407e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L274084.  v0:= "state: " @kind object;
  #L274088.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27408e.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L274092.  v0:= v0.`c.a.d.a.e` @type ^`int`;
  #L274096.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27409c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2740a2.  v9:= temp @kind object;
  #L2740a4.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2740aa.  throw v8;
  #L2740ac.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L2740b0.  v2:= v7.`c.a.d.a$a.a` @type ^`d.i` @kind object;
  #L2740b4.  call `a`(v0, v2) @signature `Lc/a/d/a;.a:(Ld/i;)V` @kind virtual;
  #L2740ba.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L2740be.  v0.`c.a.d.a.e` @type ^`int` := v1;
  #L2740c2.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L2740c6.  v0:= v0.`c.a.d.a.b` @type ^`c.a.b.g` @kind object;
  #L2740ca.  if v0 == 0 then goto L2740ea;
  #L2740ce.  v0:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L2740d2.  v1:= v0.`c.a.d.a.b` @type ^`c.a.b.g` @kind object;
  #L2740d6.  v2:= v8 ^~ 1;
  #L2740da.  v3:= v7.`c.a.d.a$a.d` @type ^`c.a.d.a` @kind object;
  #L2740de.  v4:= v7.`c.a.d.a$a.c` @type ^`long` @kind wide;
  #L2740e2.  v6:= v9 @kind object;
  #L2740e4.  call `a`(v1, v2, v3, v4, v6) @signature `Lc/a/b/g;.a:(ZLc/a/c/c;JLjava/io/IOException;)V` @kind virtual;
  #L2740ea.  return @kind void;
}
