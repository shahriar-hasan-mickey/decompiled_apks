record `c.a.d.a$e` @kind class @AccessFlag  extends `c.a.d.a$a` @kind class {
  `c.a.d.a` `c.a.d.a$e.e` @AccessFlag FINAL_SYNTHETIC;
  `long` `c.a.d.a$e.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c.a.d.a$e` v3 @kind this, `c.a.d.a` v4 @kind object, `long` v5 ) @signature `Lc/a/d/a$e;.<init>:(Lc/a/d/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L274764.  v3.`c.a.d.a$e.e` @type ^`c.a.d.a` := v4 @kind object;
  #L274768.  v0:= 0I;
  #L27476a.  call `<init>`(v3, v4, v0) @signature `Lc/a/d/a$a;.<init>:(Lc/a/d/a;Lc/a/d/a$1;)V` @kind direct;
  #L274770.  v3.`c.a.d.a$e.f` @type ^`long` := v5 @kind wide;
  #L274774.  v4:= v3.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L274778.  v1:= 0L;
  #L27477c.  v6:= lcmp(v4, v1);
  #L274780.  if v6 != 0 then goto L27478c;
  #L274784.  v4:= 1I;
  #L274786.  call `a`(v3, v4, v0) @signature `Lc/a/d/a$e;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L27478c.  return @kind void;
}
procedure `long` `a`(`c.a.d.a$e` v6 @kind this, `d.c` v7 @kind object, `long` v8 ) @signature `Lc/a/d/a$e;.a:(Ld/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L274698.  v0:= 0L;
  #L27469c.  v2:= lcmp(v8, v0);
  #L2746a0.  if v2 >= 0 then goto L2746d2;
  #L2746a4.  v7:= new `java.lang.IllegalArgumentException`;
  #L2746a8.  v0:= new `java.lang.StringBuilder`;
  #L2746ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2746b2.  v1:= "byteCount < 0: " @kind object;
  #L2746b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2746bc.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2746c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2746c8.  v8:= temp @kind object;
  #L2746ca.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2746d0.  throw v7;
  #L2746d2.  v2:= v6.`c.a.d.a$e.b` @type ^`boolean` @kind boolean;
  #L2746d6.  if v2 == 0 then goto L2746ea;
  #L2746da.  v7:= new `java.lang.IllegalStateException`;
  #L2746de.  v8:= "closed" @kind object;
  #L2746e2.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2746e8.  throw v7;
  #L2746ea.  v2:= v6.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L2746ee.  v4:= lcmp(v2, v0);
  #L2746f2.  v2:= -1L;
  #L2746f6.  if v4 != 0 then goto L2746fc;
  #L2746fa.  return v2 @kind wide;
  #L2746fc.  v4:= v6.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L274700.  call temp:= `min`(v4, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L274706.  v8:= temp @kind wide;
  #L274708.  call temp:= `a`(v6, v7, v8) @signature `Lc/a/d/a$a;.a:(Ld/c;J)J` @kind super;
  #L27470e.  v7:= temp @kind wide;
  #L274710.  v9:= lcmp(v7, v2);
  #L274714.  if v9 != 0 then goto L274730;
  #L274718.  v7:= new `java.net.ProtocolException`;
  #L27471c.  v8:= "unexpected end of stream" @kind object;
  #L274720.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L274726.  v8:= 0I;
  #L274728.  call `a`(v6, v8, v7) @signature `Lc/a/d/a$e;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L27472e.  throw v7;
  #L274730.  v2:= v6.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L274734.  v4:= v2 - v7 @kind long;
  #L274738.  v6.`c.a.d.a$e.f` @type ^`long` := v4 @kind wide;
  #L27473c.  v2:= v6.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L274740.  v9:= lcmp(v2, v0);
  #L274744.  if v9 != 0 then goto L274752;
  #L274748.  v9:= 1I;
  #L27474a.  v0:= 0I;
  #L27474c.  call `a`(v6, v9, v0) @signature `Lc/a/d/a$e;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L274752.  return v7 @kind wide;
}
procedure `void` `close`(`c.a.d.a$e` v5 @kind this) @signature `Lc/a/d/a$e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2747a0.  v0:= v5.`c.a.d.a$e.b` @type ^`boolean` @kind boolean;
  #L2747a4.  if v0 == 0 then goto L2747aa;
  #L2747a8.  return @kind void;
  #L2747aa.  v0:= v5.`c.a.d.a$e.f` @type ^`long` @kind wide;
  #L2747ae.  v2:= 0L;
  #L2747b2.  v4:= lcmp(v0, v2);
  #L2747b6.  if v4 == 0 then goto L2747d8;
  #L2747ba.  v0:= 100I;
  #L2747be.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2747c2.  call temp:= `a`(v5, v0, v1) @signature `Lc/a/c;.a:(Ld/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2747c8.  v0:= temp;
  #L2747ca.  if v0 != 0 then goto L2747d8;
  #L2747ce.  v0:= 0I;
  #L2747d0.  v1:= 0I;
  #L2747d2.  call `a`(v5, v0, v1) @signature `Lc/a/d/a$e;.a:(ZLjava/io/IOException;)V` @kind virtual;
  #L2747d8.  v0:= 1I;
  #L2747da.  v5.`c.a.d.a$e.b` @type ^`boolean` := v0 @kind boolean;
  #L2747de.  return @kind void;
}
