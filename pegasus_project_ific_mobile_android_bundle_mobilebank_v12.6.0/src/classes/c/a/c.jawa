record `c.a.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@c.a.c.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@c.a.c.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.aa` `@@c.a.c.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `c.y` `@@c.a.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.TimeZone` `@@c.a.c.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@c.a.c.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `d.f` `@@c.a.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `d.f` `@@c.a.c.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `d.f` `@@c.a.c.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `d.f` `@@c.a.c.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `d.f` `@@c.a.c.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@c.a.c.q` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@c.a.c.r` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L273da8.  v0:= 0I;
  #L273daa.  v1:= new `byte`[v0];
  #L273dae.  `@@c.a.c.a` @type ^`byte`[] := v1 @kind object;
  #L273db2.  v0:= new `java.lang.String`[v0];
  #L273db6.  `@@c.a.c.b` @type ^`java.lang.String`[] := v0 @kind object;
  #L273dba.  v0:= `@@c.a.c.a` @type ^`byte`[] @kind object;
  #L273dbe.  v1:= 0I;
  #L273dc0.  call temp:= `a`(v1, v0) @signature `Lc/aa;.a:(Lc/t;[B)Lc/aa;` @kind static;
  #L273dc6.  v0:= temp @kind object;
  #L273dc8.  `@@c.a.c.c` @type ^`c.aa` := v0 @kind object;
  #L273dcc.  v0:= `@@c.a.c.a` @type ^`byte`[] @kind object;
  #L273dd0.  call temp:= `a`(v1, v0) @signature `Lc/y;.a:(Lc/t;[B)Lc/y;` @kind static;
  #L273dd6.  v0:= temp @kind object;
  #L273dd8.  `@@c.a.c.d` @type ^`c.y` := v0 @kind object;
  #L273ddc.  v0:= "efbbbf" @kind object;
  #L273de0.  call temp:= `b`(v0) @signature `Ld/f;.b:(Ljava/lang/String;)Ld/f;` @kind static;
  #L273de6.  v0:= temp @kind object;
  #L273de8.  `@@c.a.c.i` @type ^`d.f` := v0 @kind object;
  #L273dec.  v0:= "feff" @kind object;
  #L273df0.  call temp:= `b`(v0) @signature `Ld/f;.b:(Ljava/lang/String;)Ld/f;` @kind static;
  #L273df6.  v0:= temp @kind object;
  #L273df8.  `@@c.a.c.j` @type ^`d.f` := v0 @kind object;
  #L273dfc.  v0:= "fffe" @kind object;
  #L273e00.  call temp:= `b`(v0) @signature `Ld/f;.b:(Ljava/lang/String;)Ld/f;` @kind static;
  #L273e06.  v0:= temp @kind object;
  #L273e08.  `@@c.a.c.k` @type ^`d.f` := v0 @kind object;
  #L273e0c.  v0:= "0000ffff" @kind object;
  #L273e10.  call temp:= `b`(v0) @signature `Ld/f;.b:(Ljava/lang/String;)Ld/f;` @kind static;
  #L273e16.  v0:= temp @kind object;
  #L273e18.  `@@c.a.c.l` @type ^`d.f` := v0 @kind object;
  #L273e1c.  v0:= "ffff0000" @kind object;
  #L273e20.  call temp:= `b`(v0) @signature `Ld/f;.b:(Ljava/lang/String;)Ld/f;` @kind static;
  #L273e26.  v0:= temp @kind object;
  #L273e28.  `@@c.a.c.m` @type ^`d.f` := v0 @kind object;
  #L273e2c.  v0:= "UTF-8" @kind object;
  #L273e30.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e36.  v0:= temp @kind object;
  #L273e38.  `@@c.a.c.e` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e3c.  v0:= "ISO-8859-1" @kind object;
  #L273e40.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e46.  v0:= temp @kind object;
  #L273e48.  `@@c.a.c.f` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e4c.  v0:= "UTF-16BE" @kind object;
  #L273e50.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e56.  v0:= temp @kind object;
  #L273e58.  `@@c.a.c.n` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e5c.  v0:= "UTF-16LE" @kind object;
  #L273e60.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e66.  v0:= temp @kind object;
  #L273e68.  `@@c.a.c.o` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e6c.  v0:= "UTF-32BE" @kind object;
  #L273e70.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e76.  v0:= temp @kind object;
  #L273e78.  `@@c.a.c.p` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e7c.  v0:= "UTF-32LE" @kind object;
  #L273e80.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L273e86.  v0:= temp @kind object;
  #L273e88.  `@@c.a.c.q` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L273e8c.  v0:= "GMT" @kind object;
  #L273e90.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L273e96.  v0:= temp @kind object;
  #L273e98.  `@@c.a.c.g` @type ^`java.util.TimeZone` := v0 @kind object;
  #L273e9c.  v0:= new `c.a.c$1`;
  #L273ea0.  call `<init>`(v0) @signature `Lc/a/c$1;.<init>:()V` @kind direct;
  #L273ea6.  `@@c.a.c.h` @type ^`java.util.Comparator` := v0 @kind object;
  #L273eaa.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L273eae.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L273eb4.  v0:= temp @kind object;
  #L273eb6.  `@@c.a.c.r` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L273eba.  return @kind void;
}
procedure `int` `a`(`char` v2 ) @signature `Lc/a/c;.a:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L273574.  v0:= 48I;
  #L273578.  if v2 < v0 then goto L273588;
  #L27357c.  v1:= 57I;
  #L273580.  if v2 > v1 then goto L273588;
  #L273584.  v2:= v2 - v0 @kind int;
  #L273586.  return v2;
  #L273588.  v0:= 97I;
  #L27358c.  if v2 < v0 then goto L2735a0;
  #L273590.  v1:= 102I;
  #L273594.  if v2 > v1 then goto L2735a0;
  #L273598.  v2:= v2 - v0 @kind int;
  #L27359a.  v2:= v2 + 10;
  #L27359e.  return v2;
  #L2735a0.  v0:= 65I;
  #L2735a4.  if v2 < v0 then goto L2735b8;
  #L2735a8.  v1:= 70I;
  #L2735ac.  if v2 > v1 then goto L2735b8;
  #L2735b0.  v2:= v2 - v0 @kind int;
  #L2735b2.  v2:= v2 + 10;
  #L2735b6.  return v2;
  #L2735b8.  v2:= -1I;
  #L2735ba.  return v2;
}
procedure `int` `a`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lc/a/c;.a:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2735cc.  if v2 >= v3 then goto L2735e6;
  #L2735d0.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2735d6.  v0:= temp;
  #L2735d8.  goto L2735e8;
  #L2735de.  return v2;
  #L2735e0.  v2:= v2 + 1;
  #L2735e4.  goto L2735cc;
  #L2735e6.  return v3;
  #L2735e8.  switch v0
                  | 9 => goto L2735e0
                  | 10 => goto L2735e0
                  | 12 => goto L2735e0
                  | 13 => goto L2735e0
                  | 32 => goto L2735e0
                  | else => goto L2735de;
}
procedure `int` `a`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273624.  if v2 >= v3 then goto L27363c;
  #L273628.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27362e.  v0:= temp;
  #L273630.  if v0 != v4 then goto L273636;
  #L273634.  return v2;
  #L273636.  v2:= v2 + 1;
  #L27363a.  goto L273624;
  #L27363c.  return v3;
}
procedure `int` `a`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L273650.  if v3 >= v4 then goto L273672;
  #L273654.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27365a.  v0:= temp;
  #L27365c.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L273662.  v0:= temp;
  #L273664.  v1:= -1I;
  #L273666.  if v0 == v1 then goto L27366c;
  #L27366a.  return v3;
  #L27366c.  v3:= v3 + 1;
  #L273670.  goto L273650;
  #L273672.  return v4;
}
procedure `int` `a`(`java.lang.String` v6 @kind object, `long` v7 , `java.util.concurrent.TimeUnit` v9 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L273684.  v0:= 0L;
  #L273688.  v2:= lcmp(v7, v0);
  #L27368c.  if v2 >= 0 then goto L2736be;
  #L273690.  v7:= new `java.lang.IllegalArgumentException`;
  #L273694.  v8:= new `java.lang.StringBuilder`;
  #L273698.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27369e.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2736a4.  v6:= " < 0" @kind object;
  #L2736a8.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2736ae.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2736b4.  v6:= temp @kind object;
  #L2736b6.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2736bc.  throw v7;
  #L2736be.  if v9 != 0 then goto L2736d2;
  #L2736c2.  v6:= new `java.lang.NullPointerException`;
  #L2736c6.  v7:= "unit == null" @kind object;
  #L2736ca.  call `<init>`(v6, v7) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2736d0.  throw v6;
  #L2736d2.  call temp:= `toMillis`(v9, v7) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2736d8.  v2:= temp @kind wide;
  #L2736da.  v4:= 2147483647L;
  #L2736e0.  v9:= lcmp(v2, v4);
  #L2736e4.  if v9 <= 0 then goto L273716;
  #L2736e8.  v7:= new `java.lang.IllegalArgumentException`;
  #L2736ec.  v8:= new `java.lang.StringBuilder`;
  #L2736f0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2736f6.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2736fc.  v6:= " too large." @kind object;
  #L273700.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273706.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27370c.  v6:= temp @kind object;
  #L27370e.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L273714.  throw v7;
  #L273716.  v9:= lcmp(v2, v0);
  #L27371a.  if v9 != 0 then goto L273754;
  #L27371e.  v9:= lcmp(v7, v0);
  #L273722.  if v9 <= 0 then goto L273754;
  #L273726.  v7:= new `java.lang.IllegalArgumentException`;
  #L27372a.  v8:= new `java.lang.StringBuilder`;
  #L27372e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L273734.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27373a.  v6:= " too small." @kind object;
  #L27373e.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273744.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27374a.  v6:= temp @kind object;
  #L27374c.  call `<init>`(v7, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L273752.  throw v7;
  #L273754.  v6:= (`int`) v2 @kind l2i;
  #L273756.  return v6;
}
procedure `int` `a`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lc/a/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L273768.  v0:= length @variable v4;
  #L27376a.  v1:= 0I;
  #L27376c.  if v1 >= v0 then goto L273788;
  #L273770.  v2:= v4[v1] @kind object;
  #L273774.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L27377a.  v2:= temp;
  #L27377c.  if v2 != 0 then goto L273782;
  #L273780.  return v1;
  #L273782.  v1:= v1 + 1;
  #L273786.  goto L27376c;
  #L273788.  v3:= -1I;
  #L27378a.  return v3;
}
procedure `java.lang.AssertionError` `a`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/String;Ljava/lang/Exception;)Ljava/lang/AssertionError;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273840.  v0:= new `java.lang.AssertionError`;
  #L273844.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L27384a.  call temp:= `initCause`(v0, v2) @signature `Ljava/lang/AssertionError;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L273850.  return v0 @kind object;
  catch `java.lang.IllegalStateException` @[L27384a..L273850] goto L273850;
}
procedure `java.lang.String` `a`(`c.r` v2 @kind object, `boolean` v3 ) @signature `Lc/a/c;.a:(Lc/r;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L273938.  call temp:= `f`(v2) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L27393e.  v0:= temp @kind object;
  #L273940.  v1:= ":" @kind object;
  #L273944.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L27394a.  v0:= temp;
  #L27394c.  if v0 == 0 then goto L273986;
  #L273950.  v0:= new `java.lang.StringBuilder`;
  #L273954.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27395a.  v1:= "[" @kind object;
  #L27395e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273964.  call temp:= `f`(v2) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L27396a.  v1:= temp @kind object;
  #L27396c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273972.  v1:= "]" @kind object;
  #L273976.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27397c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L273982.  v0:= temp @kind object;
  #L273984.  goto L27398e;
  #L273986.  call temp:= `f`(v2) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L27398c.  v0:= temp @kind object;
  #L27398e.  if v3 != 0 then goto L2739ae;
  #L273992.  call temp:= `g`(v2) @signature `Lc/r;.g:()I` @kind virtual;
  #L273998.  v3:= temp;
  #L27399a.  call temp:= `b`(v2) @signature `Lc/r;.b:()Ljava/lang/String;` @kind virtual;
  #L2739a0.  v1:= temp @kind object;
  #L2739a2.  call temp:= `a`(v1) @signature `Lc/r;.a:(Ljava/lang/String;)I` @kind static;
  #L2739a8.  v1:= temp;
  #L2739aa.  if v3 == v1 then goto L2739de;
  #L2739ae.  v3:= new `java.lang.StringBuilder`;
  #L2739b2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2739b8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2739be.  v0:= ":" @kind object;
  #L2739c2.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2739c8.  call temp:= `g`(v2) @signature `Lc/r;.g:()I` @kind virtual;
  #L2739ce.  v2:= temp;
  #L2739d0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2739d6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2739dc.  v0:= temp @kind object;
  #L2739de.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2739f0.  v0:= ":" @kind object;
  #L2739f4.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2739fa.  v0:= temp;
  #L2739fc.  v1:= 0I;
  #L2739fe.  if v0 == 0 then goto L273aa4;
  #L273a02.  v0:= "[" @kind object;
  #L273a06.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L273a0c.  v0:= temp;
  #L273a0e.  if v0 == 0 then goto L273a38;
  #L273a12.  v0:= "]" @kind object;
  #L273a16.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L273a1c.  v0:= temp;
  #L273a1e.  if v0 == 0 then goto L273a38;
  #L273a22.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L273a28.  v0:= temp;
  #L273a2a.  v2:= 1I;
  #L273a2c.  v0:= v0 - v2 @kind int;
  #L273a2e.  call temp:= `d`(v3, v2, v0) @signature `Lc/a/c;.d:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L273a34.  v0:= temp @kind object;
  #L273a36.  goto L273a4a;
  #L273a38.  v0:= 0I;
  #L273a3a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L273a40.  v2:= temp;
  #L273a42.  call temp:= `d`(v3, v0, v2) @signature `Lc/a/c;.d:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L273a48.  v0:= temp @kind object;
  #L273a4a.  if v0 != 0 then goto L273a50;
  #L273a4e.  return v1 @kind object;
  #L273a50.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L273a56.  v0:= temp @kind object;
  #L273a58.  v1:= length @variable v0;
  #L273a5a.  v2:= 16I;
  #L273a5e.  if v1 != v2 then goto L273a6c;
  #L273a62.  call temp:= `a`(v0) @signature `Lc/a/c;.a:([B)Ljava/lang/String;` @kind static;
  #L273a68.  v3:= temp @kind object;
  #L273a6a.  return v3 @kind object;
  #L273a6c.  v0:= new `java.lang.AssertionError`;
  #L273a70.  v1:= new `java.lang.StringBuilder`;
  #L273a74.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L273a7a.  v2:= "Invalid IPv6 address: '" @kind object;
  #L273a7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273a84.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273a8a.  v3:= "'" @kind object;
  #L273a8e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L273a94.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L273a9a.  v3:= temp @kind object;
  #L273a9c.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L273aa2.  throw v0;
  #L273aa4.  call temp:= `toASCII`(v3) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L273aaa.  v3:= temp @kind object;
  #L273aac.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L273ab0.  call temp:= `toLowerCase`(v3, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L273ab6.  v3:= temp @kind object;
  #L273ab8.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L273abe.  v0:= temp;
  #L273ac0.  if v0 == 0 then goto L273ac6;
  #L273ac4.  return v1 @kind object;
  #L273ac6.  call temp:= `d`(v3) @signature `Lc/a/c;.d:(Ljava/lang/String;)Z` @kind static;
  #L273acc.  v0:= temp;
  #L273ace.  if v0 == 0 then goto L273ad4;
  #L273ad2.  return v1 @kind object;
  #L273ad4.  return v3 @kind object;
  #L273ad6.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L273aa4..L273ace] goto L273ad6;
}
procedure `java.lang.String` `a`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273af8.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L273afc.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L273b02.  v1:= temp @kind object;
  #L273b04.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object) @signature `Lc/a/c;.a:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L273874.  v0:= 0I;
  #L273876.  v1:= -1I;
  #L273878.  v1:= 0I;
  #L27387a.  v2:= 0I;
  #L27387c.  v3:= -1I;
  #L27387e.  v4:= length @variable v8;
  #L273880.  v5:= 16I;
  #L273884.  if v1 >= v4 then goto L2738c0;
  #L273888.  v4:= v1;
  #L27388a.  if v4 >= v5 then goto L2738a8;
  #L27388e.  v6:= v8[v4] @kind byte;
  #L273892.  if v6 != 0 then goto L2738a8;
  #L273896.  v6:= v4 + 1;
  #L27389a.  v6:= v8[v6] @kind byte;
  #L27389e.  if v6 != 0 then goto L2738a8;
  #L2738a2.  v4:= v4 + 2;
  #L2738a6.  goto L27388a;
  #L2738a8.  v5:= v4 - v1 @kind int;
  #L2738ac.  if v5 <= v2 then goto L2738ba;
  #L2738b0.  v6:= 4I;
  #L2738b2.  if v5 < v6 then goto L2738ba;
  #L2738b6.  v3:= v1;
  #L2738b8.  v2:= v5;
  #L2738ba.  v1:= v4 + 2;
  #L2738be.  goto L27387e;
  #L2738c0.  v1:= new `d.c`;
  #L2738c4.  call `<init>`(v1) @signature `Ld/c;.<init>:()V` @kind direct;
  #L2738ca.  v4:= length @variable v8;
  #L2738cc.  if v0 >= v4 then goto L27391e;
  #L2738d0.  v4:= 58I;
  #L2738d4.  if v0 != v3 then goto L2738ec;
  #L2738d8.  call temp:= `b`(v1, v4) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L2738de.  v0:= v0 + v2 @kind int;
  #L2738e0.  if v0 != v5 then goto L2738ca;
  #L2738e4.  call temp:= `b`(v1, v4) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L2738ea.  goto L2738ca;
  #L2738ec.  if v0 <= 0 then goto L2738f6;
  #L2738f0.  call temp:= `b`(v1, v4) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L2738f6.  v4:= v8[v0] @kind byte;
  #L2738fa.  v4:= v4 ^& 255;
  #L2738fe.  v4:= v4 ^< 8;
  #L273902.  v6:= v0 + 1;
  #L273906.  v6:= v8[v6] @kind byte;
  #L27390a.  v6:= v6 ^& 255;
  #L27390e.  v4:= v4 ^| v6 @kind int;
  #L273910.  v6:= (`long`) v4 @kind i2l;
  #L273912.  call temp:= `j`(v1, v6) @signature `Ld/c;.j:(J)Ld/c;` @kind virtual;
  #L273918.  v0:= v0 + 2;
  #L27391c.  goto L2738ca;
  #L27391e.  call temp:= `n`(v1) @signature `Ld/c;.n:()Ljava/lang/String;` @kind virtual;
  #L273924.  v8:= temp @kind object;
  #L273926.  return v8 @kind object;
}
procedure `java.util.List` `a`(`java.util.List` v1 @kind object) @signature `Lc/a/c;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273d68.  v0:= new `java.util.ArrayList`;
  #L273d6c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L273d72.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L273d78.  v1:= temp @kind object;
  #L273d7a.  return v1 @kind object;
}
procedure `java.util.List` `a`(`java.lang.Object`[] v0 @kind object) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L273d38.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L273d3e.  v0:= temp @kind object;
  #L273d40.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L273d44.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L273d4a.  v0:= temp @kind object;
  #L273d4c.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L273d52.  v0:= temp @kind object;
  #L273d54.  return v0 @kind object;
}
procedure `java.util.concurrent.ThreadFactory` `a`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lc/a/c;.a:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273d8c.  v0:= new `c.a.c$2`;
  #L273d90.  call `<init>`(v0, v1, v2) @signature `Lc/a/c$2;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L273d96.  return v0 @kind object;
}
procedure `void` `a`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lc/a/c;.a:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L273f48.  v0:= v7 ^| v9 @kind long;
  #L273f4c.  v2:= 0L;
  #L273f50.  v4:= lcmp(v0, v2);
  #L273f54.  if v4 < 0 then goto L273f70;
  #L273f58.  v0:= lcmp(v7, v5);
  #L273f5c.  if v0 > 0 then goto L273f70;
  #L273f60.  v0:= v5 - v7 @kind long;
  #L273f64.  v5:= lcmp(v0, v9);
  #L273f68.  if v5 >= 0 then goto L273f6e;
  #L273f6c.  goto L273f70;
  #L273f6e.  return @kind void;
  #L273f70.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L273f74.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L273f7a.  throw v5;
}
procedure `void` `a`(`java.io.Closeable` v0 @kind object) @signature `Lc/a/c;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L273ecc.  if v0 == 0 then goto L273edc;
  #L273ed0.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L273ed6.  goto L273edc;
  #L273ed8.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L273eda.  throw v0;
  #L273edc.  return @kind void;
  catch `java.lang.RuntimeException` @[L273ed0..L273ed6] goto L273ed8;
  catch `java.lang.Exception` @[L273ed0..L273ed6] goto L273edc;
}
procedure `void` `a`(`java.net.Socket` v1 @kind object) @signature `Lc/a/c;.a:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273f00.  if v1 == 0 then goto L273f20;
  #L273f04.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L273f0a.  goto L273f20;
  #L273f0c.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L273f0e.  throw v1;
  #L273f10.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L273f12.  call temp:= `a`(v1) @signature `Lc/a/c;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L273f18.  v0:= temp;
  #L273f1a.  if v0 != 0 then goto L273f20;
  #L273f1e.  throw v1;
  #L273f20.  return @kind void;
  catch `java.lang.AssertionError` @[L273f04..L273f0a] goto L273f10;
  catch `java.lang.RuntimeException` @[L273f04..L273f0a] goto L273f0c;
  catch `java.lang.Exception` @[L273f04..L273f0a] goto L273f20;
}
procedure `boolean` `a`(`d.s` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lc/a/c;.a:(Ld/s;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L273208.  call temp:= `b`(v0, v1, v2) @signature `Lc/a/c;.b:(Ld/s;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L27320e.  v0:= temp;
  #L273210.  return v0;
  #L273212.  v0:= 0I;
  #L273214.  return v0;
  catch `java.io.IOException` @[L273208..L273210] goto L273212;
}
procedure `boolean` `a`(`java.lang.AssertionError` v1 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L273238.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L27323e.  v0:= temp @kind object;
  #L273240.  if v0 == 0 then goto L27326c;
  #L273244.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L27324a.  v0:= temp @kind object;
  #L27324c.  if v0 == 0 then goto L27326c;
  #L273250.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L273256.  v1:= temp @kind object;
  #L273258.  v0:= "getsockname failed" @kind object;
  #L27325c.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L273262.  v1:= temp;
  #L273264.  if v1 == 0 then goto L27326c;
  #L273268.  v1:= 1I;
  #L27326a.  goto L27326e;
  #L27326c.  v1:= 0I;
  #L27326e.  return v1;
}
procedure `boolean` `a`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lc/a/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L273280.  if v0 == v1 then goto L27329a;
  #L273284.  if v0 == 0 then goto L273296;
  #L273288.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27328e.  v0:= temp;
  #L273290.  if v0 == 0 then goto L273296;
  #L273294.  goto L27329a;
  #L273296.  v0:= 0I;
  #L273298.  goto L27329c;
  #L27329a.  v0:= 1I;
  #L27329c.  return v0;
}
procedure `boolean` `a`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lc/a/c;.a:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2732b0.  v0:= v11;
  #L2732b2.  v1:= 0I;
  #L2732b4.  if v8 >= v9 then goto L273338;
  #L2732b8.  v2:= length @variable v10;
  #L2732ba.  if v0 != v2 then goto L2732c0;
  #L2732be.  return v1;
  #L2732c0.  if v0 == v11 then goto L2732da;
  #L2732c4.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2732ca.  v2:= temp;
  #L2732cc.  v3:= 46I;
  #L2732d0.  if v2 == v3 then goto L2732d6;
  #L2732d4.  return v1;
  #L2732d6.  v8:= v8 + 1;
  #L2732da.  v2:= v8;
  #L2732dc.  v3:= 0I;
  #L2732de.  if v2 >= v9 then goto L27331e;
  #L2732e2.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2732e8.  v4:= temp;
  #L2732ea.  v5:= 48I;
  #L2732ee.  if v4 < v5 then goto L27331e;
  #L2732f2.  v6:= 57I;
  #L2732f6.  if v4 <= v6 then goto L2732fc;
  #L2732fa.  goto L27331e;
  #L2732fc.  if v3 != 0 then goto L273306;
  #L273300.  if v8 == v2 then goto L273306;
  #L273304.  return v1;
  #L273306.  v3:= v3 * 10;
  #L27330a.  v3:= v3 + v4 @kind int;
  #L27330c.  v3:= v3 - v5 @kind int;
  #L27330e.  v4:= 255I;
  #L273312.  if v3 <= v4 then goto L273318;
  #L273316.  return v1;
  #L273318.  v2:= v2 + 1;
  #L27331c.  goto L2732de;
  #L27331e.  v8:= v2 - v8 @kind int;
  #L273322.  if v8 != 0 then goto L273328;
  #L273326.  return v1;
  #L273328.  v8:= v0 + 1;
  #L27332c.  v1:= (`byte`) v3 @kind i2b;
  #L27332e.  v10[v0]:= v1 @kind byte;
  #L273332.  v0:= v8;
  #L273334.  v8:= v2;
  #L273336.  goto L2732b2;
  #L273338.  v11:= v11 + 4;
  #L27333c.  if v0 == v11 then goto L273342;
  #L273340.  return v1;
  #L273342.  v7:= 1I;
  #L273344.  return v7;
}
procedure `java.lang.String`[] `a`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Lc/a/c;.a:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L273b74.  v0:= new `java.util.ArrayList`;
  #L273b78.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L273b7e.  v1:= length @variable v9;
  #L273b80.  v2:= 0I;
  #L273b82.  v3:= 0I;
  #L273b84.  if v3 >= v1 then goto L273bb8;
  #L273b88.  v4:= v9[v3] @kind object;
  #L273b8c.  v5:= length @variable v10;
  #L273b8e.  v6:= 0I;
  #L273b90.  if v6 >= v5 then goto L273bb2;
  #L273b94.  v7:= v10[v6] @kind object;
  #L273b98.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L273b9e.  v7:= temp;
  #L273ba0.  if v7 != 0 then goto L273bac;
  #L273ba4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L273baa.  goto L273bb2;
  #L273bac.  v6:= v6 + 1;
  #L273bb0.  goto L273b90;
  #L273bb2.  v3:= v3 + 1;
  #L273bb6.  goto L273b84;
  #L273bb8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L273bbe.  v8:= temp;
  #L273bc0.  v8:= new `java.lang.String`[v8];
  #L273bc4.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L273bca.  v8:= temp @kind object;
  #L273bcc.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L273bd0.  return v8 @kind object;
}
procedure `java.lang.String`[] `a`(`java.lang.String`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lc/a/c;.a:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L273b44.  v0:= length @variable v3;
  #L273b46.  v0:= v0 + 1;
  #L273b4a.  v0:= new `java.lang.String`[v0];
  #L273b4e.  v1:= length @variable v3;
  #L273b50.  v2:= 0I;
  #L273b52.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L273b58.  v3:= length @variable v0;
  #L273b5a.  v3:= v3 + -1;
  #L273b5e.  v0[v3]:= v4 @kind object;
  #L273b62.  return v0 @kind object;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `Lc/a/c;.b:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27379c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2737a2.  v0:= temp;
  #L2737a4.  v1:= 0I;
  #L2737a6.  if v1 >= v0 then goto L2737cc;
  #L2737aa.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2737b0.  v2:= temp;
  #L2737b2.  v3:= 31I;
  #L2737b6.  if v2 <= v3 then goto L2737ca;
  #L2737ba.  v3:= 127I;
  #L2737be.  if v2 < v3 then goto L2737c4;
  #L2737c2.  goto L2737ca;
  #L2737c4.  v1:= v1 + 1;
  #L2737c8.  goto L2737a6;
  #L2737ca.  return v1;
  #L2737cc.  v4:= -1I;
  #L2737ce.  return v4;
}
procedure `int` `b`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lc/a/c;.b:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2737e0.  v3:= v3 + -1;
  #L2737e4.  if v3 < v2 then goto L273802;
  #L2737e8.  call temp:= `charAt`(v1, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2737ee.  v0:= temp;
  #L2737f0.  goto L273804;
  #L2737f6.  v3:= v3 + 1;
  #L2737fa.  return v3;
  #L2737fc.  v3:= v3 + -1;
  #L273800.  goto L2737e4;
  #L273802.  return v2;
  #L273804.  switch v0
                  | 9 => goto L2737fc
                  | 10 => goto L2737fc
                  | 12 => goto L2737fc
                  | 13 => goto L2737fc
                  | 32 => goto L2737fc
                  | else => goto L2737f6;
}
procedure `boolean` `b`(`d.s` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lc/a/c;.b:(Ld/s;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L273358.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L27335e.  v0:= temp @kind wide;
  #L273360.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273366.  v2:= temp @kind object;
  #L273368.  call temp:= `l_`(v2) @signature `Ld/t;.l_:()Z` @kind virtual;
  #L27336e.  v2:= temp;
  #L273370.  v3:= 9223372036854775807L;
  #L27337a.  if v2 == 0 then goto L273394;
  #L27337e.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273384.  v2:= temp @kind object;
  #L273386.  call temp:= `d`(v2) @signature `Ld/t;.d:()J` @kind virtual;
  #L27338c.  v5:= temp @kind wide;
  #L27338e.  v7:= v5 - v0 @kind long;
  #L273392.  goto L273396;
  #L273394.  v7:= v3 @kind wide;
  #L273396.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L27339c.  v2:= temp @kind object;
  #L27339e.  v5:= (`long`) v12 @kind i2l;
  #L2733a0.  call temp:= `toNanos`(v13, v5) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L2733a6.  v12:= temp @kind wide;
  #L2733a8.  call temp:= `min`(v7, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2733ae.  v12:= temp @kind wide;
  #L2733b0.  v5:= v0 + v12 @kind long;
  #L2733b4.  call temp:= `a`(v2, v5) @signature `Ld/t;.a:(J)Ld/t;` @kind virtual;
  #L2733ba.  v12:= new `d.c`;
  #L2733be.  call `<init>`(v12) @signature `Ld/c;.<init>:()V` @kind direct;
  #L2733c4.  v5:= 8192L;
  #L2733c8.  call temp:= `a`(v11, v12, v5) @signature `Ld/s;.a:(Ld/c;J)J` @kind interface;
  #L2733ce.  v5:= temp @kind wide;
  #L2733d0.  v9:= -1L;
  #L2733d4.  v13:= lcmp(v5, v9);
  #L2733d8.  if v13 == 0 then goto L2733e4;
  #L2733dc.  call `q`(v12) @signature `Ld/c;.q:()V` @kind virtual;
  #L2733e2.  goto L2733c4;
  #L2733e4.  v12:= 1I;
  #L2733e6.  v13:= lcmp(v7, v3);
  #L2733ea.  if v13 != 0 then goto L2733fe;
  #L2733ee.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L2733f4.  v11:= temp @kind object;
  #L2733f6.  call temp:= `f`(v11) @signature `Ld/t;.f:()Ld/t;` @kind virtual;
  #L2733fc.  goto L273410;
  #L2733fe.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273404.  v11:= temp @kind object;
  #L273406.  v2:= v0 + v7 @kind long;
  #L27340a.  call temp:= `a`(v11, v2) @signature `Ld/t;.a:(J)Ld/t;` @kind virtual;
  #L273410.  return v12;
  #L273412.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L273414.  v13:= lcmp(v7, v3);
  #L273418.  if v13 != 0 then goto L27342c;
  #L27341c.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273422.  v11:= temp @kind object;
  #L273424.  call temp:= `f`(v11) @signature `Ld/t;.f:()Ld/t;` @kind virtual;
  #L27342a.  goto L27343e;
  #L27342c.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273432.  v11:= temp @kind object;
  #L273434.  v2:= v0 + v7 @kind long;
  #L273438.  call temp:= `a`(v11, v2) @signature `Ld/t;.a:(J)Ld/t;` @kind virtual;
  #L27343e.  throw v12;
  #L273440.  v12:= 0I;
  #L273442.  v13:= lcmp(v7, v3);
  #L273446.  if v13 != 0 then goto L27345a;
  #L27344a.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273450.  v11:= temp @kind object;
  #L273452.  call temp:= `f`(v11) @signature `Ld/t;.f:()Ld/t;` @kind virtual;
  #L273458.  goto L27346c;
  #L27345a.  call temp:= `a`(v11) @signature `Ld/s;.a:()Ld/t;` @kind interface;
  #L273460.  v11:= temp @kind object;
  #L273462.  v2:= v0 + v7 @kind long;
  #L273466.  call temp:= `a`(v11, v2) @signature `Ld/t;.a:(J)Ld/t;` @kind virtual;
  #L27346c.  return v12;
  catch `java.io.InterruptedIOException` @[L2733ba..L2733e2] goto L273440;
  catch `java.lang.Throwable` @[L2733ba..L2733e2] goto L273412;
}
procedure `boolean` `b`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Lc/a/c;.b:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L273490.  v0:= 0I;
  #L273492.  if v8 == 0 then goto L2734de;
  #L273496.  if v9 == 0 then goto L2734de;
  #L27349a.  v1:= length @variable v8;
  #L27349c.  if v1 == 0 then goto L2734de;
  #L2734a0.  v1:= length @variable v9;
  #L2734a2.  if v1 != 0 then goto L2734a8;
  #L2734a6.  goto L2734de;
  #L2734a8.  v1:= length @variable v8;
  #L2734aa.  v2:= 0I;
  #L2734ac.  if v2 >= v1 then goto L2734dc;
  #L2734b0.  v3:= v8[v2] @kind object;
  #L2734b4.  v4:= length @variable v9;
  #L2734b6.  v5:= 0I;
  #L2734b8.  if v5 >= v4 then goto L2734d6;
  #L2734bc.  v6:= v9[v5] @kind object;
  #L2734c0.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2734c6.  v6:= temp;
  #L2734c8.  if v6 != 0 then goto L2734d0;
  #L2734cc.  v7:= 1I;
  #L2734ce.  return v7;
  #L2734d0.  v5:= v5 + 1;
  #L2734d4.  goto L2734b8;
  #L2734d6.  v2:= v2 + 1;
  #L2734da.  goto L2734ac;
  #L2734dc.  return v0;
  #L2734de.  return v0;
}
procedure `java.lang.String` `c`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lc/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L273b18.  call temp:= `a`(v0, v1, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L273b1e.  v1:= temp;
  #L273b20.  call temp:= `b`(v0, v1, v2) @signature `Lc/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L273b26.  v2:= temp;
  #L273b28.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L273b2e.  v0:= temp @kind object;
  #L273b30.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.String` v1 @kind object) @signature `Lc/a/c;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2734f0.  v0:= `@@c.a.c.r` @type ^`java.util.regex.Pattern` @kind object;
  #L2734f4.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2734fa.  v1:= temp @kind object;
  #L2734fc.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L273502.  v1:= temp;
  #L273504.  return v1;
}
procedure `java.net.InetAddress` `d`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lc/a/c;.d:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L273be4.  v0:= 16I;
  #L273be8.  v0:= new `byte`[v0];
  #L273bec.  v1:= -1I;
  #L273bee.  v2:= 0I;
  #L273bf0.  v3:= 0I;
  #L273bf2.  v4:= -1I;
  #L273bf4.  v5:= -1I;
  #L273bf6.  v6:= 0I;
  #L273bf8.  if v11 >= v12 then goto L273cdc;
  #L273bfc.  v7:= length @variable v0;
  #L273bfe.  if v3 != v7 then goto L273c04;
  #L273c02.  return v6 @kind object;
  #L273c04.  v7:= v11 + 2;
  #L273c08.  if v7 > v12 then goto L273c36;
  #L273c0c.  v8:= "::" @kind object;
  #L273c10.  v9:= 2I;
  #L273c12.  call temp:= `regionMatches`(v10, v11, v8, v2, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L273c18.  v8:= temp;
  #L273c1a.  if v8 == 0 then goto L273c36;
  #L273c1e.  if v4 == v1 then goto L273c24;
  #L273c22.  return v6 @kind object;
  #L273c24.  v3:= v3 + 2;
  #L273c28.  if v7 != v12 then goto L273c30;
  #L273c2c.  v4:= v3;
  #L273c2e.  goto L273cdc;
  #L273c30.  v4:= v3;
  #L273c32.  v5:= v7;
  #L273c34.  goto L273c7e;
  #L273c36.  if v3 == 0 then goto L273c7c;
  #L273c3a.  v7:= ":" @kind object;
  #L273c3e.  v8:= 1I;
  #L273c40.  call temp:= `regionMatches`(v10, v11, v7, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L273c46.  v7:= temp;
  #L273c48.  if v7 == 0 then goto L273c52;
  #L273c4c.  v11:= v11 + 1;
  #L273c50.  goto L273c7c;
  #L273c52.  v7:= "." @kind object;
  #L273c56.  call temp:= `regionMatches`(v10, v11, v7, v2, v8) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L273c5c.  v11:= temp;
  #L273c5e.  if v11 == 0 then goto L273c7a;
  #L273c62.  v11:= v3 + -2;
  #L273c66.  call temp:= `a`(v10, v5, v12, v0, v11) @signature `Lc/a/c;.a:(Ljava/lang/String;II[BI)Z` @kind static;
  #L273c6c.  v10:= temp;
  #L273c6e.  if v10 != 0 then goto L273c74;
  #L273c72.  return v6 @kind object;
  #L273c74.  v3:= v3 + 2;
  #L273c78.  goto L273cdc;
  #L273c7a.  return v6 @kind object;
  #L273c7c.  v5:= v11;
  #L273c7e.  v11:= v5;
  #L273c80.  v7:= 0I;
  #L273c82.  if v11 >= v12 then goto L273ca8;
  #L273c86.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L273c8c.  v8:= temp;
  #L273c8e.  call temp:= `a`(v8) @signature `Lc/a/c;.a:(C)I` @kind static;
  #L273c94.  v8:= temp;
  #L273c96.  if v8 != v1 then goto L273c9c;
  #L273c9a.  goto L273ca8;
  #L273c9c.  v7:= v7 ^< 4;
  #L273ca0.  v7:= v7 + v8 @kind int;
  #L273ca2.  v11:= v11 + 1;
  #L273ca6.  goto L273c82;
  #L273ca8.  v8:= v11 - v5 @kind int;
  #L273cac.  if v8 == 0 then goto L273cda;
  #L273cb0.  v9:= 4I;
  #L273cb2.  if v8 <= v9 then goto L273cb8;
  #L273cb6.  goto L273cda;
  #L273cb8.  v6:= v3 + 1;
  #L273cbc.  v8:= v7 ^>> 8;
  #L273cc0.  v8:= v8 ^& 255;
  #L273cc4.  v8:= (`byte`) v8 @kind i2b;
  #L273cc6.  v0[v3]:= v8 @kind byte;
  #L273cca.  v3:= v6 + 1;
  #L273cce.  v7:= v7 ^& 255;
  #L273cd2.  v7:= (`byte`) v7 @kind i2b;
  #L273cd4.  v0[v6]:= v7 @kind byte;
  #L273cd8.  goto L273bf6;
  #L273cda.  return v6 @kind object;
  #L273cdc.  v10:= length @variable v0;
  #L273cde.  if v3 == v10 then goto L273d02;
  #L273ce2.  if v4 != v1 then goto L273ce8;
  #L273ce6.  return v6 @kind object;
  #L273ce8.  v10:= length @variable v0;
  #L273cea.  v11:= v3 - v4 @kind int;
  #L273cee.  v10:= v10 - v11 @kind int;
  #L273cf0.  call `arraycopy`(v0, v4, v0, v10, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L273cf6.  v10:= length @variable v0;
  #L273cf8.  v10:= v10 - v3 @kind int;
  #L273cfa.  v10:= v10 + v4 @kind int;
  #L273cfc.  call `fill`(v0, v4, v10, v2) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L273d02.  call temp:= `getByAddress`(v0) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L273d08.  v10:= temp @kind object;
  #L273d0a.  return v10 @kind object;
  #L273d0c.  v10:= new `java.lang.AssertionError`;
  #L273d10.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L273d16.  throw v10;
  catch `java.net.UnknownHostException` @[L273d02..L273d0a] goto L273d0c;
}
procedure `boolean` `d`(`java.lang.String` v5 @kind object) @signature `Lc/a/c;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L273518.  v0:= 0I;
  #L27351a.  v1:= 0I;
  #L27351c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L273522.  v2:= temp;
  #L273524.  if v1 >= v2 then goto L273560;
  #L273528.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27352e.  v2:= temp;
  #L273530.  v3:= 31I;
  #L273534.  v4:= 1I;
  #L273536.  if v2 <= v3 then goto L27355e;
  #L27353a.  v3:= 127I;
  #L27353e.  if v2 < v3 then goto L273544;
  #L273542.  goto L27355e;
  #L273544.  v3:= " #%/:?@[\\]" @kind object;
  #L273548.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L27354e.  v2:= temp;
  #L273550.  v3:= -1I;
  #L273552.  if v2 == v3 then goto L273558;
  #L273556.  return v4;
  #L273558.  v1:= v1 + 1;
  #L27355c.  goto L27351c;
  #L27355e.  return v4;
  #L273560.  return v0;
}
