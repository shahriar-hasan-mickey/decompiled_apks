record `c.a.i.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `c.a.i.d` `@@c.a.i.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/a/i/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L27dcfc.  v0:= new `c.a.i.d`;
  #L27dd00.  call `<init>`(v0) @signature `Lc/a/i/d;.<init>:()V` @kind direct;
  #L27dd06.  `@@c.a.i.d.a` @type ^`c.a.i.d` := v0 @kind object;
  #L27dd0a.  return @kind void;
}
procedure `void` `<init>`(`c.a.i.d` v0 @kind this) @signature `Lc/a/i/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L27dd1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27dd22.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27dbf0.  v0:= 7I;
  #L27dbf2.  call temp:= `a`(v4, v0) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L27dbf8.  v0:= temp @kind object;
  #L27dbfa.  v1:= 2I;
  #L27dbfc.  call temp:= `a`(v4, v1) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L27dc02.  v4:= temp @kind object;
  #L27dc04.  v1:= new `java.util.ArrayList`;
  #L27dc08.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27dc0e.  v2:= temp;
  #L27dc10.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27dc16.  v3:= temp;
  #L27dc18.  v2:= v2 + v3 @kind int;
  #L27dc1a.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L27dc20.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L27dc26.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L27dc2c.  return v1 @kind object;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27dc40.  v0:= new `java.util.ArrayList`;
  #L27dc44.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L27dc4a.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L27dc50.  v4:= temp @kind object;
  #L27dc52.  if v4 != 0 then goto L27dc60;
  #L27dc56.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L27dc5c.  v4:= temp @kind object;
  #L27dc5e.  return v4 @kind object;
  #L27dc60.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L27dc66.  v4:= temp @kind object;
  #L27dc68.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L27dc6e.  v1:= temp;
  #L27dc70.  if v1 == 0 then goto L27dcce;
  #L27dc74.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L27dc7a.  v1:= temp @kind object;
  #L27dc7c.  v1:= (`java.util.List`) v1 @kind object;
  #L27dc80.  if v1 == 0 then goto L27dc68;
  #L27dc84.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27dc8a.  v2:= temp;
  #L27dc8c.  v3:= 2I;
  #L27dc8e.  if v2 >= v3 then goto L27dc94;
  #L27dc92.  goto L27dc68;
  #L27dc94.  v2:= 0I;
  #L27dc96.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27dc9c.  v2:= temp @kind object;
  #L27dc9e.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L27dca2.  if v2 != 0 then goto L27dca8;
  #L27dca6.  goto L27dc68;
  #L27dca8.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L27dcae.  v2:= temp;
  #L27dcb0.  if v2 != v5 then goto L27dc68;
  #L27dcb4.  v2:= 1I;
  #L27dcb6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27dcbc.  v1:= temp @kind object;
  #L27dcbe.  v1:= (`java.lang.String`) v1 @kind object;
  #L27dcc2.  if v1 == 0 then goto L27dc68;
  #L27dcc6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27dccc.  goto L27dc68;
  #L27dcce.  return v0 @kind object;
  #L27dcd0.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L27dcd6.  v4:= temp @kind object;
  #L27dcd8.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L27dc4a..L27dccc] goto L27dcd0;
}
procedure `boolean` `b`(`c.a.i.d` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lc/a/i/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L27db04.  v0:= 7I;
  #L27db06.  call temp:= `a`(v6, v0) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L27db0c.  v6:= temp @kind object;
  #L27db0e.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27db14.  v0:= temp;
  #L27db16.  v1:= 0I;
  #L27db18.  v2:= 0I;
  #L27db1a.  if v2 >= v0 then goto L27db40;
  #L27db1e.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27db24.  v3:= temp @kind object;
  #L27db26.  v3:= (`java.lang.String`) v3 @kind object;
  #L27db2a.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L27db30.  v3:= temp;
  #L27db32.  if v3 == 0 then goto L27db3a;
  #L27db36.  v5:= 1I;
  #L27db38.  return v5;
  #L27db3a.  v2:= v2 + 1;
  #L27db3e.  goto L27db1a;
  #L27db40.  return v1;
}
procedure `boolean` `c`(`c.a.i.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lc/a/i/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L27db54.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L27db58.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L27db5e.  v2:= temp @kind object;
  #L27db60.  v0:= 2I;
  #L27db62.  call temp:= `a`(v3, v0) @signature `Lc/a/i/d;.a:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L27db68.  v3:= temp @kind object;
  #L27db6a.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L27db70.  v3:= temp @kind object;
  #L27db72.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L27db78.  v0:= temp;
  #L27db7a.  if v0 == 0 then goto L27db9a;
  #L27db7e.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L27db84.  v0:= temp @kind object;
  #L27db86.  v0:= (`java.lang.String`) v0 @kind object;
  #L27db8a.  call temp:= `a`(v1, v2, v0) @signature `Lc/a/i/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L27db90.  v0:= temp;
  #L27db92.  if v0 == 0 then goto L27db72;
  #L27db96.  v2:= 1I;
  #L27db98.  return v2;
  #L27db9a.  v2:= 0I;
  #L27db9c.  return v2;
}
procedure `boolean` `a`(`c.a.i.d` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lc/a/i/d;.a:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27d940.  v0:= 0I;
  #L27d942.  if v7 == 0 then goto L27dac0;
  #L27d946.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27d94c.  v1:= temp;
  #L27d94e.  if v1 == 0 then goto L27dac0;
  #L27d952.  v1:= "." @kind object;
  #L27d956.  call temp:= `startsWith`(v7, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d95c.  v1:= temp;
  #L27d95e.  if v1 != 0 then goto L27dac0;
  #L27d962.  v1:= ".." @kind object;
  #L27d966.  call temp:= `endsWith`(v7, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d96c.  v1:= temp;
  #L27d96e.  if v1 == 0 then goto L27d976;
  #L27d972.  goto L27dac0;
  #L27d976.  if v8 == 0 then goto L27dabe;
  #L27d97a.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27d980.  v1:= temp;
  #L27d982.  if v1 == 0 then goto L27dabe;
  #L27d986.  v1:= "." @kind object;
  #L27d98a.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d990.  v1:= temp;
  #L27d992.  if v1 != 0 then goto L27dabe;
  #L27d996.  v1:= ".." @kind object;
  #L27d99a.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d9a0.  v1:= temp;
  #L27d9a2.  if v1 == 0 then goto L27d9aa;
  #L27d9a6.  goto L27dabe;
  #L27d9aa.  v1:= "." @kind object;
  #L27d9ae.  call temp:= `endsWith`(v7, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d9b4.  v1:= temp;
  #L27d9b6.  v2:= 46I;
  #L27d9ba.  if v1 != 0 then goto L27d9dc;
  #L27d9be.  v1:= new `java.lang.StringBuilder`;
  #L27d9c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d9c8.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d9ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d9d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27d9da.  v7:= temp @kind object;
  #L27d9dc.  v1:= "." @kind object;
  #L27d9e0.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27d9e6.  v1:= temp;
  #L27d9e8.  if v1 != 0 then goto L27da0a;
  #L27d9ec.  v1:= new `java.lang.StringBuilder`;
  #L27d9f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d9f6.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d9fc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L27da02.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27da08.  v8:= temp @kind object;
  #L27da0a.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L27da0e.  call temp:= `toLowerCase`(v8, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L27da14.  v8:= temp @kind object;
  #L27da16.  v1:= "*" @kind object;
  #L27da1a.  call temp:= `contains`(v8, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L27da20.  v1:= temp;
  #L27da22.  if v1 != 0 then goto L27da30;
  #L27da26.  call temp:= `equals`(v7, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27da2c.  v7:= temp;
  #L27da2e.  return v7;
  #L27da30.  v1:= "*." @kind object;
  #L27da34.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27da3a.  v1:= temp;
  #L27da3c.  if v1 == 0 then goto L27dabc;
  #L27da40.  v1:= 42I;
  #L27da44.  v3:= 1I;
  #L27da46.  call temp:= `indexOf`(v8, v1, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L27da4c.  v1:= temp;
  #L27da4e.  v4:= -1I;
  #L27da50.  if v1 == v4 then goto L27da56;
  #L27da54.  goto L27dabc;
  #L27da56.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27da5c.  v1:= temp;
  #L27da5e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27da64.  v5:= temp;
  #L27da66.  if v1 >= v5 then goto L27da6c;
  #L27da6a.  return v0;
  #L27da6c.  v1:= "*." @kind object;
  #L27da70.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27da76.  v1:= temp;
  #L27da78.  if v1 == 0 then goto L27da7e;
  #L27da7c.  return v0;
  #L27da7e.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L27da84.  v8:= temp @kind object;
  #L27da86.  call temp:= `endsWith`(v7, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L27da8c.  v1:= temp;
  #L27da8e.  if v1 != 0 then goto L27da94;
  #L27da92.  return v0;
  #L27da94.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27da9a.  v1:= temp;
  #L27da9c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27daa2.  v8:= temp;
  #L27daa4.  v1:= v1 - v8 @kind int;
  #L27daa6.  if v1 <= 0 then goto L27daba;
  #L27daaa.  v1:= v1 - v3 @kind int;
  #L27daac.  call temp:= `lastIndexOf`(v7, v2, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L27dab2.  v7:= temp;
  #L27dab4.  if v7 == v4 then goto L27daba;
  #L27dab8.  return v0;
  #L27daba.  return v3;
  #L27dabc.  return v0;
  #L27dabe.  return v0;
  #L27dac0.  return v0;
}
procedure `boolean` `a`(`c.a.i.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lc/a/i/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27dad4.  call temp:= `c`(v2) @signature `Lc/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L27dada.  v0:= temp;
  #L27dadc.  if v0 == 0 then goto L27daea;
  #L27dae0.  call temp:= `b`(v1, v2, v3) @signature `Lc/a/i/d;.b:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L27dae6.  v2:= temp;
  #L27dae8.  goto L27daf2;
  #L27daea.  call temp:= `c`(v1, v2, v3) @signature `Lc/a/i/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L27daf0.  v2:= temp;
  #L27daf2.  return v2;
}
procedure `boolean` `verify`(`c.a.i.d` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lc/a/i/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27dbb0.  v0:= 0I;
  #L27dbb2.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L27dbb8.  v3:= temp @kind object;
  #L27dbba.  v3:= v3[v0] @kind object;
  #L27dbbe.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L27dbc2.  call temp:= `a`(v1, v2, v3) @signature `Lc/a/i/d;.a:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L27dbc8.  v2:= temp;
  #L27dbca.  return v2;
  #L27dbcc.  return v0;
  catch `javax.net.ssl.SSLException` @[L27dbb2..L27dbca] goto L27dbcc;
}
