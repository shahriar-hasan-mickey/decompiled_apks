record `c.a.i.a` @kind class @AccessFlag PUBLIC_FINAL extends `c.a.i.c` @kind class {
  `c.a.i.e` `c.a.i.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.a.i.a` v0 @kind this, `c.a.i.e` v1 @kind object) @signature `Lc/a/i/a;.<init>:(Lc/a/i/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27d7a4.  call `<init>`(v0) @signature `Lc/a/i/c;.<init>:()V` @kind direct;
  #L27d7aa.  v0.`c.a.i.a.a` @type ^`c.a.i.e` := v1 @kind object;
  #L27d7ae.  return @kind void;
}
procedure `boolean` `a`(`c.a.i.a` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lc/a/i/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L27d5b8.  call temp:= `getIssuerDN`(v3) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L27d5be.  v0:= temp @kind object;
  #L27d5c0.  call temp:= `getSubjectDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L27d5c6.  v1:= temp @kind object;
  #L27d5c8.  call temp:= `equals`(v0, v1) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L27d5ce.  v0:= temp;
  #L27d5d0.  v1:= 0I;
  #L27d5d2.  if v0 != 0 then goto L27d5d8;
  #L27d5d6.  return v1;
  #L27d5d8.  call temp:= `getPublicKey`(v4) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L27d5de.  v4:= temp @kind object;
  #L27d5e0.  call `verify`(v3, v4) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L27d5e6.  v3:= 1I;
  #L27d5e8.  return v3;
  #L27d5ea.  return v1;
  catch `java.security.GeneralSecurityException` @[L27d5d8..L27d5e6] goto L27d5ea;
}
procedure `java.util.List` `a`(`c.a.i.a` v6 @kind this, `java.util.List` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lc/a/i/a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27d66c.  v8:= new `java.util.ArrayDeque`;
  #L27d670.  call `<init>`(v8, v7) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L27d676.  v7:= new `java.util.ArrayList`;
  #L27d67a.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L27d680.  call temp:= `removeFirst`(v8) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L27d686.  v0:= temp @kind object;
  #L27d688.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27d68e.  v0:= 0I;
  #L27d690.  v1:= 0I;
  #L27d692.  v2:= 9I;
  #L27d696.  if v0 >= v2 then goto L27d764;
  #L27d69a.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27d6a0.  v2:= temp;
  #L27d6a2.  v3:= 1I;
  #L27d6a4.  v2:= v2 - v3 @kind int;
  #L27d6a6.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L27d6ac.  v2:= temp @kind object;
  #L27d6ae.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L27d6b2.  v4:= v6.`c.a.i.a.a` @type ^`c.a.i.e` @kind object;
  #L27d6b6.  call temp:= `a`(v4, v2) @signature `Lc/a/i/e;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L27d6bc.  v4:= temp @kind object;
  #L27d6be.  if v4 == 0 then goto L27d6f2;
  #L27d6c2.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L27d6c8.  v1:= temp;
  #L27d6ca.  if v1 > v3 then goto L27d6da;
  #L27d6ce.  call temp:= `equals`(v2, v4) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27d6d4.  v1:= temp;
  #L27d6d6.  if v1 != 0 then goto L27d6e0;
  #L27d6da.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27d6e0.  call temp:= `a`(v6, v4, v4) @signature `Lc/a/i/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L27d6e6.  v1:= temp;
  #L27d6e8.  if v1 == 0 then goto L27d6ee;
  #L27d6ec.  return v7 @kind object;
  #L27d6ee.  v1:= 1I;
  #L27d6f0.  goto L27d72a;
  #L27d6f2.  call temp:= `iterator`(v8) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L27d6f8.  v3:= temp @kind object;
  #L27d6fa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L27d700.  v4:= temp;
  #L27d702.  if v4 == 0 then goto L27d730;
  #L27d706.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L27d70c.  v4:= temp @kind object;
  #L27d70e.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L27d712.  call temp:= `a`(v6, v2, v4) @signature `Lc/a/i/a;.a:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L27d718.  v5:= temp;
  #L27d71a.  if v5 == 0 then goto L27d6fa;
  #L27d71e.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L27d724.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L27d72a.  v0:= v0 + 1;
  #L27d72e.  goto L27d692;
  #L27d730.  if v1 == 0 then goto L27d736;
  #L27d734.  return v7 @kind object;
  #L27d736.  v7:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L27d73a.  v8:= new `java.lang.StringBuilder`;
  #L27d73e.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d744.  v0:= "Failed to find a trusted cert that signed " @kind object;
  #L27d748.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d74e.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d754.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27d75a.  v8:= temp @kind object;
  #L27d75c.  call `<init>`(v7, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27d762.  throw v7;
  #L27d764.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L27d768.  v0:= new `java.lang.StringBuilder`;
  #L27d76c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27d772.  v1:= "Certificate chain too long: " @kind object;
  #L27d776.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d77c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27d782.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27d788.  v7:= temp @kind object;
  #L27d78a.  call `<init>`(v8, v7) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27d790.  throw v8;
}
procedure `boolean` `equals`(`c.a.i.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/a/i/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27d60c.  v0:= 1I;
  #L27d60e.  if v3 != v2 then goto L27d614;
  #L27d612.  return v0;
  #L27d614.  v1:= instanceof @variable v3 @type ^`c.a.i.a` @kind boolean;
  #L27d618.  if v1 == 0 then goto L27d636;
  #L27d61c.  v3:= (`c.a.i.a`) v3 @kind object;
  #L27d620.  v3:= v3.`c.a.i.a.a` @type ^`c.a.i.e` @kind object;
  #L27d624.  v1:= v2.`c.a.i.a.a` @type ^`c.a.i.e` @kind object;
  #L27d628.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27d62e.  v3:= temp;
  #L27d630.  if v3 == 0 then goto L27d636;
  #L27d634.  goto L27d638;
  #L27d636.  v0:= 0I;
  #L27d638.  return v0;
}
procedure `int` `hashCode`(`c.a.i.a` v1 @kind this) @signature `Lc/a/i/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27d64c.  v0:= v1.`c.a.i.a.a` @type ^`c.a.i.e` @kind object;
  #L27d650.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L27d656.  v0:= temp;
  #L27d658.  return v0;
}
