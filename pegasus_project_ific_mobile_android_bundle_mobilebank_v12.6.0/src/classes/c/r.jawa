record `c.r` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.r.a` @AccessFlag FINAL;
  `java.lang.String` `c.r.b` @AccessFlag FINAL;
  `int` `c.r.c` @AccessFlag FINAL;
  `java.lang.String` `c.r.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.r.f` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `c.r.g` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `c.r.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.r.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.r.j` @AccessFlag PRIVATE_FINAL;
}
global `char`[] `@@c.r.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L283d18.  v0:= 16I;
  #L283d1c.  v0:= new `char`[v0];
  #L283d20.  goto L283d2c;
  #L283d26.  `@@c.r.d` @type ^`char`[] := v0 @kind object;
  #L283d2a.  return @kind void;
  #L283d2c.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 65I, 66I, 67I, 68I, 69I, 70I) @kind object;
  #L283d53.  goto L283d26;
}
procedure `void` `<init>`(`c.r` v4 @kind this, `c.r$a` v5 @kind object) @signature `Lc/r;.<init>:(Lc/r$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283d64.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L283d6a.  v0:= v5.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L283d6e.  v4.`c.r.a` @type ^`java.lang.String` := v0 @kind object;
  #L283d72.  v0:= v5.`c.r$a.b` @type ^`java.lang.String` @kind object;
  #L283d76.  v1:= 0I;
  #L283d78.  call temp:= `a`(v0, v1) @signature `Lc/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L283d7e.  v0:= temp @kind object;
  #L283d80.  v4.`c.r.e` @type ^`java.lang.String` := v0 @kind object;
  #L283d84.  v0:= v5.`c.r$a.c` @type ^`java.lang.String` @kind object;
  #L283d88.  call temp:= `a`(v0, v1) @signature `Lc/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L283d8e.  v0:= temp @kind object;
  #L283d90.  v4.`c.r.f` @type ^`java.lang.String` := v0 @kind object;
  #L283d94.  v0:= v5.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L283d98.  v4.`c.r.b` @type ^`java.lang.String` := v0 @kind object;
  #L283d9c.  call temp:= `a`(v5) @signature `Lc/r$a;.a:()I` @kind virtual;
  #L283da2.  v0:= temp;
  #L283da4.  v4.`c.r.c` @type ^`int` := v0;
  #L283da8.  v0:= v5.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283dac.  call temp:= `a`(v4, v0, v1) @signature `Lc/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L283db2.  v0:= temp @kind object;
  #L283db4.  v4.`c.r.g` @type ^`java.util.List` := v0 @kind object;
  #L283db8.  v0:= v5.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L283dbc.  v2:= 0I;
  #L283dbe.  if v0 == 0 then goto L283dd2;
  #L283dc2.  v0:= v5.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L283dc6.  v3:= 1I;
  #L283dc8.  call temp:= `a`(v4, v0, v3) @signature `Lc/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @kind direct;
  #L283dce.  v0:= temp @kind object;
  #L283dd0.  goto L283dd4;
  #L283dd2.  v0:= v2 @kind object;
  #L283dd4.  v4.`c.r.h` @type ^`java.util.List` := v0 @kind object;
  #L283dd8.  v0:= v5.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L283ddc.  if v0 == 0 then goto L283dec;
  #L283de0.  v0:= v5.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L283de4.  call temp:= `a`(v0, v1) @signature `Lc/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L283dea.  v2:= temp @kind object;
  #L283dec.  v4.`c.r.i` @type ^`java.lang.String` := v2 @kind object;
  #L283df0.  call temp:= `toString`(v5) @signature `Lc/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L283df6.  v5:= temp @kind object;
  #L283df8.  v4.`c.r.j` @type ^`java.lang.String` := v5 @kind object;
  #L283dfc.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v1 @kind object) @signature `Lc/r;.a:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2836a0.  v0:= "http" @kind object;
  #L2836a4.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2836aa.  v0:= temp;
  #L2836ac.  if v0 == 0 then goto L2836b6;
  #L2836b0.  v1:= 80I;
  #L2836b4.  return v1;
  #L2836b6.  v0:= "https" @kind object;
  #L2836ba.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2836c0.  v1:= temp;
  #L2836c2.  if v1 == 0 then goto L2836cc;
  #L2836c6.  v1:= 443I;
  #L2836ca.  return v1;
  #L2836cc.  v1:= -1I;
  #L2836ce.  return v1;
}
procedure `java.lang.String` `a`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 , `java.lang.String` v14 @kind object, `boolean` v15 , `boolean` v16 , `boolean` v17 , `boolean` v18 , `java.nio.charset.Charset` v19 @kind object) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2837a0.  v1:= v11 @kind object;
  #L2837a2.  v3:= v13;
  #L2837a4.  v2:= v12;
  #L2837a6.  if v2 >= v3 then goto L28384c;
  #L2837aa.  call temp:= `codePointAt`(v1, v2) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L2837b0.  v0:= temp;
  #L2837b2.  v4:= 32I;
  #L2837b6.  if v0 < v4 then goto L283814;
  #L2837ba.  v4:= 127I;
  #L2837be.  if v0 == v4 then goto L283814;
  #L2837c2.  v4:= 128I;
  #L2837c6.  if v0 < v4 then goto L2837ce;
  #L2837ca.  if v18 != 0 then goto L283814;
  #L2837ce.  v4:= v14 @kind object;
  #L2837d0.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2837d6.  v5:= temp;
  #L2837d8.  v6:= -1I;
  #L2837da.  if v5 != v6 then goto L283816;
  #L2837de.  v5:= 37I;
  #L2837e2.  if v0 != v5 then goto L2837fa;
  #L2837e6.  if v15 == 0 then goto L283816;
  #L2837ea.  if v16 == 0 then goto L2837fa;
  #L2837ee.  call temp:= `a`(v1, v2, v3) @signature `Lc/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L2837f4.  v7:= temp;
  #L2837f6.  if v7 == 0 then goto L283816;
  #L2837fa.  v7:= 43I;
  #L2837fe.  if v0 != v7 then goto L283808;
  #L283802.  if v17 == 0 then goto L283808;
  #L283806.  goto L283816;
  #L283808.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L28380e.  v0:= temp;
  #L283810.  v2:= v2 + v0 @kind int;
  #L283812.  goto L2837a6;
  #L283814.  v4:= v14 @kind object;
  #L283816.  v10:= new `d.c`;
  #L28381a.  call `<init>`(v10) @signature `Ld/c;.<init>:()V` @kind direct;
  #L283820.  v0:= v12;
  #L283822.  call temp:= `a`(v10, v1, v0, v2) @signature `Ld/c;.a:(Ljava/lang/String;II)Ld/c;` @kind virtual;
  #L283828.  v0:= v10 @kind object;
  #L28382a.  v5:= v15;
  #L28382c.  v6:= v16;
  #L283830.  v7:= v17;
  #L283834.  v8:= v18;
  #L283838.  v9:= v19 @kind object;
  #L28383c.  call `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ld/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @kind static;
  #L283842.  call temp:= `n`(v10) @signature `Ld/c;.n:()Ljava/lang/String;` @kind virtual;
  #L283848.  v0:= temp @kind object;
  #L28384a.  return v0 @kind object;
  #L28384c.  v0:= v12;
  #L28384e.  call temp:= `substring`(v1, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283854.  v0:= temp @kind object;
  #L283856.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lc/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28373c.  v0:= v4;
  #L28373e.  if v0 >= v5 then goto L283786;
  #L283742.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L283748.  v1:= temp;
  #L28374a.  v2:= 37I;
  #L28374e.  if v1 == v2 then goto L283766;
  #L283752.  v2:= 43I;
  #L283756.  if v1 != v2 then goto L283760;
  #L28375a.  if v6 == 0 then goto L283760;
  #L28375e.  goto L283766;
  #L283760.  v0:= v0 + 1;
  #L283764.  goto L28373e;
  #L283766.  v1:= new `d.c`;
  #L28376a.  call `<init>`(v1) @signature `Ld/c;.<init>:()V` @kind direct;
  #L283770.  call temp:= `a`(v1, v3, v4, v0) @signature `Ld/c;.a:(Ljava/lang/String;II)Ld/c;` @kind virtual;
  #L283776.  call `a`(v1, v3, v0, v5, v6) @signature `Lc/r;.a:(Ld/c;Ljava/lang/String;IIZ)V` @kind static;
  #L28377c.  call temp:= `n`(v1) @signature `Ld/c;.n:()Ljava/lang/String;` @kind virtual;
  #L283782.  v3:= temp @kind object;
  #L283784.  return v3 @kind object;
  #L283786.  call temp:= `substring`(v3, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L28378c.  v3:= temp @kind object;
  #L28378e.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L283868.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28386e.  v2:= temp;
  #L283870.  v1:= 0I;
  #L283872.  v8:= 0I;
  #L283874.  v0:= v9 @kind object;
  #L283876.  v3:= v10 @kind object;
  #L283878.  v4:= v11;
  #L28387a.  v5:= v12;
  #L28387c.  v6:= v13;
  #L28387e.  v7:= v14;
  #L283880.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L283886.  v9:= temp @kind object;
  #L283888.  return v9 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lc/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L283718.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28371e.  v0:= temp;
  #L283720.  v1:= 0I;
  #L283722.  call temp:= `a`(v2, v1, v0, v3) @signature `Lc/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L283728.  v2:= temp @kind object;
  #L28372a.  return v2 @kind object;
}
procedure `java.util.List` `a`(`c.r` v4 @kind this, `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lc/r;.a:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283ba0.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L283ba6.  v0:= temp;
  #L283ba8.  v1:= new `java.util.ArrayList`;
  #L283bac.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L283bb2.  v2:= 0I;
  #L283bb4.  if v2 >= v0 then goto L283be0;
  #L283bb8.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L283bbe.  v3:= temp @kind object;
  #L283bc0.  v3:= (`java.lang.String`) v3 @kind object;
  #L283bc4.  if v3 == 0 then goto L283bd2;
  #L283bc8.  call temp:= `a`(v3, v6) @signature `Lc/r;.a:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L283bce.  v3:= temp @kind object;
  #L283bd0.  goto L283bd4;
  #L283bd2.  v3:= 0I;
  #L283bd4.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283bda.  v2:= v2 + 1;
  #L283bde.  goto L283bb4;
  #L283be0.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L283be6.  v5:= temp @kind object;
  #L283be8.  return v5 @kind object;
}
procedure `void` `a`(`d.c` v6 @kind object, `java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `java.lang.String` v10 @kind object, `boolean` v11 , `boolean` v12 , `boolean` v13 , `boolean` v14 , `java.nio.charset.Charset` v15 @kind object) @signature `Lc/r;.a:(Ld/c;Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L283ea8.  v0:= 0I;
  #L283eaa.  if v8 >= v9 then goto L283fe4;
  #L283eae.  call temp:= `codePointAt`(v7, v8) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L283eb4.  v1:= temp;
  #L283eb6.  if v11 == 0 then goto L283ede;
  #L283eba.  v2:= 9I;
  #L283ebe.  if v1 == v2 then goto L283fd6;
  #L283ec2.  v2:= 10I;
  #L283ec6.  if v1 == v2 then goto L283fd6;
  #L283eca.  v2:= 12I;
  #L283ece.  if v1 == v2 then goto L283fd6;
  #L283ed2.  v2:= 13I;
  #L283ed6.  if v1 != v2 then goto L283ede;
  #L283eda.  goto L283fd6;
  #L283ede.  v2:= 43I;
  #L283ee2.  if v1 != v2 then goto L283f02;
  #L283ee6.  if v13 == 0 then goto L283f02;
  #L283eea.  if v11 == 0 then goto L283ef4;
  #L283eee.  v2:= "+" @kind object;
  #L283ef2.  goto L283ef8;
  #L283ef4.  v2:= "%2B" @kind object;
  #L283ef8.  call temp:= `a`(v6, v2) @signature `Ld/c;.a:(Ljava/lang/String;)Ld/c;` @kind virtual;
  #L283efe.  goto L283fd6;
  #L283f02.  v2:= 32I;
  #L283f06.  v3:= 37I;
  #L283f0a.  if v1 < v2 then goto L283f52;
  #L283f0e.  v2:= 127I;
  #L283f12.  if v1 == v2 then goto L283f52;
  #L283f16.  v2:= 128I;
  #L283f1a.  if v1 < v2 then goto L283f22;
  #L283f1e.  if v14 != 0 then goto L283f52;
  #L283f22.  call temp:= `indexOf`(v10, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L283f28.  v2:= temp;
  #L283f2a.  v4:= -1I;
  #L283f2c.  if v2 != v4 then goto L283f52;
  #L283f30.  if v1 != v3 then goto L283f4a;
  #L283f34.  if v11 == 0 then goto L283f52;
  #L283f38.  if v12 == 0 then goto L283f4a;
  #L283f3c.  call temp:= `a`(v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;II)Z` @kind static;
  #L283f42.  v2:= temp;
  #L283f44.  if v2 != 0 then goto L283f4a;
  #L283f48.  goto L283f52;
  #L283f4a.  call temp:= `a`(v6, v1) @signature `Ld/c;.a:(I)Ld/c;` @kind virtual;
  #L283f50.  goto L283fd6;
  #L283f52.  if v0 != 0 then goto L283f60;
  #L283f56.  v0:= new `d.c`;
  #L283f5a.  call `<init>`(v0) @signature `Ld/c;.<init>:()V` @kind direct;
  #L283f60.  if v15 == 0 then goto L283f88;
  #L283f64.  v2:= `@@c.a.c.e` @type ^`java.nio.charset.Charset` @kind object;
  #L283f68.  call temp:= `equals`(v15, v2) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L283f6e.  v2:= temp;
  #L283f70.  if v2 == 0 then goto L283f76;
  #L283f74.  goto L283f88;
  #L283f76.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L283f7c.  v2:= temp;
  #L283f7e.  v2:= v2 + v8 @kind int;
  #L283f80.  call temp:= `a`(v0, v7, v8, v2, v15) @signature `Ld/c;.a:(Ljava/lang/String;IILjava/nio/charset/Charset;)Ld/c;` @kind virtual;
  #L283f86.  goto L283f8e;
  #L283f88.  call temp:= `a`(v0, v1) @signature `Ld/c;.a:(I)Ld/c;` @kind virtual;
  #L283f8e.  call temp:= `e`(v0) @signature `Ld/c;.e:()Z` @kind virtual;
  #L283f94.  v2:= temp;
  #L283f96.  if v2 != 0 then goto L283fd6;
  #L283f9a.  call temp:= `g`(v0) @signature `Ld/c;.g:()B` @kind virtual;
  #L283fa0.  v2:= temp;
  #L283fa2.  v2:= v2 ^& 255;
  #L283fa6.  call temp:= `b`(v6, v3) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L283fac.  v4:= `@@c.r.d` @type ^`char`[] @kind object;
  #L283fb0.  v5:= v2 ^> 4;
  #L283fb4.  v5:= v5 ^& 15;
  #L283fb8.  v4:= v4[v5] @kind char;
  #L283fbc.  call temp:= `b`(v6, v4) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L283fc2.  v4:= `@@c.r.d` @type ^`char`[] @kind object;
  #L283fc6.  v2:= v2 ^& 15;
  #L283fca.  v2:= v4[v2] @kind char;
  #L283fce.  call temp:= `b`(v6, v2) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L283fd4.  goto L283f8e;
  #L283fd6.  call temp:= `charCount`(v1) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L283fdc.  v1:= temp;
  #L283fde.  v8:= v8 + v1 @kind int;
  #L283fe0.  goto L283eaa;
  #L283fe4.  return @kind void;
}
procedure `void` `a`(`d.c` v5 @kind object, `java.lang.String` v6 @kind object, `int` v7 , `int` v8 , `boolean` v9 ) @signature `Lc/r;.a:(Ld/c;Ljava/lang/String;IIZ)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L283e10.  if v7 >= v8 then goto L283e94;
  #L283e14.  call temp:= `codePointAt`(v6, v7) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L283e1a.  v0:= temp;
  #L283e1c.  v1:= 37I;
  #L283e20.  if v0 != v1 then goto L283e6a;
  #L283e24.  v1:= v7 + 2;
  #L283e28.  if v1 >= v8 then goto L283e6a;
  #L283e2c.  v2:= v7 + 1;
  #L283e30.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L283e36.  v2:= temp;
  #L283e38.  call temp:= `a`(v2) @signature `Lc/a/c;.a:(C)I` @kind static;
  #L283e3e.  v2:= temp;
  #L283e40.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L283e46.  v3:= temp;
  #L283e48.  call temp:= `a`(v3) @signature `Lc/a/c;.a:(C)I` @kind static;
  #L283e4e.  v3:= temp;
  #L283e50.  v4:= -1I;
  #L283e52.  if v2 == v4 then goto L283e82;
  #L283e56.  if v3 == v4 then goto L283e82;
  #L283e5a.  v7:= v2 ^< 4;
  #L283e5e.  v7:= v7 + v3 @kind int;
  #L283e60.  call temp:= `b`(v5, v7) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L283e66.  v7:= v1;
  #L283e68.  goto L283e88;
  #L283e6a.  v1:= 43I;
  #L283e6e.  if v0 != v1 then goto L283e82;
  #L283e72.  if v9 == 0 then goto L283e82;
  #L283e76.  v1:= 32I;
  #L283e7a.  call temp:= `b`(v5, v1) @signature `Ld/c;.b:(I)Ld/c;` @kind virtual;
  #L283e80.  goto L283e88;
  #L283e82.  call temp:= `a`(v5, v0) @signature `Ld/c;.a:(I)Ld/c;` @kind virtual;
  #L283e88.  call temp:= `charCount`(v0) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L283e8e.  v0:= temp;
  #L283e90.  v7:= v7 + v0 @kind int;
  #L283e92.  goto L283e10;
  #L283e94.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lc/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L283ff8.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L283ffe.  v0:= temp;
  #L284000.  v1:= 0I;
  #L284002.  if v1 >= v0 then goto L284028;
  #L284006.  v2:= 47I;
  #L28400a.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L284010.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L284016.  v2:= temp @kind object;
  #L284018.  v2:= (`java.lang.String`) v2 @kind object;
  #L28401c.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L284022.  v1:= v1 + 1;
  #L284026.  goto L284002;
  #L284028.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lc/r;.a:(Ljava/lang/String;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2834b8.  v0:= v4 + 2;
  #L2834bc.  v1:= 1I;
  #L2834be.  if v0 >= v5 then goto L283500;
  #L2834c2.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2834c8.  v5:= temp;
  #L2834ca.  v2:= 37I;
  #L2834ce.  if v5 != v2 then goto L283500;
  #L2834d2.  v4:= v4 + v1 @kind int;
  #L2834d4.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2834da.  v4:= temp;
  #L2834dc.  call temp:= `a`(v4) @signature `Lc/a/c;.a:(C)I` @kind static;
  #L2834e2.  v4:= temp;
  #L2834e4.  v5:= -1I;
  #L2834e6.  if v4 == v5 then goto L283500;
  #L2834ea.  call temp:= `charAt`(v3, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2834f0.  v3:= temp;
  #L2834f2.  call temp:= `a`(v3) @signature `Lc/a/c;.a:(C)I` @kind static;
  #L2834f8.  v3:= temp;
  #L2834fa.  if v3 == v5 then goto L283500;
  #L2834fe.  goto L283502;
  #L283500.  v1:= 0I;
  #L283502.  return v1;
}
procedure `java.util.List` `b`(`java.lang.String` v5 @kind object) @signature `Lc/r;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L283bfc.  v0:= new `java.util.ArrayList`;
  #L283c00.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L283c06.  v1:= 0I;
  #L283c08.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283c0e.  v2:= temp;
  #L283c10.  if v1 > v2 then goto L283c82;
  #L283c14.  v2:= 38I;
  #L283c18.  call temp:= `indexOf`(v5, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L283c1e.  v2:= temp;
  #L283c20.  v3:= -1I;
  #L283c22.  if v2 != v3 then goto L283c2e;
  #L283c26.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283c2c.  v2:= temp;
  #L283c2e.  v4:= 61I;
  #L283c32.  call temp:= `indexOf`(v5, v4, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L283c38.  v4:= temp;
  #L283c3a.  if v4 == v3 then goto L283c66;
  #L283c3e.  if v4 <= v2 then goto L283c44;
  #L283c42.  goto L283c66;
  #L283c44.  call temp:= `substring`(v5, v1, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283c4a.  v1:= temp @kind object;
  #L283c4c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283c52.  v4:= v4 + 1;
  #L283c56.  call temp:= `substring`(v5, v4, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283c5c.  v1:= temp @kind object;
  #L283c5e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283c64.  goto L283c7c;
  #L283c66.  call temp:= `substring`(v5, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283c6c.  v1:= temp @kind object;
  #L283c6e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283c74.  v1:= 0I;
  #L283c76.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283c7c.  v1:= v2 + 1;
  #L283c80.  goto L283c08;
  #L283c82.  return v0 @kind object;
}
procedure `void` `b`(`java.lang.StringBuilder` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lc/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28403c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L284042.  v0:= temp;
  #L284044.  v1:= 0I;
  #L284046.  if v1 >= v0 then goto L284094;
  #L28404a.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L284050.  v2:= temp @kind object;
  #L284052.  v2:= (`java.lang.String`) v2 @kind object;
  #L284056.  v3:= v1 + 1;
  #L28405a.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L284060.  v3:= temp @kind object;
  #L284062.  v3:= (`java.lang.String`) v3 @kind object;
  #L284066.  if v1 <= 0 then goto L284074;
  #L28406a.  v4:= 38I;
  #L28406e.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L284074.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28407a.  if v3 == 0 then goto L28408e;
  #L28407e.  v2:= 61I;
  #L284082.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L284088.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28408e.  v1:= v1 + 2;
  #L284092.  goto L284046;
  #L284094.  return @kind void;
}
procedure `c.r` `e`(`java.lang.String` v3 @kind object) @signature `Lc/r;.e:(Ljava/lang/String;)Lc/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28359c.  v0:= new `c.r$a`;
  #L2835a0.  call `<init>`(v0) @signature `Lc/r$a;.<init>:()V` @kind direct;
  #L2835a6.  v1:= 0I;
  #L2835a8.  call temp:= `a`(v0, v1, v3) @signature `Lc/r$a;.a:(Lc/r;Ljava/lang/String;)Lc/r$a$a;` @kind virtual;
  #L2835ae.  v3:= temp @kind object;
  #L2835b0.  v2:= `@@c.r$a$a.a` @type ^`c.r$a$a` @kind object;
  #L2835b4.  if v3 != v2 then goto L2835c0;
  #L2835b8.  call temp:= `c`(v0) @signature `Lc/r$a;.c:()Lc/r;` @kind virtual;
  #L2835be.  v1:= temp @kind object;
  #L2835c0.  return v1 @kind object;
}
procedure `java.net.URI` `a`(`c.r` v4 @kind this) @signature `Lc/r;.a:()Ljava/net/URI;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283b28.  call temp:= `n`(v4) @signature `Lc/r;.n:()Lc/r$a;` @kind virtual;
  #L283b2e.  v0:= temp @kind object;
  #L283b30.  call temp:= `b`(v0) @signature `Lc/r$a;.b:()Lc/r$a;` @kind virtual;
  #L283b36.  v0:= temp @kind object;
  #L283b38.  call temp:= `toString`(v0) @signature `Lc/r$a;.toString:()Ljava/lang/String;` @kind virtual;
  #L283b3e.  v0:= temp @kind object;
  #L283b40.  v1:= new `java.net.URI`;
  #L283b44.  call `<init>`(v1, v0) @signature `Ljava/net/URI;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L283b4a.  return v1 @kind object;
  #L283b4c.  v1:= Exception @type ^`java.net.URISyntaxException` @kind object;
  #L283b4e.  v2:= "[\\u0000-\\u001F\\u007F-\\u009F\\p{javaWhitespace}]" @kind object;
  #L283b52.  v3:= "" @kind object;
  #L283b56.  call temp:= `replaceAll`(v0, v2, v3) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L283b5c.  v0:= temp @kind object;
  #L283b5e.  call temp:= `create`(v0) @signature `Ljava/net/URI;.create:(Ljava/lang/String;)Ljava/net/URI;` @kind static;
  #L283b64.  v0:= temp @kind object;
  #L283b66.  return v0 @kind object;
  #L283b68.  v0:= new `java.lang.RuntimeException`;
  #L283b6c.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L283b72.  throw v0;
  catch `java.net.URISyntaxException` @[L283b40..L283b4a] goto L283b4c;
  catch `java.lang.Exception` @[L283b4e..L283b66] goto L283b68;
}
procedure `java.lang.String` `b`(`c.r` v1 @kind this) @signature `Lc/r;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28389c.  v0:= v1.`c.r.a` @type ^`java.lang.String` @kind object;
  #L2838a0.  return v0 @kind object;
}
procedure `c.r` `c`(`c.r` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lc/r;.c:(Ljava/lang/String;)Lc/r;` @AccessFlag PUBLIC {
    temp;

  #L283570.  call temp:= `d`(v0, v1) @signature `Lc/r;.d:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L283576.  v1:= temp @kind object;
  #L283578.  if v1 == 0 then goto L283586;
  #L28357c.  call temp:= `c`(v1) @signature `Lc/r$a;.c:()Lc/r;` @kind virtual;
  #L283582.  v1:= temp @kind object;
  #L283584.  goto L283588;
  #L283586.  v1:= 0I;
  #L283588.  return v1 @kind object;
}
procedure `boolean` `c`(`c.r` v2 @kind this) @signature `Lc/r;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283514.  v0:= v2.`c.r.a` @type ^`java.lang.String` @kind object;
  #L283518.  v1:= "https" @kind object;
  #L28351c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L283522.  v0:= temp;
  #L283524.  return v0;
}
procedure `c.r$a` `d`(`c.r` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lc/r;.d:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2835d4.  v0:= new `c.r$a`;
  #L2835d8.  call `<init>`(v0) @signature `Lc/r$a;.<init>:()V` @kind direct;
  #L2835de.  call temp:= `a`(v0, v2, v3) @signature `Lc/r$a;.a:(Lc/r;Ljava/lang/String;)Lc/r$a$a;` @kind virtual;
  #L2835e4.  v3:= temp @kind object;
  #L2835e6.  v1:= `@@c.r$a$a.a` @type ^`c.r$a$a` @kind object;
  #L2835ea.  if v3 != v1 then goto L2835f0;
  #L2835ee.  goto L2835f2;
  #L2835f0.  v0:= 0I;
  #L2835f2.  return v0 @kind object;
}
procedure `java.lang.String` `d`(`c.r` v4 @kind this) @signature `Lc/r;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2838b4.  v0:= v4.`c.r.e` @type ^`java.lang.String` @kind object;
  #L2838b8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2838be.  v0:= temp;
  #L2838c0.  if v0 == 0 then goto L2838ca;
  #L2838c4.  v0:= "" @kind object;
  #L2838c8.  return v0 @kind object;
  #L2838ca.  v0:= v4.`c.r.a` @type ^`java.lang.String` @kind object;
  #L2838ce.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2838d4.  v0:= temp;
  #L2838d6.  v0:= v0 + 3;
  #L2838da.  v1:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2838de.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2838e2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2838e8.  v2:= temp;
  #L2838ea.  v3:= ":@" @kind object;
  #L2838ee.  call temp:= `a`(v1, v0, v2, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L2838f4.  v1:= temp;
  #L2838f6.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2838fa.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283900.  v0:= temp @kind object;
  #L283902.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`c.r` v3 @kind this) @signature `Lc/r;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283914.  v0:= v3.`c.r.f` @type ^`java.lang.String` @kind object;
  #L283918.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L28391e.  v0:= temp;
  #L283920.  if v0 == 0 then goto L28392a;
  #L283924.  v0:= "" @kind object;
  #L283928.  return v0 @kind object;
  #L28392a.  v0:= v3.`c.r.j` @type ^`java.lang.String` @kind object;
  #L28392e.  v1:= 58I;
  #L283932.  v2:= v3.`c.r.a` @type ^`java.lang.String` @kind object;
  #L283936.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28393c.  v2:= temp;
  #L28393e.  v2:= v2 + 3;
  #L283942.  call temp:= `indexOf`(v0, v1, v2) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L283948.  v0:= temp;
  #L28394a.  v0:= v0 + 1;
  #L28394e.  v1:= v3.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283952.  v2:= 64I;
  #L283956.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L28395c.  v1:= temp;
  #L28395e.  v2:= v3.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283962.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283968.  v0:= temp @kind object;
  #L28396a.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.r` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283538.  v0:= instanceof @variable v2 @type ^`c.r` @kind boolean;
  #L28353c.  if v0 == 0 then goto L28355c;
  #L283540.  v2:= (`c.r`) v2 @kind object;
  #L283544.  v2:= v2.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283548.  v0:= v1.`c.r.j` @type ^`java.lang.String` @kind object;
  #L28354c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L283552.  v2:= temp;
  #L283554.  if v2 == 0 then goto L28355c;
  #L283558.  v2:= 1I;
  #L28355a.  goto L28355e;
  #L28355c.  v2:= 0I;
  #L28355e.  return v2;
}
procedure `java.lang.String` `f`(`c.r` v1 @kind this) @signature `Lc/r;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28397c.  v0:= v1.`c.r.b` @type ^`java.lang.String` @kind object;
  #L283980.  return v0 @kind object;
}
procedure `int` `g`(`c.r` v1 @kind this) @signature `Lc/r;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2836e0.  v0:= v1.`c.r.c` @type ^`int`;
  #L2836e4.  return v0;
}
procedure `java.lang.String` `h`(`c.r` v4 @kind this) @signature `Lc/r;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283994.  v0:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283998.  v1:= v4.`c.r.a` @type ^`java.lang.String` @kind object;
  #L28399c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2839a2.  v1:= temp;
  #L2839a4.  v1:= v1 + 3;
  #L2839a8.  v2:= 47I;
  #L2839ac.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L2839b2.  v0:= temp;
  #L2839b4.  v1:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2839b8.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2839bc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2839c2.  v2:= temp;
  #L2839c4.  v3:= "?#" @kind object;
  #L2839c8.  call temp:= `a`(v1, v0, v2, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L2839ce.  v1:= temp;
  #L2839d0.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2839d4.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2839da.  v0:= temp @kind object;
  #L2839dc.  return v0 @kind object;
}
procedure `int` `hashCode`(`c.r` v1 @kind this) @signature `Lc/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2836f8.  v0:= v1.`c.r.j` @type ^`java.lang.String` @kind object;
  #L2836fc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L283702.  v0:= temp;
  #L283704.  return v0;
}
procedure `java.util.List` `i`(`c.r` v6 @kind this) @signature `Lc/r;.i:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L283c94.  v0:= v6.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283c98.  v1:= v6.`c.r.a` @type ^`java.lang.String` @kind object;
  #L283c9c.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283ca2.  v1:= temp;
  #L283ca4.  v1:= v1 + 3;
  #L283ca8.  v2:= 47I;
  #L283cac.  call temp:= `indexOf`(v0, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L283cb2.  v0:= temp;
  #L283cb4.  v1:= v6.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283cb8.  v3:= v6.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283cbc.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283cc2.  v3:= temp;
  #L283cc4.  v4:= "?#" @kind object;
  #L283cc8.  call temp:= `a`(v1, v0, v3, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L283cce.  v1:= temp;
  #L283cd0.  v3:= new `java.util.ArrayList`;
  #L283cd4.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L283cda.  if v0 >= v1 then goto L283d04;
  #L283cde.  v0:= v0 + 1;
  #L283ce2.  v4:= v6.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283ce6.  call temp:= `a`(v4, v0, v1, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L283cec.  v4:= temp;
  #L283cee.  v5:= v6.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283cf2.  call temp:= `substring`(v5, v0, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283cf8.  v0:= temp @kind object;
  #L283cfa.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283d00.  v0:= v4;
  #L283d02.  goto L283cda;
  #L283d04.  return v3 @kind object;
}
procedure `java.lang.String` `j`(`c.r` v4 @kind this) @signature `Lc/r;.j:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2839f0.  v0:= v4.`c.r.h` @type ^`java.util.List` @kind object;
  #L2839f4.  if v0 != 0 then goto L2839fc;
  #L2839f8.  v0:= 0I;
  #L2839fa.  return v0 @kind object;
  #L2839fc.  v0:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283a00.  v1:= 63I;
  #L283a04.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L283a0a.  v0:= temp;
  #L283a0c.  v0:= v0 + 1;
  #L283a10.  v1:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283a14.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283a18.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L283a1e.  v2:= temp;
  #L283a20.  v3:= 35I;
  #L283a24.  call temp:= `a`(v1, v0, v2, v3) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L283a2a.  v1:= temp;
  #L283a2c.  v2:= v4.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283a30.  call temp:= `substring`(v2, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L283a36.  v0:= temp @kind object;
  #L283a38.  return v0 @kind object;
}
procedure `java.lang.String` `k`(`c.r` v2 @kind this) @signature `Lc/r;.k:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283a4c.  v0:= v2.`c.r.h` @type ^`java.util.List` @kind object;
  #L283a50.  if v0 != 0 then goto L283a58;
  #L283a54.  v0:= 0I;
  #L283a56.  return v0 @kind object;
  #L283a58.  v0:= new `java.lang.StringBuilder`;
  #L283a5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L283a62.  v1:= v2.`c.r.h` @type ^`java.util.List` @kind object;
  #L283a66.  call `b`(v0, v1) @signature `Lc/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L283a6c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L283a72.  v0:= temp @kind object;
  #L283a74.  return v0 @kind object;
}
procedure `java.lang.String` `l`(`c.r` v2 @kind this) @signature `Lc/r;.l:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283a88.  v0:= v2.`c.r.i` @type ^`java.lang.String` @kind object;
  #L283a8c.  if v0 != 0 then goto L283a94;
  #L283a90.  v0:= 0I;
  #L283a92.  return v0 @kind object;
  #L283a94.  v0:= v2.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283a98.  v1:= 35I;
  #L283a9c.  call temp:= `indexOf`(v0, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L283aa2.  v0:= temp;
  #L283aa4.  v0:= v0 + 1;
  #L283aa8.  v1:= v2.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283aac.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L283ab2.  v0:= temp @kind object;
  #L283ab4.  return v0 @kind object;
}
procedure `java.lang.String` `m`(`c.r` v2 @kind this) @signature `Lc/r;.m:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L283ac8.  v0:= "/..." @kind object;
  #L283acc.  call temp:= `d`(v2, v0) @signature `Lc/r;.d:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L283ad2.  v0:= temp @kind object;
  #L283ad4.  v1:= "" @kind object;
  #L283ad8.  call temp:= `b`(v0, v1) @signature `Lc/r$a;.b:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L283ade.  v0:= temp @kind object;
  #L283ae0.  v1:= "" @kind object;
  #L283ae4.  call temp:= `c`(v0, v1) @signature `Lc/r$a;.c:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L283aea.  v0:= temp @kind object;
  #L283aec.  call temp:= `c`(v0) @signature `Lc/r$a;.c:()Lc/r;` @kind virtual;
  #L283af2.  v0:= temp @kind object;
  #L283af4.  call temp:= `toString`(v0) @signature `Lc/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L283afa.  v0:= temp @kind object;
  #L283afc.  return v0 @kind object;
}
procedure `c.r$a` `n`(`c.r` v3 @kind this) @signature `Lc/r;.n:()Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L283604.  v0:= new `c.r$a`;
  #L283608.  call `<init>`(v0) @signature `Lc/r$a;.<init>:()V` @kind direct;
  #L28360e.  v1:= v3.`c.r.a` @type ^`java.lang.String` @kind object;
  #L283612.  v0.`c.r$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L283616.  call temp:= `d`(v3) @signature `Lc/r;.d:()Ljava/lang/String;` @kind virtual;
  #L28361c.  v1:= temp @kind object;
  #L28361e.  v0.`c.r$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L283622.  call temp:= `e`(v3) @signature `Lc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L283628.  v1:= temp @kind object;
  #L28362a.  v0.`c.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L28362e.  v1:= v3.`c.r.b` @type ^`java.lang.String` @kind object;
  #L283632.  v0.`c.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L283636.  v1:= v3.`c.r.c` @type ^`int`;
  #L28363a.  v2:= v3.`c.r.a` @type ^`java.lang.String` @kind object;
  #L28363e.  call temp:= `a`(v2) @signature `Lc/r;.a:(Ljava/lang/String;)I` @kind static;
  #L283644.  v2:= temp;
  #L283646.  if v1 == v2 then goto L283650;
  #L28364a.  v1:= v3.`c.r.c` @type ^`int`;
  #L28364e.  goto L283652;
  #L283650.  v1:= -1I;
  #L283652.  v0.`c.r$a.e` @type ^`int` := v1;
  #L283656.  v1:= v0.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28365a.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L283660.  v1:= v0.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283664.  call temp:= `i`(v3) @signature `Lc/r;.i:()Ljava/util/List;` @kind virtual;
  #L28366a.  v2:= temp @kind object;
  #L28366c.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L283672.  call temp:= `j`(v3) @signature `Lc/r;.j:()Ljava/lang/String;` @kind virtual;
  #L283678.  v1:= temp @kind object;
  #L28367a.  call temp:= `e`(v0, v1) @signature `Lc/r$a;.e:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L283680.  call temp:= `l`(v3) @signature `Lc/r;.l:()Ljava/lang/String;` @kind virtual;
  #L283686.  v1:= temp @kind object;
  #L283688.  v0.`c.r$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L28368c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`c.r` v1 @kind this) @signature `Lc/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L283b10.  v0:= v1.`c.r.j` @type ^`java.lang.String` @kind object;
  #L283b14.  return v0 @kind object;
}
