record `c.ab` @kind class @AccessFlag PUBLIC_FINAL {
  `c.a` `c.ab.a` @AccessFlag FINAL;
  `java.net.Proxy` `c.ab.b` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `c.ab.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`c.ab` v0 @kind this, `c.a` v1 @kind object, `java.net.Proxy` v2 @kind object, `java.net.InetSocketAddress` v3 @kind object) @signature `Lc/ab;.<init>:(Lc/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L27e1a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27e1aa.  if v1 != 0 then goto L27e1be;
  #L27e1ae.  v1:= new `java.lang.NullPointerException`;
  #L27e1b2.  v2:= "address == null" @kind object;
  #L27e1b6.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e1bc.  throw v1;
  #L27e1be.  if v2 != 0 then goto L27e1d2;
  #L27e1c2.  v1:= new `java.lang.NullPointerException`;
  #L27e1c6.  v2:= "proxy == null" @kind object;
  #L27e1ca.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e1d0.  throw v1;
  #L27e1d2.  if v3 != 0 then goto L27e1e6;
  #L27e1d6.  v1:= new `java.lang.NullPointerException`;
  #L27e1da.  v2:= "inetSocketAddress == null" @kind object;
  #L27e1de.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e1e4.  throw v1;
  #L27e1e6.  v0.`c.ab.a` @type ^`c.a` := v1 @kind object;
  #L27e1ea.  v0.`c.ab.b` @type ^`java.net.Proxy` := v2 @kind object;
  #L27e1ee.  v0.`c.ab.c` @type ^`java.net.InetSocketAddress` := v3 @kind object;
  #L27e1f2.  return @kind void;
}
procedure `c.a` `a`(`c.ab` v1 @kind this) @signature `Lc/ab;.a:()Lc/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27df9c.  v0:= v1.`c.ab.a` @type ^`c.a` @kind object;
  #L27dfa0.  return v0 @kind object;
}
procedure `java.net.Proxy` `b`(`c.ab` v1 @kind this) @signature `Lc/ab;.b:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e058.  v0:= v1.`c.ab.b` @type ^`java.net.Proxy` @kind object;
  #L27e05c.  return v0 @kind object;
}
procedure `java.net.InetSocketAddress` `c`(`c.ab` v1 @kind this) @signature `Lc/ab;.c:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e040.  v0:= v1.`c.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L27e044.  return v0 @kind object;
}
procedure `boolean` `d`(`c.ab` v2 @kind this) @signature `Lc/ab;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27df04.  v0:= v2.`c.ab.a` @type ^`c.a` @kind object;
  #L27df08.  v0:= v0.`c.a.i` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L27df0c.  if v0 == 0 then goto L27df28;
  #L27df10.  v0:= v2.`c.ab.b` @type ^`java.net.Proxy` @kind object;
  #L27df14.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L27df1a.  v0:= temp @kind object;
  #L27df1c.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L27df20.  if v0 != v1 then goto L27df28;
  #L27df24.  v0:= 1I;
  #L27df26.  goto L27df2a;
  #L27df28.  v0:= 0I;
  #L27df2a.  return v0;
}
procedure `boolean` `equals`(`c.ab` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lc/ab;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27df3c.  v0:= instanceof @variable v3 @type ^`c.ab` @kind boolean;
  #L27df40.  if v0 == 0 then goto L27df88;
  #L27df44.  v3:= (`c.ab`) v3 @kind object;
  #L27df48.  v0:= v3.`c.ab.a` @type ^`c.a` @kind object;
  #L27df4c.  v1:= v2.`c.ab.a` @type ^`c.a` @kind object;
  #L27df50.  call temp:= `equals`(v0, v1) @signature `Lc/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27df56.  v0:= temp;
  #L27df58.  if v0 == 0 then goto L27df88;
  #L27df5c.  v0:= v3.`c.ab.b` @type ^`java.net.Proxy` @kind object;
  #L27df60.  v1:= v2.`c.ab.b` @type ^`java.net.Proxy` @kind object;
  #L27df64.  call temp:= `equals`(v0, v1) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27df6a.  v0:= temp;
  #L27df6c.  if v0 == 0 then goto L27df88;
  #L27df70.  v3:= v3.`c.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L27df74.  v0:= v2.`c.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L27df78.  call temp:= `equals`(v3, v0) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L27df7e.  v3:= temp;
  #L27df80.  if v3 == 0 then goto L27df88;
  #L27df84.  v3:= 1I;
  #L27df86.  goto L27df8a;
  #L27df88.  v3:= 0I;
  #L27df8a.  return v3;
}
procedure `int` `hashCode`(`c.ab` v2 @kind this) @signature `Lc/ab;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27dfb4.  v0:= v2.`c.ab.a` @type ^`c.a` @kind object;
  #L27dfb8.  call temp:= `hashCode`(v0) @signature `Lc/a;.hashCode:()I` @kind virtual;
  #L27dfbe.  v0:= temp;
  #L27dfc0.  v1:= 527I;
  #L27dfc4.  v1:= v1 + v0 @kind int;
  #L27dfc6.  v1:= v1 * 31;
  #L27dfca.  v0:= v2.`c.ab.b` @type ^`java.net.Proxy` @kind object;
  #L27dfce.  call temp:= `hashCode`(v0) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L27dfd4.  v0:= temp;
  #L27dfd6.  v1:= v1 + v0 @kind int;
  #L27dfd8.  v1:= v1 * 31;
  #L27dfdc.  v0:= v2.`c.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L27dfe0.  call temp:= `hashCode`(v0) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L27dfe6.  v0:= temp;
  #L27dfe8.  v1:= v1 + v0 @kind int;
  #L27dfea.  return v1;
}
procedure `java.lang.String` `toString`(`c.ab` v2 @kind this) @signature `Lc/ab;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L27dffc.  v0:= new `java.lang.StringBuilder`;
  #L27e000.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27e006.  v1:= "Route{" @kind object;
  #L27e00a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27e010.  v1:= v2.`c.ab.c` @type ^`java.net.InetSocketAddress` @kind object;
  #L27e014.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27e01a.  v1:= "}" @kind object;
  #L27e01e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27e024.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27e02a.  v0:= temp @kind object;
  #L27e02c.  return v0 @kind object;
}
