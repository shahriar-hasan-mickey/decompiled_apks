record `c.d$a` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `c.d$a.a` @AccessFlag ;
  `boolean` `c.d$a.b` @AccessFlag ;
  `int` `c.d$a.c` @AccessFlag ;
  `int` `c.d$a.d` @AccessFlag ;
  `int` `c.d$a.e` @AccessFlag ;
  `boolean` `c.d$a.f` @AccessFlag ;
  `boolean` `c.d$a.g` @AccessFlag ;
  `boolean` `c.d$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`c.d$a` v1 @kind this) @signature `Lc/d$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L27e974.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27e97a.  v0:= -1I;
  #L27e97c.  v1.`c.d$a.c` @type ^`int` := v0;
  #L27e980.  v1.`c.d$a.d` @type ^`int` := v0;
  #L27e984.  v1.`c.d$a.e` @type ^`int` := v0;
  #L27e988.  return @kind void;
}
procedure `c.d$a` `a`(`c.d$a` v1 @kind this) @signature `Lc/d$a;.a:()Lc/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e8d8.  v0:= 1I;
  #L27e8da.  v1.`c.d$a.a` @type ^`boolean` := v0 @kind boolean;
  #L27e8de.  return v1 @kind object;
}
procedure `c.d$a` `a`(`c.d$a` v3 @kind this, `int` v4 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lc/d$a;.a:(ILjava/util/concurrent/TimeUnit;)Lc/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L27e8f0.  if v4 >= 0 then goto L27e922;
  #L27e8f4.  v5:= new `java.lang.IllegalArgumentException`;
  #L27e8f8.  v0:= new `java.lang.StringBuilder`;
  #L27e8fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L27e902.  v1:= "maxStale < 0: " @kind object;
  #L27e906.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L27e90c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L27e912.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L27e918.  v4:= temp @kind object;
  #L27e91a.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L27e920.  throw v5;
  #L27e922.  v0:= (`long`) v4 @kind i2l;
  #L27e924.  call temp:= `toSeconds`(v5, v0) @signature `Ljava/util/concurrent/TimeUnit;.toSeconds:(J)J` @kind virtual;
  #L27e92a.  v4:= temp @kind wide;
  #L27e92c.  v0:= 2147483647L;
  #L27e932.  v2:= lcmp(v4, v0);
  #L27e936.  if v2 <= 0 then goto L27e942;
  #L27e93a.  v4:= 2147483647I;
  #L27e940.  goto L27e944;
  #L27e942.  v4:= (`int`) v4 @kind l2i;
  #L27e944.  v3.`c.d$a.d` @type ^`int` := v4;
  #L27e948.  return v3 @kind object;
}
procedure `c.d$a` `b`(`c.d$a` v1 @kind this) @signature `Lc/d$a;.b:()Lc/d$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e95c.  v0:= 1I;
  #L27e95e.  v1.`c.d$a.f` @type ^`boolean` := v0 @kind boolean;
  #L27e962.  return v1 @kind object;
}
procedure `c.d` `c`(`c.d$a` v1 @kind this) @signature `Lc/d$a;.c:()Lc/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L27e8bc.  v0:= new `c.d`;
  #L27e8c0.  call `<init>`(v0, v1) @signature `Lc/d;.<init>:(Lc/d$a;)V` @kind direct;
  #L27e8c6.  return v0 @kind object;
}
