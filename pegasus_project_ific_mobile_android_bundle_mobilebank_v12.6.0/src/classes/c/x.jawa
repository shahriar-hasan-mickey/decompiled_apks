record `c.x` @kind class @AccessFlag PUBLIC_FINAL {
  `c.r` `c.x.a` @AccessFlag FINAL;
  `java.lang.String` `c.x.b` @AccessFlag FINAL;
  `c.q` `c.x.c` @AccessFlag FINAL;
  `c.y` `c.x.d` @AccessFlag FINAL;
  `java.lang.Object` `c.x.e` @AccessFlag FINAL;
  `c.d` `c.x.f` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`c.x` v1 @kind this, `c.x$a` v2 @kind object) @signature `Lc/x;.<init>:(Lc/x$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L285708.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28570e.  v0:= v2.`c.x$a.a` @type ^`c.r` @kind object;
  #L285712.  v1.`c.x.a` @type ^`c.r` := v0 @kind object;
  #L285716.  v0:= v2.`c.x$a.b` @type ^`java.lang.String` @kind object;
  #L28571a.  v1.`c.x.b` @type ^`java.lang.String` := v0 @kind object;
  #L28571e.  v0:= v2.`c.x$a.c` @type ^`c.q$a` @kind object;
  #L285722.  call temp:= `a`(v0) @signature `Lc/q$a;.a:()Lc/q;` @kind virtual;
  #L285728.  v0:= temp @kind object;
  #L28572a.  v1.`c.x.c` @type ^`c.q` := v0 @kind object;
  #L28572e.  v0:= v2.`c.x$a.d` @type ^`c.y` @kind object;
  #L285732.  v1.`c.x.d` @type ^`c.y` := v0 @kind object;
  #L285736.  v0:= v2.`c.x$a.e` @type ^`java.lang.Object` @kind object;
  #L28573a.  if v0 == 0 then goto L285744;
  #L28573e.  v2:= v2.`c.x$a.e` @type ^`java.lang.Object` @kind object;
  #L285742.  goto L285746;
  #L285744.  v2:= v1 @kind object;
  #L285746.  v1.`c.x.e` @type ^`java.lang.Object` := v2 @kind object;
  #L28574a.  return @kind void;
}
procedure `c.r` `a`(`c.x` v1 @kind this) @signature `Lc/x;.a:()Lc/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28560c.  v0:= v1.`c.x.a` @type ^`c.r` @kind object;
  #L285610.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`c.x` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/x;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L285658.  v0:= v1.`c.x.c` @type ^`c.q` @kind object;
  #L28565c.  call temp:= `a`(v0, v2) @signature `Lc/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L285662.  v2:= temp @kind object;
  #L285664.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`c.x` v1 @kind this) @signature `Lc/x;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L285678.  v0:= v1.`c.x.b` @type ^`java.lang.String` @kind object;
  #L28567c.  return v0 @kind object;
}
procedure `c.q` `c`(`c.x` v1 @kind this) @signature `Lc/x;.c:()Lc/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2855f4.  v0:= v1.`c.x.c` @type ^`c.q` @kind object;
  #L2855f8.  return v0 @kind object;
}
procedure `c.y` `d`(`c.x` v1 @kind this) @signature `Lc/x;.d:()Lc/y;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L285640.  v0:= v1.`c.x.d` @type ^`c.y` @kind object;
  #L285644.  return v0 @kind object;
}
procedure `c.x$a` `e`(`c.x` v1 @kind this) @signature `Lc/x;.e:()Lc/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L285624.  v0:= new `c.x$a`;
  #L285628.  call `<init>`(v0, v1) @signature `Lc/x$a;.<init>:(Lc/x;)V` @kind direct;
  #L28562e.  return v0 @kind object;
}
procedure `c.d` `f`(`c.x` v1 @kind this) @signature `Lc/x;.f:()Lc/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2855c8.  v0:= v1.`c.x.f` @type ^`c.d` @kind object;
  #L2855cc.  if v0 == 0 then goto L2855d2;
  #L2855d0.  goto L2855e2;
  #L2855d2.  v0:= v1.`c.x.c` @type ^`c.q` @kind object;
  #L2855d6.  call temp:= `a`(v0) @signature `Lc/d;.a:(Lc/q;)Lc/d;` @kind static;
  #L2855dc.  v0:= temp @kind object;
  #L2855de.  v1.`c.x.f` @type ^`c.d` := v0 @kind object;
  #L2855e2.  return v0 @kind object;
}
procedure `boolean` `g`(`c.x` v1 @kind this) @signature `Lc/x;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2855a8.  v0:= v1.`c.x.a` @type ^`c.r` @kind object;
  #L2855ac.  call temp:= `c`(v0) @signature `Lc/r;.c:()Z` @kind virtual;
  #L2855b2.  v0:= temp;
  #L2855b4.  return v0;
}
procedure `java.lang.String` `toString`(`c.x` v2 @kind this) @signature `Lc/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L285690.  v0:= new `java.lang.StringBuilder`;
  #L285694.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28569a.  v1:= "Request{method=" @kind object;
  #L28569e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856a4.  v1:= v2.`c.x.b` @type ^`java.lang.String` @kind object;
  #L2856a8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856ae.  v1:= ", url=" @kind object;
  #L2856b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856b8.  v1:= v2.`c.x.a` @type ^`c.r` @kind object;
  #L2856bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856c2.  v1:= ", tag=" @kind object;
  #L2856c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856cc.  v1:= v2.`c.x.e` @type ^`java.lang.Object` @kind object;
  #L2856d0.  if v1 == v2 then goto L2856da;
  #L2856d4.  v1:= v2.`c.x.e` @type ^`java.lang.Object` @kind object;
  #L2856d8.  goto L2856dc;
  #L2856da.  v1:= 0I;
  #L2856dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856e2.  v1:= 125I;
  #L2856e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2856ec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2856f2.  v0:= temp @kind object;
  #L2856f4.  return v0 @kind object;
}
