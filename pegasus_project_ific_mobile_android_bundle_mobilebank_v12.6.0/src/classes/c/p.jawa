record `c.p` @kind class @AccessFlag PUBLIC_FINAL {
  `c.ac` `c.p.a` @AccessFlag PRIVATE_FINAL;
  `c.g` `c.p.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `c.p.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `c.p.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.p` v0 @kind this, `c.ac` v1 @kind object, `c.g` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lc/p;.<init>:(Lc/ac;Lc/g;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2821a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2821aa.  v0.`c.p.a` @type ^`c.ac` := v1 @kind object;
  #L2821ae.  v0.`c.p.b` @type ^`c.g` := v2 @kind object;
  #L2821b2.  v0.`c.p.c` @type ^`java.util.List` := v3 @kind object;
  #L2821b6.  v0.`c.p.d` @type ^`java.util.List` := v4 @kind object;
  #L2821ba.  return @kind void;
}
procedure `c.p` `a`(`javax.net.ssl.SSLSession` v4 @kind object) @signature `Lc/p;.a:(Ljavax/net/ssl/SSLSession;)Lc/p;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28207c.  call temp:= `getCipherSuite`(v4) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L282082.  v0:= temp @kind object;
  #L282084.  if v0 != 0 then goto L282098;
  #L282088.  v4:= new `java.lang.IllegalStateException`;
  #L28208c.  v0:= "cipherSuite == null" @kind object;
  #L282090.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282096.  throw v4;
  #L282098.  call temp:= `a`(v0) @signature `Lc/g;.a:(Ljava/lang/String;)Lc/g;` @kind static;
  #L28209e.  v0:= temp @kind object;
  #L2820a0.  call temp:= `getProtocol`(v4) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L2820a6.  v1:= temp @kind object;
  #L2820a8.  if v1 != 0 then goto L2820bc;
  #L2820ac.  v4:= new `java.lang.IllegalStateException`;
  #L2820b0.  v0:= "tlsVersion == null" @kind object;
  #L2820b4.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2820ba.  throw v4;
  #L2820bc.  call temp:= `a`(v1) @signature `Lc/ac;.a:(Ljava/lang/String;)Lc/ac;` @kind static;
  #L2820c2.  v1:= temp @kind object;
  #L2820c4.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L2820ca.  v2:= temp @kind object;
  #L2820cc.  goto L2820d0;
  #L2820ce.  v2:= 0I;
  #L2820d0.  if v2 == 0 then goto L2820de;
  #L2820d4.  call temp:= `a`(v2) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2820da.  v2:= temp @kind object;
  #L2820dc.  goto L2820e6;
  #L2820de.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2820e4.  v2:= temp @kind object;
  #L2820e6.  call temp:= `getLocalCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L2820ec.  v4:= temp @kind object;
  #L2820ee.  if v4 == 0 then goto L2820fc;
  #L2820f2.  call temp:= `a`(v4) @signature `Lc/a/c;.a:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2820f8.  v4:= temp @kind object;
  #L2820fa.  goto L282104;
  #L2820fc.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L282102.  v4:= temp @kind object;
  #L282104.  v3:= new `c.p`;
  #L282108.  call `<init>`(v3, v1, v0, v2, v4) @signature `Lc/p;.<init>:(Lc/ac;Lc/g;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L28210e.  return v3 @kind object;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L2820c4..L2820cc] goto L2820ce;
}
procedure `c.g` `a`(`c.p` v1 @kind this) @signature `Lc/p;.a:()Lc/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282064.  v0:= v1.`c.p.b` @type ^`c.g` @kind object;
  #L282068.  return v0 @kind object;
}
procedure `java.util.List` `b`(`c.p` v1 @kind this) @signature `Lc/p;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28218c.  v0:= v1.`c.p.c` @type ^`java.util.List` @kind object;
  #L282190.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lc/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L281ff0.  v0:= instanceof @variable v4 @type ^`c.p` @kind boolean;
  #L281ff4.  v1:= 0I;
  #L281ff6.  if v0 != 0 then goto L281ffc;
  #L281ffa.  return v1;
  #L281ffc.  v4:= (`c.p`) v4 @kind object;
  #L282000.  v0:= v3.`c.p.a` @type ^`c.ac` @kind object;
  #L282004.  v2:= v4.`c.p.a` @type ^`c.ac` @kind object;
  #L282008.  call temp:= `equals`(v0, v2) @signature `Lc/ac;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L28200e.  v0:= temp;
  #L282010.  if v0 == 0 then goto L282052;
  #L282014.  v0:= v3.`c.p.b` @type ^`c.g` @kind object;
  #L282018.  v2:= v4.`c.p.b` @type ^`c.g` @kind object;
  #L28201c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L282022.  v0:= temp;
  #L282024.  if v0 == 0 then goto L282052;
  #L282028.  v0:= v3.`c.p.c` @type ^`java.util.List` @kind object;
  #L28202c.  v2:= v4.`c.p.c` @type ^`java.util.List` @kind object;
  #L282030.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L282036.  v0:= temp;
  #L282038.  if v0 == 0 then goto L282052;
  #L28203c.  v0:= v3.`c.p.d` @type ^`java.util.List` @kind object;
  #L282040.  v4:= v4.`c.p.d` @type ^`java.util.List` @kind object;
  #L282044.  call temp:= `equals`(v0, v4) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L28204a.  v4:= temp;
  #L28204c.  if v4 == 0 then goto L282052;
  #L282050.  v1:= 1I;
  #L282052.  return v1;
}
procedure `int` `hashCode`(`c.p` v2 @kind this) @signature `Lc/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L282130.  v0:= v2.`c.p.a` @type ^`c.ac` @kind object;
  #L282134.  call temp:= `hashCode`(v0) @signature `Lc/ac;.hashCode:()I` @kind virtual;
  #L28213a.  v0:= temp;
  #L28213c.  v1:= 527I;
  #L282140.  v1:= v1 + v0 @kind int;
  #L282142.  v1:= v1 * 31;
  #L282146.  v0:= v2.`c.p.b` @type ^`c.g` @kind object;
  #L28214a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L282150.  v0:= temp;
  #L282152.  v1:= v1 + v0 @kind int;
  #L282154.  v1:= v1 * 31;
  #L282158.  v0:= v2.`c.p.c` @type ^`java.util.List` @kind object;
  #L28215c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L282162.  v0:= temp;
  #L282164.  v1:= v1 + v0 @kind int;
  #L282166.  v1:= v1 * 31;
  #L28216a.  v0:= v2.`c.p.d` @type ^`java.util.List` @kind object;
  #L28216e.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L282174.  v0:= temp;
  #L282176.  v1:= v1 + v0 @kind int;
  #L282178.  return v1;
}
