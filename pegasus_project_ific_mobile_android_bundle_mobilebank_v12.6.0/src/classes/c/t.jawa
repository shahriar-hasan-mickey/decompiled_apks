record `c.t` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.t.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.t.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.t.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.t.f` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@c.t.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@c.t.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L28424c.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L284250.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L284256.  v0:= temp @kind object;
  #L284258.  `@@c.t.a` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L28425c.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L284260.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L284266.  v0:= temp @kind object;
  #L284268.  `@@c.t.b` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L28426c.  return @kind void;
}
procedure `void` `<init>`(`c.t` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lc/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L284280.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L284286.  v0.`c.t.c` @type ^`java.lang.String` := v1 @kind object;
  #L28428a.  v0.`c.t.d` @type ^`java.lang.String` := v2 @kind object;
  #L28428e.  v0.`c.t.e` @type ^`java.lang.String` := v3 @kind object;
  #L284292.  v0.`c.t.f` @type ^`java.lang.String` := v4 @kind object;
  #L284296.  return @kind void;
}
procedure `c.t` `a`(`java.lang.String` v9 @kind object) @signature `Lc/t;.a:(Ljava/lang/String;)Lc/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2840e0.  v0:= `@@c.t.a` @type ^`java.util.regex.Pattern` @kind object;
  #L2840e4.  call temp:= `matcher`(v0, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2840ea.  v0:= temp @kind object;
  #L2840ec.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L2840f2.  v1:= temp;
  #L2840f4.  v2:= 0I;
  #L2840f6.  if v1 != 0 then goto L2840fc;
  #L2840fa.  return v2 @kind object;
  #L2840fc.  v1:= 1I;
  #L2840fe.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L284104.  v3:= temp @kind object;
  #L284106.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L28410a.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L284110.  v3:= temp @kind object;
  #L284112.  v4:= 2I;
  #L284114.  call temp:= `group`(v0, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L28411a.  v5:= temp @kind object;
  #L28411c.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L284120.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L284126.  v5:= temp @kind object;
  #L284128.  v6:= `@@c.t.b` @type ^`java.util.regex.Pattern` @kind object;
  #L28412c.  call temp:= `matcher`(v6, v9) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L284132.  v6:= temp @kind object;
  #L284134.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L28413a.  v0:= temp;
  #L28413c.  v7:= v2 @kind object;
  #L28413e.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L284144.  v8:= temp;
  #L284146.  if v0 >= v8 then goto L2841f8;
  #L28414a.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L284150.  v8:= temp;
  #L284152.  call temp:= `region`(v6, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L284158.  call temp:= `lookingAt`(v6) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L28415e.  v0:= temp;
  #L284160.  if v0 != 0 then goto L284166;
  #L284164.  return v2 @kind object;
  #L284166.  call temp:= `group`(v6, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L28416c.  v0:= temp @kind object;
  #L28416e.  if v0 == 0 then goto L2841ee;
  #L284172.  v8:= "charset" @kind object;
  #L284176.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L28417c.  v0:= temp;
  #L28417e.  if v0 != 0 then goto L284184;
  #L284182.  goto L2841ee;
  #L284184.  call temp:= `group`(v6, v4) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L28418a.  v0:= temp @kind object;
  #L28418c.  if v0 == 0 then goto L2841d0;
  #L284190.  v8:= "'" @kind object;
  #L284194.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28419a.  v8:= temp;
  #L28419c.  if v8 == 0 then goto L2841da;
  #L2841a0.  v8:= "'" @kind object;
  #L2841a4.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2841aa.  v8:= temp;
  #L2841ac.  if v8 == 0 then goto L2841da;
  #L2841b0.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2841b6.  v8:= temp;
  #L2841b8.  if v8 <= v4 then goto L2841da;
  #L2841bc.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2841c2.  v8:= temp;
  #L2841c4.  v8:= v8 - v1 @kind int;
  #L2841c6.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2841cc.  v0:= temp @kind object;
  #L2841ce.  goto L2841da;
  #L2841d0.  v0:= 3I;
  #L2841d2.  call temp:= `group`(v6, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2841d8.  v0:= temp @kind object;
  #L2841da.  if v7 == 0 then goto L2841ec;
  #L2841de.  call temp:= `equalsIgnoreCase`(v0, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2841e4.  v7:= temp;
  #L2841e6.  if v7 != 0 then goto L2841ec;
  #L2841ea.  return v2 @kind object;
  #L2841ec.  v7:= v0 @kind object;
  #L2841ee.  call temp:= `end`(v6) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L2841f4.  v0:= temp;
  #L2841f6.  goto L28413e;
  #L2841f8.  v0:= new `c.t`;
  #L2841fc.  call `<init>`(v0, v9, v3, v5, v7) @signature `Lc/t;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L284202.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2840a8.  v0:= instanceof @variable v2 @type ^`c.t` @kind boolean;
  #L2840ac.  if v0 == 0 then goto L2840cc;
  #L2840b0.  v2:= (`c.t`) v2 @kind object;
  #L2840b4.  v2:= v2.`c.t.c` @type ^`java.lang.String` @kind object;
  #L2840b8.  v0:= v1.`c.t.c` @type ^`java.lang.String` @kind object;
  #L2840bc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2840c2.  v2:= temp;
  #L2840c4.  if v2 == 0 then goto L2840cc;
  #L2840c8.  v2:= 1I;
  #L2840ca.  goto L2840ce;
  #L2840cc.  v2:= 0I;
  #L2840ce.  return v2;
}
procedure `int` `hashCode`(`c.t` v1 @kind this) @signature `Lc/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284214.  v0:= v1.`c.t.c` @type ^`java.lang.String` @kind object;
  #L284218.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L28421e.  v0:= temp;
  #L284220.  return v0;
}
procedure `java.lang.String` `toString`(`c.t` v1 @kind this) @signature `Lc/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L284234.  v0:= v1.`c.t.c` @type ^`java.lang.String` @kind object;
  #L284238.  return v0 @kind object;
}
