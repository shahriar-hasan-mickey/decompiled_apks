record `c.q` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String`[] `c.q.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`c.q` v1 @kind this, `c.q$a` v2 @kind object) @signature `Lc/q;.<init>:(Lc/q$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2826d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2826de.  v0:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2826e2.  v2:= v2.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L2826e6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2826ec.  v2:= temp;
  #L2826ee.  v2:= new `java.lang.String`[v2];
  #L2826f2.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2826f8.  v2:= temp @kind object;
  #L2826fa.  v2:= (`java.lang.String`[]) v2 @kind object;
  #L2826fe.  v1.`c.q.a` @type ^`java.lang.String`[] := v2 @kind object;
  #L282702.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L28259c.  v0:= length @variable v2;
  #L28259e.  v0:= v0 + -2;
  #L2825a2.  if v0 < 0 then goto L2825c6;
  #L2825a6.  v1:= v2[v0] @kind object;
  #L2825aa.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2825b0.  v1:= temp;
  #L2825b2.  if v1 == 0 then goto L2825c0;
  #L2825b6.  v0:= v0 + 1;
  #L2825ba.  v2:= v2[v0] @kind object;
  #L2825be.  return v2 @kind object;
  #L2825c0.  v0:= v0 + -2;
  #L2825c4.  goto L2825a2;
  #L2825c6.  v2:= 0I;
  #L2825c8.  return v2 @kind object;
}
procedure `int` `a`(`c.q` v1 @kind this) @signature `Lc/q;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L282520.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L282524.  v0:= length @variable v0;
  #L282526.  v0:= v0 / 2;
  #L28252a.  return v0;
}
procedure `java.lang.String` `a`(`c.q` v1 @kind this, `int` v2 ) @signature `Lc/q;.a:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28255c.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L282560.  v2:= v2 * 2;
  #L282564.  v2:= v0[v2] @kind object;
  #L282568.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`c.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/q;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28257c.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L282580.  call temp:= `a`(v0, v2) @signature `Lc/q;.a:([Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L282586.  v2:= temp @kind object;
  #L282588.  return v2 @kind object;
}
procedure `c.q$a` `b`(`c.q` v3 @kind this) @signature `Lc/q;.b:()Lc/q$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2824f4.  v0:= new `c.q$a`;
  #L2824f8.  call `<init>`(v0) @signature `Lc/q$a;.<init>:()V` @kind direct;
  #L2824fe.  v1:= v0.`c.q$a.a` @type ^`java.util.List` @kind object;
  #L282502.  v2:= v3.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L282506.  call temp:= `addAll`(v1, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L28250c.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`c.q` v1 @kind this, `int` v2 ) @signature `Lc/q;.b:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2825dc.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L2825e0.  v2:= v2 * 2;
  #L2825e4.  v2:= v2 + 1;
  #L2825e8.  v2:= v0[v2] @kind object;
  #L2825ec.  return v2 @kind object;
}
procedure `java.util.List` `b`(`c.q` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lc/q;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L282668.  call temp:= `a`(v4) @signature `Lc/q;.a:()I` @kind virtual;
  #L28266e.  v0:= temp;
  #L282670.  v1:= 0I;
  #L282672.  v2:= 0I;
  #L282674.  if v2 >= v0 then goto L2826b0;
  #L282678.  call temp:= `a`(v4, v2) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L28267e.  v3:= temp @kind object;
  #L282680.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282686.  v3:= temp;
  #L282688.  if v3 == 0 then goto L2826aa;
  #L28268c.  if v1 != 0 then goto L28269c;
  #L282690.  v1:= new `java.util.ArrayList`;
  #L282694.  v3:= 2I;
  #L282696.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L28269c.  call temp:= `b`(v4, v2) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L2826a2.  v3:= temp @kind object;
  #L2826a4.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2826aa.  v2:= v2 + 1;
  #L2826ae.  goto L282674;
  #L2826b0.  if v1 == 0 then goto L2826be;
  #L2826b4.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2826ba.  v5:= temp @kind object;
  #L2826bc.  goto L2826c6;
  #L2826be.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L2826c4.  v5:= temp @kind object;
  #L2826c6.  return v5 @kind object;
}
procedure `boolean` `equals`(`c.q` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lc/q;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2824bc.  v0:= instanceof @variable v2 @type ^`c.q` @kind boolean;
  #L2824c0.  if v0 == 0 then goto L2824e0;
  #L2824c4.  v2:= (`c.q`) v2 @kind object;
  #L2824c8.  v2:= v2.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L2824cc.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L2824d0.  call temp:= `equals`(v2, v0) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L2824d6.  v2:= temp;
  #L2824d8.  if v2 == 0 then goto L2824e0;
  #L2824dc.  v2:= 1I;
  #L2824de.  goto L2824e2;
  #L2824e0.  v2:= 0I;
  #L2824e2.  return v2;
}
procedure `int` `hashCode`(`c.q` v1 @kind this) @signature `Lc/q;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28253c.  v0:= v1.`c.q.a` @type ^`java.lang.String`[] @kind object;
  #L282540.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L282546.  v0:= temp;
  #L282548.  return v0;
}
procedure `java.lang.String` `toString`(`c.q` v4 @kind this) @signature `Lc/q;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L282600.  v0:= new `java.lang.StringBuilder`;
  #L282604.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28260a.  call temp:= `a`(v4) @signature `Lc/q;.a:()I` @kind virtual;
  #L282610.  v1:= temp;
  #L282612.  v2:= 0I;
  #L282614.  if v2 >= v1 then goto L28264e;
  #L282618.  call temp:= `a`(v4, v2) @signature `Lc/q;.a:(I)Ljava/lang/String;` @kind virtual;
  #L28261e.  v3:= temp @kind object;
  #L282620.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282626.  v3:= ": " @kind object;
  #L28262a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282630.  call temp:= `b`(v4, v2) @signature `Lc/q;.b:(I)Ljava/lang/String;` @kind virtual;
  #L282636.  v3:= temp @kind object;
  #L282638.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28263e.  v3:= "\n" @kind object;
  #L282642.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282648.  v2:= v2 + 1;
  #L28264c.  goto L282614;
  #L28264e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L282654.  v0:= temp @kind object;
  #L282656.  return v0 @kind object;
}
