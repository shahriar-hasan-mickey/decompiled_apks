record `c.r$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.r$a.a` @AccessFlag ;
  `java.lang.String` `c.r$a.b` @AccessFlag ;
  `java.lang.String` `c.r$a.c` @AccessFlag ;
  `java.lang.String` `c.r$a.d` @AccessFlag ;
  `int` `c.r$a.e` @AccessFlag ;
  `java.util.List` `c.r$a.f` @AccessFlag FINAL;
  `java.util.List` `c.r$a.g` @AccessFlag ;
  `java.lang.String` `c.r$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`c.r$a` v2 @kind this) @signature `Lc/r$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L283298.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28329e.  v0:= "" @kind object;
  #L2832a2.  v2.`c.r$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L2832a6.  v0:= "" @kind object;
  #L2832aa.  v2.`c.r$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L2832ae.  v0:= -1I;
  #L2832b0.  v2.`c.r$a.e` @type ^`int` := v0;
  #L2832b4.  v0:= new `java.util.ArrayList`;
  #L2832b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2832be.  v2.`c.r$a.f` @type ^`java.util.List` := v0 @kind object;
  #L2832c2.  v0:= v2.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2832c6.  v1:= "" @kind object;
  #L2832ca.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2832d0.  return @kind void;
}
procedure `void` `a`(`c.r$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lc/r$a;.a:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2832e4.  if v11 != v12 then goto L2832ea;
  #L2832e8.  return @kind void;
  #L2832ea.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2832f0.  v0:= temp;
  #L2832f2.  v1:= 47I;
  #L2832f6.  v2:= 1I;
  #L2832f8.  if v0 == v1 then goto L283324;
  #L2832fc.  v1:= 92I;
  #L283300.  if v0 != v1 then goto L283306;
  #L283304.  goto L283324;
  #L283306.  v0:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28330a.  v1:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28330e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L283314.  v1:= temp;
  #L283316.  v1:= v1 - v2 @kind int;
  #L283318.  v3:= "" @kind object;
  #L28331c.  call temp:= `set`(v0, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L283322.  goto L283340;
  #L283324.  v0:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283328.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L28332e.  v0:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283332.  v1:= "" @kind object;
  #L283336.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28333c.  v11:= v11 + 1;
  #L283340.  v5:= v11;
  #L283342.  if v5 >= v12 then goto L283376;
  #L283346.  v11:= "/\\" @kind object;
  #L28334a.  call temp:= `a`(v10, v5, v12, v11) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L283350.  v11:= temp;
  #L283352.  if v11 >= v12 then goto L28335a;
  #L283356.  v0:= 1I;
  #L283358.  goto L28335c;
  #L28335a.  v0:= 0I;
  #L28335c.  v8:= 1I;
  #L28335e.  v3:= v9 @kind object;
  #L283360.  v4:= v10 @kind object;
  #L283362.  v6:= v11;
  #L283364.  v7:= v0;
  #L283366.  call `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/r$a;.a:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L28336c.  if v0 == 0 then goto L283340;
  #L283370.  v11:= v11 + 1;
  #L283374.  goto L283340;
  #L283376.  return @kind void;
}
procedure `void` `a`(`c.r$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lc/r$a;.a:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L283388.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L28338c.  v5:= 0I;
  #L28338e.  v6:= 0I;
  #L283390.  v7:= 1I;
  #L283392.  v8:= 0I;
  #L283394.  v0:= v10 @kind object;
  #L283396.  v1:= v11;
  #L283398.  v2:= v12;
  #L28339a.  v4:= v14;
  #L28339c.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L2833a2.  v10:= temp @kind object;
  #L2833a4.  call temp:= `f`(v9, v10) @signature `Lc/r$a;.f:(Ljava/lang/String;)Z` @kind direct;
  #L2833aa.  v11:= temp;
  #L2833ac.  if v11 == 0 then goto L2833b2;
  #L2833b0.  return @kind void;
  #L2833b2.  call temp:= `g`(v9, v10) @signature `Lc/r$a;.g:(Ljava/lang/String;)Z` @kind direct;
  #L2833b8.  v11:= temp;
  #L2833ba.  if v11 == 0 then goto L2833c6;
  #L2833be.  call `d`(v9) @signature `Lc/r$a;.d:()V` @kind direct;
  #L2833c4.  return @kind void;
  #L2833c6.  v11:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2833ca.  v12:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2833ce.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2833d4.  v12:= temp;
  #L2833d6.  v12:= v12 + -1;
  #L2833da.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2833e0.  v11:= temp @kind object;
  #L2833e2.  v11:= (`java.lang.String`) v11 @kind object;
  #L2833e6.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2833ec.  v11:= temp;
  #L2833ee.  if v11 == 0 then goto L28340e;
  #L2833f2.  v11:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2833f6.  v12:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2833fa.  call temp:= `size`(v12) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L283400.  v12:= temp;
  #L283402.  v12:= v12 + -1;
  #L283406.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L28340c.  goto L283418;
  #L28340e.  v11:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283412.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L283418.  if v13 == 0 then goto L28342a;
  #L28341c.  v10:= v9.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283420.  v11:= "" @kind object;
  #L283424.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28342a.  return @kind void;
}
procedure `int` `b`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lc/r$a;.b:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L282fb4.  v0:= v9 - v8 @kind int;
  #L282fb8.  v1:= -1I;
  #L282fba.  v2:= 2I;
  #L282fbc.  if v0 >= v2 then goto L282fc2;
  #L282fc0.  return v1;
  #L282fc2.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282fc8.  v0:= temp;
  #L282fca.  v2:= 90I;
  #L282fce.  v3:= 65I;
  #L282fd2.  v4:= 122I;
  #L282fd6.  v5:= 97I;
  #L282fda.  if v0 < v5 then goto L282fe2;
  #L282fde.  if v0 <= v4 then goto L282fec;
  #L282fe2.  if v0 < v3 then goto L283044;
  #L282fe6.  if v0 <= v2 then goto L282fec;
  #L282fea.  goto L283044;
  #L282fec.  v8:= v8 + 1;
  #L282ff0.  if v8 >= v9 then goto L283042;
  #L282ff4.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282ffa.  v0:= temp;
  #L282ffc.  if v0 < v5 then goto L283004;
  #L283000.  if v0 <= v4 then goto L282fec;
  #L283004.  if v0 < v3 then goto L28300c;
  #L283008.  if v0 <= v2 then goto L282fec;
  #L28300c.  v6:= 48I;
  #L283010.  if v0 < v6 then goto L28301c;
  #L283014.  v6:= 57I;
  #L283018.  if v0 <= v6 then goto L282fec;
  #L28301c.  v6:= 43I;
  #L283020.  if v0 == v6 then goto L282fec;
  #L283024.  v6:= 45I;
  #L283028.  if v0 == v6 then goto L282fec;
  #L28302c.  v6:= 46I;
  #L283030.  if v0 != v6 then goto L283036;
  #L283034.  goto L282fec;
  #L283036.  v7:= 58I;
  #L28303a.  if v0 != v7 then goto L283040;
  #L28303e.  return v8;
  #L283040.  return v1;
  #L283042.  return v1;
  #L283044.  return v1;
}
procedure `int` `c`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lc/r$a;.c:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L283058.  v0:= 0I;
  #L28305a.  if v4 >= v5 then goto L283080;
  #L28305e.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L283064.  v1:= temp;
  #L283066.  v2:= 92I;
  #L28306a.  if v1 == v2 then goto L283076;
  #L28306e.  v2:= 47I;
  #L283072.  if v1 != v2 then goto L283080;
  #L283076.  v0:= v0 + 1;
  #L28307a.  v4:= v4 + 1;
  #L28307e.  goto L28305a;
  #L283080.  return v0;
}
procedure `int` `d`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lc/r$a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L283094.  if v3 >= v4 then goto L2830d2;
  #L283098.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L28309e.  v0:= temp;
  #L2830a0.  v1:= 58I;
  #L2830a4.  if v0 == v1 then goto L2830d0;
  #L2830a8.  v1:= 91I;
  #L2830ac.  if v0 == v1 then goto L2830b2;
  #L2830b0.  goto L2830ca;
  #L2830b2.  v3:= v3 + 1;
  #L2830b6.  if v3 >= v4 then goto L2830ca;
  #L2830ba.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2830c0.  v0:= temp;
  #L2830c2.  v1:= 93I;
  #L2830c6.  if v0 != v1 then goto L2830b2;
  #L2830ca.  v3:= v3 + 1;
  #L2830ce.  goto L283094;
  #L2830d0.  return v3;
  #L2830d2.  return v4;
}
procedure `void` `d`(`c.r$a` v3 @kind this) @signature `Lc/r$a;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L28343c.  v0:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283440.  v1:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283444.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L28344a.  v1:= temp;
  #L28344c.  v1:= v1 + -1;
  #L283450.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L283456.  v0:= temp @kind object;
  #L283458.  v0:= (`java.lang.String`) v0 @kind object;
  #L28345c.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L283462.  v0:= temp;
  #L283464.  if v0 == 0 then goto L283498;
  #L283468.  v0:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28346c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L283472.  v0:= temp;
  #L283474.  if v0 != 0 then goto L283498;
  #L283478.  v0:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28347c.  v1:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L283480.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L283486.  v1:= temp;
  #L283488.  v1:= v1 + -1;
  #L28348c.  v2:= "" @kind object;
  #L283490.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L283496.  goto L2834a6;
  #L283498.  v0:= v3.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28349c.  v1:= "" @kind object;
  #L2834a0.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2834a6.  return @kind void;
}
procedure `java.lang.String` `e`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lc/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L283140.  v0:= 0I;
  #L283142.  call temp:= `a`(v1, v2, v3, v0) @signature `Lc/r;.a:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L283148.  v1:= temp @kind object;
  #L28314a.  call temp:= `a`(v1) @signature `Lc/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L283150.  v1:= temp @kind object;
  #L283152.  return v1 @kind object;
}
procedure `int` `f`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lc/r$a;.f:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2830e4.  v0:= -1I;
  #L2830e6.  v4:= "" @kind object;
  #L2830ea.  v5:= 0I;
  #L2830ec.  v6:= 0I;
  #L2830ee.  v7:= 0I;
  #L2830f0.  v8:= 1I;
  #L2830f2.  v9:= 0I;
  #L2830f4.  v1:= v10 @kind object;
  #L2830f6.  v2:= v11;
  #L2830f8.  v3:= v12;
  #L2830fa.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L283100.  v10:= temp @kind object;
  #L283102.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L283108.  v10:= temp;
  #L28310a.  if v10 <= 0 then goto L28311a;
  #L28310e.  v11:= 65535I;
  #L283114.  if v10 > v11 then goto L28311a;
  #L283118.  return v10;
  #L28311a.  return v0;
  #L28311c.  return v0;
  catch `java.lang.NumberFormatException` @[L2830e6..L28310a] goto L28311c;
}
procedure `boolean` `f`(`c.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/r$a;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28281c.  v0:= "." @kind object;
  #L282820.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L282826.  v0:= temp;
  #L282828.  if v0 != 0 then goto L282842;
  #L28282c.  v0:= "%2e" @kind object;
  #L282830.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282836.  v2:= temp;
  #L282838.  if v2 == 0 then goto L28283e;
  #L28283c.  goto L282842;
  #L28283e.  v2:= 0I;
  #L282840.  goto L282844;
  #L282842.  v2:= 1I;
  #L282844.  return v2;
}
procedure `boolean` `g`(`c.r$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lc/r$a;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L282858.  v0:= ".." @kind object;
  #L28285c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L282862.  v0:= temp;
  #L282864.  if v0 != 0 then goto L28289e;
  #L282868.  v0:= "%2e." @kind object;
  #L28286c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282872.  v0:= temp;
  #L282874.  if v0 != 0 then goto L28289e;
  #L282878.  v0:= ".%2e" @kind object;
  #L28287c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282882.  v0:= temp;
  #L282884.  if v0 != 0 then goto L28289e;
  #L282888.  v0:= "%2e%2e" @kind object;
  #L28288c.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282892.  v2:= temp;
  #L282894.  if v2 == 0 then goto L28289a;
  #L282898.  goto L28289e;
  #L28289a.  v2:= 0I;
  #L28289c.  goto L2828a0;
  #L28289e.  v2:= 1I;
  #L2828a0.  return v2;
}
procedure `int` `a`(`c.r$a` v2 @kind this) @signature `Lc/r$a;.a:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L282f84.  v0:= v2.`c.r$a.e` @type ^`int`;
  #L282f88.  v1:= -1I;
  #L282f8a.  if v0 == v1 then goto L282f94;
  #L282f8e.  v0:= v2.`c.r$a.e` @type ^`int`;
  #L282f92.  goto L282fa0;
  #L282f94.  v0:= v2.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L282f98.  call temp:= `a`(v0) @signature `Lc/r;.a:(Ljava/lang/String;)I` @kind static;
  #L282f9e.  v0:= temp;
  #L282fa0.  return v0;
}
procedure `c.r$a$a` `a`(`c.r$a` v20 @kind this, `c.r` v21 @kind object, `java.lang.String` v22 @kind object) @signature `Lc/r$a;.a:(Lc/r;Ljava/lang/String;)Lc/r$a$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L282bdc.  v0:= v20 @kind object;
  #L282be0.  v1:= v21 @kind object;
  #L282be4.  v10:= v22 @kind object;
  #L282be8.  call temp:= `length`(v22) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282bee.  v2:= temp;
  #L282bf0.  v8:= 0I;
  #L282bf2.  call temp:= `a`(v10, v8, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;II)I` @kind static;
  #L282bf8.  v9:= temp;
  #L282bfa.  call temp:= `length`(v22) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282c00.  v2:= temp;
  #L282c02.  call temp:= `b`(v10, v9, v2) @signature `Lc/a/c;.b:(Ljava/lang/String;II)I` @kind static;
  #L282c08.  v11:= temp;
  #L282c0a.  call temp:= `b`(v10, v9, v11) @signature `Lc/r$a;.b:(Ljava/lang/String;II)I` @kind static;
  #L282c10.  v2:= temp;
  #L282c12.  v12:= -1I;
  #L282c14.  if v2 == v12 then goto L282c82;
  #L282c18.  v3:= 1I;
  #L282c1a.  v5:= "https:" @kind object;
  #L282c1e.  v6:= 0I;
  #L282c20.  v7:= 6I;
  #L282c22.  v2:= v10 @kind object;
  #L282c24.  v4:= v9;
  #L282c26.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L282c2c.  v2:= temp;
  #L282c2e.  if v2 == 0 then goto L282c4a;
  #L282c32.  v2:= "https" @kind object;
  #L282c36.  v0.`c.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L282c3a.  v2:= "https:" @kind object;
  #L282c3e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282c44.  v2:= temp;
  #L282c46.  v9:= v9 + v2 @kind int;
  #L282c48.  goto L282c8e;
  #L282c4a.  v3:= 1I;
  #L282c4c.  v5:= "http:" @kind object;
  #L282c50.  v6:= 0I;
  #L282c52.  v7:= 5I;
  #L282c54.  v2:= v10 @kind object;
  #L282c56.  v4:= v9;
  #L282c58.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L282c5e.  v2:= temp;
  #L282c60.  if v2 == 0 then goto L282c7c;
  #L282c64.  v2:= "http" @kind object;
  #L282c68.  v0.`c.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L282c6c.  v2:= "http:" @kind object;
  #L282c70.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282c76.  v2:= temp;
  #L282c78.  v9:= v9 + v2 @kind int;
  #L282c7a.  goto L282c8e;
  #L282c7c.  v1:= `@@c.r$a$a.c` @type ^`c.r$a$a` @kind object;
  #L282c80.  return v1 @kind object;
  #L282c82.  if v1 == 0 then goto L282f5e;
  #L282c86.  v2:= v1.`c.r.a` @type ^`java.lang.String` @kind object;
  #L282c8a.  v0.`c.r$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L282c8e.  call temp:= `c`(v10, v9, v11) @signature `Lc/r$a;.c:(Ljava/lang/String;II)I` @kind static;
  #L282c94.  v2:= temp;
  #L282c96.  v3:= 2I;
  #L282c98.  v13:= 35I;
  #L282c9c.  if v2 >= v3 then goto L282d22;
  #L282ca0.  if v1 == 0 then goto L282d22;
  #L282ca4.  v3:= v1.`c.r.a` @type ^`java.lang.String` @kind object;
  #L282ca8.  v4:= v0.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L282cac.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L282cb2.  v3:= temp;
  #L282cb4.  if v3 != 0 then goto L282cba;
  #L282cb8.  goto L282d22;
  #L282cba.  call temp:= `d`(v21) @signature `Lc/r;.d:()Ljava/lang/String;` @kind virtual;
  #L282cc0.  v2:= temp @kind object;
  #L282cc2.  v0.`c.r$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L282cc6.  call temp:= `e`(v21) @signature `Lc/r;.e:()Ljava/lang/String;` @kind virtual;
  #L282ccc.  v2:= temp @kind object;
  #L282cce.  v0.`c.r$a.c` @type ^`java.lang.String` := v2 @kind object;
  #L282cd2.  v2:= v1.`c.r.b` @type ^`java.lang.String` @kind object;
  #L282cd6.  v0.`c.r$a.d` @type ^`java.lang.String` := v2 @kind object;
  #L282cda.  v2:= v1.`c.r.c` @type ^`int`;
  #L282cde.  v0.`c.r$a.e` @type ^`int` := v2;
  #L282ce2.  v2:= v0.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L282ce6.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L282cec.  v2:= v0.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L282cf0.  call temp:= `i`(v21) @signature `Lc/r;.i:()Ljava/util/List;` @kind virtual;
  #L282cf6.  v3:= temp @kind object;
  #L282cf8.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L282cfe.  if v9 == v11 then goto L282d0e;
  #L282d02.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282d08.  v2:= temp;
  #L282d0a.  if v2 != v13 then goto L282d1c;
  #L282d0e.  call temp:= `j`(v21) @signature `Lc/r;.j:()Ljava/lang/String;` @kind virtual;
  #L282d14.  v1:= temp @kind object;
  #L282d16.  call temp:= `e`(v0, v1) @signature `Lc/r$a;.e:(Ljava/lang/String;)Lc/r$a;` @kind virtual;
  #L282d1c.  v13:= v9;
  #L282d1e.  goto L282ec0;
  #L282d22.  v9:= v9 + v2 @kind int;
  #L282d24.  v2:= v9;
  #L282d26.  v15:= 0I;
  #L282d28.  v16:= 0I;
  #L282d2c.  v1:= "@/\\?#" @kind object;
  #L282d30.  call temp:= `a`(v10, v2, v11, v1) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L282d36.  v9:= temp;
  #L282d38.  if v9 == v11 then goto L282d46;
  #L282d3c.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282d42.  v1:= temp;
  #L282d44.  goto L282d48;
  #L282d46.  v1:= -1I;
  #L282d48.  if v1 == v12 then goto L282e5e;
  #L282d4c.  if v1 == v13 then goto L282e5e;
  #L282d50.  v3:= 47I;
  #L282d54.  if v1 == v3 then goto L282e5e;
  #L282d58.  v3:= 92I;
  #L282d5c.  if v1 == v3 then goto L282e5e;
  #L282d60.  goto L282f64;
  #L282d66.  goto L282e56;
  #L282d6a.  if v15 != 0 then goto L282e06;
  #L282d6e.  v1:= 58I;
  #L282d72.  call temp:= `a`(v10, v2, v9, v1) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L282d78.  v8:= temp;
  #L282d7a.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L282d7e.  v5:= 1I;
  #L282d80.  v6:= 0I;
  #L282d82.  v7:= 0I;
  #L282d84.  v17:= 1I;
  #L282d88.  v18:= 0I;
  #L282d8c.  v1:= v10 @kind object;
  #L282d8e.  v3:= v8;
  #L282d90.  v14:= v8;
  #L282d92.  v8:= v17;
  #L282d96.  v13:= v9;
  #L282d98.  v9:= v18 @kind object;
  #L282d9c.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L282da2.  v1:= temp @kind object;
  #L282da4.  if v16 == 0 then goto L282dd4;
  #L282da8.  v2:= new `java.lang.StringBuilder`;
  #L282dac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L282db2.  v3:= v0.`c.r$a.b` @type ^`java.lang.String` @kind object;
  #L282db6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282dbc.  v3:= "%40" @kind object;
  #L282dc0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282dc6.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282dcc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L282dd2.  v1:= temp @kind object;
  #L282dd4.  v0.`c.r$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L282dd8.  if v14 == v13 then goto L282e00;
  #L282ddc.  v2:= v14 + 1;
  #L282de0.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L282de4.  v5:= 1I;
  #L282de6.  v6:= 0I;
  #L282de8.  v7:= 0I;
  #L282dea.  v8:= 1I;
  #L282dec.  v9:= 0I;
  #L282dee.  v1:= v10 @kind object;
  #L282df0.  v3:= v13;
  #L282df2.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L282df8.  v1:= temp @kind object;
  #L282dfa.  v0.`c.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L282dfe.  v15:= 1I;
  #L282e00.  v16:= 1I;
  #L282e04.  goto L282e52;
  #L282e06.  v13:= v9;
  #L282e08.  v14:= new `java.lang.StringBuilder`;
  #L282e0c.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L282e12.  v1:= v0.`c.r$a.c` @type ^`java.lang.String` @kind object;
  #L282e16.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282e1c.  v1:= "%40" @kind object;
  #L282e20.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282e26.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L282e2a.  v5:= 1I;
  #L282e2c.  v6:= 0I;
  #L282e2e.  v7:= 0I;
  #L282e30.  v8:= 1I;
  #L282e32.  v9:= 0I;
  #L282e34.  v1:= v10 @kind object;
  #L282e36.  v3:= v13;
  #L282e38.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L282e3e.  v1:= temp @kind object;
  #L282e40.  call temp:= `append`(v14, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282e46.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L282e4c.  v1:= temp @kind object;
  #L282e4e.  v0.`c.r$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L282e52.  v2:= v13 + 1;
  #L282e56.  v13:= 35I;
  #L282e5a.  goto L282d2c;
  #L282e5e.  v13:= v9;
  #L282e60.  call temp:= `d`(v10, v2, v13) @signature `Lc/r$a;.d:(Ljava/lang/String;II)I` @kind static;
  #L282e66.  v1:= temp;
  #L282e68.  v3:= v1 + 1;
  #L282e6c.  if v3 >= v13 then goto L282e96;
  #L282e70.  call temp:= `e`(v10, v2, v1) @signature `Lc/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L282e76.  v1:= temp @kind object;
  #L282e78.  v0.`c.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L282e7c.  call temp:= `f`(v10, v3, v13) @signature `Lc/r$a;.f:(Ljava/lang/String;II)I` @kind static;
  #L282e82.  v1:= temp;
  #L282e84.  v0.`c.r$a.e` @type ^`int` := v1;
  #L282e88.  v1:= v0.`c.r$a.e` @type ^`int`;
  #L282e8c.  if v1 != v12 then goto L282eb2;
  #L282e90.  v1:= `@@c.r$a$a.d` @type ^`c.r$a$a` @kind object;
  #L282e94.  return v1 @kind object;
  #L282e96.  call temp:= `e`(v10, v2, v1) @signature `Lc/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L282e9c.  v1:= temp @kind object;
  #L282e9e.  v0.`c.r$a.d` @type ^`java.lang.String` := v1 @kind object;
  #L282ea2.  v1:= v0.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L282ea6.  call temp:= `a`(v1) @signature `Lc/r;.a:(Ljava/lang/String;)I` @kind static;
  #L282eac.  v1:= temp;
  #L282eae.  v0.`c.r$a.e` @type ^`int` := v1;
  #L282eb2.  v1:= v0.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L282eb6.  if v1 != 0 then goto L282ec0;
  #L282eba.  v1:= `@@c.r$a$a.e` @type ^`c.r$a$a` @kind object;
  #L282ebe.  return v1 @kind object;
  #L282ec0.  v1:= "?#" @kind object;
  #L282ec4.  call temp:= `a`(v10, v13, v11, v1) @signature `Lc/a/c;.a:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L282eca.  v1:= temp;
  #L282ecc.  call `a`(v0, v10, v13, v1) @signature `Lc/r$a;.a:(Ljava/lang/String;II)V` @kind direct;
  #L282ed2.  if v1 >= v11 then goto L282f1e;
  #L282ed6.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282edc.  v2:= temp;
  #L282ede.  v3:= 63I;
  #L282ee2.  if v2 != v3 then goto L282f1e;
  #L282ee6.  v2:= 35I;
  #L282eea.  call temp:= `a`(v10, v1, v11, v2) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L282ef0.  v12:= temp;
  #L282ef2.  v2:= v1 + 1;
  #L282ef6.  v4:= " \"'<>#" @kind object;
  #L282efa.  v5:= 1I;
  #L282efc.  v6:= 0I;
  #L282efe.  v7:= 1I;
  #L282f00.  v8:= 1I;
  #L282f02.  v9:= 0I;
  #L282f04.  v1:= v10 @kind object;
  #L282f06.  v3:= v12;
  #L282f08.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L282f0e.  v1:= temp @kind object;
  #L282f10.  call temp:= `b`(v1) @signature `Lc/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L282f16.  v1:= temp @kind object;
  #L282f18.  v0.`c.r$a.g` @type ^`java.util.List` := v1 @kind object;
  #L282f1c.  goto L282f20;
  #L282f1e.  v12:= v1;
  #L282f20.  if v12 >= v11 then goto L282f58;
  #L282f24.  call temp:= `charAt`(v10, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L282f2a.  v1:= temp;
  #L282f2c.  v2:= 35I;
  #L282f30.  if v1 != v2 then goto L282f58;
  #L282f34.  v1:= 1I;
  #L282f36.  v2:= v12 + 1;
  #L282f3a.  v4:= "" @kind object;
  #L282f3e.  v5:= 1I;
  #L282f40.  v6:= 0I;
  #L282f42.  v7:= 0I;
  #L282f44.  v8:= 0I;
  #L282f46.  v9:= 0I;
  #L282f48.  v1:= v10 @kind object;
  #L282f4a.  v3:= v11;
  #L282f4c.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L282f52.  v1:= temp @kind object;
  #L282f54.  v0.`c.r$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L282f58.  v1:= `@@c.r$a$a.a` @type ^`c.r$a$a` @kind object;
  #L282f5c.  return v1 @kind object;
  #L282f5e.  v1:= `@@c.r$a$a.b` @type ^`c.r$a$a` @kind object;
  #L282f62.  return v1 @kind object;
  #L282f64.  switch v1
                  | 63 => goto L282e5e
                  | 64 => goto L282d6a
                  | else => goto L282d66;
}
procedure `c.r$a` `a`(`c.r$a` v3 @kind this, `int` v4 ) @signature `Lc/r$a;.a:(I)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282900.  if v4 <= 0 then goto L282916;
  #L282904.  v0:= 65535I;
  #L28290a.  if v4 <= v0 then goto L282910;
  #L28290e.  goto L282916;
  #L282910.  v3.`c.r$a.e` @type ^`int` := v4;
  #L282914.  return v3 @kind object;
  #L282916.  v0:= new `java.lang.IllegalArgumentException`;
  #L28291a.  v1:= new `java.lang.StringBuilder`;
  #L28291e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L282924.  v2:= "unexpected port: " @kind object;
  #L282928.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28292e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L282934.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28293a.  v4:= temp @kind object;
  #L28293c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282942.  throw v0;
}
procedure `c.r$a` `a`(`c.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lc/r$a;.a:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282954.  if v4 != 0 then goto L282968;
  #L282958.  v4:= new `java.lang.NullPointerException`;
  #L28295c.  v0:= "scheme == null" @kind object;
  #L282960.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282966.  throw v4;
  #L282968.  v0:= "http" @kind object;
  #L28296c.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L282972.  v0:= temp;
  #L282974.  if v0 == 0 then goto L282982;
  #L282978.  v4:= "http" @kind object;
  #L28297c.  v3.`c.r$a.a` @type ^`java.lang.String` := v4 @kind object;
  #L282980.  goto L28299a;
  #L282982.  v0:= "https" @kind object;
  #L282986.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L28298c.  v0:= temp;
  #L28298e.  if v0 == 0 then goto L28299c;
  #L282992.  v4:= "https" @kind object;
  #L282996.  v3.`c.r$a.a` @type ^`java.lang.String` := v4 @kind object;
  #L28299a.  return v3 @kind object;
  #L28299c.  v0:= new `java.lang.IllegalArgumentException`;
  #L2829a0.  v1:= new `java.lang.StringBuilder`;
  #L2829a4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2829aa.  v2:= "unexpected scheme: " @kind object;
  #L2829ae.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2829b4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2829ba.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2829c0.  v4:= temp @kind object;
  #L2829c2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2829c8.  throw v0;
}
procedure `c.r$a` `b`(`c.r$a` v10 @kind this) @signature `Lc/r$a;.b:()Lc/r$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2829dc.  v0:= v10.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2829e0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2829e6.  v0:= temp;
  #L2829e8.  v1:= 0I;
  #L2829ea.  v2:= 0I;
  #L2829ec.  if v2 >= v0 then goto L282a26;
  #L2829f0.  v3:= v10.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L2829f4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2829fa.  v3:= temp @kind object;
  #L2829fc.  v4:= v3 @kind object;
  #L2829fe.  v4:= (`java.lang.String`) v4 @kind object;
  #L282a02.  v3:= v10.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L282a06.  v5:= "[]" @kind object;
  #L282a0a.  v6:= 1I;
  #L282a0c.  v7:= 1I;
  #L282a0e.  v8:= 0I;
  #L282a10.  v9:= 1I;
  #L282a12.  call temp:= `a`(v4, v5, v6, v7, v8, v9) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282a18.  v4:= temp @kind object;
  #L282a1a.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L282a20.  v2:= v2 + 1;
  #L282a24.  goto L2829ec;
  #L282a26.  v0:= v10.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L282a2a.  if v0 == 0 then goto L282a78;
  #L282a2e.  v0:= v10.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L282a32.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L282a38.  v0:= temp;
  #L282a3a.  if v1 >= v0 then goto L282a78;
  #L282a3e.  v2:= v10.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L282a42.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L282a48.  v2:= temp @kind object;
  #L282a4a.  v3:= v2 @kind object;
  #L282a4c.  v3:= (`java.lang.String`) v3 @kind object;
  #L282a50.  if v3 == 0 then goto L282a72;
  #L282a54.  v2:= v10.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L282a58.  v4:= "\\^`{|}" @kind object;
  #L282a5c.  v5:= 1I;
  #L282a5e.  v6:= 1I;
  #L282a60.  v7:= 1I;
  #L282a62.  v8:= 1I;
  #L282a64.  call temp:= `a`(v3, v4, v5, v6, v7, v8) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282a6a.  v3:= temp @kind object;
  #L282a6c.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L282a72.  v1:= v1 + 1;
  #L282a76.  goto L282a3a;
  #L282a78.  v0:= v10.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L282a7c.  if v0 == 0 then goto L282a9c;
  #L282a80.  v1:= v10.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L282a84.  v2:= " \"#<>\\^`{|}" @kind object;
  #L282a88.  v3:= 1I;
  #L282a8a.  v4:= 1I;
  #L282a8c.  v5:= 0I;
  #L282a8e.  v6:= 0I;
  #L282a90.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282a96.  v0:= temp @kind object;
  #L282a98.  v10.`c.r$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L282a9c.  return v10 @kind object;
}
procedure `c.r$a` `b`(`c.r$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lc/r$a;.b:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L282ab0.  if v8 != 0 then goto L282ac4;
  #L282ab4.  v8:= new `java.lang.NullPointerException`;
  #L282ab8.  v0:= "username == null" @kind object;
  #L282abc.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282ac2.  throw v8;
  #L282ac4.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L282ac8.  v3:= 0I;
  #L282aca.  v4:= 0I;
  #L282acc.  v5:= 0I;
  #L282ace.  v6:= 1I;
  #L282ad0.  v1:= v8 @kind object;
  #L282ad2.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282ad8.  v8:= temp @kind object;
  #L282ada.  v7.`c.r$a.b` @type ^`java.lang.String` := v8 @kind object;
  #L282ade.  return v7 @kind object;
}
procedure `c.r$a` `c`(`c.r$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lc/r$a;.c:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L282af0.  if v8 != 0 then goto L282b04;
  #L282af4.  v8:= new `java.lang.NullPointerException`;
  #L282af8.  v0:= "password == null" @kind object;
  #L282afc.  call `<init>`(v8, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282b02.  throw v8;
  #L282b04.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L282b08.  v3:= 0I;
  #L282b0a.  v4:= 0I;
  #L282b0c.  v5:= 0I;
  #L282b0e.  v6:= 1I;
  #L282b10.  v1:= v8 @kind object;
  #L282b12.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282b18.  v8:= temp @kind object;
  #L282b1a.  v7.`c.r$a.c` @type ^`java.lang.String` := v8 @kind object;
  #L282b1e.  return v7 @kind object;
}
procedure `c.r` `c`(`c.r$a` v2 @kind this) @signature `Lc/r$a;.c:()Lc/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2828b4.  v0:= v2.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L2828b8.  if v0 != 0 then goto L2828cc;
  #L2828bc.  v0:= new `java.lang.IllegalStateException`;
  #L2828c0.  v1:= "scheme == null" @kind object;
  #L2828c4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2828ca.  throw v0;
  #L2828cc.  v0:= v2.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L2828d0.  if v0 != 0 then goto L2828e4;
  #L2828d4.  v0:= new `java.lang.IllegalStateException`;
  #L2828d8.  v1:= "host == null" @kind object;
  #L2828dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2828e2.  throw v0;
  #L2828e4.  v0:= new `c.r`;
  #L2828e8.  call `<init>`(v0, v2) @signature `Lc/r;.<init>:(Lc/r$a;)V` @kind direct;
  #L2828ee.  return v0 @kind object;
}
procedure `c.r$a` `d`(`c.r$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lc/r$a;.d:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L282b30.  if v4 != 0 then goto L282b44;
  #L282b34.  v4:= new `java.lang.NullPointerException`;
  #L282b38.  v0:= "host == null" @kind object;
  #L282b3c.  call `<init>`(v4, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282b42.  throw v4;
  #L282b44.  v0:= 0I;
  #L282b46.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L282b4c.  v1:= temp;
  #L282b4e.  call temp:= `e`(v4, v0, v1) @signature `Lc/r$a;.e:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L282b54.  v0:= temp @kind object;
  #L282b56.  if v0 != 0 then goto L282b88;
  #L282b5a.  v0:= new `java.lang.IllegalArgumentException`;
  #L282b5e.  v1:= new `java.lang.StringBuilder`;
  #L282b62.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L282b68.  v2:= "unexpected host: " @kind object;
  #L282b6c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282b72.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L282b78.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L282b7e.  v4:= temp @kind object;
  #L282b80.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L282b86.  throw v0;
  #L282b88.  v3.`c.r$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L282b8c.  return v3 @kind object;
}
procedure `c.r$a` `e`(`c.r$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lc/r$a;.e:(Ljava/lang/String;)Lc/r$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L282ba0.  if v7 == 0 then goto L282bc4;
  #L282ba4.  v1:= " \"'<>#" @kind object;
  #L282ba8.  v2:= 1I;
  #L282baa.  v3:= 0I;
  #L282bac.  v4:= 1I;
  #L282bae.  v5:= 1I;
  #L282bb0.  v0:= v7 @kind object;
  #L282bb2.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lc/r;.a:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L282bb8.  v7:= temp @kind object;
  #L282bba.  call temp:= `b`(v7) @signature `Lc/r;.b:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L282bc0.  v7:= temp @kind object;
  #L282bc2.  goto L282bc6;
  #L282bc4.  v7:= 0I;
  #L282bc6.  v6.`c.r$a.g` @type ^`java.util.List` := v7 @kind object;
  #L282bca.  return v6 @kind object;
}
procedure `java.lang.String` `toString`(`c.r$a` v4 @kind this) @signature `Lc/r$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L283164.  v0:= new `java.lang.StringBuilder`;
  #L283168.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28316e.  v1:= v4.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L283172.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283178.  v1:= "://" @kind object;
  #L28317c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283182.  v1:= v4.`c.r$a.b` @type ^`java.lang.String` @kind object;
  #L283186.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L28318c.  v1:= temp;
  #L28318e.  v2:= 58I;
  #L283192.  if v1 == 0 then goto L2831a6;
  #L283196.  v1:= v4.`c.r$a.c` @type ^`java.lang.String` @kind object;
  #L28319a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2831a0.  v1:= temp;
  #L2831a2.  if v1 != 0 then goto L2831da;
  #L2831a6.  v1:= v4.`c.r$a.b` @type ^`java.lang.String` @kind object;
  #L2831aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2831b0.  v1:= v4.`c.r$a.c` @type ^`java.lang.String` @kind object;
  #L2831b4.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2831ba.  v1:= temp;
  #L2831bc.  if v1 != 0 then goto L2831d0;
  #L2831c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2831c6.  v1:= v4.`c.r$a.c` @type ^`java.lang.String` @kind object;
  #L2831ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2831d0.  v1:= 64I;
  #L2831d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2831da.  v1:= v4.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L2831de.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2831e4.  v1:= temp;
  #L2831e6.  v3:= -1I;
  #L2831e8.  if v1 == v3 then goto L28320c;
  #L2831ec.  v1:= 91I;
  #L2831f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2831f6.  v1:= v4.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L2831fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283200.  v1:= 93I;
  #L283204.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L28320a.  goto L283216;
  #L28320c.  v1:= v4.`c.r$a.d` @type ^`java.lang.String` @kind object;
  #L283210.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L283216.  call temp:= `a`(v4) @signature `Lc/r$a;.a:()I` @kind virtual;
  #L28321c.  v1:= temp;
  #L28321e.  v3:= v4.`c.r$a.a` @type ^`java.lang.String` @kind object;
  #L283222.  call temp:= `a`(v3) @signature `Lc/r;.a:(Ljava/lang/String;)I` @kind static;
  #L283228.  v3:= temp;
  #L28322a.  if v1 == v3 then goto L28323a;
  #L28322e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283234.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L28323a.  v1:= v4.`c.r$a.f` @type ^`java.util.List` @kind object;
  #L28323e.  call `a`(v0, v1) @signature `Lc/r;.a:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L283244.  v1:= v4.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L283248.  if v1 == 0 then goto L283260;
  #L28324c.  v1:= 63I;
  #L283250.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283256.  v1:= v4.`c.r$a.g` @type ^`java.util.List` @kind object;
  #L28325a.  call `b`(v0, v1) @signature `Lc/r;.b:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L283260.  v1:= v4.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L283264.  if v1 == 0 then goto L28327c;
  #L283268.  v1:= 35I;
  #L28326c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L283272.  v1:= v4.`c.r$a.h` @type ^`java.lang.String` @kind object;
  #L283276.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28327c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L283282.  v0:= temp @kind object;
  #L283284.  return v0 @kind object;
}
