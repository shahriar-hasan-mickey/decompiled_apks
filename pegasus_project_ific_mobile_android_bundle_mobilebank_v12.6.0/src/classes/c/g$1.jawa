record `c.g$1` @kind class @AccessFlag FINAL extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`c.g$1` v0 @kind this) @signature `Lc/g$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L27f694.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27f69a.  return @kind void;
}
procedure `int` `a`(`c.g$1` v6 @kind this, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lc/g$1;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L27f5f8.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27f5fe.  v0:= temp;
  #L27f600.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27f606.  v1:= temp;
  #L27f608.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L27f60e.  v0:= temp;
  #L27f610.  v1:= 4I;
  #L27f612.  v2:= -1I;
  #L27f614.  v3:= 1I;
  #L27f616.  if v1 >= v0 then goto L27f63e;
  #L27f61a.  call temp:= `charAt`(v7, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27f620.  v4:= temp;
  #L27f622.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L27f628.  v5:= temp;
  #L27f62a.  if v4 == v5 then goto L27f638;
  #L27f62e.  if v4 >= v5 then goto L27f634;
  #L27f632.  goto L27f636;
  #L27f634.  v2:= 1I;
  #L27f636.  return v2;
  #L27f638.  v1:= v1 + 1;
  #L27f63c.  goto L27f612;
  #L27f63e.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27f644.  v7:= temp;
  #L27f646.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L27f64c.  v8:= temp;
  #L27f64e.  if v7 == v8 then goto L27f65c;
  #L27f652.  if v7 >= v8 then goto L27f658;
  #L27f656.  goto L27f65a;
  #L27f658.  v2:= 1I;
  #L27f65a.  return v2;
  #L27f65c.  v7:= 0I;
  #L27f65e.  return v7;
}
procedure `int` `compare`(`c.g$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lc/g$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L27f670.  v1:= (`java.lang.String`) v1 @kind object;
  #L27f674.  v2:= (`java.lang.String`) v2 @kind object;
  #L27f678.  call temp:= `a`(v0, v1, v2) @signature `Lc/g$1;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L27f67e.  v1:= temp;
  #L27f680.  return v1;
}
