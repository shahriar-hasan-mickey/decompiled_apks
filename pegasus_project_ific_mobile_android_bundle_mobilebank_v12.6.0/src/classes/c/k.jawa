record `c.k` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `c.k.domain` @AccessFlag PRIVATE_FINAL;
  `long` `c.k.expiresAt` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.k.hostOnly` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.k.httpOnly` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.k.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.k.path` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.k.persistent` @AccessFlag PRIVATE_FINAL;
  `boolean` `c.k.secure` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `c.k.value` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@c.k.DAY_OF_MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@c.k.MONTH_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@c.k.TIME_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@c.k.YEAR_PATTERN` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L281878.  v0:= "(\\d{2,4})[^\\d]*" @kind object;
  #L28187c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L281882.  v0:= temp @kind object;
  #L281884.  `@@c.k.YEAR_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L281888.  v0:= "(?i)(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec).*" @kind object;
  #L28188c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L281892.  v0:= temp @kind object;
  #L281894.  `@@c.k.MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L281898.  v0:= "(\\d{1,2})[^\\d]*" @kind object;
  #L28189c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2818a2.  v0:= temp @kind object;
  #L2818a4.  `@@c.k.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2818a8.  v0:= "(\\d{1,2}):(\\d{1,2}):(\\d{1,2})[^\\d]*" @kind object;
  #L2818ac.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2818b2.  v0:= temp @kind object;
  #L2818b4.  `@@c.k.TIME_PATTERN` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2818b8.  return @kind void;
}
procedure `void` `<init>`(`c.k` v2 @kind this, `c.k$a` v3 @kind object) @signature `Lc/k;.<init>:(Lc/k$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2818cc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2818d2.  v0:= v3.`c.k$a.a` @type ^`java.lang.String` @kind object;
  #L2818d6.  if v0 != 0 then goto L2818ea;
  #L2818da.  v3:= new `java.lang.NullPointerException`;
  #L2818de.  v0:= "builder.name == null" @kind object;
  #L2818e2.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2818e8.  throw v3;
  #L2818ea.  v0:= v3.`c.k$a.b` @type ^`java.lang.String` @kind object;
  #L2818ee.  if v0 != 0 then goto L281902;
  #L2818f2.  v3:= new `java.lang.NullPointerException`;
  #L2818f6.  v0:= "builder.value == null" @kind object;
  #L2818fa.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L281900.  throw v3;
  #L281902.  v0:= v3.`c.k$a.d` @type ^`java.lang.String` @kind object;
  #L281906.  if v0 != 0 then goto L28191a;
  #L28190a.  v3:= new `java.lang.NullPointerException`;
  #L28190e.  v0:= "builder.domain == null" @kind object;
  #L281912.  call `<init>`(v3, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L281918.  throw v3;
  #L28191a.  v0:= v3.`c.k$a.a` @type ^`java.lang.String` @kind object;
  #L28191e.  v2.`c.k.name` @type ^`java.lang.String` := v0 @kind object;
  #L281922.  v0:= v3.`c.k$a.b` @type ^`java.lang.String` @kind object;
  #L281926.  v2.`c.k.value` @type ^`java.lang.String` := v0 @kind object;
  #L28192a.  v0:= v3.`c.k$a.c` @type ^`long` @kind wide;
  #L28192e.  v2.`c.k.expiresAt` @type ^`long` := v0 @kind wide;
  #L281932.  v0:= v3.`c.k$a.d` @type ^`java.lang.String` @kind object;
  #L281936.  v2.`c.k.domain` @type ^`java.lang.String` := v0 @kind object;
  #L28193a.  v0:= v3.`c.k$a.e` @type ^`java.lang.String` @kind object;
  #L28193e.  v2.`c.k.path` @type ^`java.lang.String` := v0 @kind object;
  #L281942.  v0:= v3.`c.k$a.f` @type ^`boolean` @kind boolean;
  #L281946.  v2.`c.k.secure` @type ^`boolean` := v0 @kind boolean;
  #L28194a.  v0:= v3.`c.k$a.g` @type ^`boolean` @kind boolean;
  #L28194e.  v2.`c.k.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L281952.  v0:= v3.`c.k$a.h` @type ^`boolean` @kind boolean;
  #L281956.  v2.`c.k.persistent` @type ^`boolean` := v0 @kind boolean;
  #L28195a.  v3:= v3.`c.k$a.i` @type ^`boolean` @kind boolean;
  #L28195e.  v2.`c.k.hostOnly` @type ^`boolean` := v3 @kind boolean;
  #L281962.  return @kind void;
}
procedure `void` `<init>`(`c.k` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `boolean` v7 , `boolean` v8 , `boolean` v9 , `boolean` v10 ) @signature `Lc/k;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L281974.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28197a.  v0.`c.k.name` @type ^`java.lang.String` := v1 @kind object;
  #L28197e.  v0.`c.k.value` @type ^`java.lang.String` := v2 @kind object;
  #L281982.  v0.`c.k.expiresAt` @type ^`long` := v3 @kind wide;
  #L281986.  v0.`c.k.domain` @type ^`java.lang.String` := v5 @kind object;
  #L28198a.  v0.`c.k.path` @type ^`java.lang.String` := v6 @kind object;
  #L28198e.  v0.`c.k.secure` @type ^`boolean` := v7 @kind boolean;
  #L281992.  v0.`c.k.httpOnly` @type ^`boolean` := v8 @kind boolean;
  #L281996.  v0.`c.k.hostOnly` @type ^`boolean` := v9 @kind boolean;
  #L28199a.  v0.`c.k.persistent` @type ^`boolean` := v10 @kind boolean;
  #L28199e.  return @kind void;
}
procedure `int` `dateCharacterOffset`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lc/k;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L281210.  if v4 >= v5 then goto L281286;
  #L281214.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L28121a.  v0:= temp;
  #L28121c.  v1:= 32I;
  #L281220.  v2:= 1I;
  #L281222.  if v0 >= v1 then goto L28122e;
  #L281226.  v1:= 9I;
  #L28122a.  if v0 != v1 then goto L281274;
  #L28122e.  v1:= 127I;
  #L281232.  if v0 >= v1 then goto L281274;
  #L281236.  v1:= 48I;
  #L28123a.  if v0 < v1 then goto L281246;
  #L28123e.  v1:= 57I;
  #L281242.  if v0 <= v1 then goto L281274;
  #L281246.  v1:= 97I;
  #L28124a.  if v0 < v1 then goto L281256;
  #L28124e.  v1:= 122I;
  #L281252.  if v0 <= v1 then goto L281274;
  #L281256.  v1:= 65I;
  #L28125a.  if v0 < v1 then goto L281266;
  #L28125e.  v1:= 90I;
  #L281262.  if v0 <= v1 then goto L281274;
  #L281266.  v1:= 58I;
  #L28126a.  if v0 != v1 then goto L281270;
  #L28126e.  goto L281274;
  #L281270.  v0:= 0I;
  #L281272.  goto L281276;
  #L281274.  v0:= 1I;
  #L281276.  v1:= v6 ^~ 1;
  #L28127a.  if v0 != v1 then goto L281280;
  #L28127e.  return v4;
  #L281280.  v4:= v4 + 1;
  #L281284.  goto L281210;
  #L281286.  return v5;
}
procedure `boolean` `domainMatch`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc/k;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L280cc4.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280cca.  v0:= temp;
  #L280ccc.  v1:= 1I;
  #L280cce.  if v0 == 0 then goto L280cd4;
  #L280cd2.  return v1;
  #L280cd4.  call temp:= `endsWith`(v2, v3) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L280cda.  v0:= temp;
  #L280cdc.  if v0 == 0 then goto L280d12;
  #L280ce0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L280ce6.  v0:= temp;
  #L280ce8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L280cee.  v3:= temp;
  #L280cf0.  v0:= v0 - v3 @kind int;
  #L280cf2.  v0:= v0 - v1 @kind int;
  #L280cf4.  call temp:= `charAt`(v2, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L280cfa.  v3:= temp;
  #L280cfc.  v0:= 46I;
  #L280d00.  if v3 != v0 then goto L280d12;
  #L280d04.  call temp:= `c`(v2) @signature `Lc/a/c;.c:(Ljava/lang/String;)Z` @kind static;
  #L280d0a.  v2:= temp;
  #L280d0c.  if v2 != 0 then goto L280d12;
  #L280d10.  return v1;
  #L280d12.  v2:= 0I;
  #L280d14.  return v2;
}
procedure `c.k` `parse`(`long` v26 , `c.r` v28 @kind object, `java.lang.String` v29 @kind object) @signature `Lc/k;.parse:(JLc/r;Ljava/lang/String;)Lc/k;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;

  #L280f3c.  v2:= v29 @kind object;
  #L280f40.  call temp:= `length`(v29) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L280f46.  v3:= temp;
  #L280f48.  v4:= 59I;
  #L280f4c.  v5:= 0I;
  #L280f4e.  call temp:= `a`(v2, v5, v3, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L280f54.  v6:= temp;
  #L280f56.  v7:= 61I;
  #L280f5a.  call temp:= `a`(v2, v5, v6, v7) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L280f60.  v8:= temp;
  #L280f62.  v9:= 0I;
  #L280f64.  if v8 != v6 then goto L280f6a;
  #L280f68.  return v9 @kind object;
  #L280f6a.  call temp:= `c`(v2, v5, v8) @signature `Lc/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L280f70.  v11:= temp @kind object;
  #L280f72.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L280f78.  v10:= temp;
  #L280f7a.  if v10 != 0 then goto L2811d8;
  #L280f7e.  call temp:= `b`(v11) @signature `Lc/a/c;.b:(Ljava/lang/String;)I` @kind static;
  #L280f84.  v10:= temp;
  #L280f86.  v12:= -1I;
  #L280f88.  if v10 == v12 then goto L280f90;
  #L280f8c.  goto L2811d8;
  #L280f90.  v10:= 1I;
  #L280f92.  v8:= v8 + v10 @kind int;
  #L280f94.  call temp:= `c`(v2, v8, v6) @signature `Lc/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L280f9a.  v8:= temp @kind object;
  #L280f9c.  call temp:= `b`(v8) @signature `Lc/a/c;.b:(Ljava/lang/String;)I` @kind static;
  #L280fa2.  v13:= temp;
  #L280fa4.  if v13 == v12 then goto L280faa;
  #L280fa8.  return v9 @kind object;
  #L280faa.  v6:= v6 + v10 @kind int;
  #L280fac.  v12:= -1L;
  #L280fb0.  v14:= 253402300799999L;
  #L280fba.  v10:= v9 @kind object;
  #L280fbc.  v21:= v10 @kind object;
  #L280fc0.  v16:= v12 @kind wide;
  #L280fc4.  v22:= v14 @kind wide;
  #L280fc8.  v18:= 0I;
  #L280fcc.  v19:= 0I;
  #L280fd0.  v20:= 1I;
  #L280fd4.  v24:= 0I;
  #L280fd8.  if v6 >= v3 then goto L2810c2;
  #L280fdc.  call temp:= `a`(v2, v6, v3, v4) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L280fe2.  v9:= temp;
  #L280fe4.  call temp:= `a`(v2, v6, v9, v7) @signature `Lc/a/c;.a:(Ljava/lang/String;IIC)I` @kind static;
  #L280fea.  v4:= temp;
  #L280fec.  call temp:= `c`(v2, v6, v4) @signature `Lc/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L280ff2.  v6:= temp @kind object;
  #L280ff4.  if v4 >= v9 then goto L281006;
  #L280ff8.  v4:= v4 + 1;
  #L280ffc.  call temp:= `c`(v2, v4, v9) @signature `Lc/a/c;.c:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L281002.  v4:= temp @kind object;
  #L281004.  goto L28100a;
  #L281006.  v4:= "" @kind object;
  #L28100a.  v7:= "expires" @kind object;
  #L28100e.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L281014.  v7:= temp;
  #L281016.  if v7 == 0 then goto L281034;
  #L28101a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281020.  v6:= temp;
  #L281022.  call temp:= `parseExpires`(v4, v5, v6) @signature `Lc/k;.parseExpires:(Ljava/lang/String;II)J` @kind static;
  #L281028.  v6:= temp @kind wide;
  #L28102a.  v22:= v6 @kind wide;
  #L28102e.  v24:= 1I;
  #L281032.  goto L2810b2;
  #L281034.  v7:= "max-age" @kind object;
  #L281038.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L28103e.  v7:= temp;
  #L281040.  if v7 == 0 then goto L281052;
  #L281044.  call temp:= `parseMaxAge`(v4) @signature `Lc/k;.parseMaxAge:(Ljava/lang/String;)J` @kind static;
  #L28104a.  v6:= temp @kind wide;
  #L28104c.  v16:= v6 @kind wide;
  #L281050.  goto L28102e;
  #L281052.  v7:= "domain" @kind object;
  #L281056.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L28105c.  v7:= temp;
  #L28105e.  if v7 == 0 then goto L281072;
  #L281062.  call temp:= `parseDomain`(v4) @signature `Lc/k;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L281068.  v4:= temp @kind object;
  #L28106a.  v10:= v4 @kind object;
  #L28106c.  v20:= 0I;
  #L281070.  goto L2810b2;
  #L281072.  v7:= "path" @kind object;
  #L281076.  call temp:= `equalsIgnoreCase`(v6, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L28107c.  v7:= temp;
  #L28107e.  if v7 == 0 then goto L281088;
  #L281082.  v21:= v4 @kind object;
  #L281086.  goto L2810b2;
  #L281088.  v4:= "secure" @kind object;
  #L28108c.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L281092.  v4:= temp;
  #L281094.  if v4 == 0 then goto L28109e;
  #L281098.  v18:= 1I;
  #L28109c.  goto L2810b2;
  #L28109e.  v4:= "httponly" @kind object;
  #L2810a2.  call temp:= `equalsIgnoreCase`(v6, v4) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2810a8.  v4:= temp;
  #L2810aa.  if v4 == 0 then goto L2810b2;
  #L2810ae.  v19:= 1I;
  #L2810b2.  v6:= v9 + 1;
  #L2810b6.  v4:= 59I;
  #L2810ba.  v7:= 61I;
  #L2810be.  v9:= 0I;
  #L2810c0.  goto L280fd8;
  #L2810c2.  v2:= -9223372036854775808L;
  #L2810c6.  v4:= lcmp(v16, v2);
  #L2810ca.  if v4 != 0 then goto L2810d2;
  #L2810ce.  v13:= v2 @kind wide;
  #L2810d0.  goto L28111e;
  #L2810d2.  v2:= lcmp(v16, v12);
  #L2810d6.  if v2 == 0 then goto L28111a;
  #L2810da.  v2:= 9223372036854775L;
  #L2810e4.  v4:= lcmp(v16, v2);
  #L2810e8.  if v4 > 0 then goto L2810f6;
  #L2810ec.  v2:= 1000L;
  #L2810f0.  v16:= v16 * v2 @kind long;
  #L2810f4.  goto L281100;
  #L2810f6.  v16:= 9223372036854775807L;
  #L281100.  v2:= 0I;
  #L281102.  v2:= v26 + v16 @kind long;
  #L281106.  v4:= lcmp(v2, v26);
  #L28110a.  if v4 < 0 then goto L281116;
  #L28110e.  v0:= lcmp(v2, v14);
  #L281112.  if v0 <= 0 then goto L2810ce;
  #L281116.  v13:= v14 @kind wide;
  #L281118.  goto L28111e;
  #L28111a.  v13:= v22 @kind wide;
  #L28111e.  call temp:= `f`(v28) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L281124.  v0:= temp @kind object;
  #L281126.  if v10 != 0 then goto L281130;
  #L28112a.  v15:= v0 @kind object;
  #L28112c.  v1:= 0I;
  #L28112e.  goto L281144;
  #L281130.  call temp:= `domainMatch`(v0, v10) @signature `Lc/k;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L281136.  v1:= temp;
  #L281138.  if v1 != 0 then goto L281140;
  #L28113c.  v1:= 0I;
  #L28113e.  return v1 @kind object;
  #L281140.  v1:= 0I;
  #L281142.  v15:= v10 @kind object;
  #L281144.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L28114a.  v0:= temp;
  #L28114c.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L281152.  v2:= temp;
  #L281154.  if v0 == v2 then goto L28116e;
  #L281158.  call temp:= `a`() @signature `Lc/a/h/a;.a:()Lc/a/h/a;` @kind static;
  #L28115e.  v0:= temp @kind object;
  #L281160.  call temp:= `a`(v0, v15) @signature `Lc/a/h/a;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L281166.  v0:= temp @kind object;
  #L281168.  if v0 != 0 then goto L28116e;
  #L28116c.  return v1 @kind object;
  #L28116e.  v9:= v21 @kind object;
  #L281172.  if v9 == 0 then goto L28118e;
  #L281176.  v0:= "/" @kind object;
  #L28117a.  call temp:= `startsWith`(v9, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L281180.  v0:= temp;
  #L281182.  if v0 != 0 then goto L281188;
  #L281186.  goto L28118e;
  #L281188.  v16:= v9 @kind object;
  #L28118c.  goto L2811b8;
  #L28118e.  call temp:= `h`(v28) @signature `Lc/r;.h:()Ljava/lang/String;` @kind virtual;
  #L281194.  v0:= temp @kind object;
  #L281196.  v1:= 47I;
  #L28119a.  call temp:= `lastIndexOf`(v0, v1) @signature `Ljava/lang/String;.lastIndexOf:(I)I` @kind virtual;
  #L2811a0.  v1:= temp;
  #L2811a2.  if v1 == 0 then goto L2811b0;
  #L2811a6.  call temp:= `substring`(v0, v5, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2811ac.  v0:= temp @kind object;
  #L2811ae.  goto L2811b4;
  #L2811b0.  v0:= "/" @kind object;
  #L2811b4.  v16:= v0 @kind object;
  #L2811b8.  v0:= new `c.k`;
  #L2811bc.  v10:= v0 @kind object;
  #L2811be.  v12:= v8 @kind object;
  #L2811c0.  v17:= v18;
  #L2811c4.  v18:= v19;
  #L2811c8.  v19:= v20;
  #L2811cc.  v20:= v24;
  #L2811d0.  call `<init>`(v10, v11, v12, v13, v15, v16, v17, v18, v19, v20) @signature `Lc/k;.<init>:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L2811d6.  return v0 @kind object;
  #L2811d8.  v0:= v9 @kind object;
  #L2811da.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L28101a..L28102a] goto L2810b2;
  catch `java.lang.NumberFormatException` @[L281044..L28104c] goto L2810b2;
  catch `java.lang.IllegalArgumentException` @[L281062..L28106a] goto L2810b2;
}
procedure `c.k` `parse`(`c.r` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc/k;.parse:(Lc/r;Ljava/lang/String;)Lc/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L280f18.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L280f1e.  v0:= temp @kind wide;
  #L280f20.  call temp:= `parse`(v0, v2, v3) @signature `Lc/k;.parse:(JLc/r;Ljava/lang/String;)Lc/k;` @kind static;
  #L280f26.  v2:= temp @kind object;
  #L280f28.  return v2 @kind object;
}
procedure `java.util.List` `parseAll`(`c.r` v4 @kind object, `c.q` v5 @kind object) @signature `Lc/k;.parseAll:(Lc/r;Lc/q;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L281510.  v0:= "Set-Cookie" @kind object;
  #L281514.  call temp:= `b`(v5, v0) @signature `Lc/q;.b:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L28151a.  v5:= temp @kind object;
  #L28151c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L281522.  v0:= temp;
  #L281524.  v1:= 0I;
  #L281526.  v2:= 0I;
  #L281528.  if v2 >= v0 then goto L281560;
  #L28152c.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L281532.  v3:= temp @kind object;
  #L281534.  v3:= (`java.lang.String`) v3 @kind object;
  #L281538.  call temp:= `parse`(v4, v3) @signature `Lc/k;.parse:(Lc/r;Ljava/lang/String;)Lc/k;` @kind static;
  #L28153e.  v3:= temp @kind object;
  #L281540.  if v3 != 0 then goto L281546;
  #L281544.  goto L28155a;
  #L281546.  if v1 != 0 then goto L281554;
  #L28154a.  v1:= new `java.util.ArrayList`;
  #L28154e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L281554.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L28155a.  v2:= v2 + 1;
  #L28155e.  goto L281528;
  #L281560.  if v1 == 0 then goto L28156e;
  #L281564.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L28156a.  v4:= temp @kind object;
  #L28156c.  goto L281576;
  #L28156e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L281574.  v4:= temp @kind object;
  #L281576.  return v4 @kind object;
}
procedure `java.lang.String` `parseDomain`(`java.lang.String` v1 @kind object) @signature `Lc/k;.parseDomain:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L281374.  v0:= "." @kind object;
  #L281378.  call temp:= `endsWith`(v1, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28137e.  v0:= temp;
  #L281380.  if v0 == 0 then goto L281390;
  #L281384.  v1:= new `java.lang.IllegalArgumentException`;
  #L281388.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L28138e.  throw v1;
  #L281390.  v0:= "." @kind object;
  #L281394.  call temp:= `startsWith`(v1, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L28139a.  v0:= temp;
  #L28139c.  if v0 == 0 then goto L2813aa;
  #L2813a0.  v0:= 1I;
  #L2813a2.  call temp:= `substring`(v1, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2813a8.  v1:= temp @kind object;
  #L2813aa.  call temp:= `a`(v1) @signature `Lc/a/c;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2813b0.  v1:= temp @kind object;
  #L2813b2.  if v1 != 0 then goto L2813c2;
  #L2813b6.  v1:= new `java.lang.IllegalArgumentException`;
  #L2813ba.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2813c0.  throw v1;
  #L2813c2.  return v1 @kind object;
}
procedure `long` `parseExpires`(`java.lang.String` v12 @kind object, `int` v13 , `int` v14 ) @signature `Lc/k;.parseExpires:(Ljava/lang/String;II)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2815a0.  v0:= 0I;
  #L2815a2.  call temp:= `dateCharacterOffset`(v12, v13, v14, v0) @signature `Lc/k;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2815a8.  v13:= temp;
  #L2815aa.  v1:= `@@c.k.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2815ae.  call temp:= `matcher`(v1, v12) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2815b4.  v1:= temp @kind object;
  #L2815b6.  v2:= -1I;
  #L2815b8.  v3:= -1I;
  #L2815ba.  v4:= -1I;
  #L2815bc.  v5:= -1I;
  #L2815be.  v6:= -1I;
  #L2815c0.  v7:= -1I;
  #L2815c2.  v8:= -1I;
  #L2815c4.  v9:= 2I;
  #L2815c6.  v10:= 1I;
  #L2815c8.  if v13 >= v14 then goto L2816ee;
  #L2815cc.  v11:= v13 + 1;
  #L2815d0.  call temp:= `dateCharacterOffset`(v12, v11, v14, v10) @signature `Lc/k;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2815d6.  v11:= temp;
  #L2815d8.  call temp:= `region`(v1, v13, v11) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L2815de.  if v3 != v2 then goto L281634;
  #L2815e2.  v13:= `@@c.k.TIME_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2815e6.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2815ec.  v13:= temp @kind object;
  #L2815ee.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2815f4.  v13:= temp;
  #L2815f6.  if v13 == 0 then goto L281634;
  #L2815fa.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L281600.  v13:= temp @kind object;
  #L281602.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L281608.  v13:= temp;
  #L28160a.  call temp:= `group`(v1, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L281610.  v3:= temp @kind object;
  #L281612.  call temp:= `parseInt`(v3) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L281618.  v3:= temp;
  #L28161a.  v7:= 3I;
  #L28161c.  call temp:= `group`(v1, v7) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L281622.  v7:= temp @kind object;
  #L281624.  call temp:= `parseInt`(v7) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L28162a.  v7:= temp;
  #L28162c.  v8:= v7;
  #L28162e.  v7:= v3;
  #L281630.  v3:= v13;
  #L281632.  goto L2816de;
  #L281634.  if v5 != v2 then goto L281664;
  #L281638.  v13:= `@@c.k.DAY_OF_MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L28163c.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L281642.  v13:= temp @kind object;
  #L281644.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L28164a.  v13:= temp;
  #L28164c.  if v13 == 0 then goto L281664;
  #L281650.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L281656.  v13:= temp @kind object;
  #L281658.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L28165e.  v13:= temp;
  #L281660.  v5:= v13;
  #L281662.  goto L2816de;
  #L281664.  if v6 != v2 then goto L2816b0;
  #L281668.  v13:= `@@c.k.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L28166c.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L281672.  v13:= temp @kind object;
  #L281674.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L28167a.  v13:= temp;
  #L28167c.  if v13 == 0 then goto L2816b0;
  #L281680.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L281686.  v13:= temp @kind object;
  #L281688.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L28168c.  call temp:= `toLowerCase`(v13, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L281692.  v13:= temp @kind object;
  #L281694.  v6:= `@@c.k.MONTH_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L281698.  call temp:= `pattern`(v6) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L28169e.  v6:= temp @kind object;
  #L2816a0.  call temp:= `indexOf`(v6, v13) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L2816a6.  v13:= temp;
  #L2816a8.  v13:= v13 / 4;
  #L2816ac.  v6:= v13;
  #L2816ae.  goto L2816de;
  #L2816b0.  if v4 != v2 then goto L2816de;
  #L2816b4.  v13:= `@@c.k.YEAR_PATTERN` @type ^`java.util.regex.Pattern` @kind object;
  #L2816b8.  call temp:= `usePattern`(v1, v13) @signature `Ljava/util/regex/Matcher;.usePattern:(Ljava/util/regex/Pattern;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2816be.  v13:= temp @kind object;
  #L2816c0.  call temp:= `matches`(v13) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2816c6.  v13:= temp;
  #L2816c8.  if v13 == 0 then goto L2816de;
  #L2816cc.  call temp:= `group`(v1, v10) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2816d2.  v13:= temp @kind object;
  #L2816d4.  call temp:= `parseInt`(v13) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2816da.  v13:= temp;
  #L2816dc.  v4:= v13;
  #L2816de.  v11:= v11 + 1;
  #L2816e2.  call temp:= `dateCharacterOffset`(v12, v11, v14, v0) @signature `Lc/k;.dateCharacterOffset:(Ljava/lang/String;IIZ)I` @kind static;
  #L2816e8.  v13:= temp;
  #L2816ea.  goto L2815c4;
  #L2816ee.  v12:= 70I;
  #L2816f2.  if v4 < v12 then goto L281702;
  #L2816f6.  v12:= 99I;
  #L2816fa.  if v4 > v12 then goto L281702;
  #L2816fe.  v4:= v4 + 1900;
  #L281702.  if v4 < 0 then goto L281712;
  #L281706.  v12:= 69I;
  #L28170a.  if v4 > v12 then goto L281712;
  #L28170e.  v4:= v4 + 2000;
  #L281712.  v12:= 1601I;
  #L281716.  if v4 >= v12 then goto L281726;
  #L28171a.  v12:= new `java.lang.IllegalArgumentException`;
  #L28171e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L281724.  throw v12;
  #L281726.  if v6 != v2 then goto L281736;
  #L28172a.  v12:= new `java.lang.IllegalArgumentException`;
  #L28172e.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L281734.  throw v12;
  #L281736.  if v5 < v10 then goto L2817ea;
  #L28173a.  v12:= 31I;
  #L28173e.  if v5 <= v12 then goto L281744;
  #L281742.  goto L2817ea;
  #L281744.  if v3 < 0 then goto L2817de;
  #L281748.  v12:= 23I;
  #L28174c.  if v3 <= v12 then goto L281752;
  #L281750.  goto L2817de;
  #L281752.  if v7 < 0 then goto L2817d2;
  #L281756.  v12:= 59I;
  #L28175a.  if v7 <= v12 then goto L281760;
  #L28175e.  goto L2817d2;
  #L281760.  if v8 < 0 then goto L2817c6;
  #L281764.  if v8 <= v12 then goto L28176a;
  #L281768.  goto L2817c6;
  #L28176a.  v12:= new `java.util.GregorianCalendar`;
  #L28176e.  v13:= `@@c.a.c.g` @type ^`java.util.TimeZone` @kind object;
  #L281772.  call `<init>`(v12, v13) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L281778.  call `setLenient`(v12, v0) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L28177e.  call `set`(v12, v10, v4) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L281784.  v6:= v6 - v10 @kind int;
  #L281786.  call `set`(v12, v9, v6) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L28178c.  v13:= 5I;
  #L28178e.  call `set`(v12, v13, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L281794.  v13:= 11I;
  #L281798.  call `set`(v12, v13, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L28179e.  v13:= 12I;
  #L2817a2.  call `set`(v12, v13, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2817a8.  v13:= 13I;
  #L2817ac.  call `set`(v12, v13, v8) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2817b2.  v13:= 14I;
  #L2817b6.  call `set`(v12, v13, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L2817bc.  call temp:= `getTimeInMillis`(v12) @signature `Ljava/util/Calendar;.getTimeInMillis:()J` @kind virtual;
  #L2817c2.  v12:= temp @kind wide;
  #L2817c4.  return v12 @kind wide;
  #L2817c6.  v12:= new `java.lang.IllegalArgumentException`;
  #L2817ca.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2817d0.  throw v12;
  #L2817d2.  v12:= new `java.lang.IllegalArgumentException`;
  #L2817d6.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2817dc.  throw v12;
  #L2817de.  v12:= new `java.lang.IllegalArgumentException`;
  #L2817e2.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2817e8.  throw v12;
  #L2817ea.  v12:= new `java.lang.IllegalArgumentException`;
  #L2817ee.  call `<init>`(v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L2817f4.  throw v12;
}
procedure `long` `parseMaxAge`(`java.lang.String` v6 @kind object) @signature `Lc/k;.parseMaxAge:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L281808.  v0:= -9223372036854775808L;
  #L28180c.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L281812.  v2:= temp @kind wide;
  #L281814.  v4:= 0L;
  #L281818.  v6:= lcmp(v2, v4);
  #L28181c.  if v6 > 0 then goto L281822;
  #L281820.  goto L281824;
  #L281822.  v0:= v2 @kind wide;
  #L281824.  return v0 @kind wide;
  #L281826.  v2:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L281828.  v3:= "-?\\d+" @kind object;
  #L28182c.  call temp:= `matches`(v6, v3) @signature `Ljava/lang/String;.matches:(Ljava/lang/String;)Z` @kind virtual;
  #L281832.  v3:= temp;
  #L281834.  if v3 == 0 then goto L281856;
  #L281838.  v2:= "-" @kind object;
  #L28183c.  call temp:= `startsWith`(v6, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L281842.  v6:= temp;
  #L281844.  if v6 == 0 then goto L28184a;
  #L281848.  goto L281854;
  #L28184a.  v0:= 9223372036854775807L;
  #L281854.  return v0 @kind wide;
  #L281856.  throw v2;
  catch `java.lang.NumberFormatException` @[L28180c..L281814] goto L281826;
}
procedure `boolean` `pathMatch`(`c.r` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lc/k;.pathMatch:(Lc/r;Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L280e84.  call temp:= `h`(v2) @signature `Lc/r;.h:()Ljava/lang/String;` @kind virtual;
  #L280e8a.  v2:= temp @kind object;
  #L280e8c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280e92.  v0:= temp;
  #L280e94.  v1:= 1I;
  #L280e96.  if v0 == 0 then goto L280e9c;
  #L280e9a.  return v1;
  #L280e9c.  call temp:= `startsWith`(v2, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L280ea2.  v0:= temp;
  #L280ea4.  if v0 == 0 then goto L280ed4;
  #L280ea8.  v0:= "/" @kind object;
  #L280eac.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L280eb2.  v0:= temp;
  #L280eb4.  if v0 == 0 then goto L280eba;
  #L280eb8.  return v1;
  #L280eba.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L280ec0.  v3:= temp;
  #L280ec2.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L280ec8.  v2:= temp;
  #L280eca.  v3:= 47I;
  #L280ece.  if v2 != v3 then goto L280ed4;
  #L280ed2.  return v1;
  #L280ed4.  v2:= 0I;
  #L280ed6.  return v2;
}
procedure `java.lang.String` `domain`(`c.k` v1 @kind this) @signature `Lc/k;.domain:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L281344.  v0:= v1.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L281348.  return v0 @kind object;
}
procedure `boolean` `equals`(`c.k` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lc/k;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L280d28.  v0:= instanceof @variable v7 @type ^`c.k` @kind boolean;
  #L280d2c.  v1:= 0I;
  #L280d2e.  if v0 != 0 then goto L280d34;
  #L280d32.  return v1;
  #L280d34.  v7:= (`c.k`) v7 @kind object;
  #L280d38.  v0:= v7.`c.k.name` @type ^`java.lang.String` @kind object;
  #L280d3c.  v2:= v6.`c.k.name` @type ^`java.lang.String` @kind object;
  #L280d40.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280d46.  v0:= temp;
  #L280d48.  if v0 == 0 then goto L280dca;
  #L280d4c.  v0:= v7.`c.k.value` @type ^`java.lang.String` @kind object;
  #L280d50.  v2:= v6.`c.k.value` @type ^`java.lang.String` @kind object;
  #L280d54.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280d5a.  v0:= temp;
  #L280d5c.  if v0 == 0 then goto L280dca;
  #L280d60.  v0:= v7.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L280d64.  v2:= v6.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L280d68.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280d6e.  v0:= temp;
  #L280d70.  if v0 == 0 then goto L280dca;
  #L280d74.  v0:= v7.`c.k.path` @type ^`java.lang.String` @kind object;
  #L280d78.  v2:= v6.`c.k.path` @type ^`java.lang.String` @kind object;
  #L280d7c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280d82.  v0:= temp;
  #L280d84.  if v0 == 0 then goto L280dca;
  #L280d88.  v2:= v7.`c.k.expiresAt` @type ^`long` @kind wide;
  #L280d8c.  v4:= v6.`c.k.expiresAt` @type ^`long` @kind wide;
  #L280d90.  v0:= lcmp(v2, v4);
  #L280d94.  if v0 != 0 then goto L280dca;
  #L280d98.  v0:= v7.`c.k.secure` @type ^`boolean` @kind boolean;
  #L280d9c.  v2:= v6.`c.k.secure` @type ^`boolean` @kind boolean;
  #L280da0.  if v0 != v2 then goto L280dca;
  #L280da4.  v0:= v7.`c.k.httpOnly` @type ^`boolean` @kind boolean;
  #L280da8.  v2:= v6.`c.k.httpOnly` @type ^`boolean` @kind boolean;
  #L280dac.  if v0 != v2 then goto L280dca;
  #L280db0.  v0:= v7.`c.k.persistent` @type ^`boolean` @kind boolean;
  #L280db4.  v2:= v6.`c.k.persistent` @type ^`boolean` @kind boolean;
  #L280db8.  if v0 != v2 then goto L280dca;
  #L280dbc.  v7:= v7.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L280dc0.  v0:= v6.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L280dc4.  if v7 != v0 then goto L280dca;
  #L280dc8.  v1:= 1I;
  #L280dca.  return v1;
}
procedure `long` `expiresAt`(`c.k` v2 @kind this) @signature `Lc/k;.expiresAt:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L281588.  v0:= v2.`c.k.expiresAt` @type ^`long` @kind wide;
  #L28158c.  return v0 @kind wide;
}
procedure `int` `hashCode`(`c.k` v8 @kind this) @signature `Lc/k;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L281298.  v0:= v8.`c.k.name` @type ^`java.lang.String` @kind object;
  #L28129c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2812a2.  v0:= temp;
  #L2812a4.  v1:= 527I;
  #L2812a8.  v1:= v1 + v0 @kind int;
  #L2812aa.  v1:= v1 * 31;
  #L2812ae.  v0:= v8.`c.k.value` @type ^`java.lang.String` @kind object;
  #L2812b2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2812b8.  v0:= temp;
  #L2812ba.  v1:= v1 + v0 @kind int;
  #L2812bc.  v1:= v1 * 31;
  #L2812c0.  v0:= v8.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L2812c4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2812ca.  v0:= temp;
  #L2812cc.  v1:= v1 + v0 @kind int;
  #L2812ce.  v1:= v1 * 31;
  #L2812d2.  v0:= v8.`c.k.path` @type ^`java.lang.String` @kind object;
  #L2812d6.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2812dc.  v0:= temp;
  #L2812de.  v1:= v1 + v0 @kind int;
  #L2812e0.  v1:= v1 * 31;
  #L2812e4.  v2:= v8.`c.k.expiresAt` @type ^`long` @kind wide;
  #L2812e8.  v4:= v8.`c.k.expiresAt` @type ^`long` @kind wide;
  #L2812ec.  v0:= 32I;
  #L2812f0.  v4:= v4 ^>> v0 @kind long;
  #L2812f2.  v6:= v2 ^~ v4 @kind long;
  #L2812f6.  v0:= (`int`) v6 @kind l2i;
  #L2812f8.  v1:= v1 + v0 @kind int;
  #L2812fa.  v1:= v1 * 31;
  #L2812fe.  v0:= v8.`c.k.secure` @type ^`boolean` @kind boolean;
  #L281302.  v0:= v0 ^~ 1;
  #L281306.  v1:= v1 + v0 @kind int;
  #L281308.  v1:= v1 * 31;
  #L28130c.  v0:= v8.`c.k.httpOnly` @type ^`boolean` @kind boolean;
  #L281310.  v0:= v0 ^~ 1;
  #L281314.  v1:= v1 + v0 @kind int;
  #L281316.  v1:= v1 * 31;
  #L28131a.  v0:= v8.`c.k.persistent` @type ^`boolean` @kind boolean;
  #L28131e.  v0:= v0 ^~ 1;
  #L281322.  v1:= v1 + v0 @kind int;
  #L281324.  v1:= v1 * 31;
  #L281328.  v0:= v8.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L28132c.  v0:= v0 ^~ 1;
  #L281330.  v1:= v1 + v0 @kind int;
  #L281332.  return v1;
}
procedure `boolean` `hostOnly`(`c.k` v1 @kind this) @signature `Lc/k;.hostOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280ddc.  v0:= v1.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L280de0.  return v0;
}
procedure `boolean` `httpOnly`(`c.k` v1 @kind this) @signature `Lc/k;.httpOnly:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280df4.  v0:= v1.`c.k.httpOnly` @type ^`boolean` @kind boolean;
  #L280df8.  return v0;
}
procedure `boolean` `matches`(`c.k` v2 @kind this, `c.r` v3 @kind object) @signature `Lc/k;.matches:(Lc/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L280e0c.  v0:= v2.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L280e10.  if v0 == 0 then goto L280e2a;
  #L280e14.  call temp:= `f`(v3) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L280e1a.  v0:= temp @kind object;
  #L280e1c.  v1:= v2.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L280e20.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L280e26.  v0:= temp;
  #L280e28.  goto L280e3e;
  #L280e2a.  call temp:= `f`(v3) @signature `Lc/r;.f:()Ljava/lang/String;` @kind virtual;
  #L280e30.  v0:= temp @kind object;
  #L280e32.  v1:= v2.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L280e36.  call temp:= `domainMatch`(v0, v1) @signature `Lc/k;.domainMatch:(Ljava/lang/String;Ljava/lang/String;)Z` @kind static;
  #L280e3c.  v0:= temp;
  #L280e3e.  v1:= 0I;
  #L280e40.  if v0 != 0 then goto L280e46;
  #L280e44.  return v1;
  #L280e46.  v0:= v2.`c.k.path` @type ^`java.lang.String` @kind object;
  #L280e4a.  call temp:= `pathMatch`(v3, v0) @signature `Lc/k;.pathMatch:(Lc/r;Ljava/lang/String;)Z` @kind static;
  #L280e50.  v0:= temp;
  #L280e52.  if v0 != 0 then goto L280e58;
  #L280e56.  return v1;
  #L280e58.  v0:= v2.`c.k.secure` @type ^`boolean` @kind boolean;
  #L280e5c.  if v0 == 0 then goto L280e6e;
  #L280e60.  call temp:= `c`(v3) @signature `Lc/r;.c:()Z` @kind virtual;
  #L280e66.  v3:= temp;
  #L280e68.  if v3 != 0 then goto L280e6e;
  #L280e6c.  return v1;
  #L280e6e.  v3:= 1I;
  #L280e70.  return v3;
}
procedure `java.lang.String` `name`(`c.k` v1 @kind this) @signature `Lc/k;.name:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28135c.  v0:= v1.`c.k.name` @type ^`java.lang.String` @kind object;
  #L281360.  return v0 @kind object;
}
procedure `java.lang.String` `path`(`c.k` v1 @kind this) @signature `Lc/k;.path:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2813d4.  v0:= v1.`c.k.path` @type ^`java.lang.String` @kind object;
  #L2813d8.  return v0 @kind object;
}
procedure `boolean` `persistent`(`c.k` v1 @kind this) @signature `Lc/k;.persistent:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280ee8.  v0:= v1.`c.k.persistent` @type ^`boolean` @kind boolean;
  #L280eec.  return v0;
}
procedure `boolean` `secure`(`c.k` v1 @kind this) @signature `Lc/k;.secure:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L280f00.  v0:= v1.`c.k.secure` @type ^`boolean` @kind boolean;
  #L280f04.  return v0;
}
procedure `java.lang.String` `toString`(`c.k` v1 @kind this) @signature `Lc/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2813ec.  v0:= 0I;
  #L2813ee.  call temp:= `toString`(v1, v0) @signature `Lc/k;.toString:(Z)Ljava/lang/String;` @kind virtual;
  #L2813f4.  v0:= temp @kind object;
  #L2813f6.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`c.k` v6 @kind this, `boolean` v7 ) @signature `Lc/k;.toString:(Z)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L281408.  v0:= new `java.lang.StringBuilder`;
  #L28140c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L281412.  v1:= v6.`c.k.name` @type ^`java.lang.String` @kind object;
  #L281416.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28141c.  v1:= 61I;
  #L281420.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L281426.  v1:= v6.`c.k.value` @type ^`java.lang.String` @kind object;
  #L28142a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L281430.  v1:= v6.`c.k.persistent` @type ^`boolean` @kind boolean;
  #L281434.  if v1 == 0 then goto L28147a;
  #L281438.  v1:= v6.`c.k.expiresAt` @type ^`long` @kind wide;
  #L28143c.  v3:= -9223372036854775808L;
  #L281440.  v5:= lcmp(v1, v3);
  #L281444.  if v5 != 0 then goto L281454;
  #L281448.  v1:= "; max-age=0" @kind object;
  #L28144c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L281452.  goto L28147a;
  #L281454.  v1:= "; expires=" @kind object;
  #L281458.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28145e.  v1:= new `java.util.Date`;
  #L281462.  v2:= v6.`c.k.expiresAt` @type ^`long` @kind wide;
  #L281466.  call `<init>`(v1, v2) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L28146c.  call temp:= `a`(v1) @signature `Lc/a/c/d;.a:(Ljava/util/Date;)Ljava/lang/String;` @kind static;
  #L281472.  v1:= temp @kind object;
  #L281474.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28147a.  v1:= v6.`c.k.hostOnly` @type ^`boolean` @kind boolean;
  #L28147e.  if v1 != 0 then goto L2814a4;
  #L281482.  v1:= "; domain=" @kind object;
  #L281486.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28148c.  if v7 == 0 then goto L28149a;
  #L281490.  v7:= "." @kind object;
  #L281494.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28149a.  v7:= v6.`c.k.domain` @type ^`java.lang.String` @kind object;
  #L28149e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2814a4.  v7:= "; path=" @kind object;
  #L2814a8.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2814ae.  v7:= v6.`c.k.path` @type ^`java.lang.String` @kind object;
  #L2814b2.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2814b8.  v7:= v6.`c.k.secure` @type ^`boolean` @kind boolean;
  #L2814bc.  if v7 == 0 then goto L2814ca;
  #L2814c0.  v7:= "; secure" @kind object;
  #L2814c4.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2814ca.  v7:= v6.`c.k.httpOnly` @type ^`boolean` @kind boolean;
  #L2814ce.  if v7 == 0 then goto L2814dc;
  #L2814d2.  v7:= "; httponly" @kind object;
  #L2814d6.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2814dc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2814e2.  v7:= temp @kind object;
  #L2814e4.  return v7 @kind object;
}
procedure `java.lang.String` `value`(`c.k` v1 @kind this) @signature `Lc/k;.value:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2814f8.  v0:= v1.`c.k.value` @type ^`java.lang.String` @kind object;
  #L2814fc.  return v0 @kind object;
}
