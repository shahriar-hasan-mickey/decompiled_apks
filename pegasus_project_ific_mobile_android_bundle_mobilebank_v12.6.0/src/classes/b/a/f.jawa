record `b.a.f` @kind class @AccessFlag PUBLIC_FINAL extends `b.a.c` @kind interface {
  `java.util.List` `b.a.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `b.a.f.c` @AccessFlag PRIVATE_FINAL;
}
global `b.a.c` `@@b.a.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lb/a/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L26dd30.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L26dd36.  v0:= temp @kind object;
  #L26dd38.  call temp:= `a`(v0) @signature `Lb/a/d;.a:(Ljava/lang/Object;)Lb/a/c;` @kind static;
  #L26dd3e.  v0:= temp @kind object;
  #L26dd40.  `@@b.a.f.a` @type ^`b.a.c` := v0 @kind object;
  #L26dd44.  return @kind void;
}
procedure `void` `<init>`(`b.a.f` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lb/a/f;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L26dd58.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L26dd5e.  v0.`b.a.f.b` @type ^`java.util.List` := v1 @kind object;
  #L26dd62.  v0.`b.a.f.c` @type ^`java.util.List` := v2 @kind object;
  #L26dd66.  return @kind void;
}
procedure `void` `<init>`(`b.a.f` v0 @kind this, `java.util.List` v1 @kind object, `java.util.List` v2 @kind object, `b.a.f$1` v3 @kind object) @signature `Lb/a/f;.<init>:(Ljava/util/List;Ljava/util/List;Lb/a/f$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L26dd78.  call `<init>`(v0, v1, v2) @signature `Lb/a/f;.<init>:(Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L26dd7e.  return @kind void;
}
procedure `b.a.f$a` `a`(`int` v2 , `int` v3 ) @signature `Lb/a/f;.a:(II)Lb/a/f$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L26dbe0.  v0:= new `b.a.f$a`;
  #L26dbe4.  v1:= 0I;
  #L26dbe6.  call `<init>`(v0, v2, v3, v1) @signature `Lb/a/f$a;.<init>:(IILb/a/f$1;)V` @kind direct;
  #L26dbec.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`b.a.f` v1 @kind this) @signature `Lb/a/f;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L26dc00.  call temp:= `b`(v1) @signature `Lb/a/f;.b:()Ljava/util/Set;` @kind virtual;
  #L26dc06.  v0:= temp @kind object;
  #L26dc08.  return v0 @kind object;
}
procedure `java.util.Set` `b`(`b.a.f` v7 @kind this) @signature `Lb/a/f;.b:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L26dc1c.  v0:= v7.`b.a.f.b` @type ^`java.util.List` @kind object;
  #L26dc20.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26dc26.  v0:= temp;
  #L26dc28.  v1:= new `java.util.ArrayList`;
  #L26dc2c.  v2:= v7.`b.a.f.c` @type ^`java.util.List` @kind object;
  #L26dc30.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26dc36.  v2:= temp;
  #L26dc38.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L26dc3e.  v2:= v7.`b.a.f.c` @type ^`java.util.List` @kind object;
  #L26dc42.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26dc48.  v2:= temp;
  #L26dc4a.  v3:= 0I;
  #L26dc4c.  v4:= v0;
  #L26dc4e.  v0:= 0I;
  #L26dc50.  if v0 >= v2 then goto L26dc86;
  #L26dc54.  v5:= v7.`b.a.f.c` @type ^`java.util.List` @kind object;
  #L26dc58.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26dc5e.  v5:= temp @kind object;
  #L26dc60.  v5:= (`javax.a.a`) v5 @kind object;
  #L26dc64.  call temp:= `a`(v5) @signature `Ljavax/a/a;.a:()Ljava/lang/Object;` @kind interface;
  #L26dc6a.  v5:= temp @kind object;
  #L26dc6c.  v5:= (`java.util.Collection`) v5 @kind object;
  #L26dc70.  call temp:= `size`(v5) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L26dc76.  v6:= temp;
  #L26dc78.  v4:= v4 + v6 @kind int;
  #L26dc7a.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26dc80.  v0:= v0 + 1;
  #L26dc84.  goto L26dc50;
  #L26dc86.  call temp:= `b`(v4) @signature `Lb/a/a;.b:(I)Ljava/util/HashSet;` @kind static;
  #L26dc8c.  v0:= temp @kind object;
  #L26dc8e.  v2:= v7.`b.a.f.b` @type ^`java.util.List` @kind object;
  #L26dc92.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26dc98.  v2:= temp;
  #L26dc9a.  v4:= 0I;
  #L26dc9c.  if v4 >= v2 then goto L26dccc;
  #L26dca0.  v5:= v7.`b.a.f.b` @type ^`java.util.List` @kind object;
  #L26dca4.  call temp:= `get`(v5, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26dcaa.  v5:= temp @kind object;
  #L26dcac.  v5:= (`javax.a.a`) v5 @kind object;
  #L26dcb0.  call temp:= `a`(v5) @signature `Ljavax/a/a;.a:()Ljava/lang/Object;` @kind interface;
  #L26dcb6.  v5:= temp @kind object;
  #L26dcb8.  call temp:= `a`(v5) @signature `Lb/a/e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L26dcbe.  v5:= temp @kind object;
  #L26dcc0.  call temp:= `add`(v0, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26dcc6.  v4:= v4 + 1;
  #L26dcca.  goto L26dc9c;
  #L26dccc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L26dcd2.  v2:= temp;
  #L26dcd4.  if v3 >= v2 then goto L26dd16;
  #L26dcd8.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L26dcde.  v4:= temp @kind object;
  #L26dce0.  v4:= (`java.util.Collection`) v4 @kind object;
  #L26dce4.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L26dcea.  v4:= temp @kind object;
  #L26dcec.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L26dcf2.  v5:= temp;
  #L26dcf4.  if v5 == 0 then goto L26dd10;
  #L26dcf8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L26dcfe.  v5:= temp @kind object;
  #L26dd00.  call temp:= `a`(v5) @signature `Lb/a/e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L26dd06.  v5:= temp @kind object;
  #L26dd08.  call temp:= `add`(v0, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L26dd0e.  goto L26dcec;
  #L26dd10.  v3:= v3 + 1;
  #L26dd14.  goto L26dcd4;
  #L26dd16.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L26dd1c.  v0:= temp @kind object;
  #L26dd1e.  return v0 @kind object;
}
