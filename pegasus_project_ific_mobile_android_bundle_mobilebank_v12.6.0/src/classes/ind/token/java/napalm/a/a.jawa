record `ind.token.java.napalm.a.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `javax.crypto.Cipher` `a`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `int` v3 ) @signature `Lind/token/java/napalm/a/a;.a:([B[BI)Ljavax/crypto/Cipher;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3d8d64.  v0:= "AES/CBC/NoPadding" @kind object;
  #L3d8d68.  call temp:= `a`(v1, v2, v3, v0) @signature `Lind/token/java/napalm/a/a;.a:([B[BILjava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3d8d6e.  v1:= temp @kind object;
  #L3d8d70.  return v1 @kind object;
}
procedure `javax.crypto.Cipher` `a`(`byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 , `java.lang.String` v5 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([B[BILjava/lang/String;)Ljavax/crypto/Cipher;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d8d84.  call temp:= `getInstance`(v5) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3d8d8a.  v5:= temp @kind object;
  #L3d8d8c.  v0:= new `javax.crypto.spec.SecretKeySpec`;
  #L3d8d90.  v1:= "AES" @kind object;
  #L3d8d94.  call `<init>`(v0, v2, v1) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3d8d9a.  v2:= new `javax.crypto.spec.IvParameterSpec`;
  #L3d8d9e.  call `<init>`(v2, v3) @signature `Ljavax/crypto/spec/IvParameterSpec;.<init>:([B)V` @kind direct;
  #L3d8da4.  call `init`(v5, v4, v0, v2) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;Ljava/security/spec/AlgorithmParameterSpec;)V` @kind virtual;
  #L3d8daa.  return v5 @kind object;
  #L3d8dac.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8dae.  v3:= new `ind.token.java.napalm.b.b`;
  #L3d8db2.  call `<init>`(v3, v2) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8db8.  throw v3;
  catch `java.lang.Exception` @[L3d8d84..L3d8daa] goto L3d8dac;
}
procedure `byte`[] `a`(`int` v0 ) @signature `Lind/token/java/napalm/a/a;.a:(I)[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3d8b60.  v0:= 16I;
  #L3d8b64.  call temp:= `a`(v0) @signature `Lind/token/java/napalm/api/a;.a:(I)[B` @kind static;
  #L3d8b6a.  v0:= temp @kind object;
  #L3d8b6c.  return v0 @kind object;
}
procedure `byte`[] `a`(`java.lang.String` v1 @kind object) @signature `Lind/token/java/napalm/a/a;.a:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8b80.  v0:= "ISO-8859-1" @kind object;
  #L3d8b84.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3d8b8a.  v1:= temp @kind object;
  #L3d8b8c.  call temp:= `a`(v1) @signature `Lind/token/java/napalm/a/a;.a:([B)[B` @kind static;
  #L3d8b92.  v1:= temp @kind object;
  #L3d8b94.  return v1 @kind object;
  #L3d8b96.  v1:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3d8b98.  v0:= new `ind.token.java.napalm.b.b`;
  #L3d8b9c.  call `<init>`(v0, v1) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8ba2.  throw v0;
  catch `java.io.UnsupportedEncodingException` @[L3d8b80..L3d8b94] goto L3d8b96;
}
procedure `byte`[] `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lind/token/java/napalm/a/a;.a:(Ljava/lang/String;Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8bc4.  v0:= "ISO-8859-1" @kind object;
  #L3d8bc8.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3d8bce.  v1:= temp @kind object;
  #L3d8bd0.  v0:= "ISO-8859-1" @kind object;
  #L3d8bd4.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3d8bda.  v2:= temp @kind object;
  #L3d8bdc.  call temp:= `a`(v1, v2) @signature `Lind/token/java/napalm/a/a;.a:([B[B)[B` @kind static;
  #L3d8be2.  v1:= temp @kind object;
  #L3d8be4.  return v1 @kind object;
  #L3d8be6.  v1:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3d8be8.  v2:= new `ind.token.java.napalm.b.b`;
  #L3d8bec.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8bf2.  throw v2;
  catch `java.io.UnsupportedEncodingException` @[L3d8bc4..L3d8be4] goto L3d8be6;
}
procedure `byte`[] `a`(`byte`[] v1 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8a0c.  v0:= 0I;
  #L3d8a0e.  call temp:= `a`(v1, v0) @signature `Lind/token/java/napalm/a/a;.a:([B[B)[B` @kind static;
  #L3d8a14.  v1:= temp @kind object;
  #L3d8a16.  return v1 @kind object;
}
procedure `byte`[] `a`(`byte`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d8b04.  call temp:= `b`(v3) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;)[B` @kind static;
  #L3d8b0a.  v0:= temp @kind object;
  #L3d8b0c.  call temp:= `b`(v3) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;)[B` @kind static;
  #L3d8b12.  v3:= temp @kind object;
  #L3d8b14.  v1:= "AES/CBC/PKCS5Padding" @kind object;
  #L3d8b18.  call temp:= `b`(v2, v0, v3, v1) @signature `Lind/token/java/napalm/a/a;.b:([B[B[BLjava/lang/String;)[B` @kind static;
  #L3d8b1e.  v2:= temp @kind object;
  #L3d8b20.  return v2 @kind object;
}
procedure `byte`[] `a`(`byte`[] v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `ind.token.java.napalm.api.d` v3 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([BLjava/lang/String;Ljava/lang/String;Lind/token/java/napalm/api/d;)[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3d8b34.  call temp:= `b`(v1, v2) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;Ljava/lang/String;)[B` @kind static;
  #L3d8b3a.  v1:= temp @kind object;
  #L3d8b3c.  call temp:= `a`(v3) @signature `Lind/token/java/napalm/api/d;.a:()[B` @kind virtual;
  #L3d8b42.  v2:= temp @kind object;
  #L3d8b44.  call temp:= `b`(v0, v1, v2) @signature `Lind/token/java/napalm/a/a;.b:([B[B[B)[B` @kind static;
  #L3d8b4a.  v0:= temp @kind object;
  #L3d8b4c.  return v0 @kind object;
}
procedure `byte`[] `a`(`byte`[] v1 @kind object, `byte`[] v2 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([B[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8a28.  v0:= "SHA-512" @kind object;
  #L3d8a2c.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L3d8a32.  v0:= temp @kind object;
  #L3d8a34.  call `reset`(v0) @signature `Ljava/security/MessageDigest;.reset:()V` @kind virtual;
  #L3d8a3a.  if v2 == 0 then goto L3d8a44;
  #L3d8a3e.  call `update`(v0, v2) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3d8a44.  call temp:= `digest`(v0, v1) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L3d8a4a.  v1:= temp @kind object;
  #L3d8a4c.  return v1 @kind object;
  #L3d8a4e.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8a50.  v2:= new `ind.token.java.napalm.b.b`;
  #L3d8a54.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8a5a.  throw v2;
  catch `java.lang.Exception` @[L3d8a28..L3d8a34] goto L3d8a4e;
}
procedure `byte`[] `a`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([B[B[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8a7c.  v0:= 2I;
  #L3d8a7e.  call temp:= `a`(v2, v3, v0) @signature `Lind/token/java/napalm/a/a;.a:([B[BI)Ljavax/crypto/Cipher;` @kind static;
  #L3d8a84.  v2:= temp @kind object;
  #L3d8a86.  call temp:= `doFinal`(v2, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3d8a8c.  v1:= temp @kind object;
  #L3d8a8e.  return v1 @kind object;
  #L3d8a90.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8a92.  v2:= new `ind.token.java.napalm.b.b`;
  #L3d8a96.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8a9c.  throw v2;
  catch `java.lang.Exception` @[L3d8a7e..L3d8a8e] goto L3d8a90;
}
procedure `byte`[] `a`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lind/token/java/napalm/a/a;.a:([B[B[BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8ac0.  v0:= 2I;
  #L3d8ac2.  call temp:= `a`(v2, v3, v0, v4) @signature `Lind/token/java/napalm/a/a;.a:([B[BILjava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3d8ac8.  v2:= temp @kind object;
  #L3d8aca.  call temp:= `doFinal`(v2, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3d8ad0.  v1:= temp @kind object;
  #L3d8ad2.  return v1 @kind object;
  #L3d8ad4.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8ad6.  v2:= new `ind.token.java.napalm.b.a`;
  #L3d8ada.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/a;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8ae0.  throw v2;
  catch `java.lang.Exception` @[L3d8ac2..L3d8ad2] goto L3d8ad4;
}
procedure `byte`[] `b`(`java.lang.String` v0 @kind object) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;)[B` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d8d1c.  call temp:= `a`(v0) @signature `Lind/token/java/napalm/a/a;.a:(Ljava/lang/String;)[B` @kind static;
  #L3d8d22.  v0:= temp @kind object;
  #L3d8d24.  call temp:= `b`(v0) @signature `Lind/token/java/napalm/a/a;.b:([B)[B` @kind static;
  #L3d8d2a.  v0:= temp @kind object;
  #L3d8d2c.  return v0 @kind object;
}
procedure `byte`[] `b`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;Ljava/lang/String;)[B` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d8d40.  call temp:= `a`(v0, v1) @signature `Lind/token/java/napalm/a/a;.a:(Ljava/lang/String;Ljava/lang/String;)[B` @kind static;
  #L3d8d46.  v0:= temp @kind object;
  #L3d8d48.  call temp:= `b`(v0) @signature `Lind/token/java/napalm/a/a;.b:([B)[B` @kind static;
  #L3d8d4e.  v0:= temp @kind object;
  #L3d8d50.  return v0 @kind object;
}
procedure `byte`[] `b`(`byte`[] v3 @kind object) @signature `Lind/token/java/napalm/a/a;.b:([B)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d8c14.  v0:= 16I;
  #L3d8c18.  v1:= new `byte`[v0];
  #L3d8c1c.  v2:= 0I;
  #L3d8c1e.  call `arraycopy`(v3, v2, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d8c24.  return v1 @kind object;
}
procedure `byte`[] `b`(`byte`[] v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lind/token/java/napalm/a/a;.b:([BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3d8cc0.  call temp:= `b`(v3) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;)[B` @kind static;
  #L3d8cc6.  v0:= temp @kind object;
  #L3d8cc8.  call temp:= `b`(v3) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;)[B` @kind static;
  #L3d8cce.  v3:= temp @kind object;
  #L3d8cd0.  v1:= "AES/CBC/PKCS5Padding" @kind object;
  #L3d8cd4.  call temp:= `a`(v2, v0, v3, v1) @signature `Lind/token/java/napalm/a/a;.a:([B[B[BLjava/lang/String;)[B` @kind static;
  #L3d8cda.  v2:= temp @kind object;
  #L3d8cdc.  return v2 @kind object;
}
procedure `byte`[] `b`(`byte`[] v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `ind.token.java.napalm.api.d` v3 @kind object) @signature `Lind/token/java/napalm/a/a;.b:([BLjava/lang/String;Ljava/lang/String;Lind/token/java/napalm/api/d;)[B` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3d8cf0.  call temp:= `b`(v1, v2) @signature `Lind/token/java/napalm/a/a;.b:(Ljava/lang/String;Ljava/lang/String;)[B` @kind static;
  #L3d8cf6.  v1:= temp @kind object;
  #L3d8cf8.  call temp:= `a`(v3) @signature `Lind/token/java/napalm/api/d;.a:()[B` @kind virtual;
  #L3d8cfe.  v2:= temp @kind object;
  #L3d8d00.  call temp:= `a`(v0, v1, v2) @signature `Lind/token/java/napalm/a/a;.a:([B[B[B)[B` @kind static;
  #L3d8d06.  v0:= temp @kind object;
  #L3d8d08.  return v0 @kind object;
}
procedure `byte`[] `b`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object) @signature `Lind/token/java/napalm/a/a;.b:([B[B[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8c38.  v0:= 1I;
  #L3d8c3a.  call temp:= `a`(v2, v3, v0) @signature `Lind/token/java/napalm/a/a;.a:([B[BI)Ljavax/crypto/Cipher;` @kind static;
  #L3d8c40.  v2:= temp @kind object;
  #L3d8c42.  call temp:= `doFinal`(v2, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3d8c48.  v1:= temp @kind object;
  #L3d8c4a.  return v1 @kind object;
  #L3d8c4c.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8c4e.  v2:= new `ind.token.java.napalm.b.a`;
  #L3d8c52.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/a;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8c58.  throw v2;
  catch `java.lang.Exception` @[L3d8c3a..L3d8c4a] goto L3d8c4c;
}
procedure `byte`[] `b`(`byte`[] v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lind/token/java/napalm/a/a;.b:([B[B[BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d8c7c.  v0:= 1I;
  #L3d8c7e.  call temp:= `a`(v2, v3, v0, v4) @signature `Lind/token/java/napalm/a/a;.a:([B[BILjava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3d8c84.  v2:= temp @kind object;
  #L3d8c86.  call temp:= `doFinal`(v2, v1) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3d8c8c.  v1:= temp @kind object;
  #L3d8c8e.  return v1 @kind object;
  #L3d8c90.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8c92.  v2:= new `ind.token.java.napalm.b.b`;
  #L3d8c96.  call `<init>`(v2, v1) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d8c9c.  throw v2;
  catch `java.lang.Exception` @[L3d8c7e..L3d8c8e] goto L3d8c90;
}
