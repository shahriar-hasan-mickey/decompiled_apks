record `ind.token.java.napalm.api.AbstractCodeGenerator` @kind class @AccessFlag PUBLIC_ABSTRACT extends `ind.token.java.napalm.api.c` @kind interface {
  `ind.token.java.napalm.api.d` `ind.token.java.napalm.api.AbstractCodeGenerator.b` @AccessFlag PRIVATE;
}
global `org.d.b` `@@ind.token.java.napalm.api.AbstractCodeGenerator.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d9248.  v0:= constclass @type ^`ind.token.java.napalm.dummy.a` @kind object;
  #L3d924c.  call temp:= `a`(v0) @signature `Lorg/d/c;.a:(Ljava/lang/Class;)Lorg/d/b;` @kind static;
  #L3d9252.  v0:= temp @kind object;
  #L3d9254.  `@@ind.token.java.napalm.api.AbstractCodeGenerator.a` @type ^`org.d.b` := v0 @kind object;
  #L3d9258.  return @kind void;
}
procedure `void` `<init>`(`ind.token.java.napalm.api.AbstractCodeGenerator` v1 @kind this) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d926c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d9272.  v0:= 0I;
  #L3d9274.  v1.`ind.token.java.napalm.api.AbstractCodeGenerator.b` @type ^`ind.token.java.napalm.api.d` := v0 @kind object;
  #L3d9278.  return @kind void;
}
procedure `ind.token.java.napalm.api.AbstractCodeGenerator` `a`(`java.lang.String` v3 @kind object) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:(Ljava/lang/String;)Lind/token/java/napalm/api/AbstractCodeGenerator;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d9110.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d9116.  v0:= temp @kind object;
  #L3d9118.  call temp:= `getContextClassLoader`(v0) @signature `Ljava/lang/Thread;.getContextClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3d911e.  v0:= temp @kind object;
  #L3d9120.  v1:= new `java.lang.StringBuilder`;
  #L3d9124.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d912a.  v2:= "ind.token.java.napalm." @kind object;
  #L3d912e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9134.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d913a.  v3:= ".CodeGenerator" @kind object;
  #L3d913e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9144.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d914a.  v3:= temp @kind object;
  #L3d914c.  call temp:= `loadClass`(v0, v3) @signature `Ljava/lang/ClassLoader;.loadClass:(Ljava/lang/String;)Ljava/lang/Class;` @kind virtual;
  #L3d9152.  v3:= temp @kind object;
  #L3d9154.  v0:= new `java.lang.StringBuilder`;
  #L3d9158.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d915e.  v1:= "Loading " @kind object;
  #L3d9162.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9168.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3d916e.  v1:= temp @kind object;
  #L3d9170.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9176.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d917c.  call temp:= `newInstance`(v3) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L3d9182.  v3:= temp @kind object;
  #L3d9184.  v3:= (`ind.token.java.napalm.api.AbstractCodeGenerator`) v3 @kind object;
  #L3d9188.  return v3 @kind object;
  #L3d918a.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d918c.  v0:= new `ind.token.java.napalm.b.b`;
  #L3d9190.  call `<init>`(v0, v3) @signature `Lind/token/java/napalm/b/b;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d9196.  throw v0;
  catch `java.lang.Exception` @[L3d9110..L3d9188] goto L3d918a;
}
procedure `ind.token.java.napalm.api.d` `a`(`ind.token.java.napalm.api.AbstractCodeGenerator` v1 @kind this) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:()Lind/token/java/napalm/api/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d91b8.  v0:= v1.`ind.token.java.napalm.api.AbstractCodeGenerator.b` @type ^`ind.token.java.napalm.api.d` @kind object;
  #L3d91bc.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`ind.token.java.napalm.api.AbstractCodeGenerator` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:([Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d91d0.  v0:= new `java.lang.StringBuilder`;
  #L3d91d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d91da.  v1:= length @variable v5;
  #L3d91dc.  v2:= 0I;
  #L3d91de.  if v2 >= v1 then goto L3d91f2;
  #L3d91e2.  v3:= v5[v2] @kind object;
  #L3d91e6.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d91ec.  v2:= v2 + 1;
  #L3d91f0.  goto L3d91de;
  #L3d91f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d91f8.  v5:= temp @kind object;
  #L3d91fa.  return v5 @kind object;
}
procedure `void` `a`(`ind.token.java.napalm.api.AbstractCodeGenerator` v0 @kind this, `ind.token.java.napalm.api.d` v1 @kind object) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:(Lind/token/java/napalm/api/d;)V` @AccessFlag PUBLIC {
    temp;

  #L3d928c.  v0.`ind.token.java.napalm.api.AbstractCodeGenerator.b` @type ^`ind.token.java.napalm.api.d` := v1 @kind object;
  #L3d9290.  return @kind void;
}
procedure `java.lang.String` `b`(`ind.token.java.napalm.api.AbstractCodeGenerator` v4 @kind this, `java.lang.String`[] v5 @kind object) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.b:([Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d920c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L3d9212.  v0:= temp @kind wide;
  #L3d9214.  call temp:= `a`(v4) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:()Lind/token/java/napalm/api/d;` @kind virtual;
  #L3d921a.  v2:= temp @kind object;
  #L3d921c.  call temp:= `c`(v2) @signature `Lind/token/java/napalm/api/d;.c:()I` @kind virtual;
  #L3d9222.  v2:= temp;
  #L3d9224.  v2:= v2 * 1000;
  #L3d9228.  v2:= (`long`) v2 @kind i2l;
  #L3d922a.  v0:= v0 / v2 @kind long;
  #L3d922c.  call temp:= `a`(v4, v0, v5) @signature `Lind/token/java/napalm/api/AbstractCodeGenerator;.a:(J[Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3d9232.  v5:= temp @kind object;
  #L3d9234.  return v5 @kind object;
}
