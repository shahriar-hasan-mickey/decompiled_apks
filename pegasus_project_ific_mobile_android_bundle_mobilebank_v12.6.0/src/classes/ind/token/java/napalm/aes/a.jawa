record `ind.token.java.napalm.aes.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `org.d.b` `@@ind.token.java.napalm.aes.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@ind.token.java.napalm.aes.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@ind.token.java.napalm.aes.a.c` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lind/token/java/napalm/aes/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d906c.  v0:= constclass @type ^`ind.token.java.napalm.dummy.a` @kind object;
  #L3d9070.  call temp:= `a`(v0) @signature `Lorg/d/c;.a:(Ljava/lang/Class;)Lorg/d/b;` @kind static;
  #L3d9076.  v0:= temp @kind object;
  #L3d9078.  `@@ind.token.java.napalm.aes.a.a` @type ^`org.d.b` := v0 @kind object;
  #L3d907c.  v0:= 10I;
  #L3d9080.  v0:= new `int`[v0];
  #L3d9084.  goto L3d90a4;
  #L3d908a.  `@@ind.token.java.napalm.aes.a.b` @type ^`int`[] := v0 @kind object;
  #L3d908e.  v0:= 9I;
  #L3d9092.  v0:= new `int`[v0];
  #L3d9096.  goto L3d90d4;
  #L3d909c.  `@@ind.token.java.napalm.aes.a.c` @type ^`int`[] := v0 @kind object;
  #L3d90a0.  return @kind void;
  #L3d90a2.  
  #L3d90a4.  v0:= (0I, 2I, 4I, 6I, 8I, 1I, 3I, 5I, 7I, 9I) @kind object;
  #L3d90d3.  goto L3d908a;
  #L3d90d4.  v0:= (1I, 10I, 100I, 1000I, 10000I, 100000I, 1000000I, 10000000I, 100000000I) @kind object;
  #L3d90ff.  goto L3d909c;
}
procedure `int` `a`(`long` v7 , `int` v9 ) @signature `Lind/token/java/napalm/aes/a;.a:(JI)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d8ed0.  v0:= 1I;
  #L3d8ed2.  v1:= 0I;
  #L3d8ed4.  v2:= v9 + -1;
  #L3d8ed8.  if v9 <= 0 then goto L3d8efe;
  #L3d8edc.  v3:= 10L;
  #L3d8ee0.  v5:= v7 %% v3 @kind long;
  #L3d8ee4.  v9:= (`int`) v5 @kind l2i;
  #L3d8ee6.  v7:= v7 / v3 @kind long;
  #L3d8ee8.  if v0 == 0 then goto L3d8ef4;
  #L3d8eec.  v3:= `@@ind.token.java.napalm.aes.a.b` @type ^`int`[] @kind object;
  #L3d8ef0.  v9:= v3[v9];
  #L3d8ef4.  v1:= v1 + v9 @kind int;
  #L3d8ef6.  v0:= v0 ^~ 1;
  #L3d8efa.  v9:= v2;
  #L3d8efc.  goto L3d8ed4;
  #L3d8efe.  v1:= v1 %% 10;
  #L3d8f02.  if v1 <= 0 then goto L3d8f0a;
  #L3d8f06.  v1:= v1 - 10;
  #L3d8f0a.  return v1;
}
procedure `java.lang.String` `a`(`java.lang.String` v8 @kind object, `byte`[] v9 @kind object, `long` v10 , `java.lang.String` v12 @kind object, `int` v13 , `boolean` v14 , `int` v15 ) @signature `Lind/token/java/napalm/aes/a;.a:(Ljava/lang/String;[BJLjava/lang/String;IZI)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d8f1c.  if v14 == 0 then goto L3d8f26;
  #L3d8f20.  v0:= v13 + 1;
  #L3d8f24.  goto L3d8f28;
  #L3d8f26.  v0:= v13;
  #L3d8f28.  v1:= 8I;
  #L3d8f2c.  v2:= new `byte`[v1];
  #L3d8f30.  v3:= length @variable v2;
  #L3d8f32.  v3:= v3 + -1;
  #L3d8f36.  if v3 < 0 then goto L3d8f52;
  #L3d8f3a.  v4:= 255L;
  #L3d8f3e.  v6:= v10 ^& v4 @kind long;
  #L3d8f42.  v4:= (`int`) v6 @kind l2i;
  #L3d8f44.  v4:= (`byte`) v4 @kind i2b;
  #L3d8f46.  v2[v3]:= v4 @kind byte;
  #L3d8f4a.  v10:= v10 ^> v1 @kind long;
  #L3d8f4c.  v3:= v3 + -1;
  #L3d8f50.  goto L3d8f36;
  #L3d8f52.  v10:= length @variable v2;
  #L3d8f54.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d8f5a.  v11:= temp;
  #L3d8f5c.  v10:= v10 + v11 @kind int;
  #L3d8f5e.  v10:= new `byte`[v10];
  #L3d8f62.  v11:= length @variable v2;
  #L3d8f64.  v3:= 0I;
  #L3d8f66.  call `arraycopy`(v2, v3, v10, v3, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d8f6c.  v11:= "ISO-8859-1" @kind object;
  #L3d8f70.  call temp:= `getBytes`(v12, v11) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3d8f76.  v11:= temp @kind object;
  #L3d8f78.  v2:= length @variable v2;
  #L3d8f7a.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3d8f80.  v12:= temp;
  #L3d8f82.  call `arraycopy`(v11, v3, v10, v2, v12) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d8f88.  call temp:= `a`(v8, v9, v10) @signature `Lind/token/java/napalm/aes/a;.a:(Ljava/lang/String;[B[B)[B` @kind static;
  #L3d8f8e.  v8:= temp @kind object;
  #L3d8f90.  v9:= length @variable v8;
  #L3d8f92.  v9:= v9 + -1;
  #L3d8f96.  v9:= v8[v9] @kind byte;
  #L3d8f9a.  v9:= v9 ^& 15;
  #L3d8f9e.  if v15 < 0 then goto L3d8fae;
  #L3d8fa2.  v10:= length @variable v8;
  #L3d8fa4.  v10:= v10 + -4;
  #L3d8fa8.  if v15 >= v10 then goto L3d8fae;
  #L3d8fac.  v9:= v15;
  #L3d8fae.  v10:= v8[v9] @kind byte;
  #L3d8fb2.  v10:= v10 ^& 127;
  #L3d8fb6.  v10:= v10 ^< 24;
  #L3d8fba.  v11:= v9 + 1;
  #L3d8fbe.  v11:= v8[v11] @kind byte;
  #L3d8fc2.  v11:= v11 ^& 255;
  #L3d8fc6.  v11:= v11 ^< 16;
  #L3d8fca.  v10:= v10 ^| v11 @kind int;
  #L3d8fcc.  v11:= v9 + 2;
  #L3d8fd0.  v11:= v8[v11] @kind byte;
  #L3d8fd4.  v11:= v11 ^& 255;
  #L3d8fd8.  v11:= v11 ^< v1 @kind int;
  #L3d8fda.  v9:= v9 + 3;
  #L3d8fde.  v8:= v8[v9] @kind byte;
  #L3d8fe2.  v8:= v8 ^& 255;
  #L3d8fe6.  v8:= v8 ^| v11 @kind int;
  #L3d8fe8.  v8:= v8 ^| v10 @kind int;
  #L3d8fea.  v9:= `@@ind.token.java.napalm.aes.a.c` @type ^`int`[] @kind object;
  #L3d8fee.  v9:= v9[v13];
  #L3d8ff2.  v8:= v8 %% v9 @kind int;
  #L3d8ff4.  if v14 == 0 then goto L3d9008;
  #L3d8ff8.  v9:= v8 * 10;
  #L3d8ffc.  v10:= (`long`) v8 @kind i2l;
  #L3d8ffe.  call temp:= `a`(v10, v13) @signature `Lind/token/java/napalm/aes/a;.a:(JI)I` @kind static;
  #L3d9004.  v8:= temp;
  #L3d9006.  v8:= v8 + v9 @kind int;
  #L3d9008.  v9:= new `java.lang.StringBuilder`;
  #L3d900c.  call temp:= `toString`(v8) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3d9012.  v8:= temp @kind object;
  #L3d9014.  call `<init>`(v9, v8) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d901a.  call temp:= `length`(v9) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d9020.  v8:= temp;
  #L3d9022.  if v8 >= v0 then goto L3d9032;
  #L3d9026.  v8:= "0" @kind object;
  #L3d902a.  call temp:= `insert`(v9, v3, v8) @signature `Ljava/lang/StringBuilder;.insert:(ILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9030.  goto L3d901a;
  #L3d9032.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d9038.  v8:= temp @kind object;
  #L3d903a.  return v8 @kind object;
  #L3d903c.  v8:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3d903e.  v9:= new `ind.token.java.napalm.b.a`;
  #L3d9042.  call `<init>`(v9, v8) @signature `Lind/token/java/napalm/b/a;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3d9048.  throw v9;
  catch `java.io.UnsupportedEncodingException` @[L3d8f6c..L3d8f88] goto L3d903c;
}
procedure `byte`[] `a`(`java.lang.String` v3 @kind object, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lind/token/java/napalm/aes/a;.a:(Ljava/lang/String;[B[B)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d8e60.  v3:= 16I;
  #L3d8e64.  v0:= new `byte`[v3];
  #L3d8e68.  call temp:= `a`(v4) @signature `Lind/token/java/napalm/a/a;.a:([B)[B` @kind static;
  #L3d8e6e.  v4:= temp @kind object;
  #L3d8e70.  v1:= 0I;
  #L3d8e72.  call `arraycopy`(v4, v1, v0, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3d8e78.  v3:= "AES/ECB/PKCS5Padding" @kind object;
  #L3d8e7c.  call temp:= `getInstance`(v3) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L3d8e82.  v3:= temp @kind object;
  #L3d8e84.  v4:= 1I;
  #L3d8e86.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L3d8e8a.  v2:= "AES" @kind object;
  #L3d8e8e.  call `<init>`(v1, v0, v2) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3d8e94.  call `init`(v3, v4, v1) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L3d8e9a.  call temp:= `doFinal`(v3, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([B)[B` @kind virtual;
  #L3d8ea0.  v3:= temp @kind object;
  #L3d8ea2.  goto L3d8eae;
  #L3d8ea4.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d8ea6.  call temp:= `getLocalizedMessage`(v3) @signature `Ljava/lang/Exception;.getLocalizedMessage:()Ljava/lang/String;` @kind virtual;
  #L3d8eac.  v3:= 0I;
  #L3d8eae.  return v3 @kind object;
  catch `java.lang.Exception` @[L3d8e64..L3d8ea2] goto L3d8ea4;
}
