record `com.b.a.c$2` @kind class @AccessFlag FINAL extends `com.b.a.aa` @kind class {
}
procedure `void` `<init>`(`com.b.a.c$2` v0 @kind this) @signature `Lcom/b/a/c$2;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L28f4a0.  call `<init>`(v0) @signature `Lcom/b/a/aa;.<init>:()V` @kind direct;
  #L28f4a6.  return @kind void;
}
procedure `com.b.a.aa$a` `a`(`com.b.a.c$2` v2 @kind this, `com.b.a.y` v3 @kind object, `int` v4 ) @signature `Lcom/b/a/c$2;.a:(Lcom/b/a/y;I)Lcom/b/a/aa$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28f460.  v4:= new `java.lang.IllegalStateException`;
  #L28f464.  v0:= new `java.lang.StringBuilder`;
  #L28f468.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28f46e.  v1:= "Unrecognized type of request: " @kind object;
  #L28f472.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28f478.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28f47e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28f484.  v3:= temp @kind object;
  #L28f486.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28f48c.  throw v4;
}
procedure `boolean` `a`(`com.b.a.c$2` v0 @kind this, `com.b.a.y` v1 @kind object) @signature `Lcom/b/a/c$2;.a:(Lcom/b/a/y;)Z` @AccessFlag PUBLIC {
    temp;

  #L28f44c.  v1:= 1I;
  #L28f44e.  return v1;
}
