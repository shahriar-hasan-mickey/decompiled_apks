record `com.b.a.w$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.FutureTask` @kind class, `java.lang.Comparable` @kind interface {
  `com.b.a.c` `com.b.a.w$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.b.a.w$a` v1 @kind this, `com.b.a.c` v2 @kind object) @signature `Lcom/b/a/w$a;.<init>:(Lcom/b/a/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L293bb0.  v0:= 0I;
  #L293bb2.  call `<init>`(v1, v2, v0) @signature `Ljava/util/concurrent/FutureTask;.<init>:(Ljava/lang/Runnable;Ljava/lang/Object;)V` @kind direct;
  #L293bb8.  v1.`com.b.a.w$a.a` @type ^`com.b.a.c` := v2 @kind object;
  #L293bbc.  return @kind void;
}
procedure `int` `a`(`com.b.a.w$a` v2 @kind this, `com.b.a.w$a` v3 @kind object) @signature `Lcom/b/a/w$a;.a:(Lcom/b/a/w$a;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L293b38.  v0:= v2.`com.b.a.w$a.a` @type ^`com.b.a.c` @kind object;
  #L293b3c.  call temp:= `n`(v0) @signature `Lcom/b/a/c;.n:()Lcom/b/a/u$e;` @kind virtual;
  #L293b42.  v0:= temp @kind object;
  #L293b44.  v1:= v3.`com.b.a.w$a.a` @type ^`com.b.a.c` @kind object;
  #L293b48.  call temp:= `n`(v1) @signature `Lcom/b/a/c;.n:()Lcom/b/a/u$e;` @kind virtual;
  #L293b4e.  v1:= temp @kind object;
  #L293b50.  if v0 != v1 then goto L293b68;
  #L293b54.  v0:= v2.`com.b.a.w$a.a` @type ^`com.b.a.c` @kind object;
  #L293b58.  v0:= v0.`com.b.a.c.a` @type ^`int`;
  #L293b5c.  v3:= v3.`com.b.a.w$a.a` @type ^`com.b.a.c` @kind object;
  #L293b60.  v3:= v3.`com.b.a.c.a` @type ^`int`;
  #L293b64.  v0:= v0 - v3 @kind int;
  #L293b66.  goto L293b7c;
  #L293b68.  call temp:= `ordinal`(v1) @signature `Lcom/b/a/u$e;.ordinal:()I` @kind virtual;
  #L293b6e.  v3:= temp;
  #L293b70.  call temp:= `ordinal`(v0) @signature `Lcom/b/a/u$e;.ordinal:()I` @kind virtual;
  #L293b76.  v0:= temp;
  #L293b78.  v0:= v3 - v0 @kind int;
  #L293b7c.  return v0;
}
procedure `int` `compareTo`(`com.b.a.w$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/b/a/w$a;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L293b90.  v1:= (`com.b.a.w$a`) v1 @kind object;
  #L293b94.  call temp:= `a`(v0, v1) @signature `Lcom/b/a/w$a;.a:(Lcom/b/a/w$a;)I` @kind virtual;
  #L293b9a.  v1:= temp;
  #L293b9c.  return v1;
}
