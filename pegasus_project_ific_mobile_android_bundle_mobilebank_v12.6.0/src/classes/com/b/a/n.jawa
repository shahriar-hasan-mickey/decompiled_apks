record `com.b.a.n` @kind class @AccessFlag PUBLIC extends `com.b.a.d` @kind interface {
  `java.util.LinkedHashMap` `com.b.a.n.b` @AccessFlag FINAL;
  `int` `com.b.a.n.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.b.a.n.d` @AccessFlag PRIVATE;
  `int` `com.b.a.n.e` @AccessFlag PRIVATE;
  `int` `com.b.a.n.f` @AccessFlag PRIVATE;
  `int` `com.b.a.n.g` @AccessFlag PRIVATE;
  `int` `com.b.a.n.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.n` v3 @kind this, `int` v4 ) @signature `Lcom/b/a/n;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L291ac8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L291ace.  if v4 > 0 then goto L291ae2;
  #L291ad2.  v4:= new `java.lang.IllegalArgumentException`;
  #L291ad6.  v0:= "Max size must be positive." @kind object;
  #L291ada.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L291ae0.  throw v4;
  #L291ae2.  v3.`com.b.a.n.c` @type ^`int` := v4;
  #L291ae6.  v4:= new `java.util.LinkedHashMap`;
  #L291aea.  v0:= 0I;
  #L291aec.  v1:= 0.75F;
  #L291af0.  v2:= 1I;
  #L291af2.  call `<init>`(v4, v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L291af8.  v3.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L291afc.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.n` v0 @kind this, `android.content.Context` v1 @kind object) @signature `Lcom/b/a/n;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L291aa8.  call temp:= `c`(v1) @signature `Lcom/b/a/ai;.c:(Landroid/content/Context;)I` @kind static;
  #L291aae.  v1:= temp;
  #L291ab0.  call `<init>`(v0, v1) @signature `Lcom/b/a/n;.<init>:(I)V` @kind direct;
  #L291ab6.  return @kind void;
}
procedure `void` `a`(`com.b.a.n` v3 @kind this, `int` v4 ) @signature `Lcom/b/a/n;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L291b10.  @monitorenter v3
  #L291b12.  v0:= v3.`com.b.a.n.d` @type ^`int`;
  #L291b16.  if v0 < 0 then goto L291bb6;
  #L291b1a.  v0:= v3.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291b1e.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L291b24.  v0:= temp;
  #L291b26.  if v0 == 0 then goto L291b34;
  #L291b2a.  v0:= v3.`com.b.a.n.d` @type ^`int`;
  #L291b2e.  if v0 == 0 then goto L291b34;
  #L291b32.  goto L291bb6;
  #L291b34.  v0:= v3.`com.b.a.n.d` @type ^`int`;
  #L291b38.  if v0 <= v4 then goto L291bb2;
  #L291b3c.  v0:= v3.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291b40.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L291b46.  v0:= temp;
  #L291b48.  if v0 == 0 then goto L291b4e;
  #L291b4c.  goto L291bb2;
  #L291b4e.  v0:= v3.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291b52.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L291b58.  v0:= temp @kind object;
  #L291b5a.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L291b60.  v0:= temp @kind object;
  #L291b62.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L291b68.  v0:= temp @kind object;
  #L291b6a.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L291b6e.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L291b74.  v1:= temp @kind object;
  #L291b76.  v1:= (`java.lang.String`) v1 @kind object;
  #L291b7a.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L291b80.  v0:= temp @kind object;
  #L291b82.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L291b86.  v2:= v3.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291b8a.  call temp:= `remove`(v2, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L291b90.  v1:= v3.`com.b.a.n.d` @type ^`int`;
  #L291b94.  call temp:= `a`(v0) @signature `Lcom/b/a/ai;.a:(Landroid/graphics/Bitmap;)I` @kind static;
  #L291b9a.  v0:= temp;
  #L291b9c.  v1:= v1 - v0 @kind int;
  #L291b9e.  v3.`com.b.a.n.d` @type ^`int` := v1;
  #L291ba2.  v0:= v3.`com.b.a.n.f` @type ^`int`;
  #L291ba6.  v0:= v0 + 1;
  #L291baa.  v3.`com.b.a.n.f` @type ^`int` := v0;
  #L291bae.  @monitorexit v3
  #L291bb0.  goto L291b10;
  #L291bb2.  @monitorexit v3
  #L291bb4.  return @kind void;
  #L291bb6.  v4:= new `java.lang.IllegalStateException`;
  #L291bba.  v0:= new `java.lang.StringBuilder`;
  #L291bbe.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L291bc4.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L291bca.  v1:= temp @kind object;
  #L291bcc.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L291bd2.  v1:= temp @kind object;
  #L291bd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291bda.  v1:= ".sizeOf() is reporting inconsistent results!" @kind object;
  #L291bde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L291be4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L291bea.  v0:= temp @kind object;
  #L291bec.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L291bf2.  throw v4;
  #L291bf4.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291bf6.  @monitorexit v3
  #L291bf8.  throw v4;
  catch `java.lang.Throwable` @[L291b12..L291bf8] goto L291bf4;
}
procedure `int` `a`(`com.b.a.n` v1 @kind this) @signature `Lcom/b/a/n;.a:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L291a50.  @monitorenter v1
  #L291a52.  v0:= v1.`com.b.a.n.d` @type ^`int`;
  #L291a56.  @monitorexit v1
  #L291a58.  return v0;
  #L291a5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291a5c.  @monitorexit v1
  #L291a5e.  throw v0;
  catch `java.lang.Throwable` @[L291a52..L291a56] goto L291a5a;
}
procedure `android.graphics.Bitmap` `a`(`com.b.a.n` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/b/a/n;.a:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2919e0.  if v2 != 0 then goto L2919f4;
  #L2919e4.  v2:= new `java.lang.NullPointerException`;
  #L2919e8.  v0:= "key == null" @kind object;
  #L2919ec.  call `<init>`(v2, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2919f2.  throw v2;
  #L2919f4.  @monitorenter v1
  #L2919f6.  v0:= v1.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L2919fa.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L291a00.  v2:= temp @kind object;
  #L291a02.  v2:= (`android.graphics.Bitmap`) v2 @kind object;
  #L291a06.  if v2 == 0 then goto L291a1a;
  #L291a0a.  v0:= v1.`com.b.a.n.g` @type ^`int`;
  #L291a0e.  v0:= v0 + 1;
  #L291a12.  v1.`com.b.a.n.g` @type ^`int` := v0;
  #L291a16.  @monitorexit v1
  #L291a18.  return v2 @kind object;
  #L291a1a.  v2:= v1.`com.b.a.n.h` @type ^`int`;
  #L291a1e.  v2:= v2 + 1;
  #L291a22.  v1.`com.b.a.n.h` @type ^`int` := v2;
  #L291a26.  @monitorexit v1
  #L291a28.  v2:= 0I;
  #L291a2a.  return v2 @kind object;
  #L291a2c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291a2e.  @monitorexit v1
  #L291a30.  throw v2;
  catch `java.lang.Throwable` @[L2919f6..L291a30] goto L291a2c;
}
procedure `void` `a`(`com.b.a.n` v2 @kind this, `java.lang.String` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/b/a/n;.a:(Ljava/lang/String;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L291c18.  if v3 == 0 then goto L291c7c;
  #L291c1c.  if v4 != 0 then goto L291c22;
  #L291c20.  goto L291c7c;
  #L291c22.  @monitorenter v2
  #L291c24.  v0:= v2.`com.b.a.n.e` @type ^`int`;
  #L291c28.  v0:= v0 + 1;
  #L291c2c.  v2.`com.b.a.n.e` @type ^`int` := v0;
  #L291c30.  v0:= v2.`com.b.a.n.d` @type ^`int`;
  #L291c34.  call temp:= `a`(v4) @signature `Lcom/b/a/ai;.a:(Landroid/graphics/Bitmap;)I` @kind static;
  #L291c3a.  v1:= temp;
  #L291c3c.  v0:= v0 + v1 @kind int;
  #L291c3e.  v2.`com.b.a.n.d` @type ^`int` := v0;
  #L291c42.  v0:= v2.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291c46.  call temp:= `put`(v0, v3, v4) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L291c4c.  v3:= temp @kind object;
  #L291c4e.  v3:= (`android.graphics.Bitmap`) v3 @kind object;
  #L291c52.  if v3 == 0 then goto L291c68;
  #L291c56.  v4:= v2.`com.b.a.n.d` @type ^`int`;
  #L291c5a.  call temp:= `a`(v3) @signature `Lcom/b/a/ai;.a:(Landroid/graphics/Bitmap;)I` @kind static;
  #L291c60.  v3:= temp;
  #L291c62.  v4:= v4 - v3 @kind int;
  #L291c64.  v2.`com.b.a.n.d` @type ^`int` := v4;
  #L291c68.  @monitorexit v2
  #L291c6a.  v3:= v2.`com.b.a.n.c` @type ^`int`;
  #L291c6e.  call `a`(v2, v3) @signature `Lcom/b/a/n;.a:(I)V` @kind direct;
  #L291c74.  return @kind void;
  #L291c76.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291c78.  @monitorexit v2
  #L291c7a.  throw v3;
  #L291c7c.  v3:= new `java.lang.NullPointerException`;
  #L291c80.  v4:= "key == null || bitmap == null" @kind object;
  #L291c84.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L291c8a.  throw v3;
  catch `java.lang.Throwable` @[L291c24..L291c6a] goto L291c76;
  catch `java.lang.Throwable` @[L291c78..L291c7a] goto L291c76;
}
procedure `int` `b`(`com.b.a.n` v1 @kind this) @signature `Lcom/b/a/n;.b:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L291a7c.  @monitorenter v1
  #L291a7e.  v0:= v1.`com.b.a.n.c` @type ^`int`;
  #L291a82.  @monitorexit v1
  #L291a84.  return v0;
  #L291a86.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291a88.  @monitorexit v1
  #L291a8a.  throw v0;
  catch `java.lang.Throwable` @[L291a7e..L291a82] goto L291a86;
}
procedure `void` `b`(`com.b.a.n` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lcom/b/a/n;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L291cb0.  @monitorenter v7
  #L291cb2.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L291cb8.  v0:= temp;
  #L291cba.  v1:= v7.`com.b.a.n.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L291cbe.  call temp:= `entrySet`(v1) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L291cc4.  v1:= temp @kind object;
  #L291cc6.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L291ccc.  v1:= temp @kind object;
  #L291cce.  v2:= 0I;
  #L291cd0.  v3:= 0I;
  #L291cd2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L291cd8.  v4:= temp;
  #L291cda.  if v4 == 0 then goto L291d42;
  #L291cde.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L291ce4.  v4:= temp @kind object;
  #L291ce6.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L291cea.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L291cf0.  v5:= temp @kind object;
  #L291cf2.  v5:= (`java.lang.String`) v5 @kind object;
  #L291cf6.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L291cfc.  v4:= temp @kind object;
  #L291cfe.  v4:= (`android.graphics.Bitmap`) v4 @kind object;
  #L291d02.  v6:= 10I;
  #L291d06.  call temp:= `indexOf`(v5, v6) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L291d0c.  v6:= temp;
  #L291d0e.  if v6 != v0 then goto L291cd2;
  #L291d12.  call temp:= `substring`(v5, v2, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L291d18.  v5:= temp @kind object;
  #L291d1a.  call temp:= `equals`(v5, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L291d20.  v5:= temp;
  #L291d22.  if v5 == 0 then goto L291cd2;
  #L291d26.  call `remove`(v1) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L291d2c.  v3:= v7.`com.b.a.n.d` @type ^`int`;
  #L291d30.  call temp:= `a`(v4) @signature `Lcom/b/a/ai;.a:(Landroid/graphics/Bitmap;)I` @kind static;
  #L291d36.  v4:= temp;
  #L291d38.  v3:= v3 - v4 @kind int;
  #L291d3a.  v7.`com.b.a.n.d` @type ^`int` := v3;
  #L291d3e.  v3:= 1I;
  #L291d40.  goto L291cd2;
  #L291d42.  if v3 == 0 then goto L291d50;
  #L291d46.  v8:= v7.`com.b.a.n.c` @type ^`int`;
  #L291d4a.  call `a`(v7, v8) @signature `Lcom/b/a/n;.a:(I)V` @kind direct;
  #L291d50.  @monitorexit v7
  #L291d52.  return @kind void;
  #L291d54.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291d56.  @monitorexit v7
  #L291d58.  throw v8;
  catch `java.lang.Throwable` @[L291cb2..L291d50] goto L291d54;
}
procedure `void` `c`(`com.b.a.n` v1 @kind this) @signature `Lcom/b/a/n;.c:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L291d78.  v0:= -1I;
  #L291d7a.  call `a`(v1, v0) @signature `Lcom/b/a/n;.a:(I)V` @kind direct;
  #L291d80.  return @kind void;
}
procedure `void` `d`(`com.b.a.n` v1 @kind this) @signature `Lcom/b/a/n;.d:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L291d94.  @monitorenter v1
  #L291d96.  call `c`(v1) @signature `Lcom/b/a/n;.c:()V` @kind virtual;
  #L291d9c.  @monitorexit v1
  #L291d9e.  return @kind void;
  #L291da0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L291da2.  @monitorexit v1
  #L291da4.  throw v0;
  catch `java.lang.Throwable` @[L291d96..L291d9c] goto L291da0;
}
