record `com.b.a.q` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `com.b.a.q.c` @AccessFlag FINAL;
}
global `com.b.a.q` `@@com.b.a.q.a` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.q` `@@com.b.a.q.b` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.b.a.q`[] `@@com.b.a.q.d` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lcom/b/a/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L292674.  v0:= new `com.b.a.q`;
  #L292678.  v1:= "NO_CACHE" @kind object;
  #L29267c.  v2:= 0I;
  #L29267e.  v3:= 1I;
  #L292680.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L292686.  `@@com.b.a.q.a` @type ^`com.b.a.q` := v0 @kind object;
  #L29268a.  v0:= new `com.b.a.q`;
  #L29268e.  v1:= "NO_STORE" @kind object;
  #L292692.  v4:= 2I;
  #L292694.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L29269a.  `@@com.b.a.q.b` @type ^`com.b.a.q` := v0 @kind object;
  #L29269e.  v0:= new `com.b.a.q`[v4];
  #L2926a2.  v1:= `@@com.b.a.q.a` @type ^`com.b.a.q` @kind object;
  #L2926a6.  v0[v2]:= v1 @kind object;
  #L2926aa.  v1:= `@@com.b.a.q.b` @type ^`com.b.a.q` @kind object;
  #L2926ae.  v0[v3]:= v1 @kind object;
  #L2926b2.  `@@com.b.a.q.d` @type ^`com.b.a.q`[] := v0 @kind object;
  #L2926b6.  return @kind void;
}
procedure `void` `<init>`(`com.b.a.q` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/b/a/q;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2926c8.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2926ce.  v0.`com.b.a.q.c` @type ^`int` := v3;
  #L2926d2.  return @kind void;
}
procedure `boolean` `a`(`int` v1 ) @signature `Lcom/b/a/q;.a:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2925dc.  v0:= `@@com.b.a.q.a` @type ^`com.b.a.q` @kind object;
  #L2925e0.  v0:= v0.`com.b.a.q.c` @type ^`int`;
  #L2925e4.  v1:= v1 ^& v0 @kind int;
  #L2925e6.  if v1 != 0 then goto L2925ee;
  #L2925ea.  v1:= 1I;
  #L2925ec.  goto L2925f0;
  #L2925ee.  v1:= 0I;
  #L2925f0.  return v1;
}
procedure `boolean` `b`(`int` v1 ) @signature `Lcom/b/a/q;.b:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L292604.  v0:= `@@com.b.a.q.b` @type ^`com.b.a.q` @kind object;
  #L292608.  v0:= v0.`com.b.a.q.c` @type ^`int`;
  #L29260c.  v1:= v1 ^& v0 @kind int;
  #L29260e.  if v1 != 0 then goto L292616;
  #L292612.  v1:= 1I;
  #L292614.  goto L292618;
  #L292616.  v1:= 0I;
  #L292618.  return v1;
}
procedure `com.b.a.q` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/b/a/q;.valueOf:(Ljava/lang/String;)Lcom/b/a/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L29262c.  v0:= constclass @type ^`com.b.a.q` @kind object;
  #L292630.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L292636.  v1:= temp @kind object;
  #L292638.  v1:= (`com.b.a.q`) v1 @kind object;
  #L29263c.  return v1 @kind object;
}
procedure `com.b.a.q`[] `values`() @signature `Lcom/b/a/q;.values:()[Lcom/b/a/q;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L292650.  v0:= `@@com.b.a.q.d` @type ^`com.b.a.q`[] @kind object;
  #L292654.  call temp:= `clone`(v0) @signature `[Lcom/b/a/q;.clone:()Ljava/lang/Object;` @kind virtual;
  #L29265a.  v0:= temp @kind object;
  #L29265c.  v0:= (`com.b.a.q`[]) v0 @kind object;
  #L292660.  return v0 @kind object;
}
