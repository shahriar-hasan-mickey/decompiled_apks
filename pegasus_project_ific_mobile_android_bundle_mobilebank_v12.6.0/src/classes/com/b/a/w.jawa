record `com.b.a.w` @kind class @AccessFlag  extends `java.util.concurrent.ThreadPoolExecutor` @kind class {
}
procedure `void` `<init>`(`com.b.a.w` v8 @kind this) @signature `Lcom/b/a/w;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L293bf8.  v5:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L293bfc.  v6:= new `java.util.concurrent.PriorityBlockingQueue`;
  #L293c00.  call `<init>`(v6) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V` @kind direct;
  #L293c06.  v7:= new `com.b.a.ai$e`;
  #L293c0a.  call `<init>`(v7) @signature `Lcom/b/a/ai$e;.<init>:()V` @kind direct;
  #L293c10.  v1:= 3I;
  #L293c12.  v2:= 3I;
  #L293c14.  v3:= 0L;
  #L293c18.  v0:= v8 @kind object;
  #L293c1a.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L293c20.  return @kind void;
}
procedure `void` `a`(`com.b.a.w` v0 @kind this, `int` v1 ) @signature `Lcom/b/a/w;.a:(I)V` @AccessFlag PRIVATE {
    temp;

  #L293d10.  call `setCorePoolSize`(v0, v1) @signature `Lcom/b/a/w;.setCorePoolSize:(I)V` @kind virtual;
  #L293d16.  call `setMaximumPoolSize`(v0, v1) @signature `Lcom/b/a/w;.setMaximumPoolSize:(I)V` @kind virtual;
  #L293d1c.  return @kind void;
}
procedure `void` `a`(`com.b.a.w` v3 @kind this, `android.net.NetworkInfo` v4 @kind object) @signature `Lcom/b/a/w;.a:(Landroid/net/NetworkInfo;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L293c34.  v0:= 3I;
  #L293c36.  if v4 == 0 then goto L293cae;
  #L293c3a.  call temp:= `isConnectedOrConnecting`(v4) @signature `Landroid/net/NetworkInfo;.isConnectedOrConnecting:()Z` @kind virtual;
  #L293c40.  v1:= temp;
  #L293c42.  if v1 != 0 then goto L293c48;
  #L293c46.  goto L293cae;
  #L293c48.  call temp:= `getType`(v4) @signature `Landroid/net/NetworkInfo;.getType:()I` @kind virtual;
  #L293c4e.  v1:= temp;
  #L293c50.  v2:= 6I;
  #L293c52.  if v1 == v2 then goto L293ca4;
  #L293c56.  v2:= 9I;
  #L293c5a.  if v1 == v2 then goto L293ca4;
  #L293c5e.  goto L293cb8;
  #L293c64.  call `a`(v3, v0) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293c6a.  goto L293cac;
  #L293c6c.  call temp:= `getSubtype`(v4) @signature `Landroid/net/NetworkInfo;.getSubtype:()I` @kind virtual;
  #L293c72.  v4:= temp;
  #L293c74.  goto L293cc8;
  #L293c7a.  goto L293ce8;
  #L293c80.  call `a`(v3, v0) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293c86.  goto L293cac;
  #L293c88.  call `a`(v3, v0) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293c8e.  goto L293cac;
  #L293c90.  v4:= 2I;
  #L293c92.  call `a`(v3, v4) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293c98.  goto L293cac;
  #L293c9a.  v4:= 1I;
  #L293c9c.  call `a`(v3, v4) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293ca2.  goto L293cac;
  #L293ca4.  v4:= 4I;
  #L293ca6.  call `a`(v3, v4) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293cac.  return @kind void;
  #L293cae.  call `a`(v3, v0) @signature `Lcom/b/a/w;.a:(I)V` @kind direct;
  #L293cb4.  return @kind void;
  #L293cb6.  
  #L293cb8.  switch v1
                  | 0 => goto L293c6c
                  | 1 => goto L293ca4
                  | else => goto L293c64;
  #L293cc8.  switch v4
                  | 1 => goto L293c9a
                  | 2 => goto L293c9a
                  | 3 => goto L293c90
                  | 4 => goto L293c90
                  | 5 => goto L293c90
                  | 6 => goto L293c90
                  | else => goto L293c7a;
  #L293ce8.  switch v4
                  | 12 => goto L293c90
                  | 13 => goto L293c88
                  | 14 => goto L293c88
                  | 15 => goto L293c88
                  | else => goto L293c80;
}
procedure `java.util.concurrent.Future` `submit`(`com.b.a.w` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lcom/b/a/w;.submit:(Ljava/lang/Runnable;)Ljava/util/concurrent/Future;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L293bd0.  v0:= new `com.b.a.w$a`;
  #L293bd4.  v2:= (`com.b.a.c`) v2 @kind object;
  #L293bd8.  call `<init>`(v0, v2) @signature `Lcom/b/a/w$a;.<init>:(Lcom/b/a/c;)V` @kind direct;
  #L293bde.  call `execute`(v1, v0) @signature `Lcom/b/a/w;.execute:(Ljava/lang/Runnable;)V` @kind virtual;
  #L293be4.  return v0 @kind object;
}
