record `com.b.a.j$a` @kind class @AccessFlag PUBLIC {
  `java.io.InputStream` `com.b.a.j$a.a` @AccessFlag FINAL;
  `android.graphics.Bitmap` `com.b.a.j$a.b` @AccessFlag FINAL;
  `boolean` `com.b.a.j$a.c` @AccessFlag FINAL;
  `long` `com.b.a.j$a.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.b.a.j$a` v0 @kind this, `java.io.InputStream` v1 @kind object, `boolean` v2 , `long` v3 ) @signature `Lcom/b/a/j$a;.<init>:(Ljava/io/InputStream;ZJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L291718.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29171e.  if v1 != 0 then goto L291732;
  #L291722.  v1:= new `java.lang.IllegalArgumentException`;
  #L291726.  v2:= "Stream may not be null." @kind object;
  #L29172a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L291730.  throw v1;
  #L291732.  v0.`com.b.a.j$a.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L291736.  v1:= 0I;
  #L291738.  v0.`com.b.a.j$a.b` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L29173c.  v0.`com.b.a.j$a.c` @type ^`boolean` := v2 @kind boolean;
  #L291740.  v0.`com.b.a.j$a.d` @type ^`long` := v3 @kind wide;
  #L291744.  return @kind void;
}
procedure `java.io.InputStream` `a`(`com.b.a.j$a` v1 @kind this) @signature `Lcom/b/a/j$a;.a:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2916e8.  v0:= v1.`com.b.a.j$a.a` @type ^`java.io.InputStream` @kind object;
  #L2916ec.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `b`(`com.b.a.j$a` v1 @kind this) @signature `Lcom/b/a/j$a;.b:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2916d0.  v0:= v1.`com.b.a.j$a.b` @type ^`android.graphics.Bitmap` @kind object;
  #L2916d4.  return v0 @kind object;
}
procedure `long` `c`(`com.b.a.j$a` v2 @kind this) @signature `Lcom/b/a/j$a;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L291700.  v0:= v2.`com.b.a.j$a.d` @type ^`long` @kind wide;
  #L291704.  return v0 @kind wide;
}
