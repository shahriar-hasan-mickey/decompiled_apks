record `com.b.a.aa` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.b.a.aa` v0 @kind this) @signature `Lcom/b/a/aa;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L28d9b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28d9ba.  return @kind void;
}
procedure `void` `a`(`int` v2 , `int` v3 , `int` v4 , `int` v5 , `android.graphics.BitmapFactory$Options` v6 @kind object, `com.b.a.y` v7 @kind object) @signature `Lcom/b/a/aa;.a:(IIIILandroid/graphics/BitmapFactory$Options;Lcom/b/a/y;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L28d9f4.  if v5 > v3 then goto L28da02;
  #L28d9f8.  if v4 <= v2 then goto L28d9fe;
  #L28d9fc.  goto L28da02;
  #L28d9fe.  v2:= 1I;
  #L28da00.  goto L28da70;
  #L28da02.  if v3 != 0 then goto L28da1a;
  #L28da06.  v3:= (`float`) v4 @kind i2f;
  #L28da08.  v2:= (`float`) v2 @kind i2f;
  #L28da0a.  v3:= v3 / v2 @kind float;
  #L28da0c.  v2:= (`double`) v3 @kind f2d;
  #L28da0e.  call temp:= `floor`(v2) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L28da14.  v2:= temp @kind wide;
  #L28da16.  v2:= (`int`) v2 @kind d2i;
  #L28da18.  goto L28da70;
  #L28da1a.  if v2 != 0 then goto L28da32;
  #L28da1e.  v2:= (`float`) v5 @kind i2f;
  #L28da20.  v3:= (`float`) v3 @kind i2f;
  #L28da22.  v2:= v2 / v3 @kind float;
  #L28da24.  v2:= (`double`) v2 @kind f2d;
  #L28da26.  call temp:= `floor`(v2) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L28da2c.  v2:= temp @kind wide;
  #L28da2e.  v2:= (`int`) v2 @kind d2i;
  #L28da30.  goto L28da70;
  #L28da32.  v5:= (`float`) v5 @kind i2f;
  #L28da34.  v3:= (`float`) v3 @kind i2f;
  #L28da36.  v5:= v5 / v3 @kind float;
  #L28da38.  v0:= (`double`) v5 @kind f2d;
  #L28da3a.  call temp:= `floor`(v0) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L28da40.  v0:= temp @kind wide;
  #L28da42.  v3:= (`int`) v0 @kind d2i;
  #L28da44.  v4:= (`float`) v4 @kind i2f;
  #L28da46.  v2:= (`float`) v2 @kind i2f;
  #L28da48.  v4:= v4 / v2 @kind float;
  #L28da4a.  v4:= (`double`) v4 @kind f2d;
  #L28da4c.  call temp:= `floor`(v4) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L28da52.  v4:= temp @kind wide;
  #L28da54.  v2:= (`int`) v4 @kind d2i;
  #L28da56.  v4:= v7.`com.b.a.y.k` @type ^`boolean` @kind boolean;
  #L28da5a.  if v4 == 0 then goto L28da68;
  #L28da5e.  call temp:= `max`(v3, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L28da64.  v2:= temp;
  #L28da66.  goto L28da70;
  #L28da68.  call temp:= `min`(v3, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L28da6e.  v2:= temp;
  #L28da70.  v6.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v2;
  #L28da74.  v2:= 0I;
  #L28da76.  v6.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v2 @kind boolean;
  #L28da7a.  return @kind void;
}
procedure `void` `a`(`int` v6 , `int` v7 , `android.graphics.BitmapFactory$Options` v8 @kind object, `com.b.a.y` v9 @kind object) @signature `Lcom/b/a/aa;.a:(IILandroid/graphics/BitmapFactory$Options;Lcom/b/a/y;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28d9cc.  v2:= v8.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L28d9d0.  v3:= v8.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L28d9d4.  v0:= v6;
  #L28d9d6.  v1:= v7;
  #L28d9d8.  v4:= v8 @kind object;
  #L28d9da.  v5:= v9 @kind object;
  #L28d9dc.  call `a`(v0, v1, v2, v3, v4, v5) @signature `Lcom/b/a/aa;.a:(IIIILandroid/graphics/BitmapFactory$Options;Lcom/b/a/y;)V` @kind static;
  #L28d9e2.  return @kind void;
}
procedure `boolean` `a`(`android.graphics.BitmapFactory$Options` v0 @kind object) @signature `Lcom/b/a/aa;.a:(Landroid/graphics/BitmapFactory$Options;)Z` @AccessFlag STATIC {
    temp;

  #L28d954.  if v0 == 0 then goto L28d964;
  #L28d958.  v0:= v0.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` @kind boolean;
  #L28d95c.  if v0 == 0 then goto L28d964;
  #L28d960.  v0:= 1I;
  #L28d962.  goto L28d966;
  #L28d964.  v0:= 0I;
  #L28d966.  return v0;
}
procedure `android.graphics.BitmapFactory$Options` `c`(`com.b.a.y` v3 @kind object) @signature `Lcom/b/a/aa;.c:(Lcom/b/a/y;)Landroid/graphics/BitmapFactory$Options;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L28d908.  call temp:= `d`(v3) @signature `Lcom/b/a/y;.d:()Z` @kind virtual;
  #L28d90e.  v0:= temp;
  #L28d910.  v1:= v3.`com.b.a.y.q` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L28d914.  if v1 == 0 then goto L28d91c;
  #L28d918.  v1:= 1I;
  #L28d91a.  goto L28d91e;
  #L28d91c.  v1:= 0I;
  #L28d91e.  v2:= 0I;
  #L28d920.  if v0 != 0 then goto L28d928;
  #L28d924.  if v1 == 0 then goto L28d942;
  #L28d928.  v2:= new `android.graphics.BitmapFactory$Options`;
  #L28d92c.  call `<init>`(v2) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L28d932.  v2.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v0 @kind boolean;
  #L28d936.  if v1 == 0 then goto L28d942;
  #L28d93a.  v3:= v3.`com.b.a.y.q` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L28d93e.  v2.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L28d942.  return v2 @kind object;
}
procedure `int` `a`(`com.b.a.aa` v1 @kind this) @signature `Lcom/b/a/aa;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L28d9a0.  v0:= 0I;
  #L28d9a2.  return v0;
}
procedure `com.b.a.aa$a` `a`(`com.b.a.y` v0 @kind object, `int` v1 ) @signature `Lcom/b/a/aa;.a:(Lcom/b/a/y;I)Lcom/b/a/aa$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`com.b.a.y` v0 @kind object) @signature `Lcom/b/a/aa;.a:(Lcom/b/a/y;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `a`(`com.b.a.aa` v0 @kind this, `boolean` v1 , `android.net.NetworkInfo` v2 @kind object) @signature `Lcom/b/a/aa;.a:(ZLandroid/net/NetworkInfo;)Z` @AccessFlag  {
    temp;

  #L28d978.  v1:= 0I;
  #L28d97a.  return v1;
}
procedure `boolean` `b`(`com.b.a.aa` v1 @kind this) @signature `Lcom/b/a/aa;.b:()Z` @AccessFlag  {
    temp;
    v0;

  #L28d98c.  v0:= 0I;
  #L28d98e.  return v0;
}
