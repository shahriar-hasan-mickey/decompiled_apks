record `com.b.a.y$a` @kind class @AccessFlag PUBLIC_FINAL {
  `android.net.Uri` `com.b.a.y$a.a` @AccessFlag PRIVATE;
  `int` `com.b.a.y$a.b` @AccessFlag PRIVATE;
  `java.lang.String` `com.b.a.y$a.c` @AccessFlag PRIVATE;
  `int` `com.b.a.y$a.d` @AccessFlag PRIVATE;
  `int` `com.b.a.y$a.e` @AccessFlag PRIVATE;
  `boolean` `com.b.a.y$a.f` @AccessFlag PRIVATE;
  `boolean` `com.b.a.y$a.g` @AccessFlag PRIVATE;
  `boolean` `com.b.a.y$a.h` @AccessFlag PRIVATE;
  `float` `com.b.a.y$a.i` @AccessFlag PRIVATE;
  `float` `com.b.a.y$a.j` @AccessFlag PRIVATE;
  `float` `com.b.a.y$a.k` @AccessFlag PRIVATE;
  `boolean` `com.b.a.y$a.l` @AccessFlag PRIVATE;
  `java.util.List` `com.b.a.y$a.m` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.b.a.y$a.n` @AccessFlag PRIVATE;
  `com.b.a.u$e` `com.b.a.y$a.o` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.b.a.y$a` v0 @kind this, `android.net.Uri` v1 @kind object, `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/b/a/y$a;.<init>:(Landroid/net/Uri;ILandroid/graphics/Bitmap$Config;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2940d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2940d6.  v0.`com.b.a.y$a.a` @type ^`android.net.Uri` := v1 @kind object;
  #L2940da.  v0.`com.b.a.y$a.b` @type ^`int` := v2;
  #L2940de.  v0.`com.b.a.y$a.n` @type ^`android.graphics.Bitmap$Config` := v3 @kind object;
  #L2940e2.  return @kind void;
}
procedure `com.b.a.y$a` `a`(`com.b.a.y$a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/b/a/y$a;.a:(II)Lcom/b/a/y$a;` @AccessFlag PUBLIC {
    temp;

  #L294074.  if v1 >= 0 then goto L294088;
  #L294078.  v1:= new `java.lang.IllegalArgumentException`;
  #L29407c.  v2:= "Width must be positive number or 0." @kind object;
  #L294080.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294086.  throw v1;
  #L294088.  if v2 >= 0 then goto L29409c;
  #L29408c.  v1:= new `java.lang.IllegalArgumentException`;
  #L294090.  v2:= "Height must be positive number or 0." @kind object;
  #L294094.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29409a.  throw v1;
  #L29409c.  if v2 != 0 then goto L2940b4;
  #L2940a0.  if v1 != 0 then goto L2940b4;
  #L2940a4.  v1:= new `java.lang.IllegalArgumentException`;
  #L2940a8.  v2:= "At least one dimension has to be positive number." @kind object;
  #L2940ac.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2940b2.  throw v1;
  #L2940b4.  v0.`com.b.a.y$a.d` @type ^`int` := v1;
  #L2940b8.  v0.`com.b.a.y$a.e` @type ^`int` := v2;
  #L2940bc.  return v0 @kind object;
}
procedure `com.b.a.y$a` `a`(`com.b.a.y$a` v2 @kind this, `com.b.a.ag` v3 @kind object) @signature `Lcom/b/a/y$a;.a:(Lcom/b/a/ag;)Lcom/b/a/y$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L294010.  if v3 != 0 then goto L294024;
  #L294014.  v3:= new `java.lang.IllegalArgumentException`;
  #L294018.  v0:= "Transformation must not be null." @kind object;
  #L29401c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L294022.  throw v3;
  #L294024.  call temp:= `a`(v3) @signature `Lcom/b/a/ag;.a:()Ljava/lang/String;` @kind interface;
  #L29402a.  v0:= temp @kind object;
  #L29402c.  if v0 != 0 then goto L294040;
  #L294030.  v3:= new `java.lang.IllegalArgumentException`;
  #L294034.  v0:= "Transformation key must not be null." @kind object;
  #L294038.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L29403e.  throw v3;
  #L294040.  v0:= v2.`com.b.a.y$a.m` @type ^`java.util.List` @kind object;
  #L294044.  if v0 != 0 then goto L294058;
  #L294048.  v0:= new `java.util.ArrayList`;
  #L29404c.  v1:= 2I;
  #L29404e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L294054.  v2.`com.b.a.y$a.m` @type ^`java.util.List` := v0 @kind object;
  #L294058.  v0:= v2.`com.b.a.y$a.m` @type ^`java.util.List` @kind object;
  #L29405c.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L294062.  return v2 @kind object;
}
procedure `boolean` `a`(`com.b.a.y$a` v1 @kind this) @signature `Lcom/b/a/y$a;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L293ec4.  v0:= v1.`com.b.a.y$a.a` @type ^`android.net.Uri` @kind object;
  #L293ec8.  if v0 != 0 then goto L293eda;
  #L293ecc.  v0:= v1.`com.b.a.y$a.b` @type ^`int`;
  #L293ed0.  if v0 == 0 then goto L293ed6;
  #L293ed4.  goto L293eda;
  #L293ed6.  v0:= 0I;
  #L293ed8.  goto L293edc;
  #L293eda.  v0:= 1I;
  #L293edc.  return v0;
}
procedure `boolean` `b`(`com.b.a.y$a` v1 @kind this) @signature `Lcom/b/a/y$a;.b:()Z` @AccessFlag  {
    temp;
    v0;

  #L293ef0.  v0:= v1.`com.b.a.y$a.d` @type ^`int`;
  #L293ef4.  if v0 != 0 then goto L293f06;
  #L293ef8.  v0:= v1.`com.b.a.y$a.e` @type ^`int`;
  #L293efc.  if v0 == 0 then goto L293f02;
  #L293f00.  goto L293f06;
  #L293f02.  v0:= 0I;
  #L293f04.  goto L293f08;
  #L293f06.  v0:= 1I;
  #L293f08.  return v0;
}
procedure `com.b.a.y` `c`(`com.b.a.y$a` v20 @kind this) @signature `Lcom/b/a/y$a;.c:()Lcom/b/a/y;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L293f1c.  v0:= v20 @kind object;
  #L293f20.  v1:= v0.`com.b.a.y$a.g` @type ^`boolean` @kind boolean;
  #L293f24.  if v1 == 0 then goto L293f40;
  #L293f28.  v1:= v0.`com.b.a.y$a.f` @type ^`boolean` @kind boolean;
  #L293f2c.  if v1 == 0 then goto L293f40;
  #L293f30.  v1:= new `java.lang.IllegalStateException`;
  #L293f34.  v2:= "Center crop and center inside can not be used together." @kind object;
  #L293f38.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L293f3e.  throw v1;
  #L293f40.  v1:= v0.`com.b.a.y$a.f` @type ^`boolean` @kind boolean;
  #L293f44.  if v1 == 0 then goto L293f68;
  #L293f48.  v1:= v0.`com.b.a.y$a.d` @type ^`int`;
  #L293f4c.  if v1 != 0 then goto L293f68;
  #L293f50.  v1:= v0.`com.b.a.y$a.e` @type ^`int`;
  #L293f54.  if v1 != 0 then goto L293f68;
  #L293f58.  v1:= new `java.lang.IllegalStateException`;
  #L293f5c.  v2:= "Center crop requires calling resize with positive width and height." @kind object;
  #L293f60.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L293f66.  throw v1;
  #L293f68.  v1:= v0.`com.b.a.y$a.g` @type ^`boolean` @kind boolean;
  #L293f6c.  if v1 == 0 then goto L293f90;
  #L293f70.  v1:= v0.`com.b.a.y$a.d` @type ^`int`;
  #L293f74.  if v1 != 0 then goto L293f90;
  #L293f78.  v1:= v0.`com.b.a.y$a.e` @type ^`int`;
  #L293f7c.  if v1 != 0 then goto L293f90;
  #L293f80.  v1:= new `java.lang.IllegalStateException`;
  #L293f84.  v2:= "Center inside requires calling resize with positive width and height." @kind object;
  #L293f88.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L293f8e.  throw v1;
  #L293f90.  v1:= v0.`com.b.a.y$a.o` @type ^`com.b.a.u$e` @kind object;
  #L293f94.  if v1 != 0 then goto L293fa0;
  #L293f98.  v1:= `@@com.b.a.u$e.b` @type ^`com.b.a.u$e` @kind object;
  #L293f9c.  v0.`com.b.a.y$a.o` @type ^`com.b.a.u$e` := v1 @kind object;
  #L293fa0.  v1:= new `com.b.a.y`;
  #L293fa4.  v3:= v0.`com.b.a.y$a.a` @type ^`android.net.Uri` @kind object;
  #L293fa8.  v4:= v0.`com.b.a.y$a.b` @type ^`int`;
  #L293fac.  v5:= v0.`com.b.a.y$a.c` @type ^`java.lang.String` @kind object;
  #L293fb0.  v6:= v0.`com.b.a.y$a.m` @type ^`java.util.List` @kind object;
  #L293fb4.  v7:= v0.`com.b.a.y$a.d` @type ^`int`;
  #L293fb8.  v8:= v0.`com.b.a.y$a.e` @type ^`int`;
  #L293fbc.  v9:= v0.`com.b.a.y$a.f` @type ^`boolean` @kind boolean;
  #L293fc0.  v10:= v0.`com.b.a.y$a.g` @type ^`boolean` @kind boolean;
  #L293fc4.  v11:= v0.`com.b.a.y$a.h` @type ^`boolean` @kind boolean;
  #L293fc8.  v12:= v0.`com.b.a.y$a.i` @type ^`float`;
  #L293fcc.  v13:= v0.`com.b.a.y$a.j` @type ^`float`;
  #L293fd0.  v14:= v0.`com.b.a.y$a.k` @type ^`float`;
  #L293fd4.  v15:= v0.`com.b.a.y$a.l` @type ^`boolean` @kind boolean;
  #L293fd8.  v2:= v0.`com.b.a.y$a.n` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L293fdc.  v19:= v15;
  #L293fe0.  v15:= v0.`com.b.a.y$a.o` @type ^`com.b.a.u$e` @kind object;
  #L293fe4.  v18:= 0I;
  #L293fe8.  v16:= v2 @kind object;
  #L293fec.  v2:= v1 @kind object;
  #L293fee.  v17:= v15 @kind object;
  #L293ff2.  v15:= v19;
  #L293ff6.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18) @signature `Lcom/b/a/y;.<init>:(Landroid/net/Uri;ILjava/lang/String;Ljava/util/List;IIZZZFFFZLandroid/graphics/Bitmap$Config;Lcom/b/a/u$e;Lcom/b/a/y$1;)V` @kind direct;
  #L293ffc.  return v1 @kind object;
}
