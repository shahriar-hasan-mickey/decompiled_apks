record `com.google.maps.android.a.a.c$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.google.maps.android.a.a.c` `com.google.maps.android.a.a.c$a.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `com.google.maps.android.a.a.c$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.maps.android.a.a.c$a` v0 @kind this, `com.google.maps.android.a.a.c` v1 @kind object, `int` v2 ) @signature `Lcom/google/maps/android/a/a/c$a;.<init>:(Lcom/google/maps/android/a/a/c;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c1c78.  v0.`com.google.maps.android.a.a.c$a.a` @type ^`com.google.maps.android.a.a.c` := v1 @kind object;
  #L3c1c7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c1c82.  v0.`com.google.maps.android.a.a.c$a.b` @type ^`int` := v2;
  #L3c1c86.  return @kind void;
}
procedure `void` `run`(`com.google.maps.android.a.a.c$a` v4 @kind this) @signature `Lcom/google/maps/android/a/a/c$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c1c98.  call temp:= `random`() @signature `Ljava/lang/Math;.random:()D` @kind static;
  #L3c1c9e.  v0:= temp @kind wide;
  #L3c1ca0.  v2:= 500.0D;
  #L3c1caa.  v0:= v0 * v2 @kind double;
  #L3c1cae.  v0:= v0 + v2 @kind double;
  #L3c1cb0.  v0:= (`long`) v0 @kind d2l;
  #L3c1cb2.  call `sleep`(v0) @signature `Ljava/lang/Thread;.sleep:(J)V` @kind static;
  #L3c1cb8.  v0:= v4.`com.google.maps.android.a.a.c$a.a` @type ^`com.google.maps.android.a.a.c` @kind object;
  #L3c1cbc.  v1:= v4.`com.google.maps.android.a.a.c$a.b` @type ^`int`;
  #L3c1cc0.  call temp:= `a`(v0, v1) @signature `Lcom/google/maps/android/a/a/c;.a:(Lcom/google/maps/android/a/a/c;I)Ljava/util/Set;` @kind static;
  #L3c1cc6.  return @kind void;
  catch `java.lang.InterruptedException` @[L3c1c98..L3c1cb8] goto L3c1cb8;
}
