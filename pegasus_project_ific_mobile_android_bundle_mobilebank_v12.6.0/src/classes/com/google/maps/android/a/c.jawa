record `com.google.maps.android.a.c` @kind class @AccessFlag PUBLIC extends `com.google.android.gms.maps.c$a` @kind interface, `com.google.android.gms.maps.c$b` @kind interface, `com.google.android.gms.maps.c$c` @kind interface {
  `com.google.maps.android.a` `com.google.maps.android.a.c.a` @AccessFlag PRIVATE_FINAL;
  `com.google.maps.android.a$a` `com.google.maps.android.a.c.b` @AccessFlag PRIVATE_FINAL;
  `com.google.maps.android.a$a` `com.google.maps.android.a.c.c` @AccessFlag PRIVATE_FINAL;
  `com.google.maps.android.a.a.a` `com.google.maps.android.a.c.d` @AccessFlag PRIVATE;
  `java.util.concurrent.locks.ReadWriteLock` `com.google.maps.android.a.c.e` @AccessFlag PRIVATE_FINAL;
  `com.google.maps.android.a.b.a` `com.google.maps.android.a.c.f` @AccessFlag PRIVATE;
  `com.google.android.gms.maps.c` `com.google.maps.android.a.c.g` @AccessFlag PRIVATE;
  `com.google.android.gms.maps.model.CameraPosition` `com.google.maps.android.a.c.h` @AccessFlag PRIVATE;
  `com.google.maps.android.a.c$a` `com.google.maps.android.a.c.i` @AccessFlag PRIVATE;
  `java.util.concurrent.locks.ReadWriteLock` `com.google.maps.android.a.c.j` @AccessFlag PRIVATE_FINAL;
  `com.google.maps.android.a.c$d` `com.google.maps.android.a.c.k` @AccessFlag PRIVATE;
  `com.google.maps.android.a.c$c` `com.google.maps.android.a.c.l` @AccessFlag PRIVATE;
  `com.google.maps.android.a.c$e` `com.google.maps.android.a.c.m` @AccessFlag PRIVATE;
  `com.google.maps.android.a.c$b` `com.google.maps.android.a.c.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.maps.android.a.c` v1 @kind this, `android.content.Context` v2 @kind object, `com.google.android.gms.maps.c` v3 @kind object) @signature `Lcom/google/maps/android/a/c;.<init>:(Landroid/content/Context;Lcom/google/android/gms/maps/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c3c88.  v0:= new `com.google.maps.android.a`;
  #L3c3c8c.  call `<init>`(v0, v3) @signature `Lcom/google/maps/android/a;.<init>:(Lcom/google/android/gms/maps/c;)V` @kind direct;
  #L3c3c92.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/maps/android/a/c;.<init>:(Landroid/content/Context;Lcom/google/android/gms/maps/c;Lcom/google/maps/android/a;)V` @kind direct;
  #L3c3c98.  return @kind void;
}
procedure `void` `<init>`(`com.google.maps.android.a.c` v1 @kind this, `android.content.Context` v2 @kind object, `com.google.android.gms.maps.c` v3 @kind object, `com.google.maps.android.a` v4 @kind object) @signature `Lcom/google/maps/android/a/c;.<init>:(Landroid/content/Context;Lcom/google/android/gms/maps/c;Lcom/google/maps/android/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c3cac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c3cb2.  v0:= new `java.util.concurrent.locks.ReentrantReadWriteLock`;
  #L3c3cb6.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V` @kind direct;
  #L3c3cbc.  v1.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` := v0 @kind object;
  #L3c3cc0.  v0:= new `java.util.concurrent.locks.ReentrantReadWriteLock`;
  #L3c3cc4.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantReadWriteLock;.<init>:()V` @kind direct;
  #L3c3cca.  v1.`com.google.maps.android.a.c.j` @type ^`java.util.concurrent.locks.ReadWriteLock` := v0 @kind object;
  #L3c3cce.  v1.`com.google.maps.android.a.c.g` @type ^`com.google.android.gms.maps.c` := v3 @kind object;
  #L3c3cd2.  v1.`com.google.maps.android.a.c.a` @type ^`com.google.maps.android.a` := v4 @kind object;
  #L3c3cd6.  call temp:= `a`(v4) @signature `Lcom/google/maps/android/a;.a:()Lcom/google/maps/android/a$a;` @kind virtual;
  #L3c3cdc.  v0:= temp @kind object;
  #L3c3cde.  v1.`com.google.maps.android.a.c.c` @type ^`com.google.maps.android.a$a` := v0 @kind object;
  #L3c3ce2.  call temp:= `a`(v4) @signature `Lcom/google/maps/android/a;.a:()Lcom/google/maps/android/a$a;` @kind virtual;
  #L3c3ce8.  v4:= temp @kind object;
  #L3c3cea.  v1.`com.google.maps.android.a.c.b` @type ^`com.google.maps.android.a$a` := v4 @kind object;
  #L3c3cee.  v4:= new `com.google.maps.android.a.b.b`;
  #L3c3cf2.  call `<init>`(v4, v2, v3, v1) @signature `Lcom/google/maps/android/a/b/b;.<init>:(Landroid/content/Context;Lcom/google/android/gms/maps/c;Lcom/google/maps/android/a/c;)V` @kind direct;
  #L3c3cf8.  v1.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` := v4 @kind object;
  #L3c3cfc.  v2:= new `com.google.maps.android.a.a.c`;
  #L3c3d00.  v3:= new `com.google.maps.android.a.a.b`;
  #L3c3d04.  call `<init>`(v3) @signature `Lcom/google/maps/android/a/a/b;.<init>:()V` @kind direct;
  #L3c3d0a.  call `<init>`(v2, v3) @signature `Lcom/google/maps/android/a/a/c;.<init>:(Lcom/google/maps/android/a/a/a;)V` @kind direct;
  #L3c3d10.  v1.`com.google.maps.android.a.c.d` @type ^`com.google.maps.android.a.a.a` := v2 @kind object;
  #L3c3d14.  v2:= new `com.google.maps.android.a.c$a`;
  #L3c3d18.  v3:= 0I;
  #L3c3d1a.  call `<init>`(v2, v1, v3) @signature `Lcom/google/maps/android/a/c$a;.<init>:(Lcom/google/maps/android/a/c;Lcom/google/maps/android/a/c$1;)V` @kind direct;
  #L3c3d20.  v1.`com.google.maps.android.a.c.i` @type ^`com.google.maps.android.a.c$a` := v2 @kind object;
  #L3c3d24.  v2:= v1.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3d28.  call `a`(v2) @signature `Lcom/google/maps/android/a/b/a;.a:()V` @kind interface;
  #L3c3d2e.  return @kind void;
}
procedure `java.util.concurrent.locks.ReadWriteLock` `a`(`com.google.maps.android.a.c` v0 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/maps/android/a/c;)Ljava/util/concurrent/locks/ReadWriteLock;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c3c70.  v0:= v0.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3c74.  return v0 @kind object;
}
procedure `com.google.maps.android.a.a.a` `b`(`com.google.maps.android.a.c` v0 @kind object) @signature `Lcom/google/maps/android/a/c;.b:(Lcom/google/maps/android/a/c;)Lcom/google/maps/android/a/a/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c3c40.  v0:= v0.`com.google.maps.android.a.c.d` @type ^`com.google.maps.android.a.a.a` @kind object;
  #L3c3c44.  return v0 @kind object;
}
procedure `com.google.maps.android.a.b.a` `c`(`com.google.maps.android.a.c` v0 @kind object) @signature `Lcom/google/maps/android/a/c;.c:(Lcom/google/maps/android/a/c;)Lcom/google/maps/android/a/b/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c3c58.  v0:= v0.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3c5c.  return v0 @kind object;
}
procedure `void` `a`(`com.google.maps.android.a.c` v2 @kind this) @signature `Lcom/google/maps/android/a/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3d40.  v0:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3d44.  v0:= instanceof @variable v0 @type ^`com.google.android.gms.maps.c$a` @kind boolean;
  #L3c3d48.  if v0 == 0 then goto L3c3d5a;
  #L3c3d4c.  v0:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3d50.  v0:= (`com.google.android.gms.maps.c$a`) v0 @kind object;
  #L3c3d54.  call `a`(v0) @signature `Lcom/google/android/gms/maps/c$a;.a:()V` @kind interface;
  #L3c3d5a.  v0:= v2.`com.google.maps.android.a.c.g` @type ^`com.google.android.gms.maps.c` @kind object;
  #L3c3d5e.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/maps/c;.a:()Lcom/google/android/gms/maps/model/CameraPosition;` @kind virtual;
  #L3c3d64.  v0:= temp @kind object;
  #L3c3d66.  v1:= v2.`com.google.maps.android.a.c.h` @type ^`com.google.android.gms.maps.model.CameraPosition` @kind object;
  #L3c3d6a.  if v1 == 0 then goto L3c3d84;
  #L3c3d6e.  v1:= v2.`com.google.maps.android.a.c.h` @type ^`com.google.android.gms.maps.model.CameraPosition` @kind object;
  #L3c3d72.  v1:= v1.`com.google.android.gms.maps.model.CameraPosition.b` @type ^`float`;
  #L3c3d76.  v0:= v0.`com.google.android.gms.maps.model.CameraPosition.b` @type ^`float`;
  #L3c3d7a.  v0:= fcmpl(v1, v0);
  #L3c3d7e.  if v0 != 0 then goto L3c3d84;
  #L3c3d82.  return @kind void;
  #L3c3d84.  v0:= v2.`com.google.maps.android.a.c.g` @type ^`com.google.android.gms.maps.c` @kind object;
  #L3c3d88.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/maps/c;.a:()Lcom/google/android/gms/maps/model/CameraPosition;` @kind virtual;
  #L3c3d8e.  v0:= temp @kind object;
  #L3c3d90.  v2.`com.google.maps.android.a.c.h` @type ^`com.google.android.gms.maps.model.CameraPosition` := v0 @kind object;
  #L3c3d94.  call `f`(v2) @signature `Lcom/google/maps/android/a/c;.f:()V` @kind virtual;
  #L3c3d9a.  return @kind void;
}
procedure `void` `a`(`com.google.maps.android.a.c` v2 @kind this, `com.google.maps.android.a.b.a` v3 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/maps/android/a/b/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3e10.  v0:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e14.  v1:= 0I;
  #L3c3e16.  call `a`(v0, v1) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$b;)V` @kind interface;
  #L3c3e1c.  v0:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e20.  call `a`(v0, v1) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$d;)V` @kind interface;
  #L3c3e26.  v0:= v2.`com.google.maps.android.a.c.c` @type ^`com.google.maps.android.a$a` @kind object;
  #L3c3e2a.  call `a`(v0) @signature `Lcom/google/maps/android/a$a;.a:()V` @kind virtual;
  #L3c3e30.  v0:= v2.`com.google.maps.android.a.c.b` @type ^`com.google.maps.android.a$a` @kind object;
  #L3c3e34.  call `a`(v0) @signature `Lcom/google/maps/android/a$a;.a:()V` @kind virtual;
  #L3c3e3a.  v0:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e3e.  call `b`(v0) @signature `Lcom/google/maps/android/a/b/a;.b:()V` @kind interface;
  #L3c3e44.  v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` := v3 @kind object;
  #L3c3e48.  v3:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e4c.  call `a`(v3) @signature `Lcom/google/maps/android/a/b/a;.a:()V` @kind interface;
  #L3c3e52.  v3:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e56.  v0:= v2.`com.google.maps.android.a.c.n` @type ^`com.google.maps.android.a.c$b` @kind object;
  #L3c3e5a.  call `a`(v3, v0) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$b;)V` @kind interface;
  #L3c3e60.  v3:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e64.  v0:= v2.`com.google.maps.android.a.c.l` @type ^`com.google.maps.android.a.c$c` @kind object;
  #L3c3e68.  call `a`(v3, v0) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$c;)V` @kind interface;
  #L3c3e6e.  v3:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e72.  v0:= v2.`com.google.maps.android.a.c.k` @type ^`com.google.maps.android.a.c$d` @kind object;
  #L3c3e76.  call `a`(v3, v0) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$d;)V` @kind interface;
  #L3c3e7c.  v3:= v2.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3e80.  v0:= v2.`com.google.maps.android.a.c.m` @type ^`com.google.maps.android.a.c$e` @kind object;
  #L3c3e84.  call `a`(v3, v0) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$e;)V` @kind interface;
  #L3c3e8a.  call `f`(v2) @signature `Lcom/google/maps/android/a/c;.f:()V` @kind virtual;
  #L3c3e90.  return @kind void;
}
procedure `void` `a`(`com.google.maps.android.a.c` v1 @kind this, `com.google.maps.android.a.b` v2 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/maps/android/a/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3dac.  v0:= v1.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3db0.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3db6.  v0:= temp @kind object;
  #L3c3db8.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3c3dbe.  v0:= v1.`com.google.maps.android.a.c.d` @type ^`com.google.maps.android.a.a.a` @kind object;
  #L3c3dc2.  call `a`(v0, v2) @signature `Lcom/google/maps/android/a/a/a;.a:(Lcom/google/maps/android/a/b;)V` @kind interface;
  #L3c3dc8.  v2:= v1.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3dcc.  call temp:= `writeLock`(v2) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3dd2.  v2:= temp @kind object;
  #L3c3dd4.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c3dda.  return @kind void;
  #L3c3ddc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c3dde.  v0:= v1.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3de2.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3de8.  v0:= temp @kind object;
  #L3c3dea.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c3df0.  throw v2;
  catch `java.lang.Throwable` @[L3c3dbe..L3c3dc8] goto L3c3ddc;
}
procedure `void` `a`(`com.google.maps.android.a.c` v1 @kind this, `com.google.maps.android.a.c$b` v2 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/maps/android/a/c$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3ea4.  v1.`com.google.maps.android.a.c.n` @type ^`com.google.maps.android.a.c$b` := v2 @kind object;
  #L3c3ea8.  v0:= v1.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3eac.  call `a`(v0, v2) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$b;)V` @kind interface;
  #L3c3eb2.  return @kind void;
}
procedure `void` `a`(`com.google.maps.android.a.c` v1 @kind this, `com.google.maps.android.a.c$d` v2 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/maps/android/a/c$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3ec4.  v1.`com.google.maps.android.a.c.k` @type ^`com.google.maps.android.a.c$d` := v2 @kind object;
  #L3c3ec8.  v0:= v1.`com.google.maps.android.a.c.f` @type ^`com.google.maps.android.a.b.a` @kind object;
  #L3c3ecc.  call `a`(v0, v2) @signature `Lcom/google/maps/android/a/b/a;.a:(Lcom/google/maps/android/a/c$d;)V` @kind interface;
  #L3c3ed2.  return @kind void;
}
procedure `boolean` `a`(`com.google.maps.android.a.c` v1 @kind this, `com.google.android.gms.maps.model.c` v2 @kind object) @signature `Lcom/google/maps/android/a/c;.a:(Lcom/google/android/gms/maps/model/c;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3bd4.  call temp:= `d`(v1) @signature `Lcom/google/maps/android/a/c;.d:()Lcom/google/maps/android/a;` @kind virtual;
  #L3c3bda.  v0:= temp @kind object;
  #L3c3bdc.  call temp:= `a`(v0, v2) @signature `Lcom/google/maps/android/a;.a:(Lcom/google/android/gms/maps/model/c;)Z` @kind virtual;
  #L3c3be2.  v2:= temp;
  #L3c3be4.  return v2;
}
procedure `com.google.maps.android.a$a` `b`(`com.google.maps.android.a.c` v1 @kind this) @signature `Lcom/google/maps/android/a/c;.b:()Lcom/google/maps/android/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3c10.  v0:= v1.`com.google.maps.android.a.c.b` @type ^`com.google.maps.android.a$a` @kind object;
  #L3c3c14.  return v0 @kind object;
}
procedure `com.google.maps.android.a$a` `c`(`com.google.maps.android.a.c` v1 @kind this) @signature `Lcom/google/maps/android/a/c;.c:()Lcom/google/maps/android/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3c28.  v0:= v1.`com.google.maps.android.a.c.c` @type ^`com.google.maps.android.a$a` @kind object;
  #L3c3c2c.  return v0 @kind object;
}
procedure `com.google.maps.android.a` `d`(`com.google.maps.android.a.c` v1 @kind this) @signature `Lcom/google/maps/android/a/c;.d:()Lcom/google/maps/android/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c3bf8.  v0:= v1.`com.google.maps.android.a.c.a` @type ^`com.google.maps.android.a` @kind object;
  #L3c3bfc.  return v0 @kind object;
}
procedure `void` `e`(`com.google.maps.android.a.c` v2 @kind this) @signature `Lcom/google/maps/android/a/c;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c3ee4.  v0:= v2.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3ee8.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3eee.  v0:= temp @kind object;
  #L3c3ef0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3c3ef6.  v0:= v2.`com.google.maps.android.a.c.d` @type ^`com.google.maps.android.a.a.a` @kind object;
  #L3c3efa.  call `a`(v0) @signature `Lcom/google/maps/android/a/a/a;.a:()V` @kind interface;
  #L3c3f00.  v0:= v2.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3f04.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3f0a.  v0:= temp @kind object;
  #L3c3f0c.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c3f12.  return @kind void;
  #L3c3f14.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c3f16.  v1:= v2.`com.google.maps.android.a.c.e` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3f1a.  call temp:= `writeLock`(v1) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3f20.  v1:= temp @kind object;
  #L3c3f22.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c3f28.  throw v0;
  catch `java.lang.Throwable` @[L3c3ef6..L3c3f00] goto L3c3f14;
}
procedure `void` `f`(`com.google.maps.android.a.c` v5 @kind this) @signature `Lcom/google/maps/android/a/c;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c3f48.  v0:= v5.`com.google.maps.android.a.c.j` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3f4c.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3f52.  v0:= temp @kind object;
  #L3c3f54.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3c3f5a.  v0:= v5.`com.google.maps.android.a.c.i` @type ^`com.google.maps.android.a.c$a` @kind object;
  #L3c3f5e.  v1:= 1I;
  #L3c3f60.  call temp:= `cancel`(v0, v1) @signature `Lcom/google/maps/android/a/c$a;.cancel:(Z)Z` @kind virtual;
  #L3c3f66.  v0:= new `com.google.maps.android.a.c$a`;
  #L3c3f6a.  v2:= 0I;
  #L3c3f6c.  call `<init>`(v0, v5, v2) @signature `Lcom/google/maps/android/a/c$a;.<init>:(Lcom/google/maps/android/a/c;Lcom/google/maps/android/a/c$1;)V` @kind direct;
  #L3c3f72.  v5.`com.google.maps.android.a.c.i` @type ^`com.google.maps.android.a.c$a` := v0 @kind object;
  #L3c3f76.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3c3f7a.  v2:= 11I;
  #L3c3f7e.  v3:= 0I;
  #L3c3f80.  if v0 >= v2 then goto L3c3fb0;
  #L3c3f84.  v0:= v5.`com.google.maps.android.a.c.i` @type ^`com.google.maps.android.a.c$a` @kind object;
  #L3c3f88.  v1:= new `java.lang.Float`[v1];
  #L3c3f8c.  v2:= v5.`com.google.maps.android.a.c.g` @type ^`com.google.android.gms.maps.c` @kind object;
  #L3c3f90.  call temp:= `a`(v2) @signature `Lcom/google/android/gms/maps/c;.a:()Lcom/google/android/gms/maps/model/CameraPosition;` @kind virtual;
  #L3c3f96.  v2:= temp @kind object;
  #L3c3f98.  v2:= v2.`com.google.android.gms.maps.model.CameraPosition.b` @type ^`float`;
  #L3c3f9c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3c3fa2.  v2:= temp @kind object;
  #L3c3fa4.  v1[v3]:= v2 @kind object;
  #L3c3fa8.  call temp:= `execute`(v0, v1) @signature `Lcom/google/maps/android/a/c$a;.execute:([Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L3c3fae.  goto L3c3fde;
  #L3c3fb0.  v0:= v5.`com.google.maps.android.a.c.i` @type ^`com.google.maps.android.a.c$a` @kind object;
  #L3c3fb4.  v2:= `@@android.os.AsyncTask.THREAD_POOL_EXECUTOR` @type ^`java.util.concurrent.Executor` @kind object;
  #L3c3fb8.  v1:= new `java.lang.Float`[v1];
  #L3c3fbc.  v4:= v5.`com.google.maps.android.a.c.g` @type ^`com.google.android.gms.maps.c` @kind object;
  #L3c3fc0.  call temp:= `a`(v4) @signature `Lcom/google/android/gms/maps/c;.a:()Lcom/google/android/gms/maps/model/CameraPosition;` @kind virtual;
  #L3c3fc6.  v4:= temp @kind object;
  #L3c3fc8.  v4:= v4.`com.google.android.gms.maps.model.CameraPosition.b` @type ^`float`;
  #L3c3fcc.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3c3fd2.  v4:= temp @kind object;
  #L3c3fd4.  v1[v3]:= v4 @kind object;
  #L3c3fd8.  call temp:= `executeOnExecutor`(v0, v2, v1) @signature `Lcom/google/maps/android/a/c$a;.executeOnExecutor:(Ljava/util/concurrent/Executor;[Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L3c3fde.  v0:= v5.`com.google.maps.android.a.c.j` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3fe2.  call temp:= `writeLock`(v0) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3fe8.  v0:= temp @kind object;
  #L3c3fea.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c3ff0.  return @kind void;
  #L3c3ff2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c3ff4.  v1:= v5.`com.google.maps.android.a.c.j` @type ^`java.util.concurrent.locks.ReadWriteLock` @kind object;
  #L3c3ff8.  call temp:= `writeLock`(v1) @signature `Ljava/util/concurrent/locks/ReadWriteLock;.writeLock:()Ljava/util/concurrent/locks/Lock;` @kind interface;
  #L3c3ffe.  v1:= temp @kind object;
  #L3c4000.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3c4006.  throw v0;
  catch `java.lang.Throwable` @[L3c3f5a..L3c3fde] goto L3c3ff2;
}
