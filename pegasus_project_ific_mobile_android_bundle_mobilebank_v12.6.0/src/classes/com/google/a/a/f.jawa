record `com.google.a.a.f` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `int` `a`(`int` v1 , `int` v2 ) @signature `Lcom/google/a/a/f;.a:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3328c4.  v0:= "index" @kind object;
  #L3328c8.  call temp:= `a`(v1, v2, v0) @signature `Lcom/google/a/a/f;.a:(IILjava/lang/String;)I` @kind static;
  #L3328ce.  v1:= temp;
  #L3328d0.  return v1;
}
procedure `int` `a`(`int` v1 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/google/a/a/f;.a:(IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3328e4.  if v1 < 0 then goto L3328f0;
  #L3328e8.  if v1 < v2 then goto L3328ee;
  #L3328ec.  goto L3328f0;
  #L3328ee.  return v1;
  #L3328f0.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L3328f4.  call temp:= `c`(v1, v2, v3) @signature `Lcom/google/a/a/f;.c:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3328fa.  v1:= temp @kind object;
  #L3328fc.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332902.  throw v0;
}
procedure `java.lang.Object` `a`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L332964.  if v0 != 0 then goto L332974;
  #L332968.  v0:= new `java.lang.NullPointerException`;
  #L33296c.  call `<init>`(v0) @signature `Ljava/lang/NullPointerException;.<init>:()V` @kind direct;
  #L332972.  throw v0;
  #L332974.  return v0 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v6 @kind object, `java.lang.Object`[] v7 @kind object) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L332988.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33298e.  v6:= temp @kind object;
  #L332990.  v0:= 0I;
  #L332992.  if v7 != 0 then goto L3329a4;
  #L332996.  v7:= 1I;
  #L332998.  v7:= new `java.lang.Object`[v7];
  #L33299c.  v1:= "(Object[])null" @kind object;
  #L3329a0.  v7[v0]:= v1 @kind object;
  #L3329a4.  v1:= new `java.lang.StringBuilder`;
  #L3329a8.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3329ae.  v2:= temp;
  #L3329b0.  v3:= length @variable v7;
  #L3329b2.  v3:= v3 * 16;
  #L3329b6.  v2:= v2 + v3 @kind int;
  #L3329b8.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3329be.  v2:= 0I;
  #L3329c0.  v3:= length @variable v7;
  #L3329c2.  if v0 >= v3 then goto L3329fa;
  #L3329c6.  v3:= "%s" @kind object;
  #L3329ca.  call temp:= `indexOf`(v6, v3, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L3329d0.  v3:= temp;
  #L3329d2.  v4:= -1I;
  #L3329d4.  if v3 != v4 then goto L3329da;
  #L3329d8.  goto L3329fa;
  #L3329da.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3329e0.  v2:= v0 + 1;
  #L3329e4.  v0:= v7[v0] @kind object;
  #L3329e8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3329ee.  v0:= v3 + 2;
  #L3329f2.  v5:= v2;
  #L3329f4.  v2:= v0;
  #L3329f6.  v0:= v5;
  #L3329f8.  goto L3329c0;
  #L3329fa.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L332a00.  v3:= temp;
  #L332a02.  call temp:= `append`(v1, v6, v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a08.  v6:= length @variable v7;
  #L332a0a.  if v0 >= v6 then goto L332a52;
  #L332a0e.  v6:= " [" @kind object;
  #L332a12.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a18.  v6:= v0 + 1;
  #L332a1c.  v0:= v7[v0] @kind object;
  #L332a20.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a26.  v0:= length @variable v7;
  #L332a28.  if v6 >= v0 then goto L332a48;
  #L332a2c.  v0:= ", " @kind object;
  #L332a30.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a36.  v0:= v6 + 1;
  #L332a3a.  v6:= v7[v6] @kind object;
  #L332a3e.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a44.  v6:= v0;
  #L332a46.  goto L332a26;
  #L332a48.  v6:= 93I;
  #L332a4c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L332a52.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L332a58.  v6:= temp @kind object;
  #L332a5a.  return v6 @kind object;
}
procedure `void` `a`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/a/a/f;.a:(III)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L332c48.  if v1 < 0 then goto L332c58;
  #L332c4c.  if v2 < v1 then goto L332c58;
  #L332c50.  if v2 <= v3 then goto L332c56;
  #L332c54.  goto L332c58;
  #L332c56.  return @kind void;
  #L332c58.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L332c5c.  call temp:= `b`(v1, v2, v3) @signature `Lcom/google/a/a/f;.b:(III)Ljava/lang/String;` @kind static;
  #L332c62.  v1:= temp @kind object;
  #L332c64.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332c6a.  throw v0;
}
procedure `void` `a`(`boolean` v0 , `java.lang.Object` v1 @kind object) @signature `Lcom/google/a/a/f;.a:(ZLjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L332c1c.  if v0 != 0 then goto L332c34;
  #L332c20.  v0:= new `java.lang.IllegalArgumentException`;
  #L332c24.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332c2a.  v1:= temp @kind object;
  #L332c2c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332c32.  throw v0;
  #L332c34.  return @kind void;
}
procedure `int` `b`(`int` v1 , `int` v2 ) @signature `Lcom/google/a/a/f;.b:(II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L332914.  v0:= "index" @kind object;
  #L332918.  call temp:= `b`(v1, v2, v0) @signature `Lcom/google/a/a/f;.b:(IILjava/lang/String;)I` @kind static;
  #L33291e.  v1:= temp;
  #L332920.  return v1;
}
procedure `int` `b`(`int` v1 , `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/google/a/a/f;.b:(IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L332934.  if v1 < 0 then goto L332940;
  #L332938.  if v1 <= v2 then goto L33293e;
  #L33293c.  goto L332940;
  #L33293e.  return v1;
  #L332940.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L332944.  call temp:= `d`(v1, v2, v3) @signature `Lcom/google/a/a/f;.d:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L33294a.  v1:= temp @kind object;
  #L33294c.  call `<init>`(v0, v1) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332952.  throw v0;
}
procedure `java.lang.String` `b`(`int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/google/a/a/f;.b:(III)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L332a6c.  if v2 < 0 then goto L332abe;
  #L332a70.  if v2 <= v4 then goto L332a76;
  #L332a74.  goto L332abe;
  #L332a76.  if v3 < 0 then goto L332ab0;
  #L332a7a.  if v3 <= v4 then goto L332a80;
  #L332a7e.  goto L332ab0;
  #L332a80.  v4:= "end index (%s) must not be less than start index (%s)" @kind object;
  #L332a84.  v0:= 2I;
  #L332a86.  v0:= new `java.lang.Object`[v0];
  #L332a8a.  v1:= 0I;
  #L332a8c.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332a92.  v3:= temp @kind object;
  #L332a94.  v0[v1]:= v3 @kind object;
  #L332a98.  v3:= 1I;
  #L332a9a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332aa0.  v2:= temp @kind object;
  #L332aa2.  v0[v3]:= v2 @kind object;
  #L332aa6.  call temp:= `a`(v4, v0) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332aac.  v2:= temp @kind object;
  #L332aae.  return v2 @kind object;
  #L332ab0.  v2:= "end index" @kind object;
  #L332ab4.  call temp:= `d`(v3, v4, v2) @signature `Lcom/google/a/a/f;.d:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L332aba.  v2:= temp @kind object;
  #L332abc.  return v2 @kind object;
  #L332abe.  v3:= "start index" @kind object;
  #L332ac2.  call temp:= `d`(v2, v4, v3) @signature `Lcom/google/a/a/f;.d:(IILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L332ac8.  v2:= temp @kind object;
  #L332aca.  return v2 @kind object;
}
procedure `java.lang.String` `c`(`int` v5 , `int` v6 , `java.lang.String` v7 @kind object) @signature `Lcom/google/a/a/f;.c:(IILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L332adc.  v0:= 1I;
  #L332ade.  v1:= 0I;
  #L332ae0.  v2:= 2I;
  #L332ae2.  if v5 >= 0 then goto L332b08;
  #L332ae6.  v6:= "%s (%s) must not be negative" @kind object;
  #L332aea.  v2:= new `java.lang.Object`[v2];
  #L332aee.  v2[v1]:= v7 @kind object;
  #L332af2.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332af8.  v5:= temp @kind object;
  #L332afa.  v2[v0]:= v5 @kind object;
  #L332afe.  call temp:= `a`(v6, v2) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332b04.  v5:= temp @kind object;
  #L332b06.  return v5 @kind object;
  #L332b08.  if v6 >= 0 then goto L332b3a;
  #L332b0c.  v5:= new `java.lang.IllegalArgumentException`;
  #L332b10.  v7:= new `java.lang.StringBuilder`;
  #L332b14.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L332b1a.  v0:= "negative size: " @kind object;
  #L332b1e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332b24.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L332b2a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L332b30.  v6:= temp @kind object;
  #L332b32.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332b38.  throw v5;
  #L332b3a.  v3:= "%s (%s) must be less than size (%s)" @kind object;
  #L332b3e.  v4:= 3I;
  #L332b40.  v4:= new `java.lang.Object`[v4];
  #L332b44.  v4[v1]:= v7 @kind object;
  #L332b48.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332b4e.  v5:= temp @kind object;
  #L332b50.  v4[v0]:= v5 @kind object;
  #L332b54.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332b5a.  v5:= temp @kind object;
  #L332b5c.  v4[v2]:= v5 @kind object;
  #L332b60.  call temp:= `a`(v3, v4) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332b66.  v5:= temp @kind object;
  #L332b68.  return v5 @kind object;
}
procedure `java.lang.String` `d`(`int` v5 , `int` v6 , `java.lang.String` v7 @kind object) @signature `Lcom/google/a/a/f;.d:(IILjava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L332b7c.  v0:= 1I;
  #L332b7e.  v1:= 0I;
  #L332b80.  v2:= 2I;
  #L332b82.  if v5 >= 0 then goto L332ba8;
  #L332b86.  v6:= "%s (%s) must not be negative" @kind object;
  #L332b8a.  v2:= new `java.lang.Object`[v2];
  #L332b8e.  v2[v1]:= v7 @kind object;
  #L332b92.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332b98.  v5:= temp @kind object;
  #L332b9a.  v2[v0]:= v5 @kind object;
  #L332b9e.  call temp:= `a`(v6, v2) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332ba4.  v5:= temp @kind object;
  #L332ba6.  return v5 @kind object;
  #L332ba8.  if v6 >= 0 then goto L332bda;
  #L332bac.  v5:= new `java.lang.IllegalArgumentException`;
  #L332bb0.  v7:= new `java.lang.StringBuilder`;
  #L332bb4.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L332bba.  v0:= "negative size: " @kind object;
  #L332bbe.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332bc4.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L332bca.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L332bd0.  v6:= temp @kind object;
  #L332bd2.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332bd8.  throw v5;
  #L332bda.  v3:= "%s (%s) must not be greater than size (%s)" @kind object;
  #L332bde.  v4:= 3I;
  #L332be0.  v4:= new `java.lang.Object`[v4];
  #L332be4.  v4[v1]:= v7 @kind object;
  #L332be8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332bee.  v5:= temp @kind object;
  #L332bf0.  v4[v0]:= v5 @kind object;
  #L332bf4.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L332bfa.  v5:= temp @kind object;
  #L332bfc.  v4[v2]:= v5 @kind object;
  #L332c00.  call temp:= `a`(v3, v4) @signature `Lcom/google/a/a/f;.a:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L332c06.  v5:= temp @kind object;
  #L332c08.  return v5 @kind object;
}
