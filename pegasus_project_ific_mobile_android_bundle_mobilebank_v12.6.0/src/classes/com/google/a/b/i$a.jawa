record `com.google.a.b.i$a` @kind class @AccessFlag PUBLIC {
  `java.util.Comparator` `com.google.a.b.i$a.a` @AccessFlag ;
  `java.lang.Object`[] `com.google.a.b.i$a.b` @AccessFlag ;
  `int` `com.google.a.b.i$a.c` @AccessFlag ;
  `boolean` `com.google.a.b.i$a.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.a.b.i$a` v1 @kind this) @signature `Lcom/google/a/b/i$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3339c8.  v0:= 4I;
  #L3339ca.  call `<init>`(v1, v0) @signature `Lcom/google/a/b/i$a;.<init>:(I)V` @kind direct;
  #L3339d0.  return @kind void;
}
procedure `void` `<init>`(`com.google.a.b.i$a` v0 @kind this, `int` v1 ) @signature `Lcom/google/a/b/i$a;.<init>:(I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3339e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3339ea.  v1:= v1 * 2;
  #L3339ee.  v1:= new `java.lang.Object`[v1];
  #L3339f2.  v0.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] := v1 @kind object;
  #L3339f6.  v1:= 0I;
  #L3339f8.  v0.`com.google.a.b.i$a.c` @type ^`int` := v1;
  #L3339fc.  v0.`com.google.a.b.i$a.d` @type ^`boolean` := v1 @kind boolean;
  #L333a00.  return @kind void;
}
procedure `void` `a`(`com.google.a.b.i$a` v2 @kind this, `int` v3 ) @signature `Lcom/google/a/b/i$a;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L333a14.  v3:= v3 * 2;
  #L333a18.  v0:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333a1c.  v0:= length @variable v0;
  #L333a1e.  if v3 <= v0 then goto L333a46;
  #L333a22.  v0:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333a26.  v1:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333a2a.  v1:= length @variable v1;
  #L333a2c.  call temp:= `a`(v1, v3) @signature `Lcom/google/a/b/g$a;.a:(II)I` @kind static;
  #L333a32.  v3:= temp;
  #L333a34.  call temp:= `copyOf`(v0, v3) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L333a3a.  v3:= temp @kind object;
  #L333a3c.  v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] := v3 @kind object;
  #L333a40.  v3:= 0I;
  #L333a42.  v2.`com.google.a.b.i$a.d` @type ^`boolean` := v3 @kind boolean;
  #L333a46.  return @kind void;
}
procedure `com.google.a.b.i$a` `a`(`com.google.a.b.i$a` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/a/b/i$a;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/a/b/i$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L333970.  v0:= v2.`com.google.a.b.i$a.c` @type ^`int`;
  #L333974.  v0:= v0 + 1;
  #L333978.  call `a`(v2, v0) @signature `Lcom/google/a/b/i$a;.a:(I)V` @kind direct;
  #L33397e.  call `a`(v3, v4) @signature `Lcom/google/a/b/c;.a:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L333984.  v0:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333988.  v1:= v2.`com.google.a.b.i$a.c` @type ^`int`;
  #L33398c.  v1:= v1 * 2;
  #L333990.  v0[v1]:= v3 @kind object;
  #L333994.  v3:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333998.  v0:= v2.`com.google.a.b.i$a.c` @type ^`int`;
  #L33399c.  v0:= v0 * 2;
  #L3339a0.  v0:= v0 + 1;
  #L3339a4.  v3[v0]:= v4 @kind object;
  #L3339a8.  v3:= v2.`com.google.a.b.i$a.c` @type ^`int`;
  #L3339ac.  v3:= v3 + 1;
  #L3339b0.  v2.`com.google.a.b.i$a.c` @type ^`int` := v3;
  #L3339b4.  return v2 @kind object;
}
procedure `com.google.a.b.i` `a`(`com.google.a.b.i$a` v2 @kind this) @signature `Lcom/google/a/b/i$a;.a:()Lcom/google/a/b/i;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L333940.  call `b`(v2) @signature `Lcom/google/a/b/i$a;.b:()V` @kind virtual;
  #L333946.  v0:= 1I;
  #L333948.  v2.`com.google.a.b.i$a.d` @type ^`boolean` := v0 @kind boolean;
  #L33394c.  v0:= v2.`com.google.a.b.i$a.c` @type ^`int`;
  #L333950.  v1:= v2.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333954.  call temp:= `a`(v0, v1) @signature `Lcom/google/a/b/r;.a:(I[Ljava/lang/Object;)Lcom/google/a/b/r;` @kind static;
  #L33395a.  v0:= temp @kind object;
  #L33395c.  return v0 @kind object;
}
procedure `void` `b`(`com.google.a.b.i$a` v7 @kind this) @signature `Lcom/google/a/b/i$a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L333a58.  v0:= v7.`com.google.a.b.i$a.a` @type ^`java.util.Comparator` @kind object;
  #L333a5c.  if v0 == 0 then goto L333b24;
  #L333a60.  v0:= v7.`com.google.a.b.i$a.d` @type ^`boolean` @kind boolean;
  #L333a64.  if v0 == 0 then goto L333a80;
  #L333a68.  v0:= v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333a6c.  v1:= v7.`com.google.a.b.i$a.c` @type ^`int`;
  #L333a70.  v1:= v1 * 2;
  #L333a74.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L333a7a.  v0:= temp @kind object;
  #L333a7c.  v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L333a80.  v0:= v7.`com.google.a.b.i$a.c` @type ^`int`;
  #L333a84.  v0:= new `java.util.Map$Entry`[v0];
  #L333a88.  v1:= 0I;
  #L333a8a.  v2:= 0I;
  #L333a8c.  v3:= v7.`com.google.a.b.i$a.c` @type ^`int`;
  #L333a90.  if v2 >= v3 then goto L333ac0;
  #L333a94.  v3:= new `java.util.AbstractMap$SimpleImmutableEntry`;
  #L333a98.  v4:= v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333a9c.  v5:= v2 * 2;
  #L333aa0.  v4:= v4[v5] @kind object;
  #L333aa4.  v6:= v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333aa8.  v5:= v5 + 1;
  #L333aac.  v5:= v6[v5] @kind object;
  #L333ab0.  call `<init>`(v3, v4, v5) @signature `Ljava/util/AbstractMap$SimpleImmutableEntry;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L333ab6.  v0[v2]:= v3 @kind object;
  #L333aba.  v2:= v2 + 1;
  #L333abe.  goto L333a8c;
  #L333ac0.  v2:= v7.`com.google.a.b.i$a.c` @type ^`int`;
  #L333ac4.  v3:= v7.`com.google.a.b.i$a.a` @type ^`java.util.Comparator` @kind object;
  #L333ac8.  call temp:= `a`(v3) @signature `Lcom/google/a/b/o;.a:(Ljava/util/Comparator;)Lcom/google/a/b/o;` @kind static;
  #L333ace.  v3:= temp @kind object;
  #L333ad0.  call temp:= `a`() @signature `Lcom/google/a/b/m;.a:()Lcom/google/a/a/c;` @kind static;
  #L333ad6.  v4:= temp @kind object;
  #L333ad8.  call temp:= `a`(v3, v4) @signature `Lcom/google/a/b/o;.a:(Lcom/google/a/a/c;)Lcom/google/a/b/o;` @kind virtual;
  #L333ade.  v3:= temp @kind object;
  #L333ae0.  call `sort`(v0, v1, v2, v3) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;IILjava/util/Comparator;)V` @kind static;
  #L333ae6.  v2:= v7.`com.google.a.b.i$a.c` @type ^`int`;
  #L333aea.  if v1 >= v2 then goto L333b24;
  #L333aee.  v2:= v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333af2.  v3:= v1 * 2;
  #L333af6.  v4:= v0[v1] @kind object;
  #L333afa.  call temp:= `getKey`(v4) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L333b00.  v4:= temp @kind object;
  #L333b02.  v2[v3]:= v4 @kind object;
  #L333b06.  v2:= v7.`com.google.a.b.i$a.b` @type ^`java.lang.Object`[] @kind object;
  #L333b0a.  v3:= v3 + 1;
  #L333b0e.  v4:= v0[v1] @kind object;
  #L333b12.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L333b18.  v4:= temp @kind object;
  #L333b1a.  v2[v3]:= v4 @kind object;
  #L333b1e.  v1:= v1 + 1;
  #L333b22.  goto L333ae6;
  #L333b24.  return @kind void;
}
