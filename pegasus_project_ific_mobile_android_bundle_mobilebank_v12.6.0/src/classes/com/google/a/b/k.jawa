record `com.google.a.b.k` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `com.google.a.b.w` `a`(`java.lang.Object` v1 @kind object) @signature `Lcom/google/a/b/k;.a:(Ljava/lang/Object;)Lcom/google/a/b/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3345f4.  v0:= new `com.google.a.b.k$1`;
  #L3345f8.  call `<init>`(v0, v1) @signature `Lcom/google/a/b/k$1;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3345fe.  return v0 @kind object;
}
procedure `boolean` `a`(`java.util.Iterator` v3 @kind object, `java.util.Iterator` v4 @kind object) @signature `Lcom/google/a/b/k;.a:(Ljava/util/Iterator;Ljava/util/Iterator;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L33459c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3345a2.  v0:= temp;
  #L3345a4.  if v0 == 0 then goto L3345d6;
  #L3345a8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3345ae.  v0:= temp;
  #L3345b0.  v1:= 0I;
  #L3345b2.  if v0 != 0 then goto L3345b8;
  #L3345b6.  return v1;
  #L3345b8.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3345be.  v0:= temp @kind object;
  #L3345c0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3345c6.  v2:= temp @kind object;
  #L3345c8.  call temp:= `a`(v0, v2) @signature `Lcom/google/a/a/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3345ce.  v0:= temp;
  #L3345d0.  if v0 != 0 then goto L33459c;
  #L3345d4.  return v1;
  #L3345d6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3345dc.  v3:= temp;
  #L3345de.  v3:= v3 ^~ 1;
  #L3345e2.  return v3;
}
