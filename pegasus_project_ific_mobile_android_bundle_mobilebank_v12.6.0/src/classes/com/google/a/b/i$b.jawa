record `com.google.a.b.i$b` @kind class @AccessFlag  extends `java.io.Serializable` @kind interface {
  `java.lang.Object`[] `com.google.a.b.i$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object`[] `com.google.a.b.i$b.b` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@com.google.a.b.i$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.google.a.b.i$b` v4 @kind this, `com.google.a.b.i` v5 @kind object) @signature `Lcom/google/a/b/i$b;.<init>:(Lcom/google/a/b/i;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333ba8.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L333bae.  call temp:= `size`(v5) @signature `Lcom/google/a/b/i;.size:()I` @kind virtual;
  #L333bb4.  v0:= temp;
  #L333bb6.  v0:= new `java.lang.Object`[v0];
  #L333bba.  v4.`com.google.a.b.i$b.a` @type ^`java.lang.Object`[] := v0 @kind object;
  #L333bbe.  call temp:= `size`(v5) @signature `Lcom/google/a/b/i;.size:()I` @kind virtual;
  #L333bc4.  v0:= temp;
  #L333bc6.  v0:= new `java.lang.Object`[v0];
  #L333bca.  v4.`com.google.a.b.i$b.b` @type ^`java.lang.Object`[] := v0 @kind object;
  #L333bce.  call temp:= `b`(v5) @signature `Lcom/google/a/b/i;.b:()Lcom/google/a/b/j;` @kind virtual;
  #L333bd4.  v5:= temp @kind object;
  #L333bd6.  call temp:= `a`(v5) @signature `Lcom/google/a/b/j;.a:()Lcom/google/a/b/w;` @kind virtual;
  #L333bdc.  v5:= temp @kind object;
  #L333bde.  v0:= 0I;
  #L333be0.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L333be6.  v1:= temp;
  #L333be8.  if v1 == 0 then goto L333c1e;
  #L333bec.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L333bf2.  v1:= temp @kind object;
  #L333bf4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L333bf8.  v2:= v4.`com.google.a.b.i$b.a` @type ^`java.lang.Object`[] @kind object;
  #L333bfc.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L333c02.  v3:= temp @kind object;
  #L333c04.  v2[v0]:= v3 @kind object;
  #L333c08.  v2:= v4.`com.google.a.b.i$b.b` @type ^`java.lang.Object`[] @kind object;
  #L333c0c.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L333c12.  v1:= temp @kind object;
  #L333c14.  v2[v0]:= v1 @kind object;
  #L333c18.  v0:= v0 + 1;
  #L333c1c.  goto L333be0;
  #L333c1e.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.google.a.b.i$b` v3 @kind this, `com.google.a.b.i$a` v4 @kind object) @signature `Lcom/google/a/b/i$b;.a:(Lcom/google/a/b/i$a;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L333b38.  v0:= 0I;
  #L333b3a.  v1:= v3.`com.google.a.b.i$b.a` @type ^`java.lang.Object`[] @kind object;
  #L333b3e.  v1:= length @variable v1;
  #L333b40.  if v0 >= v1 then goto L333b60;
  #L333b44.  v1:= v3.`com.google.a.b.i$b.a` @type ^`java.lang.Object`[] @kind object;
  #L333b48.  v1:= v1[v0] @kind object;
  #L333b4c.  v2:= v3.`com.google.a.b.i$b.b` @type ^`java.lang.Object`[] @kind object;
  #L333b50.  v2:= v2[v0] @kind object;
  #L333b54.  call temp:= `a`(v4, v1, v2) @signature `Lcom/google/a/b/i$a;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/a/b/i$a;` @kind virtual;
  #L333b5a.  v0:= v0 + 1;
  #L333b5e.  goto L333b3a;
  #L333b60.  call temp:= `a`(v4) @signature `Lcom/google/a/b/i$a;.a:()Lcom/google/a/b/i;` @kind virtual;
  #L333b66.  v4:= temp @kind object;
  #L333b68.  return v4 @kind object;
}
procedure `java.lang.Object` `readResolve`(`com.google.a.b.i$b` v2 @kind this) @signature `Lcom/google/a/b/i$b;.readResolve:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L333b7c.  v0:= new `com.google.a.b.i$a`;
  #L333b80.  v1:= v2.`com.google.a.b.i$b.a` @type ^`java.lang.Object`[] @kind object;
  #L333b84.  v1:= length @variable v1;
  #L333b86.  call `<init>`(v0, v1) @signature `Lcom/google/a/b/i$a;.<init>:(I)V` @kind direct;
  #L333b8c.  call temp:= `a`(v2, v0) @signature `Lcom/google/a/b/i$b;.a:(Lcom/google/a/b/i$a;)Ljava/lang/Object;` @kind virtual;
  #L333b92.  v0:= temp @kind object;
  #L333b94.  return v0 @kind object;
}
