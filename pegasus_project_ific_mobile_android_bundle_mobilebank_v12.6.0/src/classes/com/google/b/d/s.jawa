record `com.google.b.d.s` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.b.d.q` @kind class {
}
procedure `void` `<init>`(`com.google.b.d.s` v0 @kind this) @signature `Lcom/google/b/d/s;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ac92c.  call `<init>`(v0) @signature `Lcom/google/b/d/q;.<init>:()V` @kind direct;
  #L3ac932.  return @kind void;
}
procedure `com.google.b.b.b` `a`(`com.google.b.d.s` v1 @kind this, `java.lang.String` v2 @kind object, `com.google.b.a` v3 @kind object, `int` v4 , `int` v5 , `java.util.Map` v6 @kind object) @signature `Lcom/google/b/d/s;.a:(Ljava/lang/String;Lcom/google/b/a;IILjava/util/Map;)Lcom/google/b/b/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ac8e0.  v0:= `@@com.google.b.a.p` @type ^`com.google.b.a` @kind object;
  #L3ac8e4.  if v3 == v0 then goto L3ac910;
  #L3ac8e8.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ac8ec.  v4:= new `java.lang.StringBuilder`;
  #L3ac8f0.  v5:= "Can only encode UPC_E, but got " @kind object;
  #L3ac8f4.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac8fa.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac900.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac906.  v3:= temp @kind object;
  #L3ac908.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac90e.  throw v2;
  #L3ac910.  call temp:= `a`(v1, v2, v3, v4, v5, v6) @signature `Lcom/google/b/d/q;.a:(Ljava/lang/String;Lcom/google/b/a;IILjava/util/Map;)Lcom/google/b/b/b;` @kind super;
  #L3ac916.  v2:= temp @kind object;
  #L3ac918.  return v2 @kind object;
}
procedure `boolean`[] `a`(`com.google.b.d.s` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/google/b/d/s;.a:(Ljava/lang/String;)[Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ac754.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ac75a.  v0:= temp;
  #L3ac75c.  goto L3ac8a4;
  #L3ac762.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ac766.  v1:= new `java.lang.StringBuilder`;
  #L3ac76a.  v2:= "Requested contents should be 8 digits long, but got " @kind object;
  #L3ac76e.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac774.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac77a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac780.  v0:= temp @kind object;
  #L3ac782.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac788.  throw v10;
  #L3ac78a.  call temp:= `a`(v10) @signature `Lcom/google/b/d/p;.a:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3ac790.  v0:= temp;
  #L3ac792.  if v0 != 0 then goto L3ac7e4;
  #L3ac796.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ac79a.  v0:= "Contents do not pass checksum" @kind object;
  #L3ac79e.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac7a4.  throw v10;
  #L3ac7a6.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ac7aa.  v0:= "Illegal contents" @kind object;
  #L3ac7ae.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac7b4.  throw v10;
  #L3ac7b6.  call temp:= `a`(v10) @signature `Lcom/google/b/d/r;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3ac7bc.  v0:= temp @kind object;
  #L3ac7be.  call temp:= `b`(v0) @signature `Lcom/google/b/d/p;.b:(Ljava/lang/CharSequence;)I` @kind static;
  #L3ac7c4.  v0:= temp;
  #L3ac7c6.  v1:= new `java.lang.StringBuilder`;
  #L3ac7ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ac7d0.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac7d6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ac7dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ac7e2.  v10:= temp @kind object;
  #L3ac7e4.  v0:= 0I;
  #L3ac7e6.  call temp:= `charAt`(v10, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ac7ec.  v1:= temp;
  #L3ac7ee.  v2:= 10I;
  #L3ac7f2.  call temp:= `digit`(v1, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3ac7f8.  v1:= temp;
  #L3ac7fa.  v3:= 1I;
  #L3ac7fc.  if v1 == 0 then goto L3ac814;
  #L3ac800.  if v1 == v3 then goto L3ac814;
  #L3ac804.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ac808.  v0:= "Number system must be 0 or 1" @kind object;
  #L3ac80c.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ac812.  throw v10;
  #L3ac814.  v4:= 7I;
  #L3ac816.  call temp:= `charAt`(v10, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ac81c.  v4:= temp;
  #L3ac81e.  call temp:= `digit`(v4, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3ac824.  v4:= temp;
  #L3ac826.  v5:= `@@com.google.b.d.r.a` @type ^`int`[][] @kind object;
  #L3ac82a.  v1:= v5[v1] @kind object;
  #L3ac82e.  v1:= v1[v4];
  #L3ac832.  v4:= 51I;
  #L3ac836.  v4:= new `boolean`[v4];
  #L3ac83a.  v5:= `@@com.google.b.d.p.b` @type ^`int`[] @kind object;
  #L3ac83e.  call temp:= `a`(v4, v0, v5, v3) @signature `Lcom/google/b/d/s;.a:([ZI[IZ)I` @kind static;
  #L3ac844.  v5:= temp;
  #L3ac846.  v5:= v5 + v0 @kind int;
  #L3ac848.  v6:= v5;
  #L3ac84a.  v5:= 1I;
  #L3ac84c.  v7:= 6I;
  #L3ac84e.  if v5 > v7 then goto L3ac88a;
  #L3ac852.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3ac858.  v8:= temp;
  #L3ac85a.  call temp:= `digit`(v8, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3ac860.  v8:= temp;
  #L3ac862.  v7:= v7 - v5 @kind int;
  #L3ac864.  v7:= v1 ^> v7 @kind int;
  #L3ac868.  v7:= v7 ^& v3 @kind int;
  #L3ac86a.  if v7 != v3 then goto L3ac872;
  #L3ac86e.  v8:= v8 + 10;
  #L3ac872.  v7:= `@@com.google.b.d.p.f` @type ^`int`[][] @kind object;
  #L3ac876.  v7:= v7[v8] @kind object;
  #L3ac87a.  call temp:= `a`(v4, v6, v7, v0) @signature `Lcom/google/b/d/s;.a:([ZI[IZ)I` @kind static;
  #L3ac880.  v7:= temp;
  #L3ac882.  v6:= v6 + v7 @kind int;
  #L3ac884.  v5:= v5 + 1;
  #L3ac888.  goto L3ac84c;
  #L3ac88a.  v10:= `@@com.google.b.d.p.d` @type ^`int`[] @kind object;
  #L3ac88e.  call temp:= `a`(v4, v6, v10, v0) @signature `Lcom/google/b/d/s;.a:([ZI[IZ)I` @kind static;
  #L3ac894.  return v4 @kind object;
  #L3ac896.  v10:= Exception @type ^`com.google.b.d` @kind object;
  #L3ac898.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ac89c.  call `<init>`(v0, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3ac8a2.  throw v0;
  #L3ac8a4.  switch v0
                  | 7 => goto L3ac7b6
                  | 8 => goto L3ac78a
                  | else => goto L3ac762;
  catch `com.google.b.d` @[L3ac78a..L3ac7a6] goto L3ac7a6;
  catch `com.google.b.d` @[L3ac7b6..L3ac7c6] goto L3ac896;
}
