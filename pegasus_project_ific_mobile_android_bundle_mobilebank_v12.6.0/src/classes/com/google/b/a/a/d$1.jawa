record `com.google.b.a.a.d$1` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
  `com.google.b.a.a.d` `com.google.b.a.a.d$1.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.b.a.a.d$1` v0 @kind this, `com.google.b.a.a.d` v1 @kind object) @signature `Lcom/google/b/a/a/d$1;.<init>:(Lcom/google/b/a/a/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a2be4.  v0.`com.google.b.a.a.d$1.a` @type ^`com.google.b.a.a.d` := v1 @kind object;
  #L3a2be8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a2bee.  return @kind void;
}
procedure `int` `a`(`com.google.b.a.a.d$1` v0 @kind this, `com.google.b.a.a.f` v1 @kind object, `com.google.b.a.a.f` v2 @kind object) @signature `Lcom/google/b/a/a/d$1;.a:(Lcom/google/b/a/a/f;Lcom/google/b/a/a/f;)I` @AccessFlag PUBLIC {
    temp;

  #L3a2b9c.  call temp:= `c`(v1) @signature `Lcom/google/b/a/a/f;.c:()I` @kind virtual;
  #L3a2ba2.  v1:= temp;
  #L3a2ba4.  call temp:= `c`(v2) @signature `Lcom/google/b/a/a/f;.c:()I` @kind virtual;
  #L3a2baa.  v2:= temp;
  #L3a2bac.  v1:= v1 - v2 @kind int;
  #L3a2bae.  return v1;
}
procedure `int` `compare`(`com.google.b.a.a.d$1` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/b/a/a/d$1;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3a2bc0.  v1:= (`com.google.b.a.a.f`) v1 @kind object;
  #L3a2bc4.  v2:= (`com.google.b.a.a.f`) v2 @kind object;
  #L3a2bc8.  call temp:= `a`(v0, v1, v2) @signature `Lcom/google/b/a/a/d$1;.a:(Lcom/google/b/a/a/f;Lcom/google/b/a/a/f;)I` @kind virtual;
  #L3a2bce.  v1:= temp;
  #L3a2bd0.  return v1;
}
