record `com.google.b.b.b` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `int` `com.google.b.b.b.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.b.b.b.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.b.b.b.c` @AccessFlag PRIVATE_FINAL;
  `int`[] `com.google.b.b.b.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.b.b.b` v0 @kind this, `int` v1 ) @signature `Lcom/google/b/b/b;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a4c14.  call `<init>`(v0, v1, v1) @signature `Lcom/google/b/b/b;.<init>:(II)V` @kind direct;
  #L3a4c1a.  return @kind void;
}
procedure `void` `<init>`(`com.google.b.b.b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/google/b/b/b;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3a4c2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4c32.  if v1 <= 0 then goto L3a4c62;
  #L3a4c36.  if v2 > 0 then goto L3a4c3c;
  #L3a4c3a.  goto L3a4c62;
  #L3a4c3c.  v0.`com.google.b.b.b.a` @type ^`int` := v1;
  #L3a4c40.  v0.`com.google.b.b.b.b` @type ^`int` := v2;
  #L3a4c44.  v1:= v1 + 31;
  #L3a4c48.  v1:= v1 / 32;
  #L3a4c4c.  v0.`com.google.b.b.b.c` @type ^`int` := v1;
  #L3a4c50.  v1:= v0.`com.google.b.b.b.c` @type ^`int`;
  #L3a4c54.  v1:= v1 * v2 @kind int;
  #L3a4c58.  v1:= new `int`[v1];
  #L3a4c5c.  v0.`com.google.b.b.b.d` @type ^`int`[] := v1 @kind object;
  #L3a4c60.  return @kind void;
  #L3a4c62.  v1:= new `java.lang.IllegalArgumentException`;
  #L3a4c66.  v2:= "Both dimensions must be greater than 0" @kind object;
  #L3a4c6a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4c70.  throw v1;
}
procedure `void` `<init>`(`com.google.b.b.b` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int`[] v4 @kind object) @signature `Lcom/google/b/b/b;.<init>:(III[I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3a4c84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a4c8a.  v0.`com.google.b.b.b.a` @type ^`int` := v1;
  #L3a4c8e.  v0.`com.google.b.b.b.b` @type ^`int` := v2;
  #L3a4c92.  v0.`com.google.b.b.b.c` @type ^`int` := v3;
  #L3a4c96.  v0.`com.google.b.b.b.d` @type ^`int`[] := v4 @kind object;
  #L3a4c9a.  return @kind void;
}
procedure `java.lang.String` `a`(`com.google.b.b.b` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lcom/google/b/b/b;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a4b7c.  v0:= new `java.lang.StringBuilder`;
  #L3a4b80.  v1:= v5.`com.google.b.b.b.b` @type ^`int`;
  #L3a4b84.  v2:= v5.`com.google.b.b.b.a` @type ^`int`;
  #L3a4b88.  v2:= v2 + 1;
  #L3a4b8c.  v1:= v1 * v2 @kind int;
  #L3a4b90.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3a4b96.  v1:= 0I;
  #L3a4b98.  v2:= 0I;
  #L3a4b9a.  v3:= v5.`com.google.b.b.b.b` @type ^`int`;
  #L3a4b9e.  if v2 >= v3 then goto L3a4bd6;
  #L3a4ba2.  v3:= 0I;
  #L3a4ba4.  v4:= v5.`com.google.b.b.b.a` @type ^`int`;
  #L3a4ba8.  if v3 >= v4 then goto L3a4bca;
  #L3a4bac.  call temp:= `a`(v5, v3, v2) @signature `Lcom/google/b/b/b;.a:(II)Z` @kind virtual;
  #L3a4bb2.  v4:= temp;
  #L3a4bb4.  if v4 == 0 then goto L3a4bbc;
  #L3a4bb8.  v4:= v6 @kind object;
  #L3a4bba.  goto L3a4bbe;
  #L3a4bbc.  v4:= v7 @kind object;
  #L3a4bbe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4bc4.  v3:= v3 + 1;
  #L3a4bc8.  goto L3a4ba4;
  #L3a4bca.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a4bd0.  v2:= v2 + 1;
  #L3a4bd4.  goto L3a4b9a;
  #L3a4bd6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a4bdc.  v6:= temp @kind object;
  #L3a4bde.  return v6 @kind object;
}
procedure `java.lang.String` `a`(`com.google.b.b.b` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/google/b/b/b;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a4b5c.  v0:= "\n" @kind object;
  #L3a4b60.  call temp:= `a`(v1, v2, v3, v0) @signature `Lcom/google/b/b/b;.a:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3a4b66.  v2:= temp @kind object;
  #L3a4b68.  return v2 @kind object;
}
procedure `void` `a`(`com.google.b.b.b` v4 @kind this) @signature `Lcom/google/b/b/b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a4cac.  v0:= v4.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4cb0.  v0:= length @variable v0;
  #L3a4cb2.  v1:= 0I;
  #L3a4cb4.  v2:= 0I;
  #L3a4cb6.  if v2 >= v0 then goto L3a4cc8;
  #L3a4cba.  v3:= v4.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4cbe.  v3[v2]:= v1;
  #L3a4cc2.  v2:= v2 + 1;
  #L3a4cc6.  goto L3a4cb6;
  #L3a4cc8.  return @kind void;
}
procedure `void` `a`(`com.google.b.b.b` v7 @kind this, `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Lcom/google/b/b/b;.a:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3a4cdc.  if v9 < 0 then goto L3a4d64;
  #L3a4ce0.  if v8 >= 0 then goto L3a4ce6;
  #L3a4ce4.  goto L3a4d64;
  #L3a4ce6.  if v11 <= 0 then goto L3a4d54;
  #L3a4cea.  if v10 > 0 then goto L3a4cf0;
  #L3a4cee.  goto L3a4d54;
  #L3a4cf0.  v10:= v10 + v8 @kind int;
  #L3a4cf2.  v11:= v11 + v9 @kind int;
  #L3a4cf4.  v0:= v7.`com.google.b.b.b.b` @type ^`int`;
  #L3a4cf8.  if v11 > v0 then goto L3a4d44;
  #L3a4cfc.  v0:= v7.`com.google.b.b.b.a` @type ^`int`;
  #L3a4d00.  if v10 <= v0 then goto L3a4d06;
  #L3a4d04.  goto L3a4d44;
  #L3a4d06.  if v9 >= v11 then goto L3a4d42;
  #L3a4d0a.  v0:= v7.`com.google.b.b.b.c` @type ^`int`;
  #L3a4d0e.  v0:= v0 * v9 @kind int;
  #L3a4d12.  v1:= v8;
  #L3a4d14.  if v1 >= v10 then goto L3a4d3c;
  #L3a4d18.  v2:= v7.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4d1c.  v3:= v1 / 32;
  #L3a4d20.  v3:= v3 + v0 @kind int;
  #L3a4d22.  v4:= v2[v3];
  #L3a4d26.  v5:= v1 ^& 31;
  #L3a4d2a.  v6:= 1I;
  #L3a4d2c.  v5:= v6 ^< v5 @kind int;
  #L3a4d30.  v4:= v4 ^| v5 @kind int;
  #L3a4d32.  v2[v3]:= v4;
  #L3a4d36.  v1:= v1 + 1;
  #L3a4d3a.  goto L3a4d14;
  #L3a4d3c.  v9:= v9 + 1;
  #L3a4d40.  goto L3a4d06;
  #L3a4d42.  return @kind void;
  #L3a4d44.  v8:= new `java.lang.IllegalArgumentException`;
  #L3a4d48.  v9:= "The region must fit inside the matrix" @kind object;
  #L3a4d4c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4d52.  throw v8;
  #L3a4d54.  v8:= new `java.lang.IllegalArgumentException`;
  #L3a4d58.  v9:= "Height and width must be at least 1" @kind object;
  #L3a4d5c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4d62.  throw v8;
  #L3a4d64.  v8:= new `java.lang.IllegalArgumentException`;
  #L3a4d68.  v9:= "Left and top must be nonnegative" @kind object;
  #L3a4d6c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4d72.  throw v8;
}
procedure `boolean` `a`(`com.google.b.b.b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/google/b/b/b;.a:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a49f4.  v0:= v1.`com.google.b.b.b.c` @type ^`int`;
  #L3a49f8.  v3:= v3 * v0 @kind int;
  #L3a49fc.  v0:= v2 / 32;
  #L3a4a00.  v3:= v3 + v0 @kind int;
  #L3a4a02.  v0:= v1.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4a06.  v3:= v0[v3];
  #L3a4a0a.  v2:= v2 ^& 31;
  #L3a4a0e.  v2:= v3 ^>> v2 @kind int;
  #L3a4a12.  v3:= 1I;
  #L3a4a14.  v2:= v2 ^& v3 @kind int;
  #L3a4a16.  if v2 == 0 then goto L3a4a1c;
  #L3a4a1a.  return v3;
  #L3a4a1c.  v2:= 0I;
  #L3a4a1e.  return v2;
}
procedure `int` `b`(`com.google.b.b.b` v1 @kind this) @signature `Lcom/google/b/b/b;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a4ac8.  v0:= v1.`com.google.b.b.b.a` @type ^`int`;
  #L3a4acc.  return v0;
}
procedure `void` `b`(`com.google.b.b.b` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lcom/google/b/b/b;.b:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4d84.  v0:= v3.`com.google.b.b.b.c` @type ^`int`;
  #L3a4d88.  v5:= v5 * v0 @kind int;
  #L3a4d8c.  v0:= v4 / 32;
  #L3a4d90.  v5:= v5 + v0 @kind int;
  #L3a4d92.  v0:= v3.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4d96.  v1:= v0[v5];
  #L3a4d9a.  v4:= v4 ^& 31;
  #L3a4d9e.  v2:= 1I;
  #L3a4da0.  v4:= v2 ^< v4 @kind int;
  #L3a4da4.  v4:= v4 ^| v1 @kind int;
  #L3a4da6.  v0[v5]:= v4;
  #L3a4daa.  return @kind void;
}
procedure `int` `c`(`com.google.b.b.b` v1 @kind this) @signature `Lcom/google/b/b/b;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a4ae0.  v0:= v1.`com.google.b.b.b.b` @type ^`int`;
  #L3a4ae4.  return v0;
}
procedure `java.lang.Object` `clone`(`com.google.b.b.b` v1 @kind this) @signature `Lcom/google/b/b/b;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3a4b40.  call temp:= `d`(v1) @signature `Lcom/google/b/b/b;.d:()Lcom/google/b/b/b;` @kind virtual;
  #L3a4b46.  v0:= temp @kind object;
  #L3a4b48.  return v0 @kind object;
}
procedure `com.google.b.b.b` `d`(`com.google.b.b.b` v5 @kind this) @signature `Lcom/google/b/b/b;.d:()Lcom/google/b/b/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3a4a90.  v0:= new `com.google.b.b.b`;
  #L3a4a94.  v1:= v5.`com.google.b.b.b.a` @type ^`int`;
  #L3a4a98.  v2:= v5.`com.google.b.b.b.b` @type ^`int`;
  #L3a4a9c.  v3:= v5.`com.google.b.b.b.c` @type ^`int`;
  #L3a4aa0.  v4:= v5.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4aa4.  call temp:= `clone`(v4) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L3a4aaa.  v4:= temp @kind object;
  #L3a4aac.  v4:= (`int`[]) v4 @kind object;
  #L3a4ab0.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/b/b/b;.<init>:(III[I)V` @kind direct;
  #L3a4ab6.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.google.b.b.b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/b/b/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4a30.  v0:= instanceof @variable v4 @type ^`com.google.b.b.b` @kind boolean;
  #L3a4a34.  v1:= 0I;
  #L3a4a36.  if v0 != 0 then goto L3a4a3c;
  #L3a4a3a.  return v1;
  #L3a4a3c.  v4:= (`com.google.b.b.b`) v4 @kind object;
  #L3a4a40.  v0:= v3.`com.google.b.b.b.a` @type ^`int`;
  #L3a4a44.  v2:= v4.`com.google.b.b.b.a` @type ^`int`;
  #L3a4a48.  if v0 != v2 then goto L3a4a7c;
  #L3a4a4c.  v0:= v3.`com.google.b.b.b.b` @type ^`int`;
  #L3a4a50.  v2:= v4.`com.google.b.b.b.b` @type ^`int`;
  #L3a4a54.  if v0 != v2 then goto L3a4a7c;
  #L3a4a58.  v0:= v3.`com.google.b.b.b.c` @type ^`int`;
  #L3a4a5c.  v2:= v4.`com.google.b.b.b.c` @type ^`int`;
  #L3a4a60.  if v0 != v2 then goto L3a4a7c;
  #L3a4a64.  v0:= v3.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4a68.  v4:= v4.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4a6c.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L3a4a72.  v4:= temp;
  #L3a4a74.  if v4 == 0 then goto L3a4a7c;
  #L3a4a78.  v4:= 1I;
  #L3a4a7a.  return v4;
  #L3a4a7c.  return v1;
}
procedure `int` `hashCode`(`com.google.b.b.b` v2 @kind this) @signature `Lcom/google/b/b/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4af8.  v0:= v2.`com.google.b.b.b.a` @type ^`int`;
  #L3a4afc.  v0:= v0 * 31;
  #L3a4b00.  v1:= v2.`com.google.b.b.b.a` @type ^`int`;
  #L3a4b04.  v0:= v0 + v1 @kind int;
  #L3a4b06.  v0:= v0 * 31;
  #L3a4b0a.  v1:= v2.`com.google.b.b.b.b` @type ^`int`;
  #L3a4b0e.  v0:= v0 + v1 @kind int;
  #L3a4b10.  v0:= v0 * 31;
  #L3a4b14.  v1:= v2.`com.google.b.b.b.c` @type ^`int`;
  #L3a4b18.  v0:= v0 + v1 @kind int;
  #L3a4b1a.  v0:= v0 * 31;
  #L3a4b1e.  v1:= v2.`com.google.b.b.b.d` @type ^`int`[] @kind object;
  #L3a4b22.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L3a4b28.  v1:= temp;
  #L3a4b2a.  v0:= v0 + v1 @kind int;
  #L3a4b2c.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.b.b.b` v2 @kind this) @signature `Lcom/google/b/b/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4bf0.  v0:= "X " @kind object;
  #L3a4bf4.  v1:= "  " @kind object;
  #L3a4bf8.  call temp:= `a`(v2, v0, v1) @signature `Lcom/google/b/b/b;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3a4bfe.  v0:= temp @kind object;
  #L3a4c00.  return v0 @kind object;
}
