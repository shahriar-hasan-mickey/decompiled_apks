record `com.google.b.b.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Cloneable` @kind interface {
  `int`[] `com.google.b.b.a.a` @AccessFlag PRIVATE;
  `int` `com.google.b.b.a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.b.b.a` v1 @kind this) @signature `Lcom/google/b/b/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3a47c8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a47ce.  v0:= 0I;
  #L3a47d0.  v1.`com.google.b.b.a.b` @type ^`int` := v0;
  #L3a47d4.  v0:= 1I;
  #L3a47d6.  v0:= new `int`[v0];
  #L3a47da.  v1.`com.google.b.b.a.a` @type ^`int`[] := v0 @kind object;
  #L3a47de.  return @kind void;
}
procedure `void` `<init>`(`com.google.b.b.a` v0 @kind this, `int`[] v1 @kind object, `int` v2 ) @signature `Lcom/google/b/b/a;.<init>:([II)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3a47f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3a47f6.  v0.`com.google.b.b.a.a` @type ^`int`[] := v1 @kind object;
  #L3a47fa.  v0.`com.google.b.b.a.b` @type ^`int` := v2;
  #L3a47fe.  return @kind void;
}
procedure `void` `b`(`com.google.b.b.a` v3 @kind this, `int` v4 ) @signature `Lcom/google/b/b/a;.b:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3a49b4.  v0:= v3.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a49b8.  v0:= length @variable v0;
  #L3a49ba.  v0:= v0 ^< 5;
  #L3a49be.  if v4 <= v0 then goto L3a49e0;
  #L3a49c2.  call temp:= `c`(v4) @signature `Lcom/google/b/b/a;.c:(I)[I` @kind static;
  #L3a49c8.  v4:= temp @kind object;
  #L3a49ca.  v0:= v3.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a49ce.  v1:= v3.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a49d2.  v1:= length @variable v1;
  #L3a49d4.  v2:= 0I;
  #L3a49d6.  call `arraycopy`(v0, v2, v4, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3a49dc.  v3.`com.google.b.b.a.a` @type ^`int`[] := v4 @kind object;
  #L3a49e0.  return @kind void;
}
procedure `int`[] `c`(`int` v0 ) @signature `Lcom/google/b/b/a;.c:(I)[I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3a4724.  v0:= v0 + 31;
  #L3a4728.  v0:= v0 / 32;
  #L3a472c.  v0:= new `int`[v0];
  #L3a4730.  return v0 @kind object;
}
procedure `int` `a`(`com.google.b.b.a` v1 @kind this) @signature `Lcom/google/b/b/a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a46c4.  v0:= v1.`com.google.b.b.a.b` @type ^`int`;
  #L3a46c8.  return v0;
}
procedure `void` `a`(`com.google.b.b.a` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/google/b/b/a;.a:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a48fc.  if v4 < 0 then goto L3a493c;
  #L3a4900.  v0:= 32I;
  #L3a4904.  if v4 <= v0 then goto L3a490a;
  #L3a4908.  goto L3a493c;
  #L3a490a.  v0:= v2.`com.google.b.b.a.b` @type ^`int`;
  #L3a490e.  v0:= v0 + v4 @kind int;
  #L3a4910.  call `b`(v2, v0) @signature `Lcom/google/b/b/a;.b:(I)V` @kind direct;
  #L3a4916.  if v4 <= 0 then goto L3a493a;
  #L3a491a.  v0:= v4 + -1;
  #L3a491e.  v0:= v3 ^> v0 @kind int;
  #L3a4922.  v1:= 1I;
  #L3a4924.  v0:= v0 ^& v1 @kind int;
  #L3a4926.  if v0 != v1 then goto L3a492c;
  #L3a492a.  goto L3a492e;
  #L3a492c.  v1:= 0I;
  #L3a492e.  call `a`(v2, v1) @signature `Lcom/google/b/b/a;.a:(Z)V` @kind virtual;
  #L3a4934.  v4:= v4 + -1;
  #L3a4938.  goto L3a4916;
  #L3a493a.  return @kind void;
  #L3a493c.  v3:= new `java.lang.IllegalArgumentException`;
  #L3a4940.  v4:= "Num bits must be between 0 and 32" @kind object;
  #L3a4944.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a494a.  throw v3;
}
procedure `void` `a`(`com.google.b.b.a` v6 @kind this, `int` v7 , `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lcom/google/b/b/a;.a:(I[BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3a489c.  v0:= 0I;
  #L3a489e.  v1:= v7;
  #L3a48a0.  v7:= 0I;
  #L3a48a2.  if v7 >= v10 then goto L3a48e8;
  #L3a48a6.  v2:= v1;
  #L3a48a8.  v1:= 0I;
  #L3a48aa.  v3:= 0I;
  #L3a48ac.  v4:= 8I;
  #L3a48b0.  if v1 >= v4 then goto L3a48d6;
  #L3a48b4.  call temp:= `a`(v6, v2) @signature `Lcom/google/b/b/a;.a:(I)Z` @kind virtual;
  #L3a48ba.  v4:= temp;
  #L3a48bc.  if v4 == 0 then goto L3a48cc;
  #L3a48c0.  v4:= v1 - 7;
  #L3a48c4.  v5:= 1I;
  #L3a48c6.  v4:= v5 ^< v4 @kind int;
  #L3a48ca.  v3:= v3 ^| v4 @kind int;
  #L3a48cc.  v2:= v2 + 1;
  #L3a48d0.  v1:= v1 + 1;
  #L3a48d4.  goto L3a48ac;
  #L3a48d6.  v1:= v9 + v7 @kind int;
  #L3a48da.  v3:= (`byte`) v3 @kind i2b;
  #L3a48dc.  v8[v1]:= v3 @kind byte;
  #L3a48e0.  v7:= v7 + 1;
  #L3a48e4.  v1:= v2;
  #L3a48e6.  goto L3a48a2;
  #L3a48e8.  return @kind void;
}
procedure `void` `a`(`com.google.b.b.a` v3 @kind this, `com.google.b.b.a` v4 @kind object) @signature `Lcom/google/b/b/a;.a:(Lcom/google/b/b/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4860.  v0:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4864.  v1:= v3.`com.google.b.b.a.b` @type ^`int`;
  #L3a4868.  v1:= v1 + v0 @kind int;
  #L3a486a.  call `b`(v3, v1) @signature `Lcom/google/b/b/a;.b:(I)V` @kind direct;
  #L3a4870.  v1:= 0I;
  #L3a4872.  if v1 >= v0 then goto L3a488a;
  #L3a4876.  call temp:= `a`(v4, v1) @signature `Lcom/google/b/b/a;.a:(I)Z` @kind virtual;
  #L3a487c.  v2:= temp;
  #L3a487e.  call `a`(v3, v2) @signature `Lcom/google/b/b/a;.a:(Z)V` @kind virtual;
  #L3a4884.  v1:= v1 + 1;
  #L3a4888.  goto L3a4872;
  #L3a488a.  return @kind void;
}
procedure `void` `a`(`com.google.b.b.a` v4 @kind this, `boolean` v5 ) @signature `Lcom/google/b/b/a;.a:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a4810.  v0:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4814.  v1:= 1I;
  #L3a4816.  v0:= v0 + v1 @kind int;
  #L3a4818.  call `b`(v4, v0) @signature `Lcom/google/b/b/a;.b:(I)V` @kind direct;
  #L3a481e.  if v5 == 0 then goto L3a4844;
  #L3a4822.  v5:= v4.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a4826.  v0:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a482a.  v0:= v0 / 32;
  #L3a482e.  v2:= v5[v0];
  #L3a4832.  v3:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4836.  v3:= v3 ^& 31;
  #L3a483a.  v3:= v1 ^< v3 @kind int;
  #L3a483e.  v2:= v2 ^| v3 @kind int;
  #L3a4840.  v5[v0]:= v2;
  #L3a4844.  v5:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4848.  v5:= v5 + v1 @kind int;
  #L3a484a.  v4.`com.google.b.b.a.b` @type ^`int` := v5;
  #L3a484e.  return @kind void;
}
procedure `boolean` `a`(`com.google.b.b.a` v2 @kind this, `int` v3 ) @signature `Lcom/google/b/b/a;.a:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a4618.  v0:= v2.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a461c.  v1:= v3 / 32;
  #L3a4620.  v0:= v0[v1];
  #L3a4624.  v3:= v3 ^& 31;
  #L3a4628.  v1:= 1I;
  #L3a462a.  v3:= v1 ^< v3 @kind int;
  #L3a462e.  v3:= v3 ^& v0 @kind int;
  #L3a4630.  if v3 == 0 then goto L3a4636;
  #L3a4634.  return v1;
  #L3a4636.  v3:= 0I;
  #L3a4638.  return v3;
}
procedure `int` `b`(`com.google.b.b.a` v1 @kind this) @signature `Lcom/google/b/b/a;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3a46dc.  v0:= v1.`com.google.b.b.a.b` @type ^`int`;
  #L3a46e0.  v0:= v0 + 7;
  #L3a46e4.  v0:= v0 / 8;
  #L3a46e8.  return v0;
}
procedure `void` `b`(`com.google.b.b.a` v4 @kind this, `com.google.b.b.a` v5 @kind object) @signature `Lcom/google/b/b/a;.b:(Lcom/google/b/b/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3a495c.  v0:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4960.  v1:= v5.`com.google.b.b.a.b` @type ^`int`;
  #L3a4964.  if v0 == v1 then goto L3a4978;
  #L3a4968.  v5:= new `java.lang.IllegalArgumentException`;
  #L3a496c.  v0:= "Sizes don't match" @kind object;
  #L3a4970.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3a4976.  throw v5;
  #L3a4978.  v0:= 0I;
  #L3a497a.  v1:= v4.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a497e.  v1:= length @variable v1;
  #L3a4980.  if v0 >= v1 then goto L3a49a0;
  #L3a4984.  v1:= v4.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a4988.  v2:= v1[v0];
  #L3a498c.  v3:= v5.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a4990.  v3:= v3[v0];
  #L3a4994.  v2:= v2 ^~ v3 @kind int;
  #L3a4996.  v1[v0]:= v2;
  #L3a499a.  v0:= v0 + 1;
  #L3a499e.  goto L3a497a;
  #L3a49a0.  return @kind void;
}
procedure `com.google.b.b.a` `c`(`com.google.b.b.a` v3 @kind this) @signature `Lcom/google/b/b/a;.c:()Lcom/google/b/b/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4694.  v0:= new `com.google.b.b.a`;
  #L3a4698.  v1:= v3.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a469c.  call temp:= `clone`(v1) @signature `[I.clone:()Ljava/lang/Object;` @kind virtual;
  #L3a46a2.  v1:= temp @kind object;
  #L3a46a4.  v1:= (`int`[]) v1 @kind object;
  #L3a46a8.  v2:= v3.`com.google.b.b.a.b` @type ^`int`;
  #L3a46ac.  call `<init>`(v0, v1, v2) @signature `Lcom/google/b/b/a;.<init>:([II)V` @kind direct;
  #L3a46b2.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.google.b.b.a` v1 @kind this) @signature `Lcom/google/b/b/a;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3a4744.  call temp:= `c`(v1) @signature `Lcom/google/b/b/a;.c:()Lcom/google/b/b/a;` @kind virtual;
  #L3a474a.  v0:= temp @kind object;
  #L3a474c.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.google.b.b.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/google/b/b/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a464c.  v0:= instanceof @variable v4 @type ^`com.google.b.b.a` @kind boolean;
  #L3a4650.  v1:= 0I;
  #L3a4652.  if v0 != 0 then goto L3a4658;
  #L3a4656.  return v1;
  #L3a4658.  v4:= (`com.google.b.b.a`) v4 @kind object;
  #L3a465c.  v0:= v3.`com.google.b.b.a.b` @type ^`int`;
  #L3a4660.  v2:= v4.`com.google.b.b.a.b` @type ^`int`;
  #L3a4664.  if v0 != v2 then goto L3a4680;
  #L3a4668.  v0:= v3.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a466c.  v4:= v4.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a4670.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([I[I)Z` @kind static;
  #L3a4676.  v4:= temp;
  #L3a4678.  if v4 == 0 then goto L3a4680;
  #L3a467c.  v4:= 1I;
  #L3a467e.  return v4;
  #L3a4680.  return v1;
}
procedure `int` `hashCode`(`com.google.b.b.a` v2 @kind this) @signature `Lcom/google/b/b/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3a46fc.  v0:= v2.`com.google.b.b.a.b` @type ^`int`;
  #L3a4700.  v0:= v0 * 31;
  #L3a4704.  v1:= v2.`com.google.b.b.a.a` @type ^`int`[] @kind object;
  #L3a4708.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([I)I` @kind static;
  #L3a470e.  v1:= temp;
  #L3a4710.  v0:= v0 + v1 @kind int;
  #L3a4712.  return v0;
}
procedure `java.lang.String` `toString`(`com.google.b.b.a` v3 @kind this) @signature `Lcom/google/b/b/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3a4760.  v0:= new `java.lang.StringBuilder`;
  #L3a4764.  v1:= v3.`com.google.b.b.a.b` @type ^`int`;
  #L3a4768.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L3a476e.  v1:= 0I;
  #L3a4770.  v2:= v3.`com.google.b.b.a.b` @type ^`int`;
  #L3a4774.  if v1 >= v2 then goto L3a47ac;
  #L3a4778.  v2:= v1 ^& 7;
  #L3a477c.  if v2 != 0 then goto L3a478a;
  #L3a4780.  v2:= 32I;
  #L3a4784.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a478a.  call temp:= `a`(v3, v1) @signature `Lcom/google/b/b/a;.a:(I)Z` @kind virtual;
  #L3a4790.  v2:= temp;
  #L3a4792.  if v2 == 0 then goto L3a479c;
  #L3a4796.  v2:= 88I;
  #L3a479a.  goto L3a47a0;
  #L3a479c.  v2:= 46I;
  #L3a47a0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3a47a6.  v1:= v1 + 1;
  #L3a47aa.  goto L3a4770;
  #L3a47ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3a47b2.  v0:= temp @kind object;
  #L3a47b4.  return v0 @kind object;
}
