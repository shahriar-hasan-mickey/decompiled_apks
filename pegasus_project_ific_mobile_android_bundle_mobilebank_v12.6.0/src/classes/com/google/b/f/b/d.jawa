record `com.google.b.f.b.d` @kind class @AccessFlag FINAL {
}
procedure `int` `a`(`com.google.b.f.b.b` v2 @kind object) @signature `Lcom/google/b/f/b/d;.a:(Lcom/google/b/f/b/b;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3b68cc.  v0:= 1I;
  #L3b68ce.  call temp:= `a`(v2, v0) @signature `Lcom/google/b/f/b/d;.a:(Lcom/google/b/f/b/b;Z)I` @kind static;
  #L3b68d4.  v0:= temp;
  #L3b68d6.  v1:= 0I;
  #L3b68d8.  call temp:= `a`(v2, v1) @signature `Lcom/google/b/f/b/d;.a:(Lcom/google/b/f/b/b;Z)I` @kind static;
  #L3b68de.  v2:= temp;
  #L3b68e0.  v0:= v0 + v2 @kind int;
  #L3b68e2.  return v0;
}
procedure `int` `a`(`com.google.b.f.b.b` v10 @kind object, `boolean` v11 ) @signature `Lcom/google/b/f/b/d;.a:(Lcom/google/b/f/b/b;Z)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3b68f4.  if v11 == 0 then goto L3b6902;
  #L3b68f8.  call temp:= `a`(v10) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b68fe.  v0:= temp;
  #L3b6900.  goto L3b690a;
  #L3b6902.  call temp:= `b`(v10) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b6908.  v0:= temp;
  #L3b690a.  if v11 == 0 then goto L3b6918;
  #L3b690e.  call temp:= `b`(v10) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b6914.  v1:= temp;
  #L3b6916.  goto L3b6920;
  #L3b6918.  call temp:= `a`(v10) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b691e.  v1:= temp;
  #L3b6920.  call temp:= `c`(v10) @signature `Lcom/google/b/f/b/b;.c:()[[B` @kind virtual;
  #L3b6926.  v10:= temp @kind object;
  #L3b6928.  v2:= 0I;
  #L3b692a.  v3:= 0I;
  #L3b692c.  v4:= 0I;
  #L3b692e.  if v3 >= v0 then goto L3b6990;
  #L3b6932.  v5:= -1I;
  #L3b6934.  v6:= v4;
  #L3b6936.  v4:= 0I;
  #L3b6938.  v5:= 0I;
  #L3b693a.  v7:= -1I;
  #L3b693c.  v8:= 5I;
  #L3b693e.  if v4 >= v1 then goto L3b697a;
  #L3b6942.  if v11 == 0 then goto L3b6950;
  #L3b6946.  v9:= v10[v3] @kind object;
  #L3b694a.  v9:= v9[v4] @kind byte;
  #L3b694e.  goto L3b6958;
  #L3b6950.  v9:= v10[v4] @kind object;
  #L3b6954.  v9:= v9[v3] @kind byte;
  #L3b6958.  if v9 != v7 then goto L3b6962;
  #L3b695c.  v5:= v5 + 1;
  #L3b6960.  goto L3b6974;
  #L3b6962.  if v5 < v8 then goto L3b6970;
  #L3b6966.  v5:= v5 + -5;
  #L3b696a.  v5:= v5 + 3;
  #L3b696e.  v6:= v6 + v5 @kind int;
  #L3b6970.  v5:= 1I;
  #L3b6972.  v7:= v9;
  #L3b6974.  v4:= v4 + 1;
  #L3b6978.  goto L3b693c;
  #L3b697a.  if v5 < v8 then goto L3b6988;
  #L3b697e.  v5:= v5 + -5;
  #L3b6982.  v5:= v5 + 3;
  #L3b6986.  v6:= v6 + v5 @kind int;
  #L3b6988.  v4:= v6;
  #L3b698a.  v3:= v3 + 1;
  #L3b698e.  goto L3b692e;
  #L3b6990.  return v4;
}
procedure `boolean` `a`(`int` v1 , `int` v2 , `int` v3 ) @signature `Lcom/google/b/f/b/d;.a:(III)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L3b67f8.  v0:= 1I;
  #L3b67fa.  goto L3b6894;
  #L3b6800.  v2:= new `java.lang.IllegalArgumentException`;
  #L3b6804.  v3:= new `java.lang.StringBuilder`;
  #L3b6808.  v0:= "Invalid mask pattern: " @kind object;
  #L3b680c.  call `<init>`(v3, v0) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b6812.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3b6818.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3b681e.  v1:= temp @kind object;
  #L3b6820.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b6826.  throw v2;
  #L3b6828.  v1:= v3 * v2 @kind int;
  #L3b682c.  v1:= v1 %% 3;
  #L3b6830.  v3:= v3 + v2 @kind int;
  #L3b6832.  v2:= v3 ^& 1;
  #L3b6836.  v1:= v1 + v2 @kind int;
  #L3b6838.  v1:= v1 ^& v0 @kind int;
  #L3b683a.  goto L3b6888;
  #L3b683c.  v3:= v3 * v2 @kind int;
  #L3b6840.  v1:= v3 ^& 1;
  #L3b6844.  v3:= v3 %% 3;
  #L3b6848.  v1:= v1 + v3 @kind int;
  #L3b684a.  v1:= v1 ^& v0 @kind int;
  #L3b684c.  goto L3b6888;
  #L3b684e.  v3:= v3 * v2 @kind int;
  #L3b6852.  v1:= v3 ^& 1;
  #L3b6856.  v3:= v3 %% 3;
  #L3b685a.  v1:= v1 + v3 @kind int;
  #L3b685c.  goto L3b6888;
  #L3b685e.  v3:= v3 / 2;
  #L3b6862.  v2:= v2 / 3;
  #L3b6866.  v3:= v3 + v2 @kind int;
  #L3b6868.  v1:= v3 ^& 1;
  #L3b686c.  goto L3b6888;
  #L3b686e.  v3:= v3 + v2 @kind int;
  #L3b6870.  v1:= v3 %% 3;
  #L3b6874.  goto L3b6888;
  #L3b6876.  v1:= v2 %% 3;
  #L3b687a.  goto L3b6888;
  #L3b687c.  v1:= v3 ^& 1;
  #L3b6880.  goto L3b6888;
  #L3b6882.  v3:= v3 + v2 @kind int;
  #L3b6884.  v1:= v3 ^& 1;
  #L3b6888.  if v1 != 0 then goto L3b688e;
  #L3b688c.  return v0;
  #L3b688e.  v1:= 0I;
  #L3b6890.  return v1;
  #L3b6892.  
  #L3b6894.  switch v1
                  | 0 => goto L3b6882
                  | 1 => goto L3b687c
                  | 2 => goto L3b6876
                  | 3 => goto L3b686e
                  | 4 => goto L3b685e
                  | 5 => goto L3b684e
                  | 6 => goto L3b683c
                  | 7 => goto L3b6828
                  | else => goto L3b6800;
}
procedure `boolean` `a`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/google/b/f/b/d;.a:([BII)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b677c.  v0:= 0I;
  #L3b677e.  call temp:= `max`(v4, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3b6784.  v4:= temp;
  #L3b6786.  v1:= length @variable v3;
  #L3b6788.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3b678e.  v5:= temp;
  #L3b6790.  v1:= 1I;
  #L3b6792.  if v4 >= v5 then goto L3b67a6;
  #L3b6796.  v2:= v3[v4] @kind byte;
  #L3b679a.  if v2 != v1 then goto L3b67a0;
  #L3b679e.  return v0;
  #L3b67a0.  v4:= v4 + 1;
  #L3b67a4.  goto L3b6790;
  #L3b67a6.  return v1;
}
procedure `boolean` `a`(`byte`[][] v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lcom/google/b/f/b/d;.a:([[BIII)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3b67b8.  v0:= 0I;
  #L3b67ba.  call temp:= `max`(v5, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3b67c0.  v5:= temp;
  #L3b67c2.  v1:= length @variable v3;
  #L3b67c4.  call temp:= `min`(v6, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3b67ca.  v6:= temp;
  #L3b67cc.  v1:= 1I;
  #L3b67ce.  if v5 >= v6 then goto L3b67e6;
  #L3b67d2.  v2:= v3[v5] @kind object;
  #L3b67d6.  v2:= v2[v4] @kind byte;
  #L3b67da.  if v2 != v1 then goto L3b67e0;
  #L3b67de.  return v0;
  #L3b67e0.  v5:= v5 + 1;
  #L3b67e4.  goto L3b67cc;
  #L3b67e6.  return v1;
}
procedure `int` `b`(`com.google.b.f.b.b` v11 @kind object) @signature `Lcom/google/b/f/b/d;.b:(Lcom/google/b/f/b/b;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3b69a4.  call temp:= `c`(v11) @signature `Lcom/google/b/f/b/b;.c:()[[B` @kind virtual;
  #L3b69aa.  v0:= temp @kind object;
  #L3b69ac.  call temp:= `b`(v11) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b69b2.  v1:= temp;
  #L3b69b4.  call temp:= `a`(v11) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b69ba.  v11:= temp;
  #L3b69bc.  v2:= 0I;
  #L3b69be.  v3:= 0I;
  #L3b69c0.  v4:= 0I;
  #L3b69c2.  v5:= v11 + -1;
  #L3b69c6.  if v3 >= v5 then goto L3b6a16;
  #L3b69ca.  v5:= v0[v3] @kind object;
  #L3b69ce.  v6:= v4;
  #L3b69d0.  v4:= 0I;
  #L3b69d2.  v7:= v1 + -1;
  #L3b69d6.  if v4 >= v7 then goto L3b6a0e;
  #L3b69da.  v7:= v5[v4] @kind byte;
  #L3b69de.  v8:= v4 + 1;
  #L3b69e2.  v9:= v5[v8] @kind byte;
  #L3b69e6.  if v7 != v9 then goto L3b6a0a;
  #L3b69ea.  v9:= v3 + 1;
  #L3b69ee.  v10:= v0[v9] @kind object;
  #L3b69f2.  v4:= v10[v4] @kind byte;
  #L3b69f6.  if v7 != v4 then goto L3b6a0a;
  #L3b69fa.  v4:= v0[v9] @kind object;
  #L3b69fe.  v4:= v4[v8] @kind byte;
  #L3b6a02.  if v7 != v4 then goto L3b6a0a;
  #L3b6a06.  v6:= v6 + 1;
  #L3b6a0a.  v4:= v8;
  #L3b6a0c.  goto L3b69d2;
  #L3b6a0e.  v3:= v3 + 1;
  #L3b6a12.  v4:= v6;
  #L3b6a14.  goto L3b69c2;
  #L3b6a16.  v4:= v4 * 3;
  #L3b6a1a.  return v4;
}
procedure `int` `c`(`com.google.b.f.b.b` v10 @kind object) @signature `Lcom/google/b/f/b/d;.c:(Lcom/google/b/f/b/b;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3b6a2c.  call temp:= `c`(v10) @signature `Lcom/google/b/f/b/b;.c:()[[B` @kind virtual;
  #L3b6a32.  v0:= temp @kind object;
  #L3b6a34.  call temp:= `b`(v10) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b6a3a.  v1:= temp;
  #L3b6a3c.  call temp:= `a`(v10) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b6a42.  v10:= temp;
  #L3b6a44.  v2:= 0I;
  #L3b6a46.  v3:= 0I;
  #L3b6a48.  v4:= 0I;
  #L3b6a4a.  if v3 >= v10 then goto L3b6b82;
  #L3b6a4e.  v5:= v4;
  #L3b6a50.  v4:= 0I;
  #L3b6a52.  if v4 >= v1 then goto L3b6b78;
  #L3b6a56.  v6:= v0[v3] @kind object;
  #L3b6a5a.  v7:= v4 + 6;
  #L3b6a5e.  v8:= 1I;
  #L3b6a60.  if v7 >= v1 then goto L3b6ad8;
  #L3b6a64.  v9:= v6[v4] @kind byte;
  #L3b6a68.  if v9 != v8 then goto L3b6ad8;
  #L3b6a6c.  v9:= v4 + 1;
  #L3b6a70.  v9:= v6[v9] @kind byte;
  #L3b6a74.  if v9 != 0 then goto L3b6ad8;
  #L3b6a78.  v9:= v4 + 2;
  #L3b6a7c.  v9:= v6[v9] @kind byte;
  #L3b6a80.  if v9 != v8 then goto L3b6ad8;
  #L3b6a84.  v9:= v4 + 3;
  #L3b6a88.  v9:= v6[v9] @kind byte;
  #L3b6a8c.  if v9 != v8 then goto L3b6ad8;
  #L3b6a90.  v9:= v4 + 4;
  #L3b6a94.  v9:= v6[v9] @kind byte;
  #L3b6a98.  if v9 != v8 then goto L3b6ad8;
  #L3b6a9c.  v9:= v4 + 5;
  #L3b6aa0.  v9:= v6[v9] @kind byte;
  #L3b6aa4.  if v9 != 0 then goto L3b6ad8;
  #L3b6aa8.  v7:= v6[v7] @kind byte;
  #L3b6aac.  if v7 != v8 then goto L3b6ad8;
  #L3b6ab0.  v7:= v4 + -4;
  #L3b6ab4.  call temp:= `a`(v6, v7, v4) @signature `Lcom/google/b/f/b/d;.a:([BII)Z` @kind static;
  #L3b6aba.  v7:= temp;
  #L3b6abc.  if v7 != 0 then goto L3b6ad4;
  #L3b6ac0.  v7:= v4 + 7;
  #L3b6ac4.  v9:= v4 + 11;
  #L3b6ac8.  call temp:= `a`(v6, v7, v9) @signature `Lcom/google/b/f/b/d;.a:([BII)Z` @kind static;
  #L3b6ace.  v6:= temp;
  #L3b6ad0.  if v6 == 0 then goto L3b6ad8;
  #L3b6ad4.  v5:= v5 + 1;
  #L3b6ad8.  v6:= v3 + 6;
  #L3b6adc.  if v6 >= v10 then goto L3b6b70;
  #L3b6ae0.  v7:= v0[v3] @kind object;
  #L3b6ae4.  v7:= v7[v4] @kind byte;
  #L3b6ae8.  if v7 != v8 then goto L3b6b70;
  #L3b6aec.  v7:= v3 + 1;
  #L3b6af0.  v7:= v0[v7] @kind object;
  #L3b6af4.  v7:= v7[v4] @kind byte;
  #L3b6af8.  if v7 != 0 then goto L3b6b70;
  #L3b6afc.  v7:= v3 + 2;
  #L3b6b00.  v7:= v0[v7] @kind object;
  #L3b6b04.  v7:= v7[v4] @kind byte;
  #L3b6b08.  if v7 != v8 then goto L3b6b70;
  #L3b6b0c.  v7:= v3 + 3;
  #L3b6b10.  v7:= v0[v7] @kind object;
  #L3b6b14.  v7:= v7[v4] @kind byte;
  #L3b6b18.  if v7 != v8 then goto L3b6b70;
  #L3b6b1c.  v7:= v3 + 4;
  #L3b6b20.  v7:= v0[v7] @kind object;
  #L3b6b24.  v7:= v7[v4] @kind byte;
  #L3b6b28.  if v7 != v8 then goto L3b6b70;
  #L3b6b2c.  v7:= v3 + 5;
  #L3b6b30.  v7:= v0[v7] @kind object;
  #L3b6b34.  v7:= v7[v4] @kind byte;
  #L3b6b38.  if v7 != 0 then goto L3b6b70;
  #L3b6b3c.  v6:= v0[v6] @kind object;
  #L3b6b40.  v6:= v6[v4] @kind byte;
  #L3b6b44.  if v6 != v8 then goto L3b6b70;
  #L3b6b48.  v6:= v3 + -4;
  #L3b6b4c.  call temp:= `a`(v0, v4, v6, v3) @signature `Lcom/google/b/f/b/d;.a:([[BIII)Z` @kind static;
  #L3b6b52.  v6:= temp;
  #L3b6b54.  if v6 != 0 then goto L3b6b6c;
  #L3b6b58.  v6:= v3 + 7;
  #L3b6b5c.  v7:= v3 + 11;
  #L3b6b60.  call temp:= `a`(v0, v4, v6, v7) @signature `Lcom/google/b/f/b/d;.a:([[BIII)Z` @kind static;
  #L3b6b66.  v6:= temp;
  #L3b6b68.  if v6 == 0 then goto L3b6b70;
  #L3b6b6c.  v5:= v5 + 1;
  #L3b6b70.  v4:= v4 + 1;
  #L3b6b74.  goto L3b6a52;
  #L3b6b78.  v3:= v3 + 1;
  #L3b6b7c.  v4:= v5;
  #L3b6b7e.  goto L3b6a4a;
  #L3b6b82.  v4:= v4 * 40;
  #L3b6b86.  return v4;
}
procedure `int` `d`(`com.google.b.f.b.b` v10 @kind object) @signature `Lcom/google/b/f/b/d;.d:(Lcom/google/b/f/b/b;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3b6b98.  call temp:= `c`(v10) @signature `Lcom/google/b/f/b/b;.c:()[[B` @kind virtual;
  #L3b6b9e.  v0:= temp @kind object;
  #L3b6ba0.  call temp:= `b`(v10) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b6ba6.  v1:= temp;
  #L3b6ba8.  call temp:= `a`(v10) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b6bae.  v2:= temp;
  #L3b6bb0.  v3:= 0I;
  #L3b6bb2.  v4:= 0I;
  #L3b6bb4.  v5:= 0I;
  #L3b6bb6.  v6:= 1I;
  #L3b6bb8.  if v4 >= v2 then goto L3b6be2;
  #L3b6bbc.  v7:= v0[v4] @kind object;
  #L3b6bc0.  v8:= v5;
  #L3b6bc2.  v5:= 0I;
  #L3b6bc4.  if v5 >= v1 then goto L3b6bda;
  #L3b6bc8.  v9:= v7[v5] @kind byte;
  #L3b6bcc.  if v9 != v6 then goto L3b6bd4;
  #L3b6bd0.  v8:= v8 + 1;
  #L3b6bd4.  v5:= v5 + 1;
  #L3b6bd8.  goto L3b6bc4;
  #L3b6bda.  v4:= v4 + 1;
  #L3b6bde.  v5:= v8;
  #L3b6be0.  goto L3b6bb6;
  #L3b6be2.  call temp:= `a`(v10) @signature `Lcom/google/b/f/b/b;.a:()I` @kind virtual;
  #L3b6be8.  v0:= temp;
  #L3b6bea.  call temp:= `b`(v10) @signature `Lcom/google/b/f/b/b;.b:()I` @kind virtual;
  #L3b6bf0.  v10:= temp;
  #L3b6bf2.  v0:= v0 * v10 @kind int;
  #L3b6bf6.  v10:= v5 ^< 1;
  #L3b6bfa.  v10:= v10 - v0 @kind int;
  #L3b6bfc.  call temp:= `abs`(v10) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3b6c02.  v10:= temp;
  #L3b6c04.  v10:= v10 * 10;
  #L3b6c08.  v10:= v10 / v0 @kind int;
  #L3b6c0a.  v10:= v10 * 10;
  #L3b6c0e.  return v10;
}
