record `com.a.a.n` @kind class @AccessFlag PUBLIC extends `com.a.a.a` @kind class {
  `int` `com.a.a.n.A` @AccessFlag PRIVATE;
  `int` `com.a.a.n.B` @AccessFlag PRIVATE;
  `android.view.animation.Interpolator` `com.a.a.n.C` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.a.a.n.D` @AccessFlag PRIVATE;
  `long` `com.a.a.n.b` @AccessFlag ;
  `long` `com.a.a.n.c` @AccessFlag ;
  `int` `com.a.a.n.d` @AccessFlag ;
  `boolean` `com.a.a.n.e` @AccessFlag ;
  `com.a.a.l`[] `com.a.a.n.f` @AccessFlag ;
  `java.util.HashMap` `com.a.a.n.g` @AccessFlag ;
  `boolean` `com.a.a.n.q` @AccessFlag PRIVATE;
  `int` `com.a.a.n.r` @AccessFlag PRIVATE;
  `float` `com.a.a.n.s` @AccessFlag PRIVATE;
  `boolean` `com.a.a.n.t` @AccessFlag PRIVATE;
  `long` `com.a.a.n.u` @AccessFlag PRIVATE;
  `boolean` `com.a.a.n.v` @AccessFlag PRIVATE;
  `boolean` `com.a.a.n.w` @AccessFlag PRIVATE;
  `long` `com.a.a.n.x` @AccessFlag PRIVATE;
  `long` `com.a.a.n.y` @AccessFlag PRIVATE;
}
global `java.lang.ThreadLocal` `@@com.a.a.n.h` @AccessFlag PRIVATE_STATIC;
global `java.lang.ThreadLocal` `@@com.a.a.n.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.a.a.n.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.a.a.n.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.a.a.n.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.ThreadLocal` `@@com.a.a.n.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.view.animation.Interpolator` `@@com.a.a.n.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.a.a.m` `@@com.a.a.n.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.a.a.m` `@@com.a.a.n.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.a.a.n.z` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/a/a/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L28ace0.  v0:= new `java.lang.ThreadLocal`;
  #L28ace4.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L28acea.  `@@com.a.a.n.h` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28acee.  v0:= new `com.a.a.n$1`;
  #L28acf2.  call `<init>`(v0) @signature `Lcom/a/a/n$1;.<init>:()V` @kind direct;
  #L28acf8.  `@@com.a.a.n.i` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28acfc.  v0:= new `com.a.a.n$2`;
  #L28ad00.  call `<init>`(v0) @signature `Lcom/a/a/n$2;.<init>:()V` @kind direct;
  #L28ad06.  `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28ad0a.  v0:= new `com.a.a.n$3`;
  #L28ad0e.  call `<init>`(v0) @signature `Lcom/a/a/n$3;.<init>:()V` @kind direct;
  #L28ad14.  `@@com.a.a.n.k` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28ad18.  v0:= new `com.a.a.n$4`;
  #L28ad1c.  call `<init>`(v0) @signature `Lcom/a/a/n$4;.<init>:()V` @kind direct;
  #L28ad22.  `@@com.a.a.n.l` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28ad26.  v0:= new `com.a.a.n$5`;
  #L28ad2a.  call `<init>`(v0) @signature `Lcom/a/a/n$5;.<init>:()V` @kind direct;
  #L28ad30.  `@@com.a.a.n.m` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L28ad34.  v0:= new `android.view.animation.AccelerateDecelerateInterpolator`;
  #L28ad38.  call `<init>`(v0) @signature `Landroid/view/animation/AccelerateDecelerateInterpolator;.<init>:()V` @kind direct;
  #L28ad3e.  `@@com.a.a.n.n` @type ^`android.view.animation.Interpolator` := v0 @kind object;
  #L28ad42.  v0:= new `com.a.a.f`;
  #L28ad46.  call `<init>`(v0) @signature `Lcom/a/a/f;.<init>:()V` @kind direct;
  #L28ad4c.  `@@com.a.a.n.o` @type ^`com.a.a.m` := v0 @kind object;
  #L28ad50.  v0:= new `com.a.a.d`;
  #L28ad54.  call `<init>`(v0) @signature `Lcom/a/a/d;.<init>:()V` @kind direct;
  #L28ad5a.  `@@com.a.a.n.p` @type ^`com.a.a.m` := v0 @kind object;
  #L28ad5e.  return @kind void;
}
procedure `void` `<init>`(`com.a.a.n` v3 @kind this) @signature `Lcom/a/a/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L28ad70.  call `<init>`(v3) @signature `Lcom/a/a/a;.<init>:()V` @kind direct;
  #L28ad76.  v0:= -1L;
  #L28ad7a.  v3.`com.a.a.n.c` @type ^`long` := v0 @kind wide;
  #L28ad7e.  v0:= 0I;
  #L28ad80.  v3.`com.a.a.n.q` @type ^`boolean` := v0 @kind boolean;
  #L28ad84.  v3.`com.a.a.n.r` @type ^`int` := v0;
  #L28ad88.  v1:= 0I;
  #L28ad8a.  v3.`com.a.a.n.s` @type ^`float` := v1;
  #L28ad8e.  v3.`com.a.a.n.t` @type ^`boolean` := v0 @kind boolean;
  #L28ad92.  v3.`com.a.a.n.d` @type ^`int` := v0;
  #L28ad96.  v3.`com.a.a.n.v` @type ^`boolean` := v0 @kind boolean;
  #L28ad9a.  v3.`com.a.a.n.w` @type ^`boolean` := v0 @kind boolean;
  #L28ad9e.  v3.`com.a.a.n.e` @type ^`boolean` := v0 @kind boolean;
  #L28ada2.  v1:= 300L;
  #L28ada6.  v3.`com.a.a.n.x` @type ^`long` := v1 @kind wide;
  #L28adaa.  v1:= 0L;
  #L28adae.  v3.`com.a.a.n.y` @type ^`long` := v1 @kind wide;
  #L28adb2.  v3.`com.a.a.n.A` @type ^`int` := v0;
  #L28adb6.  v0:= 1I;
  #L28adb8.  v3.`com.a.a.n.B` @type ^`int` := v0;
  #L28adbc.  v0:= `@@com.a.a.n.n` @type ^`android.view.animation.Interpolator` @kind object;
  #L28adc0.  v3.`com.a.a.n.C` @type ^`android.view.animation.Interpolator` := v0 @kind object;
  #L28adc4.  v0:= 0I;
  #L28adc6.  v3.`com.a.a.n.D` @type ^`java.util.ArrayList` := v0 @kind object;
  #L28adca.  return @kind void;
}
procedure `long` `a`(`com.a.a.n` v2 @kind object) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28ac5c.  v0:= v2.`com.a.a.n.y` @type ^`long` @kind wide;
  #L28ac60.  return v0 @kind wide;
}
procedure `void` `a`(`com.a.a.n` v6 @kind this, `boolean` v7 ) @signature `Lcom/a/a/n;.a:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28ae24.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L28ae2a.  v0:= temp @kind object;
  #L28ae2c.  if v0 != 0 then goto L28ae40;
  #L28ae30.  v7:= new `android.util.AndroidRuntimeException`;
  #L28ae34.  v0:= "Animators may only be run on Looper threads" @kind object;
  #L28ae38.  call `<init>`(v7, v0) @signature `Landroid/util/AndroidRuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28ae3e.  throw v7;
  #L28ae40.  v6.`com.a.a.n.q` @type ^`boolean` := v7 @kind boolean;
  #L28ae44.  v7:= 0I;
  #L28ae46.  v6.`com.a.a.n.r` @type ^`int` := v7;
  #L28ae4a.  v6.`com.a.a.n.d` @type ^`int` := v7;
  #L28ae4e.  v0:= 1I;
  #L28ae50.  v6.`com.a.a.n.w` @type ^`boolean` := v0 @kind boolean;
  #L28ae54.  v6.`com.a.a.n.t` @type ^`boolean` := v7 @kind boolean;
  #L28ae58.  v1:= `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` @kind object;
  #L28ae5c.  call temp:= `get`(v1) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28ae62.  v1:= temp @kind object;
  #L28ae64.  v1:= (`java.util.ArrayList`) v1 @kind object;
  #L28ae68.  call temp:= `add`(v1, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28ae6e.  v1:= v6.`com.a.a.n.y` @type ^`long` @kind wide;
  #L28ae72.  v3:= 0L;
  #L28ae76.  v5:= lcmp(v1, v3);
  #L28ae7a.  if v5 != 0 then goto L28aed2;
  #L28ae7e.  call temp:= `k`(v6) @signature `Lcom/a/a/n;.k:()J` @kind virtual;
  #L28ae84.  v1:= temp @kind wide;
  #L28ae86.  call `d`(v6, v1) @signature `Lcom/a/a/n;.d:(J)V` @kind virtual;
  #L28ae8c.  v6.`com.a.a.n.d` @type ^`int` := v7;
  #L28ae90.  v6.`com.a.a.n.v` @type ^`boolean` := v0 @kind boolean;
  #L28ae94.  v0:= v6.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28ae98.  if v0 == 0 then goto L28aed2;
  #L28ae9c.  v0:= v6.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28aea0.  call temp:= `clone`(v0) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28aea6.  v0:= temp @kind object;
  #L28aea8.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28aeac.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28aeb2.  v1:= temp;
  #L28aeb4.  v2:= 0I;
  #L28aeb6.  if v2 >= v1 then goto L28aed2;
  #L28aeba.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28aec0.  v3:= temp @kind object;
  #L28aec2.  v3:= (`com.a.a.a$a`) v3 @kind object;
  #L28aec6.  call `a`(v3, v6) @signature `Lcom/a/a/a$a;.a:(Lcom/a/a/a;)V` @kind interface;
  #L28aecc.  v2:= v2 + 1;
  #L28aed0.  goto L28aeb6;
  #L28aed2.  v0:= `@@com.a.a.n.h` @type ^`java.lang.ThreadLocal` @kind object;
  #L28aed6.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28aedc.  v0:= temp @kind object;
  #L28aede.  v0:= (`com.a.a.n$a`) v0 @kind object;
  #L28aee2.  if v0 != 0 then goto L28aefc;
  #L28aee6.  v0:= new `com.a.a.n$a`;
  #L28aeea.  v1:= 0I;
  #L28aeec.  call `<init>`(v0, v1) @signature `Lcom/a/a/n$a;.<init>:(Lcom/a/a/n$1;)V` @kind direct;
  #L28aef2.  v1:= `@@com.a.a.n.h` @type ^`java.lang.ThreadLocal` @kind object;
  #L28aef6.  call `set`(v1, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L28aefc.  call temp:= `sendEmptyMessage`(v0, v7) @signature `Lcom/a/a/n$a;.sendEmptyMessage:(I)Z` @kind virtual;
  #L28af02.  return @kind void;
}
procedure `boolean` `a`(`com.a.a.n` v0 @kind object, `long` v1 ) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n;J)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28a758.  call temp:= `b`(v0, v1) @signature `Lcom/a/a/n;.b:(J)Z` @kind direct;
  #L28a75e.  v0:= temp;
  #L28a760.  return v0;
}
procedure `boolean` `a`(`com.a.a.n` v0 @kind object, `boolean` v1 ) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28a740.  v0.`com.a.a.n.v` @type ^`boolean` := v1 @kind boolean;
  #L28a744.  return v1;
}
procedure `com.a.a.n` `b`(`float`[] v1 @kind object) @signature `Lcom/a/a/n;.b:([F)Lcom/a/a/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28a978.  v0:= new `com.a.a.n`;
  #L28a97c.  call `<init>`(v0) @signature `Lcom/a/a/n;.<init>:()V` @kind direct;
  #L28a982.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:([F)V` @kind virtual;
  #L28a988.  return v0 @kind object;
}
procedure `com.a.a.n` `b`(`int`[] v1 @kind object) @signature `Lcom/a/a/n;.b:([I)Lcom/a/a/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L28a99c.  v0:= new `com.a.a.n`;
  #L28a9a0.  call `<init>`(v0) @signature `Lcom/a/a/n;.<init>:()V` @kind direct;
  #L28a9a6.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:([I)V` @kind virtual;
  #L28a9ac.  return v0 @kind object;
}
procedure `void` `b`(`com.a.a.n` v0 @kind object) @signature `Lcom/a/a/n;.b:(Lcom/a/a/n;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b224.  call `u`(v0) @signature `Lcom/a/a/n;.u:()V` @kind direct;
  #L28b22a.  return @kind void;
}
procedure `boolean` `b`(`com.a.a.n` v8 @kind this, `long` v9 ) @signature `Lcom/a/a/n;.b:(J)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L28a774.  v0:= v8.`com.a.a.n.t` @type ^`boolean` @kind boolean;
  #L28a778.  v1:= 1I;
  #L28a77a.  if v0 != 0 then goto L28a788;
  #L28a77e.  v8.`com.a.a.n.t` @type ^`boolean` := v1 @kind boolean;
  #L28a782.  v8.`com.a.a.n.u` @type ^`long` := v9 @kind wide;
  #L28a786.  goto L28a7b2;
  #L28a788.  v2:= v8.`com.a.a.n.u` @type ^`long` @kind wide;
  #L28a78c.  v4:= v9 - v2 @kind long;
  #L28a790.  v2:= v8.`com.a.a.n.y` @type ^`long` @kind wide;
  #L28a794.  v0:= lcmp(v4, v2);
  #L28a798.  if v0 <= 0 then goto L28a7b2;
  #L28a79c.  v2:= v8.`com.a.a.n.y` @type ^`long` @kind wide;
  #L28a7a0.  v6:= v4 - v2 @kind long;
  #L28a7a4.  v2:= v9 - v6 @kind long;
  #L28a7a8.  v8.`com.a.a.n.b` @type ^`long` := v2 @kind wide;
  #L28a7ac.  v8.`com.a.a.n.d` @type ^`int` := v1;
  #L28a7b0.  return v1;
  #L28a7b2.  v9:= 0I;
  #L28a7b4.  return v9;
}
procedure `void` `c`(`com.a.a.n` v0 @kind object) @signature `Lcom/a/a/n;.c:(Lcom/a/a/n;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28b2d0.  call `i`(v0) @signature `Lcom/a/a/n;.i:()V` @kind direct;
  #L28b2d6.  return @kind void;
}
procedure `void` `f`(`long` v0 ) @signature `Lcom/a/a/n;.f:(J)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L28b344.  `@@com.a.a.n.z` @type ^`long` := v0 @kind wide;
  #L28b348.  return @kind void;
}
procedure `void` `i`(`com.a.a.n` v5 @kind this) @signature `Lcom/a/a/n;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b39c.  v0:= `@@com.a.a.n.i` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b3a0.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b3a6.  v0:= temp @kind object;
  #L28b3a8.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b3ac.  call temp:= `remove`(v0, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b3b2.  v0:= `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b3b6.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b3bc.  v0:= temp @kind object;
  #L28b3be.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b3c2.  call temp:= `remove`(v0, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b3c8.  v0:= `@@com.a.a.n.k` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b3cc.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b3d2.  v0:= temp @kind object;
  #L28b3d4.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b3d8.  call temp:= `remove`(v0, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b3de.  v0:= 0I;
  #L28b3e0.  v5.`com.a.a.n.d` @type ^`int` := v0;
  #L28b3e4.  v1:= v5.`com.a.a.n.v` @type ^`boolean` @kind boolean;
  #L28b3e8.  if v1 == 0 then goto L28b42a;
  #L28b3ec.  v1:= v5.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b3f0.  if v1 == 0 then goto L28b42a;
  #L28b3f4.  v1:= v5.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b3f8.  call temp:= `clone`(v1) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28b3fe.  v1:= temp @kind object;
  #L28b400.  v1:= (`java.util.ArrayList`) v1 @kind object;
  #L28b404.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28b40a.  v2:= temp;
  #L28b40c.  v3:= 0I;
  #L28b40e.  if v3 >= v2 then goto L28b42a;
  #L28b412.  call temp:= `get`(v1, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28b418.  v4:= temp @kind object;
  #L28b41a.  v4:= (`com.a.a.a$a`) v4 @kind object;
  #L28b41e.  call `b`(v4, v5) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L28b424.  v3:= v3 + 1;
  #L28b428.  goto L28b40e;
  #L28b42a.  v5.`com.a.a.n.v` @type ^`boolean` := v0 @kind boolean;
  #L28b42e.  v5.`com.a.a.n.w` @type ^`boolean` := v0 @kind boolean;
  #L28b432.  return @kind void;
}
procedure `long` `l`() @signature `Lcom/a/a/n;.l:()J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L28acb0.  v0:= `@@com.a.a.n.z` @type ^`long` @kind wide;
  #L28acb4.  return v0 @kind wide;
}
procedure `java.lang.ThreadLocal` `o`() @signature `Lcom/a/a/n;.o:()Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28abe4.  v0:= `@@com.a.a.n.i` @type ^`java.lang.ThreadLocal` @kind object;
  #L28abe8.  return v0 @kind object;
}
procedure `java.lang.ThreadLocal` `p`() @signature `Lcom/a/a/n;.p:()Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28abfc.  v0:= `@@com.a.a.n.k` @type ^`java.lang.ThreadLocal` @kind object;
  #L28ac00.  return v0 @kind object;
}
procedure `java.lang.ThreadLocal` `q`() @signature `Lcom/a/a/n;.q:()Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28ac14.  v0:= `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` @kind object;
  #L28ac18.  return v0 @kind object;
}
procedure `java.lang.ThreadLocal` `r`() @signature `Lcom/a/a/n;.r:()Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28ac2c.  v0:= `@@com.a.a.n.m` @type ^`java.lang.ThreadLocal` @kind object;
  #L28ac30.  return v0 @kind object;
}
procedure `java.lang.ThreadLocal` `s`() @signature `Lcom/a/a/n;.s:()Ljava/lang/ThreadLocal;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L28ac44.  v0:= `@@com.a.a.n.l` @type ^`java.lang.ThreadLocal` @kind object;
  #L28ac48.  return v0 @kind object;
}
procedure `long` `t`() @signature `Lcom/a/a/n;.t:()J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L28acc8.  v0:= `@@com.a.a.n.z` @type ^`long` @kind wide;
  #L28accc.  return v0 @kind wide;
}
procedure `void` `u`(`com.a.a.n` v5 @kind this) @signature `Lcom/a/a/n;.u:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28b444.  call `h`(v5) @signature `Lcom/a/a/n;.h:()V` @kind virtual;
  #L28b44a.  v0:= `@@com.a.a.n.i` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b44e.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b454.  v0:= temp @kind object;
  #L28b456.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b45a.  call temp:= `add`(v0, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b460.  v0:= v5.`com.a.a.n.y` @type ^`long` @kind wide;
  #L28b464.  v2:= 0L;
  #L28b468.  v4:= lcmp(v0, v2);
  #L28b46c.  if v4 <= 0 then goto L28b4ae;
  #L28b470.  v0:= v5.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b474.  if v0 == 0 then goto L28b4ae;
  #L28b478.  v0:= v5.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b47c.  call temp:= `clone`(v0) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28b482.  v0:= temp @kind object;
  #L28b484.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b488.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28b48e.  v1:= temp;
  #L28b490.  v2:= 0I;
  #L28b492.  if v2 >= v1 then goto L28b4ae;
  #L28b496.  call temp:= `get`(v0, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28b49c.  v3:= temp @kind object;
  #L28b49e.  v3:= (`com.a.a.a$a`) v3 @kind object;
  #L28b4a2.  call `a`(v3, v5) @signature `Lcom/a/a/a$a;.a:(Lcom/a/a/a;)V` @kind interface;
  #L28b4a8.  v2:= v2 + 1;
  #L28b4ac.  goto L28b492;
  #L28b4ae.  return @kind void;
}
procedure `com.a.a.a` `a`(`com.a.a.n` v0 @kind this, `long` v1 ) @signature `Lcom/a/a/n;.a:(J)Lcom/a/a/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L28a940.  call temp:= `c`(v0, v1) @signature `Lcom/a/a/n;.c:(J)Lcom/a/a/n;` @kind virtual;
  #L28a946.  v1:= temp @kind object;
  #L28a948.  return v1 @kind object;
}
procedure `void` `a`(`com.a.a.n` v1 @kind this) @signature `Lcom/a/a/n;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28addc.  v0:= 0I;
  #L28adde.  call `a`(v1, v0) @signature `Lcom/a/a/n;.a:(Z)V` @kind direct;
  #L28ade4.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v4 @kind this, `float` v5 ) @signature `Lcom/a/a/n;.a:(F)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28afd0.  v0:= v4.`com.a.a.n.C` @type ^`android.view.animation.Interpolator` @kind object;
  #L28afd4.  call temp:= `getInterpolation`(v0, v5) @signature `Landroid/view/animation/Interpolator;.getInterpolation:(F)F` @kind interface;
  #L28afda.  v5:= temp;
  #L28afdc.  v4.`com.a.a.n.s` @type ^`float` := v5;
  #L28afe0.  v0:= v4.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28afe4.  v0:= length @variable v0;
  #L28afe6.  v1:= 0I;
  #L28afe8.  v2:= 0I;
  #L28afea.  if v2 >= v0 then goto L28b002;
  #L28afee.  v3:= v4.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28aff2.  v3:= v3[v2] @kind object;
  #L28aff6.  call `a`(v3, v5) @signature `Lcom/a/a/l;.a:(F)V` @kind virtual;
  #L28affc.  v2:= v2 + 1;
  #L28b000.  goto L28afea;
  #L28b002.  v5:= v4.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28b006.  if v5 == 0 then goto L28b036;
  #L28b00a.  v5:= v4.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28b00e.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28b014.  v5:= temp;
  #L28b016.  if v1 >= v5 then goto L28b036;
  #L28b01a.  v0:= v4.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28b01e.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28b024.  v0:= temp @kind object;
  #L28b026.  v0:= (`com.a.a.n$b`) v0 @kind object;
  #L28b02a.  call `a`(v0, v4) @signature `Lcom/a/a/n$b;.a:(Lcom/a/a/n;)V` @kind interface;
  #L28b030.  v1:= v1 + 1;
  #L28b034.  goto L28b016;
  #L28b036.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v0 @kind this, `android.view.animation.Interpolator` v1 @kind object) @signature `Lcom/a/a/n;.a:(Landroid/view/animation/Interpolator;)V` @AccessFlag PUBLIC {
    temp;

  #L28adf8.  if v1 == 0 then goto L28ae02;
  #L28adfc.  v0.`com.a.a.n.C` @type ^`android.view.animation.Interpolator` := v1 @kind object;
  #L28ae00.  goto L28ae10;
  #L28ae02.  v1:= new `android.view.animation.LinearInterpolator`;
  #L28ae06.  call `<init>`(v1) @signature `Landroid/view/animation/LinearInterpolator;.<init>:()V` @kind direct;
  #L28ae0c.  v0.`com.a.a.n.C` @type ^`android.view.animation.Interpolator` := v1 @kind object;
  #L28ae10.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v2 @kind this, `com.a.a.m` v3 @kind object) @signature `Lcom/a/a/n;.a:(Lcom/a/a/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28af64.  if v3 == 0 then goto L28af8a;
  #L28af68.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28af6c.  if v0 == 0 then goto L28af8a;
  #L28af70.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28af74.  v0:= length @variable v0;
  #L28af76.  if v0 <= 0 then goto L28af8a;
  #L28af7a.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28af7e.  v1:= 0I;
  #L28af80.  v0:= v0[v1] @kind object;
  #L28af84.  call `a`(v0, v3) @signature `Lcom/a/a/l;.a:(Lcom/a/a/m;)V` @kind virtual;
  #L28af8a.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v1 @kind this, `com.a.a.n$b` v2 @kind object) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28af9c.  v0:= v1.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28afa0.  if v0 != 0 then goto L28afb2;
  #L28afa4.  v0:= new `java.util.ArrayList`;
  #L28afa8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28afae.  v1.`com.a.a.n.D` @type ^`java.util.ArrayList` := v0 @kind object;
  #L28afb2.  v0:= v1.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28afb6.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28afbc.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v3 @kind this, `float`[] v4 @kind object) @signature `Lcom/a/a/n;.a:([F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28b048.  if v4 == 0 then goto L28b09c;
  #L28b04c.  v0:= length @variable v4;
  #L28b04e.  if v0 != 0 then goto L28b054;
  #L28b052.  goto L28b09c;
  #L28b054.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b058.  v1:= 0I;
  #L28b05a.  if v0 == 0 then goto L28b07a;
  #L28b05e.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b062.  v0:= length @variable v0;
  #L28b064.  if v0 != 0 then goto L28b06a;
  #L28b068.  goto L28b07a;
  #L28b06a.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b06e.  v0:= v0[v1] @kind object;
  #L28b072.  call `a`(v0, v4) @signature `Lcom/a/a/l;.a:([F)V` @kind virtual;
  #L28b078.  goto L28b096;
  #L28b07a.  v0:= 1I;
  #L28b07c.  v0:= new `com.a.a.l`[v0];
  #L28b080.  v2:= "" @kind object;
  #L28b084.  call temp:= `a`(v2, v4) @signature `Lcom/a/a/l;.a:(Ljava/lang/String;[F)Lcom/a/a/l;` @kind static;
  #L28b08a.  v4:= temp @kind object;
  #L28b08c.  v0[v1]:= v4 @kind object;
  #L28b090.  call `a`(v3, v0) @signature `Lcom/a/a/n;.a:([Lcom/a/a/l;)V` @kind virtual;
  #L28b096.  v3.`com.a.a.n.e` @type ^`boolean` := v1 @kind boolean;
  #L28b09a.  return @kind void;
  #L28b09c.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v3 @kind this, `int`[] v4 @kind object) @signature `Lcom/a/a/n;.a:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28b0b0.  if v4 == 0 then goto L28b104;
  #L28b0b4.  v0:= length @variable v4;
  #L28b0b6.  if v0 != 0 then goto L28b0bc;
  #L28b0ba.  goto L28b104;
  #L28b0bc.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b0c0.  v1:= 0I;
  #L28b0c2.  if v0 == 0 then goto L28b0e2;
  #L28b0c6.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b0ca.  v0:= length @variable v0;
  #L28b0cc.  if v0 != 0 then goto L28b0d2;
  #L28b0d0.  goto L28b0e2;
  #L28b0d2.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b0d6.  v0:= v0[v1] @kind object;
  #L28b0da.  call `a`(v0, v4) @signature `Lcom/a/a/l;.a:([I)V` @kind virtual;
  #L28b0e0.  goto L28b0fe;
  #L28b0e2.  v0:= 1I;
  #L28b0e4.  v0:= new `com.a.a.l`[v0];
  #L28b0e8.  v2:= "" @kind object;
  #L28b0ec.  call temp:= `a`(v2, v4) @signature `Lcom/a/a/l;.a:(Ljava/lang/String;[I)Lcom/a/a/l;` @kind static;
  #L28b0f2.  v4:= temp @kind object;
  #L28b0f4.  v0[v1]:= v4 @kind object;
  #L28b0f8.  call `a`(v3, v0) @signature `Lcom/a/a/n;.a:([Lcom/a/a/l;)V` @kind virtual;
  #L28b0fe.  v3.`com.a.a.n.e` @type ^`boolean` := v1 @kind boolean;
  #L28b102.  return @kind void;
  #L28b104.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v6 @kind this, `com.a.a.l`[] v7 @kind object) @signature `Lcom/a/a/n;.a:([Lcom/a/a/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28af14.  v0:= length @variable v7;
  #L28af16.  v6.`com.a.a.n.f` @type ^`com.a.a.l`[] := v7 @kind object;
  #L28af1a.  v1:= new `java.util.HashMap`;
  #L28af1e.  call `<init>`(v1, v0) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L28af24.  v6.`com.a.a.n.g` @type ^`java.util.HashMap` := v1 @kind object;
  #L28af28.  v1:= 0I;
  #L28af2a.  v2:= 0I;
  #L28af2c.  if v2 >= v0 then goto L28af4c;
  #L28af30.  v3:= v7[v2] @kind object;
  #L28af34.  v4:= v6.`com.a.a.n.g` @type ^`java.util.HashMap` @kind object;
  #L28af38.  call temp:= `c`(v3) @signature `Lcom/a/a/l;.c:()Ljava/lang/String;` @kind virtual;
  #L28af3e.  v5:= temp @kind object;
  #L28af40.  call temp:= `put`(v4, v5, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28af46.  v2:= v2 + 1;
  #L28af4a.  goto L28af2c;
  #L28af4c.  v6.`com.a.a.n.e` @type ^`boolean` := v1 @kind boolean;
  #L28af50.  return @kind void;
}
procedure `void` `a`(`com.a.a.n` v4 @kind this, `java.lang.Object`[] v5 @kind object) @signature `Lcom/a/a/n;.a:([Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28b118.  if v5 == 0 then goto L28b172;
  #L28b11c.  v0:= length @variable v5;
  #L28b11e.  if v0 != 0 then goto L28b124;
  #L28b122.  goto L28b172;
  #L28b124.  v0:= v4.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b128.  v1:= 0I;
  #L28b12a.  if v0 == 0 then goto L28b14a;
  #L28b12e.  v0:= v4.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b132.  v0:= length @variable v0;
  #L28b134.  if v0 != 0 then goto L28b13a;
  #L28b138.  goto L28b14a;
  #L28b13a.  v0:= v4.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b13e.  v0:= v0[v1] @kind object;
  #L28b142.  call `a`(v0, v5) @signature `Lcom/a/a/l;.a:([Ljava/lang/Object;)V` @kind virtual;
  #L28b148.  goto L28b16c;
  #L28b14a.  v0:= 1I;
  #L28b14c.  v0:= new `com.a.a.l`[v0];
  #L28b150.  v2:= "" @kind object;
  #L28b154.  v3:= 0I;
  #L28b156.  v3:= (`com.a.a.m`) v3 @kind object;
  #L28b15a.  call temp:= `a`(v2, v3, v5) @signature `Lcom/a/a/l;.a:(Ljava/lang/String;Lcom/a/a/m;[Ljava/lang/Object;)Lcom/a/a/l;` @kind static;
  #L28b160.  v5:= temp @kind object;
  #L28b162.  v0[v1]:= v5 @kind object;
  #L28b166.  call `a`(v4, v0) @signature `Lcom/a/a/n;.a:([Lcom/a/a/l;)V` @kind virtual;
  #L28b16c.  v4.`com.a.a.n.e` @type ^`boolean` := v1 @kind boolean;
  #L28b170.  return @kind void;
  #L28b172.  return @kind void;
}
procedure `void` `b`(`com.a.a.n` v2 @kind this) @signature `Lcom/a/a/n;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28b184.  v0:= v2.`com.a.a.n.d` @type ^`int`;
  #L28b188.  if v0 != 0 then goto L28b1c4;
  #L28b18c.  v0:= `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b190.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b196.  v0:= temp @kind object;
  #L28b198.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b19c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b1a2.  v0:= temp;
  #L28b1a4.  if v0 != 0 then goto L28b1c4;
  #L28b1a8.  v0:= `@@com.a.a.n.k` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b1ac.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b1b2.  v0:= temp @kind object;
  #L28b1b4.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b1b8.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b1be.  v0:= temp;
  #L28b1c0.  if v0 == 0 then goto L28b212;
  #L28b1c4.  v0:= v2.`com.a.a.n.v` @type ^`boolean` @kind boolean;
  #L28b1c8.  if v0 == 0 then goto L28b20c;
  #L28b1cc.  v0:= v2.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b1d0.  if v0 == 0 then goto L28b20c;
  #L28b1d4.  v0:= v2.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28b1d8.  call temp:= `clone`(v0) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28b1de.  v0:= temp @kind object;
  #L28b1e0.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b1e4.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28b1ea.  v0:= temp @kind object;
  #L28b1ec.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28b1f2.  v1:= temp;
  #L28b1f4.  if v1 == 0 then goto L28b20c;
  #L28b1f8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28b1fe.  v1:= temp @kind object;
  #L28b200.  v1:= (`com.a.a.a$a`) v1 @kind object;
  #L28b204.  call `c`(v1, v2) @signature `Lcom/a/a/a$a;.c:(Lcom/a/a/a;)V` @kind interface;
  #L28b20a.  goto L28b1ec;
  #L28b20c.  call `i`(v2) @signature `Lcom/a/a/n;.i:()V` @kind direct;
  #L28b212.  return @kind void;
}
procedure `com.a.a.n` `c`(`com.a.a.n` v3 @kind this, `long` v4 ) @signature `Lcom/a/a/n;.c:(J)Lcom/a/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28a9c0.  v0:= 0L;
  #L28a9c4.  v2:= lcmp(v4, v0);
  #L28a9c8.  if v2 >= 0 then goto L28a9fa;
  #L28a9cc.  v0:= new `java.lang.IllegalArgumentException`;
  #L28a9d0.  v1:= new `java.lang.StringBuilder`;
  #L28a9d4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28a9da.  v2:= "Animators cannot have negative duration: " @kind object;
  #L28a9de.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a9e4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28a9ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28a9f0.  v4:= temp @kind object;
  #L28a9f2.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28a9f8.  throw v0;
  #L28a9fa.  v3.`com.a.a.n.x` @type ^`long` := v4 @kind wide;
  #L28a9fe.  return v3 @kind object;
}
procedure `void` `c`(`com.a.a.n` v2 @kind this) @signature `Lcom/a/a/n;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28b23c.  v0:= `@@com.a.a.n.i` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b240.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b246.  v0:= temp @kind object;
  #L28b248.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b24c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b252.  v0:= temp;
  #L28b254.  if v0 != 0 then goto L28b282;
  #L28b258.  v0:= `@@com.a.a.n.j` @type ^`java.lang.ThreadLocal` @kind object;
  #L28b25c.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L28b262.  v0:= temp @kind object;
  #L28b264.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L28b268.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L28b26e.  v0:= temp;
  #L28b270.  if v0 != 0 then goto L28b282;
  #L28b274.  v0:= 0I;
  #L28b276.  v2.`com.a.a.n.t` @type ^`boolean` := v0 @kind boolean;
  #L28b27a.  call `u`(v2) @signature `Lcom/a/a/n;.u:()V` @kind direct;
  #L28b280.  goto L28b290;
  #L28b282.  v0:= v2.`com.a.a.n.e` @type ^`boolean` @kind boolean;
  #L28b286.  if v0 != 0 then goto L28b290;
  #L28b28a.  call `h`(v2) @signature `Lcom/a/a/n;.h:()V` @kind virtual;
  #L28b290.  v0:= v2.`com.a.a.n.A` @type ^`int`;
  #L28b294.  if v0 <= 0 then goto L28b2ae;
  #L28b298.  v0:= v2.`com.a.a.n.A` @type ^`int`;
  #L28b29c.  v1:= 1I;
  #L28b29e.  v0:= v0 ^& v1 @kind int;
  #L28b2a0.  if v0 != v1 then goto L28b2ae;
  #L28b2a4.  v0:= 0I;
  #L28b2a6.  call `a`(v2, v0) @signature `Lcom/a/a/n;.a:(F)V` @kind virtual;
  #L28b2ac.  goto L28b2b8;
  #L28b2ae.  v0:= 1.0F;
  #L28b2b2.  call `a`(v2, v0) @signature `Lcom/a/a/n;.a:(F)V` @kind virtual;
  #L28b2b8.  call `i`(v2) @signature `Lcom/a/a/n;.i:()V` @kind direct;
  #L28b2be.  return @kind void;
}
procedure `java.lang.Object` `clone`(`com.a.a.n` v1 @kind this) @signature `Lcom/a/a/n;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L28aaf4.  call temp:= `j`(v1) @signature `Lcom/a/a/n;.j:()Lcom/a/a/n;` @kind virtual;
  #L28aafa.  v0:= temp @kind object;
  #L28aafc.  return v0 @kind object;
}
procedure `void` `d`(`com.a.a.n` v4 @kind this, `long` v5 ) @signature `Lcom/a/a/n;.d:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L28b2e8.  call `h`(v4) @signature `Lcom/a/a/n;.h:()V` @kind virtual;
  #L28b2ee.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L28b2f4.  v0:= temp @kind wide;
  #L28b2f6.  v2:= v4.`com.a.a.n.d` @type ^`int`;
  #L28b2fa.  v3:= 1I;
  #L28b2fc.  if v2 == v3 then goto L28b30a;
  #L28b300.  v4.`com.a.a.n.c` @type ^`long` := v5 @kind wide;
  #L28b304.  v2:= 2I;
  #L28b306.  v4.`com.a.a.n.d` @type ^`int` := v2;
  #L28b30a.  v2:= 0I;
  #L28b30c.  v2:= v0 - v5 @kind long;
  #L28b310.  v4.`com.a.a.n.b` @type ^`long` := v2 @kind wide;
  #L28b314.  call temp:= `g`(v4, v0) @signature `Lcom/a/a/n;.g:(J)Z` @kind virtual;
  #L28b31a.  return @kind void;
}
procedure `boolean` `d`(`com.a.a.n` v2 @kind this) @signature `Lcom/a/a/n;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28a7c8.  v0:= v2.`com.a.a.n.d` @type ^`int`;
  #L28a7cc.  v1:= 1I;
  #L28a7ce.  if v0 == v1 then goto L28a7de;
  #L28a7d2.  v0:= v2.`com.a.a.n.v` @type ^`boolean` @kind boolean;
  #L28a7d6.  if v0 == 0 then goto L28a7dc;
  #L28a7da.  goto L28a7de;
  #L28a7dc.  v1:= 0I;
  #L28a7de.  return v1;
}
procedure `void` `e`(`com.a.a.n` v0 @kind this, `long` v1 ) @signature `Lcom/a/a/n;.e:(J)V` @AccessFlag PUBLIC {
    temp;

  #L28b32c.  v0.`com.a.a.n.y` @type ^`long` := v1 @kind wide;
  #L28b330.  return @kind void;
}
procedure `boolean` `e`(`com.a.a.n` v1 @kind this) @signature `Lcom/a/a/n;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28a7f0.  v0:= v1.`com.a.a.n.w` @type ^`boolean` @kind boolean;
  #L28a7f4.  return v0;
}
procedure `com.a.a.a` `g`(`com.a.a.n` v1 @kind this) @signature `Lcom/a/a/n;.g:()Lcom/a/a/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L28a95c.  call temp:= `j`(v1) @signature `Lcom/a/a/n;.j:()Lcom/a/a/n;` @kind virtual;
  #L28a962.  v0:= temp @kind object;
  #L28a964.  return v0 @kind object;
}
procedure `boolean` `g`(`com.a.a.n` v9 @kind this, `long` v10 ) @signature `Lcom/a/a/n;.g:(J)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L28a808.  v0:= v9.`com.a.a.n.d` @type ^`int`;
  #L28a80c.  v1:= 0L;
  #L28a810.  v3:= 1I;
  #L28a812.  if v0 != 0 then goto L28a840;
  #L28a816.  v9.`com.a.a.n.d` @type ^`int` := v3;
  #L28a81a.  v4:= v9.`com.a.a.n.c` @type ^`long` @kind wide;
  #L28a81e.  v0:= lcmp(v4, v1);
  #L28a822.  if v0 >= 0 then goto L28a82c;
  #L28a826.  v9.`com.a.a.n.b` @type ^`long` := v10 @kind wide;
  #L28a82a.  goto L28a840;
  #L28a82c.  v4:= v9.`com.a.a.n.c` @type ^`long` @kind wide;
  #L28a830.  v6:= v10 - v4 @kind long;
  #L28a834.  v9.`com.a.a.n.b` @type ^`long` := v6 @kind wide;
  #L28a838.  v4:= -1L;
  #L28a83c.  v9.`com.a.a.n.c` @type ^`long` := v4 @kind wide;
  #L28a840.  v0:= v9.`com.a.a.n.d` @type ^`int`;
  #L28a844.  v4:= 0I;
  #L28a846.  goto L28a920;
  #L28a84c.  goto L28a91c;
  #L28a84e.  v5:= v9.`com.a.a.n.x` @type ^`long` @kind wide;
  #L28a852.  v0:= lcmp(v5, v1);
  #L28a856.  v1:= 1.0F;
  #L28a85a.  if v0 <= 0 then goto L28a872;
  #L28a85e.  v5:= v9.`com.a.a.n.b` @type ^`long` @kind wide;
  #L28a862.  v7:= v10 - v5 @kind long;
  #L28a866.  v10:= (`float`) v7 @kind l2f;
  #L28a868.  v5:= v9.`com.a.a.n.x` @type ^`long` @kind wide;
  #L28a86c.  v11:= (`float`) v5 @kind l2f;
  #L28a86e.  v10:= v10 / v11 @kind float;
  #L28a870.  goto L28a876;
  #L28a872.  v10:= 1.0F;
  #L28a876.  v11:= fcmpl(v10, v1);
  #L28a87a.  if v11 < 0 then goto L28a90a;
  #L28a87e.  v11:= v9.`com.a.a.n.r` @type ^`int`;
  #L28a882.  v0:= v9.`com.a.a.n.A` @type ^`int`;
  #L28a886.  if v11 < v0 then goto L28a8a2;
  #L28a88a.  v11:= v9.`com.a.a.n.A` @type ^`int`;
  #L28a88e.  v0:= -1I;
  #L28a890.  if v11 != v0 then goto L28a896;
  #L28a894.  goto L28a8a2;
  #L28a896.  call temp:= `min`(v10, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L28a89c.  v10:= temp;
  #L28a89e.  v4:= 1I;
  #L28a8a0.  goto L28a90a;
  #L28a8a2.  v11:= v9.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28a8a6.  if v11 == 0 then goto L28a8d8;
  #L28a8aa.  v11:= v9.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28a8ae.  call temp:= `size`(v11) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28a8b4.  v11:= temp;
  #L28a8b6.  v0:= 0I;
  #L28a8b8.  if v0 >= v11 then goto L28a8d8;
  #L28a8bc.  v2:= v9.`com.a.a.n.a` @type ^`java.util.ArrayList` @kind object;
  #L28a8c0.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28a8c6.  v2:= temp @kind object;
  #L28a8c8.  v2:= (`com.a.a.a$a`) v2 @kind object;
  #L28a8cc.  call `d`(v2, v9) @signature `Lcom/a/a/a$a;.d:(Lcom/a/a/a;)V` @kind interface;
  #L28a8d2.  v0:= v0 + 1;
  #L28a8d6.  goto L28a8b8;
  #L28a8d8.  v11:= v9.`com.a.a.n.B` @type ^`int`;
  #L28a8dc.  v0:= 2I;
  #L28a8de.  if v11 != v0 then goto L28a8ec;
  #L28a8e2.  v11:= v9.`com.a.a.n.q` @type ^`boolean` @kind boolean;
  #L28a8e6.  v11:= v11 ^~ v3 @kind int;
  #L28a8e8.  v9.`com.a.a.n.q` @type ^`boolean` := v11 @kind boolean;
  #L28a8ec.  v11:= v9.`com.a.a.n.r` @type ^`int`;
  #L28a8f0.  v0:= (`int`) v10 @kind f2i;
  #L28a8f2.  v11:= v11 + v0 @kind int;
  #L28a8f4.  v9.`com.a.a.n.r` @type ^`int` := v11;
  #L28a8f8.  v10:= v10 %% v1 @kind float;
  #L28a8fa.  v2:= v9.`com.a.a.n.b` @type ^`long` @kind wide;
  #L28a8fe.  v5:= v9.`com.a.a.n.x` @type ^`long` @kind wide;
  #L28a902.  v7:= v2 + v5 @kind long;
  #L28a906.  v9.`com.a.a.n.b` @type ^`long` := v7 @kind wide;
  #L28a90a.  v11:= v9.`com.a.a.n.q` @type ^`boolean` @kind boolean;
  #L28a90e.  if v11 == 0 then goto L28a916;
  #L28a912.  v10:= v1 - v10 @kind float;
  #L28a916.  call `a`(v9, v10) @signature `Lcom/a/a/n;.a:(F)V` @kind virtual;
  #L28a91c.  return v4;
  #L28a91e.  
  #L28a920.  switch v0
                  | 1 => goto L28a84e
                  | 2 => goto L28a84e
                  | else => goto L28a84c;
}
procedure `void` `h`(`com.a.a.n` v3 @kind this) @signature `Lcom/a/a/n;.h:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L28b35c.  v0:= v3.`com.a.a.n.e` @type ^`boolean` @kind boolean;
  #L28b360.  if v0 != 0 then goto L28b38a;
  #L28b364.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b368.  v0:= length @variable v0;
  #L28b36a.  v1:= 0I;
  #L28b36c.  if v1 >= v0 then goto L28b384;
  #L28b370.  v2:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28b374.  v2:= v2[v1] @kind object;
  #L28b378.  call `b`(v2) @signature `Lcom/a/a/l;.b:()V` @kind virtual;
  #L28b37e.  v1:= v1 + 1;
  #L28b382.  goto L28b36c;
  #L28b384.  v0:= 1I;
  #L28b386.  v3.`com.a.a.n.e` @type ^`boolean` := v0 @kind boolean;
  #L28b38a.  return @kind void;
}
procedure `com.a.a.n` `j`(`com.a.a.n` v7 @kind this) @signature `Lcom/a/a/n;.j:()Lcom/a/a/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L28aa10.  call temp:= `g`(v7) @signature `Lcom/a/a/a;.g:()Lcom/a/a/a;` @kind super;
  #L28aa16.  v0:= temp @kind object;
  #L28aa18.  v0:= (`com.a.a.n`) v0 @kind object;
  #L28aa1c.  v1:= v7.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28aa20.  v2:= 0I;
  #L28aa22.  if v1 == 0 then goto L28aa5e;
  #L28aa26.  v1:= v7.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28aa2a.  v3:= new `java.util.ArrayList`;
  #L28aa2e.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28aa34.  v0.`com.a.a.n.D` @type ^`java.util.ArrayList` := v3 @kind object;
  #L28aa38.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28aa3e.  v3:= temp;
  #L28aa40.  v4:= 0I;
  #L28aa42.  if v4 >= v3 then goto L28aa5e;
  #L28aa46.  v5:= v0.`com.a.a.n.D` @type ^`java.util.ArrayList` @kind object;
  #L28aa4a.  call temp:= `get`(v1, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28aa50.  v6:= temp @kind object;
  #L28aa52.  call temp:= `add`(v5, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28aa58.  v4:= v4 + 1;
  #L28aa5c.  goto L28aa42;
  #L28aa5e.  v3:= -1L;
  #L28aa62.  v0.`com.a.a.n.c` @type ^`long` := v3 @kind wide;
  #L28aa66.  v0.`com.a.a.n.q` @type ^`boolean` := v2 @kind boolean;
  #L28aa6a.  v0.`com.a.a.n.r` @type ^`int` := v2;
  #L28aa6e.  v0.`com.a.a.n.e` @type ^`boolean` := v2 @kind boolean;
  #L28aa72.  v0.`com.a.a.n.d` @type ^`int` := v2;
  #L28aa76.  v0.`com.a.a.n.t` @type ^`boolean` := v2 @kind boolean;
  #L28aa7a.  v1:= v7.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28aa7e.  if v1 == 0 then goto L28aaca;
  #L28aa82.  v3:= length @variable v1;
  #L28aa84.  v4:= new `com.a.a.l`[v3];
  #L28aa88.  v0.`com.a.a.n.f` @type ^`com.a.a.l`[] := v4 @kind object;
  #L28aa8c.  v4:= new `java.util.HashMap`;
  #L28aa90.  call `<init>`(v4, v3) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L28aa96.  v0.`com.a.a.n.g` @type ^`java.util.HashMap` := v4 @kind object;
  #L28aa9a.  if v2 >= v3 then goto L28aaca;
  #L28aa9e.  v4:= v1[v2] @kind object;
  #L28aaa2.  call temp:= `a`(v4) @signature `Lcom/a/a/l;.a:()Lcom/a/a/l;` @kind virtual;
  #L28aaa8.  v4:= temp @kind object;
  #L28aaaa.  v5:= v0.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28aaae.  v5[v2]:= v4 @kind object;
  #L28aab2.  v5:= v0.`com.a.a.n.g` @type ^`java.util.HashMap` @kind object;
  #L28aab6.  call temp:= `c`(v4) @signature `Lcom/a/a/l;.c:()Ljava/lang/String;` @kind virtual;
  #L28aabc.  v6:= temp @kind object;
  #L28aabe.  call temp:= `put`(v5, v6, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28aac4.  v2:= v2 + 1;
  #L28aac8.  goto L28aa9a;
  #L28aaca.  return v0 @kind object;
}
procedure `long` `k`(`com.a.a.n` v6 @kind this) @signature `Lcom/a/a/n;.k:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28ac74.  v0:= v6.`com.a.a.n.e` @type ^`boolean` @kind boolean;
  #L28ac78.  if v0 == 0 then goto L28ac98;
  #L28ac7c.  v0:= v6.`com.a.a.n.d` @type ^`int`;
  #L28ac80.  if v0 != 0 then goto L28ac86;
  #L28ac84.  goto L28ac98;
  #L28ac86.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L28ac8c.  v0:= temp @kind wide;
  #L28ac8e.  v2:= v6.`com.a.a.n.b` @type ^`long` @kind wide;
  #L28ac92.  v4:= v0 - v2 @kind long;
  #L28ac96.  return v4 @kind wide;
  #L28ac98.  v0:= 0L;
  #L28ac9c.  return v0 @kind wide;
}
procedure `java.lang.Object` `m`(`com.a.a.n` v2 @kind this) @signature `Lcom/a/a/n;.m:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L28ab10.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28ab14.  if v0 == 0 then goto L28ab36;
  #L28ab18.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28ab1c.  v0:= length @variable v0;
  #L28ab1e.  if v0 <= 0 then goto L28ab36;
  #L28ab22.  v0:= v2.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28ab26.  v1:= 0I;
  #L28ab28.  v0:= v0[v1] @kind object;
  #L28ab2c.  call temp:= `d`(v0) @signature `Lcom/a/a/l;.d:()Ljava/lang/Object;` @kind virtual;
  #L28ab32.  v0:= temp @kind object;
  #L28ab34.  return v0 @kind object;
  #L28ab36.  v0:= 0I;
  #L28ab38.  return v0 @kind object;
}
procedure `float` `n`(`com.a.a.n` v1 @kind this) @signature `Lcom/a/a/n;.n:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28aadc.  v0:= v1.`com.a.a.n.s` @type ^`float`;
  #L28aae0.  return v0;
}
procedure `java.lang.String` `toString`(`com.a.a.n` v3 @kind this) @signature `Lcom/a/a/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28ab4c.  v0:= new `java.lang.StringBuilder`;
  #L28ab50.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28ab56.  v1:= "ValueAnimator@" @kind object;
  #L28ab5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28ab60.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L28ab66.  v1:= temp;
  #L28ab68.  call temp:= `toHexString`(v1) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L28ab6e.  v1:= temp @kind object;
  #L28ab70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28ab76.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28ab7c.  v0:= temp @kind object;
  #L28ab7e.  v1:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28ab82.  if v1 == 0 then goto L28abd0;
  #L28ab86.  v1:= 0I;
  #L28ab88.  v2:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28ab8c.  v2:= length @variable v2;
  #L28ab8e.  if v1 >= v2 then goto L28abd0;
  #L28ab92.  v2:= new `java.lang.StringBuilder`;
  #L28ab96.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28ab9c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28aba2.  v0:= "\n    " @kind object;
  #L28aba6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28abac.  v0:= v3.`com.a.a.n.f` @type ^`com.a.a.l`[] @kind object;
  #L28abb0.  v0:= v0[v1] @kind object;
  #L28abb4.  call temp:= `toString`(v0) @signature `Lcom/a/a/l;.toString:()Ljava/lang/String;` @kind virtual;
  #L28abba.  v0:= temp @kind object;
  #L28abbc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28abc2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28abc8.  v0:= temp @kind object;
  #L28abca.  v1:= v1 + 1;
  #L28abce.  goto L28ab88;
  #L28abd0.  return v0 @kind object;
}
