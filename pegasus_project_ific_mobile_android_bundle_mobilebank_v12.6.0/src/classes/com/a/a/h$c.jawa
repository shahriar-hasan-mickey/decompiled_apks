record `com.a.a.h$c` @kind class @AccessFlag  extends `com.a.a.h` @kind class {
  `java.lang.Object` `com.a.a.h$c.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.a.a.h$c` v0 @kind this, `float` v1 , `java.lang.Object` v2 @kind object) @signature `Lcom/a/a/h$c;.<init>:(FLjava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L287e24.  call `<init>`(v0) @signature `Lcom/a/a/h;.<init>:()V` @kind direct;
  #L287e2a.  v0.`com.a.a.h$c.a` @type ^`float` := v1;
  #L287e2e.  v0.`com.a.a.h$c.d` @type ^`java.lang.Object` := v2 @kind object;
  #L287e32.  if v2 == 0 then goto L287e3a;
  #L287e36.  v1:= 1I;
  #L287e38.  goto L287e3c;
  #L287e3a.  v1:= 0I;
  #L287e3c.  v0.`com.a.a.h$c.c` @type ^`boolean` := v1 @kind boolean;
  #L287e40.  v1:= v0.`com.a.a.h$c.c` @type ^`boolean` @kind boolean;
  #L287e44.  if v1 == 0 then goto L287e52;
  #L287e48.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L287e4e.  v1:= temp @kind object;
  #L287e50.  goto L287e56;
  #L287e52.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L287e56.  v0.`com.a.a.h$c.b` @type ^`java.lang.Class` := v1 @kind object;
  #L287e5a.  return @kind void;
}
procedure `void` `a`(`com.a.a.h$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/a/a/h$c;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;

  #L287e6c.  v0.`com.a.a.h$c.d` @type ^`java.lang.Object` := v1 @kind object;
  #L287e70.  if v1 == 0 then goto L287e78;
  #L287e74.  v1:= 1I;
  #L287e76.  goto L287e7a;
  #L287e78.  v1:= 0I;
  #L287e7a.  v0.`com.a.a.h$c.c` @type ^`boolean` := v1 @kind boolean;
  #L287e7e.  return @kind void;
}
procedure `java.lang.Object` `b`(`com.a.a.h$c` v1 @kind this) @signature `Lcom/a/a/h$c;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L287df0.  v0:= v1.`com.a.a.h$c.d` @type ^`java.lang.Object` @kind object;
  #L287df4.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.a.a.h$c` v1 @kind this) @signature `Lcom/a/a/h$c;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L287e08.  call temp:= `f`(v1) @signature `Lcom/a/a/h$c;.f:()Lcom/a/a/h$c;` @kind virtual;
  #L287e0e.  v0:= temp @kind object;
  #L287e10.  return v0 @kind object;
}
procedure `com.a.a.h` `e`(`com.a.a.h$c` v1 @kind this) @signature `Lcom/a/a/h$c;.e:()Lcom/a/a/h;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L287d9c.  call temp:= `f`(v1) @signature `Lcom/a/a/h$c;.f:()Lcom/a/a/h$c;` @kind virtual;
  #L287da2.  v0:= temp @kind object;
  #L287da4.  return v0 @kind object;
}
procedure `com.a.a.h$c` `f`(`com.a.a.h$c` v3 @kind this) @signature `Lcom/a/a/h$c;.f:()Lcom/a/a/h$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L287db8.  v0:= new `com.a.a.h$c`;
  #L287dbc.  call temp:= `c`(v3) @signature `Lcom/a/a/h$c;.c:()F` @kind virtual;
  #L287dc2.  v1:= temp;
  #L287dc4.  v2:= v3.`com.a.a.h$c.d` @type ^`java.lang.Object` @kind object;
  #L287dc8.  call `<init>`(v0, v1, v2) @signature `Lcom/a/a/h$c;.<init>:(FLjava/lang/Object;)V` @kind direct;
  #L287dce.  call temp:= `d`(v3) @signature `Lcom/a/a/h$c;.d:()Landroid/view/animation/Interpolator;` @kind virtual;
  #L287dd4.  v1:= temp @kind object;
  #L287dd6.  call `a`(v0, v1) @signature `Lcom/a/a/h$c;.a:(Landroid/view/animation/Interpolator;)V` @kind virtual;
  #L287ddc.  return v0 @kind object;
}
