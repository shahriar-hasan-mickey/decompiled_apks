record `com.a.a.c$1` @kind class @AccessFlag  extends `com.a.a.b` @kind class {
  `boolean` `com.a.a.c$1.a` @AccessFlag ;
  `java.util.ArrayList` `com.a.a.c$1.b` @AccessFlag FINAL_SYNTHETIC;
  `com.a.a.c` `com.a.a.c$1.c` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.a.a.c$1` v0 @kind this, `com.a.a.c` v1 @kind object, `java.util.ArrayList` v2 @kind object) @signature `Lcom/a/a/c$1;.<init>:(Lcom/a/a/c;Ljava/util/ArrayList;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2860f0.  v0.`com.a.a.c$1.c` @type ^`com.a.a.c` := v1 @kind object;
  #L2860f4.  v0.`com.a.a.c$1.b` @type ^`java.util.ArrayList` := v2 @kind object;
  #L2860f8.  call `<init>`(v0) @signature `Lcom/a/a/b;.<init>:()V` @kind direct;
  #L2860fe.  v1:= 0I;
  #L286100.  v0.`com.a.a.c$1.a` @type ^`boolean` := v1 @kind boolean;
  #L286104.  return @kind void;
}
procedure `void` `b`(`com.a.a.c$1` v3 @kind this, `com.a.a.a` v4 @kind object) @signature `Lcom/a/a/c$1;.b:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L286118.  v4:= v3.`com.a.a.c$1.a` @type ^`boolean` @kind boolean;
  #L28611c.  if v4 != 0 then goto L286168;
  #L286120.  v4:= v3.`com.a.a.c$1.b` @type ^`java.util.ArrayList` @kind object;
  #L286124.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28612a.  v4:= temp;
  #L28612c.  v0:= 0I;
  #L28612e.  if v0 >= v4 then goto L286168;
  #L286132.  v1:= v3.`com.a.a.c$1.b` @type ^`java.util.ArrayList` @kind object;
  #L286136.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28613c.  v1:= temp @kind object;
  #L28613e.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L286142.  v2:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286146.  call `a`(v2) @signature `Lcom/a/a/a;.a:()V` @kind virtual;
  #L28614c.  v2:= v3.`com.a.a.c$1.c` @type ^`com.a.a.c` @kind object;
  #L286150.  call temp:= `a`(v2) @signature `Lcom/a/a/c;.a:(Lcom/a/a/c;)Ljava/util/ArrayList;` @kind static;
  #L286156.  v2:= temp @kind object;
  #L286158.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L28615c.  call temp:= `add`(v2, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L286162.  v0:= v0 + 1;
  #L286166.  goto L28612e;
  #L286168.  return @kind void;
}
procedure `void` `c`(`com.a.a.c$1` v0 @kind this, `com.a.a.a` v1 @kind object) @signature `Lcom/a/a/c$1;.c:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;

  #L28617c.  v1:= 1I;
  #L28617e.  v0.`com.a.a.c$1.a` @type ^`boolean` := v1 @kind boolean;
  #L286182.  return @kind void;
}
