record `com.a.a.c` @kind class @AccessFlag PUBLIC_FINAL extends `com.a.a.a` @kind class {
  `boolean` `com.a.a.c.b` @AccessFlag ;
  `java.util.ArrayList` `com.a.a.c.c` @AccessFlag PRIVATE;
  `java.util.HashMap` `com.a.a.c.d` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.a.a.c.e` @AccessFlag PRIVATE;
  `java.util.ArrayList` `com.a.a.c.f` @AccessFlag PRIVATE;
  `boolean` `com.a.a.c.g` @AccessFlag PRIVATE;
  `com.a.a.c$a` `com.a.a.c.h` @AccessFlag PRIVATE;
  `boolean` `com.a.a.c.i` @AccessFlag PRIVATE;
  `long` `com.a.a.c.j` @AccessFlag PRIVATE;
  `com.a.a.n` `com.a.a.c.k` @AccessFlag PRIVATE;
  `long` `com.a.a.c.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.a.a.c` v3 @kind this) @signature `Lcom/a/a/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L286a40.  call `<init>`(v3) @signature `Lcom/a/a/a;.<init>:()V` @kind direct;
  #L286a46.  v0:= new `java.util.ArrayList`;
  #L286a4a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286a50.  v3.`com.a.a.c.c` @type ^`java.util.ArrayList` := v0 @kind object;
  #L286a54.  v0:= new `java.util.HashMap`;
  #L286a58.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L286a5e.  v3.`com.a.a.c.d` @type ^`java.util.HashMap` := v0 @kind object;
  #L286a62.  v0:= new `java.util.ArrayList`;
  #L286a66.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286a6c.  v3.`com.a.a.c.e` @type ^`java.util.ArrayList` := v0 @kind object;
  #L286a70.  v0:= new `java.util.ArrayList`;
  #L286a74.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286a7a.  v3.`com.a.a.c.f` @type ^`java.util.ArrayList` := v0 @kind object;
  #L286a7e.  v0:= 1I;
  #L286a80.  v3.`com.a.a.c.g` @type ^`boolean` := v0 @kind boolean;
  #L286a84.  v0:= 0I;
  #L286a86.  v3.`com.a.a.c.h` @type ^`com.a.a.c$a` := v0 @kind object;
  #L286a8a.  v1:= 0I;
  #L286a8c.  v3.`com.a.a.c.b` @type ^`boolean` := v1 @kind boolean;
  #L286a90.  v3.`com.a.a.c.i` @type ^`boolean` := v1 @kind boolean;
  #L286a94.  v1:= 0L;
  #L286a98.  v3.`com.a.a.c.j` @type ^`long` := v1 @kind wide;
  #L286a9c.  v3.`com.a.a.c.k` @type ^`com.a.a.n` := v0 @kind object;
  #L286aa0.  v0:= -1L;
  #L286aa4.  v3.`com.a.a.c.l` @type ^`long` := v0 @kind wide;
  #L286aa8.  return @kind void;
}
procedure `java.util.ArrayList` `a`(`com.a.a.c` v0 @kind object) @signature `Lcom/a/a/c;.a:(Lcom/a/a/c;)Ljava/util/ArrayList;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2869e0.  v0:= v0.`com.a.a.c.c` @type ^`java.util.ArrayList` @kind object;
  #L2869e4.  return v0 @kind object;
}
procedure `boolean` `a`(`com.a.a.c` v0 @kind object, `boolean` v1 ) @signature `Lcom/a/a/c;.a:(Lcom/a/a/c;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2866b8.  v0.`com.a.a.c.i` @type ^`boolean` := v1 @kind boolean;
  #L2866bc.  return v1;
}
procedure `java.util.HashMap` `b`(`com.a.a.c` v0 @kind object) @signature `Lcom/a/a/c;.b:(Lcom/a/a/c;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L286a28.  v0:= v0.`com.a.a.c.d` @type ^`java.util.HashMap` @kind object;
  #L286a2c.  return v0 @kind object;
}
procedure `java.util.ArrayList` `c`(`com.a.a.c` v0 @kind object) @signature `Lcom/a/a/c;.c:(Lcom/a/a/c;)Ljava/util/ArrayList;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2869f8.  v0:= v0.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L2869fc.  return v0 @kind object;
}
procedure `java.util.ArrayList` `d`(`com.a.a.c` v0 @kind object) @signature `Lcom/a/a/c;.d:(Lcom/a/a/c;)Ljava/util/ArrayList;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L286a10.  v0:= v0.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286a14.  return v0 @kind object;
}
procedure `void` `i`(`com.a.a.c` v10 @kind this) @signature `Lcom/a/a/c;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L287088.  v0:= v10.`com.a.a.c.g` @type ^`boolean` @kind boolean;
  #L28708c.  v1:= 0I;
  #L28708e.  if v0 == 0 then goto L2871c0;
  #L287092.  v0:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L287096.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L28709c.  v0:= new `java.util.ArrayList`;
  #L2870a0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2870a6.  v2:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2870aa.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2870b0.  v2:= temp;
  #L2870b2.  v3:= 0I;
  #L2870b4.  if v3 >= v2 then goto L2870ec;
  #L2870b8.  v4:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2870bc.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2870c2.  v4:= temp @kind object;
  #L2870c4.  v4:= (`com.a.a.c$e`) v4 @kind object;
  #L2870c8.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L2870cc.  if v5 == 0 then goto L2870e0;
  #L2870d0.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L2870d4.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2870da.  v5:= temp;
  #L2870dc.  if v5 != 0 then goto L2870e6;
  #L2870e0.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2870e6.  v3:= v3 + 1;
  #L2870ea.  goto L2870b4;
  #L2870ec.  v2:= new `java.util.ArrayList`;
  #L2870f0.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2870f6.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2870fc.  v3:= temp;
  #L2870fe.  if v3 <= 0 then goto L287190;
  #L287102.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L287108.  v3:= temp;
  #L28710a.  v4:= 0I;
  #L28710c.  if v4 >= v3 then goto L28717c;
  #L287110.  call temp:= `get`(v0, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L287116.  v5:= temp @kind object;
  #L287118.  v5:= (`com.a.a.c$e`) v5 @kind object;
  #L28711c.  v6:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L287120.  call temp:= `add`(v6, v5) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L287126.  v6:= v5.`com.a.a.c$e.e` @type ^`java.util.ArrayList` @kind object;
  #L28712a.  if v6 == 0 then goto L287176;
  #L28712e.  v6:= v5.`com.a.a.c$e.e` @type ^`java.util.ArrayList` @kind object;
  #L287132.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L287138.  v6:= temp;
  #L28713a.  v7:= 0I;
  #L28713c.  if v7 >= v6 then goto L287176;
  #L287140.  v8:= v5.`com.a.a.c$e.e` @type ^`java.util.ArrayList` @kind object;
  #L287144.  call temp:= `get`(v8, v7) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28714a.  v8:= temp @kind object;
  #L28714c.  v8:= (`com.a.a.c$e`) v8 @kind object;
  #L287150.  v9:= v8.`com.a.a.c$e.d` @type ^`java.util.ArrayList` @kind object;
  #L287154.  call temp:= `remove`(v9, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L28715a.  v9:= v8.`com.a.a.c$e.d` @type ^`java.util.ArrayList` @kind object;
  #L28715e.  call temp:= `size`(v9) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L287164.  v9:= temp;
  #L287166.  if v9 != 0 then goto L287170;
  #L28716a.  call temp:= `add`(v2, v8) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L287170.  v7:= v7 + 1;
  #L287174.  goto L28713c;
  #L287176.  v4:= v4 + 1;
  #L28717a.  goto L28710c;
  #L28717c.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L287182.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L287188.  call `clear`(v2) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L28718e.  goto L2870f6;
  #L287190.  v10.`com.a.a.c.g` @type ^`boolean` := v1 @kind boolean;
  #L287194.  v0:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L287198.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28719e.  v0:= temp;
  #L2871a0.  v1:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2871a4.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2871aa.  v1:= temp;
  #L2871ac.  if v0 == v1 then goto L287264;
  #L2871b0.  v0:= new `java.lang.IllegalStateException`;
  #L2871b4.  v1:= "Circular dependencies cannot exist in AnimatorSet" @kind object;
  #L2871b8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2871be.  throw v0;
  #L2871c0.  v0:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2871c4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2871ca.  v0:= temp;
  #L2871cc.  v2:= 0I;
  #L2871ce.  if v2 >= v0 then goto L287264;
  #L2871d2.  v3:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2871d6.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2871dc.  v3:= temp @kind object;
  #L2871de.  v3:= (`com.a.a.c$e`) v3 @kind object;
  #L2871e2.  v4:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L2871e6.  if v4 == 0 then goto L28725a;
  #L2871ea.  v4:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L2871ee.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2871f4.  v4:= temp;
  #L2871f6.  if v4 <= 0 then goto L28725a;
  #L2871fa.  v4:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L2871fe.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L287204.  v4:= temp;
  #L287206.  v5:= 0I;
  #L287208.  if v5 >= v4 then goto L28725a;
  #L28720c.  v6:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L287210.  call temp:= `get`(v6, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L287216.  v6:= temp @kind object;
  #L287218.  v6:= (`com.a.a.c$c`) v6 @kind object;
  #L28721c.  v7:= v3.`com.a.a.c$e.d` @type ^`java.util.ArrayList` @kind object;
  #L287220.  if v7 != 0 then goto L287232;
  #L287224.  v7:= new `java.util.ArrayList`;
  #L287228.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28722e.  v3.`com.a.a.c$e.d` @type ^`java.util.ArrayList` := v7 @kind object;
  #L287232.  v7:= v3.`com.a.a.c$e.d` @type ^`java.util.ArrayList` @kind object;
  #L287236.  v8:= v6.`com.a.a.c$c.a` @type ^`com.a.a.c$e` @kind object;
  #L28723a.  call temp:= `contains`(v7, v8) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L287240.  v7:= temp;
  #L287242.  if v7 != 0 then goto L287254;
  #L287246.  v7:= v3.`com.a.a.c$e.d` @type ^`java.util.ArrayList` @kind object;
  #L28724a.  v6:= v6.`com.a.a.c$c.a` @type ^`com.a.a.c$e` @kind object;
  #L28724e.  call temp:= `add`(v7, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L287254.  v5:= v5 + 1;
  #L287258.  goto L287208;
  #L28725a.  v3.`com.a.a.c$e.f` @type ^`boolean` := v1 @kind boolean;
  #L28725e.  v2:= v2 + 1;
  #L287262.  goto L2871ce;
  #L287264.  return @kind void;
}
procedure `com.a.a.a` `a`(`com.a.a.c` v0 @kind this, `long` v1 ) @signature `Lcom/a/a/c;.a:(J)Lcom/a/a/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L286734.  call temp:= `c`(v0, v1) @signature `Lcom/a/a/c;.c:(J)Lcom/a/a/c;` @kind virtual;
  #L28673a.  v1:= temp @kind object;
  #L28673c.  return v1 @kind object;
}
procedure `com.a.a.c$b` `a`(`com.a.a.c` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/a/c;.a:(Lcom/a/a/a;)Lcom/a/a/c$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L286998.  if v2 == 0 then goto L2869ae;
  #L28699c.  v0:= 1I;
  #L28699e.  v1.`com.a.a.c.g` @type ^`boolean` := v0 @kind boolean;
  #L2869a2.  v0:= new `com.a.a.c$b`;
  #L2869a6.  call `<init>`(v0, v1, v2) @signature `Lcom/a/a/c$b;.<init>:(Lcom/a/a/c;Lcom/a/a/a;)V` @kind direct;
  #L2869ac.  return v0 @kind object;
  #L2869ae.  v2:= 0I;
  #L2869b0.  return v2 @kind object;
}
procedure `void` `a`(`com.a.a.c` v10 @kind this) @signature `Lcom/a/a/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L286abc.  v0:= 0I;
  #L286abe.  v10.`com.a.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L286ac2.  v1:= 1I;
  #L286ac4.  v10.`com.a.a.c.i` @type ^`boolean` := v1 @kind boolean;
  #L286ac8.  call `i`(v10) @signature `Lcom/a/a/c;.i:()V` @kind direct;
  #L286ace.  v1:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286ad2.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286ad8.  v1:= temp;
  #L286ada.  v2:= 0I;
  #L286adc.  if v2 >= v1 then goto L286b58;
  #L286ae0.  v3:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286ae4.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L286aea.  v3:= temp @kind object;
  #L286aec.  v3:= (`com.a.a.c$e`) v3 @kind object;
  #L286af0.  v4:= v3.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286af4.  call temp:= `f`(v4) @signature `Lcom/a/a/a;.f:()Ljava/util/ArrayList;` @kind virtual;
  #L286afa.  v4:= temp @kind object;
  #L286afc.  if v4 == 0 then goto L286b52;
  #L286b00.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286b06.  v5:= temp;
  #L286b08.  if v5 <= 0 then goto L286b52;
  #L286b0c.  v5:= new `java.util.ArrayList`;
  #L286b10.  call `<init>`(v5, v4) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L286b16.  call temp:= `iterator`(v5) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286b1c.  v4:= temp @kind object;
  #L286b1e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286b24.  v5:= temp;
  #L286b26.  if v5 == 0 then goto L286b52;
  #L286b2a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286b30.  v5:= temp @kind object;
  #L286b32.  v5:= (`com.a.a.a$a`) v5 @kind object;
  #L286b36.  v6:= instanceof @variable v5 @type ^`com.a.a.c$d` @kind boolean;
  #L286b3a.  if v6 != 0 then goto L286b46;
  #L286b3e.  v6:= instanceof @variable v5 @type ^`com.a.a.c$a` @kind boolean;
  #L286b42.  if v6 == 0 then goto L286b1e;
  #L286b46.  v6:= v3.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286b4a.  call `b`(v6, v5) @signature `Lcom/a/a/a;.b:(Lcom/a/a/a$a;)V` @kind virtual;
  #L286b50.  goto L286b1e;
  #L286b52.  v2:= v2 + 1;
  #L286b56.  goto L286adc;
  #L286b58.  v2:= new `java.util.ArrayList`;
  #L286b5c.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286b62.  v3:= 0I;
  #L286b64.  if v3 >= v1 then goto L286c1c;
  #L286b68.  v4:= v10.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286b6c.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L286b72.  v4:= temp @kind object;
  #L286b74.  v4:= (`com.a.a.c$e`) v4 @kind object;
  #L286b78.  v5:= v10.`com.a.a.c.h` @type ^`com.a.a.c$a` @kind object;
  #L286b7c.  if v5 != 0 then goto L286b8e;
  #L286b80.  v5:= new `com.a.a.c$a`;
  #L286b84.  call `<init>`(v5, v10, v10) @signature `Lcom/a/a/c$a;.<init>:(Lcom/a/a/c;Lcom/a/a/c;)V` @kind direct;
  #L286b8a.  v10.`com.a.a.c.h` @type ^`com.a.a.c$a` := v5 @kind object;
  #L286b8e.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286b92.  if v5 == 0 then goto L286c02;
  #L286b96.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286b9a.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286ba0.  v5:= temp;
  #L286ba2.  if v5 != 0 then goto L286ba8;
  #L286ba6.  goto L286c02;
  #L286ba8.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286bac.  call temp:= `size`(v5) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286bb2.  v5:= temp;
  #L286bb4.  v6:= 0I;
  #L286bb6.  if v6 >= v5 then goto L286bec;
  #L286bba.  v7:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286bbe.  call temp:= `get`(v7, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L286bc4.  v7:= temp @kind object;
  #L286bc6.  v7:= (`com.a.a.c$c`) v7 @kind object;
  #L286bca.  v8:= v7.`com.a.a.c$c.a` @type ^`com.a.a.c$e` @kind object;
  #L286bce.  v8:= v8.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286bd2.  v9:= new `com.a.a.c$d`;
  #L286bd6.  v7:= v7.`com.a.a.c$c.b` @type ^`int`;
  #L286bda.  call `<init>`(v9, v10, v4, v7) @signature `Lcom/a/a/c$d;.<init>:(Lcom/a/a/c;Lcom/a/a/c$e;I)V` @kind direct;
  #L286be0.  call `a`(v8, v9) @signature `Lcom/a/a/a;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L286be6.  v6:= v6 + 1;
  #L286bea.  goto L286bb6;
  #L286bec.  v5:= v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286bf0.  call temp:= `clone`(v5) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L286bf6.  v5:= temp @kind object;
  #L286bf8.  v5:= (`java.util.ArrayList`) v5 @kind object;
  #L286bfc.  v4.`com.a.a.c$e.c` @type ^`java.util.ArrayList` := v5 @kind object;
  #L286c00.  goto L286c08;
  #L286c02.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L286c08.  v4:= v4.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286c0c.  v5:= v10.`com.a.a.c.h` @type ^`com.a.a.c$a` @kind object;
  #L286c10.  call `a`(v4, v5) @signature `Lcom/a/a/a;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L286c16.  v3:= v3 + 1;
  #L286c1a.  goto L286b64;
  #L286c1c.  v3:= v10.`com.a.a.c.j` @type ^`long` @kind wide;
  #L286c20.  v5:= 0L;
  #L286c24.  v1:= lcmp(v3, v5);
  #L286c28.  if v1 > 0 then goto L286c66;
  #L286c2c.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286c32.  v1:= temp @kind object;
  #L286c34.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286c3a.  v2:= temp;
  #L286c3c.  if v2 == 0 then goto L286caa;
  #L286c40.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286c46.  v2:= temp @kind object;
  #L286c48.  v2:= (`com.a.a.c$e`) v2 @kind object;
  #L286c4c.  v3:= v2.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286c50.  call `a`(v3) @signature `Lcom/a/a/a;.a:()V` @kind virtual;
  #L286c56.  v3:= v10.`com.a.a.c.c` @type ^`java.util.ArrayList` @kind object;
  #L286c5a.  v2:= v2.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286c5e.  call temp:= `add`(v3, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L286c64.  goto L286c34;
  #L286c66.  v1:= 2I;
  #L286c68.  v1:= new `float`[v1];
  #L286c6c.  goto L286d48;
  #L286c72.  call temp:= `b`(v1) @signature `Lcom/a/a/n;.b:([F)Lcom/a/a/n;` @kind static;
  #L286c78.  v1:= temp @kind object;
  #L286c7a.  v10.`com.a.a.c.k` @type ^`com.a.a.n` := v1 @kind object;
  #L286c7e.  v1:= v10.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286c82.  v3:= v10.`com.a.a.c.j` @type ^`long` @kind wide;
  #L286c86.  call temp:= `c`(v1, v3) @signature `Lcom/a/a/n;.c:(J)Lcom/a/a/n;` @kind virtual;
  #L286c8c.  v1:= v10.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286c90.  v3:= new `com.a.a.c$1`;
  #L286c94.  call `<init>`(v3, v10, v2) @signature `Lcom/a/a/c$1;.<init>:(Lcom/a/a/c;Ljava/util/ArrayList;)V` @kind direct;
  #L286c9a.  call `a`(v1, v3) @signature `Lcom/a/a/n;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L286ca0.  v1:= v10.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286ca4.  call `a`(v1) @signature `Lcom/a/a/n;.a:()V` @kind virtual;
  #L286caa.  v1:= v10.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286cae.  if v1 == 0 then goto L286ce8;
  #L286cb2.  v1:= v10.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286cb6.  call temp:= `clone`(v1) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L286cbc.  v1:= temp @kind object;
  #L286cbe.  v1:= (`java.util.ArrayList`) v1 @kind object;
  #L286cc2.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286cc8.  v2:= temp;
  #L286cca.  v3:= 0I;
  #L286ccc.  if v3 >= v2 then goto L286ce8;
  #L286cd0.  call temp:= `get`(v1, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L286cd6.  v4:= temp @kind object;
  #L286cd8.  v4:= (`com.a.a.a$a`) v4 @kind object;
  #L286cdc.  call `a`(v4, v10) @signature `Lcom/a/a/a$a;.a:(Lcom/a/a/a;)V` @kind interface;
  #L286ce2.  v3:= v3 + 1;
  #L286ce6.  goto L286ccc;
  #L286ce8.  v1:= v10.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286cec.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286cf2.  v1:= temp;
  #L286cf4.  if v1 != 0 then goto L286d44;
  #L286cf8.  v1:= v10.`com.a.a.c.j` @type ^`long` @kind wide;
  #L286cfc.  v3:= lcmp(v1, v5);
  #L286d00.  if v3 != 0 then goto L286d44;
  #L286d04.  v10.`com.a.a.c.i` @type ^`boolean` := v0 @kind boolean;
  #L286d08.  v1:= v10.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286d0c.  if v1 == 0 then goto L286d44;
  #L286d10.  v1:= v10.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286d14.  call temp:= `clone`(v1) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L286d1a.  v1:= temp @kind object;
  #L286d1c.  v1:= (`java.util.ArrayList`) v1 @kind object;
  #L286d20.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286d26.  v2:= temp;
  #L286d28.  if v0 >= v2 then goto L286d44;
  #L286d2c.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L286d32.  v3:= temp @kind object;
  #L286d34.  v3:= (`com.a.a.a$a`) v3 @kind object;
  #L286d38.  call `b`(v3, v10) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L286d3e.  v0:= v0 + 1;
  #L286d42.  goto L286d28;
  #L286d44.  return @kind void;
  #L286d46.  
  #L286d48.  v1:= (0I, 1065353216I) @kind object;
  #L286d57.  goto L286c72;
}
procedure `void` `a`(`com.a.a.c` v2 @kind this, `android.view.animation.Interpolator` v3 @kind object) @signature `Lcom/a/a/c;.a:(Landroid/view/animation/Interpolator;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L286d68.  v0:= v2.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286d6c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286d72.  v0:= temp @kind object;
  #L286d74.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286d7a.  v1:= temp;
  #L286d7c.  if v1 == 0 then goto L286d98;
  #L286d80.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286d86.  v1:= temp @kind object;
  #L286d88.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L286d8c.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286d90.  call `a`(v1, v3) @signature `Lcom/a/a/a;.a:(Landroid/view/animation/Interpolator;)V` @kind virtual;
  #L286d96.  goto L286d74;
  #L286d98.  return @kind void;
}
procedure `void` `a`(`com.a.a.c` v2 @kind this, `java.util.Collection` v3 @kind object) @signature `Lcom/a/a/c;.a:(Ljava/util/Collection;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L286dec.  if v3 == 0 then goto L286e3a;
  #L286df0.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L286df6.  v0:= temp;
  #L286df8.  if v0 <= 0 then goto L286e3a;
  #L286dfc.  v0:= 1I;
  #L286dfe.  v2.`com.a.a.c.g` @type ^`boolean` := v0 @kind boolean;
  #L286e02.  v0:= 0I;
  #L286e04.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L286e0a.  v3:= temp @kind object;
  #L286e0c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286e12.  v1:= temp;
  #L286e14.  if v1 == 0 then goto L286e3a;
  #L286e18.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286e1e.  v1:= temp @kind object;
  #L286e20.  v1:= (`com.a.a.a`) v1 @kind object;
  #L286e24.  if v0 != 0 then goto L286e32;
  #L286e28.  call temp:= `a`(v2, v1) @signature `Lcom/a/a/c;.a:(Lcom/a/a/a;)Lcom/a/a/c$b;` @kind virtual;
  #L286e2e.  v0:= temp @kind object;
  #L286e30.  goto L286e0c;
  #L286e32.  call temp:= `a`(v0, v1) @signature `Lcom/a/a/c$b;.a:(Lcom/a/a/a;)Lcom/a/a/c$b;` @kind virtual;
  #L286e38.  goto L286e0c;
  #L286e3a.  return @kind void;
}
procedure `void` `a`(`com.a.a.c` v3 @kind this, `com.a.a.a`[] v4 @kind object) @signature `Lcom/a/a/c;.a:([Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L286dac.  if v4 == 0 then goto L286dda;
  #L286db0.  v0:= 1I;
  #L286db2.  v3.`com.a.a.c.g` @type ^`boolean` := v0 @kind boolean;
  #L286db6.  v1:= 0I;
  #L286db8.  v1:= v4[v1] @kind object;
  #L286dbc.  call temp:= `a`(v3, v1) @signature `Lcom/a/a/c;.a:(Lcom/a/a/a;)Lcom/a/a/c$b;` @kind virtual;
  #L286dc2.  v1:= temp @kind object;
  #L286dc4.  v2:= length @variable v4;
  #L286dc6.  if v0 >= v2 then goto L286dda;
  #L286dca.  v2:= v4[v0] @kind object;
  #L286dce.  call temp:= `a`(v1, v2) @signature `Lcom/a/a/c$b;.a:(Lcom/a/a/a;)Lcom/a/a/c$b;` @kind virtual;
  #L286dd4.  v0:= v0 + 1;
  #L286dd8.  goto L286dc4;
  #L286dda.  return @kind void;
}
procedure `void` `b`(`com.a.a.c` v3 @kind this) @signature `Lcom/a/a/c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L286e4c.  v0:= 1I;
  #L286e4e.  v3.`com.a.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L286e52.  call temp:= `e`(v3) @signature `Lcom/a/a/c;.e:()Z` @kind virtual;
  #L286e58.  v0:= temp;
  #L286e5a.  if v0 == 0 then goto L286f36;
  #L286e5e.  v0:= 0I;
  #L286e60.  v1:= v3.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286e64.  if v1 == 0 then goto L286ea0;
  #L286e68.  v0:= v3.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L286e6c.  call temp:= `clone`(v0) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L286e72.  v0:= temp @kind object;
  #L286e74.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L286e78.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286e7e.  v1:= temp @kind object;
  #L286e80.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286e86.  v2:= temp;
  #L286e88.  if v2 == 0 then goto L286ea0;
  #L286e8c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286e92.  v2:= temp @kind object;
  #L286e94.  v2:= (`com.a.a.a$a`) v2 @kind object;
  #L286e98.  call `c`(v2, v3) @signature `Lcom/a/a/a$a;.c:(Lcom/a/a/a;)V` @kind interface;
  #L286e9e.  goto L286e80;
  #L286ea0.  v1:= v3.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286ea4.  if v1 == 0 then goto L286ec4;
  #L286ea8.  v1:= v3.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286eac.  call temp:= `d`(v1) @signature `Lcom/a/a/n;.d:()Z` @kind virtual;
  #L286eb2.  v1:= temp;
  #L286eb4.  if v1 == 0 then goto L286ec4;
  #L286eb8.  v1:= v3.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286ebc.  call `b`(v1) @signature `Lcom/a/a/n;.b:()V` @kind virtual;
  #L286ec2.  goto L286f04;
  #L286ec4.  v1:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286ec8.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286ece.  v1:= temp;
  #L286ed0.  if v1 <= 0 then goto L286f04;
  #L286ed4.  v1:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286ed8.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286ede.  v1:= temp @kind object;
  #L286ee0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286ee6.  v2:= temp;
  #L286ee8.  if v2 == 0 then goto L286f04;
  #L286eec.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286ef2.  v2:= temp @kind object;
  #L286ef4.  v2:= (`com.a.a.c$e`) v2 @kind object;
  #L286ef8.  v2:= v2.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286efc.  call `b`(v2) @signature `Lcom/a/a/a;.b:()V` @kind virtual;
  #L286f02.  goto L286ee0;
  #L286f04.  if v0 == 0 then goto L286f30;
  #L286f08.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286f0e.  v0:= temp @kind object;
  #L286f10.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286f16.  v1:= temp;
  #L286f18.  if v1 == 0 then goto L286f30;
  #L286f1c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286f22.  v1:= temp @kind object;
  #L286f24.  v1:= (`com.a.a.a$a`) v1 @kind object;
  #L286f28.  call `b`(v1, v3) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L286f2e.  goto L286f10;
  #L286f30.  v0:= 0I;
  #L286f32.  v3.`com.a.a.c.i` @type ^`boolean` := v0 @kind boolean;
  #L286f36.  return @kind void;
}
procedure `void` `b`(`com.a.a.c` v0 @kind this, `long` v1 ) @signature `Lcom/a/a/c;.b:(J)V` @AccessFlag PUBLIC {
    temp;

  #L286f48.  v0.`com.a.a.c.j` @type ^`long` := v1 @kind wide;
  #L286f4c.  return @kind void;
}
procedure `com.a.a.c` `c`(`com.a.a.c` v3 @kind this, `long` v4 ) @signature `Lcom/a/a/c;.c:(J)Lcom/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28676c.  v0:= 0L;
  #L286770.  v2:= lcmp(v4, v0);
  #L286774.  if v2 >= 0 then goto L286788;
  #L286778.  v4:= new `java.lang.IllegalArgumentException`;
  #L28677c.  v5:= "duration must be a value of zero or greater" @kind object;
  #L286780.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L286786.  throw v4;
  #L286788.  v0:= v3.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L28678c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286792.  v0:= temp @kind object;
  #L286794.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28679a.  v1:= temp;
  #L28679c.  if v1 == 0 then goto L2867b8;
  #L2867a0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2867a6.  v1:= temp @kind object;
  #L2867a8.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L2867ac.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L2867b0.  call temp:= `a`(v1, v4) @signature `Lcom/a/a/a;.a:(J)Lcom/a/a/a;` @kind virtual;
  #L2867b6.  goto L286794;
  #L2867b8.  v3.`com.a.a.c.l` @type ^`long` := v4 @kind wide;
  #L2867bc.  return v3 @kind object;
}
procedure `void` `c`(`com.a.a.c` v3 @kind this) @signature `Lcom/a/a/c;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L286f60.  v0:= 1I;
  #L286f62.  v3.`com.a.a.c.b` @type ^`boolean` := v0 @kind boolean;
  #L286f66.  call temp:= `e`(v3) @signature `Lcom/a/a/c;.e:()Z` @kind virtual;
  #L286f6c.  v0:= temp;
  #L286f6e.  if v0 == 0 then goto L287076;
  #L286f72.  v0:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286f76.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286f7c.  v0:= temp;
  #L286f7e.  v1:= v3.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286f82.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286f88.  v1:= temp;
  #L286f8a.  if v0 == v1 then goto L286fde;
  #L286f8e.  call `i`(v3) @signature `Lcom/a/a/c;.i:()V` @kind direct;
  #L286f94.  v0:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286f98.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286f9e.  v0:= temp @kind object;
  #L286fa0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286fa6.  v1:= temp;
  #L286fa8.  if v1 == 0 then goto L286fde;
  #L286fac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286fb2.  v1:= temp @kind object;
  #L286fb4.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L286fb8.  v2:= v3.`com.a.a.c.h` @type ^`com.a.a.c$a` @kind object;
  #L286fbc.  if v2 != 0 then goto L286fce;
  #L286fc0.  v2:= new `com.a.a.c$a`;
  #L286fc4.  call `<init>`(v2, v3, v3) @signature `Lcom/a/a/c$a;.<init>:(Lcom/a/a/c;Lcom/a/a/c;)V` @kind direct;
  #L286fca.  v3.`com.a.a.c.h` @type ^`com.a.a.c$a` := v2 @kind object;
  #L286fce.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286fd2.  v2:= v3.`com.a.a.c.h` @type ^`com.a.a.c$a` @kind object;
  #L286fd6.  call `a`(v1, v2) @signature `Lcom/a/a/a;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L286fdc.  goto L286fa0;
  #L286fde.  v0:= v3.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286fe2.  if v0 == 0 then goto L286ff0;
  #L286fe6.  v0:= v3.`com.a.a.c.k` @type ^`com.a.a.n` @kind object;
  #L286fea.  call `b`(v0) @signature `Lcom/a/a/n;.b:()V` @kind virtual;
  #L286ff0.  v0:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L286ff4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L286ffa.  v0:= temp;
  #L286ffc.  if v0 <= 0 then goto L287030;
  #L287000.  v0:= v3.`com.a.a.c.f` @type ^`java.util.ArrayList` @kind object;
  #L287004.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28700a.  v0:= temp @kind object;
  #L28700c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L287012.  v1:= temp;
  #L287014.  if v1 == 0 then goto L287030;
  #L287018.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28701e.  v1:= temp @kind object;
  #L287020.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L287024.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L287028.  call `c`(v1) @signature `Lcom/a/a/a;.c:()V` @kind virtual;
  #L28702e.  goto L28700c;
  #L287030.  v0:= v3.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L287034.  if v0 == 0 then goto L287070;
  #L287038.  v0:= v3.`com.a.a.c.a` @type ^`java.util.ArrayList` @kind object;
  #L28703c.  call temp:= `clone`(v0) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L287042.  v0:= temp @kind object;
  #L287044.  v0:= (`java.util.ArrayList`) v0 @kind object;
  #L287048.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28704e.  v0:= temp @kind object;
  #L287050.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L287056.  v1:= temp;
  #L287058.  if v1 == 0 then goto L287070;
  #L28705c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L287062.  v1:= temp @kind object;
  #L287064.  v1:= (`com.a.a.a$a`) v1 @kind object;
  #L287068.  call `b`(v1, v3) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L28706e.  goto L287050;
  #L287070.  v0:= 0I;
  #L287072.  v3.`com.a.a.c.i` @type ^`boolean` := v0 @kind boolean;
  #L287076.  return @kind void;
}
procedure `java.lang.Object` `clone`(`com.a.a.c` v1 @kind this) @signature `Lcom/a/a/c;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2869c4.  call temp:= `h`(v1) @signature `Lcom/a/a/c;.h:()Lcom/a/a/c;` @kind virtual;
  #L2869ca.  v0:= temp @kind object;
  #L2869cc.  return v0 @kind object;
}
procedure `boolean` `d`(`com.a.a.c` v2 @kind this) @signature `Lcom/a/a/c;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2866d0.  v0:= v2.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L2866d4.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2866da.  v0:= temp @kind object;
  #L2866dc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2866e2.  v1:= temp;
  #L2866e4.  if v1 == 0 then goto L286708;
  #L2866e8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2866ee.  v1:= temp @kind object;
  #L2866f0.  v1:= (`com.a.a.c$e`) v1 @kind object;
  #L2866f4.  v1:= v1.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L2866f8.  call temp:= `d`(v1) @signature `Lcom/a/a/a;.d:()Z` @kind virtual;
  #L2866fe.  v1:= temp;
  #L286700.  if v1 == 0 then goto L2866dc;
  #L286704.  v0:= 1I;
  #L286706.  return v0;
  #L286708.  v0:= 0I;
  #L28670a.  return v0;
}
procedure `boolean` `e`(`com.a.a.c` v1 @kind this) @signature `Lcom/a/a/c;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28671c.  v0:= v1.`com.a.a.c.i` @type ^`boolean` @kind boolean;
  #L286720.  return v0;
}
procedure `com.a.a.a` `g`(`com.a.a.c` v1 @kind this) @signature `Lcom/a/a/c;.g:()Lcom/a/a/a;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L286750.  call temp:= `h`(v1) @signature `Lcom/a/a/c;.h:()Lcom/a/a/c;` @kind virtual;
  #L286756.  v0:= temp @kind object;
  #L286758.  return v0 @kind object;
}
procedure `com.a.a.c` `h`(`com.a.a.c` v8 @kind this) @signature `Lcom/a/a/c;.h:()Lcom/a/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2867d0.  call temp:= `g`(v8) @signature `Lcom/a/a/a;.g:()Lcom/a/a/a;` @kind super;
  #L2867d6.  v0:= temp @kind object;
  #L2867d8.  v0:= (`com.a.a.c`) v0 @kind object;
  #L2867dc.  v1:= 1I;
  #L2867de.  v0.`com.a.a.c.g` @type ^`boolean` := v1 @kind boolean;
  #L2867e2.  v1:= 0I;
  #L2867e4.  v0.`com.a.a.c.b` @type ^`boolean` := v1 @kind boolean;
  #L2867e8.  v0.`com.a.a.c.i` @type ^`boolean` := v1 @kind boolean;
  #L2867ec.  v1:= new `java.util.ArrayList`;
  #L2867f0.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2867f6.  v0.`com.a.a.c.c` @type ^`java.util.ArrayList` := v1 @kind object;
  #L2867fa.  v1:= new `java.util.HashMap`;
  #L2867fe.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L286804.  v0.`com.a.a.c.d` @type ^`java.util.HashMap` := v1 @kind object;
  #L286808.  v1:= new `java.util.ArrayList`;
  #L28680c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286812.  v0.`com.a.a.c.e` @type ^`java.util.ArrayList` := v1 @kind object;
  #L286816.  v1:= new `java.util.ArrayList`;
  #L28681a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L286820.  v0.`com.a.a.c.f` @type ^`java.util.ArrayList` := v1 @kind object;
  #L286824.  v1:= new `java.util.HashMap`;
  #L286828.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L28682e.  v2:= v8.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286832.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286838.  v2:= temp @kind object;
  #L28683a.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286840.  v3:= temp;
  #L286842.  if v3 == 0 then goto L286904;
  #L286846.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28684c.  v3:= temp @kind object;
  #L28684e.  v3:= (`com.a.a.c$e`) v3 @kind object;
  #L286852.  call temp:= `a`(v3) @signature `Lcom/a/a/c$e;.a:()Lcom/a/a/c$e;` @kind virtual;
  #L286858.  v4:= temp @kind object;
  #L28685a.  call temp:= `put`(v1, v3, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L286860.  v3:= v0.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286864.  call temp:= `add`(v3, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28686a.  v3:= v0.`com.a.a.c.d` @type ^`java.util.HashMap` @kind object;
  #L28686e.  v5:= v4.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L286872.  call temp:= `put`(v3, v5, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L286878.  v3:= 0I;
  #L28687a.  v4.`com.a.a.c$e.b` @type ^`java.util.ArrayList` := v3 @kind object;
  #L28687e.  v4.`com.a.a.c$e.c` @type ^`java.util.ArrayList` := v3 @kind object;
  #L286882.  v4.`com.a.a.c$e.e` @type ^`java.util.ArrayList` := v3 @kind object;
  #L286886.  v4.`com.a.a.c$e.d` @type ^`java.util.ArrayList` := v3 @kind object;
  #L28688a.  v4:= v4.`com.a.a.c$e.a` @type ^`com.a.a.a` @kind object;
  #L28688e.  call temp:= `f`(v4) @signature `Lcom/a/a/a;.f:()Ljava/util/ArrayList;` @kind virtual;
  #L286894.  v4:= temp @kind object;
  #L286896.  if v4 == 0 then goto L28683a;
  #L28689a.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2868a0.  v5:= temp @kind object;
  #L2868a2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2868a8.  v6:= temp;
  #L2868aa.  if v6 == 0 then goto L2868d8;
  #L2868ae.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2868b4.  v6:= temp @kind object;
  #L2868b6.  v6:= (`com.a.a.a$a`) v6 @kind object;
  #L2868ba.  v7:= instanceof @variable v6 @type ^`com.a.a.c$a` @kind boolean;
  #L2868be.  if v7 == 0 then goto L2868a2;
  #L2868c2.  if v3 != 0 then goto L2868d0;
  #L2868c6.  v3:= new `java.util.ArrayList`;
  #L2868ca.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2868d0.  call temp:= `add`(v3, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2868d6.  goto L2868a2;
  #L2868d8.  if v3 == 0 then goto L28683a;
  #L2868dc.  call temp:= `iterator`(v3) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L2868e2.  v3:= temp @kind object;
  #L2868e4.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2868ea.  v5:= temp;
  #L2868ec.  if v5 == 0 then goto L28683a;
  #L2868f0.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2868f6.  v5:= temp @kind object;
  #L2868f8.  v5:= (`com.a.a.a$a`) v5 @kind object;
  #L2868fc.  call temp:= `remove`(v4, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L286902.  goto L2868e4;
  #L286904.  v2:= v8.`com.a.a.c.e` @type ^`java.util.ArrayList` @kind object;
  #L286908.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L28690e.  v2:= temp @kind object;
  #L286910.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L286916.  v3:= temp;
  #L286918.  if v3 == 0 then goto L286986;
  #L28691c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L286922.  v3:= temp @kind object;
  #L286924.  v3:= (`com.a.a.c$e`) v3 @kind object;
  #L286928.  call temp:= `get`(v1, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28692e.  v4:= temp @kind object;
  #L286930.  v4:= (`com.a.a.c$e`) v4 @kind object;
  #L286934.  v5:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286938.  if v5 == 0 then goto L286910;
  #L28693c.  v3:= v3.`com.a.a.c$e.b` @type ^`java.util.ArrayList` @kind object;
  #L286940.  call temp:= `iterator`(v3) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L286946.  v3:= temp @kind object;
  #L286948.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28694e.  v5:= temp;
  #L286950.  if v5 == 0 then goto L286910;
  #L286954.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28695a.  v5:= temp @kind object;
  #L28695c.  v5:= (`com.a.a.c$c`) v5 @kind object;
  #L286960.  v6:= v5.`com.a.a.c$c.a` @type ^`com.a.a.c$e` @kind object;
  #L286964.  call temp:= `get`(v1, v6) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28696a.  v6:= temp @kind object;
  #L28696c.  v6:= (`com.a.a.c$e`) v6 @kind object;
  #L286970.  v7:= new `com.a.a.c$c`;
  #L286974.  v5:= v5.`com.a.a.c$c.b` @type ^`int`;
  #L286978.  call `<init>`(v7, v6, v5) @signature `Lcom/a/a/c$c;.<init>:(Lcom/a/a/c$e;I)V` @kind direct;
  #L28697e.  call `a`(v4, v7) @signature `Lcom/a/a/c$e;.a:(Lcom/a/a/c$c;)V` @kind virtual;
  #L286984.  goto L286948;
  #L286986.  return v0 @kind object;
}
