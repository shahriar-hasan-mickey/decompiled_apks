record `com.a.c.e` @kind class @AccessFlag  extends `com.a.c.b` @kind class {
  `java.util.ArrayList` `com.a.c.e.a` @AccessFlag ;
  `com.a.c.a.a` `com.a.c.e.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.ref.WeakReference` `com.a.c.e.c` @AccessFlag PRIVATE_FINAL;
  `long` `com.a.c.e.d` @AccessFlag PRIVATE;
  `boolean` `com.a.c.e.e` @AccessFlag PRIVATE;
  `long` `com.a.c.e.f` @AccessFlag PRIVATE;
  `boolean` `com.a.c.e.g` @AccessFlag PRIVATE;
  `android.view.animation.Interpolator` `com.a.c.e.h` @AccessFlag PRIVATE;
  `boolean` `com.a.c.e.i` @AccessFlag PRIVATE;
  `com.a.a.a$a` `com.a.c.e.j` @AccessFlag PRIVATE;
  `com.a.c.e$a` `com.a.c.e.k` @AccessFlag PRIVATE;
  `java.lang.Runnable` `com.a.c.e.l` @AccessFlag PRIVATE;
  `java.util.HashMap` `com.a.c.e.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.a.c.e` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lcom/a/c/e;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L28d474.  call `<init>`(v3) @signature `Lcom/a/c/b;.<init>:()V` @kind direct;
  #L28d47a.  v0:= 0I;
  #L28d47c.  v3.`com.a.c.e.e` @type ^`boolean` := v0 @kind boolean;
  #L28d480.  v1:= 0L;
  #L28d484.  v3.`com.a.c.e.f` @type ^`long` := v1 @kind wide;
  #L28d488.  v3.`com.a.c.e.g` @type ^`boolean` := v0 @kind boolean;
  #L28d48c.  v3.`com.a.c.e.i` @type ^`boolean` := v0 @kind boolean;
  #L28d490.  v0:= 0I;
  #L28d492.  v3.`com.a.c.e.j` @type ^`com.a.a.a$a` := v0 @kind object;
  #L28d496.  v1:= new `com.a.c.e$a`;
  #L28d49a.  call `<init>`(v1, v3, v0) @signature `Lcom/a/c/e$a;.<init>:(Lcom/a/c/e;Lcom/a/c/e$1;)V` @kind direct;
  #L28d4a0.  v3.`com.a.c.e.k` @type ^`com.a.c.e$a` := v1 @kind object;
  #L28d4a4.  v0:= new `java.util.ArrayList`;
  #L28d4a8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28d4ae.  v3.`com.a.c.e.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L28d4b2.  v0:= new `com.a.c.e$1`;
  #L28d4b6.  call `<init>`(v0, v3) @signature `Lcom/a/c/e$1;.<init>:(Lcom/a/c/e;)V` @kind direct;
  #L28d4bc.  v3.`com.a.c.e.l` @type ^`java.lang.Runnable` := v0 @kind object;
  #L28d4c0.  v0:= new `java.util.HashMap`;
  #L28d4c4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L28d4ca.  v3.`com.a.c.e.m` @type ^`java.util.HashMap` := v0 @kind object;
  #L28d4ce.  v0:= new `java.lang.ref.WeakReference`;
  #L28d4d2.  call `<init>`(v0, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L28d4d8.  v3.`com.a.c.e.c` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L28d4dc.  call temp:= `a`(v4) @signature `Lcom/a/c/a/a;.a:(Landroid/view/View;)Lcom/a/c/a/a;` @kind static;
  #L28d4e2.  v4:= temp @kind object;
  #L28d4e4.  v3.`com.a.c.e.b` @type ^`com.a.c.a.a` := v4 @kind object;
  #L28d4e8.  return @kind void;
}
procedure `float` `a`(`com.a.c.e` v1 @kind this, `int` v2 ) @signature `Lcom/a/c/e;.a:(I)F` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28d350.  v0:= 4I;
  #L28d352.  if v2 == v0 then goto L28d416;
  #L28d356.  v0:= 8I;
  #L28d35a.  if v2 == v0 then goto L28d408;
  #L28d35e.  v0:= 16I;
  #L28d362.  if v2 == v0 then goto L28d3fa;
  #L28d366.  v0:= 32I;
  #L28d36a.  if v2 == v0 then goto L28d3ec;
  #L28d36e.  v0:= 64I;
  #L28d372.  if v2 == v0 then goto L28d3de;
  #L28d376.  v0:= 128I;
  #L28d37a.  if v2 == v0 then goto L28d3d0;
  #L28d37e.  v0:= 256I;
  #L28d382.  if v2 == v0 then goto L28d3c2;
  #L28d386.  v0:= 512I;
  #L28d38a.  if v2 == v0 then goto L28d3b4;
  #L28d38e.  goto L28d424;
  #L28d394.  v2:= 0I;
  #L28d396.  return v2;
  #L28d398.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d39c.  call temp:= `l`(v2) @signature `Lcom/a/c/a/a;.l:()F` @kind virtual;
  #L28d3a2.  v2:= temp;
  #L28d3a4.  return v2;
  #L28d3a6.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3aa.  call temp:= `k`(v2) @signature `Lcom/a/c/a/a;.k:()F` @kind virtual;
  #L28d3b0.  v2:= temp;
  #L28d3b2.  return v2;
  #L28d3b4.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3b8.  call temp:= `a`(v2) @signature `Lcom/a/c/a/a;.a:()F` @kind virtual;
  #L28d3be.  v2:= temp;
  #L28d3c0.  return v2;
  #L28d3c2.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3c6.  call temp:= `n`(v2) @signature `Lcom/a/c/a/a;.n:()F` @kind virtual;
  #L28d3cc.  v2:= temp;
  #L28d3ce.  return v2;
  #L28d3d0.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3d4.  call temp:= `m`(v2) @signature `Lcom/a/c/a/a;.m:()F` @kind virtual;
  #L28d3da.  v2:= temp;
  #L28d3dc.  return v2;
  #L28d3de.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3e2.  call temp:= `f`(v2) @signature `Lcom/a/c/a/a;.f:()F` @kind virtual;
  #L28d3e8.  v2:= temp;
  #L28d3ea.  return v2;
  #L28d3ec.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3f0.  call temp:= `e`(v2) @signature `Lcom/a/c/a/a;.e:()F` @kind virtual;
  #L28d3f6.  v2:= temp;
  #L28d3f8.  return v2;
  #L28d3fa.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d3fe.  call temp:= `d`(v2) @signature `Lcom/a/c/a/a;.d:()F` @kind virtual;
  #L28d404.  v2:= temp;
  #L28d406.  return v2;
  #L28d408.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d40c.  call temp:= `h`(v2) @signature `Lcom/a/c/a/a;.h:()F` @kind virtual;
  #L28d412.  v2:= temp;
  #L28d414.  return v2;
  #L28d416.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d41a.  call temp:= `g`(v2) @signature `Lcom/a/c/a/a;.g:()F` @kind virtual;
  #L28d420.  v2:= temp;
  #L28d422.  return v2;
  #L28d424.  switch v2
                  | 1 => goto L28d3a6
                  | 2 => goto L28d398
                  | else => goto L28d394;
}
procedure `com.a.a.a$a` `a`(`com.a.c.e` v0 @kind object, `com.a.a.a$a` v1 @kind object) @signature `Lcom/a/c/e;.a:(Lcom/a/c/e;Lcom/a/a/a$a;)Lcom/a/a/a$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d294.  v0.`com.a.c.e.j` @type ^`com.a.a.a$a` := v1 @kind object;
  #L28d298.  return v1 @kind object;
}
procedure `void` `a`(`com.a.c.e` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/a/c/e;.a:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28d544.  call temp:= `a`(v1, v2) @signature `Lcom/a/c/e;.a:(I)F` @kind direct;
  #L28d54a.  v0:= temp;
  #L28d54c.  v3:= v3 - v0 @kind float;
  #L28d54e.  call `a`(v1, v2, v0, v3) @signature `Lcom/a/c/e;.a:(IFF)V` @kind direct;
  #L28d554.  return @kind void;
}
procedure `void` `a`(`com.a.c.e` v5 @kind this, `int` v6 , `float` v7 , `float` v8 ) @signature `Lcom/a/c/e;.a:(IFF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28d568.  v0:= v5.`com.a.c.e.m` @type ^`java.util.HashMap` @kind object;
  #L28d56c.  call temp:= `size`(v0) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L28d572.  v0:= temp;
  #L28d574.  if v0 <= 0 then goto L28d5d6;
  #L28d578.  v0:= 0I;
  #L28d57a.  v1:= v5.`com.a.c.e.m` @type ^`java.util.HashMap` @kind object;
  #L28d57e.  call temp:= `keySet`(v1) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L28d584.  v1:= temp @kind object;
  #L28d586.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28d58c.  v1:= temp @kind object;
  #L28d58e.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28d594.  v2:= temp;
  #L28d596.  if v2 == 0 then goto L28d5cc;
  #L28d59a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28d5a0.  v2:= temp @kind object;
  #L28d5a2.  v2:= (`com.a.a.a`) v2 @kind object;
  #L28d5a6.  v3:= v5.`com.a.c.e.m` @type ^`java.util.HashMap` @kind object;
  #L28d5aa.  call temp:= `get`(v3, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28d5b0.  v3:= temp @kind object;
  #L28d5b2.  v3:= (`com.a.c.e$c`) v3 @kind object;
  #L28d5b6.  call temp:= `a`(v3, v6) @signature `Lcom/a/c/e$c;.a:(I)Z` @kind virtual;
  #L28d5bc.  v4:= temp;
  #L28d5be.  if v4 == 0 then goto L28d58e;
  #L28d5c2.  v3:= v3.`com.a.c.e$c.a` @type ^`int`;
  #L28d5c6.  if v3 != 0 then goto L28d58e;
  #L28d5ca.  v0:= v2 @kind object;
  #L28d5cc.  if v0 == 0 then goto L28d5d6;
  #L28d5d0.  call `b`(v0) @signature `Lcom/a/a/a;.b:()V` @kind virtual;
  #L28d5d6.  v0:= new `com.a.c.e$b`;
  #L28d5da.  call `<init>`(v0, v6, v7, v8) @signature `Lcom/a/c/e$b;.<init>:(IFF)V` @kind direct;
  #L28d5e0.  v6:= v5.`com.a.c.e.a` @type ^`java.util.ArrayList` @kind object;
  #L28d5e4.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28d5ea.  v6:= v5.`com.a.c.e.c` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28d5ee.  call temp:= `get`(v6) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28d5f4.  v6:= temp @kind object;
  #L28d5f6.  v6:= (`android.view.View`) v6 @kind object;
  #L28d5fa.  if v6 == 0 then goto L28d612;
  #L28d5fe.  v7:= v5.`com.a.c.e.l` @type ^`java.lang.Runnable` @kind object;
  #L28d602.  call temp:= `removeCallbacks`(v6, v7) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L28d608.  v7:= v5.`com.a.c.e.l` @type ^`java.lang.Runnable` @kind object;
  #L28d60c.  call temp:= `post`(v6, v7) @signature `Landroid/view/View;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L28d612.  return @kind void;
}
procedure `void` `a`(`com.a.c.e` v0 @kind object) @signature `Lcom/a/c/e;.a:(Lcom/a/c/e;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d514.  call `b`(v0) @signature `Lcom/a/c/e;.b:()V` @kind direct;
  #L28d51a.  return @kind void;
}
procedure `void` `a`(`com.a.c.e` v0 @kind object, `int` v1 , `float` v2 ) @signature `Lcom/a/c/e;.a:(Lcom/a/c/e;IF)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d52c.  call `b`(v0, v1, v2) @signature `Lcom/a/c/e;.b:(IF)V` @kind direct;
  #L28d532.  return @kind void;
}
procedure `com.a.a.a$a` `b`(`com.a.c.e` v0 @kind object) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d2ac.  v0:= v0.`com.a.c.e.j` @type ^`com.a.a.a$a` @kind object;
  #L28d2b0.  return v0 @kind object;
}
procedure `void` `b`(`com.a.c.e` v6 @kind this) @signature `Lcom/a/c/e;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28d624.  v0:= 1I;
  #L28d626.  v0:= new `float`[v0];
  #L28d62a.  v1:= 0I;
  #L28d62c.  v2:= 1.0F;
  #L28d630.  v0[v1]:= v2;
  #L28d634.  call temp:= `b`(v0) @signature `Lcom/a/a/n;.b:([F)Lcom/a/a/n;` @kind static;
  #L28d63a.  v0:= temp @kind object;
  #L28d63c.  v2:= v6.`com.a.c.e.a` @type ^`java.util.ArrayList` @kind object;
  #L28d640.  call temp:= `clone`(v2) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28d646.  v2:= temp @kind object;
  #L28d648.  v2:= (`java.util.ArrayList`) v2 @kind object;
  #L28d64c.  v3:= v6.`com.a.c.e.a` @type ^`java.util.ArrayList` @kind object;
  #L28d650.  call `clear`(v3) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L28d656.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28d65c.  v3:= temp;
  #L28d65e.  v4:= 0I;
  #L28d660.  if v1 >= v3 then goto L28d67c;
  #L28d664.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28d66a.  v5:= temp @kind object;
  #L28d66c.  v5:= (`com.a.c.e$b`) v5 @kind object;
  #L28d670.  v5:= v5.`com.a.c.e$b.a` @type ^`int`;
  #L28d674.  v4:= v4 ^| v5 @kind int;
  #L28d676.  v1:= v1 + 1;
  #L28d67a.  goto L28d660;
  #L28d67c.  v1:= v6.`com.a.c.e.m` @type ^`java.util.HashMap` @kind object;
  #L28d680.  v3:= new `com.a.c.e$c`;
  #L28d684.  call `<init>`(v3, v4, v2) @signature `Lcom/a/c/e$c;.<init>:(ILjava/util/ArrayList;)V` @kind direct;
  #L28d68a.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28d690.  v1:= v6.`com.a.c.e.k` @type ^`com.a.c.e$a` @kind object;
  #L28d694.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n$b;)V` @kind virtual;
  #L28d69a.  v1:= v6.`com.a.c.e.k` @type ^`com.a.c.e$a` @kind object;
  #L28d69e.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L28d6a4.  v1:= v6.`com.a.c.e.g` @type ^`boolean` @kind boolean;
  #L28d6a8.  if v1 == 0 then goto L28d6b6;
  #L28d6ac.  v1:= v6.`com.a.c.e.f` @type ^`long` @kind wide;
  #L28d6b0.  call `e`(v0, v1) @signature `Lcom/a/a/n;.e:(J)V` @kind virtual;
  #L28d6b6.  v1:= v6.`com.a.c.e.e` @type ^`boolean` @kind boolean;
  #L28d6ba.  if v1 == 0 then goto L28d6c8;
  #L28d6be.  v1:= v6.`com.a.c.e.d` @type ^`long` @kind wide;
  #L28d6c2.  call temp:= `c`(v0, v1) @signature `Lcom/a/a/n;.c:(J)Lcom/a/a/n;` @kind virtual;
  #L28d6c8.  v1:= v6.`com.a.c.e.i` @type ^`boolean` @kind boolean;
  #L28d6cc.  if v1 == 0 then goto L28d6da;
  #L28d6d0.  v1:= v6.`com.a.c.e.h` @type ^`android.view.animation.Interpolator` @kind object;
  #L28d6d4.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Landroid/view/animation/Interpolator;)V` @kind virtual;
  #L28d6da.  call `a`(v0) @signature `Lcom/a/a/n;.a:()V` @kind virtual;
  #L28d6e0.  return @kind void;
}
procedure `void` `b`(`com.a.c.e` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/a/c/e;.b:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28d6f4.  v0:= 4I;
  #L28d6f6.  if v2 == v0 then goto L28d7a6;
  #L28d6fa.  v0:= 8I;
  #L28d6fe.  if v2 == v0 then goto L28d79a;
  #L28d702.  v0:= 16I;
  #L28d706.  if v2 == v0 then goto L28d78e;
  #L28d70a.  v0:= 32I;
  #L28d70e.  if v2 == v0 then goto L28d782;
  #L28d712.  v0:= 64I;
  #L28d716.  if v2 == v0 then goto L28d776;
  #L28d71a.  v0:= 128I;
  #L28d71e.  if v2 == v0 then goto L28d76a;
  #L28d722.  v0:= 256I;
  #L28d726.  if v2 == v0 then goto L28d75e;
  #L28d72a.  v0:= 512I;
  #L28d72e.  if v2 == v0 then goto L28d752;
  #L28d732.  goto L28d7b4;
  #L28d738.  goto L28d7b0;
  #L28d73a.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d73e.  call `j`(v2, v3) @signature `Lcom/a/c/a/a;.j:(F)V` @kind virtual;
  #L28d744.  goto L28d7b0;
  #L28d746.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d74a.  call `i`(v2, v3) @signature `Lcom/a/c/a/a;.i:(F)V` @kind virtual;
  #L28d750.  goto L28d7b0;
  #L28d752.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d756.  call `a`(v2, v3) @signature `Lcom/a/c/a/a;.a:(F)V` @kind virtual;
  #L28d75c.  goto L28d7b0;
  #L28d75e.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d762.  call `l`(v2, v3) @signature `Lcom/a/c/a/a;.l:(F)V` @kind virtual;
  #L28d768.  goto L28d7b0;
  #L28d76a.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d76e.  call `k`(v2, v3) @signature `Lcom/a/c/a/a;.k:(F)V` @kind virtual;
  #L28d774.  goto L28d7b0;
  #L28d776.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d77a.  call `f`(v2, v3) @signature `Lcom/a/c/a/a;.f:(F)V` @kind virtual;
  #L28d780.  goto L28d7b0;
  #L28d782.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d786.  call `e`(v2, v3) @signature `Lcom/a/c/a/a;.e:(F)V` @kind virtual;
  #L28d78c.  goto L28d7b0;
  #L28d78e.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d792.  call `d`(v2, v3) @signature `Lcom/a/c/a/a;.d:(F)V` @kind virtual;
  #L28d798.  goto L28d7b0;
  #L28d79a.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d79e.  call `h`(v2, v3) @signature `Lcom/a/c/a/a;.h:(F)V` @kind virtual;
  #L28d7a4.  goto L28d7b0;
  #L28d7a6.  v2:= v1.`com.a.c.e.b` @type ^`com.a.c.a.a` @kind object;
  #L28d7aa.  call `g`(v2, v3) @signature `Lcom/a/c/a/a;.g:(F)V` @kind virtual;
  #L28d7b0.  return @kind void;
  #L28d7b2.  
  #L28d7b4.  switch v2
                  | 1 => goto L28d746
                  | 2 => goto L28d73a
                  | else => goto L28d738;
}
procedure `java.util.HashMap` `c`(`com.a.c.e` v0 @kind object) @signature `Lcom/a/c/e;.c:(Lcom/a/c/e;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d45c.  v0:= v0.`com.a.c.e.m` @type ^`java.util.HashMap` @kind object;
  #L28d460.  return v0 @kind object;
}
procedure `java.lang.ref.WeakReference` `d`(`com.a.c.e` v0 @kind object) @signature `Lcom/a/c/e;.d:(Lcom/a/c/e;)Ljava/lang/ref/WeakReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28d444.  v0:= v0.`com.a.c.e.c` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28d448.  return v0 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.e` v1 @kind this, `float` v2 ) @signature `Lcom/a/c/e;.a:(F)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d2dc.  v0:= 512I;
  #L28d2e0.  call `a`(v1, v0, v2) @signature `Lcom/a/c/e;.a:(IF)V` @kind direct;
  #L28d2e6.  return v1 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.e` v3 @kind this, `long` v4 ) @signature `Lcom/a/c/e;.a:(J)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28d2f8.  v0:= 0L;
  #L28d2fc.  v2:= lcmp(v4, v0);
  #L28d300.  if v2 >= 0 then goto L28d332;
  #L28d304.  v0:= new `java.lang.IllegalArgumentException`;
  #L28d308.  v1:= new `java.lang.StringBuilder`;
  #L28d30c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28d312.  v2:= "Animators cannot have negative duration: " @kind object;
  #L28d316.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d31c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28d322.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28d328.  v4:= temp @kind object;
  #L28d32a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28d330.  throw v0;
  #L28d332.  v0:= 1I;
  #L28d334.  v3.`com.a.c.e.e` @type ^`boolean` := v0 @kind boolean;
  #L28d338.  v3.`com.a.c.e.d` @type ^`long` := v4 @kind wide;
  #L28d33c.  return v3 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.e` v0 @kind this, `com.a.a.a$a` v1 @kind object) @signature `Lcom/a/c/e;.a:(Lcom/a/a/a$a;)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;

  #L28d2c4.  v0.`com.a.c.e.j` @type ^`com.a.a.a$a` := v1 @kind object;
  #L28d2c8.  return v0 @kind object;
}
procedure `void` `a`(`com.a.c.e` v0 @kind this) @signature `Lcom/a/c/e;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L28d4fc.  call `b`(v0) @signature `Lcom/a/c/e;.b:()V` @kind direct;
  #L28d502.  return @kind void;
}
