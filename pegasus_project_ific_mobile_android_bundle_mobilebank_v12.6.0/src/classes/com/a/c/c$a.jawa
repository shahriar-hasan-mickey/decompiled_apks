record `com.a.c.c$a` @kind class @AccessFlag  extends `com.a.a.a$a` @kind interface, `com.a.a.n$b` @kind interface {
  `com.a.c.c` `com.a.c.c$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.a.c.c$a` v0 @kind this, `com.a.c.c` v1 @kind object) @signature `Lcom/a/c/c$a;.<init>:(Lcom/a/c/c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28c63c.  v0.`com.a.c.c$a.a` @type ^`com.a.c.c` := v1 @kind object;
  #L28c640.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28c646.  return @kind void;
}
procedure `void` `<init>`(`com.a.c.c$a` v0 @kind this, `com.a.c.c` v1 @kind object, `com.a.c.c$1` v2 @kind object) @signature `Lcom/a/c/c$a;.<init>:(Lcom/a/c/c;Lcom/a/c/c$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28c658.  call `<init>`(v0, v1) @signature `Lcom/a/c/c$a;.<init>:(Lcom/a/c/c;)V` @kind direct;
  #L28c65e.  return @kind void;
}
procedure `void` `a`(`com.a.c.c$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/c$a;.a:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c670.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c674.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c67a.  v0:= temp @kind object;
  #L28c67c.  if v0 == 0 then goto L28c692;
  #L28c680.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c684.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c68a.  v0:= temp @kind object;
  #L28c68c.  call `a`(v0, v2) @signature `Lcom/a/a/a$a;.a:(Lcom/a/a/a;)V` @kind interface;
  #L28c692.  return @kind void;
}
procedure `void` `a`(`com.a.c.c$a` v6 @kind this, `com.a.a.n` v7 @kind object) @signature `Lcom/a/c/c$a;.a:(Lcom/a/a/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28c6a4.  call temp:= `n`(v7) @signature `Lcom/a/a/n;.n:()F` @kind virtual;
  #L28c6aa.  v0:= temp;
  #L28c6ac.  v1:= v6.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c6b0.  call temp:= `c`(v1) @signature `Lcom/a/c/c;.c:(Lcom/a/c/c;)Ljava/util/HashMap;` @kind static;
  #L28c6b6.  v1:= temp @kind object;
  #L28c6b8.  call temp:= `get`(v1, v7) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28c6be.  v7:= temp @kind object;
  #L28c6c0.  v7:= (`com.a.c.c$c`) v7 @kind object;
  #L28c6c4.  v1:= v7.`com.a.c.c$c.a` @type ^`int`;
  #L28c6c8.  v1:= v1 ^& 511;
  #L28c6cc.  if v1 == 0 then goto L28c6f2;
  #L28c6d0.  v1:= v6.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c6d4.  call temp:= `d`(v1) @signature `Lcom/a/c/c;.d:(Lcom/a/c/c;)Ljava/lang/ref/WeakReference;` @kind static;
  #L28c6da.  v1:= temp @kind object;
  #L28c6dc.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28c6e2.  v1:= temp @kind object;
  #L28c6e4.  v1:= (`android.view.View`) v1 @kind object;
  #L28c6e8.  if v1 == 0 then goto L28c6f2;
  #L28c6ec.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L28c6f2.  v7:= v7.`com.a.c.c$c.b` @type ^`java.util.ArrayList` @kind object;
  #L28c6f6.  if v7 == 0 then goto L28c736;
  #L28c6fa.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28c700.  v1:= temp;
  #L28c702.  v2:= 0I;
  #L28c704.  if v2 >= v1 then goto L28c736;
  #L28c708.  call temp:= `get`(v7, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28c70e.  v3:= temp @kind object;
  #L28c710.  v3:= (`com.a.c.c$b`) v3 @kind object;
  #L28c714.  v4:= v3.`com.a.c.c$b.b` @type ^`float`;
  #L28c718.  v5:= v3.`com.a.c.c$b.c` @type ^`float`;
  #L28c71c.  v5:= v5 * v0 @kind float;
  #L28c720.  v4:= v4 + v5 @kind float;
  #L28c722.  v5:= v6.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c726.  v3:= v3.`com.a.c.c$b.a` @type ^`int`;
  #L28c72a.  call `a`(v5, v3, v4) @signature `Lcom/a/c/c;.a:(Lcom/a/c/c;IF)V` @kind static;
  #L28c730.  v2:= v2 + 1;
  #L28c734.  goto L28c704;
  #L28c736.  v7:= v6.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c73a.  call temp:= `d`(v7) @signature `Lcom/a/c/c;.d:(Lcom/a/c/c;)Ljava/lang/ref/WeakReference;` @kind static;
  #L28c740.  v7:= temp @kind object;
  #L28c742.  call temp:= `get`(v7) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28c748.  v7:= temp @kind object;
  #L28c74a.  v7:= (`android.view.View`) v7 @kind object;
  #L28c74e.  if v7 == 0 then goto L28c758;
  #L28c752.  call `invalidate`(v7) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L28c758.  return @kind void;
}
procedure `void` `b`(`com.a.c.c$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/c$a;.b:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c76c.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c770.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c776.  v0:= temp @kind object;
  #L28c778.  if v0 == 0 then goto L28c78e;
  #L28c77c.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c780.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c786.  v0:= temp @kind object;
  #L28c788.  call `b`(v0, v2) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L28c78e.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c792.  call temp:= `c`(v0) @signature `Lcom/a/c/c;.c:(Lcom/a/c/c;)Ljava/util/HashMap;` @kind static;
  #L28c798.  v0:= temp @kind object;
  #L28c79a.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28c7a0.  v2:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c7a4.  call temp:= `c`(v2) @signature `Lcom/a/c/c;.c:(Lcom/a/c/c;)Ljava/util/HashMap;` @kind static;
  #L28c7aa.  v2:= temp @kind object;
  #L28c7ac.  call temp:= `isEmpty`(v2) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L28c7b2.  v2:= temp;
  #L28c7b4.  if v2 == 0 then goto L28c7c4;
  #L28c7b8.  v2:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c7bc.  v0:= 0I;
  #L28c7be.  call temp:= `a`(v2, v0) @signature `Lcom/a/c/c;.a:(Lcom/a/c/c;Lcom/a/a/a$a;)Lcom/a/a/a$a;` @kind static;
  #L28c7c4.  return @kind void;
}
procedure `void` `c`(`com.a.c.c$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/c$a;.c:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c7d8.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c7dc.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c7e2.  v0:= temp @kind object;
  #L28c7e4.  if v0 == 0 then goto L28c7fa;
  #L28c7e8.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c7ec.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c7f2.  v0:= temp @kind object;
  #L28c7f4.  call `c`(v0, v2) @signature `Lcom/a/a/a$a;.c:(Lcom/a/a/a;)V` @kind interface;
  #L28c7fa.  return @kind void;
}
procedure `void` `d`(`com.a.c.c$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/c$a;.d:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c80c.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c810.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c816.  v0:= temp @kind object;
  #L28c818.  if v0 == 0 then goto L28c82e;
  #L28c81c.  v0:= v1.`com.a.c.c$a.a` @type ^`com.a.c.c` @kind object;
  #L28c820.  call temp:= `b`(v0) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @kind static;
  #L28c826.  v0:= temp @kind object;
  #L28c828.  call `d`(v0, v2) @signature `Lcom/a/a/a$a;.d:(Lcom/a/a/a;)V` @kind interface;
  #L28c82e.  return @kind void;
}
