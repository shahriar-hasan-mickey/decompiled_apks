record `com.a.c.e$a` @kind class @AccessFlag  extends `com.a.a.a$a` @kind interface, `com.a.a.n$b` @kind interface {
  `com.a.c.e` `com.a.c.e$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.a.c.e$a` v0 @kind this, `com.a.c.e` v1 @kind object) @signature `Lcom/a/c/e$a;.<init>:(Lcom/a/c/e;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L28cfd8.  v0.`com.a.c.e$a.a` @type ^`com.a.c.e` := v1 @kind object;
  #L28cfdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L28cfe2.  return @kind void;
}
procedure `void` `<init>`(`com.a.c.e$a` v0 @kind this, `com.a.c.e` v1 @kind object, `com.a.c.e$1` v2 @kind object) @signature `Lcom/a/c/e$a;.<init>:(Lcom/a/c/e;Lcom/a/c/e$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L28cff4.  call `<init>`(v0, v1) @signature `Lcom/a/c/e$a;.<init>:(Lcom/a/c/e;)V` @kind direct;
  #L28cffa.  return @kind void;
}
procedure `void` `a`(`com.a.c.e$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/e$a;.a:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d00c.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d010.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d016.  v0:= temp @kind object;
  #L28d018.  if v0 == 0 then goto L28d02e;
  #L28d01c.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d020.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d026.  v0:= temp @kind object;
  #L28d028.  call `a`(v0, v2) @signature `Lcom/a/a/a$a;.a:(Lcom/a/a/a;)V` @kind interface;
  #L28d02e.  return @kind void;
}
procedure `void` `a`(`com.a.c.e$a` v6 @kind this, `com.a.a.n` v7 @kind object) @signature `Lcom/a/c/e$a;.a:(Lcom/a/a/n;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28d040.  call temp:= `n`(v7) @signature `Lcom/a/a/n;.n:()F` @kind virtual;
  #L28d046.  v0:= temp;
  #L28d048.  v1:= v6.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d04c.  call temp:= `c`(v1) @signature `Lcom/a/c/e;.c:(Lcom/a/c/e;)Ljava/util/HashMap;` @kind static;
  #L28d052.  v1:= temp @kind object;
  #L28d054.  call temp:= `get`(v1, v7) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28d05a.  v7:= temp @kind object;
  #L28d05c.  v7:= (`com.a.c.e$c`) v7 @kind object;
  #L28d060.  v1:= v7.`com.a.c.e$c.a` @type ^`int`;
  #L28d064.  v1:= v1 ^& 511;
  #L28d068.  if v1 == 0 then goto L28d08e;
  #L28d06c.  v1:= v6.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d070.  call temp:= `d`(v1) @signature `Lcom/a/c/e;.d:(Lcom/a/c/e;)Ljava/lang/ref/WeakReference;` @kind static;
  #L28d076.  v1:= temp @kind object;
  #L28d078.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28d07e.  v1:= temp @kind object;
  #L28d080.  v1:= (`android.view.View`) v1 @kind object;
  #L28d084.  if v1 == 0 then goto L28d08e;
  #L28d088.  call `invalidate`(v1) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L28d08e.  v7:= v7.`com.a.c.e$c.b` @type ^`java.util.ArrayList` @kind object;
  #L28d092.  if v7 == 0 then goto L28d0d2;
  #L28d096.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28d09c.  v1:= temp;
  #L28d09e.  v2:= 0I;
  #L28d0a0.  if v2 >= v1 then goto L28d0d2;
  #L28d0a4.  call temp:= `get`(v7, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28d0aa.  v3:= temp @kind object;
  #L28d0ac.  v3:= (`com.a.c.e$b`) v3 @kind object;
  #L28d0b0.  v4:= v3.`com.a.c.e$b.b` @type ^`float`;
  #L28d0b4.  v5:= v3.`com.a.c.e$b.c` @type ^`float`;
  #L28d0b8.  v5:= v5 * v0 @kind float;
  #L28d0bc.  v4:= v4 + v5 @kind float;
  #L28d0be.  v5:= v6.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d0c2.  v3:= v3.`com.a.c.e$b.a` @type ^`int`;
  #L28d0c6.  call `a`(v5, v3, v4) @signature `Lcom/a/c/e;.a:(Lcom/a/c/e;IF)V` @kind static;
  #L28d0cc.  v2:= v2 + 1;
  #L28d0d0.  goto L28d0a0;
  #L28d0d2.  v7:= v6.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d0d6.  call temp:= `d`(v7) @signature `Lcom/a/c/e;.d:(Lcom/a/c/e;)Ljava/lang/ref/WeakReference;` @kind static;
  #L28d0dc.  v7:= temp @kind object;
  #L28d0de.  call temp:= `get`(v7) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28d0e4.  v7:= temp @kind object;
  #L28d0e6.  v7:= (`android.view.View`) v7 @kind object;
  #L28d0ea.  if v7 == 0 then goto L28d0f4;
  #L28d0ee.  call `invalidate`(v7) @signature `Landroid/view/View;.invalidate:()V` @kind virtual;
  #L28d0f4.  return @kind void;
}
procedure `void` `b`(`com.a.c.e$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/e$a;.b:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d108.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d10c.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d112.  v0:= temp @kind object;
  #L28d114.  if v0 == 0 then goto L28d12a;
  #L28d118.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d11c.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d122.  v0:= temp @kind object;
  #L28d124.  call `b`(v0, v2) @signature `Lcom/a/a/a$a;.b:(Lcom/a/a/a;)V` @kind interface;
  #L28d12a.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d12e.  call temp:= `c`(v0) @signature `Lcom/a/c/e;.c:(Lcom/a/c/e;)Ljava/util/HashMap;` @kind static;
  #L28d134.  v0:= temp @kind object;
  #L28d136.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28d13c.  v2:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d140.  call temp:= `c`(v2) @signature `Lcom/a/c/e;.c:(Lcom/a/c/e;)Ljava/util/HashMap;` @kind static;
  #L28d146.  v2:= temp @kind object;
  #L28d148.  call temp:= `isEmpty`(v2) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L28d14e.  v2:= temp;
  #L28d150.  if v2 == 0 then goto L28d160;
  #L28d154.  v2:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d158.  v0:= 0I;
  #L28d15a.  call temp:= `a`(v2, v0) @signature `Lcom/a/c/e;.a:(Lcom/a/c/e;Lcom/a/a/a$a;)Lcom/a/a/a$a;` @kind static;
  #L28d160.  return @kind void;
}
procedure `void` `c`(`com.a.c.e$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/e$a;.c:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d174.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d178.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d17e.  v0:= temp @kind object;
  #L28d180.  if v0 == 0 then goto L28d196;
  #L28d184.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d188.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d18e.  v0:= temp @kind object;
  #L28d190.  call `c`(v0, v2) @signature `Lcom/a/a/a$a;.c:(Lcom/a/a/a;)V` @kind interface;
  #L28d196.  return @kind void;
}
procedure `void` `d`(`com.a.c.e$a` v1 @kind this, `com.a.a.a` v2 @kind object) @signature `Lcom/a/c/e$a;.d:(Lcom/a/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28d1a8.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d1ac.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d1b2.  v0:= temp @kind object;
  #L28d1b4.  if v0 == 0 then goto L28d1ca;
  #L28d1b8.  v0:= v1.`com.a.c.e$a.a` @type ^`com.a.c.e` @kind object;
  #L28d1bc.  call temp:= `b`(v0) @signature `Lcom/a/c/e;.b:(Lcom/a/c/e;)Lcom/a/a/a$a;` @kind static;
  #L28d1c2.  v0:= temp @kind object;
  #L28d1c4.  call `d`(v0, v2) @signature `Lcom/a/a/a$a;.d:(Lcom/a/a/a;)V` @kind interface;
  #L28d1ca.  return @kind void;
}
