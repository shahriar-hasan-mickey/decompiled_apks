record `com.a.c.c` @kind class @AccessFlag  extends `com.a.c.b` @kind class {
  `java.util.ArrayList` `com.a.c.c.a` @AccessFlag ;
  `java.lang.ref.WeakReference` `com.a.c.c.b` @AccessFlag PRIVATE_FINAL;
  `long` `com.a.c.c.c` @AccessFlag PRIVATE;
  `boolean` `com.a.c.c.d` @AccessFlag PRIVATE;
  `long` `com.a.c.c.e` @AccessFlag PRIVATE;
  `boolean` `com.a.c.c.f` @AccessFlag PRIVATE;
  `android.view.animation.Interpolator` `com.a.c.c.g` @AccessFlag PRIVATE;
  `boolean` `com.a.c.c.h` @AccessFlag PRIVATE;
  `com.a.a.a$a` `com.a.c.c.i` @AccessFlag PRIVATE;
  `com.a.c.c$a` `com.a.c.c.j` @AccessFlag PRIVATE;
  `java.lang.Runnable` `com.a.c.c.k` @AccessFlag PRIVATE;
  `java.util.HashMap` `com.a.c.c.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.a.c.c` v3 @kind this, `android.view.View` v4 @kind object) @signature `Lcom/a/c/c;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L28cac8.  call `<init>`(v3) @signature `Lcom/a/c/b;.<init>:()V` @kind direct;
  #L28cace.  v0:= 0I;
  #L28cad0.  v3.`com.a.c.c.d` @type ^`boolean` := v0 @kind boolean;
  #L28cad4.  v1:= 0L;
  #L28cad8.  v3.`com.a.c.c.e` @type ^`long` := v1 @kind wide;
  #L28cadc.  v3.`com.a.c.c.f` @type ^`boolean` := v0 @kind boolean;
  #L28cae0.  v3.`com.a.c.c.h` @type ^`boolean` := v0 @kind boolean;
  #L28cae4.  v0:= 0I;
  #L28cae6.  v3.`com.a.c.c.i` @type ^`com.a.a.a$a` := v0 @kind object;
  #L28caea.  v1:= new `com.a.c.c$a`;
  #L28caee.  call `<init>`(v1, v3, v0) @signature `Lcom/a/c/c$a;.<init>:(Lcom/a/c/c;Lcom/a/c/c$1;)V` @kind direct;
  #L28caf4.  v3.`com.a.c.c.j` @type ^`com.a.c.c$a` := v1 @kind object;
  #L28caf8.  v0:= new `java.util.ArrayList`;
  #L28cafc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L28cb02.  v3.`com.a.c.c.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L28cb06.  v0:= new `com.a.c.c$1`;
  #L28cb0a.  call `<init>`(v0, v3) @signature `Lcom/a/c/c$1;.<init>:(Lcom/a/c/c;)V` @kind direct;
  #L28cb10.  v3.`com.a.c.c.k` @type ^`java.lang.Runnable` := v0 @kind object;
  #L28cb14.  v0:= new `java.util.HashMap`;
  #L28cb18.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L28cb1e.  v3.`com.a.c.c.l` @type ^`java.util.HashMap` := v0 @kind object;
  #L28cb22.  v0:= new `java.lang.ref.WeakReference`;
  #L28cb26.  call `<init>`(v0, v4) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L28cb2c.  v3.`com.a.c.c.b` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L28cb30.  return @kind void;
}
procedure `float` `a`(`com.a.c.c` v2 @kind this, `int` v3 ) @signature `Lcom/a/c/c;.a:(I)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28c9b4.  v0:= v2.`com.a.c.c.b` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28c9b8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28c9be.  v0:= temp @kind object;
  #L28c9c0.  v0:= (`android.view.View`) v0 @kind object;
  #L28c9c4.  if v0 == 0 then goto L28ca72;
  #L28c9c8.  v1:= 4I;
  #L28c9ca.  if v3 == v1 then goto L28ca68;
  #L28c9ce.  v1:= 8I;
  #L28c9d2.  if v3 == v1 then goto L28ca5e;
  #L28c9d6.  v1:= 16I;
  #L28c9da.  if v3 == v1 then goto L28ca54;
  #L28c9de.  v1:= 32I;
  #L28c9e2.  if v3 == v1 then goto L28ca4a;
  #L28c9e6.  v1:= 64I;
  #L28c9ea.  if v3 == v1 then goto L28ca40;
  #L28c9ee.  v1:= 128I;
  #L28c9f2.  if v3 == v1 then goto L28ca36;
  #L28c9f6.  v1:= 256I;
  #L28c9fa.  if v3 == v1 then goto L28ca2c;
  #L28c9fe.  v1:= 512I;
  #L28ca02.  if v3 == v1 then goto L28ca22;
  #L28ca06.  goto L28ca78;
  #L28ca0c.  goto L28ca72;
  #L28ca0e.  call temp:= `getTranslationY`(v0) @signature `Landroid/view/View;.getTranslationY:()F` @kind virtual;
  #L28ca14.  v3:= temp;
  #L28ca16.  return v3;
  #L28ca18.  call temp:= `getTranslationX`(v0) @signature `Landroid/view/View;.getTranslationX:()F` @kind virtual;
  #L28ca1e.  v3:= temp;
  #L28ca20.  return v3;
  #L28ca22.  call temp:= `getAlpha`(v0) @signature `Landroid/view/View;.getAlpha:()F` @kind virtual;
  #L28ca28.  v3:= temp;
  #L28ca2a.  return v3;
  #L28ca2c.  call temp:= `getY`(v0) @signature `Landroid/view/View;.getY:()F` @kind virtual;
  #L28ca32.  v3:= temp;
  #L28ca34.  return v3;
  #L28ca36.  call temp:= `getX`(v0) @signature `Landroid/view/View;.getX:()F` @kind virtual;
  #L28ca3c.  v3:= temp;
  #L28ca3e.  return v3;
  #L28ca40.  call temp:= `getRotationY`(v0) @signature `Landroid/view/View;.getRotationY:()F` @kind virtual;
  #L28ca46.  v3:= temp;
  #L28ca48.  return v3;
  #L28ca4a.  call temp:= `getRotationX`(v0) @signature `Landroid/view/View;.getRotationX:()F` @kind virtual;
  #L28ca50.  v3:= temp;
  #L28ca52.  return v3;
  #L28ca54.  call temp:= `getRotation`(v0) @signature `Landroid/view/View;.getRotation:()F` @kind virtual;
  #L28ca5a.  v3:= temp;
  #L28ca5c.  return v3;
  #L28ca5e.  call temp:= `getScaleY`(v0) @signature `Landroid/view/View;.getScaleY:()F` @kind virtual;
  #L28ca64.  v3:= temp;
  #L28ca66.  return v3;
  #L28ca68.  call temp:= `getScaleX`(v0) @signature `Landroid/view/View;.getScaleX:()F` @kind virtual;
  #L28ca6e.  v3:= temp;
  #L28ca70.  return v3;
  #L28ca72.  v3:= 0I;
  #L28ca74.  return v3;
  #L28ca76.  
  #L28ca78.  switch v3
                  | 1 => goto L28ca18
                  | 2 => goto L28ca0e
                  | else => goto L28ca0c;
}
procedure `com.a.a.a$a` `a`(`com.a.c.c` v0 @kind object, `com.a.a.a$a` v1 @kind object) @signature `Lcom/a/c/c;.a:(Lcom/a/c/c;Lcom/a/a/a$a;)Lcom/a/a/a$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28c8f8.  v0.`com.a.c.c.i` @type ^`com.a.a.a$a` := v1 @kind object;
  #L28c8fc.  return v1 @kind object;
}
procedure `void` `a`(`com.a.c.c` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lcom/a/c/c;.a:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L28cb8c.  call temp:= `a`(v1, v2) @signature `Lcom/a/c/c;.a:(I)F` @kind direct;
  #L28cb92.  v0:= temp;
  #L28cb94.  v3:= v3 - v0 @kind float;
  #L28cb96.  call `a`(v1, v2, v0, v3) @signature `Lcom/a/c/c;.a:(IFF)V` @kind direct;
  #L28cb9c.  return @kind void;
}
procedure `void` `a`(`com.a.c.c` v5 @kind this, `int` v6 , `float` v7 , `float` v8 ) @signature `Lcom/a/c/c;.a:(IFF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L28cbb0.  v0:= v5.`com.a.c.c.l` @type ^`java.util.HashMap` @kind object;
  #L28cbb4.  call temp:= `size`(v0) @signature `Ljava/util/HashMap;.size:()I` @kind virtual;
  #L28cbba.  v0:= temp;
  #L28cbbc.  if v0 <= 0 then goto L28cc1e;
  #L28cbc0.  v0:= 0I;
  #L28cbc2.  v1:= v5.`com.a.c.c.l` @type ^`java.util.HashMap` @kind object;
  #L28cbc6.  call temp:= `keySet`(v1) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L28cbcc.  v1:= temp @kind object;
  #L28cbce.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L28cbd4.  v1:= temp @kind object;
  #L28cbd6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L28cbdc.  v2:= temp;
  #L28cbde.  if v2 == 0 then goto L28cc14;
  #L28cbe2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L28cbe8.  v2:= temp @kind object;
  #L28cbea.  v2:= (`com.a.a.a`) v2 @kind object;
  #L28cbee.  v3:= v5.`com.a.c.c.l` @type ^`java.util.HashMap` @kind object;
  #L28cbf2.  call temp:= `get`(v3, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28cbf8.  v3:= temp @kind object;
  #L28cbfa.  v3:= (`com.a.c.c$c`) v3 @kind object;
  #L28cbfe.  call temp:= `a`(v3, v6) @signature `Lcom/a/c/c$c;.a:(I)Z` @kind virtual;
  #L28cc04.  v4:= temp;
  #L28cc06.  if v4 == 0 then goto L28cbd6;
  #L28cc0a.  v3:= v3.`com.a.c.c$c.a` @type ^`int`;
  #L28cc0e.  if v3 != 0 then goto L28cbd6;
  #L28cc12.  v0:= v2 @kind object;
  #L28cc14.  if v0 == 0 then goto L28cc1e;
  #L28cc18.  call `b`(v0) @signature `Lcom/a/a/a;.b:()V` @kind virtual;
  #L28cc1e.  v0:= new `com.a.c.c$b`;
  #L28cc22.  call `<init>`(v0, v6, v7, v8) @signature `Lcom/a/c/c$b;.<init>:(IFF)V` @kind direct;
  #L28cc28.  v6:= v5.`com.a.c.c.a` @type ^`java.util.ArrayList` @kind object;
  #L28cc2c.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L28cc32.  v6:= v5.`com.a.c.c.b` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28cc36.  call temp:= `get`(v6) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28cc3c.  v6:= temp @kind object;
  #L28cc3e.  v6:= (`android.view.View`) v6 @kind object;
  #L28cc42.  if v6 == 0 then goto L28cc5a;
  #L28cc46.  v7:= v5.`com.a.c.c.k` @type ^`java.lang.Runnable` @kind object;
  #L28cc4a.  call temp:= `removeCallbacks`(v6, v7) @signature `Landroid/view/View;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L28cc50.  v7:= v5.`com.a.c.c.k` @type ^`java.lang.Runnable` @kind object;
  #L28cc54.  call temp:= `post`(v6, v7) @signature `Landroid/view/View;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L28cc5a.  return @kind void;
}
procedure `void` `a`(`com.a.c.c` v0 @kind object) @signature `Lcom/a/c/c;.a:(Lcom/a/c/c;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28cb5c.  call `b`(v0) @signature `Lcom/a/c/c;.b:()V` @kind direct;
  #L28cb62.  return @kind void;
}
procedure `void` `a`(`com.a.c.c` v0 @kind object, `int` v1 , `float` v2 ) @signature `Lcom/a/c/c;.a:(Lcom/a/c/c;IF)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28cb74.  call `b`(v0, v1, v2) @signature `Lcom/a/c/c;.b:(IF)V` @kind direct;
  #L28cb7a.  return @kind void;
}
procedure `com.a.a.a$a` `b`(`com.a.c.c` v0 @kind object) @signature `Lcom/a/c/c;.b:(Lcom/a/c/c;)Lcom/a/a/a$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28c910.  v0:= v0.`com.a.c.c.i` @type ^`com.a.a.a$a` @kind object;
  #L28c914.  return v0 @kind object;
}
procedure `void` `b`(`com.a.c.c` v6 @kind this) @signature `Lcom/a/c/c;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L28cc6c.  v0:= 1I;
  #L28cc6e.  v0:= new `float`[v0];
  #L28cc72.  v1:= 0I;
  #L28cc74.  v2:= 1.0F;
  #L28cc78.  v0[v1]:= v2;
  #L28cc7c.  call temp:= `b`(v0) @signature `Lcom/a/a/n;.b:([F)Lcom/a/a/n;` @kind static;
  #L28cc82.  v0:= temp @kind object;
  #L28cc84.  v2:= v6.`com.a.c.c.a` @type ^`java.util.ArrayList` @kind object;
  #L28cc88.  call temp:= `clone`(v2) @signature `Ljava/util/ArrayList;.clone:()Ljava/lang/Object;` @kind virtual;
  #L28cc8e.  v2:= temp @kind object;
  #L28cc90.  v2:= (`java.util.ArrayList`) v2 @kind object;
  #L28cc94.  v3:= v6.`com.a.c.c.a` @type ^`java.util.ArrayList` @kind object;
  #L28cc98.  call `clear`(v3) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L28cc9e.  call temp:= `size`(v2) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L28cca4.  v3:= temp;
  #L28cca6.  v4:= 0I;
  #L28cca8.  if v1 >= v3 then goto L28ccc4;
  #L28ccac.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L28ccb2.  v5:= temp @kind object;
  #L28ccb4.  v5:= (`com.a.c.c$b`) v5 @kind object;
  #L28ccb8.  v5:= v5.`com.a.c.c$b.a` @type ^`int`;
  #L28ccbc.  v4:= v4 ^| v5 @kind int;
  #L28ccbe.  v1:= v1 + 1;
  #L28ccc2.  goto L28cca8;
  #L28ccc4.  v1:= v6.`com.a.c.c.l` @type ^`java.util.HashMap` @kind object;
  #L28ccc8.  v3:= new `com.a.c.c$c`;
  #L28cccc.  call `<init>`(v3, v4, v2) @signature `Lcom/a/c/c$c;.<init>:(ILjava/util/ArrayList;)V` @kind direct;
  #L28ccd2.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L28ccd8.  v1:= v6.`com.a.c.c.j` @type ^`com.a.c.c$a` @kind object;
  #L28ccdc.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Lcom/a/a/n$b;)V` @kind virtual;
  #L28cce2.  v1:= v6.`com.a.c.c.j` @type ^`com.a.c.c$a` @kind object;
  #L28cce6.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Lcom/a/a/a$a;)V` @kind virtual;
  #L28ccec.  v1:= v6.`com.a.c.c.f` @type ^`boolean` @kind boolean;
  #L28ccf0.  if v1 == 0 then goto L28ccfe;
  #L28ccf4.  v1:= v6.`com.a.c.c.e` @type ^`long` @kind wide;
  #L28ccf8.  call `e`(v0, v1) @signature `Lcom/a/a/n;.e:(J)V` @kind virtual;
  #L28ccfe.  v1:= v6.`com.a.c.c.d` @type ^`boolean` @kind boolean;
  #L28cd02.  if v1 == 0 then goto L28cd10;
  #L28cd06.  v1:= v6.`com.a.c.c.c` @type ^`long` @kind wide;
  #L28cd0a.  call temp:= `c`(v0, v1) @signature `Lcom/a/a/n;.c:(J)Lcom/a/a/n;` @kind virtual;
  #L28cd10.  v1:= v6.`com.a.c.c.h` @type ^`boolean` @kind boolean;
  #L28cd14.  if v1 == 0 then goto L28cd22;
  #L28cd18.  v1:= v6.`com.a.c.c.g` @type ^`android.view.animation.Interpolator` @kind object;
  #L28cd1c.  call `a`(v0, v1) @signature `Lcom/a/a/n;.a:(Landroid/view/animation/Interpolator;)V` @kind virtual;
  #L28cd22.  call `a`(v0) @signature `Lcom/a/a/n;.a:()V` @kind virtual;
  #L28cd28.  return @kind void;
}
procedure `void` `b`(`com.a.c.c` v2 @kind this, `int` v3 , `float` v4 ) @signature `Lcom/a/c/c;.b:(IF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L28cd3c.  v0:= v2.`com.a.c.c.b` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28cd40.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L28cd46.  v0:= temp @kind object;
  #L28cd48.  v0:= (`android.view.View`) v0 @kind object;
  #L28cd4c.  if v0 == 0 then goto L28cde4;
  #L28cd50.  v1:= 4I;
  #L28cd52.  if v3 == v1 then goto L28cdde;
  #L28cd56.  v1:= 8I;
  #L28cd5a.  if v3 == v1 then goto L28cdd6;
  #L28cd5e.  v1:= 16I;
  #L28cd62.  if v3 == v1 then goto L28cdce;
  #L28cd66.  v1:= 32I;
  #L28cd6a.  if v3 == v1 then goto L28cdc6;
  #L28cd6e.  v1:= 64I;
  #L28cd72.  if v3 == v1 then goto L28cdbe;
  #L28cd76.  v1:= 128I;
  #L28cd7a.  if v3 == v1 then goto L28cdb6;
  #L28cd7e.  v1:= 256I;
  #L28cd82.  if v3 == v1 then goto L28cdae;
  #L28cd86.  v1:= 512I;
  #L28cd8a.  if v3 == v1 then goto L28cda6;
  #L28cd8e.  goto L28cde8;
  #L28cd94.  goto L28cde4;
  #L28cd96.  call `setTranslationY`(v0, v4) @signature `Landroid/view/View;.setTranslationY:(F)V` @kind virtual;
  #L28cd9c.  goto L28cde4;
  #L28cd9e.  call `setTranslationX`(v0, v4) @signature `Landroid/view/View;.setTranslationX:(F)V` @kind virtual;
  #L28cda4.  goto L28cde4;
  #L28cda6.  call `setAlpha`(v0, v4) @signature `Landroid/view/View;.setAlpha:(F)V` @kind virtual;
  #L28cdac.  goto L28cde4;
  #L28cdae.  call `setY`(v0, v4) @signature `Landroid/view/View;.setY:(F)V` @kind virtual;
  #L28cdb4.  goto L28cde4;
  #L28cdb6.  call `setX`(v0, v4) @signature `Landroid/view/View;.setX:(F)V` @kind virtual;
  #L28cdbc.  goto L28cde4;
  #L28cdbe.  call `setRotationY`(v0, v4) @signature `Landroid/view/View;.setRotationY:(F)V` @kind virtual;
  #L28cdc4.  goto L28cde4;
  #L28cdc6.  call `setRotationX`(v0, v4) @signature `Landroid/view/View;.setRotationX:(F)V` @kind virtual;
  #L28cdcc.  goto L28cde4;
  #L28cdce.  call `setRotation`(v0, v4) @signature `Landroid/view/View;.setRotation:(F)V` @kind virtual;
  #L28cdd4.  goto L28cde4;
  #L28cdd6.  call `setScaleY`(v0, v4) @signature `Landroid/view/View;.setScaleY:(F)V` @kind virtual;
  #L28cddc.  goto L28cde4;
  #L28cdde.  call `setScaleX`(v0, v4) @signature `Landroid/view/View;.setScaleX:(F)V` @kind virtual;
  #L28cde4.  return @kind void;
  #L28cde6.  
  #L28cde8.  switch v3
                  | 1 => goto L28cd9e
                  | 2 => goto L28cd96
                  | else => goto L28cd94;
}
procedure `java.util.HashMap` `c`(`com.a.c.c` v0 @kind object) @signature `Lcom/a/c/c;.c:(Lcom/a/c/c;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28cab0.  v0:= v0.`com.a.c.c.l` @type ^`java.util.HashMap` @kind object;
  #L28cab4.  return v0 @kind object;
}
procedure `java.lang.ref.WeakReference` `d`(`com.a.c.c` v0 @kind object) @signature `Lcom/a/c/c;.d:(Lcom/a/c/c;)Ljava/lang/ref/WeakReference;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L28ca98.  v0:= v0.`com.a.c.c.b` @type ^`java.lang.ref.WeakReference` @kind object;
  #L28ca9c.  return v0 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.c` v1 @kind this, `float` v2 ) @signature `Lcom/a/c/c;.a:(F)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L28c940.  v0:= 512I;
  #L28c944.  call `a`(v1, v0, v2) @signature `Lcom/a/c/c;.a:(IF)V` @kind direct;
  #L28c94a.  return v1 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.c` v3 @kind this, `long` v4 ) @signature `Lcom/a/c/c;.a:(J)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L28c95c.  v0:= 0L;
  #L28c960.  v2:= lcmp(v4, v0);
  #L28c964.  if v2 >= 0 then goto L28c996;
  #L28c968.  v0:= new `java.lang.IllegalArgumentException`;
  #L28c96c.  v1:= new `java.lang.StringBuilder`;
  #L28c970.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L28c976.  v2:= "Animators cannot have negative duration: " @kind object;
  #L28c97a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c980.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L28c986.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L28c98c.  v4:= temp @kind object;
  #L28c98e.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L28c994.  throw v0;
  #L28c996.  v0:= 1I;
  #L28c998.  v3.`com.a.c.c.d` @type ^`boolean` := v0 @kind boolean;
  #L28c99c.  v3.`com.a.c.c.c` @type ^`long` := v4 @kind wide;
  #L28c9a0.  return v3 @kind object;
}
procedure `com.a.c.b` `a`(`com.a.c.c` v0 @kind this, `com.a.a.a$a` v1 @kind object) @signature `Lcom/a/c/c;.a:(Lcom/a/a/a$a;)Lcom/a/c/b;` @AccessFlag PUBLIC {
    temp;

  #L28c928.  v0.`com.a.c.c.i` @type ^`com.a.a.a$a` := v1 @kind object;
  #L28c92c.  return v0 @kind object;
}
procedure `void` `a`(`com.a.c.c` v0 @kind this) @signature `Lcom/a/c/c;.a:()V` @AccessFlag PUBLIC {
    temp;

  #L28cb44.  call `b`(v0) @signature `Lcom/a/c/c;.b:()V` @kind direct;
  #L28cb4a.  return @kind void;
}
