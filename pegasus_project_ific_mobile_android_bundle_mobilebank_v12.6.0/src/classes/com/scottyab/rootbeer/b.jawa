record `com.scottyab.rootbeer.b` @kind class @AccessFlag PUBLIC {
  `android.content.Context` `com.scottyab.rootbeer.b.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.scottyab.rootbeer.b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.scottyab.rootbeer.b` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/scottyab/rootbeer/b;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c5bac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c5bb2.  v0:= 1I;
  #L3c5bb4.  v1.`com.scottyab.rootbeer.b.b` @type ^`boolean` := v0 @kind boolean;
  #L3c5bb8.  v1.`com.scottyab.rootbeer.b.a` @type ^`android.content.Context` := v2 @kind object;
  #L3c5bbc.  return @kind void;
}
procedure `boolean` `a`(`com.scottyab.rootbeer.b` v5 @kind this, `java.util.List` v6 @kind object) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/util/List;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c55fc.  v0:= v5.`com.scottyab.rootbeer.b.a` @type ^`android.content.Context` @kind object;
  #L3c5600.  call temp:= `getPackageManager`(v0) @signature `Landroid/content/Context;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L3c5606.  v0:= temp @kind object;
  #L3c5608.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c560e.  v6:= temp @kind object;
  #L3c5610.  v1:= 0I;
  #L3c5612.  v2:= 0I;
  #L3c5614.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c561a.  v3:= temp;
  #L3c561c.  if v3 == 0 then goto L3c565e;
  #L3c5620.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c5626.  v3:= temp @kind object;
  #L3c5628.  v3:= (`java.lang.String`) v3 @kind object;
  #L3c562c.  call temp:= `getPackageInfo`(v0, v3, v1) @signature `Landroid/content/pm/PackageManager;.getPackageInfo:(Ljava/lang/String;I)Landroid/content/pm/PackageInfo;` @kind virtual;
  #L3c5632.  v4:= new `java.lang.StringBuilder`;
  #L3c5636.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c563c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5642.  v3:= " ROOT management app detected!" @kind object;
  #L3c5646.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c564c.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5652.  v3:= temp @kind object;
  #L3c5654.  call `a`(v3) @signature `Lcom/scottyab/rootbeer/a/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L3c565a.  v2:= 1I;
  #L3c565c.  goto L3c5614;
  #L3c565e.  return v2;
  catch `android.content.pm.PackageManager$NameNotFoundException` @[L3c562c..L3c565a] goto L3c5614;
}
procedure `java.lang.String`[] `j`(`com.scottyab.rootbeer.b` v4 @kind this) @signature `Lcom/scottyab/rootbeer/b;.j:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c5a58.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L3c5a5e.  v0:= temp @kind object;
  #L3c5a60.  v1:= "getprop" @kind object;
  #L3c5a64.  call temp:= `exec`(v0, v1) @signature `Ljava/lang/Runtime;.exec:(Ljava/lang/String;)Ljava/lang/Process;` @kind virtual;
  #L3c5a6a.  v0:= temp @kind object;
  #L3c5a6c.  call temp:= `getInputStream`(v0) @signature `Ljava/lang/Process;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3c5a72.  v0:= temp @kind object;
  #L3c5a74.  goto L3c5a80;
  #L3c5a76.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3c5a78.  call `printStackTrace`(v0) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L3c5a7e.  v0:= 0I;
  #L3c5a80.  v1:= "" @kind object;
  #L3c5a84.  v2:= new `java.util.Scanner`;
  #L3c5a88.  call `<init>`(v2, v0) @signature `Ljava/util/Scanner;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3c5a8e.  v0:= "\\A" @kind object;
  #L3c5a92.  call temp:= `useDelimiter`(v2, v0) @signature `Ljava/util/Scanner;.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;` @kind virtual;
  #L3c5a98.  v0:= temp @kind object;
  #L3c5a9a.  call temp:= `next`(v0) @signature `Ljava/util/Scanner;.next:()Ljava/lang/String;` @kind virtual;
  #L3c5aa0.  v0:= temp @kind object;
  #L3c5aa2.  goto L3c5ad8;
  #L3c5aa4.  v0:= Exception @type ^`java.util.NoSuchElementException` @kind object;
  #L3c5aa6.  v2:= new `java.lang.StringBuilder`;
  #L3c5aaa.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c5ab0.  v3:= "Error getprop, NoSuchElementException: " @kind object;
  #L3c5ab4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5aba.  call temp:= `getMessage`(v0) @signature `Ljava/util/NoSuchElementException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3c5ac0.  v3:= temp @kind object;
  #L3c5ac2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5ac8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5ace.  v2:= temp @kind object;
  #L3c5ad0.  call `a`(v2, v0) @signature `Lcom/scottyab/rootbeer/a/a;.a:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @kind static;
  #L3c5ad6.  v0:= v1 @kind object;
  #L3c5ad8.  v1:= "\n" @kind object;
  #L3c5adc.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3c5ae2.  v0:= temp @kind object;
  #L3c5ae4.  return v0 @kind object;
  catch `java.io.IOException` @[L3c5a58..L3c5a74] goto L3c5a76;
  catch `java.util.NoSuchElementException` @[L3c5a84..L3c5aa2] goto L3c5aa4;
}
procedure `java.lang.String`[] `k`(`com.scottyab.rootbeer.b` v3 @kind this) @signature `Lcom/scottyab/rootbeer/b;.k:()[Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3c5b14.  v0:= 0I;
  #L3c5b16.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L3c5b1c.  v1:= temp @kind object;
  #L3c5b1e.  v2:= "mount" @kind object;
  #L3c5b22.  call temp:= `exec`(v1, v2) @signature `Ljava/lang/Runtime;.exec:(Ljava/lang/String;)Ljava/lang/Process;` @kind virtual;
  #L3c5b28.  v1:= temp @kind object;
  #L3c5b2a.  call temp:= `getInputStream`(v1) @signature `Ljava/lang/Process;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L3c5b30.  v1:= temp @kind object;
  #L3c5b32.  goto L3c5b3e;
  #L3c5b34.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3c5b36.  call `printStackTrace`(v1) @signature `Ljava/io/IOException;.printStackTrace:()V` @kind virtual;
  #L3c5b3c.  v1:= v0 @kind object;
  #L3c5b3e.  if v1 != 0 then goto L3c5b44;
  #L3c5b42.  return v0 @kind object;
  #L3c5b44.  v0:= "" @kind object;
  #L3c5b48.  v2:= new `java.util.Scanner`;
  #L3c5b4c.  call `<init>`(v2, v1) @signature `Ljava/util/Scanner;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3c5b52.  v1:= "\\A" @kind object;
  #L3c5b56.  call temp:= `useDelimiter`(v2, v1) @signature `Ljava/util/Scanner;.useDelimiter:(Ljava/lang/String;)Ljava/util/Scanner;` @kind virtual;
  #L3c5b5c.  v1:= temp @kind object;
  #L3c5b5e.  call temp:= `next`(v1) @signature `Ljava/util/Scanner;.next:()Ljava/lang/String;` @kind virtual;
  #L3c5b64.  v1:= temp @kind object;
  #L3c5b66.  v0:= v1 @kind object;
  #L3c5b68.  goto L3c5b72;
  #L3c5b6a.  v1:= Exception @type ^`java.util.NoSuchElementException` @kind object;
  #L3c5b6c.  call `printStackTrace`(v1) @signature `Ljava/util/NoSuchElementException;.printStackTrace:()V` @kind virtual;
  #L3c5b72.  v1:= "\n" @kind object;
  #L3c5b76.  call temp:= `split`(v0, v1) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3c5b7c.  v0:= temp @kind object;
  #L3c5b7e.  return v0 @kind object;
  catch `java.io.IOException` @[L3c5b16..L3c5b32] goto L3c5b34;
  catch `java.util.NoSuchElementException` @[L3c5b48..L3c5b66] goto L3c5b6a;
}
procedure `boolean` `a`(`com.scottyab.rootbeer.b` v2 @kind this) @signature `Lcom/scottyab/rootbeer/b;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c54f4.  v0:= `@@android.os.Build.TAGS` @type ^`java.lang.String` @kind object;
  #L3c54f8.  if v0 == 0 then goto L3c5510;
  #L3c54fc.  v1:= "test-keys" @kind object;
  #L3c5500.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3c5506.  v0:= temp;
  #L3c5508.  if v0 == 0 then goto L3c5510;
  #L3c550c.  v0:= 1I;
  #L3c550e.  goto L3c5512;
  #L3c5510.  v0:= 0I;
  #L3c5512.  return v0;
}
procedure `boolean` `a`(`com.scottyab.rootbeer.b` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c5524.  v0:= `@@com.scottyab.rootbeer.a.d` @type ^`java.lang.String`[] @kind object;
  #L3c5528.  v1:= length @variable v0;
  #L3c552a.  v2:= 0I;
  #L3c552c.  v3:= 0I;
  #L3c552e.  if v2 >= v1 then goto L3c559a;
  #L3c5532.  v4:= v0[v2] @kind object;
  #L3c5536.  v5:= new `java.lang.StringBuilder`;
  #L3c553a.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c5540.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5546.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c554c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5552.  v4:= temp @kind object;
  #L3c5554.  v5:= new `java.io.File`;
  #L3c5558.  call `<init>`(v5, v4) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c555e.  call temp:= `exists`(v5) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3c5564.  v5:= temp;
  #L3c5566.  if v5 == 0 then goto L3c5594;
  #L3c556a.  v3:= new `java.lang.StringBuilder`;
  #L3c556e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c5574.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c557a.  v4:= " binary detected!" @kind object;
  #L3c557e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5584.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c558a.  v3:= temp @kind object;
  #L3c558c.  call `c`(v3) @signature `Lcom/scottyab/rootbeer/a/a;.c:(Ljava/lang/Object;)V` @kind static;
  #L3c5592.  v3:= 1I;
  #L3c5594.  v2:= v2 + 1;
  #L3c5598.  goto L3c552e;
  #L3c559a.  return v3;
}
procedure `boolean` `a`(`com.scottyab.rootbeer.b` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lcom/scottyab/rootbeer/b;.a:([Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c55ac.  v0:= new `java.util.ArrayList`;
  #L3c55b0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c55b6.  v1:= `@@com.scottyab.rootbeer.a.a` @type ^`java.lang.String`[] @kind object;
  #L3c55ba.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c55c0.  v1:= temp @kind object;
  #L3c55c2.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c55c8.  if v3 == 0 then goto L3c55e0;
  #L3c55cc.  v1:= length @variable v3;
  #L3c55ce.  if v1 <= 0 then goto L3c55e0;
  #L3c55d2.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c55d8.  v3:= temp @kind object;
  #L3c55da.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c55e0.  call temp:= `a`(v2, v0) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/util/List;)Z` @kind direct;
  #L3c55e6.  v3:= temp;
  #L3c55e8.  return v3;
}
procedure `boolean` `b`(`com.scottyab.rootbeer.b` v1 @kind this) @signature `Lcom/scottyab/rootbeer/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5680.  v0:= 0I;
  #L3c5682.  call temp:= `a`(v1, v0) @signature `Lcom/scottyab/rootbeer/b;.a:([Ljava/lang/String;)Z` @kind virtual;
  #L3c5688.  v0:= temp;
  #L3c568a.  return v0;
}
procedure `boolean` `b`(`com.scottyab.rootbeer.b` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lcom/scottyab/rootbeer/b;.b:([Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c569c.  v0:= new `java.util.ArrayList`;
  #L3c56a0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c56a6.  v1:= `@@com.scottyab.rootbeer.a.b` @type ^`java.lang.String`[] @kind object;
  #L3c56aa.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c56b0.  v1:= temp @kind object;
  #L3c56b2.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c56b8.  if v3 == 0 then goto L3c56d0;
  #L3c56bc.  v1:= length @variable v3;
  #L3c56be.  if v1 <= 0 then goto L3c56d0;
  #L3c56c2.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c56c8.  v3:= temp @kind object;
  #L3c56ca.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c56d0.  call temp:= `a`(v2, v0) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/util/List;)Z` @kind direct;
  #L3c56d6.  v3:= temp;
  #L3c56d8.  return v3;
}
procedure `boolean` `c`(`com.scottyab.rootbeer.b` v1 @kind this) @signature `Lcom/scottyab/rootbeer/b;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c56ec.  v0:= 0I;
  #L3c56ee.  call temp:= `b`(v1, v0) @signature `Lcom/scottyab/rootbeer/b;.b:([Ljava/lang/String;)Z` @kind virtual;
  #L3c56f4.  v0:= temp;
  #L3c56f6.  return v0;
}
procedure `boolean` `c`(`com.scottyab.rootbeer.b` v2 @kind this, `java.lang.String`[] v3 @kind object) @signature `Lcom/scottyab/rootbeer/b;.c:([Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c5708.  v0:= new `java.util.ArrayList`;
  #L3c570c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c5712.  v1:= `@@com.scottyab.rootbeer.a.c` @type ^`java.lang.String`[] @kind object;
  #L3c5716.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c571c.  v1:= temp @kind object;
  #L3c571e.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c5724.  if v3 == 0 then goto L3c573c;
  #L3c5728.  v1:= length @variable v3;
  #L3c572a.  if v1 <= 0 then goto L3c573c;
  #L3c572e.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3c5734.  v3:= temp @kind object;
  #L3c5736.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L3c573c.  call temp:= `a`(v2, v0) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/util/List;)Z` @kind direct;
  #L3c5742.  v3:= temp;
  #L3c5744.  return v3;
}
procedure `boolean` `d`(`com.scottyab.rootbeer.b` v1 @kind this) @signature `Lcom/scottyab/rootbeer/b;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5758.  v0:= 0I;
  #L3c575a.  call temp:= `c`(v1, v0) @signature `Lcom/scottyab/rootbeer/b;.c:([Ljava/lang/String;)Z` @kind virtual;
  #L3c5760.  v0:= temp;
  #L3c5762.  return v0;
}
procedure `boolean` `e`(`com.scottyab.rootbeer.b` v1 @kind this) @signature `Lcom/scottyab/rootbeer/b;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c5774.  v0:= "su" @kind object;
  #L3c5778.  call temp:= `a`(v1, v0) @signature `Lcom/scottyab/rootbeer/b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L3c577e.  v0:= temp;
  #L3c5780.  return v0;
}
procedure `boolean` `f`(`com.scottyab.rootbeer.b` v11 @kind this) @signature `Lcom/scottyab/rootbeer/b;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3c5794.  v0:= new `java.util.HashMap`;
  #L3c5798.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3c579e.  v1:= "ro.debuggable" @kind object;
  #L3c57a2.  v2:= "1" @kind object;
  #L3c57a6.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c57ac.  v1:= "ro.secure" @kind object;
  #L3c57b0.  v2:= "0" @kind object;
  #L3c57b4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c57ba.  call temp:= `j`(v11) @signature `Lcom/scottyab/rootbeer/b;.j:()[Ljava/lang/String;` @kind direct;
  #L3c57c0.  v1:= temp @kind object;
  #L3c57c2.  v2:= length @variable v1;
  #L3c57c4.  v3:= 0I;
  #L3c57c6.  v4:= 0I;
  #L3c57c8.  if v3 >= v2 then goto L3c588a;
  #L3c57cc.  v5:= v1[v3] @kind object;
  #L3c57d0.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3c57d6.  v6:= temp @kind object;
  #L3c57d8.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c57de.  v6:= temp @kind object;
  #L3c57e0.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c57e6.  v7:= temp;
  #L3c57e8.  if v7 == 0 then goto L3c5884;
  #L3c57ec.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c57f2.  v7:= temp @kind object;
  #L3c57f4.  v7:= (`java.lang.String`) v7 @kind object;
  #L3c57f8.  call temp:= `contains`(v5, v7) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3c57fe.  v8:= temp;
  #L3c5800.  if v8 == 0 then goto L3c57e0;
  #L3c5804.  call temp:= `get`(v0, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c580a.  v8:= temp @kind object;
  #L3c580c.  v8:= (`java.lang.String`) v8 @kind object;
  #L3c5810.  v9:= new `java.lang.StringBuilder`;
  #L3c5814.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c581a.  v10:= "[" @kind object;
  #L3c581e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5824.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c582a.  v8:= "]" @kind object;
  #L3c582e.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5834.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c583a.  v8:= temp @kind object;
  #L3c583c.  call temp:= `contains`(v5, v8) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3c5842.  v9:= temp;
  #L3c5844.  if v9 == 0 then goto L3c57e0;
  #L3c5848.  v4:= new `java.lang.StringBuilder`;
  #L3c584c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c5852.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5858.  v7:= " = " @kind object;
  #L3c585c.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5862.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5868.  v7:= " detected!" @kind object;
  #L3c586c.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5872.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5878.  v4:= temp @kind object;
  #L3c587a.  call `c`(v4) @signature `Lcom/scottyab/rootbeer/a/a;.c:(Ljava/lang/Object;)V` @kind static;
  #L3c5880.  v4:= 1I;
  #L3c5882.  goto L3c57e0;
  #L3c5884.  v3:= v3 + 1;
  #L3c5888.  goto L3c57c8;
  #L3c588a.  return v4;
}
procedure `boolean` `g`(`com.scottyab.rootbeer.b` v17 @kind this) @signature `Lcom/scottyab/rootbeer/b;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3c589c.  call temp:= `k`(v17) @signature `Lcom/scottyab/rootbeer/b;.k:()[Ljava/lang/String;` @kind direct;
  #L3c58a2.  v0:= temp @kind object;
  #L3c58a4.  v1:= length @variable v0;
  #L3c58a6.  v3:= 0I;
  #L3c58a8.  v4:= 0I;
  #L3c58aa.  if v3 >= v1 then goto L3c598c;
  #L3c58ae.  v5:= v0[v3] @kind object;
  #L3c58b2.  v6:= " " @kind object;
  #L3c58b6.  call temp:= `split`(v5, v6) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3c58bc.  v6:= temp @kind object;
  #L3c58be.  v7:= length @variable v6;
  #L3c58c0.  v8:= 4I;
  #L3c58c2.  if v7 >= v8 then goto L3c58f0;
  #L3c58c6.  v6:= new `java.lang.StringBuilder`;
  #L3c58ca.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c58d0.  v7:= "Error formatting mount line: " @kind object;
  #L3c58d4.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c58da.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c58e0.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c58e6.  v5:= temp @kind object;
  #L3c58e8.  call `a`(v5) @signature `Lcom/scottyab/rootbeer/a/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L3c58ee.  goto L3c5986;
  #L3c58f0.  v7:= 1I;
  #L3c58f2.  v8:= v6[v7] @kind object;
  #L3c58f6.  v9:= 3I;
  #L3c58f8.  v6:= v6[v9] @kind object;
  #L3c58fc.  v9:= `@@com.scottyab.rootbeer.a.e` @type ^`java.lang.String`[] @kind object;
  #L3c5900.  v10:= length @variable v9;
  #L3c5902.  v11:= v4;
  #L3c5904.  v4:= 0I;
  #L3c5906.  if v4 >= v10 then goto L3c5984;
  #L3c590a.  v12:= v9[v4] @kind object;
  #L3c590e.  call temp:= `equalsIgnoreCase`(v8, v12) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c5914.  v13:= temp;
  #L3c5916.  if v13 == 0 then goto L3c597c;
  #L3c591a.  v13:= "," @kind object;
  #L3c591e.  call temp:= `split`(v6, v13) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L3c5924.  v13:= temp @kind object;
  #L3c5926.  v14:= length @variable v13;
  #L3c5928.  v15:= 0I;
  #L3c592a.  if v15 >= v14 then goto L3c597c;
  #L3c592e.  v2:= v13[v15] @kind object;
  #L3c5932.  v7:= "rw" @kind object;
  #L3c5936.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c593c.  v2:= temp;
  #L3c593e.  if v2 == 0 then goto L3c5974;
  #L3c5942.  v2:= new `java.lang.StringBuilder`;
  #L3c5946.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c594c.  call temp:= `append`(v2, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5952.  v7:= " path is mounted with rw permissions! " @kind object;
  #L3c5956.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c595c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5962.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5968.  v2:= temp @kind object;
  #L3c596a.  call `c`(v2) @signature `Lcom/scottyab/rootbeer/a/a;.c:(Ljava/lang/Object;)V` @kind static;
  #L3c5970.  v11:= 1I;
  #L3c5972.  goto L3c597c;
  #L3c5974.  v15:= v15 + 1;
  #L3c5978.  v7:= 1I;
  #L3c597a.  goto L3c592a;
  #L3c597c.  v4:= v4 + 1;
  #L3c5980.  v7:= 1I;
  #L3c5982.  goto L3c5906;
  #L3c5984.  v4:= v11;
  #L3c5986.  v3:= v3 + 1;
  #L3c598a.  goto L3c58aa;
  #L3c598c.  return v4;
}
procedure `boolean` `h`(`com.scottyab.rootbeer.b` v1 @kind this) @signature `Lcom/scottyab/rootbeer/b;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c59a0.  v0:= new `com.scottyab.rootbeer.RootBeerNative`;
  #L3c59a4.  call `<init>`(v0) @signature `Lcom/scottyab/rootbeer/RootBeerNative;.<init>:()V` @kind direct;
  #L3c59aa.  call temp:= `a`(v0) @signature `Lcom/scottyab/rootbeer/RootBeerNative;.a:()Z` @kind virtual;
  #L3c59b0.  v0:= temp;
  #L3c59b2.  return v0;
}
procedure `boolean` `i`(`com.scottyab.rootbeer.b` v6 @kind this) @signature `Lcom/scottyab/rootbeer/b;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3c59c4.  call temp:= `h`(v6) @signature `Lcom/scottyab/rootbeer/b;.h:()Z` @kind virtual;
  #L3c59ca.  v0:= temp;
  #L3c59cc.  v1:= 0I;
  #L3c59ce.  if v0 != 0 then goto L3c59de;
  #L3c59d2.  v0:= "We could not load the native library to test for root" @kind object;
  #L3c59d6.  call `a`(v0) @signature `Lcom/scottyab/rootbeer/a/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L3c59dc.  return v1;
  #L3c59de.  v0:= "su" @kind object;
  #L3c59e2.  v2:= `@@com.scottyab.rootbeer.a.d` @type ^`java.lang.String`[] @kind object;
  #L3c59e6.  v2:= length @variable v2;
  #L3c59e8.  v2:= new `java.lang.String`[v2];
  #L3c59ec.  v3:= 0I;
  #L3c59ee.  v4:= length @variable v2;
  #L3c59f0.  if v3 >= v4 then goto L3c5a24;
  #L3c59f4.  v4:= new `java.lang.StringBuilder`;
  #L3c59f8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c59fe.  v5:= `@@com.scottyab.rootbeer.a.d` @type ^`java.lang.String`[] @kind object;
  #L3c5a02.  v5:= v5[v3] @kind object;
  #L3c5a06.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5a0c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c5a12.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c5a18.  v4:= temp @kind object;
  #L3c5a1a.  v2[v3]:= v4 @kind object;
  #L3c5a1e.  v3:= v3 + 1;
  #L3c5a22.  goto L3c59ee;
  #L3c5a24.  v0:= new `com.scottyab.rootbeer.RootBeerNative`;
  #L3c5a28.  call `<init>`(v0) @signature `Lcom/scottyab/rootbeer/RootBeerNative;.<init>:()V` @kind direct;
  #L3c5a2e.  v3:= v6.`com.scottyab.rootbeer.b.b` @type ^`boolean` @kind boolean;
  #L3c5a32.  call temp:= `setLogDebugMessages`(v0, v3) @signature `Lcom/scottyab/rootbeer/RootBeerNative;.setLogDebugMessages:(Z)I` @kind virtual;
  #L3c5a38.  call temp:= `checkForRoot`(v0, v2) @signature `Lcom/scottyab/rootbeer/RootBeerNative;.checkForRoot:([Ljava/lang/Object;)I` @kind virtual;
  #L3c5a3e.  v0:= temp;
  #L3c5a40.  if v0 <= 0 then goto L3c5a46;
  #L3c5a44.  v1:= 1I;
  #L3c5a46.  return v1;
}
