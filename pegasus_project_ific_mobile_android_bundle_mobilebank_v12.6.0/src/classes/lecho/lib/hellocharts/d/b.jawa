record `lecho.lib.hellocharts.d.b` @kind class @AccessFlag PUBLIC {
  `android.view.GestureDetector` `lecho.lib.hellocharts.d.b.a` @AccessFlag PROTECTED;
  `android.view.ScaleGestureDetector` `lecho.lib.hellocharts.d.b.b` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.d.a` `lecho.lib.hellocharts.d.b.c` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.d.c` `lecho.lib.hellocharts.d.b.d` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.view.a` `lecho.lib.hellocharts.d.b.e` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.b.a` `lecho.lib.hellocharts.d.b.f` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.h.d` `lecho.lib.hellocharts.d.b.g` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.d.b.h` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.d.b.i` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.d.b.j` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.d.b.k` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.f.n` `lecho.lib.hellocharts.d.b.l` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.f.n` `lecho.lib.hellocharts.d.b.m` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.f.n` `lecho.lib.hellocharts.d.b.n` @AccessFlag PROTECTED;
  `android.view.ViewParent` `lecho.lib.hellocharts.d.b.o` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.d.d` `lecho.lib.hellocharts.d.b.p` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.d.b` v1 @kind this, `android.content.Context` v2 @kind object, `lecho.lib.hellocharts.view.a` v3 @kind object) @signature `Llecho/lib/hellocharts/d/b;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/view/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dbeac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dbeb2.  v0:= 1I;
  #L3dbeb4.  v1.`lecho.lib.hellocharts.d.b.h` @type ^`boolean` := v0 @kind boolean;
  #L3dbeb8.  v1.`lecho.lib.hellocharts.d.b.i` @type ^`boolean` := v0 @kind boolean;
  #L3dbebc.  v1.`lecho.lib.hellocharts.d.b.j` @type ^`boolean` := v0 @kind boolean;
  #L3dbec0.  v0:= 0I;
  #L3dbec2.  v1.`lecho.lib.hellocharts.d.b.k` @type ^`boolean` := v0 @kind boolean;
  #L3dbec6.  v0:= new `lecho.lib.hellocharts.f.n`;
  #L3dbeca.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/f/n;.<init>:()V` @kind direct;
  #L3dbed0.  v1.`lecho.lib.hellocharts.d.b.l` @type ^`lecho.lib.hellocharts.f.n` := v0 @kind object;
  #L3dbed4.  v0:= new `lecho.lib.hellocharts.f.n`;
  #L3dbed8.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/f/n;.<init>:()V` @kind direct;
  #L3dbede.  v1.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` := v0 @kind object;
  #L3dbee2.  v0:= new `lecho.lib.hellocharts.f.n`;
  #L3dbee6.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/f/n;.<init>:()V` @kind direct;
  #L3dbeec.  v1.`lecho.lib.hellocharts.d.b.n` @type ^`lecho.lib.hellocharts.f.n` := v0 @kind object;
  #L3dbef0.  v1.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` := v3 @kind object;
  #L3dbef4.  call temp:= `getChartComputator`(v3) @signature `Llecho/lib/hellocharts/view/a;.getChartComputator:()Llecho/lib/hellocharts/b/a;` @kind interface;
  #L3dbefa.  v0:= temp @kind object;
  #L3dbefc.  v1.`lecho.lib.hellocharts.d.b.f` @type ^`lecho.lib.hellocharts.b.a` := v0 @kind object;
  #L3dbf00.  call temp:= `getChartRenderer`(v3) @signature `Llecho/lib/hellocharts/view/a;.getChartRenderer:()Llecho/lib/hellocharts/h/d;` @kind interface;
  #L3dbf06.  v3:= temp @kind object;
  #L3dbf08.  v1.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` := v3 @kind object;
  #L3dbf0c.  v3:= new `android.view.GestureDetector`;
  #L3dbf10.  v0:= new `lecho.lib.hellocharts.d.b$a`;
  #L3dbf14.  call `<init>`(v0, v1) @signature `Llecho/lib/hellocharts/d/b$a;.<init>:(Llecho/lib/hellocharts/d/b;)V` @kind direct;
  #L3dbf1a.  call `<init>`(v3, v2, v0) @signature `Landroid/view/GestureDetector;.<init>:(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V` @kind direct;
  #L3dbf20.  v1.`lecho.lib.hellocharts.d.b.a` @type ^`android.view.GestureDetector` := v3 @kind object;
  #L3dbf24.  v3:= new `android.view.ScaleGestureDetector`;
  #L3dbf28.  v0:= new `lecho.lib.hellocharts.d.b$b`;
  #L3dbf2c.  call `<init>`(v0, v1) @signature `Llecho/lib/hellocharts/d/b$b;.<init>:(Llecho/lib/hellocharts/d/b;)V` @kind direct;
  #L3dbf32.  call `<init>`(v3, v2, v0) @signature `Landroid/view/ScaleGestureDetector;.<init>:(Landroid/content/Context;Landroid/view/ScaleGestureDetector$OnScaleGestureListener;)V` @kind direct;
  #L3dbf38.  v1.`lecho.lib.hellocharts.d.b.b` @type ^`android.view.ScaleGestureDetector` := v3 @kind object;
  #L3dbf3c.  v3:= new `lecho.lib.hellocharts.d.a`;
  #L3dbf40.  call `<init>`(v3, v2) @signature `Llecho/lib/hellocharts/d/a;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3dbf46.  v1.`lecho.lib.hellocharts.d.b.c` @type ^`lecho.lib.hellocharts.d.a` := v3 @kind object;
  #L3dbf4a.  v3:= new `lecho.lib.hellocharts.d.c`;
  #L3dbf4e.  v0:= `@@lecho.lib.hellocharts.d.g.c` @type ^`lecho.lib.hellocharts.d.g` @kind object;
  #L3dbf52.  call `<init>`(v3, v2, v0) @signature `Llecho/lib/hellocharts/d/c;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/d/g;)V` @kind direct;
  #L3dbf58.  v1.`lecho.lib.hellocharts.d.b.d` @type ^`lecho.lib.hellocharts.d.c` := v3 @kind object;
  #L3dbf5c.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v3 @kind this, `lecho.lib.hellocharts.d.a$a` v4 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/a$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dbfbc.  v0:= v3.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` @kind object;
  #L3dbfc0.  if v0 == 0 then goto L3dc024;
  #L3dbfc4.  v0:= `@@lecho.lib.hellocharts.d.d.a` @type ^`lecho.lib.hellocharts.d.d` @kind object;
  #L3dbfc8.  v1:= v3.`lecho.lib.hellocharts.d.b.p` @type ^`lecho.lib.hellocharts.d.d` @kind object;
  #L3dbfcc.  v2:= 0I;
  #L3dbfce.  if v0 != v1 then goto L3dbff6;
  #L3dbfd2.  v0:= v4.`lecho.lib.hellocharts.d.a$a.a` @type ^`boolean` @kind boolean;
  #L3dbfd6.  if v0 != 0 then goto L3dbff6;
  #L3dbfda.  v0:= v3.`lecho.lib.hellocharts.d.b.b` @type ^`android.view.ScaleGestureDetector` @kind object;
  #L3dbfde.  call temp:= `isInProgress`(v0) @signature `Landroid/view/ScaleGestureDetector;.isInProgress:()Z` @kind virtual;
  #L3dbfe4.  v0:= temp;
  #L3dbfe6.  if v0 != 0 then goto L3dbff6;
  #L3dbfea.  v4:= v3.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` @kind object;
  #L3dbfee.  call `requestDisallowInterceptTouchEvent`(v4, v2) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L3dbff4.  goto L3dc024;
  #L3dbff6.  v0:= `@@lecho.lib.hellocharts.d.d.b` @type ^`lecho.lib.hellocharts.d.d` @kind object;
  #L3dbffa.  v1:= v3.`lecho.lib.hellocharts.d.b.p` @type ^`lecho.lib.hellocharts.d.d` @kind object;
  #L3dbffe.  if v0 != v1 then goto L3dc024;
  #L3dc002.  v4:= v4.`lecho.lib.hellocharts.d.a$a.b` @type ^`boolean` @kind boolean;
  #L3dc006.  if v4 != 0 then goto L3dc024;
  #L3dc00a.  v4:= v3.`lecho.lib.hellocharts.d.b.b` @type ^`android.view.ScaleGestureDetector` @kind object;
  #L3dc00e.  call temp:= `isInProgress`(v4) @signature `Landroid/view/ScaleGestureDetector;.isInProgress:()Z` @kind virtual;
  #L3dc014.  v4:= temp;
  #L3dc016.  if v4 != 0 then goto L3dc024;
  #L3dc01a.  v4:= v3.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` @kind object;
  #L3dc01e.  call `requestDisallowInterceptTouchEvent`(v4, v2) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L3dc024.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v0 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/b;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3dc038.  call `d`(v0) @signature `Llecho/lib/hellocharts/d/b;.d:()V` @kind direct;
  #L3dc03e.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v0 @kind object, `lecho.lib.hellocharts.d.a$a` v1 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/b;Llecho/lib/hellocharts/d/a$a;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3dc050.  call `a`(v0, v1) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/a$a;)V` @kind direct;
  #L3dc056.  return @kind void;
}
procedure `boolean` `a`(`lecho.lib.hellocharts.d.b` v2 @kind this, `float` v3 , `float` v4 ) @signature `Llecho/lib/hellocharts/d/b;.a:(FF)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dbc2c.  v0:= v2.`lecho.lib.hellocharts.d.b.n` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc30.  v1:= v2.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc34.  call `a`(v0, v1) @signature `Llecho/lib/hellocharts/f/n;.a:(Llecho/lib/hellocharts/f/n;)V` @kind virtual;
  #L3dbc3a.  v0:= v2.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc3e.  call `a`(v0) @signature `Llecho/lib/hellocharts/f/n;.a:()V` @kind virtual;
  #L3dbc44.  v0:= v2.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbc48.  call temp:= `a`(v0, v3, v4) @signature `Llecho/lib/hellocharts/h/d;.a:(FF)Z` @kind interface;
  #L3dbc4e.  v3:= temp;
  #L3dbc50.  if v3 == 0 then goto L3dbc6a;
  #L3dbc54.  v3:= v2.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc58.  v4:= v2.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbc5c.  call temp:= `g`(v4) @signature `Llecho/lib/hellocharts/h/d;.g:()Llecho/lib/hellocharts/f/n;` @kind interface;
  #L3dbc62.  v4:= temp @kind object;
  #L3dbc64.  call `a`(v3, v4) @signature `Llecho/lib/hellocharts/f/n;.a:(Llecho/lib/hellocharts/f/n;)V` @kind virtual;
  #L3dbc6a.  v3:= v2.`lecho.lib.hellocharts.d.b.n` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc6e.  call temp:= `b`(v3) @signature `Llecho/lib/hellocharts/f/n;.b:()Z` @kind virtual;
  #L3dbc74.  v3:= temp;
  #L3dbc76.  if v3 == 0 then goto L3dbca2;
  #L3dbc7a.  v3:= v2.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc7e.  call temp:= `b`(v3) @signature `Llecho/lib/hellocharts/f/n;.b:()Z` @kind virtual;
  #L3dbc84.  v3:= temp;
  #L3dbc86.  if v3 == 0 then goto L3dbca2;
  #L3dbc8a.  v3:= v2.`lecho.lib.hellocharts.d.b.n` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc8e.  v4:= v2.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbc92.  call temp:= `equals`(v3, v4) @signature `Llecho/lib/hellocharts/f/n;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dbc98.  v3:= temp;
  #L3dbc9a.  if v3 != 0 then goto L3dbca2;
  #L3dbc9e.  v3:= 0I;
  #L3dbca0.  return v3;
  #L3dbca2.  v3:= v2.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbca6.  call temp:= `c`(v3) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbcac.  v3:= temp;
  #L3dbcae.  return v3;
}
procedure `boolean` `b`(`lecho.lib.hellocharts.d.b` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Llecho/lib/hellocharts/d/b;.b:(Landroid/view/MotionEvent;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3dbd14.  call temp:= `getAction`(v4) @signature `Landroid/view/MotionEvent;.getAction:()I` @kind virtual;
  #L3dbd1a.  v0:= temp;
  #L3dbd1c.  v1:= 1I;
  #L3dbd1e.  goto L3dbe64;
  #L3dbd24.  goto L3dbe5e;
  #L3dbd28.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbd2c.  call temp:= `c`(v4) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbd32.  v4:= temp;
  #L3dbd34.  if v4 == 0 then goto L3dbe5e;
  #L3dbd38.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbd3c.  call `d`(v4) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3dbd42.  goto L3dbe60;
  #L3dbd46.  v0:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbd4a.  call temp:= `c`(v0) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbd50.  v0:= temp;
  #L3dbd52.  if v0 == 0 then goto L3dbe5e;
  #L3dbd56.  call temp:= `getX`(v4) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3dbd5c.  v0:= temp;
  #L3dbd5e.  call temp:= `getY`(v4) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3dbd64.  v4:= temp;
  #L3dbd66.  call temp:= `a`(v3, v0, v4) @signature `Llecho/lib/hellocharts/d/b;.a:(FF)Z` @kind direct;
  #L3dbd6c.  v4:= temp;
  #L3dbd6e.  if v4 != 0 then goto L3dbe5e;
  #L3dbd72.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbd76.  call `d`(v4) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3dbd7c.  goto L3dbe60;
  #L3dbd80.  v0:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbd84.  call temp:= `c`(v0) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbd8a.  v0:= temp;
  #L3dbd8c.  if v0 == 0 then goto L3dbe5e;
  #L3dbd90.  call temp:= `getX`(v4) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3dbd96.  v0:= temp;
  #L3dbd98.  call temp:= `getY`(v4) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3dbd9e.  v4:= temp;
  #L3dbda0.  call temp:= `a`(v3, v0, v4) @signature `Llecho/lib/hellocharts/d/b;.a:(FF)Z` @kind direct;
  #L3dbda6.  v4:= temp;
  #L3dbda8.  if v4 == 0 then goto L3dbdf8;
  #L3dbdac.  v4:= v3.`lecho.lib.hellocharts.d.b.k` @type ^`boolean` @kind boolean;
  #L3dbdb0.  if v4 == 0 then goto L3dbde2;
  #L3dbdb4.  v4:= v3.`lecho.lib.hellocharts.d.b.l` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbdb8.  v0:= v3.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbdbc.  call temp:= `equals`(v4, v0) @signature `Llecho/lib/hellocharts/f/n;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3dbdc2.  v4:= temp;
  #L3dbdc4.  if v4 != 0 then goto L3dbe60;
  #L3dbdc8.  v4:= v3.`lecho.lib.hellocharts.d.b.l` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbdcc.  v0:= v3.`lecho.lib.hellocharts.d.b.m` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbdd0.  call `a`(v4, v0) @signature `Llecho/lib/hellocharts/f/n;.a:(Llecho/lib/hellocharts/f/n;)V` @kind virtual;
  #L3dbdd6.  v4:= v3.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` @kind object;
  #L3dbdda.  call `d`(v4) @signature `Llecho/lib/hellocharts/view/a;.d:()V` @kind interface;
  #L3dbde0.  goto L3dbe60;
  #L3dbde2.  v4:= v3.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` @kind object;
  #L3dbde6.  call `d`(v4) @signature `Llecho/lib/hellocharts/view/a;.d:()V` @kind interface;
  #L3dbdec.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbdf0.  call `d`(v4) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3dbdf6.  goto L3dbe60;
  #L3dbdf8.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbdfc.  call `d`(v4) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3dbe02.  goto L3dbe60;
  #L3dbe04.  v0:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbe08.  call temp:= `c`(v0) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbe0e.  v0:= temp;
  #L3dbe10.  call temp:= `getX`(v4) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L3dbe16.  v2:= temp;
  #L3dbe18.  call temp:= `getY`(v4) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L3dbe1e.  v4:= temp;
  #L3dbe20.  call temp:= `a`(v3, v2, v4) @signature `Llecho/lib/hellocharts/d/b;.a:(FF)Z` @kind direct;
  #L3dbe26.  v4:= temp;
  #L3dbe28.  if v0 == v4 then goto L3dbe5e;
  #L3dbe2c.  v4:= v3.`lecho.lib.hellocharts.d.b.k` @type ^`boolean` @kind boolean;
  #L3dbe30.  if v4 == 0 then goto L3dbe60;
  #L3dbe34.  v4:= v3.`lecho.lib.hellocharts.d.b.l` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3dbe38.  call `a`(v4) @signature `Llecho/lib/hellocharts/f/n;.a:()V` @kind virtual;
  #L3dbe3e.  if v0 == 0 then goto L3dbe60;
  #L3dbe42.  v4:= v3.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3dbe46.  call temp:= `c`(v4) @signature `Llecho/lib/hellocharts/h/d;.c:()Z` @kind interface;
  #L3dbe4c.  v4:= temp;
  #L3dbe4e.  if v4 != 0 then goto L3dbe60;
  #L3dbe52.  v4:= v3.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` @kind object;
  #L3dbe56.  call `d`(v4) @signature `Llecho/lib/hellocharts/view/a;.d:()V` @kind interface;
  #L3dbe5c.  goto L3dbe60;
  #L3dbe5e.  v1:= 0I;
  #L3dbe60.  return v1;
  #L3dbe62.  
  #L3dbe64.  switch v0
                  | 0 => goto L3dbe04
                  | 1 => goto L3dbd80
                  | 2 => goto L3dbd46
                  | 3 => goto L3dbd28
                  | else => goto L3dbd24;
}
procedure `void` `d`(`lecho.lib.hellocharts.d.b` v2 @kind this) @signature `Llecho/lib/hellocharts/d/b;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3dc0b4.  v0:= v2.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` @kind object;
  #L3dc0b8.  if v0 == 0 then goto L3dc0c8;
  #L3dc0bc.  v0:= v2.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` @kind object;
  #L3dc0c0.  v1:= 1I;
  #L3dc0c2.  call `requestDisallowInterceptTouchEvent`(v0, v1) @signature `Landroid/view/ViewParent;.requestDisallowInterceptTouchEvent:(Z)V` @kind interface;
  #L3dc0c8.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v1 @kind this) @signature `Llecho/lib/hellocharts/d/b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbf70.  v0:= v1.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` @kind object;
  #L3dbf74.  call temp:= `getChartComputator`(v0) @signature `Llecho/lib/hellocharts/view/a;.getChartComputator:()Llecho/lib/hellocharts/b/a;` @kind interface;
  #L3dbf7a.  v0:= temp @kind object;
  #L3dbf7c.  v1.`lecho.lib.hellocharts.d.b.f` @type ^`lecho.lib.hellocharts.b.a` := v0 @kind object;
  #L3dbf80.  v0:= v1.`lecho.lib.hellocharts.d.b.e` @type ^`lecho.lib.hellocharts.view.a` @kind object;
  #L3dbf84.  call temp:= `getChartRenderer`(v0) @signature `Llecho/lib/hellocharts/view/a;.getChartRenderer:()Llecho/lib/hellocharts/h/d;` @kind interface;
  #L3dbf8a.  v0:= temp @kind object;
  #L3dbf8c.  v1.`lecho.lib.hellocharts.d.b.g` @type ^`lecho.lib.hellocharts.h.d` := v0 @kind object;
  #L3dbf90.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v1 @kind this, `lecho.lib.hellocharts.d.g` v2 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dc068.  v0:= v1.`lecho.lib.hellocharts.d.b.d` @type ^`lecho.lib.hellocharts.d.c` @kind object;
  #L3dc06c.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/d/c;.a:(Llecho/lib/hellocharts/d/g;)V` @kind virtual;
  #L3dc072.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.d.b` v0 @kind this, `boolean` v1 ) @signature `Llecho/lib/hellocharts/d/b;.a:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3dbfa4.  v0.`lecho.lib.hellocharts.d.b.h` @type ^`boolean` := v1 @kind boolean;
  #L3dbfa8.  return @kind void;
}
procedure `boolean` `a`(`lecho.lib.hellocharts.d.b` v4 @kind this, `android.view.MotionEvent` v5 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dbb8c.  v0:= v4.`lecho.lib.hellocharts.d.b.a` @type ^`android.view.GestureDetector` @kind object;
  #L3dbb90.  call temp:= `onTouchEvent`(v0, v5) @signature `Landroid/view/GestureDetector;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3dbb96.  v0:= temp;
  #L3dbb98.  v1:= v4.`lecho.lib.hellocharts.d.b.b` @type ^`android.view.ScaleGestureDetector` @kind object;
  #L3dbb9c.  call temp:= `onTouchEvent`(v1, v5) @signature `Landroid/view/ScaleGestureDetector;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3dbba2.  v1:= temp;
  #L3dbba4.  v2:= 1I;
  #L3dbba6.  v3:= 0I;
  #L3dbba8.  if v1 != 0 then goto L3dbbb6;
  #L3dbbac.  if v0 == 0 then goto L3dbbb2;
  #L3dbbb0.  goto L3dbbb6;
  #L3dbbb2.  v0:= 0I;
  #L3dbbb4.  goto L3dbbb8;
  #L3dbbb6.  v0:= 1I;
  #L3dbbb8.  v1:= v4.`lecho.lib.hellocharts.d.b.h` @type ^`boolean` @kind boolean;
  #L3dbbbc.  if v1 == 0 then goto L3dbbd6;
  #L3dbbc0.  v1:= v4.`lecho.lib.hellocharts.d.b.b` @type ^`android.view.ScaleGestureDetector` @kind object;
  #L3dbbc4.  call temp:= `isInProgress`(v1) @signature `Landroid/view/ScaleGestureDetector;.isInProgress:()Z` @kind virtual;
  #L3dbbca.  v1:= temp;
  #L3dbbcc.  if v1 == 0 then goto L3dbbd6;
  #L3dbbd0.  call `d`(v4) @signature `Llecho/lib/hellocharts/d/b;.d:()V` @kind direct;
  #L3dbbd6.  v1:= v4.`lecho.lib.hellocharts.d.b.j` @type ^`boolean` @kind boolean;
  #L3dbbda.  if v1 == 0 then goto L3dbbf6;
  #L3dbbde.  call temp:= `b`(v4, v5) @signature `Llecho/lib/hellocharts/d/b;.b:(Landroid/view/MotionEvent;)Z` @kind direct;
  #L3dbbe4.  v5:= temp;
  #L3dbbe6.  if v5 != 0 then goto L3dbbf4;
  #L3dbbea.  if v0 == 0 then goto L3dbbf0;
  #L3dbbee.  goto L3dbbf4;
  #L3dbbf0.  v0:= 0I;
  #L3dbbf2.  goto L3dbbf6;
  #L3dbbf4.  v0:= 1I;
  #L3dbbf6.  return v0;
}
procedure `boolean` `a`(`lecho.lib.hellocharts.d.b` v0 @kind this, `android.view.MotionEvent` v1 @kind object, `android.view.ViewParent` v2 @kind object, `lecho.lib.hellocharts.d.d` v3 @kind object) @signature `Llecho/lib/hellocharts/d/b;.a:(Landroid/view/MotionEvent;Landroid/view/ViewParent;Llecho/lib/hellocharts/d/d;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dbc08.  v0.`lecho.lib.hellocharts.d.b.o` @type ^`android.view.ViewParent` := v2 @kind object;
  #L3dbc0c.  v0.`lecho.lib.hellocharts.d.b.p` @type ^`lecho.lib.hellocharts.d.d` := v3 @kind object;
  #L3dbc10.  call temp:= `a`(v0, v1) @signature `Llecho/lib/hellocharts/d/b;.a:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3dbc16.  v1:= temp;
  #L3dbc18.  return v1;
}
procedure `void` `b`(`lecho.lib.hellocharts.d.b` v0 @kind this, `boolean` v1 ) @signature `Llecho/lib/hellocharts/d/b;.b:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3dc084.  v0.`lecho.lib.hellocharts.d.b.i` @type ^`boolean` := v1 @kind boolean;
  #L3dc088.  return @kind void;
}
procedure `boolean` `b`(`lecho.lib.hellocharts.d.b` v4 @kind this) @signature `Llecho/lib/hellocharts/d/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dbcc0.  v0:= v4.`lecho.lib.hellocharts.d.b.i` @type ^`boolean` @kind boolean;
  #L3dbcc4.  v1:= 1I;
  #L3dbcc6.  if v0 == 0 then goto L3dbce2;
  #L3dbcca.  v0:= v4.`lecho.lib.hellocharts.d.b.c` @type ^`lecho.lib.hellocharts.d.a` @kind object;
  #L3dbcce.  v2:= v4.`lecho.lib.hellocharts.d.b.f` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3dbcd2.  call temp:= `b`(v0, v2) @signature `Llecho/lib/hellocharts/d/a;.b:(Llecho/lib/hellocharts/b/a;)Z` @kind virtual;
  #L3dbcd8.  v0:= temp;
  #L3dbcda.  if v0 == 0 then goto L3dbce2;
  #L3dbcde.  v0:= 1I;
  #L3dbce0.  goto L3dbce4;
  #L3dbce2.  v0:= 0I;
  #L3dbce4.  v2:= v4.`lecho.lib.hellocharts.d.b.h` @type ^`boolean` @kind boolean;
  #L3dbce8.  if v2 == 0 then goto L3dbd02;
  #L3dbcec.  v2:= v4.`lecho.lib.hellocharts.d.b.d` @type ^`lecho.lib.hellocharts.d.c` @kind object;
  #L3dbcf0.  v3:= v4.`lecho.lib.hellocharts.d.b.f` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3dbcf4.  call temp:= `a`(v2, v3) @signature `Llecho/lib/hellocharts/d/c;.a:(Llecho/lib/hellocharts/b/a;)Z` @kind virtual;
  #L3dbcfa.  v2:= temp;
  #L3dbcfc.  if v2 == 0 then goto L3dbd02;
  #L3dbd00.  v0:= 1I;
  #L3dbd02.  return v0;
}
procedure `lecho.lib.hellocharts.d.g` `c`(`lecho.lib.hellocharts.d.b` v1 @kind this) @signature `Llecho/lib/hellocharts/d/b;.c:()Llecho/lib/hellocharts/d/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dbe8c.  v0:= v1.`lecho.lib.hellocharts.d.b.d` @type ^`lecho.lib.hellocharts.d.c` @kind object;
  #L3dbe90.  call temp:= `a`(v0) @signature `Llecho/lib/hellocharts/d/c;.a:()Llecho/lib/hellocharts/d/g;` @kind virtual;
  #L3dbe96.  v0:= temp @kind object;
  #L3dbe98.  return v0 @kind object;
}
procedure `void` `c`(`lecho.lib.hellocharts.d.b` v0 @kind this, `boolean` v1 ) @signature `Llecho/lib/hellocharts/d/b;.c:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3dc09c.  v0.`lecho.lib.hellocharts.d.b.j` @type ^`boolean` := v1 @kind boolean;
  #L3dc0a0.  return @kind void;
}
procedure `void` `d`(`lecho.lib.hellocharts.d.b` v0 @kind this, `boolean` v1 ) @signature `Llecho/lib/hellocharts/d/b;.d:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3dc0dc.  v0.`lecho.lib.hellocharts.d.b.k` @type ^`boolean` := v1 @kind boolean;
  #L3dc0e0.  return @kind void;
}
