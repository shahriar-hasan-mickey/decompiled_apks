record `lecho.lib.hellocharts.h.f` @kind class @AccessFlag PUBLIC extends `lecho.lib.hellocharts.h.a` @kind class {
  `java.util.List` `lecho.lib.hellocharts.h.f.q` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.f.r` `lecho.lib.hellocharts.h.f.r` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.h.f` v0 @kind this, `android.content.Context` v1 @kind object, `lecho.lib.hellocharts.view.a` v2 @kind object) @signature `Llecho/lib/hellocharts/h/f;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/view/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e2c08.  call `<init>`(v0, v1, v2) @signature `Llecho/lib/hellocharts/h/a;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e2c0e.  v1:= new `lecho.lib.hellocharts.f.r`;
  #L3e2c12.  call `<init>`(v1) @signature `Llecho/lib/hellocharts/f/r;.<init>:()V` @kind direct;
  #L3e2c18.  v0.`lecho.lib.hellocharts.h.f.r` @type ^`lecho.lib.hellocharts.f.r` := v1 @kind object;
  #L3e2c1c.  v1:= new `java.util.ArrayList`;
  #L3e2c20.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e2c26.  v0.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` := v1 @kind object;
  #L3e2c2a.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.h.f` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Llecho/lib/hellocharts/h/f;.a:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2c3c.  v0:= v2.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2c40.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2c46.  v0:= temp @kind object;
  #L3e2c48.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2c4e.  v1:= temp;
  #L3e2c50.  if v1 == 0 then goto L3e2c68;
  #L3e2c54.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2c5a.  v1:= temp @kind object;
  #L3e2c5c.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2c60.  call `a`(v1, v3) @signature `Llecho/lib/hellocharts/h/d;.a:(Landroid/graphics/Canvas;)V` @kind interface;
  #L3e2c66.  goto L3e2c48;
  #L3e2c68.  return @kind void;
}
procedure `boolean` `a`(`lecho.lib.hellocharts.h.f` v3 @kind this, `float` v4 , `float` v5 ) @signature `Llecho/lib/hellocharts/h/f;.a:(FF)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2b78.  v0:= v3.`lecho.lib.hellocharts.h.f.k` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3e2b7c.  call `a`(v0) @signature `Llecho/lib/hellocharts/f/n;.a:()V` @kind virtual;
  #L3e2b82.  v0:= v3.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2b86.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3e2b8c.  v0:= temp;
  #L3e2b8e.  v0:= v0 + -1;
  #L3e2b92.  if v0 < 0 then goto L3e2bcc;
  #L3e2b96.  v1:= v3.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2b9a.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e2ba0.  v1:= temp @kind object;
  #L3e2ba2.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2ba6.  call temp:= `a`(v1, v4, v5) @signature `Llecho/lib/hellocharts/h/d;.a:(FF)Z` @kind interface;
  #L3e2bac.  v2:= temp;
  #L3e2bae.  if v2 == 0 then goto L3e2bc6;
  #L3e2bb2.  v4:= v3.`lecho.lib.hellocharts.h.f.k` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3e2bb6.  call temp:= `g`(v1) @signature `Llecho/lib/hellocharts/h/d;.g:()Llecho/lib/hellocharts/f/n;` @kind interface;
  #L3e2bbc.  v5:= temp @kind object;
  #L3e2bbe.  call `a`(v4, v5) @signature `Llecho/lib/hellocharts/f/n;.a:(Llecho/lib/hellocharts/f/n;)V` @kind virtual;
  #L3e2bc4.  goto L3e2bcc;
  #L3e2bc6.  v0:= v0 + -1;
  #L3e2bca.  goto L3e2b92;
  #L3e2bcc.  v0:= v0 + -1;
  #L3e2bd0.  if v0 < 0 then goto L3e2bec;
  #L3e2bd4.  v4:= v3.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2bd8.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3e2bde.  v4:= temp @kind object;
  #L3e2be0.  v4:= (`lecho.lib.hellocharts.h.d`) v4 @kind object;
  #L3e2be4.  call `d`(v4) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3e2bea.  goto L3e2bcc;
  #L3e2bec.  call temp:= `c`(v3) @signature `Llecho/lib/hellocharts/h/f;.c:()Z` @kind virtual;
  #L3e2bf2.  v4:= temp;
  #L3e2bf4.  return v4;
}
procedure `void` `b`(`lecho.lib.hellocharts.h.f` v2 @kind this) @signature `Llecho/lib/hellocharts/h/f;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2c7c.  call `b`(v2) @signature `Llecho/lib/hellocharts/h/a;.b:()V` @kind super;
  #L3e2c82.  v0:= v2.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2c86.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2c8c.  v0:= temp @kind object;
  #L3e2c8e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2c94.  v1:= temp;
  #L3e2c96.  if v1 == 0 then goto L3e2cae;
  #L3e2c9a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2ca0.  v1:= temp @kind object;
  #L3e2ca2.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2ca6.  call `b`(v1) @signature `Llecho/lib/hellocharts/h/d;.b:()V` @kind interface;
  #L3e2cac.  goto L3e2c8e;
  #L3e2cae.  call `i`(v2) @signature `Llecho/lib/hellocharts/h/f;.i:()V` @kind virtual;
  #L3e2cb4.  return @kind void;
}
procedure `void` `b`(`lecho.lib.hellocharts.h.f` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Llecho/lib/hellocharts/h/f;.b:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2cc8.  v0:= v2.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2ccc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2cd2.  v0:= temp @kind object;
  #L3e2cd4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2cda.  v1:= temp;
  #L3e2cdc.  if v1 == 0 then goto L3e2cf4;
  #L3e2ce0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2ce6.  v1:= temp @kind object;
  #L3e2ce8.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2cec.  call `b`(v1, v3) @signature `Llecho/lib/hellocharts/h/d;.b:(Landroid/graphics/Canvas;)V` @kind interface;
  #L3e2cf2.  goto L3e2cd4;
  #L3e2cf4.  return @kind void;
}
procedure `void` `d`(`lecho.lib.hellocharts.h.f` v2 @kind this) @signature `Llecho/lib/hellocharts/h/f;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2d08.  v0:= v2.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2d0c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2d12.  v0:= temp @kind object;
  #L3e2d14.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2d1a.  v1:= temp;
  #L3e2d1c.  if v1 == 0 then goto L3e2d34;
  #L3e2d20.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2d26.  v1:= temp @kind object;
  #L3e2d28.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2d2c.  call `d`(v1) @signature `Llecho/lib/hellocharts/h/d;.d:()V` @kind interface;
  #L3e2d32.  goto L3e2d14;
  #L3e2d34.  v0:= v2.`lecho.lib.hellocharts.h.f.k` @type ^`lecho.lib.hellocharts.f.n` @kind object;
  #L3e2d38.  call `a`(v0) @signature `Llecho/lib/hellocharts/f/n;.a:()V` @kind virtual;
  #L3e2d3e.  return @kind void;
}
procedure `void` `h`(`lecho.lib.hellocharts.h.f` v2 @kind this) @signature `Llecho/lib/hellocharts/h/f;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e2d50.  v0:= v2.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2d54.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2d5a.  v0:= temp @kind object;
  #L3e2d5c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2d62.  v1:= temp;
  #L3e2d64.  if v1 == 0 then goto L3e2d7c;
  #L3e2d68.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2d6e.  v1:= temp @kind object;
  #L3e2d70.  v1:= (`lecho.lib.hellocharts.h.d`) v1 @kind object;
  #L3e2d74.  call `h`(v1) @signature `Llecho/lib/hellocharts/h/d;.h:()V` @kind interface;
  #L3e2d7a.  goto L3e2d5c;
  #L3e2d7c.  return @kind void;
}
procedure `void` `i`(`lecho.lib.hellocharts.h.f` v4 @kind this) @signature `Llecho/lib/hellocharts/h/f;.i:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2d90.  v0:= v4.`lecho.lib.hellocharts.h.f.h` @type ^`boolean` @kind boolean;
  #L3e2d94.  if v0 == 0 then goto L3e2e10;
  #L3e2d98.  v0:= 0I;
  #L3e2d9a.  v1:= v4.`lecho.lib.hellocharts.h.f.q` @type ^`java.util.List` @kind object;
  #L3e2d9e.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e2da4.  v1:= temp @kind object;
  #L3e2da6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e2dac.  v2:= temp;
  #L3e2dae.  if v2 == 0 then goto L3e2df4;
  #L3e2db2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e2db8.  v2:= temp @kind object;
  #L3e2dba.  v2:= (`lecho.lib.hellocharts.h.d`) v2 @kind object;
  #L3e2dbe.  call `i`(v2) @signature `Llecho/lib/hellocharts/h/d;.i:()V` @kind interface;
  #L3e2dc4.  if v0 != 0 then goto L3e2ddc;
  #L3e2dc8.  v3:= v4.`lecho.lib.hellocharts.h.f.r` @type ^`lecho.lib.hellocharts.f.r` @kind object;
  #L3e2dcc.  call temp:= `e`(v2) @signature `Llecho/lib/hellocharts/h/d;.e:()Llecho/lib/hellocharts/f/r;` @kind interface;
  #L3e2dd2.  v2:= temp @kind object;
  #L3e2dd4.  call `a`(v3, v2) @signature `Llecho/lib/hellocharts/f/r;.a:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e2dda.  goto L3e2dee;
  #L3e2ddc.  v3:= v4.`lecho.lib.hellocharts.h.f.r` @type ^`lecho.lib.hellocharts.f.r` @kind object;
  #L3e2de0.  call temp:= `e`(v2) @signature `Llecho/lib/hellocharts/h/d;.e:()Llecho/lib/hellocharts/f/r;` @kind interface;
  #L3e2de6.  v2:= temp @kind object;
  #L3e2de8.  call `b`(v3, v2) @signature `Llecho/lib/hellocharts/f/r;.b:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e2dee.  v0:= v0 + 1;
  #L3e2df2.  goto L3e2da6;
  #L3e2df4.  v0:= v4.`lecho.lib.hellocharts.h.f.c` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e2df8.  v1:= v4.`lecho.lib.hellocharts.h.f.r` @type ^`lecho.lib.hellocharts.f.r` @kind object;
  #L3e2dfc.  call `b`(v0, v1) @signature `Llecho/lib/hellocharts/b/a;.b:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e2e02.  v0:= v4.`lecho.lib.hellocharts.h.f.c` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e2e06.  v1:= v4.`lecho.lib.hellocharts.h.f.r` @type ^`lecho.lib.hellocharts.f.r` @kind object;
  #L3e2e0a.  call `a`(v0, v1) @signature `Llecho/lib/hellocharts/b/a;.a:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e2e10.  return @kind void;
}
