record `lecho.lib.hellocharts.view.AbstractChartView` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.view.View` @kind class, `lecho.lib.hellocharts.view.a` @kind interface {
  `lecho.lib.hellocharts.b.a` `lecho.lib.hellocharts.view.AbstractChartView.a` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.h.b` `lecho.lib.hellocharts.view.AbstractChartView.b` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.d.b` `lecho.lib.hellocharts.view.AbstractChartView.c` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.h.d` `lecho.lib.hellocharts.view.AbstractChartView.d` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.a.b` `lecho.lib.hellocharts.view.AbstractChartView.e` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.a.e` `lecho.lib.hellocharts.view.AbstractChartView.f` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.view.AbstractChartView.g` @AccessFlag PROTECTED;
  `boolean` `lecho.lib.hellocharts.view.AbstractChartView.h` @AccessFlag PROTECTED;
  `lecho.lib.hellocharts.d.d` `lecho.lib.hellocharts.view.AbstractChartView.i` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.view.AbstractChartView` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3e5774.  v0:= 0I;
  #L3e5776.  v1:= 0I;
  #L3e5778.  call `<init>`(v2, v3, v0, v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3e577e.  return @kind void;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e5790.  v0:= 0I;
  #L3e5792.  call `<init>`(v1, v2, v3, v0) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3e5798.  return @kind void;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object, `int` v3 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e57ac.  call `<init>`(v0, v1, v2, v3) @signature `Landroid/view/View;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L3e57b2.  v2:= 1I;
  #L3e57b4.  v0.`lecho.lib.hellocharts.view.AbstractChartView.g` @type ^`boolean` := v2 @kind boolean;
  #L3e57b8.  v2:= 0I;
  #L3e57ba.  v0.`lecho.lib.hellocharts.view.AbstractChartView.h` @type ^`boolean` := v2 @kind boolean;
  #L3e57be.  v2:= new `lecho.lib.hellocharts.b.a`;
  #L3e57c2.  call `<init>`(v2) @signature `Llecho/lib/hellocharts/b/a;.<init>:()V` @kind direct;
  #L3e57c8.  v0.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` := v2 @kind object;
  #L3e57cc.  v2:= new `lecho.lib.hellocharts.d.b`;
  #L3e57d0.  call `<init>`(v2, v1, v0) @signature `Llecho/lib/hellocharts/d/b;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e57d6.  v0.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` := v2 @kind object;
  #L3e57da.  v2:= new `lecho.lib.hellocharts.h.b`;
  #L3e57de.  call `<init>`(v2, v1, v0) @signature `Llecho/lib/hellocharts/h/b;.<init>:(Landroid/content/Context;Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e57e4.  v0.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` := v2 @kind object;
  #L3e57e8.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e57ec.  v2:= 14I;
  #L3e57f0.  if v1 >= v2 then goto L3e5812;
  #L3e57f4.  v1:= new `lecho.lib.hellocharts.a.d`;
  #L3e57f8.  call `<init>`(v1, v0) @signature `Llecho/lib/hellocharts/a/d;.<init>:(Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e57fe.  v0.`lecho.lib.hellocharts.view.AbstractChartView.e` @type ^`lecho.lib.hellocharts.a.b` := v1 @kind object;
  #L3e5802.  v1:= new `lecho.lib.hellocharts.a.g`;
  #L3e5806.  call `<init>`(v1, v0) @signature `Llecho/lib/hellocharts/a/g;.<init>:(Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e580c.  v0.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` := v1 @kind object;
  #L3e5810.  goto L3e582e;
  #L3e5812.  v1:= new `lecho.lib.hellocharts.a.f`;
  #L3e5816.  call `<init>`(v1, v0) @signature `Llecho/lib/hellocharts/a/f;.<init>:(Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e581c.  v0.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` := v1 @kind object;
  #L3e5820.  v1:= new `lecho.lib.hellocharts.a.c`;
  #L3e5824.  call `<init>`(v1, v0) @signature `Llecho/lib/hellocharts/a/c;.<init>:(Llecho/lib/hellocharts/view/a;)V` @kind direct;
  #L3e582a.  v0.`lecho.lib.hellocharts.view.AbstractChartView.e` @type ^`lecho.lib.hellocharts.a.b` := v1 @kind object;
  #L3e582e.  return @kind void;
}
procedure `lecho.lib.hellocharts.f.r` `a`(`lecho.lib.hellocharts.view.AbstractChartView` v6 @kind this, `float` v7 , `float` v8 , `float` v9 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:(FFF)Llecho/lib/hellocharts/f/r;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e55e4.  call temp:= `getMaximumViewport`(v6) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaximumViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e55ea.  v0:= temp @kind object;
  #L3e55ec.  v1:= new `lecho.lib.hellocharts.f.r`;
  #L3e55f0.  call temp:= `getMaximumViewport`(v6) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaximumViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e55f6.  v2:= temp @kind object;
  #L3e55f8.  call `<init>`(v1, v2) @signature `Llecho/lib/hellocharts/f/r;.<init>:(Llecho/lib/hellocharts/f/r;)V` @kind direct;
  #L3e55fe.  call temp:= `b`(v0, v7, v8) @signature `Llecho/lib/hellocharts/f/r;.b:(FF)Z` @kind virtual;
  #L3e5604.  v2:= temp;
  #L3e5606.  if v2 == 0 then goto L3e56ee;
  #L3e560a.  v2:= 1.0F;
  #L3e560e.  v3:= fcmpg(v9, v2);
  #L3e5612.  if v3 >= 0 then goto L3e561c;
  #L3e5616.  v9:= 1.0F;
  #L3e561a.  goto L3e5634;
  #L3e561c.  call temp:= `getMaxZoom`(v6) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaxZoom:()F` @kind virtual;
  #L3e5622.  v2:= temp;
  #L3e5624.  v2:= fcmpl(v9, v2);
  #L3e5628.  if v2 <= 0 then goto L3e5634;
  #L3e562c.  call temp:= `getMaxZoom`(v6) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaxZoom:()F` @kind virtual;
  #L3e5632.  v9:= temp;
  #L3e5634.  call temp:= `a`(v1) @signature `Llecho/lib/hellocharts/f/r;.a:()F` @kind virtual;
  #L3e563a.  v2:= temp;
  #L3e563c.  v2:= v2 / v9 @kind float;
  #L3e563e.  call temp:= `b`(v1) @signature `Llecho/lib/hellocharts/f/r;.b:()F` @kind virtual;
  #L3e5644.  v3:= temp;
  #L3e5646.  v3:= v3 / v9 @kind float;
  #L3e5648.  v9:= 2.0F;
  #L3e564c.  v4:= v2 / v9 @kind float;
  #L3e5650.  v9:= v3 / v9 @kind float;
  #L3e5654.  v5:= v7 - v4 @kind float;
  #L3e5658.  v7:= v7 + v4 @kind float;
  #L3e565a.  v4:= v8 + v9 @kind float;
  #L3e565e.  v8:= v8 - v9 @kind float;
  #L3e5660.  v9:= v0.`lecho.lib.hellocharts.f.r.a` @type ^`float`;
  #L3e5664.  v9:= fcmpg(v5, v9);
  #L3e5668.  if v9 >= 0 then goto L3e5676;
  #L3e566c.  v5:= v0.`lecho.lib.hellocharts.f.r.a` @type ^`float`;
  #L3e5670.  v7:= v5 + v2 @kind float;
  #L3e5674.  goto L3e568a;
  #L3e5676.  v9:= v0.`lecho.lib.hellocharts.f.r.c` @type ^`float`;
  #L3e567a.  v9:= fcmpl(v7, v9);
  #L3e567e.  if v9 <= 0 then goto L3e568a;
  #L3e5682.  v7:= v0.`lecho.lib.hellocharts.f.r.c` @type ^`float`;
  #L3e5686.  v5:= v7 - v2 @kind float;
  #L3e568a.  v9:= v0.`lecho.lib.hellocharts.f.r.b` @type ^`float`;
  #L3e568e.  v9:= fcmpl(v4, v9);
  #L3e5692.  if v9 <= 0 then goto L3e56a0;
  #L3e5696.  v4:= v0.`lecho.lib.hellocharts.f.r.b` @type ^`float`;
  #L3e569a.  v8:= v4 - v3 @kind float;
  #L3e569e.  goto L3e56b4;
  #L3e56a0.  v9:= v0.`lecho.lib.hellocharts.f.r.d` @type ^`float`;
  #L3e56a4.  v9:= fcmpg(v8, v9);
  #L3e56a8.  if v9 >= 0 then goto L3e56b4;
  #L3e56ac.  v8:= v0.`lecho.lib.hellocharts.f.r.d` @type ^`float`;
  #L3e56b0.  v4:= v8 + v3 @kind float;
  #L3e56b4.  call temp:= `getZoomType`(v6) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getZoomType:()Llecho/lib/hellocharts/d/g;` @kind virtual;
  #L3e56ba.  v9:= temp @kind object;
  #L3e56bc.  v0:= `@@lecho.lib.hellocharts.d.g.c` @type ^`lecho.lib.hellocharts.d.g` @kind object;
  #L3e56c0.  if v0 != v9 then goto L3e56cc;
  #L3e56c4.  call `a`(v1, v5, v4, v7, v8) @signature `Llecho/lib/hellocharts/f/r;.a:(FFFF)V` @kind virtual;
  #L3e56ca.  goto L3e56ee;
  #L3e56cc.  v0:= `@@lecho.lib.hellocharts.d.g.a` @type ^`lecho.lib.hellocharts.d.g` @kind object;
  #L3e56d0.  if v0 != v9 then goto L3e56de;
  #L3e56d4.  v1.`lecho.lib.hellocharts.f.r.a` @type ^`float` := v5;
  #L3e56d8.  v1.`lecho.lib.hellocharts.f.r.c` @type ^`float` := v7;
  #L3e56dc.  goto L3e56ee;
  #L3e56de.  v7:= `@@lecho.lib.hellocharts.d.g.b` @type ^`lecho.lib.hellocharts.d.g` @kind object;
  #L3e56e2.  if v7 != v9 then goto L3e56ee;
  #L3e56e6.  v1.`lecho.lib.hellocharts.f.r.b` @type ^`float` := v4;
  #L3e56ea.  v1.`lecho.lib.hellocharts.f.r.d` @type ^`float` := v8;
  #L3e56ee.  return v1 @kind object;
}
procedure `void` `a`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5840.  call temp:= `getChartData`(v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getChartData:()Llecho/lib/hellocharts/f/f;` @kind virtual;
  #L3e5846.  v0:= temp @kind object;
  #L3e5848.  call `l`(v0) @signature `Llecho/lib/hellocharts/f/f;.l:()V` @kind interface;
  #L3e584e.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5852.  call `i`(v0) @signature `Llecho/lib/hellocharts/h/d;.i:()V` @kind interface;
  #L3e5858.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e585e.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `float` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5870.  call temp:= `getChartData`(v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getChartData:()Llecho/lib/hellocharts/f/f;` @kind virtual;
  #L3e5876.  v0:= temp @kind object;
  #L3e5878.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/f/f;.a:(F)V` @kind interface;
  #L3e587e.  v2:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5882.  call `i`(v2) @signature `Llecho/lib/hellocharts/h/d;.i:()V` @kind interface;
  #L3e5888.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e588e.  return @kind void;
}
procedure `void` `a`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `long` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e58a0.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.e` @type ^`lecho.lib.hellocharts.a.b` @kind object;
  #L3e58a4.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/a/b;.a:(J)V` @kind interface;
  #L3e58aa.  return @kind void;
}
procedure `void` `b`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.b:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3e58bc.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e58c0.  call `a`(v0) @signature `Llecho/lib/hellocharts/b/a;.a:()V` @kind virtual;
  #L3e58c6.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e58ca.  call `b`(v0) @signature `Llecho/lib/hellocharts/h/d;.b:()V` @kind interface;
  #L3e58d0.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e58d4.  call `b`(v0) @signature `Llecho/lib/hellocharts/h/b;.b:()V` @kind virtual;
  #L3e58da.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e58e0.  return @kind void;
}
procedure `void` `c`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.c:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3e58f4.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e58f8.  call `a`(v0) @signature `Llecho/lib/hellocharts/h/d;.a:()V` @kind interface;
  #L3e58fe.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e5902.  call `c`(v0) @signature `Llecho/lib/hellocharts/h/b;.c:()V` @kind virtual;
  #L3e5908.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e590c.  call `a`(v0) @signature `Llecho/lib/hellocharts/d/b;.a:()V` @kind virtual;
  #L3e5912.  return @kind void;
}
procedure `void` `computeScroll`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5924.  call `computeScroll`(v1) @signature `Landroid/view/View;.computeScroll:()V` @kind super;
  #L3e592a.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.g` @type ^`boolean` @kind boolean;
  #L3e592e.  if v0 == 0 then goto L3e5948;
  #L3e5932.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5936.  call temp:= `b`(v0) @signature `Llecho/lib/hellocharts/d/b;.b:()Z` @kind virtual;
  #L3e593c.  v0:= temp;
  #L3e593e.  if v0 == 0 then goto L3e5948;
  #L3e5942.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5948.  return @kind void;
}
procedure `lecho.lib.hellocharts.h.b` `getAxesRenderer`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getAxesRenderer:()Llecho/lib/hellocharts/h/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5744.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e5748.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.b.a` `getChartComputator`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getChartComputator:()Llecho/lib/hellocharts/b/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5574.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e5578.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.h.d` `getChartRenderer`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getChartRenderer:()Llecho/lib/hellocharts/h/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e575c.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5760.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.f.r` `getCurrentViewport`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getCurrentViewport:()Llecho/lib/hellocharts/f/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5700.  call temp:= `getChartRenderer`(v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getChartRenderer:()Llecho/lib/hellocharts/h/d;` @kind virtual;
  #L3e5706.  v0:= temp @kind object;
  #L3e5708.  call temp:= `f`(v0) @signature `Llecho/lib/hellocharts/h/d;.f:()Llecho/lib/hellocharts/f/r;` @kind interface;
  #L3e570e.  v0:= temp @kind object;
  #L3e5710.  return v0 @kind object;
}
procedure `float` `getMaxZoom`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaxZoom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5504.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e5508.  call temp:= `i`(v0) @signature `Llecho/lib/hellocharts/b/a;.i:()F` @kind virtual;
  #L3e550e.  v0:= temp;
  #L3e5510.  return v0;
}
procedure `lecho.lib.hellocharts.f.r` `getMaximumViewport`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaximumViewport:()Llecho/lib/hellocharts/f/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5724.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5728.  call temp:= `e`(v0) @signature `Llecho/lib/hellocharts/h/d;.e:()Llecho/lib/hellocharts/f/r;` @kind interface;
  #L3e572e.  v0:= temp @kind object;
  #L3e5730.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.f.n` `getSelectedValue`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getSelectedValue:()Llecho/lib/hellocharts/f/n;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e55c4.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e55c8.  call temp:= `g`(v0) @signature `Llecho/lib/hellocharts/h/d;.g:()Llecho/lib/hellocharts/f/n;` @kind interface;
  #L3e55ce.  v0:= temp @kind object;
  #L3e55d0.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.d.b` `getTouchHandler`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getTouchHandler:()Llecho/lib/hellocharts/d/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e558c.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5590.  return v0 @kind object;
}
procedure `float` `getZoomLevel`(`lecho.lib.hellocharts.view.AbstractChartView` v4 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getZoomLevel:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e5524.  call temp:= `getMaximumViewport`(v4) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getMaximumViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e552a.  v0:= temp @kind object;
  #L3e552c.  call temp:= `getCurrentViewport`(v4) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getCurrentViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e5532.  v1:= temp @kind object;
  #L3e5534.  call temp:= `a`(v0) @signature `Llecho/lib/hellocharts/f/r;.a:()F` @kind virtual;
  #L3e553a.  v2:= temp;
  #L3e553c.  call temp:= `a`(v1) @signature `Llecho/lib/hellocharts/f/r;.a:()F` @kind virtual;
  #L3e5542.  v3:= temp;
  #L3e5544.  v2:= v2 / v3 @kind float;
  #L3e5546.  call temp:= `b`(v0) @signature `Llecho/lib/hellocharts/f/r;.b:()F` @kind virtual;
  #L3e554c.  v0:= temp;
  #L3e554e.  call temp:= `b`(v1) @signature `Llecho/lib/hellocharts/f/r;.b:()F` @kind virtual;
  #L3e5554.  v1:= temp;
  #L3e5556.  v0:= v0 / v1 @kind float;
  #L3e5558.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3e555e.  v0:= temp;
  #L3e5560.  return v0;
}
procedure `lecho.lib.hellocharts.d.g` `getZoomType`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getZoomType:()Llecho/lib/hellocharts/d/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e55a4.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e55a8.  call temp:= `c`(v0) @signature `Llecho/lib/hellocharts/d/b;.c:()Llecho/lib/hellocharts/d/g;` @kind virtual;
  #L3e55ae.  v0:= temp @kind object;
  #L3e55b0.  return v0 @kind object;
}
procedure `void` `onDraw`(`lecho.lib.hellocharts.view.AbstractChartView` v2 @kind this, `android.graphics.Canvas` v3 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3e595c.  call `onDraw`(v2, v3) @signature `Landroid/view/View;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L3e5962.  call temp:= `isEnabled`(v2) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.isEnabled:()Z` @kind virtual;
  #L3e5968.  v0:= temp;
  #L3e596a.  if v0 == 0 then goto L3e59b8;
  #L3e596e.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e5972.  call `a`(v0, v3) @signature `Llecho/lib/hellocharts/h/b;.a:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3e5978.  call temp:= `save`(v3) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L3e597e.  v0:= temp;
  #L3e5980.  v1:= v2.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e5984.  call temp:= `b`(v1) @signature `Llecho/lib/hellocharts/b/a;.b:()Landroid/graphics/Rect;` @kind virtual;
  #L3e598a.  v1:= temp @kind object;
  #L3e598c.  call temp:= `clipRect`(v3, v1) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/Rect;)Z` @kind virtual;
  #L3e5992.  v1:= v2.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5996.  call `a`(v1, v3) @signature `Llecho/lib/hellocharts/h/d;.a:(Landroid/graphics/Canvas;)V` @kind interface;
  #L3e599c.  call `restoreToCount`(v3, v0) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L3e59a2.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e59a6.  call `b`(v0, v3) @signature `Llecho/lib/hellocharts/h/d;.b:(Landroid/graphics/Canvas;)V` @kind interface;
  #L3e59ac.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e59b0.  call `b`(v0, v3) @signature `Llecho/lib/hellocharts/h/b;.b:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L3e59b6.  goto L3e59c2;
  #L3e59b8.  v0:= `@@lecho.lib.hellocharts.i.b.a` @type ^`int`;
  #L3e59bc.  call `drawColor`(v3, v0) @signature `Landroid/graphics/Canvas;.drawColor:(I)V` @kind virtual;
  #L3e59c2.  return @kind void;
}
procedure `void` `onMeasure`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `int` v1 , `int` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.onMeasure:(II)V` @AccessFlag PROTECTED {
    temp;

  #L3e59d4.  call `onMeasure`(v0, v1, v2) @signature `Landroid/view/View;.onMeasure:(II)V` @kind super;
  #L3e59da.  return @kind void;
}
procedure `void` `onSizeChanged`(`lecho.lib.hellocharts.view.AbstractChartView` v7 @kind this, `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e59ec.  call `onSizeChanged`(v7, v8, v9, v10, v11) @signature `Landroid/view/View;.onSizeChanged:(IIII)V` @kind super;
  #L3e59f2.  v0:= v7.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e59f6.  call temp:= `getWidth`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getWidth:()I` @kind virtual;
  #L3e59fc.  v1:= temp;
  #L3e59fe.  call temp:= `getHeight`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getHeight:()I` @kind virtual;
  #L3e5a04.  v2:= temp;
  #L3e5a06.  call temp:= `getPaddingLeft`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getPaddingLeft:()I` @kind virtual;
  #L3e5a0c.  v3:= temp;
  #L3e5a0e.  call temp:= `getPaddingTop`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getPaddingTop:()I` @kind virtual;
  #L3e5a14.  v4:= temp;
  #L3e5a16.  call temp:= `getPaddingRight`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getPaddingRight:()I` @kind virtual;
  #L3e5a1c.  v5:= temp;
  #L3e5a1e.  call temp:= `getPaddingBottom`(v7) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getPaddingBottom:()I` @kind virtual;
  #L3e5a24.  v6:= temp;
  #L3e5a26.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Llecho/lib/hellocharts/b/a;.a:(IIIIII)V` @kind virtual;
  #L3e5a2c.  v8:= v7.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5a30.  call `h`(v8) @signature `Llecho/lib/hellocharts/h/d;.h:()V` @kind interface;
  #L3e5a36.  v8:= v7.`lecho.lib.hellocharts.view.AbstractChartView.b` @type ^`lecho.lib.hellocharts.h.b` @kind object;
  #L3e5a3a.  call `a`(v8) @signature `Llecho/lib/hellocharts/h/b;.a:()V` @kind virtual;
  #L3e5a40.  return @kind void;
}
procedure `boolean` `onTouchEvent`(`lecho.lib.hellocharts.view.AbstractChartView` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e54a4.  call temp:= `onTouchEvent`(v3, v4) @signature `Landroid/view/View;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L3e54aa.  v0:= v3.`lecho.lib.hellocharts.view.AbstractChartView.g` @type ^`boolean` @kind boolean;
  #L3e54ae.  if v0 == 0 then goto L3e54ee;
  #L3e54b2.  v0:= v3.`lecho.lib.hellocharts.view.AbstractChartView.h` @type ^`boolean` @kind boolean;
  #L3e54b6.  if v0 == 0 then goto L3e54d4;
  #L3e54ba.  v0:= v3.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e54be.  call temp:= `getParent`(v3) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L3e54c4.  v1:= temp @kind object;
  #L3e54c6.  v2:= v3.`lecho.lib.hellocharts.view.AbstractChartView.i` @type ^`lecho.lib.hellocharts.d.d` @kind object;
  #L3e54ca.  call temp:= `a`(v0, v4, v1, v2) @signature `Llecho/lib/hellocharts/d/b;.a:(Landroid/view/MotionEvent;Landroid/view/ViewParent;Llecho/lib/hellocharts/d/d;)Z` @kind virtual;
  #L3e54d0.  v4:= temp;
  #L3e54d2.  goto L3e54e0;
  #L3e54d4.  v0:= v3.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e54d8.  call temp:= `a`(v0, v4) @signature `Llecho/lib/hellocharts/d/b;.a:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L3e54de.  v4:= temp;
  #L3e54e0.  if v4 == 0 then goto L3e54ea;
  #L3e54e4.  call `c`(v3) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e54ea.  v4:= 1I;
  #L3e54ec.  return v4;
  #L3e54ee.  v4:= 0I;
  #L3e54f0.  return v4;
}
procedure `void` `setChartRenderer`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `lecho.lib.hellocharts.h.d` v1 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setChartRenderer:(Llecho/lib/hellocharts/h/d;)V` @AccessFlag PUBLIC {
    temp;

  #L3e5a54.  v0.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` := v1 @kind object;
  #L3e5a58.  call `c`(v0) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.c:()V` @kind virtual;
  #L3e5a5e.  call `c`(v0) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5a64.  return @kind void;
}
procedure `void` `setContainerScrollEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `boolean` v1 , `lecho.lib.hellocharts.d.d` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setContainerScrollEnabled:(ZLlecho/lib/hellocharts/d/d;)V` @AccessFlag PUBLIC {
    temp;

  #L3e5a78.  v0.`lecho.lib.hellocharts.view.AbstractChartView.h` @type ^`boolean` := v1 @kind boolean;
  #L3e5a7c.  v0.`lecho.lib.hellocharts.view.AbstractChartView.i` @type ^`lecho.lib.hellocharts.d.d` := v2 @kind object;
  #L3e5a80.  return @kind void;
}
procedure `void` `setCurrentViewport`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.f.r` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setCurrentViewport:(Llecho/lib/hellocharts/f/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5a94.  if v2 == 0 then goto L3e5aa2;
  #L3e5a98.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5a9c.  call `b`(v0, v2) @signature `Llecho/lib/hellocharts/h/d;.b:(Llecho/lib/hellocharts/f/r;)V` @kind interface;
  #L3e5aa2.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5aa8.  return @kind void;
}
procedure `void` `setCurrentViewportWithAnimation`(`lecho.lib.hellocharts.view.AbstractChartView` v2 @kind this, `lecho.lib.hellocharts.f.r` v3 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setCurrentViewportWithAnimation:(Llecho/lib/hellocharts/f/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5abc.  if v3 == 0 then goto L3e5adc;
  #L3e5ac0.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` @kind object;
  #L3e5ac4.  call `a`(v0) @signature `Llecho/lib/hellocharts/a/e;.a:()V` @kind interface;
  #L3e5aca.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` @kind object;
  #L3e5ace.  call temp:= `getCurrentViewport`(v2) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getCurrentViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e5ad4.  v1:= temp @kind object;
  #L3e5ad6.  call `a`(v0, v1, v3) @signature `Llecho/lib/hellocharts/a/e;.a:(Llecho/lib/hellocharts/f/r;Llecho/lib/hellocharts/f/r;)V` @kind interface;
  #L3e5adc.  call `c`(v2) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5ae2.  return @kind void;
}
procedure `void` `setCurrentViewportWithAnimation`(`lecho.lib.hellocharts.view.AbstractChartView` v2 @kind this, `lecho.lib.hellocharts.f.r` v3 @kind object, `long` v4 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setCurrentViewportWithAnimation:(Llecho/lib/hellocharts/f/r;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e5af4.  if v3 == 0 then goto L3e5b14;
  #L3e5af8.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` @kind object;
  #L3e5afc.  call `a`(v0) @signature `Llecho/lib/hellocharts/a/e;.a:()V` @kind interface;
  #L3e5b02.  v0:= v2.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` @kind object;
  #L3e5b06.  call temp:= `getCurrentViewport`(v2) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.getCurrentViewport:()Llecho/lib/hellocharts/f/r;` @kind virtual;
  #L3e5b0c.  v1:= temp @kind object;
  #L3e5b0e.  call `a`(v0, v1, v3, v4) @signature `Llecho/lib/hellocharts/a/e;.a:(Llecho/lib/hellocharts/f/r;Llecho/lib/hellocharts/f/r;J)V` @kind interface;
  #L3e5b14.  call `c`(v2) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5b1a.  return @kind void;
}
procedure `void` `setDataAnimationListener`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.a.a` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setDataAnimationListener:(Llecho/lib/hellocharts/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5b2c.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.e` @type ^`lecho.lib.hellocharts.a.b` @kind object;
  #L3e5b30.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/a/b;.a:(Llecho/lib/hellocharts/a/a;)V` @kind interface;
  #L3e5b36.  return @kind void;
}
procedure `void` `setInteractive`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `boolean` v1 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setInteractive:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L3e5b48.  v0.`lecho.lib.hellocharts.view.AbstractChartView.g` @type ^`boolean` := v1 @kind boolean;
  #L3e5b4c.  return @kind void;
}
procedure `void` `setMaxZoom`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `float` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setMaxZoom:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5b60.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e5b64.  call `e`(v0, v2) @signature `Llecho/lib/hellocharts/b/a;.e:(F)V` @kind virtual;
  #L3e5b6a.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5b70.  return @kind void;
}
procedure `void` `setMaximumViewport`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.f.r` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setMaximumViewport:(Llecho/lib/hellocharts/f/r;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5b84.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5b88.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/h/d;.a:(Llecho/lib/hellocharts/f/r;)V` @kind interface;
  #L3e5b8e.  call `c`(v1) @signature `Landroid/support/v4/view/t;.c:(Landroid/view/View;)V` @kind static;
  #L3e5b94.  return @kind void;
}
procedure `void` `setScrollEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `boolean` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setScrollEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5ba8.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5bac.  call `b`(v0, v2) @signature `Llecho/lib/hellocharts/d/b;.b:(Z)V` @kind virtual;
  #L3e5bb2.  return @kind void;
}
procedure `void` `setValueSelectionEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `boolean` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setValueSelectionEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5bc4.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5bc8.  call `d`(v0, v2) @signature `Llecho/lib/hellocharts/d/b;.d:(Z)V` @kind virtual;
  #L3e5bce.  return @kind void;
}
procedure `void` `setValueTouchEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `boolean` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setValueTouchEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5be0.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5be4.  call `c`(v0, v2) @signature `Llecho/lib/hellocharts/d/b;.c:(Z)V` @kind virtual;
  #L3e5bea.  return @kind void;
}
procedure `void` `setViewportAnimationListener`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.a.a` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setViewportAnimationListener:(Llecho/lib/hellocharts/a/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5bfc.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.f` @type ^`lecho.lib.hellocharts.a.e` @kind object;
  #L3e5c00.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/a/e;.a:(Llecho/lib/hellocharts/a/a;)V` @kind interface;
  #L3e5c06.  return @kind void;
}
procedure `void` `setViewportCalculationEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `boolean` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setViewportCalculationEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5c18.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.d` @type ^`lecho.lib.hellocharts.h.d` @kind object;
  #L3e5c1c.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/h/d;.a:(Z)V` @kind interface;
  #L3e5c22.  return @kind void;
}
procedure `void` `setViewportChangeListener`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.e.l` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setViewportChangeListener:(Llecho/lib/hellocharts/e/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5c34.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.a` @type ^`lecho.lib.hellocharts.b.a` @kind object;
  #L3e5c38.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/b/a;.a:(Llecho/lib/hellocharts/e/l;)V` @kind virtual;
  #L3e5c3e.  return @kind void;
}
procedure `void` `setZoomEnabled`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `boolean` v2 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setZoomEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5c50.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5c54.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/d/b;.a:(Z)V` @kind virtual;
  #L3e5c5a.  return @kind void;
}
procedure `void` `setZoomLevel`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `float` v1 , `float` v2 , `float` v3 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setZoomLevel:(FFF)V` @AccessFlag PUBLIC {
    temp;

  #L3e5c6c.  call temp:= `a`(v0, v1, v2, v3) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:(FFF)Llecho/lib/hellocharts/f/r;` @kind direct;
  #L3e5c72.  v1:= temp @kind object;
  #L3e5c74.  call `setCurrentViewport`(v0, v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setCurrentViewport:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e5c7a.  return @kind void;
}
procedure `void` `setZoomLevelWithAnimation`(`lecho.lib.hellocharts.view.AbstractChartView` v0 @kind this, `float` v1 , `float` v2 , `float` v3 ) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setZoomLevelWithAnimation:(FFF)V` @AccessFlag PUBLIC {
    temp;

  #L3e5c8c.  call temp:= `a`(v0, v1, v2, v3) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.a:(FFF)Llecho/lib/hellocharts/f/r;` @kind direct;
  #L3e5c92.  v1:= temp @kind object;
  #L3e5c94.  call `setCurrentViewportWithAnimation`(v0, v1) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setCurrentViewportWithAnimation:(Llecho/lib/hellocharts/f/r;)V` @kind virtual;
  #L3e5c9a.  return @kind void;
}
procedure `void` `setZoomType`(`lecho.lib.hellocharts.view.AbstractChartView` v1 @kind this, `lecho.lib.hellocharts.d.g` v2 @kind object) @signature `Llecho/lib/hellocharts/view/AbstractChartView;.setZoomType:(Llecho/lib/hellocharts/d/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e5cac.  v0:= v1.`lecho.lib.hellocharts.view.AbstractChartView.c` @type ^`lecho.lib.hellocharts.d.b` @kind object;
  #L3e5cb0.  call `a`(v0, v2) @signature `Llecho/lib/hellocharts/d/b;.a:(Llecho/lib/hellocharts/d/g;)V` @kind virtual;
  #L3e5cb6.  return @kind void;
}
