record `lecho.lib.hellocharts.f.c` @kind class @AccessFlag PUBLIC {
  `float` `lecho.lib.hellocharts.f.c.a` @AccessFlag PRIVATE;
  `char`[] `lecho.lib.hellocharts.f.c.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.f.c` v0 @kind this, `float` v1 ) @signature `Llecho/lib/hellocharts/f/c;.<init>:(F)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dd154.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd15a.  call temp:= `a`(v0, v1) @signature `Llecho/lib/hellocharts/f/c;.a:(F)Llecho/lib/hellocharts/f/c;` @kind virtual;
  #L3dd160.  return @kind void;
}
procedure `float` `a`(`lecho.lib.hellocharts.f.c` v1 @kind this) @signature `Llecho/lib/hellocharts/f/c;.a:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd0b8.  v0:= v1.`lecho.lib.hellocharts.f.c.a` @type ^`float`;
  #L3dd0bc.  return v0;
}
procedure `lecho.lib.hellocharts.f.c` `a`(`lecho.lib.hellocharts.f.c` v0 @kind this, `float` v1 ) @signature `Llecho/lib/hellocharts/f/c;.a:(F)Llecho/lib/hellocharts/f/c;` @AccessFlag PUBLIC {
    temp;

  #L3dd11c.  v0.`lecho.lib.hellocharts.f.c.a` @type ^`float` := v1;
  #L3dd120.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.f.c` `a`(`lecho.lib.hellocharts.f.c` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Llecho/lib/hellocharts/f/c;.a:(Ljava/lang/String;)Llecho/lib/hellocharts/f/c;` @AccessFlag PUBLIC {
    temp;

  #L3dd134.  call temp:= `toCharArray`(v1) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L3dd13a.  v1:= temp @kind object;
  #L3dd13c.  v0.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] := v1 @kind object;
  #L3dd140.  return v0 @kind object;
}
procedure `char`[] `b`(`lecho.lib.hellocharts.f.c` v1 @kind this) @signature `Llecho/lib/hellocharts/f/c;.b:()[C` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dd0a0.  v0:= v1.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] @kind object;
  #L3dd0a4.  return v0 @kind object;
}
procedure `boolean` `equals`(`lecho.lib.hellocharts.f.c` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Llecho/lib/hellocharts/f/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dd038.  v0:= 1I;
  #L3dd03a.  if v4 != v5 then goto L3dd040;
  #L3dd03e.  return v0;
  #L3dd040.  v1:= 0I;
  #L3dd042.  if v5 == 0 then goto L3dd08e;
  #L3dd046.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dd04c.  v2:= temp @kind object;
  #L3dd04e.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3dd054.  v3:= temp @kind object;
  #L3dd056.  if v2 == v3 then goto L3dd05c;
  #L3dd05a.  goto L3dd08e;
  #L3dd05c.  v5:= (`lecho.lib.hellocharts.f.c`) v5 @kind object;
  #L3dd060.  v2:= v5.`lecho.lib.hellocharts.f.c.a` @type ^`float`;
  #L3dd064.  v3:= v4.`lecho.lib.hellocharts.f.c.a` @type ^`float`;
  #L3dd068.  call temp:= `compare`(v2, v3) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L3dd06e.  v2:= temp;
  #L3dd070.  if v2 == 0 then goto L3dd076;
  #L3dd074.  return v1;
  #L3dd076.  v2:= v4.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] @kind object;
  #L3dd07a.  v5:= v5.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] @kind object;
  #L3dd07e.  call temp:= `equals`(v2, v5) @signature `Ljava/util/Arrays;.equals:([C[C)Z` @kind static;
  #L3dd084.  v5:= temp;
  #L3dd086.  if v5 != 0 then goto L3dd08c;
  #L3dd08a.  return v1;
  #L3dd08c.  return v0;
  #L3dd08e.  return v1;
}
procedure `int` `hashCode`(`lecho.lib.hellocharts.f.c` v3 @kind this) @signature `Llecho/lib/hellocharts/f/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dd0d0.  v0:= v3.`lecho.lib.hellocharts.f.c.a` @type ^`float`;
  #L3dd0d4.  v1:= 0I;
  #L3dd0d6.  v0:= fcmpl(v0, v1);
  #L3dd0da.  v1:= 0I;
  #L3dd0dc.  if v0 == 0 then goto L3dd0ee;
  #L3dd0e0.  v0:= v3.`lecho.lib.hellocharts.f.c.a` @type ^`float`;
  #L3dd0e4.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3dd0ea.  v0:= temp;
  #L3dd0ec.  goto L3dd0f0;
  #L3dd0ee.  v0:= 0I;
  #L3dd0f0.  v0:= v0 * 31;
  #L3dd0f4.  v2:= v3.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] @kind object;
  #L3dd0f8.  if v2 == 0 then goto L3dd108;
  #L3dd0fc.  v1:= v3.`lecho.lib.hellocharts.f.c.b` @type ^`char`[] @kind object;
  #L3dd100.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([C)I` @kind static;
  #L3dd106.  v1:= temp;
  #L3dd108.  v0:= v0 + v1 @kind int;
  #L3dd10a.  return v0;
}
