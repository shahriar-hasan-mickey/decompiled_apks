record `lecho.lib.hellocharts.f.k` @kind class @AccessFlag PUBLIC extends `lecho.lib.hellocharts.f.a` @kind class {
  `java.util.List` `lecho.lib.hellocharts.f.k.k` @AccessFlag PRIVATE;
  `float` `lecho.lib.hellocharts.f.k.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.f.k` v1 @kind this) @signature `Llecho/lib/hellocharts/f/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3de218.  call `<init>`(v1) @signature `Llecho/lib/hellocharts/f/a;.<init>:()V` @kind direct;
  #L3de21e.  v0:= new `java.util.ArrayList`;
  #L3de222.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3de228.  v1.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` := v0 @kind object;
  #L3de22c.  v0:= 0I;
  #L3de22e.  v1.`lecho.lib.hellocharts.f.k.l` @type ^`float` := v0;
  #L3de232.  return @kind void;
}
procedure `lecho.lib.hellocharts.f.k` `k`() @signature `Llecho/lib/hellocharts/f/k;.k:()Llecho/lib/hellocharts/f/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3de17c.  v0:= new `lecho.lib.hellocharts.f.k`;
  #L3de180.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/f/k;.<init>:()V` @kind direct;
  #L3de186.  v1:= new `java.util.ArrayList`;
  #L3de18a.  v2:= 4I;
  #L3de18c.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3de192.  v2:= new `lecho.lib.hellocharts.f.m`;
  #L3de196.  v3:= 2.0F;
  #L3de19a.  v4:= 0I;
  #L3de19c.  call `<init>`(v2, v4, v3) @signature `Llecho/lib/hellocharts/f/m;.<init>:(FF)V` @kind direct;
  #L3de1a2.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de1a8.  v2:= new `lecho.lib.hellocharts.f.m`;
  #L3de1ac.  v4:= 4.0F;
  #L3de1b0.  v5:= 1.0F;
  #L3de1b4.  call `<init>`(v2, v5, v4) @signature `Llecho/lib/hellocharts/f/m;.<init>:(FF)V` @kind direct;
  #L3de1ba.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de1c0.  v2:= new `lecho.lib.hellocharts.f.m`;
  #L3de1c4.  v5:= 3.0F;
  #L3de1c8.  call `<init>`(v2, v3, v5) @signature `Llecho/lib/hellocharts/f/m;.<init>:(FF)V` @kind direct;
  #L3de1ce.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de1d4.  v2:= new `lecho.lib.hellocharts.f.m`;
  #L3de1d8.  call `<init>`(v2, v5, v4) @signature `Llecho/lib/hellocharts/f/m;.<init>:(FF)V` @kind direct;
  #L3de1de.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de1e4.  v2:= new `lecho.lib.hellocharts.f.j`;
  #L3de1e8.  call `<init>`(v2, v1) @signature `Llecho/lib/hellocharts/f/j;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3de1ee.  v1:= new `java.util.ArrayList`;
  #L3de1f2.  v3:= 1I;
  #L3de1f4.  call `<init>`(v1, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3de1fa.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3de200.  call temp:= `a`(v0, v1) @signature `Llecho/lib/hellocharts/f/k;.a:(Ljava/util/List;)Llecho/lib/hellocharts/f/k;` @kind virtual;
  #L3de206.  return v0 @kind object;
}
procedure `lecho.lib.hellocharts.f.k` `a`(`lecho.lib.hellocharts.f.k` v0 @kind this, `java.util.List` v1 @kind object) @signature `Llecho/lib/hellocharts/f/k;.a:(Ljava/util/List;)Llecho/lib/hellocharts/f/k;` @AccessFlag PUBLIC {
    temp;

  #L3de150.  if v1 != 0 then goto L3de164;
  #L3de154.  v1:= new `java.util.ArrayList`;
  #L3de158.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3de15e.  v0.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` := v1 @kind object;
  #L3de162.  goto L3de168;
  #L3de164.  v0.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` := v1 @kind object;
  #L3de168.  return v0 @kind object;
}
procedure `void` `a`(`lecho.lib.hellocharts.f.k` v2 @kind this, `float` v3 ) @signature `Llecho/lib/hellocharts/f/k;.a:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de244.  v0:= v2.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` @kind object;
  #L3de248.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3de24e.  v0:= temp @kind object;
  #L3de250.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3de256.  v1:= temp;
  #L3de258.  if v1 == 0 then goto L3de270;
  #L3de25c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3de262.  v1:= temp @kind object;
  #L3de264.  v1:= (`lecho.lib.hellocharts.f.j`) v1 @kind object;
  #L3de268.  call `a`(v1, v3) @signature `Llecho/lib/hellocharts/f/j;.a:(F)V` @kind virtual;
  #L3de26e.  goto L3de250;
  #L3de270.  return @kind void;
}
procedure `void` `l`(`lecho.lib.hellocharts.f.k` v2 @kind this) @signature `Llecho/lib/hellocharts/f/k;.l:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de284.  v0:= v2.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` @kind object;
  #L3de288.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3de28e.  v0:= temp @kind object;
  #L3de290.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3de296.  v1:= temp;
  #L3de298.  if v1 == 0 then goto L3de2b0;
  #L3de29c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3de2a2.  v1:= temp @kind object;
  #L3de2a4.  v1:= (`lecho.lib.hellocharts.f.j`) v1 @kind object;
  #L3de2a8.  call `a`(v1) @signature `Llecho/lib/hellocharts/f/j;.a:()V` @kind virtual;
  #L3de2ae.  goto L3de290;
  #L3de2b0.  return @kind void;
}
procedure `java.util.List` `m`(`lecho.lib.hellocharts.f.k` v1 @kind this) @signature `Llecho/lib/hellocharts/f/k;.m:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de138.  v0:= v1.`lecho.lib.hellocharts.f.k.k` @type ^`java.util.List` @kind object;
  #L3de13c.  return v0 @kind object;
}
procedure `float` `n`(`lecho.lib.hellocharts.f.k` v1 @kind this) @signature `Llecho/lib/hellocharts/f/k;.n:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de120.  v0:= v1.`lecho.lib.hellocharts.f.k.l` @type ^`float`;
  #L3de124.  return v0;
}
