record `lecho.lib.hellocharts.c.h` @kind class @AccessFlag PUBLIC extends `lecho.lib.hellocharts.c.c` @kind interface {
  `lecho.lib.hellocharts.c.k` `lecho.lib.hellocharts.c.h.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.c.h` v1 @kind this) @signature `Llecho/lib/hellocharts/c/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db378.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3db37e.  v0:= new `lecho.lib.hellocharts.c.k`;
  #L3db382.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/c/k;.<init>:()V` @kind direct;
  #L3db388.  v1.`lecho.lib.hellocharts.c.h.a` @type ^`lecho.lib.hellocharts.c.k` := v0 @kind object;
  #L3db38c.  v0:= v1.`lecho.lib.hellocharts.c.h.a` @type ^`lecho.lib.hellocharts.c.k` @kind object;
  #L3db390.  call `a`(v0) @signature `Llecho/lib/hellocharts/c/k;.a:()V` @kind virtual;
  #L3db396.  return @kind void;
}
procedure `int` `a`(`lecho.lib.hellocharts.c.h` v2 @kind this, `char`[] v3 @kind object, `lecho.lib.hellocharts.f.p` v4 @kind object) @signature `Llecho/lib/hellocharts/c/h;.a:([CLlecho/lib/hellocharts/f/p;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db348.  v0:= v2.`lecho.lib.hellocharts.c.h.a` @type ^`lecho.lib.hellocharts.c.k` @kind object;
  #L3db34c.  call temp:= `b`(v4) @signature `Llecho/lib/hellocharts/f/p;.b:()F` @kind virtual;
  #L3db352.  v1:= temp;
  #L3db354.  call temp:= `e`(v4) @signature `Llecho/lib/hellocharts/f/p;.e:()[C` @kind virtual;
  #L3db35a.  v4:= temp @kind object;
  #L3db35c.  call temp:= `a`(v0, v3, v1, v4) @signature `Llecho/lib/hellocharts/c/k;.a:([CF[C)I` @kind virtual;
  #L3db362.  v3:= temp;
  #L3db364.  return v3;
}
