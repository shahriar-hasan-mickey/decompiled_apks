record `lecho.lib.hellocharts.c.g` @kind class @AccessFlag PUBLIC extends `lecho.lib.hellocharts.c.b` @kind interface {
  `lecho.lib.hellocharts.c.k` `lecho.lib.hellocharts.c.g.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lecho.lib.hellocharts.c.g` v1 @kind this) @signature `Llecho/lib/hellocharts/c/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db318.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3db31e.  v0:= new `lecho.lib.hellocharts.c.k`;
  #L3db322.  call `<init>`(v0) @signature `Llecho/lib/hellocharts/c/k;.<init>:()V` @kind direct;
  #L3db328.  v1.`lecho.lib.hellocharts.c.g.a` @type ^`lecho.lib.hellocharts.c.k` := v0 @kind object;
  #L3db32c.  v0:= v1.`lecho.lib.hellocharts.c.g.a` @type ^`lecho.lib.hellocharts.c.k` @kind object;
  #L3db330.  call `a`(v0) @signature `Llecho/lib/hellocharts/c/k;.a:()V` @kind virtual;
  #L3db336.  return @kind void;
}
procedure `int` `a`(`lecho.lib.hellocharts.c.g` v2 @kind this, `char`[] v3 @kind object, `lecho.lib.hellocharts.f.e` v4 @kind object) @signature `Llecho/lib/hellocharts/c/g;.a:([CLlecho/lib/hellocharts/f/e;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3db2e8.  v0:= v2.`lecho.lib.hellocharts.c.g.a` @type ^`lecho.lib.hellocharts.c.k` @kind object;
  #L3db2ec.  call temp:= `d`(v4) @signature `Llecho/lib/hellocharts/f/e;.d:()F` @kind virtual;
  #L3db2f2.  v1:= temp;
  #L3db2f4.  call temp:= `h`(v4) @signature `Llecho/lib/hellocharts/f/e;.h:()[C` @kind virtual;
  #L3db2fa.  v4:= temp @kind object;
  #L3db2fc.  call temp:= `a`(v0, v3, v1, v4) @signature `Llecho/lib/hellocharts/c/k;.a:([CF[C)I` @kind virtual;
  #L3db302.  v3:= temp;
  #L3db304.  return v3;
}
