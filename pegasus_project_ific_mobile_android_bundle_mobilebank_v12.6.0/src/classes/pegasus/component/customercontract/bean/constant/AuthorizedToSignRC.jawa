record `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` @kind class @AccessFlag PUBLIC extends `pegasus.mobile.android.framework.pdk.android.core.service.types.a` @kind interface {
  `java.lang.String` `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.name` @AccessFlag PRIVATE_FINAL;
  `int` `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @AccessFlag PRIVATE_FINAL;
}
global `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.INVALIDAMOUNT` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOMULTISIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOREJECTION` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOTAUTHORIZED` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40f0e8.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L40f0ec.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L40f0f2.  `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` := v0 @kind object;
  #L40f0f6.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f0fa.  v1:= "NOREJECTION" @kind object;
  #L40f0fe.  v2:= 1I;
  #L40f100.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f106.  `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOREJECTION` @type ^`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` := v0 @kind object;
  #L40f10a.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f10e.  v1:= "NOTAUTHORIZED" @kind object;
  #L40f112.  v2:= 2I;
  #L40f114.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f11a.  `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOTAUTHORIZED` @type ^`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` := v0 @kind object;
  #L40f11e.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f122.  v1:= "NOMULTISIGNATURE" @kind object;
  #L40f126.  v2:= 3I;
  #L40f128.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f12e.  `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.NOMULTISIGNATURE` @type ^`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` := v0 @kind object;
  #L40f132.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f136.  v1:= "INVALIDAMOUNT" @kind object;
  #L40f13a.  v2:= 4I;
  #L40f13c.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f142.  `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.INVALIDAMOUNT` @type ^`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` := v0 @kind object;
  #L40f146.  return @kind void;
}
procedure `void` `<init>`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L40f158.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f15e.  v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int` := v2;
  #L40f162.  v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.name` @type ^`java.lang.String` := v3 @kind object;
  #L40f166.  v3:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f16a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f170.  v0:= temp @kind object;
  #L40f172.  call temp:= `containsKey`(v3, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f178.  v3:= temp;
  #L40f17a.  if v3 != 0 then goto L40f190;
  #L40f17e.  v3:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f182.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f188.  v2:= temp @kind object;
  #L40f18a.  call temp:= `put`(v3, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f190.  return @kind void;
}
procedure `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `valueOf`(`int` v2 ) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.valueOf:(I)Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40f048.  v0:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f04c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f052.  v1:= temp @kind object;
  #L40f054.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f05a.  v0:= temp;
  #L40f05c.  if v0 == 0 then goto L40f07a;
  #L40f060.  v0:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f064.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f06a.  v2:= temp @kind object;
  #L40f06c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f072.  v2:= temp @kind object;
  #L40f074.  v2:= (`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`) v2 @kind object;
  #L40f078.  return v2 @kind object;
  #L40f07a.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f07e.  v1:= 0I;
  #L40f080.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f086.  return v0 @kind object;
}
procedure `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` `valueOfJson`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.valueOfJson:(ILjava/lang/String;)Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40f098.  v0:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f09c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f0a2.  v1:= temp @kind object;
  #L40f0a4.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f0aa.  v0:= temp;
  #L40f0ac.  if v0 == 0 then goto L40f0ca;
  #L40f0b0.  v3:= `@@pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.values` @type ^`java.util.Map` @kind object;
  #L40f0b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f0ba.  v2:= temp @kind object;
  #L40f0bc.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f0c2.  v2:= temp @kind object;
  #L40f0c4.  v2:= (`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`) v2 @kind object;
  #L40f0c8.  return v2 @kind object;
  #L40f0ca.  v0:= new `pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`;
  #L40f0ce.  call `<init>`(v0, v2, v3) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f0d4.  return v0 @kind object;
}
procedure `boolean` `equals`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40efa4.  if v1 == v2 then goto L40efc6;
  #L40efa8.  v0:= instanceof @variable v2 @type ^`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` @kind boolean;
  #L40efac.  if v0 == 0 then goto L40efc2;
  #L40efb0.  v0:= v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int`;
  #L40efb4.  v2:= (`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC`) v2 @kind object;
  #L40efb8.  v2:= v2.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int`;
  #L40efbc.  if v0 != v2 then goto L40efc2;
  #L40efc0.  goto L40efc6;
  #L40efc2.  v2:= 0I;
  #L40efc4.  goto L40efc8;
  #L40efc6.  v2:= 1I;
  #L40efc8.  return v2;
}
procedure `java.lang.String` `getName`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f030.  v0:= v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.name` @type ^`java.lang.String` @kind object;
  #L40f034.  return v0 @kind object;
}
procedure `int` `getValue`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40efdc.  v0:= v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int`;
  #L40efe0.  return v0;
}
procedure `int` `hashCode`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40eff4.  v0:= v1.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int`;
  #L40eff8.  return v0;
}
procedure `java.lang.Object` `readResolve`(`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC` v2 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.readResolve:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L40f00c.  v0:= v2.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.value` @type ^`int`;
  #L40f010.  v1:= v2.`pegasus.component.customercontract.bean.constant.AuthorizedToSignRC.name` @type ^`java.lang.String` @kind object;
  #L40f014.  call temp:= `valueOfJson`(v0, v1) @signature `Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;.valueOfJson:(ILjava/lang/String;)Lpegasus/component/customercontract/bean/constant/AuthorizedToSignRC;` @kind static;
  #L40f01a.  v0:= temp @kind object;
  #L40f01c.  return v0 @kind object;
}
