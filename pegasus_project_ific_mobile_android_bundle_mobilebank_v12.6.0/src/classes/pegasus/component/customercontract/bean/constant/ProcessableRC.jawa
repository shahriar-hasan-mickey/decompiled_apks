record `pegasus.component.customercontract.bean.constant.ProcessableRC` @kind class @AccessFlag PUBLIC extends `pegasus.mobile.android.framework.pdk.android.core.service.types.a` @kind interface {
  `java.lang.String` `pegasus.component.customercontract.bean.constant.ProcessableRC.name` @AccessFlag PRIVATE_FINAL;
  `int` `pegasus.component.customercontract.bean.constant.ProcessableRC.value` @AccessFlag PRIVATE_FINAL;
}
global `pegasus.component.customercontract.bean.constant.ProcessableRC` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.INVALIDAMOUNT` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.ProcessableRC` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.NOMULTISIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.ProcessableRC` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.NOTENOUGHTSIGNATURE` @AccessFlag PUBLIC_STATIC_FINAL;
global `pegasus.component.customercontract.bean.constant.ProcessableRC` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.SUCCESSFUL` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Map` `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L40f2e8.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L40f2ec.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L40f2f2.  `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` := v0 @kind object;
  #L40f2f6.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f2fa.  v1:= "SUCCESSFUL" @kind object;
  #L40f2fe.  v2:= 1I;
  #L40f300.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f306.  `@@pegasus.component.customercontract.bean.constant.ProcessableRC.SUCCESSFUL` @type ^`pegasus.component.customercontract.bean.constant.ProcessableRC` := v0 @kind object;
  #L40f30a.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f30e.  v1:= "NOMULTISIGNATURE" @kind object;
  #L40f312.  v2:= 3I;
  #L40f314.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f31a.  `@@pegasus.component.customercontract.bean.constant.ProcessableRC.NOMULTISIGNATURE` @type ^`pegasus.component.customercontract.bean.constant.ProcessableRC` := v0 @kind object;
  #L40f31e.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f322.  v1:= "INVALIDAMOUNT" @kind object;
  #L40f326.  v2:= 4I;
  #L40f328.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f32e.  `@@pegasus.component.customercontract.bean.constant.ProcessableRC.INVALIDAMOUNT` @type ^`pegasus.component.customercontract.bean.constant.ProcessableRC` := v0 @kind object;
  #L40f332.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f336.  v1:= "NOTENOUGHTSIGNATURE" @kind object;
  #L40f33a.  v2:= 5I;
  #L40f33c.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f342.  `@@pegasus.component.customercontract.bean.constant.ProcessableRC.NOTENOUGHTSIGNATURE` @type ^`pegasus.component.customercontract.bean.constant.ProcessableRC` := v0 @kind object;
  #L40f346.  return @kind void;
}
procedure `void` `<init>`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L40f358.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40f35e.  v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int` := v2;
  #L40f362.  v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.name` @type ^`java.lang.String` := v3 @kind object;
  #L40f366.  v3:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f36a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f370.  v0:= temp @kind object;
  #L40f372.  call temp:= `containsKey`(v3, v0) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f378.  v3:= temp;
  #L40f37a.  if v3 != 0 then goto L40f390;
  #L40f37e.  v3:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f382.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f388.  v2:= temp @kind object;
  #L40f38a.  call temp:= `put`(v3, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f390.  return @kind void;
}
procedure `pegasus.component.customercontract.bean.constant.ProcessableRC` `valueOf`(`int` v2 ) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.valueOf:(I)Lpegasus/component/customercontract/bean/constant/ProcessableRC;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40f248.  v0:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f24c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f252.  v1:= temp @kind object;
  #L40f254.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f25a.  v0:= temp;
  #L40f25c.  if v0 == 0 then goto L40f27a;
  #L40f260.  v0:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f264.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f26a.  v2:= temp @kind object;
  #L40f26c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f272.  v2:= temp @kind object;
  #L40f274.  v2:= (`pegasus.component.customercontract.bean.constant.ProcessableRC`) v2 @kind object;
  #L40f278.  return v2 @kind object;
  #L40f27a.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f27e.  v1:= 0I;
  #L40f280.  call `<init>`(v0, v2, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f286.  return v0 @kind object;
}
procedure `pegasus.component.customercontract.bean.constant.ProcessableRC` `valueOfJson`(`int` v2 , `java.lang.String` v3 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.valueOfJson:(ILjava/lang/String;)Lpegasus/component/customercontract/bean/constant/ProcessableRC;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L40f298.  v0:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f29c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f2a2.  v1:= temp @kind object;
  #L40f2a4.  call temp:= `containsKey`(v0, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L40f2aa.  v0:= temp;
  #L40f2ac.  if v0 == 0 then goto L40f2ca;
  #L40f2b0.  v3:= `@@pegasus.component.customercontract.bean.constant.ProcessableRC.values` @type ^`java.util.Map` @kind object;
  #L40f2b4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L40f2ba.  v2:= temp @kind object;
  #L40f2bc.  call temp:= `get`(v3, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40f2c2.  v2:= temp @kind object;
  #L40f2c4.  v2:= (`pegasus.component.customercontract.bean.constant.ProcessableRC`) v2 @kind object;
  #L40f2c8.  return v2 @kind object;
  #L40f2ca.  v0:= new `pegasus.component.customercontract.bean.constant.ProcessableRC`;
  #L40f2ce.  call `<init>`(v0, v2, v3) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L40f2d4.  return v0 @kind object;
}
procedure `boolean` `equals`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f1a4.  if v1 == v2 then goto L40f1c6;
  #L40f1a8.  v0:= instanceof @variable v2 @type ^`pegasus.component.customercontract.bean.constant.ProcessableRC` @kind boolean;
  #L40f1ac.  if v0 == 0 then goto L40f1c2;
  #L40f1b0.  v0:= v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int`;
  #L40f1b4.  v2:= (`pegasus.component.customercontract.bean.constant.ProcessableRC`) v2 @kind object;
  #L40f1b8.  v2:= v2.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int`;
  #L40f1bc.  if v0 != v2 then goto L40f1c2;
  #L40f1c0.  goto L40f1c6;
  #L40f1c2.  v2:= 0I;
  #L40f1c4.  goto L40f1c8;
  #L40f1c6.  v2:= 1I;
  #L40f1c8.  return v2;
}
procedure `java.lang.String` `getName`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f230.  v0:= v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.name` @type ^`java.lang.String` @kind object;
  #L40f234.  return v0 @kind object;
}
procedure `int` `getValue`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f1dc.  v0:= v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int`;
  #L40f1e0.  return v0;
}
procedure `int` `hashCode`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v1 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40f1f4.  v0:= v1.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int`;
  #L40f1f8.  return v0;
}
procedure `java.lang.Object` `readResolve`(`pegasus.component.customercontract.bean.constant.ProcessableRC` v2 @kind this) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.readResolve:()Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L40f20c.  v0:= v2.`pegasus.component.customercontract.bean.constant.ProcessableRC.value` @type ^`int`;
  #L40f210.  v1:= v2.`pegasus.component.customercontract.bean.constant.ProcessableRC.name` @type ^`java.lang.String` @kind object;
  #L40f214.  call temp:= `valueOfJson`(v0, v1) @signature `Lpegasus/component/customercontract/bean/constant/ProcessableRC;.valueOfJson:(ILjava/lang/String;)Lpegasus/component/customercontract/bean/constant/ProcessableRC;` @kind static;
  #L40f21a.  v0:= temp @kind object;
  #L40f21c.  return v0 @kind object;
}
