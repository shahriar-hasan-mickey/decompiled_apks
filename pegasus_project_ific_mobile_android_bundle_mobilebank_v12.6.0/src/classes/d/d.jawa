record `d.d` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `d.r` @kind interface, `java.nio.channels.WritableByteChannel` @kind interface {
}
procedure `d.d` `b`(`java.lang.String` v0 @kind object) @signature `Ld/d;.b:(Ljava/lang/String;)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.c` `c`() @signature `Ld/d;.c:()Ld/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `c`(`byte`[] v0 @kind object) @signature `Ld/d;.c:([B)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `c`(`byte`[] v0 @kind object, `int` v1 , `int` v2 ) @signature `Ld/d;.c:([BII)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `flush`() @signature `Ld/d;.flush:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `g`(`int` v0 ) @signature `Ld/d;.g:(I)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `h`(`int` v0 ) @signature `Ld/d;.h:(I)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `i`(`int` v0 ) @signature `Ld/d;.i:(I)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `k`(`long` v0 ) @signature `Ld/d;.k:(J)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `l`(`long` v0 ) @signature `Ld/d;.l:(J)Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.d` `t`() @signature `Ld/d;.t:()Ld/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
