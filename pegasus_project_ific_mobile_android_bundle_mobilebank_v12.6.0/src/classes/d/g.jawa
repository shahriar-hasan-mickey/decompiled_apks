record `d.g` @kind class @AccessFlag PUBLIC_ABSTRACT extends `d.r` @kind interface {
  `d.r` `d.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`d.g` v1 @kind this, `d.r` v2 @kind object) @signature `Ld/g;.<init>:(Ld/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d5e8c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d5e92.  if v2 != 0 then goto L3d5ea6;
  #L3d5e96.  v2:= new `java.lang.IllegalArgumentException`;
  #L3d5e9a.  v0:= "delegate == null" @kind object;
  #L3d5e9e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d5ea4.  throw v2;
  #L3d5ea6.  v1.`d.g.a` @type ^`d.r` := v2 @kind object;
  #L3d5eaa.  return @kind void;
}
procedure `d.t` `a`(`d.g` v1 @kind this) @signature `Ld/g;.a:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5e0c.  v0:= v1.`d.g.a` @type ^`d.r` @kind object;
  #L3d5e10.  call temp:= `a`(v0) @signature `Ld/r;.a:()Ld/t;` @kind interface;
  #L3d5e16.  v0:= temp @kind object;
  #L3d5e18.  return v0 @kind object;
}
procedure `void` `a_`(`d.g` v1 @kind this, `d.c` v2 @kind object, `long` v3 ) @signature `Ld/g;.a_:(Ld/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5ebc.  v0:= v1.`d.g.a` @type ^`d.r` @kind object;
  #L3d5ec0.  call `a_`(v0, v2, v3) @signature `Ld/r;.a_:(Ld/c;J)V` @kind interface;
  #L3d5ec6.  return @kind void;
}
procedure `void` `close`(`d.g` v1 @kind this) @signature `Ld/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5ed8.  v0:= v1.`d.g.a` @type ^`d.r` @kind object;
  #L3d5edc.  call `close`(v0) @signature `Ld/r;.close:()V` @kind interface;
  #L3d5ee2.  return @kind void;
}
procedure `void` `flush`(`d.g` v1 @kind this) @signature `Ld/g;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5ef4.  v0:= v1.`d.g.a` @type ^`d.r` @kind object;
  #L3d5ef8.  call `flush`(v0) @signature `Ld/r;.flush:()V` @kind interface;
  #L3d5efe.  return @kind void;
}
procedure `java.lang.String` `toString`(`d.g` v2 @kind this) @signature `Ld/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5e2c.  v0:= new `java.lang.StringBuilder`;
  #L3d5e30.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5e36.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d5e3c.  v1:= temp @kind object;
  #L3d5e3e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d5e44.  v1:= temp @kind object;
  #L3d5e46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e4c.  v1:= "(" @kind object;
  #L3d5e50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e56.  v1:= v2.`d.g.a` @type ^`d.r` @kind object;
  #L3d5e5a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5e60.  v1:= temp @kind object;
  #L3d5e62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e68.  v1:= ")" @kind object;
  #L3d5e6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5e78.  v0:= temp @kind object;
  #L3d5e7a.  return v0 @kind object;
}
