record `d.l$3` @kind class @AccessFlag FINAL extends `d.a` @kind class {
  `java.net.Socket` `d.l$3.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.l$3` v0 @kind this, `java.net.Socket` v1 @kind object) @signature `Ld/l$3;.<init>:(Ljava/net/Socket;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d6c0c.  v0.`d.l$3.a` @type ^`java.net.Socket` := v1 @kind object;
  #L3d6c10.  call `<init>`(v0) @signature `Ld/a;.<init>:()V` @kind direct;
  #L3d6c16.  return @kind void;
}
procedure `java.io.IOException` `a`(`d.l$3` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Ld/l$3;.a:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3d6be0.  v0:= new `java.net.SocketTimeoutException`;
  #L3d6be4.  v1:= "timeout" @kind object;
  #L3d6be8.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d6bee.  if v3 == 0 then goto L3d6bf8;
  #L3d6bf2.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3d6bf8.  return v0 @kind object;
}
procedure `void` `a`(`d.l$3` v5 @kind this) @signature `Ld/l$3;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d6c28.  v0:= v5.`d.l$3.a` @type ^`java.net.Socket` @kind object;
  #L3d6c2c.  call `close`(v0) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L3d6c32.  goto L3d6cb0;
  #L3d6c34.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3d6c36.  call temp:= `a`(v0) @signature `Ld/l;.a:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3d6c3c.  v1:= temp;
  #L3d6c3e.  if v1 == 0 then goto L3d6c78;
  #L3d6c42.  v1:= `@@d.l.a` @type ^`java.util.logging.Logger` @kind object;
  #L3d6c46.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3d6c4a.  v3:= new `java.lang.StringBuilder`;
  #L3d6c4e.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6c54.  v4:= "Failed to close timed out socket " @kind object;
  #L3d6c58.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6c5e.  v4:= v5.`d.l$3.a` @type ^`java.net.Socket` @kind object;
  #L3d6c62.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6c68.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6c6e.  v3:= temp @kind object;
  #L3d6c70.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3d6c76.  goto L3d6cb0;
  #L3d6c78.  throw v0;
  #L3d6c7a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L3d6c7c.  v1:= `@@d.l.a` @type ^`java.util.logging.Logger` @kind object;
  #L3d6c80.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L3d6c84.  v3:= new `java.lang.StringBuilder`;
  #L3d6c88.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6c8e.  v4:= "Failed to close timed out socket " @kind object;
  #L3d6c92.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6c98.  v4:= v5.`d.l$3.a` @type ^`java.net.Socket` @kind object;
  #L3d6c9c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6ca2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6ca8.  v3:= temp @kind object;
  #L3d6caa.  call `log`(v1, v2, v3, v0) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3d6cb0.  return @kind void;
  catch `java.lang.Exception` @[L3d6c28..L3d6c32] goto L3d6c7a;
  catch `java.lang.AssertionError` @[L3d6c28..L3d6c32] goto L3d6c34;
}
