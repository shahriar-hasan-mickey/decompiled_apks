record `d.a$1` @kind class @AccessFlag  extends `d.r` @kind interface {
  `d.r` `d.a$1.a` @AccessFlag FINAL_SYNTHETIC;
  `d.a` `d.a$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.a$1` v0 @kind this, `d.a` v1 @kind object, `d.r` v2 @kind object) @signature `Ld/a$1;.<init>:(Ld/a;Ld/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2a24.  v0.`d.a$1.b` @type ^`d.a` := v1 @kind object;
  #L3d2a28.  v0.`d.a$1.a` @type ^`d.r` := v2 @kind object;
  #L3d2a2c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d2a32.  return @kind void;
}
procedure `d.t` `a`(`d.a$1` v1 @kind this) @signature `Ld/a$1;.a:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d29c8.  v0:= v1.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d29cc.  return v0 @kind object;
}
procedure `void` `a_`(`d.a$1` v7 @kind this, `d.c` v8 @kind object, `long` v9 ) @signature `Ld/a$1;.a_:(Ld/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d2a44.  v0:= v8.`d.c.b` @type ^`long` @kind wide;
  #L3d2a48.  v2:= 0L;
  #L3d2a4c.  v4:= v9 @kind wide;
  #L3d2a4e.  call `a`(v0, v2, v4) @signature `Ld/u;.a:(JJJ)V` @kind static;
  #L3d2a54.  v0:= 0L;
  #L3d2a58.  v2:= lcmp(v9, v0);
  #L3d2a5c.  if v2 <= 0 then goto L3d2ae2;
  #L3d2a60.  v2:= v8.`d.c.a` @type ^`d.o` @kind object;
  #L3d2a64.  v3:= 65536L;
  #L3d2a6a.  v5:= lcmp(v0, v3);
  #L3d2a6e.  if v5 >= 0 then goto L3d2a96;
  #L3d2a72.  v3:= v2.`d.o.c` @type ^`int`;
  #L3d2a76.  v4:= v2.`d.o.b` @type ^`int`;
  #L3d2a7a.  v3:= v3 - v4 @kind int;
  #L3d2a7c.  v3:= (`long`) v3 @kind i2l;
  #L3d2a7e.  v5:= v0 + v3 @kind long;
  #L3d2a82.  v0:= lcmp(v5, v9);
  #L3d2a86.  if v0 < 0 then goto L3d2a8e;
  #L3d2a8a.  v0:= v9 @kind wide;
  #L3d2a8c.  goto L3d2a96;
  #L3d2a8e.  v2:= v2.`d.o.f` @type ^`d.o` @kind object;
  #L3d2a92.  v0:= v5 @kind wide;
  #L3d2a94.  goto L3d2a64;
  #L3d2a96.  v2:= 0I;
  #L3d2a98.  v3:= v7.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2a9c.  call `c`(v3) @signature `Ld/a;.c:()V` @kind virtual;
  #L3d2aa2.  v3:= v7.`d.a$1.a` @type ^`d.r` @kind object;
  #L3d2aa6.  call `a_`(v3, v8, v0) @signature `Ld/r;.a_:(Ld/c;J)V` @kind interface;
  #L3d2aac.  v2:= 0I;
  #L3d2aae.  v2:= v9 - v0 @kind long;
  #L3d2ab2.  v9:= 1I;
  #L3d2ab4.  v10:= v7.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2ab8.  call `a`(v10, v9) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2abe.  v9:= v2 @kind wide;
  #L3d2ac0.  goto L3d2a54;
  #L3d2ac2.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2ac4.  goto L3d2ad6;
  #L3d2ac6.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L3d2ac8.  v9:= v7.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2acc.  call temp:= `b`(v9, v8) @signature `Ld/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3d2ad2.  v8:= temp @kind object;
  #L3d2ad4.  throw v8;
  #L3d2ad6.  v9:= v7.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2ada.  call `a`(v9, v2) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2ae0.  throw v8;
  #L3d2ae2.  return @kind void;
  catch `java.io.IOException` @[L3d2aa2..L3d2aac] goto L3d2ac6;
  catch `java.lang.Throwable` @[L3d2aa2..L3d2aac] goto L3d2ac2;
  catch `java.lang.Throwable` @[L3d2ac8..L3d2ad6] goto L3d2ac2;
}
procedure `void` `close`(`d.a$1` v3 @kind this) @signature `Ld/a$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d2b0c.  v0:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b10.  call `c`(v0) @signature `Ld/a;.c:()V` @kind virtual;
  #L3d2b16.  v0:= v3.`d.a$1.a` @type ^`d.r` @kind object;
  #L3d2b1a.  call `close`(v0) @signature `Ld/r;.close:()V` @kind interface;
  #L3d2b20.  v0:= 1I;
  #L3d2b22.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b26.  call `a`(v1, v0) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2b2c.  return @kind void;
  #L3d2b2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2b30.  goto L3d2b42;
  #L3d2b32.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3d2b34.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b38.  call temp:= `b`(v1, v0) @signature `Ld/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3d2b3e.  v0:= temp @kind object;
  #L3d2b40.  throw v0;
  #L3d2b42.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b46.  v2:= 0I;
  #L3d2b48.  call `a`(v1, v2) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2b4e.  throw v0;
  catch `java.io.IOException` @[L3d2b16..L3d2b20] goto L3d2b32;
  catch `java.lang.Throwable` @[L3d2b16..L3d2b20] goto L3d2b2e;
  catch `java.lang.Throwable` @[L3d2b34..L3d2b42] goto L3d2b2e;
}
procedure `void` `flush`(`d.a$1` v3 @kind this) @signature `Ld/a$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d2b78.  v0:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b7c.  call `c`(v0) @signature `Ld/a;.c:()V` @kind virtual;
  #L3d2b82.  v0:= v3.`d.a$1.a` @type ^`d.r` @kind object;
  #L3d2b86.  call `flush`(v0) @signature `Ld/r;.flush:()V` @kind interface;
  #L3d2b8c.  v0:= 1I;
  #L3d2b8e.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2b92.  call `a`(v1, v0) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2b98.  return @kind void;
  #L3d2b9a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2b9c.  goto L3d2bae;
  #L3d2b9e.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3d2ba0.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2ba4.  call temp:= `b`(v1, v0) @signature `Ld/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3d2baa.  v0:= temp @kind object;
  #L3d2bac.  throw v0;
  #L3d2bae.  v1:= v3.`d.a$1.b` @type ^`d.a` @kind object;
  #L3d2bb2.  v2:= 0I;
  #L3d2bb4.  call `a`(v1, v2) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2bba.  throw v0;
  catch `java.io.IOException` @[L3d2b82..L3d2b8c] goto L3d2b9e;
  catch `java.lang.Throwable` @[L3d2b82..L3d2b8c] goto L3d2b9a;
  catch `java.lang.Throwable` @[L3d2ba0..L3d2bae] goto L3d2b9a;
}
procedure `java.lang.String` `toString`(`d.a$1` v2 @kind this) @signature `Ld/a$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d29e0.  v0:= new `java.lang.StringBuilder`;
  #L3d29e4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d29ea.  v1:= "AsyncTimeout.sink(" @kind object;
  #L3d29ee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d29f4.  v1:= v2.`d.a$1.a` @type ^`d.r` @kind object;
  #L3d29f8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d29fe.  v1:= ")" @kind object;
  #L3d2a02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2a08.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d2a0e.  v0:= temp @kind object;
  #L3d2a10.  return v0 @kind object;
}
