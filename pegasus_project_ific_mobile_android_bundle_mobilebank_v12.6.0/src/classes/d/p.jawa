record `d.p` @kind class @AccessFlag FINAL {
}
global `d.o` `@@d.p.a` @AccessFlag STATIC;
global `long` `@@d.p.b` @AccessFlag STATIC;
procedure `void` `<init>`(`d.p` v0 @kind this) @signature `Ld/p;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3d7fd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d7fde.  return @kind void;
}
procedure `d.o` `a`() @signature `Ld/p;.a:()Ld/o;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d7f6c.  v0:= constclass @type ^`d.p` @kind object;
  #L3d7f70.  @monitorenter v0
  #L3d7f72.  v1:= `@@d.p.a` @type ^`d.o` @kind object;
  #L3d7f76.  if v1 == 0 then goto L3d7fa0;
  #L3d7f7a.  v1:= `@@d.p.a` @type ^`d.o` @kind object;
  #L3d7f7e.  v2:= v1.`d.o.f` @type ^`d.o` @kind object;
  #L3d7f82.  `@@d.p.a` @type ^`d.o` := v2 @kind object;
  #L3d7f86.  v2:= 0I;
  #L3d7f88.  v1.`d.o.f` @type ^`d.o` := v2 @kind object;
  #L3d7f8c.  v2:= `@@d.p.b` @type ^`long` @kind wide;
  #L3d7f90.  v4:= 8192L;
  #L3d7f94.  v6:= v2 - v4 @kind long;
  #L3d7f98.  `@@d.p.b` @type ^`long` := v6 @kind wide;
  #L3d7f9c.  @monitorexit v0
  #L3d7f9e.  return v1 @kind object;
  #L3d7fa0.  @monitorexit v0
  #L3d7fa2.  v0:= new `d.o`;
  #L3d7fa6.  call `<init>`(v0) @signature `Ld/o;.<init>:()V` @kind direct;
  #L3d7fac.  return v0 @kind object;
  #L3d7fae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d7fb0.  @monitorexit v0
  #L3d7fb2.  throw v1;
  catch `java.lang.Throwable` @[L3d7f72..L3d7fa2] goto L3d7fae;
  catch `java.lang.Throwable` @[L3d7fb0..L3d7fb2] goto L3d7fae;
}
procedure `void` `a`(`d.o` v8 @kind object) @signature `Ld/p;.a:(Ld/o;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d7ff0.  v0:= v8.`d.o.f` @type ^`d.o` @kind object;
  #L3d7ff4.  if v0 != 0 then goto L3d805e;
  #L3d7ff8.  v0:= v8.`d.o.g` @type ^`d.o` @kind object;
  #L3d7ffc.  if v0 == 0 then goto L3d8002;
  #L3d8000.  goto L3d805e;
  #L3d8002.  v0:= v8.`d.o.d` @type ^`boolean` @kind boolean;
  #L3d8006.  if v0 == 0 then goto L3d800c;
  #L3d800a.  return @kind void;
  #L3d800c.  v0:= constclass @type ^`d.p` @kind object;
  #L3d8010.  @monitorenter v0
  #L3d8012.  v1:= `@@d.p.b` @type ^`long` @kind wide;
  #L3d8016.  v3:= 8192L;
  #L3d801a.  v5:= v1 + v3 @kind long;
  #L3d801e.  v1:= 65536L;
  #L3d8024.  v7:= lcmp(v5, v1);
  #L3d8028.  if v7 <= 0 then goto L3d8030;
  #L3d802c.  @monitorexit v0
  #L3d802e.  return @kind void;
  #L3d8030.  v1:= `@@d.p.b` @type ^`long` @kind wide;
  #L3d8034.  v5:= 0I;
  #L3d8036.  v5:= v1 + v3 @kind long;
  #L3d803a.  `@@d.p.b` @type ^`long` := v5 @kind wide;
  #L3d803e.  v1:= `@@d.p.a` @type ^`d.o` @kind object;
  #L3d8042.  v8.`d.o.f` @type ^`d.o` := v1 @kind object;
  #L3d8046.  v1:= 0I;
  #L3d8048.  v8.`d.o.c` @type ^`int` := v1;
  #L3d804c.  v8.`d.o.b` @type ^`int` := v1;
  #L3d8050.  `@@d.p.a` @type ^`d.o` := v8 @kind object;
  #L3d8054.  @monitorexit v0
  #L3d8056.  return @kind void;
  #L3d8058.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d805a.  @monitorexit v0
  #L3d805c.  throw v8;
  #L3d805e.  v8:= new `java.lang.IllegalArgumentException`;
  #L3d8062.  call `<init>`(v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3d8068.  throw v8;
  catch `java.lang.Throwable` @[L3d8012..L3d805c] goto L3d8058;
}
