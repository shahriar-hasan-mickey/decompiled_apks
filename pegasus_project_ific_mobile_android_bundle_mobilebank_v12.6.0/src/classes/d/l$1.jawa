record `d.l$1` @kind class @AccessFlag FINAL extends `d.r` @kind interface {
  `d.t` `d.l$1.a` @AccessFlag FINAL_SYNTHETIC;
  `java.io.OutputStream` `d.l$1.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.l$1` v0 @kind this, `d.t` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Ld/l$1;.<init>:(Ld/t;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d6968.  v0.`d.l$1.a` @type ^`d.t` := v1 @kind object;
  #L3d696c.  v0.`d.l$1.b` @type ^`java.io.OutputStream` := v2 @kind object;
  #L3d6970.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d6976.  return @kind void;
}
procedure `d.t` `a`(`d.l$1` v1 @kind this) @signature `Ld/l$1;.a:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d690c.  v0:= v1.`d.l$1.a` @type ^`d.t` @kind object;
  #L3d6910.  return v0 @kind object;
}
procedure `void` `a_`(`d.l$1` v7 @kind this, `d.c` v8 @kind object, `long` v9 ) @signature `Ld/l$1;.a_:(Ld/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d6988.  v0:= v8.`d.c.b` @type ^`long` @kind wide;
  #L3d698c.  v2:= 0L;
  #L3d6990.  v4:= v9 @kind wide;
  #L3d6992.  call `a`(v0, v2, v4) @signature `Ld/u;.a:(JJJ)V` @kind static;
  #L3d6998.  v0:= 0L;
  #L3d699c.  v2:= lcmp(v9, v0);
  #L3d69a0.  if v2 <= 0 then goto L3d6a18;
  #L3d69a4.  v0:= v7.`d.l$1.a` @type ^`d.t` @kind object;
  #L3d69a8.  call `g`(v0) @signature `Ld/t;.g:()V` @kind virtual;
  #L3d69ae.  v0:= v8.`d.c.a` @type ^`d.o` @kind object;
  #L3d69b2.  v1:= v0.`d.o.c` @type ^`int`;
  #L3d69b6.  v2:= v0.`d.o.b` @type ^`int`;
  #L3d69ba.  v1:= v1 - v2 @kind int;
  #L3d69bc.  v1:= (`long`) v1 @kind i2l;
  #L3d69be.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3d69c4.  v1:= temp @kind wide;
  #L3d69c6.  v1:= (`int`) v1 @kind l2i;
  #L3d69c8.  v2:= v7.`d.l$1.b` @type ^`java.io.OutputStream` @kind object;
  #L3d69cc.  v3:= v0.`d.o.a` @type ^`byte`[] @kind object;
  #L3d69d0.  v4:= v0.`d.o.b` @type ^`int`;
  #L3d69d4.  call `write`(v2, v3, v4, v1) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3d69da.  v2:= v0.`d.o.b` @type ^`int`;
  #L3d69de.  v2:= v2 + v1 @kind int;
  #L3d69e0.  v0.`d.o.b` @type ^`int` := v2;
  #L3d69e4.  v1:= (`long`) v1 @kind i2l;
  #L3d69e6.  v3:= v9 - v1 @kind long;
  #L3d69ea.  v9:= v8.`d.c.b` @type ^`long` @kind wide;
  #L3d69ee.  v5:= v9 - v1 @kind long;
  #L3d69f2.  v8.`d.c.b` @type ^`long` := v5 @kind wide;
  #L3d69f6.  v9:= v0.`d.o.b` @type ^`int`;
  #L3d69fa.  v10:= v0.`d.o.c` @type ^`int`;
  #L3d69fe.  if v9 != v10 then goto L3d6a14;
  #L3d6a02.  call temp:= `b`(v0) @signature `Ld/o;.b:()Ld/o;` @kind virtual;
  #L3d6a08.  v9:= temp @kind object;
  #L3d6a0a.  v8.`d.c.a` @type ^`d.o` := v9 @kind object;
  #L3d6a0e.  call `a`(v0) @signature `Ld/p;.a:(Ld/o;)V` @kind static;
  #L3d6a14.  v9:= v3 @kind wide;
  #L3d6a16.  goto L3d6998;
  #L3d6a18.  return @kind void;
}
procedure `void` `close`(`d.l$1` v1 @kind this) @signature `Ld/l$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6a2c.  v0:= v1.`d.l$1.b` @type ^`java.io.OutputStream` @kind object;
  #L3d6a30.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3d6a36.  return @kind void;
}
procedure `void` `flush`(`d.l$1` v1 @kind this) @signature `Ld/l$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6a48.  v0:= v1.`d.l$1.b` @type ^`java.io.OutputStream` @kind object;
  #L3d6a4c.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L3d6a52.  return @kind void;
}
procedure `java.lang.String` `toString`(`d.l$1` v2 @kind this) @signature `Ld/l$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6924.  v0:= new `java.lang.StringBuilder`;
  #L3d6928.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d692e.  v1:= "sink(" @kind object;
  #L3d6932.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6938.  v1:= v2.`d.l$1.b` @type ^`java.io.OutputStream` @kind object;
  #L3d693c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6942.  v1:= ")" @kind object;
  #L3d6946.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d694c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6952.  v0:= temp @kind object;
  #L3d6954.  return v0 @kind object;
}
