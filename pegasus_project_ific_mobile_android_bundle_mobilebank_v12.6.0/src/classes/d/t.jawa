record `d.t` @kind class @AccessFlag PUBLIC {
  `boolean` `d.t.a` @AccessFlag PRIVATE;
  `long` `d.t.b` @AccessFlag PRIVATE;
  `long` `d.t.d` @AccessFlag PRIVATE;
}
global `d.t` `@@d.t.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d87f4.  v0:= new `d.t$1`;
  #L3d87f8.  call `<init>`(v0) @signature `Ld/t$1;.<init>:()V` @kind direct;
  #L3d87fe.  `@@d.t.c` @type ^`d.t` := v0 @kind object;
  #L3d8802.  return @kind void;
}
procedure `void` `<init>`(`d.t` v0 @kind this) @signature `Ld/t;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d8814.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d881a.  return @kind void;
}
procedure `d.t` `a`(`d.t` v1 @kind this, `long` v2 ) @signature `Ld/t;.a:(J)Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d86f0.  v0:= 1I;
  #L3d86f2.  v1.`d.t.a` @type ^`boolean` := v0 @kind boolean;
  #L3d86f6.  v1.`d.t.b` @type ^`long` := v2 @kind wide;
  #L3d86fa.  return v1 @kind object;
}
procedure `d.t` `a`(`d.t` v3 @kind this, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Ld/t;.a:(JLjava/util/concurrent/TimeUnit;)Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d870c.  v0:= 0L;
  #L3d8710.  v2:= lcmp(v4, v0);
  #L3d8714.  if v2 >= 0 then goto L3d8746;
  #L3d8718.  v6:= new `java.lang.IllegalArgumentException`;
  #L3d871c.  v0:= new `java.lang.StringBuilder`;
  #L3d8720.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d8726.  v1:= "timeout < 0: " @kind object;
  #L3d872a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8730.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d8736.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d873c.  v4:= temp @kind object;
  #L3d873e.  call `<init>`(v6, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8744.  throw v6;
  #L3d8746.  if v6 != 0 then goto L3d875a;
  #L3d874a.  v4:= new `java.lang.IllegalArgumentException`;
  #L3d874e.  v5:= "unit == null" @kind object;
  #L3d8752.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8758.  throw v4;
  #L3d875a.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L3d8760.  v4:= temp @kind wide;
  #L3d8762.  v3.`d.t.d` @type ^`long` := v4 @kind wide;
  #L3d8766.  return v3 @kind object;
}
procedure `long` `d`(`d.t` v2 @kind this) @signature `Ld/t;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d87ac.  v0:= v2.`d.t.a` @type ^`boolean` @kind boolean;
  #L3d87b0.  if v0 != 0 then goto L3d87c4;
  #L3d87b4.  v0:= new `java.lang.IllegalStateException`;
  #L3d87b8.  v1:= "No deadline" @kind object;
  #L3d87bc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d87c2.  throw v0;
  #L3d87c4.  v0:= v2.`d.t.b` @type ^`long` @kind wide;
  #L3d87c8.  return v0 @kind wide;
}
procedure `d.t` `f`(`d.t` v1 @kind this) @signature `Ld/t;.f:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d8778.  v0:= 0I;
  #L3d877a.  v1.`d.t.a` @type ^`boolean` := v0 @kind boolean;
  #L3d877e.  return v1 @kind object;
}
procedure `void` `g`(`d.t` v6 @kind this) @signature `Ld/t;.g:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d882c.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L3d8832.  v0:= temp;
  #L3d8834.  if v0 == 0 then goto L3d8848;
  #L3d8838.  v0:= new `java.io.InterruptedIOException`;
  #L3d883c.  v1:= "thread interrupted" @kind object;
  #L3d8840.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8846.  throw v0;
  #L3d8848.  v0:= v6.`d.t.a` @type ^`boolean` @kind boolean;
  #L3d884c.  if v0 == 0 then goto L3d887c;
  #L3d8850.  v0:= v6.`d.t.b` @type ^`long` @kind wide;
  #L3d8854.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3d885a.  v2:= temp @kind wide;
  #L3d885c.  v4:= v0 - v2 @kind long;
  #L3d8860.  v0:= 0L;
  #L3d8864.  v2:= lcmp(v4, v0);
  #L3d8868.  if v2 > 0 then goto L3d887c;
  #L3d886c.  v0:= new `java.io.InterruptedIOException`;
  #L3d8870.  v1:= "deadline reached" @kind object;
  #L3d8874.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d887a.  throw v0;
  #L3d887c.  return @kind void;
}
procedure `long` `k_`(`d.t` v2 @kind this) @signature `Ld/t;.k_:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d87dc.  v0:= v2.`d.t.d` @type ^`long` @kind wide;
  #L3d87e0.  return v0 @kind wide;
}
procedure `boolean` `l_`(`d.t` v1 @kind this) @signature `Ld/t;.l_:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d86d8.  v0:= v1.`d.t.a` @type ^`boolean` @kind boolean;
  #L3d86dc.  return v0;
}
procedure `d.t` `m_`(`d.t` v2 @kind this) @signature `Ld/t;.m_:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d8790.  v0:= 0L;
  #L3d8794.  v2.`d.t.d` @type ^`long` := v0 @kind wide;
  #L3d8798.  return v2 @kind object;
}
