record `d.b` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@d.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@d.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d3378.  v0:= 64I;
  #L3d337c.  v1:= new `byte`[v0];
  #L3d3380.  goto L3d339c;
  #L3d3386.  `@@d.b.a` @type ^`byte`[] := v1 @kind object;
  #L3d338a.  v0:= new `byte`[v0];
  #L3d338e.  goto L3d33e4;
  #L3d3394.  `@@d.b.b` @type ^`byte`[] := v0 @kind object;
  #L3d3398.  return @kind void;
  #L3d339a.  
  #L3d339c.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L3d33e3.  goto L3d3386;
  #L3d33e4.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L3d342b.  goto L3d3394;
}
procedure `java.lang.String` `a`(`byte`[] v1 @kind object) @signature `Ld/b;.a:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3d31b0.  v0:= `@@d.b.a` @type ^`byte`[] @kind object;
  #L3d31b4.  call temp:= `a`(v1, v0) @signature `Ld/b;.a:([B[B)Ljava/lang/String;` @kind static;
  #L3d31ba.  v1:= temp @kind object;
  #L3d31bc.  return v1 @kind object;
}
procedure `java.lang.String` `a`(`byte`[] v8 @kind object, `byte`[] v9 @kind object) @signature `Ld/b;.a:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d31d0.  v0:= length @variable v8;
  #L3d31d2.  v0:= v0 + 2;
  #L3d31d6.  v0:= v0 / 3;
  #L3d31da.  v0:= v0 * 4;
  #L3d31de.  v0:= new `byte`[v0];
  #L3d31e2.  v1:= length @variable v8;
  #L3d31e4.  v2:= length @variable v8;
  #L3d31e6.  v2:= v2 %% 3;
  #L3d31ea.  v1:= v1 - v2 @kind int;
  #L3d31ec.  v2:= 0I;
  #L3d31ee.  v3:= 0I;
  #L3d31f0.  if v2 >= v1 then goto L3d327a;
  #L3d31f4.  v4:= v3 + 1;
  #L3d31f8.  v5:= v8[v2] @kind byte;
  #L3d31fc.  v5:= v5 ^& 255;
  #L3d3200.  v5:= v5 ^> 2;
  #L3d3204.  v5:= v9[v5] @kind byte;
  #L3d3208.  v0[v3]:= v5 @kind byte;
  #L3d320c.  v3:= v4 + 1;
  #L3d3210.  v5:= v8[v2] @kind byte;
  #L3d3214.  v5:= v5 ^& 3;
  #L3d3218.  v5:= v5 ^< 4;
  #L3d321c.  v6:= v2 + 1;
  #L3d3220.  v7:= v8[v6] @kind byte;
  #L3d3224.  v7:= v7 ^& 255;
  #L3d3228.  v7:= v7 ^> 4;
  #L3d322c.  v5:= v5 ^| v7 @kind int;
  #L3d322e.  v5:= v9[v5] @kind byte;
  #L3d3232.  v0[v4]:= v5 @kind byte;
  #L3d3236.  v4:= v3 + 1;
  #L3d323a.  v5:= v8[v6] @kind byte;
  #L3d323e.  v5:= v5 ^& 15;
  #L3d3242.  v5:= v5 ^< 2;
  #L3d3246.  v6:= v2 + 2;
  #L3d324a.  v7:= v8[v6] @kind byte;
  #L3d324e.  v7:= v7 ^& 255;
  #L3d3252.  v7:= v7 ^> 6;
  #L3d3256.  v5:= v5 ^| v7 @kind int;
  #L3d3258.  v5:= v9[v5] @kind byte;
  #L3d325c.  v0[v3]:= v5 @kind byte;
  #L3d3260.  v3:= v4 + 1;
  #L3d3264.  v5:= v8[v6] @kind byte;
  #L3d3268.  v5:= v5 ^& 63;
  #L3d326c.  v5:= v9[v5] @kind byte;
  #L3d3270.  v0[v4]:= v5 @kind byte;
  #L3d3274.  v2:= v2 + 3;
  #L3d3278.  goto L3d31f0;
  #L3d327a.  v2:= length @variable v8;
  #L3d327c.  v2:= v2 %% 3;
  #L3d3280.  v4:= 61I;
  #L3d3284.  goto L3d3348;
  #L3d328a.  goto L3d3328;
  #L3d328c.  v2:= v3 + 1;
  #L3d3290.  v5:= v8[v1] @kind byte;
  #L3d3294.  v5:= v5 ^& 255;
  #L3d3298.  v5:= v5 ^> 2;
  #L3d329c.  v5:= v9[v5] @kind byte;
  #L3d32a0.  v0[v3]:= v5 @kind byte;
  #L3d32a4.  v3:= v2 + 1;
  #L3d32a8.  v5:= v8[v1] @kind byte;
  #L3d32ac.  v5:= v5 ^& 3;
  #L3d32b0.  v5:= v5 ^< 4;
  #L3d32b4.  v1:= v1 + 1;
  #L3d32b8.  v6:= v8[v1] @kind byte;
  #L3d32bc.  v6:= v6 ^& 255;
  #L3d32c0.  v6:= v6 ^> 4;
  #L3d32c4.  v5:= v5 ^| v6 @kind int;
  #L3d32c6.  v5:= v9[v5] @kind byte;
  #L3d32ca.  v0[v2]:= v5 @kind byte;
  #L3d32ce.  v2:= v3 + 1;
  #L3d32d2.  v8:= v8[v1] @kind byte;
  #L3d32d6.  v8:= v8 ^& 15;
  #L3d32da.  v8:= v8 ^< 2;
  #L3d32de.  v8:= v9[v8] @kind byte;
  #L3d32e2.  v0[v3]:= v8 @kind byte;
  #L3d32e6.  v0[v2]:= v4 @kind byte;
  #L3d32ea.  goto L3d3328;
  #L3d32ec.  v2:= v3 + 1;
  #L3d32f0.  v5:= v8[v1] @kind byte;
  #L3d32f4.  v5:= v5 ^& 255;
  #L3d32f8.  v5:= v5 ^> 2;
  #L3d32fc.  v5:= v9[v5] @kind byte;
  #L3d3300.  v0[v3]:= v5 @kind byte;
  #L3d3304.  v3:= v2 + 1;
  #L3d3308.  v8:= v8[v1] @kind byte;
  #L3d330c.  v8:= v8 ^& 3;
  #L3d3310.  v8:= v8 ^< 4;
  #L3d3314.  v8:= v9[v8] @kind byte;
  #L3d3318.  v0[v2]:= v8 @kind byte;
  #L3d331c.  v8:= v3 + 1;
  #L3d3320.  v0[v3]:= v4 @kind byte;
  #L3d3324.  v0[v8]:= v4 @kind byte;
  #L3d3328.  v8:= new `java.lang.String`;
  #L3d332c.  v9:= "US-ASCII" @kind object;
  #L3d3330.  call `<init>`(v8, v0, v9) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3d3336.  return v8 @kind object;
  #L3d3338.  v8:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L3d333a.  v9:= new `java.lang.AssertionError`;
  #L3d333e.  call `<init>`(v9, v8) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d3344.  throw v9;
  #L3d3346.  
  #L3d3348.  switch v2
                  | 1 => goto L3d32ec
                  | 2 => goto L3d328c
                  | else => goto L3d328a;
  catch `java.io.UnsupportedEncodingException` @[L3d3328..L3d3336] goto L3d3338;
}
