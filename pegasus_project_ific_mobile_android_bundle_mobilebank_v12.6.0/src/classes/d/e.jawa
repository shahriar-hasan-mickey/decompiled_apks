record `d.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `d.s` @kind interface, `java.nio.channels.ReadableByteChannel` @kind interface {
}
procedure `long` `a`(`byte` v0 ) @signature `Ld/e;.a:(B)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`long` v0 ) @signature `Ld/e;.a:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `a`(`byte`[] v0 @kind object) @signature `Ld/e;.a:([B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.c` `c`() @signature `Ld/e;.c:()Ld/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d.f` `c`(`long` v0 ) @signature `Ld/e;.c:(J)Ld/f;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `e`(`long` v0 ) @signature `Ld/e;.e:(J)Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`() @signature `Ld/e;.e:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte` `g`() @signature `Ld/e;.g:()B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `g`(`long` v0 ) @signature `Ld/e;.g:(J)[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `h`() @signature `Ld/e;.h:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `h`(`long` v0 ) @signature `Ld/e;.h:(J)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `i`() @signature `Ld/e;.i:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `short` `j`() @signature `Ld/e;.j:()S` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `k`() @signature `Ld/e;.k:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `l`() @signature `Ld/e;.l:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `o`() @signature `Ld/e;.o:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `p`() @signature `Ld/e;.p:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
