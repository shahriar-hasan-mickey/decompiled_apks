record `d.a$2` @kind class @AccessFlag  extends `d.s` @kind interface {
  `d.s` `d.a$2.a` @AccessFlag FINAL_SYNTHETIC;
  `d.a` `d.a$2.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`d.a$2` v0 @kind this, `d.a` v1 @kind object, `d.s` v2 @kind object) @signature `Ld/a$2;.<init>:(Ld/a;Ld/s;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2cb0.  v0.`d.a$2.b` @type ^`d.a` := v1 @kind object;
  #L3d2cb4.  v0.`d.a$2.a` @type ^`d.s` := v2 @kind object;
  #L3d2cb8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d2cbe.  return @kind void;
}
procedure `long` `a`(`d.a$2` v1 @kind this, `d.c` v2 @kind object, `long` v3 ) @signature `Ld/a$2;.a:(Ld/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2c40.  v0:= v1.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2c44.  call `c`(v0) @signature `Ld/a;.c:()V` @kind virtual;
  #L3d2c4a.  v0:= v1.`d.a$2.a` @type ^`d.s` @kind object;
  #L3d2c4e.  call temp:= `a`(v0, v2, v3) @signature `Ld/s;.a:(Ld/c;J)J` @kind interface;
  #L3d2c54.  v2:= temp @kind wide;
  #L3d2c56.  v4:= 1I;
  #L3d2c58.  v0:= v1.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2c5c.  call `a`(v0, v4) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2c62.  return v2 @kind wide;
  #L3d2c64.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2c66.  goto L3d2c78;
  #L3d2c68.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L3d2c6a.  v3:= v1.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2c6e.  call temp:= `b`(v3, v2) @signature `Ld/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3d2c74.  v2:= temp @kind object;
  #L3d2c76.  throw v2;
  #L3d2c78.  v3:= v1.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2c7c.  v4:= 0I;
  #L3d2c7e.  call `a`(v3, v4) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2c84.  throw v2;
  catch `java.io.IOException` @[L3d2c4a..L3d2c56] goto L3d2c68;
  catch `java.lang.Throwable` @[L3d2c4a..L3d2c56] goto L3d2c64;
  catch `java.lang.Throwable` @[L3d2c6a..L3d2c78] goto L3d2c64;
}
procedure `d.t` `a`(`d.a$2` v1 @kind this) @signature `Ld/a$2;.a:()Ld/t;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2be4.  v0:= v1.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2be8.  return v0 @kind object;
}
procedure `void` `close`(`d.a$2` v3 @kind this) @signature `Ld/a$2;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d2cd0.  v0:= v3.`d.a$2.a` @type ^`d.s` @kind object;
  #L3d2cd4.  call `close`(v0) @signature `Ld/s;.close:()V` @kind interface;
  #L3d2cda.  v0:= 1I;
  #L3d2cdc.  v1:= v3.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2ce0.  call `a`(v1, v0) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2ce6.  return @kind void;
  #L3d2ce8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2cea.  goto L3d2cfc;
  #L3d2cec.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3d2cee.  v1:= v3.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2cf2.  call temp:= `b`(v1, v0) @signature `Ld/a;.b:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L3d2cf8.  v0:= temp @kind object;
  #L3d2cfa.  throw v0;
  #L3d2cfc.  v1:= v3.`d.a$2.b` @type ^`d.a` @kind object;
  #L3d2d00.  v2:= 0I;
  #L3d2d02.  call `a`(v1, v2) @signature `Ld/a;.a:(Z)V` @kind virtual;
  #L3d2d08.  throw v0;
  catch `java.io.IOException` @[L3d2cd0..L3d2cda] goto L3d2cec;
  catch `java.lang.Throwable` @[L3d2cd0..L3d2cda] goto L3d2ce8;
  catch `java.lang.Throwable` @[L3d2cee..L3d2cfc] goto L3d2ce8;
}
procedure `java.lang.String` `toString`(`d.a$2` v2 @kind this) @signature `Ld/a$2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d2bfc.  v0:= new `java.lang.StringBuilder`;
  #L3d2c00.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d2c06.  v1:= "AsyncTimeout.source(" @kind object;
  #L3d2c0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2c10.  v1:= v2.`d.a$2.a` @type ^`d.s` @kind object;
  #L3d2c14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2c1a.  v1:= ")" @kind object;
  #L3d2c1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2c24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d2c2a.  v0:= temp @kind object;
  #L3d2c2c.  return v0 @kind object;
}
