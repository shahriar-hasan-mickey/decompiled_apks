record `org.a.a.a.a.a` @kind class @AccessFlag PUBLIC {
  `int` `org.a.a.a.a.a.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.a.a.a.a.a` v1 @kind this) @signature `Lorg/a/a/a/a/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e7028.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e702e.  v0:= 0I;
  #L3e7030.  v1.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e7034.  return @kind void;
}
procedure `void` `b`(`org.a.a.a.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lorg/a/a/a/a/a;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e7048.  v0:= instanceof @variable v2 @type ^`long`[] @kind boolean;
  #L3e704c.  if v0 == 0 then goto L3e7060;
  #L3e7050.  v2:= (`long`[]) v2 @kind object;
  #L3e7054.  v3:= (`long`[]) v3 @kind object;
  #L3e7058.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([J[J)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e705e.  goto L3e7116;
  #L3e7060.  v0:= instanceof @variable v2 @type ^`int`[] @kind boolean;
  #L3e7064.  if v0 == 0 then goto L3e7078;
  #L3e7068.  v2:= (`int`[]) v2 @kind object;
  #L3e706c.  v3:= (`int`[]) v3 @kind object;
  #L3e7070.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([I[I)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e7076.  goto L3e7116;
  #L3e7078.  v0:= instanceof @variable v2 @type ^`short`[] @kind boolean;
  #L3e707c.  if v0 == 0 then goto L3e7090;
  #L3e7080.  v2:= (`short`[]) v2 @kind object;
  #L3e7084.  v3:= (`short`[]) v3 @kind object;
  #L3e7088.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([S[S)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e708e.  goto L3e7116;
  #L3e7090.  v0:= instanceof @variable v2 @type ^`char`[] @kind boolean;
  #L3e7094.  if v0 == 0 then goto L3e70a8;
  #L3e7098.  v2:= (`char`[]) v2 @kind object;
  #L3e709c.  v3:= (`char`[]) v3 @kind object;
  #L3e70a0.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([C[C)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e70a6.  goto L3e7116;
  #L3e70a8.  v0:= instanceof @variable v2 @type ^`byte`[] @kind boolean;
  #L3e70ac.  if v0 == 0 then goto L3e70c0;
  #L3e70b0.  v2:= (`byte`[]) v2 @kind object;
  #L3e70b4.  v3:= (`byte`[]) v3 @kind object;
  #L3e70b8.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([B[B)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e70be.  goto L3e7116;
  #L3e70c0.  v0:= instanceof @variable v2 @type ^`double`[] @kind boolean;
  #L3e70c4.  if v0 == 0 then goto L3e70d8;
  #L3e70c8.  v2:= (`double`[]) v2 @kind object;
  #L3e70cc.  v3:= (`double`[]) v3 @kind object;
  #L3e70d0.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([D[D)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e70d6.  goto L3e7116;
  #L3e70d8.  v0:= instanceof @variable v2 @type ^`float`[] @kind boolean;
  #L3e70dc.  if v0 == 0 then goto L3e70f0;
  #L3e70e0.  v2:= (`float`[]) v2 @kind object;
  #L3e70e4.  v3:= (`float`[]) v3 @kind object;
  #L3e70e8.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([F[F)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e70ee.  goto L3e7116;
  #L3e70f0.  v0:= instanceof @variable v2 @type ^`boolean`[] @kind boolean;
  #L3e70f4.  if v0 == 0 then goto L3e7108;
  #L3e70f8.  v2:= (`boolean`[]) v2 @kind object;
  #L3e70fc.  v3:= (`boolean`[]) v3 @kind object;
  #L3e7100.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/a;.a:([Z[Z)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e7106.  goto L3e7116;
  #L3e7108.  v2:= (`java.lang.Object`[]) v2 @kind object;
  #L3e710c.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L3e7110.  call temp:= `a`(v1, v2, v3, v4) @signature `Lorg/a/a/a/a/a;.a:([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e7116.  return @kind void;
}
procedure `int` `a`(`org.a.a.a.a.a` v1 @kind this) @signature `Lorg/a/a/a/a/a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e69b4.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e69b8.  return v0;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `byte` v2 , `byte` v3 ) @signature `Lorg/a/a/a/a/a;.a:(BB)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6a78.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6a7c.  if v0 == 0 then goto L3e6a82;
  #L3e6a80.  return v1 @kind object;
  #L3e6a82.  if v2 >= v3 then goto L3e6a8a;
  #L3e6a86.  v2:= -1I;
  #L3e6a88.  goto L3e6a94;
  #L3e6a8a.  if v2 <= v3 then goto L3e6a92;
  #L3e6a8e.  v2:= 1I;
  #L3e6a90.  goto L3e6a94;
  #L3e6a92.  v2:= 0I;
  #L3e6a94.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6a98.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `char` v2 , `char` v3 ) @signature `Lorg/a/a/a/a/a;.a:(CC)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6b24.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6b28.  if v0 == 0 then goto L3e6b2e;
  #L3e6b2c.  return v1 @kind object;
  #L3e6b2e.  if v2 >= v3 then goto L3e6b36;
  #L3e6b32.  v2:= -1I;
  #L3e6b34.  goto L3e6b40;
  #L3e6b36.  if v2 <= v3 then goto L3e6b3e;
  #L3e6b3a.  v2:= 1I;
  #L3e6b3c.  goto L3e6b40;
  #L3e6b3e.  v2:= 0I;
  #L3e6b40.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6b44.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `double` v2 , `double` v4 ) @signature `Lorg/a/a/a/a/a;.a:(DD)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6bd0.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6bd4.  if v0 == 0 then goto L3e6bda;
  #L3e6bd8.  return v1 @kind object;
  #L3e6bda.  call temp:= `compare`(v2, v4) @signature `Ljava/lang/Double;.compare:(DD)I` @kind static;
  #L3e6be0.  v2:= temp;
  #L3e6be2.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6be6.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lorg/a/a/a/a/a;.a:(FF)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6c70.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6c74.  if v0 == 0 then goto L3e6c7a;
  #L3e6c78.  return v1 @kind object;
  #L3e6c7a.  call temp:= `compare`(v2, v3) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L3e6c80.  v2:= temp;
  #L3e6c82.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6c86.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/a/a/a/a/a;.a:(II)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6d10.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6d14.  if v0 == 0 then goto L3e6d1a;
  #L3e6d18.  return v1 @kind object;
  #L3e6d1a.  if v2 >= v3 then goto L3e6d22;
  #L3e6d1e.  v2:= -1I;
  #L3e6d20.  goto L3e6d2c;
  #L3e6d22.  if v2 <= v3 then goto L3e6d2a;
  #L3e6d26.  v2:= 1I;
  #L3e6d28.  goto L3e6d2c;
  #L3e6d2a.  v2:= 0I;
  #L3e6d2c.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6d30.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/a/a/a/a/a;.a:(JJ)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6ec8.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ecc.  if v0 == 0 then goto L3e6ed2;
  #L3e6ed0.  return v1 @kind object;
  #L3e6ed2.  v0:= lcmp(v2, v4);
  #L3e6ed6.  if v0 >= 0 then goto L3e6ede;
  #L3e6eda.  v2:= -1I;
  #L3e6edc.  goto L3e6eec;
  #L3e6ede.  v0:= lcmp(v2, v4);
  #L3e6ee2.  if v0 <= 0 then goto L3e6eea;
  #L3e6ee6.  v2:= 1I;
  #L3e6ee8.  goto L3e6eec;
  #L3e6eea.  v2:= 0I;
  #L3e6eec.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6ef0.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6dbc.  v0:= 0I;
  #L3e6dbe.  call temp:= `a`(v1, v2, v3, v0) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6dc4.  v2:= temp @kind object;
  #L3e6dc6.  return v2 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.util.Comparator` v4 @kind object) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6dd8.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ddc.  if v0 == 0 then goto L3e6de2;
  #L3e6de0.  return v1 @kind object;
  #L3e6de2.  if v2 != v3 then goto L3e6de8;
  #L3e6de6.  return v1 @kind object;
  #L3e6de8.  if v2 != 0 then goto L3e6df4;
  #L3e6dec.  v2:= -1I;
  #L3e6dee.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6df2.  return v1 @kind object;
  #L3e6df4.  if v3 != 0 then goto L3e6e00;
  #L3e6df8.  v2:= 1I;
  #L3e6dfa.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6dfe.  return v1 @kind object;
  #L3e6e00.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e6e06.  v0:= temp @kind object;
  #L3e6e08.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3e6e0e.  v0:= temp;
  #L3e6e10.  if v0 == 0 then goto L3e6e1c;
  #L3e6e14.  call `b`(v1, v2, v3, v4) @signature `Lorg/a/a/a/a/a;.b:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)V` @kind direct;
  #L3e6e1a.  goto L3e6e3e;
  #L3e6e1c.  if v4 != 0 then goto L3e6e32;
  #L3e6e20.  v2:= (`java.lang.Comparable`) v2 @kind object;
  #L3e6e24.  call temp:= `compareTo`(v2, v3) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L3e6e2a.  v2:= temp;
  #L3e6e2c.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6e30.  goto L3e6e3e;
  #L3e6e32.  call temp:= `compare`(v4, v2, v3) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L3e6e38.  v2:= temp;
  #L3e6e3a.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6e3e.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `short` v2 , `short` v3 ) @signature `Lorg/a/a/a/a/a;.a:(SS)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6f7c.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6f80.  if v0 == 0 then goto L3e6f86;
  #L3e6f84.  return v1 @kind object;
  #L3e6f86.  if v2 >= v3 then goto L3e6f8e;
  #L3e6f8a.  v2:= -1I;
  #L3e6f8c.  goto L3e6f98;
  #L3e6f8e.  if v2 <= v3 then goto L3e6f96;
  #L3e6f92.  v2:= 1I;
  #L3e6f94.  goto L3e6f98;
  #L3e6f96.  v2:= 0I;
  #L3e6f98.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e6f9c.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Lorg/a/a/a/a/a;.a:(ZZ)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e69cc.  v0:= v1.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e69d0.  if v0 == 0 then goto L3e69d6;
  #L3e69d4.  return v1 @kind object;
  #L3e69d6.  if v2 != v3 then goto L3e69dc;
  #L3e69da.  return v1 @kind object;
  #L3e69dc.  if v2 != 0 then goto L3e69e8;
  #L3e69e0.  v2:= -1I;
  #L3e69e2.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e69e6.  goto L3e69ee;
  #L3e69e8.  v2:= 1I;
  #L3e69ea.  v1.`org.a.a.a.a.a.a` @type ^`int` := v2;
  #L3e69ee.  return v1 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([B[B)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6aac.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ab0.  if v0 == 0 then goto L3e6ab6;
  #L3e6ab4.  return v4 @kind object;
  #L3e6ab6.  if v5 != v6 then goto L3e6abc;
  #L3e6aba.  return v4 @kind object;
  #L3e6abc.  v0:= -1I;
  #L3e6abe.  if v5 != 0 then goto L3e6ac8;
  #L3e6ac2.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6ac6.  return v4 @kind object;
  #L3e6ac8.  v1:= 1I;
  #L3e6aca.  if v6 != 0 then goto L3e6ad4;
  #L3e6ace.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6ad2.  return v4 @kind object;
  #L3e6ad4.  v2:= length @variable v5;
  #L3e6ad6.  v3:= length @variable v6;
  #L3e6ad8.  if v2 == v3 then goto L3e6aee;
  #L3e6adc.  v5:= length @variable v5;
  #L3e6ade.  v6:= length @variable v6;
  #L3e6ae0.  if v5 >= v6 then goto L3e6ae6;
  #L3e6ae4.  goto L3e6ae8;
  #L3e6ae6.  v0:= 1I;
  #L3e6ae8.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6aec.  return v4 @kind object;
  #L3e6aee.  v0:= 0I;
  #L3e6af0.  v1:= length @variable v5;
  #L3e6af2.  if v0 >= v1 then goto L3e6b12;
  #L3e6af6.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6afa.  if v1 != 0 then goto L3e6b12;
  #L3e6afe.  v1:= v5[v0] @kind byte;
  #L3e6b02.  v2:= v6[v0] @kind byte;
  #L3e6b06.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(BB)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6b0c.  v0:= v0 + 1;
  #L3e6b10.  goto L3e6af0;
  #L3e6b12.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `char`[] v5 @kind object, `char`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([C[C)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6b58.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6b5c.  if v0 == 0 then goto L3e6b62;
  #L3e6b60.  return v4 @kind object;
  #L3e6b62.  if v5 != v6 then goto L3e6b68;
  #L3e6b66.  return v4 @kind object;
  #L3e6b68.  v0:= -1I;
  #L3e6b6a.  if v5 != 0 then goto L3e6b74;
  #L3e6b6e.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6b72.  return v4 @kind object;
  #L3e6b74.  v1:= 1I;
  #L3e6b76.  if v6 != 0 then goto L3e6b80;
  #L3e6b7a.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6b7e.  return v4 @kind object;
  #L3e6b80.  v2:= length @variable v5;
  #L3e6b82.  v3:= length @variable v6;
  #L3e6b84.  if v2 == v3 then goto L3e6b9a;
  #L3e6b88.  v5:= length @variable v5;
  #L3e6b8a.  v6:= length @variable v6;
  #L3e6b8c.  if v5 >= v6 then goto L3e6b92;
  #L3e6b90.  goto L3e6b94;
  #L3e6b92.  v0:= 1I;
  #L3e6b94.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6b98.  return v4 @kind object;
  #L3e6b9a.  v0:= 0I;
  #L3e6b9c.  v1:= length @variable v5;
  #L3e6b9e.  if v0 >= v1 then goto L3e6bbe;
  #L3e6ba2.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ba6.  if v1 != 0 then goto L3e6bbe;
  #L3e6baa.  v1:= v5[v0] @kind char;
  #L3e6bae.  v2:= v6[v0] @kind char;
  #L3e6bb2.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(CC)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6bb8.  v0:= v0 + 1;
  #L3e6bbc.  goto L3e6b9c;
  #L3e6bbe.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v5 @kind this, `double`[] v6 @kind object, `double`[] v7 @kind object) @signature `Lorg/a/a/a/a/a;.a:([D[D)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e6bf8.  v0:= v5.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6bfc.  if v0 == 0 then goto L3e6c02;
  #L3e6c00.  return v5 @kind object;
  #L3e6c02.  if v6 != v7 then goto L3e6c08;
  #L3e6c06.  return v5 @kind object;
  #L3e6c08.  v0:= -1I;
  #L3e6c0a.  if v6 != 0 then goto L3e6c14;
  #L3e6c0e.  v5.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6c12.  return v5 @kind object;
  #L3e6c14.  v1:= 1I;
  #L3e6c16.  if v7 != 0 then goto L3e6c20;
  #L3e6c1a.  v5.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6c1e.  return v5 @kind object;
  #L3e6c20.  v2:= length @variable v6;
  #L3e6c22.  v3:= length @variable v7;
  #L3e6c24.  if v2 == v3 then goto L3e6c3a;
  #L3e6c28.  v6:= length @variable v6;
  #L3e6c2a.  v7:= length @variable v7;
  #L3e6c2c.  if v6 >= v7 then goto L3e6c32;
  #L3e6c30.  goto L3e6c34;
  #L3e6c32.  v0:= 1I;
  #L3e6c34.  v5.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6c38.  return v5 @kind object;
  #L3e6c3a.  v0:= 0I;
  #L3e6c3c.  v1:= length @variable v6;
  #L3e6c3e.  if v0 >= v1 then goto L3e6c5e;
  #L3e6c42.  v1:= v5.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6c46.  if v1 != 0 then goto L3e6c5e;
  #L3e6c4a.  v1:= v6[v0] @kind wide;
  #L3e6c4e.  v3:= v7[v0] @kind wide;
  #L3e6c52.  call temp:= `a`(v5, v1, v3) @signature `Lorg/a/a/a/a/a;.a:(DD)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6c58.  v0:= v0 + 1;
  #L3e6c5c.  goto L3e6c3c;
  #L3e6c5e.  return v5 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `float`[] v5 @kind object, `float`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([F[F)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6c98.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6c9c.  if v0 == 0 then goto L3e6ca2;
  #L3e6ca0.  return v4 @kind object;
  #L3e6ca2.  if v5 != v6 then goto L3e6ca8;
  #L3e6ca6.  return v4 @kind object;
  #L3e6ca8.  v0:= -1I;
  #L3e6caa.  if v5 != 0 then goto L3e6cb4;
  #L3e6cae.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6cb2.  return v4 @kind object;
  #L3e6cb4.  v1:= 1I;
  #L3e6cb6.  if v6 != 0 then goto L3e6cc0;
  #L3e6cba.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6cbe.  return v4 @kind object;
  #L3e6cc0.  v2:= length @variable v5;
  #L3e6cc2.  v3:= length @variable v6;
  #L3e6cc4.  if v2 == v3 then goto L3e6cda;
  #L3e6cc8.  v5:= length @variable v5;
  #L3e6cca.  v6:= length @variable v6;
  #L3e6ccc.  if v5 >= v6 then goto L3e6cd2;
  #L3e6cd0.  goto L3e6cd4;
  #L3e6cd2.  v0:= 1I;
  #L3e6cd4.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6cd8.  return v4 @kind object;
  #L3e6cda.  v0:= 0I;
  #L3e6cdc.  v1:= length @variable v5;
  #L3e6cde.  if v0 >= v1 then goto L3e6cfe;
  #L3e6ce2.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ce6.  if v1 != 0 then goto L3e6cfe;
  #L3e6cea.  v1:= v5[v0];
  #L3e6cee.  v2:= v6[v0];
  #L3e6cf2.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(FF)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6cf8.  v0:= v0 + 1;
  #L3e6cfc.  goto L3e6cdc;
  #L3e6cfe.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `int`[] v5 @kind object, `int`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([I[I)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6d44.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6d48.  if v0 == 0 then goto L3e6d4e;
  #L3e6d4c.  return v4 @kind object;
  #L3e6d4e.  if v5 != v6 then goto L3e6d54;
  #L3e6d52.  return v4 @kind object;
  #L3e6d54.  v0:= -1I;
  #L3e6d56.  if v5 != 0 then goto L3e6d60;
  #L3e6d5a.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6d5e.  return v4 @kind object;
  #L3e6d60.  v1:= 1I;
  #L3e6d62.  if v6 != 0 then goto L3e6d6c;
  #L3e6d66.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6d6a.  return v4 @kind object;
  #L3e6d6c.  v2:= length @variable v5;
  #L3e6d6e.  v3:= length @variable v6;
  #L3e6d70.  if v2 == v3 then goto L3e6d86;
  #L3e6d74.  v5:= length @variable v5;
  #L3e6d76.  v6:= length @variable v6;
  #L3e6d78.  if v5 >= v6 then goto L3e6d7e;
  #L3e6d7c.  goto L3e6d80;
  #L3e6d7e.  v0:= 1I;
  #L3e6d80.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6d84.  return v4 @kind object;
  #L3e6d86.  v0:= 0I;
  #L3e6d88.  v1:= length @variable v5;
  #L3e6d8a.  if v0 >= v1 then goto L3e6daa;
  #L3e6d8e.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6d92.  if v1 != 0 then goto L3e6daa;
  #L3e6d96.  v1:= v5[v0];
  #L3e6d9a.  v2:= v6[v0];
  #L3e6d9e.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(II)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6da4.  v0:= v0 + 1;
  #L3e6da8.  goto L3e6d88;
  #L3e6daa.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v5 @kind this, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/a/a/a/a/a;.a:([J[J)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e6f04.  v0:= v5.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6f08.  if v0 == 0 then goto L3e6f0e;
  #L3e6f0c.  return v5 @kind object;
  #L3e6f0e.  if v6 != v7 then goto L3e6f14;
  #L3e6f12.  return v5 @kind object;
  #L3e6f14.  v0:= -1I;
  #L3e6f16.  if v6 != 0 then goto L3e6f20;
  #L3e6f1a.  v5.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6f1e.  return v5 @kind object;
  #L3e6f20.  v1:= 1I;
  #L3e6f22.  if v7 != 0 then goto L3e6f2c;
  #L3e6f26.  v5.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6f2a.  return v5 @kind object;
  #L3e6f2c.  v2:= length @variable v6;
  #L3e6f2e.  v3:= length @variable v7;
  #L3e6f30.  if v2 == v3 then goto L3e6f46;
  #L3e6f34.  v6:= length @variable v6;
  #L3e6f36.  v7:= length @variable v7;
  #L3e6f38.  if v6 >= v7 then goto L3e6f3e;
  #L3e6f3c.  goto L3e6f40;
  #L3e6f3e.  v0:= 1I;
  #L3e6f40.  v5.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6f44.  return v5 @kind object;
  #L3e6f46.  v0:= 0I;
  #L3e6f48.  v1:= length @variable v6;
  #L3e6f4a.  if v0 >= v1 then goto L3e6f6a;
  #L3e6f4e.  v1:= v5.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6f52.  if v1 != 0 then goto L3e6f6a;
  #L3e6f56.  v1:= v6[v0] @kind wide;
  #L3e6f5a.  v3:= v7[v0] @kind wide;
  #L3e6f5e.  call temp:= `a`(v5, v1, v3) @signature `Lorg/a/a/a/a/a;.a:(JJ)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6f64.  v0:= v0 + 1;
  #L3e6f68.  goto L3e6f48;
  #L3e6f6a.  return v5 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `java.lang.Object`[] v5 @kind object, `java.lang.Object`[] v6 @kind object, `java.util.Comparator` v7 @kind object) @signature `Lorg/a/a/a/a/a;.a:([Ljava/lang/Object;[Ljava/lang/Object;Ljava/util/Comparator;)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6e50.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6e54.  if v0 == 0 then goto L3e6e5a;
  #L3e6e58.  return v4 @kind object;
  #L3e6e5a.  if v5 != v6 then goto L3e6e60;
  #L3e6e5e.  return v4 @kind object;
  #L3e6e60.  v0:= -1I;
  #L3e6e62.  if v5 != 0 then goto L3e6e6c;
  #L3e6e66.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6e6a.  return v4 @kind object;
  #L3e6e6c.  v1:= 1I;
  #L3e6e6e.  if v6 != 0 then goto L3e6e78;
  #L3e6e72.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6e76.  return v4 @kind object;
  #L3e6e78.  v2:= length @variable v5;
  #L3e6e7a.  v3:= length @variable v6;
  #L3e6e7c.  if v2 == v3 then goto L3e6e92;
  #L3e6e80.  v5:= length @variable v5;
  #L3e6e82.  v6:= length @variable v6;
  #L3e6e84.  if v5 >= v6 then goto L3e6e8a;
  #L3e6e88.  goto L3e6e8c;
  #L3e6e8a.  v0:= 1I;
  #L3e6e8c.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6e90.  return v4 @kind object;
  #L3e6e92.  v0:= 0I;
  #L3e6e94.  v1:= length @variable v5;
  #L3e6e96.  if v0 >= v1 then goto L3e6eb6;
  #L3e6e9a.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6e9e.  if v1 != 0 then goto L3e6eb6;
  #L3e6ea2.  v1:= v5[v0] @kind object;
  #L3e6ea6.  v2:= v6[v0] @kind object;
  #L3e6eaa.  call temp:= `a`(v4, v1, v2, v7) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/util/Comparator;)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6eb0.  v0:= v0 + 1;
  #L3e6eb4.  goto L3e6e94;
  #L3e6eb6.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `short`[] v5 @kind object, `short`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([S[S)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6fb0.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6fb4.  if v0 == 0 then goto L3e6fba;
  #L3e6fb8.  return v4 @kind object;
  #L3e6fba.  if v5 != v6 then goto L3e6fc0;
  #L3e6fbe.  return v4 @kind object;
  #L3e6fc0.  v0:= -1I;
  #L3e6fc2.  if v5 != 0 then goto L3e6fcc;
  #L3e6fc6.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6fca.  return v4 @kind object;
  #L3e6fcc.  v1:= 1I;
  #L3e6fce.  if v6 != 0 then goto L3e6fd8;
  #L3e6fd2.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6fd6.  return v4 @kind object;
  #L3e6fd8.  v2:= length @variable v5;
  #L3e6fda.  v3:= length @variable v6;
  #L3e6fdc.  if v2 == v3 then goto L3e6ff2;
  #L3e6fe0.  v5:= length @variable v5;
  #L3e6fe2.  v6:= length @variable v6;
  #L3e6fe4.  if v5 >= v6 then goto L3e6fea;
  #L3e6fe8.  goto L3e6fec;
  #L3e6fea.  v0:= 1I;
  #L3e6fec.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6ff0.  return v4 @kind object;
  #L3e6ff2.  v0:= 0I;
  #L3e6ff4.  v1:= length @variable v5;
  #L3e6ff6.  if v0 >= v1 then goto L3e7016;
  #L3e6ffa.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6ffe.  if v1 != 0 then goto L3e7016;
  #L3e7002.  v1:= v5[v0] @kind short;
  #L3e7006.  v2:= v6[v0] @kind short;
  #L3e700a.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(SS)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e7010.  v0:= v0 + 1;
  #L3e7014.  goto L3e6ff4;
  #L3e7016.  return v4 @kind object;
}
procedure `org.a.a.a.a.a` `a`(`org.a.a.a.a.a` v4 @kind this, `boolean`[] v5 @kind object, `boolean`[] v6 @kind object) @signature `Lorg/a/a/a/a/a;.a:([Z[Z)Lorg/a/a/a/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6a00.  v0:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6a04.  if v0 == 0 then goto L3e6a0a;
  #L3e6a08.  return v4 @kind object;
  #L3e6a0a.  if v5 != v6 then goto L3e6a10;
  #L3e6a0e.  return v4 @kind object;
  #L3e6a10.  v0:= -1I;
  #L3e6a12.  if v5 != 0 then goto L3e6a1c;
  #L3e6a16.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6a1a.  return v4 @kind object;
  #L3e6a1c.  v1:= 1I;
  #L3e6a1e.  if v6 != 0 then goto L3e6a28;
  #L3e6a22.  v4.`org.a.a.a.a.a.a` @type ^`int` := v1;
  #L3e6a26.  return v4 @kind object;
  #L3e6a28.  v2:= length @variable v5;
  #L3e6a2a.  v3:= length @variable v6;
  #L3e6a2c.  if v2 == v3 then goto L3e6a42;
  #L3e6a30.  v5:= length @variable v5;
  #L3e6a32.  v6:= length @variable v6;
  #L3e6a34.  if v5 >= v6 then goto L3e6a3a;
  #L3e6a38.  goto L3e6a3c;
  #L3e6a3a.  v0:= 1I;
  #L3e6a3c.  v4.`org.a.a.a.a.a.a` @type ^`int` := v0;
  #L3e6a40.  return v4 @kind object;
  #L3e6a42.  v0:= 0I;
  #L3e6a44.  v1:= length @variable v5;
  #L3e6a46.  if v0 >= v1 then goto L3e6a66;
  #L3e6a4a.  v1:= v4.`org.a.a.a.a.a.a` @type ^`int`;
  #L3e6a4e.  if v1 != 0 then goto L3e6a66;
  #L3e6a52.  v1:= v5[v0] @kind boolean;
  #L3e6a56.  v2:= v6[v0] @kind boolean;
  #L3e6a5a.  call temp:= `a`(v4, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(ZZ)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e6a60.  v0:= v0 + 1;
  #L3e6a64.  goto L3e6a44;
  #L3e6a66.  return v4 @kind object;
}
