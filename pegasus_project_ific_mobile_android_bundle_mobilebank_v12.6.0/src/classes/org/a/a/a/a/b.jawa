record `org.a.a.a.a.b` @kind class @AccessFlag PUBLIC {
  `boolean` `org.a.a.a.a.b.b` @AccessFlag PRIVATE;
  `boolean` `org.a.a.a.a.b.c` @AccessFlag PRIVATE;
  `boolean` `org.a.a.a.a.b.d` @AccessFlag PRIVATE;
  `java.lang.Class` `org.a.a.a.a.b.e` @AccessFlag PRIVATE;
  `java.lang.String`[] `org.a.a.a.a.b.f` @AccessFlag PRIVATE;
}
global `java.lang.ThreadLocal` `@@org.a.a.a.a.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/a/a/a/a/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e785c.  v0:= new `java.lang.ThreadLocal`;
  #L3e7860.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L3e7866.  `@@org.a.a.a.a.b.a` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L3e786a.  return @kind void;
}
procedure `void` `<init>`(`org.a.a.a.a.b` v1 @kind this) @signature `Lorg/a/a/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e787c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7882.  v0:= 1I;
  #L3e7884.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v0 @kind boolean;
  #L3e7888.  v0:= 0I;
  #L3e788a.  v1.`org.a.a.a.a.b.c` @type ^`boolean` := v0 @kind boolean;
  #L3e788e.  v1.`org.a.a.a.a.b.d` @type ^`boolean` := v0 @kind boolean;
  #L3e7892.  v0:= 0I;
  #L3e7894.  v1.`org.a.a.a.a.b.e` @type ^`java.lang.Class` := v0 @kind object;
  #L3e7898.  v1.`org.a.a.a.a.b.f` @type ^`java.lang.String`[] := v0 @kind object;
  #L3e789c.  return @kind void;
}
procedure `java.util.Set` `a`() @signature `Lorg/a/a/a/a/b;.a:()Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e719c.  v0:= `@@org.a.a.a.a.b.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L3e71a0.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L3e71a6.  v0:= temp @kind object;
  #L3e71a8.  v0:= (`java.util.Set`) v0 @kind object;
  #L3e71ac.  return v0 @kind object;
}
procedure `org.a.a.a.e.b` `a`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @AccessFlag STATIC {
    temp;
    v0;

  #L3e782c.  v0:= new `org.a.a.a.a.d`;
  #L3e7830.  call `<init>`(v0, v1) @signature `Lorg/a/a/a/a/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e7836.  v1:= new `org.a.a.a.a.d`;
  #L3e783a.  call `<init>`(v1, v2) @signature `Lorg/a/a/a/a/d;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3e7840.  call temp:= `b`(v0, v1) @signature `Lorg/a/a/a/e/b;.b:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @kind static;
  #L3e7846.  v1:= temp @kind object;
  #L3e7848.  return v1 @kind object;
}
procedure `void` `a`(`org.a.a.a.a.b` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e78c8.  call temp:= `b`(v5, v6) @signature `Lorg/a/a/a/a/b;.b:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e78ce.  v0:= temp;
  #L3e78d0.  if v0 == 0 then goto L3e78d6;
  #L3e78d4.  return @kind void;
  #L3e78d6.  call `e`(v5, v6) @signature `Lorg/a/a/a/a/b;.e:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3e78dc.  call temp:= `getDeclaredFields`(v7) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L3e78e2.  v7:= temp @kind object;
  #L3e78e4.  v0:= 1I;
  #L3e78e6.  call `setAccessible`(v7, v0) @signature `Ljava/lang/reflect/AccessibleObject;.setAccessible:([Ljava/lang/reflect/AccessibleObject;Z)V` @kind static;
  #L3e78ec.  v0:= 0I;
  #L3e78ee.  v1:= length @variable v7;
  #L3e78f0.  if v0 >= v1 then goto L3e799e;
  #L3e78f4.  v1:= v4.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e78f8.  if v1 == 0 then goto L3e799e;
  #L3e78fc.  v1:= v7[v0] @kind object;
  #L3e7900.  v2:= v4.`org.a.a.a.a.b.f` @type ^`java.lang.String`[] @kind object;
  #L3e7904.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e790a.  v3:= temp @kind object;
  #L3e790c.  call temp:= `b`(v2, v3) @signature `Lorg/a/a/a/a;.b:([Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e7912.  v2:= temp;
  #L3e7914.  if v2 != 0 then goto L3e7998;
  #L3e7918.  call temp:= `getName`(v1) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L3e791e.  v2:= temp @kind object;
  #L3e7920.  v3:= "$" @kind object;
  #L3e7924.  call temp:= `contains`(v2, v3) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L3e792a.  v2:= temp;
  #L3e792c.  if v2 != 0 then goto L3e7998;
  #L3e7930.  v2:= v4.`org.a.a.a.a.b.c` @type ^`boolean` @kind boolean;
  #L3e7934.  if v2 != 0 then goto L3e794c;
  #L3e7938.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3e793e.  v2:= temp;
  #L3e7940.  call temp:= `isTransient`(v2) @signature `Ljava/lang/reflect/Modifier;.isTransient:(I)Z` @kind static;
  #L3e7946.  v2:= temp;
  #L3e7948.  if v2 != 0 then goto L3e7998;
  #L3e794c.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L3e7952.  v2:= temp;
  #L3e7954.  call temp:= `isStatic`(v2) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L3e795a.  v2:= temp;
  #L3e795c.  if v2 != 0 then goto L3e7998;
  #L3e7960.  v2:= constclass @type ^`org.a.a.a.a.c` @kind object;
  #L3e7964.  call temp:= `isAnnotationPresent`(v1, v2) @signature `Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e796a.  v2:= temp;
  #L3e796c.  if v2 != 0 then goto L3e7998;
  #L3e7970.  call temp:= `get`(v1, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e7976.  v2:= temp @kind object;
  #L3e7978.  call temp:= `get`(v1, v6) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e797e.  v1:= temp @kind object;
  #L3e7980.  call temp:= `d`(v4, v2, v1) @signature `Lorg/a/a/a/a/b;.d:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7986.  goto L3e7998;
  #L3e7988.  v7:= new `java.lang.InternalError`;
  #L3e798c.  v0:= "Unexpected IllegalAccessException" @kind object;
  #L3e7990.  call `<init>`(v7, v0) @signature `Ljava/lang/InternalError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e7996.  throw v7;
  #L3e7998.  v0:= v0 + 1;
  #L3e799c.  goto L3e78ee;
  #L3e799e.  call `f`(v5, v6) @signature `Lorg/a/a/a/a/b;.f:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3e79a4.  return @kind void;
  #L3e79a6.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e79a8.  call `f`(v5, v6) @signature `Lorg/a/a/a/a/b;.f:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L3e79ae.  throw v7;
  catch `java.lang.Throwable` @[L3e78d6..L3e796c] goto L3e79a6;
  catch `java.lang.IllegalAccessException` @[L3e7970..L3e7986] goto L3e7988;
  catch `java.lang.Throwable` @[L3e7970..L3e7986] goto L3e79a6;
  catch `java.lang.Throwable` @[L3e7988..L3e7998] goto L3e79a6;
}
procedure `boolean` `b`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/a/a/a/a/b;.b:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3e7140.  call temp:= `a`() @signature `Lorg/a/a/a/a/b;.a:()Ljava/util/Set;` @kind static;
  #L3e7146.  v0:= temp @kind object;
  #L3e7148.  call temp:= `a`(v2, v3) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @kind static;
  #L3e714e.  v2:= temp @kind object;
  #L3e7150.  call temp:= `b`(v2) @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e7156.  v3:= temp @kind object;
  #L3e7158.  call temp:= `a`(v2) @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @kind virtual;
  #L3e715e.  v1:= temp @kind object;
  #L3e7160.  call temp:= `b`(v3, v1) @signature `Lorg/a/a/a/e/b;.b:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @kind static;
  #L3e7166.  v3:= temp @kind object;
  #L3e7168.  if v0 == 0 then goto L3e7188;
  #L3e716c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7172.  v2:= temp;
  #L3e7174.  if v2 != 0 then goto L3e7184;
  #L3e7178.  call temp:= `contains`(v0, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e717e.  v2:= temp;
  #L3e7180.  if v2 == 0 then goto L3e7188;
  #L3e7184.  v2:= 1I;
  #L3e7186.  goto L3e718a;
  #L3e7188.  v2:= 0I;
  #L3e718a.  return v2;
}
procedure `void` `e`(`java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lorg/a/a/a/a/b;.e:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e79e0.  call temp:= `a`() @signature `Lorg/a/a/a/a/b;.a:()Ljava/util/Set;` @kind static;
  #L3e79e6.  v0:= temp @kind object;
  #L3e79e8.  if v0 != 0 then goto L3e7a00;
  #L3e79ec.  v0:= new `java.util.HashSet`;
  #L3e79f0.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3e79f6.  v1:= `@@org.a.a.a.a.b.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L3e79fa.  call `set`(v1, v0) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L3e7a00.  call temp:= `a`(v2, v3) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @kind static;
  #L3e7a06.  v2:= temp @kind object;
  #L3e7a08.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7a0e.  return @kind void;
}
procedure `void` `f`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/a/a/a/a/b;.f:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e7a20.  call temp:= `a`() @signature `Lorg/a/a/a/a/b;.a:()Ljava/util/Set;` @kind static;
  #L3e7a26.  v0:= temp @kind object;
  #L3e7a28.  if v0 == 0 then goto L3e7a50;
  #L3e7a2c.  call temp:= `a`(v1, v2) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @kind static;
  #L3e7a32.  v1:= temp @kind object;
  #L3e7a34.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7a3a.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L3e7a40.  v1:= temp;
  #L3e7a42.  if v1 == 0 then goto L3e7a50;
  #L3e7a46.  v1:= `@@org.a.a.a.a.b.a` @type ^`java.lang.ThreadLocal` @kind object;
  #L3e7a4a.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L3e7a50.  return @kind void;
}
procedure `void` `g`(`org.a.a.a.a.b` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/a/a/a/a/b;.g:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e7a64.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e7a6a.  v0:= temp @kind object;
  #L3e7a6c.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e7a72.  v1:= temp @kind object;
  #L3e7a74.  if v0 == v1 then goto L3e7a84;
  #L3e7a78.  v3:= 0I;
  #L3e7a7a.  call `a`(v2, v3) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7a80.  goto L3e7b52;
  #L3e7a84.  v0:= instanceof @variable v3 @type ^`long`[] @kind boolean;
  #L3e7a88.  if v0 == 0 then goto L3e7a9c;
  #L3e7a8c.  v3:= (`long`[]) v3 @kind object;
  #L3e7a90.  v4:= (`long`[]) v4 @kind object;
  #L3e7a94.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([J[J)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7a9a.  goto L3e7b52;
  #L3e7a9c.  v0:= instanceof @variable v3 @type ^`int`[] @kind boolean;
  #L3e7aa0.  if v0 == 0 then goto L3e7ab4;
  #L3e7aa4.  v3:= (`int`[]) v3 @kind object;
  #L3e7aa8.  v4:= (`int`[]) v4 @kind object;
  #L3e7aac.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([I[I)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7ab2.  goto L3e7b52;
  #L3e7ab4.  v0:= instanceof @variable v3 @type ^`short`[] @kind boolean;
  #L3e7ab8.  if v0 == 0 then goto L3e7acc;
  #L3e7abc.  v3:= (`short`[]) v3 @kind object;
  #L3e7ac0.  v4:= (`short`[]) v4 @kind object;
  #L3e7ac4.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([S[S)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7aca.  goto L3e7b52;
  #L3e7acc.  v0:= instanceof @variable v3 @type ^`char`[] @kind boolean;
  #L3e7ad0.  if v0 == 0 then goto L3e7ae4;
  #L3e7ad4.  v3:= (`char`[]) v3 @kind object;
  #L3e7ad8.  v4:= (`char`[]) v4 @kind object;
  #L3e7adc.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([C[C)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7ae2.  goto L3e7b52;
  #L3e7ae4.  v0:= instanceof @variable v3 @type ^`byte`[] @kind boolean;
  #L3e7ae8.  if v0 == 0 then goto L3e7afc;
  #L3e7aec.  v3:= (`byte`[]) v3 @kind object;
  #L3e7af0.  v4:= (`byte`[]) v4 @kind object;
  #L3e7af4.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([B[B)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7afa.  goto L3e7b52;
  #L3e7afc.  v0:= instanceof @variable v3 @type ^`double`[] @kind boolean;
  #L3e7b00.  if v0 == 0 then goto L3e7b14;
  #L3e7b04.  v3:= (`double`[]) v3 @kind object;
  #L3e7b08.  v4:= (`double`[]) v4 @kind object;
  #L3e7b0c.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([D[D)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7b12.  goto L3e7b52;
  #L3e7b14.  v0:= instanceof @variable v3 @type ^`float`[] @kind boolean;
  #L3e7b18.  if v0 == 0 then goto L3e7b2c;
  #L3e7b1c.  v3:= (`float`[]) v3 @kind object;
  #L3e7b20.  v4:= (`float`[]) v4 @kind object;
  #L3e7b24.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([F[F)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7b2a.  goto L3e7b52;
  #L3e7b2c.  v0:= instanceof @variable v3 @type ^`boolean`[] @kind boolean;
  #L3e7b30.  if v0 == 0 then goto L3e7b44;
  #L3e7b34.  v3:= (`boolean`[]) v3 @kind object;
  #L3e7b38.  v4:= (`boolean`[]) v4 @kind object;
  #L3e7b3c.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([Z[Z)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7b42.  goto L3e7b52;
  #L3e7b44.  v3:= (`java.lang.Object`[]) v3 @kind object;
  #L3e7b48.  v4:= (`java.lang.Object`[]) v4 @kind object;
  #L3e7b4c.  call temp:= `a`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7b52.  return @kind void;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `byte` v2 , `byte` v3 ) @signature `Lorg/a/a/a/a/b;.a:(BB)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7254.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7258.  if v0 != 0 then goto L3e725e;
  #L3e725c.  return v1 @kind object;
  #L3e725e.  if v2 != v3 then goto L3e7266;
  #L3e7262.  v2:= 1I;
  #L3e7264.  goto L3e7268;
  #L3e7266.  v2:= 0I;
  #L3e7268.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e726c.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `char` v2 , `char` v3 ) @signature `Lorg/a/a/a/a/b;.a:(CC)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e72e8.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e72ec.  if v0 != 0 then goto L3e72f2;
  #L3e72f0.  return v1 @kind object;
  #L3e72f2.  if v2 != v3 then goto L3e72fa;
  #L3e72f6.  v2:= 1I;
  #L3e72f8.  goto L3e72fc;
  #L3e72fa.  v2:= 0I;
  #L3e72fc.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e7300.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `double` v2 , `double` v4 ) @signature `Lorg/a/a/a/a/b;.a:(DD)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e737c.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7380.  if v0 != 0 then goto L3e7386;
  #L3e7384.  return v1 @kind object;
  #L3e7386.  call temp:= `doubleToLongBits`(v2) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3e738c.  v2:= temp @kind wide;
  #L3e738e.  call temp:= `doubleToLongBits`(v4) @signature `Ljava/lang/Double;.doubleToLongBits:(D)J` @kind static;
  #L3e7394.  v4:= temp @kind wide;
  #L3e7396.  call temp:= `a`(v1, v2, v4) @signature `Lorg/a/a/a/a/b;.a:(JJ)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e739c.  v2:= temp @kind object;
  #L3e739e.  return v2 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `float` v2 , `float` v3 ) @signature `Lorg/a/a/a/a/b;.a:(FF)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7418.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e741c.  if v0 != 0 then goto L3e7422;
  #L3e7420.  return v1 @kind object;
  #L3e7422.  call temp:= `floatToIntBits`(v2) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3e7428.  v2:= temp;
  #L3e742a.  call temp:= `floatToIntBits`(v3) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L3e7430.  v3:= temp;
  #L3e7432.  call temp:= `a`(v1, v2, v3) @signature `Lorg/a/a/a/a/b;.a:(II)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7438.  v2:= temp @kind object;
  #L3e743a.  return v2 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lorg/a/a/a/a/b;.a:(II)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e74b4.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e74b8.  if v0 != 0 then goto L3e74be;
  #L3e74bc.  return v1 @kind object;
  #L3e74be.  if v2 != v3 then goto L3e74c6;
  #L3e74c2.  v2:= 1I;
  #L3e74c4.  goto L3e74c8;
  #L3e74c6.  v2:= 0I;
  #L3e74c8.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e74cc.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/a/a/a/a/b;.a:(JJ)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e75b0.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e75b4.  if v0 != 0 then goto L3e75ba;
  #L3e75b8.  return v1 @kind object;
  #L3e75ba.  v0:= lcmp(v2, v4);
  #L3e75be.  if v0 != 0 then goto L3e75c6;
  #L3e75c2.  v2:= 1I;
  #L3e75c4.  goto L3e75c8;
  #L3e75c6.  v2:= 0I;
  #L3e75c8.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e75cc.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `short` v2 , `short` v3 ) @signature `Lorg/a/a/a/a/b;.a:(SS)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7648.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e764c.  if v0 != 0 then goto L3e7652;
  #L3e7650.  return v1 @kind object;
  #L3e7652.  if v2 != v3 then goto L3e765a;
  #L3e7656.  v2:= 1I;
  #L3e7658.  goto L3e765c;
  #L3e765a.  v2:= 0I;
  #L3e765c.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e7660.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v1 @kind this, `boolean` v2 , `boolean` v3 ) @signature `Lorg/a/a/a/a/b;.a:(ZZ)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e71c0.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e71c4.  if v0 != 0 then goto L3e71ca;
  #L3e71c8.  return v1 @kind object;
  #L3e71ca.  if v2 != v3 then goto L3e71d2;
  #L3e71ce.  v2:= 1I;
  #L3e71d0.  goto L3e71d4;
  #L3e71d2.  v2:= 0I;
  #L3e71d4.  v1.`org.a.a.a.a.b.b` @type ^`boolean` := v2 @kind boolean;
  #L3e71d8.  return v1 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([B[B)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7280.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7284.  if v0 != 0 then goto L3e728a;
  #L3e7288.  return v3 @kind object;
  #L3e728a.  if v4 != v5 then goto L3e7290;
  #L3e728e.  return v3 @kind object;
  #L3e7290.  v0:= 0I;
  #L3e7292.  if v4 == 0 then goto L3e72d0;
  #L3e7296.  if v5 != 0 then goto L3e729c;
  #L3e729a.  goto L3e72d0;
  #L3e729c.  v1:= length @variable v4;
  #L3e729e.  v2:= length @variable v5;
  #L3e72a0.  if v1 == v2 then goto L3e72ac;
  #L3e72a4.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e72aa.  return v3 @kind object;
  #L3e72ac.  v1:= length @variable v4;
  #L3e72ae.  if v0 >= v1 then goto L3e72ce;
  #L3e72b2.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e72b6.  if v1 == 0 then goto L3e72ce;
  #L3e72ba.  v1:= v4[v0] @kind byte;
  #L3e72be.  v2:= v5[v0] @kind byte;
  #L3e72c2.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(BB)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e72c8.  v0:= v0 + 1;
  #L3e72cc.  goto L3e72ac;
  #L3e72ce.  return v3 @kind object;
  #L3e72d0.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e72d6.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `char`[] v4 @kind object, `char`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([C[C)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7314.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7318.  if v0 != 0 then goto L3e731e;
  #L3e731c.  return v3 @kind object;
  #L3e731e.  if v4 != v5 then goto L3e7324;
  #L3e7322.  return v3 @kind object;
  #L3e7324.  v0:= 0I;
  #L3e7326.  if v4 == 0 then goto L3e7364;
  #L3e732a.  if v5 != 0 then goto L3e7330;
  #L3e732e.  goto L3e7364;
  #L3e7330.  v1:= length @variable v4;
  #L3e7332.  v2:= length @variable v5;
  #L3e7334.  if v1 == v2 then goto L3e7340;
  #L3e7338.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e733e.  return v3 @kind object;
  #L3e7340.  v1:= length @variable v4;
  #L3e7342.  if v0 >= v1 then goto L3e7362;
  #L3e7346.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e734a.  if v1 == 0 then goto L3e7362;
  #L3e734e.  v1:= v4[v0] @kind char;
  #L3e7352.  v2:= v5[v0] @kind char;
  #L3e7356.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(CC)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e735c.  v0:= v0 + 1;
  #L3e7360.  goto L3e7340;
  #L3e7362.  return v3 @kind object;
  #L3e7364.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e736a.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v5 @kind this, `double`[] v6 @kind object, `double`[] v7 @kind object) @signature `Lorg/a/a/a/a/b;.a:([D[D)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e73b0.  v0:= v5.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e73b4.  if v0 != 0 then goto L3e73ba;
  #L3e73b8.  return v5 @kind object;
  #L3e73ba.  if v6 != v7 then goto L3e73c0;
  #L3e73be.  return v5 @kind object;
  #L3e73c0.  v0:= 0I;
  #L3e73c2.  if v6 == 0 then goto L3e7400;
  #L3e73c6.  if v7 != 0 then goto L3e73cc;
  #L3e73ca.  goto L3e7400;
  #L3e73cc.  v1:= length @variable v6;
  #L3e73ce.  v2:= length @variable v7;
  #L3e73d0.  if v1 == v2 then goto L3e73dc;
  #L3e73d4.  call `a`(v5, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e73da.  return v5 @kind object;
  #L3e73dc.  v1:= length @variable v6;
  #L3e73de.  if v0 >= v1 then goto L3e73fe;
  #L3e73e2.  v1:= v5.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e73e6.  if v1 == 0 then goto L3e73fe;
  #L3e73ea.  v1:= v6[v0] @kind wide;
  #L3e73ee.  v3:= v7[v0] @kind wide;
  #L3e73f2.  call temp:= `a`(v5, v1, v3) @signature `Lorg/a/a/a/a/b;.a:(DD)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e73f8.  v0:= v0 + 1;
  #L3e73fc.  goto L3e73dc;
  #L3e73fe.  return v5 @kind object;
  #L3e7400.  call `a`(v5, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7406.  return v5 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `float`[] v4 @kind object, `float`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([F[F)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e744c.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7450.  if v0 != 0 then goto L3e7456;
  #L3e7454.  return v3 @kind object;
  #L3e7456.  if v4 != v5 then goto L3e745c;
  #L3e745a.  return v3 @kind object;
  #L3e745c.  v0:= 0I;
  #L3e745e.  if v4 == 0 then goto L3e749c;
  #L3e7462.  if v5 != 0 then goto L3e7468;
  #L3e7466.  goto L3e749c;
  #L3e7468.  v1:= length @variable v4;
  #L3e746a.  v2:= length @variable v5;
  #L3e746c.  if v1 == v2 then goto L3e7478;
  #L3e7470.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7476.  return v3 @kind object;
  #L3e7478.  v1:= length @variable v4;
  #L3e747a.  if v0 >= v1 then goto L3e749a;
  #L3e747e.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7482.  if v1 == 0 then goto L3e749a;
  #L3e7486.  v1:= v4[v0];
  #L3e748a.  v2:= v5[v0];
  #L3e748e.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(FF)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7494.  v0:= v0 + 1;
  #L3e7498.  goto L3e7478;
  #L3e749a.  return v3 @kind object;
  #L3e749c.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e74a2.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `int`[] v4 @kind object, `int`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([I[I)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e74e0.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e74e4.  if v0 != 0 then goto L3e74ea;
  #L3e74e8.  return v3 @kind object;
  #L3e74ea.  if v4 != v5 then goto L3e74f0;
  #L3e74ee.  return v3 @kind object;
  #L3e74f0.  v0:= 0I;
  #L3e74f2.  if v4 == 0 then goto L3e7530;
  #L3e74f6.  if v5 != 0 then goto L3e74fc;
  #L3e74fa.  goto L3e7530;
  #L3e74fc.  v1:= length @variable v4;
  #L3e74fe.  v2:= length @variable v5;
  #L3e7500.  if v1 == v2 then goto L3e750c;
  #L3e7504.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e750a.  return v3 @kind object;
  #L3e750c.  v1:= length @variable v4;
  #L3e750e.  if v0 >= v1 then goto L3e752e;
  #L3e7512.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7516.  if v1 == 0 then goto L3e752e;
  #L3e751a.  v1:= v4[v0];
  #L3e751e.  v2:= v5[v0];
  #L3e7522.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(II)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7528.  v0:= v0 + 1;
  #L3e752c.  goto L3e750c;
  #L3e752e.  return v3 @kind object;
  #L3e7530.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7536.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v5 @kind this, `long`[] v6 @kind object, `long`[] v7 @kind object) @signature `Lorg/a/a/a/a/b;.a:([J[J)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e75e0.  v0:= v5.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e75e4.  if v0 != 0 then goto L3e75ea;
  #L3e75e8.  return v5 @kind object;
  #L3e75ea.  if v6 != v7 then goto L3e75f0;
  #L3e75ee.  return v5 @kind object;
  #L3e75f0.  v0:= 0I;
  #L3e75f2.  if v6 == 0 then goto L3e7630;
  #L3e75f6.  if v7 != 0 then goto L3e75fc;
  #L3e75fa.  goto L3e7630;
  #L3e75fc.  v1:= length @variable v6;
  #L3e75fe.  v2:= length @variable v7;
  #L3e7600.  if v1 == v2 then goto L3e760c;
  #L3e7604.  call `a`(v5, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e760a.  return v5 @kind object;
  #L3e760c.  v1:= length @variable v6;
  #L3e760e.  if v0 >= v1 then goto L3e762e;
  #L3e7612.  v1:= v5.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7616.  if v1 == 0 then goto L3e762e;
  #L3e761a.  v1:= v6[v0] @kind wide;
  #L3e761e.  v3:= v7[v0] @kind wide;
  #L3e7622.  call temp:= `a`(v5, v1, v3) @signature `Lorg/a/a/a/a/b;.a:(JJ)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7628.  v0:= v0 + 1;
  #L3e762c.  goto L3e760c;
  #L3e762e.  return v5 @kind object;
  #L3e7630.  call `a`(v5, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7636.  return v5 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `java.lang.Object`[] v4 @kind object, `java.lang.Object`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([Ljava/lang/Object;[Ljava/lang/Object;)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7548.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e754c.  if v0 != 0 then goto L3e7552;
  #L3e7550.  return v3 @kind object;
  #L3e7552.  if v4 != v5 then goto L3e7558;
  #L3e7556.  return v3 @kind object;
  #L3e7558.  v0:= 0I;
  #L3e755a.  if v4 == 0 then goto L3e7598;
  #L3e755e.  if v5 != 0 then goto L3e7564;
  #L3e7562.  goto L3e7598;
  #L3e7564.  v1:= length @variable v4;
  #L3e7566.  v2:= length @variable v5;
  #L3e7568.  if v1 == v2 then goto L3e7574;
  #L3e756c.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7572.  return v3 @kind object;
  #L3e7574.  v1:= length @variable v4;
  #L3e7576.  if v0 >= v1 then goto L3e7596;
  #L3e757a.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e757e.  if v1 == 0 then goto L3e7596;
  #L3e7582.  v1:= v4[v0] @kind object;
  #L3e7586.  v2:= v5[v0] @kind object;
  #L3e758a.  call temp:= `d`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.d:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7590.  v0:= v0 + 1;
  #L3e7594.  goto L3e7574;
  #L3e7596.  return v3 @kind object;
  #L3e7598.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e759e.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `short`[] v4 @kind object, `short`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([S[S)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7674.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7678.  if v0 != 0 then goto L3e767e;
  #L3e767c.  return v3 @kind object;
  #L3e767e.  if v4 != v5 then goto L3e7684;
  #L3e7682.  return v3 @kind object;
  #L3e7684.  v0:= 0I;
  #L3e7686.  if v4 == 0 then goto L3e76c4;
  #L3e768a.  if v5 != 0 then goto L3e7690;
  #L3e768e.  goto L3e76c4;
  #L3e7690.  v1:= length @variable v4;
  #L3e7692.  v2:= length @variable v5;
  #L3e7694.  if v1 == v2 then goto L3e76a0;
  #L3e7698.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e769e.  return v3 @kind object;
  #L3e76a0.  v1:= length @variable v4;
  #L3e76a2.  if v0 >= v1 then goto L3e76c2;
  #L3e76a6.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e76aa.  if v1 == 0 then goto L3e76c2;
  #L3e76ae.  v1:= v4[v0] @kind short;
  #L3e76b2.  v2:= v5[v0] @kind short;
  #L3e76b6.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(SS)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e76bc.  v0:= v0 + 1;
  #L3e76c0.  goto L3e76a0;
  #L3e76c2.  return v3 @kind object;
  #L3e76c4.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e76ca.  return v3 @kind object;
}
procedure `org.a.a.a.a.b` `a`(`org.a.a.a.a.b` v3 @kind this, `boolean`[] v4 @kind object, `boolean`[] v5 @kind object) @signature `Lorg/a/a/a/a/b;.a:([Z[Z)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e71ec.  v0:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e71f0.  if v0 != 0 then goto L3e71f6;
  #L3e71f4.  return v3 @kind object;
  #L3e71f6.  if v4 != v5 then goto L3e71fc;
  #L3e71fa.  return v3 @kind object;
  #L3e71fc.  v0:= 0I;
  #L3e71fe.  if v4 == 0 then goto L3e723c;
  #L3e7202.  if v5 != 0 then goto L3e7208;
  #L3e7206.  goto L3e723c;
  #L3e7208.  v1:= length @variable v4;
  #L3e720a.  v2:= length @variable v5;
  #L3e720c.  if v1 == v2 then goto L3e7218;
  #L3e7210.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7216.  return v3 @kind object;
  #L3e7218.  v1:= length @variable v4;
  #L3e721a.  if v0 >= v1 then goto L3e723a;
  #L3e721e.  v1:= v3.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e7222.  if v1 == 0 then goto L3e723a;
  #L3e7226.  v1:= v4[v0] @kind boolean;
  #L3e722a.  v2:= v5[v0] @kind boolean;
  #L3e722e.  call temp:= `a`(v3, v1, v2) @signature `Lorg/a/a/a/a/b;.a:(ZZ)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7234.  v0:= v0 + 1;
  #L3e7238.  goto L3e7218;
  #L3e723a.  return v3 @kind object;
  #L3e723c.  call `a`(v3, v0) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7242.  return v3 @kind object;
}
procedure `void` `a`(`org.a.a.a.a.b` v0 @kind this, `boolean` v1 ) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L3e78b0.  v0.`org.a.a.a.a.b.b` @type ^`boolean` := v1 @kind boolean;
  #L3e78b4.  return @kind void;
}
procedure `boolean` `b`(`org.a.a.a.a.b` v1 @kind this) @signature `Lorg/a/a/a/a/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7128.  v0:= v1.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e712c.  return v0;
}
procedure `org.a.a.a.a.b` `c`(`org.a.a.a.a.b` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lorg/a/a/a/a/b;.c:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e76dc.  v0:= v4.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e76e0.  if v0 != 0 then goto L3e76e6;
  #L3e76e4.  return v4 @kind object;
  #L3e76e6.  if v5 != v6 then goto L3e76ec;
  #L3e76ea.  return v4 @kind object;
  #L3e76ec.  v0:= 0I;
  #L3e76ee.  if v5 == 0 then goto L3e778a;
  #L3e76f2.  if v6 != 0 then goto L3e76f8;
  #L3e76f6.  goto L3e778a;
  #L3e76f8.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e76fe.  v1:= temp @kind object;
  #L3e7700.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e7706.  v2:= temp @kind object;
  #L3e7708.  call temp:= `isInstance`(v1, v6) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e770e.  v3:= temp;
  #L3e7710.  if v3 == 0 then goto L3e7722;
  #L3e7714.  call temp:= `isInstance`(v2, v5) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e771a.  v3:= temp;
  #L3e771c.  if v3 != 0 then goto L3e773e;
  #L3e7720.  goto L3e773c;
  #L3e7722.  call temp:= `isInstance`(v2, v5) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e7728.  v3:= temp;
  #L3e772a.  if v3 == 0 then goto L3e7784;
  #L3e772e.  call temp:= `isInstance`(v1, v6) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e7734.  v3:= temp;
  #L3e7736.  if v3 != 0 then goto L3e773c;
  #L3e773a.  goto L3e773e;
  #L3e773c.  v1:= v2 @kind object;
  #L3e773e.  call temp:= `isArray`(v1) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3e7744.  v2:= temp;
  #L3e7746.  if v2 == 0 then goto L3e7752;
  #L3e774a.  call temp:= `d`(v4, v5, v6) @signature `Lorg/a/a/a/a/b;.d:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e7750.  goto L3e777c;
  #L3e7752.  call `a`(v4, v5, v6, v1) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L3e7758.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3e775e.  v2:= temp @kind object;
  #L3e7760.  if v2 == 0 then goto L3e777c;
  #L3e7764.  v2:= v4.`org.a.a.a.a.b.e` @type ^`java.lang.Class` @kind object;
  #L3e7768.  if v1 == v2 then goto L3e777c;
  #L3e776c.  call temp:= `getSuperclass`(v1) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3e7772.  v1:= temp @kind object;
  #L3e7774.  call `a`(v4, v5, v6, v1) @signature `Lorg/a/a/a/a/b;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;)V` @kind direct;
  #L3e777a.  goto L3e7758;
  #L3e777c.  return v4 @kind object;
  #L3e777e.  v4.`org.a.a.a.a.b.b` @type ^`boolean` := v0 @kind boolean;
  #L3e7782.  return v4 @kind object;
  #L3e7784.  v4.`org.a.a.a.a.b.b` @type ^`boolean` := v0 @kind boolean;
  #L3e7788.  return v4 @kind object;
  #L3e778a.  v4.`org.a.a.a.a.b.b` @type ^`boolean` := v0 @kind boolean;
  #L3e778e.  return v4 @kind object;
  catch `java.lang.IllegalArgumentException` @[L3e773e..L3e777a] goto L3e777e;
}
procedure `org.a.a.a.a.b` `d`(`org.a.a.a.a.b` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lorg/a/a/a/a/b;.d:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e77b0.  v0:= v2.`org.a.a.a.a.b.b` @type ^`boolean` @kind boolean;
  #L3e77b4.  if v0 != 0 then goto L3e77ba;
  #L3e77b8.  return v2 @kind object;
  #L3e77ba.  if v3 != v4 then goto L3e77c0;
  #L3e77be.  return v2 @kind object;
  #L3e77c0.  if v3 == 0 then goto L3e7810;
  #L3e77c4.  if v4 != 0 then goto L3e77ca;
  #L3e77c8.  goto L3e7810;
  #L3e77ca.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3e77d0.  v0:= temp @kind object;
  #L3e77d2.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L3e77d8.  v1:= temp;
  #L3e77da.  if v1 != 0 then goto L3e7808;
  #L3e77de.  v1:= v2.`org.a.a.a.a.b.d` @type ^`boolean` @kind boolean;
  #L3e77e2.  if v1 == 0 then goto L3e77fa;
  #L3e77e6.  call temp:= `a`(v0) @signature `Lorg/a/a/a/d;.a:(Ljava/lang/Class;)Z` @kind static;
  #L3e77ec.  v0:= temp;
  #L3e77ee.  if v0 != 0 then goto L3e77fa;
  #L3e77f2.  call temp:= `c`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.c:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/b;` @kind virtual;
  #L3e77f8.  goto L3e780e;
  #L3e77fa.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e7800.  v3:= temp;
  #L3e7802.  v2.`org.a.a.a.a.b.b` @type ^`boolean` := v3 @kind boolean;
  #L3e7806.  goto L3e780e;
  #L3e7808.  call `g`(v2, v3, v4) @signature `Lorg/a/a/a/a/b;.g:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3e780e.  return v2 @kind object;
  #L3e7810.  v3:= 0I;
  #L3e7812.  call `a`(v2, v3) @signature `Lorg/a/a/a/a/b;.a:(Z)V` @kind virtual;
  #L3e7818.  return v2 @kind object;
}
