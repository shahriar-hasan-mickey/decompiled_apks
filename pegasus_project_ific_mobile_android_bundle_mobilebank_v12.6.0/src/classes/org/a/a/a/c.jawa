record `org.a.a.a.c` @kind class @AccessFlag PUBLIC {
}
procedure `boolean` `a`(`java.lang.CharSequence` v7 @kind object, `boolean` v8 , `int` v9 , `java.lang.CharSequence` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lorg/a/a/a/c;.a:(Ljava/lang/CharSequence;ZILjava/lang/CharSequence;II)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e8230.  v0:= instanceof @variable v7 @type ^`java.lang.String` @kind boolean;
  #L3e8234.  if v0 == 0 then goto L3e825e;
  #L3e8238.  v0:= instanceof @variable v10 @type ^`java.lang.String` @kind boolean;
  #L3e823c.  if v0 == 0 then goto L3e825e;
  #L3e8240.  v1:= v7 @kind object;
  #L3e8242.  v1:= (`java.lang.String`) v1 @kind object;
  #L3e8246.  v4:= v10 @kind object;
  #L3e8248.  v4:= (`java.lang.String`) v4 @kind object;
  #L3e824c.  v2:= v8;
  #L3e824e.  v3:= v9;
  #L3e8250.  v5:= v11;
  #L3e8252.  v6:= v12;
  #L3e8254.  call temp:= `regionMatches`(v1, v2, v3, v4, v5, v6) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L3e825a.  v7:= temp;
  #L3e825c.  return v7;
  #L3e825e.  call temp:= `length`(v7) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3e8264.  v0:= temp;
  #L3e8266.  v0:= v0 - v9 @kind int;
  #L3e8268.  call temp:= `length`(v10) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3e826e.  v1:= temp;
  #L3e8270.  v1:= v1 - v11 @kind int;
  #L3e8272.  v2:= 0I;
  #L3e8274.  if v9 < 0 then goto L3e82f0;
  #L3e8278.  if v11 < 0 then goto L3e82f0;
  #L3e827c.  if v12 >= 0 then goto L3e8282;
  #L3e8280.  goto L3e82f0;
  #L3e8282.  if v0 < v12 then goto L3e82ee;
  #L3e8286.  if v1 >= v12 then goto L3e828c;
  #L3e828a.  goto L3e82ee;
  #L3e828c.  v0:= v12 + -1;
  #L3e8290.  if v12 <= 0 then goto L3e82ea;
  #L3e8294.  v12:= v9 + 1;
  #L3e8298.  call temp:= `charAt`(v7, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3e829e.  v9:= temp;
  #L3e82a0.  v1:= v11 + 1;
  #L3e82a4.  call temp:= `charAt`(v10, v11) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3e82aa.  v11:= temp;
  #L3e82ac.  if v9 != v11 then goto L3e82b2;
  #L3e82b0.  goto L3e82e2;
  #L3e82b2.  if v8 != 0 then goto L3e82b8;
  #L3e82b6.  return v2;
  #L3e82b8.  call temp:= `toUpperCase`(v9) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3e82be.  v3:= temp;
  #L3e82c0.  call temp:= `toUpperCase`(v11) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3e82c6.  v4:= temp;
  #L3e82c8.  if v3 == v4 then goto L3e82e2;
  #L3e82cc.  call temp:= `toLowerCase`(v9) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3e82d2.  v9:= temp;
  #L3e82d4.  call temp:= `toLowerCase`(v11) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3e82da.  v11:= temp;
  #L3e82dc.  if v9 == v11 then goto L3e82e2;
  #L3e82e0.  return v2;
  #L3e82e2.  v9:= v12;
  #L3e82e4.  v12:= v0;
  #L3e82e6.  v11:= v1;
  #L3e82e8.  goto L3e828c;
  #L3e82ea.  v7:= 1I;
  #L3e82ec.  return v7;
  #L3e82ee.  return v2;
  #L3e82f0.  return v2;
}
