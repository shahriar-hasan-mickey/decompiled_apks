record `org.a.a.a.e.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface, `java.lang.Comparable` @kind interface, `java.util.Map$Entry` @kind interface {
}
global `long` `@@org.a.a.a.e.b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.a.a.a.e.b` v0 @kind this) @signature `Lorg/a/a/a/e/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e8f04.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e8f0a.  return @kind void;
}
procedure `org.a.a.a.e.b` `b`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/a/a/a/e/b;.b:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e8ee8.  v0:= new `org.a.a.a.e.a`;
  #L3e8eec.  call `<init>`(v0, v1, v2) @signature `Lorg/a/a/a/e/a;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L3e8ef2.  return v0 @kind object;
}
procedure `int` `a`(`org.a.a.a.e.b` v3 @kind this, `org.a.a.a.e.b` v4 @kind object) @signature `Lorg/a/a/a/e/b;.a:(Lorg/a/a/a/e/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8d88.  v0:= new `org.a.a.a.a.a`;
  #L3e8d8c.  call `<init>`(v0) @signature `Lorg/a/a/a/a/a;.<init>:()V` @kind direct;
  #L3e8d92.  call temp:= `a`(v3) @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @kind virtual;
  #L3e8d98.  v1:= temp @kind object;
  #L3e8d9a.  call temp:= `a`(v4) @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @kind virtual;
  #L3e8da0.  v2:= temp @kind object;
  #L3e8da2.  call temp:= `a`(v0, v1, v2) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e8da8.  v0:= temp @kind object;
  #L3e8daa.  call temp:= `b`(v3) @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e8db0.  v1:= temp @kind object;
  #L3e8db2.  call temp:= `b`(v4) @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e8db8.  v4:= temp @kind object;
  #L3e8dba.  call temp:= `a`(v0, v1, v4) @signature `Lorg/a/a/a/a/a;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lorg/a/a/a/a/a;` @kind virtual;
  #L3e8dc0.  v4:= temp @kind object;
  #L3e8dc2.  call temp:= `a`(v4) @signature `Lorg/a/a/a/a/a;.a:()I` @kind virtual;
  #L3e8dc8.  v4:= temp;
  #L3e8dca.  return v4;
}
procedure `java.lang.Object` `a`() @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `b`() @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `compareTo`(`org.a.a.a.e.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/a/a/a/e/b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e8ddc.  v1:= (`org.a.a.a.e.b`) v1 @kind object;
  #L3e8de0.  call temp:= `a`(v0, v1) @signature `Lorg/a/a/a/e/b;.a:(Lorg/a/a/a/e/b;)I` @kind virtual;
  #L3e8de6.  v1:= temp;
  #L3e8de8.  return v1;
}
procedure `boolean` `equals`(`org.a.a.a.e.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/a/a/a/e/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e8d20.  v0:= 1I;
  #L3e8d22.  if v5 != v4 then goto L3e8d28;
  #L3e8d26.  return v0;
  #L3e8d28.  v1:= instanceof @variable v5 @type ^`java.util.Map$Entry` @kind boolean;
  #L3e8d2c.  v2:= 0I;
  #L3e8d2e.  if v1 == 0 then goto L3e8d74;
  #L3e8d32.  v5:= (`java.util.Map$Entry`) v5 @kind object;
  #L3e8d36.  call temp:= `getKey`(v4) @signature `Lorg/a/a/a/e/b;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3e8d3c.  v1:= temp @kind object;
  #L3e8d3e.  call temp:= `getKey`(v5) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3e8d44.  v3:= temp @kind object;
  #L3e8d46.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8d4c.  v1:= temp;
  #L3e8d4e.  if v1 == 0 then goto L3e8d70;
  #L3e8d52.  call temp:= `getValue`(v4) @signature `Lorg/a/a/a/e/b;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3e8d58.  v1:= temp @kind object;
  #L3e8d5a.  call temp:= `getValue`(v5) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3e8d60.  v5:= temp @kind object;
  #L3e8d62.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8d68.  v5:= temp;
  #L3e8d6a.  if v5 == 0 then goto L3e8d70;
  #L3e8d6e.  goto L3e8d72;
  #L3e8d70.  v0:= 0I;
  #L3e8d72.  return v0;
  #L3e8d74.  return v2;
}
procedure `java.lang.Object` `getKey`(`org.a.a.a.e.b` v1 @kind this) @signature `Lorg/a/a/a/e/b;.getKey:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8e50.  call temp:= `a`(v1) @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @kind virtual;
  #L3e8e56.  v0:= temp @kind object;
  #L3e8e58.  return v0 @kind object;
}
procedure `java.lang.Object` `getValue`(`org.a.a.a.e.b` v1 @kind this) @signature `Lorg/a/a/a/e/b;.getValue:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e8e6c.  call temp:= `b`(v1) @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e8e72.  v0:= temp @kind object;
  #L3e8e74.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.a.a.a.e.b` v3 @kind this) @signature `Lorg/a/a/a/e/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8dfc.  call temp:= `getKey`(v3) @signature `Lorg/a/a/a/e/b;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3e8e02.  v0:= temp @kind object;
  #L3e8e04.  v1:= 0I;
  #L3e8e06.  if v0 != 0 then goto L3e8e0e;
  #L3e8e0a.  v0:= 0I;
  #L3e8e0c.  goto L3e8e1e;
  #L3e8e0e.  call temp:= `getKey`(v3) @signature `Lorg/a/a/a/e/b;.getKey:()Ljava/lang/Object;` @kind virtual;
  #L3e8e14.  v0:= temp @kind object;
  #L3e8e16.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e8e1c.  v0:= temp;
  #L3e8e1e.  call temp:= `getValue`(v3) @signature `Lorg/a/a/a/e/b;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3e8e24.  v2:= temp @kind object;
  #L3e8e26.  if v2 != 0 then goto L3e8e2c;
  #L3e8e2a.  goto L3e8e3c;
  #L3e8e2c.  call temp:= `getValue`(v3) @signature `Lorg/a/a/a/e/b;.getValue:()Ljava/lang/Object;` @kind virtual;
  #L3e8e32.  v1:= temp @kind object;
  #L3e8e34.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e8e3a.  v1:= temp;
  #L3e8e3c.  v0:= v0 ^~ v1 @kind int;
  #L3e8e3e.  return v0;
}
procedure `java.lang.String` `toString`(`org.a.a.a.e.b` v2 @kind this) @signature `Lorg/a/a/a/e/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8e88.  v0:= new `java.lang.StringBuilder`;
  #L3e8e8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e8e92.  v1:= "(" @kind object;
  #L3e8e96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8e9c.  call temp:= `a`(v2) @signature `Lorg/a/a/a/e/b;.a:()Ljava/lang/Object;` @kind virtual;
  #L3e8ea2.  v1:= temp @kind object;
  #L3e8ea4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8eaa.  v1:= 44I;
  #L3e8eae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8eb4.  call temp:= `b`(v2) @signature `Lorg/a/a/a/e/b;.b:()Ljava/lang/Object;` @kind virtual;
  #L3e8eba.  v1:= temp @kind object;
  #L3e8ebc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8ec2.  v1:= 41I;
  #L3e8ec6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e8ecc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e8ed2.  v0:= temp @kind object;
  #L3e8ed4.  return v0 @kind object;
}
