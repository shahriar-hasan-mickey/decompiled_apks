record `org.c.a.i` @kind class @AccessFlag PUBLIC extends `java.lang.IllegalArgumentException` @kind class {
  `org.c.a.d` `org.c.a.i.a` @AccessFlag PRIVATE_FINAL;
  `org.c.a.h` `org.c.a.i.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.c.a.i.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.Number` `org.c.a.i.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.c.a.i.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Number` `org.c.a.i.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Number` `org.c.a.i.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.c.a.i.h` @AccessFlag PRIVATE;
}
global `long` `@@org.c.a.i.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.i` v2 @kind this, `org.c.a.d` v3 @kind object, `java.lang.Number` v4 @kind object, `java.lang.Number` v5 @kind object, `java.lang.Number` v6 @kind object) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L403ec0.  call temp:= `x`(v3) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403ec6.  v0:= temp @kind object;
  #L403ec8.  v1:= 0I;
  #L403eca.  call temp:= `a`(v0, v4, v5, v6, v1) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L403ed0.  v0:= temp @kind object;
  #L403ed2.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403ed8.  v2.`org.c.a.i.a` @type ^`org.c.a.d` := v3 @kind object;
  #L403edc.  v2.`org.c.a.i.b` @type ^`org.c.a.h` := v1 @kind object;
  #L403ee0.  call temp:= `x`(v3) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403ee6.  v3:= temp @kind object;
  #L403ee8.  v2.`org.c.a.i.c` @type ^`java.lang.String` := v3 @kind object;
  #L403eec.  v2.`org.c.a.i.d` @type ^`java.lang.Number` := v4 @kind object;
  #L403ef0.  v2.`org.c.a.i.e` @type ^`java.lang.String` := v1 @kind object;
  #L403ef4.  v2.`org.c.a.i.f` @type ^`java.lang.Number` := v5 @kind object;
  #L403ef8.  v2.`org.c.a.i.g` @type ^`java.lang.Number` := v6 @kind object;
  #L403efc.  call temp:= `getMessage`(v2) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind super;
  #L403f02.  v3:= temp @kind object;
  #L403f04.  v2.`org.c.a.i.h` @type ^`java.lang.String` := v3 @kind object;
  #L403f08.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.i` v2 @kind this, `org.c.a.d` v3 @kind object, `java.lang.Number` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L403f1c.  call temp:= `x`(v3) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403f22.  v0:= temp @kind object;
  #L403f24.  v1:= 0I;
  #L403f26.  call temp:= `a`(v0, v4, v1, v1, v5) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L403f2c.  v5:= temp @kind object;
  #L403f2e.  call `<init>`(v2, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403f34.  v2.`org.c.a.i.a` @type ^`org.c.a.d` := v3 @kind object;
  #L403f38.  v2.`org.c.a.i.b` @type ^`org.c.a.h` := v1 @kind object;
  #L403f3c.  call temp:= `x`(v3) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403f42.  v3:= temp @kind object;
  #L403f44.  v2.`org.c.a.i.c` @type ^`java.lang.String` := v3 @kind object;
  #L403f48.  v2.`org.c.a.i.d` @type ^`java.lang.Number` := v4 @kind object;
  #L403f4c.  v2.`org.c.a.i.e` @type ^`java.lang.String` := v1 @kind object;
  #L403f50.  v2.`org.c.a.i.f` @type ^`java.lang.Number` := v1 @kind object;
  #L403f54.  v2.`org.c.a.i.g` @type ^`java.lang.Number` := v1 @kind object;
  #L403f58.  call temp:= `getMessage`(v2) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind super;
  #L403f5e.  v3:= temp @kind object;
  #L403f60.  v2.`org.c.a.i.h` @type ^`java.lang.String` := v3 @kind object;
  #L403f64.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.i` v1 @kind this, `org.c.a.d` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L403f78.  call temp:= `x`(v2) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403f7e.  v0:= temp @kind object;
  #L403f80.  call temp:= `a`(v0, v3) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L403f86.  v0:= temp @kind object;
  #L403f88.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L403f8e.  v1.`org.c.a.i.a` @type ^`org.c.a.d` := v2 @kind object;
  #L403f92.  v0:= 0I;
  #L403f94.  v1.`org.c.a.i.b` @type ^`org.c.a.h` := v0 @kind object;
  #L403f98.  call temp:= `x`(v2) @signature `Lorg/c/a/d;.x:()Ljava/lang/String;` @kind virtual;
  #L403f9e.  v2:= temp @kind object;
  #L403fa0.  v1.`org.c.a.i.c` @type ^`java.lang.String` := v2 @kind object;
  #L403fa4.  v1.`org.c.a.i.e` @type ^`java.lang.String` := v3 @kind object;
  #L403fa8.  v1.`org.c.a.i.d` @type ^`java.lang.Number` := v0 @kind object;
  #L403fac.  v1.`org.c.a.i.f` @type ^`java.lang.Number` := v0 @kind object;
  #L403fb0.  v1.`org.c.a.i.g` @type ^`java.lang.Number` := v0 @kind object;
  #L403fb4.  call temp:= `getMessage`(v1) @signature `Ljava/lang/IllegalArgumentException;.getMessage:()Ljava/lang/String;` @kind super;
  #L403fba.  v2:= temp @kind object;
  #L403fbc.  v1.`org.c.a.i.h` @type ^`java.lang.String` := v2 @kind object;
  #L403fc0.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `java.lang.Number` v3 @kind object, `java.lang.Number` v4 @kind object, `java.lang.Number` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403d68.  v0:= new `java.lang.StringBuilder`;
  #L403d6c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403d72.  v1:= "Value " @kind object;
  #L403d76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403d7c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403d82.  v3:= " for " @kind object;
  #L403d86.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403d8c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403d92.  v2:= 32I;
  #L403d96.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L403d9c.  if v4 != 0 then goto L403dc2;
  #L403da0.  if v5 != 0 then goto L403db0;
  #L403da4.  v2:= "is not supported" @kind object;
  #L403da8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403dae.  goto L403e02;
  #L403db0.  v2:= "must not be larger than " @kind object;
  #L403db4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403dba.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403dc0.  goto L403e02;
  #L403dc2.  if v5 != 0 then goto L403dd8;
  #L403dc6.  v2:= "must not be smaller than " @kind object;
  #L403dca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403dd0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403dd6.  goto L403e02;
  #L403dd8.  v2:= "must be in the range [" @kind object;
  #L403ddc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403de2.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403de8.  v2:= 44I;
  #L403dec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L403df2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403df8.  v2:= 93I;
  #L403dfc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L403e02.  if v6 == 0 then goto L403e16;
  #L403e06.  v2:= ": " @kind object;
  #L403e0a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403e10.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403e16.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L403e1c.  v2:= temp @kind object;
  #L403e1e.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L403e30.  v0:= new `java.lang.StringBuffer`;
  #L403e34.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L403e3a.  v1:= "Value " @kind object;
  #L403e3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e44.  if v3 != 0 then goto L403e54;
  #L403e48.  v3:= "null" @kind object;
  #L403e4c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e52.  goto L403e6a;
  #L403e54.  v1:= 34I;
  #L403e58.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e5e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e6a.  v3:= " for " @kind object;
  #L403e6e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e74.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e7a.  v2:= 32I;
  #L403e7e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e84.  v2:= "is not supported" @kind object;
  #L403e88.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L403e8e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L403e94.  v2:= temp @kind object;
  #L403e96.  return v2 @kind object;
}
procedure `void` `a`(`org.c.a.i` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403fd4.  v0:= v1.`org.c.a.i.h` @type ^`java.lang.String` @kind object;
  #L403fd8.  if v0 != 0 then goto L403fe2;
  #L403fdc.  v1.`org.c.a.i.h` @type ^`java.lang.String` := v2 @kind object;
  #L403fe0.  goto L404016;
  #L403fe2.  if v2 == 0 then goto L404016;
  #L403fe6.  v0:= new `java.lang.StringBuilder`;
  #L403fea.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L403ff0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L403ff6.  v2:= ": " @kind object;
  #L403ffa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L404000.  v2:= v1.`org.c.a.i.h` @type ^`java.lang.String` @kind object;
  #L404004.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40400a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L404010.  v2:= temp @kind object;
  #L404012.  v1.`org.c.a.i.h` @type ^`java.lang.String` := v2 @kind object;
  #L404016.  return @kind void;
}
procedure `java.lang.String` `getMessage`(`org.c.a.i` v1 @kind this) @signature `Lorg/c/a/i;.getMessage:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L403ea8.  v0:= v1.`org.c.a.i.h` @type ^`java.lang.String` @kind object;
  #L403eac.  return v0 @kind object;
}
