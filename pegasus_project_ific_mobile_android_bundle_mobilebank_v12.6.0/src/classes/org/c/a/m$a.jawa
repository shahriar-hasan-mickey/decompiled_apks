record `org.c.a.m$a` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.d.a` @kind class {
  `org.c.a.m` `org.c.a.m$a.a` @AccessFlag PRIVATE;
  `org.c.a.c` `org.c.a.m$a.b` @AccessFlag PRIVATE;
}
global `long` `@@org.c.a.m$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.m$a` v0 @kind this, `org.c.a.m` v1 @kind object, `org.c.a.c` v2 @kind object) @signature `Lorg/c/a/m$a;.<init>:(Lorg/c/a/m;Lorg/c/a/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L40480c.  call `<init>`(v0) @signature `Lorg/c/a/d/a;.<init>:()V` @kind direct;
  #L404812.  v0.`org.c.a.m$a.a` @type ^`org.c.a.m` := v1 @kind object;
  #L404816.  v0.`org.c.a.m$a.b` @type ^`org.c.a.c` := v2 @kind object;
  #L40481a.  return @kind void;
}
procedure `void` `readObject`(`org.c.a.m$a` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lorg/c/a/m$a;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L40482c.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L404832.  v0:= temp @kind object;
  #L404834.  v0:= (`org.c.a.m`) v0 @kind object;
  #L404838.  v1.`org.c.a.m$a.a` @type ^`org.c.a.m` := v0 @kind object;
  #L40483c.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L404842.  v2:= temp @kind object;
  #L404844.  v2:= (`org.c.a.d`) v2 @kind object;
  #L404848.  v0:= v1.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L40484c.  call temp:= `d`(v0) @signature `Lorg/c/a/m;.d:()Lorg/c/a/a;` @kind virtual;
  #L404852.  v0:= temp @kind object;
  #L404854.  call temp:= `a`(v2, v0) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L40485a.  v2:= temp @kind object;
  #L40485c.  v1.`org.c.a.m$a.b` @type ^`org.c.a.c` := v2 @kind object;
  #L404860.  return @kind void;
}
procedure `void` `writeObject`(`org.c.a.m$a` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lorg/c/a/m$a;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L404874.  v0:= v1.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L404878.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L40487e.  v0:= v1.`org.c.a.m$a.b` @type ^`org.c.a.c` @kind object;
  #L404882.  call temp:= `a`(v0) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L404888.  v0:= temp @kind object;
  #L40488a.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L404890.  return @kind void;
}
procedure `org.c.a.c` `a`(`org.c.a.m$a` v1 @kind this) @signature `Lorg/c/a/m$a;.a:()Lorg/c/a/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4047b8.  v0:= v1.`org.c.a.m$a.b` @type ^`org.c.a.c` @kind object;
  #L4047bc.  return v0 @kind object;
}
procedure `org.c.a.m` `a`(`org.c.a.m$a` v4 @kind this, `int` v5 ) @signature `Lorg/c/a/m$a;.a:(I)Lorg/c/a/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4047d0.  v0:= v4.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L4047d4.  call temp:= `a`(v4) @signature `Lorg/c/a/m$a;.a:()Lorg/c/a/c;` @kind virtual;
  #L4047da.  v1:= temp @kind object;
  #L4047dc.  v2:= v4.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L4047e0.  call temp:= `c`(v2) @signature `Lorg/c/a/m;.c:()J` @kind virtual;
  #L4047e6.  v2:= temp @kind wide;
  #L4047e8.  call temp:= `b`(v1, v2, v5) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L4047ee.  v1:= temp @kind wide;
  #L4047f0.  call `a`(v0, v1) @signature `Lorg/c/a/m;.a:(J)V` @kind virtual;
  #L4047f6.  v5:= v4.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L4047fa.  return v5 @kind object;
}
procedure `long` `b`(`org.c.a.m$a` v2 @kind this) @signature `Lorg/c/a/m$a;.b:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L404778.  v0:= v2.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L40477c.  call temp:= `c`(v0) @signature `Lorg/c/a/m;.c:()J` @kind virtual;
  #L404782.  v0:= temp @kind wide;
  #L404784.  return v0 @kind wide;
}
procedure `org.c.a.a` `c`(`org.c.a.m$a` v1 @kind this) @signature `Lorg/c/a/m$a;.c:()Lorg/c/a/a;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L404798.  v0:= v1.`org.c.a.m$a.a` @type ^`org.c.a.m` @kind object;
  #L40479c.  call temp:= `d`(v0) @signature `Lorg/c/a/m;.d:()Lorg/c/a/a;` @kind virtual;
  #L4047a2.  v0:= temp @kind object;
  #L4047a4.  return v0 @kind object;
}
