record `org.c.a.e.m` @kind class @AccessFlag  extends `org.c.a.e.d` @kind interface, `org.c.a.e.l` @kind interface {
  `org.c.a.e.l` `org.c.a.e.m.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.m` v0 @kind this, `org.c.a.e.l` v1 @kind object) @signature `Lorg/c/a/e/m;.<init>:(Lorg/c/a/e/l;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3fef64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fef6a.  v0.`org.c.a.e.m.a` @type ^`org.c.a.e.l` := v1 @kind object;
  #L3fef6e.  return @kind void;
}
procedure `org.c.a.e.d` `a`(`org.c.a.e.l` v1 @kind object) @signature `Lorg/c/a/e/m;.a:(Lorg/c/a/e/l;)Lorg/c/a/e/d;` @AccessFlag STATIC {
    temp;
    v0;

  #L3fef1c.  v0:= instanceof @variable v1 @type ^`org.c.a.e.f` @kind boolean;
  #L3fef20.  if v0 == 0 then goto L3fef32;
  #L3fef24.  v1:= (`org.c.a.e.f`) v1 @kind object;
  #L3fef28.  call temp:= `a`(v1) @signature `Lorg/c/a/e/f;.a:()Lorg/c/a/e/d;` @kind virtual;
  #L3fef2e.  v1:= temp @kind object;
  #L3fef30.  return v1 @kind object;
  #L3fef32.  v0:= instanceof @variable v1 @type ^`org.c.a.e.d` @kind boolean;
  #L3fef36.  if v0 == 0 then goto L3fef40;
  #L3fef3a.  v1:= (`org.c.a.e.d`) v1 @kind object;
  #L3fef3e.  return v1 @kind object;
  #L3fef40.  if v1 != 0 then goto L3fef48;
  #L3fef44.  v1:= 0I;
  #L3fef46.  return v1 @kind object;
  #L3fef48.  v0:= new `org.c.a.e.m`;
  #L3fef4c.  call `<init>`(v0, v1) @signature `Lorg/c/a/e/m;.<init>:(Lorg/c/a/e/l;)V` @kind direct;
  #L3fef52.  return v0 @kind object;
}
procedure `int` `a`(`org.c.a.e.m` v1 @kind this, `org.c.a.e.e` v2 @kind object, `java.lang.CharSequence` v3 @kind object, `int` v4 ) @signature `Lorg/c/a/e/m;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feebc.  v0:= v1.`org.c.a.e.m.a` @type ^`org.c.a.e.l` @kind object;
  #L3feec0.  call temp:= `a`(v0, v2, v3, v4) @signature `Lorg/c/a/e/l;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3feec6.  v2:= temp;
  #L3feec8.  return v2;
}
procedure `int` `a`(`org.c.a.e.m` v1 @kind this, `org.c.a.e.e` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Lorg/c/a/e/m;.a:(Lorg/c/a/e/e;Ljava/lang/String;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feedc.  v0:= v1.`org.c.a.e.m.a` @type ^`org.c.a.e.l` @kind object;
  #L3feee0.  call temp:= `a`(v0, v2, v3, v4) @signature `Lorg/c/a/e/l;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3feee6.  v2:= temp;
  #L3feee8.  return v2;
}
procedure `int` `b`(`org.c.a.e.m` v1 @kind this) @signature `Lorg/c/a/e/m;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3feefc.  v0:= v1.`org.c.a.e.m.a` @type ^`org.c.a.e.l` @kind object;
  #L3fef00.  call temp:= `b`(v0) @signature `Lorg/c/a/e/l;.b:()I` @kind interface;
  #L3fef06.  v0:= temp;
  #L3fef08.  return v0;
}
procedure `boolean` `equals`(`org.c.a.e.m` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/c/a/e/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fee80.  if v2 != v1 then goto L3fee88;
  #L3fee84.  v2:= 1I;
  #L3fee86.  return v2;
  #L3fee88.  v0:= instanceof @variable v2 @type ^`org.c.a.e.m` @kind boolean;
  #L3fee8c.  if v0 == 0 then goto L3feea6;
  #L3fee90.  v2:= (`org.c.a.e.m`) v2 @kind object;
  #L3fee94.  v0:= v1.`org.c.a.e.m.a` @type ^`org.c.a.e.l` @kind object;
  #L3fee98.  v2:= v2.`org.c.a.e.m.a` @type ^`org.c.a.e.l` @kind object;
  #L3fee9c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3feea2.  v2:= temp;
  #L3feea4.  return v2;
  #L3feea6.  v2:= 0I;
  #L3feea8.  return v2;
}
