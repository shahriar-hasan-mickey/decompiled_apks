record `org.c.a.e.q$d` @kind class @AccessFlag ABSTRACT extends `org.c.a.e.q$f` @kind interface {
  `java.lang.String`[] `org.c.a.e.q$d.a` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`org.c.a.e.q$d` v0 @kind this) @signature `Lorg/c/a/e/q$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ffb60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ffb66.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.q$d` v9 @kind this, `java.util.Set` v10 @kind object) @signature `Lorg/c/a/e/q$d;.a:(Ljava/util/Set;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ffb78.  v0:= v9.`org.c.a.e.q$d.a` @type ^`java.lang.String`[] @kind object;
  #L3ffb7c.  if v0 != 0 then goto L3ffc50;
  #L3ffb80.  v0:= 2147483647I;
  #L3ffb86.  v1:= 0I;
  #L3ffb88.  call temp:= `a`(v9) @signature `Lorg/c/a/e/q$d;.a:()[Ljava/lang/String;` @kind virtual;
  #L3ffb8e.  v2:= temp @kind object;
  #L3ffb90.  v3:= length @variable v2;
  #L3ffb92.  v4:= 0I;
  #L3ffb94.  v5:= v1 @kind object;
  #L3ffb96.  v0:= 0I;
  #L3ffb98.  v1:= 2147483647I;
  #L3ffb9e.  if v0 >= v3 then goto L3ffbc2;
  #L3ffba2.  v6:= v2[v0] @kind object;
  #L3ffba6.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ffbac.  v7:= temp;
  #L3ffbae.  if v7 >= v1 then goto L3ffbbc;
  #L3ffbb2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ffbb8.  v1:= temp;
  #L3ffbba.  v5:= v6 @kind object;
  #L3ffbbc.  v0:= v0 + 1;
  #L3ffbc0.  goto L3ffb9e;
  #L3ffbc2.  v0:= new `java.util.HashSet`;
  #L3ffbc6.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3ffbcc.  call temp:= `iterator`(v10) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ffbd2.  v10:= temp @kind object;
  #L3ffbd4.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ffbda.  v2:= temp;
  #L3ffbdc.  if v2 == 0 then goto L3ffc34;
  #L3ffbe0.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ffbe6.  v2:= temp @kind object;
  #L3ffbe8.  v2:= (`org.c.a.e.q$f`) v2 @kind object;
  #L3ffbec.  if v2 == 0 then goto L3ffbd4;
  #L3ffbf0.  call temp:= `a`(v2) @signature `Lorg/c/a/e/q$f;.a:()[Ljava/lang/String;` @kind interface;
  #L3ffbf6.  v2:= temp @kind object;
  #L3ffbf8.  v3:= length @variable v2;
  #L3ffbfa.  v6:= 0I;
  #L3ffbfc.  if v6 >= v3 then goto L3ffbd4;
  #L3ffc00.  v7:= v2[v6] @kind object;
  #L3ffc04.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3ffc0a.  v8:= temp;
  #L3ffc0c.  if v8 > v1 then goto L3ffc28;
  #L3ffc10.  call temp:= `equalsIgnoreCase`(v7, v5) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3ffc16.  v8:= temp;
  #L3ffc18.  if v8 == 0 then goto L3ffc2e;
  #L3ffc1c.  call temp:= `equals`(v7, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ffc22.  v8:= temp;
  #L3ffc24.  if v8 != 0 then goto L3ffc2e;
  #L3ffc28.  call temp:= `add`(v0, v7) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ffc2e.  v6:= v6 + 1;
  #L3ffc32.  goto L3ffbfc;
  #L3ffc34.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3ffc3a.  v10:= temp;
  #L3ffc3c.  v10:= new `java.lang.String`[v10];
  #L3ffc40.  call temp:= `toArray`(v0, v10) @signature `Ljava/util/Set;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ffc46.  v10:= temp @kind object;
  #L3ffc48.  v10:= (`java.lang.String`[]) v10 @kind object;
  #L3ffc4c.  v9.`org.c.a.e.q$d.a` @type ^`java.lang.String`[] := v10 @kind object;
  #L3ffc50.  return @kind void;
}
