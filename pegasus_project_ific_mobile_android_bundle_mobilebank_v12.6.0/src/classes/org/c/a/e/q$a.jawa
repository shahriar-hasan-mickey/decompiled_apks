record `org.c.a.e.q$a` @kind class @AccessFlag  extends `org.c.a.e.r` @kind interface, `org.c.a.e.s` @kind interface {
  `org.c.a.e.s`[] `org.c.a.e.q$a.a` @AccessFlag PRIVATE_FINAL;
  `org.c.a.e.r`[] `org.c.a.e.q$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.q$a` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lorg/c/a/e/q$a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ff238.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff23e.  v0:= new `java.util.ArrayList`;
  #L3ff242.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ff248.  v1:= new `java.util.ArrayList`;
  #L3ff24c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ff252.  call `a`(v3, v4, v0, v1) @signature `Lorg/c/a/e/q$a;.a:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L3ff258.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ff25e.  v4:= temp;
  #L3ff260.  v2:= 0I;
  #L3ff262.  if v4 > 0 then goto L3ff26c;
  #L3ff266.  v3.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] := v2 @kind object;
  #L3ff26a.  goto L3ff288;
  #L3ff26c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ff272.  v4:= temp;
  #L3ff274.  v4:= new `org.c.a.e.s`[v4];
  #L3ff278.  call temp:= `toArray`(v0, v4) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ff27e.  v4:= temp @kind object;
  #L3ff280.  v4:= (`org.c.a.e.s`[]) v4 @kind object;
  #L3ff284.  v3.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] := v4 @kind object;
  #L3ff288.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ff28e.  v4:= temp;
  #L3ff290.  if v4 > 0 then goto L3ff29a;
  #L3ff294.  v3.`org.c.a.e.q$a.b` @type ^`org.c.a.e.r`[] := v2 @kind object;
  #L3ff298.  goto L3ff2b6;
  #L3ff29a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ff2a0.  v4:= temp;
  #L3ff2a2.  v4:= new `org.c.a.e.r`[v4];
  #L3ff2a6.  call temp:= `toArray`(v1, v4) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3ff2ac.  v4:= temp @kind object;
  #L3ff2ae.  v4:= (`org.c.a.e.r`[]) v4 @kind object;
  #L3ff2b2.  v3.`org.c.a.e.q$a.b` @type ^`org.c.a.e.r`[] := v4 @kind object;
  #L3ff2b6.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.q$a` v4 @kind this, `java.util.List` v5 @kind object, `java.util.List` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lorg/c/a/e/q$a;.a:(Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff328.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3ff32e.  v0:= temp;
  #L3ff330.  v1:= 0I;
  #L3ff332.  if v1 >= v0 then goto L3ff39c;
  #L3ff336.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ff33c.  v2:= temp @kind object;
  #L3ff33e.  v3:= instanceof @variable v2 @type ^`org.c.a.e.s` @kind boolean;
  #L3ff342.  if v3 == 0 then goto L3ff364;
  #L3ff346.  v3:= instanceof @variable v2 @type ^`org.c.a.e.q$a` @kind boolean;
  #L3ff34a.  if v3 == 0 then goto L3ff35e;
  #L3ff34e.  v2:= (`org.c.a.e.q$a`) v2 @kind object;
  #L3ff352.  v2:= v2.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] @kind object;
  #L3ff356.  call `a`(v4, v6, v2) @signature `Lorg/c/a/e/q$a;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @kind direct;
  #L3ff35c.  goto L3ff364;
  #L3ff35e.  call temp:= `add`(v6, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ff364.  v2:= v1 + 1;
  #L3ff368.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3ff36e.  v2:= temp @kind object;
  #L3ff370.  v3:= instanceof @variable v2 @type ^`org.c.a.e.r` @kind boolean;
  #L3ff374.  if v3 == 0 then goto L3ff396;
  #L3ff378.  v3:= instanceof @variable v2 @type ^`org.c.a.e.q$a` @kind boolean;
  #L3ff37c.  if v3 == 0 then goto L3ff390;
  #L3ff380.  v2:= (`org.c.a.e.q$a`) v2 @kind object;
  #L3ff384.  v2:= v2.`org.c.a.e.q$a.b` @type ^`org.c.a.e.r`[] @kind object;
  #L3ff388.  call `a`(v4, v7, v2) @signature `Lorg/c/a/e/q$a;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @kind direct;
  #L3ff38e.  goto L3ff396;
  #L3ff390.  call temp:= `add`(v7, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ff396.  v1:= v1 + 2;
  #L3ff39a.  goto L3ff332;
  #L3ff39c.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.q$a` v2 @kind this, `java.util.List` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Lorg/c/a/e/q$a;.a:(Ljava/util/List;[Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ff2f8.  if v4 == 0 then goto L3ff314;
  #L3ff2fc.  v0:= 0I;
  #L3ff2fe.  v1:= length @variable v4;
  #L3ff300.  if v0 >= v1 then goto L3ff314;
  #L3ff304.  v1:= v4[v0] @kind object;
  #L3ff308.  call temp:= `add`(v3, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ff30e.  v0:= v0 + 1;
  #L3ff312.  goto L3ff2fe;
  #L3ff314.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.q$a` v5 @kind this, `org.c.a.w` v6 @kind object, `int` v7 , `java.util.Locale` v8 @kind object) @signature `Lorg/c/a/e/q$a;.a:(Lorg/c/a/w;ILjava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ff1c8.  v0:= v5.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] @kind object;
  #L3ff1cc.  v1:= length @variable v0;
  #L3ff1ce.  v2:= 0I;
  #L3ff1d0.  if v2 >= v7 then goto L3ff1f2;
  #L3ff1d4.  v1:= v1 + -1;
  #L3ff1d8.  if v1 < 0 then goto L3ff1f2;
  #L3ff1dc.  v3:= v0[v1] @kind object;
  #L3ff1e0.  v4:= 2147483647I;
  #L3ff1e6.  call temp:= `a`(v3, v6, v4, v8) @signature `Lorg/c/a/e/s;.a:(Lorg/c/a/w;ILjava/util/Locale;)I` @kind interface;
  #L3ff1ec.  v3:= temp;
  #L3ff1ee.  v2:= v2 + v3 @kind int;
  #L3ff1f0.  goto L3ff1d0;
  #L3ff1f2.  return v2;
}
procedure `int` `a`(`org.c.a.e.q$a` v4 @kind this, `org.c.a.w` v5 @kind object, `java.util.Locale` v6 @kind object) @signature `Lorg/c/a/e/q$a;.a:(Lorg/c/a/w;Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff204.  v0:= v4.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] @kind object;
  #L3ff208.  v1:= length @variable v0;
  #L3ff20a.  v2:= 0I;
  #L3ff20c.  v1:= v1 + -1;
  #L3ff210.  if v1 < 0 then goto L3ff224;
  #L3ff214.  v3:= v0[v1] @kind object;
  #L3ff218.  call temp:= `a`(v3, v5, v6) @signature `Lorg/c/a/e/s;.a:(Lorg/c/a/w;Ljava/util/Locale;)I` @kind interface;
  #L3ff21e.  v3:= temp;
  #L3ff220.  v2:= v2 + v3 @kind int;
  #L3ff222.  goto L3ff20c;
  #L3ff224.  return v2;
}
procedure `void` `a`(`org.c.a.e.q$a` v4 @kind this, `java.lang.StringBuffer` v5 @kind object, `org.c.a.w` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/e/q$a;.a:(Ljava/lang/StringBuffer;Lorg/c/a/w;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff2c8.  v0:= v4.`org.c.a.e.q$a.a` @type ^`org.c.a.e.s`[] @kind object;
  #L3ff2cc.  v1:= length @variable v0;
  #L3ff2ce.  v2:= 0I;
  #L3ff2d0.  if v2 >= v1 then goto L3ff2e4;
  #L3ff2d4.  v3:= v0[v2] @kind object;
  #L3ff2d8.  call `a`(v3, v5, v6, v7) @signature `Lorg/c/a/e/s;.a:(Ljava/lang/StringBuffer;Lorg/c/a/w;Ljava/util/Locale;)V` @kind interface;
  #L3ff2de.  v2:= v2 + 1;
  #L3ff2e2.  goto L3ff2d0;
  #L3ff2e4.  return @kind void;
}
