record `org.c.a.e.q$c` @kind class @AccessFlag  extends `org.c.a.e.r` @kind interface, `org.c.a.e.s` @kind interface {
  `int` `org.c.a.e.q$c.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.q$c.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.q$c.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.c.a.e.q$c.d` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.q$c.e` @AccessFlag PRIVATE_FINAL;
  `org.c.a.e.q$c`[] `org.c.a.e.q$c.f` @AccessFlag PRIVATE_FINAL;
  `org.c.a.e.q$f` `org.c.a.e.q$c.g` @AccessFlag PRIVATE_FINAL;
  `org.c.a.e.q$f` `org.c.a.e.q$c.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.q$c` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 , `int` v5 , `org.c.a.e.q$c`[] v6 @kind object, `org.c.a.e.q$f` v7 @kind object, `org.c.a.e.q$f` v8 @kind object) @signature `Lorg/c/a/e/q$c;.<init>:(IIIZI[Lorg/c/a/e/q$c;Lorg/c/a/e/q$f;Lorg/c/a/e/q$f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ff95c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff962.  v0.`org.c.a.e.q$c.a` @type ^`int` := v1;
  #L3ff966.  v0.`org.c.a.e.q$c.b` @type ^`int` := v2;
  #L3ff96a.  v0.`org.c.a.e.q$c.c` @type ^`int` := v3;
  #L3ff96e.  v0.`org.c.a.e.q$c.d` @type ^`boolean` := v4 @kind boolean;
  #L3ff972.  v0.`org.c.a.e.q$c.e` @type ^`int` := v5;
  #L3ff976.  v0.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] := v6 @kind object;
  #L3ff97a.  v0.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` := v7 @kind object;
  #L3ff97e.  v0.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` := v8 @kind object;
  #L3ff982.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.e.q$c` v1 @kind this, `org.c.a.e.q$c` v2 @kind object, `org.c.a.e.q$f` v3 @kind object) @signature `Lorg/c/a/e/q$c;.<init>:(Lorg/c/a/e/q$c;Lorg/c/a/e/q$f;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ff994.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ff99a.  v0:= v2.`org.c.a.e.q$c.a` @type ^`int`;
  #L3ff99e.  v1.`org.c.a.e.q$c.a` @type ^`int` := v0;
  #L3ff9a2.  v0:= v2.`org.c.a.e.q$c.b` @type ^`int`;
  #L3ff9a6.  v1.`org.c.a.e.q$c.b` @type ^`int` := v0;
  #L3ff9aa.  v0:= v2.`org.c.a.e.q$c.c` @type ^`int`;
  #L3ff9ae.  v1.`org.c.a.e.q$c.c` @type ^`int` := v0;
  #L3ff9b2.  v0:= v2.`org.c.a.e.q$c.d` @type ^`boolean` @kind boolean;
  #L3ff9b6.  v1.`org.c.a.e.q$c.d` @type ^`boolean` := v0 @kind boolean;
  #L3ff9ba.  v0:= v2.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff9be.  v1.`org.c.a.e.q$c.e` @type ^`int` := v0;
  #L3ff9c2.  v0:= v2.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] @kind object;
  #L3ff9c6.  v1.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] := v0 @kind object;
  #L3ff9ca.  v0:= v2.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff9ce.  v1.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` := v0 @kind object;
  #L3ff9d2.  v0:= v2.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff9d6.  if v0 == 0 then goto L3ff9ea;
  #L3ff9da.  v0:= new `org.c.a.e.q$b`;
  #L3ff9de.  v2:= v2.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff9e2.  call `<init>`(v0, v2, v3) @signature `Lorg/c/a/e/q$b;.<init>:(Lorg/c/a/e/q$f;Lorg/c/a/e/q$f;)V` @kind direct;
  #L3ff9e8.  v3:= v0 @kind object;
  #L3ff9ea.  v1.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` := v3 @kind object;
  #L3ff9ee.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.q$c` v1 @kind this) @signature `Lorg/c/a/e/q$c;.a:()I` @AccessFlag  {
    temp;
    v0;

  #L3ff610.  v0:= v1.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff614.  return v0;
}
procedure `int` `a`(`org.c.a.e.q$c` v3 @kind this, `org.c.a.w` v4 @kind object, `int` v5 , `java.util.Locale` v6 @kind object) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;ILjava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ff628.  v6:= 0I;
  #L3ff62a.  if v5 > 0 then goto L3ff630;
  #L3ff62e.  return v6;
  #L3ff630.  v5:= v3.`org.c.a.e.q$c.b` @type ^`int`;
  #L3ff634.  v0:= 4I;
  #L3ff636.  if v5 == v0 then goto L3ff658;
  #L3ff63a.  call temp:= `a`(v3, v4) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;)J` @kind virtual;
  #L3ff640.  v4:= temp @kind wide;
  #L3ff642.  v0:= 9223372036854775807L;
  #L3ff64c.  v2:= lcmp(v4, v0);
  #L3ff650.  if v2 == 0 then goto L3ff656;
  #L3ff654.  goto L3ff658;
  #L3ff656.  return v6;
  #L3ff658.  v4:= 1I;
  #L3ff65a.  return v4;
}
procedure `int` `a`(`org.c.a.e.q$c` v8 @kind this, `org.c.a.w` v9 @kind object, `java.util.Locale` v10 @kind object) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ff66c.  call temp:= `a`(v8, v9) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;)J` @kind virtual;
  #L3ff672.  v9:= temp @kind wide;
  #L3ff674.  v0:= 9223372036854775807L;
  #L3ff67e.  v2:= lcmp(v9, v0);
  #L3ff682.  if v2 != 0 then goto L3ff68a;
  #L3ff686.  v9:= 0I;
  #L3ff688.  return v9;
  #L3ff68a.  call temp:= `a`(v9) @signature `Lorg/c/a/e/i;.a:(J)I` @kind static;
  #L3ff690.  v0:= temp;
  #L3ff692.  v1:= v8.`org.c.a.e.q$c.a` @type ^`int`;
  #L3ff696.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ff69c.  v0:= temp;
  #L3ff69e.  v1:= v8.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff6a2.  v2:= 8I;
  #L3ff6a6.  if v1 < v2 then goto L3ff6f2;
  #L3ff6aa.  v1:= 0L;
  #L3ff6ae.  v3:= lcmp(v9, v1);
  #L3ff6b2.  if v3 >= 0 then goto L3ff6c2;
  #L3ff6b6.  v3:= 5I;
  #L3ff6b8.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ff6be.  v0:= temp;
  #L3ff6c0.  goto L3ff6c6;
  #L3ff6c2.  v3:= 4I;
  #L3ff6c4.  goto L3ff6b8;
  #L3ff6c6.  v0:= v0 + 1;
  #L3ff6ca.  v3:= v8.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff6ce.  v4:= 9I;
  #L3ff6d2.  v5:= 1000L;
  #L3ff6d6.  if v3 != v4 then goto L3ff6f0;
  #L3ff6da.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3ff6e0.  v3:= temp @kind wide;
  #L3ff6e2.  v3:= v3 %% v5 @kind long;
  #L3ff6e4.  v7:= lcmp(v3, v1);
  #L3ff6e8.  if v7 != 0 then goto L3ff6f0;
  #L3ff6ec.  v0:= v0 + -4;
  #L3ff6f0.  v9:= v9 / v5 @kind long;
  #L3ff6f2.  v9:= (`int`) v9 @kind l2i;
  #L3ff6f4.  v10:= v8.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff6f8.  if v10 == 0 then goto L3ff70a;
  #L3ff6fc.  v10:= v8.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff700.  call temp:= `a`(v10, v9) @signature `Lorg/c/a/e/q$f;.a:(I)I` @kind interface;
  #L3ff706.  v10:= temp;
  #L3ff708.  v0:= v0 + v10 @kind int;
  #L3ff70a.  v10:= v8.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff70e.  if v10 == 0 then goto L3ff720;
  #L3ff712.  v10:= v8.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ff716.  call temp:= `a`(v10, v9) @signature `Lorg/c/a/e/q$f;.a:(I)I` @kind interface;
  #L3ff71c.  v9:= temp;
  #L3ff71e.  v0:= v0 + v9 @kind int;
  #L3ff720.  return v0;
}
procedure `long` `a`(`org.c.a.e.q$c` v9 @kind this, `org.c.a.w` v10 @kind object) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ff734.  v0:= v9.`org.c.a.e.q$c.b` @type ^`int`;
  #L3ff738.  v1:= 4I;
  #L3ff73a.  if v0 != v1 then goto L3ff742;
  #L3ff73e.  v0:= 0I;
  #L3ff740.  goto L3ff74a;
  #L3ff742.  call temp:= `e`(v10) @signature `Lorg/c/a/w;.e:()Lorg/c/a/o;` @kind interface;
  #L3ff748.  v0:= temp @kind object;
  #L3ff74a.  v1:= 9223372036854775807L;
  #L3ff754.  if v0 == 0 then goto L3ff76a;
  #L3ff758.  v3:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff75c.  call temp:= `a`(v9, v0, v3) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/o;I)Z` @kind virtual;
  #L3ff762.  v3:= temp;
  #L3ff764.  if v3 != 0 then goto L3ff76a;
  #L3ff768.  return v1 @kind wide;
  #L3ff76a.  v3:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff76e.  goto L3ff90c;
  #L3ff774.  return v1 @kind wide;
  #L3ff776.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L3ff77c.  v3:= temp @kind object;
  #L3ff77e.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff784.  v3:= temp;
  #L3ff786.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L3ff78c.  v4:= temp @kind object;
  #L3ff78e.  call temp:= `a`(v10, v4) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff794.  v4:= temp;
  #L3ff796.  v5:= (`long`) v3 @kind i2l;
  #L3ff798.  v7:= 1000L;
  #L3ff79c.  v5:= v5 * v7 @kind long;
  #L3ff7a0.  v3:= (`long`) v4 @kind i2l;
  #L3ff7a2.  v7:= v5 + v3 @kind long;
  #L3ff7a6.  goto L3ff846;
  #L3ff7a8.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L3ff7ae.  v3:= temp @kind object;
  #L3ff7b0.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff7b6.  v3:= temp;
  #L3ff7b8.  v7:= (`long`) v3 @kind i2l;
  #L3ff7ba.  goto L3ff846;
  #L3ff7bc.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L3ff7c2.  v3:= temp @kind object;
  #L3ff7c4.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff7ca.  v3:= temp;
  #L3ff7cc.  v7:= (`long`) v3 @kind i2l;
  #L3ff7ce.  goto L3ff846;
  #L3ff7d0.  call temp:= `c`() @signature `Lorg/c/a/h;.c:()Lorg/c/a/h;` @kind static;
  #L3ff7d6.  v3:= temp @kind object;
  #L3ff7d8.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff7de.  v3:= temp;
  #L3ff7e0.  v7:= (`long`) v3 @kind i2l;
  #L3ff7e2.  goto L3ff846;
  #L3ff7e4.  call temp:= `d`() @signature `Lorg/c/a/h;.d:()Lorg/c/a/h;` @kind static;
  #L3ff7ea.  v3:= temp @kind object;
  #L3ff7ec.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff7f2.  v3:= temp;
  #L3ff7f4.  v7:= (`long`) v3 @kind i2l;
  #L3ff7f6.  goto L3ff846;
  #L3ff7f8.  call temp:= `f`() @signature `Lorg/c/a/h;.f:()Lorg/c/a/h;` @kind static;
  #L3ff7fe.  v3:= temp @kind object;
  #L3ff800.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff806.  v3:= temp;
  #L3ff808.  v7:= (`long`) v3 @kind i2l;
  #L3ff80a.  goto L3ff846;
  #L3ff80c.  call temp:= `g`() @signature `Lorg/c/a/h;.g:()Lorg/c/a/h;` @kind static;
  #L3ff812.  v3:= temp @kind object;
  #L3ff814.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff81a.  v3:= temp;
  #L3ff81c.  v7:= (`long`) v3 @kind i2l;
  #L3ff81e.  goto L3ff846;
  #L3ff820.  call temp:= `i`() @signature `Lorg/c/a/h;.i:()Lorg/c/a/h;` @kind static;
  #L3ff826.  v3:= temp @kind object;
  #L3ff828.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff82e.  v3:= temp;
  #L3ff830.  v7:= (`long`) v3 @kind i2l;
  #L3ff832.  goto L3ff846;
  #L3ff834.  call temp:= `j`() @signature `Lorg/c/a/h;.j:()Lorg/c/a/h;` @kind static;
  #L3ff83a.  v3:= temp @kind object;
  #L3ff83c.  call temp:= `a`(v10, v3) @signature `Lorg/c/a/w;.a:(Lorg/c/a/h;)I` @kind interface;
  #L3ff842.  v3:= temp;
  #L3ff844.  v7:= (`long`) v3 @kind i2l;
  #L3ff846.  v3:= 0L;
  #L3ff84a.  v5:= lcmp(v7, v3);
  #L3ff84e.  if v5 != 0 then goto L3ff908;
  #L3ff852.  v3:= v9.`org.c.a.e.q$c.b` @type ^`int`;
  #L3ff856.  v4:= 5I;
  #L3ff858.  if v3 == v4 then goto L3ff906;
  #L3ff85c.  v4:= 9I;
  #L3ff860.  goto L3ff93c;
  #L3ff866.  goto L3ff908;
  #L3ff868.  call temp:= `b`(v9, v10) @signature `Lorg/c/a/e/q$c;.b:(Lorg/c/a/w;)Z` @kind virtual;
  #L3ff86e.  v10:= temp;
  #L3ff870.  if v10 == 0 then goto L3ff8aa;
  #L3ff874.  v10:= v9.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] @kind object;
  #L3ff878.  v3:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff87c.  v10:= v10[v3] @kind object;
  #L3ff880.  if v10 != v9 then goto L3ff8aa;
  #L3ff884.  v10:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff888.  v10:= v10 + 1;
  #L3ff88c.  if v10 > v4 then goto L3ff908;
  #L3ff890.  call temp:= `a`(v9, v0, v10) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/o;I)Z` @kind virtual;
  #L3ff896.  v3:= temp;
  #L3ff898.  if v3 == 0 then goto L3ff888;
  #L3ff89c.  v3:= v9.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] @kind object;
  #L3ff8a0.  v3:= v3[v10] @kind object;
  #L3ff8a4.  if v3 == 0 then goto L3ff888;
  #L3ff8a8.  return v1 @kind wide;
  #L3ff8aa.  return v1 @kind wide;
  #L3ff8ac.  call temp:= `b`(v9, v10) @signature `Lorg/c/a/e/q$c;.b:(Lorg/c/a/w;)Z` @kind virtual;
  #L3ff8b2.  v10:= temp;
  #L3ff8b4.  if v10 == 0 then goto L3ff904;
  #L3ff8b8.  v10:= v9.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] @kind object;
  #L3ff8bc.  v3:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff8c0.  v10:= v10[v3] @kind object;
  #L3ff8c4.  if v10 != v9 then goto L3ff904;
  #L3ff8c8.  v10:= v9.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ff8cc.  v3:= 8I;
  #L3ff8d0.  call temp:= `min`(v10, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3ff8d6.  v10:= temp;
  #L3ff8d8.  v10:= v10 + -1;
  #L3ff8dc.  if v10 < 0 then goto L3ff908;
  #L3ff8e0.  if v10 > v4 then goto L3ff908;
  #L3ff8e4.  call temp:= `a`(v9, v0, v10) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/o;I)Z` @kind virtual;
  #L3ff8ea.  v3:= temp;
  #L3ff8ec.  if v3 == 0 then goto L3ff8fe;
  #L3ff8f0.  v3:= v9.`org.c.a.e.q$c.f` @type ^`org.c.a.e.q$c`[] @kind object;
  #L3ff8f4.  v3:= v3[v10] @kind object;
  #L3ff8f8.  if v3 == 0 then goto L3ff8fe;
  #L3ff8fc.  return v1 @kind wide;
  #L3ff8fe.  v10:= v10 + -1;
  #L3ff902.  goto L3ff8dc;
  #L3ff904.  return v1 @kind wide;
  #L3ff906.  return v1 @kind wide;
  #L3ff908.  return v7 @kind wide;
  #L3ff90a.  
  #L3ff90c.  switch v3
                  | 0 => goto L3ff834
                  | 1 => goto L3ff820
                  | 2 => goto L3ff80c
                  | 3 => goto L3ff7f8
                  | 4 => goto L3ff7e4
                  | 5 => goto L3ff7d0
                  | 6 => goto L3ff7bc
                  | 7 => goto L3ff7a8
                  | 8 => goto L3ff776
                  | 9 => goto L3ff776
                  | else => goto L3ff774;
  #L3ff93c.  switch v3
                  | 1 => goto L3ff8ac
                  | 2 => goto L3ff868
                  | else => goto L3ff866;
}
procedure `void` `a`(`org.c.a.e.q$c` v7 @kind this, `java.lang.StringBuffer` v8 @kind object, `org.c.a.w` v9 @kind object, `java.util.Locale` v10 @kind object) @signature `Lorg/c/a/e/q$c;.a:(Ljava/lang/StringBuffer;Lorg/c/a/w;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ffa00.  call temp:= `a`(v7, v9) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/w;)J` @kind virtual;
  #L3ffa06.  v9:= temp @kind wide;
  #L3ffa08.  v0:= 9223372036854775807L;
  #L3ffa12.  v2:= lcmp(v9, v0);
  #L3ffa16.  if v2 != 0 then goto L3ffa1c;
  #L3ffa1a.  return @kind void;
  #L3ffa1c.  v0:= (`int`) v9 @kind l2i;
  #L3ffa1e.  v1:= v7.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ffa22.  v2:= 1000L;
  #L3ffa26.  v4:= 8I;
  #L3ffa2a.  if v1 < v4 then goto L3ffa34;
  #L3ffa2e.  v0:= v9 / v2 @kind long;
  #L3ffa32.  v0:= (`int`) v0 @kind l2i;
  #L3ffa34.  v1:= v7.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffa38.  if v1 == 0 then goto L3ffa46;
  #L3ffa3c.  v1:= v7.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffa40.  call `a`(v1, v8, v0) @signature `Lorg/c/a/e/q$f;.a:(Ljava/lang/StringBuffer;I)V` @kind interface;
  #L3ffa46.  call temp:= `length`(v8) @signature `Ljava/lang/StringBuffer;.length:()I` @kind virtual;
  #L3ffa4c.  v1:= temp;
  #L3ffa4e.  v5:= v7.`org.c.a.e.q$c.a` @type ^`int`;
  #L3ffa52.  v6:= 1I;
  #L3ffa54.  if v5 > v6 then goto L3ffa60;
  #L3ffa58.  call `a`(v8, v0) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/StringBuffer;I)V` @kind static;
  #L3ffa5e.  goto L3ffa66;
  #L3ffa60.  call `a`(v8, v0, v5) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/StringBuffer;II)V` @kind static;
  #L3ffa66.  v5:= v7.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ffa6a.  if v5 < v4 then goto L3ffaba;
  #L3ffa6e.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3ffa74.  v5:= temp @kind wide;
  #L3ffa76.  v5:= v5 %% v2 @kind long;
  #L3ffa78.  v2:= (`int`) v5 @kind l2i;
  #L3ffa7a.  v3:= v7.`org.c.a.e.q$c.e` @type ^`int`;
  #L3ffa7e.  if v3 == v4 then goto L3ffa86;
  #L3ffa82.  if v2 <= 0 then goto L3ffaba;
  #L3ffa86.  v3:= 0L;
  #L3ffa8a.  v5:= lcmp(v9, v3);
  #L3ffa8e.  if v5 >= 0 then goto L3ffaa8;
  #L3ffa92.  v3:= -1000L;
  #L3ffa96.  v5:= lcmp(v9, v3);
  #L3ffa9a.  if v5 <= 0 then goto L3ffaa8;
  #L3ffa9e.  v9:= 45I;
  #L3ffaa2.  call temp:= `insert`(v8, v1, v9) @signature `Ljava/lang/StringBuffer;.insert:(IC)Ljava/lang/StringBuffer;` @kind virtual;
  #L3ffaa8.  v9:= 46I;
  #L3ffaac.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3ffab2.  v9:= 3I;
  #L3ffab4.  call `a`(v8, v2, v9) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/StringBuffer;II)V` @kind static;
  #L3ffaba.  v9:= v7.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffabe.  if v9 == 0 then goto L3ffacc;
  #L3ffac2.  v9:= v7.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffac6.  call `a`(v9, v8, v0) @signature `Lorg/c/a/e/q$f;.a:(Ljava/lang/StringBuffer;I)V` @kind interface;
  #L3ffacc.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.q$c` v6 @kind this, `org.c.a.e.q$c`[] v7 @kind object) @signature `Lorg/c/a/e/q$c;.a:([Lorg/c/a/e/q$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ffae0.  v0:= new `java.util.HashSet`;
  #L3ffae4.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3ffaea.  v1:= new `java.util.HashSet`;
  #L3ffaee.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3ffaf4.  v2:= length @variable v7;
  #L3ffaf6.  v3:= 0I;
  #L3ffaf8.  if v3 >= v2 then goto L3ffb2a;
  #L3ffafc.  v4:= v7[v3] @kind object;
  #L3ffb00.  if v4 == 0 then goto L3ffb24;
  #L3ffb04.  call temp:= `equals`(v6, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ffb0a.  v5:= temp;
  #L3ffb0c.  if v5 != 0 then goto L3ffb24;
  #L3ffb10.  v5:= v4.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb14.  call temp:= `add`(v0, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ffb1a.  v4:= v4.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb1e.  call temp:= `add`(v1, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ffb24.  v3:= v3 + 1;
  #L3ffb28.  goto L3ffaf8;
  #L3ffb2a.  v7:= v6.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb2e.  if v7 == 0 then goto L3ffb3c;
  #L3ffb32.  v7:= v6.`org.c.a.e.q$c.g` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb36.  call `a`(v7, v0) @signature `Lorg/c/a/e/q$f;.a:(Ljava/util/Set;)V` @kind interface;
  #L3ffb3c.  v7:= v6.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb40.  if v7 == 0 then goto L3ffb4e;
  #L3ffb44.  v7:= v6.`org.c.a.e.q$c.h` @type ^`org.c.a.e.q$f` @kind object;
  #L3ffb48.  call `a`(v7, v1) @signature `Lorg/c/a/e/q$f;.a:(Ljava/util/Set;)V` @kind interface;
  #L3ffb4e.  return @kind void;
}
procedure `boolean` `a`(`org.c.a.e.q$c` v1 @kind this, `org.c.a.o` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/e/q$c;.a:(Lorg/c/a/o;I)Z` @AccessFlag  {
    temp;
    v0;

  #L3ff4d0.  v0:= 0I;
  #L3ff4d2.  goto L3ff598;
  #L3ff4d8.  return v0;
  #L3ff4da.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L3ff4e0.  v3:= temp @kind object;
  #L3ff4e2.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff4e8.  v3:= temp;
  #L3ff4ea.  if v3 != 0 then goto L3ff502;
  #L3ff4ee.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L3ff4f4.  v3:= temp @kind object;
  #L3ff4f6.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff4fc.  v2:= temp;
  #L3ff4fe.  if v2 == 0 then goto L3ff504;
  #L3ff502.  v0:= 1I;
  #L3ff504.  return v0;
  #L3ff506.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L3ff50c.  v3:= temp @kind object;
  #L3ff50e.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff514.  v2:= temp;
  #L3ff516.  return v2;
  #L3ff518.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L3ff51e.  v3:= temp @kind object;
  #L3ff520.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff526.  v2:= temp;
  #L3ff528.  return v2;
  #L3ff52a.  call temp:= `c`() @signature `Lorg/c/a/h;.c:()Lorg/c/a/h;` @kind static;
  #L3ff530.  v3:= temp @kind object;
  #L3ff532.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff538.  v2:= temp;
  #L3ff53a.  return v2;
  #L3ff53c.  call temp:= `d`() @signature `Lorg/c/a/h;.d:()Lorg/c/a/h;` @kind static;
  #L3ff542.  v3:= temp @kind object;
  #L3ff544.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff54a.  v2:= temp;
  #L3ff54c.  return v2;
  #L3ff54e.  call temp:= `f`() @signature `Lorg/c/a/h;.f:()Lorg/c/a/h;` @kind static;
  #L3ff554.  v3:= temp @kind object;
  #L3ff556.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff55c.  v2:= temp;
  #L3ff55e.  return v2;
  #L3ff560.  call temp:= `g`() @signature `Lorg/c/a/h;.g:()Lorg/c/a/h;` @kind static;
  #L3ff566.  v3:= temp @kind object;
  #L3ff568.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff56e.  v2:= temp;
  #L3ff570.  return v2;
  #L3ff572.  call temp:= `i`() @signature `Lorg/c/a/h;.i:()Lorg/c/a/h;` @kind static;
  #L3ff578.  v3:= temp @kind object;
  #L3ff57a.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff580.  v2:= temp;
  #L3ff582.  return v2;
  #L3ff584.  call temp:= `j`() @signature `Lorg/c/a/h;.j:()Lorg/c/a/h;` @kind static;
  #L3ff58a.  v3:= temp @kind object;
  #L3ff58c.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @kind virtual;
  #L3ff592.  v2:= temp;
  #L3ff594.  return v2;
  #L3ff596.  
  #L3ff598.  switch v3
                  | 0 => goto L3ff584
                  | 1 => goto L3ff572
                  | 2 => goto L3ff560
                  | 3 => goto L3ff54e
                  | 4 => goto L3ff53c
                  | 5 => goto L3ff52a
                  | 6 => goto L3ff518
                  | 7 => goto L3ff506
                  | 8 => goto L3ff4da
                  | 9 => goto L3ff4da
                  | else => goto L3ff4d8;
}
procedure `boolean` `b`(`org.c.a.e.q$c` v4 @kind this, `org.c.a.w` v5 @kind object) @signature `Lorg/c/a/e/q$c;.b:(Lorg/c/a/w;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ff5d8.  call temp:= `f`(v5) @signature `Lorg/c/a/w;.f:()I` @kind interface;
  #L3ff5de.  v0:= temp;
  #L3ff5e0.  v1:= 0I;
  #L3ff5e2.  v2:= 0I;
  #L3ff5e4.  if v2 >= v0 then goto L3ff5fc;
  #L3ff5e8.  call temp:= `b`(v5, v2) @signature `Lorg/c/a/w;.b:(I)I` @kind interface;
  #L3ff5ee.  v3:= temp;
  #L3ff5f0.  if v3 == 0 then goto L3ff5f6;
  #L3ff5f4.  return v1;
  #L3ff5f6.  v2:= v2 + 1;
  #L3ff5fa.  goto L3ff5e4;
  #L3ff5fc.  v5:= 1I;
  #L3ff5fe.  return v5;
}
