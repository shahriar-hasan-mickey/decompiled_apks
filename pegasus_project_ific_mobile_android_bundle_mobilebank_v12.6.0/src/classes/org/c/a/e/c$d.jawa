record `org.c.a.e.c$d` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface, `org.c.a.e.n` @kind interface {
  `int` `org.c.a.e.c$d.a` @AccessFlag PROTECTED;
  `int` `org.c.a.e.c$d.b` @AccessFlag PROTECTED;
  `org.c.a.d` `org.c.a.e.c$d.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$d` v0 @kind this, `org.c.a.d` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lorg/c/a/e/c$d;.<init>:(Lorg/c/a/d;II)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3fa108.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fa10e.  v0.`org.c.a.e.c$d.c` @type ^`org.c.a.d` := v1 @kind object;
  #L3fa112.  v1:= 18I;
  #L3fa116.  if v3 <= v1 then goto L3fa11c;
  #L3fa11a.  goto L3fa11e;
  #L3fa11c.  v1:= v3;
  #L3fa11e.  v0.`org.c.a.e.c$d.a` @type ^`int` := v2;
  #L3fa122.  v0.`org.c.a.e.c$d.b` @type ^`int` := v1;
  #L3fa126.  return @kind void;
}
procedure `long`[] `a`(`org.c.a.e.c$d` v7 @kind this, `long` v8 , `org.c.a.c` v10 @kind object) @signature `Lorg/c/a/e/c$d;.a:(JLorg/c/a/c;)[J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f9fac.  call temp:= `e`(v10) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f9fb2.  v10:= temp @kind object;
  #L3f9fb4.  call temp:= `d`(v10) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f9fba.  v0:= temp @kind wide;
  #L3f9fbc.  v10:= v7.`org.c.a.e.c$d.b` @type ^`int`;
  #L3f9fc0.  goto L3fa0a8;
  #L3f9fc6.  v2:= 1L;
  #L3f9fca.  goto L3fa076;
  #L3f9fcc.  v2:= 1000000000000000000L;
  #L3f9fd6.  goto L3fa076;
  #L3f9fd8.  v2:= 100000000000000000L;
  #L3f9fe2.  goto L3fa076;
  #L3f9fe4.  v2:= 10000000000000000L;
  #L3f9fee.  goto L3fa076;
  #L3f9ff0.  v2:= 1000000000000000L;
  #L3f9ffa.  goto L3fa076;
  #L3f9ffc.  v2:= 100000000000000L;
  #L3fa006.  goto L3fa076;
  #L3fa008.  v2:= 10000000000000L;
  #L3fa012.  goto L3fa076;
  #L3fa014.  v2:= 1000000000000L;
  #L3fa01e.  goto L3fa076;
  #L3fa020.  v2:= 100000000000L;
  #L3fa02a.  goto L3fa076;
  #L3fa02c.  v2:= 10000000000L;
  #L3fa036.  goto L3fa076;
  #L3fa038.  v2:= 1000000000L;
  #L3fa03e.  goto L3fa076;
  #L3fa040.  v2:= 100000000L;
  #L3fa046.  goto L3fa076;
  #L3fa048.  v2:= 10000000L;
  #L3fa04e.  goto L3fa076;
  #L3fa050.  v2:= 1000000L;
  #L3fa056.  goto L3fa076;
  #L3fa058.  v2:= 100000L;
  #L3fa05e.  goto L3fa076;
  #L3fa060.  v2:= 10000L;
  #L3fa064.  goto L3fa076;
  #L3fa066.  v2:= 1000L;
  #L3fa06a.  goto L3fa076;
  #L3fa06c.  v2:= 100L;
  #L3fa070.  goto L3fa076;
  #L3fa072.  v2:= 10L;
  #L3fa076.  v4:= v0 * v2 @kind long;
  #L3fa07a.  v4:= v4 / v2 @kind long;
  #L3fa07c.  v6:= lcmp(v4, v0);
  #L3fa080.  if v6 != 0 then goto L3fa0a0;
  #L3fa084.  v4:= 2I;
  #L3fa086.  v4:= new `long`[v4];
  #L3fa08a.  v5:= 0I;
  #L3fa08c.  v8:= v8 * v2 @kind long;
  #L3fa090.  v8:= v8 / v0 @kind long;
  #L3fa092.  v4[v5]:= v8 @kind wide;
  #L3fa096.  v8:= 1I;
  #L3fa098.  v9:= (`long`) v10 @kind i2l;
  #L3fa09a.  v4[v8]:= v9 @kind wide;
  #L3fa09e.  return v4 @kind object;
  #L3fa0a0.  v10:= v10 + -1;
  #L3fa0a4.  goto L3f9fc0;
  #L3fa0a6.  
  #L3fa0a8.  switch v10
                  | 1 => goto L3fa072
                  | 2 => goto L3fa06c
                  | 3 => goto L3fa066
                  | 4 => goto L3fa060
                  | 5 => goto L3fa058
                  | 6 => goto L3fa050
                  | 7 => goto L3fa048
                  | 8 => goto L3fa040
                  | 9 => goto L3fa038
                  | 10 => goto L3fa02c
                  | 11 => goto L3fa020
                  | 12 => goto L3fa014
                  | 13 => goto L3fa008
                  | 14 => goto L3f9ffc
                  | 15 => goto L3f9ff0
                  | 16 => goto L3f9fe4
                  | 17 => goto L3f9fd8
                  | 18 => goto L3f9fcc
                  | else => goto L3f9fc6;
}
procedure `int` `a`(`org.c.a.e.c$d` v1 @kind this) @signature `Lorg/c/a/e/c$d;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9e90.  v0:= v1.`org.c.a.e.c$d.b` @type ^`int`;
  #L3f9e94.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$d` v17 @kind this, `org.c.a.e.e` v18 @kind object, `java.lang.CharSequence` v19 @kind object, `int` v20 ) @signature `Lorg/c/a/e/c$d;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3f9ea8.  v0:= v17 @kind object;
  #L3f9eac.  v2:= v0.`org.c.a.e.c$d.c` @type ^`org.c.a.d` @kind object;
  #L3f9eb0.  call temp:= `a`(v18) @signature `Lorg/c/a/e/e;.a:()Lorg/c/a/a;` @kind virtual;
  #L3f9eb6.  v3:= temp @kind object;
  #L3f9eb8.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L3f9ebe.  v2:= temp @kind object;
  #L3f9ec0.  v3:= v0.`org.c.a.e.c$d.b` @type ^`int`;
  #L3f9ec4.  call temp:= `length`(v19) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f9eca.  v4:= temp;
  #L3f9ecc.  v4:= v4 - v20 @kind int;
  #L3f9ed0.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3f9ed6.  v3:= temp;
  #L3f9ed8.  call temp:= `e`(v2) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f9ede.  v4:= temp @kind object;
  #L3f9ee0.  call temp:= `d`(v4) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f9ee6.  v4:= temp @kind wide;
  #L3f9ee8.  v6:= 10L;
  #L3f9eec.  v4:= v4 * v6 @kind long;
  #L3f9ef0.  v8:= 0L;
  #L3f9ef4.  v10:= 0I;
  #L3f9ef6.  if v10 >= v3 then goto L3f9f34;
  #L3f9efa.  v11:= v20 + v10 @kind int;
  #L3f9efe.  v12:= v19 @kind object;
  #L3f9f02.  call temp:= `charAt`(v12, v11) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3f9f08.  v11:= temp;
  #L3f9f0a.  v13:= 48I;
  #L3f9f0e.  if v11 < v13 then goto L3f9f34;
  #L3f9f12.  v13:= 57I;
  #L3f9f16.  if v11 <= v13 then goto L3f9f1c;
  #L3f9f1a.  goto L3f9f34;
  #L3f9f1c.  v10:= v10 + 1;
  #L3f9f20.  v4:= v4 / v6 @kind long;
  #L3f9f22.  v11:= v11 + -48;
  #L3f9f26.  v13:= (`long`) v11 @kind i2l;
  #L3f9f28.  v13:= v13 * v4 @kind long;
  #L3f9f2c.  v15:= v8 + v13 @kind long;
  #L3f9f30.  v8:= v15 @kind wide;
  #L3f9f32.  goto L3f9ef6;
  #L3f9f34.  v8:= v8 / v6 @kind long;
  #L3f9f36.  if v10 != 0 then goto L3f9f40;
  #L3f9f3a.  v1:= v20 ^~ -1;
  #L3f9f3e.  return v1;
  #L3f9f40.  v3:= 2147483647L;
  #L3f9f46.  v5:= lcmp(v8, v3);
  #L3f9f4a.  if v5 <= 0 then goto L3f9f54;
  #L3f9f4e.  v1:= v20 ^~ -1;
  #L3f9f52.  return v1;
  #L3f9f54.  v3:= new `org.c.a.d.l`;
  #L3f9f58.  call temp:= `a`() @signature `Lorg/c/a/d;.a:()Lorg/c/a/d;` @kind static;
  #L3f9f5e.  v4:= temp @kind object;
  #L3f9f60.  v5:= `@@org.c.a.d.j.a` @type ^`org.c.a.g` @kind object;
  #L3f9f64.  call temp:= `e`(v2) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f9f6a.  v2:= temp @kind object;
  #L3f9f6c.  call `<init>`(v3, v4, v5, v2) @signature `Lorg/c/a/d/l;.<init>:(Lorg/c/a/d;Lorg/c/a/g;Lorg/c/a/g;)V` @kind direct;
  #L3f9f72.  v2:= (`int`) v8 @kind l2i;
  #L3f9f74.  v4:= v18 @kind object;
  #L3f9f78.  call `a`(v4, v3, v2) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/c;I)V` @kind virtual;
  #L3f9f7e.  v1:= v20 + v10 @kind int;
  #L3f9f82.  return v1;
}
procedure `void` `a`(`org.c.a.e.c$d` v8 @kind this, `java.lang.Appendable` v9 @kind object, `long` v10 , `org.c.a.a` v12 @kind object) @signature `Lorg/c/a/e/c$d;.a:(Ljava/lang/Appendable;JLorg/c/a/a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3fa138.  v0:= v8.`org.c.a.e.c$d.c` @type ^`org.c.a.d` @kind object;
  #L3fa13c.  call temp:= `a`(v0, v12) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L3fa142.  v12:= temp @kind object;
  #L3fa144.  v0:= v8.`org.c.a.e.c$d.a` @type ^`int`;
  #L3fa148.  call temp:= `i`(v12, v10) @signature `Lorg/c/a/c;.i:(J)J` @kind virtual;
  #L3fa14e.  v10:= temp @kind wide;
  #L3fa150.  v1:= 0L;
  #L3fa154.  v3:= lcmp(v10, v1);
  #L3fa158.  v1:= 48I;
  #L3fa15c.  if v3 != 0 then goto L3fa172;
  #L3fa160.  v0:= v0 + -1;
  #L3fa164.  if v0 < 0 then goto L3fa170;
  #L3fa168.  call temp:= `append`(v9, v1) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fa16e.  goto L3fa160;
  #L3fa170.  return @kind void;
  #L3fa172.  call temp:= `a`(v8, v10, v12) @signature `Lorg/c/a/e/c$d;.a:(JLorg/c/a/c;)[J` @kind direct;
  #L3fa178.  v10:= temp @kind object;
  #L3fa17a.  v11:= 0I;
  #L3fa17c.  v2:= v10[v11] @kind wide;
  #L3fa180.  v12:= 1I;
  #L3fa182.  v4:= v10[v12] @kind wide;
  #L3fa186.  v10:= (`int`) v4 @kind l2i;
  #L3fa188.  v4:= 2147483647L;
  #L3fa18e.  v6:= v2 ^& v4 @kind long;
  #L3fa192.  v4:= lcmp(v6, v2);
  #L3fa196.  if v4 != 0 then goto L3fa1a6;
  #L3fa19a.  v2:= (`int`) v2 @kind l2i;
  #L3fa19c.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L3fa1a2.  v2:= temp @kind object;
  #L3fa1a4.  goto L3fa1ae;
  #L3fa1a6.  call temp:= `toString`(v2) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L3fa1ac.  v2:= temp @kind object;
  #L3fa1ae.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fa1b4.  v3:= temp;
  #L3fa1b6.  if v3 >= v10 then goto L3fa1ca;
  #L3fa1ba.  call temp:= `append`(v9, v1) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fa1c0.  v0:= v0 + -1;
  #L3fa1c4.  v10:= v10 + -1;
  #L3fa1c8.  goto L3fa1b6;
  #L3fa1ca.  if v0 >= v10 then goto L3fa218;
  #L3fa1ce.  if v0 >= v10 then goto L3fa1f2;
  #L3fa1d2.  if v3 <= v12 then goto L3fa1f2;
  #L3fa1d6.  v4:= v3 + -1;
  #L3fa1da.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fa1e0.  v4:= temp;
  #L3fa1e2.  if v4 == v1 then goto L3fa1e8;
  #L3fa1e6.  goto L3fa1f2;
  #L3fa1e8.  v10:= v10 + -1;
  #L3fa1ec.  v3:= v3 + -1;
  #L3fa1f0.  goto L3fa1ce;
  #L3fa1f2.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fa1f8.  v10:= temp;
  #L3fa1fa.  if v3 >= v10 then goto L3fa218;
  #L3fa1fe.  if v11 >= v3 then goto L3fa216;
  #L3fa202.  call temp:= `charAt`(v2, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3fa208.  v10:= temp;
  #L3fa20a.  call temp:= `append`(v9, v10) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fa210.  v11:= v11 + 1;
  #L3fa214.  goto L3fa1fe;
  #L3fa216.  return @kind void;
  #L3fa218.  call temp:= `append`(v9, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3fa21e.  return @kind void;
  #L3fa220.  call `a`(v9, v0) @signature `Lorg/c/a/e/c;.a:(Ljava/lang/Appendable;I)V` @kind static;
  #L3fa226.  return @kind void;
  catch `java.lang.RuntimeException` @[L3fa148..L3fa150] goto L3fa220;
}
procedure `void` `a`(`org.c.a.e.c$d` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.c.a.a` v4 @kind object, `int` v5 , `org.c.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/e/c$d;.a:(Ljava/lang/Appendable;JLorg/c/a/a;ILorg/c/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fa248.  call `a`(v0, v1, v2, v4) @signature `Lorg/c/a/e/c$d;.a:(Ljava/lang/Appendable;JLorg/c/a/a;)V` @kind virtual;
  #L3fa24e.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.c$d` v2 @kind this, `java.lang.Appendable` v3 @kind object, `org.c.a.v` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lorg/c/a/e/c$d;.a:(Ljava/lang/Appendable;Lorg/c/a/v;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fa260.  call temp:= `c`(v4) @signature `Lorg/c/a/v;.c:()Lorg/c/a/a;` @kind interface;
  #L3fa266.  v5:= temp @kind object;
  #L3fa268.  v0:= 0L;
  #L3fa26c.  call temp:= `a`(v5, v4, v0) @signature `Lorg/c/a/a;.a:(Lorg/c/a/v;J)J` @kind virtual;
  #L3fa272.  v0:= temp @kind wide;
  #L3fa274.  call temp:= `c`(v4) @signature `Lorg/c/a/v;.c:()Lorg/c/a/a;` @kind interface;
  #L3fa27a.  v4:= temp @kind object;
  #L3fa27c.  call `a`(v2, v3, v0, v4) @signature `Lorg/c/a/e/c$d;.a:(Ljava/lang/Appendable;JLorg/c/a/a;)V` @kind virtual;
  #L3fa282.  return @kind void;
}
procedure `int` `b`(`org.c.a.e.c$d` v1 @kind this) @signature `Lorg/c/a/e/c$d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9f94.  v0:= v1.`org.c.a.e.c$d.b` @type ^`int`;
  #L3f9f98.  return v0;
}
