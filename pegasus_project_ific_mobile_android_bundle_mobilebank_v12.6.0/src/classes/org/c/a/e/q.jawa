record `org.c.a.e.q` @kind class @AccessFlag PUBLIC {
  `int` `org.c.a.e.q.b` @AccessFlag PRIVATE;
  `int` `org.c.a.e.q.c` @AccessFlag PRIVATE;
  `int` `org.c.a.e.q.d` @AccessFlag PRIVATE;
  `boolean` `org.c.a.e.q.e` @AccessFlag PRIVATE;
  `org.c.a.e.q$f` `org.c.a.e.q.f` @AccessFlag PRIVATE;
  `java.util.List` `org.c.a.e.q.g` @AccessFlag PRIVATE;
  `boolean` `org.c.a.e.q.h` @AccessFlag PRIVATE;
  `boolean` `org.c.a.e.q.i` @AccessFlag PRIVATE;
  `org.c.a.e.q$c`[] `org.c.a.e.q.j` @AccessFlag PRIVATE;
}
global `java.util.concurrent.ConcurrentMap` `@@org.c.a.e.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/e/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L400570.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L400574.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L40057a.  `@@org.c.a.e.q.a` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L40057e.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.e.q` v0 @kind this) @signature `Lorg/c/a/e/q;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L400590.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L400596.  call `b`(v0) @signature `Lorg/c/a/e/q;.b:()V` @kind virtual;
  #L40059c.  return @kind void;
}
procedure `org.c.a.e.p` `a`(`java.util.List` v5 @kind object, `boolean` v6 , `boolean` v7 ) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;ZZ)Lorg/c/a/e/p;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4000c4.  if v6 == 0 then goto L4000dc;
  #L4000c8.  if v7 == 0 then goto L4000dc;
  #L4000cc.  v5:= new `java.lang.IllegalStateException`;
  #L4000d0.  v6:= "Builder has created neither a printer nor a parser" @kind object;
  #L4000d4.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4000da.  throw v5;
  #L4000dc.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4000e2.  v0:= temp;
  #L4000e4.  v1:= 2I;
  #L4000e6.  v2:= 0I;
  #L4000e8.  if v0 < v1 then goto L400154;
  #L4000ec.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L4000f2.  v3:= temp @kind object;
  #L4000f4.  v3:= instanceof @variable v3 @type ^`org.c.a.e.q$g` @kind boolean;
  #L4000f8.  if v3 == 0 then goto L400154;
  #L4000fc.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400102.  v3:= temp @kind object;
  #L400104.  v3:= (`org.c.a.e.q$g`) v3 @kind object;
  #L400108.  call temp:= `a`(v3) @signature `Lorg/c/a/e/q$g;.a:(Lorg/c/a/e/q$g;)Lorg/c/a/e/r;` @kind static;
  #L40010e.  v4:= temp @kind object;
  #L400110.  if v4 != 0 then goto L400154;
  #L400114.  call temp:= `b`(v3) @signature `Lorg/c/a/e/q$g;.b:(Lorg/c/a/e/q$g;)Lorg/c/a/e/s;` @kind static;
  #L40011a.  v4:= temp @kind object;
  #L40011c.  if v4 != 0 then goto L400154;
  #L400120.  call temp:= `subList`(v5, v1, v0) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L400126.  v5:= temp @kind object;
  #L400128.  call temp:= `a`(v5, v6, v7) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;ZZ)Lorg/c/a/e/p;` @kind static;
  #L40012e.  v5:= temp @kind object;
  #L400130.  call temp:= `a`(v5) @signature `Lorg/c/a/e/p;.a:()Lorg/c/a/e/s;` @kind virtual;
  #L400136.  v6:= temp @kind object;
  #L400138.  call temp:= `b`(v5) @signature `Lorg/c/a/e/p;.b:()Lorg/c/a/e/r;` @kind virtual;
  #L40013e.  v5:= temp @kind object;
  #L400140.  call temp:= `a`(v3, v6, v5) @signature `Lorg/c/a/e/q$g;.a:(Lorg/c/a/e/s;Lorg/c/a/e/r;)Lorg/c/a/e/q$g;` @kind virtual;
  #L400146.  v5:= temp @kind object;
  #L400148.  v6:= new `org.c.a.e.p`;
  #L40014c.  call `<init>`(v6, v5, v5) @signature `Lorg/c/a/e/p;.<init>:(Lorg/c/a/e/s;Lorg/c/a/e/r;)V` @kind direct;
  #L400152.  return v6 @kind object;
  #L400154.  call temp:= `a`(v5) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;)[Ljava/lang/Object;` @kind static;
  #L40015a.  v5:= temp @kind object;
  #L40015c.  v0:= 1I;
  #L40015e.  v1:= 0I;
  #L400160.  if v6 == 0 then goto L400178;
  #L400164.  v6:= new `org.c.a.e.p`;
  #L400168.  v5:= v5[v0] @kind object;
  #L40016c.  v5:= (`org.c.a.e.r`) v5 @kind object;
  #L400170.  call `<init>`(v6, v1, v5) @signature `Lorg/c/a/e/p;.<init>:(Lorg/c/a/e/s;Lorg/c/a/e/r;)V` @kind direct;
  #L400176.  return v6 @kind object;
  #L400178.  if v7 == 0 then goto L400190;
  #L40017c.  v6:= new `org.c.a.e.p`;
  #L400180.  v5:= v5[v2] @kind object;
  #L400184.  v5:= (`org.c.a.e.s`) v5 @kind object;
  #L400188.  call `<init>`(v6, v5, v1) @signature `Lorg/c/a/e/p;.<init>:(Lorg/c/a/e/s;Lorg/c/a/e/r;)V` @kind direct;
  #L40018e.  return v6 @kind object;
  #L400190.  v6:= new `org.c.a.e.p`;
  #L400194.  v7:= v5[v2] @kind object;
  #L400198.  v7:= (`org.c.a.e.s`) v7 @kind object;
  #L40019c.  v5:= v5[v0] @kind object;
  #L4001a0.  v5:= (`org.c.a.e.r`) v5 @kind object;
  #L4001a4.  call `<init>`(v6, v7, v5) @signature `Lorg/c/a/e/p;.<init>:(Lorg/c/a/e/s;Lorg/c/a/e/r;)V` @kind direct;
  #L4001aa.  return v6 @kind object;
}
procedure `org.c.a.e.q` `a`(`org.c.a.e.q` v11 @kind this, `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `java.lang.String`[] v14 @kind object, `boolean` v15 , `boolean` v16 ) @signature `Lorg/c/a/e/q;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZZ)Lorg/c/a/e/q;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L4001f8.  v0:= v11 @kind object;
  #L4001fa.  if v12 == 0 then goto L400302;
  #L4001fe.  if v13 != 0 then goto L400206;
  #L400202.  goto L400302;
  #L400206.  call `j`(v0) @signature `Lorg/c/a/e/q;.j:()V` @kind direct;
  #L40020c.  v1:= v0.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400210.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400216.  v4:= temp;
  #L400218.  if v4 != 0 then goto L40024c;
  #L40021c.  if v16 == 0 then goto L40024a;
  #L400220.  if v15 != 0 then goto L40024a;
  #L400224.  v9:= new `org.c.a.e.q$g`;
  #L400228.  v5:= `@@org.c.a.e.q$e.a` @type ^`org.c.a.e.q$e` @kind object;
  #L40022c.  v6:= `@@org.c.a.e.q$e.a` @type ^`org.c.a.e.q$e` @kind object;
  #L400230.  v1:= v9 @kind object;
  #L400232.  v2:= v12 @kind object;
  #L400234.  v3:= v13 @kind object;
  #L400236.  v4:= v14 @kind object;
  #L400238.  v7:= v15;
  #L40023a.  v8:= v16;
  #L40023e.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/c/a/e/q$g;.<init>:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lorg/c/a/e/s;Lorg/c/a/e/r;ZZ)V` @kind direct;
  #L400244.  call temp:= `a`(v0, v9, v9) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/s;Lorg/c/a/e/r;)Lorg/c/a/e/q;` @kind direct;
  #L40024a.  return v0 @kind object;
  #L40024c.  v4:= 0I;
  #L40024e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400254.  v5:= temp;
  #L400256.  v5:= v5 + -1;
  #L40025a.  v6:= 1I;
  #L40025c.  if v5 < 0 then goto L400296;
  #L400260.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400266.  v9:= temp @kind object;
  #L400268.  v9:= instanceof @variable v9 @type ^`org.c.a.e.q$g` @kind boolean;
  #L40026c.  if v9 == 0 then goto L400290;
  #L400270.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400276.  v4:= temp @kind object;
  #L400278.  v4:= (`org.c.a.e.q$g`) v4 @kind object;
  #L40027c.  v5:= v5 + v6 @kind int;
  #L40027e.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400284.  v9:= temp;
  #L400286.  call temp:= `subList`(v1, v5, v9) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L40028c.  v1:= temp @kind object;
  #L40028e.  goto L400296;
  #L400290.  v5:= v5 + -1;
  #L400294.  goto L400256;
  #L400296.  v9:= v1 @kind object;
  #L400298.  if v4 == 0 then goto L4002b8;
  #L40029c.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4002a2.  v1:= temp;
  #L4002a4.  if v1 != 0 then goto L4002b8;
  #L4002a8.  v1:= new `java.lang.IllegalStateException`;
  #L4002ac.  v2:= "Cannot have two adjacent separators" @kind object;
  #L4002b0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4002b6.  throw v1;
  #L4002b8.  call temp:= `a`(v9) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;)[Ljava/lang/Object;` @kind static;
  #L4002be.  v1:= temp @kind object;
  #L4002c0.  call `clear`(v9) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L4002c6.  v10:= new `org.c.a.e.q$g`;
  #L4002ca.  v4:= 0I;
  #L4002cc.  v4:= v1[v4] @kind object;
  #L4002d0.  v5:= v4 @kind object;
  #L4002d2.  v5:= (`org.c.a.e.s`) v5 @kind object;
  #L4002d6.  v1:= v1[v6] @kind object;
  #L4002da.  v6:= v1 @kind object;
  #L4002dc.  v6:= (`org.c.a.e.r`) v6 @kind object;
  #L4002e0.  v1:= v10 @kind object;
  #L4002e2.  v2:= v12 @kind object;
  #L4002e4.  v3:= v13 @kind object;
  #L4002e6.  v4:= v14 @kind object;
  #L4002e8.  v7:= v15;
  #L4002ea.  v8:= v16;
  #L4002ee.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/c/a/e/q$g;.<init>:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Lorg/c/a/e/s;Lorg/c/a/e/r;ZZ)V` @kind direct;
  #L4002f4.  call temp:= `add`(v9, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4002fa.  call temp:= `add`(v9, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400300.  return v0 @kind object;
  #L400302.  v1:= new `java.lang.IllegalArgumentException`;
  #L400306.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40030c.  throw v1;
}
procedure `org.c.a.e.q` `a`(`org.c.a.e.q` v3 @kind this, `org.c.a.e.q$f` v4 @kind object) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/q$f;)Lorg/c/a/e/q;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L400320.  v0:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400324.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40032a.  v0:= temp;
  #L40032c.  v1:= 0I;
  #L40032e.  if v0 <= 0 then goto L40036c;
  #L400332.  v0:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400336.  v1:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L40033a.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L400340.  v1:= temp;
  #L400342.  v1:= v1 + -2;
  #L400346.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L40034c.  v1:= temp @kind object;
  #L40034e.  v0:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400352.  v2:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400356.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L40035c.  v2:= temp;
  #L40035e.  v2:= v2 + -1;
  #L400362.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400368.  v0:= temp @kind object;
  #L40036a.  goto L40036e;
  #L40036c.  v0:= v1 @kind object;
  #L40036e.  if v1 == 0 then goto L4003de;
  #L400372.  if v0 == 0 then goto L4003de;
  #L400376.  if v1 != v0 then goto L4003de;
  #L40037a.  v0:= instanceof @variable v1 @type ^`org.c.a.e.q$c` @kind boolean;
  #L40037e.  if v0 != 0 then goto L400384;
  #L400382.  goto L4003de;
  #L400384.  call `j`(v3) @signature `Lorg/c/a/e/q;.j:()V` @kind direct;
  #L40038a.  v0:= new `org.c.a.e.q$c`;
  #L40038e.  v1:= (`org.c.a.e.q$c`) v1 @kind object;
  #L400392.  call `<init>`(v0, v1, v4) @signature `Lorg/c/a/e/q$c;.<init>:(Lorg/c/a/e/q$c;Lorg/c/a/e/q$f;)V` @kind direct;
  #L400398.  v4:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L40039c.  v1:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L4003a0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4003a6.  v1:= temp;
  #L4003a8.  v1:= v1 + -2;
  #L4003ac.  call temp:= `set`(v4, v1, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4003b2.  v4:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L4003b6.  v1:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L4003ba.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4003c0.  v1:= temp;
  #L4003c2.  v1:= v1 + -1;
  #L4003c6.  call temp:= `set`(v4, v1, v0) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4003cc.  v4:= v3.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L4003d0.  call temp:= `a`(v0) @signature `Lorg/c/a/e/q$c;.a:()I` @kind virtual;
  #L4003d6.  v1:= temp;
  #L4003d8.  v4[v1]:= v0 @kind object;
  #L4003dc.  return v3 @kind object;
  #L4003de.  v4:= new `java.lang.IllegalStateException`;
  #L4003e2.  v0:= "No field to apply suffix to" @kind object;
  #L4003e6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4003ec.  throw v4;
}
procedure `org.c.a.e.q` `a`(`org.c.a.e.q` v3 @kind this, `org.c.a.e.s` v4 @kind object, `org.c.a.e.r` v5 @kind object) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/s;Lorg/c/a/e/r;)Lorg/c/a/e/q;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L400400.  v0:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400404.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L40040a.  v0:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L40040e.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L400414.  v0:= v3.`org.c.a.e.q.h` @type ^`boolean` @kind boolean;
  #L400418.  v1:= 0I;
  #L40041a.  v2:= 1I;
  #L40041c.  if v4 != 0 then goto L400424;
  #L400420.  v4:= 1I;
  #L400422.  goto L400426;
  #L400424.  v4:= 0I;
  #L400426.  v4:= v4 ^| v0 @kind int;
  #L400428.  v3.`org.c.a.e.q.h` @type ^`boolean` := v4 @kind boolean;
  #L40042c.  v4:= v3.`org.c.a.e.q.i` @type ^`boolean` @kind boolean;
  #L400430.  if v5 != 0 then goto L400436;
  #L400434.  v1:= 1I;
  #L400436.  v4:= v4 ^| v1 @kind int;
  #L400438.  v3.`org.c.a.e.q.i` @type ^`boolean` := v4 @kind boolean;
  #L40043c.  return v3 @kind object;
}
procedure `void` `a`(`org.c.a.e.q` v1 @kind this, `int` v2 ) @signature `Lorg/c/a/e/q;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L4005b0.  v0:= v1.`org.c.a.e.q.b` @type ^`int`;
  #L4005b4.  call `a`(v1, v2, v0) @signature `Lorg/c/a/e/q;.a:(II)V` @kind direct;
  #L4005ba.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.q` v10 @kind this, `int` v11 , `int` v12 ) @signature `Lorg/c/a/e/q;.a:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4005cc.  v9:= new `org.c.a.e.q$c`;
  #L4005d0.  v2:= v10.`org.c.a.e.q.c` @type ^`int`;
  #L4005d4.  v3:= v10.`org.c.a.e.q.d` @type ^`int`;
  #L4005d8.  v4:= v10.`org.c.a.e.q.e` @type ^`boolean` @kind boolean;
  #L4005dc.  v6:= v10.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L4005e0.  v7:= v10.`org.c.a.e.q.f` @type ^`org.c.a.e.q$f` @kind object;
  #L4005e4.  v8:= 0I;
  #L4005e6.  v0:= v9 @kind object;
  #L4005e8.  v1:= v12;
  #L4005ea.  v5:= v11;
  #L4005ec.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lorg/c/a/e/q$c;.<init>:(IIIZI[Lorg/c/a/e/q$c;Lorg/c/a/e/q$f;Lorg/c/a/e/q$f;)V` @kind direct;
  #L4005f2.  call temp:= `a`(v10, v9, v9) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/s;Lorg/c/a/e/r;)Lorg/c/a/e/q;` @kind direct;
  #L4005f8.  v12:= v10.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L4005fc.  v12[v11]:= v9 @kind object;
  #L400600.  v11:= 0I;
  #L400602.  v10.`org.c.a.e.q.f` @type ^`org.c.a.e.q$f` := v11 @kind object;
  #L400606.  return @kind void;
}
procedure `java.lang.Object`[] `a`(`java.util.List` v4 @kind object) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fffe4.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3fffea.  v0:= temp;
  #L3fffec.  v1:= 2I;
  #L3fffee.  v2:= 1I;
  #L3ffff0.  v3:= 0I;
  #L3ffff2.  goto L400044;
  #L3ffff8.  v0:= new `org.c.a.e.q$a`;
  #L3ffffc.  call `<init>`(v0, v4) @signature `Lorg/c/a/e/q$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L400002.  v4:= new `java.lang.Object`[v1];
  #L400006.  v4[v3]:= v0 @kind object;
  #L40000a.  v4[v2]:= v0 @kind object;
  #L40000e.  return v4 @kind object;
  #L400010.  v0:= new `java.lang.Object`[v1];
  #L400014.  call temp:= `get`(v4, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L40001a.  v1:= temp @kind object;
  #L40001c.  v0[v3]:= v1 @kind object;
  #L400020.  call temp:= `get`(v4, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L400026.  v4:= temp @kind object;
  #L400028.  v0[v2]:= v4 @kind object;
  #L40002c.  return v0 @kind object;
  #L40002e.  v4:= new `java.lang.Object`[v1];
  #L400032.  v0:= `@@org.c.a.e.q$e.a` @type ^`org.c.a.e.q$e` @kind object;
  #L400036.  v4[v3]:= v0 @kind object;
  #L40003a.  v0:= `@@org.c.a.e.q$e.a` @type ^`org.c.a.e.q$e` @kind object;
  #L40003e.  v4[v2]:= v0 @kind object;
  #L400042.  return v4 @kind object;
  #L400044.  switch v0
                  | 0 => goto L40002e
                  | 1 => goto L400010
                  | else => goto L3ffff8;
}
procedure `void` `j`(`org.c.a.e.q` v2 @kind this) @signature `Lorg/c/a/e/q;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L40067c.  v0:= v2.`org.c.a.e.q.f` @type ^`org.c.a.e.q$f` @kind object;
  #L400680.  if v0 == 0 then goto L400694;
  #L400684.  v0:= new `java.lang.IllegalStateException`;
  #L400688.  v1:= "Prefix not followed by field" @kind object;
  #L40068c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L400692.  throw v0;
  #L400694.  v0:= 0I;
  #L400696.  v2.`org.c.a.e.q.f` @type ^`org.c.a.e.q$f` := v0 @kind object;
  #L40069a.  return @kind void;
}
procedure `org.c.a.e.p` `a`(`org.c.a.e.q` v6 @kind this) @signature `Lorg/c/a/e/q;.a:()Lorg/c/a/e/p;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L400064.  v0:= v6.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400068.  v1:= v6.`org.c.a.e.q.h` @type ^`boolean` @kind boolean;
  #L40006c.  v2:= v6.`org.c.a.e.q.i` @type ^`boolean` @kind boolean;
  #L400070.  call temp:= `a`(v0, v1, v2) @signature `Lorg/c/a/e/q;.a:(Ljava/util/List;ZZ)Lorg/c/a/e/p;` @kind static;
  #L400076.  v0:= temp @kind object;
  #L400078.  v1:= v6.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L40007c.  v2:= length @variable v1;
  #L40007e.  v3:= 0I;
  #L400080.  if v3 >= v2 then goto L40009c;
  #L400084.  v4:= v1[v3] @kind object;
  #L400088.  if v4 == 0 then goto L400096;
  #L40008c.  v5:= v6.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L400090.  call `a`(v4, v5) @signature `Lorg/c/a/e/q$c;.a:([Lorg/c/a/e/q$c;)V` @kind virtual;
  #L400096.  v3:= v3 + 1;
  #L40009a.  goto L400080;
  #L40009c.  v1:= v6.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] @kind object;
  #L4000a0.  call temp:= `clone`(v1) @signature `[Lorg/c/a/e/q$c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L4000a6.  v1:= temp @kind object;
  #L4000a8.  v1:= (`org.c.a.e.q$c`[]) v1 @kind object;
  #L4000ac.  v6.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] := v1 @kind object;
  #L4000b0.  return v0 @kind object;
}
procedure `org.c.a.e.q` `a`(`org.c.a.e.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/c/a/e/q;.a:(Ljava/lang/String;)Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4001bc.  if v2 != 0 then goto L4001d0;
  #L4001c0.  v2:= new `java.lang.IllegalArgumentException`;
  #L4001c4.  v0:= "Literal must not be null" @kind object;
  #L4001c8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4001ce.  throw v2;
  #L4001d0.  call `j`(v1) @signature `Lorg/c/a/e/q;.j:()V` @kind direct;
  #L4001d6.  v0:= new `org.c.a.e.q$e`;
  #L4001da.  call `<init>`(v0, v2) @signature `Lorg/c/a/e/q$e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4001e0.  call temp:= `a`(v1, v0, v0) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/s;Lorg/c/a/e/r;)Lorg/c/a/e/q;` @kind direct;
  #L4001e6.  return v1 @kind object;
}
procedure `org.c.a.e.q` `b`(`org.c.a.e.q` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lorg/c/a/e/q;.b:(Ljava/lang/String;)Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400450.  if v2 != 0 then goto L400460;
  #L400454.  v2:= new `java.lang.IllegalArgumentException`;
  #L400458.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L40045e.  throw v2;
  #L400460.  v0:= new `org.c.a.e.q$h`;
  #L400464.  call `<init>`(v0, v2) @signature `Lorg/c/a/e/q$h;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40046a.  call temp:= `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(Lorg/c/a/e/q$f;)Lorg/c/a/e/q;` @kind direct;
  #L400470.  v2:= temp @kind object;
  #L400472.  return v2 @kind object;
}
procedure `void` `b`(`org.c.a.e.q` v3 @kind this) @signature `Lorg/c/a/e/q;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L400618.  v0:= 1I;
  #L40061a.  v3.`org.c.a.e.q.b` @type ^`int` := v0;
  #L40061e.  v0:= 2I;
  #L400620.  v3.`org.c.a.e.q.c` @type ^`int` := v0;
  #L400624.  v0:= 10I;
  #L400628.  v3.`org.c.a.e.q.d` @type ^`int` := v0;
  #L40062c.  v1:= 0I;
  #L40062e.  v3.`org.c.a.e.q.e` @type ^`boolean` := v1 @kind boolean;
  #L400632.  v2:= 0I;
  #L400634.  v3.`org.c.a.e.q.f` @type ^`org.c.a.e.q$f` := v2 @kind object;
  #L400638.  v2:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L40063c.  if v2 != 0 then goto L400650;
  #L400640.  v2:= new `java.util.ArrayList`;
  #L400644.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L40064a.  v3.`org.c.a.e.q.g` @type ^`java.util.List` := v2 @kind object;
  #L40064e.  goto L40065a;
  #L400650.  v2:= v3.`org.c.a.e.q.g` @type ^`java.util.List` @kind object;
  #L400654.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L40065a.  v3.`org.c.a.e.q.h` @type ^`boolean` := v1 @kind boolean;
  #L40065e.  v3.`org.c.a.e.q.i` @type ^`boolean` := v1 @kind boolean;
  #L400662.  v0:= new `org.c.a.e.q$c`[v0];
  #L400666.  v3.`org.c.a.e.q.j` @type ^`org.c.a.e.q$c`[] := v0 @kind object;
  #L40066a.  return @kind void;
}
procedure `org.c.a.e.q` `c`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.c:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400484.  v0:= 0I;
  #L400486.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L40048c.  return v1 @kind object;
}
procedure `org.c.a.e.q` `c`(`org.c.a.e.q` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lorg/c/a/e/q;.c:(Ljava/lang/String;)Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4004a0.  v3:= 0I;
  #L4004a2.  v4:= 0I;
  #L4004a4.  v5:= 1I;
  #L4004a6.  v0:= v6 @kind object;
  #L4004a8.  v1:= v7 @kind object;
  #L4004aa.  v2:= v7 @kind object;
  #L4004ac.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/e/q;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;ZZ)Lorg/c/a/e/q;` @kind direct;
  #L4004b2.  v7:= temp @kind object;
  #L4004b4.  return v7 @kind object;
}
procedure `org.c.a.e.q` `d`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.d:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4004c8.  v0:= 1I;
  #L4004ca.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L4004d0.  return v1 @kind object;
}
procedure `org.c.a.e.q` `e`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.e:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4004e4.  v0:= 2I;
  #L4004e6.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L4004ec.  return v1 @kind object;
}
procedure `org.c.a.e.q` `f`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.f:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400500.  v0:= 3I;
  #L400502.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L400508.  return v1 @kind object;
}
procedure `org.c.a.e.q` `g`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.g:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L40051c.  v0:= 4I;
  #L40051e.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L400524.  return v1 @kind object;
}
procedure `org.c.a.e.q` `h`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.h:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400538.  v0:= 5I;
  #L40053a.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L400540.  return v1 @kind object;
}
procedure `org.c.a.e.q` `i`(`org.c.a.e.q` v1 @kind this) @signature `Lorg/c/a/e/q;.i:()Lorg/c/a/e/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L400554.  v0:= 9I;
  #L400558.  call `a`(v1, v0) @signature `Lorg/c/a/e/q;.a:(I)V` @kind direct;
  #L40055e.  return v1 @kind object;
}
