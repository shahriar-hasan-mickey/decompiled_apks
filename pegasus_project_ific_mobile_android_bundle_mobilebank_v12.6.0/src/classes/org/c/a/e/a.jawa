record `org.c.a.e.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.concurrent.ConcurrentHashMap` `@@org.c.a.e.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReferenceArray` `@@org.c.a.e.a.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/e/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f9260.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3f9264.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3f926a.  `@@org.c.a.e.a.a` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3f926e.  v0:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L3f9272.  v1:= 25I;
  #L3f9276.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L3f927c.  `@@org.c.a.e.a.b` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v0 @kind object;
  #L3f9280.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v13 @kind object, `int`[] v14 @kind object) @signature `Lorg/c/a/e/a;.a:(Ljava/lang/String;[I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3f90d0.  v0:= new `java.lang.StringBuilder`;
  #L3f90d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f90da.  v1:= 0I;
  #L3f90dc.  v2:= v14[v1];
  #L3f90e0.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f90e6.  v3:= temp;
  #L3f90e8.  call temp:= `charAt`(v13, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f90ee.  v4:= temp;
  #L3f90f0.  v5:= 90I;
  #L3f90f4.  v6:= 65I;
  #L3f90f8.  if v4 < v6 then goto L3f9100;
  #L3f90fc.  if v4 <= v5 then goto L3f9110;
  #L3f9100.  v7:= 122I;
  #L3f9104.  v8:= 97I;
  #L3f9108.  if v4 < v8 then goto L3f9134;
  #L3f910c.  if v4 > v7 then goto L3f9134;
  #L3f9110.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9116.  v5:= v2 + 1;
  #L3f911a.  if v5 >= v3 then goto L3f919a;
  #L3f911e.  call temp:= `charAt`(v13, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f9124.  v6:= temp;
  #L3f9126.  if v6 != v4 then goto L3f919a;
  #L3f912a.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9130.  v2:= v5;
  #L3f9132.  goto L3f9116;
  #L3f9134.  v4:= 39I;
  #L3f9138.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f913e.  v9:= 0I;
  #L3f9140.  if v2 >= v3 then goto L3f919a;
  #L3f9144.  call temp:= `charAt`(v13, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f914a.  v10:= temp;
  #L3f914c.  if v10 != v4 then goto L3f9174;
  #L3f9150.  v11:= v2 + 1;
  #L3f9154.  if v11 >= v3 then goto L3f916e;
  #L3f9158.  call temp:= `charAt`(v13, v11) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f915e.  v12:= temp;
  #L3f9160.  if v12 != v4 then goto L3f916e;
  #L3f9164.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f916a.  v2:= v11;
  #L3f916c.  goto L3f9194;
  #L3f916e.  v9:= v9 ^~ 1;
  #L3f9172.  goto L3f9194;
  #L3f9174.  if v9 != 0 then goto L3f918e;
  #L3f9178.  if v10 < v6 then goto L3f9180;
  #L3f917c.  if v10 <= v5 then goto L3f9188;
  #L3f9180.  if v10 < v8 then goto L3f918e;
  #L3f9184.  if v10 > v7 then goto L3f918e;
  #L3f9188.  v2:= v2 + -1;
  #L3f918c.  goto L3f919a;
  #L3f918e.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f9194.  v2:= v2 + 1;
  #L3f9198.  goto L3f9140;
  #L3f919a.  v14[v1]:= v2;
  #L3f919e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f91a4.  v13:= temp @kind object;
  #L3f91a6.  return v13 @kind object;
}
procedure `org.c.a.e.b` `a`(`java.lang.String` v0 @kind object) @signature `Lorg/c/a/e/a;.a:(Ljava/lang/String;)Lorg/c/a/e/b;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3f91b8.  call temp:= `c`(v0) @signature `Lorg/c/a/e/a;.c:(Ljava/lang/String;)Lorg/c/a/e/b;` @kind static;
  #L3f91be.  v0:= temp @kind object;
  #L3f91c0.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.e.c` v11 @kind object, `java.lang.String` v12 @kind object) @signature `Lorg/c/a/e/a;.a:(Lorg/c/a/e/c;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3f9294.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f929a.  v6:= temp;
  #L3f929c.  v7:= 1I;
  #L3f929e.  v8:= new `int`[v7];
  #L3f92a2.  v9:= 0I;
  #L3f92a4.  v0:= 0I;
  #L3f92a6.  if v0 >= v6 then goto L3f9534;
  #L3f92aa.  v8[v9]:= v0;
  #L3f92ae.  call temp:= `a`(v12, v8) @signature `Lorg/c/a/e/a;.a:(Ljava/lang/String;[I)Ljava/lang/String;` @kind static;
  #L3f92b4.  v0:= temp @kind object;
  #L3f92b6.  v10:= v8[v9];
  #L3f92ba.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f92c0.  v1:= temp;
  #L3f92c2.  if v1 != 0 then goto L3f92ca;
  #L3f92c6.  goto L3f9534;
  #L3f92ca.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f92d0.  v2:= temp;
  #L3f92d2.  v3:= 2I;
  #L3f92d4.  v4:= 4I;
  #L3f92d6.  goto L3f9538;
  #L3f92dc.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f92e0.  v2:= new `java.lang.StringBuilder`;
  #L3f92e4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f92ea.  v3:= "Illegal pattern component: " @kind object;
  #L3f92ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f92f4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f92fa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f9300.  v0:= temp @kind object;
  #L3f9302.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f9308.  throw v1;
  #L3f930a.  if v1 < v4 then goto L3f9318;
  #L3f930e.  call temp:= `i`(v11) @signature `Lorg/c/a/e/c;.i:()Lorg/c/a/e/c;` @kind virtual;
  #L3f9314.  goto L3f952c;
  #L3f9318.  v0:= 0I;
  #L3f931a.  call temp:= `a`(v11, v0) @signature `Lorg/c/a/e/c;.a:(Ljava/util/Map;)Lorg/c/a/e/c;` @kind virtual;
  #L3f9320.  goto L3f952c;
  #L3f9324.  call temp:= `j`(v11, v1) @signature `Lorg/c/a/e/c;.j:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f932a.  goto L3f952c;
  #L3f932e.  call temp:= `a`(v11, v1) @signature `Lorg/c/a/e/c;.a:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f9334.  goto L3f952c;
  #L3f9338.  call temp:= `b`(v11, v1) @signature `Lorg/c/a/e/c;.b:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f933e.  goto L3f952c;
  #L3f9342.  call temp:= `d`(v11, v1) @signature `Lorg/c/a/e/c;.d:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f9348.  goto L3f952c;
  #L3f934c.  call temp:= `f`(v11, v1) @signature `Lorg/c/a/e/c;.f:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f9352.  goto L3f952c;
  #L3f9356.  call temp:= `g`(v11, v1) @signature `Lorg/c/a/e/c;.g:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f935c.  goto L3f952c;
  #L3f9360.  call temp:= `h`(v11, v1) @signature `Lorg/c/a/e/c;.h:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f9366.  goto L3f952c;
  #L3f936a.  call temp:= `c`(v11) @signature `Lorg/c/a/e/c;.c:()Lorg/c/a/e/c;` @kind virtual;
  #L3f9370.  goto L3f952c;
  #L3f9374.  if v1 != v7 then goto L3f9390;
  #L3f9378.  v1:= 0I;
  #L3f937a.  v2:= "Z" @kind object;
  #L3f937e.  v3:= 0I;
  #L3f9380.  v4:= 2I;
  #L3f9382.  v5:= 2I;
  #L3f9384.  v0:= v11 @kind object;
  #L3f9386.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/e/c;.a:(Ljava/lang/String;Ljava/lang/String;ZII)Lorg/c/a/e/c;` @kind virtual;
  #L3f938c.  goto L3f952c;
  #L3f9390.  if v1 != v3 then goto L3f93ac;
  #L3f9394.  v1:= 0I;
  #L3f9396.  v2:= "Z" @kind object;
  #L3f939a.  v3:= 1I;
  #L3f939c.  v4:= 2I;
  #L3f939e.  v5:= 2I;
  #L3f93a0.  v0:= v11 @kind object;
  #L3f93a2.  call temp:= `a`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/e/c;.a:(Ljava/lang/String;Ljava/lang/String;ZII)Lorg/c/a/e/c;` @kind virtual;
  #L3f93a8.  goto L3f952c;
  #L3f93ac.  call temp:= `j`(v11) @signature `Lorg/c/a/e/c;.j:()Lorg/c/a/e/c;` @kind virtual;
  #L3f93b2.  goto L3f952c;
  #L3f93b6.  if v1 != v3 then goto L3f9434;
  #L3f93ba.  v0:= v10 + 1;
  #L3f93be.  if v0 >= v6 then goto L3f93ea;
  #L3f93c2.  v0:= v8[v9];
  #L3f93c6.  v0:= v0 + v7 @kind int;
  #L3f93c8.  v8[v9]:= v0;
  #L3f93cc.  call temp:= `a`(v12, v8) @signature `Lorg/c/a/e/a;.a:(Ljava/lang/String;[I)Ljava/lang/String;` @kind static;
  #L3f93d2.  v0:= temp @kind object;
  #L3f93d4.  call temp:= `b`(v0) @signature `Lorg/c/a/e/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L3f93da.  v0:= temp;
  #L3f93dc.  v0:= v0 ^~ v7 @kind int;
  #L3f93de.  v1:= v8[v9];
  #L3f93e2.  v1:= v1 - v7 @kind int;
  #L3f93e4.  v8[v9]:= v1;
  #L3f93e8.  goto L3f93ec;
  #L3f93ea.  v0:= 1I;
  #L3f93ec.  v1:= 120I;
  #L3f93f0.  if v2 == v1 then goto L3f9414;
  #L3f93f4.  v1:= new `org.c.a.b`;
  #L3f93f8.  call `<init>`(v1) @signature `Lorg/c/a/b;.<init>:()V` @kind direct;
  #L3f93fe.  call temp:= `f`(v1) @signature `Lorg/c/a/b;.f:()I` @kind virtual;
  #L3f9404.  v1:= temp;
  #L3f9406.  v1:= v1 + -30;
  #L3f940a.  call temp:= `a`(v11, v1, v0) @signature `Lorg/c/a/e/c;.a:(IZ)Lorg/c/a/e/c;` @kind virtual;
  #L3f9410.  goto L3f952c;
  #L3f9414.  v1:= new `org.c.a.b`;
  #L3f9418.  call `<init>`(v1) @signature `Lorg/c/a/b;.<init>:()V` @kind direct;
  #L3f941e.  call temp:= `g`(v1) @signature `Lorg/c/a/b;.g:()I` @kind virtual;
  #L3f9424.  v1:= temp;
  #L3f9426.  v1:= v1 + -30;
  #L3f942a.  call temp:= `b`(v11, v1, v0) @signature `Lorg/c/a/e/c;.b:(IZ)Lorg/c/a/e/c;` @kind virtual;
  #L3f9430.  goto L3f952c;
  #L3f9434.  v0:= 9I;
  #L3f9438.  v3:= v10 + 1;
  #L3f943c.  if v3 >= v6 then goto L3f946a;
  #L3f9440.  v3:= v8[v9];
  #L3f9444.  v3:= v3 + v7 @kind int;
  #L3f9446.  v8[v9]:= v3;
  #L3f944a.  call temp:= `a`(v12, v8) @signature `Lorg/c/a/e/a;.a:(Ljava/lang/String;[I)Ljava/lang/String;` @kind static;
  #L3f9450.  v3:= temp @kind object;
  #L3f9452.  call temp:= `b`(v3) @signature `Lorg/c/a/e/a;.b:(Ljava/lang/String;)Z` @kind static;
  #L3f9458.  v3:= temp;
  #L3f945a.  if v3 == 0 then goto L3f9460;
  #L3f945e.  v0:= v1;
  #L3f9460.  v3:= v8[v9];
  #L3f9464.  v3:= v3 - v7 @kind int;
  #L3f9466.  v8[v9]:= v3;
  #L3f946a.  v3:= 89I;
  #L3f946e.  if v2 == v3 then goto L3f948a;
  #L3f9472.  goto L3f95ec;
  #L3f9478.  goto L3f952c;
  #L3f947a.  call temp:= `e`(v11, v1, v0) @signature `Lorg/c/a/e/c;.e:(II)Lorg/c/a/e/c;` @kind virtual;
  #L3f9480.  goto L3f952c;
  #L3f9482.  call temp:= `d`(v11, v1, v0) @signature `Lorg/c/a/e/c;.d:(II)Lorg/c/a/e/c;` @kind virtual;
  #L3f9488.  goto L3f952c;
  #L3f948a.  call temp:= `f`(v11, v1, v0) @signature `Lorg/c/a/e/c;.f:(II)Lorg/c/a/e/c;` @kind virtual;
  #L3f9490.  goto L3f952c;
  #L3f9492.  call temp:= `a`(v11, v1, v1) @signature `Lorg/c/a/e/c;.a:(II)Lorg/c/a/e/c;` @kind virtual;
  #L3f9498.  goto L3f952c;
  #L3f949a.  v0:= 3I;
  #L3f949c.  if v1 < v0 then goto L3f94b4;
  #L3f94a0.  if v1 < v4 then goto L3f94ac;
  #L3f94a4.  call temp:= `f`(v11) @signature `Lorg/c/a/e/c;.f:()Lorg/c/a/e/c;` @kind virtual;
  #L3f94aa.  goto L3f952c;
  #L3f94ac.  call temp:= `g`(v11) @signature `Lorg/c/a/e/c;.g:()Lorg/c/a/e/c;` @kind virtual;
  #L3f94b2.  goto L3f952c;
  #L3f94b4.  call temp:= `k`(v11, v1) @signature `Lorg/c/a/e/c;.k:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f94ba.  goto L3f952c;
  #L3f94bc.  call temp:= `e`(v11, v1) @signature `Lorg/c/a/e/c;.e:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f94c2.  goto L3f952c;
  #L3f94c4.  call temp:= `c`(v11, v1) @signature `Lorg/c/a/e/c;.c:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f94ca.  goto L3f952c;
  #L3f94cc.  call temp:= `h`(v11) @signature `Lorg/c/a/e/c;.h:()Lorg/c/a/e/c;` @kind virtual;
  #L3f94d2.  goto L3f952c;
  #L3f94d4.  if v1 < v4 then goto L3f94e0;
  #L3f94d8.  call temp:= `d`(v11) @signature `Lorg/c/a/e/c;.d:()Lorg/c/a/e/c;` @kind virtual;
  #L3f94de.  goto L3f952c;
  #L3f94e0.  call temp:= `e`(v11) @signature `Lorg/c/a/e/c;.e:()Lorg/c/a/e/c;` @kind virtual;
  #L3f94e6.  goto L3f952c;
  #L3f94e8.  call temp:= `i`(v11, v1) @signature `Lorg/c/a/e/c;.i:(I)Lorg/c/a/e/c;` @kind virtual;
  #L3f94ee.  goto L3f952c;
  #L3f94f0.  call temp:= `g`(v11, v1, v1) @signature `Lorg/c/a/e/c;.g:(II)Lorg/c/a/e/c;` @kind virtual;
  #L3f94f6.  goto L3f952c;
  #L3f94f8.  call temp:= `substring`(v0, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L3f94fe.  v0:= temp @kind object;
  #L3f9500.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f9506.  v1:= temp;
  #L3f9508.  if v1 != v7 then goto L3f951c;
  #L3f950c.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f9512.  v0:= temp;
  #L3f9514.  call temp:= `a`(v11, v0) @signature `Lorg/c/a/e/c;.a:(C)Lorg/c/a/e/c;` @kind virtual;
  #L3f951a.  goto L3f952c;
  #L3f951c.  v1:= new `java.lang.String`;
  #L3f9520.  call `<init>`(v1, v0) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f9526.  call temp:= `a`(v11, v1) @signature `Lorg/c/a/e/c;.a:(Ljava/lang/String;)Lorg/c/a/e/c;` @kind virtual;
  #L3f952c.  v0:= v10 + 1;
  #L3f9530.  goto L3f92a6;
  #L3f9534.  return @kind void;
  #L3f9536.  
  #L3f9538.  switch v2
                  | 39 => goto L3f94f8
                  | 67 => goto L3f94f0
                  | 68 => goto L3f94e8
                  | 69 => goto L3f94d4
                  | 71 => goto L3f94cc
                  | 72 => goto L3f94c4
                  | 75 => goto L3f94bc
                  | 77 => goto L3f949a
                  | 83 => goto L3f9492
                  | 89 => goto L3f93b6
                  | 90 => goto L3f9374
                  | 97 => goto L3f936a
                  | 100 => goto L3f9360
                  | 101 => goto L3f9356
                  | 104 => goto L3f934c
                  | 107 => goto L3f9342
                  | 109 => goto L3f9338
                  | 115 => goto L3f932e
                  | 119 => goto L3f9324
                  | 120 => goto L3f93b6
                  | 121 => goto L3f93b6
                  | 122 => goto L3f930a
                  | else => goto L3f92dc;
  #L3f95ec.  switch v2
                  | 120 => goto L3f9482
                  | 121 => goto L3f947a
                  | else => goto L3f9478;
}
procedure `boolean` `b`(`java.lang.String` v3 @kind object) @signature `Lorg/c/a/e/a;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8ff8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f8ffe.  v0:= temp;
  #L3f9000.  v1:= 0I;
  #L3f9002.  if v0 <= 0 then goto L3f9022;
  #L3f9006.  call temp:= `charAt`(v3, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3f900c.  v3:= temp;
  #L3f900e.  v2:= 1I;
  #L3f9010.  goto L3f9024;
  #L3f9016.  goto L3f9022;
  #L3f9018.  v3:= 2I;
  #L3f901a.  if v0 > v3 then goto L3f9022;
  #L3f901e.  return v2;
  #L3f9020.  return v2;
  #L3f9022.  return v1;
  #L3f9024.  switch v3
                  | 67 => goto L3f9020
                  | 68 => goto L3f9020
                  | 70 => goto L3f9020
                  | 72 => goto L3f9020
                  | 75 => goto L3f9020
                  | 77 => goto L3f9018
                  | 83 => goto L3f9020
                  | 87 => goto L3f9020
                  | 89 => goto L3f9020
                  | 99 => goto L3f9020
                  | 100 => goto L3f9020
                  | 101 => goto L3f9020
                  | 104 => goto L3f9020
                  | 107 => goto L3f9020
                  | 109 => goto L3f9020
                  | 115 => goto L3f9020
                  | 119 => goto L3f9020
                  | 120 => goto L3f9020
                  | 121 => goto L3f9020
                  | else => goto L3f9016;
}
procedure `org.c.a.e.b` `c`(`java.lang.String` v3 @kind object) @signature `Lorg/c/a/e/a;.c:(Ljava/lang/String;)Lorg/c/a/e/b;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f91d4.  if v3 == 0 then goto L3f923e;
  #L3f91d8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3f91de.  v0:= temp;
  #L3f91e0.  if v0 != 0 then goto L3f91e6;
  #L3f91e4.  goto L3f923e;
  #L3f91e6.  v0:= `@@org.c.a.e.a.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f91ea.  call temp:= `get`(v0, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f91f0.  v0:= temp @kind object;
  #L3f91f2.  v0:= (`org.c.a.e.b`) v0 @kind object;
  #L3f91f6.  if v0 != 0 then goto L3f923c;
  #L3f91fa.  v0:= new `org.c.a.e.c`;
  #L3f91fe.  call `<init>`(v0) @signature `Lorg/c/a/e/c;.<init>:()V` @kind direct;
  #L3f9204.  call `a`(v0, v3) @signature `Lorg/c/a/e/a;.a:(Lorg/c/a/e/c;Ljava/lang/String;)V` @kind static;
  #L3f920a.  call temp:= `a`(v0) @signature `Lorg/c/a/e/c;.a:()Lorg/c/a/e/b;` @kind virtual;
  #L3f9210.  v0:= temp @kind object;
  #L3f9212.  v1:= `@@org.c.a.e.a.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f9216.  call temp:= `size`(v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.size:()I` @kind virtual;
  #L3f921c.  v1:= temp;
  #L3f921e.  v2:= 500I;
  #L3f9222.  if v1 >= v2 then goto L3f923c;
  #L3f9226.  v1:= `@@org.c.a.e.a.a` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f922a.  call temp:= `putIfAbsent`(v1, v3, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f9230.  v3:= temp @kind object;
  #L3f9232.  v3:= (`org.c.a.e.b`) v3 @kind object;
  #L3f9236.  if v3 == 0 then goto L3f923c;
  #L3f923a.  v0:= v3 @kind object;
  #L3f923c.  return v0 @kind object;
  #L3f923e.  v3:= new `java.lang.IllegalArgumentException`;
  #L3f9242.  v0:= "Invalid pattern specification" @kind object;
  #L3f9246.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f924c.  throw v3;
}
