record `org.c.a.e.c$a` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface, `org.c.a.e.n` @kind interface {
  `char` `org.c.a.e.c$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$a` v0 @kind this, `char` v1 ) @signature `Lorg/c/a/e/c$a;.<init>:(C)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f9ab0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f9ab6.  v0.`org.c.a.e.c$a.a` @type ^`char` := v1 @kind char;
  #L3f9aba.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.c$a` v1 @kind this) @signature `Lorg/c/a/e/c$a;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9a20.  v0:= 1I;
  #L3f9a22.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$a` v0 @kind this, `org.c.a.e.e` v1 @kind object, `java.lang.CharSequence` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/e/c$a;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;

  #L3f9a34.  call temp:= `length`(v2) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3f9a3a.  v1:= temp;
  #L3f9a3c.  if v3 < v1 then goto L3f9a46;
  #L3f9a40.  v1:= v3 ^~ -1;
  #L3f9a44.  return v1;
  #L3f9a46.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3f9a4c.  v1:= temp;
  #L3f9a4e.  v2:= v0.`org.c.a.e.c$a.a` @type ^`char` @kind char;
  #L3f9a52.  if v1 == v2 then goto L3f9a84;
  #L3f9a56.  call temp:= `toUpperCase`(v1) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3f9a5c.  v1:= temp;
  #L3f9a5e.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/Character;.toUpperCase:(C)C` @kind static;
  #L3f9a64.  v2:= temp;
  #L3f9a66.  if v1 == v2 then goto L3f9a84;
  #L3f9a6a.  call temp:= `toLowerCase`(v1) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3f9a70.  v1:= temp;
  #L3f9a72.  call temp:= `toLowerCase`(v2) @signature `Ljava/lang/Character;.toLowerCase:(C)C` @kind static;
  #L3f9a78.  v2:= temp;
  #L3f9a7a.  if v1 == v2 then goto L3f9a84;
  #L3f9a7e.  v1:= v3 ^~ -1;
  #L3f9a82.  return v1;
  #L3f9a84.  v3:= v3 + 1;
  #L3f9a88.  return v3;
}
procedure `void` `a`(`org.c.a.e.c$a` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.c.a.a` v4 @kind object, `int` v5 , `org.c.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/e/c$a;.a:(Ljava/lang/Appendable;JLorg/c/a/a;ILorg/c/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9acc.  v2:= v0.`org.c.a.e.c$a.a` @type ^`char` @kind char;
  #L3f9ad0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3f9ad6.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.c$a` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.c.a.v` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/e/c$a;.a:(Ljava/lang/Appendable;Lorg/c/a/v;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3f9ae8.  v2:= v0.`org.c.a.e.c$a.a` @type ^`char` @kind char;
  #L3f9aec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3f9af2.  return @kind void;
}
procedure `int` `b`(`org.c.a.e.c$a` v1 @kind this) @signature `Lorg/c/a/e/c$a;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f9a9c.  v0:= 1I;
  #L3f9a9e.  return v0;
}
