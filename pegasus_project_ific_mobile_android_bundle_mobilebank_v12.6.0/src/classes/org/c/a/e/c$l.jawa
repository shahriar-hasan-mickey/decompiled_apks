record `org.c.a.e.c$l` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface, `org.c.a.e.n` @kind interface {
  `java.lang.String` `org.c.a.e.c$l.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.c.a.e.c$l.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.c.a.e.c$l.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.c$l.d` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.c$l.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$l` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `int` v4 , `int` v5 ) @signature `Lorg/c/a/e/c$l;.<init>:(Ljava/lang/String;Ljava/lang/String;ZII)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fb30c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fb312.  v0.`org.c.a.e.c$l.a` @type ^`java.lang.String` := v1 @kind object;
  #L3fb316.  v0.`org.c.a.e.c$l.b` @type ^`java.lang.String` := v2 @kind object;
  #L3fb31a.  v0.`org.c.a.e.c$l.c` @type ^`boolean` := v3 @kind boolean;
  #L3fb31e.  if v4 <= 0 then goto L3fb33e;
  #L3fb322.  if v5 >= v4 then goto L3fb328;
  #L3fb326.  goto L3fb33e;
  #L3fb328.  v1:= 4I;
  #L3fb32a.  if v4 <= v1 then goto L3fb332;
  #L3fb32e.  v5:= 4I;
  #L3fb330.  goto L3fb334;
  #L3fb332.  v1:= v4;
  #L3fb334.  v0.`org.c.a.e.c$l.d` @type ^`int` := v1;
  #L3fb338.  v0.`org.c.a.e.c$l.e` @type ^`int` := v5;
  #L3fb33c.  return @kind void;
  #L3fb33e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3fb342.  call `<init>`(v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3fb348.  throw v1;
}
procedure `int` `a`(`org.c.a.e.c$l` v3 @kind this, `java.lang.CharSequence` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/CharSequence;II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3fb01c.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3fb022.  v0:= temp;
  #L3fb024.  v0:= v0 - v5 @kind int;
  #L3fb026.  call temp:= `min`(v0, v6) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3fb02c.  v6:= temp;
  #L3fb02e.  v0:= 0I;
  #L3fb030.  if v6 <= 0 then goto L3fb05c;
  #L3fb034.  v1:= v5 + v0 @kind int;
  #L3fb038.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb03e.  v1:= temp;
  #L3fb040.  v2:= 48I;
  #L3fb044.  if v1 < v2 then goto L3fb05c;
  #L3fb048.  v2:= 57I;
  #L3fb04c.  if v1 <= v2 then goto L3fb052;
  #L3fb050.  goto L3fb05c;
  #L3fb052.  v0:= v0 + 1;
  #L3fb056.  v6:= v6 + -1;
  #L3fb05a.  goto L3fb030;
  #L3fb05c.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$l` v2 @kind this) @signature `Lorg/c/a/e/c$l;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fafc8.  v0:= v2.`org.c.a.e.c$l.d` @type ^`int`;
  #L3fafcc.  v0:= v0 + 1;
  #L3fafd0.  v0:= v0 ^< 1;
  #L3fafd4.  v1:= v2.`org.c.a.e.c$l.c` @type ^`boolean` @kind boolean;
  #L3fafd8.  if v1 == 0 then goto L3fafe6;
  #L3fafdc.  v1:= v2.`org.c.a.e.c$l.d` @type ^`int`;
  #L3fafe0.  v1:= v1 + -1;
  #L3fafe4.  v0:= v0 + v1 @kind int;
  #L3fafe6.  v1:= v2.`org.c.a.e.c$l.a` @type ^`java.lang.String` @kind object;
  #L3fafea.  if v1 == 0 then goto L3fb00a;
  #L3fafee.  v1:= v2.`org.c.a.e.c$l.a` @type ^`java.lang.String` @kind object;
  #L3faff2.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3faff8.  v1:= temp;
  #L3faffa.  if v1 <= v0 then goto L3fb00a;
  #L3faffe.  v0:= v2.`org.c.a.e.c$l.a` @type ^`java.lang.String` @kind object;
  #L3fb002.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fb008.  v0:= temp;
  #L3fb00a.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$l` v11 @kind this, `org.c.a.e.e` v12 @kind object, `java.lang.CharSequence` v13 @kind object, `int` v14 ) @signature `Lorg/c/a/e/c$l;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3fb070.  call temp:= `length`(v13) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3fb076.  v0:= temp;
  #L3fb078.  v0:= v0 - v14 @kind int;
  #L3fb07a.  v1:= v11.`org.c.a.e.c$l.b` @type ^`java.lang.String` @kind object;
  #L3fb07e.  v2:= 43I;
  #L3fb082.  v3:= 45I;
  #L3fb086.  v4:= 0I;
  #L3fb088.  if v1 == 0 then goto L3fb0f0;
  #L3fb08c.  v1:= v11.`org.c.a.e.c$l.b` @type ^`java.lang.String` @kind object;
  #L3fb090.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fb096.  v1:= temp;
  #L3fb098.  if v1 != 0 then goto L3fb0c2;
  #L3fb09c.  if v0 <= 0 then goto L3fb0b2;
  #L3fb0a0.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb0a6.  v1:= temp;
  #L3fb0a8.  if v1 == v3 then goto L3fb0f0;
  #L3fb0ac.  if v1 != v2 then goto L3fb0b2;
  #L3fb0b0.  goto L3fb0f0;
  #L3fb0b2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fb0b8.  v13:= temp @kind object;
  #L3fb0ba.  call `a`(v12, v13) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Integer;)V` @kind virtual;
  #L3fb0c0.  return v14;
  #L3fb0c2.  v1:= v11.`org.c.a.e.c$l.b` @type ^`java.lang.String` @kind object;
  #L3fb0c6.  call temp:= `b`(v13, v14, v1) @signature `Lorg/c/a/e/c;.b:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @kind static;
  #L3fb0cc.  v1:= temp;
  #L3fb0ce.  if v1 == 0 then goto L3fb0f0;
  #L3fb0d2.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fb0d8.  v13:= temp @kind object;
  #L3fb0da.  call `a`(v12, v13) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Integer;)V` @kind virtual;
  #L3fb0e0.  v12:= v11.`org.c.a.e.c$l.b` @type ^`java.lang.String` @kind object;
  #L3fb0e4.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3fb0ea.  v12:= temp;
  #L3fb0ec.  v14:= v14 + v12 @kind int;
  #L3fb0ee.  return v14;
  #L3fb0f0.  v1:= 1I;
  #L3fb0f2.  if v0 > v1 then goto L3fb0fc;
  #L3fb0f6.  v12:= v14 ^~ -1;
  #L3fb0fa.  return v12;
  #L3fb0fc.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb102.  v5:= temp;
  #L3fb104.  if v5 != v3 then goto L3fb10c;
  #L3fb108.  v2:= 1I;
  #L3fb10a.  goto L3fb112;
  #L3fb10c.  if v5 != v2 then goto L3fb2d8;
  #L3fb110.  v2:= 0I;
  #L3fb112.  v0:= v0 + -1;
  #L3fb116.  v14:= v14 + v1 @kind int;
  #L3fb118.  v3:= 2I;
  #L3fb11a.  call temp:= `a`(v11, v13, v14, v3) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/CharSequence;II)I` @kind direct;
  #L3fb120.  v5:= temp;
  #L3fb122.  if v5 >= v3 then goto L3fb12c;
  #L3fb126.  v12:= v14 ^~ -1;
  #L3fb12a.  return v12;
  #L3fb12c.  call temp:= `a`(v13, v14) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/CharSequence;I)I` @kind static;
  #L3fb132.  v5:= temp;
  #L3fb134.  v6:= 23I;
  #L3fb138.  if v5 <= v6 then goto L3fb142;
  #L3fb13c.  v12:= v14 ^~ -1;
  #L3fb140.  return v12;
  #L3fb142.  v6:= 3600000I;
  #L3fb148.  v5:= v5 * v6 @kind int;
  #L3fb14c.  v0:= v0 + -2;
  #L3fb150.  v14:= v14 + v3 @kind int;
  #L3fb152.  if v0 > 0 then goto L3fb15a;
  #L3fb156.  goto L3fb2c2;
  #L3fb15a.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb160.  v6:= temp;
  #L3fb162.  v7:= 58I;
  #L3fb166.  v8:= 48I;
  #L3fb16a.  if v6 != v7 then goto L3fb17a;
  #L3fb16e.  v0:= v0 + -1;
  #L3fb172.  v14:= v14 + 1;
  #L3fb176.  v4:= 1I;
  #L3fb178.  goto L3fb186;
  #L3fb17a.  if v6 < v8 then goto L3fb2c2;
  #L3fb17e.  v9:= 57I;
  #L3fb182.  if v6 > v9 then goto L3fb2c2;
  #L3fb186.  call temp:= `a`(v11, v13, v14, v3) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/CharSequence;II)I` @kind direct;
  #L3fb18c.  v6:= temp;
  #L3fb18e.  if v6 != 0 then goto L3fb19a;
  #L3fb192.  if v4 != 0 then goto L3fb19a;
  #L3fb196.  goto L3fb2c2;
  #L3fb19a.  if v6 >= v3 then goto L3fb1a4;
  #L3fb19e.  v12:= v14 ^~ -1;
  #L3fb1a2.  return v12;
  #L3fb1a4.  call temp:= `a`(v13, v14) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/CharSequence;I)I` @kind static;
  #L3fb1aa.  v6:= temp;
  #L3fb1ac.  v9:= 59I;
  #L3fb1b0.  if v6 <= v9 then goto L3fb1ba;
  #L3fb1b4.  v12:= v14 ^~ -1;
  #L3fb1b8.  return v12;
  #L3fb1ba.  v10:= 60000I;
  #L3fb1c0.  v6:= v6 * v10 @kind int;
  #L3fb1c4.  v5:= v5 + v6 @kind int;
  #L3fb1c6.  v0:= v0 + -2;
  #L3fb1ca.  v14:= v14 + 2;
  #L3fb1ce.  if v0 > 0 then goto L3fb1d6;
  #L3fb1d2.  goto L3fb2c2;
  #L3fb1d6.  if v4 == 0 then goto L3fb1f2;
  #L3fb1da.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb1e0.  v6:= temp;
  #L3fb1e2.  if v6 == v7 then goto L3fb1ea;
  #L3fb1e6.  goto L3fb2c2;
  #L3fb1ea.  v0:= v0 + -1;
  #L3fb1ee.  v14:= v14 + 1;
  #L3fb1f2.  call temp:= `a`(v11, v13, v14, v3) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/CharSequence;II)I` @kind direct;
  #L3fb1f8.  v6:= temp;
  #L3fb1fa.  if v6 != 0 then goto L3fb204;
  #L3fb1fe.  if v4 != 0 then goto L3fb204;
  #L3fb202.  goto L3fb2c2;
  #L3fb204.  if v6 >= v3 then goto L3fb20e;
  #L3fb208.  v12:= v14 ^~ -1;
  #L3fb20c.  return v12;
  #L3fb20e.  call temp:= `a`(v13, v14) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/CharSequence;I)I` @kind static;
  #L3fb214.  v6:= temp;
  #L3fb216.  if v6 <= v9 then goto L3fb220;
  #L3fb21a.  v12:= v14 ^~ -1;
  #L3fb21e.  return v12;
  #L3fb220.  v6:= v6 * 1000;
  #L3fb224.  v5:= v5 + v6 @kind int;
  #L3fb226.  v0:= v0 + -2;
  #L3fb22a.  v14:= v14 + 2;
  #L3fb22e.  if v0 > 0 then goto L3fb234;
  #L3fb232.  goto L3fb2c2;
  #L3fb234.  if v4 == 0 then goto L3fb25e;
  #L3fb238.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb23e.  v0:= temp;
  #L3fb240.  v6:= 46I;
  #L3fb244.  if v0 == v6 then goto L3fb25a;
  #L3fb248.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb24e.  v0:= temp;
  #L3fb250.  v6:= 44I;
  #L3fb254.  if v0 == v6 then goto L3fb25a;
  #L3fb258.  goto L3fb2c2;
  #L3fb25a.  v14:= v14 + 1;
  #L3fb25e.  v0:= 3I;
  #L3fb260.  call temp:= `a`(v11, v13, v14, v0) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/CharSequence;II)I` @kind direct;
  #L3fb266.  v0:= temp;
  #L3fb268.  if v0 != 0 then goto L3fb272;
  #L3fb26c.  if v4 != 0 then goto L3fb272;
  #L3fb270.  goto L3fb2c2;
  #L3fb272.  if v0 >= v1 then goto L3fb27c;
  #L3fb276.  v12:= v14 ^~ -1;
  #L3fb27a.  return v12;
  #L3fb27c.  v4:= v14 + 1;
  #L3fb280.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb286.  v14:= temp;
  #L3fb288.  v14:= v14 - v8 @kind int;
  #L3fb28a.  v14:= v14 * 100;
  #L3fb28e.  v5:= v5 + v14 @kind int;
  #L3fb290.  if v0 <= v1 then goto L3fb2c0;
  #L3fb294.  v14:= v4 + 1;
  #L3fb298.  call temp:= `charAt`(v13, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb29e.  v1:= temp;
  #L3fb2a0.  v1:= v1 - v8 @kind int;
  #L3fb2a2.  v1:= v1 * 10;
  #L3fb2a6.  v5:= v5 + v1 @kind int;
  #L3fb2a8.  if v0 <= v3 then goto L3fb2c2;
  #L3fb2ac.  v0:= v14 + 1;
  #L3fb2b0.  call temp:= `charAt`(v13, v14) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb2b6.  v13:= temp;
  #L3fb2b8.  v13:= v13 - v8 @kind int;
  #L3fb2ba.  v5:= v5 + v13 @kind int;
  #L3fb2bc.  v14:= v0;
  #L3fb2be.  goto L3fb2c2;
  #L3fb2c0.  v14:= v4;
  #L3fb2c2.  if v2 == 0 then goto L3fb2c8;
  #L3fb2c6.  v5:= -v5 @kind int;
  #L3fb2c8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3fb2ce.  v13:= temp @kind object;
  #L3fb2d0.  call `a`(v12, v13) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Integer;)V` @kind virtual;
  #L3fb2d6.  return v14;
  #L3fb2d8.  v12:= v14 ^~ -1;
  #L3fb2dc.  return v12;
}
procedure `void` `a`(`org.c.a.e.c$l` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.c.a.a` v4 @kind object, `int` v5 , `org.c.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/Appendable;JLorg/c/a/a;ILorg/c/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb35c.  if v6 != 0 then goto L3fb362;
  #L3fb360.  return @kind void;
  #L3fb362.  if v5 != 0 then goto L3fb37a;
  #L3fb366.  v2:= v0.`org.c.a.e.c$l.a` @type ^`java.lang.String` @kind object;
  #L3fb36a.  if v2 == 0 then goto L3fb37a;
  #L3fb36e.  v2:= v0.`org.c.a.e.c$l.a` @type ^`java.lang.String` @kind object;
  #L3fb372.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3fb378.  return @kind void;
  #L3fb37a.  if v5 < 0 then goto L3fb38a;
  #L3fb37e.  v2:= 43I;
  #L3fb382.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb388.  goto L3fb396;
  #L3fb38a.  v2:= 45I;
  #L3fb38e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb394.  v5:= -v5 @kind int;
  #L3fb396.  v2:= 3600000I;
  #L3fb39c.  v3:= v5 / v2 @kind int;
  #L3fb3a0.  v4:= 2I;
  #L3fb3a2.  call `a`(v1, v3, v4) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb3a8.  v6:= v0.`org.c.a.e.c$l.e` @type ^`int`;
  #L3fb3ac.  v7:= 1I;
  #L3fb3ae.  if v6 != v7 then goto L3fb3b4;
  #L3fb3b2.  return @kind void;
  #L3fb3b4.  v3:= v3 * v2 @kind int;
  #L3fb3b8.  v5:= v5 - v3 @kind int;
  #L3fb3ba.  if v5 != 0 then goto L3fb3c8;
  #L3fb3be.  v2:= v0.`org.c.a.e.c$l.d` @type ^`int`;
  #L3fb3c2.  if v2 > v7 then goto L3fb3c8;
  #L3fb3c6.  return @kind void;
  #L3fb3c8.  v2:= 60000I;
  #L3fb3ce.  v3:= v5 / v2 @kind int;
  #L3fb3d2.  v6:= v0.`org.c.a.e.c$l.c` @type ^`boolean` @kind boolean;
  #L3fb3d6.  v7:= 58I;
  #L3fb3da.  if v6 == 0 then goto L3fb3e4;
  #L3fb3de.  call temp:= `append`(v1, v7) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb3e4.  call `a`(v1, v3, v4) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb3ea.  v6:= v0.`org.c.a.e.c$l.e` @type ^`int`;
  #L3fb3ee.  if v6 != v4 then goto L3fb3f4;
  #L3fb3f2.  return @kind void;
  #L3fb3f4.  v3:= v3 * v2 @kind int;
  #L3fb3f8.  v5:= v5 - v3 @kind int;
  #L3fb3fa.  if v5 != 0 then goto L3fb408;
  #L3fb3fe.  v2:= v0.`org.c.a.e.c$l.d` @type ^`int`;
  #L3fb402.  if v2 > v4 then goto L3fb408;
  #L3fb406.  return @kind void;
  #L3fb408.  v2:= v5 / 1000;
  #L3fb40c.  v3:= v0.`org.c.a.e.c$l.c` @type ^`boolean` @kind boolean;
  #L3fb410.  if v3 == 0 then goto L3fb41a;
  #L3fb414.  call temp:= `append`(v1, v7) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb41a.  call `a`(v1, v2, v4) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb420.  v3:= v0.`org.c.a.e.c$l.e` @type ^`int`;
  #L3fb424.  v4:= 3I;
  #L3fb426.  if v3 != v4 then goto L3fb42c;
  #L3fb42a.  return @kind void;
  #L3fb42c.  v2:= v2 * 1000;
  #L3fb430.  v5:= v5 - v2 @kind int;
  #L3fb432.  if v5 != 0 then goto L3fb440;
  #L3fb436.  v2:= v0.`org.c.a.e.c$l.d` @type ^`int`;
  #L3fb43a.  if v2 > v4 then goto L3fb440;
  #L3fb43e.  return @kind void;
  #L3fb440.  v2:= v0.`org.c.a.e.c$l.c` @type ^`boolean` @kind boolean;
  #L3fb444.  if v2 == 0 then goto L3fb452;
  #L3fb448.  v2:= 46I;
  #L3fb44c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb452.  call `a`(v1, v5, v4) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb458.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.c$l` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.c.a.v` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/e/c$l;.a:(Ljava/lang/Appendable;Lorg/c/a/v;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb46c.  return @kind void;
}
procedure `int` `b`(`org.c.a.e.c$l` v1 @kind this) @signature `Lorg/c/a/e/c$l;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb2f0.  call temp:= `a`(v1) @signature `Lorg/c/a/e/c$l;.a:()I` @kind virtual;
  #L3fb2f6.  v0:= temp;
  #L3fb2f8.  return v0;
}
