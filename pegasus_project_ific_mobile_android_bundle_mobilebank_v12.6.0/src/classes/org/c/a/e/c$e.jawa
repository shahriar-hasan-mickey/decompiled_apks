record `org.c.a.e.c$e` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface {
  `org.c.a.e.l`[] `org.c.a.e.c$e.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.c$e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$e` v3 @kind this, `org.c.a.e.l`[] v4 @kind object) @signature `Lorg/c/a/e/c$e;.<init>:([Lorg/c/a/e/l;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3fa364.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fa36a.  v3.`org.c.a.e.c$e.a` @type ^`org.c.a.e.l`[] := v4 @kind object;
  #L3fa36e.  v0:= length @variable v4;
  #L3fa370.  v1:= 0I;
  #L3fa372.  v0:= v0 + -1;
  #L3fa376.  if v0 < 0 then goto L3fa392;
  #L3fa37a.  v2:= v4[v0] @kind object;
  #L3fa37e.  if v2 == 0 then goto L3fa372;
  #L3fa382.  call temp:= `b`(v2) @signature `Lorg/c/a/e/l;.b:()I` @kind interface;
  #L3fa388.  v2:= temp;
  #L3fa38a.  if v2 <= v1 then goto L3fa372;
  #L3fa38e.  v1:= v2;
  #L3fa390.  goto L3fa372;
  #L3fa392.  v3.`org.c.a.e.c$e.b` @type ^`int` := v1;
  #L3fa396.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.c$e` v9 @kind this, `org.c.a.e.e` v10 @kind object, `java.lang.CharSequence` v11 @kind object, `int` v12 ) @signature `Lorg/c/a/e/c$e;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3fa294.  v0:= v9.`org.c.a.e.c$e.a` @type ^`org.c.a.e.l`[] @kind object;
  #L3fa298.  v1:= length @variable v0;
  #L3fa29a.  call temp:= `d`(v10) @signature `Lorg/c/a/e/e;.d:()Ljava/lang/Object;` @kind virtual;
  #L3fa2a0.  v2:= temp @kind object;
  #L3fa2a2.  v3:= 0I;
  #L3fa2a4.  v4:= 0I;
  #L3fa2a6.  v5:= v12;
  #L3fa2a8.  v7:= v5;
  #L3fa2aa.  v6:= v4 @kind object;
  #L3fa2ac.  v4:= 0I;
  #L3fa2ae.  if v4 >= v1 then goto L3fa31c;
  #L3fa2b2.  v8:= v0[v4] @kind object;
  #L3fa2b6.  if v8 != 0 then goto L3fa2c4;
  #L3fa2ba.  if v5 > v12 then goto L3fa2c0;
  #L3fa2be.  return v12;
  #L3fa2c0.  v3:= 1I;
  #L3fa2c2.  goto L3fa31c;
  #L3fa2c4.  call temp:= `a`(v8, v10, v11, v12) @signature `Lorg/c/a/e/l;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3fa2ca.  v8:= temp;
  #L3fa2cc.  if v8 < v12 then goto L3fa302;
  #L3fa2d0.  if v8 <= v5 then goto L3fa310;
  #L3fa2d4.  call temp:= `length`(v11) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3fa2da.  v5:= temp;
  #L3fa2dc.  if v8 >= v5 then goto L3fa300;
  #L3fa2e0.  v5:= v4 + 1;
  #L3fa2e4.  if v5 >= v1 then goto L3fa300;
  #L3fa2e8.  v5:= v0[v5] @kind object;
  #L3fa2ec.  if v5 != 0 then goto L3fa2f2;
  #L3fa2f0.  goto L3fa300;
  #L3fa2f2.  call temp:= `d`(v10) @signature `Lorg/c/a/e/e;.d:()Ljava/lang/Object;` @kind virtual;
  #L3fa2f8.  v5:= temp @kind object;
  #L3fa2fa.  v6:= v5 @kind object;
  #L3fa2fc.  v5:= v8;
  #L3fa2fe.  goto L3fa310;
  #L3fa300.  return v8;
  #L3fa302.  if v8 >= 0 then goto L3fa310;
  #L3fa306.  v8:= v8 ^~ -1;
  #L3fa30a.  if v8 <= v7 then goto L3fa310;
  #L3fa30e.  v7:= v8;
  #L3fa310.  call temp:= `a`(v10, v2) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fa316.  v4:= v4 + 1;
  #L3fa31a.  goto L3fa2ae;
  #L3fa31c.  if v5 > v12 then goto L3fa330;
  #L3fa320.  if v5 != v12 then goto L3fa32a;
  #L3fa324.  if v3 == 0 then goto L3fa32a;
  #L3fa328.  goto L3fa330;
  #L3fa32a.  v10:= v7 ^~ -1;
  #L3fa32e.  return v10;
  #L3fa330.  if v6 == 0 then goto L3fa33a;
  #L3fa334.  call temp:= `a`(v10, v6) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3fa33a.  return v5;
}
procedure `int` `b`(`org.c.a.e.c$e` v1 @kind this) @signature `Lorg/c/a/e/c$e;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fa34c.  v0:= v1.`org.c.a.e.c$e.b` @type ^`int`;
  #L3fa350.  return v0;
}
