record `org.c.a.e.c$m` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface, `org.c.a.e.n` @kind interface {
  `org.c.a.d` `org.c.a.e.c$m.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.c$m.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.c.a.e.c$m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$m` v0 @kind this, `org.c.a.d` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lorg/c/a/e/c$m;.<init>:(Lorg/c/a/d;IZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3fb724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fb72a.  v0.`org.c.a.e.c$m.a` @type ^`org.c.a.d` := v1 @kind object;
  #L3fb72e.  v0.`org.c.a.e.c$m.b` @type ^`int` := v2;
  #L3fb732.  v0.`org.c.a.e.c$m.c` @type ^`boolean` := v3 @kind boolean;
  #L3fb736.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.c$m` v1 @kind this, `long` v2 , `org.c.a.a` v4 @kind object) @signature `Lorg/c/a/e/c$m;.a:(JLorg/c/a/a;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fb494.  v0:= v1.`org.c.a.e.c$m.a` @type ^`org.c.a.d` @kind object;
  #L3fb498.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L3fb49e.  v4:= temp @kind object;
  #L3fb4a0.  call temp:= `a`(v4, v2) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3fb4a6.  v2:= temp;
  #L3fb4a8.  if v2 >= 0 then goto L3fb4ae;
  #L3fb4ac.  v2:= -v2 @kind int;
  #L3fb4ae.  v2:= v2 %% 100;
  #L3fb4b2.  return v2;
  #L3fb4b4.  v2:= -1I;
  #L3fb4b6.  return v2;
  catch `java.lang.RuntimeException` @[L3fb494..L3fb4b2] goto L3fb4b4;
}
procedure `int` `a`(`org.c.a.e.c$m` v1 @kind this, `org.c.a.v` v2 @kind object) @signature `Lorg/c/a/e/c$m;.a:(Lorg/c/a/v;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3fb6b8.  v0:= v1.`org.c.a.e.c$m.a` @type ^`org.c.a.d` @kind object;
  #L3fb6bc.  call temp:= `b`(v2, v0) @signature `Lorg/c/a/v;.b:(Lorg/c/a/d;)Z` @kind interface;
  #L3fb6c2.  v0:= temp;
  #L3fb6c4.  if v0 == 0 then goto L3fb6e0;
  #L3fb6c8.  v0:= v1.`org.c.a.e.c$m.a` @type ^`org.c.a.d` @kind object;
  #L3fb6cc.  call temp:= `a`(v2, v0) @signature `Lorg/c/a/v;.a:(Lorg/c/a/d;)I` @kind interface;
  #L3fb6d2.  v2:= temp;
  #L3fb6d4.  if v2 >= 0 then goto L3fb6da;
  #L3fb6d8.  v2:= -v2 @kind int;
  #L3fb6da.  v2:= v2 %% 100;
  #L3fb6de.  return v2;
  #L3fb6e0.  v2:= -1I;
  #L3fb6e2.  return v2;
  catch `java.lang.RuntimeException` @[L3fb6c8..L3fb6de] goto L3fb6e0;
}
procedure `int` `a`(`org.c.a.e.c$m` v1 @kind this) @signature `Lorg/c/a/e/c$m;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb480.  v0:= 2I;
  #L3fb482.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$m` v12 @kind this, `org.c.a.e.e` v13 @kind object, `java.lang.CharSequence` v14 @kind object, `int` v15 ) @signature `Lorg/c/a/e/c$m;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3fb4d8.  call temp:= `length`(v14) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3fb4de.  v0:= temp;
  #L3fb4e0.  v0:= v0 - v15 @kind int;
  #L3fb4e2.  v1:= v12.`org.c.a.e.c$m.c` @type ^`boolean` @kind boolean;
  #L3fb4e6.  v2:= 57I;
  #L3fb4ea.  v3:= 2I;
  #L3fb4ec.  v4:= 0I;
  #L3fb4ee.  v5:= 48I;
  #L3fb4f2.  v6:= 1I;
  #L3fb4f4.  if v1 != 0 then goto L3fb50a;
  #L3fb4f8.  call temp:= `min`(v3, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3fb4fe.  v0:= temp;
  #L3fb500.  if v0 >= v3 then goto L3fb57c;
  #L3fb504.  v13:= v15 ^~ -1;
  #L3fb508.  return v13;
  #L3fb50a.  v1:= v15;
  #L3fb50c.  v15:= 0I;
  #L3fb50e.  v7:= 0I;
  #L3fb510.  v8:= 0I;
  #L3fb512.  if v15 >= v0 then goto L3fb566;
  #L3fb516.  v9:= v1 + v15 @kind int;
  #L3fb51a.  call temp:= `charAt`(v14, v9) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb520.  v9:= temp;
  #L3fb522.  if v15 != 0 then goto L3fb556;
  #L3fb526.  v10:= 45I;
  #L3fb52a.  if v9 == v10 then goto L3fb536;
  #L3fb52e.  v11:= 43I;
  #L3fb532.  if v9 != v11 then goto L3fb556;
  #L3fb536.  if v9 != v10 then goto L3fb53e;
  #L3fb53a.  v8:= 1I;
  #L3fb53c.  goto L3fb540;
  #L3fb53e.  v8:= 0I;
  #L3fb540.  if v8 == 0 then goto L3fb54c;
  #L3fb544.  v15:= v15 + 1;
  #L3fb548.  v7:= 1I;
  #L3fb54a.  goto L3fb512;
  #L3fb54c.  v1:= v1 + 1;
  #L3fb550.  v0:= v0 + -1;
  #L3fb554.  goto L3fb548;
  #L3fb556.  if v9 < v5 then goto L3fb566;
  #L3fb55a.  if v9 <= v2 then goto L3fb560;
  #L3fb55e.  goto L3fb566;
  #L3fb560.  v15:= v15 + 1;
  #L3fb564.  goto L3fb512;
  #L3fb566.  if v15 != 0 then goto L3fb570;
  #L3fb56a.  v13:= v1 ^~ -1;
  #L3fb56e.  return v13;
  #L3fb570.  if v7 != 0 then goto L3fb616;
  #L3fb574.  if v15 == v3 then goto L3fb57a;
  #L3fb578.  goto L3fb616;
  #L3fb57a.  v15:= v1;
  #L3fb57c.  call temp:= `charAt`(v14, v15) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb582.  v0:= temp;
  #L3fb584.  if v0 < v5 then goto L3fb610;
  #L3fb588.  if v0 <= v2 then goto L3fb58e;
  #L3fb58c.  goto L3fb610;
  #L3fb58e.  v0:= v0 - v5 @kind int;
  #L3fb590.  v1:= v15 + 1;
  #L3fb594.  call temp:= `charAt`(v14, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb59a.  v14:= temp;
  #L3fb59c.  if v14 < v5 then goto L3fb60a;
  #L3fb5a0.  if v14 <= v2 then goto L3fb5a6;
  #L3fb5a4.  goto L3fb60a;
  #L3fb5a6.  v1:= v0 ^< 3;
  #L3fb5aa.  v0:= v0 ^< v6 @kind int;
  #L3fb5ac.  v1:= v1 + v0 @kind int;
  #L3fb5ae.  v1:= v1 + v14 @kind int;
  #L3fb5b0.  v1:= v1 - v5 @kind int;
  #L3fb5b2.  v14:= v12.`org.c.a.e.c$m.b` @type ^`int`;
  #L3fb5b6.  call temp:= `c`(v13) @signature `Lorg/c/a/e/e;.c:()Ljava/lang/Integer;` @kind virtual;
  #L3fb5bc.  v0:= temp @kind object;
  #L3fb5be.  if v0 == 0 then goto L3fb5d2;
  #L3fb5c2.  call temp:= `c`(v13) @signature `Lorg/c/a/e/e;.c:()Ljava/lang/Integer;` @kind virtual;
  #L3fb5c8.  v14:= temp @kind object;
  #L3fb5ca.  call temp:= `intValue`(v14) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3fb5d0.  v14:= temp;
  #L3fb5d2.  v14:= v14 + -50;
  #L3fb5d6.  v0:= 100I;
  #L3fb5da.  if v14 < 0 then goto L3fb5e4;
  #L3fb5de.  v2:= v14 %% 100;
  #L3fb5e2.  goto L3fb5ee;
  #L3fb5e4.  v2:= v14 + 1;
  #L3fb5e8.  v2:= v2 %% v0 @kind int;
  #L3fb5ea.  v2:= v2 + 99;
  #L3fb5ee.  if v1 >= v2 then goto L3fb5f4;
  #L3fb5f2.  goto L3fb5f6;
  #L3fb5f4.  v0:= 0I;
  #L3fb5f6.  v14:= v14 + v0 @kind int;
  #L3fb5f8.  v14:= v14 - v2 @kind int;
  #L3fb5fa.  v1:= v1 + v14 @kind int;
  #L3fb5fc.  v14:= v12.`org.c.a.e.c$m.a` @type ^`org.c.a.d` @kind object;
  #L3fb600.  call `a`(v13, v14, v1) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/d;I)V` @kind virtual;
  #L3fb606.  v15:= v15 + v3 @kind int;
  #L3fb608.  return v15;
  #L3fb60a.  v13:= v15 ^~ -1;
  #L3fb60e.  return v13;
  #L3fb610.  v13:= v15 ^~ -1;
  #L3fb614.  return v13;
  #L3fb616.  v0:= 9I;
  #L3fb61a.  if v15 < v0 then goto L3fb63a;
  #L3fb61e.  v15:= v15 + v1 @kind int;
  #L3fb620.  call temp:= `subSequence`(v14, v1, v15) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L3fb626.  v14:= temp @kind object;
  #L3fb628.  call temp:= `toString`(v14) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3fb62e.  v14:= temp @kind object;
  #L3fb630.  call temp:= `parseInt`(v14) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3fb636.  v14:= temp;
  #L3fb638.  goto L3fb684;
  #L3fb63a.  if v8 == 0 then goto L3fb644;
  #L3fb63e.  v0:= v1 + 1;
  #L3fb642.  goto L3fb646;
  #L3fb644.  v0:= v1;
  #L3fb646.  v2:= v0 + 1;
  #L3fb64a.  call temp:= `charAt`(v14, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb650.  v0:= temp;
  #L3fb652.  v0:= v0 - v5 @kind int;
  #L3fb654.  v15:= v15 + v1 @kind int;
  #L3fb656.  if v2 >= v15 then goto L3fb67a;
  #L3fb65a.  v1:= v0 ^< 3;
  #L3fb65e.  v0:= v0 ^< 1;
  #L3fb662.  v1:= v1 + v0 @kind int;
  #L3fb664.  v0:= v2 + 1;
  #L3fb668.  call temp:= `charAt`(v14, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L3fb66e.  v2:= temp;
  #L3fb670.  v1:= v1 + v2 @kind int;
  #L3fb672.  v1:= v1 - v5 @kind int;
  #L3fb674.  v2:= v0;
  #L3fb676.  v0:= v1;
  #L3fb678.  goto L3fb656;
  #L3fb67a.  if v8 == 0 then goto L3fb682;
  #L3fb67e.  v14:= -v0 @kind int;
  #L3fb680.  goto L3fb684;
  #L3fb682.  v14:= v0;
  #L3fb684.  v0:= v12.`org.c.a.e.c$m.a` @type ^`org.c.a.d` @kind object;
  #L3fb688.  call `a`(v13, v0, v14) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/d;I)V` @kind virtual;
  #L3fb68e.  return v15;
  #L3fb690.  v13:= v1 ^~ -1;
  #L3fb694.  return v13;
  catch `java.lang.StringIndexOutOfBoundsException` @[L3fb64a..L3fb652] goto L3fb690;
}
procedure `void` `a`(`org.c.a.e.c$m` v0 @kind this, `java.lang.Appendable` v1 @kind object, `long` v2 , `org.c.a.a` v4 @kind object, `int` v5 , `org.c.a.f` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/e/c$m;.a:(Ljava/lang/Appendable;JLorg/c/a/a;ILorg/c/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb748.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/e/c$m;.a:(JLorg/c/a/a;)I` @kind direct;
  #L3fb74e.  v2:= temp;
  #L3fb750.  if v2 >= 0 then goto L3fb768;
  #L3fb754.  v2:= 65533I;
  #L3fb75a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb760.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb766.  goto L3fb770;
  #L3fb768.  v3:= 2I;
  #L3fb76a.  call `a`(v1, v2, v3) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb770.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.c$m` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.c.a.v` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/e/c$m;.a:(Ljava/lang/Appendable;Lorg/c/a/v;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fb784.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/e/c$m;.a:(Lorg/c/a/v;)I` @kind direct;
  #L3fb78a.  v2:= temp;
  #L3fb78c.  if v2 >= 0 then goto L3fb7a4;
  #L3fb790.  v2:= 65533I;
  #L3fb796.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb79c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/Appendable;.append:(C)Ljava/lang/Appendable;` @kind interface;
  #L3fb7a2.  goto L3fb7ac;
  #L3fb7a4.  v3:= 2I;
  #L3fb7a6.  call `a`(v1, v2, v3) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/Appendable;II)V` @kind static;
  #L3fb7ac.  return @kind void;
}
procedure `int` `b`(`org.c.a.e.c$m` v1 @kind this) @signature `Lorg/c/a/e/c$m;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fb704.  v0:= v1.`org.c.a.e.c$m.c` @type ^`boolean` @kind boolean;
  #L3fb708.  if v0 == 0 then goto L3fb710;
  #L3fb70c.  v0:= 4I;
  #L3fb70e.  goto L3fb712;
  #L3fb710.  v0:= 2I;
  #L3fb712.  return v0;
}
