record `org.c.a.e.e` @kind class @AccessFlag PUBLIC {
  `org.c.a.a` `org.c.a.e.e.a` @AccessFlag PRIVATE_FINAL;
  `long` `org.c.a.e.e.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Locale` `org.c.a.e.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.e.d` @AccessFlag PRIVATE_FINAL;
  `org.c.a.f` `org.c.a.e.e.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Integer` `org.c.a.e.e.f` @AccessFlag PRIVATE_FINAL;
  `org.c.a.f` `org.c.a.e.e.g` @AccessFlag PRIVATE;
  `java.lang.Integer` `org.c.a.e.e.h` @AccessFlag PRIVATE;
  `java.lang.Integer` `org.c.a.e.e.i` @AccessFlag PRIVATE;
  `org.c.a.e.e$a`[] `org.c.a.e.e.j` @AccessFlag PRIVATE;
  `int` `org.c.a.e.e.k` @AccessFlag PRIVATE;
  `boolean` `org.c.a.e.e.l` @AccessFlag PRIVATE;
  `java.lang.Object` `org.c.a.e.e.m` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.c.a.e.e` v0 @kind this, `long` v1 , `org.c.a.a` v3 @kind object, `java.util.Locale` v4 @kind object, `java.lang.Integer` v5 @kind object, `int` v6 ) @signature `Lorg/c/a/e/e;.<init>:(JLorg/c/a/a;Ljava/util/Locale;Ljava/lang/Integer;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fcb44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fcb4a.  call temp:= `a`(v3) @signature `Lorg/c/a/e;.a:(Lorg/c/a/a;)Lorg/c/a/a;` @kind static;
  #L3fcb50.  v3:= temp @kind object;
  #L3fcb52.  v0.`org.c.a.e.e.b` @type ^`long` := v1 @kind wide;
  #L3fcb56.  call temp:= `a`(v3) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3fcb5c.  v1:= temp @kind object;
  #L3fcb5e.  v0.`org.c.a.e.e.e` @type ^`org.c.a.f` := v1 @kind object;
  #L3fcb62.  call temp:= `b`(v3) @signature `Lorg/c/a/a;.b:()Lorg/c/a/a;` @kind virtual;
  #L3fcb68.  v1:= temp @kind object;
  #L3fcb6a.  v0.`org.c.a.e.e.a` @type ^`org.c.a.a` := v1 @kind object;
  #L3fcb6e.  if v4 != 0 then goto L3fcb7a;
  #L3fcb72.  call temp:= `getDefault`() @signature `Ljava/util/Locale;.getDefault:()Ljava/util/Locale;` @kind static;
  #L3fcb78.  v4:= temp @kind object;
  #L3fcb7a.  v0.`org.c.a.e.e.c` @type ^`java.util.Locale` := v4 @kind object;
  #L3fcb7e.  v0.`org.c.a.e.e.d` @type ^`int` := v6;
  #L3fcb82.  v0.`org.c.a.e.e.f` @type ^`java.lang.Integer` := v5 @kind object;
  #L3fcb86.  v1:= v0.`org.c.a.e.e.e` @type ^`org.c.a.f` @kind object;
  #L3fcb8a.  v0.`org.c.a.e.e.g` @type ^`org.c.a.f` := v1 @kind object;
  #L3fcb8e.  v1:= v0.`org.c.a.e.e.f` @type ^`java.lang.Integer` @kind object;
  #L3fcb92.  v0.`org.c.a.e.e.i` @type ^`java.lang.Integer` := v1 @kind object;
  #L3fcb96.  v1:= 8I;
  #L3fcb9a.  v1:= new `org.c.a.e.e$a`[v1];
  #L3fcb9e.  v0.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] := v1 @kind object;
  #L3fcba2.  return @kind void;
}
procedure `int` `a`(`org.c.a.e.e` v0 @kind object, `int` v1 ) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fc6d0.  v0.`org.c.a.e.e.k` @type ^`int` := v1;
  #L3fc6d4.  return v1;
}
procedure `int` `a`(`org.c.a.g` v1 @kind object, `org.c.a.g` v2 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/g;Lorg/c/a/g;)I` @AccessFlag STATIC {
    temp;
    v0;

  #L3fc6e8.  if v1 == 0 then goto L3fc71c;
  #L3fc6ec.  call temp:= `b`(v1) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3fc6f2.  v0:= temp;
  #L3fc6f4.  if v0 != 0 then goto L3fc6fa;
  #L3fc6f8.  goto L3fc71c;
  #L3fc6fa.  if v2 == 0 then goto L3fc718;
  #L3fc6fe.  call temp:= `b`(v2) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3fc704.  v0:= temp;
  #L3fc706.  if v0 != 0 then goto L3fc70c;
  #L3fc70a.  goto L3fc718;
  #L3fc70c.  call temp:= `compareTo`(v1, v2) @signature `Lorg/c/a/g;.compareTo:(Ljava/lang/Object;)I` @kind virtual;
  #L3fc712.  v1:= temp;
  #L3fc714.  v1:= -v1 @kind int;
  #L3fc716.  return v1;
  #L3fc718.  v1:= 1I;
  #L3fc71a.  return v1;
  #L3fc71c.  if v2 == 0 then goto L3fc732;
  #L3fc720.  call temp:= `b`(v2) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3fc726.  v1:= temp;
  #L3fc728.  if v1 != 0 then goto L3fc72e;
  #L3fc72c.  goto L3fc732;
  #L3fc72e.  v1:= -1I;
  #L3fc730.  return v1;
  #L3fc732.  v1:= 0I;
  #L3fc734.  return v1;
}
procedure `java.lang.Integer` `a`(`org.c.a.e.e` v0 @kind object, `java.lang.Integer` v1 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;Ljava/lang/Integer;)Ljava/lang/Integer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fc760.  v0.`org.c.a.e.e.h` @type ^`java.lang.Integer` := v1 @kind object;
  #L3fc764.  return v1 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.e.e` v0 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;)Lorg/c/a/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcb14.  v0:= v0.`org.c.a.e.e.g` @type ^`org.c.a.f` @kind object;
  #L3fcb18.  return v0 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.e.e` v0 @kind object, `org.c.a.f` v1 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;Lorg/c/a/f;)Lorg/c/a/f;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcb2c.  v0.`org.c.a.e.e.g` @type ^`org.c.a.f` := v1 @kind object;
  #L3fcb30.  return v1 @kind object;
}
procedure `void` `a`(`org.c.a.e.e$a`[] v5 @kind object, `int` v6 ) @signature `Lorg/c/a/e/e;.a:([Lorg/c/a/e/e$a;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3fcc48.  v0:= 0I;
  #L3fcc4a.  v1:= 10I;
  #L3fcc4e.  if v6 <= v1 then goto L3fcc5a;
  #L3fcc52.  call `sort`(v5, v0, v6) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;II)V` @kind static;
  #L3fcc58.  goto L3fcc98;
  #L3fcc5a.  if v0 >= v6 then goto L3fcc98;
  #L3fcc5e.  v1:= v0;
  #L3fcc60.  if v1 <= 0 then goto L3fcc92;
  #L3fcc64.  v2:= v1 + -1;
  #L3fcc68.  v3:= v5[v2] @kind object;
  #L3fcc6c.  v4:= v5[v1] @kind object;
  #L3fcc70.  call temp:= `a`(v3, v4) @signature `Lorg/c/a/e/e$a;.a:(Lorg/c/a/e/e$a;)I` @kind virtual;
  #L3fcc76.  v3:= temp;
  #L3fcc78.  if v3 <= 0 then goto L3fcc92;
  #L3fcc7c.  v3:= v5[v1] @kind object;
  #L3fcc80.  v4:= v5[v2] @kind object;
  #L3fcc84.  v5[v1]:= v4 @kind object;
  #L3fcc88.  v5[v2]:= v3 @kind object;
  #L3fcc8c.  v1:= v1 + -1;
  #L3fcc90.  goto L3fcc60;
  #L3fcc92.  v0:= v0 + 1;
  #L3fcc96.  goto L3fcc5a;
  #L3fcc98.  return @kind void;
}
procedure `boolean` `a`(`org.c.a.e.e` v0 @kind object, `boolean` v1 ) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fc6b8.  v0.`org.c.a.e.e.l` @type ^`boolean` := v1 @kind boolean;
  #L3fc6bc.  return v1;
}
procedure `org.c.a.e.e$a`[] `a`(`org.c.a.e.e` v0 @kind object, `org.c.a.e.e$a`[] v1 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/e;[Lorg/c/a/e/e$a;)[Lorg/c/a/e/e$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcae4.  v0.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] := v1 @kind object;
  #L3fcae8.  return v1 @kind object;
}
procedure `java.lang.Integer` `b`(`org.c.a.e.e` v0 @kind object) @signature `Lorg/c/a/e/e;.b:(Lorg/c/a/e/e;)Ljava/lang/Integer;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fc778.  v0:= v0.`org.c.a.e.e.h` @type ^`java.lang.Integer` @kind object;
  #L3fc77c.  return v0 @kind object;
}
procedure `org.c.a.e.e$a`[] `c`(`org.c.a.e.e` v0 @kind object) @signature `Lorg/c/a/e/e;.c:(Lorg/c/a/e/e;)[Lorg/c/a/e/e$a;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fcafc.  v0:= v0.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] @kind object;
  #L3fcb00.  return v0 @kind object;
}
procedure `int` `d`(`org.c.a.e.e` v0 @kind object) @signature `Lorg/c/a/e/e;.d:(Lorg/c/a/e/e;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3fc748.  v0:= v0.`org.c.a.e.e.k` @type ^`int`;
  #L3fc74c.  return v0;
}
procedure `org.c.a.e.e$a` `e`(`org.c.a.e.e` v4 @kind this) @signature `Lorg/c/a/e/e;.e:()Lorg/c/a/e/e$a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fca74.  v0:= v4.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] @kind object;
  #L3fca78.  v1:= v4.`org.c.a.e.e.k` @type ^`int`;
  #L3fca7c.  v2:= length @variable v0;
  #L3fca7e.  if v1 == v2 then goto L3fca8a;
  #L3fca82.  v2:= v4.`org.c.a.e.e.l` @type ^`boolean` @kind boolean;
  #L3fca86.  if v2 == 0 then goto L3fcaae;
  #L3fca8a.  v2:= length @variable v0;
  #L3fca8c.  if v1 != v2 then goto L3fca96;
  #L3fca90.  v2:= v1 * 2;
  #L3fca94.  goto L3fca98;
  #L3fca96.  v2:= length @variable v0;
  #L3fca98.  v2:= new `org.c.a.e.e$a`[v2];
  #L3fca9c.  v3:= 0I;
  #L3fca9e.  call `arraycopy`(v0, v3, v2, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3fcaa4.  v4.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] := v2 @kind object;
  #L3fcaa8.  v4.`org.c.a.e.e.l` @type ^`boolean` := v3 @kind boolean;
  #L3fcaac.  v0:= v2 @kind object;
  #L3fcaae.  v2:= 0I;
  #L3fcab0.  v4.`org.c.a.e.e.m` @type ^`java.lang.Object` := v2 @kind object;
  #L3fcab4.  v2:= v0[v1] @kind object;
  #L3fcab8.  if v2 != 0 then goto L3fcaca;
  #L3fcabc.  v2:= new `org.c.a.e.e$a`;
  #L3fcac0.  call `<init>`(v2) @signature `Lorg/c/a/e/e$a;.<init>:()V` @kind direct;
  #L3fcac6.  v0[v1]:= v2 @kind object;
  #L3fcaca.  v1:= v1 + 1;
  #L3fcace.  v4.`org.c.a.e.e.k` @type ^`int` := v1;
  #L3fcad2.  return v2 @kind object;
}
procedure `long` `a`(`org.c.a.e.e` v1 @kind this, `org.c.a.e.l` v2 @kind object, `java.lang.CharSequence` v3 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/e/l;Ljava/lang/CharSequence;)J` @AccessFlag  {
    temp;
    v0;

  #L3fca04.  v0:= 0I;
  #L3fca06.  call temp:= `a`(v2, v1, v3, v0) @signature `Lorg/c/a/e/l;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @kind interface;
  #L3fca0c.  v2:= temp;
  #L3fca0e.  if v2 < 0 then goto L3fca2a;
  #L3fca12.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L3fca18.  v0:= temp;
  #L3fca1a.  if v2 < v0 then goto L3fca2e;
  #L3fca1e.  v2:= 1I;
  #L3fca20.  call temp:= `a`(v1, v2, v3) @signature `Lorg/c/a/e/e;.a:(ZLjava/lang/CharSequence;)J` @kind virtual;
  #L3fca26.  v2:= temp @kind wide;
  #L3fca28.  return v2 @kind wide;
  #L3fca2a.  v2:= v2 ^~ -1;
  #L3fca2e.  v0:= new `java.lang.IllegalArgumentException`;
  #L3fca32.  call temp:= `toString`(v3) @signature `Ljava/lang/CharSequence;.toString:()Ljava/lang/String;` @kind interface;
  #L3fca38.  v3:= temp @kind object;
  #L3fca3a.  call temp:= `a`(v3, v2) @signature `Lorg/c/a/e/i;.a:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3fca40.  v2:= temp @kind object;
  #L3fca42.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fca48.  throw v0;
}
procedure `long` `a`(`org.c.a.e.e` v7 @kind this, `boolean` v8 , `java.lang.CharSequence` v9 @kind object) @signature `Lorg/c/a/e/e;.a:(ZLjava/lang/CharSequence;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3fc7ec.  v0:= v7.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] @kind object;
  #L3fc7f0.  v1:= v7.`org.c.a.e.e.k` @type ^`int`;
  #L3fc7f4.  v2:= v7.`org.c.a.e.e.l` @type ^`boolean` @kind boolean;
  #L3fc7f8.  v3:= 0I;
  #L3fc7fa.  if v2 == 0 then goto L3fc816;
  #L3fc7fe.  v0:= v7.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] @kind object;
  #L3fc802.  call temp:= `clone`(v0) @signature `[Lorg/c/a/e/e$a;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3fc808.  v0:= temp @kind object;
  #L3fc80a.  v0:= (`org.c.a.e.e$a`[]) v0 @kind object;
  #L3fc80e.  v7.`org.c.a.e.e.j` @type ^`org.c.a.e.e$a`[] := v0 @kind object;
  #L3fc812.  v7.`org.c.a.e.e.l` @type ^`boolean` := v3 @kind boolean;
  #L3fc816.  call `a`(v0, v1) @signature `Lorg/c/a/e/e;.a:([Lorg/c/a/e/e$a;I)V` @kind static;
  #L3fc81c.  if v1 <= 0 then goto L3fc88c;
  #L3fc820.  call temp:= `i`() @signature `Lorg/c/a/h;.i:()Lorg/c/a/h;` @kind static;
  #L3fc826.  v2:= temp @kind object;
  #L3fc828.  v4:= v7.`org.c.a.e.e.a` @type ^`org.c.a.a` @kind object;
  #L3fc82c.  call temp:= `a`(v2, v4) @signature `Lorg/c/a/h;.a:(Lorg/c/a/a;)Lorg/c/a/g;` @kind virtual;
  #L3fc832.  v2:= temp @kind object;
  #L3fc834.  call temp:= `f`() @signature `Lorg/c/a/h;.f:()Lorg/c/a/h;` @kind static;
  #L3fc83a.  v4:= temp @kind object;
  #L3fc83c.  v5:= v7.`org.c.a.e.e.a` @type ^`org.c.a.a` @kind object;
  #L3fc840.  call temp:= `a`(v4, v5) @signature `Lorg/c/a/h;.a:(Lorg/c/a/a;)Lorg/c/a/g;` @kind virtual;
  #L3fc846.  v4:= temp @kind object;
  #L3fc848.  v5:= v0[v3] @kind object;
  #L3fc84c.  v5:= v5.`org.c.a.e.e$a.a` @type ^`org.c.a.c` @kind object;
  #L3fc850.  call temp:= `e`(v5) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3fc856.  v5:= temp @kind object;
  #L3fc858.  call temp:= `a`(v5, v2) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/g;Lorg/c/a/g;)I` @kind static;
  #L3fc85e.  v2:= temp;
  #L3fc860.  if v2 < 0 then goto L3fc88c;
  #L3fc864.  call temp:= `a`(v5, v4) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/g;Lorg/c/a/g;)I` @kind static;
  #L3fc86a.  v2:= temp;
  #L3fc86c.  if v2 > 0 then goto L3fc88c;
  #L3fc870.  call temp:= `s`() @signature `Lorg/c/a/d;.s:()Lorg/c/a/d;` @kind static;
  #L3fc876.  v0:= temp @kind object;
  #L3fc878.  v1:= v7.`org.c.a.e.e.d` @type ^`int`;
  #L3fc87c.  call `a`(v7, v0, v1) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/d;I)V` @kind virtual;
  #L3fc882.  call temp:= `a`(v7, v8, v9) @signature `Lorg/c/a/e/e;.a:(ZLjava/lang/CharSequence;)J` @kind virtual;
  #L3fc888.  v8:= temp @kind wide;
  #L3fc88a.  return v8 @kind wide;
  #L3fc88c.  v4:= v7.`org.c.a.e.e.b` @type ^`long` @kind wide;
  #L3fc890.  v2:= 0I;
  #L3fc892.  if v2 >= v1 then goto L3fc8ac;
  #L3fc896.  v6:= v0[v2] @kind object;
  #L3fc89a.  call temp:= `a`(v6, v4, v8) @signature `Lorg/c/a/e/e$a;.a:(JZ)J` @kind virtual;
  #L3fc8a0.  v4:= temp @kind wide;
  #L3fc8a2.  v2:= v2 + 1;
  #L3fc8a6.  goto L3fc892;
  #L3fc8a8.  v8:= Exception @type ^`org.c.a.i` @kind object;
  #L3fc8aa.  goto L3fc8ea;
  #L3fc8ac.  if v8 == 0 then goto L3fc922;
  #L3fc8b0.  v8:= 0I;
  #L3fc8b2.  if v8 >= v1 then goto L3fc922;
  #L3fc8b6.  v2:= v0[v8] @kind object;
  #L3fc8ba.  v2:= v2.`org.c.a.e.e$a.a` @type ^`org.c.a.c` @kind object;
  #L3fc8be.  call temp:= `d`(v2) @signature `Lorg/c/a/c;.d:()Z` @kind virtual;
  #L3fc8c4.  v2:= temp;
  #L3fc8c6.  if v2 != 0 then goto L3fc8e4;
  #L3fc8ca.  v2:= v0[v8] @kind object;
  #L3fc8ce.  v6:= v1 + -1;
  #L3fc8d2.  if v8 != v6 then goto L3fc8da;
  #L3fc8d6.  v6:= 1I;
  #L3fc8d8.  goto L3fc8dc;
  #L3fc8da.  v6:= 0I;
  #L3fc8dc.  call temp:= `a`(v2, v4, v6) @signature `Lorg/c/a/e/e$a;.a:(JZ)J` @kind virtual;
  #L3fc8e2.  v4:= temp @kind wide;
  #L3fc8e4.  v8:= v8 + 1;
  #L3fc8e8.  goto L3fc8b2;
  #L3fc8ea.  if v9 == 0 then goto L3fc920;
  #L3fc8ee.  v0:= new `java.lang.StringBuilder`;
  #L3fc8f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc8f8.  v1:= "Cannot parse \"" @kind object;
  #L3fc8fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc902.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc908.  v9:= 34I;
  #L3fc90c.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc912.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc918.  v9:= temp @kind object;
  #L3fc91a.  call `a`(v8, v9) @signature `Lorg/c/a/i;.a:(Ljava/lang/String;)V` @kind virtual;
  #L3fc920.  throw v8;
  #L3fc922.  v8:= v7.`org.c.a.e.e.h` @type ^`java.lang.Integer` @kind object;
  #L3fc926.  if v8 == 0 then goto L3fc93e;
  #L3fc92a.  v8:= v7.`org.c.a.e.e.h` @type ^`java.lang.Integer` @kind object;
  #L3fc92e.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3fc934.  v8:= temp;
  #L3fc936.  v8:= (`long`) v8 @kind i2l;
  #L3fc938.  v0:= v4 - v8 @kind long;
  #L3fc93c.  goto L3fc9e0;
  #L3fc93e.  v8:= v7.`org.c.a.e.e.g` @type ^`org.c.a.f` @kind object;
  #L3fc942.  if v8 == 0 then goto L3fc9de;
  #L3fc946.  v8:= v7.`org.c.a.e.e.g` @type ^`org.c.a.f` @kind object;
  #L3fc94a.  call temp:= `e`(v8, v4) @signature `Lorg/c/a/f;.e:(J)I` @kind virtual;
  #L3fc950.  v8:= temp;
  #L3fc952.  v0:= (`long`) v8 @kind i2l;
  #L3fc954.  v2:= v4 - v0 @kind long;
  #L3fc958.  v0:= v7.`org.c.a.e.e.g` @type ^`org.c.a.f` @kind object;
  #L3fc95c.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/f;.b:(J)I` @kind virtual;
  #L3fc962.  v0:= temp;
  #L3fc964.  if v8 == v0 then goto L3fc9da;
  #L3fc968.  v8:= new `java.lang.StringBuilder`;
  #L3fc96c.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc972.  v0:= "Illegal instant due to time zone offset transition (" @kind object;
  #L3fc976.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc97c.  v0:= v7.`org.c.a.e.e.g` @type ^`org.c.a.f` @kind object;
  #L3fc980.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc986.  v0:= 41I;
  #L3fc98a.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc990.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc996.  v8:= temp @kind object;
  #L3fc998.  if v9 == 0 then goto L3fc9ce;
  #L3fc99c.  v0:= new `java.lang.StringBuilder`;
  #L3fc9a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3fc9a6.  v1:= "Cannot parse \"" @kind object;
  #L3fc9aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc9b0.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc9b6.  v9:= "\": " @kind object;
  #L3fc9ba.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc9c0.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3fc9c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3fc9cc.  v8:= temp @kind object;
  #L3fc9ce.  v9:= new `org.c.a.j`;
  #L3fc9d2.  call `<init>`(v9, v8) @signature `Lorg/c/a/j;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3fc9d8.  throw v9;
  #L3fc9da.  v0:= v2 @kind wide;
  #L3fc9dc.  goto L3fc9e0;
  #L3fc9de.  v0:= v4 @kind wide;
  #L3fc9e0.  return v0 @kind wide;
  catch `org.c.a.i` @[L3fc896..L3fc8e4] goto L3fc8a8;
}
procedure `org.c.a.a` `a`(`org.c.a.e.e` v1 @kind this) @signature `Lorg/c/a/e/e;.a:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fca5c.  v0:= v1.`org.c.a.e.e.a` @type ^`org.c.a.a` @kind object;
  #L3fca60.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.e.e` v1 @kind this, `java.lang.Integer` v2 @kind object) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Integer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbb4.  v0:= 0I;
  #L3fcbb6.  v1.`org.c.a.e.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L3fcbba.  v1.`org.c.a.e.e.h` @type ^`java.lang.Integer` := v2 @kind object;
  #L3fcbbe.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.e` v1 @kind this, `org.c.a.c` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/c;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fcbd0.  call temp:= `e`(v1) @signature `Lorg/c/a/e/e;.e:()Lorg/c/a/e/e$a;` @kind direct;
  #L3fcbd6.  v0:= temp @kind object;
  #L3fcbd8.  call `a`(v0, v2, v3) @signature `Lorg/c/a/e/e$a;.a:(Lorg/c/a/c;I)V` @kind virtual;
  #L3fcbde.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.e` v2 @kind this, `org.c.a.d` v3 @kind object, `int` v4 ) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/d;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcbf0.  call temp:= `e`(v2) @signature `Lorg/c/a/e/e;.e:()Lorg/c/a/e/e$a;` @kind direct;
  #L3fcbf6.  v0:= temp @kind object;
  #L3fcbf8.  v1:= v2.`org.c.a.e.e.a` @type ^`org.c.a.a` @kind object;
  #L3fcbfc.  call temp:= `a`(v3, v1) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L3fcc02.  v3:= temp @kind object;
  #L3fcc04.  call `a`(v0, v3, v4) @signature `Lorg/c/a/e/e$a;.a:(Lorg/c/a/c;I)V` @kind virtual;
  #L3fcc0a.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.e` v2 @kind this, `org.c.a.d` v3 @kind object, `java.lang.String` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/d;Ljava/lang/String;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fcc1c.  call temp:= `e`(v2) @signature `Lorg/c/a/e/e;.e:()Lorg/c/a/e/e$a;` @kind direct;
  #L3fcc22.  v0:= temp @kind object;
  #L3fcc24.  v1:= v2.`org.c.a.e.e.a` @type ^`org.c.a.a` @kind object;
  #L3fcc28.  call temp:= `a`(v3, v1) @signature `Lorg/c/a/d;.a:(Lorg/c/a/a;)Lorg/c/a/c;` @kind virtual;
  #L3fcc2e.  v3:= temp @kind object;
  #L3fcc30.  call `a`(v0, v3, v4, v5) @signature `Lorg/c/a/e/e$a;.a:(Lorg/c/a/c;Ljava/lang/String;Ljava/util/Locale;)V` @kind virtual;
  #L3fcc36.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.e` v1 @kind this, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fccac.  v0:= 0I;
  #L3fccae.  v1.`org.c.a.e.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L3fccb2.  v1.`org.c.a.e.e.g` @type ^`org.c.a.f` := v2 @kind object;
  #L3fccb6.  return @kind void;
}
procedure `boolean` `a`(`org.c.a.e.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/c/a/e/e;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc680.  v0:= instanceof @variable v2 @type ^`org.c.a.e.e$b` @kind boolean;
  #L3fc684.  if v0 == 0 then goto L3fc6a2;
  #L3fc688.  v0:= v2 @kind object;
  #L3fc68a.  v0:= (`org.c.a.e.e$b`) v0 @kind object;
  #L3fc68e.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/e/e$b;.a:(Lorg/c/a/e/e;)Z` @kind virtual;
  #L3fc694.  v0:= temp;
  #L3fc696.  if v0 == 0 then goto L3fc6a2;
  #L3fc69a.  v1.`org.c.a.e.e.m` @type ^`java.lang.Object` := v2 @kind object;
  #L3fc69e.  v2:= 1I;
  #L3fc6a0.  return v2;
  #L3fc6a2.  v2:= 0I;
  #L3fc6a4.  return v2;
}
procedure `java.util.Locale` `b`(`org.c.a.e.e` v1 @kind this) @signature `Lorg/c/a/e/e;.b:()Ljava/util/Locale;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc7d4.  v0:= v1.`org.c.a.e.e.c` @type ^`java.util.Locale` @kind object;
  #L3fc7d8.  return v0 @kind object;
}
procedure `java.lang.Integer` `c`(`org.c.a.e.e` v1 @kind this) @signature `Lorg/c/a/e/e;.c:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc790.  v0:= v1.`org.c.a.e.e.i` @type ^`java.lang.Integer` @kind object;
  #L3fc794.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`org.c.a.e.e` v1 @kind this) @signature `Lorg/c/a/e/e;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3fc7a8.  v0:= v1.`org.c.a.e.e.m` @type ^`java.lang.Object` @kind object;
  #L3fc7ac.  if v0 != 0 then goto L3fc7be;
  #L3fc7b0.  v0:= new `org.c.a.e.e$b`;
  #L3fc7b4.  call `<init>`(v0, v1) @signature `Lorg/c/a/e/e$b;.<init>:(Lorg/c/a/e/e;)V` @kind direct;
  #L3fc7ba.  v1.`org.c.a.e.e.m` @type ^`java.lang.Object` := v0 @kind object;
  #L3fc7be.  v0:= v1.`org.c.a.e.e.m` @type ^`java.lang.Object` @kind object;
  #L3fc7c2.  return v0 @kind object;
}
