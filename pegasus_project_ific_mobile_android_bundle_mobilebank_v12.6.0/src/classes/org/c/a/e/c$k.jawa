record `org.c.a.e.c$k` @kind class @AccessFlag  extends `org.c.a.e.l` @kind interface, `org.c.a.e.n` @kind interface {
  `java.util.Map` `org.c.a.e.c$k.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.e.c$k.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.e.c$k` v0 @kind this, `int` v1 , `java.util.Map` v2 @kind object) @signature `Lorg/c/a/e/c$k;.<init>:(ILjava/util/Map;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3faf6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3faf72.  v0.`org.c.a.e.c$k.b` @type ^`int` := v1;
  #L3faf76.  v0.`org.c.a.e.c$k.a` @type ^`java.util.Map` := v2 @kind object;
  #L3faf7a.  return @kind void;
}
procedure `java.lang.String` `a`(`org.c.a.e.c$k` v1 @kind this, `long` v2 , `org.c.a.f` v4 @kind object, `java.util.Locale` v5 @kind object) @signature `Lorg/c/a/e/c$k;.a:(JLorg/c/a/f;Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3faf1c.  if v4 != 0 then goto L3faf26;
  #L3faf20.  v2:= "" @kind object;
  #L3faf24.  return v2 @kind object;
  #L3faf26.  v0:= v1.`org.c.a.e.c$k.b` @type ^`int`;
  #L3faf2a.  goto L3faf4c;
  #L3faf30.  v2:= "" @kind object;
  #L3faf34.  return v2 @kind object;
  #L3faf36.  call temp:= `a`(v4, v2, v5) @signature `Lorg/c/a/f;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3faf3c.  v2:= temp @kind object;
  #L3faf3e.  return v2 @kind object;
  #L3faf40.  call temp:= `b`(v4, v2, v5) @signature `Lorg/c/a/f;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3faf46.  v2:= temp @kind object;
  #L3faf48.  return v2 @kind object;
  #L3faf4a.  
  #L3faf4c.  switch v0
                  | 0 => goto L3faf40
                  | 1 => goto L3faf36
                  | else => goto L3faf30;
}
procedure `int` `a`(`org.c.a.e.c$k` v2 @kind this) @signature `Lorg/c/a/e/c$k;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3fae38.  v0:= v2.`org.c.a.e.c$k.b` @type ^`int`;
  #L3fae3c.  v1:= 1I;
  #L3fae3e.  if v0 != v1 then goto L3fae46;
  #L3fae42.  v0:= 4I;
  #L3fae44.  goto L3fae4a;
  #L3fae46.  v0:= 20I;
  #L3fae4a.  return v0;
}
procedure `int` `a`(`org.c.a.e.c$k` v6 @kind this, `org.c.a.e.e` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `int` v9 ) @signature `Lorg/c/a/e/c$k;.a:(Lorg/c/a/e/e;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3fae5c.  v0:= v6.`org.c.a.e.c$k.a` @type ^`java.util.Map` @kind object;
  #L3fae60.  if v0 == 0 then goto L3fae66;
  #L3fae64.  goto L3fae6e;
  #L3fae66.  call temp:= `b`() @signature `Lorg/c/a/e;.b:()Ljava/util/Map;` @kind static;
  #L3fae6c.  v0:= temp @kind object;
  #L3fae6e.  v1:= 0I;
  #L3fae70.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L3fae76.  v2:= temp @kind object;
  #L3fae78.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3fae7e.  v2:= temp @kind object;
  #L3fae80.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3fae86.  v3:= temp;
  #L3fae88.  if v3 == 0 then goto L3faec0;
  #L3fae8c.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3fae92.  v3:= temp @kind object;
  #L3fae94.  v3:= (`java.lang.String`) v3 @kind object;
  #L3fae98.  call temp:= `a`(v8, v9, v3) @signature `Lorg/c/a/e/c;.a:(Ljava/lang/CharSequence;ILjava/lang/String;)Z` @kind static;
  #L3fae9e.  v4:= temp;
  #L3faea0.  if v4 == 0 then goto L3fae80;
  #L3faea4.  if v1 == 0 then goto L3faebc;
  #L3faea8.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3faeae.  v4:= temp;
  #L3faeb0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3faeb6.  v5:= temp;
  #L3faeb8.  if v4 <= v5 then goto L3fae80;
  #L3faebc.  v1:= v3 @kind object;
  #L3faebe.  goto L3fae80;
  #L3faec0.  if v1 == 0 then goto L3faee2;
  #L3faec4.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3faeca.  v8:= temp @kind object;
  #L3faecc.  v8:= (`org.c.a.f`) v8 @kind object;
  #L3faed0.  call `a`(v7, v8) @signature `Lorg/c/a/e/e;.a:(Lorg/c/a/f;)V` @kind virtual;
  #L3faed6.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3faedc.  v7:= temp;
  #L3faede.  v9:= v9 + v7 @kind int;
  #L3faee0.  return v9;
  #L3faee2.  v7:= v9 ^~ -1;
  #L3faee6.  return v7;
}
procedure `void` `a`(`org.c.a.e.c$k` v2 @kind this, `java.lang.Appendable` v3 @kind object, `long` v4 , `org.c.a.a` v6 @kind object, `int` v7 , `org.c.a.f` v8 @kind object, `java.util.Locale` v9 @kind object) @signature `Lorg/c/a/e/c$k;.a:(Ljava/lang/Appendable;JLorg/c/a/a;ILorg/c/a/f;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3faf8c.  v6:= (`long`) v7 @kind i2l;
  #L3faf8e.  v0:= v4 - v6 @kind long;
  #L3faf92.  call temp:= `a`(v2, v0, v8, v9) @signature `Lorg/c/a/e/c$k;.a:(JLorg/c/a/f;Ljava/util/Locale;)Ljava/lang/String;` @kind direct;
  #L3faf98.  v4:= temp @kind object;
  #L3faf9a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L3fafa0.  return @kind void;
}
procedure `void` `a`(`org.c.a.e.c$k` v0 @kind this, `java.lang.Appendable` v1 @kind object, `org.c.a.v` v2 @kind object, `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/e/c$k;.a:(Ljava/lang/Appendable;Lorg/c/a/v;Ljava/util/Locale;)V` @AccessFlag PUBLIC {
    temp;

  #L3fafb4.  return @kind void;
}
procedure `int` `b`(`org.c.a.e.c$k` v2 @kind this) @signature `Lorg/c/a/e/c$k;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3faef8.  v0:= v2.`org.c.a.e.c$k.b` @type ^`int`;
  #L3faefc.  v1:= 1I;
  #L3faefe.  if v0 != v1 then goto L3faf06;
  #L3faf02.  v0:= 4I;
  #L3faf04.  goto L3faf0a;
  #L3faf06.  v0:= 20I;
  #L3faf0a.  return v0;
}
