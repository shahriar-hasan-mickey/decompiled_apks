record `org.c.a.a.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.c.a.a.b` @kind class, `org.c.a.r` @kind interface {
}
procedure `void` `<init>`(`org.c.a.a.a` v0 @kind this) @signature `Lorg/c/a/a/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3eb134.  call `<init>`(v0) @signature `Lorg/c/a/a/b;.<init>:()V` @kind direct;
  #L3eb13a.  return @kind void;
}
procedure `int` `f`(`org.c.a.a.a` v3 @kind this) @signature `Lorg/c/a/a/a;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb0b0.  call temp:= `d`(v3) @signature `Lorg/c/a/a/a;.d:()Lorg/c/a/a;` @kind virtual;
  #L3eb0b6.  v0:= temp @kind object;
  #L3eb0b8.  call temp:= `E`(v0) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L3eb0be.  v0:= temp @kind object;
  #L3eb0c0.  call temp:= `c`(v3) @signature `Lorg/c/a/a/a;.c:()J` @kind virtual;
  #L3eb0c6.  v1:= temp @kind wide;
  #L3eb0c8.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3eb0ce.  v0:= temp;
  #L3eb0d0.  return v0;
}
procedure `int` `g`(`org.c.a.a.a` v3 @kind this) @signature `Lorg/c/a/a/a;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb0e4.  call temp:= `d`(v3) @signature `Lorg/c/a/a/a;.d:()Lorg/c/a/a;` @kind virtual;
  #L3eb0ea.  v0:= temp @kind object;
  #L3eb0ec.  call temp:= `z`(v0) @signature `Lorg/c/a/a;.z:()Lorg/c/a/c;` @kind virtual;
  #L3eb0f2.  v0:= temp @kind object;
  #L3eb0f4.  call temp:= `c`(v3) @signature `Lorg/c/a/a/a;.c:()J` @kind virtual;
  #L3eb0fa.  v1:= temp @kind wide;
  #L3eb0fc.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3eb102.  v0:= temp;
  #L3eb104.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.a.a` v1 @kind this) @signature `Lorg/c/a/a/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb118.  call temp:= `toString`(v1) @signature `Lorg/c/a/a/b;.toString:()Ljava/lang/String;` @kind super;
  #L3eb11e.  v0:= temp @kind object;
  #L3eb120.  return v0 @kind object;
}
