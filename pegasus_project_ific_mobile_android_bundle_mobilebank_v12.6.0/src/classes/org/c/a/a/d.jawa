record `org.c.a.a.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.c.a.w` @kind interface {
}
procedure `void` `<init>`(`org.c.a.a.d` v0 @kind this) @signature `Lorg/c/a/a/d;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3eb7fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb802.  return @kind void;
}
procedure `int` `a`(`org.c.a.a.d` v1 @kind this, `org.c.a.h` v2 @kind object) @signature `Lorg/c/a/a/d;.a:(Lorg/c/a/h;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb6f0.  call temp:= `b`(v1, v2) @signature `Lorg/c/a/a/d;.b:(Lorg/c/a/h;)I` @kind virtual;
  #L3eb6f6.  v2:= temp;
  #L3eb6f8.  v0:= -1I;
  #L3eb6fa.  if v2 != v0 then goto L3eb702;
  #L3eb6fe.  v2:= 0I;
  #L3eb700.  return v2;
  #L3eb702.  call temp:= `b`(v1, v2) @signature `Lorg/c/a/a/d;.b:(I)I` @kind virtual;
  #L3eb708.  v2:= temp;
  #L3eb70a.  return v2;
}
procedure `org.c.a.h` `a`(`org.c.a.a.d` v1 @kind this, `int` v2 ) @signature `Lorg/c/a/a/d;.a:(I)Lorg/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb7d8.  call temp:= `e`(v1) @signature `Lorg/c/a/a/d;.e:()Lorg/c/a/o;` @kind virtual;
  #L3eb7de.  v0:= temp @kind object;
  #L3eb7e0.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/o;.a:(I)Lorg/c/a/h;` @kind virtual;
  #L3eb7e6.  v2:= temp @kind object;
  #L3eb7e8.  return v2 @kind object;
}
procedure `int` `b`(`org.c.a.a.d` v1 @kind this, `org.c.a.h` v2 @kind object) @signature `Lorg/c/a/a/d;.b:(Lorg/c/a/h;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb71c.  call temp:= `e`(v1) @signature `Lorg/c/a/a/d;.e:()Lorg/c/a/o;` @kind virtual;
  #L3eb722.  v0:= temp @kind object;
  #L3eb724.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/o;.b:(Lorg/c/a/h;)I` @kind virtual;
  #L3eb72a.  v2:= temp;
  #L3eb72c.  return v2;
}
procedure `boolean` `equals`(`org.c.a.a.d` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/c/a/a/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eb670.  v0:= 1I;
  #L3eb672.  if v6 != v7 then goto L3eb678;
  #L3eb676.  return v0;
  #L3eb678.  v1:= instanceof @variable v7 @type ^`org.c.a.w` @kind boolean;
  #L3eb67c.  v2:= 0I;
  #L3eb67e.  if v1 != 0 then goto L3eb684;
  #L3eb682.  return v2;
  #L3eb684.  v7:= (`org.c.a.w`) v7 @kind object;
  #L3eb688.  call temp:= `f`(v6) @signature `Lorg/c/a/a/d;.f:()I` @kind virtual;
  #L3eb68e.  v1:= temp;
  #L3eb690.  call temp:= `f`(v7) @signature `Lorg/c/a/w;.f:()I` @kind interface;
  #L3eb696.  v3:= temp;
  #L3eb698.  if v1 == v3 then goto L3eb69e;
  #L3eb69c.  return v2;
  #L3eb69e.  call temp:= `f`(v6) @signature `Lorg/c/a/a/d;.f:()I` @kind virtual;
  #L3eb6a4.  v1:= temp;
  #L3eb6a6.  v3:= 0I;
  #L3eb6a8.  if v3 >= v1 then goto L3eb6de;
  #L3eb6ac.  call temp:= `b`(v6, v3) @signature `Lorg/c/a/a/d;.b:(I)I` @kind virtual;
  #L3eb6b2.  v4:= temp;
  #L3eb6b4.  call temp:= `b`(v7, v3) @signature `Lorg/c/a/w;.b:(I)I` @kind interface;
  #L3eb6ba.  v5:= temp;
  #L3eb6bc.  if v4 != v5 then goto L3eb6dc;
  #L3eb6c0.  call temp:= `a`(v6, v3) @signature `Lorg/c/a/a/d;.a:(I)Lorg/c/a/h;` @kind virtual;
  #L3eb6c6.  v4:= temp @kind object;
  #L3eb6c8.  call temp:= `a`(v7, v3) @signature `Lorg/c/a/w;.a:(I)Lorg/c/a/h;` @kind interface;
  #L3eb6ce.  v5:= temp @kind object;
  #L3eb6d0.  if v4 == v5 then goto L3eb6d6;
  #L3eb6d4.  goto L3eb6dc;
  #L3eb6d6.  v3:= v3 + 1;
  #L3eb6da.  goto L3eb6a8;
  #L3eb6dc.  return v2;
  #L3eb6de.  return v0;
}
procedure `int` `f`(`org.c.a.a.d` v1 @kind this) @signature `Lorg/c/a/a/d;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb740.  call temp:= `e`(v1) @signature `Lorg/c/a/a/d;.e:()Lorg/c/a/o;` @kind virtual;
  #L3eb746.  v0:= temp @kind object;
  #L3eb748.  call temp:= `d`(v0) @signature `Lorg/c/a/o;.d:()I` @kind virtual;
  #L3eb74e.  v0:= temp;
  #L3eb750.  return v0;
}
procedure `int` `hashCode`(`org.c.a.a.d` v4 @kind this) @signature `Lorg/c/a/a/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eb764.  call temp:= `f`(v4) @signature `Lorg/c/a/a/d;.f:()I` @kind virtual;
  #L3eb76a.  v0:= temp;
  #L3eb76c.  v1:= 17I;
  #L3eb770.  v2:= 0I;
  #L3eb772.  if v2 >= v0 then goto L3eb7a0;
  #L3eb776.  v1:= v1 * 27;
  #L3eb77a.  call temp:= `b`(v4, v2) @signature `Lorg/c/a/a/d;.b:(I)I` @kind virtual;
  #L3eb780.  v3:= temp;
  #L3eb782.  v1:= v1 + v3 @kind int;
  #L3eb784.  v1:= v1 * 27;
  #L3eb788.  call temp:= `a`(v4, v2) @signature `Lorg/c/a/a/d;.a:(I)Lorg/c/a/h;` @kind virtual;
  #L3eb78e.  v3:= temp @kind object;
  #L3eb790.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3eb796.  v3:= temp;
  #L3eb798.  v1:= v1 + v3 @kind int;
  #L3eb79a.  v2:= v2 + 1;
  #L3eb79e.  goto L3eb772;
  #L3eb7a0.  return v1;
}
procedure `java.lang.String` `toString`(`org.c.a.a.d` v1 @kind this) @signature `Lorg/c/a/a/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb7b4.  call temp:= `a`() @signature `Lorg/c/a/e/k;.a:()Lorg/c/a/e/p;` @kind static;
  #L3eb7ba.  v0:= temp @kind object;
  #L3eb7bc.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/e/p;.a:(Lorg/c/a/w;)Ljava/lang/String;` @kind virtual;
  #L3eb7c2.  v0:= temp @kind object;
  #L3eb7c4.  return v0 @kind object;
}
