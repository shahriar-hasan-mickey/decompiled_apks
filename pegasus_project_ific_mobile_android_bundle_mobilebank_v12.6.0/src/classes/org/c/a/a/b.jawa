record `org.c.a.a.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.c.a.t` @kind interface {
}
procedure `void` `<init>`(`org.c.a.a.b` v0 @kind this) @signature `Lorg/c/a/a/b;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3eb364.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eb36a.  return @kind void;
}
procedure `org.c.a.b` `a`(`org.c.a.a.b` v4 @kind this) @signature `Lorg/c/a/a/b;.a:()Lorg/c/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eb2c4.  v0:= new `org.c.a.b`;
  #L3eb2c8.  call temp:= `c`(v4) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb2ce.  v1:= temp @kind wide;
  #L3eb2d0.  call temp:= `h`(v4) @signature `Lorg/c/a/a/b;.h:()Lorg/c/a/f;` @kind virtual;
  #L3eb2d6.  v3:= temp @kind object;
  #L3eb2d8.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/b;.<init>:(JLorg/c/a/f;)V` @kind direct;
  #L3eb2de.  return v0 @kind object;
}
procedure `boolean` `a`(`org.c.a.a.b` v2 @kind this, `org.c.a.t` v3 @kind object) @signature `Lorg/c/a/a/b;.a:(Lorg/c/a/t;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eb14c.  call temp:= `a`(v3) @signature `Lorg/c/a/e;.a:(Lorg/c/a/t;)J` @kind static;
  #L3eb152.  v0:= temp @kind wide;
  #L3eb154.  call temp:= `b`(v2, v0) @signature `Lorg/c/a/a/b;.b:(J)Z` @kind virtual;
  #L3eb15a.  v3:= temp;
  #L3eb15c.  return v3;
}
procedure `int` `b`(`org.c.a.a.b` v5 @kind this, `org.c.a.t` v6 @kind object) @signature `Lorg/c/a/a/b;.b:(Lorg/c/a/t;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3eb1fc.  v0:= 0I;
  #L3eb1fe.  if v5 != v6 then goto L3eb204;
  #L3eb202.  return v0;
  #L3eb204.  call temp:= `c`(v6) @signature `Lorg/c/a/t;.c:()J` @kind interface;
  #L3eb20a.  v1:= temp @kind wide;
  #L3eb20c.  call temp:= `c`(v5) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb212.  v3:= temp @kind wide;
  #L3eb214.  v6:= lcmp(v3, v1);
  #L3eb218.  if v6 != 0 then goto L3eb21e;
  #L3eb21c.  return v0;
  #L3eb21e.  v6:= lcmp(v3, v1);
  #L3eb222.  if v6 >= 0 then goto L3eb22a;
  #L3eb226.  v6:= -1I;
  #L3eb228.  return v6;
  #L3eb22a.  v6:= 1I;
  #L3eb22c.  return v6;
}
procedure `org.c.a.k` `b`(`org.c.a.a.b` v3 @kind this) @signature `Lorg/c/a/a/b;.b:()Lorg/c/a/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb314.  v0:= new `org.c.a.k`;
  #L3eb318.  call temp:= `c`(v3) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb31e.  v1:= temp @kind wide;
  #L3eb320.  call `<init>`(v0, v1) @signature `Lorg/c/a/k;.<init>:(J)V` @kind direct;
  #L3eb326.  return v0 @kind object;
}
procedure `boolean` `b`(`org.c.a.a.b` v3 @kind this, `long` v4 ) @signature `Lorg/c/a/a/b;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb170.  call temp:= `c`(v3) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb176.  v0:= temp @kind wide;
  #L3eb178.  v2:= lcmp(v0, v4);
  #L3eb17c.  if v2 >= 0 then goto L3eb184;
  #L3eb180.  v4:= 1I;
  #L3eb182.  goto L3eb186;
  #L3eb184.  v4:= 0I;
  #L3eb186.  return v4;
}
procedure `int` `compareTo`(`org.c.a.a.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/a/b;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3eb240.  v1:= (`org.c.a.t`) v1 @kind object;
  #L3eb244.  call temp:= `b`(v0, v1) @signature `Lorg/c/a/a/b;.b:(Lorg/c/a/t;)I` @kind virtual;
  #L3eb24a.  v1:= temp;
  #L3eb24c.  return v1;
}
procedure `org.c.a.m` `e`(`org.c.a.a.b` v4 @kind this) @signature `Lorg/c/a/a/b;.e:()Lorg/c/a/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3eb338.  v0:= new `org.c.a.m`;
  #L3eb33c.  call temp:= `c`(v4) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb342.  v1:= temp @kind wide;
  #L3eb344.  call temp:= `h`(v4) @signature `Lorg/c/a/a/b;.h:()Lorg/c/a/f;` @kind virtual;
  #L3eb34a.  v3:= temp @kind object;
  #L3eb34c.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/m;.<init>:(JLorg/c/a/f;)V` @kind direct;
  #L3eb352.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.a.b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/c/a/a/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eb198.  v0:= 1I;
  #L3eb19a.  if v7 != v8 then goto L3eb1a0;
  #L3eb19e.  return v0;
  #L3eb1a0.  v1:= instanceof @variable v8 @type ^`org.c.a.t` @kind boolean;
  #L3eb1a4.  v2:= 0I;
  #L3eb1a6.  if v1 != 0 then goto L3eb1ac;
  #L3eb1aa.  return v2;
  #L3eb1ac.  v8:= (`org.c.a.t`) v8 @kind object;
  #L3eb1b0.  call temp:= `c`(v7) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb1b6.  v3:= temp @kind wide;
  #L3eb1b8.  call temp:= `c`(v8) @signature `Lorg/c/a/t;.c:()J` @kind interface;
  #L3eb1be.  v5:= temp @kind wide;
  #L3eb1c0.  v1:= lcmp(v3, v5);
  #L3eb1c4.  if v1 != 0 then goto L3eb1e6;
  #L3eb1c8.  call temp:= `d`(v7) @signature `Lorg/c/a/a/b;.d:()Lorg/c/a/a;` @kind virtual;
  #L3eb1ce.  v1:= temp @kind object;
  #L3eb1d0.  call temp:= `d`(v8) @signature `Lorg/c/a/t;.d:()Lorg/c/a/a;` @kind interface;
  #L3eb1d6.  v8:= temp @kind object;
  #L3eb1d8.  call temp:= `a`(v1, v8) @signature `Lorg/c/a/d/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3eb1de.  v8:= temp;
  #L3eb1e0.  if v8 == 0 then goto L3eb1e6;
  #L3eb1e4.  goto L3eb1e8;
  #L3eb1e6.  v0:= 0I;
  #L3eb1e8.  return v0;
}
procedure `org.c.a.f` `h`(`org.c.a.a.b` v1 @kind this) @signature `Lorg/c/a/a/b;.h:()Lorg/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb2f0.  call temp:= `d`(v1) @signature `Lorg/c/a/a/b;.d:()Lorg/c/a/a;` @kind virtual;
  #L3eb2f6.  v0:= temp @kind object;
  #L3eb2f8.  call temp:= `a`(v0) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3eb2fe.  v0:= temp @kind object;
  #L3eb300.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.c.a.a.b` v6 @kind this) @signature `Lorg/c/a/a/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eb260.  call temp:= `c`(v6) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb266.  v0:= temp @kind wide;
  #L3eb268.  call temp:= `c`(v6) @signature `Lorg/c/a/a/b;.c:()J` @kind virtual;
  #L3eb26e.  v2:= temp @kind wide;
  #L3eb270.  v4:= 32I;
  #L3eb274.  v2:= v2 ^>> v4 @kind long;
  #L3eb276.  v4:= v0 ^~ v2 @kind long;
  #L3eb27a.  v0:= (`int`) v4 @kind l2i;
  #L3eb27c.  call temp:= `d`(v6) @signature `Lorg/c/a/a/b;.d:()Lorg/c/a/a;` @kind virtual;
  #L3eb282.  v1:= temp @kind object;
  #L3eb284.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3eb28a.  v1:= temp;
  #L3eb28c.  v0:= v0 + v1 @kind int;
  #L3eb28e.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.a.b` v1 @kind this) @signature `Lorg/c/a/a/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb2a0.  call temp:= `c`() @signature `Lorg/c/a/e/j;.c:()Lorg/c/a/e/b;` @kind static;
  #L3eb2a6.  v0:= temp @kind object;
  #L3eb2a8.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/e/b;.a:(Lorg/c/a/t;)Ljava/lang/String;` @kind virtual;
  #L3eb2ae.  v0:= temp @kind object;
  #L3eb2b0.  return v0 @kind object;
}
