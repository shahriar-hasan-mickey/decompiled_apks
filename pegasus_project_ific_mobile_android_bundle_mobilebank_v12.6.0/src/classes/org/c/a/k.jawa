record `org.c.a.k` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.a.b` @kind class, `java.io.Serializable` @kind interface, `org.c.a.t` @kind interface {
  `long` `org.c.a.k.b` @AccessFlag PRIVATE_FINAL;
}
global `org.c.a.k` `@@org.c.a.k.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.c.a.k.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L404190.  v0:= new `org.c.a.k`;
  #L404194.  v1:= 0L;
  #L404198.  call `<init>`(v0, v1) @signature `Lorg/c/a/k;.<init>:(J)V` @kind direct;
  #L40419e.  `@@org.c.a.k.a` @type ^`org.c.a.k` := v0 @kind object;
  #L4041a2.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.k` v2 @kind this) @signature `Lorg/c/a/k;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4041b4.  call `<init>`(v2) @signature `Lorg/c/a/a/b;.<init>:()V` @kind direct;
  #L4041ba.  call temp:= `a`() @signature `Lorg/c/a/e;.a:()J` @kind static;
  #L4041c0.  v0:= temp @kind wide;
  #L4041c2.  v2.`org.c.a.k.b` @type ^`long` := v0 @kind wide;
  #L4041c6.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.k` v0 @kind this, `long` v1 ) @signature `Lorg/c/a/k;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4041d8.  call `<init>`(v0) @signature `Lorg/c/a/a/b;.<init>:()V` @kind direct;
  #L4041de.  v0.`org.c.a.k.b` @type ^`long` := v1 @kind wide;
  #L4041e2.  return @kind void;
}
procedure `org.c.a.b` `a`(`org.c.a.k` v4 @kind this) @signature `Lorg/c/a/k;.a:()Lorg/c/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L404124.  v0:= new `org.c.a.b`;
  #L404128.  call temp:= `c`(v4) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L40412e.  v1:= temp @kind wide;
  #L404130.  call temp:= `O`() @signature `Lorg/c/a/b/u;.O:()Lorg/c/a/b/u;` @kind static;
  #L404136.  v3:= temp @kind object;
  #L404138.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/b;.<init>:(JLorg/c/a/a;)V` @kind direct;
  #L40413e.  return v0 @kind object;
}
procedure `org.c.a.k` `b`(`org.c.a.k` v0 @kind this) @signature `Lorg/c/a/k;.b:()Lorg/c/a/k;` @AccessFlag PUBLIC {
    temp;

  #L404150.  return v0 @kind object;
}
procedure `long` `c`(`org.c.a.k` v2 @kind this) @signature `Lorg/c/a/k;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4040f0.  v0:= v2.`org.c.a.k.b` @type ^`long` @kind wide;
  #L4040f4.  return v0 @kind wide;
}
procedure `org.c.a.a` `d`(`org.c.a.k` v1 @kind this) @signature `Lorg/c/a/k;.d:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404108.  call temp:= `N`() @signature `Lorg/c/a/b/u;.N:()Lorg/c/a/b/u;` @kind static;
  #L40410e.  v0:= temp @kind object;
  #L404110.  return v0 @kind object;
}
procedure `org.c.a.m` `e`(`org.c.a.k` v4 @kind this) @signature `Lorg/c/a/k;.e:()Lorg/c/a/m;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L404164.  v0:= new `org.c.a.m`;
  #L404168.  call temp:= `c`(v4) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L40416e.  v1:= temp @kind wide;
  #L404170.  call temp:= `O`() @signature `Lorg/c/a/b/u;.O:()Lorg/c/a/b/u;` @kind static;
  #L404176.  v3:= temp @kind object;
  #L404178.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/m;.<init>:(JLorg/c/a/a;)V` @kind direct;
  #L40417e.  return v0 @kind object;
}
