record `org.c.a.f.b$d` @kind class @AccessFlag FINAL {
  `org.c.a.f.b$b` `org.c.a.f.b$d.a` @AccessFlag FINAL;
  `java.lang.String` `org.c.a.f.b$d.b` @AccessFlag FINAL;
  `int` `org.c.a.f.b$d.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.c.a.f.b$d` v0 @kind this, `org.c.a.f.b$b` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/f/b$d;.<init>:(Lorg/c/a/f/b$b;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L401f28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L401f2e.  v0.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` := v1 @kind object;
  #L401f32.  v0.`org.c.a.f.b$d.b` @type ^`java.lang.String` := v2 @kind object;
  #L401f36.  v0.`org.c.a.f.b$d.c` @type ^`int` := v3;
  #L401f3a.  return @kind void;
}
procedure `org.c.a.f.b$d` `a`(`java.io.DataInput` v5 @kind object) @signature `Lorg/c/a/f/b$d;.a:(Ljava/io/DataInput;)Lorg/c/a/f/b$d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L401ef0.  v0:= new `org.c.a.f.b$d`;
  #L401ef4.  call temp:= `a`(v5) @signature `Lorg/c/a/f/b$b;.a:(Ljava/io/DataInput;)Lorg/c/a/f/b$b;` @kind static;
  #L401efa.  v1:= temp @kind object;
  #L401efc.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInput;.readUTF:()Ljava/lang/String;` @kind interface;
  #L401f02.  v2:= temp @kind object;
  #L401f04.  call temp:= `a`(v5) @signature `Lorg/c/a/f/b;.a:(Ljava/io/DataInput;)J` @kind static;
  #L401f0a.  v3:= temp @kind wide;
  #L401f0c.  v5:= (`int`) v3 @kind l2i;
  #L401f0e.  call `<init>`(v0, v1, v2, v5) @signature `Lorg/c/a/f/b$d;.<init>:(Lorg/c/a/f/b$b;Ljava/lang/String;I)V` @kind direct;
  #L401f14.  return v0 @kind object;
}
procedure `long` `a`(`org.c.a.f.b$d` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Lorg/c/a/f/b$d;.a:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401eb0.  v0:= v1.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` @kind object;
  #L401eb4.  call temp:= `a`(v0, v2, v4, v5) @signature `Lorg/c/a/f/b$b;.a:(JII)J` @kind virtual;
  #L401eba.  v2:= temp @kind wide;
  #L401ebc.  return v2 @kind wide;
}
procedure `java.lang.String` `a`(`org.c.a.f.b$d` v1 @kind this) @signature `Lorg/c/a/f/b$d;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401e40.  v0:= v1.`org.c.a.f.b$d.b` @type ^`java.lang.String` @kind object;
  #L401e44.  return v0 @kind object;
}
procedure `int` `b`(`org.c.a.f.b$d` v1 @kind this) @signature `Lorg/c/a/f/b$d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401e28.  v0:= v1.`org.c.a.f.b$d.c` @type ^`int`;
  #L401e2c.  return v0;
}
procedure `long` `b`(`org.c.a.f.b$d` v1 @kind this, `long` v2 , `int` v4 , `int` v5 ) @signature `Lorg/c/a/f/b$d;.b:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L401ed0.  v0:= v1.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` @kind object;
  #L401ed4.  call temp:= `b`(v0, v2, v4, v5) @signature `Lorg/c/a/f/b$b;.b:(JII)J` @kind virtual;
  #L401eda.  v2:= temp @kind wide;
  #L401edc.  return v2 @kind wide;
}
procedure `boolean` `equals`(`org.c.a.f.b$d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/f/b$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L401dc4.  v0:= 1I;
  #L401dc6.  if v4 != v5 then goto L401dcc;
  #L401dca.  return v0;
  #L401dcc.  v1:= instanceof @variable v5 @type ^`org.c.a.f.b$d` @kind boolean;
  #L401dd0.  v2:= 0I;
  #L401dd2.  if v1 == 0 then goto L401e14;
  #L401dd6.  v5:= (`org.c.a.f.b$d`) v5 @kind object;
  #L401dda.  v1:= v4.`org.c.a.f.b$d.c` @type ^`int`;
  #L401dde.  v3:= v5.`org.c.a.f.b$d.c` @type ^`int`;
  #L401de2.  if v1 != v3 then goto L401e10;
  #L401de6.  v1:= v4.`org.c.a.f.b$d.b` @type ^`java.lang.String` @kind object;
  #L401dea.  v3:= v5.`org.c.a.f.b$d.b` @type ^`java.lang.String` @kind object;
  #L401dee.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L401df4.  v1:= temp;
  #L401df6.  if v1 == 0 then goto L401e10;
  #L401dfa.  v1:= v4.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` @kind object;
  #L401dfe.  v5:= v5.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` @kind object;
  #L401e02.  call temp:= `equals`(v1, v5) @signature `Lorg/c/a/f/b$b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L401e08.  v5:= temp;
  #L401e0a.  if v5 == 0 then goto L401e10;
  #L401e0e.  goto L401e12;
  #L401e10.  v0:= 0I;
  #L401e12.  return v0;
  #L401e14.  return v2;
}
procedure `java.lang.String` `toString`(`org.c.a.f.b$d` v2 @kind this) @signature `Lorg/c/a/f/b$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L401e58.  v0:= new `java.lang.StringBuilder`;
  #L401e5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L401e62.  v1:= v2.`org.c.a.f.b$d.a` @type ^`org.c.a.f.b$b` @kind object;
  #L401e66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401e6c.  v1:= " named " @kind object;
  #L401e70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401e76.  v1:= v2.`org.c.a.f.b$d.b` @type ^`java.lang.String` @kind object;
  #L401e7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401e80.  v1:= " at " @kind object;
  #L401e84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401e8a.  v1:= v2.`org.c.a.f.b$d.c` @type ^`int`;
  #L401e8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L401e94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L401e9a.  v0:= temp @kind object;
  #L401e9c.  return v0 @kind object;
}
