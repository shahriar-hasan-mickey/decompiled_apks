record `org.c.a.f.b$b` @kind class @AccessFlag FINAL {
  `char` `org.c.a.f.b$b.a` @AccessFlag FINAL;
  `int` `org.c.a.f.b$b.b` @AccessFlag FINAL;
  `int` `org.c.a.f.b$b.c` @AccessFlag FINAL;
  `int` `org.c.a.f.b$b.d` @AccessFlag FINAL;
  `boolean` `org.c.a.f.b$b.e` @AccessFlag FINAL;
  `int` `org.c.a.f.b$b.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.c.a.f.b$b` v1 @kind this, `char` v2 , `int` v3 , `int` v4 , `int` v5 , `boolean` v6 , `int` v7 ) @signature `Lorg/c/a/f/b$b;.<init>:(CIIIZI)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L401914.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40191a.  v0:= 117I;
  #L40191e.  if v2 == v0 then goto L401960;
  #L401922.  v0:= 119I;
  #L401926.  if v2 == v0 then goto L401960;
  #L40192a.  v0:= 115I;
  #L40192e.  if v2 == v0 then goto L401960;
  #L401932.  v3:= new `java.lang.IllegalArgumentException`;
  #L401936.  v4:= new `java.lang.StringBuilder`;
  #L40193a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L401940.  v5:= "Unknown mode: " @kind object;
  #L401944.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40194a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L401950.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L401956.  v2:= temp @kind object;
  #L401958.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40195e.  throw v3;
  #L401960.  v1.`org.c.a.f.b$b.a` @type ^`char` := v2 @kind char;
  #L401964.  v1.`org.c.a.f.b$b.b` @type ^`int` := v3;
  #L401968.  v1.`org.c.a.f.b$b.c` @type ^`int` := v4;
  #L40196c.  v1.`org.c.a.f.b$b.d` @type ^`int` := v5;
  #L401970.  v1.`org.c.a.f.b$b.e` @type ^`boolean` := v6 @kind boolean;
  #L401974.  v1.`org.c.a.f.b$b.f` @type ^`int` := v7;
  #L401978.  return @kind void;
}
procedure `long` `a`(`org.c.a.f.b$b` v3 @kind this, `org.c.a.a` v4 @kind object, `long` v5 ) @signature `Lorg/c/a/f/b$b;.a:(Lorg/c/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401618.  call temp:= `c`(v3, v4, v5) @signature `Lorg/c/a/f/b$b;.c:(Lorg/c/a/a;J)J` @kind direct;
  #L40161e.  v0:= temp @kind wide;
  #L401620.  goto L40166a;
  #L401622.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L401624.  v1:= v3.`org.c.a.f.b$b.b` @type ^`int`;
  #L401628.  v2:= 2I;
  #L40162a.  if v1 != v2 then goto L40166c;
  #L40162e.  v1:= v3.`org.c.a.f.b$b.c` @type ^`int`;
  #L401632.  v2:= 29I;
  #L401636.  if v1 != v2 then goto L40166c;
  #L40163a.  call temp:= `E`(v4) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L401640.  v0:= temp @kind object;
  #L401642.  call temp:= `b`(v0, v5) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L401648.  v0:= temp;
  #L40164a.  if v0 != 0 then goto L401662;
  #L40164e.  call temp:= `E`(v4) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L401654.  v0:= temp @kind object;
  #L401656.  v1:= 1I;
  #L401658.  call temp:= `a`(v0, v5, v1) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L40165e.  v5:= temp @kind wide;
  #L401660.  goto L40163a;
  #L401662.  call temp:= `c`(v3, v4, v5) @signature `Lorg/c/a/f/b$b;.c:(Lorg/c/a/a;J)J` @kind direct;
  #L401668.  v0:= temp @kind wide;
  #L40166a.  return v0 @kind wide;
  #L40166c.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L401618..L401620] goto L401622;
}
procedure `org.c.a.f.b$b` `a`(`java.io.DataInput` v10 @kind object) @signature `Lorg/c/a/f/b$b;.a:(Ljava/io/DataInput;)Lorg/c/a/f/b$b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L4018c0.  v7:= new `org.c.a.f.b$b`;
  #L4018c4.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L4018ca.  v0:= temp;
  #L4018cc.  v1:= (`char`) v0 @kind i2c;
  #L4018ce.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L4018d4.  v2:= temp;
  #L4018d6.  call temp:= `readByte`(v10) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L4018dc.  v3:= temp;
  #L4018de.  call temp:= `readUnsignedByte`(v10) @signature `Ljava/io/DataInput;.readUnsignedByte:()I` @kind interface;
  #L4018e4.  v4:= temp;
  #L4018e6.  call temp:= `readBoolean`(v10) @signature `Ljava/io/DataInput;.readBoolean:()Z` @kind interface;
  #L4018ec.  v5:= temp;
  #L4018ee.  call temp:= `a`(v10) @signature `Lorg/c/a/f/b;.a:(Ljava/io/DataInput;)J` @kind static;
  #L4018f4.  v8:= temp @kind wide;
  #L4018f6.  v6:= (`int`) v8 @kind l2i;
  #L4018f8.  v0:= v7 @kind object;
  #L4018fa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/c/a/f/b$b;.<init>:(CIIIZI)V` @kind direct;
  #L401900.  return v7 @kind object;
}
procedure `long` `b`(`org.c.a.f.b$b` v3 @kind this, `org.c.a.a` v4 @kind object, `long` v5 ) @signature `Lorg/c/a/f/b$b;.b:(Lorg/c/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L401788.  call temp:= `c`(v3, v4, v5) @signature `Lorg/c/a/f/b$b;.c:(Lorg/c/a/a;J)J` @kind direct;
  #L40178e.  v0:= temp @kind wide;
  #L401790.  goto L4017da;
  #L401792.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L401794.  v1:= v3.`org.c.a.f.b$b.b` @type ^`int`;
  #L401798.  v2:= 2I;
  #L40179a.  if v1 != v2 then goto L4017dc;
  #L40179e.  v1:= v3.`org.c.a.f.b$b.c` @type ^`int`;
  #L4017a2.  v2:= 29I;
  #L4017a6.  if v1 != v2 then goto L4017dc;
  #L4017aa.  call temp:= `E`(v4) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L4017b0.  v0:= temp @kind object;
  #L4017b2.  call temp:= `b`(v0, v5) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L4017b8.  v0:= temp;
  #L4017ba.  if v0 != 0 then goto L4017d2;
  #L4017be.  call temp:= `E`(v4) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L4017c4.  v0:= temp @kind object;
  #L4017c6.  v1:= -1I;
  #L4017c8.  call temp:= `a`(v0, v5, v1) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L4017ce.  v5:= temp @kind wide;
  #L4017d0.  goto L4017aa;
  #L4017d2.  call temp:= `c`(v3, v4, v5) @signature `Lorg/c/a/f/b$b;.c:(Lorg/c/a/a;J)J` @kind direct;
  #L4017d8.  v0:= temp @kind wide;
  #L4017da.  return v0 @kind wide;
  #L4017dc.  throw v0;
  catch `java.lang.IllegalArgumentException` @[L401788..L401790] goto L401792;
}
procedure `long` `c`(`org.c.a.f.b$b` v2 @kind this, `org.c.a.a` v3 @kind object, `long` v4 ) @signature `Lorg/c/a/f/b$b;.c:(Lorg/c/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L401800.  v0:= v2.`org.c.a.f.b$b.c` @type ^`int`;
  #L401804.  if v0 < 0 then goto L40181e;
  #L401808.  call temp:= `u`(v3) @signature `Lorg/c/a/a;.u:()Lorg/c/a/c;` @kind virtual;
  #L40180e.  v3:= temp @kind object;
  #L401810.  v0:= v2.`org.c.a.f.b$b.c` @type ^`int`;
  #L401814.  call temp:= `b`(v3, v4, v0) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L40181a.  v3:= temp @kind wide;
  #L40181c.  goto L401854;
  #L40181e.  call temp:= `u`(v3) @signature `Lorg/c/a/a;.u:()Lorg/c/a/c;` @kind virtual;
  #L401824.  v0:= temp @kind object;
  #L401826.  v1:= 1I;
  #L401828.  call temp:= `b`(v0, v4, v1) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L40182e.  v4:= temp @kind wide;
  #L401830.  call temp:= `C`(v3) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L401836.  v0:= temp @kind object;
  #L401838.  call temp:= `a`(v0, v4, v1) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L40183e.  v4:= temp @kind wide;
  #L401840.  call temp:= `u`(v3) @signature `Lorg/c/a/a;.u:()Lorg/c/a/c;` @kind virtual;
  #L401846.  v3:= temp @kind object;
  #L401848.  v0:= v2.`org.c.a.f.b$b.c` @type ^`int`;
  #L40184c.  call temp:= `a`(v3, v4, v0) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L401852.  v3:= temp @kind wide;
  #L401854.  return v3 @kind wide;
}
procedure `long` `d`(`org.c.a.f.b$b` v2 @kind this, `org.c.a.a` v3 @kind object, `long` v4 ) @signature `Lorg/c/a/f/b$b;.d:(Lorg/c/a/a;J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L401868.  call temp:= `t`(v3) @signature `Lorg/c/a/a;.t:()Lorg/c/a/c;` @kind virtual;
  #L40186e.  v0:= temp @kind object;
  #L401870.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L401876.  v0:= temp;
  #L401878.  v1:= v2.`org.c.a.f.b$b.d` @type ^`int`;
  #L40187c.  v1:= v1 - v0 @kind int;
  #L40187e.  if v1 == 0 then goto L4018ac;
  #L401882.  v0:= v2.`org.c.a.f.b$b.e` @type ^`boolean` @kind boolean;
  #L401886.  if v0 == 0 then goto L401894;
  #L40188a.  if v1 >= 0 then goto L40189c;
  #L40188e.  v1:= v1 + 7;
  #L401892.  goto L40189c;
  #L401894.  if v1 <= 0 then goto L40189c;
  #L401898.  v1:= v1 + -7;
  #L40189c.  call temp:= `t`(v3) @signature `Lorg/c/a/a;.t:()Lorg/c/a/c;` @kind virtual;
  #L4018a2.  v3:= temp @kind object;
  #L4018a4.  call temp:= `a`(v3, v4, v1) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L4018aa.  v4:= temp @kind wide;
  #L4018ac.  return v4 @kind wide;
}
procedure `long` `a`(`org.c.a.f.b$b` v6 @kind this, `long` v7 , `int` v9 , `int` v10 ) @signature `Lorg/c/a/f/b$b;.a:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L401520.  v0:= v6.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L401524.  v1:= 0I;
  #L401526.  v2:= 119I;
  #L40152a.  if v0 != v2 then goto L401532;
  #L40152e.  v9:= v9 + v10 @kind int;
  #L401530.  goto L401542;
  #L401532.  v10:= v6.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L401536.  v0:= 115I;
  #L40153a.  if v10 != v0 then goto L401540;
  #L40153e.  goto L401542;
  #L401540.  v9:= 0I;
  #L401542.  v9:= (`long`) v9 @kind i2l;
  #L401544.  v2:= v7 + v9 @kind long;
  #L401548.  call temp:= `N`() @signature `Lorg/c/a/b/u;.N:()Lorg/c/a/b/u;` @kind static;
  #L40154e.  v7:= temp @kind object;
  #L401550.  call temp:= `C`(v7) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L401556.  v8:= temp @kind object;
  #L401558.  v0:= v6.`org.c.a.f.b$b.b` @type ^`int`;
  #L40155c.  call temp:= `b`(v8, v2, v0) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L401562.  v4:= temp @kind wide;
  #L401564.  call temp:= `e`(v7) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L40156a.  v8:= temp @kind object;
  #L40156c.  call temp:= `b`(v8, v4, v1) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L401572.  v0:= temp @kind wide;
  #L401574.  call temp:= `e`(v7) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L40157a.  v8:= temp @kind object;
  #L40157c.  v4:= v6.`org.c.a.f.b$b.f` @type ^`int`;
  #L401580.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L401586.  v0:= temp @kind wide;
  #L401588.  call temp:= `a`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.a:(Lorg/c/a/a;J)J` @kind direct;
  #L40158e.  v0:= temp @kind wide;
  #L401590.  v8:= v6.`org.c.a.f.b$b.d` @type ^`int`;
  #L401594.  v4:= 1I;
  #L401596.  if v8 != 0 then goto L4015bc;
  #L40159a.  v8:= lcmp(v0, v2);
  #L40159e.  if v8 > 0 then goto L401600;
  #L4015a2.  call temp:= `E`(v7) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L4015a8.  v8:= temp @kind object;
  #L4015aa.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L4015b0.  v0:= temp @kind wide;
  #L4015b2.  call temp:= `a`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.a:(Lorg/c/a/a;J)J` @kind direct;
  #L4015b8.  v0:= temp @kind wide;
  #L4015ba.  goto L401600;
  #L4015bc.  call temp:= `d`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.d:(Lorg/c/a/a;J)J` @kind direct;
  #L4015c2.  v0:= temp @kind wide;
  #L4015c4.  v8:= lcmp(v0, v2);
  #L4015c8.  if v8 > 0 then goto L401600;
  #L4015cc.  call temp:= `E`(v7) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L4015d2.  v8:= temp @kind object;
  #L4015d4.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L4015da.  v0:= temp @kind wide;
  #L4015dc.  call temp:= `C`(v7) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L4015e2.  v8:= temp @kind object;
  #L4015e4.  v2:= v6.`org.c.a.f.b$b.b` @type ^`int`;
  #L4015e8.  call temp:= `b`(v8, v0, v2) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L4015ee.  v0:= temp @kind wide;
  #L4015f0.  call temp:= `a`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.a:(Lorg/c/a/a;J)J` @kind direct;
  #L4015f6.  v0:= temp @kind wide;
  #L4015f8.  call temp:= `d`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.d:(Lorg/c/a/a;J)J` @kind direct;
  #L4015fe.  v0:= temp @kind wide;
  #L401600.  v7:= 0I;
  #L401602.  v7:= v0 - v9 @kind long;
  #L401606.  return v7 @kind wide;
}
procedure `long` `b`(`org.c.a.f.b$b` v6 @kind this, `long` v7 , `int` v9 , `int` v10 ) @signature `Lorg/c/a/f/b$b;.b:(JII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L401690.  v0:= v6.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L401694.  v1:= 0I;
  #L401696.  v2:= 119I;
  #L40169a.  if v0 != v2 then goto L4016a2;
  #L40169e.  v9:= v9 + v10 @kind int;
  #L4016a0.  goto L4016b2;
  #L4016a2.  v10:= v6.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L4016a6.  v0:= 115I;
  #L4016aa.  if v10 != v0 then goto L4016b0;
  #L4016ae.  goto L4016b2;
  #L4016b0.  v9:= 0I;
  #L4016b2.  v9:= (`long`) v9 @kind i2l;
  #L4016b4.  v2:= v7 + v9 @kind long;
  #L4016b8.  call temp:= `N`() @signature `Lorg/c/a/b/u;.N:()Lorg/c/a/b/u;` @kind static;
  #L4016be.  v7:= temp @kind object;
  #L4016c0.  call temp:= `C`(v7) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L4016c6.  v8:= temp @kind object;
  #L4016c8.  v0:= v6.`org.c.a.f.b$b.b` @type ^`int`;
  #L4016cc.  call temp:= `b`(v8, v2, v0) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L4016d2.  v4:= temp @kind wide;
  #L4016d4.  call temp:= `e`(v7) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L4016da.  v8:= temp @kind object;
  #L4016dc.  call temp:= `b`(v8, v4, v1) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L4016e2.  v0:= temp @kind wide;
  #L4016e4.  call temp:= `e`(v7) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L4016ea.  v8:= temp @kind object;
  #L4016ec.  v4:= v6.`org.c.a.f.b$b.f` @type ^`int`;
  #L4016f0.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L4016f6.  v0:= temp @kind wide;
  #L4016f8.  call temp:= `b`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.b:(Lorg/c/a/a;J)J` @kind direct;
  #L4016fe.  v0:= temp @kind wide;
  #L401700.  v8:= v6.`org.c.a.f.b$b.d` @type ^`int`;
  #L401704.  v4:= -1I;
  #L401706.  if v8 != 0 then goto L40172c;
  #L40170a.  v8:= lcmp(v0, v2);
  #L40170e.  if v8 < 0 then goto L401770;
  #L401712.  call temp:= `E`(v7) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L401718.  v8:= temp @kind object;
  #L40171a.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L401720.  v0:= temp @kind wide;
  #L401722.  call temp:= `b`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.b:(Lorg/c/a/a;J)J` @kind direct;
  #L401728.  v0:= temp @kind wide;
  #L40172a.  goto L401770;
  #L40172c.  call temp:= `d`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.d:(Lorg/c/a/a;J)J` @kind direct;
  #L401732.  v0:= temp @kind wide;
  #L401734.  v8:= lcmp(v0, v2);
  #L401738.  if v8 < 0 then goto L401770;
  #L40173c.  call temp:= `E`(v7) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L401742.  v8:= temp @kind object;
  #L401744.  call temp:= `a`(v8, v0, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L40174a.  v0:= temp @kind wide;
  #L40174c.  call temp:= `C`(v7) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L401752.  v8:= temp @kind object;
  #L401754.  v2:= v6.`org.c.a.f.b$b.b` @type ^`int`;
  #L401758.  call temp:= `b`(v8, v0, v2) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L40175e.  v0:= temp @kind wide;
  #L401760.  call temp:= `b`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.b:(Lorg/c/a/a;J)J` @kind direct;
  #L401766.  v0:= temp @kind wide;
  #L401768.  call temp:= `d`(v6, v7, v0) @signature `Lorg/c/a/f/b$b;.d:(Lorg/c/a/a;J)J` @kind direct;
  #L40176e.  v0:= temp @kind wide;
  #L401770.  v7:= 0I;
  #L401772.  v7:= v0 - v9 @kind long;
  #L401776.  return v7 @kind wide;
}
procedure `boolean` `equals`(`org.c.a.f.b$b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/f/b$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4013e4.  v0:= 1I;
  #L4013e6.  if v4 != v5 then goto L4013ec;
  #L4013ea.  return v0;
  #L4013ec.  v1:= instanceof @variable v5 @type ^`org.c.a.f.b$b` @kind boolean;
  #L4013f0.  v2:= 0I;
  #L4013f2.  if v1 == 0 then goto L401448;
  #L4013f6.  v5:= (`org.c.a.f.b$b`) v5 @kind object;
  #L4013fa.  v1:= v4.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L4013fe.  v3:= v5.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L401402.  if v1 != v3 then goto L401444;
  #L401406.  v1:= v4.`org.c.a.f.b$b.b` @type ^`int`;
  #L40140a.  v3:= v5.`org.c.a.f.b$b.b` @type ^`int`;
  #L40140e.  if v1 != v3 then goto L401444;
  #L401412.  v1:= v4.`org.c.a.f.b$b.c` @type ^`int`;
  #L401416.  v3:= v5.`org.c.a.f.b$b.c` @type ^`int`;
  #L40141a.  if v1 != v3 then goto L401444;
  #L40141e.  v1:= v4.`org.c.a.f.b$b.d` @type ^`int`;
  #L401422.  v3:= v5.`org.c.a.f.b$b.d` @type ^`int`;
  #L401426.  if v1 != v3 then goto L401444;
  #L40142a.  v1:= v4.`org.c.a.f.b$b.e` @type ^`boolean` @kind boolean;
  #L40142e.  v3:= v5.`org.c.a.f.b$b.e` @type ^`boolean` @kind boolean;
  #L401432.  if v1 != v3 then goto L401444;
  #L401436.  v1:= v4.`org.c.a.f.b$b.f` @type ^`int`;
  #L40143a.  v5:= v5.`org.c.a.f.b$b.f` @type ^`int`;
  #L40143e.  if v1 != v5 then goto L401444;
  #L401442.  goto L401446;
  #L401444.  v0:= 0I;
  #L401446.  return v0;
  #L401448.  return v2;
}
procedure `java.lang.String` `toString`(`org.c.a.f.b$b` v3 @kind this) @signature `Lorg/c/a/f/b$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L40145c.  v0:= new `java.lang.StringBuilder`;
  #L401460.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L401466.  v1:= "[OfYear]\nMode: " @kind object;
  #L40146a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L401470.  v1:= v3.`org.c.a.f.b$b.a` @type ^`char` @kind char;
  #L401474.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40147a.  v1:= 10I;
  #L40147e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L401484.  v2:= "MonthOfYear: " @kind object;
  #L401488.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40148e.  v2:= v3.`org.c.a.f.b$b.b` @type ^`int`;
  #L401492.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L401498.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L40149e.  v2:= "DayOfMonth: " @kind object;
  #L4014a2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014a8.  v2:= v3.`org.c.a.f.b$b.c` @type ^`int`;
  #L4014ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014b8.  v2:= "DayOfWeek: " @kind object;
  #L4014bc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014c2.  v2:= v3.`org.c.a.f.b$b.d` @type ^`int`;
  #L4014c6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014d2.  v2:= "AdvanceDayOfWeek: " @kind object;
  #L4014d6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014dc.  v2:= v3.`org.c.a.f.b$b.e` @type ^`boolean` @kind boolean;
  #L4014e0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014ec.  v2:= "MillisOfDay: " @kind object;
  #L4014f0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4014f6.  v2:= v3.`org.c.a.f.b$b.f` @type ^`int`;
  #L4014fa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L401500.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L401506.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40150c.  v0:= temp @kind object;
  #L40150e.  return v0 @kind object;
}
