record `org.c.a.f.h` @kind class @AccessFlag PUBLIC extends `org.c.a.f.f` @kind interface {
  `java.io.File` `org.c.a.f.h.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `org.c.a.f.h.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.ClassLoader` `org.c.a.f.h.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `org.c.a.f.h.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `org.c.a.f.h.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.f.h` v1 @kind this) @signature `Lorg/c/a/f/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L402a3c.  v0:= "org/joda/time/tz/data" @kind object;
  #L402a40.  call `<init>`(v1, v0) @signature `Lorg/c/a/f/h;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402a46.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.f.h` v3 @kind this, `java.io.File` v4 @kind object) @signature `Lorg/c/a/f/h;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L402a58.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L402a5e.  if v4 != 0 then goto L402a72;
  #L402a62.  v4:= new `java.lang.IllegalArgumentException`;
  #L402a66.  v0:= "No file directory provided" @kind object;
  #L402a6a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402a70.  throw v4;
  #L402a72.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L402a78.  v0:= temp;
  #L402a7a.  if v0 != 0 then goto L402aac;
  #L402a7e.  v0:= new `java.io.IOException`;
  #L402a82.  v1:= new `java.lang.StringBuilder`;
  #L402a86.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L402a8c.  v2:= "File directory doesn't exist: " @kind object;
  #L402a90.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402a96.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402a9c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L402aa2.  v4:= temp @kind object;
  #L402aa4.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402aaa.  throw v0;
  #L402aac.  call temp:= `isDirectory`(v4) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L402ab2.  v0:= temp;
  #L402ab4.  if v0 != 0 then goto L402ae6;
  #L402ab8.  v0:= new `java.io.IOException`;
  #L402abc.  v1:= new `java.lang.StringBuilder`;
  #L402ac0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L402ac6.  v2:= "File doesn't refer to a directory: " @kind object;
  #L402aca.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402ad0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402ad6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L402adc.  v4:= temp @kind object;
  #L402ade.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402ae4.  throw v0;
  #L402ae6.  v3.`org.c.a.f.h.a` @type ^`java.io.File` := v4 @kind object;
  #L402aea.  v4:= 0I;
  #L402aec.  v3.`org.c.a.f.h.b` @type ^`java.lang.String` := v4 @kind object;
  #L402af0.  v3.`org.c.a.f.h.c` @type ^`java.lang.ClassLoader` := v4 @kind object;
  #L402af4.  v4:= "ZoneInfoMap" @kind object;
  #L402af8.  call temp:= `b`(v3, v4) @signature `Lorg/c/a/f/h;.b:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L402afe.  v4:= temp @kind object;
  #L402b00.  call temp:= `a`(v4) @signature `Lorg/c/a/f/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L402b06.  v4:= temp @kind object;
  #L402b08.  v3.`org.c.a.f.h.d` @type ^`java.util.Map` := v4 @kind object;
  #L402b0c.  v4:= new `java.util.TreeSet`;
  #L402b10.  v0:= v3.`org.c.a.f.h.d` @type ^`java.util.Map` @kind object;
  #L402b14.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L402b1a.  v0:= temp @kind object;
  #L402b1c.  call `<init>`(v4, v0) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L402b22.  call temp:= `unmodifiableSortedSet`(v4) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L402b28.  v4:= temp @kind object;
  #L402b2a.  v3.`org.c.a.f.h.e` @type ^`java.util.Set` := v4 @kind object;
  #L402b2e.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.f.h` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/c/a/f/h;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L402b40.  v0:= 0I;
  #L402b42.  v1:= 0I;
  #L402b44.  call `<init>`(v2, v3, v0, v1) @signature `Lorg/c/a/f/h;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @kind direct;
  #L402b4a.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.f.h` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.ClassLoader` v3 @kind object, `boolean` v4 ) @signature `Lorg/c/a/f/h;.<init>:(Ljava/lang/String;Ljava/lang/ClassLoader;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L402b5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L402b62.  if v2 != 0 then goto L402b76;
  #L402b66.  v2:= new `java.lang.IllegalArgumentException`;
  #L402b6a.  v3:= "No resource path provided" @kind object;
  #L402b6e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402b74.  throw v2;
  #L402b76.  v0:= "/" @kind object;
  #L402b7a.  call temp:= `endsWith`(v2, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L402b80.  v0:= temp;
  #L402b82.  if v0 != 0 then goto L402ba8;
  #L402b86.  v0:= new `java.lang.StringBuilder`;
  #L402b8a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L402b90.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402b96.  v2:= 47I;
  #L402b9a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L402ba0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L402ba6.  v2:= temp @kind object;
  #L402ba8.  v0:= 0I;
  #L402baa.  v1.`org.c.a.f.h.a` @type ^`java.io.File` := v0 @kind object;
  #L402bae.  v1.`org.c.a.f.h.b` @type ^`java.lang.String` := v2 @kind object;
  #L402bb2.  if v3 != 0 then goto L402bca;
  #L402bb6.  if v4 != 0 then goto L402bca;
  #L402bba.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L402bc0.  v2:= temp @kind object;
  #L402bc2.  call temp:= `getClassLoader`(v2) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L402bc8.  v3:= temp @kind object;
  #L402bca.  v1.`org.c.a.f.h.c` @type ^`java.lang.ClassLoader` := v3 @kind object;
  #L402bce.  v2:= "ZoneInfoMap" @kind object;
  #L402bd2.  call temp:= `b`(v1, v2) @signature `Lorg/c/a/f/h;.b:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L402bd8.  v2:= temp @kind object;
  #L402bda.  call temp:= `a`(v2) @signature `Lorg/c/a/f/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L402be0.  v2:= temp @kind object;
  #L402be2.  v1.`org.c.a.f.h.d` @type ^`java.util.Map` := v2 @kind object;
  #L402be6.  v2:= new `java.util.TreeSet`;
  #L402bea.  v3:= v1.`org.c.a.f.h.d` @type ^`java.util.Map` @kind object;
  #L402bee.  call temp:= `keySet`(v3) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L402bf4.  v3:= temp @kind object;
  #L402bf6.  call `<init>`(v2, v3) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L402bfc.  call temp:= `unmodifiableSortedSet`(v2) @signature `Ljava/util/Collections;.unmodifiableSortedSet:(Ljava/util/SortedSet;)Ljava/util/SortedSet;` @kind static;
  #L402c02.  v2:= temp @kind object;
  #L402c04.  v1.`org.c.a.f.h.e` @type ^`java.util.Set` := v2 @kind object;
  #L402c08.  return @kind void;
}
procedure `java.lang.ClassLoader` `a`(`org.c.a.f.h` v0 @kind object) @signature `Lorg/c/a/f/h;.a:(Lorg/c/a/f/h;)Ljava/lang/ClassLoader;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L402854.  v0:= v0.`org.c.a.f.h.c` @type ^`java.lang.ClassLoader` @kind object;
  #L402858.  return v0 @kind object;
}
procedure `java.util.Map` `a`(`java.io.InputStream` v3 @kind object) @signature `Lorg/c/a/f/h;.a:(Ljava/io/InputStream;)Ljava/util/Map;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L40286c.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L402870.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L402876.  v1:= new `java.io.DataInputStream`;
  #L40287a.  call `<init>`(v1, v3) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L402880.  call `a`(v1, v0) @signature `Lorg/c/a/f/h;.a:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @kind static;
  #L402886.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L40288c.  v3:= "UTC" @kind object;
  #L402890.  v1:= new `java.lang.ref.SoftReference`;
  #L402894.  v2:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L402898.  call `<init>`(v1, v2) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L40289e.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4028a4.  return v0 @kind object;
  #L4028a6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4028a8.  call `close`(v1) @signature `Ljava/io/DataInputStream;.close:()V` @kind virtual;
  #L4028ae.  throw v3;
  catch `java.lang.Throwable` @[L402880..L402886] goto L4028a6;
  catch `java.io.IOException` @[L402886..L40288c] goto L40288c;
  catch `java.io.IOException` @[L4028a8..L4028ae] goto L4028ae;
}
procedure `void` `a`(`java.io.DataInputStream` v5 @kind object, `java.util.Map` v6 @kind object) @signature `Lorg/c/a/f/h;.a:(Ljava/io/DataInputStream;Ljava/util/Map;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L402c1c.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L402c22.  v0:= temp;
  #L402c24.  v1:= new `java.lang.String`[v0];
  #L402c28.  v2:= 0I;
  #L402c2a.  v3:= 0I;
  #L402c2c.  if v3 >= v0 then goto L402c4a;
  #L402c30.  call temp:= `readUTF`(v5) @signature `Ljava/io/DataInputStream;.readUTF:()Ljava/lang/String;` @kind virtual;
  #L402c36.  v4:= temp @kind object;
  #L402c38.  call temp:= `intern`(v4) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L402c3e.  v4:= temp @kind object;
  #L402c40.  v1[v3]:= v4 @kind object;
  #L402c44.  v3:= v3 + 1;
  #L402c48.  goto L402c2c;
  #L402c4a.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L402c50.  v0:= temp;
  #L402c52.  if v2 >= v0 then goto L402c8a;
  #L402c56.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L402c5c.  v3:= temp;
  #L402c5e.  v3:= v1[v3] @kind object;
  #L402c62.  call temp:= `readUnsignedShort`(v5) @signature `Ljava/io/DataInputStream;.readUnsignedShort:()I` @kind virtual;
  #L402c68.  v4:= temp;
  #L402c6a.  v4:= v1[v4] @kind object;
  #L402c6e.  call temp:= `put`(v6, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L402c74.  v2:= v2 + 1;
  #L402c78.  goto L402c52;
  #L402c7a.  v5:= new `java.io.IOException`;
  #L402c7e.  v6:= "Corrupt zone info map" @kind object;
  #L402c82.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L402c88.  throw v5;
  #L402c8a.  return @kind void;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L402c56..L402c74] goto L402c7a;
}
procedure `java.io.InputStream` `b`(`org.c.a.f.h` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/c/a/f/h;.b:(Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L40279c.  v0:= v3.`org.c.a.f.h.a` @type ^`java.io.File` @kind object;
  #L4027a0.  if v0 == 0 then goto L4027be;
  #L4027a4.  v0:= new `java.io.FileInputStream`;
  #L4027a8.  v1:= new `java.io.File`;
  #L4027ac.  v2:= v3.`org.c.a.f.h.a` @type ^`java.io.File` @kind object;
  #L4027b0.  call `<init>`(v1, v2, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L4027b6.  call `<init>`(v0, v1) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L4027bc.  goto L402840;
  #L4027be.  v0:= v3.`org.c.a.f.h.b` @type ^`java.lang.String` @kind object;
  #L4027c2.  call temp:= `concat`(v0, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L4027c8.  v4:= temp @kind object;
  #L4027ca.  v0:= new `org.c.a.f.h$1`;
  #L4027ce.  call `<init>`(v0, v3, v4) @signature `Lorg/c/a/f/h$1;.<init>:(Lorg/c/a/f/h;Ljava/lang/String;)V` @kind direct;
  #L4027d4.  call temp:= `doPrivileged`(v0) @signature `Ljava/security/AccessController;.doPrivileged:(Ljava/security/PrivilegedAction;)Ljava/lang/Object;` @kind static;
  #L4027da.  v0:= temp @kind object;
  #L4027dc.  v0:= (`java.io.InputStream`) v0 @kind object;
  #L4027e0.  if v0 != 0 then goto L402840;
  #L4027e4.  v0:= new `java.lang.StringBuilder`;
  #L4027e8.  v1:= 40I;
  #L4027ec.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L4027f2.  v1:= "Resource not found: \"" @kind object;
  #L4027f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4027fc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L402802.  v4:= "\" ClassLoader: " @kind object;
  #L402806.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40280c.  v4:= v3.`org.c.a.f.h.c` @type ^`java.lang.ClassLoader` @kind object;
  #L402810.  if v4 == 0 then goto L402822;
  #L402814.  v4:= v3.`org.c.a.f.h.c` @type ^`java.lang.ClassLoader` @kind object;
  #L402818.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L40281e.  v4:= temp @kind object;
  #L402820.  goto L402826;
  #L402822.  v4:= "system" @kind object;
  #L402826.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40282c.  v4:= new `java.io.IOException`;
  #L402830.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L402836.  v0:= temp @kind object;
  #L402838.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L40283e.  throw v4;
  #L402840.  return v0 @kind object;
}
procedure `org.c.a.f` `c`(`org.c.a.f.h` v5 @kind this, `java.lang.String` v6 @kind object) @signature `Lorg/c/a/f/h;.c:(Ljava/lang/String;)Lorg/c/a/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L402974.  v0:= 0I;
  #L402976.  call temp:= `b`(v5, v6) @signature `Lorg/c/a/f/h;.b:(Ljava/lang/String;)Ljava/io/InputStream;` @kind direct;
  #L40297c.  v1:= temp @kind object;
  #L40297e.  call temp:= `a`(v1, v6) @signature `Lorg/c/a/f/b;.a:(Ljava/io/InputStream;Ljava/lang/String;)Lorg/c/a/f;` @kind static;
  #L402984.  v2:= temp @kind object;
  #L402986.  v3:= v5.`org.c.a.f.h.d` @type ^`java.util.Map` @kind object;
  #L40298a.  v4:= new `java.lang.ref.SoftReference`;
  #L40298e.  call `<init>`(v4, v2) @signature `Ljava/lang/ref/SoftReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L402994.  call temp:= `put`(v3, v6, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40299a.  if v1 == 0 then goto L4029a4;
  #L40299e.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4029a4.  return v2 @kind object;
  #L4029a6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4029a8.  goto L4029d4;
  #L4029aa.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L4029ac.  goto L4029b8;
  #L4029ae.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4029b0.  v1:= v0 @kind object;
  #L4029b2.  goto L4029d4;
  #L4029b4.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L4029b6.  v1:= v0 @kind object;
  #L4029b8.  call `a`(v5, v2) @signature `Lorg/c/a/f/h;.a:(Ljava/lang/Exception;)V` @kind virtual;
  #L4029be.  v2:= v5.`org.c.a.f.h.d` @type ^`java.util.Map` @kind object;
  #L4029c2.  call temp:= `remove`(v2, v6) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4029c8.  if v1 == 0 then goto L4029d2;
  #L4029cc.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4029d2.  return v0 @kind object;
  #L4029d4.  if v1 == 0 then goto L4029de;
  #L4029d8.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L4029de.  throw v6;
  catch `java.io.IOException` @[L402976..L40297e] goto L4029b4;
  catch `java.lang.Throwable` @[L402976..L40297e] goto L4029ae;
  catch `java.io.IOException` @[L40297e..L40299a] goto L4029aa;
  catch `java.lang.Throwable` @[L40297e..L40299a] goto L4029a6;
  catch `java.io.IOException` @[L40299e..L4029a4] goto L4029a4;
  catch `java.lang.Throwable` @[L4029b8..L4029c8] goto L4029a6;
  catch `java.io.IOException` @[L4029cc..L4029d2] goto L4029d2;
  catch `java.io.IOException` @[L4029d8..L4029de] goto L4029de;
}
procedure `java.util.Set` `a`(`org.c.a.f.h` v1 @kind this) @signature `Lorg/c/a/f/h;.a:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4028e4.  v0:= v1.`org.c.a.f.h.e` @type ^`java.util.Set` @kind object;
  #L4028e8.  return v0 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.f.h` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lorg/c/a/f/h;.a:(Ljava/lang/String;)Lorg/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4028fc.  v0:= 0I;
  #L4028fe.  if v3 != 0 then goto L402904;
  #L402902.  return v0 @kind object;
  #L402904.  v1:= v2.`org.c.a.f.h.d` @type ^`java.util.Map` @kind object;
  #L402908.  call temp:= `get`(v1, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L40290e.  v1:= temp @kind object;
  #L402910.  if v1 != 0 then goto L402916;
  #L402914.  return v0 @kind object;
  #L402916.  v0:= instanceof @variable v1 @type ^`java.lang.ref.SoftReference` @kind boolean;
  #L40291a.  if v0 == 0 then goto L40293e;
  #L40291e.  v1:= (`java.lang.ref.SoftReference`) v1 @kind object;
  #L402922.  call temp:= `get`(v1) @signature `Ljava/lang/ref/SoftReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L402928.  v0:= temp @kind object;
  #L40292a.  v0:= (`org.c.a.f`) v0 @kind object;
  #L40292e.  if v0 == 0 then goto L402934;
  #L402932.  return v0 @kind object;
  #L402934.  call temp:= `c`(v2, v3) @signature `Lorg/c/a/f/h;.c:(Ljava/lang/String;)Lorg/c/a/f;` @kind direct;
  #L40293a.  v3:= temp @kind object;
  #L40293c.  return v3 @kind object;
  #L40293e.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L402944.  v0:= temp;
  #L402946.  if v0 == 0 then goto L402954;
  #L40294a.  call temp:= `c`(v2, v3) @signature `Lorg/c/a/f/h;.c:(Ljava/lang/String;)Lorg/c/a/f;` @kind direct;
  #L402950.  v3:= temp @kind object;
  #L402952.  return v3 @kind object;
  #L402954.  v1:= (`java.lang.String`) v1 @kind object;
  #L402958.  call temp:= `a`(v2, v1) @signature `Lorg/c/a/f/h;.a:(Ljava/lang/String;)Lorg/c/a/f;` @kind virtual;
  #L40295e.  v3:= temp @kind object;
  #L402960.  return v3 @kind object;
}
procedure `void` `a`(`org.c.a.f.h` v0 @kind this, `java.lang.Exception` v1 @kind object) @signature `Lorg/c/a/f/h;.a:(Ljava/lang/Exception;)V` @AccessFlag PROTECTED {
    temp;

  #L402cac.  call `printStackTrace`(v1) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L402cb2.  return @kind void;
}
