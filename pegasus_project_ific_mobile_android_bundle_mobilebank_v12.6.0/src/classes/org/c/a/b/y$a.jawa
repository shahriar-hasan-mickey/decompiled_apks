record `org.c.a.b.y$a` @kind class @AccessFlag FINAL extends `org.c.a.d.b` @kind class {
  `org.c.a.c` `org.c.a.b.y$a.a` @AccessFlag FINAL;
  `org.c.a.f` `org.c.a.b.y$a.b` @AccessFlag FINAL;
  `org.c.a.g` `org.c.a.b.y$a.c` @AccessFlag FINAL;
  `boolean` `org.c.a.b.y$a.d` @AccessFlag FINAL;
  `org.c.a.g` `org.c.a.b.y$a.e` @AccessFlag FINAL;
  `org.c.a.g` `org.c.a.b.y$a.f` @AccessFlag FINAL;
}
procedure `void` `<init>`(`org.c.a.b.y$a` v1 @kind this, `org.c.a.c` v2 @kind object, `org.c.a.f` v3 @kind object, `org.c.a.g` v4 @kind object, `org.c.a.g` v5 @kind object, `org.c.a.g` v6 @kind object) @signature `Lorg/c/a/b/y$a;.<init>:(Lorg/c/a/c;Lorg/c/a/f;Lorg/c/a/g;Lorg/c/a/g;Lorg/c/a/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3f3b84.  call temp:= `a`(v2) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3f3b8a.  v0:= temp @kind object;
  #L3f3b8c.  call `<init>`(v1, v0) @signature `Lorg/c/a/d/b;.<init>:(Lorg/c/a/d;)V` @kind direct;
  #L3f3b92.  call temp:= `c`(v2) @signature `Lorg/c/a/c;.c:()Z` @kind virtual;
  #L3f3b98.  v0:= temp;
  #L3f3b9a.  if v0 != 0 then goto L3f3baa;
  #L3f3b9e.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f3ba2.  call `<init>`(v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3f3ba8.  throw v2;
  #L3f3baa.  v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` := v2 @kind object;
  #L3f3bae.  v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` := v3 @kind object;
  #L3f3bb2.  v1.`org.c.a.b.y$a.c` @type ^`org.c.a.g` := v4 @kind object;
  #L3f3bb6.  call temp:= `a`(v4) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;)Z` @kind static;
  #L3f3bbc.  v2:= temp;
  #L3f3bbe.  v1.`org.c.a.b.y$a.d` @type ^`boolean` := v2 @kind boolean;
  #L3f3bc2.  v1.`org.c.a.b.y$a.e` @type ^`org.c.a.g` := v5 @kind object;
  #L3f3bc6.  v1.`org.c.a.b.y$a.f` @type ^`org.c.a.g` := v6 @kind object;
  #L3f3bca.  return @kind void;
}
procedure `int` `j`(`org.c.a.b.y$a` v8 @kind this, `long` v9 ) @signature `Lorg/c/a/b/y$a;.j:(J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f3788.  v0:= v8.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f378c.  call temp:= `b`(v0, v9) @signature `Lorg/c/a/f;.b:(J)I` @kind virtual;
  #L3f3792.  v0:= temp;
  #L3f3794.  v1:= (`long`) v0 @kind i2l;
  #L3f3796.  v3:= v9 + v1 @kind long;
  #L3f379a.  v5:= v9 ^~ v3 @kind long;
  #L3f379e.  v3:= 0L;
  #L3f37a2.  v7:= lcmp(v5, v3);
  #L3f37a6.  if v7 >= 0 then goto L3f37c6;
  #L3f37aa.  v5:= v9 ^~ v1 @kind long;
  #L3f37ae.  v9:= lcmp(v5, v3);
  #L3f37b2.  if v9 < 0 then goto L3f37c6;
  #L3f37b6.  v9:= new `java.lang.ArithmeticException`;
  #L3f37ba.  v10:= "Adding time zone offset caused overflow" @kind object;
  #L3f37be.  call `<init>`(v9, v10) @signature `Ljava/lang/ArithmeticException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f37c4.  throw v9;
  #L3f37c6.  return v0;
}
procedure `int` `a`(`org.c.a.b.y$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/y$a;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f367c.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3680.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3686.  v2:= temp @kind wide;
  #L3f3688.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f368c.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f3692.  v2:= temp;
  #L3f3694.  return v2;
}
procedure `int` `a`(`org.c.a.b.y$a` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/c/a/b/y$a;.a:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f365c.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3660.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3f3666.  v2:= temp;
  #L3f3668.  return v2;
}
procedure `long` `a`(`org.c.a.b.y$a` v9 @kind this, `long` v10 , `int` v12 ) @signature `Lorg/c/a/b/y$a;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f3870.  v0:= v9.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f3874.  if v0 == 0 then goto L3f3898;
  #L3f3878.  call temp:= `j`(v9, v10) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f387e.  v0:= temp;
  #L3f3880.  v1:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3884.  v2:= (`long`) v0 @kind i2l;
  #L3f3886.  v4:= v10 + v2 @kind long;
  #L3f388a.  call temp:= `a`(v1, v4, v12) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3f3890.  v10:= temp @kind wide;
  #L3f3892.  v0:= v10 - v2 @kind long;
  #L3f3896.  return v0 @kind wide;
  #L3f3898.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f389c.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f38a2.  v0:= temp @kind wide;
  #L3f38a4.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f38a8.  call temp:= `a`(v2, v0, v12) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3f38ae.  v4:= temp @kind wide;
  #L3f38b0.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f38b4.  v6:= 0I;
  #L3f38b6.  v7:= v10 @kind wide;
  #L3f38b8.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f38be.  v10:= temp @kind wide;
  #L3f38c0.  return v10 @kind wide;
}
procedure `long` `a`(`org.c.a.b.y$a` v9 @kind this, `long` v10 , `long` v12 ) @signature `Lorg/c/a/b/y$a;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f3910.  v0:= v9.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f3914.  if v0 == 0 then goto L3f3938;
  #L3f3918.  call temp:= `j`(v9, v10) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f391e.  v0:= temp;
  #L3f3920.  v1:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3924.  v2:= (`long`) v0 @kind i2l;
  #L3f3926.  v4:= v10 + v2 @kind long;
  #L3f392a.  call temp:= `a`(v1, v4, v12) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3f3930.  v10:= temp @kind wide;
  #L3f3932.  v12:= v10 - v2 @kind long;
  #L3f3936.  return v12 @kind wide;
  #L3f3938.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f393c.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3942.  v0:= temp @kind wide;
  #L3f3944.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3948.  call temp:= `a`(v2, v0, v12) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3f394e.  v4:= temp @kind wide;
  #L3f3950.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3954.  v6:= 0I;
  #L3f3956.  v7:= v10 @kind wide;
  #L3f3958.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f395e.  v10:= temp @kind wide;
  #L3f3960.  return v10 @kind wide;
}
procedure `long` `a`(`org.c.a.b.y$a` v9 @kind this, `long` v10 , `java.lang.String` v12 @kind object, `java.util.Locale` v13 @kind object) @signature `Lorg/c/a/b/y$a;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f38d4.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f38d8.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f38de.  v0:= temp @kind wide;
  #L3f38e0.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f38e4.  call temp:= `a`(v2, v0, v12, v13) @signature `Lorg/c/a/c;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3f38ea.  v4:= temp @kind wide;
  #L3f38ec.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f38f0.  v6:= 0I;
  #L3f38f2.  v7:= v10 @kind wide;
  #L3f38f4.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f38fa.  v10:= temp @kind wide;
  #L3f38fc.  return v10 @kind wide;
}
procedure `java.lang.String` `a`(`org.c.a.b.y$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/b/y$a;.a:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f37d8.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f37dc.  call temp:= `a`(v0, v2, v3) @signature `Lorg/c/a/c;.a:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f37e2.  v2:= temp @kind object;
  #L3f37e4.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`org.c.a.b.y$a` v1 @kind this, `long` v2 , `java.util.Locale` v4 @kind object) @signature `Lorg/c/a/b/y$a;.a:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f37f8.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f37fc.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3802.  v2:= temp @kind wide;
  #L3f3804.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3808.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f380e.  v2:= temp @kind object;
  #L3f3810.  return v2 @kind object;
}
procedure `int` `b`(`org.c.a.b.y$a` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lorg/c/a/b/y$a;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f36a8.  call temp:= `j`(v6, v9) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f36ae.  v0:= temp;
  #L3f36b0.  v1:= v6.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f36b4.  v2:= v6.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f36b8.  if v2 == 0 then goto L3f36c0;
  #L3f36bc.  v2:= v0;
  #L3f36be.  goto L3f36c8;
  #L3f36c0.  call temp:= `j`(v6, v7) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f36c6.  v2:= temp;
  #L3f36c8.  v2:= (`long`) v2 @kind i2l;
  #L3f36ca.  v4:= v7 + v2 @kind long;
  #L3f36ce.  v7:= (`long`) v0 @kind i2l;
  #L3f36d0.  v2:= v9 + v7 @kind long;
  #L3f36d4.  call temp:= `b`(v1, v4, v2) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3f36da.  v7:= temp;
  #L3f36dc.  return v7;
}
procedure `long` `b`(`org.c.a.b.y$a` v9 @kind this, `long` v10 , `int` v12 ) @signature `Lorg/c/a/b/y$a;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f3974.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3978.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f397e.  v0:= temp @kind wide;
  #L3f3980.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3984.  call temp:= `b`(v2, v0, v12) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f398a.  v0:= temp @kind wide;
  #L3f398c.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3990.  v6:= 0I;
  #L3f3992.  v4:= v0 @kind wide;
  #L3f3994.  v7:= v10 @kind wide;
  #L3f3996.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f399c.  v10:= temp @kind wide;
  #L3f399e.  call temp:= `a`(v9, v10) @signature `Lorg/c/a/b/y$a;.a:(J)I` @kind virtual;
  #L3f39a4.  v2:= temp;
  #L3f39a6.  if v2 == v12 then goto L3f39ee;
  #L3f39aa.  v10:= new `org.c.a.j`;
  #L3f39ae.  v11:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f39b2.  call temp:= `e`(v11) @signature `Lorg/c/a/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3f39b8.  v11:= temp @kind object;
  #L3f39ba.  call `<init>`(v10, v0, v11) @signature `Lorg/c/a/j;.<init>:(JLjava/lang/String;)V` @kind direct;
  #L3f39c0.  v11:= new `org.c.a.i`;
  #L3f39c4.  v0:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f39c8.  call temp:= `a`(v0) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3f39ce.  v0:= temp @kind object;
  #L3f39d0.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f39d6.  v12:= temp @kind object;
  #L3f39d8.  call temp:= `getMessage`(v10) @signature `Lorg/c/a/j;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L3f39de.  v1:= temp @kind object;
  #L3f39e0.  call `<init>`(v11, v0, v12, v1) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/String;)V` @kind direct;
  #L3f39e6.  call temp:= `initCause`(v11, v10) @signature `Lorg/c/a/i;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3f39ec.  throw v11;
  #L3f39ee.  return v10 @kind wide;
}
procedure `java.lang.String` `b`(`org.c.a.b.y$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/b/y$a;.b:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3824.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3828.  call temp:= `b`(v0, v2, v3) @signature `Lorg/c/a/c;.b:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f382e.  v2:= temp @kind object;
  #L3f3830.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`org.c.a.b.y$a` v1 @kind this, `long` v2 , `java.util.Locale` v4 @kind object) @signature `Lorg/c/a/b/y$a;.b:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3844.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3848.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f384e.  v2:= temp @kind wide;
  #L3f3850.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3854.  call temp:= `b`(v0, v2, v4) @signature `Lorg/c/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f385a.  v2:= temp @kind object;
  #L3f385c.  return v2 @kind object;
}
procedure `boolean` `b`(`org.c.a.b.y$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/y$a;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3590.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3594.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f359a.  v2:= temp @kind wide;
  #L3f359c.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f35a0.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L3f35a6.  v2:= temp;
  #L3f35a8.  return v2;
}
procedure `int` `c`(`org.c.a.b.y$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/y$a;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f36f0.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f36f4.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f36fa.  v2:= temp @kind wide;
  #L3f36fc.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3700.  call temp:= `c`(v0, v2) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3f3706.  v2:= temp;
  #L3f3708.  return v2;
}
procedure `long` `c`(`org.c.a.b.y$a` v6 @kind this, `long` v7 , `long` v9 ) @signature `Lorg/c/a/b/y$a;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f3a00.  call temp:= `j`(v6, v9) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f3a06.  v0:= temp;
  #L3f3a08.  v1:= v6.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3a0c.  v2:= v6.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f3a10.  if v2 == 0 then goto L3f3a18;
  #L3f3a14.  v2:= v0;
  #L3f3a16.  goto L3f3a20;
  #L3f3a18.  call temp:= `j`(v6, v7) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f3a1e.  v2:= temp;
  #L3f3a20.  v2:= (`long`) v2 @kind i2l;
  #L3f3a22.  v4:= v7 + v2 @kind long;
  #L3f3a26.  v7:= (`long`) v0 @kind i2l;
  #L3f3a28.  v2:= v9 + v7 @kind long;
  #L3f3a2c.  call temp:= `c`(v1, v4, v2) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f3a32.  v7:= temp @kind wide;
  #L3f3a34.  return v7 @kind wide;
}
procedure `long` `d`(`org.c.a.b.y$a` v9 @kind this, `long` v10 ) @signature `Lorg/c/a/b/y$a;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f3a48.  v0:= v9.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f3a4c.  if v0 == 0 then goto L3f3a70;
  #L3f3a50.  call temp:= `j`(v9, v10) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f3a56.  v0:= temp;
  #L3f3a58.  v1:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3a5c.  v2:= (`long`) v0 @kind i2l;
  #L3f3a5e.  v4:= v10 + v2 @kind long;
  #L3f3a62.  call temp:= `d`(v1, v4) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3f3a68.  v10:= temp @kind wide;
  #L3f3a6a.  v0:= v10 - v2 @kind long;
  #L3f3a6e.  return v0 @kind wide;
  #L3f3a70.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3a74.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3a7a.  v0:= temp @kind wide;
  #L3f3a7c.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3a80.  call temp:= `d`(v2, v0) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3f3a86.  v4:= temp @kind wide;
  #L3f3a88.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3a8c.  v6:= 0I;
  #L3f3a8e.  v7:= v10 @kind wide;
  #L3f3a90.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f3a96.  v10:= temp @kind wide;
  #L3f3a98.  return v10 @kind wide;
}
procedure `boolean` `d`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f35bc.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f35c0.  call temp:= `d`(v0) @signature `Lorg/c/a/c;.d:()Z` @kind virtual;
  #L3f35c6.  v0:= temp;
  #L3f35c8.  return v0;
}
procedure `long` `e`(`org.c.a.b.y$a` v9 @kind this, `long` v10 ) @signature `Lorg/c/a/b/y$a;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3f3aac.  v0:= v9.`org.c.a.b.y$a.d` @type ^`boolean` @kind boolean;
  #L3f3ab0.  if v0 == 0 then goto L3f3ad4;
  #L3f3ab4.  call temp:= `j`(v9, v10) @signature `Lorg/c/a/b/y$a;.j:(J)I` @kind direct;
  #L3f3aba.  v0:= temp;
  #L3f3abc.  v1:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3ac0.  v2:= (`long`) v0 @kind i2l;
  #L3f3ac2.  v4:= v10 + v2 @kind long;
  #L3f3ac6.  call temp:= `e`(v1, v4) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3f3acc.  v10:= temp @kind wide;
  #L3f3ace.  v0:= v10 - v2 @kind long;
  #L3f3ad2.  return v0 @kind wide;
  #L3f3ad4.  v0:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3ad8.  call temp:= `f`(v0, v10) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3ade.  v0:= temp @kind wide;
  #L3f3ae0.  v2:= v9.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3ae4.  call temp:= `e`(v2, v0) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3f3aea.  v4:= temp @kind wide;
  #L3f3aec.  v3:= v9.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3af0.  v6:= 0I;
  #L3f3af2.  v7:= v10 @kind wide;
  #L3f3af4.  call temp:= `a`(v3, v4, v6, v7) @signature `Lorg/c/a/f;.a:(JZJ)J` @kind virtual;
  #L3f3afa.  v10:= temp @kind wide;
  #L3f3afc.  return v10 @kind wide;
}
procedure `org.c.a.g` `e`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.e:()Lorg/c/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f3b3c.  v0:= v1.`org.c.a.b.y$a.c` @type ^`org.c.a.g` @kind object;
  #L3f3b40.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.b.y$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/b/y$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f35dc.  v0:= 1I;
  #L3f35de.  if v4 != v5 then goto L3f35e4;
  #L3f35e2.  return v0;
  #L3f35e4.  v1:= instanceof @variable v5 @type ^`org.c.a.b.y$a` @kind boolean;
  #L3f35e8.  v2:= 0I;
  #L3f35ea.  if v1 == 0 then goto L3f3648;
  #L3f35ee.  v5:= (`org.c.a.b.y$a`) v5 @kind object;
  #L3f35f2.  v1:= v4.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f35f6.  v3:= v5.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f35fa.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3600.  v1:= temp;
  #L3f3602.  if v1 == 0 then goto L3f3644;
  #L3f3606.  v1:= v4.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f360a.  v3:= v5.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f360e.  call temp:= `equals`(v1, v3) @signature `Lorg/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3614.  v1:= temp;
  #L3f3616.  if v1 == 0 then goto L3f3644;
  #L3f361a.  v1:= v4.`org.c.a.b.y$a.c` @type ^`org.c.a.g` @kind object;
  #L3f361e.  v3:= v5.`org.c.a.b.y$a.c` @type ^`org.c.a.g` @kind object;
  #L3f3622.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3628.  v1:= temp;
  #L3f362a.  if v1 == 0 then goto L3f3644;
  #L3f362e.  v1:= v4.`org.c.a.b.y$a.e` @type ^`org.c.a.g` @kind object;
  #L3f3632.  v5:= v5.`org.c.a.b.y$a.e` @type ^`org.c.a.g` @kind object;
  #L3f3636.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f363c.  v5:= temp;
  #L3f363e.  if v5 == 0 then goto L3f3644;
  #L3f3642.  goto L3f3646;
  #L3f3644.  v0:= 0I;
  #L3f3646.  return v0;
  #L3f3648.  return v2;
}
procedure `org.c.a.g` `f`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f3b54.  v0:= v1.`org.c.a.b.y$a.e` @type ^`org.c.a.g` @kind object;
  #L3f3b58.  return v0 @kind object;
}
procedure `org.c.a.g` `g`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.g:()Lorg/c/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f3b6c.  v0:= v1.`org.c.a.b.y$a.f` @type ^`org.c.a.g` @kind object;
  #L3f3b70.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f371c.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3720.  call temp:= `h`(v0) @signature `Lorg/c/a/c;.h:()I` @kind virtual;
  #L3f3726.  v0:= temp;
  #L3f3728.  return v0;
}
procedure `int` `hashCode`(`org.c.a.b.y$a` v2 @kind this) @signature `Lorg/c/a/b/y$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f373c.  v0:= v2.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3740.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f3746.  v0:= temp;
  #L3f3748.  v1:= v2.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f374c.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/f;.hashCode:()I` @kind virtual;
  #L3f3752.  v1:= temp;
  #L3f3754.  v0:= v0 ^~ v1 @kind int;
  #L3f3756.  return v0;
}
procedure `int` `i`(`org.c.a.b.y$a` v1 @kind this) @signature `Lorg/c/a/b/y$a;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3768.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f376c.  call temp:= `i`(v0) @signature `Lorg/c/a/c;.i:()I` @kind virtual;
  #L3f3772.  v0:= temp;
  #L3f3774.  return v0;
}
procedure `long` `i`(`org.c.a.b.y$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/y$a;.i:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3b10.  v0:= v1.`org.c.a.b.y$a.b` @type ^`org.c.a.f` @kind object;
  #L3f3b14.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/f;.f:(J)J` @kind virtual;
  #L3f3b1a.  v2:= temp @kind wide;
  #L3f3b1c.  v0:= v1.`org.c.a.b.y$a.a` @type ^`org.c.a.c` @kind object;
  #L3f3b20.  call temp:= `i`(v0, v2) @signature `Lorg/c/a/c;.i:(J)J` @kind virtual;
  #L3f3b26.  v2:= temp @kind wide;
  #L3f3b28.  return v2 @kind wide;
}
