record `org.c.a.b.e` @kind class @AccessFlag FINAL extends `org.c.a.d.m` @kind class {
  `org.c.a.b.c` `org.c.a.b.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.b.e` v1 @kind this, `org.c.a.b.c` v2 @kind object, `org.c.a.g` v3 @kind object) @signature `Lorg/c/a/b/e;.<init>:(Lorg/c/a/b/c;Lorg/c/a/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3edfd0.  call temp:= `n`() @signature `Lorg/c/a/d;.n:()Lorg/c/a/d;` @kind static;
  #L3edfd6.  v0:= temp @kind object;
  #L3edfd8.  call `<init>`(v1, v0, v3) @signature `Lorg/c/a/d/m;.<init>:(Lorg/c/a/d;Lorg/c/a/g;)V` @kind direct;
  #L3edfde.  v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` := v2 @kind object;
  #L3edfe2.  return @kind void;
}
procedure `int` `a`(`org.c.a.b.e` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/e;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edefc.  v0:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edf00.  call temp:= `d`(v0, v2) @signature `Lorg/c/a/b/c;.d:(J)I` @kind virtual;
  #L3edf06.  v2:= temp;
  #L3edf08.  return v2;
}
procedure `boolean` `b`(`org.c.a.b.e` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/e;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ededc.  v0:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edee0.  call temp:= `j`(v0, v2) @signature `Lorg/c/a/b/c;.j:(J)Z` @kind virtual;
  #L3edee6.  v2:= temp;
  #L3edee8.  return v2;
}
procedure `int` `c`(`org.c.a.b.e` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/e;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edf1c.  v0:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edf20.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3edf26.  v2:= temp;
  #L3edf28.  v3:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edf2c.  call temp:= `a`(v3, v2) @signature `Lorg/c/a/b/c;.a:(I)I` @kind virtual;
  #L3edf32.  v2:= temp;
  #L3edf34.  return v2;
}
procedure `int` `d`(`org.c.a.b.e` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/b/e;.d:(JI)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3edf48.  v0:= v2.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edf4c.  call temp:= `O`(v0) @signature `Lorg/c/a/b/c;.O:()I` @kind virtual;
  #L3edf52.  v0:= temp;
  #L3edf54.  v1:= 1I;
  #L3edf56.  v0:= v0 - v1 @kind int;
  #L3edf58.  if v5 > v0 then goto L3edf60;
  #L3edf5c.  if v5 >= v1 then goto L3edf68;
  #L3edf60.  call temp:= `c`(v2, v3) @signature `Lorg/c/a/b/e;.c:(J)I` @kind virtual;
  #L3edf66.  v0:= temp;
  #L3edf68.  return v0;
}
procedure `org.c.a.g` `f`(`org.c.a.b.e` v1 @kind this) @signature `Lorg/c/a/b/e;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edfb0.  v0:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edfb4.  call temp:= `D`(v0) @signature `Lorg/c/a/b/c;.D:()Lorg/c/a/g;` @kind virtual;
  #L3edfba.  v0:= temp @kind object;
  #L3edfbc.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.b.e` v1 @kind this) @signature `Lorg/c/a/b/e;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edf7c.  v0:= 1I;
  #L3edf7e.  return v0;
}
procedure `int` `i`(`org.c.a.b.e` v1 @kind this) @signature `Lorg/c/a/b/e;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3edf90.  v0:= v1.`org.c.a.b.e.b` @type ^`org.c.a.b.c` @kind object;
  #L3edf94.  call temp:= `O`(v0) @signature `Lorg/c/a/b/c;.O:()I` @kind virtual;
  #L3edf9a.  v0:= temp;
  #L3edf9c.  return v0;
}
