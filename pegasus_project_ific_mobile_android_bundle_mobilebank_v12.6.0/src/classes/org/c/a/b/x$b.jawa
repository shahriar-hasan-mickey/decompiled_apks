record `org.c.a.b.x$b` @kind class @AccessFlag  extends `org.c.a.d.e` @kind class {
  `org.c.a.b.x` `org.c.a.b.x$b.a` @AccessFlag FINAL_SYNTHETIC;
}
global `long` `@@org.c.a.b.x$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.b.x$b` v0 @kind this, `org.c.a.b.x` v1 @kind object, `org.c.a.g` v2 @kind object) @signature `Lorg/c/a/b/x$b;.<init>:(Lorg/c/a/b/x;Lorg/c/a/g;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f2cfc.  v0.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` := v1 @kind object;
  #L3f2d00.  call temp:= `a`(v2) @signature `Lorg/c/a/g;.a:()Lorg/c/a/h;` @kind virtual;
  #L3f2d06.  v1:= temp @kind object;
  #L3f2d08.  call `<init>`(v0, v2, v1) @signature `Lorg/c/a/d/e;.<init>:(Lorg/c/a/g;Lorg/c/a/h;)V` @kind direct;
  #L3f2d0e.  return @kind void;
}
procedure `long` `a`(`org.c.a.b.x$b` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/b/x$b;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2c44.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2c48.  v1:= 0I;
  #L3f2c4a.  call `a`(v0, v3, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2c50.  call temp:= `f`(v2) @signature `Lorg/c/a/b/x$b;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f2c56.  v0:= temp @kind object;
  #L3f2c58.  call temp:= `a`(v0, v3, v5) @signature `Lorg/c/a/g;.a:(JI)J` @kind virtual;
  #L3f2c5e.  v3:= temp @kind wide;
  #L3f2c60.  v5:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2c64.  v0:= "resulting" @kind object;
  #L3f2c68.  call `a`(v5, v3, v0) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2c6e.  return v3 @kind wide;
}
procedure `long` `a`(`org.c.a.b.x$b` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/c/a/b/x$b;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2c80.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2c84.  v1:= 0I;
  #L3f2c86.  call `a`(v0, v3, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2c8c.  call temp:= `f`(v2) @signature `Lorg/c/a/b/x$b;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f2c92.  v0:= temp @kind object;
  #L3f2c94.  call temp:= `a`(v0, v3, v5) @signature `Lorg/c/a/g;.a:(JJ)J` @kind virtual;
  #L3f2c9a.  v3:= temp @kind wide;
  #L3f2c9c.  v5:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2ca0.  v6:= "resulting" @kind object;
  #L3f2ca4.  call `a`(v5, v3, v6) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2caa.  return v3 @kind wide;
}
procedure `int` `b`(`org.c.a.b.x$b` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/c/a/b/x$b;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2c04.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2c08.  v1:= "minuend" @kind object;
  #L3f2c0c.  call `a`(v0, v3, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2c12.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2c16.  v1:= "subtrahend" @kind object;
  #L3f2c1a.  call `a`(v0, v5, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2c20.  call temp:= `f`(v2) @signature `Lorg/c/a/b/x$b;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f2c26.  v0:= temp @kind object;
  #L3f2c28.  call temp:= `b`(v0, v3, v5) @signature `Lorg/c/a/g;.b:(JJ)I` @kind virtual;
  #L3f2c2e.  v3:= temp;
  #L3f2c30.  return v3;
}
procedure `long` `c`(`org.c.a.b.x$b` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/c/a/b/x$b;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2cbc.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2cc0.  v1:= "minuend" @kind object;
  #L3f2cc4.  call `a`(v0, v3, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2cca.  v0:= v2.`org.c.a.b.x$b.a` @type ^`org.c.a.b.x` @kind object;
  #L3f2cce.  v1:= "subtrahend" @kind object;
  #L3f2cd2.  call `a`(v0, v5, v1) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f2cd8.  call temp:= `f`(v2) @signature `Lorg/c/a/b/x$b;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f2cde.  v0:= temp @kind object;
  #L3f2ce0.  call temp:= `c`(v0, v3, v5) @signature `Lorg/c/a/g;.c:(JJ)J` @kind virtual;
  #L3f2ce6.  v3:= temp @kind wide;
  #L3f2ce8.  return v3 @kind wide;
}
