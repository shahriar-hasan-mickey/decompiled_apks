record `org.c.a.b.l` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.a` @kind class {
}
global `org.c.a.c` `@@org.c.a.b.l.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.c.a.b.l.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.c.a.b.l` `@@org.c.a.b.l.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.c.a.b.l.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/b/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ef4b0.  v0:= new `org.c.a.b.h`;
  #L3ef4b4.  v1:= "BE" @kind object;
  #L3ef4b8.  call `<init>`(v0, v1) @signature `Lorg/c/a/b/h;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ef4be.  `@@org.c.a.b.l.a` @type ^`org.c.a.c` := v0 @kind object;
  #L3ef4c2.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3ef4c6.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3ef4cc.  `@@org.c.a.b.l.b` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3ef4d0.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3ef4d4.  call temp:= `b`(v0) @signature `Lorg/c/a/b/l;.b:(Lorg/c/a/f;)Lorg/c/a/b/l;` @kind static;
  #L3ef4da.  v0:= temp @kind object;
  #L3ef4dc.  `@@org.c.a.b.l.c` @type ^`org.c.a.b.l` := v0 @kind object;
  #L3ef4e0.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.l` v0 @kind this, `org.c.a.a` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/c/a/b/l;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ef4f4.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/b/a;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3ef4fa.  return @kind void;
}
procedure `org.c.a.b.l` `N`() @signature `Lorg/c/a/b/l;.N:()Lorg/c/a/b/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ef404.  v0:= `@@org.c.a.b.l.c` @type ^`org.c.a.b.l` @kind object;
  #L3ef408.  return v0 @kind object;
}
procedure `org.c.a.b.l` `b`(`org.c.a.f` v12 @kind object) @signature `Lorg/c/a/b/l;.b:(Lorg/c/a/f;)Lorg/c/a/b/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3ef41c.  if v12 != 0 then goto L3ef428;
  #L3ef420.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3ef426.  v12:= temp @kind object;
  #L3ef428.  v0:= `@@org.c.a.b.l.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3ef42c.  call temp:= `get`(v0, v12) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef432.  v0:= temp @kind object;
  #L3ef434.  v0:= (`org.c.a.b.l`) v0 @kind object;
  #L3ef438.  if v0 != 0 then goto L3ef49c;
  #L3ef43c.  v0:= new `org.c.a.b.l`;
  #L3ef440.  v10:= 0I;
  #L3ef442.  call temp:= `a`(v12, v10) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;)Lorg/c/a/b/n;` @kind static;
  #L3ef448.  v1:= temp @kind object;
  #L3ef44a.  call `<init>`(v0, v1, v10) @signature `Lorg/c/a/b/l;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3ef450.  v11:= new `org.c.a.b`;
  #L3ef454.  v2:= 1I;
  #L3ef456.  v3:= 1I;
  #L3ef458.  v4:= 1I;
  #L3ef45a.  v5:= 0I;
  #L3ef45c.  v6:= 0I;
  #L3ef45e.  v7:= 0I;
  #L3ef460.  v8:= 0I;
  #L3ef462.  v1:= v11 @kind object;
  #L3ef464.  v9:= v0 @kind object;
  #L3ef466.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/c/a/b;.<init>:(IIIIIIILorg/c/a/a;)V` @kind direct;
  #L3ef46c.  v1:= new `org.c.a.b.l`;
  #L3ef470.  call temp:= `a`(v0, v11, v10) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/a;Lorg/c/a/r;Lorg/c/a/r;)Lorg/c/a/b/x;` @kind static;
  #L3ef476.  v0:= temp @kind object;
  #L3ef478.  v2:= "" @kind object;
  #L3ef47c.  call `<init>`(v1, v0, v2) @signature `Lorg/c/a/b/l;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3ef482.  v0:= `@@org.c.a.b.l.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3ef486.  call temp:= `putIfAbsent`(v0, v12, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ef48c.  v12:= temp @kind object;
  #L3ef48e.  v0:= v12 @kind object;
  #L3ef490.  v0:= (`org.c.a.b.l`) v0 @kind object;
  #L3ef494.  if v0 == 0 then goto L3ef49a;
  #L3ef498.  goto L3ef49c;
  #L3ef49a.  v0:= v1 @kind object;
  #L3ef49c.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.b.l` v1 @kind this) @signature `Lorg/c/a/b/l;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ef324.  call temp:= `L`(v1) @signature `Lorg/c/a/b/l;.L:()Lorg/c/a/a;` @kind virtual;
  #L3ef32a.  v0:= temp @kind object;
  #L3ef32c.  if v0 != 0 then goto L3ef33a;
  #L3ef330.  call temp:= `N`() @signature `Lorg/c/a/b/l;.N:()Lorg/c/a/b/l;` @kind static;
  #L3ef336.  v0:= temp @kind object;
  #L3ef338.  goto L3ef34a;
  #L3ef33a.  call temp:= `a`(v0) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef340.  v0:= temp @kind object;
  #L3ef342.  call temp:= `b`(v0) @signature `Lorg/c/a/b/l;.b:(Lorg/c/a/f;)Lorg/c/a/b/l;` @kind static;
  #L3ef348.  v0:= temp @kind object;
  #L3ef34a.  return v0 @kind object;
}
procedure `org.c.a.a` `a`(`org.c.a.b.l` v1 @kind this, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/b/l;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef3b8.  if v2 != 0 then goto L3ef3c4;
  #L3ef3bc.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3ef3c2.  v2:= temp @kind object;
  #L3ef3c4.  call temp:= `a`(v1) @signature `Lorg/c/a/b/l;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef3ca.  v0:= temp @kind object;
  #L3ef3cc.  if v2 != v0 then goto L3ef3d2;
  #L3ef3d0.  return v1 @kind object;
  #L3ef3d2.  call temp:= `b`(v2) @signature `Lorg/c/a/b/l;.b:(Lorg/c/a/f;)Lorg/c/a/b/l;` @kind static;
  #L3ef3d8.  v2:= temp @kind object;
  #L3ef3da.  return v2 @kind object;
}
procedure `void` `a`(`org.c.a.b.l` v6 @kind this, `org.c.a.b.a$a` v7 @kind object) @signature `Lorg/c/a/b/l;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ef50c.  call temp:= `M`(v6) @signature `Lorg/c/a/b/l;.M:()Ljava/lang/Object;` @kind virtual;
  #L3ef512.  v0:= temp @kind object;
  #L3ef514.  if v0 != 0 then goto L3ef628;
  #L3ef518.  call temp:= `l`() @signature `Lorg/c/a/h;.l:()Lorg/c/a/h;` @kind static;
  #L3ef51e.  v0:= temp @kind object;
  #L3ef520.  call temp:= `a`(v0) @signature `Lorg/c/a/d/t;.a:(Lorg/c/a/h;)Lorg/c/a/d/t;` @kind static;
  #L3ef526.  v0:= temp @kind object;
  #L3ef528.  v7.`org.c.a.b.a$a.l` @type ^`org.c.a.g` := v0 @kind object;
  #L3ef52c.  v0:= v7.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3ef530.  v1:= new `org.c.a.d.k`;
  #L3ef534.  v2:= new `org.c.a.d.r`;
  #L3ef538.  call `<init>`(v2, v6, v0) @signature `Lorg/c/a/d/r;.<init>:(Lorg/c/a/a;Lorg/c/a/c;)V` @kind direct;
  #L3ef53e.  v0:= 543I;
  #L3ef542.  call `<init>`(v1, v2, v0) @signature `Lorg/c/a/d/k;.<init>:(Lorg/c/a/c;I)V` @kind direct;
  #L3ef548.  v7.`org.c.a.b.a$a.E` @type ^`org.c.a.c` := v1 @kind object;
  #L3ef54c.  v1:= new `org.c.a.d.f`;
  #L3ef550.  v2:= v7.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3ef554.  v3:= v7.`org.c.a.b.a$a.l` @type ^`org.c.a.g` @kind object;
  #L3ef558.  call temp:= `t`() @signature `Lorg/c/a/d;.t:()Lorg/c/a/d;` @kind static;
  #L3ef55e.  v4:= temp @kind object;
  #L3ef560.  call `<init>`(v1, v2, v3, v4) @signature `Lorg/c/a/d/f;.<init>:(Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/d;)V` @kind direct;
  #L3ef566.  v7.`org.c.a.b.a$a.F` @type ^`org.c.a.c` := v1 @kind object;
  #L3ef56a.  v1:= v7.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3ef56e.  v2:= new `org.c.a.d.k`;
  #L3ef572.  v3:= new `org.c.a.d.r`;
  #L3ef576.  call `<init>`(v3, v6, v1) @signature `Lorg/c/a/d/r;.<init>:(Lorg/c/a/a;Lorg/c/a/c;)V` @kind direct;
  #L3ef57c.  call `<init>`(v2, v3, v0) @signature `Lorg/c/a/d/k;.<init>:(Lorg/c/a/c;I)V` @kind direct;
  #L3ef582.  v7.`org.c.a.b.a$a.B` @type ^`org.c.a.c` := v2 @kind object;
  #L3ef586.  v0:= new `org.c.a.d.k`;
  #L3ef58a.  v1:= v7.`org.c.a.b.a$a.F` @type ^`org.c.a.c` @kind object;
  #L3ef58e.  v2:= 99I;
  #L3ef592.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/d/k;.<init>:(Lorg/c/a/c;I)V` @kind direct;
  #L3ef598.  v1:= new `org.c.a.d.g`;
  #L3ef59c.  v2:= v7.`org.c.a.b.a$a.l` @type ^`org.c.a.g` @kind object;
  #L3ef5a0.  call temp:= `v`() @signature `Lorg/c/a/d;.v:()Lorg/c/a/d;` @kind static;
  #L3ef5a6.  v3:= temp @kind object;
  #L3ef5a8.  v4:= 100I;
  #L3ef5ac.  call `<init>`(v1, v0, v2, v3, v4) @signature `Lorg/c/a/d/g;.<init>:(Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/d;I)V` @kind direct;
  #L3ef5b2.  v7.`org.c.a.b.a$a.H` @type ^`org.c.a.c` := v1 @kind object;
  #L3ef5b6.  v0:= v7.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3ef5ba.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3ef5c0.  v0:= temp @kind object;
  #L3ef5c2.  v7.`org.c.a.b.a$a.k` @type ^`org.c.a.g` := v0 @kind object;
  #L3ef5c6.  v0:= new `org.c.a.d.o`;
  #L3ef5ca.  v1:= v7.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3ef5ce.  v1:= (`org.c.a.d.g`) v1 @kind object;
  #L3ef5d2.  call `<init>`(v0, v1) @signature `Lorg/c/a/d/o;.<init>:(Lorg/c/a/d/g;)V` @kind direct;
  #L3ef5d8.  v1:= new `org.c.a.d.k`;
  #L3ef5dc.  call temp:= `u`() @signature `Lorg/c/a/d;.u:()Lorg/c/a/d;` @kind static;
  #L3ef5e2.  v2:= temp @kind object;
  #L3ef5e4.  v3:= 1I;
  #L3ef5e6.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/c/a/d/k;.<init>:(Lorg/c/a/c;Lorg/c/a/d;I)V` @kind direct;
  #L3ef5ec.  v7.`org.c.a.b.a$a.G` @type ^`org.c.a.c` := v1 @kind object;
  #L3ef5f0.  v0:= new `org.c.a.d.o`;
  #L3ef5f4.  v1:= v7.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3ef5f8.  v2:= v7.`org.c.a.b.a$a.k` @type ^`org.c.a.g` @kind object;
  #L3ef5fc.  call temp:= `q`() @signature `Lorg/c/a/d;.q:()Lorg/c/a/d;` @kind static;
  #L3ef602.  v5:= temp @kind object;
  #L3ef604.  call `<init>`(v0, v1, v2, v5, v4) @signature `Lorg/c/a/d/o;.<init>:(Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/d;I)V` @kind direct;
  #L3ef60a.  v1:= new `org.c.a.d.k`;
  #L3ef60e.  call temp:= `q`() @signature `Lorg/c/a/d;.q:()Lorg/c/a/d;` @kind static;
  #L3ef614.  v2:= temp @kind object;
  #L3ef616.  call `<init>`(v1, v0, v2, v3) @signature `Lorg/c/a/d/k;.<init>:(Lorg/c/a/c;Lorg/c/a/d;I)V` @kind direct;
  #L3ef61c.  v7.`org.c.a.b.a$a.C` @type ^`org.c.a.c` := v1 @kind object;
  #L3ef620.  v0:= `@@org.c.a.b.l.a` @type ^`org.c.a.c` @kind object;
  #L3ef624.  v7.`org.c.a.b.a$a.I` @type ^`org.c.a.c` := v0 @kind object;
  #L3ef628.  return @kind void;
}
procedure `org.c.a.a` `b`(`org.c.a.b.l` v1 @kind this) @signature `Lorg/c/a/b/l;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef3ec.  v0:= `@@org.c.a.b.l.c` @type ^`org.c.a.b.l` @kind object;
  #L3ef3f0.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.b.l` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/c/a/b/l;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef2ac.  if v1 != v2 then goto L3ef2b4;
  #L3ef2b0.  v2:= 1I;
  #L3ef2b2.  return v2;
  #L3ef2b4.  v0:= instanceof @variable v2 @type ^`org.c.a.b.l` @kind boolean;
  #L3ef2b8.  if v0 == 0 then goto L3ef2da;
  #L3ef2bc.  v2:= (`org.c.a.b.l`) v2 @kind object;
  #L3ef2c0.  call temp:= `a`(v1) @signature `Lorg/c/a/b/l;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef2c6.  v0:= temp @kind object;
  #L3ef2c8.  call temp:= `a`(v2) @signature `Lorg/c/a/b/l;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef2ce.  v2:= temp @kind object;
  #L3ef2d0.  call temp:= `equals`(v0, v2) @signature `Lorg/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef2d6.  v2:= temp;
  #L3ef2d8.  return v2;
  #L3ef2da.  v2:= 0I;
  #L3ef2dc.  return v2;
}
procedure `int` `hashCode`(`org.c.a.b.l` v2 @kind this) @signature `Lorg/c/a/b/l;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef2f0.  v0:= "Buddhist" @kind object;
  #L3ef2f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ef2fa.  v0:= temp;
  #L3ef2fc.  v0:= v0 * 11;
  #L3ef300.  call temp:= `a`(v2) @signature `Lorg/c/a/b/l;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef306.  v1:= temp @kind object;
  #L3ef308.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/f;.hashCode:()I` @kind virtual;
  #L3ef30e.  v1:= temp;
  #L3ef310.  v0:= v0 + v1 @kind int;
  #L3ef312.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.l` v3 @kind this) @signature `Lorg/c/a/b/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef35c.  v0:= "BuddhistChronology" @kind object;
  #L3ef360.  call temp:= `a`(v3) @signature `Lorg/c/a/b/l;.a:()Lorg/c/a/f;` @kind virtual;
  #L3ef366.  v1:= temp @kind object;
  #L3ef368.  if v1 == 0 then goto L3ef3a6;
  #L3ef36c.  v2:= new `java.lang.StringBuilder`;
  #L3ef370.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ef376.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef37c.  v0:= 91I;
  #L3ef380.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef386.  call temp:= `e`(v1) @signature `Lorg/c/a/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3ef38c.  v0:= temp @kind object;
  #L3ef38e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef394.  v0:= 93I;
  #L3ef398.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ef39e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ef3a4.  v0:= temp @kind object;
  #L3ef3a6.  return v0 @kind object;
}
