record `org.c.a.b.k` @kind class @AccessFlag  extends `org.c.a.d.i` @kind class {
  `org.c.a.b.c` `org.c.a.b.k.a` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`org.c.a.b.k` v3 @kind this, `org.c.a.b.c` v4 @kind object) @signature `Lorg/c/a/b/k;.<init>:(Lorg/c/a/b/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ef280.  call temp:= `s`() @signature `Lorg/c/a/d;.s:()Lorg/c/a/d;` @kind static;
  #L3ef286.  v0:= temp @kind object;
  #L3ef288.  call temp:= `T`(v4) @signature `Lorg/c/a/b/c;.T:()J` @kind virtual;
  #L3ef28e.  v1:= temp @kind wide;
  #L3ef290.  call `<init>`(v3, v0, v1) @signature `Lorg/c/a/d/i;.<init>:(Lorg/c/a/d;J)V` @kind direct;
  #L3ef296.  v3.`org.c.a.b.k.a` @type ^`org.c.a.b.c` := v4 @kind object;
  #L3ef29a.  return @kind void;
}
procedure `int` `a`(`org.c.a.b.k` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/k;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef058.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef05c.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ef062.  v2:= temp;
  #L3ef064.  return v2;
}
procedure `long` `a`(`org.c.a.b.k` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/c/a/b/k;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef0b8.  if v4 != 0 then goto L3ef0be;
  #L3ef0bc.  return v2 @kind wide;
  #L3ef0be.  call temp:= `a`(v1, v2) @signature `Lorg/c/a/b/k;.a:(J)I` @kind virtual;
  #L3ef0c4.  v0:= temp;
  #L3ef0c6.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/d/h;.a:(II)I` @kind static;
  #L3ef0cc.  v4:= temp;
  #L3ef0ce.  call temp:= `b`(v1, v2, v4) @signature `Lorg/c/a/b/k;.b:(JI)J` @kind virtual;
  #L3ef0d4.  v2:= temp @kind wide;
  #L3ef0d6.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.k` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/b/k;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3ef0e8.  call temp:= `a`(v3) @signature `Lorg/c/a/d/h;.a:(J)I` @kind static;
  #L3ef0ee.  v3:= temp;
  #L3ef0f0.  call temp:= `a`(v0, v1, v3) @signature `Lorg/c/a/b/k;.a:(JI)J` @kind virtual;
  #L3ef0f6.  v1:= temp @kind wide;
  #L3ef0f8.  return v1 @kind wide;
}
procedure `long` `b`(`org.c.a.b.k` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/b/k;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef10c.  v0:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef110.  call temp:= `Q`(v0) @signature `Lorg/c/a/b/c;.Q:()I` @kind virtual;
  #L3ef116.  v0:= temp;
  #L3ef118.  v1:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef11c.  call temp:= `R`(v1) @signature `Lorg/c/a/b/c;.R:()I` @kind virtual;
  #L3ef122.  v1:= temp;
  #L3ef124.  call `a`(v2, v5, v0, v1) @signature `Lorg/c/a/d/h;.a:(Lorg/c/a/c;III)V` @kind static;
  #L3ef12a.  v0:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef12e.  call temp:= `f`(v0, v3, v5) @signature `Lorg/c/a/b/c;.f:(JI)J` @kind virtual;
  #L3ef134.  v3:= temp @kind wide;
  #L3ef136.  return v3 @kind wide;
}
procedure `boolean` `b`(`org.c.a.b.k` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/k;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef01c.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef020.  call temp:= `a`(v1, v2) @signature `Lorg/c/a/b/k;.a:(J)I` @kind virtual;
  #L3ef026.  v2:= temp;
  #L3ef028.  call temp:= `e`(v0, v2) @signature `Lorg/c/a/b/c;.e:(I)Z` @kind virtual;
  #L3ef02e.  v2:= temp;
  #L3ef030.  return v2;
}
procedure `long` `c`(`org.c.a.b.k` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/b/k;.c:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef148.  v0:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef14c.  call temp:= `Q`(v0) @signature `Lorg/c/a/b/c;.Q:()I` @kind virtual;
  #L3ef152.  v0:= temp;
  #L3ef154.  v0:= v0 + -1;
  #L3ef158.  v1:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef15c.  call temp:= `R`(v1) @signature `Lorg/c/a/b/c;.R:()I` @kind virtual;
  #L3ef162.  v1:= temp;
  #L3ef164.  v1:= v1 + 1;
  #L3ef168.  call `a`(v2, v5, v0, v1) @signature `Lorg/c/a/d/h;.a:(Lorg/c/a/c;III)V` @kind static;
  #L3ef16e.  v0:= v2.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef172.  call temp:= `f`(v0, v3, v5) @signature `Lorg/c/a/b/c;.f:(JI)J` @kind virtual;
  #L3ef178.  v3:= temp @kind wide;
  #L3ef17a.  return v3 @kind wide;
}
procedure `long` `c`(`org.c.a.b.k` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/b/k;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef18c.  v0:= lcmp(v2, v4);
  #L3ef190.  if v0 >= 0 then goto L3ef1a4;
  #L3ef194.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef198.  call temp:= `a`(v0, v4, v2) @signature `Lorg/c/a/b/c;.a:(JJ)J` @kind virtual;
  #L3ef19e.  v2:= temp @kind wide;
  #L3ef1a0.  v2:= -v2 @kind long;
  #L3ef1a2.  return v2 @kind wide;
  #L3ef1a4.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef1a8.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/b/c;.a:(JJ)J` @kind virtual;
  #L3ef1ae.  v2:= temp @kind wide;
  #L3ef1b0.  return v2 @kind wide;
}
procedure `long` `d`(`org.c.a.b.k` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/k;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef1c4.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef1c8.  call temp:= `a`(v1, v2) @signature `Lorg/c/a/b/k;.a:(J)I` @kind virtual;
  #L3ef1ce.  v2:= temp;
  #L3ef1d0.  call temp:= `d`(v0, v2) @signature `Lorg/c/a/b/c;.d:(I)J` @kind virtual;
  #L3ef1d6.  v2:= temp @kind wide;
  #L3ef1d8.  return v2 @kind wide;
}
procedure `boolean` `d`(`org.c.a.b.k` v1 @kind this) @signature `Lorg/c/a/b/k;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef044.  v0:= 0I;
  #L3ef046.  return v0;
}
procedure `long` `e`(`org.c.a.b.k` v4 @kind this, `long` v5 ) @signature `Lorg/c/a/b/k;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ef1ec.  call temp:= `a`(v4, v5) @signature `Lorg/c/a/b/k;.a:(J)I` @kind virtual;
  #L3ef1f2.  v0:= temp;
  #L3ef1f4.  v1:= v4.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef1f8.  call temp:= `d`(v1, v0) @signature `Lorg/c/a/b/c;.d:(I)J` @kind virtual;
  #L3ef1fe.  v1:= temp @kind wide;
  #L3ef200.  v3:= lcmp(v5, v1);
  #L3ef204.  if v3 == 0 then goto L3ef218;
  #L3ef208.  v5:= v4.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef20c.  v0:= v0 + 1;
  #L3ef210.  call temp:= `d`(v5, v0) @signature `Lorg/c/a/b/c;.d:(I)J` @kind virtual;
  #L3ef216.  v5:= temp @kind wide;
  #L3ef218.  return v5 @kind wide;
}
procedure `org.c.a.g` `f`(`org.c.a.b.k` v1 @kind this) @signature `Lorg/c/a/b/k;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef24c.  v0:= 0I;
  #L3ef24e.  return v0 @kind object;
}
procedure `org.c.a.g` `g`(`org.c.a.b.k` v1 @kind this) @signature `Lorg/c/a/b/k;.g:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef260.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef264.  call temp:= `s`(v0) @signature `Lorg/c/a/b/c;.s:()Lorg/c/a/g;` @kind virtual;
  #L3ef26a.  v0:= temp @kind object;
  #L3ef26c.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.b.k` v1 @kind this) @signature `Lorg/c/a/b/k;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef078.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef07c.  call temp:= `Q`(v0) @signature `Lorg/c/a/b/c;.Q:()I` @kind virtual;
  #L3ef082.  v0:= temp;
  #L3ef084.  return v0;
}
procedure `int` `i`(`org.c.a.b.k` v1 @kind this) @signature `Lorg/c/a/b/k;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef098.  v0:= v1.`org.c.a.b.k.a` @type ^`org.c.a.b.c` @kind object;
  #L3ef09c.  call temp:= `R`(v0) @signature `Lorg/c/a/b/c;.R:()I` @kind virtual;
  #L3ef0a2.  v0:= temp;
  #L3ef0a4.  return v0;
}
procedure `long` `i`(`org.c.a.b.k` v4 @kind this, `long` v5 ) @signature `Lorg/c/a/b/k;.i:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ef22c.  call temp:= `d`(v4, v5) @signature `Lorg/c/a/b/k;.d:(J)J` @kind virtual;
  #L3ef232.  v0:= temp @kind wide;
  #L3ef234.  v2:= v5 - v0 @kind long;
  #L3ef238.  return v2 @kind wide;
}
