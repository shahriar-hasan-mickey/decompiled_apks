record `org.c.a.b.y` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.a` @kind class {
}
global `long` `@@org.c.a.b.y.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.b.y` v0 @kind this, `org.c.a.a` v1 @kind object, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/b/y;.<init>:(Lorg/c/a/a;Lorg/c/a/f;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f42f0.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/b/a;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3f42f6.  return @kind void;
}
procedure `long` `a`(`org.c.a.b.y` v11 @kind this, `long` v12 ) @signature `Lorg/c/a/b/y;.a:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3f4080.  v0:= 9223372036854775807L;
  #L3f408a.  v2:= lcmp(v12, v0);
  #L3f408e.  if v2 != 0 then goto L3f4094;
  #L3f4092.  return v0 @kind wide;
  #L3f4094.  v2:= -9223372036854775808L;
  #L3f4098.  v4:= lcmp(v12, v2);
  #L3f409c.  if v4 != 0 then goto L3f40a2;
  #L3f40a0.  return v2 @kind wide;
  #L3f40a2.  call temp:= `a`(v11) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f40a8.  v4:= temp @kind object;
  #L3f40aa.  call temp:= `e`(v4, v12) @signature `Lorg/c/a/f;.e:(J)I` @kind virtual;
  #L3f40b0.  v5:= temp;
  #L3f40b2.  v6:= (`long`) v5 @kind i2l;
  #L3f40b4.  v8:= v12 - v6 @kind long;
  #L3f40b8.  v6:= 604800000L;
  #L3f40be.  v10:= lcmp(v12, v6);
  #L3f40c2.  v6:= 0L;
  #L3f40c6.  if v10 <= 0 then goto L3f40d4;
  #L3f40ca.  v10:= lcmp(v8, v6);
  #L3f40ce.  if v10 >= 0 then goto L3f40d4;
  #L3f40d2.  return v0 @kind wide;
  #L3f40d4.  v0:= -604800000L;
  #L3f40da.  v10:= lcmp(v12, v0);
  #L3f40de.  if v10 >= 0 then goto L3f40ec;
  #L3f40e2.  v0:= lcmp(v8, v6);
  #L3f40e6.  if v0 <= 0 then goto L3f40ec;
  #L3f40ea.  return v2 @kind wide;
  #L3f40ec.  call temp:= `b`(v4, v8) @signature `Lorg/c/a/f;.b:(J)I` @kind virtual;
  #L3f40f2.  v0:= temp;
  #L3f40f4.  if v5 == v0 then goto L3f410c;
  #L3f40f8.  v0:= new `org.c.a.j`;
  #L3f40fc.  call temp:= `e`(v4) @signature `Lorg/c/a/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3f4102.  v1:= temp @kind object;
  #L3f4104.  call `<init>`(v0, v12, v1) @signature `Lorg/c/a/j;.<init>:(JLjava/lang/String;)V` @kind direct;
  #L3f410a.  throw v0;
  #L3f410c.  return v8 @kind wide;
}
procedure `org.c.a.b.y` `a`(`org.c.a.a` v1 @kind object, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/a;Lorg/c/a/f;)Lorg/c/a/b/y;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f418c.  if v1 != 0 then goto L3f41a0;
  #L3f4190.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f4194.  v2:= "Must supply a chronology" @kind object;
  #L3f4198.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f419e.  throw v1;
  #L3f41a0.  call temp:= `b`(v1) @signature `Lorg/c/a/a;.b:()Lorg/c/a/a;` @kind virtual;
  #L3f41a6.  v1:= temp @kind object;
  #L3f41a8.  if v1 != 0 then goto L3f41bc;
  #L3f41ac.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f41b0.  v2:= "UTC chronology must not be null" @kind object;
  #L3f41b4.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f41ba.  throw v1;
  #L3f41bc.  if v2 != 0 then goto L3f41d0;
  #L3f41c0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f41c4.  v2:= "DateTimeZone must not be null" @kind object;
  #L3f41c8.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f41ce.  throw v1;
  #L3f41d0.  v0:= new `org.c.a.b.y`;
  #L3f41d4.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/b/y;.<init>:(Lorg/c/a/a;Lorg/c/a/f;)V` @kind direct;
  #L3f41da.  return v0 @kind object;
}
procedure `org.c.a.c` `a`(`org.c.a.b.y` v7 @kind this, `org.c.a.c` v8 @kind object, `java.util.HashMap` v9 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f41ec.  if v8 == 0 then goto L3f4266;
  #L3f41f0.  call temp:= `c`(v8) @signature `Lorg/c/a/c;.c:()Z` @kind virtual;
  #L3f41f6.  v0:= temp;
  #L3f41f8.  if v0 != 0 then goto L3f41fe;
  #L3f41fc.  goto L3f4266;
  #L3f41fe.  call temp:= `containsKey`(v9, v8) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f4204.  v0:= temp;
  #L3f4206.  if v0 == 0 then goto L3f4218;
  #L3f420a.  call temp:= `get`(v9, v8) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f4210.  v8:= temp @kind object;
  #L3f4212.  v8:= (`org.c.a.c`) v8 @kind object;
  #L3f4216.  return v8 @kind object;
  #L3f4218.  v6:= new `org.c.a.b.y$a`;
  #L3f421c.  call temp:= `a`(v7) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f4222.  v2:= temp @kind object;
  #L3f4224.  call temp:= `e`(v8) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f422a.  v0:= temp @kind object;
  #L3f422c.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f4232.  v3:= temp @kind object;
  #L3f4234.  call temp:= `f`(v8) @signature `Lorg/c/a/c;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f423a.  v0:= temp @kind object;
  #L3f423c.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f4242.  v4:= temp @kind object;
  #L3f4244.  call temp:= `g`(v8) @signature `Lorg/c/a/c;.g:()Lorg/c/a/g;` @kind virtual;
  #L3f424a.  v0:= temp @kind object;
  #L3f424c.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f4252.  v5:= temp @kind object;
  #L3f4254.  v0:= v6 @kind object;
  #L3f4256.  v1:= v8 @kind object;
  #L3f4258.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/b/y$a;.<init>:(Lorg/c/a/c;Lorg/c/a/f;Lorg/c/a/g;Lorg/c/a/g;Lorg/c/a/g;)V` @kind direct;
  #L3f425e.  call temp:= `put`(v9, v8, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f4264.  return v6 @kind object;
  #L3f4266.  return v8 @kind object;
}
procedure `org.c.a.g` `a`(`org.c.a.b.y` v2 @kind this, `org.c.a.g` v3 @kind object, `java.util.HashMap` v4 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f4298.  if v3 == 0 then goto L3f42de;
  #L3f429c.  call temp:= `b`(v3) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3f42a2.  v0:= temp;
  #L3f42a4.  if v0 != 0 then goto L3f42aa;
  #L3f42a8.  goto L3f42de;
  #L3f42aa.  call temp:= `containsKey`(v4, v3) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f42b0.  v0:= temp;
  #L3f42b2.  if v0 == 0 then goto L3f42c4;
  #L3f42b6.  call temp:= `get`(v4, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f42bc.  v3:= temp @kind object;
  #L3f42be.  v3:= (`org.c.a.g`) v3 @kind object;
  #L3f42c2.  return v3 @kind object;
  #L3f42c4.  v0:= new `org.c.a.b.y$b`;
  #L3f42c8.  call temp:= `a`(v2) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f42ce.  v1:= temp @kind object;
  #L3f42d0.  call `<init>`(v0, v3, v1) @signature `Lorg/c/a/b/y$b;.<init>:(Lorg/c/a/g;Lorg/c/a/f;)V` @kind direct;
  #L3f42d6.  call temp:= `put`(v4, v3, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f42dc.  return v0 @kind object;
  #L3f42de.  return v3 @kind object;
}
procedure `boolean` `a`(`org.c.a.g` v4 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f3ed4.  if v4 == 0 then goto L3f3ef2;
  #L3f3ed8.  call temp:= `d`(v4) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f3ede.  v0:= temp @kind wide;
  #L3f3ee0.  v2:= 43200000L;
  #L3f3ee6.  v4:= lcmp(v0, v2);
  #L3f3eea.  if v4 >= 0 then goto L3f3ef2;
  #L3f3eee.  v4:= 1I;
  #L3f3ef0.  goto L3f3ef4;
  #L3f3ef2.  v4:= 0I;
  #L3f3ef4.  return v4;
}
procedure `long` `a`(`org.c.a.b.y` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/c/a/b/y;.a:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f401c.  call temp:= `L`(v1) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f4022.  v0:= temp @kind object;
  #L3f4024.  call temp:= `a`(v0, v2, v3, v4, v5) @signature `Lorg/c/a/a;.a:(IIII)J` @kind virtual;
  #L3f402a.  v2:= temp @kind wide;
  #L3f402c.  call temp:= `a`(v1, v2) @signature `Lorg/c/a/b/y;.a:(J)J` @kind direct;
  #L3f4032.  v2:= temp @kind wide;
  #L3f4034.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.y` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/c/a/b/y;.a:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f4048.  call temp:= `L`(v8) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f404e.  v0:= temp @kind object;
  #L3f4050.  v1:= v9;
  #L3f4052.  v2:= v10;
  #L3f4054.  v3:= v11;
  #L3f4056.  v4:= v12;
  #L3f4058.  v5:= v13;
  #L3f405a.  v6:= v14;
  #L3f405c.  v7:= v15;
  #L3f405e.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/c/a/a;.a:(IIIIIII)J` @kind virtual;
  #L3f4064.  v9:= temp @kind wide;
  #L3f4066.  call temp:= `a`(v8, v9) @signature `Lorg/c/a/b/y;.a:(J)J` @kind direct;
  #L3f406c.  v9:= temp @kind wide;
  #L3f406e.  return v9 @kind wide;
}
procedure `org.c.a.a` `a`(`org.c.a.b.y` v2 @kind this, `org.c.a.f` v3 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f4120.  if v3 != 0 then goto L3f412c;
  #L3f4124.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f412a.  v3:= temp @kind object;
  #L3f412c.  call temp:= `M`(v2) @signature `Lorg/c/a/b/y;.M:()Ljava/lang/Object;` @kind virtual;
  #L3f4132.  v0:= temp @kind object;
  #L3f4134.  if v3 != v0 then goto L3f413a;
  #L3f4138.  return v2 @kind object;
  #L3f413a.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f413e.  if v3 != v0 then goto L3f414c;
  #L3f4142.  call temp:= `L`(v2) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f4148.  v3:= temp @kind object;
  #L3f414a.  return v3 @kind object;
  #L3f414c.  v0:= new `org.c.a.b.y`;
  #L3f4150.  call temp:= `L`(v2) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f4156.  v1:= temp @kind object;
  #L3f4158.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/b/y;.<init>:(Lorg/c/a/a;Lorg/c/a/f;)V` @kind direct;
  #L3f415e.  return v0 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.b.y` v1 @kind this) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4278.  call temp:= `M`(v1) @signature `Lorg/c/a/b/y;.M:()Ljava/lang/Object;` @kind virtual;
  #L3f427e.  v0:= temp @kind object;
  #L3f4280.  v0:= (`org.c.a.f`) v0 @kind object;
  #L3f4284.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.b.y` v2 @kind this, `org.c.a.b.a$a` v3 @kind object) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f4308.  v0:= new `java.util.HashMap`;
  #L3f430c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f4312.  v1:= v3.`org.c.a.b.a$a.l` @type ^`org.c.a.g` @kind object;
  #L3f4316.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f431c.  v1:= temp @kind object;
  #L3f431e.  v3.`org.c.a.b.a$a.l` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4322.  v1:= v3.`org.c.a.b.a$a.k` @type ^`org.c.a.g` @kind object;
  #L3f4326.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f432c.  v1:= temp @kind object;
  #L3f432e.  v3.`org.c.a.b.a$a.k` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4332.  v1:= v3.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f4336.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f433c.  v1:= temp @kind object;
  #L3f433e.  v3.`org.c.a.b.a$a.j` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4342.  v1:= v3.`org.c.a.b.a$a.i` @type ^`org.c.a.g` @kind object;
  #L3f4346.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f434c.  v1:= temp @kind object;
  #L3f434e.  v3.`org.c.a.b.a$a.i` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4352.  v1:= v3.`org.c.a.b.a$a.h` @type ^`org.c.a.g` @kind object;
  #L3f4356.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f435c.  v1:= temp @kind object;
  #L3f435e.  v3.`org.c.a.b.a$a.h` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4362.  v1:= v3.`org.c.a.b.a$a.g` @type ^`org.c.a.g` @kind object;
  #L3f4366.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f436c.  v1:= temp @kind object;
  #L3f436e.  v3.`org.c.a.b.a$a.g` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4372.  v1:= v3.`org.c.a.b.a$a.f` @type ^`org.c.a.g` @kind object;
  #L3f4376.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f437c.  v1:= temp @kind object;
  #L3f437e.  v3.`org.c.a.b.a$a.f` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4382.  v1:= v3.`org.c.a.b.a$a.e` @type ^`org.c.a.g` @kind object;
  #L3f4386.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f438c.  v1:= temp @kind object;
  #L3f438e.  v3.`org.c.a.b.a$a.e` @type ^`org.c.a.g` := v1 @kind object;
  #L3f4392.  v1:= v3.`org.c.a.b.a$a.d` @type ^`org.c.a.g` @kind object;
  #L3f4396.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f439c.  v1:= temp @kind object;
  #L3f439e.  v3.`org.c.a.b.a$a.d` @type ^`org.c.a.g` := v1 @kind object;
  #L3f43a2.  v1:= v3.`org.c.a.b.a$a.c` @type ^`org.c.a.g` @kind object;
  #L3f43a6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f43ac.  v1:= temp @kind object;
  #L3f43ae.  v3.`org.c.a.b.a$a.c` @type ^`org.c.a.g` := v1 @kind object;
  #L3f43b2.  v1:= v3.`org.c.a.b.a$a.b` @type ^`org.c.a.g` @kind object;
  #L3f43b6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f43bc.  v1:= temp @kind object;
  #L3f43be.  v3.`org.c.a.b.a$a.b` @type ^`org.c.a.g` := v1 @kind object;
  #L3f43c2.  v1:= v3.`org.c.a.b.a$a.a` @type ^`org.c.a.g` @kind object;
  #L3f43c6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f43cc.  v1:= temp @kind object;
  #L3f43ce.  v3.`org.c.a.b.a$a.a` @type ^`org.c.a.g` := v1 @kind object;
  #L3f43d2.  v1:= v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3f43d6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f43dc.  v1:= temp @kind object;
  #L3f43de.  v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` := v1 @kind object;
  #L3f43e2.  v1:= v3.`org.c.a.b.a$a.F` @type ^`org.c.a.c` @kind object;
  #L3f43e6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f43ec.  v1:= temp @kind object;
  #L3f43ee.  v3.`org.c.a.b.a$a.F` @type ^`org.c.a.c` := v1 @kind object;
  #L3f43f2.  v1:= v3.`org.c.a.b.a$a.G` @type ^`org.c.a.c` @kind object;
  #L3f43f6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f43fc.  v1:= temp @kind object;
  #L3f43fe.  v3.`org.c.a.b.a$a.G` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4402.  v1:= v3.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3f4406.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f440c.  v1:= temp @kind object;
  #L3f440e.  v3.`org.c.a.b.a$a.H` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4412.  v1:= v3.`org.c.a.b.a$a.I` @type ^`org.c.a.c` @kind object;
  #L3f4416.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f441c.  v1:= temp @kind object;
  #L3f441e.  v3.`org.c.a.b.a$a.I` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4422.  v1:= v3.`org.c.a.b.a$a.x` @type ^`org.c.a.c` @kind object;
  #L3f4426.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f442c.  v1:= temp @kind object;
  #L3f442e.  v3.`org.c.a.b.a$a.x` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4432.  v1:= v3.`org.c.a.b.a$a.y` @type ^`org.c.a.c` @kind object;
  #L3f4436.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f443c.  v1:= temp @kind object;
  #L3f443e.  v3.`org.c.a.b.a$a.y` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4442.  v1:= v3.`org.c.a.b.a$a.z` @type ^`org.c.a.c` @kind object;
  #L3f4446.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f444c.  v1:= temp @kind object;
  #L3f444e.  v3.`org.c.a.b.a$a.z` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4452.  v1:= v3.`org.c.a.b.a$a.D` @type ^`org.c.a.c` @kind object;
  #L3f4456.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f445c.  v1:= temp @kind object;
  #L3f445e.  v3.`org.c.a.b.a$a.D` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4462.  v1:= v3.`org.c.a.b.a$a.A` @type ^`org.c.a.c` @kind object;
  #L3f4466.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f446c.  v1:= temp @kind object;
  #L3f446e.  v3.`org.c.a.b.a$a.A` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4472.  v1:= v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3f4476.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f447c.  v1:= temp @kind object;
  #L3f447e.  v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4482.  v1:= v3.`org.c.a.b.a$a.C` @type ^`org.c.a.c` @kind object;
  #L3f4486.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f448c.  v1:= temp @kind object;
  #L3f448e.  v3.`org.c.a.b.a$a.C` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4492.  v1:= v3.`org.c.a.b.a$a.m` @type ^`org.c.a.c` @kind object;
  #L3f4496.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f449c.  v1:= temp @kind object;
  #L3f449e.  v3.`org.c.a.b.a$a.m` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44a2.  v1:= v3.`org.c.a.b.a$a.n` @type ^`org.c.a.c` @kind object;
  #L3f44a6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44ac.  v1:= temp @kind object;
  #L3f44ae.  v3.`org.c.a.b.a$a.n` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44b2.  v1:= v3.`org.c.a.b.a$a.o` @type ^`org.c.a.c` @kind object;
  #L3f44b6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44bc.  v1:= temp @kind object;
  #L3f44be.  v3.`org.c.a.b.a$a.o` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44c2.  v1:= v3.`org.c.a.b.a$a.p` @type ^`org.c.a.c` @kind object;
  #L3f44c6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44cc.  v1:= temp @kind object;
  #L3f44ce.  v3.`org.c.a.b.a$a.p` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44d2.  v1:= v3.`org.c.a.b.a$a.q` @type ^`org.c.a.c` @kind object;
  #L3f44d6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44dc.  v1:= temp @kind object;
  #L3f44de.  v3.`org.c.a.b.a$a.q` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44e2.  v1:= v3.`org.c.a.b.a$a.r` @type ^`org.c.a.c` @kind object;
  #L3f44e6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44ec.  v1:= temp @kind object;
  #L3f44ee.  v3.`org.c.a.b.a$a.r` @type ^`org.c.a.c` := v1 @kind object;
  #L3f44f2.  v1:= v3.`org.c.a.b.a$a.s` @type ^`org.c.a.c` @kind object;
  #L3f44f6.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f44fc.  v1:= temp @kind object;
  #L3f44fe.  v3.`org.c.a.b.a$a.s` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4502.  v1:= v3.`org.c.a.b.a$a.u` @type ^`org.c.a.c` @kind object;
  #L3f4506.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f450c.  v1:= temp @kind object;
  #L3f450e.  v3.`org.c.a.b.a$a.u` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4512.  v1:= v3.`org.c.a.b.a$a.t` @type ^`org.c.a.c` @kind object;
  #L3f4516.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f451c.  v1:= temp @kind object;
  #L3f451e.  v3.`org.c.a.b.a$a.t` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4522.  v1:= v3.`org.c.a.b.a$a.v` @type ^`org.c.a.c` @kind object;
  #L3f4526.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f452c.  v1:= temp @kind object;
  #L3f452e.  v3.`org.c.a.b.a$a.v` @type ^`org.c.a.c` := v1 @kind object;
  #L3f4532.  v1:= v3.`org.c.a.b.a$a.w` @type ^`org.c.a.c` @kind object;
  #L3f4536.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f453c.  v0:= temp @kind object;
  #L3f453e.  v3.`org.c.a.b.a$a.w` @type ^`org.c.a.c` := v0 @kind object;
  #L3f4542.  return @kind void;
}
procedure `org.c.a.a` `b`(`org.c.a.b.y` v1 @kind this) @signature `Lorg/c/a/b/y;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4170.  call temp:= `L`(v1) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f4176.  v0:= temp @kind object;
  #L3f4178.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.b.y` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/b/y;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f3f08.  v0:= 1I;
  #L3f3f0a.  if v4 != v5 then goto L3f3f10;
  #L3f3f0e.  return v0;
  #L3f3f10.  v1:= instanceof @variable v5 @type ^`org.c.a.b.y` @kind boolean;
  #L3f3f14.  v2:= 0I;
  #L3f3f16.  if v1 != 0 then goto L3f3f1c;
  #L3f3f1a.  return v2;
  #L3f3f1c.  v5:= (`org.c.a.b.y`) v5 @kind object;
  #L3f3f20.  call temp:= `L`(v4) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3f26.  v1:= temp @kind object;
  #L3f3f28.  call temp:= `L`(v5) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3f2e.  v3:= temp @kind object;
  #L3f3f30.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3f36.  v1:= temp;
  #L3f3f38.  if v1 == 0 then goto L3f3f5a;
  #L3f3f3c.  call temp:= `a`(v4) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f3f42.  v1:= temp @kind object;
  #L3f3f44.  call temp:= `a`(v5) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f3f4a.  v5:= temp @kind object;
  #L3f3f4c.  call temp:= `equals`(v1, v5) @signature `Lorg/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3f52.  v5:= temp;
  #L3f3f54.  if v5 == 0 then goto L3f3f5a;
  #L3f3f58.  goto L3f3f5c;
  #L3f3f5a.  v0:= 0I;
  #L3f3f5c.  return v0;
}
procedure `int` `hashCode`(`org.c.a.b.y` v2 @kind this) @signature `Lorg/c/a/b/y;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f3f70.  call temp:= `a`(v2) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f3f76.  v0:= temp @kind object;
  #L3f3f78.  call temp:= `hashCode`(v0) @signature `Lorg/c/a/f;.hashCode:()I` @kind virtual;
  #L3f3f7e.  v0:= temp;
  #L3f3f80.  v0:= v0 * 11;
  #L3f3f84.  v1:= 326565I;
  #L3f3f8a.  v0:= v0 + v1 @kind int;
  #L3f3f8c.  call temp:= `L`(v2) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3f92.  v1:= temp @kind object;
  #L3f3f94.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f3f9a.  v1:= temp;
  #L3f3f9c.  v1:= v1 * 7;
  #L3f3fa0.  v0:= v0 + v1 @kind int;
  #L3f3fa2.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.y` v2 @kind this) @signature `Lorg/c/a/b/y;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f3fb4.  v0:= new `java.lang.StringBuilder`;
  #L3f3fb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f3fbe.  v1:= "ZonedChronology[" @kind object;
  #L3f3fc2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3fc8.  call temp:= `L`(v2) @signature `Lorg/c/a/b/y;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3fce.  v1:= temp @kind object;
  #L3f3fd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3fd6.  v1:= ", " @kind object;
  #L3f3fda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3fe0.  call temp:= `a`(v2) @signature `Lorg/c/a/b/y;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f3fe6.  v1:= temp @kind object;
  #L3f3fe8.  call temp:= `e`(v1) @signature `Lorg/c/a/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3f3fee.  v1:= temp @kind object;
  #L3f3ff0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f3ff6.  v1:= 93I;
  #L3f3ffa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f4000.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f4006.  v0:= temp @kind object;
  #L3f4008.  return v0 @kind object;
}
