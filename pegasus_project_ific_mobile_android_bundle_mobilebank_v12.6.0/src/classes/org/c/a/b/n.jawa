record `org.c.a.b.n` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.a` @kind class {
  `org.c.a.b.w` `org.c.a.b.n.c` @AccessFlag PRIVATE;
  `org.c.a.b.t` `org.c.a.b.n.d` @AccessFlag PRIVATE;
  `org.c.a.k` `org.c.a.b.n.e` @AccessFlag PRIVATE;
  `long` `org.c.a.b.n.f` @AccessFlag PRIVATE;
  `long` `org.c.a.b.n.g` @AccessFlag PRIVATE;
}
global `org.c.a.k` `@@org.c.a.b.n.a` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.c.a.b.n.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.c.a.b.n.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/b/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3f0970.  v0:= new `org.c.a.k`;
  #L3f0974.  v1:= -12219292800000L;
  #L3f097e.  call `<init>`(v0, v1) @signature `Lorg/c/a/k;.<init>:(J)V` @kind direct;
  #L3f0984.  `@@org.c.a.b.n.a` @type ^`org.c.a.k` := v0 @kind object;
  #L3f0988.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3f098c.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3f0992.  `@@org.c.a.b.n.b` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3f0996.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n` v2 @kind this, `org.c.a.a` v3 @kind object, `org.c.a.b.w` v4 @kind object, `org.c.a.b.t` v5 @kind object, `org.c.a.k` v6 @kind object) @signature `Lorg/c/a/b/n;.<init>:(Lorg/c/a/a;Lorg/c/a/b/w;Lorg/c/a/b/t;Lorg/c/a/k;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f09a8.  v0:= 3I;
  #L3f09aa.  v0:= new `java.lang.Object`[v0];
  #L3f09ae.  v1:= 0I;
  #L3f09b0.  v0[v1]:= v4 @kind object;
  #L3f09b4.  v4:= 1I;
  #L3f09b6.  v0[v4]:= v5 @kind object;
  #L3f09ba.  v4:= 2I;
  #L3f09bc.  v0[v4]:= v6 @kind object;
  #L3f09c0.  call `<init>`(v2, v3, v0) @signature `Lorg/c/a/b/a;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3f09c6.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n` v2 @kind this, `org.c.a.b.w` v3 @kind object, `org.c.a.b.t` v4 @kind object, `org.c.a.k` v5 @kind object) @signature `Lorg/c/a/b/n;.<init>:(Lorg/c/a/b/w;Lorg/c/a/b/t;Lorg/c/a/k;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3f09d8.  v0:= 3I;
  #L3f09da.  v0:= new `java.lang.Object`[v0];
  #L3f09de.  v1:= 0I;
  #L3f09e0.  v0[v1]:= v3 @kind object;
  #L3f09e4.  v3:= 1I;
  #L3f09e6.  v0[v3]:= v4 @kind object;
  #L3f09ea.  v3:= 2I;
  #L3f09ec.  v0[v3]:= v5 @kind object;
  #L3f09f0.  v3:= 0I;
  #L3f09f2.  call `<init>`(v2, v3, v0) @signature `Lorg/c/a/b/a;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3f09f8.  return @kind void;
}
procedure `long` `a`(`long` v3 , `org.c.a.a` v5 @kind object, `org.c.a.a` v6 @kind object) @signature `Lorg/c/a/b/n;.a:(JLorg/c/a/a;Lorg/c/a/a;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0610.  call temp:= `E`(v5) @signature `Lorg/c/a/a;.E:()Lorg/c/a/c;` @kind virtual;
  #L3f0616.  v0:= temp @kind object;
  #L3f0618.  call temp:= `a`(v0, v3) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f061e.  v0:= temp;
  #L3f0620.  call temp:= `C`(v5) @signature `Lorg/c/a/a;.C:()Lorg/c/a/c;` @kind virtual;
  #L3f0626.  v1:= temp @kind object;
  #L3f0628.  call temp:= `a`(v1, v3) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f062e.  v1:= temp;
  #L3f0630.  call temp:= `u`(v5) @signature `Lorg/c/a/a;.u:()Lorg/c/a/c;` @kind virtual;
  #L3f0636.  v2:= temp @kind object;
  #L3f0638.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f063e.  v2:= temp;
  #L3f0640.  call temp:= `e`(v5) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L3f0646.  v5:= temp @kind object;
  #L3f0648.  call temp:= `a`(v5, v3) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f064e.  v3:= temp;
  #L3f0650.  call temp:= `a`(v6, v0, v1, v2, v3) @signature `Lorg/c/a/a;.a:(IIII)J` @kind virtual;
  #L3f0656.  v3:= temp @kind wide;
  #L3f0658.  return v3 @kind wide;
}
procedure `long` `a`(`org.c.a.b.n` v2 @kind object) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L3f066c.  v0:= v2.`org.c.a.b.n.g` @type ^`long` @kind wide;
  #L3f0670.  return v0 @kind wide;
}
procedure `org.c.a.b.n` `a`(`org.c.a.f` v3 @kind object, `long` v4 , `int` v6 ) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;JI)Lorg/c/a/b/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f07e8.  v0:= `@@org.c.a.b.n.a` @type ^`org.c.a.k` @kind object;
  #L3f07ec.  call temp:= `c`(v0) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L3f07f2.  v0:= temp @kind wide;
  #L3f07f4.  v2:= lcmp(v4, v0);
  #L3f07f8.  if v2 != 0 then goto L3f0800;
  #L3f07fc.  v4:= 0I;
  #L3f07fe.  goto L3f080c;
  #L3f0800.  v0:= new `org.c.a.k`;
  #L3f0804.  call `<init>`(v0, v4) @signature `Lorg/c/a/k;.<init>:(J)V` @kind direct;
  #L3f080a.  v4:= v0 @kind object;
  #L3f080c.  call temp:= `a`(v3, v4, v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @kind static;
  #L3f0812.  v3:= temp @kind object;
  #L3f0814.  return v3 @kind object;
}
procedure `org.c.a.b.n` `a`(`org.c.a.f` v1 @kind object, `org.c.a.t` v2 @kind object) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;)Lorg/c/a/b/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f0828.  v0:= 4I;
  #L3f082a.  call temp:= `a`(v1, v2, v0) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @kind static;
  #L3f0830.  v1:= temp @kind object;
  #L3f0832.  return v1 @kind object;
}
procedure `org.c.a.b.n` `a`(`org.c.a.f` v4 @kind object, `org.c.a.t` v5 @kind object, `int` v6 ) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f0844.  call temp:= `a`(v4) @signature `Lorg/c/a/e;.a:(Lorg/c/a/f;)Lorg/c/a/f;` @kind static;
  #L3f084a.  v4:= temp @kind object;
  #L3f084c.  if v5 != 0 then goto L3f0856;
  #L3f0850.  v5:= `@@org.c.a.b.n.a` @type ^`org.c.a.k` @kind object;
  #L3f0854.  goto L3f0894;
  #L3f0856.  call temp:= `b`(v5) @signature `Lorg/c/a/t;.b:()Lorg/c/a/k;` @kind interface;
  #L3f085c.  v5:= temp @kind object;
  #L3f085e.  v0:= new `org.c.a.l`;
  #L3f0862.  call temp:= `c`(v5) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L3f0868.  v1:= temp @kind wide;
  #L3f086a.  call temp:= `b`(v4) @signature `Lorg/c/a/b/t;.b:(Lorg/c/a/f;)Lorg/c/a/b/t;` @kind static;
  #L3f0870.  v3:= temp @kind object;
  #L3f0872.  call `<init>`(v0, v1, v3) @signature `Lorg/c/a/l;.<init>:(JLorg/c/a/a;)V` @kind direct;
  #L3f0878.  call temp:= `d`(v0) @signature `Lorg/c/a/l;.d:()I` @kind virtual;
  #L3f087e.  v0:= temp;
  #L3f0880.  if v0 > 0 then goto L3f0894;
  #L3f0884.  v4:= new `java.lang.IllegalArgumentException`;
  #L3f0888.  v5:= "Cutover too early. Must be on or after 0001-01-01." @kind object;
  #L3f088c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f0892.  throw v4;
  #L3f0894.  v0:= new `org.c.a.b.m`;
  #L3f0898.  call `<init>`(v0, v4, v5, v6) @signature `Lorg/c/a/b/m;.<init>:(Lorg/c/a/f;Lorg/c/a/k;I)V` @kind direct;
  #L3f089e.  v1:= `@@org.c.a.b.n.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f08a2.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f08a8.  v1:= temp @kind object;
  #L3f08aa.  v1:= (`org.c.a.b.n`) v1 @kind object;
  #L3f08ae.  if v1 != 0 then goto L3f0918;
  #L3f08b2.  v1:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f08b6.  if v4 != v1 then goto L3f08d6;
  #L3f08ba.  v1:= new `org.c.a.b.n`;
  #L3f08be.  call temp:= `a`(v4, v6) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @kind static;
  #L3f08c4.  v2:= temp @kind object;
  #L3f08c6.  call temp:= `a`(v4, v6) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @kind static;
  #L3f08cc.  v4:= temp @kind object;
  #L3f08ce.  call `<init>`(v1, v2, v4, v5) @signature `Lorg/c/a/b/n;.<init>:(Lorg/c/a/b/w;Lorg/c/a/b/t;Lorg/c/a/k;)V` @kind direct;
  #L3f08d4.  goto L3f0902;
  #L3f08d6.  v1:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f08da.  call temp:= `a`(v1, v5, v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @kind static;
  #L3f08e0.  v5:= temp @kind object;
  #L3f08e2.  v6:= new `org.c.a.b.n`;
  #L3f08e6.  call temp:= `a`(v5, v4) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/a;Lorg/c/a/f;)Lorg/c/a/b/y;` @kind static;
  #L3f08ec.  v4:= temp @kind object;
  #L3f08ee.  v1:= v5.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f08f2.  v2:= v5.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f08f6.  v5:= v5.`org.c.a.b.n.e` @type ^`org.c.a.k` @kind object;
  #L3f08fa.  call `<init>`(v6, v4, v1, v2, v5) @signature `Lorg/c/a/b/n;.<init>:(Lorg/c/a/a;Lorg/c/a/b/w;Lorg/c/a/b/t;Lorg/c/a/k;)V` @kind direct;
  #L3f0900.  v1:= v6 @kind object;
  #L3f0902.  v4:= `@@org.c.a.b.n.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f0906.  call temp:= `putIfAbsent`(v4, v0, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f090c.  v4:= temp @kind object;
  #L3f090e.  v4:= (`org.c.a.b.n`) v4 @kind object;
  #L3f0912.  if v4 == 0 then goto L3f0918;
  #L3f0916.  v1:= v4 @kind object;
  #L3f0918.  return v1 @kind object;
}
procedure `long` `b`(`long` v4 , `org.c.a.a` v6 @kind object, `org.c.a.a` v7 @kind object) @signature `Lorg/c/a/b/n;.b:(JLorg/c/a/a;Lorg/c/a/a;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f06a8.  call temp:= `z`(v7) @signature `Lorg/c/a/a;.z:()Lorg/c/a/c;` @kind virtual;
  #L3f06ae.  v0:= temp @kind object;
  #L3f06b0.  call temp:= `z`(v6) @signature `Lorg/c/a/a;.z:()Lorg/c/a/c;` @kind virtual;
  #L3f06b6.  v1:= temp @kind object;
  #L3f06b8.  call temp:= `a`(v1, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f06be.  v1:= temp;
  #L3f06c0.  v2:= 0L;
  #L3f06c4.  call temp:= `b`(v0, v2, v1) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f06ca.  v0:= temp @kind wide;
  #L3f06cc.  call temp:= `x`(v7) @signature `Lorg/c/a/a;.x:()Lorg/c/a/c;` @kind virtual;
  #L3f06d2.  v2:= temp @kind object;
  #L3f06d4.  call temp:= `x`(v6) @signature `Lorg/c/a/a;.x:()Lorg/c/a/c;` @kind virtual;
  #L3f06da.  v3:= temp @kind object;
  #L3f06dc.  call temp:= `a`(v3, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f06e2.  v3:= temp;
  #L3f06e4.  call temp:= `b`(v2, v0, v3) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f06ea.  v0:= temp @kind wide;
  #L3f06ec.  call temp:= `t`(v7) @signature `Lorg/c/a/a;.t:()Lorg/c/a/c;` @kind virtual;
  #L3f06f2.  v2:= temp @kind object;
  #L3f06f4.  call temp:= `t`(v6) @signature `Lorg/c/a/a;.t:()Lorg/c/a/c;` @kind virtual;
  #L3f06fa.  v3:= temp @kind object;
  #L3f06fc.  call temp:= `a`(v3, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f0702.  v3:= temp;
  #L3f0704.  call temp:= `b`(v2, v0, v3) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f070a.  v0:= temp @kind wide;
  #L3f070c.  call temp:= `e`(v7) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L3f0712.  v7:= temp @kind object;
  #L3f0714.  call temp:= `e`(v6) @signature `Lorg/c/a/a;.e:()Lorg/c/a/c;` @kind virtual;
  #L3f071a.  v6:= temp @kind object;
  #L3f071c.  call temp:= `a`(v6, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f0722.  v4:= temp;
  #L3f0724.  call temp:= `b`(v7, v0, v4) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f072a.  v4:= temp @kind wide;
  #L3f072c.  return v4 @kind wide;
}
procedure `org.c.a.b.t` `b`(`org.c.a.b.n` v0 @kind object) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3f092c.  v0:= v0.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f0930.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.b.n` v3 @kind this) @signature `Lorg/c/a/b/n;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3f033c.  call temp:= `a`(v3) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f0342.  v0:= temp @kind object;
  #L3f0344.  v1:= v3.`org.c.a.b.n.e` @type ^`org.c.a.k` @kind object;
  #L3f0348.  call temp:= `N`(v3) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f034e.  v2:= temp;
  #L3f0350.  call temp:= `a`(v0, v1, v2) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @kind static;
  #L3f0356.  v0:= temp @kind object;
  #L3f0358.  return v0 @kind object;
}
procedure `int` `N`(`org.c.a.b.n` v1 @kind this) @signature `Lorg/c/a/b/n;.N:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f02d0.  v0:= v1.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f02d4.  call temp:= `N`(v0) @signature `Lorg/c/a/b/t;.N:()I` @kind virtual;
  #L3f02da.  v0:= temp;
  #L3f02dc.  return v0;
}
procedure `long` `a`(`org.c.a.b.n` v5 @kind this, `int` v6 , `int` v7 , `int` v8 , `int` v9 ) @signature `Lorg/c/a/b/n;.a:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f0464.  call temp:= `L`(v5) @signature `Lorg/c/a/b/n;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f046a.  v0:= temp @kind object;
  #L3f046c.  if v0 == 0 then goto L3f047a;
  #L3f0470.  call temp:= `a`(v0, v6, v7, v8, v9) @signature `Lorg/c/a/a;.a:(IIII)J` @kind virtual;
  #L3f0476.  v6:= temp @kind wide;
  #L3f0478.  return v6 @kind wide;
  #L3f047a.  v0:= v5.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f047e.  call temp:= `a`(v0, v6, v7, v8, v9) @signature `Lorg/c/a/b/t;.a:(IIII)J` @kind virtual;
  #L3f0484.  v0:= temp @kind wide;
  #L3f0486.  v2:= v5.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f048a.  v4:= lcmp(v0, v2);
  #L3f048e.  if v4 >= 0 then goto L3f04ba;
  #L3f0492.  v0:= v5.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f0496.  call temp:= `a`(v0, v6, v7, v8, v9) @signature `Lorg/c/a/b/w;.a:(IIII)J` @kind virtual;
  #L3f049c.  v0:= temp @kind wide;
  #L3f049e.  v6:= v5.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f04a2.  v8:= lcmp(v0, v6);
  #L3f04a6.  if v8 < 0 then goto L3f04ba;
  #L3f04aa.  v6:= new `java.lang.IllegalArgumentException`;
  #L3f04ae.  v7:= "Specified date does not exist" @kind object;
  #L3f04b2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f04b8.  throw v6;
  #L3f04ba.  return v0 @kind wide;
}
procedure `long` `a`(`org.c.a.b.n` v14 @kind this, `int` v15 , `int` v16 , `int` v17 , `int` v18 , `int` v19 , `int` v20 , `int` v21 ) @signature `Lorg/c/a/b/n;.a:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3f04cc.  v1:= v14 @kind object;
  #L3f04ce.  call temp:= `L`(v1) @signature `Lorg/c/a/b/n;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f04d4.  v2:= temp @kind object;
  #L3f04d6.  if v2 == 0 then goto L3f04fe;
  #L3f04da.  v3:= v15;
  #L3f04dc.  v4:= v16;
  #L3f04e0.  v5:= v17;
  #L3f04e4.  v6:= v18;
  #L3f04e8.  v7:= v19;
  #L3f04ec.  v8:= v20;
  #L3f04f0.  v9:= v21;
  #L3f04f4.  call temp:= `a`(v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lorg/c/a/a;.a:(IIIIIII)J` @kind virtual;
  #L3f04fa.  v2:= temp @kind wide;
  #L3f04fc.  return v2 @kind wide;
  #L3f04fe.  v4:= v1.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f0502.  v5:= v15;
  #L3f0504.  v6:= v16;
  #L3f0508.  v7:= v17;
  #L3f050c.  v8:= v18;
  #L3f0510.  v9:= v19;
  #L3f0514.  v10:= v20;
  #L3f0518.  v11:= v21;
  #L3f051c.  call temp:= `a`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lorg/c/a/b/t;.a:(IIIIIII)J` @kind virtual;
  #L3f0522.  v2:= temp @kind wide;
  #L3f0524.  v12:= v16;
  #L3f0528.  v13:= v17;
  #L3f052c.  goto L3f057e;
  #L3f052e.  v0:= Exception @type ^`org.c.a.i` @kind object;
  #L3f0530.  v2:= v0 @kind object;
  #L3f0532.  v3:= 2I;
  #L3f0534.  v12:= v16;
  #L3f0538.  if v12 != v3 then goto L3f05ca;
  #L3f053c.  v3:= 29I;
  #L3f0540.  v13:= v17;
  #L3f0544.  if v13 == v3 then goto L3f054a;
  #L3f0548.  goto L3f05ca;
  #L3f054a.  v4:= v1.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f054e.  v7:= 28I;
  #L3f0552.  v5:= v15;
  #L3f0554.  v6:= v12;
  #L3f0556.  v8:= v18;
  #L3f055a.  v9:= v19;
  #L3f055e.  v10:= v20;
  #L3f0562.  v11:= v21;
  #L3f0566.  call temp:= `a`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lorg/c/a/b/t;.a:(IIIIIII)J` @kind virtual;
  #L3f056c.  v3:= temp @kind wide;
  #L3f056e.  v5:= v1.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0572.  v7:= lcmp(v3, v5);
  #L3f0576.  if v7 < 0 then goto L3f057c;
  #L3f057a.  throw v2;
  #L3f057c.  v2:= v3 @kind wide;
  #L3f057e.  v4:= v1.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0582.  v6:= lcmp(v2, v4);
  #L3f0586.  if v6 >= 0 then goto L3f05c8;
  #L3f058a.  v4:= v1.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f058e.  v5:= v15;
  #L3f0590.  v6:= v12;
  #L3f0592.  v7:= v13;
  #L3f0594.  v8:= v18;
  #L3f0598.  v9:= v19;
  #L3f059c.  v10:= v20;
  #L3f05a0.  v11:= v21;
  #L3f05a4.  call temp:= `a`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Lorg/c/a/b/w;.a:(IIIIIII)J` @kind virtual;
  #L3f05aa.  v2:= temp @kind wide;
  #L3f05ac.  v4:= v1.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f05b0.  v6:= lcmp(v2, v4);
  #L3f05b4.  if v6 < 0 then goto L3f05c8;
  #L3f05b8.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f05bc.  v3:= "Specified date does not exist" @kind object;
  #L3f05c0.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f05c6.  throw v2;
  #L3f05c8.  return v2 @kind wide;
  #L3f05ca.  throw v2;
  catch `org.c.a.i` @[L3f04fe..L3f0524] goto L3f052e;
}
procedure `long` `a`(`org.c.a.b.n` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/n;.a:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f05ec.  v0:= v2.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f05f0.  v1:= v2.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f05f4.  call temp:= `a`(v3, v0, v1) @signature `Lorg/c/a/b/n;.a:(JLorg/c/a/a;Lorg/c/a/a;)J` @kind static;
  #L3f05fa.  v3:= temp @kind wide;
  #L3f05fc.  return v3 @kind wide;
}
procedure `org.c.a.a` `a`(`org.c.a.b.n` v2 @kind this, `org.c.a.f` v3 @kind object) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0788.  if v3 != 0 then goto L3f0794;
  #L3f078c.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f0792.  v3:= temp @kind object;
  #L3f0794.  call temp:= `a`(v2) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f079a.  v0:= temp @kind object;
  #L3f079c.  if v3 != v0 then goto L3f07a2;
  #L3f07a0.  return v2 @kind object;
  #L3f07a2.  v0:= v2.`org.c.a.b.n.e` @type ^`org.c.a.k` @kind object;
  #L3f07a6.  call temp:= `N`(v2) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f07ac.  v1:= temp;
  #L3f07ae.  call temp:= `a`(v3, v0, v1) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;Lorg/c/a/t;I)Lorg/c/a/b/n;` @kind static;
  #L3f07b4.  v3:= temp @kind object;
  #L3f07b6.  return v3 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.b.n` v1 @kind this) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0944.  call temp:= `L`(v1) @signature `Lorg/c/a/b/n;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f094a.  v0:= temp @kind object;
  #L3f094c.  if v0 == 0 then goto L3f095a;
  #L3f0950.  call temp:= `a`(v0) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f0956.  v0:= temp @kind object;
  #L3f0958.  return v0 @kind object;
  #L3f095a.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f095e.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.b.n` v11 @kind this, `org.c.a.b.a$a` v12 @kind object) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3f0a0c.  call temp:= `M`(v11) @signature `Lorg/c/a/b/n;.M:()Ljava/lang/Object;` @kind virtual;
  #L3f0a12.  v0:= temp @kind object;
  #L3f0a14.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L3f0a18.  v1:= 0I;
  #L3f0a1a.  v1:= v0[v1] @kind object;
  #L3f0a1e.  v8:= v1 @kind object;
  #L3f0a20.  v8:= (`org.c.a.b.w`) v8 @kind object;
  #L3f0a24.  v1:= 1I;
  #L3f0a26.  v1:= v0[v1] @kind object;
  #L3f0a2a.  v9:= v1 @kind object;
  #L3f0a2c.  v9:= (`org.c.a.b.t`) v9 @kind object;
  #L3f0a30.  v1:= 2I;
  #L3f0a32.  v0:= v0[v1] @kind object;
  #L3f0a36.  v0:= (`org.c.a.k`) v0 @kind object;
  #L3f0a3a.  call temp:= `c`(v0) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L3f0a40.  v1:= temp @kind wide;
  #L3f0a42.  v11.`org.c.a.b.n.f` @type ^`long` := v1 @kind wide;
  #L3f0a46.  v11.`org.c.a.b.n.c` @type ^`org.c.a.b.w` := v8 @kind object;
  #L3f0a4a.  v11.`org.c.a.b.n.d` @type ^`org.c.a.b.t` := v9 @kind object;
  #L3f0a4e.  v11.`org.c.a.b.n.e` @type ^`org.c.a.k` := v0 @kind object;
  #L3f0a52.  call temp:= `L`(v11) @signature `Lorg/c/a/b/n;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f0a58.  v0:= temp @kind object;
  #L3f0a5a.  if v0 == 0 then goto L3f0a60;
  #L3f0a5e.  return @kind void;
  #L3f0a60.  call temp:= `N`(v8) @signature `Lorg/c/a/b/w;.N:()I` @kind virtual;
  #L3f0a66.  v0:= temp;
  #L3f0a68.  call temp:= `N`(v9) @signature `Lorg/c/a/b/t;.N:()I` @kind virtual;
  #L3f0a6e.  v1:= temp;
  #L3f0a70.  if v0 == v1 then goto L3f0a80;
  #L3f0a74.  v0:= new `java.lang.IllegalArgumentException`;
  #L3f0a78.  call `<init>`(v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L3f0a7e.  throw v0;
  #L3f0a80.  v0:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0a84.  v2:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0a88.  call temp:= `a`(v11, v2) @signature `Lorg/c/a/b/n;.a:(J)J` @kind virtual;
  #L3f0a8e.  v2:= temp @kind wide;
  #L3f0a90.  v4:= v0 - v2 @kind long;
  #L3f0a94.  v11.`org.c.a.b.n.g` @type ^`long` := v4 @kind wide;
  #L3f0a98.  call `a`(v12, v9) @signature `Lorg/c/a/b/a$a;.a:(Lorg/c/a/a;)V` @kind virtual;
  #L3f0a9e.  call temp:= `e`(v9) @signature `Lorg/c/a/b/t;.e:()Lorg/c/a/c;` @kind virtual;
  #L3f0aa4.  v0:= temp @kind object;
  #L3f0aa6.  v1:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0aaa.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f0ab0.  v0:= temp;
  #L3f0ab2.  if v0 != 0 then goto L3f0c18;
  #L3f0ab6.  v6:= new `org.c.a.b.n$a`;
  #L3f0aba.  call temp:= `d`(v8) @signature `Lorg/c/a/b/w;.d:()Lorg/c/a/c;` @kind virtual;
  #L3f0ac0.  v2:= temp @kind object;
  #L3f0ac2.  v3:= v12.`org.c.a.b.a$a.m` @type ^`org.c.a.c` @kind object;
  #L3f0ac6.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0aca.  v0:= v6 @kind object;
  #L3f0acc.  v1:= v11 @kind object;
  #L3f0ace.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0ad4.  v12.`org.c.a.b.a$a.m` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0ad8.  v6:= new `org.c.a.b.n$a`;
  #L3f0adc.  call temp:= `e`(v8) @signature `Lorg/c/a/b/w;.e:()Lorg/c/a/c;` @kind virtual;
  #L3f0ae2.  v2:= temp @kind object;
  #L3f0ae4.  v3:= v12.`org.c.a.b.a$a.n` @type ^`org.c.a.c` @kind object;
  #L3f0ae8.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0aec.  v0:= v6 @kind object;
  #L3f0aee.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0af4.  v12.`org.c.a.b.a$a.n` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0af8.  v6:= new `org.c.a.b.n$a`;
  #L3f0afc.  call temp:= `g`(v8) @signature `Lorg/c/a/b/w;.g:()Lorg/c/a/c;` @kind virtual;
  #L3f0b02.  v2:= temp @kind object;
  #L3f0b04.  v3:= v12.`org.c.a.b.a$a.o` @type ^`org.c.a.c` @kind object;
  #L3f0b08.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0b0c.  v0:= v6 @kind object;
  #L3f0b0e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0b14.  v12.`org.c.a.b.a$a.o` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0b18.  v6:= new `org.c.a.b.n$a`;
  #L3f0b1c.  call temp:= `h`(v8) @signature `Lorg/c/a/b/w;.h:()Lorg/c/a/c;` @kind virtual;
  #L3f0b22.  v2:= temp @kind object;
  #L3f0b24.  v3:= v12.`org.c.a.b.a$a.p` @type ^`org.c.a.c` @kind object;
  #L3f0b28.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0b2c.  v0:= v6 @kind object;
  #L3f0b2e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0b34.  v12.`org.c.a.b.a$a.p` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0b38.  v6:= new `org.c.a.b.n$a`;
  #L3f0b3c.  call temp:= `j`(v8) @signature `Lorg/c/a/b/w;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f0b42.  v2:= temp @kind object;
  #L3f0b44.  v3:= v12.`org.c.a.b.a$a.q` @type ^`org.c.a.c` @kind object;
  #L3f0b48.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0b4c.  v0:= v6 @kind object;
  #L3f0b4e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0b54.  v12.`org.c.a.b.a$a.q` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0b58.  v6:= new `org.c.a.b.n$a`;
  #L3f0b5c.  call temp:= `k`(v8) @signature `Lorg/c/a/b/w;.k:()Lorg/c/a/c;` @kind virtual;
  #L3f0b62.  v2:= temp @kind object;
  #L3f0b64.  v3:= v12.`org.c.a.b.a$a.r` @type ^`org.c.a.c` @kind object;
  #L3f0b68.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0b6c.  v0:= v6 @kind object;
  #L3f0b6e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0b74.  v12.`org.c.a.b.a$a.r` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0b78.  v6:= new `org.c.a.b.n$a`;
  #L3f0b7c.  call temp:= `m`(v8) @signature `Lorg/c/a/b/w;.m:()Lorg/c/a/c;` @kind virtual;
  #L3f0b82.  v2:= temp @kind object;
  #L3f0b84.  v3:= v12.`org.c.a.b.a$a.s` @type ^`org.c.a.c` @kind object;
  #L3f0b88.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0b8c.  v0:= v6 @kind object;
  #L3f0b8e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0b94.  v12.`org.c.a.b.a$a.s` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0b98.  v6:= new `org.c.a.b.n$a`;
  #L3f0b9c.  call temp:= `p`(v8) @signature `Lorg/c/a/b/w;.p:()Lorg/c/a/c;` @kind virtual;
  #L3f0ba2.  v2:= temp @kind object;
  #L3f0ba4.  v3:= v12.`org.c.a.b.a$a.u` @type ^`org.c.a.c` @kind object;
  #L3f0ba8.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0bac.  v0:= v6 @kind object;
  #L3f0bae.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0bb4.  v12.`org.c.a.b.a$a.u` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0bb8.  v6:= new `org.c.a.b.n$a`;
  #L3f0bbc.  call temp:= `n`(v8) @signature `Lorg/c/a/b/w;.n:()Lorg/c/a/c;` @kind virtual;
  #L3f0bc2.  v2:= temp @kind object;
  #L3f0bc4.  v3:= v12.`org.c.a.b.a$a.t` @type ^`org.c.a.c` @kind object;
  #L3f0bc8.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0bcc.  v0:= v6 @kind object;
  #L3f0bce.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0bd4.  v12.`org.c.a.b.a$a.t` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0bd8.  v6:= new `org.c.a.b.n$a`;
  #L3f0bdc.  call temp:= `q`(v8) @signature `Lorg/c/a/b/w;.q:()Lorg/c/a/c;` @kind virtual;
  #L3f0be2.  v2:= temp @kind object;
  #L3f0be4.  v3:= v12.`org.c.a.b.a$a.v` @type ^`org.c.a.c` @kind object;
  #L3f0be8.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0bec.  v0:= v6 @kind object;
  #L3f0bee.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0bf4.  v12.`org.c.a.b.a$a.v` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0bf8.  v6:= new `org.c.a.b.n$a`;
  #L3f0bfc.  call temp:= `r`(v8) @signature `Lorg/c/a/b/w;.r:()Lorg/c/a/c;` @kind virtual;
  #L3f0c02.  v2:= temp @kind object;
  #L3f0c04.  v3:= v12.`org.c.a.b.a$a.w` @type ^`org.c.a.c` @kind object;
  #L3f0c08.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0c0c.  v0:= v6 @kind object;
  #L3f0c0e.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0c14.  v12.`org.c.a.b.a$a.w` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0c18.  v6:= new `org.c.a.b.n$a`;
  #L3f0c1c.  call temp:= `K`(v8) @signature `Lorg/c/a/b/w;.K:()Lorg/c/a/c;` @kind virtual;
  #L3f0c22.  v2:= temp @kind object;
  #L3f0c24.  v3:= v12.`org.c.a.b.a$a.I` @type ^`org.c.a.c` @kind object;
  #L3f0c28.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0c2c.  v0:= v6 @kind object;
  #L3f0c2e.  v1:= v11 @kind object;
  #L3f0c30.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0c36.  v12.`org.c.a.b.a$a.I` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0c3a.  v6:= new `org.c.a.b.n$b`;
  #L3f0c3e.  call temp:= `E`(v8) @signature `Lorg/c/a/b/w;.E:()Lorg/c/a/c;` @kind virtual;
  #L3f0c44.  v2:= temp @kind object;
  #L3f0c46.  v3:= v12.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3f0c4a.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0c4e.  v0:= v6 @kind object;
  #L3f0c50.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0c56.  v12.`org.c.a.b.a$a.E` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0c5a.  v0:= v12.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3f0c5e.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f0c64.  v0:= temp @kind object;
  #L3f0c66.  v12.`org.c.a.b.a$a.j` @type ^`org.c.a.g` := v0 @kind object;
  #L3f0c6a.  v7:= new `org.c.a.b.n$b`;
  #L3f0c6e.  call temp:= `F`(v8) @signature `Lorg/c/a/b/w;.F:()Lorg/c/a/c;` @kind virtual;
  #L3f0c74.  v2:= temp @kind object;
  #L3f0c76.  v3:= v12.`org.c.a.b.a$a.F` @type ^`org.c.a.c` @kind object;
  #L3f0c7a.  v4:= v12.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f0c7e.  v5:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0c82.  v0:= v7 @kind object;
  #L3f0c84.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;J)V` @kind direct;
  #L3f0c8a.  v12.`org.c.a.b.a$a.F` @type ^`org.c.a.c` := v7 @kind object;
  #L3f0c8e.  v6:= new `org.c.a.b.n$b`;
  #L3f0c92.  call temp:= `I`(v8) @signature `Lorg/c/a/b/w;.I:()Lorg/c/a/c;` @kind virtual;
  #L3f0c98.  v2:= temp @kind object;
  #L3f0c9a.  v3:= v12.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3f0c9e.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0ca2.  v0:= v6 @kind object;
  #L3f0ca4.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0caa.  v12.`org.c.a.b.a$a.H` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0cae.  v0:= v12.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3f0cb2.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f0cb8.  v0:= temp @kind object;
  #L3f0cba.  v12.`org.c.a.b.a$a.k` @type ^`org.c.a.g` := v0 @kind object;
  #L3f0cbe.  v10:= new `org.c.a.b.n$b`;
  #L3f0cc2.  call temp:= `G`(v8) @signature `Lorg/c/a/b/w;.G:()Lorg/c/a/c;` @kind virtual;
  #L3f0cc8.  v2:= temp @kind object;
  #L3f0cca.  v3:= v12.`org.c.a.b.a$a.G` @type ^`org.c.a.c` @kind object;
  #L3f0cce.  v4:= v12.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f0cd2.  v5:= v12.`org.c.a.b.a$a.k` @type ^`org.c.a.g` @kind object;
  #L3f0cd6.  v6:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0cda.  v0:= v10 @kind object;
  #L3f0cdc.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/g;J)V` @kind direct;
  #L3f0ce2.  v12.`org.c.a.b.a$a.G` @type ^`org.c.a.c` := v10 @kind object;
  #L3f0ce6.  v10:= new `org.c.a.b.n$b`;
  #L3f0cea.  call temp:= `C`(v8) @signature `Lorg/c/a/b/w;.C:()Lorg/c/a/c;` @kind virtual;
  #L3f0cf0.  v2:= temp @kind object;
  #L3f0cf2.  v3:= v12.`org.c.a.b.a$a.D` @type ^`org.c.a.c` @kind object;
  #L3f0cf6.  v4:= 0I;
  #L3f0cf8.  v5:= v12.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f0cfc.  v6:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0d00.  v0:= v10 @kind object;
  #L3f0d02.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/g;J)V` @kind direct;
  #L3f0d08.  v12.`org.c.a.b.a$a.D` @type ^`org.c.a.c` := v10 @kind object;
  #L3f0d0c.  v0:= v12.`org.c.a.b.a$a.D` @type ^`org.c.a.c` @kind object;
  #L3f0d10.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f0d16.  v0:= temp @kind object;
  #L3f0d18.  v12.`org.c.a.b.a$a.i` @type ^`org.c.a.g` := v0 @kind object;
  #L3f0d1c.  v10:= new `org.c.a.b.n$b`;
  #L3f0d20.  call temp:= `z`(v8) @signature `Lorg/c/a/b/w;.z:()Lorg/c/a/c;` @kind virtual;
  #L3f0d26.  v2:= temp @kind object;
  #L3f0d28.  v3:= v12.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3f0d2c.  v5:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0d30.  v7:= 1I;
  #L3f0d32.  v0:= v10 @kind object;
  #L3f0d34.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f0d3a.  v12.`org.c.a.b.a$a.B` @type ^`org.c.a.c` := v10 @kind object;
  #L3f0d3e.  v0:= v12.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3f0d42.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f0d48.  v0:= temp @kind object;
  #L3f0d4a.  v12.`org.c.a.b.a$a.h` @type ^`org.c.a.g` := v0 @kind object;
  #L3f0d4e.  v10:= new `org.c.a.b.n$b`;
  #L3f0d52.  call temp:= `A`(v8) @signature `Lorg/c/a/b/w;.A:()Lorg/c/a/c;` @kind virtual;
  #L3f0d58.  v2:= temp @kind object;
  #L3f0d5a.  v3:= v12.`org.c.a.b.a$a.C` @type ^`org.c.a.c` @kind object;
  #L3f0d5e.  v4:= v12.`org.c.a.b.a$a.h` @type ^`org.c.a.g` @kind object;
  #L3f0d62.  v5:= v12.`org.c.a.b.a$a.k` @type ^`org.c.a.g` @kind object;
  #L3f0d66.  v6:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0d6a.  v0:= v10 @kind object;
  #L3f0d6c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/g;J)V` @kind direct;
  #L3f0d72.  v12.`org.c.a.b.a$a.C` @type ^`org.c.a.c` := v10 @kind object;
  #L3f0d76.  call temp:= `E`(v9) @signature `Lorg/c/a/b/t;.E:()Lorg/c/a/c;` @kind virtual;
  #L3f0d7c.  v0:= temp @kind object;
  #L3f0d7e.  v1:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0d82.  call temp:= `e`(v0, v1) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3f0d88.  v5:= temp @kind wide;
  #L3f0d8a.  v10:= new `org.c.a.b.n$a`;
  #L3f0d8e.  call temp:= `v`(v8) @signature `Lorg/c/a/b/w;.v:()Lorg/c/a/c;` @kind virtual;
  #L3f0d94.  v2:= temp @kind object;
  #L3f0d96.  v3:= v12.`org.c.a.b.a$a.z` @type ^`org.c.a.c` @kind object;
  #L3f0d9a.  v4:= v12.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f0d9e.  v7:= 0I;
  #L3f0da0.  v0:= v10 @kind object;
  #L3f0da2.  v1:= v11 @kind object;
  #L3f0da4.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f0daa.  v12.`org.c.a.b.a$a.z` @type ^`org.c.a.c` := v10 @kind object;
  #L3f0dae.  call temp:= `z`(v9) @signature `Lorg/c/a/b/t;.z:()Lorg/c/a/c;` @kind virtual;
  #L3f0db4.  v0:= temp @kind object;
  #L3f0db6.  v1:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0dba.  call temp:= `e`(v0, v1) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3f0dc0.  v5:= temp @kind wide;
  #L3f0dc2.  v9:= new `org.c.a.b.n$a`;
  #L3f0dc6.  call temp:= `x`(v8) @signature `Lorg/c/a/b/w;.x:()Lorg/c/a/c;` @kind virtual;
  #L3f0dcc.  v2:= temp @kind object;
  #L3f0dce.  v3:= v12.`org.c.a.b.a$a.A` @type ^`org.c.a.c` @kind object;
  #L3f0dd2.  v4:= v12.`org.c.a.b.a$a.h` @type ^`org.c.a.g` @kind object;
  #L3f0dd6.  v7:= 1I;
  #L3f0dd8.  v0:= v9 @kind object;
  #L3f0dda.  v1:= v11 @kind object;
  #L3f0ddc.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f0de2.  v12.`org.c.a.b.a$a.A` @type ^`org.c.a.c` := v9 @kind object;
  #L3f0de6.  v6:= new `org.c.a.b.n$a`;
  #L3f0dea.  call temp:= `u`(v8) @signature `Lorg/c/a/b/w;.u:()Lorg/c/a/c;` @kind virtual;
  #L3f0df0.  v2:= temp @kind object;
  #L3f0df2.  v3:= v12.`org.c.a.b.a$a.y` @type ^`org.c.a.c` @kind object;
  #L3f0df6.  v4:= v11.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0dfa.  v0:= v6 @kind object;
  #L3f0dfc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @kind direct;
  #L3f0e02.  v0:= v12.`org.c.a.b.a$a.i` @type ^`org.c.a.g` @kind object;
  #L3f0e06.  v6.`org.c.a.b.n$a.f` @type ^`org.c.a.g` := v0 @kind object;
  #L3f0e0a.  v12.`org.c.a.b.a$a.y` @type ^`org.c.a.c` := v6 @kind object;
  #L3f0e0e.  return @kind void;
}
procedure `long` `b`(`org.c.a.b.n` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/n;.b:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f0684.  v0:= v2.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f0688.  v1:= v2.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f068c.  call temp:= `a`(v3, v0, v1) @signature `Lorg/c/a/b/n;.a:(JLorg/c/a/a;Lorg/c/a/a;)J` @kind static;
  #L3f0692.  v3:= temp @kind wide;
  #L3f0694.  return v3 @kind wide;
}
procedure `org.c.a.a` `b`(`org.c.a.b.n` v1 @kind this) @signature `Lorg/c/a/b/n;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f07c8.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f07cc.  call temp:= `a`(v1, v0) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @kind virtual;
  #L3f07d2.  v0:= temp @kind object;
  #L3f07d4.  return v0 @kind object;
}
procedure `long` `c`(`org.c.a.b.n` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/n;.c:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f0740.  v0:= v2.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f0744.  v1:= v2.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f0748.  call temp:= `b`(v3, v0, v1) @signature `Lorg/c/a/b/n;.b:(JLorg/c/a/a;Lorg/c/a/a;)J` @kind static;
  #L3f074e.  v3:= temp @kind wide;
  #L3f0750.  return v3 @kind wide;
}
procedure `long` `d`(`org.c.a.b.n` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/n;.d:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f0764.  v0:= v2.`org.c.a.b.n.d` @type ^`org.c.a.b.t` @kind object;
  #L3f0768.  v1:= v2.`org.c.a.b.n.c` @type ^`org.c.a.b.w` @kind object;
  #L3f076c.  call temp:= `b`(v3, v0, v1) @signature `Lorg/c/a/b/n;.b:(JLorg/c/a/a;Lorg/c/a/a;)J` @kind static;
  #L3f0772.  v3:= temp @kind wide;
  #L3f0774.  return v3 @kind wide;
}
procedure `boolean` `equals`(`org.c.a.b.n` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/c/a/b/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f0260.  v0:= 1I;
  #L3f0262.  if v7 != v8 then goto L3f0268;
  #L3f0266.  return v0;
  #L3f0268.  v1:= instanceof @variable v8 @type ^`org.c.a.b.n` @kind boolean;
  #L3f026c.  v2:= 0I;
  #L3f026e.  if v1 == 0 then goto L3f02bc;
  #L3f0272.  v8:= (`org.c.a.b.n`) v8 @kind object;
  #L3f0276.  v3:= v7.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f027a.  v5:= v8.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f027e.  v1:= lcmp(v3, v5);
  #L3f0282.  if v1 != 0 then goto L3f02b8;
  #L3f0286.  call temp:= `N`(v7) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f028c.  v1:= temp;
  #L3f028e.  call temp:= `N`(v8) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f0294.  v3:= temp;
  #L3f0296.  if v1 != v3 then goto L3f02b8;
  #L3f029a.  call temp:= `a`(v7) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f02a0.  v1:= temp @kind object;
  #L3f02a2.  call temp:= `a`(v8) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f02a8.  v8:= temp @kind object;
  #L3f02aa.  call temp:= `equals`(v1, v8) @signature `Lorg/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f02b0.  v8:= temp;
  #L3f02b2.  if v8 == 0 then goto L3f02b8;
  #L3f02b6.  goto L3f02ba;
  #L3f02b8.  v0:= 0I;
  #L3f02ba.  return v0;
  #L3f02bc.  return v2;
}
procedure `int` `hashCode`(`org.c.a.b.n` v2 @kind this) @signature `Lorg/c/a/b/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f02f0.  v0:= "GJ" @kind object;
  #L3f02f4.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3f02fa.  v0:= temp;
  #L3f02fc.  v0:= v0 * 11;
  #L3f0300.  call temp:= `a`(v2) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f0306.  v1:= temp @kind object;
  #L3f0308.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/f;.hashCode:()I` @kind virtual;
  #L3f030e.  v1:= temp;
  #L3f0310.  v0:= v0 + v1 @kind int;
  #L3f0312.  call temp:= `N`(v2) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f0318.  v1:= temp;
  #L3f031a.  v0:= v0 + v1 @kind int;
  #L3f031c.  v1:= v2.`org.c.a.b.n.e` @type ^`org.c.a.k` @kind object;
  #L3f0320.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/k;.hashCode:()I` @kind virtual;
  #L3f0326.  v1:= temp;
  #L3f0328.  v0:= v0 + v1 @kind int;
  #L3f032a.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.n` v6 @kind this) @signature `Lorg/c/a/b/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f036c.  v0:= new `java.lang.StringBuffer`;
  #L3f0370.  v1:= 60I;
  #L3f0374.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuffer;.<init>:(I)V` @kind direct;
  #L3f037a.  v1:= "GJChronology" @kind object;
  #L3f037e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f0384.  v1:= 91I;
  #L3f0388.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f038e.  call temp:= `a`(v6) @signature `Lorg/c/a/b/n;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f0394.  v1:= temp @kind object;
  #L3f0396.  call temp:= `e`(v1) @signature `Lorg/c/a/f;.e:()Ljava/lang/String;` @kind virtual;
  #L3f039c.  v1:= temp @kind object;
  #L3f039e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f03a4.  v1:= v6.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f03a8.  v3:= `@@org.c.a.b.n.a` @type ^`org.c.a.k` @kind object;
  #L3f03ac.  call temp:= `c`(v3) @signature `Lorg/c/a/k;.c:()J` @kind virtual;
  #L3f03b2.  v3:= temp @kind wide;
  #L3f03b4.  v5:= lcmp(v1, v3);
  #L3f03b8.  if v5 == 0 then goto L3f041a;
  #L3f03bc.  v1:= ",cutover=" @kind object;
  #L3f03c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f03c6.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:()Lorg/c/a/a;` @kind virtual;
  #L3f03cc.  v1:= temp @kind object;
  #L3f03ce.  call temp:= `v`(v1) @signature `Lorg/c/a/a;.v:()Lorg/c/a/c;` @kind virtual;
  #L3f03d4.  v1:= temp @kind object;
  #L3f03d6.  v2:= v6.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f03da.  call temp:= `i`(v1, v2) @signature `Lorg/c/a/c;.i:(J)J` @kind virtual;
  #L3f03e0.  v1:= temp @kind wide;
  #L3f03e2.  v3:= 0L;
  #L3f03e6.  v5:= lcmp(v1, v3);
  #L3f03ea.  if v5 != 0 then goto L3f03f8;
  #L3f03ee.  call temp:= `b`() @signature `Lorg/c/a/e/j;.b:()Lorg/c/a/e/b;` @kind static;
  #L3f03f4.  v1:= temp @kind object;
  #L3f03f6.  goto L3f0400;
  #L3f03f8.  call temp:= `c`() @signature `Lorg/c/a/e/j;.c:()Lorg/c/a/e/b;` @kind static;
  #L3f03fe.  v1:= temp @kind object;
  #L3f0400.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:()Lorg/c/a/a;` @kind virtual;
  #L3f0406.  v2:= temp @kind object;
  #L3f0408.  call temp:= `a`(v1, v2) @signature `Lorg/c/a/e/b;.a:(Lorg/c/a/a;)Lorg/c/a/e/b;` @kind virtual;
  #L3f040e.  v1:= temp @kind object;
  #L3f0410.  v2:= v6.`org.c.a.b.n.f` @type ^`long` @kind wide;
  #L3f0414.  call `a`(v1, v0, v2) @signature `Lorg/c/a/e/b;.a:(Ljava/lang/StringBuffer;J)V` @kind virtual;
  #L3f041a.  call temp:= `N`(v6) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f0420.  v1:= temp;
  #L3f0422.  v2:= 4I;
  #L3f0424.  if v1 == v2 then goto L3f0440;
  #L3f0428.  v1:= ",mdfw=" @kind object;
  #L3f042c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f0432.  call temp:= `N`(v6) @signature `Lorg/c/a/b/n;.N:()I` @kind virtual;
  #L3f0438.  v1:= temp;
  #L3f043a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(I)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f0440.  v1:= 93I;
  #L3f0444.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(C)Ljava/lang/StringBuffer;` @kind virtual;
  #L3f044a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0450.  v0:= temp @kind object;
  #L3f0452.  return v0 @kind object;
}
