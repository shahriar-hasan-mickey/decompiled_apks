record `org.c.a.b.g` @kind class @AccessFlag  extends `org.c.a.d.i` @kind class {
  `org.c.a.b.c` `org.c.a.b.g.a` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.b.g.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.b.g.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.b.g` v3 @kind this, `org.c.a.b.c` v4 @kind object, `int` v5 ) @signature `Lorg/c/a/b/g;.<init>:(Lorg/c/a/b/c;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3ee990.  call temp:= `r`() @signature `Lorg/c/a/d;.r:()Lorg/c/a/d;` @kind static;
  #L3ee996.  v0:= temp @kind object;
  #L3ee998.  call temp:= `V`(v4) @signature `Lorg/c/a/b/c;.V:()J` @kind virtual;
  #L3ee99e.  v1:= temp @kind wide;
  #L3ee9a0.  call `<init>`(v3, v0, v1) @signature `Lorg/c/a/d/i;.<init>:(Lorg/c/a/d;J)V` @kind direct;
  #L3ee9a6.  v3.`org.c.a.b.g.a` @type ^`org.c.a.b.c` := v4 @kind object;
  #L3ee9aa.  v4:= v3.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee9ae.  call temp:= `S`(v4) @signature `Lorg/c/a/b/c;.S:()I` @kind virtual;
  #L3ee9b4.  v4:= temp;
  #L3ee9b6.  v3.`org.c.a.b.g.c` @type ^`int` := v4;
  #L3ee9ba.  v3.`org.c.a.b.g.d` @type ^`int` := v5;
  #L3ee9be.  return @kind void;
}
procedure `int` `a`(`org.c.a.b.g` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/g;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4d8.  v0:= v1.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee4dc.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/b/c;.b:(J)I` @kind virtual;
  #L3ee4e2.  v2:= temp;
  #L3ee4e4.  return v2;
}
procedure `long` `a`(`org.c.a.b.g` v7 @kind this, `long` v8 , `int` v10 ) @signature `Lorg/c/a/b/g;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ee524.  if v10 != 0 then goto L3ee52a;
  #L3ee528.  return v8 @kind wide;
  #L3ee52a.  v0:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee52e.  call temp:= `h`(v0, v8) @signature `Lorg/c/a/b/c;.h:(J)I` @kind virtual;
  #L3ee534.  v0:= temp;
  #L3ee536.  v0:= (`long`) v0 @kind i2l;
  #L3ee538.  v2:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee53c.  call temp:= `a`(v2, v8) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee542.  v2:= temp;
  #L3ee544.  v3:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee548.  call temp:= `a`(v3, v8, v2) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee54e.  v3:= temp;
  #L3ee550.  v4:= v3 + -1;
  #L3ee554.  v5:= v4 + v10 @kind int;
  #L3ee558.  if v3 <= 0 then goto L3ee59c;
  #L3ee55c.  if v5 >= 0 then goto L3ee59c;
  #L3ee560.  v5:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee564.  v5:= v5 + v10 @kind int;
  #L3ee566.  v5:= (`float`) v5 @kind i2f;
  #L3ee568.  call temp:= `signum`(v5) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L3ee56e.  v5:= temp;
  #L3ee570.  v6:= (`float`) v10 @kind i2f;
  #L3ee572.  call temp:= `signum`(v6) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L3ee578.  v6:= temp;
  #L3ee57a.  v5:= fcmpl(v5, v6);
  #L3ee57e.  if v5 != 0 then goto L3ee58e;
  #L3ee582.  v5:= v2 + -1;
  #L3ee586.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee58a.  v10:= v10 + v6 @kind int;
  #L3ee58c.  goto L3ee598;
  #L3ee58e.  v5:= v2 + 1;
  #L3ee592.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee596.  v10:= v10 - v6 @kind int;
  #L3ee598.  v10:= v10 + v4 @kind int;
  #L3ee59a.  goto L3ee5a0;
  #L3ee59c.  v10:= v5;
  #L3ee59e.  v5:= v2;
  #L3ee5a0.  v4:= 1I;
  #L3ee5a2.  if v10 < 0 then goto L3ee5ba;
  #L3ee5a6.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5aa.  v6:= v10 / v6 @kind int;
  #L3ee5ae.  v5:= v5 + v6 @kind int;
  #L3ee5b0.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5b4.  v10:= v10 %% v6 @kind int;
  #L3ee5b6.  v10:= v10 + v4 @kind int;
  #L3ee5b8.  goto L3ee5ee;
  #L3ee5ba.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5be.  v6:= v10 / v6 @kind int;
  #L3ee5c2.  v5:= v5 + v6 @kind int;
  #L3ee5c4.  v5:= v5 - v4 @kind int;
  #L3ee5c6.  call temp:= `abs`(v10) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L3ee5cc.  v10:= temp;
  #L3ee5ce.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5d2.  v10:= v10 %% v6 @kind int;
  #L3ee5d4.  if v10 != 0 then goto L3ee5dc;
  #L3ee5d8.  v10:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5dc.  v6:= v7.`org.c.a.b.g.c` @type ^`int`;
  #L3ee5e0.  v6:= v6 - v10 @kind int;
  #L3ee5e2.  v10:= v6 + 1;
  #L3ee5e6.  if v10 != v4 then goto L3ee5ee;
  #L3ee5ea.  v5:= v5 + 1;
  #L3ee5ee.  v4:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee5f2.  call temp:= `a`(v4, v8, v2, v3) @signature `Lorg/c/a/b/c;.a:(JII)I` @kind virtual;
  #L3ee5f8.  v8:= temp;
  #L3ee5fa.  v9:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee5fe.  call temp:= `b`(v9, v5, v10) @signature `Lorg/c/a/b/c;.b:(II)I` @kind virtual;
  #L3ee604.  v9:= temp;
  #L3ee606.  if v8 <= v9 then goto L3ee60c;
  #L3ee60a.  v8:= v9;
  #L3ee60c.  v9:= v7.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee610.  call temp:= `a`(v9, v5, v10, v8) @signature `Lorg/c/a/b/c;.a:(III)J` @kind virtual;
  #L3ee616.  v8:= temp @kind wide;
  #L3ee618.  v2:= v8 + v0 @kind long;
  #L3ee61c.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.g` v20 @kind this, `long` v21 , `long` v23 ) @signature `Lorg/c/a/b/g;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L3ee630.  v0:= v20 @kind object;
  #L3ee634.  v1:= v21 @kind wide;
  #L3ee638.  v3:= v23 @kind wide;
  #L3ee63c.  v5:= (`int`) v3 @kind l2i;
  #L3ee63e.  v6:= (`long`) v5 @kind i2l;
  #L3ee640.  v8:= lcmp(v6, v3);
  #L3ee644.  if v8 != 0 then goto L3ee652;
  #L3ee648.  call temp:= `a`(v0, v1, v5) @signature `Lorg/c/a/b/g;.a:(JI)J` @kind virtual;
  #L3ee64e.  v1:= temp @kind wide;
  #L3ee650.  return v1 @kind wide;
  #L3ee652.  v5:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee656.  call temp:= `h`(v5, v1) @signature `Lorg/c/a/b/c;.h:(J)I` @kind virtual;
  #L3ee65c.  v5:= temp;
  #L3ee65e.  v5:= (`long`) v5 @kind i2l;
  #L3ee660.  v7:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee664.  call temp:= `a`(v7, v1) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee66a.  v7:= temp;
  #L3ee66c.  v8:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee670.  call temp:= `a`(v8, v1, v7) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee676.  v8:= temp;
  #L3ee678.  v9:= v8 + -1;
  #L3ee67c.  v9:= (`long`) v9 @kind i2l;
  #L3ee67e.  v11:= v9 + v3 @kind long;
  #L3ee682.  v9:= 0L;
  #L3ee686.  v13:= lcmp(v11, v9);
  #L3ee68a.  if v13 < 0 then goto L3ee6b4;
  #L3ee68e.  v13:= (`long`) v7 @kind i2l;
  #L3ee690.  v15:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee694.  v9:= (`long`) v15 @kind i2l;
  #L3ee696.  v9:= v11 / v9 @kind long;
  #L3ee69a.  v17:= v13 + v9 @kind long;
  #L3ee69e.  v9:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee6a2.  v9:= (`long`) v9 @kind i2l;
  #L3ee6a4.  v11:= v11 %% v9 @kind long;
  #L3ee6a6.  v9:= 1L;
  #L3ee6aa.  v13:= v11 + v9 @kind long;
  #L3ee6ae.  v11:= v17 @kind wide;
  #L3ee6b2.  goto L3ee706;
  #L3ee6b4.  v9:= 1L;
  #L3ee6b8.  v13:= (`long`) v7 @kind i2l;
  #L3ee6ba.  v15:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee6be.  v9:= (`long`) v15 @kind i2l;
  #L3ee6c0.  v9:= v11 / v9 @kind long;
  #L3ee6c4.  v15:= v13 + v9 @kind long;
  #L3ee6c8.  v9:= 1L;
  #L3ee6cc.  v17:= v15 - v9 @kind long;
  #L3ee6d0.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(J)J` @kind static;
  #L3ee6d6.  v9:= temp @kind wide;
  #L3ee6d8.  v11:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee6dc.  v11:= (`long`) v11 @kind i2l;
  #L3ee6de.  v9:= v9 %% v11 @kind long;
  #L3ee6e0.  v9:= (`int`) v9 @kind l2i;
  #L3ee6e2.  if v9 != 0 then goto L3ee6ea;
  #L3ee6e6.  v9:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee6ea.  v10:= v0.`org.c.a.b.g.c` @type ^`int`;
  #L3ee6ee.  v10:= v10 - v9 @kind int;
  #L3ee6f0.  v10:= v10 + 1;
  #L3ee6f4.  v13:= (`long`) v10 @kind i2l;
  #L3ee6f6.  v9:= 1L;
  #L3ee6fa.  v11:= lcmp(v13, v9);
  #L3ee6fe.  if v11 != 0 then goto L3ee6ae;
  #L3ee702.  v11:= v17 + v9 @kind long;
  #L3ee706.  v9:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee70a.  call temp:= `Q`(v9) @signature `Lorg/c/a/b/c;.Q:()I` @kind virtual;
  #L3ee710.  v9:= temp;
  #L3ee712.  v9:= (`long`) v9 @kind i2l;
  #L3ee714.  v15:= lcmp(v11, v9);
  #L3ee718.  if v15 < 0 then goto L3ee768;
  #L3ee71c.  v9:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee720.  call temp:= `R`(v9) @signature `Lorg/c/a/b/c;.R:()I` @kind virtual;
  #L3ee726.  v9:= temp;
  #L3ee728.  v9:= (`long`) v9 @kind i2l;
  #L3ee72a.  v15:= lcmp(v11, v9);
  #L3ee72e.  if v15 <= 0 then goto L3ee734;
  #L3ee732.  goto L3ee768;
  #L3ee734.  v3:= (`int`) v11 @kind l2i;
  #L3ee736.  v4:= (`int`) v13 @kind l2i;
  #L3ee738.  v9:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee73c.  call temp:= `a`(v9, v1, v7, v8) @signature `Lorg/c/a/b/c;.a:(JII)I` @kind virtual;
  #L3ee742.  v1:= temp;
  #L3ee744.  v2:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee748.  call temp:= `b`(v2, v3, v4) @signature `Lorg/c/a/b/c;.b:(II)I` @kind virtual;
  #L3ee74e.  v2:= temp;
  #L3ee750.  if v1 <= v2 then goto L3ee756;
  #L3ee754.  v1:= v2;
  #L3ee756.  v2:= v0.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee75a.  call temp:= `a`(v2, v3, v4, v1) @signature `Lorg/c/a/b/c;.a:(III)J` @kind virtual;
  #L3ee760.  v1:= temp @kind wide;
  #L3ee762.  v3:= v1 + v5 @kind long;
  #L3ee766.  return v3 @kind wide;
  #L3ee768.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ee76c.  v2:= new `java.lang.StringBuilder`;
  #L3ee770.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ee776.  v5:= "Magnitude of add amount is too large: " @kind object;
  #L3ee77a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee780.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ee786.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ee78c.  v2:= temp @kind object;
  #L3ee78e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ee794.  throw v1;
}
procedure `long` `b`(`org.c.a.b.g` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/c/a/b/g;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ee7a8.  v0:= v4.`org.c.a.b.g.c` @type ^`int`;
  #L3ee7ac.  v1:= 1I;
  #L3ee7ae.  call `a`(v4, v7, v1, v0) @signature `Lorg/c/a/d/h;.a:(Lorg/c/a/c;III)V` @kind static;
  #L3ee7b4.  v0:= v4.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee7b8.  call temp:= `a`(v0, v5) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee7be.  v0:= temp;
  #L3ee7c0.  v1:= v4.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee7c4.  call temp:= `b`(v1, v5, v0) @signature `Lorg/c/a/b/c;.b:(JI)I` @kind virtual;
  #L3ee7ca.  v1:= temp;
  #L3ee7cc.  v2:= v4.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee7d0.  call temp:= `b`(v2, v0, v7) @signature `Lorg/c/a/b/c;.b:(II)I` @kind virtual;
  #L3ee7d6.  v2:= temp;
  #L3ee7d8.  if v1 <= v2 then goto L3ee7de;
  #L3ee7dc.  v1:= v2;
  #L3ee7de.  v2:= v4.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee7e2.  call temp:= `a`(v2, v0, v7, v1) @signature `Lorg/c/a/b/c;.a:(III)J` @kind virtual;
  #L3ee7e8.  v0:= temp @kind wide;
  #L3ee7ea.  v7:= v4.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee7ee.  call temp:= `h`(v7, v5) @signature `Lorg/c/a/b/c;.h:(J)I` @kind virtual;
  #L3ee7f4.  v5:= temp;
  #L3ee7f6.  v5:= (`long`) v5 @kind i2l;
  #L3ee7f8.  v2:= v0 + v5 @kind long;
  #L3ee7fc.  return v2 @kind wide;
}
procedure `boolean` `b`(`org.c.a.b.g` v3 @kind this, `long` v4 ) @signature `Lorg/c/a/b/g;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ee47c.  v0:= v3.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee480.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee486.  v0:= temp;
  #L3ee488.  v1:= v3.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee48c.  call temp:= `e`(v1, v0) @signature `Lorg/c/a/b/c;.e:(I)Z` @kind virtual;
  #L3ee492.  v1:= temp;
  #L3ee494.  v2:= 0I;
  #L3ee496.  if v1 == 0 then goto L3ee4b2;
  #L3ee49a.  v1:= v3.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee49e.  call temp:= `a`(v1, v4, v0) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee4a4.  v4:= temp;
  #L3ee4a6.  v5:= v3.`org.c.a.b.g.d` @type ^`int`;
  #L3ee4aa.  if v4 != v5 then goto L3ee4b0;
  #L3ee4ae.  v2:= 1I;
  #L3ee4b0.  return v2;
  #L3ee4b2.  return v2;
}
procedure `long` `c`(`org.c.a.b.g` v10 @kind this, `long` v11 , `long` v13 ) @signature `Lorg/c/a/b/g;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ee810.  v0:= lcmp(v11, v13);
  #L3ee814.  if v0 >= 0 then goto L3ee826;
  #L3ee818.  call temp:= `b`(v10, v13, v11) @signature `Lorg/c/a/b/g;.b:(JJ)I` @kind virtual;
  #L3ee81e.  v11:= temp;
  #L3ee820.  v11:= -v11 @kind int;
  #L3ee822.  v11:= (`long`) v11 @kind i2l;
  #L3ee824.  return v11 @kind wide;
  #L3ee826.  v0:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee82a.  call temp:= `a`(v0, v11) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee830.  v0:= temp;
  #L3ee832.  v1:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee836.  call temp:= `a`(v1, v11, v0) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee83c.  v1:= temp;
  #L3ee83e.  v2:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee842.  call temp:= `a`(v2, v13) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee848.  v2:= temp;
  #L3ee84a.  v3:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee84e.  call temp:= `a`(v3, v13, v2) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee854.  v3:= temp;
  #L3ee856.  v4:= v0 - v2 @kind int;
  #L3ee85a.  v4:= (`long`) v4 @kind i2l;
  #L3ee85c.  v6:= v10.`org.c.a.b.g.c` @type ^`int`;
  #L3ee860.  v6:= (`long`) v6 @kind i2l;
  #L3ee862.  v4:= v4 * v6 @kind long;
  #L3ee866.  v6:= (`long`) v1 @kind i2l;
  #L3ee868.  v8:= v4 + v6 @kind long;
  #L3ee86c.  v4:= (`long`) v3 @kind i2l;
  #L3ee86e.  v6:= v8 - v4 @kind long;
  #L3ee872.  v4:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee876.  call temp:= `a`(v4, v11, v0, v1) @signature `Lorg/c/a/b/c;.a:(JII)I` @kind virtual;
  #L3ee87c.  v4:= temp;
  #L3ee87e.  v5:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee882.  call temp:= `b`(v5, v0, v1) @signature `Lorg/c/a/b/c;.b:(II)I` @kind virtual;
  #L3ee888.  v5:= temp;
  #L3ee88a.  if v4 != v5 then goto L3ee8b2;
  #L3ee88e.  v5:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee892.  call temp:= `a`(v5, v13, v2, v3) @signature `Lorg/c/a/b/c;.a:(JII)I` @kind virtual;
  #L3ee898.  v5:= temp;
  #L3ee89a.  if v5 <= v4 then goto L3ee8b2;
  #L3ee89e.  v5:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee8a2.  call temp:= `u`(v5) @signature `Lorg/c/a/b/c;.u:()Lorg/c/a/c;` @kind virtual;
  #L3ee8a8.  v5:= temp @kind object;
  #L3ee8aa.  call temp:= `b`(v5, v13, v4) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3ee8b0.  v13:= temp @kind wide;
  #L3ee8b2.  v4:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee8b6.  call temp:= `a`(v4, v0, v1) @signature `Lorg/c/a/b/c;.a:(II)J` @kind virtual;
  #L3ee8bc.  v0:= temp @kind wide;
  #L3ee8be.  v4:= v11 - v0 @kind long;
  #L3ee8c2.  v11:= v10.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee8c6.  call temp:= `a`(v11, v2, v3) @signature `Lorg/c/a/b/c;.a:(II)J` @kind virtual;
  #L3ee8cc.  v11:= temp @kind wide;
  #L3ee8ce.  v0:= v13 - v11 @kind long;
  #L3ee8d2.  v11:= lcmp(v4, v0);
  #L3ee8d6.  if v11 >= 0 then goto L3ee8e4;
  #L3ee8da.  v11:= 1L;
  #L3ee8de.  v13:= v6 - v11 @kind long;
  #L3ee8e2.  goto L3ee8e6;
  #L3ee8e4.  v13:= v6 @kind wide;
  #L3ee8e6.  return v13 @kind wide;
}
procedure `long` `d`(`org.c.a.b.g` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/g;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee8f8.  v0:= v2.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee8fc.  call temp:= `a`(v0, v3) @signature `Lorg/c/a/b/c;.a:(J)I` @kind virtual;
  #L3ee902.  v0:= temp;
  #L3ee904.  v1:= v2.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee908.  call temp:= `a`(v1, v3, v0) @signature `Lorg/c/a/b/c;.a:(JI)I` @kind virtual;
  #L3ee90e.  v3:= temp;
  #L3ee910.  v4:= v2.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee914.  call temp:= `a`(v4, v0, v3) @signature `Lorg/c/a/b/c;.a:(II)J` @kind virtual;
  #L3ee91a.  v3:= temp @kind wide;
  #L3ee91c.  return v3 @kind wide;
}
procedure `boolean` `d`(`org.c.a.b.g` v1 @kind this) @signature `Lorg/c/a/b/g;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4c4.  v0:= 0I;
  #L3ee4c6.  return v0;
}
procedure `org.c.a.g` `f`(`org.c.a.b.g` v1 @kind this) @signature `Lorg/c/a/b/g;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee950.  v0:= v1.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee954.  call temp:= `D`(v0) @signature `Lorg/c/a/b/c;.D:()Lorg/c/a/g;` @kind virtual;
  #L3ee95a.  v0:= temp @kind object;
  #L3ee95c.  return v0 @kind object;
}
procedure `org.c.a.g` `g`(`org.c.a.b.g` v1 @kind this) @signature `Lorg/c/a/b/g;.g:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee970.  v0:= v1.`org.c.a.b.g.a` @type ^`org.c.a.b.c` @kind object;
  #L3ee974.  call temp:= `s`(v0) @signature `Lorg/c/a/b/c;.s:()Lorg/c/a/g;` @kind virtual;
  #L3ee97a.  v0:= temp @kind object;
  #L3ee97c.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.b.g` v1 @kind this) @signature `Lorg/c/a/b/g;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee4f8.  v0:= 1I;
  #L3ee4fa.  return v0;
}
procedure `int` `i`(`org.c.a.b.g` v1 @kind this) @signature `Lorg/c/a/b/g;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee50c.  v0:= v1.`org.c.a.b.g.c` @type ^`int`;
  #L3ee510.  return v0;
}
procedure `long` `i`(`org.c.a.b.g` v4 @kind this, `long` v5 ) @signature `Lorg/c/a/b/g;.i:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ee930.  call temp:= `d`(v4, v5) @signature `Lorg/c/a/b/g;.d:(J)J` @kind virtual;
  #L3ee936.  v0:= temp @kind wide;
  #L3ee938.  v2:= v5 - v0 @kind long;
  #L3ee93c.  return v2 @kind wide;
}
