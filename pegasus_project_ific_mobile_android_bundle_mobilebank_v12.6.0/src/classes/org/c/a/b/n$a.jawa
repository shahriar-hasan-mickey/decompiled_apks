record `org.c.a.b.n$a` @kind class @AccessFlag  extends `org.c.a.d.b` @kind class {
  `org.c.a.c` `org.c.a.b.n$a.a` @AccessFlag FINAL;
  `org.c.a.c` `org.c.a.b.n$a.b` @AccessFlag FINAL;
  `long` `org.c.a.b.n$a.c` @AccessFlag FINAL;
  `boolean` `org.c.a.b.n$a.d` @AccessFlag FINAL;
  `org.c.a.g` `org.c.a.b.n$a.e` @AccessFlag PROTECTED;
  `org.c.a.g` `org.c.a.b.n$a.f` @AccessFlag PROTECTED;
  `org.c.a.b.n` `org.c.a.b.n$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.c.a.b.n$a` v7 @kind this, `org.c.a.b.n` v8 @kind object, `org.c.a.c` v9 @kind object, `org.c.a.c` v10 @kind object, `long` v11 ) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3efcf0.  v6:= 0I;
  #L3efcf2.  v0:= v7 @kind object;
  #L3efcf4.  v1:= v8 @kind object;
  #L3efcf6.  v2:= v9 @kind object;
  #L3efcf8.  v3:= v10 @kind object;
  #L3efcfa.  v4:= v11 @kind wide;
  #L3efcfc.  call `<init>`(v0, v1, v2, v3, v4, v6) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;JZ)V` @kind direct;
  #L3efd02.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n$a` v8 @kind this, `org.c.a.b.n` v9 @kind object, `org.c.a.c` v10 @kind object, `org.c.a.c` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;JZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3efd14.  v4:= 0I;
  #L3efd16.  v0:= v8 @kind object;
  #L3efd18.  v1:= v9 @kind object;
  #L3efd1a.  v2:= v10 @kind object;
  #L3efd1c.  v3:= v11 @kind object;
  #L3efd1e.  v5:= v12 @kind wide;
  #L3efd20.  v7:= v14;
  #L3efd22.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3efd28.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n$a` v0 @kind this, `org.c.a.b.n` v1 @kind object, `org.c.a.c` v2 @kind object, `org.c.a.c` v3 @kind object, `org.c.a.g` v4 @kind object, `long` v5 , `boolean` v7 ) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3efd3c.  v0.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` := v1 @kind object;
  #L3efd40.  call temp:= `a`(v3) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3efd46.  v1:= temp @kind object;
  #L3efd48.  call `<init>`(v0, v1) @signature `Lorg/c/a/d/b;.<init>:(Lorg/c/a/d;)V` @kind direct;
  #L3efd4e.  v0.`org.c.a.b.n$a.a` @type ^`org.c.a.c` := v2 @kind object;
  #L3efd52.  v0.`org.c.a.b.n$a.b` @type ^`org.c.a.c` := v3 @kind object;
  #L3efd56.  v0.`org.c.a.b.n$a.c` @type ^`long` := v5 @kind wide;
  #L3efd5a.  v0.`org.c.a.b.n$a.d` @type ^`boolean` := v7 @kind boolean;
  #L3efd5e.  call temp:= `e`(v3) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3efd64.  v1:= temp @kind object;
  #L3efd66.  v0.`org.c.a.b.n$a.e` @type ^`org.c.a.g` := v1 @kind object;
  #L3efd6a.  if v4 != 0 then goto L3efd82;
  #L3efd6e.  call temp:= `f`(v3) @signature `Lorg/c/a/c;.f:()Lorg/c/a/g;` @kind virtual;
  #L3efd74.  v4:= temp @kind object;
  #L3efd76.  if v4 != 0 then goto L3efd82;
  #L3efd7a.  call temp:= `f`(v2) @signature `Lorg/c/a/c;.f:()Lorg/c/a/g;` @kind virtual;
  #L3efd80.  v4:= temp @kind object;
  #L3efd82.  v0.`org.c.a.b.n$a.f` @type ^`org.c.a.g` := v4 @kind object;
  #L3efd86.  return @kind void;
}
procedure `int` `a`(`org.c.a.b.n$a` v3 @kind this, `long` v4 ) @signature `Lorg/c/a/b/n$a;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef7c8.  v0:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef7cc.  v2:= lcmp(v4, v0);
  #L3ef7d0.  if v2 < 0 then goto L3ef7e2;
  #L3ef7d4.  v0:= v3.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef7d8.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3ef7de.  v4:= temp;
  #L3ef7e0.  return v4;
  #L3ef7e2.  v0:= v3.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef7e6.  call temp:= `a`(v0, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3ef7ec.  v4:= temp;
  #L3ef7ee.  return v4;
}
procedure `int` `a`(`org.c.a.b.n$a` v2 @kind this, `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/b/n$a;.a:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ef794.  v0:= v2.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef798.  call temp:= `a`(v0, v3) @signature `Lorg/c/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3ef79e.  v0:= temp;
  #L3ef7a0.  v1:= v2.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef7a4.  call temp:= `a`(v1, v3) @signature `Lorg/c/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3ef7aa.  v3:= temp;
  #L3ef7ac.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ef7b2.  v3:= temp;
  #L3ef7b4.  return v3;
}
procedure `long` `a`(`org.c.a.b.n$a` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/c/a/b/n$a;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef980.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef984.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3ef98a.  v2:= temp @kind wide;
  #L3ef98c.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.n$a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/b/n$a;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efa38.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efa3c.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3efa42.  v2:= temp @kind wide;
  #L3efa44.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.n$a` v3 @kind this, `long` v4 , `java.lang.String` v6 @kind object, `java.util.Locale` v7 @kind object) @signature `Lorg/c/a/b/n$a;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef9a0.  v0:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef9a4.  v2:= lcmp(v4, v0);
  #L3ef9a8.  if v2 < 0 then goto L3ef9ea;
  #L3ef9ac.  v0:= v3.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef9b0.  call temp:= `a`(v0, v4, v6, v7) @signature `Lorg/c/a/c;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3ef9b6.  v4:= temp @kind wide;
  #L3ef9b8.  v6:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef9bc.  v0:= lcmp(v4, v6);
  #L3ef9c0.  if v0 >= 0 then goto L3efa26;
  #L3ef9c4.  v6:= v3.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3ef9c8.  call temp:= `a`(v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3ef9ce.  v6:= temp @kind wide;
  #L3ef9d0.  v0:= v4 + v6 @kind long;
  #L3ef9d4.  v6:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef9d8.  v2:= lcmp(v0, v6);
  #L3ef9dc.  if v2 >= 0 then goto L3efa26;
  #L3ef9e0.  call temp:= `k`(v3, v4) @signature `Lorg/c/a/b/n$a;.k:(J)J` @kind virtual;
  #L3ef9e6.  v4:= temp @kind wide;
  #L3ef9e8.  goto L3efa26;
  #L3ef9ea.  v0:= v3.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef9ee.  call temp:= `a`(v0, v4, v6, v7) @signature `Lorg/c/a/c;.a:(JLjava/lang/String;Ljava/util/Locale;)J` @kind virtual;
  #L3ef9f4.  v4:= temp @kind wide;
  #L3ef9f6.  v6:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef9fa.  v0:= lcmp(v4, v6);
  #L3ef9fe.  if v0 < 0 then goto L3efa26;
  #L3efa02.  v6:= v3.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efa06.  call temp:= `a`(v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efa0c.  v6:= temp @kind wide;
  #L3efa0e.  v0:= v4 - v6 @kind long;
  #L3efa12.  v6:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efa16.  v2:= lcmp(v0, v6);
  #L3efa1a.  if v2 < 0 then goto L3efa26;
  #L3efa1e.  call temp:= `j`(v3, v4) @signature `Lorg/c/a/b/n$a;.j:(J)J` @kind virtual;
  #L3efa24.  v4:= temp @kind wide;
  #L3efa26.  return v4 @kind wide;
}
procedure `java.lang.String` `a`(`org.c.a.b.n$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/b/n$a;.a:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8d0.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef8d4.  call temp:= `a`(v0, v2, v3) @signature `Lorg/c/a/c;.a:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef8da.  v2:= temp @kind object;
  #L3ef8dc.  return v2 @kind object;
}
procedure `java.lang.String` `a`(`org.c.a.b.n$a` v3 @kind this, `long` v4 , `java.util.Locale` v6 @kind object) @signature `Lorg/c/a/b/n$a;.a:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef8f0.  v0:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef8f4.  v2:= lcmp(v4, v0);
  #L3ef8f8.  if v2 < 0 then goto L3ef90a;
  #L3ef8fc.  v0:= v3.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef900.  call temp:= `a`(v0, v4, v6) @signature `Lorg/c/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef906.  v4:= temp @kind object;
  #L3ef908.  return v4 @kind object;
  #L3ef90a.  v0:= v3.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef90e.  call temp:= `a`(v0, v4, v6) @signature `Lorg/c/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef914.  v4:= temp @kind object;
  #L3ef916.  return v4 @kind object;
}
procedure `int` `b`(`org.c.a.b.n$a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/b/n$a;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef800.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef804.  call temp:= `b`(v0, v2, v4) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3ef80a.  v2:= temp;
  #L3ef80c.  return v2;
}
procedure `long` `b`(`org.c.a.b.n$a` v6 @kind this, `long` v7 , `int` v9 ) @signature `Lorg/c/a/b/n$a;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3efa58.  v0:= v6.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efa5c.  v2:= lcmp(v7, v0);
  #L3efa60.  v0:= 0I;
  #L3efa62.  if v2 < 0 then goto L3eface;
  #L3efa66.  v1:= v6.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efa6a.  call temp:= `b`(v1, v7, v9) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3efa70.  v7:= temp @kind wide;
  #L3efa72.  v1:= v6.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efa76.  v3:= lcmp(v7, v1);
  #L3efa7a.  if v3 >= 0 then goto L3efb36;
  #L3efa7e.  v1:= v6.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efa82.  call temp:= `a`(v1) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efa88.  v1:= temp @kind wide;
  #L3efa8a.  v3:= v7 + v1 @kind long;
  #L3efa8e.  v1:= v6.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efa92.  v5:= lcmp(v3, v1);
  #L3efa96.  if v5 >= 0 then goto L3efaa2;
  #L3efa9a.  call temp:= `k`(v6, v7) @signature `Lorg/c/a/b/n$a;.k:(J)J` @kind virtual;
  #L3efaa0.  v7:= temp @kind wide;
  #L3efaa2.  call temp:= `a`(v6, v7) @signature `Lorg/c/a/b/n$a;.a:(J)I` @kind virtual;
  #L3efaa8.  v1:= temp;
  #L3efaaa.  if v1 == v9 then goto L3efb36;
  #L3efaae.  v7:= new `org.c.a.i`;
  #L3efab2.  v8:= v6.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efab6.  call temp:= `a`(v8) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3efabc.  v8:= temp @kind object;
  #L3efabe.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3efac4.  v9:= temp @kind object;
  #L3efac6.  call `<init>`(v7, v8, v9, v0, v0) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3efacc.  throw v7;
  #L3eface.  v1:= v6.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3efad2.  call temp:= `b`(v1, v7, v9) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3efad8.  v7:= temp @kind wide;
  #L3efada.  v1:= v6.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efade.  v3:= lcmp(v7, v1);
  #L3efae2.  if v3 < 0 then goto L3efb36;
  #L3efae6.  v1:= v6.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efaea.  call temp:= `a`(v1) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efaf0.  v1:= temp @kind wide;
  #L3efaf2.  v3:= v7 - v1 @kind long;
  #L3efaf6.  v1:= v6.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efafa.  v5:= lcmp(v3, v1);
  #L3efafe.  if v5 < 0 then goto L3efb0a;
  #L3efb02.  call temp:= `j`(v6, v7) @signature `Lorg/c/a/b/n$a;.j:(J)J` @kind virtual;
  #L3efb08.  v7:= temp @kind wide;
  #L3efb0a.  call temp:= `a`(v6, v7) @signature `Lorg/c/a/b/n$a;.a:(J)I` @kind virtual;
  #L3efb10.  v1:= temp;
  #L3efb12.  if v1 == v9 then goto L3efb36;
  #L3efb16.  v7:= new `org.c.a.i`;
  #L3efb1a.  v8:= v6.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3efb1e.  call temp:= `a`(v8) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3efb24.  v8:= temp @kind object;
  #L3efb26.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3efb2c.  v9:= temp @kind object;
  #L3efb2e.  call `<init>`(v7, v8, v9, v0, v0) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3efb34.  throw v7;
  #L3efb36.  return v7 @kind wide;
}
procedure `java.lang.String` `b`(`org.c.a.b.n$a` v1 @kind this, `int` v2 , `java.util.Locale` v3 @kind object) @signature `Lorg/c/a/b/n$a;.b:(ILjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef928.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef92c.  call temp:= `b`(v0, v2, v3) @signature `Lorg/c/a/c;.b:(ILjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef932.  v2:= temp @kind object;
  #L3ef934.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`org.c.a.b.n$a` v3 @kind this, `long` v4 , `java.util.Locale` v6 @kind object) @signature `Lorg/c/a/b/n$a;.b:(JLjava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef948.  v0:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef94c.  v2:= lcmp(v4, v0);
  #L3ef950.  if v2 < 0 then goto L3ef962;
  #L3ef954.  v0:= v3.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef958.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef95e.  v4:= temp @kind object;
  #L3ef960.  return v4 @kind object;
  #L3ef962.  v0:= v3.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef966.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3ef96c.  v4:= temp @kind object;
  #L3ef96e.  return v4 @kind object;
}
procedure `boolean` `b`(`org.c.a.b.n$a` v3 @kind this, `long` v4 ) @signature `Lorg/c/a/b/n$a;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef748.  v0:= v3.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef74c.  v2:= lcmp(v4, v0);
  #L3ef750.  if v2 < 0 then goto L3ef762;
  #L3ef754.  v0:= v3.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef758.  call temp:= `b`(v0, v4) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L3ef75e.  v4:= temp;
  #L3ef760.  return v4;
  #L3ef762.  v0:= v3.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef766.  call temp:= `b`(v0, v4) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L3ef76c.  v4:= temp;
  #L3ef76e.  return v4;
}
procedure `int` `c`(`org.c.a.b.n$a` v4 @kind this, `long` v5 ) @signature `Lorg/c/a/b/n$a;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ef820.  v0:= v4.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef824.  v2:= lcmp(v5, v0);
  #L3ef828.  if v2 < 0 then goto L3ef83a;
  #L3ef82c.  v0:= v4.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef830.  call temp:= `c`(v0, v5) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3ef836.  v5:= temp;
  #L3ef838.  return v5;
  #L3ef83a.  v0:= v4.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef83e.  call temp:= `c`(v0, v5) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3ef844.  v0:= temp;
  #L3ef846.  v1:= v4.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef84a.  call temp:= `b`(v1, v5, v0) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3ef850.  v5:= temp @kind wide;
  #L3ef852.  v1:= v4.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef856.  v3:= lcmp(v5, v1);
  #L3ef85a.  if v3 < 0 then goto L3ef87c;
  #L3ef85e.  v5:= v4.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef862.  v6:= v4.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef866.  v0:= v4.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3ef86a.  v2:= -1I;
  #L3ef86c.  call temp:= `a`(v6, v0, v2) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3ef872.  v0:= temp @kind wide;
  #L3ef874.  call temp:= `a`(v5, v0) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3ef87a.  v0:= temp;
  #L3ef87c.  return v0;
}
procedure `long` `c`(`org.c.a.b.n$a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/b/n$a;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efb48.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efb4c.  call temp:= `c`(v0, v2, v4) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3efb52.  v2:= temp @kind wide;
  #L3efb54.  return v2 @kind wide;
}
procedure `long` `d`(`org.c.a.b.n$a` v5 @kind this, `long` v6 ) @signature `Lorg/c/a/b/n$a;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3efb68.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efb6c.  v2:= lcmp(v6, v0);
  #L3efb70.  if v2 < 0 then goto L3efbb2;
  #L3efb74.  v0:= v5.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efb78.  call temp:= `d`(v0, v6) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3efb7e.  v6:= temp @kind wide;
  #L3efb80.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efb84.  v2:= lcmp(v6, v0);
  #L3efb88.  if v2 >= 0 then goto L3efbbe;
  #L3efb8c.  v0:= v5.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efb90.  call temp:= `a`(v0) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efb96.  v0:= temp @kind wide;
  #L3efb98.  v2:= v6 + v0 @kind long;
  #L3efb9c.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efba0.  v4:= lcmp(v2, v0);
  #L3efba4.  if v4 >= 0 then goto L3efbbe;
  #L3efba8.  call temp:= `k`(v5, v6) @signature `Lorg/c/a/b/n$a;.k:(J)J` @kind virtual;
  #L3efbae.  v6:= temp @kind wide;
  #L3efbb0.  goto L3efbbe;
  #L3efbb2.  v0:= v5.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3efbb6.  call temp:= `d`(v0, v6) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3efbbc.  v6:= temp @kind wide;
  #L3efbbe.  return v6 @kind wide;
}
procedure `boolean` `d`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef780.  v0:= 0I;
  #L3ef782.  return v0;
}
procedure `long` `e`(`org.c.a.b.n$a` v5 @kind this, `long` v6 ) @signature `Lorg/c/a/b/n$a;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3efbd0.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efbd4.  v2:= lcmp(v6, v0);
  #L3efbd8.  if v2 < 0 then goto L3efbea;
  #L3efbdc.  v0:= v5.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efbe0.  call temp:= `e`(v0, v6) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3efbe6.  v6:= temp @kind wide;
  #L3efbe8.  goto L3efc26;
  #L3efbea.  v0:= v5.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3efbee.  call temp:= `e`(v0, v6) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3efbf4.  v6:= temp @kind wide;
  #L3efbf6.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efbfa.  v2:= lcmp(v6, v0);
  #L3efbfe.  if v2 < 0 then goto L3efc26;
  #L3efc02.  v0:= v5.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efc06.  call temp:= `a`(v0) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efc0c.  v0:= temp @kind wide;
  #L3efc0e.  v2:= v6 - v0 @kind long;
  #L3efc12.  v0:= v5.`org.c.a.b.n$a.c` @type ^`long` @kind wide;
  #L3efc16.  v4:= lcmp(v2, v0);
  #L3efc1a.  if v4 < 0 then goto L3efc26;
  #L3efc1e.  call temp:= `j`(v5, v6) @signature `Lorg/c/a/b/n$a;.j:(J)J` @kind virtual;
  #L3efc24.  v6:= temp @kind wide;
  #L3efc26.  return v6 @kind wide;
}
procedure `org.c.a.g` `e`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.e:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efca0.  v0:= v1.`org.c.a.b.n$a.e` @type ^`org.c.a.g` @kind object;
  #L3efca4.  return v0 @kind object;
}
procedure `org.c.a.g` `f`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efcb8.  v0:= v1.`org.c.a.b.n$a.f` @type ^`org.c.a.g` @kind object;
  #L3efcbc.  return v0 @kind object;
}
procedure `org.c.a.g` `g`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.g:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3efcd0.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3efcd4.  call temp:= `g`(v0) @signature `Lorg/c/a/c;.g:()Lorg/c/a/g;` @kind virtual;
  #L3efcda.  v0:= temp @kind object;
  #L3efcdc.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef890.  v0:= v1.`org.c.a.b.n$a.a` @type ^`org.c.a.c` @kind object;
  #L3ef894.  call temp:= `h`(v0) @signature `Lorg/c/a/c;.h:()I` @kind virtual;
  #L3ef89a.  v0:= temp;
  #L3ef89c.  return v0;
}
procedure `int` `i`(`org.c.a.b.n$a` v1 @kind this) @signature `Lorg/c/a/b/n$a;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ef8b0.  v0:= v1.`org.c.a.b.n$a.b` @type ^`org.c.a.c` @kind object;
  #L3ef8b4.  call temp:= `i`(v0) @signature `Lorg/c/a/c;.i:()I` @kind virtual;
  #L3ef8ba.  v0:= temp;
  #L3ef8bc.  return v0;
}
procedure `long` `j`(`org.c.a.b.n$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/n$a;.j:(J)J` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3efc38.  v0:= v1.`org.c.a.b.n$a.d` @type ^`boolean` @kind boolean;
  #L3efc3c.  if v0 == 0 then goto L3efc4e;
  #L3efc40.  v0:= v1.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efc44.  call temp:= `c`(v0, v2) @signature `Lorg/c/a/b/n;.c:(J)J` @kind virtual;
  #L3efc4a.  v2:= temp @kind wide;
  #L3efc4c.  return v2 @kind wide;
  #L3efc4e.  v0:= v1.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efc52.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/b/n;.a:(J)J` @kind virtual;
  #L3efc58.  v2:= temp @kind wide;
  #L3efc5a.  return v2 @kind wide;
}
procedure `long` `k`(`org.c.a.b.n$a` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/b/n$a;.k:(J)J` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3efc6c.  v0:= v1.`org.c.a.b.n$a.d` @type ^`boolean` @kind boolean;
  #L3efc70.  if v0 == 0 then goto L3efc82;
  #L3efc74.  v0:= v1.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efc78.  call temp:= `d`(v0, v2) @signature `Lorg/c/a/b/n;.d:(J)J` @kind virtual;
  #L3efc7e.  v2:= temp @kind wide;
  #L3efc80.  return v2 @kind wide;
  #L3efc82.  v0:= v1.`org.c.a.b.n$a.g` @type ^`org.c.a.b.n` @kind object;
  #L3efc86.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/b/n;.b:(J)J` @kind virtual;
  #L3efc8c.  v2:= temp @kind wide;
  #L3efc8e.  return v2 @kind wide;
}
