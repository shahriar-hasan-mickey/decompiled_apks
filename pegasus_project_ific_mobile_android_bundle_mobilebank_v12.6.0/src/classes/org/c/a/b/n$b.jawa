record `org.c.a.b.n$b` @kind class @AccessFlag FINAL extends `org.c.a.b.n$a` @kind class {
  `org.c.a.b.n` `org.c.a.b.n$b.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`org.c.a.b.n$b` v8 @kind this, `org.c.a.b.n` v9 @kind object, `org.c.a.c` v10 @kind object, `org.c.a.c` v11 @kind object, `long` v12 ) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f0100.  v4:= 0I;
  #L3f0102.  v7:= 0I;
  #L3f0104.  v0:= v8 @kind object;
  #L3f0106.  v1:= v9 @kind object;
  #L3f0108.  v2:= v10 @kind object;
  #L3f010a.  v3:= v11 @kind object;
  #L3f010c.  v5:= v12 @kind wide;
  #L3f010e.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f0114.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n$b` v8 @kind this, `org.c.a.b.n` v9 @kind object, `org.c.a.c` v10 @kind object, `org.c.a.c` v11 @kind object, `org.c.a.g` v12 @kind object, `long` v13 ) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f0128.  v7:= 0I;
  #L3f012a.  v0:= v8 @kind object;
  #L3f012c.  v1:= v9 @kind object;
  #L3f012e.  v2:= v10 @kind object;
  #L3f0130.  v3:= v11 @kind object;
  #L3f0132.  v4:= v12 @kind object;
  #L3f0134.  v5:= v13 @kind wide;
  #L3f0136.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f013c.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n$b` v7 @kind this, `org.c.a.b.n` v8 @kind object, `org.c.a.c` v9 @kind object, `org.c.a.c` v10 @kind object, `org.c.a.g` v11 @kind object, `long` v12 , `boolean` v14 ) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f0150.  v7.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` := v8 @kind object;
  #L3f0154.  v0:= v7 @kind object;
  #L3f0156.  v1:= v8 @kind object;
  #L3f0158.  v2:= v9 @kind object;
  #L3f015a.  v3:= v10 @kind object;
  #L3f015c.  v4:= v12 @kind wide;
  #L3f015e.  v6:= v14;
  #L3f0160.  call `<init>`(v0, v1, v2, v3, v4, v6) @signature `Lorg/c/a/b/n$a;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;JZ)V` @kind direct;
  #L3f0166.  if v11 != 0 then goto L3f0178;
  #L3f016a.  v11:= new `org.c.a.b.n$c`;
  #L3f016e.  v8:= v7.`org.c.a.b.n$b.e` @type ^`org.c.a.g` @kind object;
  #L3f0172.  call `<init>`(v11, v8, v7) @signature `Lorg/c/a/b/n$c;.<init>:(Lorg/c/a/g;Lorg/c/a/b/n$b;)V` @kind direct;
  #L3f0178.  v7.`org.c.a.b.n$b.e` @type ^`org.c.a.g` := v11 @kind object;
  #L3f017c.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.n$b` v8 @kind this, `org.c.a.b.n` v9 @kind object, `org.c.a.c` v10 @kind object, `org.c.a.c` v11 @kind object, `org.c.a.g` v12 @kind object, `org.c.a.g` v13 @kind object, `long` v14 ) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/g;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f0190.  v7:= 0I;
  #L3f0192.  v0:= v8 @kind object;
  #L3f0194.  v1:= v9 @kind object;
  #L3f0196.  v2:= v10 @kind object;
  #L3f0198.  v3:= v11 @kind object;
  #L3f019a.  v4:= v12 @kind object;
  #L3f019c.  v5:= v14 @kind wide;
  #L3f019e.  call `<init>`(v0, v1, v2, v3, v4, v5, v7) @signature `Lorg/c/a/b/n$b;.<init>:(Lorg/c/a/b/n;Lorg/c/a/c;Lorg/c/a/c;Lorg/c/a/g;JZ)V` @kind direct;
  #L3f01a4.  v8.`org.c.a.b.n$b.f` @type ^`org.c.a.g` := v13 @kind object;
  #L3f01a8.  return @kind void;
}
procedure `long` `a`(`org.c.a.b.n$b` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/c/a/b/n$b;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3efe4c.  v0:= v4.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efe50.  v2:= lcmp(v5, v0);
  #L3efe54.  if v2 < 0 then goto L3eff1a;
  #L3efe58.  v0:= v4.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3efe5c.  call temp:= `a`(v0, v5, v7) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3efe62.  v5:= temp @kind wide;
  #L3efe64.  v0:= v4.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efe68.  v7:= lcmp(v5, v0);
  #L3efe6c.  if v7 >= 0 then goto L3eff56;
  #L3efe70.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efe74.  call temp:= `a`(v7) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3efe7a.  v0:= temp @kind wide;
  #L3efe7c.  v2:= v5 + v0 @kind long;
  #L3efe80.  v0:= v4.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efe84.  v7:= lcmp(v2, v0);
  #L3efe88.  if v7 >= 0 then goto L3eff56;
  #L3efe8c.  v7:= v4.`org.c.a.b.n$b.d` @type ^`boolean` @kind boolean;
  #L3efe90.  v0:= -1I;
  #L3efe92.  if v7 == 0 then goto L3efed4;
  #L3efe96.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efe9a.  call temp:= `b`(v7) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3efea0.  v7:= temp @kind object;
  #L3efea2.  call temp:= `z`(v7) @signature `Lorg/c/a/b/t;.z:()Lorg/c/a/c;` @kind virtual;
  #L3efea8.  v7:= temp @kind object;
  #L3efeaa.  call temp:= `a`(v7, v5) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3efeb0.  v7:= temp;
  #L3efeb2.  if v7 > 0 then goto L3eff10;
  #L3efeb6.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efeba.  call temp:= `b`(v7) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3efec0.  v7:= temp @kind object;
  #L3efec2.  call temp:= `z`(v7) @signature `Lorg/c/a/b/t;.z:()Lorg/c/a/c;` @kind virtual;
  #L3efec8.  v7:= temp @kind object;
  #L3efeca.  call temp:= `a`(v7, v5, v0) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3efed0.  v5:= temp @kind wide;
  #L3efed2.  goto L3eff10;
  #L3efed4.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efed8.  call temp:= `b`(v7) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3efede.  v7:= temp @kind object;
  #L3efee0.  call temp:= `E`(v7) @signature `Lorg/c/a/b/t;.E:()Lorg/c/a/c;` @kind virtual;
  #L3efee6.  v7:= temp @kind object;
  #L3efee8.  call temp:= `a`(v7, v5) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3efeee.  v7:= temp;
  #L3efef0.  if v7 > 0 then goto L3eff10;
  #L3efef4.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efef8.  call temp:= `b`(v7) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3efefe.  v7:= temp @kind object;
  #L3eff00.  call temp:= `E`(v7) @signature `Lorg/c/a/b/t;.E:()Lorg/c/a/c;` @kind virtual;
  #L3eff06.  v7:= temp @kind object;
  #L3eff08.  call temp:= `a`(v7, v5, v0) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3eff0e.  v5:= temp @kind wide;
  #L3eff10.  call temp:= `k`(v4, v5) @signature `Lorg/c/a/b/n$b;.k:(J)J` @kind virtual;
  #L3eff16.  v5:= temp @kind wide;
  #L3eff18.  goto L3eff56;
  #L3eff1a.  v0:= v4.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3eff1e.  call temp:= `a`(v0, v5, v7) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3eff24.  v5:= temp @kind wide;
  #L3eff26.  v0:= v4.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3eff2a.  v7:= lcmp(v5, v0);
  #L3eff2e.  if v7 < 0 then goto L3eff56;
  #L3eff32.  v7:= v4.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3eff36.  call temp:= `a`(v7) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3eff3c.  v0:= temp @kind wide;
  #L3eff3e.  v2:= v5 - v0 @kind long;
  #L3eff42.  v0:= v4.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3eff46.  v7:= lcmp(v2, v0);
  #L3eff4a.  if v7 < 0 then goto L3eff56;
  #L3eff4e.  call temp:= `j`(v4, v5) @signature `Lorg/c/a/b/n$b;.j:(J)J` @kind virtual;
  #L3eff54.  v5:= temp @kind wide;
  #L3eff56.  return v5 @kind wide;
}
procedure `long` `a`(`org.c.a.b.n$b` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lorg/c/a/b/n$b;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eff68.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3eff6c.  v2:= lcmp(v4, v0);
  #L3eff70.  if v2 < 0 then goto L3f0036;
  #L3eff74.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3eff78.  call temp:= `a`(v0, v4, v6) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3eff7e.  v4:= temp @kind wide;
  #L3eff80.  v6:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3eff84.  v0:= lcmp(v4, v6);
  #L3eff88.  if v0 >= 0 then goto L3f0072;
  #L3eff8c.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3eff90.  call temp:= `a`(v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3eff96.  v6:= temp @kind wide;
  #L3eff98.  v0:= v4 + v6 @kind long;
  #L3eff9c.  v6:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3effa0.  v2:= lcmp(v0, v6);
  #L3effa4.  if v2 >= 0 then goto L3f0072;
  #L3effa8.  v6:= v3.`org.c.a.b.n$b.d` @type ^`boolean` @kind boolean;
  #L3effac.  v7:= -1I;
  #L3effae.  if v6 == 0 then goto L3efff0;
  #L3effb2.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3effb6.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3effbc.  v6:= temp @kind object;
  #L3effbe.  call temp:= `z`(v6) @signature `Lorg/c/a/b/t;.z:()Lorg/c/a/c;` @kind virtual;
  #L3effc4.  v6:= temp @kind object;
  #L3effc6.  call temp:= `a`(v6, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3effcc.  v6:= temp;
  #L3effce.  if v6 > 0 then goto L3f002c;
  #L3effd2.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3effd6.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3effdc.  v6:= temp @kind object;
  #L3effde.  call temp:= `z`(v6) @signature `Lorg/c/a/b/t;.z:()Lorg/c/a/c;` @kind virtual;
  #L3effe4.  v6:= temp @kind object;
  #L3effe6.  call temp:= `a`(v6, v4, v7) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3effec.  v4:= temp @kind wide;
  #L3effee.  goto L3f002c;
  #L3efff0.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3efff4.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3efffa.  v6:= temp @kind object;
  #L3efffc.  call temp:= `E`(v6) @signature `Lorg/c/a/b/t;.E:()Lorg/c/a/c;` @kind virtual;
  #L3f0002.  v6:= temp @kind object;
  #L3f0004.  call temp:= `a`(v6, v4) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f000a.  v6:= temp;
  #L3f000c.  if v6 > 0 then goto L3f002c;
  #L3f0010.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3f0014.  call temp:= `b`(v6) @signature `Lorg/c/a/b/n;.b:(Lorg/c/a/b/n;)Lorg/c/a/b/t;` @kind static;
  #L3f001a.  v6:= temp @kind object;
  #L3f001c.  call temp:= `E`(v6) @signature `Lorg/c/a/b/t;.E:()Lorg/c/a/c;` @kind virtual;
  #L3f0022.  v6:= temp @kind object;
  #L3f0024.  call temp:= `a`(v6, v4, v7) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3f002a.  v4:= temp @kind wide;
  #L3f002c.  call temp:= `k`(v3, v4) @signature `Lorg/c/a/b/n$b;.k:(J)J` @kind virtual;
  #L3f0032.  v4:= temp @kind wide;
  #L3f0034.  goto L3f0072;
  #L3f0036.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3f003a.  call temp:= `a`(v0, v4, v6) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3f0040.  v4:= temp @kind wide;
  #L3f0042.  v6:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3f0046.  v0:= lcmp(v4, v6);
  #L3f004a.  if v0 < 0 then goto L3f0072;
  #L3f004e.  v6:= v3.`org.c.a.b.n$b.h` @type ^`org.c.a.b.n` @kind object;
  #L3f0052.  call temp:= `a`(v6) @signature `Lorg/c/a/b/n;.a:(Lorg/c/a/b/n;)J` @kind static;
  #L3f0058.  v6:= temp @kind wide;
  #L3f005a.  v0:= v4 - v6 @kind long;
  #L3f005e.  v6:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3f0062.  v2:= lcmp(v0, v6);
  #L3f0066.  if v2 < 0 then goto L3f0072;
  #L3f006a.  call temp:= `j`(v3, v4) @signature `Lorg/c/a/b/n$b;.j:(J)J` @kind virtual;
  #L3f0070.  v4:= temp @kind wide;
  #L3f0072.  return v4 @kind wide;
}
procedure `int` `b`(`org.c.a.b.n$b` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lorg/c/a/b/n$b;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3efd98.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efd9c.  v2:= lcmp(v4, v0);
  #L3efda0.  if v2 < 0 then goto L3efdd4;
  #L3efda4.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efda8.  v2:= lcmp(v6, v0);
  #L3efdac.  if v2 < 0 then goto L3efdbe;
  #L3efdb0.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3efdb4.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3efdba.  v4:= temp;
  #L3efdbc.  return v4;
  #L3efdbe.  call temp:= `k`(v3, v4) @signature `Lorg/c/a/b/n$b;.k:(J)J` @kind virtual;
  #L3efdc4.  v4:= temp @kind wide;
  #L3efdc6.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3efdca.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3efdd0.  v4:= temp;
  #L3efdd2.  return v4;
  #L3efdd4.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efdd8.  v2:= lcmp(v6, v0);
  #L3efddc.  if v2 >= 0 then goto L3efdee;
  #L3efde0.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3efde4.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3efdea.  v4:= temp;
  #L3efdec.  return v4;
  #L3efdee.  call temp:= `j`(v3, v4) @signature `Lorg/c/a/b/n$b;.j:(J)J` @kind virtual;
  #L3efdf4.  v4:= temp @kind wide;
  #L3efdf6.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3efdfa.  call temp:= `b`(v0, v4, v6) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3efe00.  v4:= temp;
  #L3efe02.  return v4;
}
procedure `int` `c`(`org.c.a.b.n$b` v3 @kind this, `long` v4 ) @signature `Lorg/c/a/b/n$b;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3efe14.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3efe18.  v2:= lcmp(v4, v0);
  #L3efe1c.  if v2 < 0 then goto L3efe2e;
  #L3efe20.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3efe24.  call temp:= `c`(v0, v4) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3efe2a.  v4:= temp;
  #L3efe2c.  return v4;
  #L3efe2e.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3efe32.  call temp:= `c`(v0, v4) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3efe38.  v4:= temp;
  #L3efe3a.  return v4;
}
procedure `long` `c`(`org.c.a.b.n$b` v3 @kind this, `long` v4 , `long` v6 ) @signature `Lorg/c/a/b/n$b;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f0084.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3f0088.  v2:= lcmp(v4, v0);
  #L3f008c.  if v2 < 0 then goto L3f00c0;
  #L3f0090.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3f0094.  v2:= lcmp(v6, v0);
  #L3f0098.  if v2 < 0 then goto L3f00aa;
  #L3f009c.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3f00a0.  call temp:= `c`(v0, v4, v6) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f00a6.  v4:= temp @kind wide;
  #L3f00a8.  return v4 @kind wide;
  #L3f00aa.  call temp:= `k`(v3, v4) @signature `Lorg/c/a/b/n$b;.k:(J)J` @kind virtual;
  #L3f00b0.  v4:= temp @kind wide;
  #L3f00b2.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3f00b6.  call temp:= `c`(v0, v4, v6) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f00bc.  v4:= temp @kind wide;
  #L3f00be.  return v4 @kind wide;
  #L3f00c0.  v0:= v3.`org.c.a.b.n$b.c` @type ^`long` @kind wide;
  #L3f00c4.  v2:= lcmp(v6, v0);
  #L3f00c8.  if v2 >= 0 then goto L3f00da;
  #L3f00cc.  v0:= v3.`org.c.a.b.n$b.a` @type ^`org.c.a.c` @kind object;
  #L3f00d0.  call temp:= `c`(v0, v4, v6) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f00d6.  v4:= temp @kind wide;
  #L3f00d8.  return v4 @kind wide;
  #L3f00da.  call temp:= `j`(v3, v4) @signature `Lorg/c/a/b/n$b;.j:(J)J` @kind virtual;
  #L3f00e0.  v4:= temp @kind wide;
  #L3f00e2.  v0:= v3.`org.c.a.b.n$b.b` @type ^`org.c.a.c` @kind object;
  #L3f00e6.  call temp:= `c`(v0, v4, v6) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f00ec.  v4:= temp @kind wide;
  #L3f00ee.  return v4 @kind wide;
}
