record `org.c.a.b.x` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.a` @kind class {
  `org.c.a.b` `org.c.a.b.x.a` @AccessFlag FINAL;
  `org.c.a.b` `org.c.a.b.x.b` @AccessFlag FINAL;
  `org.c.a.b.x` `org.c.a.b.x.c` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.c.a.b.x.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.b.x` v1 @kind this, `org.c.a.a` v2 @kind object, `org.c.a.b` v3 @kind object, `org.c.a.b` v4 @kind object) @signature `Lorg/c/a/b/x;.<init>:(Lorg/c/a/a;Lorg/c/a/b;Lorg/c/a/b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3f32c0.  v0:= 0I;
  #L3f32c2.  call `<init>`(v1, v2, v0) @signature `Lorg/c/a/b/a;.<init>:(Lorg/c/a/a;Ljava/lang/Object;)V` @kind direct;
  #L3f32c8.  v1.`org.c.a.b.x.a` @type ^`org.c.a.b` := v3 @kind object;
  #L3f32cc.  v1.`org.c.a.b.x.b` @type ^`org.c.a.b` := v4 @kind object;
  #L3f32d0.  return @kind void;
}
procedure `org.c.a.b.x` `a`(`org.c.a.a` v1 @kind object, `org.c.a.r` v2 @kind object, `org.c.a.r` v3 @kind object) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/a;Lorg/c/a/r;Lorg/c/a/r;)Lorg/c/a/b/x;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f316c.  if v1 != 0 then goto L3f3180;
  #L3f3170.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f3174.  v2:= "Must supply a chronology" @kind object;
  #L3f3178.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f317e.  throw v1;
  #L3f3180.  v0:= 0I;
  #L3f3182.  if v2 != 0 then goto L3f318a;
  #L3f3186.  v2:= v0 @kind object;
  #L3f3188.  goto L3f3192;
  #L3f318a.  call temp:= `a`(v2) @signature `Lorg/c/a/r;.a:()Lorg/c/a/b;` @kind interface;
  #L3f3190.  v2:= temp @kind object;
  #L3f3192.  if v3 != 0 then goto L3f3198;
  #L3f3196.  goto L3f31a0;
  #L3f3198.  call temp:= `a`(v3) @signature `Lorg/c/a/r;.a:()Lorg/c/a/b;` @kind interface;
  #L3f319e.  v0:= temp @kind object;
  #L3f31a0.  if v2 == 0 then goto L3f31c4;
  #L3f31a4.  if v0 == 0 then goto L3f31c4;
  #L3f31a8.  call temp:= `a`(v2, v0) @signature `Lorg/c/a/r;.a:(Lorg/c/a/t;)Z` @kind interface;
  #L3f31ae.  v3:= temp;
  #L3f31b0.  if v3 != 0 then goto L3f31c4;
  #L3f31b4.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f31b8.  v2:= "The lower limit must be come before than the upper limit" @kind object;
  #L3f31bc.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f31c2.  throw v1;
  #L3f31c4.  v3:= new `org.c.a.b.x`;
  #L3f31c8.  v2:= (`org.c.a.b`) v2 @kind object;
  #L3f31cc.  v0:= (`org.c.a.b`) v0 @kind object;
  #L3f31d0.  call `<init>`(v3, v1, v2, v0) @signature `Lorg/c/a/b/x;.<init>:(Lorg/c/a/a;Lorg/c/a/b;Lorg/c/a/b;)V` @kind direct;
  #L3f31d6.  return v3 @kind object;
}
procedure `org.c.a.c` `a`(`org.c.a.b.x` v7 @kind this, `org.c.a.c` v8 @kind object, `java.util.HashMap` v9 @kind object) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f31e8.  if v8 == 0 then goto L3f325c;
  #L3f31ec.  call temp:= `c`(v8) @signature `Lorg/c/a/c;.c:()Z` @kind virtual;
  #L3f31f2.  v0:= temp;
  #L3f31f4.  if v0 != 0 then goto L3f31fa;
  #L3f31f8.  goto L3f325c;
  #L3f31fa.  call temp:= `containsKey`(v9, v8) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3200.  v0:= temp;
  #L3f3202.  if v0 == 0 then goto L3f3214;
  #L3f3206.  call temp:= `get`(v9, v8) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f320c.  v8:= temp @kind object;
  #L3f320e.  v8:= (`org.c.a.c`) v8 @kind object;
  #L3f3212.  return v8 @kind object;
  #L3f3214.  v6:= new `org.c.a.b.x$a`;
  #L3f3218.  call temp:= `e`(v8) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f321e.  v0:= temp @kind object;
  #L3f3220.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3226.  v3:= temp @kind object;
  #L3f3228.  call temp:= `f`(v8) @signature `Lorg/c/a/c;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f322e.  v0:= temp @kind object;
  #L3f3230.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3236.  v4:= temp @kind object;
  #L3f3238.  call temp:= `g`(v8) @signature `Lorg/c/a/c;.g:()Lorg/c/a/g;` @kind virtual;
  #L3f323e.  v0:= temp @kind object;
  #L3f3240.  call temp:= `a`(v7, v0, v9) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3246.  v5:= temp @kind object;
  #L3f3248.  v0:= v6 @kind object;
  #L3f324a.  v1:= v7 @kind object;
  #L3f324c.  v2:= v8 @kind object;
  #L3f324e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/c/a/b/x$a;.<init>:(Lorg/c/a/b/x;Lorg/c/a/c;Lorg/c/a/g;Lorg/c/a/g;Lorg/c/a/g;)V` @kind direct;
  #L3f3254.  call temp:= `put`(v9, v8, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f325a.  return v6 @kind object;
  #L3f325c.  return v8 @kind object;
}
procedure `org.c.a.g` `a`(`org.c.a.b.x` v1 @kind this, `org.c.a.g` v2 @kind object, `java.util.HashMap` v3 @kind object) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f3270.  if v2 == 0 then goto L3f32ae;
  #L3f3274.  call temp:= `b`(v2) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3f327a.  v0:= temp;
  #L3f327c.  if v0 != 0 then goto L3f3282;
  #L3f3280.  goto L3f32ae;
  #L3f3282.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f3288.  v0:= temp;
  #L3f328a.  if v0 == 0 then goto L3f329c;
  #L3f328e.  call temp:= `get`(v3, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f3294.  v2:= temp @kind object;
  #L3f3296.  v2:= (`org.c.a.g`) v2 @kind object;
  #L3f329a.  return v2 @kind object;
  #L3f329c.  v0:= new `org.c.a.b.x$b`;
  #L3f32a0.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/b/x$b;.<init>:(Lorg/c/a/b/x;Lorg/c/a/g;)V` @kind direct;
  #L3f32a6.  call temp:= `put`(v3, v2, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f32ac.  return v0 @kind object;
  #L3f32ae.  return v2 @kind object;
}
procedure `org.c.a.b` `N`(`org.c.a.b.x` v1 @kind this) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f313c.  v0:= v1.`org.c.a.b.x.a` @type ^`org.c.a.b` @kind object;
  #L3f3140.  return v0 @kind object;
}
procedure `org.c.a.b` `O`(`org.c.a.b.x` v1 @kind this) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3154.  v0:= v1.`org.c.a.b.x.b` @type ^`org.c.a.b` @kind object;
  #L3f3158.  return v0 @kind object;
}
procedure `long` `a`(`org.c.a.b.x` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lorg/c/a/b/x;.a:(IIII)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f3010.  call temp:= `L`(v1) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3016.  v0:= temp @kind object;
  #L3f3018.  call temp:= `a`(v0, v2, v3, v4, v5) @signature `Lorg/c/a/a;.a:(IIII)J` @kind virtual;
  #L3f301e.  v2:= temp @kind wide;
  #L3f3020.  v4:= "resulting" @kind object;
  #L3f3024.  call `a`(v1, v2, v4) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f302a.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.b.x` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int` v13 , `int` v14 , `int` v15 ) @signature `Lorg/c/a/b/x;.a:(IIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3f303c.  call temp:= `L`(v8) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f3042.  v0:= temp @kind object;
  #L3f3044.  v1:= v9;
  #L3f3046.  v2:= v10;
  #L3f3048.  v3:= v11;
  #L3f304a.  v4:= v12;
  #L3f304c.  v5:= v13;
  #L3f304e.  v6:= v14;
  #L3f3050.  v7:= v15;
  #L3f3052.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/c/a/a;.a:(IIIIIII)J` @kind virtual;
  #L3f3058.  v9:= temp @kind wide;
  #L3f305a.  v11:= "resulting" @kind object;
  #L3f305e.  call `a`(v8, v9, v11) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @kind virtual;
  #L3f3064.  return v9 @kind wide;
}
procedure `org.c.a.a` `a`(`org.c.a.b.x` v3 @kind this, `org.c.a.f` v4 @kind object) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f3078.  if v4 != 0 then goto L3f3084;
  #L3f307c.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f3082.  v4:= temp @kind object;
  #L3f3084.  call temp:= `a`(v3) @signature `Lorg/c/a/b/x;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f308a.  v0:= temp @kind object;
  #L3f308c.  if v4 != v0 then goto L3f3092;
  #L3f3090.  return v3 @kind object;
  #L3f3092.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f3096.  if v4 != v0 then goto L3f30a8;
  #L3f309a.  v0:= v3.`org.c.a.b.x.c` @type ^`org.c.a.b.x` @kind object;
  #L3f309e.  if v0 == 0 then goto L3f30a8;
  #L3f30a2.  v4:= v3.`org.c.a.b.x.c` @type ^`org.c.a.b.x` @kind object;
  #L3f30a6.  return v4 @kind object;
  #L3f30a8.  v0:= v3.`org.c.a.b.x.a` @type ^`org.c.a.b` @kind object;
  #L3f30ac.  if v0 == 0 then goto L3f30c6;
  #L3f30b0.  call temp:= `e`(v0) @signature `Lorg/c/a/b;.e:()Lorg/c/a/m;` @kind virtual;
  #L3f30b6.  v0:= temp @kind object;
  #L3f30b8.  call `a`(v0, v4) @signature `Lorg/c/a/m;.a:(Lorg/c/a/f;)V` @kind virtual;
  #L3f30be.  call temp:= `a`(v0) @signature `Lorg/c/a/m;.a:()Lorg/c/a/b;` @kind virtual;
  #L3f30c4.  v0:= temp @kind object;
  #L3f30c6.  v1:= v3.`org.c.a.b.x.b` @type ^`org.c.a.b` @kind object;
  #L3f30ca.  if v1 == 0 then goto L3f30e4;
  #L3f30ce.  call temp:= `e`(v1) @signature `Lorg/c/a/b;.e:()Lorg/c/a/m;` @kind virtual;
  #L3f30d4.  v1:= temp @kind object;
  #L3f30d6.  call `a`(v1, v4) @signature `Lorg/c/a/m;.a:(Lorg/c/a/f;)V` @kind virtual;
  #L3f30dc.  call temp:= `a`(v1) @signature `Lorg/c/a/m;.a:()Lorg/c/a/b;` @kind virtual;
  #L3f30e2.  v1:= temp @kind object;
  #L3f30e4.  call temp:= `L`(v3) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f30ea.  v2:= temp @kind object;
  #L3f30ec.  call temp:= `a`(v2, v4) @signature `Lorg/c/a/a;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @kind virtual;
  #L3f30f2.  v2:= temp @kind object;
  #L3f30f4.  call temp:= `a`(v2, v0, v1) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/a;Lorg/c/a/r;Lorg/c/a/r;)Lorg/c/a/b/x;` @kind static;
  #L3f30fa.  v0:= temp @kind object;
  #L3f30fc.  v1:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f3100.  if v4 != v1 then goto L3f3108;
  #L3f3104.  v3.`org.c.a.b.x.c` @type ^`org.c.a.b.x` := v0 @kind object;
  #L3f3108.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.b.x` v3 @kind this, `long` v4 , `java.lang.String` v6 @kind object) @signature `Lorg/c/a/b/x;.a:(JLjava/lang/String;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3f32e4.  v0:= v3.`org.c.a.b.x.a` @type ^`org.c.a.b` @kind object;
  #L3f32e8.  if v0 == 0 then goto L3f330a;
  #L3f32ec.  call temp:= `c`(v0) @signature `Lorg/c/a/b;.c:()J` @kind virtual;
  #L3f32f2.  v0:= temp @kind wide;
  #L3f32f4.  v2:= lcmp(v4, v0);
  #L3f32f8.  if v2 >= 0 then goto L3f330a;
  #L3f32fc.  v4:= new `org.c.a.b.x$c`;
  #L3f3300.  v5:= 1I;
  #L3f3302.  call `<init>`(v4, v3, v6, v5) @signature `Lorg/c/a/b/x$c;.<init>:(Lorg/c/a/b/x;Ljava/lang/String;Z)V` @kind direct;
  #L3f3308.  throw v4;
  #L3f330a.  v0:= v3.`org.c.a.b.x.b` @type ^`org.c.a.b` @kind object;
  #L3f330e.  if v0 == 0 then goto L3f3330;
  #L3f3312.  call temp:= `c`(v0) @signature `Lorg/c/a/b;.c:()J` @kind virtual;
  #L3f3318.  v0:= temp @kind wide;
  #L3f331a.  v2:= lcmp(v4, v0);
  #L3f331e.  if v2 < 0 then goto L3f3330;
  #L3f3322.  v4:= new `org.c.a.b.x$c`;
  #L3f3326.  v5:= 0I;
  #L3f3328.  call `<init>`(v4, v3, v6, v5) @signature `Lorg/c/a/b/x$c;.<init>:(Lorg/c/a/b/x;Ljava/lang/String;Z)V` @kind direct;
  #L3f332e.  throw v4;
  #L3f3330.  return @kind void;
}
procedure `void` `a`(`org.c.a.b.x` v2 @kind this, `org.c.a.b.a$a` v3 @kind object) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f3344.  v0:= new `java.util.HashMap`;
  #L3f3348.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3f334e.  v1:= v3.`org.c.a.b.a$a.l` @type ^`org.c.a.g` @kind object;
  #L3f3352.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3358.  v1:= temp @kind object;
  #L3f335a.  v3.`org.c.a.b.a$a.l` @type ^`org.c.a.g` := v1 @kind object;
  #L3f335e.  v1:= v3.`org.c.a.b.a$a.k` @type ^`org.c.a.g` @kind object;
  #L3f3362.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3368.  v1:= temp @kind object;
  #L3f336a.  v3.`org.c.a.b.a$a.k` @type ^`org.c.a.g` := v1 @kind object;
  #L3f336e.  v1:= v3.`org.c.a.b.a$a.j` @type ^`org.c.a.g` @kind object;
  #L3f3372.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3378.  v1:= temp @kind object;
  #L3f337a.  v3.`org.c.a.b.a$a.j` @type ^`org.c.a.g` := v1 @kind object;
  #L3f337e.  v1:= v3.`org.c.a.b.a$a.i` @type ^`org.c.a.g` @kind object;
  #L3f3382.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3388.  v1:= temp @kind object;
  #L3f338a.  v3.`org.c.a.b.a$a.i` @type ^`org.c.a.g` := v1 @kind object;
  #L3f338e.  v1:= v3.`org.c.a.b.a$a.h` @type ^`org.c.a.g` @kind object;
  #L3f3392.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3398.  v1:= temp @kind object;
  #L3f339a.  v3.`org.c.a.b.a$a.h` @type ^`org.c.a.g` := v1 @kind object;
  #L3f339e.  v1:= v3.`org.c.a.b.a$a.g` @type ^`org.c.a.g` @kind object;
  #L3f33a2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33a8.  v1:= temp @kind object;
  #L3f33aa.  v3.`org.c.a.b.a$a.g` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33ae.  v1:= v3.`org.c.a.b.a$a.f` @type ^`org.c.a.g` @kind object;
  #L3f33b2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33b8.  v1:= temp @kind object;
  #L3f33ba.  v3.`org.c.a.b.a$a.f` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33be.  v1:= v3.`org.c.a.b.a$a.e` @type ^`org.c.a.g` @kind object;
  #L3f33c2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33c8.  v1:= temp @kind object;
  #L3f33ca.  v3.`org.c.a.b.a$a.e` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33ce.  v1:= v3.`org.c.a.b.a$a.d` @type ^`org.c.a.g` @kind object;
  #L3f33d2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33d8.  v1:= temp @kind object;
  #L3f33da.  v3.`org.c.a.b.a$a.d` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33de.  v1:= v3.`org.c.a.b.a$a.c` @type ^`org.c.a.g` @kind object;
  #L3f33e2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33e8.  v1:= temp @kind object;
  #L3f33ea.  v3.`org.c.a.b.a$a.c` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33ee.  v1:= v3.`org.c.a.b.a$a.b` @type ^`org.c.a.g` @kind object;
  #L3f33f2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f33f8.  v1:= temp @kind object;
  #L3f33fa.  v3.`org.c.a.b.a$a.b` @type ^`org.c.a.g` := v1 @kind object;
  #L3f33fe.  v1:= v3.`org.c.a.b.a$a.a` @type ^`org.c.a.g` @kind object;
  #L3f3402.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/g;Ljava/util/HashMap;)Lorg/c/a/g;` @kind direct;
  #L3f3408.  v1:= temp @kind object;
  #L3f340a.  v3.`org.c.a.b.a$a.a` @type ^`org.c.a.g` := v1 @kind object;
  #L3f340e.  v1:= v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3f3412.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3418.  v1:= temp @kind object;
  #L3f341a.  v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` := v1 @kind object;
  #L3f341e.  v1:= v3.`org.c.a.b.a$a.F` @type ^`org.c.a.c` @kind object;
  #L3f3422.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3428.  v1:= temp @kind object;
  #L3f342a.  v3.`org.c.a.b.a$a.F` @type ^`org.c.a.c` := v1 @kind object;
  #L3f342e.  v1:= v3.`org.c.a.b.a$a.G` @type ^`org.c.a.c` @kind object;
  #L3f3432.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3438.  v1:= temp @kind object;
  #L3f343a.  v3.`org.c.a.b.a$a.G` @type ^`org.c.a.c` := v1 @kind object;
  #L3f343e.  v1:= v3.`org.c.a.b.a$a.H` @type ^`org.c.a.c` @kind object;
  #L3f3442.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3448.  v1:= temp @kind object;
  #L3f344a.  v3.`org.c.a.b.a$a.H` @type ^`org.c.a.c` := v1 @kind object;
  #L3f344e.  v1:= v3.`org.c.a.b.a$a.I` @type ^`org.c.a.c` @kind object;
  #L3f3452.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3458.  v1:= temp @kind object;
  #L3f345a.  v3.`org.c.a.b.a$a.I` @type ^`org.c.a.c` := v1 @kind object;
  #L3f345e.  v1:= v3.`org.c.a.b.a$a.x` @type ^`org.c.a.c` @kind object;
  #L3f3462.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3468.  v1:= temp @kind object;
  #L3f346a.  v3.`org.c.a.b.a$a.x` @type ^`org.c.a.c` := v1 @kind object;
  #L3f346e.  v1:= v3.`org.c.a.b.a$a.y` @type ^`org.c.a.c` @kind object;
  #L3f3472.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3478.  v1:= temp @kind object;
  #L3f347a.  v3.`org.c.a.b.a$a.y` @type ^`org.c.a.c` := v1 @kind object;
  #L3f347e.  v1:= v3.`org.c.a.b.a$a.z` @type ^`org.c.a.c` @kind object;
  #L3f3482.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3488.  v1:= temp @kind object;
  #L3f348a.  v3.`org.c.a.b.a$a.z` @type ^`org.c.a.c` := v1 @kind object;
  #L3f348e.  v1:= v3.`org.c.a.b.a$a.D` @type ^`org.c.a.c` @kind object;
  #L3f3492.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3498.  v1:= temp @kind object;
  #L3f349a.  v3.`org.c.a.b.a$a.D` @type ^`org.c.a.c` := v1 @kind object;
  #L3f349e.  v1:= v3.`org.c.a.b.a$a.A` @type ^`org.c.a.c` @kind object;
  #L3f34a2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34a8.  v1:= temp @kind object;
  #L3f34aa.  v3.`org.c.a.b.a$a.A` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34ae.  v1:= v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3f34b2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34b8.  v1:= temp @kind object;
  #L3f34ba.  v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34be.  v1:= v3.`org.c.a.b.a$a.C` @type ^`org.c.a.c` @kind object;
  #L3f34c2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34c8.  v1:= temp @kind object;
  #L3f34ca.  v3.`org.c.a.b.a$a.C` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34ce.  v1:= v3.`org.c.a.b.a$a.m` @type ^`org.c.a.c` @kind object;
  #L3f34d2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34d8.  v1:= temp @kind object;
  #L3f34da.  v3.`org.c.a.b.a$a.m` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34de.  v1:= v3.`org.c.a.b.a$a.n` @type ^`org.c.a.c` @kind object;
  #L3f34e2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34e8.  v1:= temp @kind object;
  #L3f34ea.  v3.`org.c.a.b.a$a.n` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34ee.  v1:= v3.`org.c.a.b.a$a.o` @type ^`org.c.a.c` @kind object;
  #L3f34f2.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f34f8.  v1:= temp @kind object;
  #L3f34fa.  v3.`org.c.a.b.a$a.o` @type ^`org.c.a.c` := v1 @kind object;
  #L3f34fe.  v1:= v3.`org.c.a.b.a$a.p` @type ^`org.c.a.c` @kind object;
  #L3f3502.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3508.  v1:= temp @kind object;
  #L3f350a.  v3.`org.c.a.b.a$a.p` @type ^`org.c.a.c` := v1 @kind object;
  #L3f350e.  v1:= v3.`org.c.a.b.a$a.q` @type ^`org.c.a.c` @kind object;
  #L3f3512.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3518.  v1:= temp @kind object;
  #L3f351a.  v3.`org.c.a.b.a$a.q` @type ^`org.c.a.c` := v1 @kind object;
  #L3f351e.  v1:= v3.`org.c.a.b.a$a.r` @type ^`org.c.a.c` @kind object;
  #L3f3522.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3528.  v1:= temp @kind object;
  #L3f352a.  v3.`org.c.a.b.a$a.r` @type ^`org.c.a.c` := v1 @kind object;
  #L3f352e.  v1:= v3.`org.c.a.b.a$a.s` @type ^`org.c.a.c` @kind object;
  #L3f3532.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3538.  v1:= temp @kind object;
  #L3f353a.  v3.`org.c.a.b.a$a.s` @type ^`org.c.a.c` := v1 @kind object;
  #L3f353e.  v1:= v3.`org.c.a.b.a$a.u` @type ^`org.c.a.c` @kind object;
  #L3f3542.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3548.  v1:= temp @kind object;
  #L3f354a.  v3.`org.c.a.b.a$a.u` @type ^`org.c.a.c` := v1 @kind object;
  #L3f354e.  v1:= v3.`org.c.a.b.a$a.t` @type ^`org.c.a.c` @kind object;
  #L3f3552.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3558.  v1:= temp @kind object;
  #L3f355a.  v3.`org.c.a.b.a$a.t` @type ^`org.c.a.c` := v1 @kind object;
  #L3f355e.  v1:= v3.`org.c.a.b.a$a.v` @type ^`org.c.a.c` @kind object;
  #L3f3562.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3568.  v1:= temp @kind object;
  #L3f356a.  v3.`org.c.a.b.a$a.v` @type ^`org.c.a.c` := v1 @kind object;
  #L3f356e.  v1:= v3.`org.c.a.b.a$a.w` @type ^`org.c.a.c` @kind object;
  #L3f3572.  call temp:= `a`(v2, v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/c;Ljava/util/HashMap;)Lorg/c/a/c;` @kind direct;
  #L3f3578.  v0:= temp @kind object;
  #L3f357a.  v3.`org.c.a.b.a$a.w` @type ^`org.c.a.c` := v0 @kind object;
  #L3f357e.  return @kind void;
}
procedure `org.c.a.a` `b`(`org.c.a.b.x` v1 @kind this) @signature `Lorg/c/a/b/x;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f311c.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f3120.  call temp:= `a`(v1, v0) @signature `Lorg/c/a/b/x;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @kind virtual;
  #L3f3126.  v0:= temp @kind object;
  #L3f3128.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.b.x` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/b/x;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f2e68.  v0:= 1I;
  #L3f2e6a.  if v4 != v5 then goto L3f2e70;
  #L3f2e6e.  return v0;
  #L3f2e70.  v1:= instanceof @variable v5 @type ^`org.c.a.b.x` @kind boolean;
  #L3f2e74.  v2:= 0I;
  #L3f2e76.  if v1 != 0 then goto L3f2e7c;
  #L3f2e7a.  return v2;
  #L3f2e7c.  v5:= (`org.c.a.b.x`) v5 @kind object;
  #L3f2e80.  call temp:= `L`(v4) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f2e86.  v1:= temp @kind object;
  #L3f2e88.  call temp:= `L`(v5) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f2e8e.  v3:= temp @kind object;
  #L3f2e90.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f2e96.  v1:= temp;
  #L3f2e98.  if v1 == 0 then goto L3f2ed6;
  #L3f2e9c.  call temp:= `N`(v4) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2ea2.  v1:= temp @kind object;
  #L3f2ea4.  call temp:= `N`(v5) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2eaa.  v3:= temp @kind object;
  #L3f2eac.  call temp:= `a`(v1, v3) @signature `Lorg/c/a/d/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f2eb2.  v1:= temp;
  #L3f2eb4.  if v1 == 0 then goto L3f2ed6;
  #L3f2eb8.  call temp:= `O`(v4) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2ebe.  v1:= temp @kind object;
  #L3f2ec0.  call temp:= `O`(v5) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2ec6.  v5:= temp @kind object;
  #L3f2ec8.  call temp:= `a`(v1, v5) @signature `Lorg/c/a/d/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f2ece.  v5:= temp;
  #L3f2ed0.  if v5 == 0 then goto L3f2ed6;
  #L3f2ed4.  goto L3f2ed8;
  #L3f2ed6.  v0:= 0I;
  #L3f2ed8.  return v0;
}
procedure `int` `hashCode`(`org.c.a.b.x` v3 @kind this) @signature `Lorg/c/a/b/x;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f2eec.  call temp:= `N`(v3) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2ef2.  v0:= temp @kind object;
  #L3f2ef4.  v1:= 0I;
  #L3f2ef6.  if v0 == 0 then goto L3f2f0c;
  #L3f2efa.  call temp:= `N`(v3) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2f00.  v0:= temp @kind object;
  #L3f2f02.  call temp:= `hashCode`(v0) @signature `Lorg/c/a/b;.hashCode:()I` @kind virtual;
  #L3f2f08.  v0:= temp;
  #L3f2f0a.  goto L3f2f0e;
  #L3f2f0c.  v0:= 0I;
  #L3f2f0e.  v2:= 317351877I;
  #L3f2f14.  v0:= v0 + v2 @kind int;
  #L3f2f16.  call temp:= `O`(v3) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2f1c.  v2:= temp @kind object;
  #L3f2f1e.  if v2 == 0 then goto L3f2f32;
  #L3f2f22.  call temp:= `O`(v3) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2f28.  v1:= temp @kind object;
  #L3f2f2a.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/b;.hashCode:()I` @kind virtual;
  #L3f2f30.  v1:= temp;
  #L3f2f32.  v0:= v0 + v1 @kind int;
  #L3f2f34.  call temp:= `L`(v3) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f2f3a.  v1:= temp @kind object;
  #L3f2f3c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f2f42.  v1:= temp;
  #L3f2f44.  v1:= v1 * 7;
  #L3f2f48.  v0:= v0 + v1 @kind int;
  #L3f2f4a.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.x` v2 @kind this) @signature `Lorg/c/a/b/x;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f2f5c.  v0:= new `java.lang.StringBuilder`;
  #L3f2f60.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f2f66.  v1:= "LimitChronology[" @kind object;
  #L3f2f6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2f70.  call temp:= `L`(v2) @signature `Lorg/c/a/b/x;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f2f76.  v1:= temp @kind object;
  #L3f2f78.  call temp:= `toString`(v1) @signature `Lorg/c/a/a;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f2f7e.  v1:= temp @kind object;
  #L3f2f80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2f86.  v1:= ", " @kind object;
  #L3f2f8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2f90.  call temp:= `N`(v2) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2f96.  v1:= temp @kind object;
  #L3f2f98.  if v1 != 0 then goto L3f2fa2;
  #L3f2f9c.  v1:= "NoLimit" @kind object;
  #L3f2fa0.  goto L3f2fb2;
  #L3f2fa2.  call temp:= `N`(v2) @signature `Lorg/c/a/b/x;.N:()Lorg/c/a/b;` @kind virtual;
  #L3f2fa8.  v1:= temp @kind object;
  #L3f2faa.  call temp:= `toString`(v1) @signature `Lorg/c/a/b;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f2fb0.  v1:= temp @kind object;
  #L3f2fb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2fb8.  v1:= ", " @kind object;
  #L3f2fbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2fc2.  call temp:= `O`(v2) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2fc8.  v1:= temp @kind object;
  #L3f2fca.  if v1 != 0 then goto L3f2fd4;
  #L3f2fce.  v1:= "NoLimit" @kind object;
  #L3f2fd2.  goto L3f2fe4;
  #L3f2fd4.  call temp:= `O`(v2) @signature `Lorg/c/a/b/x;.O:()Lorg/c/a/b;` @kind virtual;
  #L3f2fda.  v1:= temp @kind object;
  #L3f2fdc.  call temp:= `toString`(v1) @signature `Lorg/c/a/b;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f2fe2.  v1:= temp @kind object;
  #L3f2fe4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2fea.  v1:= 93I;
  #L3f2fee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f2ff4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f2ffa.  v0:= temp @kind object;
  #L3f2ffc.  return v0 @kind object;
}
