record `org.c.a.b.w` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.f` @kind class {
}
global `org.c.a.b.w` `@@org.c.a.b.w.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.c.a.b.w.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.c.a.b.w.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/b/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f2710.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3f2714.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3f271a.  `@@org.c.a.b.w.b` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3f271e.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f2722.  call temp:= `b`(v0) @signature `Lorg/c/a/b/w;.b:(Lorg/c/a/f;)Lorg/c/a/b/w;` @kind static;
  #L3f2728.  v0:= temp @kind object;
  #L3f272a.  `@@org.c.a.b.w.a` @type ^`org.c.a.b.w` := v0 @kind object;
  #L3f272e.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.w` v0 @kind this, `org.c.a.a` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/b/w;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f2740.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/c/a/b/f;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f2746.  return @kind void;
}
procedure `org.c.a.b.w` `a`(`org.c.a.f` v5 @kind object, `int` v6 ) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f25e8.  if v5 != 0 then goto L3f25f4;
  #L3f25ec.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f25f2.  v5:= temp @kind object;
  #L3f25f4.  v0:= `@@org.c.a.b.w.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f25f8.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f25fe.  v0:= temp @kind object;
  #L3f2600.  v0:= (`org.c.a.b.w`[]) v0 @kind object;
  #L3f2604.  if v0 != 0 then goto L3f2624;
  #L3f2608.  v0:= 7I;
  #L3f260a.  v0:= new `org.c.a.b.w`[v0];
  #L3f260e.  v1:= `@@org.c.a.b.w.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f2612.  call temp:= `putIfAbsent`(v1, v5, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f2618.  v1:= temp @kind object;
  #L3f261a.  v1:= (`org.c.a.b.w`[]) v1 @kind object;
  #L3f261e.  if v1 == 0 then goto L3f2624;
  #L3f2622.  v0:= v1 @kind object;
  #L3f2624.  v1:= v6 + -1;
  #L3f2628.  v2:= v0[v1] @kind object;
  #L3f262c.  if v2 != 0 then goto L3f2680;
  #L3f2630.  @monitorenter v0
  #L3f2632.  v2:= v0[v1] @kind object;
  #L3f2636.  if v2 != 0 then goto L3f2676;
  #L3f263a.  v2:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f263e.  v3:= 0I;
  #L3f2640.  if v5 != v2 then goto L3f2650;
  #L3f2644.  v5:= new `org.c.a.b.w`;
  #L3f2648.  call `<init>`(v5, v3, v3, v6) @signature `Lorg/c/a/b/w;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f264e.  goto L3f2670;
  #L3f2650.  v2:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f2654.  call temp:= `a`(v2, v6) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @kind static;
  #L3f265a.  v2:= temp @kind object;
  #L3f265c.  v4:= new `org.c.a.b.w`;
  #L3f2660.  call temp:= `a`(v2, v5) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/a;Lorg/c/a/f;)Lorg/c/a/b/y;` @kind static;
  #L3f2666.  v5:= temp @kind object;
  #L3f2668.  call `<init>`(v4, v5, v3, v6) @signature `Lorg/c/a/b/w;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f266e.  v5:= v4 @kind object;
  #L3f2670.  v0[v1]:= v5 @kind object;
  #L3f2674.  v2:= v5 @kind object;
  #L3f2676.  @monitorexit v0
  #L3f2678.  goto L3f2680;
  #L3f267a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f267c.  @monitorexit v0
  #L3f267e.  throw v5;
  #L3f2680.  return v2 @kind object;
  #L3f2682.  v5:= new `java.lang.IllegalArgumentException`;
  #L3f2686.  v0:= new `java.lang.StringBuilder`;
  #L3f268a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f2690.  v1:= "Invalid min days in first week: " @kind object;
  #L3f2694.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f269a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f26a0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f26a6.  v6:= temp @kind object;
  #L3f26a8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f26ae.  throw v5;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L3f2628..L3f262c] goto L3f2682;
  catch `java.lang.Throwable` @[L3f2632..L3f267e] goto L3f267a;
}
procedure `org.c.a.b.w` `b`(`org.c.a.f` v1 @kind object) @signature `Lorg/c/a/b/w;.b:(Lorg/c/a/f;)Lorg/c/a/b/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f26d8.  v0:= 4I;
  #L3f26da.  call temp:= `a`(v1, v0) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @kind static;
  #L3f26e0.  v1:= temp @kind object;
  #L3f26e2.  return v1 @kind object;
}
procedure `int` `h`(`int` v3 ) @signature `Lorg/c/a/b/w;.h:(I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f23ac.  if v3 > 0 then goto L3f23d6;
  #L3f23b0.  if v3 != 0 then goto L3f23d2;
  #L3f23b4.  v0:= new `org.c.a.i`;
  #L3f23b8.  call temp:= `s`() @signature `Lorg/c/a/d;.s:()Lorg/c/a/d;` @kind static;
  #L3f23be.  v1:= temp @kind object;
  #L3f23c0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3f23c6.  v3:= temp @kind object;
  #L3f23c8.  v2:= 0I;
  #L3f23ca.  call `<init>`(v0, v1, v3, v2, v2) @signature `Lorg/c/a/i;.<init>:(Lorg/c/a/d;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)V` @kind direct;
  #L3f23d0.  throw v0;
  #L3f23d2.  v3:= v3 + 1;
  #L3f23d6.  return v3;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.b.w` v2 @kind this) @signature `Lorg/c/a/b/w;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f2404.  call temp:= `L`(v2) @signature `Lorg/c/a/b/w;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f240a.  v0:= temp @kind object;
  #L3f240c.  call temp:= `N`(v2) @signature `Lorg/c/a/b/w;.N:()I` @kind virtual;
  #L3f2412.  v1:= temp;
  #L3f2414.  if v1 != 0 then goto L3f241a;
  #L3f2418.  v1:= 4I;
  #L3f241a.  if v0 != 0 then goto L3f242c;
  #L3f241e.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f2422.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @kind static;
  #L3f2428.  v0:= temp @kind object;
  #L3f242a.  goto L3f243c;
  #L3f242c.  call temp:= `a`(v0) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f2432.  v0:= temp @kind object;
  #L3f2434.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;I)Lorg/c/a/b/w;` @kind static;
  #L3f243a.  v0:= temp @kind object;
  #L3f243c.  return v0 @kind object;
}
procedure `int` `N`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.N:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f2360.  call temp:= `N`(v1) @signature `Lorg/c/a/b/f;.N:()I` @kind super;
  #L3f2366.  v0:= temp;
  #L3f2368.  return v0;
}
procedure `int` `Q`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.Q:()I` @AccessFlag  {
    temp;
    v0;

  #L3f237c.  v0:= -292269054I;
  #L3f2382.  return v0;
}
procedure `int` `R`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.R:()I` @AccessFlag  {
    temp;
    v0;

  #L3f2394.  v0:= 292272992I;
  #L3f239a.  return v0;
}
procedure `long` `T`(`org.c.a.b.w` v2 @kind this) @signature `Lorg/c/a/b/w;.T:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f246c.  v0:= 31557600000L;
  #L3f2476.  return v0 @kind wide;
}
procedure `long` `U`(`org.c.a.b.w` v2 @kind this) @signature `Lorg/c/a/b/w;.U:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f2488.  v0:= 15778800000L;
  #L3f2492.  return v0 @kind wide;
}
procedure `long` `V`(`org.c.a.b.w` v2 @kind this) @signature `Lorg/c/a/b/w;.V:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f24a4.  v0:= 2629800000L;
  #L3f24ae.  return v0 @kind wide;
}
procedure `long` `W`(`org.c.a.b.w` v2 @kind this) @signature `Lorg/c/a/b/w;.W:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f24c0.  v0:= 31083663600000L;
  #L3f24ca.  return v0 @kind wide;
}
procedure `long` `a`(`org.c.a.b.w` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/c/a/b/w;.a:(IIII)J` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f24dc.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/f;.a:(IIII)J` @kind super;
  #L3f24e2.  v1:= temp @kind wide;
  #L3f24e4.  return v1 @kind wide;
}
procedure `long` `a`(`org.c.a.b.w` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/c/a/b/w;.a:(IIIIIII)J` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f24f8.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/c/a/b/f;.a:(IIIIIII)J` @kind super;
  #L3f24fe.  v1:= temp @kind wide;
  #L3f2500.  return v1 @kind wide;
}
procedure `org.c.a.a` `a`(`org.c.a.b.w` v1 @kind this, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f259c.  if v2 != 0 then goto L3f25a8;
  #L3f25a0.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f25a6.  v2:= temp @kind object;
  #L3f25a8.  call temp:= `a`(v1) @signature `Lorg/c/a/b/w;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f25ae.  v0:= temp @kind object;
  #L3f25b0.  if v2 != v0 then goto L3f25b6;
  #L3f25b4.  return v1 @kind object;
  #L3f25b6.  call temp:= `b`(v2) @signature `Lorg/c/a/b/w;.b:(Lorg/c/a/f;)Lorg/c/a/b/w;` @kind static;
  #L3f25bc.  v2:= temp @kind object;
  #L3f25be.  return v2 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.a:()Lorg/c/a/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f26f4.  call temp:= `a`(v1) @signature `Lorg/c/a/b/f;.a:()Lorg/c/a/f;` @kind super;
  #L3f26fa.  v0:= temp @kind object;
  #L3f26fc.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.b.w` v2 @kind this, `org.c.a.b.a$a` v3 @kind object) @signature `Lorg/c/a/b/w;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f2758.  call temp:= `L`(v2) @signature `Lorg/c/a/b/w;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f275e.  v0:= temp @kind object;
  #L3f2760.  if v0 != 0 then goto L3f278e;
  #L3f2764.  call `a`(v2, v3) @signature `Lorg/c/a/b/f;.a:(Lorg/c/a/b/a$a;)V` @kind super;
  #L3f276a.  v0:= new `org.c.a.d.q`;
  #L3f276e.  v1:= v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` @kind object;
  #L3f2772.  call `<init>`(v0, v2, v1) @signature `Lorg/c/a/d/q;.<init>:(Lorg/c/a/a;Lorg/c/a/c;)V` @kind direct;
  #L3f2778.  v3.`org.c.a.b.a$a.E` @type ^`org.c.a.c` := v0 @kind object;
  #L3f277c.  v0:= new `org.c.a.d.q`;
  #L3f2780.  v1:= v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` @kind object;
  #L3f2784.  call `<init>`(v0, v2, v1) @signature `Lorg/c/a/d/q;.<init>:(Lorg/c/a/a;Lorg/c/a/c;)V` @kind direct;
  #L3f278a.  v3.`org.c.a.b.a$a.B` @type ^`org.c.a.c` := v0 @kind object;
  #L3f278e.  return @kind void;
}
procedure `long` `b`(`org.c.a.b.w` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/c/a/b/w;.b:(III)J` @AccessFlag  {
    temp;

  #L3f2514.  call temp:= `h`(v1) @signature `Lorg/c/a/b/w;.h:(I)I` @kind static;
  #L3f251a.  v1:= temp;
  #L3f251c.  call temp:= `b`(v0, v1, v2, v3) @signature `Lorg/c/a/b/f;.b:(III)J` @kind super;
  #L3f2522.  v1:= temp @kind wide;
  #L3f2524.  return v1 @kind wide;
}
procedure `org.c.a.a` `b`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f25d0.  v0:= `@@org.c.a.b.w.a` @type ^`org.c.a.b.w` @kind object;
  #L3f25d4.  return v0 @kind object;
}
procedure `boolean` `e`(`org.c.a.b.w` v0 @kind this, `int` v1 ) @signature `Lorg/c/a/b/w;.e:(I)Z` @AccessFlag  {
    temp;

  #L3f2324.  v1:= v1 ^& 3;
  #L3f2328.  if v1 != 0 then goto L3f2330;
  #L3f232c.  v1:= 1I;
  #L3f232e.  goto L3f2332;
  #L3f2330.  v1:= 0I;
  #L3f2332.  return v1;
}
procedure `boolean` `equals`(`org.c.a.b.w` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/b/w;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f2344.  call temp:= `equals`(v0, v1) @signature `Lorg/c/a/b/f;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L3f234a.  v1:= temp;
  #L3f234c.  return v1;
}
procedure `long` `f`(`org.c.a.b.w` v6 @kind this, `int` v7 ) @signature `Lorg/c/a/b/w;.f:(I)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f2538.  v0:= v7 + -1968;
  #L3f253c.  if v0 > 0 then goto L3f254a;
  #L3f2540.  v7:= v0 + 3;
  #L3f2544.  v7:= v7 ^> 2;
  #L3f2548.  goto L3f2562;
  #L3f254a.  v1:= v0 ^> 2;
  #L3f254e.  call temp:= `e`(v6, v7) @signature `Lorg/c/a/b/w;.e:(I)Z` @kind virtual;
  #L3f2554.  v7:= temp;
  #L3f2556.  if v7 != 0 then goto L3f2560;
  #L3f255a.  v7:= v1 + 1;
  #L3f255e.  goto L3f2562;
  #L3f2560.  v7:= v1;
  #L3f2562.  v0:= (`long`) v0 @kind i2l;
  #L3f2564.  v2:= 365L;
  #L3f2568.  v0:= v0 * v2 @kind long;
  #L3f256c.  v2:= (`long`) v7 @kind i2l;
  #L3f256e.  v4:= v0 + v2 @kind long;
  #L3f2572.  v0:= 86400000L;
  #L3f2578.  v4:= v4 * v0 @kind long;
  #L3f257c.  v0:= 62035200000L;
  #L3f2586.  v2:= v4 - v0 @kind long;
  #L3f258a.  return v2 @kind wide;
}
procedure `int` `hashCode`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.hashCode:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f23e8.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/b/f;.hashCode:()I` @kind super;
  #L3f23ee.  v0:= temp;
  #L3f23f0.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.w` v1 @kind this) @signature `Lorg/c/a/b/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f2450.  call temp:= `toString`(v1) @signature `Lorg/c/a/b/f;.toString:()Ljava/lang/String;` @kind super;
  #L3f2456.  v0:= temp @kind object;
  #L3f2458.  return v0 @kind object;
}
