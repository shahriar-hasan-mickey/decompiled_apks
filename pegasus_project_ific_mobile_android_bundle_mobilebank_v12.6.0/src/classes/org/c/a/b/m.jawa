record `org.c.a.b.m` @kind class @AccessFlag  {
  `org.c.a.f` `org.c.a.b.m.a` @AccessFlag PRIVATE_FINAL;
  `org.c.a.k` `org.c.a.b.m.b` @AccessFlag PRIVATE_FINAL;
  `int` `org.c.a.b.m.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.b.m` v0 @kind this, `org.c.a.f` v1 @kind object, `org.c.a.k` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/b/m;.<init>:(Lorg/c/a/f;Lorg/c/a/k;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ef724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ef72a.  v0.`org.c.a.b.m.a` @type ^`org.c.a.f` := v1 @kind object;
  #L3ef72e.  v0.`org.c.a.b.m.b` @type ^`org.c.a.k` := v2 @kind object;
  #L3ef732.  v0.`org.c.a.b.m.c` @type ^`int` := v3;
  #L3ef736.  return @kind void;
}
procedure `boolean` `equals`(`org.c.a.b.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/b/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ef63c.  v0:= 1I;
  #L3ef63e.  if v4 != v5 then goto L3ef644;
  #L3ef642.  return v0;
  #L3ef644.  v1:= 0I;
  #L3ef646.  if v5 != 0 then goto L3ef64c;
  #L3ef64a.  return v1;
  #L3ef64c.  v2:= instanceof @variable v5 @type ^`org.c.a.b.m` @kind boolean;
  #L3ef650.  if v2 != 0 then goto L3ef656;
  #L3ef654.  return v1;
  #L3ef656.  v5:= (`org.c.a.b.m`) v5 @kind object;
  #L3ef65a.  v2:= v4.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef65e.  if v2 != 0 then goto L3ef66c;
  #L3ef662.  v2:= v5.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef666.  if v2 == 0 then goto L3ef682;
  #L3ef66a.  return v1;
  #L3ef66c.  v2:= v4.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef670.  v3:= v5.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef674.  call temp:= `equals`(v2, v3) @signature `Lorg/c/a/k;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef67a.  v2:= temp;
  #L3ef67c.  if v2 != 0 then goto L3ef682;
  #L3ef680.  return v1;
  #L3ef682.  v2:= v4.`org.c.a.b.m.c` @type ^`int`;
  #L3ef686.  v3:= v5.`org.c.a.b.m.c` @type ^`int`;
  #L3ef68a.  if v2 == v3 then goto L3ef690;
  #L3ef68e.  return v1;
  #L3ef690.  v2:= v4.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef694.  if v2 != 0 then goto L3ef6a2;
  #L3ef698.  v5:= v5.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef69c.  if v5 == 0 then goto L3ef6b8;
  #L3ef6a0.  return v1;
  #L3ef6a2.  v2:= v4.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef6a6.  v5:= v5.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef6aa.  call temp:= `equals`(v2, v5) @signature `Lorg/c/a/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef6b0.  v5:= temp;
  #L3ef6b2.  if v5 != 0 then goto L3ef6b8;
  #L3ef6b6.  return v1;
  #L3ef6b8.  return v0;
}
procedure `int` `hashCode`(`org.c.a.b.m` v4 @kind this) @signature `Lorg/c/a/b/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ef6cc.  v0:= v4.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef6d0.  v1:= 0I;
  #L3ef6d2.  if v0 != 0 then goto L3ef6da;
  #L3ef6d6.  v0:= 0I;
  #L3ef6d8.  goto L3ef6e6;
  #L3ef6da.  v0:= v4.`org.c.a.b.m.b` @type ^`org.c.a.k` @kind object;
  #L3ef6de.  call temp:= `hashCode`(v0) @signature `Lorg/c/a/k;.hashCode:()I` @kind virtual;
  #L3ef6e4.  v0:= temp;
  #L3ef6e6.  v2:= 31I;
  #L3ef6ea.  v0:= v0 + v2 @kind int;
  #L3ef6ec.  v0:= v0 * 31;
  #L3ef6f0.  v3:= v4.`org.c.a.b.m.c` @type ^`int`;
  #L3ef6f4.  v0:= v0 + v3 @kind int;
  #L3ef6f6.  v0:= v0 * 31;
  #L3ef6fa.  v2:= v4.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef6fe.  if v2 != 0 then goto L3ef704;
  #L3ef702.  goto L3ef710;
  #L3ef704.  v1:= v4.`org.c.a.b.m.a` @type ^`org.c.a.f` @kind object;
  #L3ef708.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/f;.hashCode:()I` @kind virtual;
  #L3ef70e.  v1:= temp;
  #L3ef710.  v0:= v0 + v1 @kind int;
  #L3ef712.  return v0;
}
