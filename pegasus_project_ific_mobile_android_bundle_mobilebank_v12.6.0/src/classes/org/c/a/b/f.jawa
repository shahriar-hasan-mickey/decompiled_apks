record `org.c.a.b.f` @kind class @AccessFlag ABSTRACT extends `org.c.a.b.c` @kind class {
}
global `int`[] `@@org.c.a.b.f.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `int`[] `@@org.c.a.b.f.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.c.a.b.f.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `long`[] `@@org.c.a.b.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.c.a.b.f.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/b/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3ee35c.  v0:= 12I;
  #L3ee360.  v1:= new `int`[v0];
  #L3ee364.  goto L3ee3e4;
  #L3ee36a.  `@@org.c.a.b.f.a` @type ^`int`[] := v1 @kind object;
  #L3ee36e.  v1:= new `int`[v0];
  #L3ee372.  goto L3ee41c;
  #L3ee378.  `@@org.c.a.b.f.b` @type ^`int`[] := v1 @kind object;
  #L3ee37c.  v1:= new `long`[v0];
  #L3ee380.  `@@org.c.a.b.f.c` @type ^`long`[] := v1 @kind object;
  #L3ee384.  v0:= new `long`[v0];
  #L3ee388.  `@@org.c.a.b.f.d` @type ^`long`[] := v0 @kind object;
  #L3ee38c.  v0:= 0L;
  #L3ee390.  v2:= 0I;
  #L3ee392.  v3:= v0 @kind wide;
  #L3ee394.  v5:= 11I;
  #L3ee398.  if v2 >= v5 then goto L3ee3e2;
  #L3ee39c.  v5:= `@@org.c.a.b.f.a` @type ^`int`[] @kind object;
  #L3ee3a0.  v5:= v5[v2];
  #L3ee3a4.  v5:= (`long`) v5 @kind i2l;
  #L3ee3a6.  v7:= 86400000L;
  #L3ee3ac.  v5:= v5 * v7 @kind long;
  #L3ee3b0.  v9:= v0 + v5 @kind long;
  #L3ee3b4.  v0:= `@@org.c.a.b.f.c` @type ^`long`[] @kind object;
  #L3ee3b8.  v1:= v2 + 1;
  #L3ee3bc.  v0[v1]:= v9 @kind wide;
  #L3ee3c0.  v0:= `@@org.c.a.b.f.b` @type ^`int`[] @kind object;
  #L3ee3c4.  v0:= v0[v2];
  #L3ee3c8.  v5:= (`long`) v0 @kind i2l;
  #L3ee3ca.  v5:= v5 * v7 @kind long;
  #L3ee3ce.  v7:= v3 + v5 @kind long;
  #L3ee3d2.  v0:= `@@org.c.a.b.f.d` @type ^`long`[] @kind object;
  #L3ee3d6.  v0[v1]:= v7 @kind wide;
  #L3ee3da.  v2:= v1;
  #L3ee3dc.  v3:= v7 @kind wide;
  #L3ee3de.  v0:= v9 @kind wide;
  #L3ee3e0.  goto L3ee394;
  #L3ee3e2.  return @kind void;
  #L3ee3e4.  v1:= (31I, 28I, 31I, 30I, 31I, 30I, 31I, 31I, 30I, 31I, 30I, 31I) @kind object;
  #L3ee41b.  goto L3ee36a;
  #L3ee41c.  v1:= (31I, 29I, 31I, 30I, 31I, 30I, 31I, 31I, 30I, 31I, 30I, 31I) @kind object;
  #L3ee453.  goto L3ee378;
}
procedure `void` `<init>`(`org.c.a.b.f` v0 @kind this, `org.c.a.a` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/b/f;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3ee464.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/c/a/b/c;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3ee46a.  return @kind void;
}
procedure `int` `a`(`org.c.a.b.f` v12 @kind this, `long` v13 , `int` v15 ) @signature `Lorg/c/a/b/f;.a:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3ee038.  call temp:= `d`(v12, v15) @signature `Lorg/c/a/b/f;.d:(I)J` @kind virtual;
  #L3ee03e.  v0:= temp @kind wide;
  #L3ee040.  v2:= v13 - v0 @kind long;
  #L3ee044.  v13:= 10I;
  #L3ee048.  v0:= v2 ^> v13 @kind long;
  #L3ee04c.  v14:= (`int`) v0 @kind l2i;
  #L3ee04e.  call temp:= `e`(v12, v15) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee054.  v15:= temp;
  #L3ee056.  v0:= 12I;
  #L3ee05a.  v1:= 11I;
  #L3ee05e.  v2:= 9I;
  #L3ee062.  v3:= 8I;
  #L3ee066.  v4:= 7I;
  #L3ee068.  v5:= 6I;
  #L3ee06a.  v6:= 5I;
  #L3ee06c.  v7:= 4I;
  #L3ee06e.  v8:= 3I;
  #L3ee070.  v9:= 2I;
  #L3ee072.  v10:= 1I;
  #L3ee074.  v11:= 2615625I;
  #L3ee07a.  if v15 == 0 then goto L3ee12c;
  #L3ee07e.  v15:= 15356250I;
  #L3ee084.  if v14 >= v15 then goto L3ee0d6;
  #L3ee088.  v13:= 7678125I;
  #L3ee08e.  if v14 >= v13 then goto L3ee0b0;
  #L3ee092.  if v14 >= v11 then goto L3ee09a;
  #L3ee096.  goto L3ee1a4;
  #L3ee09a.  v13:= 5062500I;
  #L3ee0a0.  if v14 >= v13 then goto L3ee0aa;
  #L3ee0a4.  v10:= 2I;
  #L3ee0a6.  goto L3ee1a4;
  #L3ee0aa.  v10:= 3I;
  #L3ee0ac.  goto L3ee1a4;
  #L3ee0b0.  v13:= 10209375I;
  #L3ee0b6.  if v14 >= v13 then goto L3ee0c0;
  #L3ee0ba.  v10:= 4I;
  #L3ee0bc.  goto L3ee1a4;
  #L3ee0c0.  v13:= 12825000I;
  #L3ee0c6.  if v14 >= v13 then goto L3ee0d0;
  #L3ee0ca.  v10:= 5I;
  #L3ee0cc.  goto L3ee1a4;
  #L3ee0d0.  v10:= 6I;
  #L3ee0d2.  goto L3ee1a4;
  #L3ee0d6.  v15:= 23118750I;
  #L3ee0dc.  if v14 >= v15 then goto L3ee106;
  #L3ee0e0.  v13:= 17971875I;
  #L3ee0e6.  if v14 >= v13 then goto L3ee0f0;
  #L3ee0ea.  v10:= 7I;
  #L3ee0ec.  goto L3ee1a4;
  #L3ee0f0.  v13:= 20587500I;
  #L3ee0f6.  if v14 >= v13 then goto L3ee100;
  #L3ee0fa.  v10:= 8I;
  #L3ee0fe.  goto L3ee1a4;
  #L3ee100.  v10:= 9I;
  #L3ee104.  goto L3ee1a4;
  #L3ee106.  v15:= 25734375I;
  #L3ee10c.  if v14 >= v15 then goto L3ee116;
  #L3ee110.  v10:= 10I;
  #L3ee114.  goto L3ee1a4;
  #L3ee116.  v13:= 28265625I;
  #L3ee11c.  if v14 >= v13 then goto L3ee126;
  #L3ee120.  v10:= 11I;
  #L3ee124.  goto L3ee1a4;
  #L3ee126.  v10:= 12I;
  #L3ee12a.  goto L3ee1a4;
  #L3ee12c.  v15:= 15271875I;
  #L3ee132.  if v14 >= v15 then goto L3ee16a;
  #L3ee136.  v13:= 7593750I;
  #L3ee13c.  if v14 >= v13 then goto L3ee152;
  #L3ee140.  if v14 >= v11 then goto L3ee146;
  #L3ee144.  goto L3ee1a4;
  #L3ee146.  v13:= 4978125I;
  #L3ee14c.  if v14 >= v13 then goto L3ee0aa;
  #L3ee150.  goto L3ee0a4;
  #L3ee152.  v13:= 10125000I;
  #L3ee158.  if v14 >= v13 then goto L3ee15e;
  #L3ee15c.  goto L3ee0ba;
  #L3ee15e.  v13:= 12740625I;
  #L3ee164.  if v14 >= v13 then goto L3ee0d0;
  #L3ee168.  goto L3ee0ca;
  #L3ee16a.  v15:= 23034375I;
  #L3ee170.  if v14 >= v15 then goto L3ee18c;
  #L3ee174.  v13:= 17887500I;
  #L3ee17a.  if v14 >= v13 then goto L3ee180;
  #L3ee17e.  goto L3ee0ea;
  #L3ee180.  v13:= 20503125I;
  #L3ee186.  if v14 >= v13 then goto L3ee100;
  #L3ee18a.  goto L3ee0fa;
  #L3ee18c.  v15:= 25650000I;
  #L3ee192.  if v14 >= v15 then goto L3ee198;
  #L3ee196.  goto L3ee110;
  #L3ee198.  v13:= 28181250I;
  #L3ee19e.  if v14 >= v13 then goto L3ee126;
  #L3ee1a2.  goto L3ee120;
  #L3ee1a4.  return v10;
}
procedure `long` `a`(`org.c.a.b.f` v8 @kind this, `long` v9 , `long` v11 ) @signature `Lorg/c/a/b/f;.a:(JJ)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ee218.  call temp:= `a`(v8, v9) @signature `Lorg/c/a/b/f;.a:(J)I` @kind virtual;
  #L3ee21e.  v0:= temp;
  #L3ee220.  call temp:= `a`(v8, v11) @signature `Lorg/c/a/b/f;.a:(J)I` @kind virtual;
  #L3ee226.  v1:= temp;
  #L3ee228.  call temp:= `d`(v8, v0) @signature `Lorg/c/a/b/f;.d:(I)J` @kind virtual;
  #L3ee22e.  v2:= temp @kind wide;
  #L3ee230.  v4:= v9 - v2 @kind long;
  #L3ee234.  call temp:= `d`(v8, v1) @signature `Lorg/c/a/b/f;.d:(I)J` @kind virtual;
  #L3ee23a.  v9:= temp @kind wide;
  #L3ee23c.  v2:= v11 - v9 @kind long;
  #L3ee240.  v9:= 5097600000L;
  #L3ee24a.  v11:= lcmp(v2, v9);
  #L3ee24e.  if v11 < 0 then goto L3ee292;
  #L3ee252.  call temp:= `e`(v8, v1) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee258.  v11:= temp;
  #L3ee25a.  v6:= 86400000L;
  #L3ee260.  if v11 == 0 then goto L3ee278;
  #L3ee264.  call temp:= `e`(v8, v0) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee26a.  v9:= temp;
  #L3ee26c.  if v9 != 0 then goto L3ee292;
  #L3ee270.  v9:= v2 - v6 @kind long;
  #L3ee274.  v2:= v9 @kind wide;
  #L3ee276.  goto L3ee292;
  #L3ee278.  v11:= lcmp(v4, v9);
  #L3ee27c.  if v11 < 0 then goto L3ee292;
  #L3ee280.  call temp:= `e`(v8, v0) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee286.  v9:= temp;
  #L3ee288.  if v9 == 0 then goto L3ee292;
  #L3ee28c.  v9:= v4 - v6 @kind long;
  #L3ee290.  v4:= v9 @kind wide;
  #L3ee292.  v0:= v0 - v1 @kind int;
  #L3ee294.  v9:= lcmp(v4, v2);
  #L3ee298.  if v9 >= 0 then goto L3ee2a0;
  #L3ee29c.  v0:= v0 + -1;
  #L3ee2a0.  v9:= (`long`) v0 @kind i2l;
  #L3ee2a2.  return v9 @kind wide;
}
procedure `int` `b`(`org.c.a.b.f` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lorg/c/a/b/f;.b:(II)I` @AccessFlag  {
    temp;

  #L3ee1b8.  call temp:= `e`(v0, v1) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee1be.  v1:= temp;
  #L3ee1c0.  if v1 == 0 then goto L3ee1d2;
  #L3ee1c4.  v1:= `@@org.c.a.b.f.b` @type ^`int`[] @kind object;
  #L3ee1c8.  v2:= v2 + -1;
  #L3ee1cc.  v1:= v1[v2];
  #L3ee1d0.  return v1;
  #L3ee1d2.  v1:= `@@org.c.a.b.f.a` @type ^`int`[] @kind object;
  #L3ee1d6.  v2:= v2 + -1;
  #L3ee1da.  v1:= v1[v2];
  #L3ee1de.  return v1;
}
procedure `long` `c`(`org.c.a.b.f` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lorg/c/a/b/f;.c:(II)J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ee2b4.  call temp:= `e`(v2, v3) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee2ba.  v3:= temp;
  #L3ee2bc.  if v3 == 0 then goto L3ee2ce;
  #L3ee2c0.  v3:= `@@org.c.a.b.f.d` @type ^`long`[] @kind object;
  #L3ee2c4.  v4:= v4 + -1;
  #L3ee2c8.  v0:= v3[v4] @kind wide;
  #L3ee2cc.  return v0 @kind wide;
  #L3ee2ce.  v3:= `@@org.c.a.b.f.c` @type ^`long`[] @kind object;
  #L3ee2d2.  v4:= v4 + -1;
  #L3ee2d6.  v0:= v3[v4] @kind wide;
  #L3ee2da.  return v0 @kind wide;
}
procedure `int` `e`(`org.c.a.b.f` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/b/f;.e:(JI)I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ee1f0.  v0:= 28I;
  #L3ee1f4.  if v5 > v0 then goto L3ee1fe;
  #L3ee1f8.  v1:= 1I;
  #L3ee1fa.  if v5 >= v1 then goto L3ee206;
  #L3ee1fe.  call temp:= `i`(v2, v3) @signature `Lorg/c/a/b/f;.i:(J)I` @kind virtual;
  #L3ee204.  v0:= temp;
  #L3ee206.  return v0;
}
procedure `long` `f`(`org.c.a.b.f` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/c/a/b/f;.f:(JI)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ee2ec.  call temp:= `a`(v4, v5) @signature `Lorg/c/a/b/f;.a:(J)I` @kind virtual;
  #L3ee2f2.  v0:= temp;
  #L3ee2f4.  call temp:= `c`(v4, v5, v0) @signature `Lorg/c/a/b/f;.c:(JI)I` @kind virtual;
  #L3ee2fa.  v1:= temp;
  #L3ee2fc.  call temp:= `h`(v4, v5) @signature `Lorg/c/a/b/f;.h:(J)I` @kind virtual;
  #L3ee302.  v5:= temp;
  #L3ee304.  v6:= 59I;
  #L3ee308.  if v1 <= v6 then goto L3ee33a;
  #L3ee30c.  call temp:= `e`(v4, v0) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee312.  v6:= temp;
  #L3ee314.  if v6 == 0 then goto L3ee32a;
  #L3ee318.  call temp:= `e`(v4, v7) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee31e.  v6:= temp;
  #L3ee320.  if v6 != 0 then goto L3ee33a;
  #L3ee324.  v1:= v1 + -1;
  #L3ee328.  goto L3ee33a;
  #L3ee32a.  call temp:= `e`(v4, v7) @signature `Lorg/c/a/b/f;.e:(I)Z` @kind virtual;
  #L3ee330.  v6:= temp;
  #L3ee332.  if v6 == 0 then goto L3ee33a;
  #L3ee336.  v1:= v1 + 1;
  #L3ee33a.  v6:= 1I;
  #L3ee33c.  call temp:= `a`(v4, v7, v6, v1) @signature `Lorg/c/a/b/f;.a:(III)J` @kind virtual;
  #L3ee342.  v6:= temp @kind wide;
  #L3ee344.  v0:= (`long`) v5 @kind i2l;
  #L3ee346.  v2:= v6 + v0 @kind long;
  #L3ee34a.  return v2 @kind wide;
}
procedure `boolean` `j`(`org.c.a.b.f` v2 @kind this, `long` v3 ) @signature `Lorg/c/a/b/f;.j:(J)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3edff4.  call temp:= `u`(v2) @signature `Lorg/c/a/b/f;.u:()Lorg/c/a/c;` @kind virtual;
  #L3edffa.  v0:= temp @kind object;
  #L3edffc.  call temp:= `a`(v0, v3) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3ee002.  v0:= temp;
  #L3ee004.  v1:= 29I;
  #L3ee008.  if v0 != v1 then goto L3ee024;
  #L3ee00c.  call temp:= `C`(v2) @signature `Lorg/c/a/b/f;.C:()Lorg/c/a/c;` @kind virtual;
  #L3ee012.  v0:= temp @kind object;
  #L3ee014.  call temp:= `b`(v0, v3) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L3ee01a.  v3:= temp;
  #L3ee01c.  if v3 == 0 then goto L3ee024;
  #L3ee020.  v3:= 1I;
  #L3ee022.  goto L3ee026;
  #L3ee024.  v3:= 0I;
  #L3ee026.  return v3;
}
