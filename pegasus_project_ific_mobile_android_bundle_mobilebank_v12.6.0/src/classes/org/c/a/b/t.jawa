record `org.c.a.b.t` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.b.f` @kind class {
}
global `org.c.a.b.t` `@@org.c.a.b.t.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentHashMap` `@@org.c.a.b.t.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.c.a.b.t.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/b/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f1d50.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3f1d54.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L3f1d5a.  `@@org.c.a.b.t.b` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L3f1d5e.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f1d62.  call temp:= `b`(v0) @signature `Lorg/c/a/b/t;.b:(Lorg/c/a/f;)Lorg/c/a/b/t;` @kind static;
  #L3f1d68.  v0:= temp @kind object;
  #L3f1d6a.  `@@org.c.a.b.t.a` @type ^`org.c.a.b.t` := v0 @kind object;
  #L3f1d6e.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.b.t` v0 @kind this, `org.c.a.a` v1 @kind object, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/b/t;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f1d80.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/c/a/b/f;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f1d86.  return @kind void;
}
procedure `org.c.a.b.t` `Z`() @signature `Lorg/c/a/b/t;.Z:()Lorg/c/a/b/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1c10.  v0:= `@@org.c.a.b.t.a` @type ^`org.c.a.b.t` @kind object;
  #L3f1c14.  return v0 @kind object;
}
procedure `org.c.a.b.t` `a`(`org.c.a.f` v5 @kind object, `int` v6 ) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3f1c28.  if v5 != 0 then goto L3f1c34;
  #L3f1c2c.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f1c32.  v5:= temp @kind object;
  #L3f1c34.  v0:= `@@org.c.a.b.t.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f1c38.  call temp:= `get`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f1c3e.  v0:= temp @kind object;
  #L3f1c40.  v0:= (`org.c.a.b.t`[]) v0 @kind object;
  #L3f1c44.  if v0 != 0 then goto L3f1c64;
  #L3f1c48.  v0:= 7I;
  #L3f1c4a.  v0:= new `org.c.a.b.t`[v0];
  #L3f1c4e.  v1:= `@@org.c.a.b.t.b` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L3f1c52.  call temp:= `putIfAbsent`(v1, v5, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f1c58.  v1:= temp @kind object;
  #L3f1c5a.  v1:= (`org.c.a.b.t`[]) v1 @kind object;
  #L3f1c5e.  if v1 == 0 then goto L3f1c64;
  #L3f1c62.  v0:= v1 @kind object;
  #L3f1c64.  v1:= v6 + -1;
  #L3f1c68.  v2:= v0[v1] @kind object;
  #L3f1c6c.  if v2 != 0 then goto L3f1cc0;
  #L3f1c70.  @monitorenter v0
  #L3f1c72.  v2:= v0[v1] @kind object;
  #L3f1c76.  if v2 != 0 then goto L3f1cb6;
  #L3f1c7a.  v2:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f1c7e.  v3:= 0I;
  #L3f1c80.  if v5 != v2 then goto L3f1c90;
  #L3f1c84.  v5:= new `org.c.a.b.t`;
  #L3f1c88.  call `<init>`(v5, v3, v3, v6) @signature `Lorg/c/a/b/t;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f1c8e.  goto L3f1cb0;
  #L3f1c90.  v2:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f1c94.  call temp:= `a`(v2, v6) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @kind static;
  #L3f1c9a.  v2:= temp @kind object;
  #L3f1c9c.  v4:= new `org.c.a.b.t`;
  #L3f1ca0.  call temp:= `a`(v2, v5) @signature `Lorg/c/a/b/y;.a:(Lorg/c/a/a;Lorg/c/a/f;)Lorg/c/a/b/y;` @kind static;
  #L3f1ca6.  v5:= temp @kind object;
  #L3f1ca8.  call `<init>`(v4, v5, v3, v6) @signature `Lorg/c/a/b/t;.<init>:(Lorg/c/a/a;Ljava/lang/Object;I)V` @kind direct;
  #L3f1cae.  v5:= v4 @kind object;
  #L3f1cb0.  v0[v1]:= v5 @kind object;
  #L3f1cb4.  v2:= v5 @kind object;
  #L3f1cb6.  @monitorexit v0
  #L3f1cb8.  goto L3f1cc0;
  #L3f1cba.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f1cbc.  @monitorexit v0
  #L3f1cbe.  throw v5;
  #L3f1cc0.  return v2 @kind object;
  #L3f1cc2.  v5:= new `java.lang.IllegalArgumentException`;
  #L3f1cc6.  v0:= new `java.lang.StringBuilder`;
  #L3f1cca.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f1cd0.  v1:= "Invalid min days in first week: " @kind object;
  #L3f1cd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1cda.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f1ce0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f1ce6.  v6:= temp @kind object;
  #L3f1ce8.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f1cee.  throw v5;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L3f1c68..L3f1c6c] goto L3f1cc2;
  catch `java.lang.Throwable` @[L3f1c72..L3f1cbe] goto L3f1cba;
}
procedure `org.c.a.b.t` `b`(`org.c.a.f` v1 @kind object) @signature `Lorg/c/a/b/t;.b:(Lorg/c/a/f;)Lorg/c/a/b/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3f1d18.  v0:= 4I;
  #L3f1d1a.  call temp:= `a`(v1, v0) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @kind static;
  #L3f1d20.  v1:= temp @kind object;
  #L3f1d22.  return v1 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.b.t` v2 @kind this) @signature `Lorg/c/a/b/t;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3f1a40.  call temp:= `L`(v2) @signature `Lorg/c/a/b/t;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f1a46.  v0:= temp @kind object;
  #L3f1a48.  call temp:= `N`(v2) @signature `Lorg/c/a/b/t;.N:()I` @kind virtual;
  #L3f1a4e.  v1:= temp;
  #L3f1a50.  if v1 != 0 then goto L3f1a56;
  #L3f1a54.  v1:= 4I;
  #L3f1a56.  if v0 != 0 then goto L3f1a68;
  #L3f1a5a.  v0:= `@@org.c.a.f.a` @type ^`org.c.a.f` @kind object;
  #L3f1a5e.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @kind static;
  #L3f1a64.  v0:= temp @kind object;
  #L3f1a66.  goto L3f1a78;
  #L3f1a68.  call temp:= `a`(v0) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f1a6e.  v0:= temp @kind object;
  #L3f1a70.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;I)Lorg/c/a/b/t;` @kind static;
  #L3f1a76.  v0:= temp @kind object;
  #L3f1a78.  return v0 @kind object;
}
procedure `int` `N`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.N:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f19d8.  call temp:= `N`(v1) @signature `Lorg/c/a/b/f;.N:()I` @kind super;
  #L3f19de.  v0:= temp;
  #L3f19e0.  return v0;
}
procedure `int` `Q`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.Q:()I` @AccessFlag  {
    temp;
    v0;

  #L3f19f4.  v0:= -292275054I;
  #L3f19fa.  return v0;
}
procedure `int` `R`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.R:()I` @AccessFlag  {
    temp;
    v0;

  #L3f1a0c.  v0:= 292278993I;
  #L3f1a12.  return v0;
}
procedure `long` `T`(`org.c.a.b.t` v2 @kind this) @signature `Lorg/c/a/b/t;.T:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f1aa8.  v0:= 31556952000L;
  #L3f1ab2.  return v0 @kind wide;
}
procedure `long` `U`(`org.c.a.b.t` v2 @kind this) @signature `Lorg/c/a/b/t;.U:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f1ac4.  v0:= 15778476000L;
  #L3f1ace.  return v0 @kind wide;
}
procedure `long` `V`(`org.c.a.b.t` v2 @kind this) @signature `Lorg/c/a/b/t;.V:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f1ae0.  v0:= 2629746000L;
  #L3f1aea.  return v0 @kind wide;
}
procedure `long` `W`(`org.c.a.b.t` v2 @kind this) @signature `Lorg/c/a/b/t;.W:()J` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3f1afc.  v0:= 31083597720000L;
  #L3f1b06.  return v0 @kind wide;
}
procedure `long` `a`(`org.c.a.b.t` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/c/a/b/t;.a:(IIII)J` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f1b18.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `Lorg/c/a/b/f;.a:(IIII)J` @kind super;
  #L3f1b1e.  v1:= temp @kind wide;
  #L3f1b20.  return v1 @kind wide;
}
procedure `long` `a`(`org.c.a.b.t` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lorg/c/a/b/t;.a:(IIIIIII)J` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f1b34.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lorg/c/a/b/f;.a:(IIIIIII)J` @kind super;
  #L3f1b3a.  v1:= temp @kind wide;
  #L3f1b3c.  return v1 @kind wide;
}
procedure `org.c.a.a` `a`(`org.c.a.b.t` v1 @kind this, `org.c.a.f` v2 @kind object) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1bc4.  if v2 != 0 then goto L3f1bd0;
  #L3f1bc8.  call temp:= `a`() @signature `Lorg/c/a/f;.a:()Lorg/c/a/f;` @kind static;
  #L3f1bce.  v2:= temp @kind object;
  #L3f1bd0.  call temp:= `a`(v1) @signature `Lorg/c/a/b/t;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f1bd6.  v0:= temp @kind object;
  #L3f1bd8.  if v2 != v0 then goto L3f1bde;
  #L3f1bdc.  return v1 @kind object;
  #L3f1bde.  call temp:= `b`(v2) @signature `Lorg/c/a/b/t;.b:(Lorg/c/a/f;)Lorg/c/a/b/t;` @kind static;
  #L3f1be4.  v2:= temp @kind object;
  #L3f1be6.  return v2 @kind object;
}
procedure `org.c.a.f` `a`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.a:()Lorg/c/a/f;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f1d34.  call temp:= `a`(v1) @signature `Lorg/c/a/b/f;.a:()Lorg/c/a/f;` @kind super;
  #L3f1d3a.  v0:= temp @kind object;
  #L3f1d3c.  return v0 @kind object;
}
procedure `void` `a`(`org.c.a.b.t` v1 @kind this, `org.c.a.b.a$a` v2 @kind object) @signature `Lorg/c/a/b/t;.a:(Lorg/c/a/b/a$a;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3f1d98.  call temp:= `L`(v1) @signature `Lorg/c/a/b/t;.L:()Lorg/c/a/a;` @kind virtual;
  #L3f1d9e.  v0:= temp @kind object;
  #L3f1da0.  if v0 != 0 then goto L3f1daa;
  #L3f1da4.  call `a`(v1, v2) @signature `Lorg/c/a/b/f;.a:(Lorg/c/a/b/a$a;)V` @kind super;
  #L3f1daa.  return @kind void;
}
procedure `org.c.a.a` `b`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.b:()Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f1bf8.  v0:= `@@org.c.a.b.t.a` @type ^`org.c.a.b.t` @kind object;
  #L3f1bfc.  return v0 @kind object;
}
procedure `boolean` `e`(`org.c.a.b.t` v1 @kind this, `int` v2 ) @signature `Lorg/c/a/b/t;.e:(I)Z` @AccessFlag  {
    temp;
    v0;

  #L3f198c.  v0:= v2 ^& 3;
  #L3f1990.  if v0 != 0 then goto L3f19a8;
  #L3f1994.  v0:= v2 %% 100;
  #L3f1998.  if v0 != 0 then goto L3f19a4;
  #L3f199c.  v2:= v2 %% 400;
  #L3f19a0.  if v2 != 0 then goto L3f19a8;
  #L3f19a4.  v2:= 1I;
  #L3f19a6.  goto L3f19aa;
  #L3f19a8.  v2:= 0I;
  #L3f19aa.  return v2;
}
procedure `boolean` `equals`(`org.c.a.b.t` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/b/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f19bc.  call temp:= `equals`(v0, v1) @signature `Lorg/c/a/b/f;.equals:(Ljava/lang/Object;)Z` @kind super;
  #L3f19c2.  v1:= temp;
  #L3f19c4.  return v1;
}
procedure `long` `f`(`org.c.a.b.t` v6 @kind this, `int` v7 ) @signature `Lorg/c/a/b/t;.f:(I)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f1b50.  v0:= v7 / 100;
  #L3f1b54.  if v7 >= 0 then goto L3f1b72;
  #L3f1b58.  v1:= v7 + 3;
  #L3f1b5c.  v1:= v1 ^> 2;
  #L3f1b60.  v1:= v1 - v0 @kind int;
  #L3f1b62.  v0:= v0 + 3;
  #L3f1b66.  v0:= v0 ^> 2;
  #L3f1b6a.  v1:= v1 + v0 @kind int;
  #L3f1b6c.  v1:= v1 + -1;
  #L3f1b70.  goto L3f1b8e;
  #L3f1b72.  v1:= v7 ^> 2;
  #L3f1b76.  v1:= v1 - v0 @kind int;
  #L3f1b78.  v0:= v0 ^> 2;
  #L3f1b7c.  v1:= v1 + v0 @kind int;
  #L3f1b7e.  call temp:= `e`(v6, v7) @signature `Lorg/c/a/b/t;.e:(I)Z` @kind virtual;
  #L3f1b84.  v0:= temp;
  #L3f1b86.  if v0 == 0 then goto L3f1b8e;
  #L3f1b8a.  v1:= v1 + -1;
  #L3f1b8e.  v2:= (`long`) v7 @kind i2l;
  #L3f1b90.  v4:= 365L;
  #L3f1b94.  v2:= v2 * v4 @kind long;
  #L3f1b98.  v7:= 719527I;
  #L3f1b9e.  v1:= v1 - v7 @kind int;
  #L3f1ba0.  v0:= (`long`) v1 @kind i2l;
  #L3f1ba2.  v4:= v2 + v0 @kind long;
  #L3f1ba6.  v0:= 86400000L;
  #L3f1bac.  v4:= v4 * v0 @kind long;
  #L3f1bb0.  return v4 @kind wide;
}
procedure `int` `hashCode`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.hashCode:()I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f1a24.  call temp:= `hashCode`(v1) @signature `Lorg/c/a/b/f;.hashCode:()I` @kind super;
  #L3f1a2a.  v0:= temp;
  #L3f1a2c.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.b.t` v1 @kind this) @signature `Lorg/c/a/b/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f1a8c.  call temp:= `toString`(v1) @signature `Lorg/c/a/b/f;.toString:()Ljava/lang/String;` @kind super;
  #L3f1a92.  v0:= temp @kind object;
  #L3f1a94.  return v0 @kind object;
}
