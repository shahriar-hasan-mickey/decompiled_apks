record `org.c.a.b.u$a` @kind class @AccessFlag FINAL extends `java.io.Serializable` @kind interface {
  `org.c.a.f` `org.c.a.b.u$a.a` @AccessFlag PRIVATE_TRANSIENT;
}
global `long` `@@org.c.a.b.u$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.b.u$a` v0 @kind this, `org.c.a.f` v1 @kind object) @signature `Lorg/c/a/b/u$a;.<init>:(Lorg/c/a/f;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f1ddc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f1de2.  v0.`org.c.a.b.u$a.a` @type ^`org.c.a.f` := v1 @kind object;
  #L3f1de6.  return @kind void;
}
procedure `void` `readObject`(`org.c.a.b.u$a` v0 @kind this, `java.io.ObjectInputStream` v1 @kind object) @signature `Lorg/c/a/b/u$a;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;

  #L3f1df8.  call temp:= `readObject`(v1) @signature `Ljava/io/ObjectInputStream;.readObject:()Ljava/lang/Object;` @kind virtual;
  #L3f1dfe.  v1:= temp @kind object;
  #L3f1e00.  v1:= (`org.c.a.f`) v1 @kind object;
  #L3f1e04.  v0.`org.c.a.b.u$a.a` @type ^`org.c.a.f` := v1 @kind object;
  #L3f1e08.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.b.u$a` v1 @kind this) @signature `Lorg/c/a/b/u$a;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f1dbc.  v0:= v1.`org.c.a.b.u$a.a` @type ^`org.c.a.f` @kind object;
  #L3f1dc0.  call temp:= `b`(v0) @signature `Lorg/c/a/b/u;.b:(Lorg/c/a/f;)Lorg/c/a/b/u;` @kind static;
  #L3f1dc6.  v0:= temp @kind object;
  #L3f1dc8.  return v0 @kind object;
}
procedure `void` `writeObject`(`org.c.a.b.u$a` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lorg/c/a/b/u$a;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f1e1c.  v0:= v1.`org.c.a.b.u$a.a` @type ^`org.c.a.f` @kind object;
  #L3f1e20.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeObject:(Ljava/lang/Object;)V` @kind virtual;
  #L3f1e26.  return @kind void;
}
