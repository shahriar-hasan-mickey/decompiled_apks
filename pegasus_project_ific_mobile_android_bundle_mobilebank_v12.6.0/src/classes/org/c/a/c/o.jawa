record `org.c.a.c.o` @kind class @AccessFlag  extends `org.c.a.c.a` @kind class, `org.c.a.c.h` @kind interface, `org.c.a.c.l` @kind interface {
}
global `org.c.a.c.o` `@@org.c.a.c.o.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/c/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f5020.  v0:= new `org.c.a.c.o`;
  #L3f5024.  call `<init>`(v0) @signature `Lorg/c/a/c/o;.<init>:()V` @kind direct;
  #L3f502a.  `@@org.c.a.c.o.a` @type ^`org.c.a.c.o` := v0 @kind object;
  #L3f502e.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.c.o` v0 @kind this) @signature `Lorg/c/a/c/o;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3f5040.  call `<init>`(v0) @signature `Lorg/c/a/c/a;.<init>:()V` @kind direct;
  #L3f5046.  return @kind void;
}
procedure `long` `a`(`org.c.a.c.o` v0 @kind this, `java.lang.Object` v1 @kind object, `org.c.a.a` v2 @kind object) @signature `Lorg/c/a/c/o;.a:(Ljava/lang/Object;Lorg/c/a/a;)J` @AccessFlag PUBLIC {
    temp;

  #L3f4f84.  v1:= (`org.c.a.t`) v1 @kind object;
  #L3f4f88.  call temp:= `c`(v1) @signature `Lorg/c/a/t;.c:()J` @kind interface;
  #L3f4f8e.  v1:= temp @kind wide;
  #L3f4f90.  return v1 @kind wide;
}
procedure `java.lang.Class` `a`(`org.c.a.c.o` v1 @kind this) @signature `Lorg/c/a/c/o;.a:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4f6c.  v0:= constclass @type ^`org.c.a.t` @kind object;
  #L3f4f70.  return v0 @kind object;
}
procedure `org.c.a.a` `a`(`org.c.a.c.o` v1 @kind this, `java.lang.Object` v2 @kind object, `org.c.a.f` v3 @kind object) @signature `Lorg/c/a/c/o;.a:(Ljava/lang/Object;Lorg/c/a/f;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f4fa4.  v2:= (`org.c.a.t`) v2 @kind object;
  #L3f4fa8.  call temp:= `d`(v2) @signature `Lorg/c/a/t;.d:()Lorg/c/a/a;` @kind interface;
  #L3f4fae.  v2:= temp @kind object;
  #L3f4fb0.  if v2 != 0 then goto L3f4fbe;
  #L3f4fb4.  call temp:= `b`(v3) @signature `Lorg/c/a/b/u;.b:(Lorg/c/a/f;)Lorg/c/a/b/u;` @kind static;
  #L3f4fba.  v2:= temp @kind object;
  #L3f4fbc.  return v2 @kind object;
  #L3f4fbe.  call temp:= `a`(v2) @signature `Lorg/c/a/a;.a:()Lorg/c/a/f;` @kind virtual;
  #L3f4fc4.  v0:= temp @kind object;
  #L3f4fc6.  if v0 == v3 then goto L3f4fe0;
  #L3f4fca.  call temp:= `a`(v2, v3) @signature `Lorg/c/a/a;.a:(Lorg/c/a/f;)Lorg/c/a/a;` @kind virtual;
  #L3f4fd0.  v2:= temp @kind object;
  #L3f4fd2.  if v2 != 0 then goto L3f4fe0;
  #L3f4fd6.  call temp:= `b`(v3) @signature `Lorg/c/a/b/u;.b:(Lorg/c/a/f;)Lorg/c/a/b/u;` @kind static;
  #L3f4fdc.  v2:= temp @kind object;
  #L3f4fde.  return v2 @kind object;
  #L3f4fe0.  return v2 @kind object;
}
procedure `org.c.a.a` `b`(`org.c.a.c.o` v0 @kind this, `java.lang.Object` v1 @kind object, `org.c.a.a` v2 @kind object) @signature `Lorg/c/a/c/o;.b:(Ljava/lang/Object;Lorg/c/a/a;)Lorg/c/a/a;` @AccessFlag PUBLIC {
    temp;

  #L3f4ff4.  if v2 != 0 then goto L3f500c;
  #L3f4ff8.  v1:= (`org.c.a.t`) v1 @kind object;
  #L3f4ffc.  call temp:= `d`(v1) @signature `Lorg/c/a/t;.d:()Lorg/c/a/a;` @kind interface;
  #L3f5002.  v1:= temp @kind object;
  #L3f5004.  call temp:= `a`(v1) @signature `Lorg/c/a/e;.a:(Lorg/c/a/a;)Lorg/c/a/a;` @kind static;
  #L3f500a.  v2:= temp @kind object;
  #L3f500c.  return v2 @kind object;
}
