record `org.c.a.o` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface {
  `java.lang.String` `org.c.a.o.l` @AccessFlag PRIVATE_FINAL;
  `org.c.a.h`[] `org.c.a.o.m` @AccessFlag PRIVATE_FINAL;
  `int`[] `org.c.a.o.n` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@org.c.a.o.a` @AccessFlag STATIC;
global `int` `@@org.c.a.o.b` @AccessFlag STATIC;
global `int` `@@org.c.a.o.c` @AccessFlag STATIC;
global `int` `@@org.c.a.o.d` @AccessFlag STATIC;
global `int` `@@org.c.a.o.e` @AccessFlag STATIC;
global `int` `@@org.c.a.o.f` @AccessFlag STATIC;
global `int` `@@org.c.a.o.g` @AccessFlag STATIC;
global `int` `@@org.c.a.o.h` @AccessFlag STATIC;
global `java.util.Map` `@@org.c.a.o.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `org.c.a.o` `@@org.c.a.o.j` @AccessFlag PRIVATE_STATIC;
global `org.c.a.o` `@@org.c.a.o.k` @AccessFlag PRIVATE_STATIC;
global `long` `@@org.c.a.o.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L404eac.  v0:= new `java.util.HashMap`;
  #L404eb0.  v1:= 32I;
  #L404eb4.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L404eba.  `@@org.c.a.o.i` @type ^`java.util.Map` := v0 @kind object;
  #L404ebe.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.o` v0 @kind this, `java.lang.String` v1 @kind object, `org.c.a.h`[] v2 @kind object, `int`[] v3 @kind object) @signature `Lorg/c/a/o;.<init>:(Ljava/lang/String;[Lorg/c/a/h;[I)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L404ed0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L404ed6.  v0.`org.c.a.o.l` @type ^`java.lang.String` := v1 @kind object;
  #L404eda.  v0.`org.c.a.o.m` @type ^`org.c.a.h`[] := v2 @kind object;
  #L404ede.  v0.`org.c.a.o.n` @type ^`int`[] := v3 @kind object;
  #L404ee2.  return @kind void;
}
procedure `org.c.a.o` `a`() @signature `Lorg/c/a/o;.a:()Lorg/c/a/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L404d34.  v0:= `@@org.c.a.o.j` @type ^`org.c.a.o` @kind object;
  #L404d38.  if v0 != 0 then goto L404dd0;
  #L404d3c.  v0:= new `org.c.a.o`;
  #L404d40.  v1:= "Standard" @kind object;
  #L404d44.  v2:= 8I;
  #L404d48.  v3:= new `org.c.a.h`[v2];
  #L404d4c.  v4:= 0I;
  #L404d4e.  call temp:= `j`() @signature `Lorg/c/a/h;.j:()Lorg/c/a/h;` @kind static;
  #L404d54.  v5:= temp @kind object;
  #L404d56.  v3[v4]:= v5 @kind object;
  #L404d5a.  v4:= 1I;
  #L404d5c.  call temp:= `i`() @signature `Lorg/c/a/h;.i:()Lorg/c/a/h;` @kind static;
  #L404d62.  v5:= temp @kind object;
  #L404d64.  v3[v4]:= v5 @kind object;
  #L404d68.  v4:= 2I;
  #L404d6a.  call temp:= `g`() @signature `Lorg/c/a/h;.g:()Lorg/c/a/h;` @kind static;
  #L404d70.  v5:= temp @kind object;
  #L404d72.  v3[v4]:= v5 @kind object;
  #L404d76.  v4:= 3I;
  #L404d78.  call temp:= `f`() @signature `Lorg/c/a/h;.f:()Lorg/c/a/h;` @kind static;
  #L404d7e.  v5:= temp @kind object;
  #L404d80.  v3[v4]:= v5 @kind object;
  #L404d84.  v4:= 4I;
  #L404d86.  call temp:= `d`() @signature `Lorg/c/a/h;.d:()Lorg/c/a/h;` @kind static;
  #L404d8c.  v5:= temp @kind object;
  #L404d8e.  v3[v4]:= v5 @kind object;
  #L404d92.  v4:= 5I;
  #L404d94.  call temp:= `c`() @signature `Lorg/c/a/h;.c:()Lorg/c/a/h;` @kind static;
  #L404d9a.  v5:= temp @kind object;
  #L404d9c.  v3[v4]:= v5 @kind object;
  #L404da0.  v4:= 6I;
  #L404da2.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L404da8.  v5:= temp @kind object;
  #L404daa.  v3[v4]:= v5 @kind object;
  #L404dae.  v4:= 7I;
  #L404db0.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L404db6.  v5:= temp @kind object;
  #L404db8.  v3[v4]:= v5 @kind object;
  #L404dbc.  v2:= new `int`[v2];
  #L404dc0.  goto L404dd4;
  #L404dc6.  call `<init>`(v0, v1, v3, v2) @signature `Lorg/c/a/o;.<init>:(Ljava/lang/String;[Lorg/c/a/h;[I)V` @kind direct;
  #L404dcc.  `@@org.c.a.o.j` @type ^`org.c.a.o` := v0 @kind object;
  #L404dd0.  return v0 @kind object;
  #L404dd2.  
  #L404dd4.  v2:= (0I, 1I, 2I, 3I, 4I, 5I, 6I, 7I) @kind object;
  #L404dfb.  goto L404dc6;
}
procedure `org.c.a.o` `b`() @signature `Lorg/c/a/o;.b:()Lorg/c/a/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L404e0c.  v0:= `@@org.c.a.o.k` @type ^`org.c.a.o` @kind object;
  #L404e10.  if v0 != 0 then goto L404e72;
  #L404e14.  v0:= new `org.c.a.o`;
  #L404e18.  v1:= "Time" @kind object;
  #L404e1c.  v2:= 4I;
  #L404e1e.  v2:= new `org.c.a.h`[v2];
  #L404e22.  v3:= 0I;
  #L404e24.  call temp:= `d`() @signature `Lorg/c/a/h;.d:()Lorg/c/a/h;` @kind static;
  #L404e2a.  v4:= temp @kind object;
  #L404e2c.  v2[v3]:= v4 @kind object;
  #L404e30.  v3:= 1I;
  #L404e32.  call temp:= `c`() @signature `Lorg/c/a/h;.c:()Lorg/c/a/h;` @kind static;
  #L404e38.  v4:= temp @kind object;
  #L404e3a.  v2[v3]:= v4 @kind object;
  #L404e3e.  v3:= 2I;
  #L404e40.  call temp:= `b`() @signature `Lorg/c/a/h;.b:()Lorg/c/a/h;` @kind static;
  #L404e46.  v4:= temp @kind object;
  #L404e48.  v2[v3]:= v4 @kind object;
  #L404e4c.  v3:= 3I;
  #L404e4e.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L404e54.  v4:= temp @kind object;
  #L404e56.  v2[v3]:= v4 @kind object;
  #L404e5a.  v3:= 8I;
  #L404e5e.  v3:= new `int`[v3];
  #L404e62.  goto L404e74;
  #L404e68.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/c/a/o;.<init>:(Ljava/lang/String;[Lorg/c/a/h;[I)V` @kind direct;
  #L404e6e.  `@@org.c.a.o.k` @type ^`org.c.a.o` := v0 @kind object;
  #L404e72.  return v0 @kind object;
  #L404e74.  v3:= (-1I, -1I, -1I, -1I, 0I, 1I, 2I, 3I) @kind object;
  #L404e9b.  goto L404e68;
}
procedure `int` `a`(`org.c.a.o` v1 @kind this, `org.c.a.w` v2 @kind object, `int` v3 ) @signature `Lorg/c/a/o;.a:(Lorg/c/a/w;I)I` @AccessFlag  {
    temp;
    v0;

  #L404c04.  v0:= v1.`org.c.a.o.n` @type ^`int`[] @kind object;
  #L404c08.  v3:= v0[v3];
  #L404c0c.  v0:= -1I;
  #L404c0e.  if v3 != v0 then goto L404c16;
  #L404c12.  v2:= 0I;
  #L404c14.  goto L404c1e;
  #L404c16.  call temp:= `b`(v2, v3) @signature `Lorg/c/a/w;.b:(I)I` @kind interface;
  #L404c1c.  v2:= temp;
  #L404c1e.  return v2;
}
procedure `org.c.a.h` `a`(`org.c.a.o` v1 @kind this, `int` v2 ) @signature `Lorg/c/a/o;.a:(I)Lorg/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404d18.  v0:= v1.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404d1c.  v2:= v0[v2] @kind object;
  #L404d20.  return v2 @kind object;
}
procedure `boolean` `a`(`org.c.a.o` v0 @kind this, `org.c.a.h` v1 @kind object) @signature `Lorg/c/a/o;.a:(Lorg/c/a/h;)Z` @AccessFlag PUBLIC {
    temp;

  #L404ba4.  call temp:= `b`(v0, v1) @signature `Lorg/c/a/o;.b:(Lorg/c/a/h;)I` @kind virtual;
  #L404baa.  v1:= temp;
  #L404bac.  if v1 < 0 then goto L404bb4;
  #L404bb0.  v1:= 1I;
  #L404bb2.  goto L404bb6;
  #L404bb4.  v1:= 0I;
  #L404bb6.  return v1;
}
procedure `int` `b`(`org.c.a.o` v3 @kind this, `org.c.a.h` v4 @kind object) @signature `Lorg/c/a/o;.b:(Lorg/c/a/h;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L404c30.  call temp:= `d`(v3) @signature `Lorg/c/a/o;.d:()I` @kind virtual;
  #L404c36.  v0:= temp;
  #L404c38.  v1:= 0I;
  #L404c3a.  if v1 >= v0 then goto L404c52;
  #L404c3e.  v2:= v3.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404c42.  v2:= v2[v1] @kind object;
  #L404c46.  if v2 != v4 then goto L404c4c;
  #L404c4a.  return v1;
  #L404c4c.  v1:= v1 + 1;
  #L404c50.  goto L404c3a;
  #L404c52.  v4:= -1I;
  #L404c54.  return v4;
}
procedure `java.lang.String` `c`(`org.c.a.o` v1 @kind this) @signature `Lorg/c/a/o;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404cb8.  v0:= v1.`org.c.a.o.l` @type ^`java.lang.String` @kind object;
  #L404cbc.  return v0 @kind object;
}
procedure `int` `d`(`org.c.a.o` v1 @kind this) @signature `Lorg/c/a/o;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404c68.  v0:= v1.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404c6c.  v0:= length @variable v0;
  #L404c6e.  return v0;
}
procedure `boolean` `equals`(`org.c.a.o` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lorg/c/a/o;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L404bc8.  if v1 != v2 then goto L404bd0;
  #L404bcc.  v2:= 1I;
  #L404bce.  return v2;
  #L404bd0.  v0:= instanceof @variable v2 @type ^`org.c.a.o` @kind boolean;
  #L404bd4.  if v0 != 0 then goto L404bdc;
  #L404bd8.  v2:= 0I;
  #L404bda.  return v2;
  #L404bdc.  v2:= (`org.c.a.o`) v2 @kind object;
  #L404be0.  v0:= v1.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404be4.  v2:= v2.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404be8.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L404bee.  v2:= temp;
  #L404bf0.  return v2;
}
procedure `int` `hashCode`(`org.c.a.o` v3 @kind this) @signature `Lorg/c/a/o;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L404c80.  v0:= 0I;
  #L404c82.  v1:= 0I;
  #L404c84.  v2:= v3.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404c88.  v2:= length @variable v2;
  #L404c8a.  if v0 >= v2 then goto L404ca6;
  #L404c8e.  v2:= v3.`org.c.a.o.m` @type ^`org.c.a.h`[] @kind object;
  #L404c92.  v2:= v2[v0] @kind object;
  #L404c96.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L404c9c.  v2:= temp;
  #L404c9e.  v1:= v1 + v2 @kind int;
  #L404ca0.  v0:= v0 + 1;
  #L404ca4.  goto L404c84;
  #L404ca6.  return v1;
}
procedure `java.lang.String` `toString`(`org.c.a.o` v2 @kind this) @signature `Lorg/c/a/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L404cd0.  v0:= new `java.lang.StringBuilder`;
  #L404cd4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L404cda.  v1:= "PeriodType[" @kind object;
  #L404cde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L404ce4.  call temp:= `c`(v2) @signature `Lorg/c/a/o;.c:()Ljava/lang/String;` @kind virtual;
  #L404cea.  v1:= temp @kind object;
  #L404cec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L404cf2.  v1:= "]" @kind object;
  #L404cf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L404cfc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L404d02.  v0:= temp @kind object;
  #L404d04.  return v0 @kind object;
}
