record `org.c.a.d.e` @kind class @AccessFlag PUBLIC extends `org.c.a.d.c` @kind class {
  `org.c.a.g` `org.c.a.d.e.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.c.a.d.e.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.d.e` v0 @kind this, `org.c.a.g` v1 @kind object, `org.c.a.h` v2 @kind object) @signature `Lorg/c/a/d/e;.<init>:(Lorg/c/a/g;Lorg/c/a/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f6000.  call `<init>`(v0, v2) @signature `Lorg/c/a/d/c;.<init>:(Lorg/c/a/h;)V` @kind direct;
  #L3f6006.  if v1 != 0 then goto L3f601a;
  #L3f600a.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f600e.  v2:= "The field must not be null" @kind object;
  #L3f6012.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f6018.  throw v1;
  #L3f601a.  call temp:= `b`(v1) @signature `Lorg/c/a/g;.b:()Z` @kind virtual;
  #L3f6020.  v2:= temp;
  #L3f6022.  if v2 != 0 then goto L3f6036;
  #L3f6026.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f602a.  v2:= "The field must be supported" @kind object;
  #L3f602e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f6034.  throw v1;
  #L3f6036.  v0.`org.c.a.d.e.a` @type ^`org.c.a.g` := v1 @kind object;
  #L3f603a.  return @kind void;
}
procedure `long` `a`(`org.c.a.d.e` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/c/a/d/e;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5f68.  v0:= v1.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5f6c.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/g;.a:(JI)J` @kind virtual;
  #L3f5f72.  v2:= temp @kind wide;
  #L3f5f74.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.d.e` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/d/e;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5f88.  v0:= v1.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5f8c.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/g;.a:(JJ)J` @kind virtual;
  #L3f5f92.  v2:= temp @kind wide;
  #L3f5f94.  return v2 @kind wide;
}
procedure `long` `c`(`org.c.a.d.e` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/d/e;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5fa8.  v0:= v1.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5fac.  call temp:= `c`(v0, v2, v4) @signature `Lorg/c/a/g;.c:(JJ)J` @kind virtual;
  #L3f5fb2.  v2:= temp @kind wide;
  #L3f5fb4.  return v2 @kind wide;
}
procedure `boolean` `c`(`org.c.a.d.e` v1 @kind this) @signature `Lorg/c/a/d/e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5f48.  v0:= v1.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5f4c.  call temp:= `c`(v0) @signature `Lorg/c/a/g;.c:()Z` @kind virtual;
  #L3f5f52.  v0:= temp;
  #L3f5f54.  return v0;
}
procedure `long` `d`(`org.c.a.d.e` v2 @kind this) @signature `Lorg/c/a/d/e;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5fc8.  v0:= v2.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5fcc.  call temp:= `d`(v0) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f5fd2.  v0:= temp @kind wide;
  #L3f5fd4.  return v0 @kind wide;
}
procedure `org.c.a.g` `f`(`org.c.a.d.e` v1 @kind this) @signature `Lorg/c/a/d/e;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f5fe8.  v0:= v1.`org.c.a.d.e.a` @type ^`org.c.a.g` @kind object;
  #L3f5fec.  return v0 @kind object;
}
