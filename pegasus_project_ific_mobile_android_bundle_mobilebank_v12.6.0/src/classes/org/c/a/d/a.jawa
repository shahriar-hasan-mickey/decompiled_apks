record `org.c.a.d.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Serializable` @kind interface {
}
global `long` `@@org.c.a.d.a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.d.a` v0 @kind this) @signature `Lorg/c/a/d/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f5824.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f582a.  return @kind void;
}
procedure `java.lang.String` `a`(`org.c.a.d.a` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Lorg/c/a/d/a;.a:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f571c.  call temp:= `a`(v3) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f5722.  v0:= temp @kind object;
  #L3f5724.  call temp:= `b`(v3) @signature `Lorg/c/a/d/a;.b:()J` @kind virtual;
  #L3f572a.  v1:= temp @kind wide;
  #L3f572c.  call temp:= `a`(v0, v1, v4) @signature `Lorg/c/a/c;.a:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f5732.  v4:= temp @kind object;
  #L3f5734.  return v4 @kind object;
}
procedure `org.c.a.c` `a`() @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `b`() @signature `Lorg/c/a/d/a;.b:()J` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.lang.String` `b`(`org.c.a.d.a` v3 @kind this, `java.util.Locale` v4 @kind object) @signature `Lorg/c/a/d/a;.b:(Ljava/util/Locale;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5748.  call temp:= `a`(v3) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f574e.  v0:= temp @kind object;
  #L3f5750.  call temp:= `b`(v3) @signature `Lorg/c/a/d/a;.b:()J` @kind virtual;
  #L3f5756.  v1:= temp @kind wide;
  #L3f5758.  call temp:= `b`(v0, v1, v4) @signature `Lorg/c/a/c;.b:(JLjava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L3f575e.  v4:= temp @kind object;
  #L3f5760.  return v4 @kind object;
}
procedure `int` `c`(`org.c.a.d.a` v1 @kind this, `java.util.Locale` v2 @kind object) @signature `Lorg/c/a/d/a;.c:(Ljava/util/Locale;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5640.  call temp:= `a`(v1) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f5646.  v0:= temp @kind object;
  #L3f5648.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/c;.a:(Ljava/util/Locale;)I` @kind virtual;
  #L3f564e.  v2:= temp;
  #L3f5650.  return v2;
}
procedure `org.c.a.a` `c`(`org.c.a.d.a` v2 @kind this) @signature `Lorg/c/a/d/a;.c:()Lorg/c/a/a;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3f57e0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3f57e4.  v1:= "The method getChronology() was added in v1.4 and needs to be implemented by subclasses of AbstractReadableInstantFieldProperty" @kind object;
  #L3f57e8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f57ee.  throw v0;
}
procedure `org.c.a.d` `d`(`org.c.a.d.a` v1 @kind this) @signature `Lorg/c/a/d/a;.d:()Lorg/c/a/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5800.  call temp:= `a`(v1) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f5806.  v0:= temp @kind object;
  #L3f5808.  call temp:= `a`(v0) @signature `Lorg/c/a/c;.a:()Lorg/c/a/d;` @kind virtual;
  #L3f580e.  v0:= temp @kind object;
  #L3f5810.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`org.c.a.d.a` v1 @kind this) @signature `Lorg/c/a/d/a;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5774.  call temp:= `a`(v1) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f577a.  v0:= temp @kind object;
  #L3f577c.  call temp:= `b`(v0) @signature `Lorg/c/a/c;.b:()Ljava/lang/String;` @kind virtual;
  #L3f5782.  v0:= temp @kind object;
  #L3f5784.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.d.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/c/a/d/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f55c4.  v0:= 1I;
  #L3f55c6.  if v4 != v5 then goto L3f55cc;
  #L3f55ca.  return v0;
  #L3f55cc.  v1:= instanceof @variable v5 @type ^`org.c.a.d.a` @kind boolean;
  #L3f55d0.  v2:= 0I;
  #L3f55d2.  if v1 != 0 then goto L3f55d8;
  #L3f55d6.  return v2;
  #L3f55d8.  v5:= (`org.c.a.d.a`) v5 @kind object;
  #L3f55dc.  call temp:= `f`(v4) @signature `Lorg/c/a/d/a;.f:()I` @kind virtual;
  #L3f55e2.  v1:= temp;
  #L3f55e4.  call temp:= `f`(v5) @signature `Lorg/c/a/d/a;.f:()I` @kind virtual;
  #L3f55ea.  v3:= temp;
  #L3f55ec.  if v1 != v3 then goto L3f562a;
  #L3f55f0.  call temp:= `d`(v4) @signature `Lorg/c/a/d/a;.d:()Lorg/c/a/d;` @kind virtual;
  #L3f55f6.  v1:= temp @kind object;
  #L3f55f8.  call temp:= `d`(v5) @signature `Lorg/c/a/d/a;.d:()Lorg/c/a/d;` @kind virtual;
  #L3f55fe.  v3:= temp @kind object;
  #L3f5600.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f5606.  v1:= temp;
  #L3f5608.  if v1 == 0 then goto L3f562a;
  #L3f560c.  call temp:= `c`(v4) @signature `Lorg/c/a/d/a;.c:()Lorg/c/a/a;` @kind virtual;
  #L3f5612.  v1:= temp @kind object;
  #L3f5614.  call temp:= `c`(v5) @signature `Lorg/c/a/d/a;.c:()Lorg/c/a/a;` @kind virtual;
  #L3f561a.  v5:= temp @kind object;
  #L3f561c.  call temp:= `a`(v1, v5) @signature `Lorg/c/a/d/h;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f5622.  v5:= temp;
  #L3f5624.  if v5 == 0 then goto L3f562a;
  #L3f5628.  goto L3f562c;
  #L3f562a.  v0:= 0I;
  #L3f562c.  return v0;
}
procedure `int` `f`(`org.c.a.d.a` v3 @kind this) @signature `Lorg/c/a/d/a;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f5664.  call temp:= `a`(v3) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f566a.  v0:= temp @kind object;
  #L3f566c.  call temp:= `b`(v3) @signature `Lorg/c/a/d/a;.b:()J` @kind virtual;
  #L3f5672.  v1:= temp @kind wide;
  #L3f5674.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f567a.  v0:= temp;
  #L3f567c.  return v0;
}
procedure `int` `g`(`org.c.a.d.a` v1 @kind this) @signature `Lorg/c/a/d/a;.g:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5690.  call temp:= `a`(v1) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f5696.  v0:= temp @kind object;
  #L3f5698.  call temp:= `h`(v0) @signature `Lorg/c/a/c;.h:()I` @kind virtual;
  #L3f569e.  v0:= temp;
  #L3f56a0.  return v0;
}
procedure `int` `h`(`org.c.a.d.a` v1 @kind this) @signature `Lorg/c/a/d/a;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f56b4.  call temp:= `a`(v1) @signature `Lorg/c/a/d/a;.a:()Lorg/c/a/c;` @kind virtual;
  #L3f56ba.  v0:= temp @kind object;
  #L3f56bc.  call temp:= `i`(v0) @signature `Lorg/c/a/c;.i:()I` @kind virtual;
  #L3f56c2.  v0:= temp;
  #L3f56c4.  return v0;
}
procedure `int` `hashCode`(`org.c.a.d.a` v2 @kind this) @signature `Lorg/c/a/d/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f56d8.  call temp:= `f`(v2) @signature `Lorg/c/a/d/a;.f:()I` @kind virtual;
  #L3f56de.  v0:= temp;
  #L3f56e0.  v0:= v0 * 17;
  #L3f56e4.  call temp:= `d`(v2) @signature `Lorg/c/a/d/a;.d:()Lorg/c/a/d;` @kind virtual;
  #L3f56ea.  v1:= temp @kind object;
  #L3f56ec.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f56f2.  v1:= temp;
  #L3f56f4.  v0:= v0 + v1 @kind int;
  #L3f56f6.  call temp:= `c`(v2) @signature `Lorg/c/a/d/a;.c:()Lorg/c/a/a;` @kind virtual;
  #L3f56fc.  v1:= temp @kind object;
  #L3f56fe.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f5704.  v1:= temp;
  #L3f5706.  v0:= v0 + v1 @kind int;
  #L3f5708.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.d.a` v2 @kind this) @signature `Lorg/c/a/d/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5798.  v0:= new `java.lang.StringBuilder`;
  #L3f579c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f57a2.  v1:= "Property[" @kind object;
  #L3f57a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f57ac.  call temp:= `e`(v2) @signature `Lorg/c/a/d/a;.e:()Ljava/lang/String;` @kind virtual;
  #L3f57b2.  v1:= temp @kind object;
  #L3f57b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f57ba.  v1:= "]" @kind object;
  #L3f57be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f57c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f57ca.  v0:= temp @kind object;
  #L3f57cc.  return v0 @kind object;
}
