record `org.c.a.d.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.c.a.d.b` @kind class {
  `org.c.a.c` `org.c.a.d.d.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.c.a.d.d` v0 @kind this, `org.c.a.c` v1 @kind object, `org.c.a.d` v2 @kind object) @signature `Lorg/c/a/d/d;.<init>:(Lorg/c/a/c;Lorg/c/a/d;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3f5efc.  call `<init>`(v0, v2) @signature `Lorg/c/a/d/b;.<init>:(Lorg/c/a/d;)V` @kind direct;
  #L3f5f02.  if v1 != 0 then goto L3f5f16;
  #L3f5f06.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f5f0a.  v2:= "The field must not be null" @kind object;
  #L3f5f0e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5f14.  throw v1;
  #L3f5f16.  call temp:= `c`(v1) @signature `Lorg/c/a/c;.c:()Z` @kind virtual;
  #L3f5f1c.  v2:= temp;
  #L3f5f1e.  if v2 != 0 then goto L3f5f32;
  #L3f5f22.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f5f26.  v2:= "The field must be supported" @kind object;
  #L3f5f2a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5f30.  throw v1;
  #L3f5f32.  v0.`org.c.a.d.d.a` @type ^`org.c.a.c` := v1 @kind object;
  #L3f5f36.  return @kind void;
}
procedure `int` `a`(`org.c.a.d.d` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/d;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e04.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5e08.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f5e0e.  v2:= temp;
  #L3f5e10.  return v2;
}
procedure `long` `b`(`org.c.a.d.d` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/c/a/d/d;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e64.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5e68.  call temp:= `b`(v0, v2, v4) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f5e6e.  v2:= temp @kind wide;
  #L3f5e70.  return v2 @kind wide;
}
procedure `long` `d`(`org.c.a.d.d` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/d;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e84.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5e88.  call temp:= `d`(v0, v2) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3f5e8e.  v2:= temp @kind wide;
  #L3f5e90.  return v2 @kind wide;
}
procedure `boolean` `d`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5de4.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5de8.  call temp:= `d`(v0) @signature `Lorg/c/a/c;.d:()Z` @kind virtual;
  #L3f5dee.  v0:= temp;
  #L3f5df0.  return v0;
}
procedure `org.c.a.g` `e`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.e:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5ebc.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5ec0.  call temp:= `e`(v0) @signature `Lorg/c/a/c;.e:()Lorg/c/a/g;` @kind virtual;
  #L3f5ec6.  v0:= temp @kind object;
  #L3f5ec8.  return v0 @kind object;
}
procedure `org.c.a.g` `f`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.f:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5edc.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5ee0.  call temp:= `f`(v0) @signature `Lorg/c/a/c;.f:()Lorg/c/a/g;` @kind virtual;
  #L3f5ee6.  v0:= temp @kind object;
  #L3f5ee8.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e24.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5e28.  call temp:= `h`(v0) @signature `Lorg/c/a/c;.h:()I` @kind virtual;
  #L3f5e2e.  v0:= temp;
  #L3f5e30.  return v0;
}
procedure `int` `i`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f5e44.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5e48.  call temp:= `i`(v0) @signature `Lorg/c/a/c;.i:()I` @kind virtual;
  #L3f5e4e.  v0:= temp;
  #L3f5e50.  return v0;
}
procedure `org.c.a.c` `j`(`org.c.a.d.d` v1 @kind this) @signature `Lorg/c/a/d/d;.j:()Lorg/c/a/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f5ea4.  v0:= v1.`org.c.a.d.d.a` @type ^`org.c.a.c` @kind object;
  #L3f5ea8.  return v0 @kind object;
}
