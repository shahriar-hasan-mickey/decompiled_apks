record `org.c.a.d.n` @kind class @AccessFlag PUBLIC extends `org.c.a.d.c` @kind class {
  `long` `org.c.a.d.n.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.c.a.d.n.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.d.n` v0 @kind this, `org.c.a.h` v1 @kind object, `long` v2 ) @signature `Lorg/c/a/d/n;.<init>:(Lorg/c/a/h;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f76d0.  call `<init>`(v0, v1) @signature `Lorg/c/a/d/c;.<init>:(Lorg/c/a/h;)V` @kind direct;
  #L3f76d6.  v0.`org.c.a.d.n.a` @type ^`long` := v2 @kind wide;
  #L3f76da.  return @kind void;
}
procedure `long` `a`(`org.c.a.d.n` v4 @kind this, `long` v5 , `int` v7 ) @signature `Lorg/c/a/d/n;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f764c.  v0:= (`long`) v7 @kind i2l;
  #L3f764e.  v2:= v4.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f7652.  v0:= v0 * v2 @kind long;
  #L3f7656.  call temp:= `a`(v5, v0) @signature `Lorg/c/a/d/h;.a:(JJ)J` @kind static;
  #L3f765c.  v5:= temp @kind wide;
  #L3f765e.  return v5 @kind wide;
}
procedure `long` `a`(`org.c.a.d.n` v2 @kind this, `long` v3 , `long` v5 ) @signature `Lorg/c/a/d/n;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f7670.  v0:= v2.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f7674.  call temp:= `c`(v5, v0) @signature `Lorg/c/a/d/h;.c:(JJ)J` @kind static;
  #L3f767a.  v5:= temp @kind wide;
  #L3f767c.  call temp:= `a`(v3, v5) @signature `Lorg/c/a/d/h;.a:(JJ)J` @kind static;
  #L3f7682.  v3:= temp @kind wide;
  #L3f7684.  return v3 @kind wide;
}
procedure `long` `c`(`org.c.a.d.n` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/n;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3f7698.  call temp:= `b`(v1, v3) @signature `Lorg/c/a/d/h;.b:(JJ)J` @kind static;
  #L3f769e.  v1:= temp @kind wide;
  #L3f76a0.  v3:= v0.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f76a4.  v1:= v1 / v3 @kind long;
  #L3f76a6.  return v1 @kind wide;
}
procedure `boolean` `c`(`org.c.a.d.n` v1 @kind this) @signature `Lorg/c/a/d/n;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f75ac.  v0:= 1I;
  #L3f75ae.  return v0;
}
procedure `long` `d`(`org.c.a.d.n` v2 @kind this) @signature `Lorg/c/a/d/n;.d:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f76b8.  v0:= v2.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f76bc.  return v0 @kind wide;
}
procedure `boolean` `equals`(`org.c.a.d.n` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/c/a/d/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3f75c0.  v0:= 1I;
  #L3f75c2.  if v7 != v8 then goto L3f75c8;
  #L3f75c6.  return v0;
  #L3f75c8.  v1:= instanceof @variable v8 @type ^`org.c.a.d.n` @kind boolean;
  #L3f75cc.  v2:= 0I;
  #L3f75ce.  if v1 == 0 then goto L3f7600;
  #L3f75d2.  v8:= (`org.c.a.d.n`) v8 @kind object;
  #L3f75d6.  call temp:= `a`(v7) @signature `Lorg/c/a/d/n;.a:()Lorg/c/a/h;` @kind virtual;
  #L3f75dc.  v1:= temp @kind object;
  #L3f75de.  call temp:= `a`(v8) @signature `Lorg/c/a/d/n;.a:()Lorg/c/a/h;` @kind virtual;
  #L3f75e4.  v3:= temp @kind object;
  #L3f75e6.  if v1 != v3 then goto L3f75fc;
  #L3f75ea.  v3:= v7.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f75ee.  v5:= v8.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f75f2.  v8:= lcmp(v3, v5);
  #L3f75f6.  if v8 != 0 then goto L3f75fc;
  #L3f75fa.  goto L3f75fe;
  #L3f75fc.  v0:= 0I;
  #L3f75fe.  return v0;
  #L3f7600.  return v2;
}
procedure `int` `hashCode`(`org.c.a.d.n` v6 @kind this) @signature `Lorg/c/a/d/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f7614.  v0:= v6.`org.c.a.d.n.a` @type ^`long` @kind wide;
  #L3f7618.  v2:= 32I;
  #L3f761c.  v2:= v0 ^>> v2 @kind long;
  #L3f7620.  v4:= v0 ^~ v2 @kind long;
  #L3f7624.  v0:= (`int`) v4 @kind l2i;
  #L3f7626.  call temp:= `a`(v6) @signature `Lorg/c/a/d/n;.a:()Lorg/c/a/h;` @kind virtual;
  #L3f762c.  v1:= temp @kind object;
  #L3f762e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f7634.  v1:= temp;
  #L3f7636.  v0:= v0 + v1 @kind int;
  #L3f7638.  return v0;
}
