record `org.c.a.d.t` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.g` @kind class, `java.io.Serializable` @kind interface {
  `org.c.a.h` `org.c.a.d.t.b` @AccessFlag PRIVATE_FINAL;
}
global `java.util.HashMap` `@@org.c.a.d.t.a` @AccessFlag PRIVATE_STATIC;
global `long` `@@org.c.a.d.t.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.d.t` v0 @kind this, `org.c.a.h` v1 @kind object) @signature `Lorg/c/a/d/t;.<init>:(Lorg/c/a/h;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f8500.  call `<init>`(v0) @signature `Lorg/c/a/g;.<init>:()V` @kind direct;
  #L3f8506.  v0.`org.c.a.d.t.b` @type ^`org.c.a.h` := v1 @kind object;
  #L3f850a.  return @kind void;
}
procedure `org.c.a.d.t` `a`(`org.c.a.h` v3 @kind object) @signature `Lorg/c/a/d/t;.a:(Lorg/c/a/h;)Lorg/c/a/d/t;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3f8478.  v0:= constclass @type ^`org.c.a.d.t` @kind object;
  #L3f847c.  @monitorenter v0
  #L3f847e.  v1:= `@@org.c.a.d.t.a` @type ^`java.util.HashMap` @kind object;
  #L3f8482.  if v1 != 0 then goto L3f849a;
  #L3f8486.  v1:= new `java.util.HashMap`;
  #L3f848a.  v2:= 7I;
  #L3f848c.  call `<init>`(v1, v2) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L3f8492.  `@@org.c.a.d.t.a` @type ^`java.util.HashMap` := v1 @kind object;
  #L3f8496.  v1:= 0I;
  #L3f8498.  goto L3f84aa;
  #L3f849a.  v1:= `@@org.c.a.d.t.a` @type ^`java.util.HashMap` @kind object;
  #L3f849e.  call temp:= `get`(v1, v3) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f84a4.  v1:= temp @kind object;
  #L3f84a6.  v1:= (`org.c.a.d.t`) v1 @kind object;
  #L3f84aa.  if v1 != 0 then goto L3f84c2;
  #L3f84ae.  v1:= new `org.c.a.d.t`;
  #L3f84b2.  call `<init>`(v1, v3) @signature `Lorg/c/a/d/t;.<init>:(Lorg/c/a/h;)V` @kind direct;
  #L3f84b8.  v2:= `@@org.c.a.d.t.a` @type ^`java.util.HashMap` @kind object;
  #L3f84bc.  call temp:= `put`(v2, v3, v1) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3f84c2.  @monitorexit v0
  #L3f84c4.  return v1 @kind object;
  #L3f84c6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3f84c8.  @monitorexit v0
  #L3f84ca.  throw v3;
  catch `java.lang.Throwable` @[L3f847e..L3f84c2] goto L3f84c6;
}
procedure `java.lang.UnsupportedOperationException` `f`(`org.c.a.d.t` v3 @kind this) @signature `Lorg/c/a/d/t;.f:()Ljava/lang/UnsupportedOperationException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3f83c8.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3f83cc.  v1:= new `java.lang.StringBuilder`;
  #L3f83d0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f83d6.  v2:= v3.`org.c.a.d.t.b` @type ^`org.c.a.h` @kind object;
  #L3f83da.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f83e0.  v2:= " field is unsupported" @kind object;
  #L3f83e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f83ea.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f83f0.  v1:= temp @kind object;
  #L3f83f2.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f83f8.  return v0 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f8340.  v0:= v1.`org.c.a.d.t.b` @type ^`org.c.a.h` @kind object;
  #L3f8344.  call temp:= `a`(v0) @signature `Lorg/c/a/d/t;.a:(Lorg/c/a/h;)Lorg/c/a/d/t;` @kind static;
  #L3f834a.  v0:= temp @kind object;
  #L3f834c.  return v0 @kind object;
}
procedure `int` `a`(`org.c.a.d.t` v0 @kind this, `org.c.a.g` v1 @kind object) @signature `Lorg/c/a/d/t;.a:(Lorg/c/a/g;)I` @AccessFlag PUBLIC {
    temp;

  #L3f82cc.  v1:= 0I;
  #L3f82ce.  return v1;
}
procedure `long` `a`(`org.c.a.d.t` v0 @kind this, `long` v1 , `int` v3 ) @signature `Lorg/c/a/d/t;.a:(JI)J` @AccessFlag PUBLIC {
    temp;

  #L3f840c.  call temp:= `f`(v0) @signature `Lorg/c/a/d/t;.f:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3f8412.  v1:= temp @kind object;
  #L3f8414.  throw v1;
}
procedure `long` `a`(`org.c.a.d.t` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/t;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3f8428.  call temp:= `f`(v0) @signature `Lorg/c/a/d/t;.f:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3f842e.  v1:= temp @kind object;
  #L3f8430.  throw v1;
}
procedure `org.c.a.h` `a`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.a:()Lorg/c/a/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f84e8.  v0:= v1.`org.c.a.d.t.b` @type ^`org.c.a.h` @kind object;
  #L3f84ec.  return v0 @kind object;
}
procedure `int` `b`(`org.c.a.d.t` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/t;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3f82e0.  call temp:= `f`(v0) @signature `Lorg/c/a/d/t;.f:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3f82e6.  v1:= temp @kind object;
  #L3f82e8.  throw v1;
}
procedure `boolean` `b`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8244.  v0:= 0I;
  #L3f8246.  return v0;
}
procedure `long` `c`(`org.c.a.d.t` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/t;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3f8444.  call temp:= `f`(v0) @signature `Lorg/c/a/d/t;.f:()Ljava/lang/UnsupportedOperationException;` @kind direct;
  #L3f844a.  v1:= temp @kind object;
  #L3f844c.  throw v1;
}
procedure `boolean` `c`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8258.  v0:= 1I;
  #L3f825a.  return v0;
}
procedure `int` `compareTo`(`org.c.a.d.t` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/d/t;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f82fc.  v1:= (`org.c.a.g`) v1 @kind object;
  #L3f8300.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/d/t;.a:(Lorg/c/a/g;)I` @kind virtual;
  #L3f8306.  v1:= temp;
  #L3f8308.  return v1;
}
procedure `long` `d`(`org.c.a.d.t` v2 @kind this) @signature `Lorg/c/a/d/t;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8460.  v0:= 0L;
  #L3f8464.  return v0 @kind wide;
}
procedure `java.lang.String` `e`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8360.  v0:= v1.`org.c.a.d.t.b` @type ^`org.c.a.h` @kind object;
  #L3f8364.  call temp:= `m`(v0) @signature `Lorg/c/a/h;.m:()Ljava/lang/String;` @kind virtual;
  #L3f836a.  v0:= temp @kind object;
  #L3f836c.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.c.a.d.t` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/c/a/d/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3f826c.  v0:= 1I;
  #L3f826e.  if v3 != v4 then goto L3f8274;
  #L3f8272.  return v0;
  #L3f8274.  v1:= instanceof @variable v4 @type ^`org.c.a.d.t` @kind boolean;
  #L3f8278.  v2:= 0I;
  #L3f827a.  if v1 == 0 then goto L3f82ba;
  #L3f827e.  v4:= (`org.c.a.d.t`) v4 @kind object;
  #L3f8282.  call temp:= `e`(v4) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f8288.  v1:= temp @kind object;
  #L3f828a.  if v1 != 0 then goto L3f82a0;
  #L3f828e.  call temp:= `e`(v3) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f8294.  v4:= temp @kind object;
  #L3f8296.  if v4 != 0 then goto L3f829c;
  #L3f829a.  goto L3f829e;
  #L3f829c.  v0:= 0I;
  #L3f829e.  return v0;
  #L3f82a0.  call temp:= `e`(v4) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f82a6.  v4:= temp @kind object;
  #L3f82a8.  call temp:= `e`(v3) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f82ae.  v0:= temp @kind object;
  #L3f82b0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f82b6.  v4:= temp;
  #L3f82b8.  return v4;
  #L3f82ba.  return v2;
}
procedure `int` `hashCode`(`org.c.a.d.t` v1 @kind this) @signature `Lorg/c/a/d/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f831c.  call temp:= `e`(v1) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f8322.  v0:= temp @kind object;
  #L3f8324.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3f832a.  v0:= temp;
  #L3f832c.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.d.t` v2 @kind this) @signature `Lorg/c/a/d/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8380.  v0:= new `java.lang.StringBuilder`;
  #L3f8384.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f838a.  v1:= "UnsupportedDurationField[" @kind object;
  #L3f838e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f8394.  call temp:= `e`(v2) @signature `Lorg/c/a/d/t;.e:()Ljava/lang/String;` @kind virtual;
  #L3f839a.  v1:= temp @kind object;
  #L3f839c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f83a2.  v1:= 93I;
  #L3f83a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f83ac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f83b2.  v0:= temp @kind object;
  #L3f83b4.  return v0 @kind object;
}
