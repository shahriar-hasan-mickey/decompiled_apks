record `org.c.a.d.u` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.d.d` @kind class {
}
procedure `void` `<init>`(`org.c.a.d.u` v0 @kind this, `org.c.a.c` v1 @kind object, `org.c.a.d` v2 @kind object) @signature `Lorg/c/a/d/u;.<init>:(Lorg/c/a/c;Lorg/c/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f8798.  call `<init>`(v0, v1, v2) @signature `Lorg/c/a/d/d;.<init>:(Lorg/c/a/c;Lorg/c/a/d;)V` @kind direct;
  #L3f879e.  call temp:= `h`(v1) @signature `Lorg/c/a/c;.h:()I` @kind virtual;
  #L3f87a4.  v1:= temp;
  #L3f87a6.  if v1 == 0 then goto L3f87ba;
  #L3f87aa.  v1:= new `java.lang.IllegalArgumentException`;
  #L3f87ae.  v2:= "Wrapped field's minumum value must be zero" @kind object;
  #L3f87b2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f87b8.  throw v1;
  #L3f87ba.  return @kind void;
}
procedure `int` `a`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.a:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8540.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8546.  v0:= temp @kind object;
  #L3f8548.  call temp:= `a`(v0, v2) @signature `Lorg/c/a/c;.a:(J)I` @kind virtual;
  #L3f854e.  v2:= temp;
  #L3f8550.  if v2 != 0 then goto L3f855c;
  #L3f8554.  call temp:= `i`(v1) @signature `Lorg/c/a/d/u;.i:()I` @kind virtual;
  #L3f855a.  v2:= temp;
  #L3f855c.  return v2;
}
procedure `long` `a`(`org.c.a.d.u` v1 @kind this, `long` v2 , `int` v4 ) @signature `Lorg/c/a/d/u;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f85f8.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f85fe.  v0:= temp @kind object;
  #L3f8600.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/c;.a:(JI)J` @kind virtual;
  #L3f8606.  v2:= temp @kind wide;
  #L3f8608.  return v2 @kind wide;
}
procedure `long` `a`(`org.c.a.d.u` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/d/u;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f861c.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8622.  v0:= temp @kind object;
  #L3f8624.  call temp:= `a`(v0, v2, v4) @signature `Lorg/c/a/c;.a:(JJ)J` @kind virtual;
  #L3f862a.  v2:= temp @kind wide;
  #L3f862c.  return v2 @kind wide;
}
procedure `int` `b`(`org.c.a.d.u` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/d/u;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8570.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8576.  v0:= temp @kind object;
  #L3f8578.  call temp:= `b`(v0, v2, v4) @signature `Lorg/c/a/c;.b:(JJ)I` @kind virtual;
  #L3f857e.  v2:= temp;
  #L3f8580.  return v2;
}
procedure `long` `b`(`org.c.a.d.u` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/d/u;.b:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f8640.  call temp:= `i`(v2) @signature `Lorg/c/a/d/u;.i:()I` @kind virtual;
  #L3f8646.  v0:= temp;
  #L3f8648.  v1:= 1I;
  #L3f864a.  call `a`(v2, v5, v1, v0) @signature `Lorg/c/a/d/h;.a:(Lorg/c/a/c;III)V` @kind static;
  #L3f8650.  if v5 != v0 then goto L3f8656;
  #L3f8654.  v5:= 0I;
  #L3f8656.  call temp:= `j`(v2) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f865c.  v0:= temp @kind object;
  #L3f865e.  call temp:= `b`(v0, v3, v5) @signature `Lorg/c/a/c;.b:(JI)J` @kind virtual;
  #L3f8664.  v3:= temp @kind wide;
  #L3f8666.  return v3 @kind wide;
}
procedure `boolean` `b`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.b:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f851c.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8522.  v0:= temp @kind object;
  #L3f8524.  call temp:= `b`(v0, v2) @signature `Lorg/c/a/c;.b:(J)Z` @kind virtual;
  #L3f852a.  v2:= temp;
  #L3f852c.  return v2;
}
procedure `int` `c`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.c:(J)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8594.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f859a.  v0:= temp @kind object;
  #L3f859c.  call temp:= `c`(v0, v2) @signature `Lorg/c/a/c;.c:(J)I` @kind virtual;
  #L3f85a2.  v2:= temp;
  #L3f85a4.  v2:= v2 + 1;
  #L3f85a8.  return v2;
}
procedure `long` `c`(`org.c.a.d.u` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lorg/c/a/d/u;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8678.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f867e.  v0:= temp @kind object;
  #L3f8680.  call temp:= `c`(v0, v2, v4) @signature `Lorg/c/a/c;.c:(JJ)J` @kind virtual;
  #L3f8686.  v2:= temp @kind wide;
  #L3f8688.  return v2 @kind wide;
}
procedure `long` `d`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.d:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f869c.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f86a2.  v0:= temp @kind object;
  #L3f86a4.  call temp:= `d`(v0, v2) @signature `Lorg/c/a/c;.d:(J)J` @kind virtual;
  #L3f86aa.  v2:= temp @kind wide;
  #L3f86ac.  return v2 @kind wide;
}
procedure `long` `e`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.e:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f86c0.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f86c6.  v0:= temp @kind object;
  #L3f86c8.  call temp:= `e`(v0, v2) @signature `Lorg/c/a/c;.e:(J)J` @kind virtual;
  #L3f86ce.  v2:= temp @kind wide;
  #L3f86d0.  return v2 @kind wide;
}
procedure `long` `f`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.f:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f86e4.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f86ea.  v0:= temp @kind object;
  #L3f86ec.  call temp:= `f`(v0, v2) @signature `Lorg/c/a/c;.f:(J)J` @kind virtual;
  #L3f86f2.  v2:= temp @kind wide;
  #L3f86f4.  return v2 @kind wide;
}
procedure `long` `g`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.g:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8708.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f870e.  v0:= temp @kind object;
  #L3f8710.  call temp:= `g`(v0, v2) @signature `Lorg/c/a/c;.g:(J)J` @kind virtual;
  #L3f8716.  v2:= temp @kind wide;
  #L3f8718.  return v2 @kind wide;
}
procedure `org.c.a.g` `g`(`org.c.a.d.u` v1 @kind this) @signature `Lorg/c/a/d/u;.g:()Lorg/c/a/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8774.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f877a.  v0:= temp @kind object;
  #L3f877c.  call temp:= `g`(v0) @signature `Lorg/c/a/c;.g:()Lorg/c/a/g;` @kind virtual;
  #L3f8782.  v0:= temp @kind object;
  #L3f8784.  return v0 @kind object;
}
procedure `int` `h`(`org.c.a.d.u` v1 @kind this) @signature `Lorg/c/a/d/u;.h:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f85bc.  v0:= 1I;
  #L3f85be.  return v0;
}
procedure `long` `h`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.h:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f872c.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8732.  v0:= temp @kind object;
  #L3f8734.  call temp:= `h`(v0, v2) @signature `Lorg/c/a/c;.h:(J)J` @kind virtual;
  #L3f873a.  v2:= temp @kind wide;
  #L3f873c.  return v2 @kind wide;
}
procedure `int` `i`(`org.c.a.d.u` v1 @kind this) @signature `Lorg/c/a/d/u;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f85d0.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f85d6.  v0:= temp @kind object;
  #L3f85d8.  call temp:= `i`(v0) @signature `Lorg/c/a/c;.i:()I` @kind virtual;
  #L3f85de.  v0:= temp;
  #L3f85e0.  v0:= v0 + 1;
  #L3f85e4.  return v0;
}
procedure `long` `i`(`org.c.a.d.u` v1 @kind this, `long` v2 ) @signature `Lorg/c/a/d/u;.i:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f8750.  call temp:= `j`(v1) @signature `Lorg/c/a/d/u;.j:()Lorg/c/a/c;` @kind virtual;
  #L3f8756.  v0:= temp @kind object;
  #L3f8758.  call temp:= `i`(v0, v2) @signature `Lorg/c/a/c;.i:(J)J` @kind virtual;
  #L3f875e.  v2:= temp @kind wide;
  #L3f8760.  return v2 @kind wide;
}
