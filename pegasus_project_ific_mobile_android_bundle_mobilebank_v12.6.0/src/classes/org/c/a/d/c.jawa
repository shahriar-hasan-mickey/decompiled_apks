record `org.c.a.d.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.c.a.g` @kind class, `java.io.Serializable` @kind interface {
  `org.c.a.h` `org.c.a.d.c.a` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.c.a.d.c.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.c.a.d.c` v1 @kind this, `org.c.a.h` v2 @kind object) @signature `Lorg/c/a/d/c;.<init>:(Lorg/c/a/h;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3f5db4.  call `<init>`(v1) @signature `Lorg/c/a/g;.<init>:()V` @kind direct;
  #L3f5dba.  if v2 != 0 then goto L3f5dce;
  #L3f5dbe.  v2:= new `java.lang.IllegalArgumentException`;
  #L3f5dc2.  v0:= "The type must not be null" @kind object;
  #L3f5dc6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3f5dcc.  throw v2;
  #L3f5dce.  v1.`org.c.a.d.c.a` @type ^`org.c.a.h` := v2 @kind object;
  #L3f5dd2.  return @kind void;
}
procedure `int` `a`(`org.c.a.d.c` v4 @kind this, `org.c.a.g` v5 @kind object) @signature `Lorg/c/a/d/c;.a:(Lorg/c/a/g;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f5cb4.  call temp:= `d`(v5) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f5cba.  v0:= temp @kind wide;
  #L3f5cbc.  call temp:= `d`(v4) @signature `Lorg/c/a/d/c;.d:()J` @kind virtual;
  #L3f5cc2.  v2:= temp @kind wide;
  #L3f5cc4.  v5:= lcmp(v2, v0);
  #L3f5cc8.  if v5 != 0 then goto L3f5cd0;
  #L3f5ccc.  v5:= 0I;
  #L3f5cce.  return v5;
  #L3f5cd0.  v5:= lcmp(v2, v0);
  #L3f5cd4.  if v5 >= 0 then goto L3f5cdc;
  #L3f5cd8.  v5:= -1I;
  #L3f5cda.  return v5;
  #L3f5cdc.  v5:= 1I;
  #L3f5cde.  return v5;
}
procedure `org.c.a.h` `a`(`org.c.a.d.c` v1 @kind this) @signature `Lorg/c/a/d/c;.a:()Lorg/c/a/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f5d9c.  v0:= v1.`org.c.a.d.c.a` @type ^`org.c.a.h` @kind object;
  #L3f5da0.  return v0 @kind object;
}
procedure `int` `b`(`org.c.a.d.c` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/c;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3f5cf0.  call temp:= `c`(v0, v1, v3) @signature `Lorg/c/a/d/c;.c:(JJ)J` @kind virtual;
  #L3f5cf6.  v1:= temp @kind wide;
  #L3f5cf8.  call temp:= `a`(v1) @signature `Lorg/c/a/d/h;.a:(J)I` @kind static;
  #L3f5cfe.  v1:= temp;
  #L3f5d00.  return v1;
}
procedure `boolean` `b`(`org.c.a.d.c` v1 @kind this) @signature `Lorg/c/a/d/c;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f5ca0.  v0:= 1I;
  #L3f5ca2.  return v0;
}
procedure `int` `compareTo`(`org.c.a.d.c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/d/c;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f5d14.  v1:= (`org.c.a.g`) v1 @kind object;
  #L3f5d18.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/d/c;.a:(Lorg/c/a/g;)I` @kind virtual;
  #L3f5d1e.  v1:= temp;
  #L3f5d20.  return v1;
}
procedure `java.lang.String` `e`(`org.c.a.d.c` v1 @kind this) @signature `Lorg/c/a/d/c;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f5d34.  v0:= v1.`org.c.a.d.c.a` @type ^`org.c.a.h` @kind object;
  #L3f5d38.  call temp:= `m`(v0) @signature `Lorg/c/a/h;.m:()Ljava/lang/String;` @kind virtual;
  #L3f5d3e.  v0:= temp @kind object;
  #L3f5d40.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.c.a.d.c` v2 @kind this) @signature `Lorg/c/a/d/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f5d54.  v0:= new `java.lang.StringBuilder`;
  #L3f5d58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f5d5e.  v1:= "DurationField[" @kind object;
  #L3f5d62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5d68.  call temp:= `e`(v2) @signature `Lorg/c/a/d/c;.e:()Ljava/lang/String;` @kind virtual;
  #L3f5d6e.  v1:= temp @kind object;
  #L3f5d70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5d76.  v1:= 93I;
  #L3f5d7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f5d80.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f5d86.  v0:= temp @kind object;
  #L3f5d88.  return v0 @kind object;
}
