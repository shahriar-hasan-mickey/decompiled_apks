record `org.c.a.d.j` @kind class @AccessFlag PUBLIC_FINAL extends `org.c.a.g` @kind class, `java.io.Serializable` @kind interface {
}
global `org.c.a.g` `@@org.c.a.d.j.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@org.c.a.d.j.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/c/a/d/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3f6f74.  v0:= new `org.c.a.d.j`;
  #L3f6f78.  call `<init>`(v0) @signature `Lorg/c/a/d/j;.<init>:()V` @kind direct;
  #L3f6f7e.  `@@org.c.a.d.j.a` @type ^`org.c.a.g` := v0 @kind object;
  #L3f6f82.  return @kind void;
}
procedure `void` `<init>`(`org.c.a.d.j` v0 @kind this) @signature `Lorg/c/a/d/j;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3f6f94.  call `<init>`(v0) @signature `Lorg/c/a/g;.<init>:()V` @kind direct;
  #L3f6f9a.  return @kind void;
}
procedure `java.lang.Object` `readResolve`(`org.c.a.d.j` v1 @kind this) @signature `Lorg/c/a/d/j;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3f6ebc.  v0:= `@@org.c.a.d.j.a` @type ^`org.c.a.g` @kind object;
  #L3f6ec0.  return v0 @kind object;
}
procedure `int` `a`(`org.c.a.d.j` v4 @kind this, `org.c.a.g` v5 @kind object) @signature `Lorg/c/a/d/j;.a:(Lorg/c/a/g;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f6e20.  call temp:= `d`(v5) @signature `Lorg/c/a/g;.d:()J` @kind virtual;
  #L3f6e26.  v0:= temp @kind wide;
  #L3f6e28.  call temp:= `d`(v4) @signature `Lorg/c/a/d/j;.d:()J` @kind virtual;
  #L3f6e2e.  v2:= temp @kind wide;
  #L3f6e30.  v5:= lcmp(v2, v0);
  #L3f6e34.  if v5 != 0 then goto L3f6e3c;
  #L3f6e38.  v5:= 0I;
  #L3f6e3a.  return v5;
  #L3f6e3c.  v5:= lcmp(v2, v0);
  #L3f6e40.  if v5 >= 0 then goto L3f6e48;
  #L3f6e44.  v5:= -1I;
  #L3f6e46.  return v5;
  #L3f6e48.  v5:= 1I;
  #L3f6e4a.  return v5;
}
procedure `long` `a`(`org.c.a.d.j` v2 @kind this, `long` v3 , `int` v5 ) @signature `Lorg/c/a/d/j;.a:(JI)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6eec.  v0:= (`long`) v5 @kind i2l;
  #L3f6eee.  call temp:= `a`(v3, v0) @signature `Lorg/c/a/d/h;.a:(JJ)J` @kind static;
  #L3f6ef4.  v3:= temp @kind wide;
  #L3f6ef6.  return v3 @kind wide;
}
procedure `long` `a`(`org.c.a.d.j` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/j;.a:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3f6f08.  call temp:= `a`(v1, v3) @signature `Lorg/c/a/d/h;.a:(JJ)J` @kind static;
  #L3f6f0e.  v1:= temp @kind wide;
  #L3f6f10.  return v1 @kind wide;
}
procedure `org.c.a.h` `a`(`org.c.a.d.j` v1 @kind this) @signature `Lorg/c/a/d/j;.a:()Lorg/c/a/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6f58.  call temp:= `a`() @signature `Lorg/c/a/h;.a:()Lorg/c/a/h;` @kind static;
  #L3f6f5e.  v0:= temp @kind object;
  #L3f6f60.  return v0 @kind object;
}
procedure `int` `b`(`org.c.a.d.j` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/j;.b:(JJ)I` @AccessFlag PUBLIC {
    temp;

  #L3f6e5c.  call temp:= `b`(v1, v3) @signature `Lorg/c/a/d/h;.b:(JJ)J` @kind static;
  #L3f6e62.  v1:= temp @kind wide;
  #L3f6e64.  call temp:= `a`(v1) @signature `Lorg/c/a/d/h;.a:(J)I` @kind static;
  #L3f6e6a.  v1:= temp;
  #L3f6e6c.  return v1;
}
procedure `boolean` `b`(`org.c.a.d.j` v1 @kind this) @signature `Lorg/c/a/d/j;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6dbc.  v0:= 1I;
  #L3f6dbe.  return v0;
}
procedure `long` `c`(`org.c.a.d.j` v0 @kind this, `long` v1 , `long` v3 ) @signature `Lorg/c/a/d/j;.c:(JJ)J` @AccessFlag PUBLIC {
    temp;

  #L3f6f24.  call temp:= `b`(v1, v3) @signature `Lorg/c/a/d/h;.b:(JJ)J` @kind static;
  #L3f6f2a.  v1:= temp @kind wide;
  #L3f6f2c.  return v1 @kind wide;
}
procedure `boolean` `c`(`org.c.a.d.j` v1 @kind this) @signature `Lorg/c/a/d/j;.c:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3f6dd0.  v0:= 1I;
  #L3f6dd2.  return v0;
}
procedure `int` `compareTo`(`org.c.a.d.j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/c/a/d/j;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f6e80.  v1:= (`org.c.a.g`) v1 @kind object;
  #L3f6e84.  call temp:= `a`(v0, v1) @signature `Lorg/c/a/d/j;.a:(Lorg/c/a/g;)I` @kind virtual;
  #L3f6e8a.  v1:= temp;
  #L3f6e8c.  return v1;
}
procedure `long` `d`(`org.c.a.d.j` v2 @kind this) @signature `Lorg/c/a/d/j;.d:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3f6f40.  v0:= 1L;
  #L3f6f44.  return v0 @kind wide;
}
procedure `boolean` `equals`(`org.c.a.d.j` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lorg/c/a/d/j;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3f6de4.  v0:= instanceof @variable v7 @type ^`org.c.a.d.j` @kind boolean;
  #L3f6de8.  v1:= 0I;
  #L3f6dea.  if v0 == 0 then goto L3f6e0e;
  #L3f6dee.  call temp:= `d`(v6) @signature `Lorg/c/a/d/j;.d:()J` @kind virtual;
  #L3f6df4.  v2:= temp @kind wide;
  #L3f6df6.  v7:= (`org.c.a.d.j`) v7 @kind object;
  #L3f6dfa.  call temp:= `d`(v7) @signature `Lorg/c/a/d/j;.d:()J` @kind virtual;
  #L3f6e00.  v4:= temp @kind wide;
  #L3f6e02.  v7:= lcmp(v2, v4);
  #L3f6e06.  if v7 != 0 then goto L3f6e0c;
  #L3f6e0a.  v1:= 1I;
  #L3f6e0c.  return v1;
  #L3f6e0e.  return v1;
}
procedure `int` `hashCode`(`org.c.a.d.j` v2 @kind this) @signature `Lorg/c/a/d/j;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f6ea0.  call temp:= `d`(v2) @signature `Lorg/c/a/d/j;.d:()J` @kind virtual;
  #L3f6ea6.  v0:= temp @kind wide;
  #L3f6ea8.  v0:= (`int`) v0 @kind l2i;
  #L3f6eaa.  return v0;
}
procedure `java.lang.String` `toString`(`org.c.a.d.j` v1 @kind this) @signature `Lorg/c/a/d/j;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f6ed4.  v0:= "DurationField[millis]" @kind object;
  #L3f6ed8.  return v0 @kind object;
}
