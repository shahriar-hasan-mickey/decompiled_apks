record `org.b.a.a.b` @kind class @AccessFlag PUBLIC extends `org.b.a.a.a` @kind class {
  `int` `org.b.a.a.b.b` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.c` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.d` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.e` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.f` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.g` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.h` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.i` @AccessFlag PRIVATE;
  `int`[] `org.b.a.a.b.j` @AccessFlag PRIVATE;
  `int` `org.b.a.a.b.k` @AccessFlag PRIVATE;
}
global `int`[] `@@org.b.a.a.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/b/a/a/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9818.  v0:= 64I;
  #L3e981c.  v0:= new `int`[v0];
  #L3e9820.  goto L3e982c;
  #L3e9826.  `@@org.b.a.a.b.a` @type ^`int`[] := v0 @kind object;
  #L3e982a.  return @kind void;
  #L3e982c.  v0:= (1116352408I, 1899447441I, -1245643825I, -373957723I, 961987163I, 1508970993I, -1841331548I, -1424204075I, -670586216I, 310598401I, 607225278I, 1426881987I, 1925078388I, -2132889090I, -1680079193I, -1046744716I, -459576895I, -272742522I, 264347078I, 604807628I, 770255983I, 1249150122I, 1555081692I, 1996064986I, -1740746414I, -1473132947I, -1341970488I, -1084653625I, -958395405I, -710438585I, 113926993I, 338241895I, 666307205I, 773529912I, 1294757372I, 1396182291I, 1695183700I, 1986661051I, -2117940946I, -1838011259I, -1564481375I, -1474664885I, -1035236496I, -949202525I, -778901479I, -694614492I, -200395387I, 275423344I, 430227734I, 506948616I, 659060556I, 883997877I, 958139571I, 1322822218I, 1537002063I, 1747873779I, 1955562222I, 2024104815I, -2067236844I, -1933114872I, -1866530822I, -1538233109I, -1090935817I, -965641998I) @kind object;
  #L3e9933.  goto L3e9826;
}
procedure `void` `<init>`(`org.b.a.a.b` v1 @kind this) @signature `Lorg/b/a/a/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9944.  call `<init>`(v1) @signature `Lorg/b/a/a/a;.<init>:()V` @kind direct;
  #L3e994a.  v0:= 64I;
  #L3e994e.  v0:= new `int`[v0];
  #L3e9952.  v1.`org.b.a.a.b.j` @type ^`int`[] := v0 @kind object;
  #L3e9956.  call `c`(v1) @signature `Lorg/b/a/a/b;.c:()V` @kind virtual;
  #L3e995c.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.a.b` v1 @kind this, `org.b.a.a.b` v2 @kind object) @signature `Lorg/b/a/a/b;.<init>:(Lorg/b/a/a/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e9970.  call `<init>`(v1, v2) @signature `Lorg/b/a/a/a;.<init>:(Lorg/b/a/a/a;)V` @kind direct;
  #L3e9976.  v0:= 64I;
  #L3e997a.  v0:= new `int`[v0];
  #L3e997e.  v1.`org.b.a.a.b.j` @type ^`int`[] := v0 @kind object;
  #L3e9982.  call `a`(v1, v2) @signature `Lorg/b/a/a/b;.a:(Lorg/b/a/a/b;)V` @kind direct;
  #L3e9988.  return @kind void;
}
procedure `int` `a`(`org.b.a.a.b` v3 @kind this, `int` v4 ) @signature `Lorg/b/a/a/b;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e96c8.  v0:= v4 ^>> 2;
  #L3e96cc.  v1:= v4 ^< 30;
  #L3e96d0.  v0:= v0 ^| v1 @kind int;
  #L3e96d2.  v1:= v4 ^>> 13;
  #L3e96d6.  v2:= v4 ^< 19;
  #L3e96da.  v1:= v1 ^| v2 @kind int;
  #L3e96dc.  v0:= v0 ^~ v1 @kind int;
  #L3e96de.  v1:= v4 ^>> 22;
  #L3e96e2.  v4:= v4 ^< 10;
  #L3e96e6.  v4:= v4 ^| v1 @kind int;
  #L3e96e8.  v4:= v4 ^~ v0 @kind int;
  #L3e96ea.  return v4;
}
procedure `int` `a`(`org.b.a.a.b` v0 @kind this, `int` v1 , `int` v2 , `int` v3 ) @signature `Lorg/b/a/a/b;.a:(III)I` @AccessFlag PRIVATE {
    temp;

  #L3e96fc.  v2:= v2 ^& v1 @kind int;
  #L3e96fe.  v1:= v1 ^~ -1;
  #L3e9702.  v1:= v1 ^& v3 @kind int;
  #L3e9704.  v1:= v1 ^~ v2 @kind int;
  #L3e9706.  return v1;
}
procedure `void` `a`(`org.b.a.a.b` v4 @kind this, `org.b.a.a.b` v5 @kind object) @signature `Lorg/b/a/a/b;.a:(Lorg/b/a/a/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e99e8.  call `a`(v4, v5) @signature `Lorg/b/a/a/a;.a:(Lorg/b/a/a/a;)V` @kind super;
  #L3e99ee.  v0:= v5.`org.b.a.a.b.b` @type ^`int`;
  #L3e99f2.  v4.`org.b.a.a.b.b` @type ^`int` := v0;
  #L3e99f6.  v0:= v5.`org.b.a.a.b.c` @type ^`int`;
  #L3e99fa.  v4.`org.b.a.a.b.c` @type ^`int` := v0;
  #L3e99fe.  v0:= v5.`org.b.a.a.b.d` @type ^`int`;
  #L3e9a02.  v4.`org.b.a.a.b.d` @type ^`int` := v0;
  #L3e9a06.  v0:= v5.`org.b.a.a.b.e` @type ^`int`;
  #L3e9a0a.  v4.`org.b.a.a.b.e` @type ^`int` := v0;
  #L3e9a0e.  v0:= v5.`org.b.a.a.b.f` @type ^`int`;
  #L3e9a12.  v4.`org.b.a.a.b.f` @type ^`int` := v0;
  #L3e9a16.  v0:= v5.`org.b.a.a.b.g` @type ^`int`;
  #L3e9a1a.  v4.`org.b.a.a.b.g` @type ^`int` := v0;
  #L3e9a1e.  v0:= v5.`org.b.a.a.b.h` @type ^`int`;
  #L3e9a22.  v4.`org.b.a.a.b.h` @type ^`int` := v0;
  #L3e9a26.  v0:= v5.`org.b.a.a.b.i` @type ^`int`;
  #L3e9a2a.  v4.`org.b.a.a.b.i` @type ^`int` := v0;
  #L3e9a2e.  v0:= v5.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9a32.  v1:= v4.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9a36.  v2:= v5.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9a3a.  v2:= length @variable v2;
  #L3e9a3c.  v3:= 0I;
  #L3e9a3e.  call `arraycopy`(v0, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e9a44.  v5:= v5.`org.b.a.a.b.k` @type ^`int`;
  #L3e9a48.  v4.`org.b.a.a.b.k` @type ^`int` := v5;
  #L3e9a4c.  return @kind void;
}
procedure `int` `b`(`org.b.a.a.b` v3 @kind this, `int` v4 ) @signature `Lorg/b/a/a/b;.b:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9730.  v0:= v4 ^>> 6;
  #L3e9734.  v1:= v4 ^< 26;
  #L3e9738.  v0:= v0 ^| v1 @kind int;
  #L3e973a.  v1:= v4 ^>> 11;
  #L3e973e.  v2:= v4 ^< 21;
  #L3e9742.  v1:= v1 ^| v2 @kind int;
  #L3e9744.  v0:= v0 ^~ v1 @kind int;
  #L3e9746.  v1:= v4 ^>> 25;
  #L3e974a.  v4:= v4 ^< 7;
  #L3e974e.  v4:= v4 ^| v1 @kind int;
  #L3e9750.  v4:= v4 ^~ v0 @kind int;
  #L3e9752.  return v4;
}
procedure `int` `b`(`org.b.a.a.b` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lorg/b/a/a/b;.b:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9764.  v0:= v2 ^& v3 @kind int;
  #L3e9768.  v2:= v2 ^& v4 @kind int;
  #L3e976a.  v2:= v2 ^~ v0 @kind int;
  #L3e976c.  v3:= v3 ^& v4 @kind int;
  #L3e976e.  v2:= v2 ^~ v3 @kind int;
  #L3e9770.  return v2;
}
procedure `int` `c`(`org.b.a.a.b` v3 @kind this, `int` v4 ) @signature `Lorg/b/a/a/b;.c:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e9784.  v0:= v4 ^>> 7;
  #L3e9788.  v1:= v4 ^< 25;
  #L3e978c.  v0:= v0 ^| v1 @kind int;
  #L3e978e.  v1:= v4 ^>> 18;
  #L3e9792.  v2:= v4 ^< 14;
  #L3e9796.  v1:= v1 ^| v2 @kind int;
  #L3e9798.  v0:= v0 ^~ v1 @kind int;
  #L3e979a.  v4:= v4 ^>> 3;
  #L3e979e.  v4:= v4 ^~ v0 @kind int;
  #L3e97a0.  return v4;
}
procedure `int` `d`(`org.b.a.a.b` v3 @kind this, `int` v4 ) @signature `Lorg/b/a/a/b;.d:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3e97b4.  v0:= v4 ^>> 17;
  #L3e97b8.  v1:= v4 ^< 15;
  #L3e97bc.  v0:= v0 ^| v1 @kind int;
  #L3e97be.  v1:= v4 ^>> 19;
  #L3e97c2.  v2:= v4 ^< 13;
  #L3e97c6.  v1:= v1 ^| v2 @kind int;
  #L3e97c8.  v0:= v0 ^~ v1 @kind int;
  #L3e97ca.  v4:= v4 ^>> 10;
  #L3e97ce.  v4:= v4 ^~ v0 @kind int;
  #L3e97d0.  return v4;
}
procedure `int` `a`(`org.b.a.a.b` v2 @kind this, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/b/a/a/b;.a:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9638.  call `e`(v2) @signature `Lorg/b/a/a/b;.e:()V` @kind virtual;
  #L3e963e.  v0:= v2.`org.b.a.a.b.b` @type ^`int`;
  #L3e9642.  call `a`(v0, v3, v4) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e9648.  v0:= v2.`org.b.a.a.b.c` @type ^`int`;
  #L3e964c.  v1:= v4 + 4;
  #L3e9650.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e9656.  v0:= v2.`org.b.a.a.b.d` @type ^`int`;
  #L3e965a.  v1:= v4 + 8;
  #L3e965e.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e9664.  v0:= v2.`org.b.a.a.b.e` @type ^`int`;
  #L3e9668.  v1:= v4 + 12;
  #L3e966c.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e9672.  v0:= v2.`org.b.a.a.b.f` @type ^`int`;
  #L3e9676.  v1:= v4 + 16;
  #L3e967a.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e9680.  v0:= v2.`org.b.a.a.b.g` @type ^`int`;
  #L3e9684.  v1:= v4 + 20;
  #L3e9688.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e968e.  v0:= v2.`org.b.a.a.b.h` @type ^`int`;
  #L3e9692.  v1:= v4 + 24;
  #L3e9696.  call `a`(v0, v3, v1) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e969c.  v0:= v2.`org.b.a.a.b.i` @type ^`int`;
  #L3e96a0.  v4:= v4 + 28;
  #L3e96a4.  call `a`(v0, v3, v4) @signature `Lorg/b/b/d;.a:(I[BI)V` @kind static;
  #L3e96aa.  call `c`(v2) @signature `Lorg/b/a/a/b;.c:()V` @kind virtual;
  #L3e96b0.  v3:= 32I;
  #L3e96b4.  return v3;
}
procedure `java.lang.String` `a`(`org.b.a.a.b` v1 @kind this) @signature `Lorg/b/a/a/b;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e97e4.  v0:= "SHA-256" @kind object;
  #L3e97e8.  return v0 @kind object;
}
procedure `void` `a`(`org.b.a.a.b` v6 @kind this, `long` v7 ) @signature `Lorg/b/a/a/b;.a:(J)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e999c.  v0:= v6.`org.b.a.a.b.k` @type ^`int`;
  #L3e99a0.  v1:= 14I;
  #L3e99a4.  if v0 <= v1 then goto L3e99ae;
  #L3e99a8.  call `f`(v6) @signature `Lorg/b/a/a/b;.f:()V` @kind virtual;
  #L3e99ae.  v0:= v6.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e99b2.  v2:= 32I;
  #L3e99b6.  v2:= v7 ^>> v2 @kind long;
  #L3e99ba.  v2:= (`int`) v2 @kind l2i;
  #L3e99bc.  v0[v1]:= v2;
  #L3e99c0.  v0:= v6.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e99c4.  v1:= 15I;
  #L3e99c8.  v2:= -1L;
  #L3e99cc.  v4:= v7 ^& v2 @kind long;
  #L3e99d0.  v7:= (`int`) v4 @kind l2i;
  #L3e99d2.  v0[v1]:= v7;
  #L3e99d6.  return @kind void;
}
procedure `void` `a`(`org.b.a.a.b` v0 @kind this, `org.b.b.c` v1 @kind object) @signature `Lorg/b/a/a/b;.a:(Lorg/b/b/c;)V` @AccessFlag PUBLIC {
    temp;

  #L3e9a60.  v1:= (`org.b.a.a.b`) v1 @kind object;
  #L3e9a64.  call `a`(v0, v1) @signature `Lorg/b/a/a/b;.a:(Lorg/b/a/a/b;)V` @kind direct;
  #L3e9a6a.  return @kind void;
}
procedure `int` `b`(`org.b.a.a.b` v1 @kind this) @signature `Lorg/b/a/a/b;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9718.  v0:= 32I;
  #L3e971c.  return v0;
}
procedure `void` `b`(`org.b.a.a.b` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lorg/b/a/a/b;.b:([BI)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L3e9a7c.  v0:= v4[v5] @kind byte;
  #L3e9a80.  v0:= v0 ^< 24;
  #L3e9a84.  v5:= v5 + 1;
  #L3e9a88.  v1:= v4[v5] @kind byte;
  #L3e9a8c.  v1:= v1 ^& 255;
  #L3e9a90.  v2:= 16I;
  #L3e9a94.  v1:= v1 ^< v2 @kind int;
  #L3e9a96.  v0:= v0 ^| v1 @kind int;
  #L3e9a98.  v5:= v5 + 1;
  #L3e9a9c.  v1:= v4[v5] @kind byte;
  #L3e9aa0.  v1:= v1 ^& 255;
  #L3e9aa4.  v1:= v1 ^< 8;
  #L3e9aa8.  v0:= v0 ^| v1 @kind int;
  #L3e9aaa.  v5:= v5 + 1;
  #L3e9aae.  v4:= v4[v5] @kind byte;
  #L3e9ab2.  v4:= v4 ^& 255;
  #L3e9ab6.  v4:= v4 ^| v0 @kind int;
  #L3e9ab8.  v5:= v3.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9abc.  v0:= v3.`org.b.a.a.b.k` @type ^`int`;
  #L3e9ac0.  v5[v0]:= v4;
  #L3e9ac4.  v4:= v3.`org.b.a.a.b.k` @type ^`int`;
  #L3e9ac8.  v4:= v4 + 1;
  #L3e9acc.  v3.`org.b.a.a.b.k` @type ^`int` := v4;
  #L3e9ad0.  if v4 != v2 then goto L3e9ada;
  #L3e9ad4.  call `f`(v3) @signature `Lorg/b/a/a/b;.f:()V` @kind virtual;
  #L3e9ada.  return @kind void;
}
procedure `void` `c`(`org.b.a.a.b` v3 @kind this) @signature `Lorg/b/a/a/b;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9aec.  call `c`(v3) @signature `Lorg/b/a/a/a;.c:()V` @kind super;
  #L3e9af2.  v0:= 1779033703I;
  #L3e9af8.  v3.`org.b.a.a.b.b` @type ^`int` := v0;
  #L3e9afc.  v0:= -1150833019I;
  #L3e9b02.  v3.`org.b.a.a.b.c` @type ^`int` := v0;
  #L3e9b06.  v0:= 1013904242I;
  #L3e9b0c.  v3.`org.b.a.a.b.d` @type ^`int` := v0;
  #L3e9b10.  v0:= -1521486534I;
  #L3e9b16.  v3.`org.b.a.a.b.e` @type ^`int` := v0;
  #L3e9b1a.  v0:= 1359893119I;
  #L3e9b20.  v3.`org.b.a.a.b.f` @type ^`int` := v0;
  #L3e9b24.  v0:= -1694144372I;
  #L3e9b2a.  v3.`org.b.a.a.b.g` @type ^`int` := v0;
  #L3e9b2e.  v0:= 528734635I;
  #L3e9b34.  v3.`org.b.a.a.b.h` @type ^`int` := v0;
  #L3e9b38.  v0:= 1541459225I;
  #L3e9b3e.  v3.`org.b.a.a.b.i` @type ^`int` := v0;
  #L3e9b42.  v0:= 0I;
  #L3e9b44.  v3.`org.b.a.a.b.k` @type ^`int` := v0;
  #L3e9b48.  v1:= 0I;
  #L3e9b4a.  v2:= v3.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9b4e.  v2:= length @variable v2;
  #L3e9b50.  if v1 == v2 then goto L3e9b62;
  #L3e9b54.  v2:= v3.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9b58.  v2[v1]:= v0;
  #L3e9b5c.  v1:= v1 + 1;
  #L3e9b60.  goto L3e9b4a;
  #L3e9b62.  return @kind void;
}
procedure `void` `f`(`org.b.a.a.b` v14 @kind this) @signature `Lorg/b/a/a/b;.f:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L3e9b74.  v0:= 16I;
  #L3e9b78.  v1:= 16I;
  #L3e9b7c.  v2:= 63I;
  #L3e9b80.  if v1 > v2 then goto L3e9bd8;
  #L3e9b84.  v2:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9b88.  v3:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9b8c.  v4:= v1 + -2;
  #L3e9b90.  v3:= v3[v4];
  #L3e9b94.  call temp:= `d`(v14, v3) @signature `Lorg/b/a/a/b;.d:(I)I` @kind direct;
  #L3e9b9a.  v3:= temp;
  #L3e9b9c.  v4:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9ba0.  v5:= v1 + -7;
  #L3e9ba4.  v4:= v4[v5];
  #L3e9ba8.  v3:= v3 + v4 @kind int;
  #L3e9baa.  v4:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9bae.  v5:= v1 + -15;
  #L3e9bb2.  v4:= v4[v5];
  #L3e9bb6.  call temp:= `c`(v14, v4) @signature `Lorg/b/a/a/b;.c:(I)I` @kind direct;
  #L3e9bbc.  v4:= temp;
  #L3e9bbe.  v3:= v3 + v4 @kind int;
  #L3e9bc0.  v4:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9bc4.  v5:= v1 + -16;
  #L3e9bc8.  v4:= v4[v5];
  #L3e9bcc.  v3:= v3 + v4 @kind int;
  #L3e9bce.  v2[v1]:= v3;
  #L3e9bd2.  v1:= v1 + 1;
  #L3e9bd6.  goto L3e9b7c;
  #L3e9bd8.  v1:= v14.`org.b.a.a.b.b` @type ^`int`;
  #L3e9bdc.  v2:= v14.`org.b.a.a.b.c` @type ^`int`;
  #L3e9be0.  v3:= v14.`org.b.a.a.b.d` @type ^`int`;
  #L3e9be4.  v4:= v14.`org.b.a.a.b.e` @type ^`int`;
  #L3e9be8.  v5:= v14.`org.b.a.a.b.f` @type ^`int`;
  #L3e9bec.  v6:= v14.`org.b.a.a.b.g` @type ^`int`;
  #L3e9bf0.  v7:= v14.`org.b.a.a.b.h` @type ^`int`;
  #L3e9bf4.  v8:= v14.`org.b.a.a.b.i` @type ^`int`;
  #L3e9bf8.  v9:= 0I;
  #L3e9bfa.  v10:= v2;
  #L3e9bfc.  v11:= v3;
  #L3e9bfe.  v2:= 0I;
  #L3e9c00.  v3:= v1;
  #L3e9c02.  v1:= 0I;
  #L3e9c04.  v12:= 8I;
  #L3e9c08.  if v1 >= v12 then goto L3e9e24;
  #L3e9c0c.  call temp:= `b`(v14, v5) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9c12.  v12:= temp;
  #L3e9c14.  call temp:= `a`(v14, v5, v6, v7) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9c1a.  v13:= temp;
  #L3e9c1c.  v12:= v12 + v13 @kind int;
  #L3e9c1e.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9c22.  v13:= v13[v2];
  #L3e9c26.  v12:= v12 + v13 @kind int;
  #L3e9c28.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9c2c.  v13:= v13[v2];
  #L3e9c30.  v12:= v12 + v13 @kind int;
  #L3e9c32.  v8:= v8 + v12 @kind int;
  #L3e9c34.  v4:= v4 + v8 @kind int;
  #L3e9c36.  call temp:= `a`(v14, v3) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9c3c.  v12:= temp;
  #L3e9c3e.  call temp:= `b`(v14, v3, v10, v11) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9c44.  v13:= temp;
  #L3e9c46.  v12:= v12 + v13 @kind int;
  #L3e9c48.  v8:= v8 + v12 @kind int;
  #L3e9c4a.  v2:= v2 + 1;
  #L3e9c4e.  call temp:= `b`(v14, v4) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9c54.  v12:= temp;
  #L3e9c56.  call temp:= `a`(v14, v4, v5, v6) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9c5c.  v13:= temp;
  #L3e9c5e.  v12:= v12 + v13 @kind int;
  #L3e9c60.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9c64.  v13:= v13[v2];
  #L3e9c68.  v12:= v12 + v13 @kind int;
  #L3e9c6a.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9c6e.  v13:= v13[v2];
  #L3e9c72.  v12:= v12 + v13 @kind int;
  #L3e9c74.  v7:= v7 + v12 @kind int;
  #L3e9c76.  v11:= v11 + v7 @kind int;
  #L3e9c78.  call temp:= `a`(v14, v8) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9c7e.  v12:= temp;
  #L3e9c80.  call temp:= `b`(v14, v8, v3, v10) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9c86.  v13:= temp;
  #L3e9c88.  v12:= v12 + v13 @kind int;
  #L3e9c8a.  v7:= v7 + v12 @kind int;
  #L3e9c8c.  v2:= v2 + 1;
  #L3e9c90.  call temp:= `b`(v14, v11) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9c96.  v12:= temp;
  #L3e9c98.  call temp:= `a`(v14, v11, v4, v5) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9c9e.  v13:= temp;
  #L3e9ca0.  v12:= v12 + v13 @kind int;
  #L3e9ca2.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9ca6.  v13:= v13[v2];
  #L3e9caa.  v12:= v12 + v13 @kind int;
  #L3e9cac.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9cb0.  v13:= v13[v2];
  #L3e9cb4.  v12:= v12 + v13 @kind int;
  #L3e9cb6.  v6:= v6 + v12 @kind int;
  #L3e9cb8.  v10:= v10 + v6 @kind int;
  #L3e9cba.  call temp:= `a`(v14, v7) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9cc0.  v12:= temp;
  #L3e9cc2.  call temp:= `b`(v14, v7, v8, v3) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9cc8.  v13:= temp;
  #L3e9cca.  v12:= v12 + v13 @kind int;
  #L3e9ccc.  v6:= v6 + v12 @kind int;
  #L3e9cce.  v2:= v2 + 1;
  #L3e9cd2.  call temp:= `b`(v14, v10) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9cd8.  v12:= temp;
  #L3e9cda.  call temp:= `a`(v14, v10, v11, v4) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9ce0.  v13:= temp;
  #L3e9ce2.  v12:= v12 + v13 @kind int;
  #L3e9ce4.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9ce8.  v13:= v13[v2];
  #L3e9cec.  v12:= v12 + v13 @kind int;
  #L3e9cee.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9cf2.  v13:= v13[v2];
  #L3e9cf6.  v12:= v12 + v13 @kind int;
  #L3e9cf8.  v5:= v5 + v12 @kind int;
  #L3e9cfa.  v3:= v3 + v5 @kind int;
  #L3e9cfc.  call temp:= `a`(v14, v6) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9d02.  v12:= temp;
  #L3e9d04.  call temp:= `b`(v14, v6, v7, v8) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9d0a.  v13:= temp;
  #L3e9d0c.  v12:= v12 + v13 @kind int;
  #L3e9d0e.  v5:= v5 + v12 @kind int;
  #L3e9d10.  v2:= v2 + 1;
  #L3e9d14.  call temp:= `b`(v14, v3) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9d1a.  v12:= temp;
  #L3e9d1c.  call temp:= `a`(v14, v3, v10, v11) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9d22.  v13:= temp;
  #L3e9d24.  v12:= v12 + v13 @kind int;
  #L3e9d26.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9d2a.  v13:= v13[v2];
  #L3e9d2e.  v12:= v12 + v13 @kind int;
  #L3e9d30.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9d34.  v13:= v13[v2];
  #L3e9d38.  v12:= v12 + v13 @kind int;
  #L3e9d3a.  v4:= v4 + v12 @kind int;
  #L3e9d3c.  v8:= v8 + v4 @kind int;
  #L3e9d3e.  call temp:= `a`(v14, v5) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9d44.  v12:= temp;
  #L3e9d46.  call temp:= `b`(v14, v5, v6, v7) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9d4c.  v13:= temp;
  #L3e9d4e.  v12:= v12 + v13 @kind int;
  #L3e9d50.  v4:= v4 + v12 @kind int;
  #L3e9d52.  v2:= v2 + 1;
  #L3e9d56.  call temp:= `b`(v14, v8) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9d5c.  v12:= temp;
  #L3e9d5e.  call temp:= `a`(v14, v8, v3, v10) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9d64.  v13:= temp;
  #L3e9d66.  v12:= v12 + v13 @kind int;
  #L3e9d68.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9d6c.  v13:= v13[v2];
  #L3e9d70.  v12:= v12 + v13 @kind int;
  #L3e9d72.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9d76.  v13:= v13[v2];
  #L3e9d7a.  v12:= v12 + v13 @kind int;
  #L3e9d7c.  v11:= v11 + v12 @kind int;
  #L3e9d7e.  v7:= v7 + v11 @kind int;
  #L3e9d80.  call temp:= `a`(v14, v4) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9d86.  v12:= temp;
  #L3e9d88.  call temp:= `b`(v14, v4, v5, v6) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9d8e.  v13:= temp;
  #L3e9d90.  v12:= v12 + v13 @kind int;
  #L3e9d92.  v11:= v11 + v12 @kind int;
  #L3e9d94.  v2:= v2 + 1;
  #L3e9d98.  call temp:= `b`(v14, v7) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9d9e.  v12:= temp;
  #L3e9da0.  call temp:= `a`(v14, v7, v8, v3) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9da6.  v13:= temp;
  #L3e9da8.  v12:= v12 + v13 @kind int;
  #L3e9daa.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9dae.  v13:= v13[v2];
  #L3e9db2.  v12:= v12 + v13 @kind int;
  #L3e9db4.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9db8.  v13:= v13[v2];
  #L3e9dbc.  v12:= v12 + v13 @kind int;
  #L3e9dbe.  v10:= v10 + v12 @kind int;
  #L3e9dc0.  v6:= v6 + v10 @kind int;
  #L3e9dc2.  call temp:= `a`(v14, v11) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9dc8.  v12:= temp;
  #L3e9dca.  call temp:= `b`(v14, v11, v4, v5) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9dd0.  v13:= temp;
  #L3e9dd2.  v12:= v12 + v13 @kind int;
  #L3e9dd4.  v10:= v10 + v12 @kind int;
  #L3e9dd6.  v2:= v2 + 1;
  #L3e9dda.  call temp:= `b`(v14, v6) @signature `Lorg/b/a/a/b;.b:(I)I` @kind direct;
  #L3e9de0.  v12:= temp;
  #L3e9de2.  call temp:= `a`(v14, v6, v7, v8) @signature `Lorg/b/a/a/b;.a:(III)I` @kind direct;
  #L3e9de8.  v13:= temp;
  #L3e9dea.  v12:= v12 + v13 @kind int;
  #L3e9dec.  v13:= `@@org.b.a.a.b.a` @type ^`int`[] @kind object;
  #L3e9df0.  v13:= v13[v2];
  #L3e9df4.  v12:= v12 + v13 @kind int;
  #L3e9df6.  v13:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9dfa.  v13:= v13[v2];
  #L3e9dfe.  v12:= v12 + v13 @kind int;
  #L3e9e00.  v3:= v3 + v12 @kind int;
  #L3e9e02.  v5:= v5 + v3 @kind int;
  #L3e9e04.  call temp:= `a`(v14, v10) @signature `Lorg/b/a/a/b;.a:(I)I` @kind direct;
  #L3e9e0a.  v12:= temp;
  #L3e9e0c.  call temp:= `b`(v14, v10, v11, v4) @signature `Lorg/b/a/a/b;.b:(III)I` @kind direct;
  #L3e9e12.  v13:= temp;
  #L3e9e14.  v12:= v12 + v13 @kind int;
  #L3e9e16.  v3:= v3 + v12 @kind int;
  #L3e9e18.  v2:= v2 + 1;
  #L3e9e1c.  v1:= v1 + 1;
  #L3e9e20.  goto L3e9c04;
  #L3e9e24.  v1:= v14.`org.b.a.a.b.b` @type ^`int`;
  #L3e9e28.  v1:= v1 + v3 @kind int;
  #L3e9e2a.  v14.`org.b.a.a.b.b` @type ^`int` := v1;
  #L3e9e2e.  v1:= v14.`org.b.a.a.b.c` @type ^`int`;
  #L3e9e32.  v1:= v1 + v10 @kind int;
  #L3e9e34.  v14.`org.b.a.a.b.c` @type ^`int` := v1;
  #L3e9e38.  v1:= v14.`org.b.a.a.b.d` @type ^`int`;
  #L3e9e3c.  v1:= v1 + v11 @kind int;
  #L3e9e3e.  v14.`org.b.a.a.b.d` @type ^`int` := v1;
  #L3e9e42.  v1:= v14.`org.b.a.a.b.e` @type ^`int`;
  #L3e9e46.  v1:= v1 + v4 @kind int;
  #L3e9e48.  v14.`org.b.a.a.b.e` @type ^`int` := v1;
  #L3e9e4c.  v1:= v14.`org.b.a.a.b.f` @type ^`int`;
  #L3e9e50.  v1:= v1 + v5 @kind int;
  #L3e9e52.  v14.`org.b.a.a.b.f` @type ^`int` := v1;
  #L3e9e56.  v1:= v14.`org.b.a.a.b.g` @type ^`int`;
  #L3e9e5a.  v1:= v1 + v6 @kind int;
  #L3e9e5c.  v14.`org.b.a.a.b.g` @type ^`int` := v1;
  #L3e9e60.  v1:= v14.`org.b.a.a.b.h` @type ^`int`;
  #L3e9e64.  v1:= v1 + v7 @kind int;
  #L3e9e66.  v14.`org.b.a.a.b.h` @type ^`int` := v1;
  #L3e9e6a.  v1:= v14.`org.b.a.a.b.i` @type ^`int`;
  #L3e9e6e.  v1:= v1 + v8 @kind int;
  #L3e9e70.  v14.`org.b.a.a.b.i` @type ^`int` := v1;
  #L3e9e74.  v14.`org.b.a.a.b.k` @type ^`int` := v9;
  #L3e9e78.  v1:= 0I;
  #L3e9e7a.  if v1 >= v0 then goto L3e9e8c;
  #L3e9e7e.  v2:= v14.`org.b.a.a.b.j` @type ^`int`[] @kind object;
  #L3e9e82.  v2[v1]:= v9;
  #L3e9e86.  v1:= v1 + 1;
  #L3e9e8a.  goto L3e9e7a;
  #L3e9e8c.  return @kind void;
}
procedure `org.b.b.c` `g`(`org.b.a.a.b` v1 @kind this) @signature `Lorg/b/a/a/b;.g:()Lorg/b/b/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e97fc.  v0:= new `org.b.a.a.b`;
  #L3e9800.  call `<init>`(v0, v1) @signature `Lorg/b/a/a/b;.<init>:(Lorg/b/a/a/b;)V` @kind direct;
  #L3e9806.  return v0 @kind object;
}
