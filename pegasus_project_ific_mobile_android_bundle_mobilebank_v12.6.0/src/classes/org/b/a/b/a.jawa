record `org.b.a.b.a` @kind class @AccessFlag PUBLIC extends `org.b.a.f` @kind interface {
  `org.b.a.d` `org.b.a.b.a.a` @AccessFlag PRIVATE;
  `int` `org.b.a.b.a.b` @AccessFlag PRIVATE;
  `int` `org.b.a.b.a.c` @AccessFlag PRIVATE;
  `org.b.b.c` `org.b.a.b.a.d` @AccessFlag PRIVATE;
  `org.b.b.c` `org.b.a.b.a.e` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.b.a.f` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.b.a.g` @AccessFlag PRIVATE;
}
global `java.util.Hashtable` `@@org.b.a.b.a.h` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/b/a/b/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ea048.  v0:= new `java.util.Hashtable`;
  #L3ea04c.  call `<init>`(v0) @signature `Ljava/util/Hashtable;.<init>:()V` @kind direct;
  #L3ea052.  `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` := v0 @kind object;
  #L3ea056.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea05a.  v1:= "GOST3411" @kind object;
  #L3ea05e.  v2:= 32I;
  #L3ea062.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea068.  v2:= temp @kind object;
  #L3ea06a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea070.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea074.  v1:= "MD2" @kind object;
  #L3ea078.  v2:= 16I;
  #L3ea07c.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea082.  v2:= temp @kind object;
  #L3ea084.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea08a.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea08e.  v1:= "MD4" @kind object;
  #L3ea092.  v2:= 64I;
  #L3ea096.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea09c.  v3:= temp @kind object;
  #L3ea09e.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0a4.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea0a8.  v1:= "MD5" @kind object;
  #L3ea0ac.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea0b2.  v3:= temp @kind object;
  #L3ea0b4.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0ba.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea0be.  v1:= "RIPEMD128" @kind object;
  #L3ea0c2.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea0c8.  v3:= temp @kind object;
  #L3ea0ca.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0d0.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea0d4.  v1:= "RIPEMD160" @kind object;
  #L3ea0d8.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea0de.  v3:= temp @kind object;
  #L3ea0e0.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0e6.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea0ea.  v1:= "SHA-1" @kind object;
  #L3ea0ee.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea0f4.  v3:= temp @kind object;
  #L3ea0f6.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea0fc.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea100.  v1:= "SHA-224" @kind object;
  #L3ea104.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea10a.  v3:= temp @kind object;
  #L3ea10c.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea112.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea116.  v1:= "SHA-256" @kind object;
  #L3ea11a.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea120.  v3:= temp @kind object;
  #L3ea122.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea128.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea12c.  v1:= "SHA-384" @kind object;
  #L3ea130.  v3:= 128I;
  #L3ea134.  call temp:= `a`(v3) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea13a.  v4:= temp @kind object;
  #L3ea13c.  call temp:= `put`(v0, v1, v4) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea142.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea146.  v1:= "SHA-512" @kind object;
  #L3ea14a.  call temp:= `a`(v3) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea150.  v3:= temp @kind object;
  #L3ea152.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea158.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea15c.  v1:= "Tiger" @kind object;
  #L3ea160.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea166.  v3:= temp @kind object;
  #L3ea168.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea16e.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3ea172.  v1:= "Whirlpool" @kind object;
  #L3ea176.  call temp:= `a`(v2) @signature `Lorg/b/b/b;.a:(I)Ljava/lang/Integer;` @kind static;
  #L3ea17c.  v2:= temp @kind object;
  #L3ea17e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Hashtable;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3ea184.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.b.a` v1 @kind this, `org.b.a.d` v2 @kind object) @signature `Lorg/b/a/b/a;.<init>:(Lorg/b/a/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ea198.  call temp:= `a`(v2) @signature `Lorg/b/a/b/a;.a:(Lorg/b/a/d;)I` @kind static;
  #L3ea19e.  v0:= temp;
  #L3ea1a0.  call `<init>`(v1, v2, v0) @signature `Lorg/b/a/b/a;.<init>:(Lorg/b/a/d;I)V` @kind direct;
  #L3ea1a6.  return @kind void;
}
procedure `void` `<init>`(`org.b.a.b.a` v0 @kind this, `org.b.a.d` v1 @kind object, `int` v2 ) @signature `Lorg/b/a/b/a;.<init>:(Lorg/b/a/d;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ea1b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea1be.  v0.`org.b.a.b.a.a` @type ^`org.b.a.d` := v1 @kind object;
  #L3ea1c2.  call temp:= `b`(v1) @signature `Lorg/b/a/d;.b:()I` @kind interface;
  #L3ea1c8.  v1:= temp;
  #L3ea1ca.  v0.`org.b.a.b.a.b` @type ^`int` := v1;
  #L3ea1ce.  v0.`org.b.a.b.a.c` @type ^`int` := v2;
  #L3ea1d2.  v1:= v0.`org.b.a.b.a.c` @type ^`int`;
  #L3ea1d6.  v1:= new `byte`[v1];
  #L3ea1da.  v0.`org.b.a.b.a.f` @type ^`byte`[] := v1 @kind object;
  #L3ea1de.  v1:= v0.`org.b.a.b.a.c` @type ^`int`;
  #L3ea1e2.  v2:= v0.`org.b.a.b.a.b` @type ^`int`;
  #L3ea1e6.  v1:= v1 + v2 @kind int;
  #L3ea1e8.  v1:= new `byte`[v1];
  #L3ea1ec.  v0.`org.b.a.b.a.g` @type ^`byte`[] := v1 @kind object;
  #L3ea1f0.  return @kind void;
}
procedure `int` `a`(`org.b.a.d` v3 @kind object) @signature `Lorg/b/a/b/a;.a:(Lorg/b/a/d;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9f6c.  v0:= instanceof @variable v3 @type ^`org.b.a.e` @kind boolean;
  #L3e9f70.  if v0 == 0 then goto L3e9f82;
  #L3e9f74.  v3:= (`org.b.a.e`) v3 @kind object;
  #L3e9f78.  call temp:= `d`(v3) @signature `Lorg/b/a/e;.d:()I` @kind interface;
  #L3e9f7e.  v3:= temp;
  #L3e9f80.  return v3;
  #L3e9f82.  v0:= `@@org.b.a.b.a.h` @type ^`java.util.Hashtable` @kind object;
  #L3e9f86.  call temp:= `a`(v3) @signature `Lorg/b/a/d;.a:()Ljava/lang/String;` @kind interface;
  #L3e9f8c.  v1:= temp @kind object;
  #L3e9f8e.  call temp:= `get`(v0, v1) @signature `Ljava/util/Hashtable;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3e9f94.  v0:= temp @kind object;
  #L3e9f96.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3e9f9a.  if v0 != 0 then goto L3e9fd4;
  #L3e9f9e.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e9fa2.  v1:= new `java.lang.StringBuilder`;
  #L3e9fa6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e9fac.  v2:= "unknown digest passed: " @kind object;
  #L3e9fb0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e9fb6.  call temp:= `a`(v3) @signature `Lorg/b/a/d;.a:()Ljava/lang/String;` @kind interface;
  #L3e9fbc.  v3:= temp @kind object;
  #L3e9fbe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e9fc4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e9fca.  v3:= temp @kind object;
  #L3e9fcc.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9fd2.  throw v0;
  #L3e9fd4.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3e9fda.  v3:= temp;
  #L3e9fdc.  return v3;
}
procedure `void` `a`(`byte`[] v2 @kind object, `int` v3 , `byte` v4 ) @signature `Lorg/b/a/b/a;.a:([BIB)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3ea220.  v0:= 0I;
  #L3ea222.  if v0 >= v3 then goto L3ea238;
  #L3ea226.  v1:= v2[v0] @kind byte;
  #L3ea22a.  v1:= v1 ^~ v4 @kind int;
  #L3ea22c.  v1:= (`byte`) v1 @kind i2b;
  #L3ea22e.  v2[v0]:= v1 @kind byte;
  #L3ea232.  v0:= v0 + 1;
  #L3ea236.  goto L3ea222;
  #L3ea238.  return @kind void;
}
procedure `int` `a`(`org.b.a.b.a` v5 @kind this, `byte`[] v6 @kind object, `int` v7 ) @signature `Lorg/b/a/b/a;.a:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e9ea0.  v0:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9ea4.  v1:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9ea8.  v2:= v5.`org.b.a.b.a.c` @type ^`int`;
  #L3e9eac.  call temp:= `a`(v0, v1, v2) @signature `Lorg/b/a/d;.a:([BI)I` @kind interface;
  #L3e9eb2.  v0:= v5.`org.b.a.b.a.e` @type ^`org.b.b.c` @kind object;
  #L3e9eb6.  v1:= 0I;
  #L3e9eb8.  if v0 == 0 then goto L3e9eee;
  #L3e9ebc.  v0:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9ec0.  v0:= (`org.b.b.c`) v0 @kind object;
  #L3e9ec4.  v2:= v5.`org.b.a.b.a.e` @type ^`org.b.b.c` @kind object;
  #L3e9ec8.  call `a`(v0, v2) @signature `Lorg/b/b/c;.a:(Lorg/b/b/c;)V` @kind interface;
  #L3e9ece.  v0:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9ed2.  v2:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9ed6.  v3:= v5.`org.b.a.b.a.c` @type ^`int`;
  #L3e9eda.  v4:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9ede.  call temp:= `b`(v4) @signature `Lorg/b/a/d;.b:()I` @kind interface;
  #L3e9ee4.  v4:= temp;
  #L3e9ee6.  call `a`(v0, v2, v3, v4) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3e9eec.  goto L3e9f02;
  #L3e9eee.  v0:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9ef2.  v2:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9ef6.  v3:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9efa.  v3:= length @variable v3;
  #L3e9efc.  call `a`(v0, v2, v1, v3) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3e9f02.  v0:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9f06.  call temp:= `a`(v0, v6, v7) @signature `Lorg/b/a/d;.a:([BI)I` @kind interface;
  #L3e9f0c.  v6:= temp;
  #L3e9f0e.  v7:= v5.`org.b.a.b.a.c` @type ^`int`;
  #L3e9f12.  v0:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9f16.  v0:= length @variable v0;
  #L3e9f18.  if v7 >= v0 then goto L3e9f2a;
  #L3e9f1c.  v0:= v5.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3e9f20.  v0[v7]:= v1 @kind byte;
  #L3e9f24.  v7:= v7 + 1;
  #L3e9f28.  goto L3e9f12;
  #L3e9f2a.  v7:= v5.`org.b.a.b.a.d` @type ^`org.b.b.c` @kind object;
  #L3e9f2e.  if v7 == 0 then goto L3e9f46;
  #L3e9f32.  v7:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9f36.  v7:= (`org.b.b.c`) v7 @kind object;
  #L3e9f3a.  v0:= v5.`org.b.a.b.a.d` @type ^`org.b.b.c` @kind object;
  #L3e9f3e.  call `a`(v7, v0) @signature `Lorg/b/b/c;.a:(Lorg/b/b/c;)V` @kind interface;
  #L3e9f44.  return v6;
  #L3e9f46.  v7:= v5.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3e9f4a.  v0:= v5.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3e9f4e.  v2:= v5.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3e9f52.  v2:= length @variable v2;
  #L3e9f54.  call `a`(v7, v0, v1, v2) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3e9f5a.  return v6;
}
procedure `java.lang.String` `a`(`org.b.a.b.a` v2 @kind this) @signature `Lorg/b/a/b/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea008.  v0:= new `java.lang.StringBuilder`;
  #L3ea00c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ea012.  v1:= v2.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea016.  call temp:= `a`(v1) @signature `Lorg/b/a/d;.a:()Ljava/lang/String;` @kind interface;
  #L3ea01c.  v1:= temp @kind object;
  #L3ea01e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ea024.  v1:= "/HMAC" @kind object;
  #L3ea028.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ea02e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ea034.  v0:= temp @kind object;
  #L3ea036.  return v0 @kind object;
}
procedure `void` `a`(`org.b.a.b.a` v1 @kind this, `byte` v2 ) @signature `Lorg/b/a/b/a;.a:(B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea204.  v0:= v1.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea208.  call `a`(v0, v2) @signature `Lorg/b/a/d;.a:(B)V` @kind interface;
  #L3ea20e.  return @kind void;
}
procedure `void` `a`(`org.b.a.b.a` v3 @kind this, `org.b.a.b` v4 @kind object) @signature `Lorg/b/a/b/a;.a:(Lorg/b/a/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ea268.  v0:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea26c.  call `c`(v0) @signature `Lorg/b/a/d;.c:()V` @kind interface;
  #L3ea272.  v4:= (`org.b.a.c.a`) v4 @kind object;
  #L3ea276.  call temp:= `a`(v4) @signature `Lorg/b/a/c/a;.a:()[B` @kind virtual;
  #L3ea27c.  v4:= temp @kind object;
  #L3ea27e.  v0:= length @variable v4;
  #L3ea280.  v1:= v3.`org.b.a.b.a.c` @type ^`int`;
  #L3ea284.  v2:= 0I;
  #L3ea286.  if v0 <= v1 then goto L3ea2a8;
  #L3ea28a.  v1:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea28e.  call `a`(v1, v4, v2, v0) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3ea294.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea298.  v0:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea29c.  call temp:= `a`(v4, v0, v2) @signature `Lorg/b/a/d;.a:([BI)I` @kind interface;
  #L3ea2a2.  v0:= v3.`org.b.a.b.a.b` @type ^`int`;
  #L3ea2a6.  goto L3ea2b2;
  #L3ea2a8.  v1:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea2ac.  call `arraycopy`(v4, v2, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea2b2.  v4:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea2b6.  v4:= length @variable v4;
  #L3ea2b8.  if v0 >= v4 then goto L3ea2ca;
  #L3ea2bc.  v4:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea2c0.  v4[v0]:= v2 @kind byte;
  #L3ea2c4.  v0:= v0 + 1;
  #L3ea2c8.  goto L3ea2b2;
  #L3ea2ca.  v4:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea2ce.  v0:= v3.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3ea2d2.  v1:= v3.`org.b.a.b.a.c` @type ^`int`;
  #L3ea2d6.  call `arraycopy`(v4, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea2dc.  v4:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea2e0.  v0:= v3.`org.b.a.b.a.c` @type ^`int`;
  #L3ea2e4.  v1:= 54I;
  #L3ea2e8.  call `a`(v4, v0, v1) @signature `Lorg/b/a/b/a;.a:([BIB)V` @kind static;
  #L3ea2ee.  v4:= v3.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3ea2f2.  v0:= v3.`org.b.a.b.a.c` @type ^`int`;
  #L3ea2f6.  v1:= 92I;
  #L3ea2fa.  call `a`(v4, v0, v1) @signature `Lorg/b/a/b/a;.a:([BIB)V` @kind static;
  #L3ea300.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea304.  v4:= instanceof @variable v4 @type ^`org.b.b.c` @kind boolean;
  #L3ea308.  if v4 == 0 then goto L3ea336;
  #L3ea30c.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea310.  v4:= (`org.b.b.c`) v4 @kind object;
  #L3ea314.  call temp:= `g`(v4) @signature `Lorg/b/b/c;.g:()Lorg/b/b/c;` @kind interface;
  #L3ea31a.  v4:= temp @kind object;
  #L3ea31c.  v3.`org.b.a.b.a.e` @type ^`org.b.b.c` := v4 @kind object;
  #L3ea320.  v4:= v3.`org.b.a.b.a.e` @type ^`org.b.b.c` @kind object;
  #L3ea324.  v4:= (`org.b.a.d`) v4 @kind object;
  #L3ea328.  v0:= v3.`org.b.a.b.a.g` @type ^`byte`[] @kind object;
  #L3ea32c.  v1:= v3.`org.b.a.b.a.c` @type ^`int`;
  #L3ea330.  call `a`(v4, v0, v2, v1) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3ea336.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea33a.  v0:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea33e.  v1:= v3.`org.b.a.b.a.f` @type ^`byte`[] @kind object;
  #L3ea342.  v1:= length @variable v1;
  #L3ea344.  call `a`(v4, v0, v2, v1) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3ea34a.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea34e.  v4:= instanceof @variable v4 @type ^`org.b.b.c` @kind boolean;
  #L3ea352.  if v4 == 0 then goto L3ea36a;
  #L3ea356.  v4:= v3.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea35a.  v4:= (`org.b.b.c`) v4 @kind object;
  #L3ea35e.  call temp:= `g`(v4) @signature `Lorg/b/b/c;.g:()Lorg/b/b/c;` @kind interface;
  #L3ea364.  v4:= temp @kind object;
  #L3ea366.  v3.`org.b.a.b.a.d` @type ^`org.b.b.c` := v4 @kind object;
  #L3ea36a.  return @kind void;
}
procedure `void` `a`(`org.b.a.b.a` v1 @kind this, `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lorg/b/a/b/a;.a:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea24c.  v0:= v1.`org.b.a.b.a.a` @type ^`org.b.a.d` @kind object;
  #L3ea250.  call `a`(v0, v2, v3, v4) @signature `Lorg/b/a/d;.a:([BII)V` @kind interface;
  #L3ea256.  return @kind void;
}
procedure `int` `b`(`org.b.a.b.a` v1 @kind this) @signature `Lorg/b/a/b/a;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9ff0.  v0:= v1.`org.b.a.b.a.b` @type ^`int`;
  #L3e9ff4.  return v0;
}
