record `org.b.a.d.g$a` @kind class @AccessFlag  extends `org.b.a.d.b` @kind interface {
  `org.b.a.f` `org.b.a.d.g$a.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.g$a.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.g$a.c` @AccessFlag PRIVATE_FINAL;
  `int` `org.b.a.d.g$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.b.a.d.g$a` v0 @kind this, `org.b.a.f` v1 @kind object, `byte`[] v2 @kind object, `byte`[] v3 @kind object, `int` v4 ) @signature `Lorg/b/a/d/g$a;.<init>:(Lorg/b/a/f;[B[BI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eaaf4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eaafa.  v0.`org.b.a.d.g$a.a` @type ^`org.b.a.f` := v1 @kind object;
  #L3eaafe.  v0.`org.b.a.d.g$a.b` @type ^`byte`[] := v2 @kind object;
  #L3eab02.  v0.`org.b.a.d.g$a.c` @type ^`byte`[] := v3 @kind object;
  #L3eab06.  v0.`org.b.a.d.g$a.d` @type ^`int` := v4;
  #L3eab0a.  return @kind void;
}
procedure `org.b.a.d.a.b` `a`(`org.b.a.d.g$a` v7 @kind this, `org.b.a.d.c` v8 @kind object) @signature `Lorg/b/a/d/g$a;.a:(Lorg/b/a/d/c;)Lorg/b/a/d/a/b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3eaac4.  v6:= new `org.b.a.d.a.a`;
  #L3eaac8.  v1:= v7.`org.b.a.d.g$a.a` @type ^`org.b.a.f` @kind object;
  #L3eaacc.  v2:= v7.`org.b.a.d.g$a.d` @type ^`int`;
  #L3eaad0.  v4:= v7.`org.b.a.d.g$a.c` @type ^`byte`[] @kind object;
  #L3eaad4.  v5:= v7.`org.b.a.d.g$a.b` @type ^`byte`[] @kind object;
  #L3eaad8.  v0:= v6 @kind object;
  #L3eaada.  v3:= v8 @kind object;
  #L3eaadc.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lorg/b/a/d/a/a;.<init>:(Lorg/b/a/f;ILorg/b/a/d/c;[B[B)V` @kind direct;
  #L3eaae2.  return v6 @kind object;
}
