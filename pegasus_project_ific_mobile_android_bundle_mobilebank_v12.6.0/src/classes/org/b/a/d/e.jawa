record `org.b.a.d.e` @kind class @AccessFlag PUBLIC {
}
procedure `byte`[] `a`(`org.b.a.d.c` v6 @kind object, `int` v7 ) @signature `Lorg/b/a/d/e;.a:(Lorg/b/a/d/c;I)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ea91c.  v0:= new `byte`[v7];
  #L3ea920.  v7:= v7 * 8;
  #L3ea924.  call temp:= `b`(v6) @signature `Lorg/b/a/d/c;.b:()I` @kind interface;
  #L3ea92a.  v1:= temp;
  #L3ea92c.  v2:= 0I;
  #L3ea92e.  if v7 > v1 then goto L3ea944;
  #L3ea932.  call temp:= `a`(v6) @signature `Lorg/b/a/d/c;.a:()[B` @kind interface;
  #L3ea938.  v6:= temp @kind object;
  #L3ea93a.  v7:= length @variable v0;
  #L3ea93c.  call `arraycopy`(v6, v2, v0, v2, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea942.  return v0 @kind object;
  #L3ea944.  call temp:= `b`(v6) @signature `Lorg/b/a/d/c;.b:()I` @kind interface;
  #L3ea94a.  v7:= temp;
  #L3ea94c.  v7:= v7 / 8;
  #L3ea950.  v1:= 0I;
  #L3ea952.  v3:= length @variable v0;
  #L3ea954.  if v1 >= v3 then goto L3ea97e;
  #L3ea958.  call temp:= `a`(v6) @signature `Lorg/b/a/d/c;.a:()[B` @kind interface;
  #L3ea95e.  v3:= temp @kind object;
  #L3ea960.  v4:= length @variable v3;
  #L3ea962.  v5:= length @variable v0;
  #L3ea964.  v5:= v5 - v1 @kind int;
  #L3ea966.  if v4 > v5 then goto L3ea974;
  #L3ea96a.  v4:= length @variable v3;
  #L3ea96c.  call `arraycopy`(v3, v2, v0, v1, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea972.  goto L3ea97a;
  #L3ea974.  v4:= length @variable v0;
  #L3ea976.  v4:= v4 - v1 @kind int;
  #L3ea978.  goto L3ea96c;
  #L3ea97a.  v1:= v1 + v7 @kind int;
  #L3ea97c.  goto L3ea952;
  #L3ea97e.  return v0 @kind object;
}
