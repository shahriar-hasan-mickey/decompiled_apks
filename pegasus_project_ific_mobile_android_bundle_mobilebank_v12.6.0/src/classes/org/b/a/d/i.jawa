record `org.b.a.d.i` @kind class @AccessFlag PUBLIC extends `java.security.SecureRandom` @kind class {
  `boolean` `org.b.a.d.i.a` @AccessFlag PRIVATE_FINAL;
  `java.security.SecureRandom` `org.b.a.d.i.b` @AccessFlag PRIVATE_FINAL;
  `org.b.a.d.h` `org.b.a.d.i.c` @AccessFlag PRIVATE_FINAL;
}
procedure `byte`[] `generateSeed`(`org.b.a.d.i` v1 @kind this, `int` v2 ) @signature `Lorg/b/a/d/i;.generateSeed:(I)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eae48.  v0:= v1.`org.b.a.d.i.c` @type ^`org.b.a.d.h` @kind object;
  #L3eae4c.  call temp:= `b`(v0) @signature `Lorg/b/a/d/h;.b:()Lorg/b/a/d/c;` @kind virtual;
  #L3eae52.  v0:= temp @kind object;
  #L3eae54.  call temp:= `a`(v0, v2) @signature `Lorg/b/a/d/e;.a:(Lorg/b/a/d/c;I)[B` @kind static;
  #L3eae5a.  v2:= temp @kind object;
  #L3eae5c.  return v2 @kind object;
}
procedure `void` `nextBytes`(`org.b.a.d.i` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/b/a/d/i;.nextBytes:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eae70.  @monitorenter v2
  #L3eae72.  v0:= v2.`org.b.a.d.i.c` @type ^`org.b.a.d.h` @kind object;
  #L3eae76.  v1:= v2.`org.b.a.d.i.a` @type ^`boolean` @kind boolean;
  #L3eae7a.  call temp:= `a`(v0, v3, v1) @signature `Lorg/b/a/d/h;.a:([BZ)I` @kind virtual;
  #L3eae80.  v0:= temp;
  #L3eae82.  if v0 >= 0 then goto L3eae9e;
  #L3eae86.  v0:= v2.`org.b.a.d.i.c` @type ^`org.b.a.d.h` @kind object;
  #L3eae8a.  call `a`(v0) @signature `Lorg/b/a/d/h;.a:()V` @kind virtual;
  #L3eae90.  v0:= v2.`org.b.a.d.i.c` @type ^`org.b.a.d.h` @kind object;
  #L3eae94.  v1:= v2.`org.b.a.d.i.a` @type ^`boolean` @kind boolean;
  #L3eae98.  call temp:= `a`(v0, v3, v1) @signature `Lorg/b/a/d/h;.a:([BZ)I` @kind virtual;
  #L3eae9e.  @monitorexit v2
  #L3eaea0.  return @kind void;
  #L3eaea2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaea4.  @monitorexit v2
  #L3eaea6.  throw v3;
  catch `java.lang.Throwable` @[L3eae72..L3eaea6] goto L3eaea2;
}
procedure `void` `setSeed`(`org.b.a.d.i` v1 @kind this, `long` v2 ) @signature `Lorg/b/a/d/i;.setSeed:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaf00.  @monitorenter v1
  #L3eaf02.  v0:= v1.`org.b.a.d.i.b` @type ^`java.security.SecureRandom` @kind object;
  #L3eaf06.  if v0 == 0 then goto L3eaf14;
  #L3eaf0a.  v0:= v1.`org.b.a.d.i.b` @type ^`java.security.SecureRandom` @kind object;
  #L3eaf0e.  call `setSeed`(v0, v2) @signature `Ljava/security/SecureRandom;.setSeed:(J)V` @kind virtual;
  #L3eaf14.  @monitorexit v1
  #L3eaf16.  return @kind void;
  #L3eaf18.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaf1a.  @monitorexit v1
  #L3eaf1c.  throw v2;
  catch `java.lang.Throwable` @[L3eaf02..L3eaf1c] goto L3eaf18;
}
procedure `void` `setSeed`(`org.b.a.d.i` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/b/a/d/i;.setSeed:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eaec4.  @monitorenter v1
  #L3eaec6.  v0:= v1.`org.b.a.d.i.b` @type ^`java.security.SecureRandom` @kind object;
  #L3eaeca.  if v0 == 0 then goto L3eaed8;
  #L3eaece.  v0:= v1.`org.b.a.d.i.b` @type ^`java.security.SecureRandom` @kind object;
  #L3eaed2.  call `setSeed`(v0, v2) @signature `Ljava/security/SecureRandom;.setSeed:([B)V` @kind virtual;
  #L3eaed8.  @monitorexit v1
  #L3eaeda.  return @kind void;
  #L3eaedc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eaede.  @monitorexit v1
  #L3eaee0.  throw v2;
  catch `java.lang.Throwable` @[L3eaec6..L3eaee0] goto L3eaedc;
}
