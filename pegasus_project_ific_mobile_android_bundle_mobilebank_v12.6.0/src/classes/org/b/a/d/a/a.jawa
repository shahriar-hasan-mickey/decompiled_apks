record `org.b.a.d.a.a` @kind class @AccessFlag PUBLIC extends `org.b.a.d.a.b` @kind interface {
  `byte`[] `org.b.a.d.a.a.a` @AccessFlag PRIVATE;
  `byte`[] `org.b.a.d.a.a.b` @AccessFlag PRIVATE;
  `long` `org.b.a.d.a.a.c` @AccessFlag PRIVATE;
  `org.b.a.d.c` `org.b.a.d.a.a.d` @AccessFlag PRIVATE;
  `org.b.a.f` `org.b.a.d.a.a.e` @AccessFlag PRIVATE;
  `int` `org.b.a.d.a.a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`org.b.a.d.a.a` v1 @kind this, `org.b.a.f` v2 @kind object, `int` v3 , `org.b.a.d.c` v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/b/a/d/a/a;.<init>:(Lorg/b/a/f;ILorg/b/a/d/c;[B[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ea618.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea61e.  call temp:= `a`(v2) @signature `Lorg/b/a/d/a/c;.a:(Lorg/b/a/f;)I` @kind static;
  #L3ea624.  v0:= temp;
  #L3ea626.  if v3 <= v0 then goto L3ea63a;
  #L3ea62a.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ea62e.  v3:= "Requested security strength is not supported by the derivation function" @kind object;
  #L3ea632.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea638.  throw v2;
  #L3ea63a.  call temp:= `b`(v4) @signature `Lorg/b/a/d/c;.b:()I` @kind interface;
  #L3ea640.  v0:= temp;
  #L3ea642.  if v0 >= v3 then goto L3ea656;
  #L3ea646.  v2:= new `java.lang.IllegalArgumentException`;
  #L3ea64a.  v3:= "Not enough entropy for security strength required" @kind object;
  #L3ea64e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea654.  throw v2;
  #L3ea656.  v1.`org.b.a.d.a.a.f` @type ^`int` := v3;
  #L3ea65a.  v1.`org.b.a.d.a.a.d` @type ^`org.b.a.d.c` := v4 @kind object;
  #L3ea65e.  v1.`org.b.a.d.a.a.e` @type ^`org.b.a.f` := v2 @kind object;
  #L3ea662.  call temp:= `a`(v1) @signature `Lorg/b/a/d/a/a;.a:()[B` @kind direct;
  #L3ea668.  v3:= temp @kind object;
  #L3ea66a.  call temp:= `a`(v3, v6, v5) @signature `Lorg/b/b/a;.a:([B[B[B)[B` @kind static;
  #L3ea670.  v3:= temp @kind object;
  #L3ea672.  call temp:= `b`(v2) @signature `Lorg/b/a/f;.b:()I` @kind interface;
  #L3ea678.  v2:= temp;
  #L3ea67a.  v2:= new `byte`[v2];
  #L3ea67e.  v1.`org.b.a.d.a.a.a` @type ^`byte`[] := v2 @kind object;
  #L3ea682.  v2:= v1.`org.b.a.d.a.a.a` @type ^`byte`[] @kind object;
  #L3ea686.  v2:= length @variable v2;
  #L3ea688.  v2:= new `byte`[v2];
  #L3ea68c.  v1.`org.b.a.d.a.a.b` @type ^`byte`[] := v2 @kind object;
  #L3ea690.  v2:= v1.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea694.  v4:= 1I;
  #L3ea696.  call `a`(v2, v4) @signature `Lorg/b/b/a;.a:([BB)V` @kind static;
  #L3ea69c.  call `b`(v1, v3) @signature `Lorg/b/a/d/a/a;.b:([B)V` @kind direct;
  #L3ea6a2.  v2:= 1L;
  #L3ea6a6.  v1.`org.b.a.d.a.a.c` @type ^`long` := v2 @kind wide;
  #L3ea6aa.  return @kind void;
}
procedure `void` `a`(`org.b.a.d.a.a` v4 @kind this, `byte`[] v5 @kind object, `byte` v6 ) @signature `Lorg/b/a/d/a/a;.a:([BB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ea6ec.  v0:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea6f0.  v1:= new `org.b.a.c.a`;
  #L3ea6f4.  v2:= v4.`org.b.a.d.a.a.a` @type ^`byte`[] @kind object;
  #L3ea6f8.  call `<init>`(v1, v2) @signature `Lorg/b/a/c/a;.<init>:([B)V` @kind direct;
  #L3ea6fe.  call `a`(v0, v1) @signature `Lorg/b/a/f;.a:(Lorg/b/a/b;)V` @kind interface;
  #L3ea704.  v0:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea708.  v1:= v4.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea70c.  v2:= v4.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea710.  v2:= length @variable v2;
  #L3ea712.  v3:= 0I;
  #L3ea714.  call `a`(v0, v1, v3, v2) @signature `Lorg/b/a/f;.a:([BII)V` @kind interface;
  #L3ea71a.  v0:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea71e.  call `a`(v0, v6) @signature `Lorg/b/a/f;.a:(B)V` @kind interface;
  #L3ea724.  if v5 == 0 then goto L3ea734;
  #L3ea728.  v6:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea72c.  v0:= length @variable v5;
  #L3ea72e.  call `a`(v6, v5, v3, v0) @signature `Lorg/b/a/f;.a:([BII)V` @kind interface;
  #L3ea734.  v5:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea738.  v6:= v4.`org.b.a.d.a.a.a` @type ^`byte`[] @kind object;
  #L3ea73c.  call temp:= `a`(v5, v6, v3) @signature `Lorg/b/a/f;.a:([BI)I` @kind interface;
  #L3ea742.  v5:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea746.  v6:= new `org.b.a.c.a`;
  #L3ea74a.  v0:= v4.`org.b.a.d.a.a.a` @type ^`byte`[] @kind object;
  #L3ea74e.  call `<init>`(v6, v0) @signature `Lorg/b/a/c/a;.<init>:([B)V` @kind direct;
  #L3ea754.  call `a`(v5, v6) @signature `Lorg/b/a/f;.a:(Lorg/b/a/b;)V` @kind interface;
  #L3ea75a.  v5:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea75e.  v6:= v4.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea762.  v0:= v4.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea766.  v0:= length @variable v0;
  #L3ea768.  call `a`(v5, v6, v3, v0) @signature `Lorg/b/a/f;.a:([BII)V` @kind interface;
  #L3ea76e.  v5:= v4.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea772.  v6:= v4.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea776.  call temp:= `a`(v5, v6, v3) @signature `Lorg/b/a/f;.a:([BI)I` @kind interface;
  #L3ea77c.  return @kind void;
}
procedure `byte`[] `a`(`org.b.a.d.a.a` v3 @kind this) @signature `Lorg/b/a/d/a/a;.a:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ea494.  v0:= v3.`org.b.a.d.a.a.d` @type ^`org.b.a.d.c` @kind object;
  #L3ea498.  call temp:= `a`(v0) @signature `Lorg/b/a/d/c;.a:()[B` @kind interface;
  #L3ea49e.  v0:= temp @kind object;
  #L3ea4a0.  v1:= length @variable v0;
  #L3ea4a2.  v2:= v3.`org.b.a.d.a.a.f` @type ^`int`;
  #L3ea4a6.  v2:= v2 + 7;
  #L3ea4aa.  v2:= v2 / 8;
  #L3ea4ae.  if v1 >= v2 then goto L3ea4c2;
  #L3ea4b2.  v0:= new `java.lang.IllegalStateException`;
  #L3ea4b6.  v1:= "Insufficient entropy provided by entropy source" @kind object;
  #L3ea4ba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea4c0.  throw v0;
  #L3ea4c2.  return v0 @kind object;
}
procedure `void` `b`(`org.b.a.d.a.a` v1 @kind this, `byte`[] v2 @kind object) @signature `Lorg/b/a/d/a/a;.b:([B)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ea790.  v0:= 0I;
  #L3ea792.  call `a`(v1, v2, v0) @signature `Lorg/b/a/d/a/a;.a:([BB)V` @kind direct;
  #L3ea798.  if v2 == 0 then goto L3ea7a4;
  #L3ea79c.  v0:= 1I;
  #L3ea79e.  call `a`(v1, v2, v0) @signature `Lorg/b/a/d/a/a;.a:([BB)V` @kind direct;
  #L3ea7a4.  return @kind void;
}
procedure `int` `a`(`org.b.a.d.a.a` v9 @kind this, `byte`[] v10 @kind object, `byte`[] v11 @kind object, `boolean` v12 ) @signature `Lorg/b/a/d/a/a;.a:([B[BZ)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3ea4d4.  v0:= length @variable v10;
  #L3ea4d6.  v0:= v0 * 8;
  #L3ea4da.  v1:= 262144I;
  #L3ea4de.  if v0 <= v1 then goto L3ea4f2;
  #L3ea4e2.  v10:= new `java.lang.IllegalArgumentException`;
  #L3ea4e6.  v11:= "Number of bits per request limited to 262144" @kind object;
  #L3ea4ea.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ea4f0.  throw v10;
  #L3ea4f2.  v1:= v9.`org.b.a.d.a.a.c` @type ^`long` @kind wide;
  #L3ea4f6.  v3:= 140737488355328L;
  #L3ea500.  v5:= lcmp(v1, v3);
  #L3ea504.  if v5 <= 0 then goto L3ea50c;
  #L3ea508.  v10:= -1I;
  #L3ea50a.  return v10;
  #L3ea50c.  if v12 == 0 then goto L3ea518;
  #L3ea510.  call `a`(v9, v11) @signature `Lorg/b/a/d/a/a;.a:([B)V` @kind virtual;
  #L3ea516.  v11:= 0I;
  #L3ea518.  if v11 == 0 then goto L3ea522;
  #L3ea51c.  call `b`(v9, v11) @signature `Lorg/b/a/d/a/a;.b:([B)V` @kind direct;
  #L3ea522.  v12:= length @variable v10;
  #L3ea524.  v12:= new `byte`[v12];
  #L3ea528.  v1:= length @variable v10;
  #L3ea52a.  v2:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea52e.  v2:= length @variable v2;
  #L3ea530.  v1:= v1 / v2 @kind int;
  #L3ea532.  v2:= v9.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea536.  v3:= new `org.b.a.c.a`;
  #L3ea53a.  v4:= v9.`org.b.a.d.a.a.a` @type ^`byte`[] @kind object;
  #L3ea53e.  call `<init>`(v3, v4) @signature `Lorg/b/a/c/a;.<init>:([B)V` @kind direct;
  #L3ea544.  call `a`(v2, v3) @signature `Lorg/b/a/f;.a:(Lorg/b/a/b;)V` @kind interface;
  #L3ea54a.  v2:= 0I;
  #L3ea54c.  v3:= 0I;
  #L3ea54e.  if v3 >= v1 then goto L3ea594;
  #L3ea552.  v4:= v9.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea556.  v5:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea55a.  v6:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea55e.  v6:= length @variable v6;
  #L3ea560.  call `a`(v4, v5, v2, v6) @signature `Lorg/b/a/f;.a:([BII)V` @kind interface;
  #L3ea566.  v4:= v9.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea56a.  v5:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea56e.  call temp:= `a`(v4, v5, v2) @signature `Lorg/b/a/f;.a:([BI)I` @kind interface;
  #L3ea574.  v4:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea578.  v5:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea57c.  v5:= length @variable v5;
  #L3ea57e.  v5:= v5 * v3 @kind int;
  #L3ea582.  v6:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea586.  v6:= length @variable v6;
  #L3ea588.  call `arraycopy`(v4, v2, v12, v5, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea58e.  v3:= v3 + 1;
  #L3ea592.  goto L3ea54e;
  #L3ea594.  v3:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea598.  v3:= length @variable v3;
  #L3ea59a.  v3:= v3 * v1 @kind int;
  #L3ea59e.  v4:= length @variable v12;
  #L3ea5a0.  if v3 >= v4 then goto L3ea5e8;
  #L3ea5a4.  v3:= v9.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea5a8.  v4:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5ac.  v5:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5b0.  v5:= length @variable v5;
  #L3ea5b2.  call `a`(v3, v4, v2, v5) @signature `Lorg/b/a/f;.a:([BII)V` @kind interface;
  #L3ea5b8.  v3:= v9.`org.b.a.d.a.a.e` @type ^`org.b.a.f` @kind object;
  #L3ea5bc.  v4:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5c0.  call temp:= `a`(v3, v4, v2) @signature `Lorg/b/a/f;.a:([BI)I` @kind interface;
  #L3ea5c6.  v3:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5ca.  v4:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5ce.  v4:= length @variable v4;
  #L3ea5d0.  v4:= v4 * v1 @kind int;
  #L3ea5d4.  v5:= length @variable v12;
  #L3ea5d6.  v6:= v9.`org.b.a.d.a.a.b` @type ^`byte`[] @kind object;
  #L3ea5da.  v6:= length @variable v6;
  #L3ea5dc.  v1:= v1 * v6 @kind int;
  #L3ea5e0.  v5:= v5 - v1 @kind int;
  #L3ea5e2.  call `arraycopy`(v3, v2, v12, v4, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea5e8.  call `b`(v9, v11) @signature `Lorg/b/a/d/a/a;.b:([B)V` @kind direct;
  #L3ea5ee.  v3:= v9.`org.b.a.d.a.a.c` @type ^`long` @kind wide;
  #L3ea5f2.  v5:= 1L;
  #L3ea5f6.  v7:= v3 + v5 @kind long;
  #L3ea5fa.  v9.`org.b.a.d.a.a.c` @type ^`long` := v7 @kind wide;
  #L3ea5fe.  v11:= length @variable v10;
  #L3ea600.  call `arraycopy`(v12, v2, v10, v2, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ea606.  return v0;
}
procedure `void` `a`(`org.b.a.d.a.a` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/b/a/d/a/a;.a:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea6bc.  call temp:= `a`(v2) @signature `Lorg/b/a/d/a/a;.a:()[B` @kind direct;
  #L3ea6c2.  v0:= temp @kind object;
  #L3ea6c4.  call temp:= `a`(v0, v3) @signature `Lorg/b/b/a;.a:([B[B)[B` @kind static;
  #L3ea6ca.  v3:= temp @kind object;
  #L3ea6cc.  call `b`(v2, v3) @signature `Lorg/b/a/d/a/a;.b:([B)V` @kind direct;
  #L3ea6d2.  v0:= 1L;
  #L3ea6d6.  v2.`org.b.a.d.a.a.c` @type ^`long` := v0 @kind wide;
  #L3ea6da.  return @kind void;
}
