record `org.b.a.d.h` @kind class @AccessFlag PUBLIC {
  `org.b.a.a` `org.b.a.d.h.a` @AccessFlag PRIVATE_FINAL;
  `org.b.a.d.c` `org.b.a.d.h.b` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.h.c` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.h.d` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.h.e` @AccessFlag PRIVATE_FINAL;
  `byte`[] `org.b.a.d.h.f` @AccessFlag PRIVATE;
  `long` `org.b.a.d.h.g` @AccessFlag PRIVATE;
}
procedure `void` `a`(`org.b.a.d.h` v2 @kind this, `byte`[] v3 @kind object) @signature `Lorg/b/a/d/h;.a:([B)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eade0.  v0:= length @variable v3;
  #L3eade2.  v0:= v0 + -1;
  #L3eade6.  if v0 < 0 then goto L3eae04;
  #L3eadea.  v1:= v3[v0] @kind byte;
  #L3eadee.  v1:= v1 + 1;
  #L3eadf2.  v1:= (`byte`) v1 @kind i2b;
  #L3eadf4.  v3[v0]:= v1 @kind byte;
  #L3eadf8.  if v1 == 0 then goto L3eadfe;
  #L3eadfc.  return @kind void;
  #L3eadfe.  v0:= v0 + -1;
  #L3eae02.  goto L3eade6;
  #L3eae04.  return @kind void;
}
procedure `void` `a`(`org.b.a.d.h` v3 @kind this, `byte`[] v4 @kind object, `byte`[] v5 @kind object, `byte`[] v6 @kind object) @signature `Lorg/b/a/d/h;.a:([B[B[B)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3eae18.  v0:= 0I;
  #L3eae1a.  v1:= length @variable v4;
  #L3eae1c.  if v0 == v1 then goto L3eae36;
  #L3eae20.  v1:= v5[v0] @kind byte;
  #L3eae24.  v2:= v6[v0] @kind byte;
  #L3eae28.  v1:= v1 ^~ v2 @kind int;
  #L3eae2a.  v1:= (`byte`) v1 @kind i2b;
  #L3eae2c.  v4[v0]:= v1 @kind byte;
  #L3eae30.  v0:= v0 + 1;
  #L3eae34.  goto L3eae1a;
  #L3eae36.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v0 @kind object, `int` v1 ) @signature `Lorg/b/a/d/h;.a:([BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3eabc0.  if v0 == 0 then goto L3eabce;
  #L3eabc4.  v0:= length @variable v0;
  #L3eabc6.  if v0 <= v1 then goto L3eabce;
  #L3eabca.  v0:= 1I;
  #L3eabcc.  return v0;
  #L3eabce.  v0:= 0I;
  #L3eabd0.  return v0;
}
procedure `int` `a`(`org.b.a.d.h` v6 @kind this, `byte`[] v7 @kind object, `boolean` v8 ) @signature `Lorg/b/a/d/h;.a:([BZ)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3eabe4.  v0:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eabe8.  v0:= length @variable v0;
  #L3eabea.  v1:= -1I;
  #L3eabec.  v2:= 8I;
  #L3eabf0.  if v0 != v2 then goto L3eac28;
  #L3eabf4.  v2:= v6.`org.b.a.d.h.g` @type ^`long` @kind wide;
  #L3eabf8.  v4:= 32768L;
  #L3eabfe.  v0:= lcmp(v2, v4);
  #L3eac02.  if v0 <= 0 then goto L3eac08;
  #L3eac06.  return v1;
  #L3eac08.  v0:= 512I;
  #L3eac0c.  call temp:= `a`(v7, v0) @signature `Lorg/b/a/d/h;.a:([BI)Z` @kind static;
  #L3eac12.  v0:= temp;
  #L3eac14.  if v0 == 0 then goto L3eac5e;
  #L3eac18.  v7:= new `java.lang.IllegalArgumentException`;
  #L3eac1c.  v8:= "Number of bits per request limited to 4096" @kind object;
  #L3eac20.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eac26.  throw v7;
  #L3eac28.  v2:= v6.`org.b.a.d.h.g` @type ^`long` @kind wide;
  #L3eac2c.  v4:= 8388608L;
  #L3eac32.  v0:= lcmp(v2, v4);
  #L3eac36.  if v0 <= 0 then goto L3eac3c;
  #L3eac3a.  return v1;
  #L3eac3c.  v0:= 32768I;
  #L3eac42.  call temp:= `a`(v7, v0) @signature `Lorg/b/a/d/h;.a:([BI)Z` @kind static;
  #L3eac48.  v0:= temp;
  #L3eac4a.  if v0 == 0 then goto L3eac5e;
  #L3eac4e.  v7:= new `java.lang.IllegalArgumentException`;
  #L3eac52.  v8:= "Number of bits per request limited to 262144" @kind object;
  #L3eac56.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eac5c.  throw v7;
  #L3eac5e.  if v8 != 0 then goto L3eac6a;
  #L3eac62.  v8:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3eac66.  if v8 != 0 then goto L3eaca0;
  #L3eac6a.  v8:= v6.`org.b.a.d.h.b` @type ^`org.b.a.d.c` @kind object;
  #L3eac6e.  call temp:= `a`(v8) @signature `Lorg/b/a/d/c;.a:()[B` @kind interface;
  #L3eac74.  v8:= temp @kind object;
  #L3eac76.  v6.`org.b.a.d.h.f` @type ^`byte`[] := v8 @kind object;
  #L3eac7a.  v8:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3eac7e.  v8:= length @variable v8;
  #L3eac80.  v0:= v6.`org.b.a.d.h.a` @type ^`org.b.a.a` @kind object;
  #L3eac84.  call temp:= `a`(v0) @signature `Lorg/b/a/a;.a:()I` @kind interface;
  #L3eac8a.  v0:= temp;
  #L3eac8c.  if v8 == v0 then goto L3eaca0;
  #L3eac90.  v7:= new `java.lang.IllegalStateException`;
  #L3eac94.  v8:= "Insufficient entropy returned" @kind object;
  #L3eac98.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eac9e.  throw v7;
  #L3eaca0.  v8:= length @variable v7;
  #L3eaca2.  v0:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eaca6.  v0:= length @variable v0;
  #L3eaca8.  v8:= v8 / v0 @kind int;
  #L3eacaa.  v0:= 0I;
  #L3eacac.  v1:= 0I;
  #L3eacae.  if v1 >= v8 then goto L3ead00;
  #L3eacb2.  v2:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eacb6.  v3:= v6.`org.b.a.d.h.d` @type ^`byte`[] @kind object;
  #L3eacba.  v4:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3eacbe.  call `a`(v6, v2, v3, v4) @signature `Lorg/b/a/d/h;.a:([B[B[B)V` @kind direct;
  #L3eacc4.  v2:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3eacc8.  v3:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eaccc.  v4:= v6.`org.b.a.d.h.d` @type ^`byte`[] @kind object;
  #L3eacd0.  call `a`(v6, v2, v3, v4) @signature `Lorg/b/a/d/h;.a:([B[B[B)V` @kind direct;
  #L3eacd6.  v2:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eacda.  v3:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eacde.  v3:= length @variable v3;
  #L3eace0.  v3:= v3 * v1 @kind int;
  #L3eace4.  v4:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3eace8.  v4:= length @variable v4;
  #L3eacea.  call `arraycopy`(v2, v0, v7, v3, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3eacf0.  v2:= v6.`org.b.a.d.h.c` @type ^`byte`[] @kind object;
  #L3eacf4.  call `a`(v6, v2) @signature `Lorg/b/a/d/h;.a:([B)V` @kind direct;
  #L3eacfa.  v1:= v1 + 1;
  #L3eacfe.  goto L3eacae;
  #L3ead00.  v1:= length @variable v7;
  #L3ead02.  v2:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3ead06.  v2:= length @variable v2;
  #L3ead08.  v2:= v2 * v8 @kind int;
  #L3ead0c.  v1:= v1 - v2 @kind int;
  #L3ead0e.  if v1 <= 0 then goto L3ead54;
  #L3ead12.  v2:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3ead16.  v3:= v6.`org.b.a.d.h.d` @type ^`byte`[] @kind object;
  #L3ead1a.  v4:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3ead1e.  call `a`(v6, v2, v3, v4) @signature `Lorg/b/a/d/h;.a:([B[B[B)V` @kind direct;
  #L3ead24.  v2:= v6.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3ead28.  v3:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3ead2c.  v4:= v6.`org.b.a.d.h.d` @type ^`byte`[] @kind object;
  #L3ead30.  call `a`(v6, v2, v3, v4) @signature `Lorg/b/a/d/h;.a:([B[B[B)V` @kind direct;
  #L3ead36.  v2:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3ead3a.  v3:= v6.`org.b.a.d.h.e` @type ^`byte`[] @kind object;
  #L3ead3e.  v3:= length @variable v3;
  #L3ead40.  v8:= v8 * v3 @kind int;
  #L3ead44.  call `arraycopy`(v2, v0, v7, v8, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3ead4a.  v8:= v6.`org.b.a.d.h.c` @type ^`byte`[] @kind object;
  #L3ead4e.  call `a`(v6, v8) @signature `Lorg/b/a/d/h;.a:([B)V` @kind direct;
  #L3ead54.  v0:= v6.`org.b.a.d.h.g` @type ^`long` @kind wide;
  #L3ead58.  v2:= 1L;
  #L3ead5c.  v4:= v0 + v2 @kind long;
  #L3ead60.  v6.`org.b.a.d.h.g` @type ^`long` := v4 @kind wide;
  #L3ead64.  v7:= length @variable v7;
  #L3ead66.  return v7;
}
procedure `void` `a`(`org.b.a.d.h` v2 @kind this) @signature `Lorg/b/a/d/h;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ead90.  v0:= v2.`org.b.a.d.h.b` @type ^`org.b.a.d.c` @kind object;
  #L3ead94.  call temp:= `a`(v0) @signature `Lorg/b/a/d/c;.a:()[B` @kind interface;
  #L3ead9a.  v0:= temp @kind object;
  #L3ead9c.  v2.`org.b.a.d.h.f` @type ^`byte`[] := v0 @kind object;
  #L3eada0.  v0:= v2.`org.b.a.d.h.f` @type ^`byte`[] @kind object;
  #L3eada4.  v0:= length @variable v0;
  #L3eada6.  v1:= v2.`org.b.a.d.h.a` @type ^`org.b.a.a` @kind object;
  #L3eadaa.  call temp:= `a`(v1) @signature `Lorg/b/a/a;.a:()I` @kind interface;
  #L3eadb0.  v1:= temp;
  #L3eadb2.  if v0 == v1 then goto L3eadc6;
  #L3eadb6.  v0:= new `java.lang.IllegalStateException`;
  #L3eadba.  v1:= "Insufficient entropy returned" @kind object;
  #L3eadbe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eadc4.  throw v0;
  #L3eadc6.  v0:= 1L;
  #L3eadca.  v2.`org.b.a.d.h.g` @type ^`long` := v0 @kind wide;
  #L3eadce.  return @kind void;
}
procedure `org.b.a.d.c` `b`(`org.b.a.d.h` v1 @kind this) @signature `Lorg/b/a/d/h;.b:()Lorg/b/a/d/c;` @AccessFlag  {
    temp;
    v0;

  #L3ead78.  v0:= v1.`org.b.a.d.h.b` @type ^`org.b.a.d.c` @kind object;
  #L3ead7c.  return v0 @kind object;
}
