record `org.d.c` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@org.d.c.a` @AccessFlag STATIC;
global `org.d.a.e` `@@org.d.c.b` @AccessFlag STATIC;
global `org.d.a.c` `@@org.d.c.c` @AccessFlag STATIC;
global `java.lang.String`[] `@@org.d.c.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@org.d.c.e` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lorg/d/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L405434.  v0:= new `org.d.a.e`;
  #L405438.  call `<init>`(v0) @signature `Lorg/d/a/e;.<init>:()V` @kind direct;
  #L40543e.  `@@org.d.c.b` @type ^`org.d.a.e` := v0 @kind object;
  #L405442.  v0:= new `org.d.a.c`;
  #L405446.  call `<init>`(v0) @signature `Lorg/d/a/c;.<init>:()V` @kind direct;
  #L40544c.  `@@org.d.c.c` @type ^`org.d.a.c` := v0 @kind object;
  #L405450.  v0:= "1.6" @kind object;
  #L405454.  v1:= "1.7" @kind object;
  #L405458.  temp:= new `java.lang.String`[v0, v1];
  #L40545e.  v0:= temp @kind object;
  #L405460.  `@@org.d.c.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L405464.  return @kind void;
}
procedure `void` `<init>`(`org.d.c` v0 @kind this) @signature `Lorg/d/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L405478.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L40547e.  return @kind void;
}
procedure `org.d.a` `a`() @signature `Lorg/d/c;.a:()Lorg/d/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L405368.  v0:= `@@org.d.c.a` @type ^`int`;
  #L40536c.  if v0 != 0 then goto L40537c;
  #L405370.  v0:= 1I;
  #L405372.  `@@org.d.c.a` @type ^`int` := v0;
  #L405376.  call `b`() @signature `Lorg/d/c;.b:()V` @kind static;
  #L40537c.  v0:= `@@org.d.c.a` @type ^`int`;
  #L405380.  goto L4053c4;
  #L405386.  v0:= new `java.lang.IllegalStateException`;
  #L40538a.  v1:= "Unreachable code" @kind object;
  #L40538e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L405394.  throw v0;
  #L405396.  v0:= `@@org.d.c.c` @type ^`org.d.a.c` @kind object;
  #L40539a.  return v0 @kind object;
  #L40539c.  call temp:= `getSingleton`() @signature `Lorg/slf4j/impl/StaticLoggerBinder;.getSingleton:()Lorg/slf4j/impl/StaticLoggerBinder;` @kind static;
  #L4053a2.  v0:= temp @kind object;
  #L4053a4.  call temp:= `getLoggerFactory`(v0) @signature `Lorg/slf4j/impl/StaticLoggerBinder;.getLoggerFactory:()Lorg/slf4j/ILoggerFactory;` @kind virtual;
  #L4053aa.  v0:= temp @kind object;
  #L4053ac.  return v0 @kind object;
  #L4053ae.  v0:= new `java.lang.IllegalStateException`;
  #L4053b2.  v1:= "org.slf4j.LoggerFactory could not be successfully initialized. See also http://www.slf4j.org/codes.html#unsuccessfulInit" @kind object;
  #L4053b6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L4053bc.  throw v0;
  #L4053be.  v0:= `@@org.d.c.b` @type ^`org.d.a.e` @kind object;
  #L4053c2.  return v0 @kind object;
  #L4053c4.  switch v0
                  | 1 => goto L4053be
                  | 2 => goto L4053ae
                  | 3 => goto L40539c
                  | 4 => goto L405396
                  | else => goto L405386;
}
procedure `org.d.b` `a`(`java.lang.Class` v0 @kind object) @signature `Lorg/d/c;.a:(Ljava/lang/Class;)Lorg/d/b;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4053ec.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L4053f2.  v0:= temp @kind object;
  #L4053f4.  call temp:= `a`(v0) @signature `Lorg/d/c;.a:(Ljava/lang/String;)Lorg/d/b;` @kind static;
  #L4053fa.  v0:= temp @kind object;
  #L4053fc.  return v0 @kind object;
}
procedure `org.d.b` `a`(`java.lang.String` v1 @kind object) @signature `Lorg/d/c;.a:(Ljava/lang/String;)Lorg/d/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L405410.  call temp:= `a`() @signature `Lorg/d/c;.a:()Lorg/d/a;` @kind static;
  #L405416.  v0:= temp @kind object;
  #L405418.  call temp:= `a`(v0, v1) @signature `Lorg/d/a;.a:(Ljava/lang/String;)Lorg/d/b;` @kind interface;
  #L40541e.  v1:= temp @kind object;
  #L405420.  return v1 @kind object;
}
procedure `void` `a`(`java.lang.Throwable` v1 @kind object) @signature `Lorg/d/c;.a:(Ljava/lang/Throwable;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L405490.  v0:= 2I;
  #L405492.  `@@org.d.c.a` @type ^`int` := v0;
  #L405496.  v0:= "Failed to instantiate SLF4J LoggerFactory" @kind object;
  #L40549a.  call `a`(v0, v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4054a0.  return @kind void;
}
procedure `boolean` `a`(`java.util.Set` v1 @kind object) @signature `Lorg/d/c;.a:(Ljava/util/Set;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L40527c.  call temp:= `size`(v1) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L405282.  v1:= temp;
  #L405284.  v0:= 1I;
  #L405286.  if v1 <= v0 then goto L40528c;
  #L40528a.  goto L40528e;
  #L40528c.  v0:= 0I;
  #L40528e.  return v0;
}
procedure `void` `b`() @signature `Lorg/d/c;.b:()V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L4054b4.  call `c`() @signature `Lorg/d/c;.c:()V` @kind static;
  #L4054ba.  v0:= `@@org.d.c.a` @type ^`int`;
  #L4054be.  v1:= 3I;
  #L4054c0.  if v0 != v1 then goto L4054ca;
  #L4054c4.  call `e`() @signature `Lorg/d/c;.e:()V` @kind static;
  #L4054ca.  return @kind void;
}
procedure `void` `b`(`java.util.Set` v3 @kind object) @signature `Lorg/d/c;.b:(Ljava/util/Set;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4054dc.  call temp:= `a`(v3) @signature `Lorg/d/c;.a:(Ljava/util/Set;)Z` @kind static;
  #L4054e2.  v0:= temp;
  #L4054e4.  if v0 == 0 then goto L405550;
  #L4054e8.  v0:= "Class path contains multiple SLF4J bindings." @kind object;
  #L4054ec.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4054f2.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4054f8.  v3:= temp @kind object;
  #L4054fa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L405500.  v0:= temp;
  #L405502.  if v0 == 0 then goto L405546;
  #L405506.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L40550c.  v0:= temp @kind object;
  #L40550e.  v0:= (`java.net.URL`) v0 @kind object;
  #L405512.  v1:= new `java.lang.StringBuilder`;
  #L405516.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40551c.  v2:= "Found binding in [" @kind object;
  #L405520.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405526.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40552c.  v0:= "]" @kind object;
  #L405530.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405536.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40553c.  v0:= temp @kind object;
  #L40553e.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L405544.  goto L4054fa;
  #L405546.  v3:= "See http://www.slf4j.org/codes.html#multiple_bindings for an explanation." @kind object;
  #L40554a.  call `a`(v3) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L405550.  return @kind void;
}
procedure `boolean` `b`(`java.lang.String` v4 @kind object) @signature `Lorg/d/c;.b:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4052a0.  v0:= 0I;
  #L4052a2.  if v4 != 0 then goto L4052a8;
  #L4052a6.  return v0;
  #L4052a8.  v1:= "org/slf4j/impl/StaticLoggerBinder" @kind object;
  #L4052ac.  call temp:= `indexOf`(v4, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L4052b2.  v1:= temp;
  #L4052b4.  v2:= 1I;
  #L4052b6.  v3:= -1I;
  #L4052b8.  if v1 == v3 then goto L4052be;
  #L4052bc.  return v2;
  #L4052be.  v1:= "org.slf4j.impl.StaticLoggerBinder" @kind object;
  #L4052c2.  call temp:= `indexOf`(v4, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L4052c8.  v4:= temp;
  #L4052ca.  if v4 == v3 then goto L4052d0;
  #L4052ce.  return v2;
  #L4052d0.  return v0;
}
procedure `void` `c`() @signature `Lorg/d/c;.c:()V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L405564.  call temp:= `f`() @signature `Lorg/d/c;.f:()Ljava/util/Set;` @kind static;
  #L40556a.  v0:= temp @kind object;
  #L40556c.  call `b`(v0) @signature `Lorg/d/c;.b:(Ljava/util/Set;)V` @kind static;
  #L405572.  call temp:= `getSingleton`() @signature `Lorg/slf4j/impl/StaticLoggerBinder;.getSingleton:()Lorg/slf4j/impl/StaticLoggerBinder;` @kind static;
  #L405578.  v1:= 3I;
  #L40557a.  `@@org.d.c.a` @type ^`int` := v1;
  #L40557e.  call `c`(v0) @signature `Lorg/d/c;.c:(Ljava/util/Set;)V` @kind static;
  #L405584.  call `d`() @signature `Lorg/d/c;.d:()V` @kind static;
  #L40558a.  goto L405624;
  #L40558c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L40558e.  call `a`(v0) @signature `Lorg/d/c;.a:(Ljava/lang/Throwable;)V` @kind static;
  #L405594.  v1:= new `java.lang.IllegalStateException`;
  #L405598.  v2:= "Unexpected initialization failure" @kind object;
  #L40559c.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L4055a2.  throw v1;
  #L4055a4.  v0:= Exception @type ^`java.lang.NoSuchMethodError` @kind object;
  #L4055a6.  call temp:= `getMessage`(v0) @signature `Ljava/lang/NoSuchMethodError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4055ac.  v1:= temp @kind object;
  #L4055ae.  if v1 == 0 then goto L4055e8;
  #L4055b2.  v2:= "org.slf4j.impl.StaticLoggerBinder.getSingleton()" @kind object;
  #L4055b6.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;)I` @kind virtual;
  #L4055bc.  v1:= temp;
  #L4055be.  v2:= -1I;
  #L4055c0.  if v1 == v2 then goto L4055e8;
  #L4055c4.  v1:= 2I;
  #L4055c6.  `@@org.d.c.a` @type ^`int` := v1;
  #L4055ca.  v1:= "slf4j-api 1.6.x (or later) is incompatible with this binding." @kind object;
  #L4055ce.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4055d4.  v1:= "Your binding is version 1.5.5 or earlier." @kind object;
  #L4055d8.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4055de.  v1:= "Upgrade your binding to version 1.6.x." @kind object;
  #L4055e2.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4055e8.  throw v0;
  #L4055ea.  v0:= Exception @type ^`java.lang.NoClassDefFoundError` @kind object;
  #L4055ec.  call temp:= `getMessage`(v0) @signature `Ljava/lang/NoClassDefFoundError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L4055f2.  v1:= temp @kind object;
  #L4055f4.  call temp:= `b`(v1) @signature `Lorg/d/c;.b:(Ljava/lang/String;)Z` @kind static;
  #L4055fa.  v1:= temp;
  #L4055fc.  if v1 == 0 then goto L405626;
  #L405600.  v0:= 4I;
  #L405602.  `@@org.d.c.a` @type ^`int` := v0;
  #L405606.  v0:= "Failed to load class \"org.slf4j.impl.StaticLoggerBinder\"." @kind object;
  #L40560a.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L405610.  v0:= "Defaulting to no-operation (NOP) logger implementation" @kind object;
  #L405614.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L40561a.  v0:= "See http://www.slf4j.org/codes.html#StaticLoggerBinder for further details." @kind object;
  #L40561e.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L405624.  return @kind void;
  #L405626.  call `a`(v0) @signature `Lorg/d/c;.a:(Ljava/lang/Throwable;)V` @kind static;
  #L40562c.  throw v0;
  catch `java.lang.NoClassDefFoundError` @[L405564..L40558a] goto L4055ea;
  catch `java.lang.NoSuchMethodError` @[L405564..L40558a] goto L4055a4;
  catch `java.lang.Exception` @[L405564..L40558a] goto L40558c;
}
procedure `void` `c`(`java.util.Set` v1 @kind object) @signature `Lorg/d/c;.c:(Ljava/util/Set;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L405654.  call temp:= `a`(v1) @signature `Lorg/d/c;.a:(Ljava/util/Set;)Z` @kind static;
  #L40565a.  v1:= temp;
  #L40565c.  if v1 == 0 then goto L4056a2;
  #L405660.  v1:= new `java.lang.StringBuilder`;
  #L405664.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L40566a.  v0:= "Actual binding is of type [" @kind object;
  #L40566e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405674.  call temp:= `getSingleton`() @signature `Lorg/slf4j/impl/StaticLoggerBinder;.getSingleton:()Lorg/slf4j/impl/StaticLoggerBinder;` @kind static;
  #L40567a.  v0:= temp @kind object;
  #L40567c.  call temp:= `getLoggerFactoryClassStr`(v0) @signature `Lorg/slf4j/impl/StaticLoggerBinder;.getLoggerFactoryClassStr:()Ljava/lang/String;` @kind virtual;
  #L405682.  v0:= temp @kind object;
  #L405684.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40568a.  v0:= "]" @kind object;
  #L40568e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405694.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40569a.  v1:= temp @kind object;
  #L40569c.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4056a2.  return @kind void;
}
procedure `void` `d`() @signature `Lorg/d/c;.d:()V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4056b4.  v0:= `@@org.d.c.b` @type ^`org.d.a.e` @kind object;
  #L4056b8.  call temp:= `a`(v0) @signature `Lorg/d/a/e;.a:()Ljava/util/List;` @kind virtual;
  #L4056be.  v0:= temp @kind object;
  #L4056c0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4056c6.  v1:= temp;
  #L4056c8.  if v1 != 0 then goto L4056ce;
  #L4056cc.  return @kind void;
  #L4056ce.  v1:= "The following loggers will not work because they were created" @kind object;
  #L4056d2.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4056d8.  v1:= "during the default configuration phase of the underlying logging system." @kind object;
  #L4056dc.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4056e2.  v1:= "See also http://www.slf4j.org/codes.html#substituteLogger" @kind object;
  #L4056e6.  call `a`(v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4056ec.  v1:= 0I;
  #L4056ee.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4056f4.  v2:= temp;
  #L4056f6.  if v1 >= v2 then goto L405712;
  #L4056fa.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L405700.  v2:= temp @kind object;
  #L405702.  v2:= (`java.lang.String`) v2 @kind object;
  #L405706.  call `a`(v2) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L40570c.  v1:= v1 + 1;
  #L405710.  goto L4056ee;
  #L405712.  return @kind void;
}
procedure `void` `e`() @signature `Lorg/d/c;.e:()V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L405724.  v0:= `@@org.slf4j.impl.StaticLoggerBinder.REQUESTED_API_VERSION` @type ^`java.lang.String` @kind object;
  #L405728.  v1:= 0I;
  #L40572a.  v2:= 0I;
  #L40572c.  v3:= `@@org.d.c.d` @type ^`java.lang.String`[] @kind object;
  #L405730.  v3:= length @variable v3;
  #L405732.  if v1 >= v3 then goto L405752;
  #L405736.  v3:= `@@org.d.c.d` @type ^`java.lang.String`[] @kind object;
  #L40573a.  v3:= v3[v1] @kind object;
  #L40573e.  call temp:= `startsWith`(v0, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L405744.  v3:= temp;
  #L405746.  if v3 == 0 then goto L40574c;
  #L40574a.  v2:= 1I;
  #L40574c.  v1:= v1 + 1;
  #L405750.  goto L40572c;
  #L405752.  if v2 != 0 then goto L4057ba;
  #L405756.  v1:= new `java.lang.StringBuilder`;
  #L40575a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L405760.  v2:= "The requested version " @kind object;
  #L405764.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40576a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405770.  v0:= " by your slf4j binding is not compatible with " @kind object;
  #L405774.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L40577a.  v0:= `@@org.d.c.d` @type ^`java.lang.String`[] @kind object;
  #L40577e.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L405784.  v0:= temp @kind object;
  #L405786.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L40578c.  v0:= temp @kind object;
  #L40578e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L405794.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L40579a.  v0:= temp @kind object;
  #L40579c.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4057a2.  v0:= "See http://www.slf4j.org/codes.html#version_mismatch for further details." @kind object;
  #L4057a6.  call `a`(v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;)V` @kind static;
  #L4057ac.  goto L4057ba;
  #L4057ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4057b0.  v1:= "Unexpected problem occured during version sanity check" @kind object;
  #L4057b4.  call `a`(v1, v0) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L4057ba.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L405724..L4057ac] goto L4057ba;
  catch `java.lang.Throwable` @[L405724..L4057ac] goto L4057ae;
}
procedure `java.util.Set` `f`() @signature `Lorg/d/c;.f:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4052e4.  v0:= new `java.util.LinkedHashSet`;
  #L4052e8.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L4052ee.  v1:= constclass @type ^`org.d.c` @kind object;
  #L4052f2.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L4052f8.  v1:= temp @kind object;
  #L4052fa.  if v1 != 0 then goto L40530c;
  #L4052fe.  v1:= `@@org.d.c.e` @type ^`java.lang.String` @kind object;
  #L405302.  call temp:= `getSystemResources`(v1) @signature `Ljava/lang/ClassLoader;.getSystemResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind static;
  #L405308.  v1:= temp @kind object;
  #L40530a.  goto L405318;
  #L40530c.  v2:= `@@org.d.c.e` @type ^`java.lang.String` @kind object;
  #L405310.  call temp:= `getResources`(v1, v2) @signature `Ljava/lang/ClassLoader;.getResources:(Ljava/lang/String;)Ljava/util/Enumeration;` @kind virtual;
  #L405316.  v1:= temp @kind object;
  #L405318.  call temp:= `hasMoreElements`(v1) @signature `Ljava/util/Enumeration;.hasMoreElements:()Z` @kind interface;
  #L40531e.  v2:= temp;
  #L405320.  if v2 == 0 then goto L405344;
  #L405324.  call temp:= `nextElement`(v1) @signature `Ljava/util/Enumeration;.nextElement:()Ljava/lang/Object;` @kind interface;
  #L40532a.  v2:= temp @kind object;
  #L40532c.  v2:= (`java.net.URL`) v2 @kind object;
  #L405330.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L405336.  goto L405318;
  #L405338.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L40533a.  v2:= "Error getting resources from path" @kind object;
  #L40533e.  call `a`(v2, v1) @signature `Lorg/d/a/f;.a:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L405344.  return v0 @kind object;
  catch `java.io.IOException` @[L4052ee..L405336] goto L405338;
}
