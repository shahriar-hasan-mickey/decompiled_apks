record `y8.c` @kind class @AccessFlag PUBLIC extends `y8.d` @kind interface {
  `int` `y8.c.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`y8.c` v0 @kind this, `int` v1 ) @signature `Ly8/c;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L387a60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L387a66.  v0.`y8.c.a` @type ^`int` := v1;
  #L387a6a.  return @kind void;
}
procedure `boolean` `b`(`java.lang.StackTraceElement`[] v5 @kind object, `int` v6 , `int` v7 ) @signature `Ly8/c;.b:([Ljava/lang/StackTraceElement;II)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L387938.  v0:= v7 - v6 @kind int;
  #L38793c.  v1:= v7 + v0 @kind int;
  #L387940.  v2:= length @variable v5;
  #L387942.  v3:= 0I;
  #L387944.  if v1 <= v2 then goto L38794a;
  #L387948.  return v3;
  #L38794a.  v1:= 0I;
  #L38794c.  if v1 >= v0 then goto L387974;
  #L387950.  v2:= v6 + v1 @kind int;
  #L387954.  v2:= v5[v2] @kind object;
  #L387958.  v4:= v7 + v1 @kind int;
  #L38795c.  v4:= v5[v4] @kind object;
  #L387960.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/StackTraceElement;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L387966.  v2:= temp;
  #L387968.  if v2 != 0 then goto L38796e;
  #L38796c.  return v3;
  #L38796e.  v1:= v1 + 1;
  #L387972.  goto L38794c;
  #L387974.  v5:= 1I;
  #L387976.  return v5;
}
procedure `java.lang.StackTraceElement`[] `c`(`java.lang.StackTraceElement`[] v10 @kind object, `int` v11 ) @signature `Ly8/c;.c:([Ljava/lang/StackTraceElement;I)[Ljava/lang/StackTraceElement;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3879b0.  v0:= new `java.util.HashMap`;
  #L3879b4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3879ba.  v1:= length @variable v10;
  #L3879bc.  v1:= new `java.lang.StackTraceElement`[v1];
  #L3879c0.  v2:= 0I;
  #L3879c2.  v3:= 1I;
  #L3879c4.  v4:= 0I;
  #L3879c6.  v5:= 0I;
  #L3879c8.  v6:= 1I;
  #L3879ca.  v7:= length @variable v10;
  #L3879cc.  if v4 >= v7 then goto L387a42;
  #L3879d0.  v7:= v10[v4] @kind object;
  #L3879d4.  call temp:= `get`(v0, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3879da.  v8:= temp @kind object;
  #L3879dc.  v8:= (`java.lang.Integer`) v8 @kind object;
  #L3879e0.  if v8 == 0 then goto L387a1e;
  #L3879e4.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3879ea.  v9:= temp;
  #L3879ec.  call temp:= `b`(v10, v9, v4) @signature `Ly8/c;.b:([Ljava/lang/StackTraceElement;II)Z` @kind static;
  #L3879f2.  v9:= temp;
  #L3879f4.  if v9 != 0 then goto L3879fa;
  #L3879f8.  goto L387a1e;
  #L3879fa.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L387a00.  v8:= temp;
  #L387a02.  v8:= v4 - v8 @kind int;
  #L387a06.  if v6 >= v11 then goto L387a16;
  #L387a0a.  call `arraycopy`(v10, v4, v1, v5, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L387a10.  v5:= v5 + v8 @kind int;
  #L387a12.  v6:= v6 + 1;
  #L387a16.  v8:= v8 + -1;
  #L387a1a.  v8:= v8 + v4 @kind int;
  #L387a1c.  goto L387a2e;
  #L387a1e.  v6:= v10[v4] @kind object;
  #L387a22.  v1[v5]:= v6 @kind object;
  #L387a26.  v5:= v5 + 1;
  #L387a2a.  v8:= v4;
  #L387a2c.  v6:= 1I;
  #L387a2e.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L387a34.  v4:= temp @kind object;
  #L387a36.  call temp:= `put`(v0, v7, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L387a3c.  v4:= v8 + 1;
  #L387a40.  goto L3879ca;
  #L387a42.  v10:= new `java.lang.StackTraceElement`[v5];
  #L387a46.  call `arraycopy`(v1, v2, v10, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L387a4c.  return v10 @kind object;
}
procedure `java.lang.StackTraceElement`[] `a`(`y8.c` v3 @kind this, `java.lang.StackTraceElement`[] v4 @kind object) @signature `Ly8/c;.a:([Ljava/lang/StackTraceElement;)[Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L387988.  v0:= v3.`y8.c.a` @type ^`int`;
  #L38798c.  call temp:= `c`(v4, v0) @signature `Ly8/c;.c:([Ljava/lang/StackTraceElement;I)[Ljava/lang/StackTraceElement;` @kind static;
  #L387992.  v0:= temp @kind object;
  #L387994.  v1:= length @variable v0;
  #L387996.  v2:= length @variable v4;
  #L387998.  if v1 >= v2 then goto L38799e;
  #L38799c.  return v0 @kind object;
  #L38799e.  return v4 @kind object;
}
