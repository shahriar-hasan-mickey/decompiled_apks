record `kotlinx.coroutines.q0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlinx.coroutines.q0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.q0.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `boolean` `@@kotlinx.coroutines.q0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicLong` `@@kotlinx.coroutines.q0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/q0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30ea1c.  v0:= "kotlinx.coroutines.debug" @kind object;
  #L30ea20.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/g0;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L30ea26.  v0:= temp @kind object;
  #L30ea28.  v1:= 1I;
  #L30ea2a.  v2:= 0I;
  #L30ea2c.  if v0 == 0 then goto L30eae2;
  #L30ea30.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L30ea36.  v3:= temp;
  #L30ea38.  if v3 == 0 then goto L30ea8e;
  #L30ea3c.  v4:= 3551I;
  #L30ea40.  if v3 == v4 then goto L30ea7c;
  #L30ea44.  v4:= 109935I;
  #L30ea4a.  if v3 == v4 then goto L30ea6a;
  #L30ea4e.  v4:= 3005871I;
  #L30ea54.  if v3 != v4 then goto L30eaa2;
  #L30ea58.  v3:= "auto" @kind object;
  #L30ea5c.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ea62.  v3:= temp;
  #L30ea64.  if v3 == 0 then goto L30eaa2;
  #L30ea68.  goto L30eae2;
  #L30ea6a.  v3:= "off" @kind object;
  #L30ea6e.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ea74.  v3:= temp;
  #L30ea76.  if v3 == 0 then goto L30eaa2;
  #L30ea7a.  goto L30eae2;
  #L30ea7c.  v3:= "on" @kind object;
  #L30ea80.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ea86.  v3:= temp;
  #L30ea88.  if v3 == 0 then goto L30eaa2;
  #L30ea8c.  goto L30ea9e;
  #L30ea8e.  v3:= "" @kind object;
  #L30ea92.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ea98.  v3:= temp;
  #L30ea9a.  if v3 == 0 then goto L30eaa2;
  #L30ea9e.  v0:= 1I;
  #L30eaa0.  goto L30eae4;
  #L30eaa2.  v1:= new `java.lang.IllegalStateException`;
  #L30eaa6.  v2:= new `java.lang.StringBuilder`;
  #L30eaaa.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30eab0.  v3:= "System property 'kotlinx.coroutines.debug' has unrecognized value '" @kind object;
  #L30eab4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30eaba.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30eac0.  v0:= 39I;
  #L30eac4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30eaca.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ead0.  v0:= temp @kind object;
  #L30ead2.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ead8.  v0:= temp @kind object;
  #L30eada.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30eae0.  throw v1;
  #L30eae2.  v0:= 0I;
  #L30eae4.  `@@kotlinx.coroutines.q0.b` @type ^`boolean` := v0 @kind boolean;
  #L30eae8.  if v0 == 0 then goto L30eafe;
  #L30eaec.  v0:= "kotlinx.coroutines.stacktrace.recovery" @kind object;
  #L30eaf0.  call temp:= `e`(v0, v1) @signature `Lkotlinx/coroutines/internal/g0;.e:(Ljava/lang/String;Z)Z` @kind static;
  #L30eaf6.  v0:= temp;
  #L30eaf8.  if v0 == 0 then goto L30eafe;
  #L30eafc.  goto L30eb00;
  #L30eafe.  v1:= 0I;
  #L30eb00.  `@@kotlinx.coroutines.q0.c` @type ^`boolean` := v1 @kind boolean;
  #L30eb04.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L30eb08.  v1:= 0L;
  #L30eb0c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:(J)V` @kind direct;
  #L30eb12.  `@@kotlinx.coroutines.q0.d` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L30eb16.  return @kind void;
}
procedure `boolean` `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30e9bc.  v0:= `@@kotlinx.coroutines.q0.a` @type ^`boolean` @kind boolean;
  #L30e9c0.  return v0;
}
procedure `java.util.concurrent.atomic.AtomicLong` `b`() @signature `Lkotlinx/coroutines/q0;.b:()Ljava/util/concurrent/atomic/AtomicLong;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30ea04.  v0:= `@@kotlinx.coroutines.q0.d` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L30ea08.  return v0 @kind object;
}
procedure `boolean` `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30e9d4.  v0:= `@@kotlinx.coroutines.q0.b` @type ^`boolean` @kind boolean;
  #L30e9d8.  return v0;
}
procedure `boolean` `d`() @signature `Lkotlinx/coroutines/q0;.d:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30e9ec.  v0:= `@@kotlinx.coroutines.q0.c` @type ^`boolean` @kind boolean;
  #L30e9f0.  return v0;
}
