record `kotlinx.coroutines.s2` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `kotlinx.coroutines.c0` @kind interface {
  `kotlinx.coroutines.w1` `kotlinx.coroutines.s2.coroutine` @AccessFlag PUBLIC_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`kotlinx.coroutines.s2` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/s2;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L313a4c.  v0:= 0I;
  #L313a4e.  call `<init>`(v1, v2, v0) @signature `Lkotlinx/coroutines/s2;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L313a54.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.s2` v0 @kind this, `java.lang.String` v1 @kind object, `kotlinx.coroutines.w1` v2 @kind object) @signature `Lkotlinx/coroutines/s2;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/w1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L313a68.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313a6e.  v0.`kotlinx.coroutines.s2.coroutine` @type ^`kotlinx.coroutines.w1` := v2 @kind object;
  #L313a72.  return @kind void;
}
procedure `java.lang.Throwable` `createCopy`(`kotlinx.coroutines.s2` v1 @kind this) @signature `Lkotlinx/coroutines/s2;.createCopy:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3139f8.  call temp:= `createCopy`(v1) @signature `Lkotlinx/coroutines/s2;.createCopy:()Lkotlinx/coroutines/s2;` @kind virtual;
  #L3139fe.  v0:= temp @kind object;
  #L313a00.  return v0 @kind object;
}
procedure `kotlinx.coroutines.s2` `createCopy`(`kotlinx.coroutines.s2` v3 @kind this) @signature `Lkotlinx/coroutines/s2;.createCopy:()Lkotlinx/coroutines/s2;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313a14.  v0:= new `kotlinx.coroutines.s2`;
  #L313a18.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L313a1e.  v1:= temp @kind object;
  #L313a20.  if v1 != 0 then goto L313a28;
  #L313a24.  v1:= "" @kind object;
  #L313a28.  v2:= v3.`kotlinx.coroutines.s2.coroutine` @type ^`kotlinx.coroutines.w1` @kind object;
  #L313a2c.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/s2;.<init>:(Ljava/lang/String;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L313a32.  call temp:= `initCause`(v0, v3) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L313a38.  return v0 @kind object;
}
