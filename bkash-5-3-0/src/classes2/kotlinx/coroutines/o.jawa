record `kotlinx.coroutines.o` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`kotlinx.coroutines.l` v1 @kind object, `kotlinx.coroutines.e1` v2 @kind object) @signature `Lkotlinx/coroutines/o;.a:(Lkotlinx/coroutines/l;Lkotlinx/coroutines/e1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30d2a4.  v0:= new `kotlinx.coroutines.f1`;
  #L30d2a8.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/f1;.<init>:(Lkotlinx/coroutines/e1;)V` @kind direct;
  #L30d2ae.  call `b`(v1, v0) @signature `Lkotlinx/coroutines/l;.b:(Lwd/l;)V` @kind interface;
  #L30d2b4.  return @kind void;
}
procedure `kotlinx.coroutines.m` `b`(`kotlin.coroutines.d` v2 @kind object) @signature `Lkotlinx/coroutines/o;.b:(Lkotlin/coroutines/d;)Lkotlinx/coroutines/m;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L30d244.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.internal.h` @kind boolean;
  #L30d248.  if v0 != 0 then goto L30d25a;
  #L30d24c.  v0:= new `kotlinx.coroutines.m`;
  #L30d250.  v1:= 1I;
  #L30d252.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/m;.<init>:(Lkotlin/coroutines/d;I)V` @kind direct;
  #L30d258.  return v0 @kind object;
  #L30d25a.  v0:= v2 @kind object;
  #L30d25c.  v0:= (`kotlinx.coroutines.internal.h`) v0 @kind object;
  #L30d260.  call temp:= `o`(v0) @signature `Lkotlinx/coroutines/internal/h;.o:()Lkotlinx/coroutines/m;` @kind virtual;
  #L30d266.  v0:= temp @kind object;
  #L30d268.  if v0 == 0 then goto L30d284;
  #L30d26c.  call temp:= `J`(v0) @signature `Lkotlinx/coroutines/m;.J:()Z` @kind virtual;
  #L30d272.  v1:= temp;
  #L30d274.  if v1 == 0 then goto L30d27a;
  #L30d278.  goto L30d27c;
  #L30d27a.  v0:= 0I;
  #L30d27c.  if v0 != 0 then goto L30d282;
  #L30d280.  goto L30d284;
  #L30d282.  return v0 @kind object;
  #L30d284.  v0:= new `kotlinx.coroutines.m`;
  #L30d288.  v1:= 2I;
  #L30d28a.  call `<init>`(v0, v2, v1) @signature `Lkotlinx/coroutines/m;.<init>:(Lkotlin/coroutines/d;I)V` @kind direct;
  #L30d290.  return v0 @kind object;
}
