record `kotlinx.coroutines.q` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.y1` @kind class {
  `kotlinx.coroutines.m` `kotlinx.coroutines.q.k` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.q` v0 @kind this, `kotlinx.coroutines.m` v1 @kind object) @signature `Lkotlinx/coroutines/q;.<init>:(Lkotlinx/coroutines/m;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30d38c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/y1;.<init>:()V` @kind direct;
  #L30d392.  v0.`kotlinx.coroutines.q.k` @type ^`kotlinx.coroutines.m` := v1 @kind object;
  #L30d396.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.q` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/q;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30d36c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L30d370.  call `w`(v0, v1) @signature `Lkotlinx/coroutines/q;.w:(Ljava/lang/Throwable;)V` @kind virtual;
  #L30d376.  v1:= `@@od.t.a` @type ^`od.t` @kind object;
  #L30d37a.  return v1 @kind object;
}
procedure `void` `w`(`kotlinx.coroutines.q` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/q;.w:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d3a8.  v2:= v1.`kotlinx.coroutines.q.k` @type ^`kotlinx.coroutines.m` @kind object;
  #L30d3ac.  call temp:= `x`(v1) @signature `Lkotlinx/coroutines/d2;.x:()Lkotlinx/coroutines/e2;` @kind virtual;
  #L30d3b2.  v0:= temp @kind object;
  #L30d3b4.  call temp:= `w`(v2, v0) @signature `Lkotlinx/coroutines/m;.w:(Lkotlinx/coroutines/w1;)Ljava/lang/Throwable;` @kind virtual;
  #L30d3ba.  v0:= temp @kind object;
  #L30d3bc.  call `H`(v2, v0) @signature `Lkotlinx/coroutines/m;.H:(Ljava/lang/Throwable;)V` @kind virtual;
  #L30d3c2.  return @kind void;
}
