record `kotlinx.coroutines.w` @kind class @AccessFlag PUBLIC {
  `int` `kotlinx.coroutines.w._handled` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Throwable` `kotlinx.coroutines.w.a` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.w.b` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30d824.  v0:= constclass @type ^`kotlinx.coroutines.w` @kind object;
  #L30d828.  v1:= "_handled" @kind object;
  #L30d82c.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L30d832.  v0:= temp @kind object;
  #L30d834.  `@@kotlinx.coroutines.w.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L30d838.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.w` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 ) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30d84c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d852.  v0.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` := v1 @kind object;
  #L30d856.  v0.`kotlinx.coroutines.w._handled` @type ^`int` := v2;
  #L30d85a.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.w` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 , `int` v3 , `kotlin.jvm.internal.g` v4 @kind object) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/g;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30d86c.  v3:= v3 ^& 2;
  #L30d870.  if v3 == 0 then goto L30d876;
  #L30d874.  v2:= 0I;
  #L30d876.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;Z)V` @kind direct;
  #L30d87c.  return @kind void;
}
procedure `boolean` `a`(`kotlinx.coroutines.w` v1 @kind this) @signature `Lkotlinx/coroutines/w;.a:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30d798.  v0:= v1.`kotlinx.coroutines.w._handled` @type ^`int`;
  #L30d79c.  return v0;
}
procedure `boolean` `b`(`kotlinx.coroutines.w` v3 @kind this) @signature `Lkotlinx/coroutines/w;.b:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30d7b0.  v0:= `@@kotlinx.coroutines.w.b` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L30d7b4.  v1:= 0I;
  #L30d7b6.  v2:= 1I;
  #L30d7b8.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L30d7be.  v0:= temp;
  #L30d7c0.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.w` v2 @kind this) @signature `Lkotlinx/coroutines/w;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30d7d4.  v0:= new `java.lang.StringBuilder`;
  #L30d7d8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30d7de.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/r0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30d7e4.  v1:= temp @kind object;
  #L30d7e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d7ec.  v1:= 91I;
  #L30d7f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d7f6.  v1:= v2.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L30d7fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d800.  v1:= 93I;
  #L30d804.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d80a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30d810.  v0:= temp @kind object;
  #L30d812.  return v0 @kind object;
}
