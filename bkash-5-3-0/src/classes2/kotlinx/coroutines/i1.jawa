record `kotlinx.coroutines.i1` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.j1` @kind class, `kotlinx.coroutines.w0` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.i1._delayed` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.i1._isCompleted` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.i1._queue` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.i1.l` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.i1.m` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/i1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3101e4.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L3101e8.  v1:= constclass @type ^`kotlinx.coroutines.i1` @kind object;
  #L3101ec.  v2:= "_queue" @kind object;
  #L3101f0.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L3101f6.  v2:= temp @kind object;
  #L3101f8.  `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v2 @kind object;
  #L3101fc.  v2:= "_delayed" @kind object;
  #L310200.  call temp:= `newUpdater`(v1, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L310206.  v0:= temp @kind object;
  #L310208.  `@@kotlinx.coroutines.i1.m` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L31020c.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.i1` v1 @kind this) @signature `Lkotlinx/coroutines/i1;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L310220.  call `<init>`(v1) @signature `Lkotlinx/coroutines/j1;.<init>:()V` @kind direct;
  #L310226.  v0:= 0I;
  #L310228.  v1.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` := v0 @kind object;
  #L31022c.  v1.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` := v0 @kind object;
  #L310230.  v0:= 0I;
  #L310232.  v1.`kotlinx.coroutines.i1._isCompleted` @type ^`int` := v0;
  #L310236.  return @kind void;
}
procedure `boolean` `X0`(`kotlinx.coroutines.i1` v0 @kind object) @signature `Lkotlinx/coroutines/i1;.X0:(Lkotlinx/coroutines/i1;)Z` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L30fe0c.  call temp:= `c1`(v0) @signature `Lkotlinx/coroutines/i1;.c1:()Z` @kind direct;
  #L30fe12.  v0:= temp;
  #L30fe14.  return v0;
}
procedure `void` `Y0`(`kotlinx.coroutines.i1` v4 @kind this) @signature `Lkotlinx/coroutines/i1;.Y0:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L310248.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L31024e.  v0:= temp;
  #L310250.  if v0 == 0 then goto L31026e;
  #L310254.  call temp:= `c1`(v4) @signature `Lkotlinx/coroutines/i1;.c1:()Z` @kind direct;
  #L31025a.  v0:= temp;
  #L31025c.  if v0 == 0 then goto L310262;
  #L310260.  goto L31026e;
  #L310262.  v0:= new `java.lang.AssertionError`;
  #L310266.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31026c.  throw v0;
  #L31026e.  v0:= v4.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` @kind object;
  #L310272.  if v0 != 0 then goto L310292;
  #L310276.  v0:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31027a.  v1:= 0I;
  #L31027c.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L310282.  v2:= temp @kind object;
  #L310284.  call temp:= `compareAndSet`(v0, v4, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31028a.  v0:= temp;
  #L31028c.  if v0 == 0 then goto L31026e;
  #L310290.  return @kind void;
  #L310292.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t` @kind boolean;
  #L310296.  if v1 == 0 then goto L3102a6;
  #L31029a.  v0:= (`kotlinx.coroutines.internal.t`) v0 @kind object;
  #L31029e.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/t;.d:()Z` @kind virtual;
  #L3102a4.  return @kind void;
  #L3102a6.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3102ac.  v1:= temp @kind object;
  #L3102ae.  if v0 != v1 then goto L3102b4;
  #L3102b2.  return @kind void;
  #L3102b4.  v1:= new `kotlinx.coroutines.internal.t`;
  #L3102b8.  v2:= 8I;
  #L3102bc.  v3:= 1I;
  #L3102be.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/internal/t;.<init>:(IZ)V` @kind direct;
  #L3102c4.  v2:= v0 @kind object;
  #L3102c6.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L3102ca.  call temp:= `a`(v1, v2) @signature `Lkotlinx/coroutines/internal/t;.a:(Ljava/lang/Object;)I` @kind virtual;
  #L3102d0.  v2:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3102d4.  call temp:= `compareAndSet`(v2, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3102da.  v0:= temp;
  #L3102dc.  if v0 == 0 then goto L31026e;
  #L3102e0.  return @kind void;
}
procedure `java.lang.Runnable` `Z0`(`kotlinx.coroutines.i1` v4 @kind this) @signature `Lkotlinx/coroutines/i1;.Z0:()Ljava/lang/Runnable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L310000.  v0:= v4.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` @kind object;
  #L310004.  v1:= 0I;
  #L310006.  if v0 != 0 then goto L31000c;
  #L31000a.  return v1 @kind object;
  #L31000c.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t` @kind boolean;
  #L310010.  if v2 == 0 then goto L310044;
  #L310014.  v1:= v0 @kind object;
  #L310016.  v1:= (`kotlinx.coroutines.internal.t`) v1 @kind object;
  #L31001a.  call temp:= `j`(v1) @signature `Lkotlinx/coroutines/internal/t;.j:()Ljava/lang/Object;` @kind virtual;
  #L310020.  v2:= temp @kind object;
  #L310022.  v3:= `@@kotlinx.coroutines.internal.t.h` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L310026.  if v2 == v3 then goto L310030;
  #L31002a.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L31002e.  return v2 @kind object;
  #L310030.  v2:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L310034.  call temp:= `i`(v1) @signature `Lkotlinx/coroutines/internal/t;.i:()Lkotlinx/coroutines/internal/t;` @kind virtual;
  #L31003a.  v1:= temp @kind object;
  #L31003c.  call temp:= `compareAndSet`(v2, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L310042.  goto L310000;
  #L310044.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L31004a.  v2:= temp @kind object;
  #L31004c.  if v0 != v2 then goto L310052;
  #L310050.  return v1 @kind object;
  #L310052.  v2:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L310056.  call temp:= `compareAndSet`(v2, v4, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31005c.  v1:= temp;
  #L31005e.  if v1 == 0 then goto L310000;
  #L310062.  v0:= (`java.lang.Runnable`) v0 @kind object;
  #L310066.  return v0 @kind object;
}
procedure `boolean` `b1`(`kotlinx.coroutines.i1` v5 @kind this, `java.lang.Runnable` v6 @kind object) @signature `Lkotlinx/coroutines/i1;.b1:(Ljava/lang/Runnable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30fe28.  v0:= v5.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` @kind object;
  #L30fe2c.  call temp:= `c1`(v5) @signature `Lkotlinx/coroutines/i1;.c1:()Z` @kind direct;
  #L30fe32.  v1:= temp;
  #L30fe34.  v2:= 0I;
  #L30fe36.  if v1 == 0 then goto L30fe3c;
  #L30fe3a.  return v2;
  #L30fe3c.  v1:= 1I;
  #L30fe3e.  if v0 != 0 then goto L30fe56;
  #L30fe42.  v0:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L30fe46.  v2:= 0I;
  #L30fe48.  call temp:= `compareAndSet`(v0, v5, v2, v6) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30fe4e.  v0:= temp;
  #L30fe50.  if v0 == 0 then goto L30fe28;
  #L30fe54.  return v1;
  #L30fe56.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t` @kind boolean;
  #L30fe5a.  if v3 == 0 then goto L30fe94;
  #L30fe5e.  v3:= v0 @kind object;
  #L30fe60.  v3:= (`kotlinx.coroutines.internal.t`) v3 @kind object;
  #L30fe64.  call temp:= `a`(v3, v6) @signature `Lkotlinx/coroutines/internal/t;.a:(Ljava/lang/Object;)I` @kind virtual;
  #L30fe6a.  v4:= temp;
  #L30fe6c.  if v4 == 0 then goto L30fe92;
  #L30fe70.  if v4 == v1 then goto L30fe7e;
  #L30fe74.  v0:= 2I;
  #L30fe76.  if v4 == v0 then goto L30fe7c;
  #L30fe7a.  goto L30fe28;
  #L30fe7c.  return v2;
  #L30fe7e.  v1:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L30fe82.  call temp:= `i`(v3) @signature `Lkotlinx/coroutines/internal/t;.i:()Lkotlinx/coroutines/internal/t;` @kind virtual;
  #L30fe88.  v2:= temp @kind object;
  #L30fe8a.  call temp:= `compareAndSet`(v1, v5, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30fe90.  goto L30fe28;
  #L30fe92.  return v1;
  #L30fe94.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L30fe9a.  v3:= temp @kind object;
  #L30fe9c.  if v0 != v3 then goto L30fea2;
  #L30fea0.  return v2;
  #L30fea2.  v2:= new `kotlinx.coroutines.internal.t`;
  #L30fea6.  v3:= 8I;
  #L30feaa.  call `<init>`(v2, v3, v1) @signature `Lkotlinx/coroutines/internal/t;.<init>:(IZ)V` @kind direct;
  #L30feb0.  v3:= v0 @kind object;
  #L30feb2.  v3:= (`java.lang.Runnable`) v3 @kind object;
  #L30feb6.  call temp:= `a`(v2, v3) @signature `Lkotlinx/coroutines/internal/t;.a:(Ljava/lang/Object;)I` @kind virtual;
  #L30febc.  call temp:= `a`(v2, v6) @signature `Lkotlinx/coroutines/internal/t;.a:(Ljava/lang/Object;)I` @kind virtual;
  #L30fec2.  v3:= `@@kotlinx.coroutines.i1.l` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L30fec6.  call temp:= `compareAndSet`(v3, v5, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30fecc.  v0:= temp;
  #L30fece.  if v0 == 0 then goto L30fe28;
  #L30fed2.  return v1;
}
procedure `boolean` `c1`(`kotlinx.coroutines.i1` v1 @kind this) @signature `Lkotlinx/coroutines/i1;.c1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L30fee4.  v0:= v1.`kotlinx.coroutines.i1._isCompleted` @type ^`int`;
  #L30fee8.  return v0;
}
procedure `void` `f1`(`kotlinx.coroutines.i1` v3 @kind this) @signature `Lkotlinx/coroutines/i1;.f1:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31033c.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L310342.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L310348.  v0:= temp @kind wide;
  #L31034a.  v2:= v3.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L31034e.  v2:= (`kotlinx.coroutines.i1$c`) v2 @kind object;
  #L310352.  if v2 == 0 then goto L310370;
  #L310356.  call temp:= `i`(v2) @signature `Lkotlinx/coroutines/internal/k0;.i:()Lkotlinx/coroutines/internal/l0;` @kind virtual;
  #L31035c.  v2:= temp @kind object;
  #L31035e.  v2:= (`kotlinx.coroutines.i1$b`) v2 @kind object;
  #L310362.  if v2 != 0 then goto L310368;
  #L310366.  goto L310370;
  #L310368.  call `V0`(v3, v0, v2) @signature `Lkotlinx/coroutines/j1;.V0:(JLkotlinx/coroutines/i1$b;)V` @kind virtual;
  #L31036e.  goto L31034a;
  #L310370.  return @kind void;
}
procedure `int` `i1`(`kotlinx.coroutines.i1` v3 @kind this, `long` v4 , `kotlinx.coroutines.i1$b` v6 @kind object) @signature `Lkotlinx/coroutines/i1;.i1:(JLkotlinx/coroutines/i1$b;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30ffa4.  call temp:= `c1`(v3) @signature `Lkotlinx/coroutines/i1;.c1:()Z` @kind direct;
  #L30ffaa.  v0:= temp;
  #L30ffac.  if v0 == 0 then goto L30ffb4;
  #L30ffb0.  v4:= 1I;
  #L30ffb2.  return v4;
  #L30ffb4.  v0:= v3.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L30ffb8.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L30ffbc.  if v0 != 0 then goto L30ffe4;
  #L30ffc0.  v0:= `@@kotlinx.coroutines.i1.m` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L30ffc4.  v1:= 0I;
  #L30ffc6.  v2:= new `kotlinx.coroutines.i1$c`;
  #L30ffca.  call `<init>`(v2, v4) @signature `Lkotlinx/coroutines/i1$c;.<init>:(J)V` @kind direct;
  #L30ffd0.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30ffd6.  v0:= v3.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L30ffda.  call `c`(v0) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;)V` @kind static;
  #L30ffe0.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L30ffe4.  call temp:= `h`(v6, v4, v0, v3) @signature `Lkotlinx/coroutines/i1$b;.h:(JLkotlinx/coroutines/i1$c;Lkotlinx/coroutines/i1;)I` @kind virtual;
  #L30ffea.  v4:= temp;
  #L30ffec.  return v4;
}
procedure `void` `j1`(`kotlinx.coroutines.i1` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/i1;.j1:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;

  #L310454.  v0.`kotlinx.coroutines.i1._isCompleted` @type ^`int` := v1;
  #L310458.  return @kind void;
}
procedure `boolean` `k1`(`kotlinx.coroutines.i1` v1 @kind this, `kotlinx.coroutines.i1$b` v2 @kind object) @signature `Lkotlinx/coroutines/i1;.k1:(Lkotlinx/coroutines/i1$b;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L30ff6c.  v0:= v1.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L30ff70.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L30ff74.  if v0 == 0 then goto L30ff86;
  #L30ff78.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/internal/k0;.e:()Lkotlinx/coroutines/internal/l0;` @kind virtual;
  #L30ff7e.  v0:= temp @kind object;
  #L30ff80.  v0:= (`kotlinx.coroutines.i1$b`) v0 @kind object;
  #L30ff84.  goto L30ff88;
  #L30ff86.  v0:= 0I;
  #L30ff88.  if v0 != v2 then goto L30ff90;
  #L30ff8c.  v2:= 1I;
  #L30ff8e.  goto L30ff92;
  #L30ff90.  v2:= 0I;
  #L30ff92.  return v2;
}
procedure `long` `E0`(`kotlinx.coroutines.i1` v6 @kind this) @signature `Lkotlinx/coroutines/i1;.E0:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L310078.  call temp:= `E0`(v6) @signature `Lkotlinx/coroutines/h1;.E0:()J` @kind super;
  #L31007e.  v0:= temp @kind wide;
  #L310080.  v2:= 0L;
  #L310084.  v4:= lcmp(v0, v2);
  #L310088.  if v4 != 0 then goto L31008e;
  #L31008c.  return v2 @kind wide;
  #L31008e.  v0:= v6.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` @kind object;
  #L310092.  v4:= 9223372036854775807L;
  #L31009c.  if v0 == 0 then goto L3100ca;
  #L3100a0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t` @kind boolean;
  #L3100a4.  if v1 == 0 then goto L3100ba;
  #L3100a8.  v0:= (`kotlinx.coroutines.internal.t`) v0 @kind object;
  #L3100ac.  call temp:= `g`(v0) @signature `Lkotlinx/coroutines/internal/t;.g:()Z` @kind virtual;
  #L3100b2.  v0:= temp;
  #L3100b4.  if v0 != 0 then goto L3100ca;
  #L3100b8.  return v2 @kind wide;
  #L3100ba.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3100c0.  v1:= temp @kind object;
  #L3100c2.  if v0 != v1 then goto L3100c8;
  #L3100c6.  return v4 @kind wide;
  #L3100c8.  return v2 @kind wide;
  #L3100ca.  v0:= v6.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L3100ce.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L3100d2.  if v0 == 0 then goto L310106;
  #L3100d6.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/internal/k0;.e:()Lkotlinx/coroutines/internal/l0;` @kind virtual;
  #L3100dc.  v0:= temp @kind object;
  #L3100de.  v0:= (`kotlinx.coroutines.i1$b`) v0 @kind object;
  #L3100e2.  if v0 != 0 then goto L3100e8;
  #L3100e6.  goto L310106;
  #L3100e8.  v0:= v0.`kotlinx.coroutines.i1$b.g` @type ^`long` @kind wide;
  #L3100ec.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L3100f2.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L3100f8.  v4:= temp @kind wide;
  #L3100fa.  v0:= v0 - v4 @kind long;
  #L3100fc.  call temp:= `b`(v0, v2) @signature `Lkotlin/ranges/l;.b:(JJ)J` @kind static;
  #L310102.  v0:= temp @kind wide;
  #L310104.  return v0 @kind wide;
  #L310106.  return v4 @kind wide;
}
procedure `void` `a1`(`kotlinx.coroutines.i1` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/i1;.a1:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31030c.  call temp:= `b1`(v1, v2) @signature `Lkotlinx/coroutines/i1;.b1:(Ljava/lang/Runnable;)Z` @kind direct;
  #L310312.  v0:= temp;
  #L310314.  if v0 == 0 then goto L310320;
  #L310318.  call `W0`(v1) @signature `Lkotlinx/coroutines/j1;.W0:()V` @kind virtual;
  #L31031e.  goto L31032a;
  #L310320.  v0:= `@@kotlinx.coroutines.s0.n` @type ^`kotlinx.coroutines.s0` @kind object;
  #L310324.  call `a1`(v0, v2) @signature `Lkotlinx/coroutines/s0;.a1:(Ljava/lang/Runnable;)V` @kind virtual;
  #L31032a.  return @kind void;
}
procedure `boolean` `d1`(`kotlinx.coroutines.i1` v4 @kind this) @signature `Lkotlinx/coroutines/i1;.d1:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30fefc.  call temp:= `S0`(v4) @signature `Lkotlinx/coroutines/h1;.S0:()Z` @kind virtual;
  #L30ff02.  v0:= temp;
  #L30ff04.  v1:= 0I;
  #L30ff06.  if v0 != 0 then goto L30ff0c;
  #L30ff0a.  return v1;
  #L30ff0c.  v0:= v4.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L30ff10.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L30ff14.  if v0 == 0 then goto L30ff26;
  #L30ff18.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/k0;.d:()Z` @kind virtual;
  #L30ff1e.  v0:= temp;
  #L30ff20.  if v0 != 0 then goto L30ff26;
  #L30ff24.  return v1;
  #L30ff26.  v0:= v4.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` @kind object;
  #L30ff2a.  v2:= 1I;
  #L30ff2c.  if v0 != 0 then goto L30ff34;
  #L30ff30.  v1:= 1I;
  #L30ff32.  goto L30ff58;
  #L30ff34.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t` @kind boolean;
  #L30ff38.  if v3 == 0 then goto L30ff4a;
  #L30ff3c.  v0:= (`kotlinx.coroutines.internal.t`) v0 @kind object;
  #L30ff40.  call temp:= `g`(v0) @signature `Lkotlinx/coroutines/internal/t;.g:()Z` @kind virtual;
  #L30ff46.  v1:= temp;
  #L30ff48.  goto L30ff58;
  #L30ff4a.  call temp:= `a`() @signature `Lkotlinx/coroutines/l1;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L30ff50.  v3:= temp @kind object;
  #L30ff52.  if v0 != v3 then goto L30ff58;
  #L30ff56.  goto L30ff30;
  #L30ff58.  return v1;
}
procedure `long` `e1`(`kotlinx.coroutines.i1` v9 @kind this) @signature `Lkotlinx/coroutines/i1;.e1:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L310118.  call temp:= `T0`(v9) @signature `Lkotlinx/coroutines/h1;.T0:()Z` @kind virtual;
  #L31011e.  v0:= temp;
  #L310120.  v1:= 0L;
  #L310124.  if v0 == 0 then goto L31012a;
  #L310128.  return v1 @kind wide;
  #L31012a.  v0:= v9.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` @kind object;
  #L31012e.  v0:= (`kotlinx.coroutines.i1$c`) v0 @kind object;
  #L310132.  if v0 == 0 then goto L3101a2;
  #L310136.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/internal/k0;.d:()Z` @kind virtual;
  #L31013c.  v3:= temp;
  #L31013e.  if v3 != 0 then goto L3101a2;
  #L310142.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L310148.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L31014e.  v3:= temp @kind wide;
  #L310150.  @monitorenter v0
  #L310152.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/k0;.b:()Lkotlinx/coroutines/internal/l0;` @kind virtual;
  #L310158.  v5:= temp @kind object;
  #L31015a.  v6:= 0I;
  #L31015c.  if v5 != 0 then goto L310164;
  #L310160.  @monitorexit v0
  #L310162.  goto L310192;
  #L310164.  v5:= (`kotlinx.coroutines.i1$b`) v5 @kind object;
  #L310168.  call temp:= `j`(v5, v3) @signature `Lkotlinx/coroutines/i1$b;.j:(J)Z` @kind virtual;
  #L31016e.  v7:= temp;
  #L310170.  v8:= 0I;
  #L310172.  if v7 == 0 then goto L310180;
  #L310176.  call temp:= `b1`(v9, v5) @signature `Lkotlinx/coroutines/i1;.b1:(Ljava/lang/Runnable;)Z` @kind direct;
  #L31017c.  v5:= temp;
  #L31017e.  goto L310182;
  #L310180.  v5:= 0I;
  #L310182.  if v5 == 0 then goto L310190;
  #L310186.  call temp:= `h`(v0, v8) @signature `Lkotlinx/coroutines/internal/k0;.h:(I)Lkotlinx/coroutines/internal/l0;` @kind virtual;
  #L31018c.  v5:= temp @kind object;
  #L31018e.  v6:= v5 @kind object;
  #L310190.  @monitorexit v0
  #L310192.  v6:= (`kotlinx.coroutines.i1$b`) v6 @kind object;
  #L310196.  if v6 != 0 then goto L310150;
  #L31019a.  goto L3101a2;
  #L31019c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31019e.  @monitorexit v0
  #L3101a0.  throw v1;
  #L3101a2.  call temp:= `Z0`(v9) @signature `Lkotlinx/coroutines/i1;.Z0:()Ljava/lang/Runnable;` @kind direct;
  #L3101a8.  v0:= temp @kind object;
  #L3101aa.  if v0 == 0 then goto L3101b6;
  #L3101ae.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3101b4.  return v1 @kind wide;
  #L3101b6.  call temp:= `E0`(v9) @signature `Lkotlinx/coroutines/i1;.E0:()J` @kind virtual;
  #L3101bc.  v0:= temp @kind wide;
  #L3101be.  return v0 @kind wide;
  catch `java.lang.Throwable` @[L310152..L31015a] goto L31019c;
  catch `java.lang.Throwable` @[L310164..L31018e] goto L31019c;
}
procedure `void` `g1`(`kotlinx.coroutines.i1` v1 @kind this) @signature `Lkotlinx/coroutines/i1;.g1:()V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L310384.  v0:= 0I;
  #L310386.  v1.`kotlinx.coroutines.i1._queue` @type ^`java.lang.Object` := v0 @kind object;
  #L31038a.  v1.`kotlinx.coroutines.i1._delayed` @type ^`java.lang.Object` := v0 @kind object;
  #L31038e.  return @kind void;
}
procedure `void` `h1`(`kotlinx.coroutines.i1` v2 @kind this, `long` v3 , `kotlinx.coroutines.i1$b` v5 @kind object) @signature `Lkotlinx/coroutines/i1;.h1:(JLkotlinx/coroutines/i1$b;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3103a0.  call temp:= `i1`(v2, v3, v5) @signature `Lkotlinx/coroutines/i1;.i1:(JLkotlinx/coroutines/i1$b;)I` @kind direct;
  #L3103a6.  v0:= temp;
  #L3103a8.  if v0 == 0 then goto L3103da;
  #L3103ac.  v1:= 1I;
  #L3103ae.  if v0 == v1 then goto L3103d2;
  #L3103b2.  v3:= 2I;
  #L3103b4.  if v0 != v3 then goto L3103ba;
  #L3103b8.  goto L3103ec;
  #L3103ba.  v3:= new `java.lang.IllegalStateException`;
  #L3103be.  v4:= "unexpected result" @kind object;
  #L3103c2.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3103c8.  v4:= temp @kind object;
  #L3103ca.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3103d0.  throw v3;
  #L3103d2.  call `V0`(v2, v3, v5) @signature `Lkotlinx/coroutines/j1;.V0:(JLkotlinx/coroutines/i1$b;)V` @kind virtual;
  #L3103d8.  goto L3103ec;
  #L3103da.  call temp:= `k1`(v2, v5) @signature `Lkotlinx/coroutines/i1;.k1:(Lkotlinx/coroutines/i1$b;)Z` @kind direct;
  #L3103e0.  v3:= temp;
  #L3103e2.  if v3 == 0 then goto L3103ec;
  #L3103e6.  call `W0`(v2) @signature `Lkotlinx/coroutines/j1;.W0:()V` @kind virtual;
  #L3103ec.  return @kind void;
}
procedure `void` `l0`(`kotlinx.coroutines.i1` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/i1;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3102f4.  call `a1`(v0, v2) @signature `Lkotlinx/coroutines/i1;.a1:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3102fa.  return @kind void;
}
procedure `void` `s`(`kotlinx.coroutines.i1` v3 @kind this, `long` v4 , `kotlinx.coroutines.l` v6 @kind object) @signature `Lkotlinx/coroutines/i1;.s:(JLkotlinx/coroutines/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L310400.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/l1;.c:(J)J` @kind static;
  #L310406.  v4:= temp @kind wide;
  #L310408.  v0:= 1.9999999999999998D;
  #L310412.  v2:= lcmp(v4, v0);
  #L310416.  if v2 >= 0 then goto L310440;
  #L31041a.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L310420.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L310426.  v0:= temp @kind wide;
  #L310428.  v2:= new `kotlinx.coroutines.i1$a`;
  #L31042c.  v4:= v4 + v0 @kind long;
  #L31042e.  call `<init>`(v2, v3, v4, v6) @signature `Lkotlinx/coroutines/i1$a;.<init>:(Lkotlinx/coroutines/i1;JLkotlinx/coroutines/l;)V` @kind direct;
  #L310434.  call `h1`(v3, v0, v2) @signature `Lkotlinx/coroutines/i1;.h1:(JLkotlinx/coroutines/i1$b;)V` @kind virtual;
  #L31043a.  call `a`(v6, v2) @signature `Lkotlinx/coroutines/o;.a:(Lkotlinx/coroutines/l;Lkotlinx/coroutines/e1;)V` @kind static;
  #L310440.  return @kind void;
}
procedure `void` `shutdown`(`kotlinx.coroutines.i1` v5 @kind this) @signature `Lkotlinx/coroutines/i1;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31046c.  v0:= `@@kotlinx.coroutines.r2.a` @type ^`kotlinx.coroutines.r2` @kind object;
  #L310470.  call `b`(v0) @signature `Lkotlinx/coroutines/r2;.b:()V` @kind virtual;
  #L310476.  v0:= 1I;
  #L310478.  call `j1`(v5, v0) @signature `Lkotlinx/coroutines/i1;.j1:(Z)V` @kind direct;
  #L31047e.  call `Y0`(v5) @signature `Lkotlinx/coroutines/i1;.Y0:()V` @kind direct;
  #L310484.  call temp:= `e1`(v5) @signature `Lkotlinx/coroutines/i1;.e1:()J` @kind virtual;
  #L31048a.  v0:= temp @kind wide;
  #L31048c.  v2:= 0L;
  #L310490.  v4:= lcmp(v0, v2);
  #L310494.  if v4 <= 0 then goto L310484;
  #L310498.  call `f1`(v5) @signature `Lkotlinx/coroutines/i1;.f1:()V` @kind direct;
  #L31049e.  return @kind void;
}
