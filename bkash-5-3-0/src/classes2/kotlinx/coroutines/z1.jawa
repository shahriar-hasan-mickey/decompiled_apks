record `kotlinx.coroutines.z1` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.e2` @kind class, `kotlinx.coroutines.u` @kind interface {
  `boolean` `kotlinx.coroutines.z1.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.z1` v1 @kind this, `kotlinx.coroutines.w1` v2 @kind object) @signature `Lkotlinx/coroutines/z1;.<init>:(Lkotlinx/coroutines/w1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L311170.  v0:= 1I;
  #L311172.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/e2;.<init>:(Z)V` @kind direct;
  #L311178.  call `T`(v1, v2) @signature `Lkotlinx/coroutines/e2;.T:(Lkotlinx/coroutines/w1;)V` @kind virtual;
  #L31117e.  call temp:= `A0`(v1) @signature `Lkotlinx/coroutines/z1;.A0:()Z` @kind direct;
  #L311184.  v2:= temp;
  #L311186.  v1.`kotlinx.coroutines.z1.h` @type ^`boolean` := v2 @kind boolean;
  #L31118a.  return @kind void;
}
procedure `boolean` `A0`(`kotlinx.coroutines.z1` v4 @kind this) @signature `Lkotlinx/coroutines/z1;.A0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3110f8.  call temp:= `O`(v4) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L3110fe.  v0:= temp @kind object;
  #L311100.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L311104.  v2:= 0I;
  #L311106.  if v1 == 0 then goto L311110;
  #L31110a.  v0:= (`kotlinx.coroutines.s`) v0 @kind object;
  #L31110e.  goto L311112;
  #L311110.  v0:= v2 @kind object;
  #L311112.  v1:= 0I;
  #L311114.  if v0 == 0 then goto L31115e;
  #L311118.  call temp:= `x`(v0) @signature `Lkotlinx/coroutines/d2;.x:()Lkotlinx/coroutines/e2;` @kind virtual;
  #L31111e.  v0:= temp @kind object;
  #L311120.  if v0 != 0 then goto L311126;
  #L311124.  goto L31115e;
  #L311126.  call temp:= `L`(v0) @signature `Lkotlinx/coroutines/e2;.L:()Z` @kind virtual;
  #L31112c.  v3:= temp;
  #L31112e.  if v3 == 0 then goto L311136;
  #L311132.  v0:= 1I;
  #L311134.  return v0;
  #L311136.  call temp:= `O`(v0) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L31113c.  v0:= temp @kind object;
  #L31113e.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L311142.  if v3 == 0 then goto L31114c;
  #L311146.  v0:= (`kotlinx.coroutines.s`) v0 @kind object;
  #L31114a.  goto L31114e;
  #L31114c.  v0:= v2 @kind object;
  #L31114e.  if v0 == 0 then goto L31115e;
  #L311152.  call temp:= `x`(v0) @signature `Lkotlinx/coroutines/d2;.x:()Lkotlinx/coroutines/e2;` @kind virtual;
  #L311158.  v0:= temp @kind object;
  #L31115a.  if v0 != 0 then goto L311126;
  #L31115e.  return v1;
}
procedure `boolean` `L`(`kotlinx.coroutines.z1` v1 @kind this) @signature `Lkotlinx/coroutines/z1;.L:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3110cc.  v0:= v1.`kotlinx.coroutines.z1.h` @type ^`boolean` @kind boolean;
  #L3110d0.  return v0;
}
procedure `boolean` `M`(`kotlinx.coroutines.z1` v1 @kind this) @signature `Lkotlinx/coroutines/z1;.M:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3110e4.  v0:= 1I;
  #L3110e6.  return v0;
}
