record `kotlinx.coroutines.s0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.i1` @kind class, `java.lang.Runnable` @kind interface {
}
global `java.lang.Thread` `@@kotlinx.coroutines.s0._thread` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `int` `@@kotlinx.coroutines.s0.debugStatus` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `kotlinx.coroutines.s0` `@@kotlinx.coroutines.s0.n` @AccessFlag PUBLIC_STATIC_FINAL;
global `long` `@@kotlinx.coroutines.s0.o` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/s0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30ede8.  v0:= new `kotlinx.coroutines.s0`;
  #L30edec.  call `<init>`(v0) @signature `Lkotlinx/coroutines/s0;.<init>:()V` @kind direct;
  #L30edf2.  `@@kotlinx.coroutines.s0.n` @type ^`kotlinx.coroutines.s0` := v0 @kind object;
  #L30edf6.  v1:= 0I;
  #L30edf8.  v2:= 1I;
  #L30edfa.  v3:= 0I;
  #L30edfc.  call `Q0`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/h1;.Q0:(Lkotlinx/coroutines/h1;ZILjava/lang/Object;)V` @kind static;
  #L30ee02.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30ee06.  v1:= 1000L;
  #L30ee0a.  v3:= "kotlinx.coroutines.DefaultExecutor.keepAlive" @kind object;
  #L30ee0e.  call temp:= `getLong`(v3, v1) @signature `Ljava/lang/Long;.getLong:(Ljava/lang/String;J)Ljava/lang/Long;` @kind static;
  #L30ee14.  v1:= temp @kind object;
  #L30ee16.  goto L30ee20;
  #L30ee18.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L30ee1e.  v1:= temp @kind object;
  #L30ee20.  call temp:= `longValue`(v1) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L30ee26.  v1:= temp @kind wide;
  #L30ee28.  call temp:= `toNanos`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L30ee2e.  v0:= temp @kind wide;
  #L30ee30.  `@@kotlinx.coroutines.s0.o` @type ^`long` := v0 @kind wide;
  #L30ee34.  return @kind void;
  catch `java.lang.SecurityException` @[L30ee0a..L30ee16] goto L30ee18;
}
procedure `void` `<init>`(`kotlinx.coroutines.s0` v0 @kind this) @signature `Lkotlinx/coroutines/s0;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L30ee58.  call `<init>`(v0) @signature `Lkotlinx/coroutines/i1;.<init>:()V` @kind direct;
  #L30ee5e.  return @kind void;
}
procedure `void` `l1`(`kotlinx.coroutines.s0` v1 @kind this) @signature `Lkotlinx/coroutines/s0;.l1:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L30ee70.  @monitorenter v1
  #L30ee72.  call temp:= `o1`(v1) @signature `Lkotlinx/coroutines/s0;.o1:()Z` @kind direct;
  #L30ee78.  v0:= temp;
  #L30ee7a.  if v0 != 0 then goto L30ee82;
  #L30ee7e.  @monitorexit v1
  #L30ee80.  return @kind void;
  #L30ee82.  v0:= 3I;
  #L30ee84.  `@@kotlinx.coroutines.s0.debugStatus` @type ^`int` := v0;
  #L30ee88.  call `g1`(v1) @signature `Lkotlinx/coroutines/i1;.g1:()V` @kind virtual;
  #L30ee8e.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30ee94.  @monitorexit v1
  #L30ee96.  return @kind void;
  #L30ee98.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ee9a.  @monitorexit v1
  #L30ee9c.  throw v0;
  catch `java.lang.Throwable` @[L30ee72..L30ee7a] goto L30ee98;
  catch `java.lang.Throwable` @[L30ee84..L30ee94] goto L30ee98;
}
procedure `java.lang.Thread` `m1`(`kotlinx.coroutines.s0` v2 @kind this) @signature `Lkotlinx/coroutines/s0;.m1:()Ljava/lang/Thread;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L30ed74.  @monitorenter v2
  #L30ed76.  v0:= `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` @kind object;
  #L30ed7a.  if v0 != 0 then goto L30ed9e;
  #L30ed7e.  v0:= new `java.lang.Thread`;
  #L30ed82.  v1:= "kotlinx.coroutines.DefaultExecutor" @kind object;
  #L30ed86.  call `<init>`(v0, v2, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L30ed8c.  `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L30ed90.  v1:= 1I;
  #L30ed92.  call `setDaemon`(v0, v1) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L30ed98.  call `start`(v0) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L30ed9e.  @monitorexit v2
  #L30eda0.  return v0 @kind object;
  #L30eda2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30eda4.  @monitorexit v2
  #L30eda6.  throw v0;
  catch `java.lang.Throwable` @[L30ed76..L30ed9e] goto L30eda2;
}
procedure `boolean` `n1`(`kotlinx.coroutines.s0` v2 @kind this) @signature `Lkotlinx/coroutines/s0;.n1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L30ecd4.  v0:= `@@kotlinx.coroutines.s0.debugStatus` @type ^`int`;
  #L30ecd8.  v1:= 4I;
  #L30ecda.  if v0 != v1 then goto L30ece2;
  #L30ecde.  v0:= 1I;
  #L30ece0.  goto L30ece4;
  #L30ece2.  v0:= 0I;
  #L30ece4.  return v0;
}
procedure `boolean` `o1`(`kotlinx.coroutines.s0` v2 @kind this) @signature `Lkotlinx/coroutines/s0;.o1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L30ecf8.  v0:= `@@kotlinx.coroutines.s0.debugStatus` @type ^`int`;
  #L30ecfc.  v1:= 2I;
  #L30ecfe.  if v0 == v1 then goto L30ed0e;
  #L30ed02.  v1:= 3I;
  #L30ed04.  if v0 != v1 then goto L30ed0a;
  #L30ed08.  goto L30ed0e;
  #L30ed0a.  v0:= 0I;
  #L30ed0c.  goto L30ed10;
  #L30ed0e.  v0:= 1I;
  #L30ed10.  return v0;
}
procedure `boolean` `p1`(`kotlinx.coroutines.s0` v1 @kind this) @signature `Lkotlinx/coroutines/s0;.p1:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L30ed24.  @monitorenter v1
  #L30ed26.  call temp:= `o1`(v1) @signature `Lkotlinx/coroutines/s0;.o1:()Z` @kind direct;
  #L30ed2c.  v0:= temp;
  #L30ed2e.  if v0 == 0 then goto L30ed38;
  #L30ed32.  v0:= 0I;
  #L30ed34.  @monitorexit v1
  #L30ed36.  return v0;
  #L30ed38.  v0:= 1I;
  #L30ed3a.  `@@kotlinx.coroutines.s0.debugStatus` @type ^`int` := v0;
  #L30ed3e.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30ed44.  @monitorexit v1
  #L30ed46.  return v0;
  #L30ed48.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ed4a.  @monitorexit v1
  #L30ed4c.  throw v0;
  catch `java.lang.Throwable` @[L30ed26..L30ed2e] goto L30ed48;
  catch `java.lang.Throwable` @[L30ed3a..L30ed44] goto L30ed48;
}
procedure `void` `q1`(`kotlinx.coroutines.s0` v2 @kind this) @signature `Lkotlinx/coroutines/s0;.q1:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L30f088.  v0:= new `java.util.concurrent.RejectedExecutionException`;
  #L30f08c.  v1:= "DefaultExecutor was shut down. This error indicates that Dispatchers.shutdown() was invoked prior to completion of exiting coroutines, leaving coroutines in incomplete state. Please refer to Dispatchers.shutdown documentation for more details" @kind object;
  #L30f090.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f096.  throw v0;
}
procedure `java.lang.Thread` `U0`(`kotlinx.coroutines.s0` v1 @kind this) @signature `Lkotlinx/coroutines/s0;.U0:()Ljava/lang/Thread;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L30edc4.  v0:= `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` @kind object;
  #L30edc8.  if v0 != 0 then goto L30edd4;
  #L30edcc.  call temp:= `m1`(v1) @signature `Lkotlinx/coroutines/s0;.m1:()Ljava/lang/Thread;` @kind direct;
  #L30edd2.  v0:= temp @kind object;
  #L30edd4.  return v0 @kind object;
}
procedure `void` `V0`(`kotlinx.coroutines.s0` v0 @kind this, `long` v1 , `kotlinx.coroutines.i1$b` v3 @kind object) @signature `Lkotlinx/coroutines/s0;.V0:(JLkotlinx/coroutines/i1$b;)V` @AccessFlag PROTECTED {
    temp;

  #L30eef0.  call `q1`(v0) @signature `Lkotlinx/coroutines/s0;.q1:()V` @kind direct;
  #L30eef6.  return @kind void;
}
procedure `void` `a1`(`kotlinx.coroutines.s0` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/s0;.a1:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30eec4.  call temp:= `n1`(v1) @signature `Lkotlinx/coroutines/s0;.n1:()Z` @kind direct;
  #L30eeca.  v0:= temp;
  #L30eecc.  if v0 == 0 then goto L30eed6;
  #L30eed0.  call `q1`(v1) @signature `Lkotlinx/coroutines/s0;.q1:()V` @kind direct;
  #L30eed6.  call `a1`(v1, v2) @signature `Lkotlinx/coroutines/i1;.a1:(Ljava/lang/Runnable;)V` @kind super;
  #L30eedc.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.s0` v12 @kind this) @signature `Lkotlinx/coroutines/s0;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L30ef08.  v0:= `@@kotlinx.coroutines.r2.a` @type ^`kotlinx.coroutines.r2` @kind object;
  #L30ef0c.  call `c`(v0, v12) @signature `Lkotlinx/coroutines/r2;.c:(Lkotlinx/coroutines/h1;)V` @kind virtual;
  #L30ef12.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30ef18.  v0:= 0I;
  #L30ef1a.  call temp:= `p1`(v12) @signature `Lkotlinx/coroutines/s0;.p1:()Z` @kind direct;
  #L30ef20.  v1:= temp;
  #L30ef22.  if v1 != 0 then goto L30ef4a;
  #L30ef26.  `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L30ef2a.  call `l1`(v12) @signature `Lkotlinx/coroutines/s0;.l1:()V` @kind direct;
  #L30ef30.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30ef36.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/i1;.d1:()Z` @kind virtual;
  #L30ef3c.  v0:= temp;
  #L30ef3e.  if v0 != 0 then goto L30ef48;
  #L30ef42.  call temp:= `U0`(v12) @signature `Lkotlinx/coroutines/s0;.U0:()Ljava/lang/Thread;` @kind virtual;
  #L30ef48.  return @kind void;
  #L30ef4a.  v1:= 9223372036854775807L;
  #L30ef54.  v3:= v1 @kind wide;
  #L30ef56.  call temp:= `interrupted`() @signature `Ljava/lang/Thread;.interrupted:()Z` @kind static;
  #L30ef5c.  call temp:= `e1`(v12) @signature `Lkotlinx/coroutines/i1;.e1:()J` @kind virtual;
  #L30ef62.  v5:= temp @kind wide;
  #L30ef64.  v7:= 0L;
  #L30ef68.  v9:= lcmp(v5, v1);
  #L30ef6c.  if v9 != 0 then goto L30efc6;
  #L30ef70.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30ef76.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L30ef7c.  v9:= temp @kind wide;
  #L30ef7e.  v11:= lcmp(v3, v1);
  #L30ef82.  if v11 != 0 then goto L30ef8c;
  #L30ef86.  v3:= `@@kotlinx.coroutines.s0.o` @type ^`long` @kind wide;
  #L30ef8a.  v3:= v3 + v9 @kind long;
  #L30ef8c.  v9:= v3 - v9 @kind long;
  #L30ef90.  v11:= lcmp(v9, v7);
  #L30ef94.  if v11 > 0 then goto L30efbc;
  #L30ef98.  `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L30ef9c.  call `l1`(v12) @signature `Lkotlinx/coroutines/s0;.l1:()V` @kind direct;
  #L30efa2.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30efa8.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/i1;.d1:()Z` @kind virtual;
  #L30efae.  v0:= temp;
  #L30efb0.  if v0 != 0 then goto L30efba;
  #L30efb4.  call temp:= `U0`(v12) @signature `Lkotlinx/coroutines/s0;.U0:()Ljava/lang/Thread;` @kind virtual;
  #L30efba.  return @kind void;
  #L30efbc.  call temp:= `d`(v5, v9) @signature `Lkotlin/ranges/l;.d:(JJ)J` @kind static;
  #L30efc2.  v5:= temp @kind wide;
  #L30efc4.  goto L30efc8;
  #L30efc6.  v3:= v1 @kind wide;
  #L30efc8.  v9:= lcmp(v5, v7);
  #L30efcc.  if v9 <= 0 then goto L30ef56;
  #L30efd0.  call temp:= `o1`(v12) @signature `Lkotlinx/coroutines/s0;.o1:()Z` @kind direct;
  #L30efd6.  v7:= temp;
  #L30efd8.  if v7 == 0 then goto L30f000;
  #L30efdc.  `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L30efe0.  call `l1`(v12) @signature `Lkotlinx/coroutines/s0;.l1:()V` @kind direct;
  #L30efe6.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30efec.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/i1;.d1:()Z` @kind virtual;
  #L30eff2.  v0:= temp;
  #L30eff4.  if v0 != 0 then goto L30effe;
  #L30eff8.  call temp:= `U0`(v12) @signature `Lkotlinx/coroutines/s0;.U0:()Ljava/lang/Thread;` @kind virtual;
  #L30effe.  return @kind void;
  #L30f000.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30f006.  call `parkNanos`(v12, v5) @signature `Ljava/util/concurrent/locks/LockSupport;.parkNanos:(Ljava/lang/Object;J)V` @kind static;
  #L30f00c.  goto L30ef56;
  #L30f00e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30f010.  `@@kotlinx.coroutines.s0._thread` @type ^`java.lang.Thread` := v0 @kind object;
  #L30f014.  call `l1`(v12) @signature `Lkotlinx/coroutines/s0;.l1:()V` @kind direct;
  #L30f01a.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L30f020.  call temp:= `d1`(v12) @signature `Lkotlinx/coroutines/i1;.d1:()Z` @kind virtual;
  #L30f026.  v0:= temp;
  #L30f028.  if v0 != 0 then goto L30f032;
  #L30f02c.  call temp:= `U0`(v12) @signature `Lkotlinx/coroutines/s0;.U0:()Ljava/lang/Thread;` @kind virtual;
  #L30f032.  throw v1;
  catch `java.lang.Throwable` @[L30ef1a..L30ef22] goto L30f00e;
  catch `java.lang.Throwable` @[L30ef56..L30ef8a] goto L30f00e;
  catch `java.lang.Throwable` @[L30efbc..L30efd8] goto L30f00e;
  catch `java.lang.Throwable` @[L30f000..L30f00c] goto L30f00e;
}
procedure `void` `shutdown`(`kotlinx.coroutines.s0` v1 @kind this) @signature `Lkotlinx/coroutines/s0;.shutdown:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30f068.  v0:= 4I;
  #L30f06a.  `@@kotlinx.coroutines.s0.debugStatus` @type ^`int` := v0;
  #L30f06e.  call `shutdown`(v1) @signature `Lkotlinx/coroutines/i1;.shutdown:()V` @kind super;
  #L30f074.  return @kind void;
}
