record `kotlinx.coroutines.e2` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.w1` @kind interface, `kotlinx.coroutines.t` @kind interface, `kotlinx.coroutines.m2` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.e2._parentHandle` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `java.lang.Object` `kotlinx.coroutines.e2._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.e2.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/e2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L312eec.  v0:= constclass @type ^`kotlinx.coroutines.e2` @kind object;
  #L312ef0.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L312ef4.  v2:= "_state" @kind object;
  #L312ef8.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L312efe.  v0:= temp @kind object;
  #L312f00.  `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L312f04.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.e2` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/e2;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L312f18.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L312f1e.  if v1 == 0 then goto L312f2c;
  #L312f22.  call temp:= `c`() @signature `Lkotlinx/coroutines/f2;.c:()Lkotlinx/coroutines/g1;` @kind static;
  #L312f28.  v1:= temp @kind object;
  #L312f2a.  goto L312f34;
  #L312f2c.  call temp:= `d`() @signature `Lkotlinx/coroutines/f2;.d:()Lkotlinx/coroutines/g1;` @kind static;
  #L312f32.  v1:= temp @kind object;
  #L312f34.  v0.`kotlinx.coroutines.e2._state` @type ^`java.lang.Object` := v1 @kind object;
  #L312f38.  v1:= 0I;
  #L312f3a.  v0.`kotlinx.coroutines.e2._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L312f3e.  return @kind void;
}
procedure `void` `D`(`kotlinx.coroutines.e2` v3 @kind this, `kotlinx.coroutines.r1` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/e2;.D:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L313078.  call temp:= `O`(v3) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L31307e.  v0:= temp @kind object;
  #L313080.  if v0 == 0 then goto L313094;
  #L313084.  call `dispose`(v0) @signature `Lkotlinx/coroutines/e1;.dispose:()V` @kind interface;
  #L31308a.  v0:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L31308e.  call `p0`(v3, v0) @signature `Lkotlinx/coroutines/e2;.p0:(Lkotlinx/coroutines/r;)V` @kind virtual;
  #L313094.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L313098.  v1:= 0I;
  #L31309a.  if v0 == 0 then goto L3130a4;
  #L31309e.  v5:= (`kotlinx.coroutines.w`) v5 @kind object;
  #L3130a2.  goto L3130a6;
  #L3130a4.  v5:= v1 @kind object;
  #L3130a6.  if v5 == 0 then goto L3130ae;
  #L3130aa.  v1:= v5.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L3130ae.  v5:= instanceof @variable v4 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L3130b2.  if v5 == 0 then goto L31310a;
  #L3130b6.  v5:= v4 @kind object;
  #L3130b8.  v5:= (`kotlinx.coroutines.d2`) v5 @kind object;
  #L3130bc.  call `w`(v5, v1) @signature `Lkotlinx/coroutines/y;.w:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3130c2.  goto L31311c;
  #L3130c4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3130c6.  v0:= new `kotlinx.coroutines.z`;
  #L3130ca.  v1:= new `java.lang.StringBuilder`;
  #L3130ce.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3130d4.  v2:= "Exception in completion handler " @kind object;
  #L3130d8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3130de.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3130e4.  v4:= " for " @kind object;
  #L3130e8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3130ee.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3130f4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3130fa.  v4:= temp @kind object;
  #L3130fc.  call `<init>`(v0, v4, v5) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313102.  call `S`(v3, v0) @signature `Lkotlinx/coroutines/e2;.S:(Ljava/lang/Throwable;)V` @kind virtual;
  #L313108.  goto L31311c;
  #L31310a.  call temp:= `f`(v4) @signature `Lkotlinx/coroutines/r1;.f:()Lkotlinx/coroutines/j2;` @kind interface;
  #L313110.  v4:= temp @kind object;
  #L313112.  if v4 == 0 then goto L31311c;
  #L313116.  call `g0`(v3, v4, v1) @signature `Lkotlinx/coroutines/e2;.g0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @kind direct;
  #L31311c.  return @kind void;
  catch `java.lang.Throwable` @[L3130b6..L3130c2] goto L3130c4;
}
procedure `void` `E`(`kotlinx.coroutines.e2` v1 @kind this, `kotlinx.coroutines.e2$c` v2 @kind object, `kotlinx.coroutines.s` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.E:(Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L31313c.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L313142.  v0:= temp;
  #L313144.  if v0 == 0 then goto L31316c;
  #L313148.  call temp:= `P`(v1) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L31314e.  v0:= temp @kind object;
  #L313150.  if v0 != v2 then goto L313158;
  #L313154.  v0:= 1I;
  #L313156.  goto L31315a;
  #L313158.  v0:= 0I;
  #L31315a.  if v0 == 0 then goto L313160;
  #L31315e.  goto L31316c;
  #L313160.  v2:= new `java.lang.AssertionError`;
  #L313164.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31316a.  throw v2;
  #L31316c.  call temp:= `e0`(v1, v3) @signature `Lkotlinx/coroutines/e2;.e0:(Lkotlinx/coroutines/internal/r;)Lkotlinx/coroutines/s;` @kind direct;
  #L313172.  v3:= temp @kind object;
  #L313174.  if v3 == 0 then goto L313186;
  #L313178.  call temp:= `z0`(v1, v2, v3, v4) @signature `Lkotlinx/coroutines/e2;.z0:(Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)Z` @kind direct;
  #L31317e.  v3:= temp;
  #L313180.  if v3 == 0 then goto L313186;
  #L313184.  return @kind void;
  #L313186.  call temp:= `G`(v1, v2, v4) @signature `Lkotlinx/coroutines/e2;.G:(Lkotlinx/coroutines/e2$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L31318c.  v2:= temp @kind object;
  #L31318e.  call `p`(v1, v2) @signature `Lkotlinx/coroutines/e2;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L313194.  return @kind void;
}
procedure `java.lang.Throwable` `F`(`kotlinx.coroutines.e2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.F:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L312760.  if v3 != 0 then goto L312768;
  #L312764.  v0:= 1I;
  #L312766.  goto L31276c;
  #L312768.  v0:= instanceof @variable v3 @type ^`java.lang.Throwable` @kind boolean;
  #L31276c.  if v0 == 0 then goto L312790;
  #L312770.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L312774.  if v3 != 0 then goto L3127a6;
  #L312778.  v3:= 0I;
  #L31277a.  v0:= new `kotlinx.coroutines.x1`;
  #L31277e.  call temp:= `l`(v2) @signature `Lkotlinx/coroutines/e2;.l:(Lkotlinx/coroutines/e2;)Ljava/lang/String;` @kind static;
  #L312784.  v1:= temp @kind object;
  #L312786.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L31278c.  v3:= v0 @kind object;
  #L31278e.  goto L3127a6;
  #L312790.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.ParentJob" @kind object;
  #L312794.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31279a.  v3:= (`kotlinx.coroutines.m2`) v3 @kind object;
  #L31279e.  call temp:= `V`(v3) @signature `Lkotlinx/coroutines/m2;.V:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L3127a4.  v3:= temp @kind object;
  #L3127a6.  return v3 @kind object;
}
procedure `java.lang.Object` `G`(`kotlinx.coroutines.e2` v7 @kind this, `kotlinx.coroutines.e2$c` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/e2;.G:(Lkotlinx/coroutines/e2$c;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L312054.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L31205a.  v0:= temp;
  #L31205c.  v1:= 1I;
  #L31205e.  v2:= 0I;
  #L312060.  if v0 == 0 then goto L312088;
  #L312064.  call temp:= `P`(v7) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L31206a.  v0:= temp @kind object;
  #L31206c.  if v0 != v8 then goto L312074;
  #L312070.  v0:= 1I;
  #L312072.  goto L312076;
  #L312074.  v0:= 0I;
  #L312076.  if v0 == 0 then goto L31207c;
  #L31207a.  goto L312088;
  #L31207c.  v8:= new `java.lang.AssertionError`;
  #L312080.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L312086.  throw v8;
  #L312088.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L31208e.  v0:= temp;
  #L312090.  if v0 == 0 then goto L3120b0;
  #L312094.  call temp:= `i`(v8) @signature `Lkotlinx/coroutines/e2$c;.i:()Z` @kind virtual;
  #L31209a.  v0:= temp;
  #L31209c.  v0:= v0 ^~ v1 @kind int;
  #L31209e.  if v0 == 0 then goto L3120a4;
  #L3120a2.  goto L3120b0;
  #L3120a4.  v8:= new `java.lang.AssertionError`;
  #L3120a8.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3120ae.  throw v8;
  #L3120b0.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L3120b6.  v0:= temp;
  #L3120b8.  if v0 == 0 then goto L3120d6;
  #L3120bc.  call temp:= `h`(v8) @signature `Lkotlinx/coroutines/e2$c;.h:()Z` @kind virtual;
  #L3120c2.  v0:= temp;
  #L3120c4.  if v0 == 0 then goto L3120ca;
  #L3120c8.  goto L3120d6;
  #L3120ca.  v8:= new `java.lang.AssertionError`;
  #L3120ce.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3120d4.  throw v8;
  #L3120d6.  v0:= instanceof @variable v9 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L3120da.  v3:= 0I;
  #L3120dc.  if v0 == 0 then goto L3120e8;
  #L3120e0.  v0:= v9 @kind object;
  #L3120e2.  v0:= (`kotlinx.coroutines.w`) v0 @kind object;
  #L3120e6.  goto L3120ea;
  #L3120e8.  v0:= v3 @kind object;
  #L3120ea.  if v0 == 0 then goto L3120f4;
  #L3120ee.  v0:= v0.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L3120f2.  goto L3120f6;
  #L3120f4.  v0:= v3 @kind object;
  #L3120f6.  @monitorenter v8
  #L3120f8.  call temp:= `g`(v8) @signature `Lkotlinx/coroutines/e2$c;.g:()Z` @kind virtual;
  #L3120fe.  v4:= temp;
  #L312100.  call temp:= `j`(v8, v0) @signature `Lkotlinx/coroutines/e2$c;.j:(Ljava/lang/Throwable;)Ljava/util/List;` @kind virtual;
  #L312106.  v5:= temp @kind object;
  #L312108.  call temp:= `K`(v7, v8, v5) @signature `Lkotlinx/coroutines/e2;.K:(Lkotlinx/coroutines/e2$c;Ljava/util/List;)Ljava/lang/Throwable;` @kind direct;
  #L31210e.  v6:= temp @kind object;
  #L312110.  if v6 == 0 then goto L31211a;
  #L312114.  call `o`(v7, v6, v5) @signature `Lkotlinx/coroutines/e2;.o:(Ljava/lang/Throwable;Ljava/util/List;)V` @kind direct;
  #L31211a.  @monitorexit v8
  #L31211c.  if v6 != 0 then goto L312122;
  #L312120.  goto L312134;
  #L312122.  if v6 != v0 then goto L312128;
  #L312126.  goto L312134;
  #L312128.  v9:= new `kotlinx.coroutines.w`;
  #L31212c.  v0:= 2I;
  #L31212e.  call `<init>`(v9, v6, v2, v0, v3) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/g;)V` @kind direct;
  #L312134.  if v6 == 0 then goto L31216e;
  #L312138.  call temp:= `z`(v7, v6) @signature `Lkotlinx/coroutines/e2;.z:(Ljava/lang/Throwable;)Z` @kind direct;
  #L31213e.  v0:= temp;
  #L312140.  if v0 != 0 then goto L312154;
  #L312144.  call temp:= `R`(v7, v6) @signature `Lkotlinx/coroutines/e2;.R:(Ljava/lang/Throwable;)Z` @kind virtual;
  #L31214a.  v0:= temp;
  #L31214c.  if v0 == 0 then goto L312152;
  #L312150.  goto L312154;
  #L312152.  v1:= 0I;
  #L312154.  if v1 == 0 then goto L31216e;
  #L312158.  v0:= "null cannot be cast to non-null type kotlinx.coroutines.CompletedExceptionally" @kind object;
  #L31215c.  call temp:= `requireNonNull`(v9, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312162.  v0:= v9 @kind object;
  #L312164.  v0:= (`kotlinx.coroutines.w`) v0 @kind object;
  #L312168.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/w;.b:()Z` @kind virtual;
  #L31216e.  if v4 != 0 then goto L312178;
  #L312172.  call `h0`(v7, v6) @signature `Lkotlinx/coroutines/e2;.h0:(Ljava/lang/Throwable;)V` @kind virtual;
  #L312178.  call `i0`(v7, v9) @signature `Lkotlinx/coroutines/e2;.i0:(Ljava/lang/Object;)V` @kind virtual;
  #L31217e.  v0:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L312182.  call temp:= `g`(v9) @signature `Lkotlinx/coroutines/f2;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L312188.  v1:= temp @kind object;
  #L31218a.  call temp:= `compareAndSet`(v0, v7, v8, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L312190.  v0:= temp;
  #L312192.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L312198.  v1:= temp;
  #L31219a.  if v1 == 0 then goto L3121b0;
  #L31219e.  if v0 == 0 then goto L3121a4;
  #L3121a2.  goto L3121b0;
  #L3121a4.  v8:= new `java.lang.AssertionError`;
  #L3121a8.  call `<init>`(v8) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3121ae.  throw v8;
  #L3121b0.  call `D`(v7, v8, v9) @signature `Lkotlinx/coroutines/e2;.D:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)V` @kind direct;
  #L3121b6.  return v9 @kind object;
  #L3121b8.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3121ba.  @monitorexit v8
  #L3121bc.  throw v9;
  catch `java.lang.Throwable` @[L3120f8..L31211a] goto L3121b8;
}
procedure `kotlinx.coroutines.s` `H`(`kotlinx.coroutines.e2` v2 @kind this, `kotlinx.coroutines.r1` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.H:(Lkotlinx/coroutines/r1;)Lkotlinx/coroutines/s;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L312bec.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L312bf0.  v1:= 0I;
  #L312bf2.  if v0 == 0 then goto L312bfe;
  #L312bf6.  v0:= v3 @kind object;
  #L312bf8.  v0:= (`kotlinx.coroutines.s`) v0 @kind object;
  #L312bfc.  goto L312c00;
  #L312bfe.  v0:= v1 @kind object;
  #L312c00.  if v0 != 0 then goto L312c1a;
  #L312c04.  call temp:= `f`(v3) @signature `Lkotlinx/coroutines/r1;.f:()Lkotlinx/coroutines/j2;` @kind interface;
  #L312c0a.  v3:= temp @kind object;
  #L312c0c.  if v3 == 0 then goto L312c1c;
  #L312c10.  call temp:= `e0`(v2, v3) @signature `Lkotlinx/coroutines/e2;.e0:(Lkotlinx/coroutines/internal/r;)Lkotlinx/coroutines/s;` @kind direct;
  #L312c16.  v1:= temp @kind object;
  #L312c18.  goto L312c1c;
  #L312c1a.  v1:= v0 @kind object;
  #L312c1c.  return v1 @kind object;
}
procedure `java.lang.Throwable` `I`(`kotlinx.coroutines.e2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.I:(Ljava/lang/Object;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L3127b8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L3127bc.  v1:= 0I;
  #L3127be.  if v0 == 0 then goto L3127c8;
  #L3127c2.  v3:= (`kotlinx.coroutines.w`) v3 @kind object;
  #L3127c6.  goto L3127ca;
  #L3127c8.  v3:= v1 @kind object;
  #L3127ca.  if v3 == 0 then goto L3127d2;
  #L3127ce.  v1:= v3.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L3127d2.  return v1 @kind object;
}
procedure `java.lang.Throwable` `K`(`kotlinx.coroutines.e2` v5 @kind this, `kotlinx.coroutines.e2$c` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lkotlinx/coroutines/e2;.K:(Lkotlinx/coroutines/e2$c;Ljava/util/List;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3127e4.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3127ea.  v0:= temp;
  #L3127ec.  v1:= 0I;
  #L3127ee.  if v0 == 0 then goto L312814;
  #L3127f2.  call temp:= `g`(v6) @signature `Lkotlinx/coroutines/e2$c;.g:()Z` @kind virtual;
  #L3127f8.  v6:= temp;
  #L3127fa.  if v6 == 0 then goto L312812;
  #L3127fe.  v6:= new `kotlinx.coroutines.x1`;
  #L312802.  call temp:= `l`(v5) @signature `Lkotlinx/coroutines/e2;.l:(Lkotlinx/coroutines/e2;)Ljava/lang/String;` @kind static;
  #L312808.  v7:= temp @kind object;
  #L31280a.  call `<init>`(v6, v7, v1, v5) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L312810.  return v6 @kind object;
  #L312812.  return v1 @kind object;
  #L312814.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31281a.  v6:= temp @kind object;
  #L31281c.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L312822.  v0:= temp;
  #L312824.  v2:= 1I;
  #L312826.  if v0 == 0 then goto L312844;
  #L31282a.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L312830.  v0:= temp @kind object;
  #L312832.  v3:= v0 @kind object;
  #L312834.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L312838.  v3:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L31283c.  v3:= v3 ^~ v2 @kind int;
  #L31283e.  if v3 == 0 then goto L31281c;
  #L312842.  goto L312846;
  #L312844.  v0:= v1 @kind object;
  #L312846.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L31284a.  if v0 == 0 then goto L312850;
  #L31284e.  return v0 @kind object;
  #L312850.  v6:= 0I;
  #L312852.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L312858.  v0:= temp @kind object;
  #L31285a.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L31285e.  v3:= instanceof @variable v0 @type ^`kotlinx.coroutines.s2` @kind boolean;
  #L312862.  if v3 == 0 then goto L3128aa;
  #L312866.  call temp:= `iterator`(v7) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31286c.  v7:= temp @kind object;
  #L31286e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L312874.  v3:= temp;
  #L312876.  if v3 == 0 then goto L3128a0;
  #L31287a.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L312880.  v3:= temp @kind object;
  #L312882.  v4:= v3 @kind object;
  #L312884.  v4:= (`java.lang.Throwable`) v4 @kind object;
  #L312888.  if v4 == v0 then goto L312898;
  #L31288c.  v4:= instanceof @variable v4 @type ^`kotlinx.coroutines.s2` @kind boolean;
  #L312890.  if v4 == 0 then goto L312898;
  #L312894.  v4:= 1I;
  #L312896.  goto L31289a;
  #L312898.  v4:= 0I;
  #L31289a.  if v4 == 0 then goto L31286e;
  #L31289e.  v1:= v3 @kind object;
  #L3128a0.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L3128a4.  if v1 == 0 then goto L3128aa;
  #L3128a8.  return v1 @kind object;
  #L3128aa.  return v0 @kind object;
}
procedure `kotlinx.coroutines.j2` `N`(`kotlinx.coroutines.e2` v3 @kind this, `kotlinx.coroutines.r1` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.N:(Lkotlinx/coroutines/r1;)Lkotlinx/coroutines/j2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L312e6c.  call temp:= `f`(v4) @signature `Lkotlinx/coroutines/r1;.f:()Lkotlinx/coroutines/j2;` @kind interface;
  #L312e72.  v0:= temp @kind object;
  #L312e74.  if v0 != 0 then goto L312ed8;
  #L312e78.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.g1` @kind boolean;
  #L312e7c.  if v0 == 0 then goto L312e8c;
  #L312e80.  v0:= new `kotlinx.coroutines.j2`;
  #L312e84.  call `<init>`(v0) @signature `Lkotlinx/coroutines/j2;.<init>:()V` @kind direct;
  #L312e8a.  goto L312ed8;
  #L312e8c.  v0:= instanceof @variable v4 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L312e90.  if v0 == 0 then goto L312ea2;
  #L312e94.  v4:= (`kotlinx.coroutines.d2`) v4 @kind object;
  #L312e98.  call `n0`(v3, v4) @signature `Lkotlinx/coroutines/e2;.n0:(Lkotlinx/coroutines/d2;)V` @kind direct;
  #L312e9e.  v0:= 0I;
  #L312ea0.  goto L312ed8;
  #L312ea2.  v0:= new `java.lang.IllegalStateException`;
  #L312ea6.  v1:= new `java.lang.StringBuilder`;
  #L312eaa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312eb0.  v2:= "State should have list: " @kind object;
  #L312eb4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312eba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312ec0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312ec6.  v4:= temp @kind object;
  #L312ec8.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L312ece.  v4:= temp @kind object;
  #L312ed0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L312ed6.  throw v0;
  #L312ed8.  return v0 @kind object;
}
procedure `java.lang.Object` `X`(`kotlinx.coroutines.e2` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/e2;.X:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L312224.  v0:= 0I;
  #L312226.  v1:= v0 @kind object;
  #L312228.  call temp:= `P`(v6) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L31222e.  v2:= temp @kind object;
  #L312230.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L312234.  if v3 == 0 then goto L3122c6;
  #L312238.  @monitorenter v2
  #L31223a.  v3:= v2 @kind object;
  #L31223c.  v3:= (`kotlinx.coroutines.e2$c`) v3 @kind object;
  #L312240.  call temp:= `i`(v3) @signature `Lkotlinx/coroutines/e2$c;.i:()Z` @kind virtual;
  #L312246.  v3:= temp;
  #L312248.  if v3 == 0 then goto L312258;
  #L31224c.  call temp:= `f`() @signature `Lkotlinx/coroutines/f2;.f:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312252.  v7:= temp @kind object;
  #L312254.  @monitorexit v2
  #L312256.  return v7 @kind object;
  #L312258.  v3:= v2 @kind object;
  #L31225a.  v3:= (`kotlinx.coroutines.e2$c`) v3 @kind object;
  #L31225e.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/e2$c;.g:()Z` @kind virtual;
  #L312264.  v3:= temp;
  #L312266.  if v7 != 0 then goto L31226e;
  #L31226a.  if v3 != 0 then goto L312286;
  #L31226e.  if v1 != 0 then goto L31227a;
  #L312272.  call temp:= `F`(v6, v7) @signature `Lkotlinx/coroutines/e2;.F:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L312278.  v1:= temp @kind object;
  #L31227a.  v7:= v2 @kind object;
  #L31227c.  v7:= (`kotlinx.coroutines.e2$c`) v7 @kind object;
  #L312280.  call `a`(v7, v1) @signature `Lkotlinx/coroutines/e2$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L312286.  v7:= v2 @kind object;
  #L312288.  v7:= (`kotlinx.coroutines.e2$c`) v7 @kind object;
  #L31228c.  call temp:= `d`(v7) @signature `Lkotlinx/coroutines/e2$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L312292.  v7:= temp @kind object;
  #L312294.  v1:= v3 ^~ 1;
  #L312298.  if v1 == 0 then goto L31229e;
  #L31229c.  v0:= v7 @kind object;
  #L31229e.  @monitorexit v2
  #L3122a0.  if v0 == 0 then goto L3122b6;
  #L3122a4.  v2:= (`kotlinx.coroutines.e2$c`) v2 @kind object;
  #L3122a8.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/e2$c;.f:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L3122ae.  v7:= temp @kind object;
  #L3122b0.  call `f0`(v6, v7, v0) @signature `Lkotlinx/coroutines/e2;.f0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @kind direct;
  #L3122b6.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3122bc.  v7:= temp @kind object;
  #L3122be.  return v7 @kind object;
  #L3122c0.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3122c2.  @monitorexit v2
  #L3122c4.  throw v7;
  #L3122c6.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L3122ca.  if v3 == 0 then goto L312368;
  #L3122ce.  if v1 != 0 then goto L3122da;
  #L3122d2.  call temp:= `F`(v6, v7) @signature `Lkotlinx/coroutines/e2;.F:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L3122d8.  v1:= temp @kind object;
  #L3122da.  v3:= v2 @kind object;
  #L3122dc.  v3:= (`kotlinx.coroutines.r1`) v3 @kind object;
  #L3122e0.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/r1;.e:()Z` @kind interface;
  #L3122e6.  v4:= temp;
  #L3122e8.  if v4 == 0 then goto L312302;
  #L3122ec.  call temp:= `w0`(v6, v3, v1) @signature `Lkotlinx/coroutines/e2;.w0:(Lkotlinx/coroutines/r1;Ljava/lang/Throwable;)Z` @kind direct;
  #L3122f2.  v2:= temp;
  #L3122f4.  if v2 == 0 then goto L312228;
  #L3122f8.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3122fe.  v7:= temp @kind object;
  #L312300.  return v7 @kind object;
  #L312302.  v3:= new `kotlinx.coroutines.w`;
  #L312306.  v4:= 0I;
  #L312308.  v5:= 2I;
  #L31230a.  call `<init>`(v3, v1, v4, v5, v0) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/g;)V` @kind direct;
  #L312310.  call temp:= `x0`(v6, v2, v3) @signature `Lkotlinx/coroutines/e2;.x0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L312316.  v3:= temp @kind object;
  #L312318.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L31231e.  v4:= temp @kind object;
  #L312320.  if v3 == v4 then goto L312332;
  #L312324.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L31232a.  v2:= temp @kind object;
  #L31232c.  if v3 == v2 then goto L312228;
  #L312330.  return v3 @kind object;
  #L312332.  v7:= new `java.lang.IllegalStateException`;
  #L312336.  v0:= new `java.lang.StringBuilder`;
  #L31233a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312340.  v1:= "Cannot happen in " @kind object;
  #L312344.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31234a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312350.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312356.  v0:= temp @kind object;
  #L312358.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31235e.  v0:= temp @kind object;
  #L312360.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L312366.  throw v7;
  #L312368.  call temp:= `f`() @signature `Lkotlinx/coroutines/f2;.f:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L31236e.  v7:= temp @kind object;
  #L312370.  return v7 @kind object;
  catch `java.lang.Throwable` @[L31223a..L312254] goto L3122c0;
  catch `java.lang.Throwable` @[L312258..L312294] goto L3122c0;
}
procedure `kotlinx.coroutines.d2` `b0`(`kotlinx.coroutines.e2` v1 @kind this, `wd.l` v2 @kind object, `boolean` v3 ) @signature `Lkotlinx/coroutines/e2;.b0:(Lwd/l;Z)Lkotlinx/coroutines/d2;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L312dec.  v0:= 0I;
  #L312dee.  if v3 == 0 then goto L312e10;
  #L312df2.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.y1` @kind boolean;
  #L312df6.  if v3 == 0 then goto L312e00;
  #L312dfa.  v0:= v2 @kind object;
  #L312dfc.  v0:= (`kotlinx.coroutines.y1`) v0 @kind object;
  #L312e00.  if v0 != 0 then goto L312e52;
  #L312e04.  v0:= new `kotlinx.coroutines.u1`;
  #L312e08.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/u1;.<init>:(Lwd/l;)V` @kind direct;
  #L312e0e.  goto L312e52;
  #L312e10.  v3:= instanceof @variable v2 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L312e14.  if v3 == 0 then goto L312e1e;
  #L312e18.  v0:= v2 @kind object;
  #L312e1a.  v0:= (`kotlinx.coroutines.d2`) v0 @kind object;
  #L312e1e.  if v0 == 0 then goto L312e48;
  #L312e22.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L312e28.  v2:= temp;
  #L312e2a.  if v2 == 0 then goto L312e52;
  #L312e2e.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.y1` @kind boolean;
  #L312e32.  v2:= v2 ^~ 1;
  #L312e36.  if v2 == 0 then goto L312e3c;
  #L312e3a.  goto L312e52;
  #L312e3c.  v2:= new `java.lang.AssertionError`;
  #L312e40.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L312e46.  throw v2;
  #L312e48.  v0:= new `kotlinx.coroutines.v1`;
  #L312e4c.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/v1;.<init>:(Lwd/l;)V` @kind direct;
  #L312e52.  call `y`(v0, v1) @signature `Lkotlinx/coroutines/d2;.y:(Lkotlinx/coroutines/e2;)V` @kind virtual;
  #L312e58.  return v0 @kind object;
}
procedure `kotlinx.coroutines.s` `e0`(`kotlinx.coroutines.e2` v1 @kind this, `kotlinx.coroutines.internal.r` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.e0:(Lkotlinx/coroutines/internal/r;)Lkotlinx/coroutines/s;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L312c30.  call temp:= `r`(v2) @signature `Lkotlinx/coroutines/internal/r;.r:()Z` @kind virtual;
  #L312c36.  v0:= temp;
  #L312c38.  if v0 == 0 then goto L312c46;
  #L312c3c.  call temp:= `o`(v2) @signature `Lkotlinx/coroutines/internal/r;.o:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L312c42.  v2:= temp @kind object;
  #L312c44.  goto L312c30;
  #L312c46.  call temp:= `n`(v2) @signature `Lkotlinx/coroutines/internal/r;.n:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L312c4c.  v2:= temp @kind object;
  #L312c4e.  call temp:= `r`(v2) @signature `Lkotlinx/coroutines/internal/r;.r:()Z` @kind virtual;
  #L312c54.  v0:= temp;
  #L312c56.  if v0 != 0 then goto L312c46;
  #L312c5a.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L312c5e.  if v0 == 0 then goto L312c68;
  #L312c62.  v2:= (`kotlinx.coroutines.s`) v2 @kind object;
  #L312c66.  return v2 @kind object;
  #L312c68.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.j2` @kind boolean;
  #L312c6c.  if v0 == 0 then goto L312c46;
  #L312c70.  v2:= 0I;
  #L312c72.  return v2 @kind object;
}
procedure `void` `f0`(`kotlinx.coroutines.e2` v6 @kind this, `kotlinx.coroutines.j2` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/e2;.f0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L313240.  call `h0`(v6, v8) @signature `Lkotlinx/coroutines/e2;.h0:(Ljava/lang/Throwable;)V` @kind virtual;
  #L313246.  call temp:= `m`(v7) @signature `Lkotlinx/coroutines/internal/r;.m:()Ljava/lang/Object;` @kind virtual;
  #L31324c.  v0:= temp @kind object;
  #L31324e.  v0:= (`kotlinx.coroutines.internal.r`) v0 @kind object;
  #L313252.  v1:= 0I;
  #L313254.  call temp:= `a`(v0, v7) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L31325a.  v2:= temp;
  #L31325c.  if v2 != 0 then goto L3132ce;
  #L313260.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.y1` @kind boolean;
  #L313264.  if v2 == 0 then goto L3132c4;
  #L313268.  v2:= v0 @kind object;
  #L31326a.  v2:= (`kotlinx.coroutines.d2`) v2 @kind object;
  #L31326e.  call `w`(v2, v8) @signature `Lkotlinx/coroutines/y;.w:(Ljava/lang/Throwable;)V` @kind virtual;
  #L313274.  goto L3132c4;
  #L313276.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L313278.  if v1 == 0 then goto L313284;
  #L31327c.  call `a`(v1, v3) @signature `Lod/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L313282.  goto L3132c4;
  #L313284.  v1:= new `kotlinx.coroutines.z`;
  #L313288.  v4:= new `java.lang.StringBuilder`;
  #L31328c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313292.  v5:= "Exception in completion handler " @kind object;
  #L313296.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31329c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3132a2.  v2:= " for " @kind object;
  #L3132a6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3132ac.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3132b2.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3132b8.  v2:= temp @kind object;
  #L3132ba.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3132c0.  v2:= `@@od.t.a` @type ^`od.t` @kind object;
  #L3132c4.  call temp:= `n`(v0) @signature `Lkotlinx/coroutines/internal/r;.n:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L3132ca.  v0:= temp @kind object;
  #L3132cc.  goto L313254;
  #L3132ce.  if v1 == 0 then goto L3132d8;
  #L3132d2.  call `S`(v6, v1) @signature `Lkotlinx/coroutines/e2;.S:(Ljava/lang/Throwable;)V` @kind virtual;
  #L3132d8.  call temp:= `z`(v6, v8) @signature `Lkotlinx/coroutines/e2;.z:(Ljava/lang/Throwable;)Z` @kind direct;
  #L3132de.  return @kind void;
  catch `java.lang.Throwable` @[L31326e..L313274] goto L313276;
}
procedure `void` `g0`(`kotlinx.coroutines.e2` v6 @kind this, `kotlinx.coroutines.j2` v7 @kind object, `java.lang.Throwable` v8 @kind object) @signature `Lkotlinx/coroutines/e2;.g0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3132fc.  call temp:= `m`(v7) @signature `Lkotlinx/coroutines/internal/r;.m:()Ljava/lang/Object;` @kind virtual;
  #L313302.  v0:= temp @kind object;
  #L313304.  v0:= (`kotlinx.coroutines.internal.r`) v0 @kind object;
  #L313308.  v1:= 0I;
  #L31330a.  call temp:= `a`(v0, v7) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L313310.  v2:= temp;
  #L313312.  if v2 != 0 then goto L313384;
  #L313316.  v2:= instanceof @variable v0 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L31331a.  if v2 == 0 then goto L31337a;
  #L31331e.  v2:= v0 @kind object;
  #L313320.  v2:= (`kotlinx.coroutines.d2`) v2 @kind object;
  #L313324.  call `w`(v2, v8) @signature `Lkotlinx/coroutines/y;.w:(Ljava/lang/Throwable;)V` @kind virtual;
  #L31332a.  goto L31337a;
  #L31332c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31332e.  if v1 == 0 then goto L31333a;
  #L313332.  call `a`(v1, v3) @signature `Lod/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L313338.  goto L31337a;
  #L31333a.  v1:= new `kotlinx.coroutines.z`;
  #L31333e.  v4:= new `java.lang.StringBuilder`;
  #L313342.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313348.  v5:= "Exception in completion handler " @kind object;
  #L31334c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313352.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313358.  v2:= " for " @kind object;
  #L31335c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313362.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313368.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31336e.  v2:= temp @kind object;
  #L313370.  call `<init>`(v1, v2, v3) @signature `Lkotlinx/coroutines/z;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L313376.  v2:= `@@od.t.a` @type ^`od.t` @kind object;
  #L31337a.  call temp:= `n`(v0) @signature `Lkotlinx/coroutines/internal/r;.n:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L313380.  v0:= temp @kind object;
  #L313382.  goto L31330a;
  #L313384.  if v1 == 0 then goto L31338e;
  #L313388.  call `S`(v6, v1) @signature `Lkotlinx/coroutines/e2;.S:(Ljava/lang/Throwable;)V` @kind virtual;
  #L31338e.  return @kind void;
  catch `java.lang.Throwable` @[L313324..L31332a] goto L31332c;
}
procedure `java.lang.String` `l`(`kotlinx.coroutines.e2` v0 @kind object) @signature `Lkotlinx/coroutines/e2;.l:(Lkotlinx/coroutines/e2;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L3125f0.  call temp:= `A`(v0) @signature `Lkotlinx/coroutines/e2;.A:()Ljava/lang/String;` @kind virtual;
  #L3125f6.  v0:= temp @kind object;
  #L3125f8.  return v0 @kind object;
}
procedure `void` `m`(`kotlinx.coroutines.e2` v0 @kind object, `kotlinx.coroutines.e2$c` v1 @kind object, `kotlinx.coroutines.s` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.m:(Lkotlinx/coroutines/e2;Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L312f50.  call `E`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/e2;.E:(Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)V` @kind direct;
  #L312f56.  return @kind void;
}
procedure `void` `m0`(`kotlinx.coroutines.e2` v2 @kind this, `kotlinx.coroutines.g1` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.m0:(Lkotlinx/coroutines/g1;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L313400.  v0:= new `kotlinx.coroutines.j2`;
  #L313404.  call `<init>`(v0) @signature `Lkotlinx/coroutines/j2;.<init>:()V` @kind direct;
  #L31340a.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/g1;.e:()Z` @kind virtual;
  #L313410.  v1:= temp;
  #L313412.  if v1 == 0 then goto L313418;
  #L313416.  goto L313424;
  #L313418.  v1:= new `kotlinx.coroutines.q1`;
  #L31341c.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/q1;.<init>:(Lkotlinx/coroutines/j2;)V` @kind direct;
  #L313422.  v0:= v1 @kind object;
  #L313424.  v1:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L313428.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31342e.  return @kind void;
}
procedure `boolean` `n`(`kotlinx.coroutines.e2` v2 @kind this, `java.lang.Object` v3 @kind object, `kotlinx.coroutines.j2` v4 @kind object, `kotlinx.coroutines.d2` v5 @kind object) @signature `Lkotlinx/coroutines/e2;.n:(Ljava/lang/Object;Lkotlinx/coroutines/j2;Lkotlinx/coroutines/d2;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L311ae0.  v0:= new `kotlinx.coroutines.e2$d`;
  #L311ae4.  call `<init>`(v0, v5, v2, v3) @signature `Lkotlinx/coroutines/e2$d;.<init>:(Lkotlinx/coroutines/internal/r;Lkotlinx/coroutines/e2;Ljava/lang/Object;)V` @kind direct;
  #L311aea.  call temp:= `o`(v4) @signature `Lkotlinx/coroutines/internal/r;.o:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L311af0.  v3:= temp @kind object;
  #L311af2.  call temp:= `v`(v3, v5, v4, v0) @signature `Lkotlinx/coroutines/internal/r;.v:(Lkotlinx/coroutines/internal/r;Lkotlinx/coroutines/internal/r;Lkotlinx/coroutines/internal/r$a;)I` @kind virtual;
  #L311af8.  v3:= temp;
  #L311afa.  v1:= 1I;
  #L311afc.  if v3 == v1 then goto L311b0a;
  #L311b00.  v1:= 2I;
  #L311b02.  if v3 == v1 then goto L311b08;
  #L311b06.  goto L311aea;
  #L311b08.  v1:= 0I;
  #L311b0a.  return v1;
}
procedure `void` `n0`(`kotlinx.coroutines.e2` v2 @kind this, `kotlinx.coroutines.d2` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.n0:(Lkotlinx/coroutines/d2;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L313440.  v0:= new `kotlinx.coroutines.j2`;
  #L313444.  call `<init>`(v0) @signature `Lkotlinx/coroutines/j2;.<init>:()V` @kind direct;
  #L31344a.  call temp:= `i`(v3, v0) @signature `Lkotlinx/coroutines/internal/r;.i:(Lkotlinx/coroutines/internal/r;)Z` @kind virtual;
  #L313450.  call temp:= `n`(v3) @signature `Lkotlinx/coroutines/internal/r;.n:()Lkotlinx/coroutines/internal/r;` @kind virtual;
  #L313456.  v0:= temp @kind object;
  #L313458.  v1:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31345c.  call temp:= `compareAndSet`(v1, v2, v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L313462.  return @kind void;
}
procedure `void` `o`(`kotlinx.coroutines.e2` v4 @kind this, `java.lang.Throwable` v5 @kind object, `java.util.List` v6 @kind object) @signature `Lkotlinx/coroutines/e2;.o:(Ljava/lang/Throwable;Ljava/util/List;)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L312f68.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L312f6e.  v0:= temp;
  #L312f70.  v1:= 1I;
  #L312f72.  if v0 > v1 then goto L312f78;
  #L312f76.  return @kind void;
  #L312f78.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L312f7e.  v0:= temp;
  #L312f80.  v1:= new `java.util.IdentityHashMap`;
  #L312f84.  call `<init>`(v1, v0) @signature `Ljava/util/IdentityHashMap;.<init>:(I)V` @kind direct;
  #L312f8a.  call temp:= `newSetFromMap`(v1) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L312f90.  v0:= temp @kind object;
  #L312f92.  call temp:= `d`() @signature `Lkotlinx/coroutines/q0;.d:()Z` @kind static;
  #L312f98.  v1:= temp;
  #L312f9a.  if v1 != 0 then goto L312fa2;
  #L312f9e.  v1:= v5 @kind object;
  #L312fa0.  goto L312faa;
  #L312fa2.  call temp:= `n`(v5) @signature `Lkotlinx/coroutines/internal/e0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L312fa8.  v1:= temp @kind object;
  #L312faa.  call temp:= `iterator`(v6) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L312fb0.  v6:= temp @kind object;
  #L312fb2.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L312fb8.  v2:= temp;
  #L312fba.  if v2 == 0 then goto L313004;
  #L312fbe.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L312fc4.  v2:= temp @kind object;
  #L312fc6.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L312fca.  call temp:= `d`() @signature `Lkotlinx/coroutines/q0;.d:()Z` @kind static;
  #L312fd0.  v3:= temp;
  #L312fd2.  if v3 != 0 then goto L312fd8;
  #L312fd6.  goto L312fe0;
  #L312fd8.  call temp:= `n`(v2) @signature `Lkotlinx/coroutines/internal/e0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L312fde.  v2:= temp @kind object;
  #L312fe0.  if v2 == v5 then goto L312fb2;
  #L312fe4.  if v2 == v1 then goto L312fb2;
  #L312fe8.  v3:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L312fec.  if v3 != 0 then goto L312fb2;
  #L312ff0.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L312ff6.  v3:= temp;
  #L312ff8.  if v3 == 0 then goto L312fb2;
  #L312ffc.  call `a`(v5, v2) @signature `Lod/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind static;
  #L313002.  goto L312fb2;
  #L313004.  return @kind void;
}
procedure `int` `q0`(`kotlinx.coroutines.e2` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/e2;.q0:(Ljava/lang/Object;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L311e84.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.g1` @kind boolean;
  #L311e88.  v1:= -1I;
  #L311e8a.  v2:= 1I;
  #L311e8c.  v3:= 0I;
  #L311e8e.  if v0 == 0 then goto L311ec8;
  #L311e92.  v0:= v5 @kind object;
  #L311e94.  v0:= (`kotlinx.coroutines.g1`) v0 @kind object;
  #L311e98.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/g1;.e:()Z` @kind virtual;
  #L311e9e.  v0:= temp;
  #L311ea0.  if v0 == 0 then goto L311ea6;
  #L311ea4.  return v3;
  #L311ea6.  v0:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L311eaa.  call temp:= `c`() @signature `Lkotlinx/coroutines/f2;.c:()Lkotlinx/coroutines/g1;` @kind static;
  #L311eb0.  v3:= temp @kind object;
  #L311eb2.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L311eb8.  v5:= temp;
  #L311eba.  if v5 != 0 then goto L311ec0;
  #L311ebe.  return v1;
  #L311ec0.  call `l0`(v4) @signature `Lkotlinx/coroutines/e2;.l0:()V` @kind virtual;
  #L311ec6.  return v2;
  #L311ec8.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.q1` @kind boolean;
  #L311ecc.  if v0 == 0 then goto L311ef8;
  #L311ed0.  v0:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L311ed4.  v3:= v5 @kind object;
  #L311ed6.  v3:= (`kotlinx.coroutines.q1`) v3 @kind object;
  #L311eda.  call temp:= `f`(v3) @signature `Lkotlinx/coroutines/q1;.f:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L311ee0.  v3:= temp @kind object;
  #L311ee2.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L311ee8.  v5:= temp;
  #L311eea.  if v5 != 0 then goto L311ef0;
  #L311eee.  return v1;
  #L311ef0.  call `l0`(v4) @signature `Lkotlinx/coroutines/e2;.l0:()V` @kind virtual;
  #L311ef6.  return v2;
  #L311ef8.  return v3;
}
procedure `java.lang.String` `r0`(`kotlinx.coroutines.e2` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.r0:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L312640.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L312644.  v1:= "Active" @kind object;
  #L312648.  if v0 == 0 then goto L312674;
  #L31264c.  v3:= (`kotlinx.coroutines.e2$c`) v3 @kind object;
  #L312650.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/e2$c;.g:()Z` @kind virtual;
  #L312656.  v0:= temp;
  #L312658.  if v0 == 0 then goto L312662;
  #L31265c.  v1:= "Cancelling" @kind object;
  #L312660.  goto L3126a6;
  #L312662.  call temp:= `h`(v3) @signature `Lkotlinx/coroutines/e2$c;.h:()Z` @kind virtual;
  #L312668.  v3:= temp;
  #L31266a.  if v3 == 0 then goto L3126a6;
  #L31266e.  v1:= "Completing" @kind object;
  #L312672.  goto L3126a6;
  #L312674.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L312678.  if v0 == 0 then goto L312694;
  #L31267c.  v3:= (`kotlinx.coroutines.r1`) v3 @kind object;
  #L312680.  call temp:= `e`(v3) @signature `Lkotlinx/coroutines/r1;.e:()Z` @kind interface;
  #L312686.  v3:= temp;
  #L312688.  if v3 == 0 then goto L31268e;
  #L31268c.  goto L3126a6;
  #L31268e.  v1:= "New" @kind object;
  #L312692.  goto L3126a6;
  #L312694.  v3:= instanceof @variable v3 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L312698.  if v3 == 0 then goto L3126a2;
  #L31269c.  v1:= "Cancelled" @kind object;
  #L3126a0.  goto L3126a6;
  #L3126a2.  v1:= "Completed" @kind object;
  #L3126a6.  return v1 @kind object;
}
procedure `java.lang.Object` `s`(`kotlinx.coroutines.e2` v2 @kind this, `kotlin.coroutines.d` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.s:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L311f84.  v0:= new `kotlinx.coroutines.e2$a`;
  #L311f88.  call temp:= `c`(v3) @signature `Lkotlin/coroutines/intrinsics/b;.c:(Lkotlin/coroutines/d;)Lkotlin/coroutines/d;` @kind static;
  #L311f8e.  v1:= temp @kind object;
  #L311f90.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/e2$a;.<init>:(Lkotlin/coroutines/d;Lkotlinx/coroutines/e2;)V` @kind direct;
  #L311f96.  call `A`(v0) @signature `Lkotlinx/coroutines/m;.A:()V` @kind virtual;
  #L311f9c.  v1:= new `kotlinx.coroutines.n2`;
  #L311fa0.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/n2;.<init>:(Lkotlinx/coroutines/m;)V` @kind direct;
  #L311fa6.  call temp:= `Q`(v2, v1) @signature `Lkotlinx/coroutines/e2;.Q:(Lwd/l;)Lkotlinx/coroutines/e1;` @kind virtual;
  #L311fac.  v1:= temp @kind object;
  #L311fae.  call `a`(v0, v1) @signature `Lkotlinx/coroutines/o;.a:(Lkotlinx/coroutines/l;Lkotlinx/coroutines/e1;)V` @kind static;
  #L311fb4.  call temp:= `x`(v0) @signature `Lkotlinx/coroutines/m;.x:()Ljava/lang/Object;` @kind virtual;
  #L311fba.  v0:= temp @kind object;
  #L311fbc.  call temp:= `d`() @signature `Lkotlin/coroutines/intrinsics/b;.d:()Ljava/lang/Object;` @kind static;
  #L311fc2.  v1:= temp @kind object;
  #L311fc4.  if v0 != v1 then goto L311fce;
  #L311fc8.  call `c`(v3) @signature `Lkotlin/coroutines/jvm/internal/g;.c:(Lkotlin/coroutines/d;)V` @kind static;
  #L311fce.  return v0 @kind object;
}
procedure `java.util.concurrent.CancellationException` `t0`(`kotlinx.coroutines.e2` v0 @kind object, `java.lang.Throwable` v1 @kind object, `java.lang.String` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.t0:(Lkotlinx/coroutines/e2;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L312ab8.  if v4 != 0 then goto L312ad0;
  #L312abc.  v3:= v3 ^& 1;
  #L312ac0.  if v3 == 0 then goto L312ac6;
  #L312ac4.  v2:= 0I;
  #L312ac6.  call temp:= `s0`(v0, v1, v2) @signature `Lkotlinx/coroutines/e2;.s0:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L312acc.  v0:= temp @kind object;
  #L312ace.  return v0 @kind object;
  #L312ad0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L312ad4.  v1:= "Super calls with default arguments not supported in this target, function: toCancellationException" @kind object;
  #L312ad8.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L312ade.  throw v0;
}
procedure `boolean` `v0`(`kotlinx.coroutines.e2` v4 @kind this, `kotlinx.coroutines.r1` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lkotlinx/coroutines/e2;.v0:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L311d08.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L311d0e.  v0:= temp;
  #L311d10.  v1:= 0I;
  #L311d12.  v2:= 1I;
  #L311d14.  if v0 == 0 then goto L311d42;
  #L311d18.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.g1` @kind boolean;
  #L311d1c.  if v0 != 0 then goto L311d2e;
  #L311d20.  v0:= instanceof @variable v5 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L311d24.  if v0 == 0 then goto L311d2a;
  #L311d28.  goto L311d2e;
  #L311d2a.  v0:= 0I;
  #L311d2c.  goto L311d30;
  #L311d2e.  v0:= 1I;
  #L311d30.  if v0 == 0 then goto L311d36;
  #L311d34.  goto L311d42;
  #L311d36.  v5:= new `java.lang.AssertionError`;
  #L311d3a.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L311d40.  throw v5;
  #L311d42.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L311d48.  v0:= temp;
  #L311d4a.  if v0 == 0 then goto L311d66;
  #L311d4e.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L311d52.  v0:= v0 ^~ v2 @kind int;
  #L311d54.  if v0 == 0 then goto L311d5a;
  #L311d58.  goto L311d66;
  #L311d5a.  v5:= new `java.lang.AssertionError`;
  #L311d5e.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L311d64.  throw v5;
  #L311d66.  v0:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L311d6a.  call temp:= `g`(v6) @signature `Lkotlinx/coroutines/f2;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L311d70.  v3:= temp @kind object;
  #L311d72.  call temp:= `compareAndSet`(v0, v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L311d78.  v0:= temp;
  #L311d7a.  if v0 != 0 then goto L311d80;
  #L311d7e.  return v1;
  #L311d80.  v0:= 0I;
  #L311d82.  call `h0`(v4, v0) @signature `Lkotlinx/coroutines/e2;.h0:(Ljava/lang/Throwable;)V` @kind virtual;
  #L311d88.  call `i0`(v4, v6) @signature `Lkotlinx/coroutines/e2;.i0:(Ljava/lang/Object;)V` @kind virtual;
  #L311d8e.  call `D`(v4, v5, v6) @signature `Lkotlinx/coroutines/e2;.D:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)V` @kind direct;
  #L311d94.  return v2;
}
procedure `boolean` `w0`(`kotlinx.coroutines.e2` v5 @kind this, `kotlinx.coroutines.r1` v6 @kind object, `java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/e2;.w0:(Lkotlinx/coroutines/r1;Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L311da8.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L311dae.  v0:= temp;
  #L311db0.  v1:= 1I;
  #L311db2.  if v0 == 0 then goto L311dce;
  #L311db6.  v0:= instanceof @variable v6 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L311dba.  v0:= v0 ^~ v1 @kind int;
  #L311dbc.  if v0 == 0 then goto L311dc2;
  #L311dc0.  goto L311dce;
  #L311dc2.  v6:= new `java.lang.AssertionError`;
  #L311dc6.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L311dcc.  throw v6;
  #L311dce.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L311dd4.  v0:= temp;
  #L311dd6.  if v0 == 0 then goto L311df4;
  #L311dda.  call temp:= `e`(v6) @signature `Lkotlinx/coroutines/r1;.e:()Z` @kind interface;
  #L311de0.  v0:= temp;
  #L311de2.  if v0 == 0 then goto L311de8;
  #L311de6.  goto L311df4;
  #L311de8.  v6:= new `java.lang.AssertionError`;
  #L311dec.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L311df2.  throw v6;
  #L311df4.  call temp:= `N`(v5, v6) @signature `Lkotlinx/coroutines/e2;.N:(Lkotlinx/coroutines/r1;)Lkotlinx/coroutines/j2;` @kind direct;
  #L311dfa.  v0:= temp @kind object;
  #L311dfc.  v2:= 0I;
  #L311dfe.  if v0 != 0 then goto L311e04;
  #L311e02.  return v2;
  #L311e04.  v3:= new `kotlinx.coroutines.e2$c`;
  #L311e08.  call `<init>`(v3, v0, v2, v7) @signature `Lkotlinx/coroutines/e2$c;.<init>:(Lkotlinx/coroutines/j2;ZLjava/lang/Throwable;)V` @kind direct;
  #L311e0e.  v4:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L311e12.  call temp:= `compareAndSet`(v4, v5, v6, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L311e18.  v6:= temp;
  #L311e1a.  if v6 != 0 then goto L311e20;
  #L311e1e.  return v2;
  #L311e20.  call `f0`(v5, v0, v7) @signature `Lkotlinx/coroutines/e2;.f0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @kind direct;
  #L311e26.  return v1;
}
procedure `java.lang.Object` `x`(`kotlinx.coroutines.e2` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/e2;.x:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L311fe0.  call temp:= `P`(v6) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L311fe6.  v0:= temp @kind object;
  #L311fe8.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L311fec.  if v1 == 0 then goto L31203a;
  #L311ff0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L311ff4.  if v1 == 0 then goto L31200c;
  #L311ff8.  v1:= v0 @kind object;
  #L311ffa.  v1:= (`kotlinx.coroutines.e2$c`) v1 @kind object;
  #L311ffe.  call temp:= `h`(v1) @signature `Lkotlinx/coroutines/e2$c;.h:()Z` @kind virtual;
  #L312004.  v1:= temp;
  #L312006.  if v1 == 0 then goto L31200c;
  #L31200a.  goto L31203a;
  #L31200c.  v1:= new `kotlinx.coroutines.w`;
  #L312010.  call temp:= `F`(v6, v7) @signature `Lkotlinx/coroutines/e2;.F:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L312016.  v2:= temp @kind object;
  #L312018.  v3:= 0I;
  #L31201a.  v4:= 2I;
  #L31201c.  v5:= 0I;
  #L31201e.  call `<init>`(v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/w;.<init>:(Ljava/lang/Throwable;ZILkotlin/jvm/internal/g;)V` @kind direct;
  #L312024.  call temp:= `x0`(v6, v0, v1) @signature `Lkotlinx/coroutines/e2;.x0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L31202a.  v0:= temp @kind object;
  #L31202c.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312032.  v1:= temp @kind object;
  #L312034.  if v0 == v1 then goto L311fe0;
  #L312038.  return v0 @kind object;
  #L31203a.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312040.  v7:= temp @kind object;
  #L312042.  return v7 @kind object;
}
procedure `java.lang.Object` `x0`(`kotlinx.coroutines.e2` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.x0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L312418.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L31241c.  if v0 != 0 then goto L31242a;
  #L312420.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312426.  v2:= temp @kind object;
  #L312428.  return v2 @kind object;
  #L31242a.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.g1` @kind boolean;
  #L31242e.  if v0 != 0 then goto L31243a;
  #L312432.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L312436.  if v0 == 0 then goto L312466;
  #L31243a.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L31243e.  if v0 != 0 then goto L312466;
  #L312442.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L312446.  if v0 != 0 then goto L312466;
  #L31244a.  v2:= (`kotlinx.coroutines.r1`) v2 @kind object;
  #L31244e.  call temp:= `v0`(v1, v2, v3) @signature `Lkotlinx/coroutines/e2;.v0:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)Z` @kind direct;
  #L312454.  v2:= temp;
  #L312456.  if v2 == 0 then goto L31245c;
  #L31245a.  return v3 @kind object;
  #L31245c.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312462.  v2:= temp @kind object;
  #L312464.  return v2 @kind object;
  #L312466.  v2:= (`kotlinx.coroutines.r1`) v2 @kind object;
  #L31246a.  call temp:= `y0`(v1, v2, v3) @signature `Lkotlinx/coroutines/e2;.y0:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L312470.  v2:= temp @kind object;
  #L312472.  return v2 @kind object;
}
procedure `java.lang.Object` `y0`(`kotlinx.coroutines.e2` v8 @kind this, `kotlinx.coroutines.r1` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lkotlinx/coroutines/e2;.y0:(Lkotlinx/coroutines/r1;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L312484.  call temp:= `N`(v8, v9) @signature `Lkotlinx/coroutines/e2;.N:(Lkotlinx/coroutines/r1;)Lkotlinx/coroutines/j2;` @kind direct;
  #L31248a.  v0:= temp @kind object;
  #L31248c.  if v0 != 0 then goto L31249a;
  #L312490.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312496.  v9:= temp @kind object;
  #L312498.  return v9 @kind object;
  #L31249a.  v1:= instanceof @variable v9 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L31249e.  v2:= 0I;
  #L3124a0.  if v1 == 0 then goto L3124ac;
  #L3124a4.  v1:= v9 @kind object;
  #L3124a6.  v1:= (`kotlinx.coroutines.e2$c`) v1 @kind object;
  #L3124aa.  goto L3124ae;
  #L3124ac.  v1:= v2 @kind object;
  #L3124ae.  v3:= 0I;
  #L3124b0.  if v1 != 0 then goto L3124be;
  #L3124b4.  v1:= new `kotlinx.coroutines.e2$c`;
  #L3124b8.  call `<init>`(v1, v0, v3, v2) @signature `Lkotlinx/coroutines/e2$c;.<init>:(Lkotlinx/coroutines/j2;ZLjava/lang/Throwable;)V` @kind direct;
  #L3124be.  v4:= new `kotlin.jvm.internal.r`;
  #L3124c2.  call `<init>`(v4) @signature `Lkotlin/jvm/internal/r;.<init>:()V` @kind direct;
  #L3124c8.  @monitorenter v1
  #L3124ca.  call temp:= `h`(v1) @signature `Lkotlinx/coroutines/e2$c;.h:()Z` @kind virtual;
  #L3124d0.  v5:= temp;
  #L3124d2.  if v5 == 0 then goto L3124e2;
  #L3124d6.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3124dc.  v9:= temp @kind object;
  #L3124de.  @monitorexit v1
  #L3124e0.  return v9 @kind object;
  #L3124e2.  v5:= 1I;
  #L3124e4.  call `k`(v1, v5) @signature `Lkotlinx/coroutines/e2$c;.k:(Z)V` @kind virtual;
  #L3124ea.  if v1 == v9 then goto L31250a;
  #L3124ee.  v6:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3124f2.  call temp:= `compareAndSet`(v6, v8, v9, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3124f8.  v6:= temp;
  #L3124fa.  if v6 != 0 then goto L31250a;
  #L3124fe.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L312504.  v9:= temp @kind object;
  #L312506.  @monitorexit v1
  #L312508.  return v9 @kind object;
  #L31250a.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L312510.  v6:= temp;
  #L312512.  if v6 == 0 then goto L312532;
  #L312516.  call temp:= `i`(v1) @signature `Lkotlinx/coroutines/e2$c;.i:()Z` @kind virtual;
  #L31251c.  v6:= temp;
  #L31251e.  v6:= v6 ^~ v5 @kind int;
  #L312520.  if v6 == 0 then goto L312526;
  #L312524.  goto L312532;
  #L312526.  v9:= new `java.lang.AssertionError`;
  #L31252a.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L312530.  throw v9;
  #L312532.  call temp:= `g`(v1) @signature `Lkotlinx/coroutines/e2$c;.g:()Z` @kind virtual;
  #L312538.  v6:= temp;
  #L31253a.  v7:= instanceof @variable v10 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L31253e.  if v7 == 0 then goto L31254a;
  #L312542.  v7:= v10 @kind object;
  #L312544.  v7:= (`kotlinx.coroutines.w`) v7 @kind object;
  #L312548.  goto L31254c;
  #L31254a.  v7:= v2 @kind object;
  #L31254c.  if v7 == 0 then goto L31255a;
  #L312550.  v7:= v7.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L312554.  call `a`(v1, v7) @signature `Lkotlinx/coroutines/e2$c;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L31255a.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/e2$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L312560.  v7:= temp @kind object;
  #L312562.  if v6 != 0 then goto L312568;
  #L312566.  v3:= 1I;
  #L312568.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L31256e.  v3:= temp @kind object;
  #L312570.  call temp:= `booleanValue`(v3) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L312576.  v3:= temp;
  #L312578.  if v3 == 0 then goto L31257e;
  #L31257c.  v2:= v7 @kind object;
  #L31257e.  v4.`kotlin.jvm.internal.r.element` @type ^`java.lang.Object` := v2 @kind object;
  #L312582.  v3:= `@@od.t.a` @type ^`od.t` @kind object;
  #L312586.  @monitorexit v1
  #L312588.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L31258c.  if v2 == 0 then goto L312596;
  #L312590.  call `f0`(v8, v0, v2) @signature `Lkotlinx/coroutines/e2;.f0:(Lkotlinx/coroutines/j2;Ljava/lang/Throwable;)V` @kind direct;
  #L312596.  call temp:= `H`(v8, v9) @signature `Lkotlinx/coroutines/e2;.H:(Lkotlinx/coroutines/r1;)Lkotlinx/coroutines/s;` @kind direct;
  #L31259c.  v9:= temp @kind object;
  #L31259e.  if v9 == 0 then goto L3125b4;
  #L3125a2.  call temp:= `z0`(v8, v1, v9, v10) @signature `Lkotlinx/coroutines/e2;.z0:(Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)Z` @kind direct;
  #L3125a8.  v9:= temp;
  #L3125aa.  if v9 == 0 then goto L3125b4;
  #L3125ae.  v9:= `@@kotlinx.coroutines.f2.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3125b2.  return v9 @kind object;
  #L3125b4.  call temp:= `G`(v8, v1, v10) @signature `Lkotlinx/coroutines/e2;.G:(Lkotlinx/coroutines/e2$c;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3125ba.  v9:= temp @kind object;
  #L3125bc.  return v9 @kind object;
  #L3125be.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3125c0.  @monitorexit v1
  #L3125c2.  throw v9;
  catch `java.lang.Throwable` @[L3124ca..L3124de] goto L3125be;
  catch `java.lang.Throwable` @[L3124e4..L312506] goto L3125be;
  catch `java.lang.Throwable` @[L31250a..L312586] goto L3125be;
}
procedure `boolean` `z`(`kotlinx.coroutines.e2` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/e2;.z:(Ljava/lang/Throwable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L311b98.  call temp:= `W`(v4) @signature `Lkotlinx/coroutines/e2;.W:()Z` @kind virtual;
  #L311b9e.  v0:= temp;
  #L311ba0.  v1:= 1I;
  #L311ba2.  if v0 == 0 then goto L311ba8;
  #L311ba6.  return v1;
  #L311ba8.  v0:= instanceof @variable v5 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L311bac.  call temp:= `O`(v4) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L311bb2.  v2:= temp @kind object;
  #L311bb4.  if v2 == 0 then goto L311bd8;
  #L311bb8.  v3:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L311bbc.  if v2 != v3 then goto L311bc2;
  #L311bc0.  goto L311bd8;
  #L311bc2.  call temp:= `b`(v2, v5) @signature `Lkotlinx/coroutines/r;.b:(Ljava/lang/Throwable;)Z` @kind interface;
  #L311bc8.  v5:= temp;
  #L311bca.  if v5 != 0 then goto L311bd6;
  #L311bce.  if v0 == 0 then goto L311bd4;
  #L311bd2.  goto L311bd6;
  #L311bd4.  v1:= 0I;
  #L311bd6.  return v1;
  #L311bd8.  return v0;
}
procedure `boolean` `z0`(`kotlinx.coroutines.e2` v6 @kind this, `kotlinx.coroutines.e2$c` v7 @kind object, `kotlinx.coroutines.s` v8 @kind object, `java.lang.Object` v9 @kind object) @signature `Lkotlinx/coroutines/e2;.z0:(Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L311e38.  v0:= v8.`kotlinx.coroutines.s.k` @type ^`kotlinx.coroutines.t` @kind object;
  #L311e3c.  v1:= 0I;
  #L311e3e.  v2:= 0I;
  #L311e40.  v3:= new `kotlinx.coroutines.e2$b`;
  #L311e44.  call `<init>`(v3, v6, v7, v8, v9) @signature `Lkotlinx/coroutines/e2$b;.<init>:(Lkotlinx/coroutines/e2;Lkotlinx/coroutines/e2$c;Lkotlinx/coroutines/s;Ljava/lang/Object;)V` @kind direct;
  #L311e4a.  v4:= 1I;
  #L311e4c.  v5:= 0I;
  #L311e4e.  call temp:= `d`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/w1$a;.d:(Lkotlinx/coroutines/w1;ZZLwd/l;ILjava/lang/Object;)Lkotlinx/coroutines/e1;` @kind static;
  #L311e54.  v0:= temp @kind object;
  #L311e56.  v1:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L311e5a.  if v0 == v1 then goto L311e62;
  #L311e5e.  v7:= 1I;
  #L311e60.  return v7;
  #L311e62.  call temp:= `e0`(v6, v8) @signature `Lkotlinx/coroutines/e2;.e0:(Lkotlinx/coroutines/internal/r;)Lkotlinx/coroutines/s;` @kind direct;
  #L311e68.  v8:= temp @kind object;
  #L311e6a.  if v8 != 0 then goto L311e38;
  #L311e6e.  v7:= 0I;
  #L311e70.  return v7;
}
procedure `java.lang.String` `A`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.A:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L31260c.  v0:= "Job was cancelled" @kind object;
  #L312610.  return v0 @kind object;
}
procedure `boolean` `B`(`kotlinx.coroutines.e2` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.B:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L311bec.  v0:= instanceof @variable v3 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L311bf0.  v1:= 1I;
  #L311bf2.  if v0 == 0 then goto L311bf8;
  #L311bf6.  return v1;
  #L311bf8.  call temp:= `t`(v2, v3) @signature `Lkotlinx/coroutines/e2;.t:(Ljava/lang/Object;)Z` @kind virtual;
  #L311bfe.  v3:= temp;
  #L311c00.  if v3 == 0 then goto L311c12;
  #L311c04.  call temp:= `L`(v2) @signature `Lkotlinx/coroutines/e2;.L:()Z` @kind virtual;
  #L311c0a.  v3:= temp;
  #L311c0c.  if v3 == 0 then goto L311c12;
  #L311c10.  goto L311c14;
  #L311c12.  v1:= 0I;
  #L311c14.  return v1;
}
procedure `boolean` `L`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.L:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L311c28.  v0:= 1I;
  #L311c2a.  return v0;
}
procedure `boolean` `M`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.M:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L311c3c.  v0:= 0I;
  #L311c3e.  return v0;
}
procedure `kotlinx.coroutines.r` `O`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L312bd0.  v0:= v1.`kotlinx.coroutines.e2._parentHandle` @type ^`java.lang.Object` @kind object;
  #L312bd4.  v0:= (`kotlinx.coroutines.r`) v0 @kind object;
  #L312bd8.  return v0 @kind object;
}
procedure `java.lang.Object` `P`(`kotlinx.coroutines.e2` v2 @kind this) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3121f8.  v0:= v2.`kotlinx.coroutines.e2._state` @type ^`java.lang.Object` @kind object;
  #L3121fc.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.a0` @kind boolean;
  #L312200.  if v1 != 0 then goto L312206;
  #L312204.  return v0 @kind object;
  #L312206.  v0:= (`kotlinx.coroutines.internal.a0`) v0 @kind object;
  #L31220a.  call temp:= `c`(v0, v2) @signature `Lkotlinx/coroutines/internal/a0;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L312210.  goto L3121f8;
}
procedure `kotlinx.coroutines.e1` `Q`(`kotlinx.coroutines.e2` v2 @kind this, `wd.l` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.Q:(Lwd/l;)Lkotlinx/coroutines/e1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L312dcc.  v0:= 0I;
  #L312dce.  v1:= 1I;
  #L312dd0.  call temp:= `k0`(v2, v0, v1, v3) @signature `Lkotlinx/coroutines/e2;.k0:(ZZLwd/l;)Lkotlinx/coroutines/e1;` @kind virtual;
  #L312dd6.  v3:= temp @kind object;
  #L312dd8.  return v3 @kind object;
}
procedure `boolean` `R`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.R:(Ljava/lang/Throwable;)Z` @AccessFlag PROTECTED {
    temp;

  #L311c50.  v1:= 0I;
  #L311c52.  return v1;
}
procedure `void` `S`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.S:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L3131a8.  throw v1;
}
procedure `void` `T`(`kotlinx.coroutines.e2` v1 @kind this, `kotlinx.coroutines.w1` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.T:(Lkotlinx/coroutines/w1;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L3131bc.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L3131c2.  v0:= temp;
  #L3131c4.  if v0 == 0 then goto L3131ec;
  #L3131c8.  call temp:= `O`(v1) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L3131ce.  v0:= temp @kind object;
  #L3131d0.  if v0 != 0 then goto L3131d8;
  #L3131d4.  v0:= 1I;
  #L3131d6.  goto L3131da;
  #L3131d8.  v0:= 0I;
  #L3131da.  if v0 == 0 then goto L3131e0;
  #L3131de.  goto L3131ec;
  #L3131e0.  v2:= new `java.lang.AssertionError`;
  #L3131e4.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3131ea.  throw v2;
  #L3131ec.  if v2 != 0 then goto L3131fc;
  #L3131f0.  v2:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L3131f4.  call `p0`(v1, v2) @signature `Lkotlinx/coroutines/e2;.p0:(Lkotlinx/coroutines/r;)V` @kind virtual;
  #L3131fa.  return @kind void;
  #L3131fc.  call temp:= `start`(v2) @signature `Lkotlinx/coroutines/w1;.start:()Z` @kind interface;
  #L313202.  call temp:= `j0`(v2, v1) @signature `Lkotlinx/coroutines/w1;.j0:(Lkotlinx/coroutines/t;)Lkotlinx/coroutines/r;` @kind interface;
  #L313208.  v2:= temp @kind object;
  #L31320a.  call `p0`(v1, v2) @signature `Lkotlinx/coroutines/e2;.p0:(Lkotlinx/coroutines/r;)V` @kind virtual;
  #L313210.  call temp:= `U`(v1) @signature `Lkotlinx/coroutines/e2;.U:()Z` @kind virtual;
  #L313216.  v0:= temp;
  #L313218.  if v0 == 0 then goto L31322c;
  #L31321c.  call `dispose`(v2) @signature `Lkotlinx/coroutines/e1;.dispose:()V` @kind interface;
  #L313222.  v2:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L313226.  call `p0`(v1, v2) @signature `Lkotlinx/coroutines/e2;.p0:(Lkotlinx/coroutines/r;)V` @kind virtual;
  #L31322c.  return @kind void;
}
procedure `boolean` `U`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.U:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L311c9c.  call temp:= `P`(v1) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L311ca2.  v0:= temp @kind object;
  #L311ca4.  v0:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L311ca8.  v0:= v0 ^~ 1;
  #L311cac.  return v0;
}
procedure `java.util.concurrent.CancellationException` `V`(`kotlinx.coroutines.e2` v5 @kind this) @signature `Lkotlinx/coroutines/e2;.V:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3129e8.  call temp:= `P`(v5) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L3129ee.  v0:= temp @kind object;
  #L3129f0.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L3129f4.  v2:= 0I;
  #L3129f6.  if v1 == 0 then goto L312a0a;
  #L3129fa.  v1:= v0 @kind object;
  #L3129fc.  v1:= (`kotlinx.coroutines.e2$c`) v1 @kind object;
  #L312a00.  call temp:= `d`(v1) @signature `Lkotlinx/coroutines/e2$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L312a06.  v1:= temp @kind object;
  #L312a08.  goto L312a28;
  #L312a0a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L312a0e.  if v1 == 0 then goto L312a1e;
  #L312a12.  v1:= v0 @kind object;
  #L312a14.  v1:= (`kotlinx.coroutines.w`) v1 @kind object;
  #L312a18.  v1:= v1.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L312a1c.  goto L312a28;
  #L312a1e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L312a22.  if v1 != 0 then goto L312a70;
  #L312a26.  v1:= v2 @kind object;
  #L312a28.  v3:= instanceof @variable v1 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L312a2c.  if v3 == 0 then goto L312a36;
  #L312a30.  v2:= v1 @kind object;
  #L312a32.  v2:= (`java.util.concurrent.CancellationException`) v2 @kind object;
  #L312a36.  if v2 != 0 then goto L312a6e;
  #L312a3a.  v2:= new `kotlinx.coroutines.x1`;
  #L312a3e.  v3:= new `java.lang.StringBuilder`;
  #L312a42.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312a48.  v4:= "Parent job is " @kind object;
  #L312a4c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312a52.  call temp:= `r0`(v5, v0) @signature `Lkotlinx/coroutines/e2;.r0:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L312a58.  v0:= temp @kind object;
  #L312a5a.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312a60.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312a66.  v0:= temp @kind object;
  #L312a68.  call `<init>`(v2, v0, v1, v5) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L312a6e.  return v2 @kind object;
  #L312a70.  v1:= new `java.lang.IllegalStateException`;
  #L312a74.  v2:= new `java.lang.StringBuilder`;
  #L312a78.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312a7e.  v3:= "Cannot be cancelling child in this state: " @kind object;
  #L312a82.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312a88.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312a8e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312a94.  v0:= temp @kind object;
  #L312a96.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L312a9c.  v0:= temp @kind object;
  #L312a9e.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L312aa4.  throw v1;
}
procedure `boolean` `W`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.W:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L311cc0.  v0:= 0I;
  #L311cc2.  return v0;
}
procedure `void` `Y`(`kotlinx.coroutines.e2` v2 @kind this, `java.util.concurrent.CancellationException` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.Y:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31302c.  if v3 != 0 then goto L313046;
  #L313030.  v3:= 0I;
  #L313032.  v0:= new `kotlinx.coroutines.x1`;
  #L313036.  call temp:= `l`(v2) @signature `Lkotlinx/coroutines/e2;.l:(Lkotlinx/coroutines/e2;)Ljava/lang/String;` @kind static;
  #L31303c.  v1:= temp @kind object;
  #L31303e.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L313044.  v3:= v0 @kind object;
  #L313046.  call `u`(v2, v3) @signature `Lkotlinx/coroutines/e2;.u:(Ljava/lang/Throwable;)V` @kind virtual;
  #L31304c.  return @kind void;
}
procedure `java.lang.Object` `Z`(`kotlinx.coroutines.e2` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.Z:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L312398.  call temp:= `P`(v3) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L31239e.  v0:= temp @kind object;
  #L3123a0.  call temp:= `x0`(v3, v0, v4) @signature `Lkotlinx/coroutines/e2;.x0:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L3123a6.  v0:= temp @kind object;
  #L3123a8.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3123ae.  v1:= temp @kind object;
  #L3123b0.  if v0 == v1 then goto L3123c2;
  #L3123b4.  call temp:= `b`() @signature `Lkotlinx/coroutines/f2;.b:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3123ba.  v1:= temp @kind object;
  #L3123bc.  if v0 == v1 then goto L312398;
  #L3123c0.  return v0 @kind object;
  #L3123c2.  v0:= new `java.lang.IllegalStateException`;
  #L3123c6.  v1:= new `java.lang.StringBuilder`;
  #L3123ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3123d0.  v2:= "Job " @kind object;
  #L3123d4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3123da.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3123e0.  v2:= " is already complete or completing, but is being completed with " @kind object;
  #L3123e4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3123ea.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3123f0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3123f6.  v1:= temp @kind object;
  #L3123f8.  call temp:= `I`(v3, v4) @signature `Lkotlinx/coroutines/e2;.I:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind direct;
  #L3123fe.  v4:= temp @kind object;
  #L312400.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L312406.  throw v0;
}
procedure `java.lang.String` `c0`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.c0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L312624.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/r0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31262a.  v0:= temp @kind object;
  #L31262c.  return v0 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.e2` v2 @kind this) @signature `Lkotlinx/coroutines/e2;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L311c64.  call temp:= `P`(v2) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L311c6a.  v0:= temp @kind object;
  #L311c6c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L311c70.  if v1 == 0 then goto L311c88;
  #L311c74.  v0:= (`kotlinx.coroutines.r1`) v0 @kind object;
  #L311c78.  call temp:= `e`(v0) @signature `Lkotlinx/coroutines/r1;.e:()Z` @kind interface;
  #L311c7e.  v0:= temp;
  #L311c80.  if v0 == 0 then goto L311c88;
  #L311c84.  v0:= 1I;
  #L311c86.  goto L311c8a;
  #L311c88.  v0:= 0I;
  #L311c8a.  return v0;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Object` v1 @kind object, `wd.p` v2 @kind object) @signature `Lkotlinx/coroutines/e2;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L3121dc.  call temp:= `b`(v0, v1, v2) @signature `Lkotlinx/coroutines/w1$a;.b:(Lkotlinx/coroutines/w1;Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind static;
  #L3121e2.  v1:= temp @kind object;
  #L3121e4.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$b` `get`(`kotlinx.coroutines.e2` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC {
    temp;

  #L312b68.  call temp:= `c`(v0, v1) @signature `Lkotlinx/coroutines/w1$a;.c:(Lkotlinx/coroutines/w1;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind static;
  #L312b6e.  v1:= temp @kind object;
  #L312b70.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$c` `getKey`(`kotlinx.coroutines.e2` v1 @kind this) @signature `Lkotlinx/coroutines/e2;.getKey:()Lkotlin/coroutines/g$c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L312b84.  v0:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L312b88.  return v0 @kind object;
}
procedure `void` `h0`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.h0:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;

  #L3133ac.  return @kind void;
}
procedure `void` `i0`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.i0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L3133c0.  return @kind void;
}
procedure `kotlinx.coroutines.r` `j0`(`kotlinx.coroutines.e2` v6 @kind this, `kotlinx.coroutines.t` v7 @kind object) @signature `Lkotlinx/coroutines/e2;.j0:(Lkotlinx/coroutines/t;)Lkotlinx/coroutines/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L312b9c.  v3:= new `kotlinx.coroutines.s`;
  #L312ba0.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/s;.<init>:(Lkotlinx/coroutines/t;)V` @kind direct;
  #L312ba6.  v1:= 1I;
  #L312ba8.  v2:= 0I;
  #L312baa.  v4:= 2I;
  #L312bac.  v5:= 0I;
  #L312bae.  v0:= v6 @kind object;
  #L312bb0.  call temp:= `d`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/w1$a;.d:(Lkotlinx/coroutines/w1;ZZLwd/l;ILjava/lang/Object;)Lkotlinx/coroutines/e1;` @kind static;
  #L312bb6.  v7:= temp @kind object;
  #L312bb8.  v7:= (`kotlinx.coroutines.r`) v7 @kind object;
  #L312bbc.  return v7 @kind object;
}
procedure `kotlinx.coroutines.e1` `k0`(`kotlinx.coroutines.e2` v6 @kind this, `boolean` v7 , `boolean` v8 , `wd.l` v9 @kind object) @signature `Lkotlinx/coroutines/e2;.k0:(ZZLwd/l;)Lkotlinx/coroutines/e1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L312c84.  call temp:= `b0`(v6, v9, v7) @signature `Lkotlinx/coroutines/e2;.b0:(Lwd/l;Z)Lkotlinx/coroutines/d2;` @kind direct;
  #L312c8a.  v0:= temp @kind object;
  #L312c8c.  call temp:= `P`(v6) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L312c92.  v1:= temp @kind object;
  #L312c94.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.g1` @kind boolean;
  #L312c98.  if v2 == 0 then goto L312cc8;
  #L312c9c.  v2:= v1 @kind object;
  #L312c9e.  v2:= (`kotlinx.coroutines.g1`) v2 @kind object;
  #L312ca2.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/g1;.e:()Z` @kind virtual;
  #L312ca8.  v3:= temp;
  #L312caa.  if v3 == 0 then goto L312cc0;
  #L312cae.  v2:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L312cb2.  call temp:= `compareAndSet`(v2, v6, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L312cb8.  v1:= temp;
  #L312cba.  if v1 == 0 then goto L312c8c;
  #L312cbe.  return v0 @kind object;
  #L312cc0.  call `m0`(v6, v2) @signature `Lkotlinx/coroutines/e2;.m0:(Lkotlinx/coroutines/g1;)V` @kind direct;
  #L312cc6.  goto L312c8c;
  #L312cc8.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L312ccc.  v3:= 0I;
  #L312cce.  if v2 == 0 then goto L312d7e;
  #L312cd2.  v2:= v1 @kind object;
  #L312cd4.  v2:= (`kotlinx.coroutines.r1`) v2 @kind object;
  #L312cd8.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/r1;.f:()Lkotlinx/coroutines/j2;` @kind interface;
  #L312cde.  v2:= temp @kind object;
  #L312ce0.  if v2 != 0 then goto L312cfa;
  #L312ce4.  v2:= "null cannot be cast to non-null type kotlinx.coroutines.JobNode" @kind object;
  #L312ce8.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L312cee.  v1:= (`kotlinx.coroutines.d2`) v1 @kind object;
  #L312cf2.  call `n0`(v6, v1) @signature `Lkotlinx/coroutines/e2;.n0:(Lkotlinx/coroutines/d2;)V` @kind direct;
  #L312cf8.  goto L312c8c;
  #L312cfa.  v4:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L312cfe.  if v7 == 0 then goto L312d60;
  #L312d02.  v5:= instanceof @variable v1 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L312d06.  if v5 == 0 then goto L312d60;
  #L312d0a.  @monitorenter v1
  #L312d0c.  v3:= v1 @kind object;
  #L312d0e.  v3:= (`kotlinx.coroutines.e2$c`) v3 @kind object;
  #L312d12.  call temp:= `d`(v3) @signature `Lkotlinx/coroutines/e2$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L312d18.  v3:= temp @kind object;
  #L312d1a.  if v3 == 0 then goto L312d38;
  #L312d1e.  v5:= instanceof @variable v9 @type ^`kotlinx.coroutines.s` @kind boolean;
  #L312d22.  if v5 == 0 then goto L312d52;
  #L312d26.  v5:= v1 @kind object;
  #L312d28.  v5:= (`kotlinx.coroutines.e2$c`) v5 @kind object;
  #L312d2c.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/e2$c;.h:()Z` @kind virtual;
  #L312d32.  v5:= temp;
  #L312d34.  if v5 != 0 then goto L312d52;
  #L312d38.  call temp:= `n`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/e2;.n:(Ljava/lang/Object;Lkotlinx/coroutines/j2;Lkotlinx/coroutines/d2;)Z` @kind direct;
  #L312d3e.  v4:= temp;
  #L312d40.  if v4 != 0 then goto L312d48;
  #L312d44.  @monitorexit v1
  #L312d46.  goto L312c8c;
  #L312d48.  if v3 != 0 then goto L312d50;
  #L312d4c.  @monitorexit v1
  #L312d4e.  return v0 @kind object;
  #L312d50.  v4:= v0 @kind object;
  #L312d52.  v5:= `@@od.t.a` @type ^`od.t` @kind object;
  #L312d56.  @monitorexit v1
  #L312d58.  goto L312d60;
  #L312d5a.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L312d5c.  @monitorexit v1
  #L312d5e.  throw v7;
  #L312d60.  if v3 == 0 then goto L312d70;
  #L312d64.  if v8 == 0 then goto L312d6e;
  #L312d68.  call temp:= `invoke`(v9, v3) @signature `Lwd/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L312d6e.  return v4 @kind object;
  #L312d70.  call temp:= `n`(v6, v1, v2, v0) @signature `Lkotlinx/coroutines/e2;.n:(Ljava/lang/Object;Lkotlinx/coroutines/j2;Lkotlinx/coroutines/d2;)Z` @kind direct;
  #L312d76.  v1:= temp;
  #L312d78.  if v1 == 0 then goto L312c8c;
  #L312d7c.  return v0 @kind object;
  #L312d7e.  if v8 == 0 then goto L312da0;
  #L312d82.  v7:= instanceof @variable v1 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L312d86.  if v7 == 0 then goto L312d90;
  #L312d8a.  v1:= (`kotlinx.coroutines.w`) v1 @kind object;
  #L312d8e.  goto L312d92;
  #L312d90.  v1:= v3 @kind object;
  #L312d92.  if v1 == 0 then goto L312d9a;
  #L312d96.  v3:= v1.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L312d9a.  call temp:= `invoke`(v9, v3) @signature `Lwd/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L312da0.  v7:= `@@kotlinx.coroutines.k2.g` @type ^`kotlinx.coroutines.k2` @kind object;
  #L312da4.  return v7 @kind object;
  catch `java.lang.Throwable` @[L312d0c..L312d40] goto L312d5a;
  catch `java.lang.Throwable` @[L312d52..L312d56] goto L312d5a;
}
procedure `void` `l0`(`kotlinx.coroutines.e2` v0 @kind this) @signature `Lkotlinx/coroutines/e2;.l0:()V` @AccessFlag PROTECTED {
    temp;

  #L3133d4.  return @kind void;
}
procedure `kotlin.coroutines.g` `minusKey`(`kotlinx.coroutines.e2` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L312b30.  call temp:= `e`(v0, v1) @signature `Lkotlinx/coroutines/w1$a;.e:(Lkotlinx/coroutines/w1;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @kind static;
  #L312b36.  v1:= temp @kind object;
  #L312b38.  return v1 @kind object;
}
procedure `void` `o0`(`kotlinx.coroutines.e2` v3 @kind this, `kotlinx.coroutines.d2` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.o0:(Lkotlinx/coroutines/d2;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L313474.  call temp:= `P`(v3) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L31347a.  v0:= temp @kind object;
  #L31347c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.d2` @kind boolean;
  #L313480.  if v1 == 0 then goto L3134a4;
  #L313484.  if v0 == v4 then goto L31348a;
  #L313488.  return @kind void;
  #L31348a.  v1:= `@@kotlinx.coroutines.e2.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31348e.  call temp:= `c`() @signature `Lkotlinx/coroutines/f2;.c:()Lkotlinx/coroutines/g1;` @kind static;
  #L313494.  v2:= temp @kind object;
  #L313496.  call temp:= `compareAndSet`(v1, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31349c.  v0:= temp;
  #L31349e.  if v0 == 0 then goto L313474;
  #L3134a2.  return @kind void;
  #L3134a4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L3134a8.  if v1 == 0 then goto L3134c2;
  #L3134ac.  v0:= (`kotlinx.coroutines.r1`) v0 @kind object;
  #L3134b0.  call temp:= `f`(v0) @signature `Lkotlinx/coroutines/r1;.f:()Lkotlinx/coroutines/j2;` @kind interface;
  #L3134b6.  v0:= temp @kind object;
  #L3134b8.  if v0 == 0 then goto L3134c2;
  #L3134bc.  call temp:= `s`(v4) @signature `Lkotlinx/coroutines/internal/r;.s:()Z` @kind virtual;
  #L3134c2.  return @kind void;
}
procedure `void` `p`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.p:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L313018.  return @kind void;
}
procedure `void` `p0`(`kotlinx.coroutines.e2` v0 @kind this, `kotlinx.coroutines.r` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.p0:(Lkotlinx/coroutines/r;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3134d4.  v0.`kotlinx.coroutines.e2._parentHandle` @type ^`java.lang.Object` := v1 @kind object;
  #L3134d8.  return @kind void;
}
procedure `kotlin.coroutines.g` `plus`(`kotlinx.coroutines.e2` v0 @kind this, `kotlin.coroutines.g` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L312b4c.  call temp:= `f`(v0, v1) @signature `Lkotlinx/coroutines/w1$a;.f:(Lkotlinx/coroutines/w1;Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind static;
  #L312b52.  v1:= temp @kind object;
  #L312b54.  return v1 @kind object;
}
procedure `java.lang.Object` `q`(`kotlinx.coroutines.e2` v2 @kind this, `kotlin.coroutines.d` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.q:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L311f0c.  call temp:= `P`(v2) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L311f12.  v0:= temp @kind object;
  #L311f14.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L311f18.  if v1 != 0 then goto L311f5c;
  #L311f1c.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L311f20.  if v1 == 0 then goto L311f52;
  #L311f24.  v0:= (`kotlinx.coroutines.w`) v0 @kind object;
  #L311f28.  v0:= v0.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L311f2c.  call temp:= `d`() @signature `Lkotlinx/coroutines/q0;.d:()Z` @kind static;
  #L311f32.  v1:= temp;
  #L311f34.  if v1 == 0 then goto L311f50;
  #L311f38.  v1:= instanceof @variable v3 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L311f3c.  if v1 != 0 then goto L311f42;
  #L311f40.  throw v0;
  #L311f42.  v3:= (`kotlin.coroutines.jvm.internal.e`) v3 @kind object;
  #L311f46.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/e0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @kind static;
  #L311f4c.  v3:= temp @kind object;
  #L311f4e.  throw v3;
  #L311f50.  throw v0;
  #L311f52.  call temp:= `h`(v0) @signature `Lkotlinx/coroutines/f2;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L311f58.  v3:= temp @kind object;
  #L311f5a.  return v3 @kind object;
  #L311f5c.  call temp:= `q0`(v2, v0) @signature `Lkotlinx/coroutines/e2;.q0:(Ljava/lang/Object;)I` @kind direct;
  #L311f62.  v0:= temp;
  #L311f64.  if v0 < 0 then goto L311f0c;
  #L311f68.  call temp:= `s`(v2, v3) @signature `Lkotlinx/coroutines/e2;.s:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @kind direct;
  #L311f6e.  v3:= temp @kind object;
  #L311f70.  return v3 @kind object;
}
procedure `java.util.concurrent.CancellationException` `s0`(`kotlinx.coroutines.e2` v1 @kind this, `java.lang.Throwable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/e2;.s0:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L312af0.  v0:= instanceof @variable v2 @type ^`java.util.concurrent.CancellationException` @kind boolean;
  #L312af4.  if v0 == 0 then goto L312b00;
  #L312af8.  v0:= v2 @kind object;
  #L312afa.  v0:= (`java.util.concurrent.CancellationException`) v0 @kind object;
  #L312afe.  goto L312b02;
  #L312b00.  v0:= 0I;
  #L312b02.  if v0 != 0 then goto L312b1c;
  #L312b06.  v0:= new `kotlinx.coroutines.x1`;
  #L312b0a.  if v3 != 0 then goto L312b16;
  #L312b0e.  call temp:= `l`(v1) @signature `Lkotlinx/coroutines/e2;.l:(Lkotlinx/coroutines/e2;)Ljava/lang/String;` @kind static;
  #L312b14.  v3:= temp @kind object;
  #L312b16.  call `<init>`(v0, v3, v2, v1) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L312b1c.  return v0 @kind object;
}
procedure `boolean` `start`(`kotlinx.coroutines.e2` v2 @kind this) @signature `Lkotlinx/coroutines/e2;.start:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L311cd4.  call temp:= `P`(v2) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L311cda.  v0:= temp @kind object;
  #L311cdc.  call temp:= `q0`(v2, v0) @signature `Lkotlinx/coroutines/e2;.q0:(Ljava/lang/Object;)I` @kind direct;
  #L311ce2.  v0:= temp;
  #L311ce4.  if v0 == 0 then goto L311cf2;
  #L311ce8.  v1:= 1I;
  #L311cea.  if v0 == v1 then goto L311cf0;
  #L311cee.  goto L311cd4;
  #L311cf0.  return v1;
  #L311cf2.  v0:= 0I;
  #L311cf4.  return v0;
}
procedure `boolean` `t`(`kotlinx.coroutines.e2` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/e2;.t:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L311b1c.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L311b22.  v0:= temp @kind object;
  #L311b24.  call temp:= `M`(v3) @signature `Lkotlinx/coroutines/e2;.M:()Z` @kind virtual;
  #L311b2a.  v1:= temp;
  #L311b2c.  v2:= 1I;
  #L311b2e.  if v1 == 0 then goto L311b44;
  #L311b32.  call temp:= `x`(v3, v4) @signature `Lkotlinx/coroutines/e2;.x:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L311b38.  v0:= temp @kind object;
  #L311b3a.  v1:= `@@kotlinx.coroutines.f2.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L311b3e.  if v0 != v1 then goto L311b44;
  #L311b42.  return v2;
  #L311b44.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L311b4a.  v1:= temp @kind object;
  #L311b4c.  if v0 != v1 then goto L311b58;
  #L311b50.  call temp:= `X`(v3, v4) @signature `Lkotlinx/coroutines/e2;.X:(Ljava/lang/Object;)Ljava/lang/Object;` @kind direct;
  #L311b56.  v0:= temp @kind object;
  #L311b58.  call temp:= `a`() @signature `Lkotlinx/coroutines/f2;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L311b5e.  v4:= temp @kind object;
  #L311b60.  if v0 != v4 then goto L311b66;
  #L311b64.  goto L311b86;
  #L311b66.  v4:= `@@kotlinx.coroutines.f2.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L311b6a.  if v0 != v4 then goto L311b70;
  #L311b6e.  goto L311b86;
  #L311b70.  call temp:= `f`() @signature `Lkotlinx/coroutines/f2;.f:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L311b76.  v4:= temp @kind object;
  #L311b78.  if v0 != v4 then goto L311b80;
  #L311b7c.  v2:= 0I;
  #L311b7e.  goto L311b86;
  #L311b80.  call `p`(v3, v0) @signature `Lkotlinx/coroutines/e2;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L311b86.  return v2;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.e2` v2 @kind this) @signature `Lkotlinx/coroutines/e2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L312714.  v0:= new `java.lang.StringBuilder`;
  #L312718.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31271e.  call temp:= `u0`(v2) @signature `Lkotlinx/coroutines/e2;.u0:()Ljava/lang/String;` @kind virtual;
  #L312724.  v1:= temp @kind object;
  #L312726.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31272c.  v1:= 64I;
  #L312730.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L312736.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/r0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31273c.  v1:= temp @kind object;
  #L31273e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312744.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31274a.  v0:= temp @kind object;
  #L31274c.  return v0 @kind object;
}
procedure `void` `u`(`kotlinx.coroutines.e2` v0 @kind this, `java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.u:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;

  #L313060.  call temp:= `t`(v0, v1) @signature `Lkotlinx/coroutines/e2;.t:(Ljava/lang/Object;)Z` @kind virtual;
  #L313066.  return @kind void;
}
procedure `java.lang.String` `u0`(`kotlinx.coroutines.e2` v2 @kind this) @signature `Lkotlinx/coroutines/e2;.u0:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3126b8.  v0:= new `java.lang.StringBuilder`;
  #L3126bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3126c2.  call temp:= `c0`(v2) @signature `Lkotlinx/coroutines/e2;.c0:()Ljava/lang/String;` @kind virtual;
  #L3126c8.  v1:= temp @kind object;
  #L3126ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3126d0.  v1:= 123I;
  #L3126d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3126da.  call temp:= `P`(v2) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L3126e0.  v1:= temp @kind object;
  #L3126e2.  call temp:= `r0`(v2, v1) @signature `Lkotlinx/coroutines/e2;.r0:(Ljava/lang/Object;)Ljava/lang/String;` @kind direct;
  #L3126e8.  v1:= temp @kind object;
  #L3126ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3126f0.  v1:= 125I;
  #L3126f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3126fa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312700.  v0:= temp @kind object;
  #L312702.  return v0 @kind object;
}
procedure `java.util.concurrent.CancellationException` `v`(`kotlinx.coroutines.e2` v4 @kind this) @signature `Lkotlinx/coroutines/e2;.v:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3128bc.  call temp:= `P`(v4) @signature `Lkotlinx/coroutines/e2;.P:()Ljava/lang/Object;` @kind virtual;
  #L3128c2.  v0:= temp @kind object;
  #L3128c4.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.e2$c` @kind boolean;
  #L3128c8.  v2:= "Job is still new or active: " @kind object;
  #L3128cc.  if v1 == 0 then goto L31294a;
  #L3128d0.  v0:= (`kotlinx.coroutines.e2$c`) v0 @kind object;
  #L3128d4.  call temp:= `d`(v0) @signature `Lkotlinx/coroutines/e2$c;.d:()Ljava/lang/Throwable;` @kind virtual;
  #L3128da.  v0:= temp @kind object;
  #L3128dc.  if v0 == 0 then goto L312918;
  #L3128e0.  v1:= new `java.lang.StringBuilder`;
  #L3128e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3128ea.  call temp:= `a`(v4) @signature `Lkotlinx/coroutines/r0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3128f0.  v3:= temp @kind object;
  #L3128f2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3128f8.  v3:= " is cancelling" @kind object;
  #L3128fc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312902.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312908.  v1:= temp @kind object;
  #L31290a.  call temp:= `s0`(v4, v0, v1) @signature `Lkotlinx/coroutines/e2;.s0:(Ljava/lang/Throwable;Ljava/lang/String;)Ljava/util/concurrent/CancellationException;` @kind virtual;
  #L312910.  v0:= temp @kind object;
  #L312912.  if v0 == 0 then goto L312918;
  #L312916.  goto L3129a4;
  #L312918.  v0:= new `java.lang.IllegalStateException`;
  #L31291c.  v1:= new `java.lang.StringBuilder`;
  #L312920.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L312926.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31292c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312932.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L312938.  v1:= temp @kind object;
  #L31293a.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L312940.  v1:= temp @kind object;
  #L312942.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L312948.  throw v0;
  #L31294a.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.r1` @kind boolean;
  #L31294e.  if v1 != 0 then goto L3129a6;
  #L312952.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L312956.  v2:= 0I;
  #L312958.  if v1 == 0 then goto L312970;
  #L31295c.  v0:= (`kotlinx.coroutines.w`) v0 @kind object;
  #L312960.  v0:= v0.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L312964.  v1:= 1I;
  #L312966.  call temp:= `t0`(v4, v0, v2, v1, v2) @signature `Lkotlinx/coroutines/e2;.t0:(Lkotlinx/coroutines/e2;Ljava/lang/Throwable;Ljava/lang/String;ILjava/lang/Object;)Ljava/util/concurrent/CancellationException;` @kind static;
  #L31296c.  v0:= temp @kind object;
  #L31296e.  goto L3129a4;
  #L312970.  v0:= new `kotlinx.coroutines.x1`;
  #L312974.  v1:= new `java.lang.StringBuilder`;
  #L312978.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31297e.  call temp:= `a`(v4) @signature `Lkotlinx/coroutines/r0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L312984.  v3:= temp @kind object;
  #L312986.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31298c.  v3:= " has completed normally" @kind object;
  #L312990.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L312996.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31299c.  v1:= temp @kind object;
  #L31299e.  call `<init>`(v0, v1, v2, v4) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L3129a4.  return v0 @kind object;
  #L3129a6.  v0:= new `java.lang.IllegalStateException`;
  #L3129aa.  v1:= new `java.lang.StringBuilder`;
  #L3129ae.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3129b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3129ba.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3129c0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3129c6.  v1:= temp @kind object;
  #L3129c8.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3129ce.  v1:= temp @kind object;
  #L3129d0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3129d6.  throw v0;
}
procedure `void` `y`(`kotlinx.coroutines.e2` v0 @kind this, `kotlinx.coroutines.m2` v1 @kind object) @signature `Lkotlinx/coroutines/e2;.y:(Lkotlinx/coroutines/m2;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3133e8.  call temp:= `t`(v0, v1) @signature `Lkotlinx/coroutines/e2;.t:(Ljava/lang/Object;)Z` @kind virtual;
  #L3133ee.  return @kind void;
}
