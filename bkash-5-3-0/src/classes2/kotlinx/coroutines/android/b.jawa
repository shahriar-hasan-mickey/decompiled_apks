record `kotlinx.coroutines.android.b` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.a` @kind class, `kotlinx.coroutines.f0` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.android.b._preHandler` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`kotlinx.coroutines.android.b` v1 @kind this) @signature `Lkotlinx/coroutines/android/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L313e74.  v0:= `@@kotlinx.coroutines.f0.e` @type ^`kotlinx.coroutines.f0$a` @kind object;
  #L313e78.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/a;.<init>:(Lkotlin/coroutines/g$c;)V` @kind direct;
  #L313e7e.  v1.`kotlinx.coroutines.android.b._preHandler` @type ^`java.lang.Object` := v1 @kind object;
  #L313e82.  return @kind void;
}
procedure `java.lang.reflect.Method` `l0`(`kotlinx.coroutines.android.b` v5 @kind this) @signature `Lkotlinx/coroutines/android/b;.l0:()Ljava/lang/reflect/Method;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L313dfc.  v0:= v5.`kotlinx.coroutines.android.b._preHandler` @type ^`java.lang.Object` @kind object;
  #L313e00.  if v0 == v5 then goto L313e0a;
  #L313e04.  v0:= (`java.lang.reflect.Method`) v0 @kind object;
  #L313e08.  return v0 @kind object;
  #L313e0a.  v0:= 0I;
  #L313e0c.  v1:= constclass @type ^`java.lang.Thread` @kind object;
  #L313e10.  v2:= "getUncaughtExceptionPreHandler" @kind object;
  #L313e14.  v3:= 0I;
  #L313e16.  v4:= new `java.lang.Class`[v3];
  #L313e1a.  call temp:= `getDeclaredMethod`(v1, v2, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L313e20.  v1:= temp @kind object;
  #L313e22.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L313e28.  v2:= temp;
  #L313e2a.  call temp:= `isPublic`(v2) @signature `Ljava/lang/reflect/Modifier;.isPublic:(I)Z` @kind static;
  #L313e30.  v2:= temp;
  #L313e32.  if v2 == 0 then goto L313e4c;
  #L313e36.  call temp:= `getModifiers`(v1) @signature `Ljava/lang/reflect/Method;.getModifiers:()I` @kind virtual;
  #L313e3c.  v2:= temp;
  #L313e3e.  call temp:= `isStatic`(v2) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L313e44.  v2:= temp;
  #L313e46.  if v2 == 0 then goto L313e4c;
  #L313e4a.  v3:= 1I;
  #L313e4c.  if v3 == 0 then goto L313e52;
  #L313e50.  v0:= v1 @kind object;
  #L313e52.  v5.`kotlinx.coroutines.android.b._preHandler` @type ^`java.lang.Object` := v0 @kind object;
  #L313e56.  return v0 @kind object;
  catch `java.lang.Throwable` @[L313e0c..L313e46] goto L313e52;
}
procedure `void` `a0`(`kotlinx.coroutines.android.b` v2 @kind this, `kotlin.coroutines.g` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lkotlinx/coroutines/android/b;.a0:(Lkotlin/coroutines/g;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L313e94.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L313e98.  v0:= 0I;
  #L313e9a.  v1:= 26I;
  #L313e9e.  if v1 > v3 then goto L313eae;
  #L313ea2.  v1:= 28I;
  #L313ea6.  if v3 >= v1 then goto L313eae;
  #L313eaa.  v3:= 1I;
  #L313eac.  goto L313eb0;
  #L313eae.  v3:= 0I;
  #L313eb0.  if v3 == 0 then goto L313ef2;
  #L313eb4.  call temp:= `l0`(v2) @signature `Lkotlinx/coroutines/android/b;.l0:()Ljava/lang/reflect/Method;` @kind direct;
  #L313eba.  v3:= temp @kind object;
  #L313ebc.  v1:= 0I;
  #L313ebe.  if v3 == 0 then goto L313ed0;
  #L313ec2.  v0:= new `java.lang.Object`[v0];
  #L313ec6.  call temp:= `invoke`(v3, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L313ecc.  v3:= temp @kind object;
  #L313ece.  goto L313ed2;
  #L313ed0.  v3:= v1 @kind object;
  #L313ed2.  v0:= instanceof @variable v3 @type ^`java.lang.Thread$UncaughtExceptionHandler` @kind boolean;
  #L313ed6.  if v0 == 0 then goto L313ee0;
  #L313eda.  v1:= v3 @kind object;
  #L313edc.  v1:= (`java.lang.Thread$UncaughtExceptionHandler`) v1 @kind object;
  #L313ee0.  if v1 == 0 then goto L313ef2;
  #L313ee4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L313eea.  v3:= temp @kind object;
  #L313eec.  call `uncaughtException`(v1, v3, v4) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L313ef2.  return @kind void;
}
