record `kotlinx.coroutines.android.a` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.u` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.android.a` v0 @kind this) @signature `Lkotlinx/coroutines/android/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L313de4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L313dea.  return @kind void;
}
procedure `java.lang.String` `a`(`kotlinx.coroutines.android.a` v1 @kind this) @signature `Lkotlinx/coroutines/android/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313d84.  v0:= "For tests Dispatchers.setMain from kotlinx-coroutines-test module can be used" @kind object;
  #L313d88.  return v0 @kind object;
}
procedure `kotlinx.coroutines.i2` `b`(`kotlinx.coroutines.android.a` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lkotlinx/coroutines/android/a;.b:(Ljava/util/List;)Lkotlinx/coroutines/i2;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313d9c.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L313da2.  v4:= temp @kind object;
  #L313da4.  if v4 == 0 then goto L313dc2;
  #L313da8.  v0:= new `kotlinx.coroutines.android.c`;
  #L313dac.  v1:= 1I;
  #L313dae.  call temp:= `a`(v4, v1) @signature `Lkotlinx/coroutines/android/e;.a:(Landroid/os/Looper;Z)Landroid/os/Handler;` @kind static;
  #L313db4.  v4:= temp @kind object;
  #L313db6.  v1:= 2I;
  #L313db8.  v2:= 0I;
  #L313dba.  call `<init>`(v0, v4, v2, v1, v2) @signature `Lkotlinx/coroutines/android/c;.<init>:(Landroid/os/Handler;Ljava/lang/String;ILkotlin/jvm/internal/g;)V` @kind direct;
  #L313dc0.  return v0 @kind object;
  #L313dc2.  v4:= new `java.lang.IllegalStateException`;
  #L313dc6.  v0:= "The main looper is not available" @kind object;
  #L313dca.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313dd0.  throw v4;
}
procedure `int` `c`(`kotlinx.coroutines.android.a` v1 @kind this) @signature `Lkotlinx/coroutines/android/a;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313d6c.  v0:= 1073741823I;
  #L313d72.  return v0;
}
