record `kotlinx.coroutines.scheduling.a$d` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.BLOCKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.CPU_ACQUIRED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.DORMANT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.PARKING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d` `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlinx.coroutines.scheduling.a$d`[] `@@kotlinx.coroutines.scheduling.a$d.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/a$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3192a0.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3192a4.  v1:= "CPU_ACQUIRED" @kind object;
  #L3192a8.  v2:= 0I;
  #L3192aa.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3192b0.  `@@kotlinx.coroutines.scheduling.a$d.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3192b4.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3192b8.  v1:= "BLOCKING" @kind object;
  #L3192bc.  v2:= 1I;
  #L3192be.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3192c4.  `@@kotlinx.coroutines.scheduling.a$d.BLOCKING` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3192c8.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3192cc.  v1:= "PARKING" @kind object;
  #L3192d0.  v2:= 2I;
  #L3192d2.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3192d8.  `@@kotlinx.coroutines.scheduling.a$d.PARKING` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3192dc.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3192e0.  v1:= "DORMANT" @kind object;
  #L3192e4.  v2:= 3I;
  #L3192e6.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3192ec.  `@@kotlinx.coroutines.scheduling.a$d.DORMANT` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L3192f0.  v0:= new `kotlinx.coroutines.scheduling.a$d`;
  #L3192f4.  v1:= "TERMINATED" @kind object;
  #L3192f8.  v2:= 4I;
  #L3192fa.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L319300.  `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @type ^`kotlinx.coroutines.scheduling.a$d` := v0 @kind object;
  #L319304.  call temp:= `a`() @signature `Lkotlinx/coroutines/scheduling/a$d;.a:()[Lkotlinx/coroutines/scheduling/a$d;` @kind static;
  #L31930a.  v0:= temp @kind object;
  #L31930c.  `@@kotlinx.coroutines.scheduling.a$d.g` @type ^`kotlinx.coroutines.scheduling.a$d`[] := v0 @kind object;
  #L319310.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.a$d` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/scheduling/a$d;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L319324.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L31932a.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.a$d`[] `a`() @signature `Lkotlinx/coroutines/scheduling/a$d;.a:()[Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L319230.  v0:= 5I;
  #L319232.  v0:= new `kotlinx.coroutines.scheduling.a$d`[v0];
  #L319236.  v1:= `@@kotlinx.coroutines.scheduling.a$d.CPU_ACQUIRED` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31923a.  v2:= 0I;
  #L31923c.  v0[v2]:= v1 @kind object;
  #L319240.  v1:= `@@kotlinx.coroutines.scheduling.a$d.BLOCKING` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L319244.  v2:= 1I;
  #L319246.  v0[v2]:= v1 @kind object;
  #L31924a.  v1:= `@@kotlinx.coroutines.scheduling.a$d.PARKING` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31924e.  v2:= 2I;
  #L319250.  v0[v2]:= v1 @kind object;
  #L319254.  v1:= `@@kotlinx.coroutines.scheduling.a$d.DORMANT` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L319258.  v2:= 3I;
  #L31925a.  v0[v2]:= v1 @kind object;
  #L31925e.  v1:= `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L319262.  v2:= 4I;
  #L319264.  v0[v2]:= v1 @kind object;
  #L319268.  return v0 @kind object;
}
procedure `kotlinx.coroutines.scheduling.a$d` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlinx/coroutines/scheduling/a$d;.valueOf:(Ljava/lang/String;)Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L31920c.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L319210.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L319216.  v1:= temp @kind object;
  #L319218.  v1:= (`kotlinx.coroutines.scheduling.a$d`) v1 @kind object;
  #L31921c.  return v1 @kind object;
}
procedure `kotlinx.coroutines.scheduling.a$d`[] `values`() @signature `Lkotlinx/coroutines/scheduling/a$d;.values:()[Lkotlinx/coroutines/scheduling/a$d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L31927c.  v0:= `@@kotlinx.coroutines.scheduling.a$d.g` @type ^`kotlinx.coroutines.scheduling.a$d`[] @kind object;
  #L319280.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L319286.  v0:= temp @kind object;
  #L319288.  v0:= (`kotlinx.coroutines.scheduling.a$d`[]) v0 @kind object;
  #L31928c.  return v0 @kind object;
}
