record `kotlinx.coroutines.scheduling.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.Executor` @kind interface, `java.io.Closeable` @kind interface {
  `int` `kotlinx.coroutines.scheduling.a._isTerminated` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.scheduling.a.controlState` @AccessFlag VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.scheduling.a.g` @AccessFlag PUBLIC_FINAL;
  `int` `kotlinx.coroutines.scheduling.a.h` @AccessFlag PUBLIC_FINAL;
  `long` `kotlinx.coroutines.scheduling.a.i` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `kotlinx.coroutines.scheduling.a.j` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.d` `kotlinx.coroutines.scheduling.a.k` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.scheduling.d` `kotlinx.coroutines.scheduling.a.l` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.c0` `kotlinx.coroutines.scheduling.a.m` @AccessFlag PUBLIC_FINAL;
  `long` `kotlinx.coroutines.scheduling.a.parkedWorkersStack` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
}
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.a.n` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.scheduling.a.o` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicIntegerFieldUpdater` `@@kotlinx.coroutines.scheduling.a.p` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.internal.f0` `@@kotlinx.coroutines.scheduling.a.q` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/scheduling/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31a3c4.  v0:= new `kotlinx.coroutines.scheduling.a$a`;
  #L31a3c8.  v1:= 0I;
  #L31a3ca.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/a$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L31a3d0.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L31a3d4.  v1:= "NOT_IN_STACK" @kind object;
  #L31a3d8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a3de.  `@@kotlinx.coroutines.scheduling.a.q` @type ^`kotlinx.coroutines.internal.f0` := v0 @kind object;
  #L31a3e2.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L31a3e6.  v1:= "parkedWorkersStack" @kind object;
  #L31a3ea.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L31a3f0.  v0:= temp @kind object;
  #L31a3f2.  `@@kotlinx.coroutines.scheduling.a.n` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L31a3f6.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L31a3fa.  v1:= "controlState" @kind object;
  #L31a3fe.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L31a404.  v0:= temp @kind object;
  #L31a406.  `@@kotlinx.coroutines.scheduling.a.o` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L31a40a.  v0:= constclass @type ^`kotlinx.coroutines.scheduling.a` @kind object;
  #L31a40e.  v1:= "_isTerminated" @kind object;
  #L31a412.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;` @kind static;
  #L31a418.  v0:= temp @kind object;
  #L31a41a.  `@@kotlinx.coroutines.scheduling.a.p` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` := v0 @kind object;
  #L31a41e.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `int` v4 , `int` v5 , `long` v6 , `java.lang.String` v8 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.<init>:(IIJLjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L31a430.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31a436.  v3.`kotlinx.coroutines.scheduling.a.g` @type ^`int` := v4;
  #L31a43a.  v3.`kotlinx.coroutines.scheduling.a.h` @type ^`int` := v5;
  #L31a43e.  v3.`kotlinx.coroutines.scheduling.a.i` @type ^`long` := v6 @kind wide;
  #L31a442.  v3.`kotlinx.coroutines.scheduling.a.j` @type ^`java.lang.String` := v8 @kind object;
  #L31a446.  v8:= 0I;
  #L31a448.  v0:= 1I;
  #L31a44a.  if v4 < v0 then goto L31a452;
  #L31a44e.  v1:= 1I;
  #L31a450.  goto L31a454;
  #L31a452.  v1:= 0I;
  #L31a454.  if v1 == 0 then goto L31a594;
  #L31a458.  if v5 < v4 then goto L31a460;
  #L31a45c.  v1:= 1I;
  #L31a45e.  goto L31a462;
  #L31a460.  v1:= 0I;
  #L31a462.  v2:= "Max pool size " @kind object;
  #L31a466.  if v1 == 0 then goto L31a552;
  #L31a46a.  v1:= 2097150I;
  #L31a470.  if v5 > v1 then goto L31a478;
  #L31a474.  v1:= 1I;
  #L31a476.  goto L31a47a;
  #L31a478.  v1:= 0I;
  #L31a47a.  if v1 == 0 then goto L31a516;
  #L31a47e.  v1:= 0L;
  #L31a482.  v5:= lcmp(v6, v1);
  #L31a486.  if v5 <= 0 then goto L31a48c;
  #L31a48a.  goto L31a48e;
  #L31a48c.  v0:= 0I;
  #L31a48e.  if v0 == 0 then goto L31a4d6;
  #L31a492.  v5:= new `kotlinx.coroutines.scheduling.d`;
  #L31a496.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @kind direct;
  #L31a49c.  v3.`kotlinx.coroutines.scheduling.a.k` @type ^`kotlinx.coroutines.scheduling.d` := v5 @kind object;
  #L31a4a0.  v5:= new `kotlinx.coroutines.scheduling.d`;
  #L31a4a4.  call `<init>`(v5) @signature `Lkotlinx/coroutines/scheduling/d;.<init>:()V` @kind direct;
  #L31a4aa.  v3.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` := v5 @kind object;
  #L31a4ae.  v3.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` := v1 @kind wide;
  #L31a4b2.  v5:= new `kotlinx.coroutines.internal.c0`;
  #L31a4b6.  v6:= v4 + 1;
  #L31a4ba.  call `<init>`(v5, v6) @signature `Lkotlinx/coroutines/internal/c0;.<init>:(I)V` @kind direct;
  #L31a4c0.  v3.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` := v5 @kind object;
  #L31a4c4.  v4:= (`long`) v4 @kind i2l;
  #L31a4c6.  v6:= 42I;
  #L31a4ca.  v4:= v4 ^< v6 @kind long;
  #L31a4cc.  v3.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` := v4 @kind wide;
  #L31a4d0.  v3.`kotlinx.coroutines.scheduling.a._isTerminated` @type ^`int` := v8;
  #L31a4d4.  return @kind void;
  #L31a4d6.  v4:= new `java.lang.StringBuilder`;
  #L31a4da.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a4e0.  v5:= "Idle worker keep alive time " @kind object;
  #L31a4e4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a4ea.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a4f0.  v5:= " must be positive" @kind object;
  #L31a4f4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a4fa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a500.  v4:= temp @kind object;
  #L31a502.  v5:= new `java.lang.IllegalArgumentException`;
  #L31a506.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a50c.  v4:= temp @kind object;
  #L31a50e.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a514.  throw v5;
  #L31a516.  v4:= new `java.lang.StringBuilder`;
  #L31a51a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a520.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a526.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a52c.  v5:= " should not exceed maximal supported number of threads 2097150" @kind object;
  #L31a530.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a536.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a53c.  v4:= temp @kind object;
  #L31a53e.  v5:= new `java.lang.IllegalArgumentException`;
  #L31a542.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a548.  v4:= temp @kind object;
  #L31a54a.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a550.  throw v5;
  #L31a552.  v6:= new `java.lang.StringBuilder`;
  #L31a556.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a55c.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a562.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a568.  v5:= " should be greater than or equals to core pool size " @kind object;
  #L31a56c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a572.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a578.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a57e.  v4:= temp @kind object;
  #L31a580.  v5:= new `java.lang.IllegalArgumentException`;
  #L31a584.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a58a.  v4:= temp @kind object;
  #L31a58c.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a592.  throw v5;
  #L31a594.  v5:= new `java.lang.StringBuilder`;
  #L31a598.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a59e.  v6:= "Core pool size " @kind object;
  #L31a5a2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a5a8.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a5ae.  v4:= " should be at least 1" @kind object;
  #L31a5b2.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a5b8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a5be.  v4:= temp @kind object;
  #L31a5c0.  v5:= new `java.lang.IllegalArgumentException`;
  #L31a5c4.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a5ca.  v4:= temp @kind object;
  #L31a5cc.  call `<init>`(v5, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a5d2.  throw v5;
}
procedure `void` `Y`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/a;.Y:(Z)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31a940.  v0:= `@@kotlinx.coroutines.scheduling.a.o` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L31a944.  v1:= 2097152L;
  #L31a94a.  call temp:= `addAndGet`(v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.addAndGet:(Ljava/lang/Object;J)J` @kind virtual;
  #L31a950.  v0:= temp @kind wide;
  #L31a952.  if v4 == 0 then goto L31a958;
  #L31a956.  return @kind void;
  #L31a958.  call temp:= `l0`(v3) @signature `Lkotlinx/coroutines/scheduling/a;.l0:()Z` @kind direct;
  #L31a95e.  v4:= temp;
  #L31a960.  if v4 == 0 then goto L31a966;
  #L31a964.  return @kind void;
  #L31a966.  call temp:= `j0`(v3, v0) @signature `Lkotlinx/coroutines/scheduling/a;.j0:(J)Z` @kind direct;
  #L31a96c.  v4:= temp;
  #L31a96e.  if v4 == 0 then goto L31a974;
  #L31a972.  return @kind void;
  #L31a974.  call temp:= `l0`(v3) @signature `Lkotlinx/coroutines/scheduling/a;.l0:()Z` @kind direct;
  #L31a97a.  return @kind void;
}
procedure `kotlinx.coroutines.scheduling.h` `d0`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.a$c` v3 @kind object, `kotlinx.coroutines.scheduling.h` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/scheduling/a;.d0:(Lkotlinx/coroutines/scheduling/a$c;Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L31a36c.  if v3 != 0 then goto L31a372;
  #L31a370.  return v4 @kind object;
  #L31a372.  v0:= v3.`kotlinx.coroutines.scheduling.a$c.h` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a376.  v1:= `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a37a.  if v0 != v1 then goto L31a380;
  #L31a37e.  return v4 @kind object;
  #L31a380.  v0:= v4.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L31a384.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L31a38a.  v0:= temp;
  #L31a38c.  if v0 != 0 then goto L31a39e;
  #L31a390.  v0:= v3.`kotlinx.coroutines.scheduling.a$c.h` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a394.  v1:= `@@kotlinx.coroutines.scheduling.a$d.BLOCKING` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a398.  if v0 != v1 then goto L31a39e;
  #L31a39c.  return v4 @kind object;
  #L31a39e.  v0:= 1I;
  #L31a3a0.  v3.`kotlinx.coroutines.scheduling.a$c.l` @type ^`boolean` := v0 @kind boolean;
  #L31a3a4.  v3:= v3.`kotlinx.coroutines.scheduling.a$c.g` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L31a3a8.  call temp:= `a`(v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/n;.a:(Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L31a3ae.  v3:= temp @kind object;
  #L31a3b0.  return v3 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.h` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.e:(Lkotlinx/coroutines/scheduling/h;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L319c84.  v0:= v3.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L319c88.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L319c8e.  v0:= temp;
  #L319c90.  v1:= 1I;
  #L319c92.  if v0 != v1 then goto L319c98;
  #L319c96.  goto L319c9a;
  #L319c98.  v1:= 0I;
  #L319c9a.  if v1 == 0 then goto L319cac;
  #L319c9e.  v0:= v2.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L319ca2.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/s;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L319ca8.  v3:= temp;
  #L319caa.  goto L319cb8;
  #L319cac.  v0:= v2.`kotlinx.coroutines.scheduling.a.k` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L319cb0.  call temp:= `a`(v0, v3) @signature `Lkotlinx/coroutines/internal/s;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L319cb6.  v3:= temp;
  #L319cb8.  return v3;
}
procedure `int` `i`(`kotlinx.coroutines.scheduling.a` v10 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.i:()I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L319e50.  v0:= v10.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319e54.  @monitorenter v0
  #L319e56.  call temp:= `isTerminated`(v10) @signature `Lkotlinx/coroutines/scheduling/a;.isTerminated:()Z` @kind virtual;
  #L319e5c.  v1:= temp;
  #L319e5e.  if v1 == 0 then goto L319e68;
  #L319e62.  v1:= -1I;
  #L319e64.  @monitorexit v0
  #L319e66.  return v1;
  #L319e68.  v1:= v10.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L319e6c.  v3:= 2097151L;
  #L319e72.  v5:= v1 ^& v3 @kind long;
  #L319e76.  v6:= (`int`) v5 @kind l2i;
  #L319e78.  v7:= 4398044413952L;
  #L319e82.  v1:= v1 ^& v7 @kind long;
  #L319e84.  v5:= 21I;
  #L319e88.  v1:= v1 ^> v5 @kind long;
  #L319e8a.  v2:= (`int`) v1 @kind l2i;
  #L319e8c.  v1:= v6 - v2 @kind int;
  #L319e90.  v2:= 0I;
  #L319e92.  call temp:= `a`(v1, v2) @signature `Lkotlin/ranges/l;.a:(II)I` @kind static;
  #L319e98.  v1:= temp;
  #L319e9a.  v5:= v10.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L319e9e.  if v1 < v5 then goto L319ea6;
  #L319ea2.  @monitorexit v0
  #L319ea4.  return v2;
  #L319ea6.  v5:= v10.`kotlinx.coroutines.scheduling.a.h` @type ^`int`;
  #L319eaa.  if v6 < v5 then goto L319eb2;
  #L319eae.  @monitorexit v0
  #L319eb0.  return v2;
  #L319eb2.  v5:= v10.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L319eb6.  v5:= v5 ^& v3 @kind long;
  #L319eb8.  v6:= (`int`) v5 @kind l2i;
  #L319eba.  v5:= 1I;
  #L319ebc.  v6:= v6 + v5 @kind int;
  #L319ebe.  if v6 <= 0 then goto L319ed6;
  #L319ec2.  v7:= v10.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319ec6.  call temp:= `b`(v7, v6) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L319ecc.  v7:= temp @kind object;
  #L319ece.  if v7 != 0 then goto L319ed6;
  #L319ed2.  v7:= 1I;
  #L319ed4.  goto L319ed8;
  #L319ed6.  v7:= 0I;
  #L319ed8.  if v7 == 0 then goto L319f2e;
  #L319edc.  v7:= new `kotlinx.coroutines.scheduling.a$c`;
  #L319ee0.  call `<init>`(v7, v10, v6) @signature `Lkotlinx/coroutines/scheduling/a$c;.<init>:(Lkotlinx/coroutines/scheduling/a;I)V` @kind direct;
  #L319ee6.  v8:= v10.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319eea.  call `c`(v8, v6, v7) @signature `Lkotlinx/coroutines/internal/c0;.c:(ILjava/lang/Object;)V` @kind virtual;
  #L319ef0.  v8:= `@@kotlinx.coroutines.scheduling.a.o` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L319ef4.  call temp:= `incrementAndGet`(v8, v10) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.incrementAndGet:(Ljava/lang/Object;)J` @kind virtual;
  #L319efa.  v8:= temp @kind wide;
  #L319efc.  v3:= v3 ^& v8 @kind long;
  #L319efe.  v4:= (`int`) v3 @kind l2i;
  #L319f00.  if v6 != v4 then goto L319f06;
  #L319f04.  v2:= 1I;
  #L319f06.  if v2 == 0 then goto L319f16;
  #L319f0a.  call `start`(v7) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L319f10.  v1:= v1 + v5 @kind int;
  #L319f12.  @monitorexit v0
  #L319f14.  return v1;
  #L319f16.  v1:= "Failed requirement." @kind object;
  #L319f1a.  v2:= new `java.lang.IllegalArgumentException`;
  #L319f1e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L319f24.  v1:= temp @kind object;
  #L319f26.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L319f2c.  throw v2;
  #L319f2e.  v1:= "Failed requirement." @kind object;
  #L319f32.  v2:= new `java.lang.IllegalArgumentException`;
  #L319f36.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L319f3c.  v1:= temp @kind object;
  #L319f3e.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L319f44.  throw v2;
  #L319f46.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L319f48.  @monitorexit v0
  #L319f4a.  throw v1;
  catch `java.lang.Throwable` @[L319e56..L319e5e] goto L319f46;
  catch `java.lang.Throwable` @[L319e68..L319e9e] goto L319f46;
  catch `java.lang.Throwable` @[L319ea6..L319eaa] goto L319f46;
  catch `java.lang.Throwable` @[L319eb2..L319f10] goto L319f46;
  catch `java.lang.Throwable` @[L319f16..L319f46] goto L319f46;
}
procedure `boolean` `j0`(`kotlinx.coroutines.scheduling.a` v4 @kind this, `long` v5 ) @signature `Lkotlinx/coroutines/scheduling/a;.j0:(J)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L319dac.  v0:= 2097151L;
  #L319db2.  v0:= v0 ^& v5 @kind long;
  #L319db4.  v1:= (`int`) v0 @kind l2i;
  #L319db6.  v2:= 4398044413952L;
  #L319dc0.  v5:= v5 ^& v2 @kind long;
  #L319dc2.  v0:= 21I;
  #L319dc6.  v5:= v5 ^> v0 @kind long;
  #L319dc8.  v6:= (`int`) v5 @kind l2i;
  #L319dca.  v1:= v1 - v6 @kind int;
  #L319dcc.  v5:= 0I;
  #L319dce.  call temp:= `a`(v1, v5) @signature `Lkotlin/ranges/l;.a:(II)I` @kind static;
  #L319dd4.  v6:= temp;
  #L319dd6.  v0:= v4.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L319dda.  if v6 >= v0 then goto L319e00;
  #L319dde.  call temp:= `i`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.i:()I` @kind direct;
  #L319de4.  v6:= temp;
  #L319de6.  v0:= 1I;
  #L319de8.  if v6 != v0 then goto L319dfa;
  #L319dec.  v1:= v4.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L319df0.  if v1 <= v0 then goto L319dfa;
  #L319df4.  call temp:= `i`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.i:()I` @kind direct;
  #L319dfa.  if v6 <= 0 then goto L319e00;
  #L319dfe.  return v0;
  #L319e00.  return v5;
}
procedure `boolean` `k0`(`kotlinx.coroutines.scheduling.a` v0 @kind object, `long` v1 , `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.k0:(Lkotlinx/coroutines/scheduling/a;JILjava/lang/Object;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L319d84.  v3:= v3 ^& 1;
  #L319d88.  if v3 == 0 then goto L319d90;
  #L319d8c.  v1:= v0.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L319d90.  call temp:= `j0`(v0, v1) @signature `Lkotlinx/coroutines/scheduling/a;.j0:(J)Z` @kind direct;
  #L319d96.  v0:= temp;
  #L319d98.  return v0;
}
procedure `boolean` `l0`(`kotlinx.coroutines.scheduling.a` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.l0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L319e14.  call temp:= `y`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.y:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L319e1a.  v0:= temp @kind object;
  #L319e1c.  v1:= 0I;
  #L319e1e.  if v0 != 0 then goto L319e24;
  #L319e22.  return v1;
  #L319e24.  v2:= `@@kotlinx.coroutines.scheduling.a$c.n` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L319e28.  v3:= -1I;
  #L319e2a.  call temp:= `compareAndSet`(v2, v0, v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L319e30.  v1:= temp;
  #L319e32.  if v1 == 0 then goto L319e14;
  #L319e36.  call `unpark`(v0) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L319e3c.  v0:= 1I;
  #L319e3e.  return v0;
}
procedure `kotlinx.coroutines.scheduling.a$c` `r`(`kotlinx.coroutines.scheduling.a` v3 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.r:()Lkotlinx/coroutines/scheduling/a$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31a268.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L31a26e.  v0:= temp @kind object;
  #L31a270.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.scheduling.a$c` @kind boolean;
  #L31a274.  v2:= 0I;
  #L31a276.  if v1 == 0 then goto L31a280;
  #L31a27a.  v0:= (`kotlinx.coroutines.scheduling.a$c`) v0 @kind object;
  #L31a27e.  goto L31a282;
  #L31a280.  v0:= v2 @kind object;
  #L31a282.  if v0 == 0 then goto L31a29c;
  #L31a286.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/a$c;.a:(Lkotlinx/coroutines/scheduling/a$c;)Lkotlinx/coroutines/scheduling/a;` @kind static;
  #L31a28c.  v1:= temp @kind object;
  #L31a28e.  call temp:= `a`(v1, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L31a294.  v1:= temp;
  #L31a296.  if v1 == 0 then goto L31a29c;
  #L31a29a.  v2:= v0 @kind object;
  #L31a29c.  return v2 @kind object;
}
procedure `void` `v`(`kotlinx.coroutines.scheduling.a` v0 @kind object, `java.lang.Runnable` v1 @kind object, `kotlinx.coroutines.scheduling.i` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.Object` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.v:(Lkotlinx/coroutines/scheduling/a;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;ZILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L31a600.  v5:= v4 ^& 2;
  #L31a604.  if v5 == 0 then goto L31a60c;
  #L31a608.  v2:= `@@kotlinx.coroutines.scheduling.l.f` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L31a60c.  v4:= v4 ^& 4;
  #L31a610.  if v4 == 0 then goto L31a616;
  #L31a614.  v3:= 0I;
  #L31a616.  call `s`(v0, v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.s:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;Z)V` @kind virtual;
  #L31a61c.  return @kind void;
}
procedure `int` `w`(`kotlinx.coroutines.scheduling.a` v1 @kind this, `kotlinx.coroutines.scheduling.a$c` v2 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.w:(Lkotlinx/coroutines/scheduling/a$c;)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L319f88.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.h:()Ljava/lang/Object;` @kind virtual;
  #L319f8e.  v2:= temp @kind object;
  #L319f90.  v0:= `@@kotlinx.coroutines.scheduling.a.q` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L319f94.  if v2 != v0 then goto L319f9c;
  #L319f98.  v2:= -1I;
  #L319f9a.  return v2;
  #L319f9c.  if v2 != 0 then goto L319fa4;
  #L319fa0.  v2:= 0I;
  #L319fa2.  return v2;
  #L319fa4.  v2:= (`kotlinx.coroutines.scheduling.a$c`) v2 @kind object;
  #L319fa8.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.g:()I` @kind virtual;
  #L319fae.  v0:= temp;
  #L319fb0.  if v0 == 0 then goto L319fb6;
  #L319fb4.  return v0;
  #L319fb6.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.h:()Ljava/lang/Object;` @kind virtual;
  #L319fbc.  v2:= temp @kind object;
  #L319fbe.  goto L319f90;
}
procedure `kotlinx.coroutines.scheduling.a$c` `y`(`kotlinx.coroutines.scheduling.a` v9 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.y:()Lkotlinx/coroutines/scheduling/a$c;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L31a2b0.  v2:= v9.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L31a2b4.  v0:= 2097151L;
  #L31a2ba.  v0:= v0 ^& v2 @kind long;
  #L31a2bc.  v1:= (`int`) v0 @kind l2i;
  #L31a2be.  v0:= v9.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L31a2c2.  call temp:= `b`(v0, v1) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L31a2c8.  v0:= temp @kind object;
  #L31a2ca.  v6:= v0 @kind object;
  #L31a2cc.  v6:= (`kotlinx.coroutines.scheduling.a$c`) v6 @kind object;
  #L31a2d0.  if v6 != 0 then goto L31a2d8;
  #L31a2d4.  v0:= 0I;
  #L31a2d6.  return v0 @kind object;
  #L31a2d8.  v0:= 2097152L;
  #L31a2de.  v0:= v0 + v2 @kind long;
  #L31a2e0.  v4:= -2097152L;
  #L31a2e6.  v0:= v0 ^& v4 @kind long;
  #L31a2e8.  call temp:= `w`(v9, v6) @signature `Lkotlinx/coroutines/scheduling/a;.w:(Lkotlinx/coroutines/scheduling/a$c;)I` @kind direct;
  #L31a2ee.  v4:= temp;
  #L31a2f0.  if v4 < 0 then goto L31a2b0;
  #L31a2f4.  v5:= `@@kotlinx.coroutines.scheduling.a.n` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L31a2f8.  v7:= (`long`) v4 @kind i2l;
  #L31a2fa.  v7:= v7 ^| v0 @kind long;
  #L31a2fc.  v0:= v5 @kind object;
  #L31a2fe.  v1:= v9 @kind object;
  #L31a300.  v4:= v7 @kind wide;
  #L31a302.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L31a308.  v0:= temp;
  #L31a30a.  if v0 == 0 then goto L31a2b0;
  #L31a30e.  v0:= `@@kotlinx.coroutines.scheduling.a.q` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L31a312.  call `p`(v6, v0) @signature `Lkotlinx/coroutines/scheduling/a$c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L31a318.  return v6 @kind object;
}
procedure `boolean` `C`(`kotlinx.coroutines.scheduling.a` v10 @kind this, `kotlinx.coroutines.scheduling.a$c` v11 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.C:(Lkotlinx/coroutines/scheduling/a$c;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L319ce4.  call temp:= `h`(v11) @signature `Lkotlinx/coroutines/scheduling/a$c;.h:()Ljava/lang/Object;` @kind virtual;
  #L319cea.  v0:= temp @kind object;
  #L319cec.  v1:= `@@kotlinx.coroutines.scheduling.a.q` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L319cf0.  v2:= 0I;
  #L319cf2.  if v0 == v1 then goto L319cf8;
  #L319cf6.  return v2;
  #L319cf8.  v5:= v10.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L319cfc.  v0:= 2097151L;
  #L319d02.  v0:= v0 ^& v5 @kind long;
  #L319d04.  v1:= (`int`) v0 @kind l2i;
  #L319d06.  v3:= 2097152L;
  #L319d0c.  v3:= v3 + v5 @kind long;
  #L319d0e.  v7:= -2097152L;
  #L319d14.  v3:= v3 ^& v7 @kind long;
  #L319d16.  call temp:= `g`(v11) @signature `Lkotlinx/coroutines/scheduling/a$c;.g:()I` @kind virtual;
  #L319d1c.  v0:= temp;
  #L319d1e.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L319d24.  v7:= temp;
  #L319d26.  v9:= 1I;
  #L319d28.  if v7 == 0 then goto L319d48;
  #L319d2c.  if v0 == 0 then goto L319d34;
  #L319d30.  v7:= 1I;
  #L319d32.  goto L319d36;
  #L319d34.  v7:= 0I;
  #L319d36.  if v7 == 0 then goto L319d3c;
  #L319d3a.  goto L319d48;
  #L319d3c.  v11:= new `java.lang.AssertionError`;
  #L319d40.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L319d46.  throw v11;
  #L319d48.  v7:= v10.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319d4c.  call temp:= `b`(v7, v1) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L319d52.  v1:= temp @kind object;
  #L319d54.  call `p`(v11, v1) @signature `Lkotlinx/coroutines/scheduling/a$c;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L319d5a.  v1:= `@@kotlinx.coroutines.scheduling.a.n` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L319d5e.  v7:= (`long`) v0 @kind i2l;
  #L319d60.  v7:= v7 ^| v3 @kind long;
  #L319d62.  v3:= v1 @kind object;
  #L319d64.  v4:= v10 @kind object;
  #L319d66.  call temp:= `compareAndSet`(v3, v4, v5, v7) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L319d6c.  v0:= temp;
  #L319d6e.  if v0 == 0 then goto L319cf8;
  #L319d72.  return v9;
}
procedure `void` `J`(`kotlinx.coroutines.scheduling.a` v8 @kind this, `kotlinx.coroutines.scheduling.a$c` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lkotlinx/coroutines/scheduling/a;.J:(Lkotlinx/coroutines/scheduling/a$c;II)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31a6fc.  v2:= v8.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` @kind wide;
  #L31a700.  v0:= 2097151L;
  #L31a706.  v0:= v0 ^& v2 @kind long;
  #L31a708.  v1:= (`int`) v0 @kind l2i;
  #L31a70a.  v4:= 2097152L;
  #L31a710.  v4:= v4 + v2 @kind long;
  #L31a712.  v6:= -2097152L;
  #L31a718.  v4:= v4 ^& v6 @kind long;
  #L31a71a.  if v1 != v10 then goto L31a72e;
  #L31a71e.  if v11 != 0 then goto L31a72c;
  #L31a722.  call temp:= `w`(v8, v9) @signature `Lkotlinx/coroutines/scheduling/a;.w:(Lkotlinx/coroutines/scheduling/a$c;)I` @kind direct;
  #L31a728.  v1:= temp;
  #L31a72a.  goto L31a72e;
  #L31a72c.  v1:= v11;
  #L31a72e.  if v1 < 0 then goto L31a6fc;
  #L31a732.  v0:= `@@kotlinx.coroutines.scheduling.a.n` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L31a736.  v6:= (`long`) v1 @kind i2l;
  #L31a738.  v4:= v4 ^| v6 @kind long;
  #L31a73a.  v1:= v8 @kind object;
  #L31a73c.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L31a742.  v0:= temp;
  #L31a744.  if v0 == 0 then goto L31a6fc;
  #L31a748.  return @kind void;
}
procedure `void` `Q`(`kotlinx.coroutines.scheduling.a` v2 @kind this, `kotlinx.coroutines.scheduling.h` v3 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.Q:(Lkotlinx/coroutines/scheduling/h;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L31a75c.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L31a762.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L31a768.  goto L31a784;
  #L31a76a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31a76c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L31a772.  v0:= temp @kind object;
  #L31a774.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L31a77a.  v1:= temp @kind object;
  #L31a77c.  call `uncaughtException`(v1, v0, v3) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L31a782.  goto L31a762;
  #L31a784.  return @kind void;
  #L31a786.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31a788.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L31a78e.  throw v3;
  catch `java.lang.Throwable` @[L31a75c..L31a762] goto L31a76a;
  catch `java.lang.Throwable` @[L31a76c..L31a782] goto L31a786;
}
procedure `void` `V`(`kotlinx.coroutines.scheduling.a` v8 @kind this, `long` v9 ) @signature `Lkotlinx/coroutines/scheduling/a;.V:(J)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L31a7b8.  v0:= `@@kotlinx.coroutines.scheduling.a.p` @type ^`java.util.concurrent.atomic.AtomicIntegerFieldUpdater` @kind object;
  #L31a7bc.  v1:= 0I;
  #L31a7be.  v2:= 1I;
  #L31a7c0.  call temp:= `compareAndSet`(v0, v8, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater;.compareAndSet:(Ljava/lang/Object;II)Z` @kind virtual;
  #L31a7c6.  v0:= temp;
  #L31a7c8.  if v0 != 0 then goto L31a7ce;
  #L31a7cc.  return @kind void;
  #L31a7ce.  call temp:= `r`(v8) @signature `Lkotlinx/coroutines/scheduling/a;.r:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L31a7d4.  v0:= temp @kind object;
  #L31a7d6.  v3:= v8.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L31a7da.  @monitorenter v3
  #L31a7dc.  v4:= v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L31a7e0.  v6:= 2097151L;
  #L31a7e6.  v4:= v4 ^& v6 @kind long;
  #L31a7e8.  v5:= (`int`) v4 @kind l2i;
  #L31a7ea.  @monitorexit v3
  #L31a7ec.  if v2 > v5 then goto L31a86e;
  #L31a7f0.  v3:= 1I;
  #L31a7f2.  v4:= v8.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L31a7f6.  call temp:= `b`(v4, v3) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L31a7fc.  v4:= temp @kind object;
  #L31a7fe.  call `c`(v4) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;)V` @kind static;
  #L31a804.  v4:= (`kotlinx.coroutines.scheduling.a$c`) v4 @kind object;
  #L31a808.  if v4 == v0 then goto L31a864;
  #L31a80c.  call temp:= `isAlive`(v4) @signature `Ljava/lang/Thread;.isAlive:()Z` @kind virtual;
  #L31a812.  v6:= temp;
  #L31a814.  if v6 == 0 then goto L31a826;
  #L31a818.  call `unpark`(v4) @signature `Ljava/util/concurrent/locks/LockSupport;.unpark:(Ljava/lang/Thread;)V` @kind static;
  #L31a81e.  call `join`(v4, v9) @signature `Ljava/lang/Thread;.join:(J)V` @kind virtual;
  #L31a824.  goto L31a80c;
  #L31a826.  v6:= v4.`kotlinx.coroutines.scheduling.a$c.h` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a82a.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L31a830.  v7:= temp;
  #L31a832.  if v7 == 0 then goto L31a856;
  #L31a836.  v7:= `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a83a.  if v6 != v7 then goto L31a842;
  #L31a83e.  v6:= 1I;
  #L31a840.  goto L31a844;
  #L31a842.  v6:= 0I;
  #L31a844.  if v6 == 0 then goto L31a84a;
  #L31a848.  goto L31a856;
  #L31a84a.  v9:= new `java.lang.AssertionError`;
  #L31a84e.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31a854.  throw v9;
  #L31a856.  v4:= v4.`kotlinx.coroutines.scheduling.a$c.g` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L31a85a.  v6:= v8.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a85e.  call `g`(v4, v6) @signature `Lkotlinx/coroutines/scheduling/n;.g:(Lkotlinx/coroutines/scheduling/d;)V` @kind virtual;
  #L31a864.  if v3 == v5 then goto L31a86e;
  #L31a868.  v3:= v3 + 1;
  #L31a86c.  goto L31a7f2;
  #L31a86e.  v9:= v8.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a872.  call `b`(v9) @signature `Lkotlinx/coroutines/internal/s;.b:()V` @kind virtual;
  #L31a878.  v9:= v8.`kotlinx.coroutines.scheduling.a.k` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a87c.  call `b`(v9) @signature `Lkotlinx/coroutines/internal/s;.b:()V` @kind virtual;
  #L31a882.  if v0 == 0 then goto L31a892;
  #L31a886.  call temp:= `f`(v0, v2) @signature `Lkotlinx/coroutines/scheduling/a$c;.f:(Z)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L31a88c.  v9:= temp @kind object;
  #L31a88e.  if v9 != 0 then goto L31a916;
  #L31a892.  v9:= v8.`kotlinx.coroutines.scheduling.a.k` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a896.  call temp:= `d`(v9) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L31a89c.  v9:= temp @kind object;
  #L31a89e.  v9:= (`kotlinx.coroutines.scheduling.h`) v9 @kind object;
  #L31a8a2.  if v9 != 0 then goto L31a916;
  #L31a8a6.  v9:= v8.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a8aa.  call temp:= `d`(v9) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L31a8b0.  v9:= temp @kind object;
  #L31a8b2.  v9:= (`kotlinx.coroutines.scheduling.h`) v9 @kind object;
  #L31a8b6.  if v9 != 0 then goto L31a916;
  #L31a8ba.  if v0 == 0 then goto L31a8c8;
  #L31a8be.  v9:= `@@kotlinx.coroutines.scheduling.a$d.TERMINATED` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a8c2.  call temp:= `s`(v0, v9) @signature `Lkotlinx/coroutines/scheduling/a$c;.s:(Lkotlinx/coroutines/scheduling/a$d;)Z` @kind virtual;
  #L31a8c8.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L31a8ce.  v9:= temp;
  #L31a8d0.  if v9 == 0 then goto L31a908;
  #L31a8d4.  v9:= v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L31a8d8.  v3:= 9223367638808264704L;
  #L31a8e2.  v9:= v9 ^& v3 @kind long;
  #L31a8e4.  v0:= 42I;
  #L31a8e8.  v9:= v9 ^> v0 @kind long;
  #L31a8ea.  v10:= (`int`) v9 @kind l2i;
  #L31a8ec.  v9:= v8.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L31a8f0.  if v10 != v9 then goto L31a8f6;
  #L31a8f4.  v1:= 1I;
  #L31a8f6.  if v1 == 0 then goto L31a8fc;
  #L31a8fa.  goto L31a908;
  #L31a8fc.  v9:= new `java.lang.AssertionError`;
  #L31a900.  call `<init>`(v9) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31a906.  throw v9;
  #L31a908.  v9:= 0L;
  #L31a90c.  v8.`kotlinx.coroutines.scheduling.a.parkedWorkersStack` @type ^`long` := v9 @kind wide;
  #L31a910.  v8.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` := v9 @kind wide;
  #L31a914.  return @kind void;
  #L31a916.  call `Q`(v8, v9) @signature `Lkotlinx/coroutines/scheduling/a;.Q:(Lkotlinx/coroutines/scheduling/h;)V` @kind virtual;
  #L31a91c.  goto L31a882;
  #L31a91e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31a920.  @monitorexit v3
  #L31a922.  throw v9;
  catch `java.lang.Throwable` @[L31a7dc..L31a7e0] goto L31a91e;
}
procedure `void` `a0`(`kotlinx.coroutines.scheduling.a` v4 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.a0:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31a98c.  call temp:= `l0`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.l0:()Z` @kind direct;
  #L31a992.  v0:= temp;
  #L31a994.  if v0 == 0 then goto L31a99a;
  #L31a998.  return @kind void;
  #L31a99a.  v0:= 0L;
  #L31a99e.  v2:= 1I;
  #L31a9a0.  v3:= 0I;
  #L31a9a2.  call temp:= `k0`(v4, v0, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.k0:(Lkotlinx/coroutines/scheduling/a;JILjava/lang/Object;)Z` @kind static;
  #L31a9a8.  v0:= temp;
  #L31a9aa.  if v0 == 0 then goto L31a9b0;
  #L31a9ae.  return @kind void;
  #L31a9b0.  call temp:= `l0`(v4) @signature `Lkotlinx/coroutines/scheduling/a;.l0:()Z` @kind direct;
  #L31a9b6.  return @kind void;
}
procedure `void` `close`(`kotlinx.coroutines.scheduling.a` v2 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31a5e4.  v0:= 10000L;
  #L31a5e8.  call `V`(v2, v0) @signature `Lkotlinx/coroutines/scheduling/a;.V:(J)V` @kind virtual;
  #L31a5ee.  return @kind void;
}
procedure `void` `execute`(`kotlinx.coroutines.scheduling.a` v6 @kind this, `java.lang.Runnable` v7 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31a6d8.  v2:= 0I;
  #L31a6da.  v3:= 0I;
  #L31a6dc.  v4:= 6I;
  #L31a6de.  v5:= 0I;
  #L31a6e0.  v0:= v6 @kind object;
  #L31a6e2.  v1:= v7 @kind object;
  #L31a6e4.  call `v`(v0, v1, v2, v3, v4, v5) @signature `Lkotlinx/coroutines/scheduling/a;.v:(Lkotlinx/coroutines/scheduling/a;Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;ZILjava/lang/Object;)V` @kind static;
  #L31a6ea.  return @kind void;
}
procedure `boolean` `isTerminated`(`kotlinx.coroutines.scheduling.a` v1 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.isTerminated:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L319ccc.  v0:= v1.`kotlinx.coroutines.scheduling.a._isTerminated` @type ^`int`;
  #L319cd0.  return v0;
}
procedure `kotlinx.coroutines.scheduling.h` `k`(`kotlinx.coroutines.scheduling.a` v3 @kind this, `java.lang.Runnable` v4 @kind object, `kotlinx.coroutines.scheduling.i` v5 @kind object) @signature `Lkotlinx/coroutines/scheduling/a;.k:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;)Lkotlinx/coroutines/scheduling/h;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31a32c.  v0:= `@@kotlinx.coroutines.scheduling.l.e` @type ^`kotlinx.coroutines.scheduling.g` @kind object;
  #L31a330.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/scheduling/g;.a:()J` @kind virtual;
  #L31a336.  v0:= temp @kind wide;
  #L31a338.  v2:= instanceof @variable v4 @type ^`kotlinx.coroutines.scheduling.h` @kind boolean;
  #L31a33c.  if v2 == 0 then goto L31a34e;
  #L31a340.  v4:= (`kotlinx.coroutines.scheduling.h`) v4 @kind object;
  #L31a344.  v4.`kotlinx.coroutines.scheduling.h.g` @type ^`long` := v0 @kind wide;
  #L31a348.  v4.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.i` := v5 @kind object;
  #L31a34c.  return v4 @kind object;
  #L31a34e.  v2:= new `kotlinx.coroutines.scheduling.k`;
  #L31a352.  call `<init>`(v2, v4, v0, v5) @signature `Lkotlinx/coroutines/scheduling/k;.<init>:(Ljava/lang/Runnable;JLkotlinx/coroutines/scheduling/i;)V` @kind direct;
  #L31a358.  return v2 @kind object;
}
procedure `void` `s`(`kotlinx.coroutines.scheduling.a` v1 @kind this, `java.lang.Runnable` v2 @kind object, `kotlinx.coroutines.scheduling.i` v3 @kind object, `boolean` v4 ) @signature `Lkotlinx/coroutines/scheduling/a;.s:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;Z)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L31a630.  call temp:= `a`() @signature `Lkotlinx/coroutines/c;.a:()Lkotlinx/coroutines/b;` @kind static;
  #L31a636.  call temp:= `k`(v1, v2, v3) @signature `Lkotlinx/coroutines/scheduling/a;.k:(Ljava/lang/Runnable;Lkotlinx/coroutines/scheduling/i;)Lkotlinx/coroutines/scheduling/h;` @kind virtual;
  #L31a63c.  v2:= temp @kind object;
  #L31a63e.  call temp:= `r`(v1) @signature `Lkotlinx/coroutines/scheduling/a;.r:()Lkotlinx/coroutines/scheduling/a$c;` @kind direct;
  #L31a644.  v3:= temp @kind object;
  #L31a646.  call temp:= `d0`(v1, v3, v2, v4) @signature `Lkotlinx/coroutines/scheduling/a;.d0:(Lkotlinx/coroutines/scheduling/a$c;Lkotlinx/coroutines/scheduling/h;Z)Lkotlinx/coroutines/scheduling/h;` @kind direct;
  #L31a64c.  v0:= temp @kind object;
  #L31a64e.  if v0 == 0 then goto L31a692;
  #L31a652.  call temp:= `e`(v1, v0) @signature `Lkotlinx/coroutines/scheduling/a;.e:(Lkotlinx/coroutines/scheduling/h;)Z` @kind direct;
  #L31a658.  v0:= temp;
  #L31a65a.  if v0 == 0 then goto L31a660;
  #L31a65e.  goto L31a692;
  #L31a660.  v2:= new `java.util.concurrent.RejectedExecutionException`;
  #L31a664.  v3:= new `java.lang.StringBuilder`;
  #L31a668.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a66e.  v4:= v1.`kotlinx.coroutines.scheduling.a.j` @type ^`java.lang.String` @kind object;
  #L31a672.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a678.  v4:= " was terminated" @kind object;
  #L31a67c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a682.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a688.  v3:= temp @kind object;
  #L31a68a.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/RejectedExecutionException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31a690.  throw v2;
  #L31a692.  if v4 == 0 then goto L31a69e;
  #L31a696.  if v3 == 0 then goto L31a69e;
  #L31a69a.  v3:= 1I;
  #L31a69c.  goto L31a6a0;
  #L31a69e.  v3:= 0I;
  #L31a6a0.  v2:= v2.`kotlinx.coroutines.scheduling.h.h` @type ^`kotlinx.coroutines.scheduling.i` @kind object;
  #L31a6a4.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/scheduling/i;.b:()I` @kind interface;
  #L31a6aa.  v2:= temp;
  #L31a6ac.  if v2 != 0 then goto L31a6be;
  #L31a6b0.  if v3 == 0 then goto L31a6b6;
  #L31a6b4.  return @kind void;
  #L31a6b6.  call `a0`(v1) @signature `Lkotlinx/coroutines/scheduling/a;.a0:()V` @kind virtual;
  #L31a6bc.  goto L31a6c4;
  #L31a6be.  call `Y`(v1, v3) @signature `Lkotlinx/coroutines/scheduling/a;.Y:(Z)V` @kind direct;
  #L31a6c4.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.scheduling.a` v12 @kind this) @signature `Lkotlinx/coroutines/scheduling/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L319fd0.  v0:= new `java.util.ArrayList`;
  #L319fd4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L319fda.  v1:= v12.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319fde.  call temp:= `a`(v1) @signature `Lkotlinx/coroutines/internal/c0;.a:()I` @kind virtual;
  #L319fe4.  v1:= temp;
  #L319fe6.  v2:= 0I;
  #L319fe8.  v3:= 1I;
  #L319fea.  v4:= 0I;
  #L319fec.  v5:= 0I;
  #L319fee.  v6:= 0I;
  #L319ff0.  v7:= 0I;
  #L319ff2.  v8:= 1I;
  #L319ff4.  if v8 >= v1 then goto L31a0ea;
  #L319ff8.  v9:= v12.`kotlinx.coroutines.scheduling.a.m` @type ^`kotlinx.coroutines.internal.c0` @kind object;
  #L319ffc.  call temp:= `b`(v9, v8) @signature `Lkotlinx/coroutines/internal/c0;.b:(I)Ljava/lang/Object;` @kind virtual;
  #L31a002.  v9:= temp @kind object;
  #L31a004.  v9:= (`kotlinx.coroutines.scheduling.a$c`) v9 @kind object;
  #L31a008.  if v9 != 0 then goto L31a00e;
  #L31a00c.  goto L31a0e4;
  #L31a00e.  v10:= v9.`kotlinx.coroutines.scheduling.a$c.g` @type ^`kotlinx.coroutines.scheduling.n` @kind object;
  #L31a012.  call temp:= `f`(v10) @signature `Lkotlinx/coroutines/scheduling/n;.f:()I` @kind virtual;
  #L31a018.  v10:= temp;
  #L31a01a.  v9:= v9.`kotlinx.coroutines.scheduling.a$c.h` @type ^`kotlinx.coroutines.scheduling.a$d` @kind object;
  #L31a01e.  v11:= `@@kotlinx.coroutines.scheduling.a$b.a` @type ^`int`[] @kind object;
  #L31a022.  call temp:= `ordinal`(v9) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L31a028.  v9:= temp;
  #L31a02a.  v9:= v11[v9];
  #L31a02e.  if v9 == v3 then goto L31a0e0;
  #L31a032.  v11:= 2I;
  #L31a034.  if v9 == v11 then goto L31a0b2;
  #L31a038.  v11:= 3I;
  #L31a03a.  if v9 == v11 then goto L31a084;
  #L31a03e.  v11:= 4I;
  #L31a040.  if v9 == v11 then goto L31a052;
  #L31a044.  v10:= 5I;
  #L31a046.  if v9 == v10 then goto L31a04c;
  #L31a04a.  goto L31a0e4;
  #L31a04c.  v7:= v7 + 1;
  #L31a050.  goto L31a0e4;
  #L31a052.  v6:= v6 + 1;
  #L31a056.  if v10 <= 0 then goto L31a0e4;
  #L31a05a.  v9:= new `java.lang.StringBuilder`;
  #L31a05e.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a064.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a06a.  v10:= 100I;
  #L31a06e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a074.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a07a.  v9:= temp @kind object;
  #L31a07c.  call temp:= `add`(v0, v9) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31a082.  goto L31a0e4;
  #L31a084.  v2:= v2 + 1;
  #L31a088.  v9:= new `java.lang.StringBuilder`;
  #L31a08c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a092.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a098.  v10:= 99I;
  #L31a09c.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a0a2.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a0a8.  v9:= temp @kind object;
  #L31a0aa.  call temp:= `add`(v0, v9) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31a0b0.  goto L31a0e4;
  #L31a0b2.  v4:= v4 + 1;
  #L31a0b6.  v9:= new `java.lang.StringBuilder`;
  #L31a0ba.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a0c0.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a0c6.  v10:= 98I;
  #L31a0ca.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a0d0.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a0d6.  v9:= temp @kind object;
  #L31a0d8.  call temp:= `add`(v0, v9) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31a0de.  goto L31a0e4;
  #L31a0e0.  v5:= v5 + 1;
  #L31a0e4.  v8:= v8 + 1;
  #L31a0e8.  goto L319ff4;
  #L31a0ea.  v8:= v12.`kotlinx.coroutines.scheduling.a.controlState` @type ^`long` @kind wide;
  #L31a0ee.  v1:= new `java.lang.StringBuilder`;
  #L31a0f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31a0f8.  v3:= v12.`kotlinx.coroutines.scheduling.a.j` @type ^`java.lang.String` @kind object;
  #L31a0fc.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a102.  v3:= 64I;
  #L31a106.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a10c.  call temp:= `b`(v12) @signature `Lkotlinx/coroutines/r0;.b:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31a112.  v3:= temp @kind object;
  #L31a114.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a11a.  v3:= "[Pool Size {core = " @kind object;
  #L31a11e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a124.  v3:= v12.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L31a128.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a12e.  v3:= ", max = " @kind object;
  #L31a132.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a138.  v3:= v12.`kotlinx.coroutines.scheduling.a.h` @type ^`int`;
  #L31a13c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a142.  v3:= "}, Worker States {CPU = " @kind object;
  #L31a146.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a14c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a152.  v2:= ", blocking = " @kind object;
  #L31a156.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a15c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a162.  v2:= ", parked = " @kind object;
  #L31a166.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a16c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a172.  v2:= ", dormant = " @kind object;
  #L31a176.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a17c.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a182.  v2:= ", terminated = " @kind object;
  #L31a186.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a18c.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a192.  v2:= "}, running workers queues = " @kind object;
  #L31a196.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a19c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1a2.  v0:= ", global CPU queue size = " @kind object;
  #L31a1a6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1ac.  v0:= v12.`kotlinx.coroutines.scheduling.a.k` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a1b0.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L31a1b6.  v0:= temp;
  #L31a1b8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1be.  v0:= ", global blocking queue size = " @kind object;
  #L31a1c2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1c8.  v0:= v12.`kotlinx.coroutines.scheduling.a.l` @type ^`kotlinx.coroutines.scheduling.d` @kind object;
  #L31a1cc.  call temp:= `c`(v0) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L31a1d2.  v0:= temp;
  #L31a1d4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1da.  v0:= ", Control State {created workers= " @kind object;
  #L31a1de.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1e4.  v2:= 2097151L;
  #L31a1ea.  v2:= v2 ^& v8 @kind long;
  #L31a1ec.  v0:= (`int`) v2 @kind l2i;
  #L31a1ee.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1f4.  v0:= ", blocking tasks = " @kind object;
  #L31a1f8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a1fe.  v2:= 4398044413952L;
  #L31a208.  v2:= v2 ^& v8 @kind long;
  #L31a20a.  v0:= 21I;
  #L31a20e.  v2:= v2 ^> v0 @kind long;
  #L31a210.  v0:= (`int`) v2 @kind l2i;
  #L31a212.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a218.  v0:= ", CPUs acquired = " @kind object;
  #L31a21c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a222.  v0:= v12.`kotlinx.coroutines.scheduling.a.g` @type ^`int`;
  #L31a226.  v2:= 9223367638808264704L;
  #L31a230.  v2:= v2 ^& v8 @kind long;
  #L31a232.  v4:= 42I;
  #L31a236.  v2:= v2 ^> v4 @kind long;
  #L31a238.  v3:= (`int`) v2 @kind l2i;
  #L31a23a.  v0:= v0 - v3 @kind int;
  #L31a23c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a242.  v0:= "}]" @kind object;
  #L31a246.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31a24c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31a252.  v0:= temp @kind object;
  #L31a254.  return v0 @kind object;
}
