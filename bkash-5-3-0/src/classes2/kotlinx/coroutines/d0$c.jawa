record `kotlinx.coroutines.d0$c` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `wd.p` @kind interface {
}
global `kotlinx.coroutines.d0$c` `@@kotlinx.coroutines.d0$c.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/d0$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30dcbc.  v0:= new `kotlinx.coroutines.d0$c`;
  #L30dcc0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/d0$c;.<init>:()V` @kind direct;
  #L30dcc6.  `@@kotlinx.coroutines.d0$c.INSTANCE` @type ^`kotlinx.coroutines.d0$c` := v0 @kind object;
  #L30dcca.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.d0$c` v1 @kind this) @signature `Lkotlinx/coroutines/d0$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L30dcdc.  v0:= 2I;
  #L30dcde.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L30dce4.  return @kind void;
}
procedure `java.lang.Boolean` `invoke`(`kotlinx.coroutines.d0$c` v0 @kind this, `boolean` v1 , `kotlin.coroutines.g$b` v2 @kind object) @signature `Lkotlinx/coroutines/d0$c;.invoke:(ZLkotlin/coroutines/g$b;)Ljava/lang/Boolean;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30dc60.  if v1 != 0 then goto L30dc72;
  #L30dc64.  v1:= instanceof @variable v2 @type ^`kotlinx.coroutines.b0` @kind boolean;
  #L30dc68.  if v1 == 0 then goto L30dc6e;
  #L30dc6c.  goto L30dc72;
  #L30dc6e.  v1:= 0I;
  #L30dc70.  goto L30dc74;
  #L30dc72.  v1:= 1I;
  #L30dc74.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L30dc7a.  v1:= temp @kind object;
  #L30dc7c.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.d0$c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/d0$c;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30dc90.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L30dc94.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L30dc9a.  v1:= temp;
  #L30dc9c.  v2:= (`kotlin.coroutines.g$b`) v2 @kind object;
  #L30dca0.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/d0$c;.invoke:(ZLkotlin/coroutines/g$b;)Ljava/lang/Boolean;` @kind virtual;
  #L30dca6.  v1:= temp @kind object;
  #L30dca8.  return v1 @kind object;
}
