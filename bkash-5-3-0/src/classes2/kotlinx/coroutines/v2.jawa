record `kotlinx.coroutines.v2` @kind class @AccessFlag FINAL extends `kotlin.coroutines.g$b` @kind interface, `kotlin.coroutines.g$c` @kind interface {
}
global `kotlinx.coroutines.v2` `@@kotlinx.coroutines.v2.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/v2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L313cc4.  v0:= new `kotlinx.coroutines.v2`;
  #L313cc8.  call `<init>`(v0) @signature `Lkotlinx/coroutines/v2;.<init>:()V` @kind direct;
  #L313cce.  `@@kotlinx.coroutines.v2.g` @type ^`kotlinx.coroutines.v2` := v0 @kind object;
  #L313cd2.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.v2` v0 @kind this) @signature `Lkotlinx/coroutines/v2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L313ce4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L313cea.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.v2` v0 @kind this, `java.lang.Object` v1 @kind object, `wd.p` v2 @kind object) @signature `Lkotlinx/coroutines/v2;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L313c40.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/coroutines/g$b$a;.a:(Lkotlin/coroutines/g$b;Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind static;
  #L313c46.  v1:= temp @kind object;
  #L313c48.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$b` `get`(`kotlinx.coroutines.v2` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/v2;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC {
    temp;

  #L313c94.  call temp:= `b`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.b:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind static;
  #L313c9a.  v1:= temp @kind object;
  #L313c9c.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$c` `getKey`(`kotlinx.coroutines.v2` v0 @kind this) @signature `Lkotlinx/coroutines/v2;.getKey:()Lkotlin/coroutines/g$c;` @AccessFlag PUBLIC {
    temp;

  #L313cb0.  return v0 @kind object;
}
procedure `kotlin.coroutines.g` `minusKey`(`kotlinx.coroutines.v2` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlinx/coroutines/v2;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L313c5c.  call temp:= `c`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.c:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @kind static;
  #L313c62.  v1:= temp @kind object;
  #L313c64.  return v1 @kind object;
}
procedure `kotlin.coroutines.g` `plus`(`kotlinx.coroutines.v2` v0 @kind this, `kotlin.coroutines.g` v1 @kind object) @signature `Lkotlinx/coroutines/v2;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L313c78.  call temp:= `d`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.d:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind static;
  #L313c7e.  v1:= temp @kind object;
  #L313c80.  return v1 @kind object;
}
