record `kotlinx.coroutines.d0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.g` `a`(`kotlin.coroutines.g` v3 @kind object, `kotlin.coroutines.g` v4 @kind object, `boolean` v5 ) @signature `Lkotlinx/coroutines/d0;.a:(Lkotlin/coroutines/g;Lkotlin/coroutines/g;Z)Lkotlin/coroutines/g;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30ddb4.  call temp:= `c`(v3) @signature `Lkotlinx/coroutines/d0;.c:(Lkotlin/coroutines/g;)Z` @kind static;
  #L30ddba.  v0:= temp;
  #L30ddbc.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/d0;.c:(Lkotlin/coroutines/g;)Z` @kind static;
  #L30ddc2.  v1:= temp;
  #L30ddc4.  if v0 != 0 then goto L30ddd6;
  #L30ddc8.  if v1 != 0 then goto L30ddd6;
  #L30ddcc.  call temp:= `plus`(v3, v4) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30ddd2.  v3:= temp @kind object;
  #L30ddd4.  return v3 @kind object;
  #L30ddd6.  v0:= new `kotlin.jvm.internal.r`;
  #L30ddda.  call `<init>`(v0) @signature `Lkotlin/jvm/internal/r;.<init>:()V` @kind direct;
  #L30dde0.  v0.`kotlin.jvm.internal.r.element` @type ^`java.lang.Object` := v4 @kind object;
  #L30dde4.  v4:= `@@kotlin.coroutines.h.INSTANCE` @type ^`kotlin.coroutines.h` @kind object;
  #L30dde8.  v2:= new `kotlinx.coroutines.d0$b`;
  #L30ddec.  call `<init>`(v2, v0, v5) @signature `Lkotlinx/coroutines/d0$b;.<init>:(Lkotlin/jvm/internal/r;Z)V` @kind direct;
  #L30ddf2.  call temp:= `fold`(v3, v4, v2) @signature `Lkotlin/coroutines/g;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind interface;
  #L30ddf8.  v3:= temp @kind object;
  #L30ddfa.  v3:= (`kotlin.coroutines.g`) v3 @kind object;
  #L30ddfe.  if v1 == 0 then goto L30de1a;
  #L30de02.  v5:= v0.`kotlin.jvm.internal.r.element` @type ^`java.lang.Object` @kind object;
  #L30de06.  v5:= (`kotlin.coroutines.g`) v5 @kind object;
  #L30de0a.  v1:= `@@kotlinx.coroutines.d0$a.INSTANCE` @type ^`kotlinx.coroutines.d0$a` @kind object;
  #L30de0e.  call temp:= `fold`(v5, v4, v1) @signature `Lkotlin/coroutines/g;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind interface;
  #L30de14.  v4:= temp @kind object;
  #L30de16.  v0.`kotlin.jvm.internal.r.element` @type ^`java.lang.Object` := v4 @kind object;
  #L30de1a.  v4:= v0.`kotlin.jvm.internal.r.element` @type ^`java.lang.Object` @kind object;
  #L30de1e.  v4:= (`kotlin.coroutines.g`) v4 @kind object;
  #L30de22.  call temp:= `plus`(v3, v4) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30de28.  v3:= temp @kind object;
  #L30de2a.  return v3 @kind object;
}
procedure `java.lang.String` `b`(`kotlin.coroutines.g` v4 @kind object) @signature `Lkotlinx/coroutines/d0;.b:(Lkotlin/coroutines/g;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30dd28.  call temp:= `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @kind static;
  #L30dd2e.  v0:= temp;
  #L30dd30.  v1:= 0I;
  #L30dd32.  if v0 != 0 then goto L30dd38;
  #L30dd36.  return v1 @kind object;
  #L30dd38.  v0:= `@@kotlinx.coroutines.k0.i` @type ^`kotlinx.coroutines.k0$a` @kind object;
  #L30dd3c.  call temp:= `get`(v4, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30dd42.  v0:= temp @kind object;
  #L30dd44.  v0:= (`kotlinx.coroutines.k0`) v0 @kind object;
  #L30dd48.  if v0 != 0 then goto L30dd4e;
  #L30dd4c.  return v1 @kind object;
  #L30dd4e.  v1:= `@@kotlinx.coroutines.l0.i` @type ^`kotlinx.coroutines.l0$a` @kind object;
  #L30dd52.  call temp:= `get`(v4, v1) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30dd58.  v4:= temp @kind object;
  #L30dd5a.  v4:= (`kotlinx.coroutines.l0`) v4 @kind object;
  #L30dd5e.  if v4 == 0 then goto L30dd6e;
  #L30dd62.  call temp:= `l0`(v4) @signature `Lkotlinx/coroutines/l0;.l0:()Ljava/lang/String;` @kind virtual;
  #L30dd68.  v4:= temp @kind object;
  #L30dd6a.  if v4 != 0 then goto L30dd72;
  #L30dd6e.  v4:= "coroutine" @kind object;
  #L30dd72.  v1:= new `java.lang.StringBuilder`;
  #L30dd76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30dd7c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dd82.  v4:= 35I;
  #L30dd86.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dd8c.  call temp:= `l0`(v0) @signature `Lkotlinx/coroutines/k0;.l0:()J` @kind virtual;
  #L30dd92.  v2:= temp @kind wide;
  #L30dd94.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dd9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30dda0.  v4:= temp @kind object;
  #L30dda2.  return v4 @kind object;
}
procedure `boolean` `c`(`kotlin.coroutines.g` v2 @kind object) @signature `Lkotlinx/coroutines/d0;.c:(Lkotlin/coroutines/g;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L30dcf8.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L30dcfc.  v1:= `@@kotlinx.coroutines.d0$c.INSTANCE` @type ^`kotlinx.coroutines.d0$c` @kind object;
  #L30dd00.  call temp:= `fold`(v2, v0, v1) @signature `Lkotlin/coroutines/g;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind interface;
  #L30dd06.  v2:= temp @kind object;
  #L30dd08.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L30dd0c.  call temp:= `booleanValue`(v2) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L30dd12.  v2:= temp;
  #L30dd14.  return v2;
}
procedure `kotlin.coroutines.g` `d`(`kotlinx.coroutines.m0` v2 @kind object, `kotlin.coroutines.g` v3 @kind object) @signature `Lkotlinx/coroutines/d0;.d:(Lkotlinx/coroutines/m0;Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L30de3c.  call temp:= `g`(v2) @signature `Lkotlinx/coroutines/m0;.g:()Lkotlin/coroutines/g;` @kind interface;
  #L30de42.  v2:= temp @kind object;
  #L30de44.  v0:= 1I;
  #L30de46.  call temp:= `a`(v2, v3, v0) @signature `Lkotlinx/coroutines/d0;.a:(Lkotlin/coroutines/g;Lkotlin/coroutines/g;Z)Lkotlin/coroutines/g;` @kind static;
  #L30de4c.  v2:= temp @kind object;
  #L30de4e.  call temp:= `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @kind static;
  #L30de54.  v3:= temp;
  #L30de56.  if v3 == 0 then goto L30de7e;
  #L30de5a.  v3:= new `kotlinx.coroutines.k0`;
  #L30de5e.  call temp:= `b`() @signature `Lkotlinx/coroutines/q0;.b:()Ljava/util/concurrent/atomic/AtomicLong;` @kind static;
  #L30de64.  v0:= temp @kind object;
  #L30de66.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J` @kind virtual;
  #L30de6c.  v0:= temp @kind wide;
  #L30de6e.  call `<init>`(v3, v0) @signature `Lkotlinx/coroutines/k0;.<init>:(J)V` @kind direct;
  #L30de74.  call temp:= `plus`(v2, v3) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30de7a.  v3:= temp @kind object;
  #L30de7c.  goto L30de80;
  #L30de7e.  v3:= v2 @kind object;
  #L30de80.  call temp:= `a`() @signature `Lkotlinx/coroutines/d1;.a:()Lkotlinx/coroutines/e0;` @kind static;
  #L30de86.  v0:= temp @kind object;
  #L30de88.  if v2 == v0 then goto L30deac;
  #L30de8c.  v0:= `@@kotlin.coroutines.e.d` @type ^`kotlin.coroutines.e$b` @kind object;
  #L30de90.  call temp:= `get`(v2, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30de96.  v2:= temp @kind object;
  #L30de98.  if v2 != 0 then goto L30deac;
  #L30de9c.  call temp:= `a`() @signature `Lkotlinx/coroutines/d1;.a:()Lkotlinx/coroutines/e0;` @kind static;
  #L30dea2.  v2:= temp @kind object;
  #L30dea4.  call temp:= `plus`(v3, v2) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30deaa.  v3:= temp @kind object;
  #L30deac.  return v3 @kind object;
}
procedure `kotlinx.coroutines.u2` `e`(`kotlin.coroutines.jvm.internal.e` v2 @kind object) @signature `Lkotlinx/coroutines/d0;.e:(Lkotlin/coroutines/jvm/internal/e;)Lkotlinx/coroutines/u2;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L30dec0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.z0` @kind boolean;
  #L30dec4.  v1:= 0I;
  #L30dec6.  if v0 == 0 then goto L30decc;
  #L30deca.  return v1 @kind object;
  #L30decc.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @kind interface;
  #L30ded2.  v2:= temp @kind object;
  #L30ded4.  if v2 != 0 then goto L30deda;
  #L30ded8.  return v1 @kind object;
  #L30deda.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.u2` @kind boolean;
  #L30dede.  if v0 == 0 then goto L30dec0;
  #L30dee2.  v2:= (`kotlinx.coroutines.u2`) v2 @kind object;
  #L30dee6.  return v2 @kind object;
}
procedure `kotlinx.coroutines.u2` `f`(`kotlin.coroutines.d` v2 @kind object, `kotlin.coroutines.g` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/d0;.f:(Lkotlin/coroutines/d;Lkotlin/coroutines/g;Ljava/lang/Object;)Lkotlinx/coroutines/u2;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L30def8.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L30defc.  v1:= 0I;
  #L30defe.  if v0 != 0 then goto L30df04;
  #L30df02.  return v1 @kind object;
  #L30df04.  v0:= `@@kotlinx.coroutines.v2.g` @type ^`kotlinx.coroutines.v2` @kind object;
  #L30df08.  call temp:= `get`(v3, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30df0e.  v0:= temp @kind object;
  #L30df10.  if v0 == 0 then goto L30df18;
  #L30df14.  v0:= 1I;
  #L30df16.  goto L30df1a;
  #L30df18.  v0:= 0I;
  #L30df1a.  if v0 != 0 then goto L30df20;
  #L30df1e.  return v1 @kind object;
  #L30df20.  v2:= (`kotlin.coroutines.jvm.internal.e`) v2 @kind object;
  #L30df24.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/d0;.e:(Lkotlin/coroutines/jvm/internal/e;)Lkotlinx/coroutines/u2;` @kind static;
  #L30df2a.  v2:= temp @kind object;
  #L30df2c.  if v2 == 0 then goto L30df36;
  #L30df30.  call `G0`(v2, v3, v4) @signature `Lkotlinx/coroutines/u2;.G0:(Lkotlin/coroutines/g;Ljava/lang/Object;)V` @kind virtual;
  #L30df36.  return v2 @kind object;
}
