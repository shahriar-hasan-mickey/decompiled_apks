record `kotlinx.coroutines.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.e2` @kind class, `kotlin.coroutines.d` @kind interface, `kotlinx.coroutines.m0` @kind interface {
  `kotlin.coroutines.g` `kotlinx.coroutines.a.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.a` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lkotlinx/coroutines/a;.<init>:(Lkotlin/coroutines/g;ZZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30bf14.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/e2;.<init>:(Z)V` @kind direct;
  #L30bf1a.  if v2 == 0 then goto L30bf34;
  #L30bf1e.  v2:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L30bf22.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30bf28.  v2:= temp @kind object;
  #L30bf2a.  v2:= (`kotlinx.coroutines.w1`) v2 @kind object;
  #L30bf2e.  call `T`(v0, v2) @signature `Lkotlinx/coroutines/e2;.T:(Lkotlinx/coroutines/w1;)V` @kind virtual;
  #L30bf34.  call temp:= `plus`(v1, v0) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30bf3a.  v1:= temp @kind object;
  #L30bf3c.  v0.`kotlinx.coroutines.a.h` @type ^`kotlin.coroutines.g` := v1 @kind object;
  #L30bf40.  return @kind void;
}
procedure `java.lang.String` `A`(`kotlinx.coroutines.a` v2 @kind this) @signature `Lkotlinx/coroutines/a;.A:()Ljava/lang/String;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L30be40.  v0:= new `java.lang.StringBuilder`;
  #L30be44.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30be4a.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/r0;.a:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30be50.  v1:= temp @kind object;
  #L30be52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30be58.  v1:= " was cancelled" @kind object;
  #L30be5c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30be62.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30be68.  v0:= temp @kind object;
  #L30be6a.  return v0 @kind object;
}
procedure `void` `A0`(`kotlinx.coroutines.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/a;.A0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L30bf54.  call `p`(v0, v1) @signature `Lkotlinx/coroutines/e2;.p:(Ljava/lang/Object;)V` @kind virtual;
  #L30bf5a.  return @kind void;
}
procedure `void` `B0`(`kotlinx.coroutines.a` v0 @kind this, `java.lang.Throwable` v1 @kind object, `boolean` v2 ) @signature `Lkotlinx/coroutines/a;.B0:(Ljava/lang/Throwable;Z)V` @AccessFlag PROTECTED {
    temp;

  #L30bf88.  return @kind void;
}
procedure `void` `C0`(`kotlinx.coroutines.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/a;.C0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L30bf9c.  return @kind void;
}
procedure `void` `D0`(`kotlinx.coroutines.a` v0 @kind this, `kotlinx.coroutines.o0` v1 @kind object, `java.lang.Object` v2 @kind object, `wd.p` v3 @kind object) @signature `Lkotlinx/coroutines/a;.D0:(Lkotlinx/coroutines/o0;Ljava/lang/Object;Lwd/p;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L30c020.  call `invoke`(v1, v3, v2, v0) @signature `Lkotlinx/coroutines/o0;.invoke:(Lwd/p;Ljava/lang/Object;Lkotlin/coroutines/d;)V` @kind virtual;
  #L30c026.  return @kind void;
}
procedure `void` `S`(`kotlinx.coroutines.a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/a;.S:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30bf6c.  v0:= v1.`kotlinx.coroutines.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L30bf70.  call `a`(v0, v2) @signature `Lkotlinx/coroutines/i0;.a:(Lkotlin/coroutines/g;Ljava/lang/Throwable;)V` @kind static;
  #L30bf76.  return @kind void;
}
procedure `java.lang.String` `c0`(`kotlinx.coroutines.a` v3 @kind this) @signature `Lkotlinx/coroutines/a;.c0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30be7c.  v0:= v3.`kotlinx.coroutines.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L30be80.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/d0;.b:(Lkotlin/coroutines/g;)Ljava/lang/String;` @kind static;
  #L30be86.  v0:= temp @kind object;
  #L30be88.  if v0 != 0 then goto L30be96;
  #L30be8c.  call temp:= `c0`(v3) @signature `Lkotlinx/coroutines/e2;.c0:()Ljava/lang/String;` @kind super;
  #L30be92.  v0:= temp @kind object;
  #L30be94.  return v0 @kind object;
  #L30be96.  v1:= new `java.lang.StringBuilder`;
  #L30be9a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30bea0.  v2:= 34I;
  #L30bea4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30beaa.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30beb0.  v0:= "\":" @kind object;
  #L30beb4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30beba.  call temp:= `c0`(v3) @signature `Lkotlinx/coroutines/e2;.c0:()Ljava/lang/String;` @kind super;
  #L30bec0.  v0:= temp @kind object;
  #L30bec2.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30bec8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30bece.  v0:= temp @kind object;
  #L30bed0.  return v0 @kind object;
}
procedure `boolean` `e`(`kotlinx.coroutines.a` v1 @kind this) @signature `Lkotlinx/coroutines/a;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30be24.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/e2;.e:()Z` @kind super;
  #L30be2a.  v0:= temp;
  #L30be2c.  return v0;
}
procedure `kotlin.coroutines.g` `g`(`kotlinx.coroutines.a` v1 @kind this) @signature `Lkotlinx/coroutines/a;.g:()Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30befc.  v0:= v1.`kotlinx.coroutines.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L30bf00.  return v0 @kind object;
}
procedure `kotlin.coroutines.g` `getContext`(`kotlinx.coroutines.a` v1 @kind this) @signature `Lkotlinx/coroutines/a;.getContext:()Lkotlin/coroutines/g;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30bee4.  v0:= v1.`kotlinx.coroutines.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L30bee8.  return v0 @kind object;
}
procedure `void` `i0`(`kotlinx.coroutines.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/a;.i0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L30bfb0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.w` @kind boolean;
  #L30bfb4.  if v0 == 0 then goto L30bfd0;
  #L30bfb8.  v2:= (`kotlinx.coroutines.w`) v2 @kind object;
  #L30bfbc.  v0:= v2.`kotlinx.coroutines.w.a` @type ^`java.lang.Throwable` @kind object;
  #L30bfc0.  call temp:= `a`(v2) @signature `Lkotlinx/coroutines/w;.a:()Z` @kind virtual;
  #L30bfc6.  v2:= temp;
  #L30bfc8.  call `B0`(v1, v0, v2) @signature `Lkotlinx/coroutines/a;.B0:(Ljava/lang/Throwable;Z)V` @kind virtual;
  #L30bfce.  goto L30bfd6;
  #L30bfd0.  call `C0`(v1, v2) @signature `Lkotlinx/coroutines/a;.C0:(Ljava/lang/Object;)V` @kind virtual;
  #L30bfd6.  return @kind void;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/a;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30bfe8.  v0:= 0I;
  #L30bfea.  v1:= 1I;
  #L30bfec.  call temp:= `d`(v3, v0, v1, v0) @signature `Lkotlinx/coroutines/a0;.d:(Ljava/lang/Object;Lwd/l;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L30bff2.  v3:= temp @kind object;
  #L30bff4.  call temp:= `Z`(v2, v3) @signature `Lkotlinx/coroutines/e2;.Z:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30bffa.  v3:= temp @kind object;
  #L30bffc.  v0:= `@@kotlinx.coroutines.f2.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L30c000.  if v3 != v0 then goto L30c006;
  #L30c004.  return @kind void;
  #L30c006.  call `A0`(v2, v3) @signature `Lkotlinx/coroutines/a;.A0:(Ljava/lang/Object;)V` @kind virtual;
  #L30c00c.  return @kind void;
}
