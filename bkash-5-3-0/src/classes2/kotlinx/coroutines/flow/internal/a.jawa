record `kotlinx.coroutines.flow.internal.a` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.g` @kind interface {
  `java.lang.Throwable` `kotlinx.coroutines.flow.internal.a.g` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.g` `kotlinx.coroutines.flow.internal.a.h` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.a` v0 @kind this, `java.lang.Throwable` v1 @kind object, `kotlin.coroutines.g` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/a;.<init>:(Ljava/lang/Throwable;Lkotlin/coroutines/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31463c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L314642.  v0.`kotlinx.coroutines.flow.internal.a.g` @type ^`java.lang.Throwable` := v1 @kind object;
  #L314646.  v0.`kotlinx.coroutines.flow.internal.a.h` @type ^`kotlin.coroutines.g` := v2 @kind object;
  #L31464a.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlinx.coroutines.flow.internal.a` v1 @kind this, `java.lang.Object` v2 @kind object, `wd.p` v3 @kind object) @signature `Lkotlinx/coroutines/flow/internal/a;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3145bc.  v0:= v1.`kotlinx.coroutines.flow.internal.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L3145c0.  call temp:= `fold`(v0, v2, v3) @signature `Lkotlin/coroutines/g;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind interface;
  #L3145c6.  v2:= temp @kind object;
  #L3145c8.  return v2 @kind object;
}
procedure `kotlin.coroutines.g$b` `get`(`kotlinx.coroutines.flow.internal.a` v1 @kind this, `kotlin.coroutines.g$c` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/a;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31461c.  v0:= v1.`kotlinx.coroutines.flow.internal.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L314620.  call temp:= `get`(v0, v2) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L314626.  v2:= temp @kind object;
  #L314628.  return v2 @kind object;
}
procedure `kotlin.coroutines.g` `minusKey`(`kotlinx.coroutines.flow.internal.a` v1 @kind this, `kotlin.coroutines.g$c` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/a;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3145dc.  v0:= v1.`kotlinx.coroutines.flow.internal.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L3145e0.  call temp:= `minusKey`(v0, v2) @signature `Lkotlin/coroutines/g;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @kind interface;
  #L3145e6.  v2:= temp @kind object;
  #L3145e8.  return v2 @kind object;
}
procedure `kotlin.coroutines.g` `plus`(`kotlinx.coroutines.flow.internal.a` v1 @kind this, `kotlin.coroutines.g` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/a;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3145fc.  v0:= v1.`kotlinx.coroutines.flow.internal.a.h` @type ^`kotlin.coroutines.g` @kind object;
  #L314600.  call temp:= `plus`(v0, v2) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L314606.  v2:= temp @kind object;
  #L314608.  return v2 @kind object;
}
