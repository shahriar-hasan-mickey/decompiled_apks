record `kotlinx.coroutines.flow.internal.c$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `wd.p` @kind interface {
}
global `kotlinx.coroutines.flow.internal.c$a` `@@kotlinx.coroutines.flow.internal.c$a.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/flow/internal/c$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L314714.  v0:= new `kotlinx.coroutines.flow.internal.c$a`;
  #L314718.  call `<init>`(v0) @signature `Lkotlinx/coroutines/flow/internal/c$a;.<init>:()V` @kind direct;
  #L31471e.  `@@kotlinx.coroutines.flow.internal.c$a.INSTANCE` @type ^`kotlinx.coroutines.flow.internal.c$a` := v0 @kind object;
  #L314722.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.c$a` v1 @kind this) @signature `Lkotlinx/coroutines/flow/internal/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L314734.  v0:= 2I;
  #L314736.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L31473c.  return @kind void;
}
procedure `java.lang.Integer` `invoke`(`kotlinx.coroutines.flow.internal.c$a` v0 @kind this, `int` v1 , `kotlin.coroutines.g$b` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/c$a;.invoke:(ILkotlin/coroutines/g$b;)Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3146c8.  v1:= v1 + 1;
  #L3146cc.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3146d2.  v1:= temp @kind object;
  #L3146d4.  return v1 @kind object;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.c$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/c$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3146e8.  v1:= (`java.lang.Number`) v1 @kind object;
  #L3146ec.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3146f2.  v1:= temp;
  #L3146f4.  v2:= (`kotlin.coroutines.g$b`) v2 @kind object;
  #L3146f8.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/c$a;.invoke:(ILkotlin/coroutines/g$b;)Ljava/lang/Integer;` @kind virtual;
  #L3146fe.  v1:= temp @kind object;
  #L314700.  return v1 @kind object;
}
