record `kotlinx.coroutines.flow.internal.e$a` @kind class @AccessFlag FINAL extends `kotlin.jvm.internal.l` @kind class, `wd.p` @kind interface {
  `kotlinx.coroutines.flow.internal.c` `kotlinx.coroutines.flow.internal.e$a.$this_checkContext` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `kotlinx.coroutines.flow.internal.c` v1 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.<init>:(Lkotlinx/coroutines/flow/internal/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L314908.  v0.`kotlinx.coroutines.flow.internal.e$a.$this_checkContext` @type ^`kotlinx.coroutines.flow.internal.c` := v1 @kind object;
  #L31490c.  v1:= 2I;
  #L31490e.  call `<init>`(v0, v1) @signature `Lkotlin/jvm/internal/l;.<init>:(I)V` @kind direct;
  #L314914.  return @kind void;
}
procedure `java.lang.Integer` `invoke`(`kotlinx.coroutines.flow.internal.e$a` v3 @kind this, `int` v4 , `kotlin.coroutines.g$b` v5 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invoke:(ILkotlin/coroutines/g$b;)Ljava/lang/Integer;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L31481c.  call temp:= `getKey`(v5) @signature `Lkotlin/coroutines/g$b;.getKey:()Lkotlin/coroutines/g$c;` @kind interface;
  #L314822.  v0:= temp @kind object;
  #L314824.  v1:= v3.`kotlinx.coroutines.flow.internal.e$a.$this_checkContext` @type ^`kotlinx.coroutines.flow.internal.c` @kind object;
  #L314828.  v1:= v1.`kotlinx.coroutines.flow.internal.c.collectContext` @type ^`kotlin.coroutines.g` @kind object;
  #L31482c.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L314832.  v1:= temp @kind object;
  #L314834.  v2:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L314838.  if v0 == v2 then goto L314854;
  #L31483c.  if v5 == v1 then goto L314846;
  #L314840.  v4:= -2147483648I;
  #L314844.  goto L31484a;
  #L314846.  v4:= v4 + 1;
  #L31484a.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L314850.  v4:= temp @kind object;
  #L314852.  return v4 @kind object;
  #L314854.  v1:= (`kotlinx.coroutines.w1`) v1 @kind object;
  #L314858.  v5:= (`kotlinx.coroutines.w1`) v5 @kind object;
  #L31485c.  call temp:= `b`(v5, v1) @signature `Lkotlinx/coroutines/flow/internal/e;.b:(Lkotlinx/coroutines/w1;Lkotlinx/coroutines/w1;)Lkotlinx/coroutines/w1;` @kind static;
  #L314862.  v5:= temp @kind object;
  #L314864.  if v5 != v1 then goto L31487c;
  #L314868.  if v1 != 0 then goto L31486e;
  #L31486c.  goto L314872;
  #L31486e.  v4:= v4 + 1;
  #L314872.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L314878.  v4:= temp @kind object;
  #L31487a.  return v4 @kind object;
  #L31487c.  v4:= new `java.lang.IllegalStateException`;
  #L314880.  v0:= new `java.lang.StringBuilder`;
  #L314884.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31488a.  v2:= "Flow invariant is violated:\n\t\tEmission from another coroutine is detected.\n\t\tChild of " @kind object;
  #L31488e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L314894.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31489a.  v5:= ", expected child of " @kind object;
  #L31489e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3148a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3148aa.  v5:= ".\n\t\tFlowCollector is not thread-safe and concurrent emissions are prohibited.\n\t\tTo mitigate this restriction please use 'channelFlow' builder instead of 'flow'" @kind object;
  #L3148ae.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3148b4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3148ba.  v5:= temp @kind object;
  #L3148bc.  call temp:= `toString`(v5) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3148c2.  v5:= temp @kind object;
  #L3148c4.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3148ca.  throw v4;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.flow.internal.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3148dc.  v1:= (`java.lang.Number`) v1 @kind object;
  #L3148e0.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L3148e6.  v1:= temp;
  #L3148e8.  v2:= (`kotlin.coroutines.g$b`) v2 @kind object;
  #L3148ec.  call temp:= `invoke`(v0, v1, v2) @signature `Lkotlinx/coroutines/flow/internal/e$a;.invoke:(ILkotlin/coroutines/g$b;)Ljava/lang/Integer;` @kind virtual;
  #L3148f2.  v1:= temp @kind object;
  #L3148f4.  return v1 @kind object;
}
