record `kotlinx.coroutines.flow.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.flow.b` @kind interface {
}
procedure `void` `<init>`(`kotlinx.coroutines.flow.a` v0 @kind this) @signature `Lkotlinx/coroutines/flow/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L314520.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L314526.  return @kind void;
}
procedure `java.lang.Object` `a`(`kotlinx.coroutines.flow.a` v5 @kind this, `kotlinx.coroutines.flow.c` v6 @kind object, `kotlin.coroutines.d` v7 @kind object) @signature `Lkotlinx/coroutines/flow/a;.a:(Lkotlinx/coroutines/flow/c;Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L31443c.  v0:= instanceof @variable v7 @type ^`kotlinx.coroutines.flow.a$a` @kind boolean;
  #L314440.  if v0 == 0 then goto L314462;
  #L314444.  v0:= v7 @kind object;
  #L314446.  v0:= (`kotlinx.coroutines.flow.a$a`) v0 @kind object;
  #L31444a.  v1:= v0.`kotlinx.coroutines.flow.a$a.label` @type ^`int`;
  #L31444e.  v2:= -2147483648I;
  #L314452.  v3:= v1 ^& v2 @kind int;
  #L314456.  if v3 == 0 then goto L314462;
  #L31445a.  v1:= v1 - v2 @kind int;
  #L31445c.  v0.`kotlinx.coroutines.flow.a$a.label` @type ^`int` := v1;
  #L314460.  goto L31446c;
  #L314462.  v0:= new `kotlinx.coroutines.flow.a$a`;
  #L314466.  call `<init>`(v0, v5, v7) @signature `Lkotlinx/coroutines/flow/a$a;.<init>:(Lkotlinx/coroutines/flow/a;Lkotlin/coroutines/d;)V` @kind direct;
  #L31446c.  v7:= v0.`kotlinx.coroutines.flow.a$a.result` @type ^`java.lang.Object` @kind object;
  #L314470.  call temp:= `d`() @signature `Lkotlin/coroutines/intrinsics/b;.d:()Ljava/lang/Object;` @kind static;
  #L314476.  v1:= temp @kind object;
  #L314478.  v2:= v0.`kotlinx.coroutines.flow.a$a.label` @type ^`int`;
  #L31447c.  v3:= 1I;
  #L31447e.  if v2 == 0 then goto L3144aa;
  #L314482.  if v2 != v3 then goto L31449a;
  #L314486.  v6:= v0.`kotlinx.coroutines.flow.a$a.L$0` @type ^`java.lang.Object` @kind object;
  #L31448a.  v6:= (`kotlinx.coroutines.flow.internal.c`) v6 @kind object;
  #L31448e.  call `b`(v7) @signature `Lod/o;.b:(Ljava/lang/Object;)V` @kind static;
  #L314494.  goto L3144da;
  #L314496.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L314498.  goto L3144ee;
  #L31449a.  v6:= new `java.lang.IllegalStateException`;
  #L31449e.  v7:= "call to 'resume' before 'invoke' with coroutine" @kind object;
  #L3144a2.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3144a8.  throw v6;
  #L3144aa.  call `b`(v7) @signature `Lod/o;.b:(Ljava/lang/Object;)V` @kind static;
  #L3144b0.  v7:= new `kotlinx.coroutines.flow.internal.c`;
  #L3144b4.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/d;.getContext:()Lkotlin/coroutines/g;` @kind interface;
  #L3144ba.  v2:= temp @kind object;
  #L3144bc.  call `<init>`(v7, v6, v2) @signature `Lkotlinx/coroutines/flow/internal/c;.<init>:(Lkotlinx/coroutines/flow/c;Lkotlin/coroutines/g;)V` @kind direct;
  #L3144c2.  v0.`kotlinx.coroutines.flow.a$a.L$0` @type ^`java.lang.Object` := v7 @kind object;
  #L3144c6.  v0.`kotlinx.coroutines.flow.a$a.label` @type ^`int` := v3;
  #L3144ca.  call temp:= `b`(v5, v7, v0) @signature `Lkotlinx/coroutines/flow/a;.b:(Lkotlinx/coroutines/flow/c;Lkotlin/coroutines/d;)Ljava/lang/Object;` @kind virtual;
  #L3144d0.  v6:= temp @kind object;
  #L3144d2.  if v6 != v1 then goto L3144d8;
  #L3144d6.  return v1 @kind object;
  #L3144d8.  v6:= v7 @kind object;
  #L3144da.  call `releaseIntercepted`(v6) @signature `Lkotlinx/coroutines/flow/internal/c;.releaseIntercepted:()V` @kind virtual;
  #L3144e0.  v6:= `@@od.t.a` @type ^`od.t` @kind object;
  #L3144e4.  return v6 @kind object;
  #L3144e6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3144e8.  v4:= v7 @kind object;
  #L3144ea.  v7:= v6 @kind object;
  #L3144ec.  v6:= v4 @kind object;
  #L3144ee.  call `releaseIntercepted`(v6) @signature `Lkotlinx/coroutines/flow/internal/c;.releaseIntercepted:()V` @kind virtual;
  #L3144f4.  throw v7;
  catch `java.lang.Throwable` @[L31448e..L314494] goto L314496;
  catch `java.lang.Throwable` @[L3144c2..L3144d2] goto L3144e6;
}
procedure `java.lang.Object` `b`(`kotlinx.coroutines.flow.c` v0 @kind object, `kotlin.coroutines.d` v1 @kind object) @signature `Lkotlinx/coroutines/flow/a;.b:(Lkotlinx/coroutines/flow/c;Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
