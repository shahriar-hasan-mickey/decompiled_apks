record `kotlinx.coroutines.internal.o` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`int` v2 ) @signature `Lkotlinx/coroutines/internal/o;.a:(I)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L31656c.  v0:= 1I;
  #L31656e.  if v2 < v0 then goto L316574;
  #L316572.  goto L316576;
  #L316574.  v0:= 0I;
  #L316576.  if v0 == 0 then goto L31657c;
  #L31657a.  return @kind void;
  #L31657c.  v0:= new `java.lang.StringBuilder`;
  #L316580.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L316586.  v1:= "Expected positive parallelism level, but got " @kind object;
  #L31658a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L316590.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L316596.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31659c.  v2:= temp @kind object;
  #L31659e.  v0:= new `java.lang.IllegalArgumentException`;
  #L3165a2.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3165a8.  v2:= temp @kind object;
  #L3165aa.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3165b0.  throw v0;
}
