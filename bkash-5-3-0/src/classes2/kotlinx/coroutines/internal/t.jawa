record `kotlinx.coroutines.internal.t` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.Object` `kotlinx.coroutines.internal.t._next` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `long` `kotlinx.coroutines.internal.t._state` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `int` `kotlinx.coroutines.internal.t.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlinx.coroutines.internal.t.b` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.t.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `kotlinx.coroutines.internal.t.d` @AccessFlag PRIVATE_SYNTHETIC;
}
global `kotlinx.coroutines.internal.t$a` `@@kotlinx.coroutines.internal.t.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.t.f` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `java.util.concurrent.atomic.AtomicLongFieldUpdater` `@@kotlinx.coroutines.internal.t.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kotlinx.coroutines.internal.f0` `@@kotlinx.coroutines.internal.t.h` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3173b8.  v0:= constclass @type ^`kotlinx.coroutines.internal.t` @kind object;
  #L3173bc.  v1:= new `kotlinx.coroutines.internal.t$a`;
  #L3173c0.  v2:= 0I;
  #L3173c2.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/t$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L3173c8.  `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` := v1 @kind object;
  #L3173cc.  v1:= new `kotlinx.coroutines.internal.f0`;
  #L3173d0.  v2:= "REMOVE_FROZEN" @kind object;
  #L3173d4.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3173da.  `@@kotlinx.coroutines.internal.t.h` @type ^`kotlinx.coroutines.internal.f0` := v1 @kind object;
  #L3173de.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3173e2.  v2:= "_next" @kind object;
  #L3173e6.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L3173ec.  v1:= temp @kind object;
  #L3173ee.  `@@kotlinx.coroutines.internal.t.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v1 @kind object;
  #L3173f2.  v1:= "_state" @kind object;
  #L3173f6.  call temp:= `newUpdater`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;` @kind static;
  #L3173fc.  v0:= temp @kind object;
  #L3173fe.  `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` := v0 @kind object;
  #L317402.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.t` v4 @kind this, `int` v5 , `boolean` v6 ) @signature `Lkotlinx/coroutines/internal/t;.<init>:(IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L317414.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31741a.  v4.`kotlinx.coroutines.internal.t.a` @type ^`int` := v5;
  #L31741e.  v4.`kotlinx.coroutines.internal.t.b` @type ^`boolean` := v6 @kind boolean;
  #L317422.  v6:= v5 + -1;
  #L317426.  v4.`kotlinx.coroutines.internal.t.c` @type ^`int` := v6;
  #L31742a.  v0:= 0I;
  #L31742c.  v4.`kotlinx.coroutines.internal.t._next` @type ^`java.lang.Object` := v0 @kind object;
  #L317430.  v0:= 0L;
  #L317434.  v4.`kotlinx.coroutines.internal.t._state` @type ^`long` := v0 @kind wide;
  #L317438.  v0:= new `java.util.concurrent.atomic.AtomicReferenceArray`;
  #L31743c.  call `<init>`(v0, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L317442.  v4.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v0 @kind object;
  #L317446.  v0:= 0I;
  #L317448.  v1:= 1I;
  #L31744a.  v2:= 1073741823I;
  #L317450.  if v6 > v2 then goto L317458;
  #L317454.  v2:= 1I;
  #L317456.  goto L31745a;
  #L317458.  v2:= 0I;
  #L31745a.  v3:= "Check failed." @kind object;
  #L31745e.  if v2 == 0 then goto L317484;
  #L317462.  v5:= v5 ^& v6 @kind int;
  #L317464.  if v5 != 0 then goto L31746a;
  #L317468.  v0:= 1I;
  #L31746a.  if v0 == 0 then goto L317470;
  #L31746e.  return @kind void;
  #L317470.  v5:= new `java.lang.IllegalStateException`;
  #L317474.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31747a.  v6:= temp @kind object;
  #L31747c.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L317482.  throw v5;
  #L317484.  v5:= new `java.lang.IllegalStateException`;
  #L317488.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L31748e.  v6:= temp @kind object;
  #L317490.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L317496.  throw v5;
}
procedure `kotlinx.coroutines.internal.t` `b`(`kotlinx.coroutines.internal.t` v6 @kind this, `long` v7 ) @signature `Lkotlinx/coroutines/internal/t;.b:(J)Lkotlinx/coroutines/internal/t;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L317198.  v0:= new `kotlinx.coroutines.internal.t`;
  #L31719c.  v1:= v6.`kotlinx.coroutines.internal.t.a` @type ^`int`;
  #L3171a0.  v1:= v1 * 2;
  #L3171a4.  v2:= v6.`kotlinx.coroutines.internal.t.b` @type ^`boolean` @kind boolean;
  #L3171a8.  call `<init>`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/t;.<init>:(IZ)V` @kind direct;
  #L3171ae.  v1:= 1073741823L;
  #L3171b4.  v1:= v1 ^& v7 @kind long;
  #L3171b6.  v3:= 0I;
  #L3171b8.  v1:= v1 ^> v3 @kind long;
  #L3171ba.  v2:= (`int`) v1 @kind l2i;
  #L3171bc.  v3:= 1152921503533105152L;
  #L3171c6.  v3:= v3 ^& v7 @kind long;
  #L3171c8.  v1:= 30I;
  #L3171cc.  v3:= v3 ^> v1 @kind long;
  #L3171ce.  v1:= (`int`) v3 @kind l2i;
  #L3171d0.  v3:= v6.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L3171d4.  v4:= v2 ^& v3 @kind int;
  #L3171d8.  v5:= v1 ^& v3 @kind int;
  #L3171dc.  if v4 == v5 then goto L317212;
  #L3171e0.  v4:= v6.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L3171e4.  v3:= v3 ^& v2 @kind int;
  #L3171e6.  call temp:= `get`(v4, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3171ec.  v3:= temp @kind object;
  #L3171ee.  if v3 != 0 then goto L3171fc;
  #L3171f2.  v3:= new `kotlinx.coroutines.internal.t$b`;
  #L3171f6.  call `<init>`(v3, v2) @signature `Lkotlinx/coroutines/internal/t$b;.<init>:(I)V` @kind direct;
  #L3171fc.  v4:= v0.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317200.  v5:= v0.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L317204.  v5:= v5 ^& v2 @kind int;
  #L317206.  call `set`(v4, v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L31720c.  v2:= v2 + 1;
  #L317210.  goto L3171d0;
  #L317212.  v1:= `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` @kind object;
  #L317216.  v2:= 1152921504606846976L;
  #L31721a.  call temp:= `d`(v1, v7, v2) @signature `Lkotlinx/coroutines/internal/t$a;.d:(JJ)J` @kind virtual;
  #L317220.  v7:= temp @kind wide;
  #L317222.  v0.`kotlinx.coroutines.internal.t._state` @type ^`long` := v7 @kind wide;
  #L317226.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.t` `c`(`kotlinx.coroutines.internal.t` v3 @kind this, `long` v4 ) @signature `Lkotlinx/coroutines/internal/t;.c:(J)Lkotlinx/coroutines/internal/t;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L317238.  v0:= v3.`kotlinx.coroutines.internal.t._next` @type ^`java.lang.Object` @kind object;
  #L31723c.  v0:= (`kotlinx.coroutines.internal.t`) v0 @kind object;
  #L317240.  if v0 == 0 then goto L317246;
  #L317244.  return v0 @kind object;
  #L317246.  v0:= `@@kotlinx.coroutines.internal.t.f` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31724a.  v1:= 0I;
  #L31724c.  call temp:= `b`(v3, v4) @signature `Lkotlinx/coroutines/internal/t;.b:(J)Lkotlinx/coroutines/internal/t;` @kind direct;
  #L317252.  v2:= temp @kind object;
  #L317254.  call temp:= `compareAndSet`(v0, v3, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31725a.  goto L317238;
}
procedure `kotlinx.coroutines.internal.t` `e`(`kotlinx.coroutines.internal.t` v2 @kind this, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/t;.e:(ILjava/lang/Object;)Lkotlinx/coroutines/internal/t;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L31726c.  v0:= v2.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317270.  v1:= v2.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L317274.  v1:= v1 ^& v3 @kind int;
  #L317276.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L31727c.  v0:= temp @kind object;
  #L31727e.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.internal.t$b` @kind boolean;
  #L317282.  if v1 == 0 then goto L3172a4;
  #L317286.  v0:= (`kotlinx.coroutines.internal.t$b`) v0 @kind object;
  #L31728a.  v0:= v0.`kotlinx.coroutines.internal.t$b.a` @type ^`int`;
  #L31728e.  if v0 != v3 then goto L3172a4;
  #L317292.  v0:= v2.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317296.  v1:= v2.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L31729a.  v3:= v3 ^& v1 @kind int;
  #L31729c.  call `set`(v0, v3, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L3172a2.  return v2 @kind object;
  #L3172a4.  v3:= 0I;
  #L3172a6.  return v3 @kind object;
}
procedure `long` `h`(`kotlinx.coroutines.internal.t` v9 @kind this) @signature `Lkotlinx/coroutines/internal/t;.h:()J` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L317374.  v2:= v9.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L317378.  v0:= 1152921504606846976L;
  #L31737c.  v4:= v2 ^& v0 @kind long;
  #L317380.  v6:= 0L;
  #L317384.  v8:= lcmp(v4, v6);
  #L317388.  if v8 == 0 then goto L31738e;
  #L31738c.  return v2 @kind wide;
  #L31738e.  v6:= v2 ^| v0 @kind long;
  #L317392.  v0:= `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L317396.  v1:= v9 @kind object;
  #L317398.  v4:= v6 @kind wide;
  #L31739a.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L3173a0.  v0:= temp;
  #L3173a2.  if v0 == 0 then goto L317374;
  #L3173a6.  return v6 @kind wide;
}
procedure `kotlinx.coroutines.internal.t` `k`(`kotlinx.coroutines.internal.t` v9 @kind this, `int` v10 , `int` v11 ) @signature `Lkotlinx/coroutines/internal/t;.k:(II)Lkotlinx/coroutines/internal/t;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3172dc.  v2:= v9.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L3172e0.  v0:= `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` @kind object;
  #L3172e4.  v4:= 1073741823L;
  #L3172ea.  v4:= v4 ^& v2 @kind long;
  #L3172ec.  v1:= 0I;
  #L3172ee.  v4:= v4 ^> v1 @kind long;
  #L3172f0.  v6:= (`int`) v4 @kind l2i;
  #L3172f2.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L3172f8.  v4:= temp;
  #L3172fa.  if v4 == 0 then goto L317316;
  #L3172fe.  if v6 != v10 then goto L317304;
  #L317302.  v1:= 1I;
  #L317304.  if v1 == 0 then goto L31730a;
  #L317308.  goto L317316;
  #L31730a.  v10:= new `java.lang.AssertionError`;
  #L31730e.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L317314.  throw v10;
  #L317316.  v4:= 1152921504606846976L;
  #L31731a.  v4:= v4 ^& v2 @kind long;
  #L31731c.  v7:= 0L;
  #L317320.  v1:= lcmp(v4, v7);
  #L317324.  if v1 == 0 then goto L317332;
  #L317328.  call temp:= `i`(v9) @signature `Lkotlinx/coroutines/internal/t;.i:()Lkotlinx/coroutines/internal/t;` @kind virtual;
  #L31732e.  v10:= temp @kind object;
  #L317330.  return v10 @kind object;
  #L317332.  v1:= `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L317336.  call temp:= `b`(v0, v2, v11) @signature `Lkotlinx/coroutines/internal/t$a;.b:(JI)J` @kind virtual;
  #L31733c.  v4:= temp @kind wide;
  #L31733e.  v0:= v1 @kind object;
  #L317340.  v1:= v9 @kind object;
  #L317342.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L317348.  v0:= temp;
  #L31734a.  if v0 == 0 then goto L3172dc;
  #L31734e.  v10:= v9.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317352.  v11:= v9.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L317356.  v11:= v11 ^& v6 @kind int;
  #L317358.  v0:= 0I;
  #L31735a.  call `set`(v10, v11, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L317360.  return v0 @kind object;
}
procedure `int` `a`(`kotlinx.coroutines.internal.t` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lkotlinx/coroutines/internal/t;.a:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L316f68.  v2:= v13.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L316f6c.  v0:= 1.727233711018889E-77D;
  #L316f70.  v0:= v0 ^& v2 @kind long;
  #L316f72.  v6:= 0L;
  #L316f76.  v4:= lcmp(v0, v6);
  #L316f7a.  if v4 == 0 then goto L316f8c;
  #L316f7e.  v14:= `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` @kind object;
  #L316f82.  call temp:= `a`(v14, v2) @signature `Lkotlinx/coroutines/internal/t$a;.a:(J)I` @kind virtual;
  #L316f88.  v14:= temp;
  #L316f8a.  return v14;
  #L316f8c.  v0:= `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` @kind object;
  #L316f90.  v4:= 1073741823L;
  #L316f96.  v4:= v4 ^& v2 @kind long;
  #L316f98.  v8:= 0I;
  #L316f9a.  v4:= v4 ^> v8 @kind long;
  #L316f9c.  v1:= (`int`) v4 @kind l2i;
  #L316f9e.  v4:= 1152921503533105152L;
  #L316fa8.  v4:= v4 ^& v2 @kind long;
  #L316faa.  v9:= 30I;
  #L316fae.  v4:= v4 ^> v9 @kind long;
  #L316fb0.  v9:= (`int`) v4 @kind l2i;
  #L316fb2.  v10:= v13.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L316fb6.  v4:= v9 + 2;
  #L316fba.  v4:= v4 ^& v10 @kind int;
  #L316fbc.  v5:= v1 ^& v10 @kind int;
  #L316fc0.  v11:= 1I;
  #L316fc2.  if v4 != v5 then goto L316fc8;
  #L316fc6.  return v11;
  #L316fc8.  v4:= v13.`kotlinx.coroutines.internal.t.b` @type ^`boolean` @kind boolean;
  #L316fcc.  v5:= 1073741823I;
  #L316fd2.  if v4 != 0 then goto L317006;
  #L316fd6.  v4:= v13.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L316fda.  v12:= v9 ^& v10 @kind int;
  #L316fde.  call temp:= `get`(v4, v12) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L316fe4.  v4:= temp @kind object;
  #L316fe6.  if v4 == 0 then goto L317006;
  #L316fea.  v0:= v13.`kotlinx.coroutines.internal.t.a` @type ^`int`;
  #L316fee.  v2:= 1024I;
  #L316ff2.  if v0 < v2 then goto L317004;
  #L316ff6.  v9:= v9 - v1 @kind int;
  #L316ff8.  v1:= v9 ^& v5 @kind int;
  #L316ffc.  v0:= v0 ^> 1;
  #L317000.  if v1 <= v0 then goto L316f68;
  #L317004.  return v11;
  #L317006.  v1:= v9 + 1;
  #L31700a.  v1:= v1 ^& v5 @kind int;
  #L31700c.  v4:= `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L317010.  call temp:= `c`(v0, v2, v1) @signature `Lkotlinx/coroutines/internal/t$a;.c:(JI)J` @kind virtual;
  #L317016.  v11:= temp @kind wide;
  #L317018.  v0:= v4 @kind object;
  #L31701a.  v1:= v13 @kind object;
  #L31701c.  v4:= v11 @kind wide;
  #L31701e.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L317024.  v0:= temp;
  #L317026.  if v0 == 0 then goto L316f68;
  #L31702a.  v0:= v13.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L31702e.  v1:= v9 ^& v10 @kind int;
  #L317032.  call `set`(v0, v1, v14) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L317038.  v0:= v13 @kind object;
  #L31703a.  v1:= v0.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L31703e.  v3:= 1152921504606846976L;
  #L317042.  v1:= v1 ^& v3 @kind long;
  #L317044.  v3:= lcmp(v1, v6);
  #L317048.  if v3 == 0 then goto L317060;
  #L31704c.  call temp:= `i`(v0) @signature `Lkotlinx/coroutines/internal/t;.i:()Lkotlinx/coroutines/internal/t;` @kind virtual;
  #L317052.  v0:= temp @kind object;
  #L317054.  call temp:= `e`(v0, v9, v14) @signature `Lkotlinx/coroutines/internal/t;.e:(ILjava/lang/Object;)Lkotlinx/coroutines/internal/t;` @kind direct;
  #L31705a.  v0:= temp @kind object;
  #L31705c.  if v0 != 0 then goto L31703a;
  #L317060.  return v8;
}
procedure `boolean` `d`(`kotlinx.coroutines.internal.t` v10 @kind this) @signature `Lkotlinx/coroutines/internal/t;.d:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L316ed0.  v2:= v10.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L316ed4.  v0:= 2305843009213693952L;
  #L316ed8.  v4:= v2 ^& v0 @kind long;
  #L316edc.  v6:= 1I;
  #L316ede.  v7:= 0L;
  #L316ee2.  v9:= lcmp(v4, v7);
  #L316ee6.  if v9 == 0 then goto L316eec;
  #L316eea.  return v6;
  #L316eec.  v4:= 1152921504606846976L;
  #L316ef0.  v4:= v4 ^& v2 @kind long;
  #L316ef2.  v9:= lcmp(v4, v7);
  #L316ef6.  if v9 == 0 then goto L316efe;
  #L316efa.  v0:= 0I;
  #L316efc.  return v0;
  #L316efe.  v4:= v2 ^| v0 @kind long;
  #L316f02.  v0:= `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L316f06.  v1:= v10 @kind object;
  #L316f08.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L316f0e.  v0:= temp;
  #L316f10.  if v0 != 0 then goto L316f16;
  #L316f14.  goto L316ed0;
  #L316f16.  return v6;
}
procedure `int` `f`(`kotlinx.coroutines.internal.t` v6 @kind this) @signature `Lkotlinx/coroutines/internal/t;.f:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L317074.  v0:= v6.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L317078.  v2:= 1073741823L;
  #L31707e.  v2:= v2 ^& v0 @kind long;
  #L317080.  v4:= 0I;
  #L317082.  v2:= v2 ^> v4 @kind long;
  #L317084.  v3:= (`int`) v2 @kind l2i;
  #L317086.  v4:= 1152921503533105152L;
  #L317090.  v0:= v0 ^& v4 @kind long;
  #L317092.  v2:= 30I;
  #L317096.  v0:= v0 ^> v2 @kind long;
  #L317098.  v1:= (`int`) v0 @kind l2i;
  #L31709a.  v1:= v1 - v3 @kind int;
  #L31709c.  v0:= 1073741823I;
  #L3170a2.  v0:= v0 ^& v1 @kind int;
  #L3170a4.  return v0;
}
procedure `boolean` `g`(`kotlinx.coroutines.internal.t` v7 @kind this) @signature `Lkotlinx/coroutines/internal/t;.g:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L316f28.  v0:= v7.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L316f2c.  v2:= 1073741823L;
  #L316f32.  v2:= v2 ^& v0 @kind long;
  #L316f34.  v4:= 0I;
  #L316f36.  v2:= v2 ^> v4 @kind long;
  #L316f38.  v3:= (`int`) v2 @kind l2i;
  #L316f3a.  v5:= 1152921503533105152L;
  #L316f44.  v0:= v0 ^& v5 @kind long;
  #L316f46.  v2:= 30I;
  #L316f4a.  v0:= v0 ^> v2 @kind long;
  #L316f4c.  v1:= (`int`) v0 @kind l2i;
  #L316f4e.  if v3 != v1 then goto L316f54;
  #L316f52.  v4:= 1I;
  #L316f54.  return v4;
}
procedure `kotlinx.coroutines.internal.t` `i`(`kotlinx.coroutines.internal.t` v2 @kind this) @signature `Lkotlinx/coroutines/internal/t;.i:()Lkotlinx/coroutines/internal/t;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3172b8.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/internal/t;.h:()J` @kind direct;
  #L3172be.  v0:= temp @kind wide;
  #L3172c0.  call temp:= `c`(v2, v0) @signature `Lkotlinx/coroutines/internal/t;.c:(J)Lkotlinx/coroutines/internal/t;` @kind direct;
  #L3172c6.  v0:= temp @kind object;
  #L3172c8.  return v0 @kind object;
}
procedure `java.lang.Object` `j`(`kotlinx.coroutines.internal.t` v10 @kind this) @signature `Lkotlinx/coroutines/internal/t;.j:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3170b8.  v2:= v10.`kotlinx.coroutines.internal.t._state` @type ^`long` @kind wide;
  #L3170bc.  v0:= 1152921504606846976L;
  #L3170c0.  v0:= v0 ^& v2 @kind long;
  #L3170c2.  v4:= 0L;
  #L3170c6.  v6:= lcmp(v0, v4);
  #L3170ca.  if v6 == 0 then goto L3170d4;
  #L3170ce.  v0:= `@@kotlinx.coroutines.internal.t.h` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3170d2.  return v0 @kind object;
  #L3170d4.  v0:= `@@kotlinx.coroutines.internal.t.e` @type ^`kotlinx.coroutines.internal.t$a` @kind object;
  #L3170d8.  v4:= 1073741823L;
  #L3170de.  v4:= v4 ^& v2 @kind long;
  #L3170e0.  v1:= 0I;
  #L3170e2.  v4:= v4 ^> v1 @kind long;
  #L3170e4.  v6:= (`int`) v4 @kind l2i;
  #L3170e6.  v4:= 1152921503533105152L;
  #L3170f0.  v4:= v4 ^& v2 @kind long;
  #L3170f2.  v1:= 30I;
  #L3170f6.  v4:= v4 ^> v1 @kind long;
  #L3170f8.  v1:= (`int`) v4 @kind l2i;
  #L3170fa.  v4:= v10.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L3170fe.  v1:= v1 ^& v4 @kind int;
  #L317100.  v5:= v6 ^& v4 @kind int;
  #L317104.  v7:= 0I;
  #L317106.  if v1 != v5 then goto L31710c;
  #L31710a.  return v7 @kind object;
  #L31710c.  v1:= v10.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317110.  v4:= v4 ^& v6 @kind int;
  #L317112.  call temp:= `get`(v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L317118.  v8:= temp @kind object;
  #L31711a.  if v8 != 0 then goto L317128;
  #L31711e.  v0:= v10.`kotlinx.coroutines.internal.t.b` @type ^`boolean` @kind boolean;
  #L317122.  if v0 == 0 then goto L3170b8;
  #L317126.  return v7 @kind object;
  #L317128.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.internal.t$b` @kind boolean;
  #L31712c.  if v1 == 0 then goto L317132;
  #L317130.  return v7 @kind object;
  #L317132.  v1:= v6 + 1;
  #L317136.  v4:= 1073741823I;
  #L31713c.  v9:= v1 ^& v4 @kind int;
  #L317140.  v1:= `@@kotlinx.coroutines.internal.t.g` @type ^`java.util.concurrent.atomic.AtomicLongFieldUpdater` @kind object;
  #L317144.  call temp:= `b`(v0, v2, v9) @signature `Lkotlinx/coroutines/internal/t$a;.b:(JI)J` @kind virtual;
  #L31714a.  v4:= temp @kind wide;
  #L31714c.  v0:= v1 @kind object;
  #L31714e.  v1:= v10 @kind object;
  #L317150.  call temp:= `compareAndSet`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/atomic/AtomicLongFieldUpdater;.compareAndSet:(Ljava/lang/Object;JJ)Z` @kind virtual;
  #L317156.  v0:= temp;
  #L317158.  if v0 == 0 then goto L31716e;
  #L31715c.  v0:= v10.`kotlinx.coroutines.internal.t.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L317160.  v1:= v10.`kotlinx.coroutines.internal.t.c` @type ^`int`;
  #L317164.  v1:= v1 ^& v6 @kind int;
  #L317166.  call `set`(v0, v1, v7) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L31716c.  return v8 @kind object;
  #L31716e.  v0:= v10.`kotlinx.coroutines.internal.t.b` @type ^`boolean` @kind boolean;
  #L317172.  if v0 == 0 then goto L3170b8;
  #L317176.  v0:= v10 @kind object;
  #L317178.  call temp:= `k`(v0, v6, v9) @signature `Lkotlinx/coroutines/internal/t;.k:(II)Lkotlinx/coroutines/internal/t;` @kind direct;
  #L31717e.  v0:= temp @kind object;
  #L317180.  if v0 != 0 then goto L317178;
  #L317184.  return v8 @kind object;
}
