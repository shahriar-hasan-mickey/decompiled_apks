record `kotlinx.coroutines.internal.n` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.e0` @kind class, `java.lang.Runnable` @kind interface, `kotlinx.coroutines.w0` @kind interface {
  `kotlinx.coroutines.e0` `kotlinx.coroutines.internal.n.i` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.n.j` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.w0` `kotlinx.coroutines.internal.n.k` @AccessFlag PRIVATE_FINAL_SYNTHETIC;
  `kotlinx.coroutines.internal.s` `kotlinx.coroutines.internal.n.l` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.n.m` @AccessFlag PRIVATE_FINAL;
  `int` `kotlinx.coroutines.internal.n.runningWorkers` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.n` v0 @kind this, `kotlinx.coroutines.e0` v1 @kind object, `int` v2 ) @signature `Lkotlinx/coroutines/internal/n;.<init>:(Lkotlinx/coroutines/e0;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L316648.  call `<init>`(v0) @signature `Lkotlinx/coroutines/e0;.<init>:()V` @kind direct;
  #L31664e.  v0.`kotlinx.coroutines.internal.n.i` @type ^`kotlinx.coroutines.e0` := v1 @kind object;
  #L316652.  v0.`kotlinx.coroutines.internal.n.j` @type ^`int` := v2;
  #L316656.  v2:= instanceof @variable v1 @type ^`kotlinx.coroutines.w0` @kind boolean;
  #L31665a.  if v2 == 0 then goto L316664;
  #L31665e.  v1:= (`kotlinx.coroutines.w0`) v1 @kind object;
  #L316662.  goto L316666;
  #L316664.  v1:= 0I;
  #L316666.  if v1 != 0 then goto L316672;
  #L31666a.  call temp:= `a`() @signature `Lkotlinx/coroutines/t0;.a:()Lkotlinx/coroutines/w0;` @kind static;
  #L316670.  v1:= temp @kind object;
  #L316672.  v0.`kotlinx.coroutines.internal.n.k` @type ^`kotlinx.coroutines.w0` := v1 @kind object;
  #L316676.  v1:= new `kotlinx.coroutines.internal.s`;
  #L31667a.  v2:= 0I;
  #L31667c.  call `<init>`(v1, v2) @signature `Lkotlinx/coroutines/internal/s;.<init>:(Z)V` @kind direct;
  #L316682.  v0.`kotlinx.coroutines.internal.n.l` @type ^`kotlinx.coroutines.internal.s` := v1 @kind object;
  #L316686.  v1:= new `java.lang.Object`;
  #L31668a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L316690.  v0.`kotlinx.coroutines.internal.n.m` @type ^`java.lang.Object` := v1 @kind object;
  #L316694.  return @kind void;
}
procedure `boolean` `u0`(`kotlinx.coroutines.internal.n` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/n;.u0:(Ljava/lang/Runnable;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3165c4.  v0:= v1.`kotlinx.coroutines.internal.n.l` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L3165c8.  call temp:= `a`(v0, v2) @signature `Lkotlinx/coroutines/internal/s;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L3165ce.  v2:= v1.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3165d2.  v0:= v1.`kotlinx.coroutines.internal.n.j` @type ^`int`;
  #L3165d6.  if v2 < v0 then goto L3165de;
  #L3165da.  v2:= 1I;
  #L3165dc.  goto L3165e0;
  #L3165de.  v2:= 0I;
  #L3165e0.  return v2;
}
procedure `boolean` `x0`(`kotlinx.coroutines.internal.n` v3 @kind this) @signature `Lkotlinx/coroutines/internal/n;.x0:()Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3165f4.  v0:= v3.`kotlinx.coroutines.internal.n.m` @type ^`java.lang.Object` @kind object;
  #L3165f8.  @monitorenter v0
  #L3165fa.  v1:= v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L3165fe.  v2:= v3.`kotlinx.coroutines.internal.n.j` @type ^`int`;
  #L316602.  if v1 < v2 then goto L31660c;
  #L316606.  v1:= 0I;
  #L316608.  @monitorexit v0
  #L31660a.  return v1;
  #L31660c.  v1:= v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L316610.  v2:= 1I;
  #L316612.  v1:= v1 + v2 @kind int;
  #L316614.  v3.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v1;
  #L316618.  @monitorexit v0
  #L31661a.  return v2;
  #L31661c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31661e.  @monitorexit v0
  #L316620.  throw v1;
  catch `java.lang.Throwable` @[L3165fa..L316602] goto L31661c;
  catch `java.lang.Throwable` @[L31660c..L316618] goto L31661c;
}
procedure `void` `l0`(`kotlinx.coroutines.internal.n` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/n;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L3166a8.  call temp:= `u0`(v0, v2) @signature `Lkotlinx/coroutines/internal/n;.u0:(Ljava/lang/Runnable;)Z` @kind direct;
  #L3166ae.  v1:= temp;
  #L3166b0.  if v1 != 0 then goto L3166ca;
  #L3166b4.  call temp:= `x0`(v0) @signature `Lkotlinx/coroutines/internal/n;.x0:()Z` @kind direct;
  #L3166ba.  v1:= temp;
  #L3166bc.  if v1 == 0 then goto L3166ca;
  #L3166c0.  v1:= v0.`kotlinx.coroutines.internal.n.i` @type ^`kotlinx.coroutines.e0` @kind object;
  #L3166c4.  call `l0`(v1, v0, v0) @signature `Lkotlinx/coroutines/e0;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3166ca.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.internal.n` v4 @kind this) @signature `Lkotlinx/coroutines/internal/n;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3166dc.  v0:= 0I;
  #L3166de.  v1:= 0I;
  #L3166e0.  v2:= v4.`kotlinx.coroutines.internal.n.l` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L3166e4.  call temp:= `d`(v2) @signature `Lkotlinx/coroutines/internal/s;.d:()Ljava/lang/Object;` @kind virtual;
  #L3166ea.  v2:= temp @kind object;
  #L3166ec.  v2:= (`java.lang.Runnable`) v2 @kind object;
  #L3166f0.  if v2 == 0 then goto L316730;
  #L3166f4.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3166fa.  goto L316708;
  #L3166fc.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3166fe.  v3:= `@@kotlin.coroutines.h.INSTANCE` @type ^`kotlin.coroutines.h` @kind object;
  #L316702.  call `a`(v3, v2) @signature `Lkotlinx/coroutines/i0;.a:(Lkotlin/coroutines/g;Ljava/lang/Throwable;)V` @kind static;
  #L316708.  v1:= v1 + 1;
  #L31670c.  v2:= 16I;
  #L316710.  if v1 < v2 then goto L3166e0;
  #L316714.  v2:= v4.`kotlinx.coroutines.internal.n.i` @type ^`kotlinx.coroutines.e0` @kind object;
  #L316718.  call temp:= `n0`(v2, v4) @signature `Lkotlinx/coroutines/e0;.n0:(Lkotlin/coroutines/g;)Z` @kind virtual;
  #L31671e.  v2:= temp;
  #L316720.  if v2 == 0 then goto L3166e0;
  #L316724.  v0:= v4.`kotlinx.coroutines.internal.n.i` @type ^`kotlinx.coroutines.e0` @kind object;
  #L316728.  call `l0`(v0, v4, v4) @signature `Lkotlinx/coroutines/e0;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L31672e.  return @kind void;
  #L316730.  v1:= v4.`kotlinx.coroutines.internal.n.m` @type ^`java.lang.Object` @kind object;
  #L316734.  @monitorenter v1
  #L316736.  v2:= v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L31673a.  v2:= v2 + -1;
  #L31673e.  v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v2;
  #L316742.  v2:= v4.`kotlinx.coroutines.internal.n.l` @type ^`kotlinx.coroutines.internal.s` @kind object;
  #L316746.  call temp:= `c`(v2) @signature `Lkotlinx/coroutines/internal/s;.c:()I` @kind virtual;
  #L31674c.  v2:= temp;
  #L31674e.  if v2 != 0 then goto L316756;
  #L316752.  @monitorexit v1
  #L316754.  return @kind void;
  #L316756.  v2:= v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int`;
  #L31675a.  v2:= v2 + 1;
  #L31675e.  v4.`kotlinx.coroutines.internal.n.runningWorkers` @type ^`int` := v2;
  #L316762.  v2:= `@@od.t.a` @type ^`od.t` @kind object;
  #L316766.  @monitorexit v1
  #L316768.  goto L3166de;
  #L31676a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31676c.  @monitorexit v1
  #L31676e.  throw v0;
  catch `java.lang.Throwable` @[L3166f4..L3166fa] goto L3166fc;
  catch `java.lang.Throwable` @[L316736..L31674e] goto L31676a;
  catch `java.lang.Throwable` @[L316756..L316766] goto L31676a;
}
procedure `void` `s`(`kotlinx.coroutines.internal.n` v1 @kind this, `long` v2 , `kotlinx.coroutines.l` v4 @kind object) @signature `Lkotlinx/coroutines/internal/n;.s:(JLkotlinx/coroutines/l;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3167a0.  v0:= v1.`kotlinx.coroutines.internal.n.k` @type ^`kotlinx.coroutines.w0` @kind object;
  #L3167a4.  call `s`(v0, v2, v4) @signature `Lkotlinx/coroutines/w0;.s:(JLkotlinx/coroutines/l;)V` @kind interface;
  #L3167aa.  return @kind void;
}
