record `kotlinx.coroutines.internal.l` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@kotlinx.coroutines.internal.l.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L315ecc.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315ed0.  v0:= "android.os.Build" @kind object;
  #L315ed4.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L315eda.  v0:= temp @kind object;
  #L315edc.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315ee2.  v0:= temp @kind object;
  #L315ee4.  goto L315efc;
  #L315ee6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315ee8.  v1:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315eec.  call temp:= `a`(v0) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L315ef2.  v0:= temp @kind object;
  #L315ef4.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315efa.  v0:= temp @kind object;
  #L315efc.  call temp:= `isSuccess-impl`(v0) @signature `Lod/n;.isSuccess-impl:(Ljava/lang/Object;)Z` @kind static;
  #L315f02.  v0:= temp;
  #L315f04.  `@@kotlinx.coroutines.internal.l.a` @type ^`boolean` := v0 @kind boolean;
  #L315f08.  return @kind void;
  catch `java.lang.Throwable` @[L315ecc..L315ee4] goto L315ee6;
}
procedure `boolean` `a`() @signature `Lkotlinx/coroutines/internal/l;.a:()Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L315eb4.  v0:= `@@kotlinx.coroutines.internal.l.a` @type ^`boolean` @kind boolean;
  #L315eb8.  return v0;
}
