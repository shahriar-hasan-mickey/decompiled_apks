record `kotlinx.coroutines.internal.q` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.Object` `@@kotlinx.coroutines.internal.q.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L316838.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L31683c.  v1:= "CONDITION_FALSE" @kind object;
  #L316840.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316846.  `@@kotlinx.coroutines.internal.q.a` @type ^`java.lang.Object` := v0 @kind object;
  #L31684a.  v0:= new `kotlinx.coroutines.internal.f0`;
  #L31684e.  v1:= "LIST_EMPTY" @kind object;
  #L316852.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/f0;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L316858.  return @kind void;
}
procedure `java.lang.Object` `a`() @signature `Lkotlinx/coroutines/internal/q;.a:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3167e8.  v0:= `@@kotlinx.coroutines.internal.q.a` @type ^`java.lang.Object` @kind object;
  #L3167ec.  return v0 @kind object;
}
procedure `kotlinx.coroutines.internal.r` `b`(`java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/internal/q;.b:(Ljava/lang/Object;)Lkotlinx/coroutines/internal/r;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L316800.  v0:= instanceof @variable v1 @type ^`kotlinx.coroutines.internal.b0` @kind boolean;
  #L316804.  if v0 == 0 then goto L316810;
  #L316808.  v0:= v1 @kind object;
  #L31680a.  v0:= (`kotlinx.coroutines.internal.b0`) v0 @kind object;
  #L31680e.  goto L316812;
  #L316810.  v0:= 0I;
  #L316812.  if v0 == 0 then goto L31681e;
  #L316816.  v0:= v0.`kotlinx.coroutines.internal.b0.a` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L31681a.  if v0 != 0 then goto L316824;
  #L31681e.  v0:= v1 @kind object;
  #L316820.  v0:= (`kotlinx.coroutines.internal.r`) v0 @kind object;
  #L316824.  return v0 @kind object;
}
