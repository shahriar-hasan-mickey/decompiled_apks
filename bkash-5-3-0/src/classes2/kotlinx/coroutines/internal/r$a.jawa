record `kotlinx.coroutines.internal.r$a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlinx.coroutines.internal.c` @kind class {
  `kotlinx.coroutines.internal.r` `kotlinx.coroutines.internal.r$a.b` @AccessFlag PUBLIC_FINAL;
  `kotlinx.coroutines.internal.r` `kotlinx.coroutines.internal.r$a.c` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.r$a` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object) @signature `Lkotlinx/coroutines/internal/r$a;.<init>:(Lkotlinx/coroutines/internal/r;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31686c.  call `<init>`(v0) @signature `Lkotlinx/coroutines/internal/c;.<init>:()V` @kind direct;
  #L316872.  v0.`kotlinx.coroutines.internal.r$a.b` @type ^`kotlinx.coroutines.internal.r` := v1 @kind object;
  #L316876.  return @kind void;
}
procedure `void` `d`(`kotlinx.coroutines.internal.r$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/r$a;.d:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L316888.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L31688c.  call `h`(v0, v1, v2) @signature `Lkotlinx/coroutines/internal/r$a;.h:(Lkotlinx/coroutines/internal/r;Ljava/lang/Object;)V` @kind virtual;
  #L316892.  return @kind void;
}
procedure `void` `h`(`kotlinx.coroutines.internal.r$a` v2 @kind this, `kotlinx.coroutines.internal.r` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/r$a;.h:(Lkotlinx/coroutines/internal/r;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3168a4.  if v4 != 0 then goto L3168ac;
  #L3168a8.  v4:= 1I;
  #L3168aa.  goto L3168ae;
  #L3168ac.  v4:= 0I;
  #L3168ae.  if v4 == 0 then goto L3168b8;
  #L3168b2.  v0:= v2.`kotlinx.coroutines.internal.r$a.b` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L3168b6.  goto L3168bc;
  #L3168b8.  v0:= v2.`kotlinx.coroutines.internal.r$a.c` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L3168bc.  if v0 == 0 then goto L3168e8;
  #L3168c0.  v1:= `@@kotlinx.coroutines.internal.r.g` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3168c4.  call temp:= `compareAndSet`(v1, v3, v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3168ca.  v3:= temp;
  #L3168cc.  if v3 == 0 then goto L3168e8;
  #L3168d0.  if v4 == 0 then goto L3168e8;
  #L3168d4.  v3:= v2.`kotlinx.coroutines.internal.r$a.b` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L3168d8.  v4:= v2.`kotlinx.coroutines.internal.r$a.c` @type ^`kotlinx.coroutines.internal.r` @kind object;
  #L3168dc.  call `c`(v4) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;)V` @kind static;
  #L3168e2.  call `g`(v3, v4) @signature `Lkotlinx/coroutines/internal/r;.g:(Lkotlinx/coroutines/internal/r;Lkotlinx/coroutines/internal/r;)V` @kind static;
  #L3168e8.  return @kind void;
}
