record `kotlinx.coroutines.internal.e0` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@kotlinx.coroutines.internal.e0.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@kotlinx.coroutines.internal.e0.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/e0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L318310.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L318314.  v0:= "kotlin.coroutines.jvm.internal.a" @kind object;
  #L318318.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L31831e.  v0:= temp @kind object;
  #L318320.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L318326.  v0:= temp @kind object;
  #L318328.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L31832e.  v0:= temp @kind object;
  #L318330.  goto L318348;
  #L318332.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L318334.  v1:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L318338.  call temp:= `a`(v0) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L31833e.  v0:= temp @kind object;
  #L318340.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L318346.  v0:= temp @kind object;
  #L318348.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lod/n;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L31834e.  v1:= temp @kind object;
  #L318350.  if v1 != 0 then goto L318356;
  #L318354.  goto L31835a;
  #L318356.  v0:= "kotlin.coroutines.jvm.internal.BaseContinuationImpl" @kind object;
  #L31835a.  v0:= (`java.lang.String`) v0 @kind object;
  #L31835e.  `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` := v0 @kind object;
  #L318362.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L318366.  v0:= constclass @type ^`kotlinx.coroutines.internal.e0` @kind object;
  #L31836a.  call temp:= `getCanonicalName`(v0) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L318370.  v0:= temp @kind object;
  #L318372.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L318378.  v0:= temp @kind object;
  #L31837a.  goto L318392;
  #L31837c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31837e.  v1:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L318382.  call temp:= `a`(v0) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L318388.  v0:= temp @kind object;
  #L31838a.  call temp:= `constructor-impl`(v0) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L318390.  v0:= temp @kind object;
  #L318392.  call temp:= `exceptionOrNull-impl`(v0) @signature `Lod/n;.exceptionOrNull-impl:(Ljava/lang/Object;)Ljava/lang/Throwable;` @kind static;
  #L318398.  v1:= temp @kind object;
  #L31839a.  if v1 != 0 then goto L3183a0;
  #L31839e.  goto L3183a4;
  #L3183a0.  v0:= "kotlinx.coroutines.internal.StackTraceRecoveryKt" @kind object;
  #L3183a4.  v0:= (`java.lang.String`) v0 @kind object;
  #L3183a8.  `@@kotlinx.coroutines.internal.e0.b` @type ^`java.lang.String` := v0 @kind object;
  #L3183ac.  return @kind void;
  catch `java.lang.Throwable` @[L318310..L318330] goto L318332;
  catch `java.lang.Throwable` @[L318362..L31837a] goto L31837c;
}
procedure `java.lang.Throwable` `a`(`java.lang.Throwable` v0 @kind object, `kotlin.coroutines.jvm.internal.e` v1 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.a:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L317f80.  call temp:= `j`(v0, v1) @signature `Lkotlinx/coroutines/internal/e0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @kind static;
  #L317f86.  v0:= temp @kind object;
  #L317f88.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `b`(`java.lang.String` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L317f3c.  v0:= new `java.lang.StackTraceElement`;
  #L317f40.  v1:= new `java.lang.StringBuilder`;
  #L317f44.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L317f4a.  v2:= "\b\b\b(" @kind object;
  #L317f4e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L317f54.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L317f5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L317f60.  v3:= temp @kind object;
  #L317f62.  v1:= "\b" @kind object;
  #L317f66.  v2:= -1I;
  #L317f68.  call `<init>`(v0, v3, v1, v1, v2) @signature `Ljava/lang/StackTraceElement;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;I)V` @kind direct;
  #L317f6e.  return v0 @kind object;
}
procedure `od.m` `c`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.c:(Ljava/lang/Throwable;)Lod/m;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L318280.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L318286.  v0:= temp @kind object;
  #L318288.  v1:= 0I;
  #L31828a.  if v0 == 0 then goto L3182f2;
  #L31828e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L318294.  v2:= temp @kind object;
  #L318296.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L31829c.  v3:= temp @kind object;
  #L31829e.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3182a4.  v2:= temp;
  #L3182a6.  if v2 == 0 then goto L3182f2;
  #L3182aa.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3182b0.  v2:= temp @kind object;
  #L3182b2.  v3:= length @variable v2;
  #L3182b4.  v4:= 0I;
  #L3182b6.  if v4 >= v3 then goto L3182d4;
  #L3182ba.  v5:= v2[v4] @kind object;
  #L3182be.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3182c4.  v5:= temp;
  #L3182c6.  if v5 == 0 then goto L3182ce;
  #L3182ca.  v3:= 1I;
  #L3182cc.  goto L3182d6;
  #L3182ce.  v4:= v4 + 1;
  #L3182d2.  goto L3182b6;
  #L3182d4.  v3:= 0I;
  #L3182d6.  if v3 == 0 then goto L3182e4;
  #L3182da.  call temp:= `a`(v0, v2) @signature `Lod/q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lod/m;` @kind static;
  #L3182e0.  v6:= temp @kind object;
  #L3182e2.  goto L3182fe;
  #L3182e4.  v0:= new `java.lang.StackTraceElement`[v1];
  #L3182e8.  call temp:= `a`(v6, v0) @signature `Lod/q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lod/m;` @kind static;
  #L3182ee.  v6:= temp @kind object;
  #L3182f0.  goto L3182fe;
  #L3182f2.  v0:= new `java.lang.StackTraceElement`[v1];
  #L3182f6.  call temp:= `a`(v6, v0) @signature `Lod/q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lod/m;` @kind static;
  #L3182fc.  v6:= temp @kind object;
  #L3182fe.  return v6 @kind object;
}
procedure `java.lang.Throwable` `d`(`java.lang.Throwable` v5 @kind object, `java.lang.Throwable` v6 @kind object, `java.util.ArrayDeque` v7 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L317f9c.  v0:= "Coroutine boundary" @kind object;
  #L317fa0.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L317fa6.  v0:= temp @kind object;
  #L317fa8.  call `addFirst`(v7, v0) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L317fae.  call temp:= `getStackTrace`(v5) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L317fb4.  v5:= temp @kind object;
  #L317fb6.  v0:= `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` @kind object;
  #L317fba.  call temp:= `g`(v5, v0) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L317fc0.  v0:= temp;
  #L317fc2.  v1:= 0I;
  #L317fc4.  v2:= -1I;
  #L317fc6.  if v0 != v2 then goto L317fec;
  #L317fca.  v5:= new `java.lang.StackTraceElement`[v1];
  #L317fce.  call temp:= `toArray`(v7, v5) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L317fd4.  v5:= temp @kind object;
  #L317fd6.  v7:= "null cannot be cast to non-null type kotlin.Array<T of kotlin.collections.ArraysKt__ArraysJVMKt.toTypedArray>" @kind object;
  #L317fda.  call temp:= `requireNonNull`(v5, v7) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L317fe0.  v5:= (`java.lang.StackTraceElement`[]) v5 @kind object;
  #L317fe4.  call `setStackTrace`(v6, v5) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L317fea.  return v6 @kind object;
  #L317fec.  call temp:= `size`(v7) @signature `Ljava/util/ArrayDeque;.size:()I` @kind virtual;
  #L317ff2.  v2:= temp;
  #L317ff4.  v2:= v2 + v0 @kind int;
  #L317ff6.  v2:= new `java.lang.StackTraceElement`[v2];
  #L317ffa.  v3:= 0I;
  #L317ffc.  if v3 >= v0 then goto L31800e;
  #L318000.  v4:= v5[v3] @kind object;
  #L318004.  v2[v3]:= v4 @kind object;
  #L318008.  v3:= v3 + 1;
  #L31800c.  goto L317ffc;
  #L31800e.  call temp:= `iterator`(v7) @signature `Ljava/util/ArrayDeque;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L318014.  v5:= temp @kind object;
  #L318016.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31801c.  v7:= temp;
  #L31801e.  if v7 == 0 then goto L31803c;
  #L318022.  v7:= v1 + 1;
  #L318026.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31802c.  v3:= temp @kind object;
  #L31802e.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L318032.  v1:= v1 + v0 @kind int;
  #L318034.  v2[v1]:= v3 @kind object;
  #L318038.  v1:= v7;
  #L31803a.  goto L318016;
  #L31803c.  call `setStackTrace`(v6, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L318042.  return v6 @kind object;
}
procedure `java.util.ArrayDeque` `e`(`kotlin.coroutines.jvm.internal.e` v2 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.e:(Lkotlin/coroutines/jvm/internal/e;)Ljava/util/ArrayDeque;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L318230.  v0:= new `java.util.ArrayDeque`;
  #L318234.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L31823a.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L318240.  v1:= temp @kind object;
  #L318242.  if v1 == 0 then goto L31824c;
  #L318246.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L31824c.  call temp:= `getCallerFrame`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @kind interface;
  #L318252.  v2:= temp @kind object;
  #L318254.  if v2 != 0 then goto L31825a;
  #L318258.  return v0 @kind object;
  #L31825a.  call temp:= `getStackTraceElement`(v2) @signature `Lkotlin/coroutines/jvm/internal/e;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @kind interface;
  #L318260.  v1:= temp @kind object;
  #L318262.  if v1 == 0 then goto L31824c;
  #L318266.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L31826c.  goto L31824c;
}
procedure `boolean` `f`(`java.lang.StackTraceElement` v2 @kind object, `java.lang.StackTraceElement` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L317e54.  call temp:= `getLineNumber`(v2) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L317e5a.  v0:= temp;
  #L317e5c.  call temp:= `getLineNumber`(v3) @signature `Ljava/lang/StackTraceElement;.getLineNumber:()I` @kind virtual;
  #L317e62.  v1:= temp;
  #L317e64.  if v0 != v1 then goto L317ec0;
  #L317e68.  call temp:= `getMethodName`(v2) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L317e6e.  v0:= temp @kind object;
  #L317e70.  call temp:= `getMethodName`(v3) @signature `Ljava/lang/StackTraceElement;.getMethodName:()Ljava/lang/String;` @kind virtual;
  #L317e76.  v1:= temp @kind object;
  #L317e78.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L317e7e.  v0:= temp;
  #L317e80.  if v0 == 0 then goto L317ec0;
  #L317e84.  call temp:= `getFileName`(v2) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L317e8a.  v0:= temp @kind object;
  #L317e8c.  call temp:= `getFileName`(v3) @signature `Ljava/lang/StackTraceElement;.getFileName:()Ljava/lang/String;` @kind virtual;
  #L317e92.  v1:= temp @kind object;
  #L317e94.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L317e9a.  v0:= temp;
  #L317e9c.  if v0 == 0 then goto L317ec0;
  #L317ea0.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L317ea6.  v2:= temp @kind object;
  #L317ea8.  call temp:= `getClassName`(v3) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L317eae.  v3:= temp @kind object;
  #L317eb0.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L317eb6.  v2:= temp;
  #L317eb8.  if v2 == 0 then goto L317ec0;
  #L317ebc.  v2:= 1I;
  #L317ebe.  goto L317ec2;
  #L317ec0.  v2:= 0I;
  #L317ec2.  return v2;
}
procedure `int` `g`(`java.lang.StackTraceElement`[] v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L317f00.  v0:= length @variable v3;
  #L317f02.  v1:= 0I;
  #L317f04.  if v1 >= v0 then goto L317f28;
  #L317f08.  v2:= v3[v1] @kind object;
  #L317f0c.  call temp:= `getClassName`(v2) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L317f12.  v2:= temp @kind object;
  #L317f14.  call temp:= `a`(v4, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L317f1a.  v2:= temp;
  #L317f1c.  if v2 == 0 then goto L317f22;
  #L317f20.  goto L317f2a;
  #L317f22.  v1:= v1 + 1;
  #L317f26.  goto L317f04;
  #L317f28.  v1:= -1I;
  #L317f2a.  return v1;
}
procedure `boolean` `h`(`java.lang.StackTraceElement` v4 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L317ed4.  call temp:= `getClassName`(v4) @signature `Ljava/lang/StackTraceElement;.getClassName:()Ljava/lang/String;` @kind virtual;
  #L317eda.  v4:= temp @kind object;
  #L317edc.  v0:= "\b\b\b" @kind object;
  #L317ee0.  v1:= 0I;
  #L317ee2.  v2:= 2I;
  #L317ee4.  v3:= 0I;
  #L317ee6.  call temp:= `m`(v4, v0, v1, v2, v3) @signature `Lkotlin/text/d;.m:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/Object;)Z` @kind static;
  #L317eec.  v4:= temp;
  #L317eee.  return v4;
}
procedure `void` `i`(`java.lang.StackTraceElement`[] v4 @kind object, `java.util.ArrayDeque` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3183d8.  v0:= length @variable v4;
  #L3183da.  v1:= 0I;
  #L3183dc.  if v1 >= v0 then goto L3183f8;
  #L3183e0.  v2:= v4[v1] @kind object;
  #L3183e4.  call temp:= `h`(v2) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L3183ea.  v2:= temp;
  #L3183ec.  if v2 == 0 then goto L3183f2;
  #L3183f0.  goto L3183fa;
  #L3183f2.  v1:= v1 + 1;
  #L3183f6.  goto L3183dc;
  #L3183f8.  v1:= -1I;
  #L3183fa.  v1:= v1 + 1;
  #L3183fe.  v0:= length @variable v4;
  #L318400.  v0:= v0 + -1;
  #L318404.  if v1 > v0 then goto L31843e;
  #L318408.  v2:= v4[v0] @kind object;
  #L31840c.  call temp:= `getLast`(v5) @signature `Ljava/util/ArrayDeque;.getLast:()Ljava/lang/Object;` @kind virtual;
  #L318412.  v3:= temp @kind object;
  #L318414.  v3:= (`java.lang.StackTraceElement`) v3 @kind object;
  #L318418.  call temp:= `f`(v2, v3) @signature `Lkotlinx/coroutines/internal/e0;.f:(Ljava/lang/StackTraceElement;Ljava/lang/StackTraceElement;)Z` @kind static;
  #L31841e.  v2:= temp;
  #L318420.  if v2 == 0 then goto L31842a;
  #L318424.  call temp:= `removeLast`(v5) @signature `Ljava/util/ArrayDeque;.removeLast:()Ljava/lang/Object;` @kind virtual;
  #L31842a.  v2:= v4[v0] @kind object;
  #L31842e.  call `addFirst`(v5, v2) @signature `Ljava/util/ArrayDeque;.addFirst:(Ljava/lang/Object;)V` @kind virtual;
  #L318434.  if v0 == v1 then goto L31843e;
  #L318438.  v0:= v0 + -1;
  #L31843c.  goto L318408;
  #L31843e.  return @kind void;
}
procedure `java.lang.Throwable` `j`(`java.lang.Throwable` v4 @kind object, `kotlin.coroutines.jvm.internal.e` v5 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.j:(Ljava/lang/Throwable;Lkotlin/coroutines/jvm/internal/e;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L318054.  call temp:= `c`(v4) @signature `Lkotlinx/coroutines/internal/e0;.c:(Ljava/lang/Throwable;)Lod/m;` @kind static;
  #L31805a.  v0:= temp @kind object;
  #L31805c.  call temp:= `component1`(v0) @signature `Lod/m;.component1:()Ljava/lang/Object;` @kind virtual;
  #L318062.  v1:= temp @kind object;
  #L318064.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L318068.  call temp:= `component2`(v0) @signature `Lod/m;.component2:()Ljava/lang/Object;` @kind virtual;
  #L31806e.  v0:= temp @kind object;
  #L318070.  v0:= (`java.lang.StackTraceElement`[]) v0 @kind object;
  #L318074.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L31807a.  v2:= temp @kind object;
  #L31807c.  if v2 != 0 then goto L318082;
  #L318080.  return v4 @kind object;
  #L318082.  call temp:= `e`(v5) @signature `Lkotlinx/coroutines/internal/e0;.e:(Lkotlin/coroutines/jvm/internal/e;)Ljava/util/ArrayDeque;` @kind static;
  #L318088.  v5:= temp @kind object;
  #L31808a.  call temp:= `isEmpty`(v5) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L318090.  v3:= temp;
  #L318092.  if v3 == 0 then goto L318098;
  #L318096.  return v4 @kind object;
  #L318098.  if v1 == v4 then goto L3180a2;
  #L31809c.  call `i`(v0, v5) @signature `Lkotlinx/coroutines/internal/e0;.i:([Ljava/lang/StackTraceElement;Ljava/util/ArrayDeque;)V` @kind static;
  #L3180a2.  call temp:= `d`(v1, v2, v5) @signature `Lkotlinx/coroutines/internal/e0;.d:(Ljava/lang/Throwable;Ljava/lang/Throwable;Ljava/util/ArrayDeque;)Ljava/lang/Throwable;` @kind static;
  #L3180a8.  v4:= temp @kind object;
  #L3180aa.  return v4 @kind object;
}
procedure `java.lang.Throwable` `k`(`java.lang.Throwable` v1 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.k:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3180bc.  call temp:= `d`() @signature `Lkotlinx/coroutines/q0;.d:()Z` @kind static;
  #L3180c2.  v0:= temp;
  #L3180c4.  if v0 != 0 then goto L3180ca;
  #L3180c8.  return v1 @kind object;
  #L3180ca.  call temp:= `m`(v1) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3180d0.  v0:= temp @kind object;
  #L3180d2.  if v0 != 0 then goto L3180d8;
  #L3180d6.  return v1 @kind object;
  #L3180d8.  call temp:= `l`(v0) @signature `Lkotlinx/coroutines/internal/e0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L3180de.  v1:= temp @kind object;
  #L3180e0.  return v1 @kind object;
}
procedure `java.lang.Throwable` `l`(`java.lang.Throwable` v7 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.l:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3180f4.  call temp:= `getStackTrace`(v7) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3180fa.  v0:= temp @kind object;
  #L3180fc.  v1:= length @variable v0;
  #L3180fe.  v2:= `@@kotlinx.coroutines.internal.e0.b` @type ^`java.lang.String` @kind object;
  #L318102.  call temp:= `g`(v0, v2) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L318108.  v2:= temp;
  #L31810a.  v3:= v2 + 1;
  #L31810e.  v4:= `@@kotlinx.coroutines.internal.e0.a` @type ^`java.lang.String` @kind object;
  #L318112.  call temp:= `g`(v0, v4) @signature `Lkotlinx/coroutines/internal/e0;.g:([Ljava/lang/StackTraceElement;Ljava/lang/String;)I` @kind static;
  #L318118.  v4:= temp;
  #L31811a.  v5:= 0I;
  #L31811c.  v6:= -1I;
  #L31811e.  if v4 != v6 then goto L318126;
  #L318122.  v4:= 0I;
  #L318124.  goto L31812a;
  #L318126.  v4:= v1 - v4 @kind int;
  #L31812a.  v1:= v1 - v2 @kind int;
  #L31812c.  v1:= v1 - v4 @kind int;
  #L31812e.  v2:= new `java.lang.StackTraceElement`[v1];
  #L318132.  if v5 >= v1 then goto L31815e;
  #L318136.  if v5 != 0 then goto L318148;
  #L31813a.  v4:= "Coroutine boundary" @kind object;
  #L31813e.  call temp:= `b`(v4) @signature `Lkotlinx/coroutines/internal/e0;.b:(Ljava/lang/String;)Ljava/lang/StackTraceElement;` @kind static;
  #L318144.  v4:= temp @kind object;
  #L318146.  goto L318154;
  #L318148.  v4:= v3 + v5 @kind int;
  #L31814c.  v4:= v4 + -1;
  #L318150.  v4:= v0[v4] @kind object;
  #L318154.  v2[v5]:= v4 @kind object;
  #L318158.  v5:= v5 + 1;
  #L31815c.  goto L318132;
  #L31815e.  call `setStackTrace`(v7, v2) @signature `Ljava/lang/Throwable;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L318164.  return v7 @kind object;
}
procedure `java.lang.Throwable` `m`(`java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.m:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L318178.  call temp:= `g`(v3) @signature `Lkotlinx/coroutines/internal/j;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L31817e.  v0:= temp @kind object;
  #L318180.  v1:= 0I;
  #L318182.  if v0 != 0 then goto L318188;
  #L318186.  return v1 @kind object;
  #L318188.  v2:= instanceof @variable v3 @type ^`kotlinx.coroutines.c0` @kind boolean;
  #L31818c.  if v2 != 0 then goto L3181ae;
  #L318190.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L318196.  v2:= temp @kind object;
  #L318198.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Throwable;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L31819e.  v3:= temp @kind object;
  #L3181a0.  call temp:= `a`(v2, v3) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3181a6.  v3:= temp;
  #L3181a8.  if v3 != 0 then goto L3181ae;
  #L3181ac.  return v1 @kind object;
  #L3181ae.  return v0 @kind object;
}
procedure `java.lang.Throwable` `n`(`java.lang.Throwable` v6 @kind object) @signature `Lkotlinx/coroutines/internal/e0;.n:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3181c0.  call temp:= `getCause`(v6) @signature `Ljava/lang/Throwable;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L3181c6.  v0:= temp @kind object;
  #L3181c8.  if v0 == 0 then goto L31821c;
  #L3181cc.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3181d2.  v1:= temp @kind object;
  #L3181d4.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3181da.  v2:= temp @kind object;
  #L3181dc.  call temp:= `a`(v1, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3181e2.  v1:= temp;
  #L3181e4.  if v1 != 0 then goto L3181ea;
  #L3181e8.  goto L31821c;
  #L3181ea.  call temp:= `getStackTrace`(v6) @signature `Ljava/lang/Throwable;.getStackTrace:()[Ljava/lang/StackTraceElement;` @kind virtual;
  #L3181f0.  v1:= temp @kind object;
  #L3181f2.  v2:= length @variable v1;
  #L3181f4.  v3:= 0I;
  #L3181f6.  v4:= 0I;
  #L3181f8.  if v4 >= v2 then goto L318216;
  #L3181fc.  v5:= v1[v4] @kind object;
  #L318200.  call temp:= `h`(v5) @signature `Lkotlinx/coroutines/internal/e0;.h:(Ljava/lang/StackTraceElement;)Z` @kind static;
  #L318206.  v5:= temp;
  #L318208.  if v5 == 0 then goto L318210;
  #L31820c.  v3:= 1I;
  #L31820e.  goto L318216;
  #L318210.  v4:= v4 + 1;
  #L318214.  goto L3181f8;
  #L318216.  if v3 == 0 then goto L31821c;
  #L31821a.  return v0 @kind object;
  #L31821c.  return v6 @kind object;
}
