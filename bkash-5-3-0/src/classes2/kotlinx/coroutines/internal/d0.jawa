record `kotlinx.coroutines.internal.d0` @kind class @AccessFlag PUBLIC extends `kotlinx.coroutines.a` @kind class, `kotlin.coroutines.jvm.internal.e` @kind interface {
  `kotlin.coroutines.d` `kotlinx.coroutines.internal.d0.i` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `A0`(`kotlinx.coroutines.internal.d0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/internal/d0;.A0:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L317e30.  v0:= v1.`kotlinx.coroutines.internal.d0.i` @type ^`kotlin.coroutines.d` @kind object;
  #L317e34.  call temp:= `a`(v2, v0) @signature `Lkotlinx/coroutines/a0;.a:(Ljava/lang/Object;Lkotlin/coroutines/d;)Ljava/lang/Object;` @kind static;
  #L317e3a.  v2:= temp @kind object;
  #L317e3c.  call `resumeWith`(v0, v2) @signature `Lkotlin/coroutines/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L317e42.  return @kind void;
}
procedure `kotlinx.coroutines.w1` `E0`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.E0:()Lkotlinx/coroutines/w1;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L317dd0.  call temp:= `O`(v1) @signature `Lkotlinx/coroutines/e2;.O:()Lkotlinx/coroutines/r;` @kind virtual;
  #L317dd6.  v0:= temp @kind object;
  #L317dd8.  if v0 == 0 then goto L317de6;
  #L317ddc.  call temp:= `getParent`(v0) @signature `Lkotlinx/coroutines/r;.getParent:()Lkotlinx/coroutines/w1;` @kind interface;
  #L317de2.  v0:= temp @kind object;
  #L317de4.  goto L317de8;
  #L317de6.  v0:= 0I;
  #L317de8.  return v0 @kind object;
}
procedure `boolean` `W`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.W:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L317d80.  v0:= 1I;
  #L317d82.  return v0;
}
procedure `kotlin.coroutines.jvm.internal.e` `getCallerFrame`(`kotlinx.coroutines.internal.d0` v2 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L317da8.  v0:= v2.`kotlinx.coroutines.internal.d0.i` @type ^`kotlin.coroutines.d` @kind object;
  #L317dac.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L317db0.  if v1 == 0 then goto L317dba;
  #L317db4.  v0:= (`kotlin.coroutines.jvm.internal.e`) v0 @kind object;
  #L317db8.  goto L317dbc;
  #L317dba.  v0:= 0I;
  #L317dbc.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.d0` v1 @kind this) @signature `Lkotlinx/coroutines/internal/d0;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L317d94.  v0:= 0I;
  #L317d96.  return v0 @kind object;
}
procedure `void` `p`(`kotlinx.coroutines.internal.d0` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lkotlinx/coroutines/internal/d0;.p:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L317dfc.  v0:= v3.`kotlinx.coroutines.internal.d0.i` @type ^`kotlin.coroutines.d` @kind object;
  #L317e00.  call temp:= `c`(v0) @signature `Lkotlin/coroutines/intrinsics/b;.c:(Lkotlin/coroutines/d;)Lkotlin/coroutines/d;` @kind static;
  #L317e06.  v0:= temp @kind object;
  #L317e08.  v1:= v3.`kotlinx.coroutines.internal.d0.i` @type ^`kotlin.coroutines.d` @kind object;
  #L317e0c.  call temp:= `a`(v4, v1) @signature `Lkotlinx/coroutines/a0;.a:(Ljava/lang/Object;Lkotlin/coroutines/d;)Ljava/lang/Object;` @kind static;
  #L317e12.  v4:= temp @kind object;
  #L317e14.  v1:= 0I;
  #L317e16.  v2:= 2I;
  #L317e18.  call `c`(v0, v4, v1, v2, v1) @signature `Lkotlinx/coroutines/internal/i;.c:(Lkotlin/coroutines/d;Ljava/lang/Object;Lwd/l;ILjava/lang/Object;)V` @kind static;
  #L317e1e.  return @kind void;
}
