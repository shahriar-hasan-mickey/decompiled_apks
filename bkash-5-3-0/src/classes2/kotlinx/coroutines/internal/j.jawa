record `kotlinx.coroutines.internal.j` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@kotlinx.coroutines.internal.j.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `kotlinx.coroutines.internal.g` `@@kotlinx.coroutines.internal.j.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L315d2c.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L315d30.  v1:= -1I;
  #L315d32.  call temp:= `f`(v0, v1) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @kind static;
  #L315d38.  v0:= temp;
  #L315d3a.  `@@kotlinx.coroutines.internal.j.a` @type ^`int` := v0;
  #L315d3e.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/l;.a:()Z` @kind static;
  #L315d44.  v0:= temp;
  #L315d46.  if v0 == 0 then goto L315d50;
  #L315d4a.  v0:= `@@kotlinx.coroutines.internal.o0.a` @type ^`kotlinx.coroutines.internal.o0` @kind object;
  #L315d4e.  goto L315d5a;
  #L315d50.  v0:= `@@kotlinx.coroutines.internal.d.a` @type ^`kotlinx.coroutines.internal.d` @kind object;
  #L315d54.  goto L315d5a;
  #L315d56.  v0:= `@@kotlinx.coroutines.internal.o0.a` @type ^`kotlinx.coroutines.internal.o0` @kind object;
  #L315d5a.  `@@kotlinx.coroutines.internal.j.b` @type ^`kotlinx.coroutines.internal.g` := v0 @kind object;
  #L315d5e.  return @kind void;
  catch `java.lang.Throwable` @[L315d3e..L315d54] goto L315d56;
}
procedure `wd.l` `a`(`java.lang.Class` v0 @kind object) @signature `Lkotlinx/coroutines/internal/j;.a:(Ljava/lang/Class;)Lwd/l;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;

  #L315d7c.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/internal/j;.b:(Ljava/lang/Class;)Lwd/l;` @kind static;
  #L315d82.  v0:= temp @kind object;
  #L315d84.  return v0 @kind object;
}
procedure `wd.l` `b`(`java.lang.Class` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.b:(Ljava/lang/Class;)Lwd/l;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L315d98.  v0:= `@@kotlinx.coroutines.internal.j$b.INSTANCE` @type ^`kotlinx.coroutines.internal.j$b` @kind object;
  #L315d9c.  v1:= `@@kotlinx.coroutines.internal.j.a` @type ^`int`;
  #L315da0.  v2:= 0I;
  #L315da2.  call temp:= `f`(v3, v2) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @kind static;
  #L315da8.  v2:= temp;
  #L315daa.  if v1 == v2 then goto L315db0;
  #L315dae.  return v0 @kind object;
  #L315db0.  call temp:= `getConstructors`(v3) @signature `Ljava/lang/Class;.getConstructors:()[Ljava/lang/reflect/Constructor;` @kind virtual;
  #L315db6.  v3:= temp @kind object;
  #L315db8.  v1:= new `kotlinx.coroutines.internal.j$a`;
  #L315dbc.  call `<init>`(v1) @signature `Lkotlinx/coroutines/internal/j$a;.<init>:()V` @kind direct;
  #L315dc2.  call temp:= `n`(v3, v1) @signature `Lpd/b;.n:([Ljava/lang/Object;Ljava/util/Comparator;)Ljava/util/List;` @kind static;
  #L315dc8.  v3:= temp @kind object;
  #L315dca.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L315dd0.  v3:= temp @kind object;
  #L315dd2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L315dd8.  v1:= temp;
  #L315dda.  if v1 == 0 then goto L315df8;
  #L315dde.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L315de4.  v1:= temp @kind object;
  #L315de6.  v1:= (`java.lang.reflect.Constructor`) v1 @kind object;
  #L315dea.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/internal/j;.c:(Ljava/lang/reflect/Constructor;)Lwd/l;` @kind static;
  #L315df0.  v1:= temp @kind object;
  #L315df2.  if v1 == 0 then goto L315dd2;
  #L315df6.  return v1 @kind object;
  #L315df8.  return v0 @kind object;
}
procedure `wd.l` `c`(`java.lang.reflect.Constructor` v7 @kind object) @signature `Lkotlinx/coroutines/internal/j;.c:(Ljava/lang/reflect/Constructor;)Lwd/l;` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L315e0c.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L315e10.  call temp:= `getParameterTypes`(v7) @signature `Ljava/lang/reflect/Constructor;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L315e16.  v1:= temp @kind object;
  #L315e18.  v2:= length @variable v1;
  #L315e1a.  v3:= 0I;
  #L315e1c.  if v2 == 0 then goto L315e98;
  #L315e20.  v4:= 0I;
  #L315e22.  v5:= 1I;
  #L315e24.  if v2 == v5 then goto L315e60;
  #L315e28.  v6:= 2I;
  #L315e2a.  if v2 == v6 then goto L315e30;
  #L315e2e.  goto L315ea2;
  #L315e30.  v2:= v1[v4] @kind object;
  #L315e34.  call temp:= `a`(v2, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L315e3a.  v0:= temp;
  #L315e3c.  if v0 == 0 then goto L315ea2;
  #L315e40.  v0:= v1[v5] @kind object;
  #L315e44.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L315e48.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L315e4e.  v0:= temp;
  #L315e50.  if v0 == 0 then goto L315ea2;
  #L315e54.  v3:= new `kotlinx.coroutines.internal.j$c`;
  #L315e58.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$c;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L315e5e.  goto L315ea2;
  #L315e60.  v1:= v1[v4] @kind object;
  #L315e64.  v2:= constclass @type ^`java.lang.Throwable` @kind object;
  #L315e68.  call temp:= `a`(v1, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L315e6e.  v2:= temp;
  #L315e70.  if v2 == 0 then goto L315e80;
  #L315e74.  v3:= new `kotlinx.coroutines.internal.j$d`;
  #L315e78.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$d;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L315e7e.  goto L315ea2;
  #L315e80.  call temp:= `a`(v1, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L315e86.  v0:= temp;
  #L315e88.  if v0 == 0 then goto L315ea2;
  #L315e8c.  v3:= new `kotlinx.coroutines.internal.j$e`;
  #L315e90.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$e;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L315e96.  goto L315ea2;
  #L315e98.  v3:= new `kotlinx.coroutines.internal.j$f`;
  #L315e9c.  call `<init>`(v3, v7) @signature `Lkotlinx/coroutines/internal/j$f;.<init>:(Ljava/lang/reflect/Constructor;)V` @kind direct;
  #L315ea2.  return v3 @kind object;
}
procedure `int` `d`(`java.lang.Class` v5 @kind object, `int` v6 ) @signature `Lkotlinx/coroutines/internal/j;.d:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L315bc8.  call temp:= `getDeclaredFields`(v5) @signature `Ljava/lang/Class;.getDeclaredFields:()[Ljava/lang/reflect/Field;` @kind virtual;
  #L315bce.  v0:= temp @kind object;
  #L315bd0.  v1:= length @variable v0;
  #L315bd2.  v2:= 0I;
  #L315bd4.  v3:= 0I;
  #L315bd6.  if v2 >= v1 then goto L315c00;
  #L315bda.  v4:= v0[v2] @kind object;
  #L315bde.  call temp:= `getModifiers`(v4) @signature `Ljava/lang/reflect/Field;.getModifiers:()I` @kind virtual;
  #L315be4.  v4:= temp;
  #L315be6.  call temp:= `isStatic`(v4) @signature `Ljava/lang/reflect/Modifier;.isStatic:(I)Z` @kind static;
  #L315bec.  v4:= temp;
  #L315bee.  v4:= v4 ^~ 1;
  #L315bf2.  if v4 == 0 then goto L315bfa;
  #L315bf6.  v3:= v3 + 1;
  #L315bfa.  v2:= v2 + 1;
  #L315bfe.  goto L315bd6;
  #L315c00.  v6:= v6 + v3 @kind int;
  #L315c02.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L315c08.  v5:= temp @kind object;
  #L315c0a.  if v5 != 0 then goto L315bc8;
  #L315c0e.  return v6;
}
procedure `int` `e`(`java.lang.Class` v0 @kind object, `int` v1 , `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/internal/j;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L315ba4.  v2:= v2 ^& 1;
  #L315ba8.  if v2 == 0 then goto L315bae;
  #L315bac.  v1:= 0I;
  #L315bae.  call temp:= `d`(v0, v1) @signature `Lkotlinx/coroutines/internal/j;.d:(Ljava/lang/Class;I)I` @kind static;
  #L315bb4.  v0:= temp;
  #L315bb6.  return v0;
}
procedure `int` `f`(`java.lang.Class` v3 @kind object, `int` v4 ) @signature `Lkotlinx/coroutines/internal/j;.f:(Ljava/lang/Class;I)I` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L315c20.  call temp:= `c`(v3) @signature `Lvd/a;.c:(Ljava/lang/Class;)Lzd/c;` @kind static;
  #L315c26.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315c2a.  v0:= 0I;
  #L315c2c.  v1:= 1I;
  #L315c2e.  v2:= 0I;
  #L315c30.  call temp:= `e`(v3, v0, v1, v2) @signature `Lkotlinx/coroutines/internal/j;.e:(Ljava/lang/Class;IILjava/lang/Object;)I` @kind static;
  #L315c36.  v3:= temp;
  #L315c38.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L315c3e.  v3:= temp @kind object;
  #L315c40.  call temp:= `constructor-impl`(v3) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315c46.  v3:= temp @kind object;
  #L315c48.  goto L315c60;
  #L315c4a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315c4c.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315c50.  call temp:= `a`(v3) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L315c56.  v3:= temp @kind object;
  #L315c58.  call temp:= `constructor-impl`(v3) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315c5e.  v3:= temp @kind object;
  #L315c60.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L315c66.  v4:= temp @kind object;
  #L315c68.  call temp:= `isFailure-impl`(v3) @signature `Lod/n;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L315c6e.  v0:= temp;
  #L315c70.  if v0 == 0 then goto L315c76;
  #L315c74.  v3:= v4 @kind object;
  #L315c76.  v3:= (`java.lang.Number`) v3 @kind object;
  #L315c7a.  call temp:= `intValue`(v3) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L315c80.  v3:= temp;
  #L315c82.  return v3;
  catch `java.lang.Throwable` @[L315c26..L315c48] goto L315c4a;
}
procedure `java.lang.Throwable` `g`(`java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/internal/j;.g:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L315ca0.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.c0` @kind boolean;
  #L315ca4.  if v0 == 0 then goto L315cec;
  #L315ca8.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315cac.  v2:= (`kotlinx.coroutines.c0`) v2 @kind object;
  #L315cb0.  call temp:= `createCopy`(v2) @signature `Lkotlinx/coroutines/c0;.createCopy:()Ljava/lang/Throwable;` @kind interface;
  #L315cb6.  v2:= temp @kind object;
  #L315cb8.  call temp:= `constructor-impl`(v2) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315cbe.  v2:= temp @kind object;
  #L315cc0.  goto L315cd8;
  #L315cc2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315cc4.  v0:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L315cc8.  call temp:= `a`(v2) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L315cce.  v2:= temp @kind object;
  #L315cd0.  call temp:= `constructor-impl`(v2) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315cd6.  v2:= temp @kind object;
  #L315cd8.  call temp:= `isFailure-impl`(v2) @signature `Lod/n;.isFailure-impl:(Ljava/lang/Object;)Z` @kind static;
  #L315cde.  v0:= temp;
  #L315ce0.  if v0 == 0 then goto L315ce6;
  #L315ce4.  v2:= 0I;
  #L315ce6.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L315cea.  return v2 @kind object;
  #L315cec.  v0:= `@@kotlinx.coroutines.internal.j.b` @type ^`kotlinx.coroutines.internal.g` @kind object;
  #L315cf0.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L315cf6.  v1:= temp @kind object;
  #L315cf8.  call temp:= `a`(v0, v1) @signature `Lkotlinx/coroutines/internal/g;.a:(Ljava/lang/Class;)Lwd/l;` @kind virtual;
  #L315cfe.  v0:= temp @kind object;
  #L315d00.  call temp:= `invoke`(v0, v2) @signature `Lwd/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L315d06.  v2:= temp @kind object;
  #L315d08.  v2:= (`java.lang.Throwable`) v2 @kind object;
  #L315d0c.  return v2 @kind object;
  catch `java.lang.Throwable` @[L315ca8..L315cc0] goto L315cc2;
}
