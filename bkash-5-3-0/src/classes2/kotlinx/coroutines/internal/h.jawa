record `kotlinx.coroutines.internal.h` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.a1` @kind class, `kotlin.coroutines.jvm.internal.e` @kind interface, `kotlin.coroutines.d` @kind interface {
  `java.lang.Object` `kotlinx.coroutines.internal.h._reusableCancellableContinuation` @AccessFlag PRIVATE_VOLATILE_SYNTHETIC;
  `kotlinx.coroutines.e0` `kotlinx.coroutines.internal.h.j` @AccessFlag PUBLIC_FINAL;
  `kotlin.coroutines.d` `kotlinx.coroutines.internal.h.k` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `kotlinx.coroutines.internal.h.l` @AccessFlag PUBLIC;
  `java.lang.Object` `kotlinx.coroutines.internal.h.m` @AccessFlag PUBLIC_FINAL;
}
global `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `@@kotlinx.coroutines.internal.h.n` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/internal/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3155b4.  v0:= constclass @type ^`kotlinx.coroutines.internal.h` @kind object;
  #L3155b8.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3155bc.  v2:= "_reusableCancellableContinuation" @kind object;
  #L3155c0.  call temp:= `newUpdater`(v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.newUpdater:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/String;)Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;` @kind static;
  #L3155c6.  v0:= temp @kind object;
  #L3155c8.  `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` := v0 @kind object;
  #L3155cc.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.internal.h` v1 @kind this, `kotlinx.coroutines.e0` v2 @kind object, `kotlin.coroutines.d` v3 @kind object) @signature `Lkotlinx/coroutines/internal/h;.<init>:(Lkotlinx/coroutines/e0;Lkotlin/coroutines/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3155e0.  v0:= -1I;
  #L3155e2.  call `<init>`(v1, v0) @signature `Lkotlinx/coroutines/a1;.<init>:(I)V` @kind direct;
  #L3155e8.  v1.`kotlinx.coroutines.internal.h.j` @type ^`kotlinx.coroutines.e0` := v2 @kind object;
  #L3155ec.  v1.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` := v3 @kind object;
  #L3155f0.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L3155f6.  v2:= temp @kind object;
  #L3155f8.  v1.`kotlinx.coroutines.internal.h.l` @type ^`java.lang.Object` := v2 @kind object;
  #L3155fc.  call temp:= `getContext`(v1) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lkotlin/coroutines/g;` @kind virtual;
  #L315602.  v2:= temp @kind object;
  #L315604.  call temp:= `b`(v2) @signature `Lkotlinx/coroutines/internal/j0;.b:(Lkotlin/coroutines/g;)Ljava/lang/Object;` @kind static;
  #L31560a.  v2:= temp @kind object;
  #L31560c.  v1.`kotlinx.coroutines.internal.h.m` @type ^`java.lang.Object` := v2 @kind object;
  #L315610.  v2:= 0I;
  #L315612.  v1.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` := v2 @kind object;
  #L315616.  return @kind void;
}
procedure `kotlinx.coroutines.m` `p`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.p:()Lkotlinx/coroutines/m;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L31558c.  v0:= v2.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L315590.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L315594.  if v1 == 0 then goto L31559e;
  #L315598.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L31559c.  goto L3155a0;
  #L31559e.  v0:= 0I;
  #L3155a0.  return v0 @kind object;
}
procedure `void` `e`(`kotlinx.coroutines.internal.h` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Throwable` v3 @kind object) @signature `Lkotlinx/coroutines/internal/h;.e:(Ljava/lang/Object;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L315648.  v0:= instanceof @variable v2 @type ^`kotlinx.coroutines.x` @kind boolean;
  #L31564c.  if v0 == 0 then goto L31565e;
  #L315650.  v2:= (`kotlinx.coroutines.x`) v2 @kind object;
  #L315654.  v2:= v2.`kotlinx.coroutines.x.b` @type ^`wd.l` @kind object;
  #L315658.  call temp:= `invoke`(v2, v3) @signature `Lwd/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31565e.  return @kind void;
}
procedure `kotlin.coroutines.d` `g`(`kotlinx.coroutines.internal.h` v0 @kind this) @signature `Lkotlinx/coroutines/internal/h;.g:()Lkotlin/coroutines/d;` @AccessFlag PUBLIC {
    temp;

  #L3154a0.  return v0 @kind object;
}
procedure `kotlin.coroutines.jvm.internal.e` `getCallerFrame`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getCallerFrame:()Lkotlin/coroutines/jvm/internal/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3154d4.  v0:= v2.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` @kind object;
  #L3154d8.  v1:= instanceof @variable v0 @type ^`kotlin.coroutines.jvm.internal.e` @kind boolean;
  #L3154dc.  if v1 == 0 then goto L3154e6;
  #L3154e0.  v0:= (`kotlin.coroutines.jvm.internal.e`) v0 @kind object;
  #L3154e4.  goto L3154e8;
  #L3154e6.  v0:= 0I;
  #L3154e8.  return v0 @kind object;
}
procedure `kotlin.coroutines.g` `getContext`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3154b4.  v0:= v1.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` @kind object;
  #L3154b8.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/d;.getContext:()Lkotlin/coroutines/g;` @kind interface;
  #L3154be.  v0:= temp @kind object;
  #L3154c0.  return v0 @kind object;
}
procedure `java.lang.StackTraceElement` `getStackTraceElement`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.getStackTraceElement:()Ljava/lang/StackTraceElement;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L315390.  v0:= 0I;
  #L315392.  return v0 @kind object;
}
procedure `java.lang.Object` `m`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.m:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31533c.  v0:= v2.`kotlinx.coroutines.internal.h.l` @type ^`java.lang.Object` @kind object;
  #L315340.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L315346.  v1:= temp;
  #L315348.  if v1 == 0 then goto L315370;
  #L31534c.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L315352.  v1:= temp @kind object;
  #L315354.  if v0 == v1 then goto L31535c;
  #L315358.  v1:= 1I;
  #L31535a.  goto L31535e;
  #L31535c.  v1:= 0I;
  #L31535e.  if v1 == 0 then goto L315364;
  #L315362.  goto L315370;
  #L315364.  v0:= new `java.lang.AssertionError`;
  #L315368.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L31536e.  throw v0;
  #L315370.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/i;.a:()Lkotlinx/coroutines/internal/f0;` @kind static;
  #L315376.  v1:= temp @kind object;
  #L315378.  v2.`kotlinx.coroutines.internal.h.l` @type ^`java.lang.Object` := v1 @kind object;
  #L31537c.  return v0 @kind object;
}
procedure `void` `n`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.n:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L315628.  v0:= v2.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L31562c.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L315630.  if v0 == v1 then goto L315628;
  #L315634.  return @kind void;
}
procedure `kotlinx.coroutines.m` `o`(`kotlinx.coroutines.internal.h` v4 @kind this) @signature `Lkotlinx/coroutines/internal/h;.o:()Lkotlinx/coroutines/m;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3154fc.  v0:= v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L315500.  if v0 != 0 then goto L315510;
  #L315504.  v0:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L315508.  v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` := v0 @kind object;
  #L31550c.  v0:= 0I;
  #L31550e.  return v0 @kind object;
  #L315510.  v1:= instanceof @variable v0 @type ^`kotlinx.coroutines.m` @kind boolean;
  #L315514.  if v1 == 0 then goto L315532;
  #L315518.  v1:= `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31551c.  v2:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L315520.  call temp:= `compareAndSet`(v1, v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L315526.  v1:= temp;
  #L315528.  if v1 == 0 then goto L3154fc;
  #L31552c.  v0:= (`kotlinx.coroutines.m`) v0 @kind object;
  #L315530.  return v0 @kind object;
  #L315532.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L315536.  if v0 == v1 then goto L3154fc;
  #L31553a.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L31553e.  if v1 == 0 then goto L315544;
  #L315542.  goto L3154fc;
  #L315544.  v1:= new `java.lang.IllegalStateException`;
  #L315548.  v2:= new `java.lang.StringBuilder`;
  #L31554c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L315552.  v3:= "Inconsistent state " @kind object;
  #L315556.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31555c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L315562.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L315568.  v0:= temp @kind object;
  #L31556a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L315570.  v0:= temp @kind object;
  #L315572.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L315578.  throw v1;
}
procedure `boolean` `q`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.q:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3152c4.  v0:= v1.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3152c8.  if v0 == 0 then goto L3152d0;
  #L3152cc.  v0:= 1I;
  #L3152ce.  goto L3152d2;
  #L3152d0.  v0:= 0I;
  #L3152d2.  return v0;
}
procedure `boolean` `r`(`kotlinx.coroutines.internal.h` v4 @kind this, `java.lang.Throwable` v5 @kind object) @signature `Lkotlinx/coroutines/internal/h;.r:(Ljava/lang/Throwable;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3152e4.  v0:= v4.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L3152e8.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L3152ec.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3152f2.  v2:= temp;
  #L3152f4.  v3:= 1I;
  #L3152f6.  if v2 == 0 then goto L31530c;
  #L3152fa.  v0:= `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L3152fe.  call temp:= `compareAndSet`(v0, v4, v1, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L315304.  v0:= temp;
  #L315306.  if v0 == 0 then goto L3152e4;
  #L31530a.  return v3;
  #L31530c.  v1:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L315310.  if v1 == 0 then goto L315316;
  #L315314.  return v3;
  #L315316.  v1:= `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L31531a.  v2:= 0I;
  #L31531c.  call temp:= `compareAndSet`(v1, v4, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L315322.  v0:= temp;
  #L315324.  if v0 == 0 then goto L3152e4;
  #L315328.  v5:= 0I;
  #L31532a.  return v5;
}
procedure `void` `resumeWith`(`kotlinx.coroutines.internal.h` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlinx/coroutines/internal/h;.resumeWith:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L31569c.  v0:= v6.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` @kind object;
  #L3156a0.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/d;.getContext:()Lkotlin/coroutines/g;` @kind interface;
  #L3156a6.  v0:= temp @kind object;
  #L3156a8.  v1:= 0I;
  #L3156aa.  v2:= 1I;
  #L3156ac.  call temp:= `d`(v7, v1, v2, v1) @signature `Lkotlinx/coroutines/a0;.d:(Ljava/lang/Object;Lwd/l;ILjava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3156b2.  v3:= temp @kind object;
  #L3156b4.  v4:= v6.`kotlinx.coroutines.internal.h.j` @type ^`kotlinx.coroutines.e0` @kind object;
  #L3156b8.  call temp:= `n0`(v4, v0) @signature `Lkotlinx/coroutines/e0;.n0:(Lkotlin/coroutines/g;)Z` @kind virtual;
  #L3156be.  v4:= temp;
  #L3156c0.  v5:= 0I;
  #L3156c2.  if v4 == 0 then goto L3156da;
  #L3156c6.  v6.`kotlinx.coroutines.internal.h.l` @type ^`java.lang.Object` := v3 @kind object;
  #L3156ca.  v6.`kotlinx.coroutines.a1.i` @type ^`int` := v5;
  #L3156ce.  v7:= v6.`kotlinx.coroutines.internal.h.j` @type ^`kotlinx.coroutines.e0` @kind object;
  #L3156d2.  call `l0`(v7, v0, v6) @signature `Lkotlinx/coroutines/e0;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L3156d8.  goto L31575e;
  #L3156da.  call temp:= `a`() @signature `Lkotlinx/coroutines/q0;.a:()Z` @kind static;
  #L3156e0.  v0:= temp;
  #L3156e2.  v0:= `@@kotlinx.coroutines.r2.a` @type ^`kotlinx.coroutines.r2` @kind object;
  #L3156e6.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/r2;.a:()Lkotlinx/coroutines/h1;` @kind virtual;
  #L3156ec.  v0:= temp @kind object;
  #L3156ee.  call temp:= `R0`(v0) @signature `Lkotlinx/coroutines/h1;.R0:()Z` @kind virtual;
  #L3156f4.  v4:= temp;
  #L3156f6.  if v4 == 0 then goto L31570a;
  #L3156fa.  v6.`kotlinx.coroutines.internal.h.l` @type ^`java.lang.Object` := v3 @kind object;
  #L3156fe.  v6.`kotlinx.coroutines.a1.i` @type ^`int` := v5;
  #L315702.  call `B0`(v0, v6) @signature `Lkotlinx/coroutines/h1;.B0:(Lkotlinx/coroutines/a1;)V` @kind virtual;
  #L315708.  goto L31575e;
  #L31570a.  call `O0`(v0, v2) @signature `Lkotlinx/coroutines/h1;.O0:(Z)V` @kind virtual;
  #L315710.  call temp:= `getContext`(v6) @signature `Lkotlinx/coroutines/internal/h;.getContext:()Lkotlin/coroutines/g;` @kind virtual;
  #L315716.  v3:= temp @kind object;
  #L315718.  v4:= v6.`kotlinx.coroutines.internal.h.m` @type ^`java.lang.Object` @kind object;
  #L31571c.  call temp:= `c`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.c:(Lkotlin/coroutines/g;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L315722.  v4:= temp @kind object;
  #L315724.  v5:= v6.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` @kind object;
  #L315728.  call `resumeWith`(v5, v7) @signature `Lkotlin/coroutines/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L31572e.  v7:= `@@od.t.a` @type ^`od.t` @kind object;
  #L315732.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.a:(Lkotlin/coroutines/g;Ljava/lang/Object;)V` @kind static;
  #L315738.  call temp:= `T0`(v0) @signature `Lkotlinx/coroutines/h1;.T0:()Z` @kind virtual;
  #L31573e.  v7:= temp;
  #L315740.  if v7 != 0 then goto L315738;
  #L315744.  goto L315758;
  #L315746.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315748.  call `a`(v3, v4) @signature `Lkotlinx/coroutines/internal/j0;.a:(Lkotlin/coroutines/g;Ljava/lang/Object;)V` @kind static;
  #L31574e.  throw v7;
  #L315750.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315752.  call `l`(v6, v7, v1) @signature `Lkotlinx/coroutines/a1;.l:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @kind virtual;
  #L315758.  call `u0`(v0, v2) @signature `Lkotlinx/coroutines/h1;.u0:(Z)V` @kind virtual;
  #L31575e.  return @kind void;
  #L315760.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L315762.  call `u0`(v0, v2) @signature `Lkotlinx/coroutines/h1;.u0:(Z)V` @kind virtual;
  #L315768.  throw v7;
  catch `java.lang.Throwable` @[L315710..L315724] goto L315750;
  catch `java.lang.Throwable` @[L315724..L315732] goto L315746;
  catch `java.lang.Throwable` @[L315732..L315750] goto L315750;
  catch `java.lang.Throwable` @[L315752..L315758] goto L315760;
}
procedure `void` `s`(`kotlinx.coroutines.internal.h` v1 @kind this) @signature `Lkotlinx/coroutines/internal/h;.s:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L315670.  call `n`(v1) @signature `Lkotlinx/coroutines/internal/h;.n:()V` @kind virtual;
  #L315676.  call temp:= `p`(v1) @signature `Lkotlinx/coroutines/internal/h;.p:()Lkotlinx/coroutines/m;` @kind direct;
  #L31567c.  v0:= temp @kind object;
  #L31567e.  if v0 == 0 then goto L315688;
  #L315682.  call `t`(v0) @signature `Lkotlinx/coroutines/m;.t:()V` @kind virtual;
  #L315688.  return @kind void;
}
procedure `java.lang.Throwable` `t`(`kotlinx.coroutines.internal.h` v3 @kind this, `kotlinx.coroutines.l` v4 @kind object) @signature `Lkotlinx/coroutines/internal/h;.t:(Lkotlinx/coroutines/l;)Ljava/lang/Throwable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L315404.  v0:= v3.`kotlinx.coroutines.internal.h._reusableCancellableContinuation` @type ^`java.lang.Object` @kind object;
  #L315408.  v1:= `@@kotlinx.coroutines.internal.i.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L31540c.  v2:= 0I;
  #L31540e.  if v0 != v1 then goto L315424;
  #L315412.  v0:= `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L315416.  call temp:= `compareAndSet`(v0, v3, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L31541c.  v0:= temp;
  #L31541e.  if v0 == 0 then goto L315404;
  #L315422.  return v2 @kind object;
  #L315424.  v4:= instanceof @variable v0 @type ^`java.lang.Throwable` @kind boolean;
  #L315428.  if v4 == 0 then goto L31545a;
  #L31542c.  v4:= `@@kotlinx.coroutines.internal.h.n` @type ^`java.util.concurrent.atomic.AtomicReferenceFieldUpdater` @kind object;
  #L315430.  call temp:= `compareAndSet`(v4, v3, v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L315436.  v4:= temp;
  #L315438.  if v4 == 0 then goto L315442;
  #L31543c.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L315440.  return v0 @kind object;
  #L315442.  v4:= new `java.lang.IllegalArgumentException`;
  #L315446.  v0:= "Failed requirement." @kind object;
  #L31544a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L315450.  v0:= temp @kind object;
  #L315452.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L315458.  throw v4;
  #L31545a.  v4:= new `java.lang.IllegalStateException`;
  #L31545e.  v1:= new `java.lang.StringBuilder`;
  #L315462.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L315468.  v2:= "Inconsistent state " @kind object;
  #L31546c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L315472.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L315478.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31547e.  v0:= temp @kind object;
  #L315480.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L315486.  v0:= temp @kind object;
  #L315488.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31548e.  throw v4;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.internal.h` v2 @kind this) @signature `Lkotlinx/coroutines/internal/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3153a4.  v0:= new `java.lang.StringBuilder`;
  #L3153a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3153ae.  v1:= "DispatchedContinuation[" @kind object;
  #L3153b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3153b8.  v1:= v2.`kotlinx.coroutines.internal.h.j` @type ^`kotlinx.coroutines.e0` @kind object;
  #L3153bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3153c2.  v1:= ", " @kind object;
  #L3153c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3153cc.  v1:= v2.`kotlinx.coroutines.internal.h.k` @type ^`kotlin.coroutines.d` @kind object;
  #L3153d0.  call temp:= `c`(v1) @signature `Lkotlinx/coroutines/r0;.c:(Lkotlin/coroutines/d;)Ljava/lang/String;` @kind static;
  #L3153d6.  v1:= temp @kind object;
  #L3153d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3153de.  v1:= 93I;
  #L3153e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3153e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3153ee.  v0:= temp @kind object;
  #L3153f0.  return v0 @kind object;
}
