record `kotlinx.coroutines.k0` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.a` @kind class, `kotlinx.coroutines.q2` @kind interface {
  `long` `kotlinx.coroutines.k0.h` @AccessFlag PRIVATE_FINAL;
}
global `kotlinx.coroutines.k0$a` `@@kotlinx.coroutines.k0.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/k0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30e554.  v0:= new `kotlinx.coroutines.k0$a`;
  #L30e558.  v1:= 0I;
  #L30e55a.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/k0$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L30e560.  `@@kotlinx.coroutines.k0.i` @type ^`kotlinx.coroutines.k0$a` := v0 @kind object;
  #L30e564.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.k0` v1 @kind this, `long` v2 ) @signature `Lkotlinx/coroutines/k0;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30e578.  v0:= `@@kotlinx.coroutines.k0.i` @type ^`kotlinx.coroutines.k0$a` @kind object;
  #L30e57c.  call `<init>`(v1, v0) @signature `Lkotlin/coroutines/a;.<init>:(Lkotlin/coroutines/g$c;)V` @kind direct;
  #L30e582.  v1.`kotlinx.coroutines.k0.h` @type ^`long` := v2 @kind wide;
  #L30e586.  return @kind void;
}
procedure `void` `J`(`kotlinx.coroutines.k0` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/k0;.J:(Lkotlin/coroutines/g;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30e598.  v2:= (`java.lang.String`) v2 @kind object;
  #L30e59c.  call `n0`(v0, v1, v2) @signature `Lkotlinx/coroutines/k0;.n0:(Lkotlin/coroutines/g;Ljava/lang/String;)V` @kind virtual;
  #L30e5a2.  return @kind void;
}
procedure `java.lang.Object` `d0`(`kotlinx.coroutines.k0` v0 @kind this, `kotlin.coroutines.g` v1 @kind object) @signature `Lkotlinx/coroutines/k0;.d0:(Lkotlin/coroutines/g;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L30e404.  call temp:= `q0`(v0, v1) @signature `Lkotlinx/coroutines/k0;.q0:(Lkotlin/coroutines/g;)Ljava/lang/String;` @kind virtual;
  #L30e40a.  v1:= temp @kind object;
  #L30e40c.  return v1 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.k0` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlinx/coroutines/k0;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30e3a8.  v0:= 1I;
  #L30e3aa.  if v7 != v8 then goto L30e3b0;
  #L30e3ae.  return v0;
  #L30e3b0.  v1:= instanceof @variable v8 @type ^`kotlinx.coroutines.k0` @kind boolean;
  #L30e3b4.  v2:= 0I;
  #L30e3b6.  if v1 != 0 then goto L30e3bc;
  #L30e3ba.  return v2;
  #L30e3bc.  v8:= (`kotlinx.coroutines.k0`) v8 @kind object;
  #L30e3c0.  v3:= v7.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e3c4.  v5:= v8.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e3c8.  v8:= lcmp(v3, v5);
  #L30e3cc.  if v8 == 0 then goto L30e3d2;
  #L30e3d0.  return v2;
  #L30e3d2.  return v0;
}
procedure `int` `hashCode`(`kotlinx.coroutines.k0` v2 @kind this) @signature `Lkotlinx/coroutines/k0;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30e3e4.  v0:= v2.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e3e8.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/j0;.a:(J)I` @kind static;
  #L30e3ee.  v0:= temp;
  #L30e3f0.  return v0;
}
procedure `long` `l0`(`kotlinx.coroutines.k0` v2 @kind this) @signature `Lkotlinx/coroutines/k0;.l0:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L30e53c.  v0:= v2.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e540.  return v0 @kind wide;
}
procedure `void` `n0`(`kotlinx.coroutines.k0` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lkotlinx/coroutines/k0;.n0:(Lkotlin/coroutines/g;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L30e5b4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L30e5ba.  v1:= temp @kind object;
  #L30e5bc.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L30e5c2.  return @kind void;
}
procedure `java.lang.String` `q0`(`kotlinx.coroutines.k0` v8 @kind this, `kotlin.coroutines.g` v9 @kind object) @signature `Lkotlinx/coroutines/k0;.q0:(Lkotlin/coroutines/g;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30e464.  v0:= `@@kotlinx.coroutines.l0.i` @type ^`kotlinx.coroutines.l0$a` @kind object;
  #L30e468.  call temp:= `get`(v9, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30e46e.  v9:= temp @kind object;
  #L30e470.  v9:= (`kotlinx.coroutines.l0`) v9 @kind object;
  #L30e474.  if v9 == 0 then goto L30e484;
  #L30e478.  call temp:= `l0`(v9) @signature `Lkotlinx/coroutines/l0;.l0:()Ljava/lang/String;` @kind virtual;
  #L30e47e.  v9:= temp @kind object;
  #L30e480.  if v9 != 0 then goto L30e488;
  #L30e484.  v9:= "coroutine" @kind object;
  #L30e488.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L30e48e.  v0:= temp @kind object;
  #L30e490.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L30e496.  v7:= temp @kind object;
  #L30e498.  v3:= 0I;
  #L30e49a.  v4:= 0I;
  #L30e49c.  v5:= 6I;
  #L30e49e.  v6:= 0I;
  #L30e4a0.  v2:= " @" @kind object;
  #L30e4a4.  v1:= v7 @kind object;
  #L30e4a6.  call temp:= `D`(v1, v2, v3, v4, v5, v6) @signature `Lkotlin/text/d;.D:(Ljava/lang/CharSequence;Ljava/lang/String;IZILjava/lang/Object;)I` @kind static;
  #L30e4ac.  v1:= temp;
  #L30e4ae.  if v1 >= 0 then goto L30e4ba;
  #L30e4b2.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30e4b8.  v1:= temp;
  #L30e4ba.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30e4c0.  v2:= temp;
  #L30e4c2.  v2:= v2 + v1 @kind int;
  #L30e4c4.  v2:= v2 + 10;
  #L30e4c8.  v3:= new `java.lang.StringBuilder`;
  #L30e4cc.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L30e4d2.  v2:= 0I;
  #L30e4d4.  call temp:= `substring`(v7, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L30e4da.  v1:= temp @kind object;
  #L30e4dc.  v2:= "this as java.lang.String…ing(startIndex, endIndex)" @kind object;
  #L30e4e0.  call `e`(v1, v2) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30e4e6.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e4ec.  v1:= " @" @kind object;
  #L30e4f0.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e4f6.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e4fc.  v9:= 35I;
  #L30e500.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e506.  v1:= v8.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e50a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e510.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e516.  v9:= temp @kind object;
  #L30e518.  v1:= "StringBuilder(capacity).…builderAction).toString()" @kind object;
  #L30e51c.  call `e`(v9, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30e522.  call `setName`(v0, v9) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L30e528.  return v7 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.k0` v3 @kind this) @signature `Lkotlinx/coroutines/k0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30e420.  v0:= new `java.lang.StringBuilder`;
  #L30e424.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30e42a.  v1:= "CoroutineId(" @kind object;
  #L30e42e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e434.  v1:= v3.`kotlinx.coroutines.k0.h` @type ^`long` @kind wide;
  #L30e438.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e43e.  v1:= 41I;
  #L30e442.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e448.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e44e.  v0:= temp @kind object;
  #L30e450.  return v0 @kind object;
}
