record `kotlinx.coroutines.t2` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.e0` @kind class {
}
global `kotlinx.coroutines.t2` `@@kotlinx.coroutines.t2.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/t2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L313ab0.  v0:= new `kotlinx.coroutines.t2`;
  #L313ab4.  call `<init>`(v0) @signature `Lkotlinx/coroutines/t2;.<init>:()V` @kind direct;
  #L313aba.  `@@kotlinx.coroutines.t2.i` @type ^`kotlinx.coroutines.t2` := v0 @kind object;
  #L313abe.  return @kind void;
}
procedure `void` `<init>`(`kotlinx.coroutines.t2` v0 @kind this) @signature `Lkotlinx/coroutines/t2;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L313ad0.  call `<init>`(v0) @signature `Lkotlinx/coroutines/e0;.<init>:()V` @kind direct;
  #L313ad6.  return @kind void;
}
procedure `void` `l0`(`kotlinx.coroutines.t2` v0 @kind this, `kotlin.coroutines.g` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lkotlinx/coroutines/t2;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L313ae8.  v2:= `@@kotlinx.coroutines.w2.h` @type ^`kotlinx.coroutines.w2$a` @kind object;
  #L313aec.  call temp:= `get`(v1, v2) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L313af2.  v1:= temp @kind object;
  #L313af4.  v1:= (`kotlinx.coroutines.w2`) v1 @kind object;
  #L313af8.  if v1 == 0 then goto L313afe;
  #L313afc.  return @kind void;
  #L313afe.  v1:= new `java.lang.UnsupportedOperationException`;
  #L313b02.  v2:= "Dispatchers.Unconfined.dispatch function can only be used by the yield function. If you wrap Unconfined dispatcher in your code, make sure you properly delegate isDispatchNeeded and dispatch calls." @kind object;
  #L313b06.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313b0c.  throw v1;
}
procedure `boolean` `n0`(`kotlinx.coroutines.t2` v0 @kind this, `kotlin.coroutines.g` v1 @kind object) @signature `Lkotlinx/coroutines/t2;.n0:(Lkotlin/coroutines/g;)Z` @AccessFlag PUBLIC {
    temp;

  #L313a84.  v1:= 0I;
  #L313a86.  return v1;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.t2` v1 @kind this) @signature `Lkotlinx/coroutines/t2;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313a98.  v0:= "Dispatchers.Unconfined" @kind object;
  #L313a9c.  return v0 @kind object;
}
