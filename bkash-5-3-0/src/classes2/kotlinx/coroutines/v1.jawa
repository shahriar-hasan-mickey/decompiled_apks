record `kotlinx.coroutines.v1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.d2` @kind class {
  `wd.l` `kotlinx.coroutines.v1.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.v1` v0 @kind this, `wd.l` v1 @kind object) @signature `Lkotlinx/coroutines/v1;.<init>:(Lwd/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L310d88.  call `<init>`(v0) @signature `Lkotlinx/coroutines/d2;.<init>:()V` @kind direct;
  #L310d8e.  v0.`kotlinx.coroutines.v1.k` @type ^`wd.l` := v1 @kind object;
  #L310d92.  return @kind void;
}
procedure `java.lang.Object` `invoke`(`kotlinx.coroutines.v1` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lkotlinx/coroutines/v1;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L310d68.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L310d6c.  call `w`(v0, v1) @signature `Lkotlinx/coroutines/v1;.w:(Ljava/lang/Throwable;)V` @kind virtual;
  #L310d72.  v1:= `@@od.t.a` @type ^`od.t` @kind object;
  #L310d76.  return v1 @kind object;
}
procedure `void` `w`(`kotlinx.coroutines.v1` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lkotlinx/coroutines/v1;.w:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L310da4.  v0:= v1.`kotlinx.coroutines.v1.k` @type ^`wd.l` @kind object;
  #L310da8.  call temp:= `invoke`(v0, v2) @signature `Lwd/l;.invoke:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L310dae.  return @kind void;
}
