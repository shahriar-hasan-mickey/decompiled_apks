record `kotlinx.coroutines.n0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlinx.coroutines.m0` `a`(`kotlin.coroutines.g` v3 @kind object) @signature `Lkotlinx/coroutines/n0;.a:(Lkotlin/coroutines/g;)Lkotlinx/coroutines/m0;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30e6e4.  v0:= new `kotlinx.coroutines.internal.f`;
  #L30e6e8.  v1:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L30e6ec.  call temp:= `get`(v3, v1) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L30e6f2.  v1:= temp @kind object;
  #L30e6f4.  if v1 == 0 then goto L30e6fa;
  #L30e6f8.  goto L30e70e;
  #L30e6fa.  v1:= 1I;
  #L30e6fc.  v2:= 0I;
  #L30e6fe.  call temp:= `b`(v2, v1, v2) @signature `Lkotlinx/coroutines/a2;.b:(Lkotlinx/coroutines/w1;ILjava/lang/Object;)Lkotlinx/coroutines/u;` @kind static;
  #L30e704.  v1:= temp @kind object;
  #L30e706.  call temp:= `plus`(v3, v1) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind interface;
  #L30e70c.  v3:= temp @kind object;
  #L30e70e.  call `<init>`(v0, v3) @signature `Lkotlinx/coroutines/internal/f;.<init>:(Lkotlin/coroutines/g;)V` @kind direct;
  #L30e714.  return v0 @kind object;
}
