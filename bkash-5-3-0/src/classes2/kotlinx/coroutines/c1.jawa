record `kotlinx.coroutines.c1` @kind class @AccessFlag FINAL extends `java.util.concurrent.Executor` @kind interface {
  `kotlinx.coroutines.e0` `kotlinx.coroutines.c1.g` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `execute`(`kotlinx.coroutines.c1` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lkotlinx/coroutines/c1;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30f8a0.  v0:= v2.`kotlinx.coroutines.c1.g` @type ^`kotlinx.coroutines.e0` @kind object;
  #L30f8a4.  v1:= `@@kotlin.coroutines.h.INSTANCE` @type ^`kotlin.coroutines.h` @kind object;
  #L30f8a8.  call `l0`(v0, v1, v3) @signature `Lkotlinx/coroutines/e0;.l0:(Lkotlin/coroutines/g;Ljava/lang/Runnable;)V` @kind virtual;
  #L30f8ae.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.c1` v1 @kind this) @signature `Lkotlinx/coroutines/c1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30f880.  v0:= v1.`kotlinx.coroutines.c1.g` @type ^`kotlinx.coroutines.e0` @kind object;
  #L30f884.  call temp:= `toString`(v0) @signature `Lkotlinx/coroutines/e0;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f88a.  v0:= temp @kind object;
  #L30f88c.  return v0 @kind object;
}
