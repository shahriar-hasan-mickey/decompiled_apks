record `kotlinx.coroutines.g1` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.r1` @kind interface {
  `boolean` `kotlinx.coroutines.g1.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.g1` v0 @kind this, `boolean` v1 ) @signature `Lkotlinx/coroutines/g1;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30fa6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30fa72.  v0.`kotlinx.coroutines.g1.g` @type ^`boolean` := v1 @kind boolean;
  #L30fa76.  return @kind void;
}
procedure `boolean` `e`(`kotlinx.coroutines.g1` v1 @kind this) @signature `Lkotlinx/coroutines/g1;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30f9ec.  v0:= v1.`kotlinx.coroutines.g1.g` @type ^`boolean` @kind boolean;
  #L30f9f0.  return v0;
}
procedure `kotlinx.coroutines.j2` `f`(`kotlinx.coroutines.g1` v1 @kind this) @signature `Lkotlinx/coroutines/g1;.f:()Lkotlinx/coroutines/j2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30fa58.  v0:= 0I;
  #L30fa5a.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.g1` v2 @kind this) @signature `Lkotlinx/coroutines/g1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30fa04.  v0:= new `java.lang.StringBuilder`;
  #L30fa08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30fa0e.  v1:= "Empty{" @kind object;
  #L30fa12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30fa18.  call temp:= `e`(v2) @signature `Lkotlinx/coroutines/g1;.e:()Z` @kind virtual;
  #L30fa1e.  v1:= temp;
  #L30fa20.  if v1 == 0 then goto L30fa2a;
  #L30fa24.  v1:= "Active" @kind object;
  #L30fa28.  goto L30fa2e;
  #L30fa2a.  v1:= "New" @kind object;
  #L30fa2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30fa34.  v1:= 125I;
  #L30fa38.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30fa3e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30fa44.  v0:= temp @kind object;
  #L30fa46.  return v0 @kind object;
}
