record `kotlinx.coroutines.i1$a` @kind class @AccessFlag FINAL extends `kotlinx.coroutines.i1$b` @kind class {
  `kotlinx.coroutines.l` `kotlinx.coroutines.i1$a.i` @AccessFlag PRIVATE_FINAL;
  `kotlinx.coroutines.i1` `kotlinx.coroutines.i1$a.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlinx.coroutines.i1$a` v0 @kind this, `kotlinx.coroutines.i1` v1 @kind object, `long` v2 , `kotlinx.coroutines.l` v4 @kind object) @signature `Lkotlinx/coroutines/i1$a;.<init>:(Lkotlinx/coroutines/i1;JLkotlinx/coroutines/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30fac4.  v0.`kotlinx.coroutines.i1$a.j` @type ^`kotlinx.coroutines.i1` := v1 @kind object;
  #L30fac8.  call `<init>`(v0, v2) @signature `Lkotlinx/coroutines/i1$b;.<init>:(J)V` @kind direct;
  #L30face.  v0.`kotlinx.coroutines.i1$a.i` @type ^`kotlinx.coroutines.l` := v4 @kind object;
  #L30fad2.  return @kind void;
}
procedure `void` `run`(`kotlinx.coroutines.i1$a` v3 @kind this) @signature `Lkotlinx/coroutines/i1$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30fae4.  v0:= v3.`kotlinx.coroutines.i1$a.i` @type ^`kotlinx.coroutines.l` @kind object;
  #L30fae8.  v1:= v3.`kotlinx.coroutines.i1$a.j` @type ^`kotlinx.coroutines.i1` @kind object;
  #L30faec.  v2:= `@@od.t.a` @type ^`od.t` @kind object;
  #L30faf0.  call `d`(v0, v1, v2) @signature `Lkotlinx/coroutines/l;.d:(Lkotlinx/coroutines/e0;Ljava/lang/Object;)V` @kind interface;
  #L30faf6.  return @kind void;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.i1$a` v2 @kind this) @signature `Lkotlinx/coroutines/i1$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30fa88.  v0:= new `java.lang.StringBuilder`;
  #L30fa8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30fa92.  call temp:= `toString`(v2) @signature `Lkotlinx/coroutines/i1$b;.toString:()Ljava/lang/String;` @kind super;
  #L30fa98.  v1:= temp @kind object;
  #L30fa9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30faa0.  v1:= v2.`kotlinx.coroutines.i1$a.i` @type ^`kotlinx.coroutines.l` @kind object;
  #L30faa4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30faaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30fab0.  v0:= temp @kind object;
  #L30fab2.  return v0 @kind object;
}
