record `kotlinx.coroutines.x1` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.CancellationException` @kind class, `kotlinx.coroutines.c0` @kind interface {
  `kotlinx.coroutines.w1` `kotlinx.coroutines.x1.job` @AccessFlag PUBLIC_FINAL_TRANSIENT;
}
procedure `void` `<init>`(`kotlinx.coroutines.x1` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object, `kotlinx.coroutines.w1` v3 @kind object) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L31108c.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L311092.  v0.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` := v3 @kind object;
  #L311096.  if v2 == 0 then goto L3110a0;
  #L31109a.  call temp:= `initCause`(v0, v2) @signature `Ljava/util/concurrent/CancellationException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3110a0.  return @kind void;
}
procedure `java.lang.Throwable` `createCopy`(`kotlinx.coroutines.x1` v1 @kind this) @signature `Lkotlinx/coroutines/x1;.createCopy:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L310ffc.  call temp:= `createCopy`(v1) @signature `Lkotlinx/coroutines/x1;.createCopy:()Lkotlinx/coroutines/x1;` @kind virtual;
  #L311002.  v0:= temp @kind object;
  #L311004.  return v0 @kind object;
}
procedure `kotlinx.coroutines.x1` `createCopy`(`kotlinx.coroutines.x1` v3 @kind this) @signature `Lkotlinx/coroutines/x1;.createCopy:()Lkotlinx/coroutines/x1;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L31104c.  call temp:= `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @kind static;
  #L311052.  v0:= temp;
  #L311054.  if v0 == 0 then goto L311076;
  #L311058.  v0:= new `kotlinx.coroutines.x1`;
  #L31105c.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L311062.  v1:= temp @kind object;
  #L311064.  call `c`(v1) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;)V` @kind static;
  #L31106a.  v2:= v3.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` @kind object;
  #L31106e.  call `<init>`(v0, v1, v3, v2) @signature `Lkotlinx/coroutines/x1;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;Lkotlinx/coroutines/w1;)V` @kind direct;
  #L311074.  return v0 @kind object;
  #L311076.  v0:= 0I;
  #L311078.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlinx.coroutines.x1` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/x1;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L310ee4.  if v3 == v2 then goto L310f46;
  #L310ee8.  v0:= instanceof @variable v3 @type ^`kotlinx.coroutines.x1` @kind boolean;
  #L310eec.  if v0 == 0 then goto L310f42;
  #L310ef0.  v3:= (`kotlinx.coroutines.x1`) v3 @kind object;
  #L310ef4.  call temp:= `getMessage`(v3) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L310efa.  v0:= temp @kind object;
  #L310efc.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L310f02.  v1:= temp @kind object;
  #L310f04.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L310f0a.  v0:= temp;
  #L310f0c.  if v0 == 0 then goto L310f42;
  #L310f10.  v0:= v3.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` @kind object;
  #L310f14.  v1:= v2.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` @kind object;
  #L310f18.  call temp:= `a`(v0, v1) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L310f1e.  v0:= temp;
  #L310f20.  if v0 == 0 then goto L310f42;
  #L310f24.  call temp:= `getCause`(v3) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L310f2a.  v3:= temp @kind object;
  #L310f2c.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L310f32.  v0:= temp @kind object;
  #L310f34.  call temp:= `a`(v3, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L310f3a.  v3:= temp;
  #L310f3c.  if v3 == 0 then goto L310f42;
  #L310f40.  goto L310f46;
  #L310f42.  v3:= 0I;
  #L310f44.  goto L310f48;
  #L310f46.  v3:= 1I;
  #L310f48.  return v3;
}
procedure `java.lang.Throwable` `fillInStackTrace`(`kotlinx.coroutines.x1` v1 @kind this) @signature `Lkotlinx/coroutines/x1;.fillInStackTrace:()Ljava/lang/Throwable;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L311018.  call temp:= `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @kind static;
  #L31101e.  v0:= temp;
  #L311020.  if v0 == 0 then goto L31102e;
  #L311024.  call temp:= `fillInStackTrace`(v1) @signature `Ljava/util/concurrent/CancellationException;.fillInStackTrace:()Ljava/lang/Throwable;` @kind super;
  #L31102a.  v0:= temp @kind object;
  #L31102c.  return v0 @kind object;
  #L31102e.  v0:= 0I;
  #L311030.  v0:= new `java.lang.StackTraceElement`[v0];
  #L311034.  call `setStackTrace`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.setStackTrace:([Ljava/lang/StackTraceElement;)V` @kind virtual;
  #L31103a.  return v1 @kind object;
}
procedure `int` `hashCode`(`kotlinx.coroutines.x1` v2 @kind this) @signature `Lkotlinx/coroutines/x1;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L310f5c.  call temp:= `getMessage`(v2) @signature `Ljava/util/concurrent/CancellationException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L310f62.  v0:= temp @kind object;
  #L310f64.  call `c`(v0) @signature `Lkotlin/jvm/internal/k;.c:(Ljava/lang/Object;)V` @kind static;
  #L310f6a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L310f70.  v0:= temp;
  #L310f72.  v0:= v0 * 31;
  #L310f76.  v1:= v2.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` @kind object;
  #L310f7a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L310f80.  v1:= temp;
  #L310f82.  v0:= v0 + v1 @kind int;
  #L310f84.  v0:= v0 * 31;
  #L310f88.  call temp:= `getCause`(v2) @signature `Ljava/util/concurrent/CancellationException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L310f8e.  v1:= temp @kind object;
  #L310f90.  if v1 == 0 then goto L310f9e;
  #L310f94.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L310f9a.  v1:= temp;
  #L310f9c.  goto L310fa0;
  #L310f9e.  v1:= 0I;
  #L310fa0.  v0:= v0 + v1 @kind int;
  #L310fa2.  return v0;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.x1` v2 @kind this) @signature `Lkotlinx/coroutines/x1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L310fb4.  v0:= new `java.lang.StringBuilder`;
  #L310fb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L310fbe.  call temp:= `toString`(v2) @signature `Ljava/util/concurrent/CancellationException;.toString:()Ljava/lang/String;` @kind super;
  #L310fc4.  v1:= temp @kind object;
  #L310fc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L310fcc.  v1:= "; job=" @kind object;
  #L310fd0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L310fd6.  v1:= v2.`kotlinx.coroutines.x1.job` @type ^`kotlinx.coroutines.w1` @kind object;
  #L310fda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L310fe0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L310fe6.  v0:= temp @kind object;
  #L310fe8.  return v0 @kind object;
}
