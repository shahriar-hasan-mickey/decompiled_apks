record `kotlinx.coroutines.c2` @kind class @AccessFlag FINAL_SYNTHETIC {
}
procedure `kotlinx.coroutines.u` `a`(`kotlinx.coroutines.w1` v1 @kind object) @signature `Lkotlinx/coroutines/c2;.a:(Lkotlinx/coroutines/w1;)Lkotlinx/coroutines/u;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L3111e4.  v0:= new `kotlinx.coroutines.z1`;
  #L3111e8.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/z1;.<init>:(Lkotlinx/coroutines/w1;)V` @kind direct;
  #L3111ee.  return v0 @kind object;
}
procedure `kotlinx.coroutines.u` `b`(`kotlinx.coroutines.w1` v0 @kind object, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lkotlinx/coroutines/c2;.b:(Lkotlinx/coroutines/w1;ILjava/lang/Object;)Lkotlinx/coroutines/u;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3111c0.  v1:= v1 ^& 1;
  #L3111c4.  if v1 == 0 then goto L3111ca;
  #L3111c8.  v0:= 0I;
  #L3111ca.  call temp:= `a`(v0) @signature `Lkotlinx/coroutines/a2;.a:(Lkotlinx/coroutines/w1;)Lkotlinx/coroutines/u;` @kind static;
  #L3111d0.  v0:= temp @kind object;
  #L3111d2.  return v0 @kind object;
}
procedure `void` `c`(`kotlin.coroutines.g` v1 @kind object, `java.util.concurrent.CancellationException` v2 @kind object) @signature `Lkotlinx/coroutines/c2;.c:(Lkotlin/coroutines/g;Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L311224.  v0:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L311228.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L31122e.  v1:= temp @kind object;
  #L311230.  v1:= (`kotlinx.coroutines.w1`) v1 @kind object;
  #L311234.  if v1 == 0 then goto L31123e;
  #L311238.  call `Y`(v1, v2) @signature `Lkotlinx/coroutines/w1;.Y:(Ljava/util/concurrent/CancellationException;)V` @kind interface;
  #L31123e.  return @kind void;
}
procedure `void` `d`(`kotlin.coroutines.g` v0 @kind object, `java.util.concurrent.CancellationException` v1 @kind object, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lkotlinx/coroutines/c2;.d:(Lkotlin/coroutines/g;Ljava/util/concurrent/CancellationException;ILjava/lang/Object;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L311200.  v2:= v2 ^& 1;
  #L311204.  if v2 == 0 then goto L31120a;
  #L311208.  v1:= 0I;
  #L31120a.  call `c`(v0, v1) @signature `Lkotlinx/coroutines/a2;.c:(Lkotlin/coroutines/g;Ljava/util/concurrent/CancellationException;)V` @kind static;
  #L311210.  return @kind void;
}
procedure `void` `e`(`kotlin.coroutines.g` v1 @kind object) @signature `Lkotlinx/coroutines/c2;.e:(Lkotlin/coroutines/g;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L311250.  v0:= `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L311254.  call temp:= `get`(v1, v0) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind interface;
  #L31125a.  v1:= temp @kind object;
  #L31125c.  v1:= (`kotlinx.coroutines.w1`) v1 @kind object;
  #L311260.  if v1 == 0 then goto L31126a;
  #L311264.  call `g`(v1) @signature `Lkotlinx/coroutines/a2;.g:(Lkotlinx/coroutines/w1;)V` @kind static;
  #L31126a.  return @kind void;
}
procedure `void` `f`(`kotlinx.coroutines.w1` v1 @kind object) @signature `Lkotlinx/coroutines/c2;.f:(Lkotlinx/coroutines/w1;)V` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L31127c.  call temp:= `e`(v1) @signature `Lkotlinx/coroutines/w1;.e:()Z` @kind interface;
  #L311282.  v0:= temp;
  #L311284.  if v0 == 0 then goto L31128a;
  #L311288.  return @kind void;
  #L31128a.  call temp:= `v`(v1) @signature `Lkotlinx/coroutines/w1;.v:()Ljava/util/concurrent/CancellationException;` @kind interface;
  #L311290.  v1:= temp @kind object;
  #L311292.  throw v1;
}
