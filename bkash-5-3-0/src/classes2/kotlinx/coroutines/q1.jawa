record `kotlinx.coroutines.q1` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.r1` @kind interface {
  `kotlinx.coroutines.j2` `kotlinx.coroutines.q1.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlinx.coroutines.q1` v0 @kind this, `kotlinx.coroutines.j2` v1 @kind object) @signature `Lkotlinx/coroutines/q1;.<init>:(Lkotlinx/coroutines/j2;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L310bd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L310bde.  v0.`kotlinx.coroutines.q1.g` @type ^`kotlinx.coroutines.j2` := v1 @kind object;
  #L310be2.  return @kind void;
}
procedure `boolean` `e`(`kotlinx.coroutines.q1` v1 @kind this) @signature `Lkotlinx/coroutines/q1;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L310b70.  v0:= 0I;
  #L310b72.  return v0;
}
procedure `kotlinx.coroutines.j2` `f`(`kotlinx.coroutines.q1` v1 @kind this) @signature `Lkotlinx/coroutines/q1;.f:()Lkotlinx/coroutines/j2;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L310bc0.  v0:= v1.`kotlinx.coroutines.q1.g` @type ^`kotlinx.coroutines.j2` @kind object;
  #L310bc4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlinx.coroutines.q1` v2 @kind this) @signature `Lkotlinx/coroutines/q1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L310b84.  call temp:= `c`() @signature `Lkotlinx/coroutines/q0;.c:()Z` @kind static;
  #L310b8a.  v0:= temp;
  #L310b8c.  if v0 == 0 then goto L310ba6;
  #L310b90.  call temp:= `f`(v2) @signature `Lkotlinx/coroutines/q1;.f:()Lkotlinx/coroutines/j2;` @kind virtual;
  #L310b96.  v0:= temp @kind object;
  #L310b98.  v1:= "New" @kind object;
  #L310b9c.  call temp:= `w`(v0, v1) @signature `Lkotlinx/coroutines/j2;.w:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L310ba2.  v0:= temp @kind object;
  #L310ba4.  goto L310bae;
  #L310ba6.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L310bac.  v0:= temp @kind object;
  #L310bae.  return v0 @kind object;
}
