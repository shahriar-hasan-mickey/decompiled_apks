record `kotlinx.coroutines.w1` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.coroutines.g$b` @kind interface {
}
global `kotlinx.coroutines.w1$b` `@@kotlinx.coroutines.w1.f` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlinx/coroutines/w1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3134ec.  v0:= `@@kotlinx.coroutines.w1$b.g` @type ^`kotlinx.coroutines.w1$b` @kind object;
  #L3134f0.  `@@kotlinx.coroutines.w1.f` @type ^`kotlinx.coroutines.w1$b` := v0 @kind object;
  #L3134f4.  return @kind void;
}
procedure `kotlinx.coroutines.e1` `Q`(`wd.l` v0 @kind object) @signature `Lkotlinx/coroutines/w1;.Q:(Lwd/l;)Lkotlinx/coroutines/e1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `Y`(`java.util.concurrent.CancellationException` v0 @kind object) @signature `Lkotlinx/coroutines/w1;.Y:(Ljava/util/concurrent/CancellationException;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`() @signature `Lkotlinx/coroutines/w1;.e:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.r` `j0`(`kotlinx.coroutines.t` v0 @kind object) @signature `Lkotlinx/coroutines/w1;.j0:(Lkotlinx/coroutines/t;)Lkotlinx/coroutines/r;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlinx.coroutines.e1` `k0`(`boolean` v0 , `boolean` v1 , `wd.l` v2 @kind object) @signature `Lkotlinx/coroutines/w1;.k0:(ZZLwd/l;)Lkotlinx/coroutines/e1;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `start`() @signature `Lkotlinx/coroutines/w1;.start:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.concurrent.CancellationException` `v`() @signature `Lkotlinx/coroutines/w1;.v:()Ljava/util/concurrent/CancellationException;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
