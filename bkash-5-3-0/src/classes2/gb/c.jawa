record `gb.c` @kind class @AccessFlag PUBLIC extends `gb.a` @kind class {
  `java.util.Map` `gb.c.a` @AccessFlag FINAL;
  `gb.c$a` `gb.c.b` @AccessFlag FINAL;
  `boolean` `gb.c.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`gb.c` v1 @kind this, `java.util.Map` v2 @kind object, `boolean` v3 ) @signature `Lgb/c;.<init>:(Ljava/util/Map;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b2428.  call `<init>`(v1) @signature `Lgb/a;.<init>:()V` @kind direct;
  #L2b242e.  v0:= new `gb.c$a`;
  #L2b2432.  call `<init>`(v0, v1) @signature `Lgb/c$a;.<init>:(Lgb/c;)V` @kind direct;
  #L2b2438.  v1.`gb.c.b` @type ^`gb.c$a` := v0 @kind object;
  #L2b243c.  v1.`gb.c.a` @type ^`java.util.Map` := v2 @kind object;
  #L2b2440.  v1.`gb.c.c` @type ^`boolean` := v3 @kind boolean;
  #L2b2444.  return @kind void;
}
procedure `java.lang.Object` `a`(`gb.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgb/c;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2348.  v0:= v1.`gb.c.a` @type ^`java.util.Map` @kind object;
  #L2b234c.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b2352.  v2:= temp @kind object;
  #L2b2354.  return v2 @kind object;
}
procedure `boolean` `c`(`gb.c` v1 @kind this) @signature `Lgb/c;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b22f8.  v0:= v1.`gb.c.c` @type ^`boolean` @kind boolean;
  #L2b22fc.  return v0;
}
procedure `java.lang.String` `f`(`gb.c` v2 @kind this) @signature `Lgb/c;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b2368.  v0:= v2.`gb.c.a` @type ^`java.util.Map` @kind object;
  #L2b236c.  v1:= "method" @kind object;
  #L2b2370.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b2376.  v0:= temp @kind object;
  #L2b2378.  v0:= (`java.lang.String`) v0 @kind object;
  #L2b237c.  return v0 @kind object;
}
procedure `boolean` `g`(`gb.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgb/c;.g:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2310.  v0:= v1.`gb.c.a` @type ^`java.util.Map` @kind object;
  #L2b2314.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2b231a.  v2:= temp;
  #L2b231c.  return v2;
}
procedure `gb.f` `m`(`gb.c` v1 @kind this) @signature `Lgb/c;.m:()Lgb/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2330.  v0:= v1.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b2334.  return v0 @kind object;
}
procedure `java.util.Map` `n`(`gb.c` v4 @kind this) @signature `Lgb/c;.n:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b2390.  v0:= new `java.util.HashMap`;
  #L2b2394.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b239a.  v1:= new `java.util.HashMap`;
  #L2b239e.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b23a4.  v2:= v4.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b23a8.  v2:= v2.`gb.c$a.b` @type ^`java.lang.String` @kind object;
  #L2b23ac.  v3:= "code" @kind object;
  #L2b23b0.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b23b6.  v2:= v4.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b23ba.  v2:= v2.`gb.c$a.c` @type ^`java.lang.String` @kind object;
  #L2b23be.  v3:= "message" @kind object;
  #L2b23c2.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b23c8.  v2:= v4.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b23cc.  v2:= v2.`gb.c$a.d` @type ^`java.lang.Object` @kind object;
  #L2b23d0.  v3:= "data" @kind object;
  #L2b23d4.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b23da.  v2:= "error" @kind object;
  #L2b23de.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b23e4.  return v0 @kind object;
}
procedure `java.util.Map` `o`(`gb.c` v3 @kind this) @signature `Lgb/c;.o:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b23f8.  v0:= new `java.util.HashMap`;
  #L2b23fc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2b2402.  v1:= v3.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b2406.  v1:= v1.`gb.c$a.a` @type ^`java.lang.Object` @kind object;
  #L2b240a.  v2:= "result" @kind object;
  #L2b240e.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b2414.  return v0 @kind object;
}
procedure `void` `p`(`gb.c` v3 @kind this, `io.flutter.plugin.common.l$d` v4 @kind object) @signature `Lgb/c;.p:(Lio/flutter/plugin/common/l$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2458.  v0:= v3.`gb.c.b` @type ^`gb.c$a` @kind object;
  #L2b245c.  v1:= v0.`gb.c$a.b` @type ^`java.lang.String` @kind object;
  #L2b2460.  v2:= v0.`gb.c$a.c` @type ^`java.lang.String` @kind object;
  #L2b2464.  v0:= v0.`gb.c$a.d` @type ^`java.lang.Object` @kind object;
  #L2b2468.  call `error`(v4, v1, v2, v0) @signature `Lio/flutter/plugin/common/l$d;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2b246e.  return @kind void;
}
procedure `void` `q`(`gb.c` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lgb/c;.q:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2480.  call temp:= `c`(v1) @signature `Lgb/c;.c:()Z` @kind virtual;
  #L2b2486.  v0:= temp;
  #L2b2488.  if v0 != 0 then goto L2b249a;
  #L2b248c.  call temp:= `n`(v1) @signature `Lgb/c;.n:()Ljava/util/Map;` @kind virtual;
  #L2b2492.  v0:= temp @kind object;
  #L2b2494.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b249a.  return @kind void;
}
procedure `void` `r`(`gb.c` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lgb/c;.r:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b24ac.  call temp:= `c`(v1) @signature `Lgb/c;.c:()Z` @kind virtual;
  #L2b24b2.  v0:= temp;
  #L2b24b4.  if v0 != 0 then goto L2b24c6;
  #L2b24b8.  call temp:= `o`(v1) @signature `Lgb/c;.o:()Ljava/util/Map;` @kind virtual;
  #L2b24be.  v0:= temp @kind object;
  #L2b24c0.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b24c6.  return @kind void;
}
