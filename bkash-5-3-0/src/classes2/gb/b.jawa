record `gb.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `gb.e` @kind interface {
}
procedure `void` `<init>`(`gb.b` v0 @kind this) @signature `Lgb/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b2290.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b2296.  return @kind void;
}
procedure `java.lang.Boolean` `i`(`gb.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgb/b;.i:(Ljava/lang/String;)Ljava/lang/Boolean;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b2170.  call temp:= `a`(v1, v2) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b2176.  v2:= temp @kind object;
  #L2b2178.  v0:= instanceof @variable v2 @type ^`java.lang.Boolean` @kind boolean;
  #L2b217c.  if v0 == 0 then goto L2b2186;
  #L2b2180.  v2:= (`java.lang.Boolean`) v2 @kind object;
  #L2b2184.  return v2 @kind object;
  #L2b2186.  v2:= 0I;
  #L2b2188.  return v2 @kind object;
}
procedure `java.lang.String` `k`(`gb.b` v1 @kind this) @signature `Lgb/b;.k:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b21e0.  v0:= "sql" @kind object;
  #L2b21e4.  call temp:= `a`(v1, v0) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b21ea.  v0:= temp @kind object;
  #L2b21ec.  v0:= (`java.lang.String`) v0 @kind object;
  #L2b21f0.  return v0 @kind object;
}
procedure `java.util.List` `l`(`gb.b` v1 @kind this) @signature `Lgb/b;.l:()Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2b226c.  v0:= "arguments" @kind object;
  #L2b2270.  call temp:= `a`(v1, v0) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b2276.  v0:= temp @kind object;
  #L2b2278.  v0:= (`java.util.List`) v0 @kind object;
  #L2b227c.  return v0 @kind object;
}
procedure `eb.t` `b`(`gb.b` v3 @kind this) @signature `Lgb/b;.b:()Leb/t;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2144.  v0:= new `eb.t`;
  #L2b2148.  call temp:= `k`(v3) @signature `Lgb/b;.k:()Ljava/lang/String;` @kind direct;
  #L2b214e.  v1:= temp @kind object;
  #L2b2150.  call temp:= `l`(v3) @signature `Lgb/b;.l:()Ljava/util/List;` @kind direct;
  #L2b2156.  v2:= temp @kind object;
  #L2b2158.  call `<init>`(v0, v1, v2) @signature `Leb/t;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L2b215e.  return v0 @kind object;
}
procedure `boolean` `c`(`gb.b` v2 @kind this) @signature `Lgb/b;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b20e4.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2b20e8.  v1:= "noResult" @kind object;
  #L2b20ec.  call temp:= `a`(v2, v1) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b20f2.  v1:= temp @kind object;
  #L2b20f4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b20fa.  v0:= temp;
  #L2b20fc.  return v0;
}
procedure `java.lang.Integer` `d`(`gb.b` v1 @kind this) @signature `Lgb/b;.d:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b21bc.  v0:= "transactionId" @kind object;
  #L2b21c0.  call temp:= `a`(v1, v0) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b21c6.  v0:= temp @kind object;
  #L2b21c8.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b21cc.  return v0 @kind object;
}
procedure `boolean` `e`(`gb.b` v1 @kind this) @signature `Lgb/b;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2110.  v0:= "transactionId" @kind object;
  #L2b2114.  call temp:= `g`(v1, v0) @signature `Lgb/e;.g:(Ljava/lang/String;)Z` @kind interface;
  #L2b211a.  v0:= temp;
  #L2b211c.  if v0 == 0 then goto L2b2130;
  #L2b2120.  call temp:= `d`(v1) @signature `Lgb/b;.d:()Ljava/lang/Integer;` @kind virtual;
  #L2b2126.  v0:= temp @kind object;
  #L2b2128.  if v0 != 0 then goto L2b2130;
  #L2b212c.  v0:= 1I;
  #L2b212e.  goto L2b2132;
  #L2b2130.  v0:= 0I;
  #L2b2132.  return v0;
}
procedure `java.lang.Boolean` `h`(`gb.b` v1 @kind this) @signature `Lgb/b;.h:()Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b219c.  v0:= "inTransaction" @kind object;
  #L2b21a0.  call temp:= `i`(v1, v0) @signature `Lgb/b;.i:(Ljava/lang/String;)Ljava/lang/Boolean;` @kind direct;
  #L2b21a6.  v0:= temp @kind object;
  #L2b21a8.  return v0 @kind object;
}
procedure `boolean` `j`(`gb.b` v2 @kind this) @signature `Lgb/b;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b20b8.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2b20bc.  v1:= "continueOnError" @kind object;
  #L2b20c0.  call temp:= `a`(v2, v1) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2b20c6.  v1:= temp @kind object;
  #L2b20c8.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b20ce.  v0:= temp;
  #L2b20d0.  return v0;
}
procedure `java.lang.String` `toString`(`gb.b` v3 @kind this) @signature `Lgb/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b2204.  v0:= new `java.lang.StringBuilder`;
  #L2b2208.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b220e.  v1:= "" @kind object;
  #L2b2212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2218.  call temp:= `f`(v3) @signature `Lgb/e;.f:()Ljava/lang/String;` @kind interface;
  #L2b221e.  v1:= temp @kind object;
  #L2b2220.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2226.  v1:= " " @kind object;
  #L2b222a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2230.  call temp:= `k`(v3) @signature `Lgb/b;.k:()Ljava/lang/String;` @kind direct;
  #L2b2236.  v2:= temp @kind object;
  #L2b2238.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b223e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2244.  call temp:= `l`(v3) @signature `Lgb/b;.l:()Ljava/util/List;` @kind direct;
  #L2b224a.  v1:= temp @kind object;
  #L2b224c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2252.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b2258.  v0:= temp @kind object;
  #L2b225a.  return v0 @kind object;
}
