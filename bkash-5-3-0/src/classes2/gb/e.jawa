record `gb.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `gb.f` @kind interface {
}
procedure `java.lang.Object` `a`(`java.lang.String` v0 @kind object) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `eb.t` `b`() @signature `Lgb/e;.b:()Leb/t;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`() @signature `Lgb/e;.c:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Integer` `d`() @signature `Lgb/e;.d:()Ljava/lang/Integer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`() @signature `Lgb/e;.e:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `f`() @signature `Lgb/e;.f:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `g`(`java.lang.String` v0 @kind object) @signature `Lgb/e;.g:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Boolean` `h`() @signature `Lgb/e;.h:()Ljava/lang/Boolean;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
