record `gb.d` @kind class @AccessFlag PUBLIC extends `gb.a` @kind class {
  `gb.d$a` `gb.d.a` @AccessFlag PUBLIC_FINAL;
  `io.flutter.plugin.common.k` `gb.d.b` @AccessFlag FINAL;
}
procedure `void` `<init>`(`gb.d` v0 @kind this, `io.flutter.plugin.common.k` v1 @kind object, `io.flutter.plugin.common.l$d` v2 @kind object) @signature `Lgb/d;.<init>:(Lio/flutter/plugin/common/k;Lio/flutter/plugin/common/l$d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b25a0.  call `<init>`(v0) @signature `Lgb/a;.<init>:()V` @kind direct;
  #L2b25a6.  v0.`gb.d.b` @type ^`io.flutter.plugin.common.k` := v1 @kind object;
  #L2b25aa.  v1:= new `gb.d$a`;
  #L2b25ae.  call `<init>`(v1, v0, v2) @signature `Lgb/d$a;.<init>:(Lgb/d;Lio/flutter/plugin/common/l$d;)V` @kind direct;
  #L2b25b4.  v0.`gb.d.a` @type ^`gb.d$a` := v1 @kind object;
  #L2b25b8.  return @kind void;
}
procedure `java.lang.Object` `a`(`gb.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgb/d;.a:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2564.  v0:= v1.`gb.d.b` @type ^`io.flutter.plugin.common.k` @kind object;
  #L2b2568.  call temp:= `a`(v0, v2) @signature `Lio/flutter/plugin/common/k;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2b256e.  v2:= temp @kind object;
  #L2b2570.  return v2 @kind object;
}
procedure `java.lang.String` `f`(`gb.d` v1 @kind this) @signature `Lgb/d;.f:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2584.  v0:= v1.`gb.d.b` @type ^`io.flutter.plugin.common.k` @kind object;
  #L2b2588.  v0:= v0.`io.flutter.plugin.common.k.a` @type ^`java.lang.String` @kind object;
  #L2b258c.  return v0 @kind object;
}
procedure `boolean` `g`(`gb.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lgb/d;.g:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b252c.  v0:= v1.`gb.d.b` @type ^`io.flutter.plugin.common.k` @kind object;
  #L2b2530.  call temp:= `c`(v0, v2) @signature `Lio/flutter/plugin/common/k;.c:(Ljava/lang/String;)Z` @kind virtual;
  #L2b2536.  v2:= temp;
  #L2b2538.  return v2;
}
procedure `gb.f` `m`(`gb.d` v1 @kind this) @signature `Lgb/d;.m:()Lgb/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b254c.  v0:= v1.`gb.d.a` @type ^`gb.d$a` @kind object;
  #L2b2550.  return v0 @kind object;
}
