record `gb.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `gb.b` @kind class {
}
procedure `void` `<init>`(`gb.a` v0 @kind this) @signature `Lgb/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b2060.  call `<init>`(v0) @signature `Lgb/b;.<init>:()V` @kind direct;
  #L2b2066.  return @kind void;
}
procedure `void` `error`(`gb.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lgb/a;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2078.  call temp:= `m`(v1) @signature `Lgb/a;.m:()Lgb/f;` @kind virtual;
  #L2b207e.  v0:= temp @kind object;
  #L2b2080.  call `error`(v0, v2, v3, v4) @signature `Lgb/f;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2b2086.  return @kind void;
}
procedure `gb.f` `m`() @signature `Lgb/a;.m:()Lgb/f;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `success`(`gb.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lgb/a;.success:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b2098.  call temp:= `m`(v1) @signature `Lgb/a;.m:()Lgb/f;` @kind virtual;
  #L2b209e.  v0:= temp @kind object;
  #L2b20a0.  call `success`(v0, v2) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2b20a6.  return @kind void;
}
