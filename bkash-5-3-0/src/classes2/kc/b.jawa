record `kc.b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `kc.b.strValue` @AccessFlag PRIVATE_FINAL;
}
global `kc.b` `@@kc.b.auto` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kc.b`[] `@@kc.b.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `kc.b` `@@kc.b.locked` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lkc/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L304414.  v0:= new `kc.b`;
  #L304418.  v1:= "auto" @kind object;
  #L30441c.  v2:= 0I;
  #L30441e.  call `<init>`(v0, v1, v2, v1) @signature `Lkc/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L304424.  `@@kc.b.auto` @type ^`kc.b` := v0 @kind object;
  #L304428.  v1:= new `kc.b`;
  #L30442c.  v3:= "locked" @kind object;
  #L304430.  v4:= 1I;
  #L304432.  call `<init>`(v1, v3, v4, v3) @signature `Lkc/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L304438.  `@@kc.b.locked` @type ^`kc.b` := v1 @kind object;
  #L30443c.  v3:= 2I;
  #L30443e.  v3:= new `kc.b`[v3];
  #L304442.  v3[v2]:= v0 @kind object;
  #L304446.  v3[v4]:= v1 @kind object;
  #L30444a.  `@@kc.b.g` @type ^`kc.b`[] := v3 @kind object;
  #L30444e.  return @kind void;
}
procedure `void` `<init>`(`kc.b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lkc/b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L304460.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L304466.  v0.`kc.b.strValue` @type ^`java.lang.String` := v3 @kind object;
  #L30446a.  return @kind void;
}
procedure `kc.b` `getValueForString`(`java.lang.String` v5 @kind object) @signature `Lkc/b;.getValueForString:(Ljava/lang/String;)Lkc/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30438c.  call temp:= `values`() @signature `Lkc/b;.values:()[Lkc/b;` @kind static;
  #L304392.  v0:= temp @kind object;
  #L304394.  v1:= length @variable v0;
  #L304396.  v2:= 0I;
  #L304398.  if v2 >= v1 then goto L3043b8;
  #L30439c.  v3:= v0[v2] @kind object;
  #L3043a0.  v4:= v3.`kc.b.strValue` @type ^`java.lang.String` @kind object;
  #L3043a4.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3043aa.  v4:= temp;
  #L3043ac.  if v4 == 0 then goto L3043b2;
  #L3043b0.  return v3 @kind object;
  #L3043b2.  v2:= v2 + 1;
  #L3043b6.  goto L304398;
  #L3043b8.  v5:= 0I;
  #L3043ba.  return v5 @kind object;
}
procedure `kc.b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkc/b;.valueOf:(Ljava/lang/String;)Lkc/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3043cc.  v0:= constclass @type ^`kc.b` @kind object;
  #L3043d0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3043d6.  v1:= temp @kind object;
  #L3043d8.  v1:= (`kc.b`) v1 @kind object;
  #L3043dc.  return v1 @kind object;
}
procedure `kc.b`[] `values`() @signature `Lkc/b;.values:()[Lkc/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3043f0.  v0:= `@@kc.b.g` @type ^`kc.b`[] @kind object;
  #L3043f4.  call temp:= `clone`(v0) @signature `[Lkc/b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3043fa.  v0:= temp @kind object;
  #L3043fc.  v0:= (`kc.b`[]) v0 @kind object;
  #L304400.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kc.b` v1 @kind this) @signature `Lkc/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304374.  v0:= v1.`kc.b.strValue` @type ^`java.lang.String` @kind object;
  #L304378.  return v0 @kind object;
}
