record `be.a$d` @kind class @AccessFlag PUBLIC_FINAL extends `kotlinx.coroutines.internal.r$a` @kind class {
  `be.a` `be.a$d.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`be.a$d` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object, `be.a` v2 @kind object) @signature `Lbe/a$d;.<init>:(Lkotlinx/coroutines/internal/r;Lbe/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10f49c.  v0.`be.a$d.d` @type ^`be.a` := v2 @kind object;
  #L10f4a0.  call `<init>`(v0, v1) @signature `Lkotlinx/coroutines/internal/r$a;.<init>:(Lkotlinx/coroutines/internal/r;)V` @kind direct;
  #L10f4a6.  return @kind void;
}
procedure `java.lang.Object` `g`(`be.a$d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lbe/a$d;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L10f44c.  v1:= (`kotlinx.coroutines.internal.r`) v1 @kind object;
  #L10f450.  call temp:= `i`(v0, v1) @signature `Lbe/a$d;.i:(Lkotlinx/coroutines/internal/r;)Ljava/lang/Object;` @kind virtual;
  #L10f456.  v1:= temp @kind object;
  #L10f458.  return v1 @kind object;
}
procedure `java.lang.Object` `i`(`be.a$d` v0 @kind this, `kotlinx.coroutines.internal.r` v1 @kind object) @signature `Lbe/a$d;.i:(Lkotlinx/coroutines/internal/r;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L10f46c.  v1:= v0.`be.a$d.d` @type ^`be.a` @kind object;
  #L10f470.  call temp:= `s`(v1) @signature `Lbe/a;.s:()Z` @kind virtual;
  #L10f476.  v1:= temp;
  #L10f478.  if v1 == 0 then goto L10f480;
  #L10f47c.  v1:= 0I;
  #L10f47e.  goto L10f488;
  #L10f480.  call temp:= `a`() @signature `Lkotlinx/coroutines/internal/q;.a:()Ljava/lang/Object;` @kind static;
  #L10f486.  v1:= temp @kind object;
  #L10f488.  return v1 @kind object;
}
