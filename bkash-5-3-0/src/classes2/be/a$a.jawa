record `be.a$a` @kind class @AccessFlag FINAL extends `be.g` @kind interface {
  `be.a` `be.a$a.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `be.a$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`be.a$a` v0 @kind this, `be.a` v1 @kind object) @signature `Lbe/a$a;.<init>:(Lbe/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L10f1dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10f1e2.  v0.`be.a$a.a` @type ^`be.a` := v1 @kind object;
  #L10f1e6.  v1:= `@@be.b.d` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L10f1ea.  v0.`be.a$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10f1ee.  return @kind void;
}
procedure `boolean` `b`(`be.a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lbe/a$a;.b:(Ljava/lang/Object;)Z` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L10efe8.  v0:= instanceof @variable v2 @type ^`be.j` @kind boolean;
  #L10efec.  if v0 == 0 then goto L10f012;
  #L10eff0.  v2:= (`be.j`) v2 @kind object;
  #L10eff4.  v0:= v2.`be.j.j` @type ^`java.lang.Throwable` @kind object;
  #L10eff8.  if v0 != 0 then goto L10f000;
  #L10effc.  v2:= 0I;
  #L10effe.  return v2;
  #L10f000.  call temp:= `C`(v2) @signature `Lbe/j;.C:()Ljava/lang/Throwable;` @kind virtual;
  #L10f006.  v2:= temp @kind object;
  #L10f008.  call temp:= `k`(v2) @signature `Lkotlinx/coroutines/internal/e0;.k:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L10f00e.  v2:= temp @kind object;
  #L10f010.  throw v2;
  #L10f012.  v2:= 1I;
  #L10f014.  return v2;
}
procedure `java.lang.Object` `c`(`be.a$a` v5 @kind this, `kotlin.coroutines.d` v6 @kind object) @signature `Lbe/a$a;.c:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L10f088.  call temp:= `c`(v6) @signature `Lkotlin/coroutines/intrinsics/b;.c:(Lkotlin/coroutines/d;)Lkotlin/coroutines/d;` @kind static;
  #L10f08e.  v0:= temp @kind object;
  #L10f090.  call temp:= `b`(v0) @signature `Lkotlinx/coroutines/o;.b:(Lkotlin/coroutines/d;)Lkotlinx/coroutines/m;` @kind static;
  #L10f096.  v0:= temp @kind object;
  #L10f098.  v1:= new `be.a$b`;
  #L10f09c.  call `<init>`(v1, v5, v0) @signature `Lbe/a$b;.<init>:(Lbe/a$a;Lkotlinx/coroutines/l;)V` @kind direct;
  #L10f0a2.  v2:= v5.`be.a$a.a` @type ^`be.a` @kind object;
  #L10f0a6.  call temp:= `n`(v2, v1) @signature `Lbe/a;.n:(Lbe/a;Lbe/o;)Z` @kind static;
  #L10f0ac.  v2:= temp;
  #L10f0ae.  if v2 == 0 then goto L10f0be;
  #L10f0b2.  v2:= v5.`be.a$a.a` @type ^`be.a` @kind object;
  #L10f0b6.  call `o`(v2, v0, v1) @signature `Lbe/a;.o:(Lbe/a;Lkotlinx/coroutines/l;Lbe/o;)V` @kind static;
  #L10f0bc.  goto L10f15e;
  #L10f0be.  v2:= v5.`be.a$a.a` @type ^`be.a` @kind object;
  #L10f0c2.  call temp:= `v`(v2) @signature `Lbe/a;.v:()Ljava/lang/Object;` @kind virtual;
  #L10f0c8.  v2:= temp @kind object;
  #L10f0ca.  call `d`(v5, v2) @signature `Lbe/a$a;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L10f0d0.  v3:= instanceof @variable v2 @type ^`be.j` @kind boolean;
  #L10f0d4.  if v3 == 0 then goto L10f126;
  #L10f0d8.  v2:= (`be.j`) v2 @kind object;
  #L10f0dc.  v1:= v2.`be.j.j` @type ^`java.lang.Throwable` @kind object;
  #L10f0e0.  if v1 != 0 then goto L10f102;
  #L10f0e4.  v1:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L10f0e8.  v1:= 0I;
  #L10f0ea.  call temp:= `a`(v1) @signature `Lkotlin/coroutines/jvm/internal/b;.a:(Z)Ljava/lang/Boolean;` @kind static;
  #L10f0f0.  v1:= temp @kind object;
  #L10f0f2.  call temp:= `constructor-impl`(v1) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10f0f8.  v1:= temp @kind object;
  #L10f0fa.  call `resumeWith`(v0, v1) @signature `Lkotlin/coroutines/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L10f100.  goto L10f15e;
  #L10f102.  v1:= `@@od.n.Companion` @type ^`od.n$a` @kind object;
  #L10f106.  call temp:= `C`(v2) @signature `Lbe/j;.C:()Ljava/lang/Throwable;` @kind virtual;
  #L10f10c.  v1:= temp @kind object;
  #L10f10e.  call temp:= `a`(v1) @signature `Lod/o;.a:(Ljava/lang/Throwable;)Ljava/lang/Object;` @kind static;
  #L10f114.  v1:= temp @kind object;
  #L10f116.  call temp:= `constructor-impl`(v1) @signature `Lod/n;.constructor-impl:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10f11c.  v1:= temp @kind object;
  #L10f11e.  call `resumeWith`(v0, v1) @signature `Lkotlin/coroutines/d;.resumeWith:(Ljava/lang/Object;)V` @kind interface;
  #L10f124.  goto L10f15e;
  #L10f126.  v3:= `@@be.b.d` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L10f12a.  if v2 == v3 then goto L10f0a2;
  #L10f12e.  v1:= 1I;
  #L10f130.  call temp:= `a`(v1) @signature `Lkotlin/coroutines/jvm/internal/b;.a:(Z)Ljava/lang/Boolean;` @kind static;
  #L10f136.  v1:= temp @kind object;
  #L10f138.  v3:= v5.`be.a$a.a` @type ^`be.a` @kind object;
  #L10f13c.  v3:= v3.`be.c.b` @type ^`wd.l` @kind object;
  #L10f140.  if v3 == 0 then goto L10f156;
  #L10f144.  call temp:= `getContext`(v0) @signature `Lkotlin/coroutines/d;.getContext:()Lkotlin/coroutines/g;` @kind interface;
  #L10f14a.  v4:= temp @kind object;
  #L10f14c.  call temp:= `a`(v3, v2, v4) @signature `Lkotlinx/coroutines/internal/z;.a:(Lwd/l;Ljava/lang/Object;Lkotlin/coroutines/g;)Lwd/l;` @kind static;
  #L10f152.  v2:= temp @kind object;
  #L10f154.  goto L10f158;
  #L10f156.  v2:= 0I;
  #L10f158.  call `f`(v0, v1, v2) @signature `Lkotlinx/coroutines/l;.f:(Ljava/lang/Object;Lwd/l;)V` @kind interface;
  #L10f15e.  call temp:= `x`(v0) @signature `Lkotlinx/coroutines/m;.x:()Ljava/lang/Object;` @kind virtual;
  #L10f164.  v0:= temp @kind object;
  #L10f166.  call temp:= `d`() @signature `Lkotlin/coroutines/intrinsics/b;.d:()Ljava/lang/Object;` @kind static;
  #L10f16c.  v1:= temp @kind object;
  #L10f16e.  if v0 != v1 then goto L10f178;
  #L10f172.  call `c`(v6) @signature `Lkotlin/coroutines/jvm/internal/g;.c:(Lkotlin/coroutines/d;)V` @kind static;
  #L10f178.  return v0 @kind object;
}
procedure `java.lang.Object` `a`(`be.a$a` v2 @kind this, `kotlin.coroutines.d` v3 @kind object) @signature `Lbe/a$a;.a:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L10f028.  v0:= v2.`be.a$a.b` @type ^`java.lang.Object` @kind object;
  #L10f02c.  v1:= `@@be.b.d` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L10f030.  if v0 == v1 then goto L10f046;
  #L10f034.  call temp:= `b`(v2, v0) @signature `Lbe/a$a;.b:(Ljava/lang/Object;)Z` @kind direct;
  #L10f03a.  v3:= temp;
  #L10f03c.  call temp:= `a`(v3) @signature `Lkotlin/coroutines/jvm/internal/b;.a:(Z)Ljava/lang/Boolean;` @kind static;
  #L10f042.  v3:= temp @kind object;
  #L10f044.  return v3 @kind object;
  #L10f046.  v0:= v2.`be.a$a.a` @type ^`be.a` @kind object;
  #L10f04a.  call temp:= `v`(v0) @signature `Lbe/a;.v:()Ljava/lang/Object;` @kind virtual;
  #L10f050.  v0:= temp @kind object;
  #L10f052.  v2.`be.a$a.b` @type ^`java.lang.Object` := v0 @kind object;
  #L10f056.  if v0 == v1 then goto L10f06c;
  #L10f05a.  call temp:= `b`(v2, v0) @signature `Lbe/a$a;.b:(Ljava/lang/Object;)Z` @kind direct;
  #L10f060.  v3:= temp;
  #L10f062.  call temp:= `a`(v3) @signature `Lkotlin/coroutines/jvm/internal/b;.a:(Z)Ljava/lang/Boolean;` @kind static;
  #L10f068.  v3:= temp @kind object;
  #L10f06a.  return v3 @kind object;
  #L10f06c.  call temp:= `c`(v2, v3) @signature `Lbe/a$a;.c:(Lkotlin/coroutines/d;)Ljava/lang/Object;` @kind direct;
  #L10f072.  v3:= temp @kind object;
  #L10f074.  return v3 @kind object;
}
procedure `void` `d`(`be.a$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lbe/a$a;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;

  #L10f200.  v0.`be.a$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10f204.  return @kind void;
}
procedure `java.lang.Object` `next`(`be.a$a` v2 @kind this) @signature `Lbe/a$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L10f18c.  v0:= v2.`be.a$a.b` @type ^`java.lang.Object` @kind object;
  #L10f190.  v1:= instanceof @variable v0 @type ^`be.j` @kind boolean;
  #L10f194.  if v1 != 0 then goto L10f1b6;
  #L10f198.  v1:= `@@be.b.d` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L10f19c.  if v0 == v1 then goto L10f1a6;
  #L10f1a0.  v2.`be.a$a.b` @type ^`java.lang.Object` := v1 @kind object;
  #L10f1a4.  return v0 @kind object;
  #L10f1a6.  v0:= new `java.lang.IllegalStateException`;
  #L10f1aa.  v1:= "'hasNext' should be called prior to 'next' invocation" @kind object;
  #L10f1ae.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L10f1b4.  throw v0;
  #L10f1b6.  v0:= (`be.j`) v0 @kind object;
  #L10f1ba.  call temp:= `C`(v0) @signature `Lbe/j;.C:()Ljava/lang/Throwable;` @kind virtual;
  #L10f1c0.  v0:= temp @kind object;
  #L10f1c2.  call temp:= `k`(v0) @signature `Lkotlinx/coroutines/internal/e0;.k:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind static;
  #L10f1c8.  v0:= temp @kind object;
  #L10f1ca.  throw v0;
}
