record `be.h` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `be.f` `a`(`int` v2 , `be.e` v3 @kind object, `wd.l` v4 @kind object) @signature `Lbe/h;.a:(ILbe/e;Lwd/l;)Lbe/f;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L11049c.  v0:= -2I;
  #L11049e.  v1:= 1I;
  #L1104a0.  if v2 == v0 then goto L11053e;
  #L1104a4.  v0:= -1I;
  #L1104a6.  if v2 == v0 then goto L11050a;
  #L1104aa.  if v2 == 0 then goto L1104ea;
  #L1104ae.  v0:= 2147483647I;
  #L1104b4.  if v2 == v0 then goto L1104de;
  #L1104b8.  if v2 != v1 then goto L1104d0;
  #L1104bc.  v0:= `@@be.e.DROP_OLDEST` @type ^`be.e` @kind object;
  #L1104c0.  if v3 != v0 then goto L1104d0;
  #L1104c4.  v2:= new `be.m`;
  #L1104c8.  call `<init>`(v2, v4) @signature `Lbe/m;.<init>:(Lwd/l;)V` @kind direct;
  #L1104ce.  goto L11055c;
  #L1104d0.  v0:= new `be.d`;
  #L1104d4.  call `<init>`(v0, v2, v3, v4) @signature `Lbe/d;.<init>:(ILbe/e;Lwd/l;)V` @kind direct;
  #L1104da.  v2:= v0 @kind object;
  #L1104dc.  goto L11055c;
  #L1104de.  v2:= new `be.n`;
  #L1104e2.  call `<init>`(v2, v4) @signature `Lbe/n;.<init>:(Lwd/l;)V` @kind direct;
  #L1104e8.  goto L11055c;
  #L1104ea.  v2:= `@@be.e.SUSPEND` @type ^`be.e` @kind object;
  #L1104ee.  if v3 != v2 then goto L1104fe;
  #L1104f2.  v2:= new `be.r`;
  #L1104f6.  call `<init>`(v2, v4) @signature `Lbe/r;.<init>:(Lwd/l;)V` @kind direct;
  #L1104fc.  goto L11055c;
  #L1104fe.  v2:= new `be.d`;
  #L110502.  call `<init>`(v2, v1, v3, v4) @signature `Lbe/d;.<init>:(ILbe/e;Lwd/l;)V` @kind direct;
  #L110508.  goto L11055c;
  #L11050a.  v2:= `@@be.e.SUSPEND` @type ^`be.e` @kind object;
  #L11050e.  if v3 != v2 then goto L110514;
  #L110512.  goto L110516;
  #L110514.  v1:= 0I;
  #L110516.  if v1 == 0 then goto L110526;
  #L11051a.  v2:= new `be.m`;
  #L11051e.  call `<init>`(v2, v4) @signature `Lbe/m;.<init>:(Lwd/l;)V` @kind direct;
  #L110524.  goto L11055c;
  #L110526.  v2:= new `java.lang.IllegalArgumentException`;
  #L11052a.  v3:= "CONFLATED capacity cannot be used with non-default onBufferOverflow" @kind object;
  #L11052e.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L110534.  v3:= temp @kind object;
  #L110536.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11053c.  throw v2;
  #L11053e.  v2:= new `be.d`;
  #L110542.  v0:= `@@be.e.SUSPEND` @type ^`be.e` @kind object;
  #L110546.  if v3 != v0 then goto L110556;
  #L11054a.  v0:= `@@be.f.a` @type ^`be.f$a` @kind object;
  #L11054e.  call temp:= `a`(v0) @signature `Lbe/f$a;.a:()I` @kind virtual;
  #L110554.  v1:= temp;
  #L110556.  call `<init>`(v2, v1, v3, v4) @signature `Lbe/d;.<init>:(ILbe/e;Lwd/l;)V` @kind direct;
  #L11055c.  return v2 @kind object;
}
procedure `be.f` `b`(`int` v0 , `be.e` v1 @kind object, `wd.l` v2 @kind object, `int` v3 , `java.lang.Object` v4 @kind object) @signature `Lbe/h;.b:(ILbe/e;Lwd/l;ILjava/lang/Object;)Lbe/f;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L110460.  v4:= v3 ^& 1;
  #L110464.  if v4 == 0 then goto L11046a;
  #L110468.  v0:= 0I;
  #L11046a.  v4:= v3 ^& 2;
  #L11046e.  if v4 == 0 then goto L110476;
  #L110472.  v1:= `@@be.e.SUSPEND` @type ^`be.e` @kind object;
  #L110476.  v3:= v3 ^& 4;
  #L11047a.  if v3 == 0 then goto L110480;
  #L11047e.  v2:= 0I;
  #L110480.  call temp:= `a`(v0, v1, v2) @signature `Lbe/h;.a:(ILbe/e;Lwd/l;)Lbe/f;` @kind static;
  #L110486.  v0:= temp @kind object;
  #L110488.  return v0 @kind object;
}
