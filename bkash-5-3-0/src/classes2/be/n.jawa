record `be.n` @kind class @AccessFlag PUBLIC extends `be.a` @kind class {
}
procedure `void` `<init>`(`be.n` v0 @kind this, `wd.l` v1 @kind object) @signature `Lbe/n;.<init>:(Lwd/l;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L110c8c.  call `<init>`(v0, v1) @signature `Lbe/a;.<init>:(Lwd/l;)V` @kind direct;
  #L110c92.  return @kind void;
}
procedure `java.lang.Object` `i`(`be.n` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lbe/n;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L110c08.  call temp:= `i`(v3, v4) @signature `Lbe/c;.i:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L110c0e.  v0:= temp @kind object;
  #L110c10.  v1:= `@@be.b.b` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L110c14.  if v0 != v1 then goto L110c1a;
  #L110c18.  return v1 @kind object;
  #L110c1a.  v2:= `@@be.b.c` @type ^`kotlinx.coroutines.internal.f0` @kind object;
  #L110c1e.  if v0 != v2 then goto L110c3a;
  #L110c22.  call temp:= `k`(v3, v4) @signature `Lbe/c;.k:(Ljava/lang/Object;)Lbe/q;` @kind virtual;
  #L110c28.  v0:= temp @kind object;
  #L110c2a.  if v0 != 0 then goto L110c30;
  #L110c2e.  return v1 @kind object;
  #L110c30.  v1:= instanceof @variable v0 @type ^`be.j` @kind boolean;
  #L110c34.  if v1 == 0 then goto L110c08;
  #L110c38.  return v0 @kind object;
  #L110c3a.  v4:= instanceof @variable v0 @type ^`be.j` @kind boolean;
  #L110c3e.  if v4 == 0 then goto L110c44;
  #L110c42.  return v0 @kind object;
  #L110c44.  v4:= new `java.lang.IllegalStateException`;
  #L110c48.  v1:= new `java.lang.StringBuilder`;
  #L110c4c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L110c52.  v2:= "Invalid offerInternal result " @kind object;
  #L110c56.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L110c5c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L110c62.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L110c68.  v0:= temp @kind object;
  #L110c6a.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L110c70.  v0:= temp @kind object;
  #L110c72.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L110c78.  throw v4;
}
procedure `boolean` `r`(`be.n` v1 @kind this) @signature `Lbe/n;.r:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L110be0.  v0:= 1I;
  #L110be2.  return v0;
}
procedure `boolean` `s`(`be.n` v1 @kind this) @signature `Lbe/n;.s:()Z` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;

  #L110bf4.  v0:= 1I;
  #L110bf6.  return v0;
}
