record `q7.a$a` @kind class @AccessFlag PUBLIC {
  `q7.b` `q7.a$a.a` @AccessFlag PRIVATE_FINAL;
  `q7.a` `q7.a$a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q7.a$a` v2 @kind this, `android.content.Context` v3 @kind object, `q7.b` v4 @kind object) @signature `Lq7/a$a;.<init>:(Landroid/content/Context;Lq7/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L36e494.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36e49a.  v0:= new `q7.a`;
  #L36e49e.  v1:= 0I;
  #L36e4a0.  call `<init>`(v0, v1) @signature `Lq7/a;.<init>:(Lq7/e;)V` @kind direct;
  #L36e4a6.  v2.`q7.a$a.b` @type ^`q7.a` := v0 @kind object;
  #L36e4aa.  if v3 == 0 then goto L36e4ce;
  #L36e4ae.  if v4 == 0 then goto L36e4be;
  #L36e4b2.  v2.`q7.a$a.a` @type ^`q7.b` := v4 @kind object;
  #L36e4b6.  call temp:= `e`(v0, v3) @signature `Lq7/a;.e:(Lq7/a;Landroid/content/Context;)Landroid/content/Context;` @kind static;
  #L36e4bc.  return @kind void;
  #L36e4be.  v3:= new `java.lang.IllegalArgumentException`;
  #L36e4c2.  v4:= "No detector supplied." @kind object;
  #L36e4c6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36e4cc.  throw v3;
  #L36e4ce.  v3:= new `java.lang.IllegalArgumentException`;
  #L36e4d2.  v4:= "No context supplied." @kind object;
  #L36e4d6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36e4dc.  throw v3;
}
procedure `q7.a` `a`(`q7.a$a` v3 @kind this) @signature `Lq7/a$a;.a:()Lq7/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36e310.  v0:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e314.  v1:= new `q7.a$b`;
  #L36e318.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L36e31e.  v2:= v3.`q7.a$a.a` @type ^`q7.b` @kind object;
  #L36e322.  call `<init>`(v1, v0, v2) @signature `Lq7/a$b;.<init>:(Lq7/a;Lq7/b;)V` @kind direct;
  #L36e328.  call temp:= `g`(v0, v1) @signature `Lq7/a;.g:(Lq7/a;Lq7/a$b;)Lq7/a$b;` @kind static;
  #L36e32e.  v0:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e332.  return v0 @kind object;
}
procedure `q7.a$a` `b`(`q7.a$a` v1 @kind this, `boolean` v2 ) @signature `Lq7/a$a;.b:(Z)Lq7/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36e344.  v0:= v1.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e348.  call temp:= `h`(v0, v2) @signature `Lq7/a;.h:(Lq7/a;Z)Z` @kind static;
  #L36e34e.  return v1 @kind object;
}
procedure `q7.a$a` `c`(`q7.a$a` v3 @kind this, `int` v4 ) @signature `Lq7/a$a;.c:(I)Lq7/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36e360.  if v4 == 0 then goto L36e39e;
  #L36e364.  v0:= 1I;
  #L36e366.  if v4 != v0 then goto L36e36c;
  #L36e36a.  goto L36e39e;
  #L36e36c.  v0:= new `java.lang.IllegalArgumentException`;
  #L36e370.  v1:= 27I;
  #L36e374.  v2:= new `java.lang.StringBuilder`;
  #L36e378.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L36e37e.  v1:= "Invalid camera: " @kind object;
  #L36e382.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e388.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e38e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36e394.  v4:= temp @kind object;
  #L36e396.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36e39c.  throw v0;
  #L36e39e.  v0:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e3a2.  call temp:= `l`(v0, v4) @signature `Lq7/a;.l:(Lq7/a;I)I` @kind static;
  #L36e3a8.  return v3 @kind object;
}
procedure `q7.a$a` `d`(`q7.a$a` v3 @kind this, `float` v4 ) @signature `Lq7/a$a;.d:(F)Lq7/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36e3bc.  v0:= 0I;
  #L36e3be.  v0:= fcmpg(v4, v0);
  #L36e3c2.  if v0 <= 0 then goto L36e3d2;
  #L36e3c6.  v0:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e3ca.  call temp:= `c`(v0, v4) @signature `Lq7/a;.c:(Lq7/a;F)F` @kind static;
  #L36e3d0.  return v3 @kind object;
  #L36e3d2.  v0:= new `java.lang.IllegalArgumentException`;
  #L36e3d6.  v1:= 28I;
  #L36e3da.  v2:= new `java.lang.StringBuilder`;
  #L36e3de.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L36e3e4.  v1:= "Invalid fps: " @kind object;
  #L36e3e8.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e3ee.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e3f4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36e3fa.  v4:= temp @kind object;
  #L36e3fc.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36e402.  throw v0;
}
procedure `q7.a$a` `e`(`q7.a$a` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lq7/a$a;.e:(II)Lq7/a$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36e414.  if v4 <= 0 then goto L36e440;
  #L36e418.  v0:= 1000000I;
  #L36e41e.  if v4 > v0 then goto L36e440;
  #L36e422.  if v5 <= 0 then goto L36e440;
  #L36e426.  if v5 > v0 then goto L36e440;
  #L36e42a.  v0:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e42e.  call temp:= `d`(v0, v4) @signature `Lq7/a;.d:(Lq7/a;I)I` @kind static;
  #L36e434.  v4:= v3.`q7.a$a.b` @type ^`q7.a` @kind object;
  #L36e438.  call temp:= `j`(v4, v5) @signature `Lq7/a;.j:(Lq7/a;I)I` @kind static;
  #L36e43e.  return v3 @kind object;
  #L36e440.  v0:= new `java.lang.IllegalArgumentException`;
  #L36e444.  v1:= 45I;
  #L36e448.  v2:= new `java.lang.StringBuilder`;
  #L36e44c.  call `<init>`(v2, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L36e452.  v1:= "Invalid preview size: " @kind object;
  #L36e456.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e45c.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e462.  v4:= "x" @kind object;
  #L36e466.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e46c.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36e472.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36e478.  v4:= temp @kind object;
  #L36e47a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36e480.  throw v0;
}
