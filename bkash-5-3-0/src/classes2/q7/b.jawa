record `q7.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.lang.Object` `q7.b.a` @AccessFlag PRIVATE_FINAL;
  `q7.b$b` `q7.b.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q7.b` v1 @kind this) @signature `Lq7/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36f118.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36f11e.  v0:= new `java.lang.Object`;
  #L36f122.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36f128.  v1.`q7.b.a` @type ^`java.lang.Object` := v0 @kind object;
  #L36f12c.  return @kind void;
}
procedure `android.util.SparseArray` `a`(`q7.c` v0 @kind object) @signature `Lq7/b;.a:(Lq7/c;)Landroid/util/SparseArray;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`q7.b` v1 @kind this) @signature `Lq7/b;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36f104.  v0:= 1I;
  #L36f106.  return v0;
}
procedure `void` `c`(`q7.b` v3 @kind this, `q7.c` v4 @kind object) @signature `Lq7/b;.c:(Lq7/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36f140.  v0:= new `q7.c$b`;
  #L36f144.  call temp:= `c`(v4) @signature `Lq7/c;.c:()Lq7/c$b;` @kind virtual;
  #L36f14a.  v1:= temp @kind object;
  #L36f14c.  call `<init>`(v0, v1) @signature `Lq7/c$b;.<init>:(Lq7/c$b;)V` @kind direct;
  #L36f152.  call `i`(v0) @signature `Lq7/c$b;.i:()V` @kind virtual;
  #L36f158.  call temp:= `a`(v3, v4) @signature `Lq7/b;.a:(Lq7/c;)Landroid/util/SparseArray;` @kind virtual;
  #L36f15e.  v4:= temp @kind object;
  #L36f160.  call temp:= `b`(v3) @signature `Lq7/b;.b:()Z` @kind virtual;
  #L36f166.  v1:= temp;
  #L36f168.  v2:= new `q7.b$a`;
  #L36f16c.  call `<init>`(v2, v4, v0, v1) @signature `Lq7/b$a;.<init>:(Landroid/util/SparseArray;Lq7/c$b;Z)V` @kind direct;
  #L36f172.  v4:= v3.`q7.b.a` @type ^`java.lang.Object` @kind object;
  #L36f176.  @monitorenter v4
  #L36f178.  v0:= v3.`q7.b.b` @type ^`q7.b$b` @kind object;
  #L36f17c.  if v0 == 0 then goto L36f18a;
  #L36f180.  call `a`(v0, v2) @signature `Lq7/b$b;.a:(Lq7/b$a;)V` @kind interface;
  #L36f186.  @monitorexit v4
  #L36f188.  return @kind void;
  #L36f18a.  v0:= new `java.lang.IllegalStateException`;
  #L36f18e.  v1:= "Detector processor must first be set with setProcessor in order to receive detection results." @kind object;
  #L36f192.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f198.  throw v0;
  #L36f19a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36f19c.  @monitorexit v4
  #L36f19e.  throw v0;
  catch `java.lang.Throwable` @[L36f178..L36f19e] goto L36f19a;
}
procedure `void` `d`(`q7.b` v2 @kind this, `q7.b$b` v3 @kind object) @signature `Lq7/b;.d:(Lq7/b$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36f1bc.  v0:= v2.`q7.b.a` @type ^`java.lang.Object` @kind object;
  #L36f1c0.  @monitorenter v0
  #L36f1c2.  v1:= v2.`q7.b.b` @type ^`q7.b$b` @kind object;
  #L36f1c6.  if v1 == 0 then goto L36f1d0;
  #L36f1ca.  call `release`(v1) @signature `Lq7/b$b;.release:()V` @kind interface;
  #L36f1d0.  v2.`q7.b.b` @type ^`q7.b$b` := v3 @kind object;
  #L36f1d4.  @monitorexit v0
  #L36f1d6.  return @kind void;
  #L36f1d8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36f1da.  @monitorexit v0
  #L36f1dc.  throw v3;
  catch `java.lang.Throwable` @[L36f1c2..L36f1dc] goto L36f1d8;
}
