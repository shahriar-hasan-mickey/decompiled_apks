record `q7.c$a` @kind class @AccessFlag PUBLIC {
  `q7.c` `q7.c$a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q7.c$a` v2 @kind this) @signature `Lq7/c$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L36f378.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36f37e.  v0:= new `q7.c`;
  #L36f382.  v1:= 0I;
  #L36f384.  call `<init>`(v0, v1) @signature `Lq7/c;.<init>:(Lq7/f;)V` @kind direct;
  #L36f38a.  v2.`q7.c$a.a` @type ^`q7.c` := v0 @kind object;
  #L36f38e.  return @kind void;
}
procedure `q7.c` `a`(`q7.c$a` v2 @kind this) @signature `Lq7/c$a;.a:()Lq7/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36f1fc.  v0:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f200.  call temp:= `e`(v0) @signature `Lq7/c;.e:(Lq7/c;)Ljava/nio/ByteBuffer;` @kind static;
  #L36f206.  v0:= temp @kind object;
  #L36f208.  if v0 != 0 then goto L36f238;
  #L36f20c.  v0:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f210.  call temp:= `g`(v0) @signature `Lq7/c;.g:(Lq7/c;)Landroid/graphics/Bitmap;` @kind static;
  #L36f216.  v0:= temp @kind object;
  #L36f218.  if v0 == 0 then goto L36f21e;
  #L36f21c.  goto L36f238;
  #L36f21e.  v0:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f222.  call temp:= `h`(v0) @signature `Lq7/c;.h:(Lq7/c;)Lq7/c$c;` @kind static;
  #L36f228.  v0:= new `java.lang.IllegalStateException`;
  #L36f22c.  v1:= "Missing image data.  Call either setBitmap or setImageData to specify the image" @kind object;
  #L36f230.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f236.  throw v0;
  #L36f238.  v0:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f23c.  return v0 @kind object;
}
procedure `q7.c$a` `b`(`q7.c$a` v1 @kind this, `int` v2 ) @signature `Lq7/c$a;.b:(I)Lq7/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36f250.  v0:= v1.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f254.  call temp:= `c`(v0) @signature `Lq7/c;.c:()Lq7/c$b;` @kind virtual;
  #L36f25a.  v0:= temp @kind object;
  #L36f25c.  call temp:= `l`(v0, v2) @signature `Lq7/c$b;.l:(Lq7/c$b;I)I` @kind static;
  #L36f262.  return v1 @kind object;
}
procedure `q7.c$a` `c`(`q7.c$a` v2 @kind this, `java.nio.ByteBuffer` v3 @kind object, `int` v4 , `int` v5 , `int` v6 ) @signature `Lq7/c$a;.c:(Ljava/nio/ByteBuffer;III)Lq7/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36f274.  if v3 == 0 then goto L36f310;
  #L36f278.  call temp:= `capacity`(v3) @signature `Ljava/nio/ByteBuffer;.capacity:()I` @kind virtual;
  #L36f27e.  v0:= temp;
  #L36f280.  v1:= v4 * v5 @kind int;
  #L36f284.  if v0 < v1 then goto L36f300;
  #L36f288.  v0:= 16I;
  #L36f28c.  if v6 == v0 then goto L36f2d6;
  #L36f290.  v0:= 17I;
  #L36f294.  if v6 == v0 then goto L36f2d6;
  #L36f298.  v0:= 842094169I;
  #L36f29e.  if v6 != v0 then goto L36f2a4;
  #L36f2a2.  goto L36f2d6;
  #L36f2a4.  v3:= new `java.lang.IllegalArgumentException`;
  #L36f2a8.  v4:= 37I;
  #L36f2ac.  v5:= new `java.lang.StringBuilder`;
  #L36f2b0.  call `<init>`(v5, v4) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L36f2b6.  v4:= "Unsupported image format: " @kind object;
  #L36f2ba.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2c0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L36f2c6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36f2cc.  v4:= temp @kind object;
  #L36f2ce.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f2d4.  throw v3;
  #L36f2d6.  v0:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f2da.  call temp:= `f`(v0, v3) @signature `Lq7/c;.f:(Lq7/c;Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L36f2e0.  v3:= v2.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f2e4.  call temp:= `c`(v3) @signature `Lq7/c;.c:()Lq7/c$b;` @kind virtual;
  #L36f2ea.  v3:= temp @kind object;
  #L36f2ec.  call temp:= `g`(v3, v4) @signature `Lq7/c$b;.g:(Lq7/c$b;I)I` @kind static;
  #L36f2f2.  call temp:= `j`(v3, v5) @signature `Lq7/c$b;.j:(Lq7/c$b;I)I` @kind static;
  #L36f2f8.  call temp:= `k`(v3, v6) @signature `Lq7/c$b;.k:(Lq7/c$b;I)I` @kind static;
  #L36f2fe.  return v2 @kind object;
  #L36f300.  v3:= new `java.lang.IllegalArgumentException`;
  #L36f304.  v4:= "Invalid image data size." @kind object;
  #L36f308.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f30e.  throw v3;
  #L36f310.  v3:= new `java.lang.IllegalArgumentException`;
  #L36f314.  v4:= "Null image data supplied." @kind object;
  #L36f318.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36f31e.  throw v3;
}
procedure `q7.c$a` `d`(`q7.c$a` v1 @kind this, `int` v2 ) @signature `Lq7/c$a;.d:(I)Lq7/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36f330.  v0:= v1.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f334.  call temp:= `c`(v0) @signature `Lq7/c;.c:()Lq7/c$b;` @kind virtual;
  #L36f33a.  v0:= temp @kind object;
  #L36f33c.  call temp:= `m`(v0, v2) @signature `Lq7/c$b;.m:(Lq7/c$b;I)I` @kind static;
  #L36f342.  return v1 @kind object;
}
procedure `q7.c$a` `e`(`q7.c$a` v1 @kind this, `long` v2 ) @signature `Lq7/c$a;.e:(J)Lq7/c$a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36f354.  v0:= v1.`q7.c$a.a` @type ^`q7.c` @kind object;
  #L36f358.  call temp:= `c`(v0) @signature `Lq7/c;.c:()Lq7/c$b;` @kind virtual;
  #L36f35e.  v0:= temp @kind object;
  #L36f360.  call temp:= `h`(v0, v2) @signature `Lq7/c$b;.h:(Lq7/c$b;J)J` @kind static;
  #L36f366.  return v1 @kind object;
}
