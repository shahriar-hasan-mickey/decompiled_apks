record `y9.s` @kind class @AccessFlag FINAL extends `java.lang.ref.PhantomReference` @kind class, `y9.a$a` @kind interface {
  `java.util.Set` `y9.s.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `y9.s.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`y9.s` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.ref.ReferenceQueue` v2 @kind object, `java.util.Set` v3 @kind object, `java.lang.Runnable` v4 @kind object, `y9.r` v5 @kind object) @signature `Ly9/s;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;Ljava/util/Set;Ljava/lang/Runnable;Ly9/r;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3889f4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/ref/PhantomReference;.<init>:(Ljava/lang/Object;Ljava/lang/ref/ReferenceQueue;)V` @kind direct;
  #L3889fa.  v0.`y9.s.a` @type ^`java.util.Set` := v3 @kind object;
  #L3889fe.  v0.`y9.s.b` @type ^`java.lang.Runnable` := v4 @kind object;
  #L388a02.  return @kind void;
}
procedure `void` `a`(`y9.s` v1 @kind this) @signature `Ly9/s;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L388a14.  v0:= v1.`y9.s.a` @type ^`java.util.Set` @kind object;
  #L388a18.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L388a1e.  v0:= temp;
  #L388a20.  if v0 != 0 then goto L388a26;
  #L388a24.  return @kind void;
  #L388a26.  call `clear`(v1) @signature `Ljava/lang/ref/PhantomReference;.clear:()V` @kind virtual;
  #L388a2c.  v0:= v1.`y9.s.b` @type ^`java.lang.Runnable` @kind object;
  #L388a30.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L388a36.  return @kind void;
}
