record `fe.c$a` @kind class @AccessFlag PUBLIC {
  `long` `fe.c$a.a` @AccessFlag FINAL;
  `okhttp3.e0` `fe.c$a.b` @AccessFlag FINAL;
  `okhttp3.g0` `fe.c$a.c` @AccessFlag FINAL;
  `java.util.Date` `fe.c$a.d` @AccessFlag PRIVATE;
  `java.lang.String` `fe.c$a.e` @AccessFlag PRIVATE;
  `java.util.Date` `fe.c$a.f` @AccessFlag PRIVATE;
  `java.lang.String` `fe.c$a.g` @AccessFlag PRIVATE;
  `java.util.Date` `fe.c$a.h` @AccessFlag PRIVATE;
  `long` `fe.c$a.i` @AccessFlag PRIVATE;
  `long` `fe.c$a.j` @AccessFlag PRIVATE;
  `java.lang.String` `fe.c$a.k` @AccessFlag PRIVATE;
  `int` `fe.c$a.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`fe.c$a` v3 @kind this, `long` v4 , `okhttp3.e0` v6 @kind object, `okhttp3.g0` v7 @kind object) @signature `Lfe/c$a;.<init>:(JLokhttp3/e0;Lokhttp3/g0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b0f60.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b0f66.  v0:= -1I;
  #L2b0f68.  v3.`fe.c$a.l` @type ^`int` := v0;
  #L2b0f6c.  v3.`fe.c$a.a` @type ^`long` := v4 @kind wide;
  #L2b0f70.  v3.`fe.c$a.b` @type ^`okhttp3.e0` := v6 @kind object;
  #L2b0f74.  v3.`fe.c$a.c` @type ^`okhttp3.g0` := v7 @kind object;
  #L2b0f78.  if v7 == 0 then goto L2b1054;
  #L2b0f7c.  call temp:= `Z`(v7) @signature `Lokhttp3/g0;.Z:()J` @kind virtual;
  #L2b0f82.  v4:= temp @kind wide;
  #L2b0f84.  v3.`fe.c$a.i` @type ^`long` := v4 @kind wide;
  #L2b0f88.  call temp:= `V`(v7) @signature `Lokhttp3/g0;.V:()J` @kind virtual;
  #L2b0f8e.  v4:= temp @kind wide;
  #L2b0f90.  v3.`fe.c$a.j` @type ^`long` := v4 @kind wide;
  #L2b0f94.  call temp:= `w`(v7) @signature `Lokhttp3/g0;.w:()Lokhttp3/w;` @kind virtual;
  #L2b0f9a.  v4:= temp @kind object;
  #L2b0f9c.  v5:= 0I;
  #L2b0f9e.  call temp:= `h`(v4) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2b0fa4.  v6:= temp;
  #L2b0fa6.  if v5 >= v6 then goto L2b1054;
  #L2b0faa.  call temp:= `e`(v4, v5) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L2b0fb0.  v7:= temp @kind object;
  #L2b0fb2.  call temp:= `i`(v4, v5) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2b0fb8.  v1:= temp @kind object;
  #L2b0fba.  v2:= "Date" @kind object;
  #L2b0fbe.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b0fc4.  v2:= temp;
  #L2b0fc6.  if v2 == 0 then goto L2b0fdc;
  #L2b0fca.  call temp:= `b`(v1) @signature `Lge/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L2b0fd0.  v7:= temp @kind object;
  #L2b0fd2.  v3.`fe.c$a.d` @type ^`java.util.Date` := v7 @kind object;
  #L2b0fd6.  v3.`fe.c$a.e` @type ^`java.lang.String` := v1 @kind object;
  #L2b0fda.  goto L2b104e;
  #L2b0fdc.  v2:= "Expires" @kind object;
  #L2b0fe0.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b0fe6.  v2:= temp;
  #L2b0fe8.  if v2 == 0 then goto L2b0ffa;
  #L2b0fec.  call temp:= `b`(v1) @signature `Lge/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L2b0ff2.  v7:= temp @kind object;
  #L2b0ff4.  v3.`fe.c$a.h` @type ^`java.util.Date` := v7 @kind object;
  #L2b0ff8.  goto L2b104e;
  #L2b0ffa.  v2:= "Last-Modified" @kind object;
  #L2b0ffe.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b1004.  v2:= temp;
  #L2b1006.  if v2 == 0 then goto L2b101c;
  #L2b100a.  call temp:= `b`(v1) @signature `Lge/d;.b:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L2b1010.  v7:= temp @kind object;
  #L2b1012.  v3.`fe.c$a.f` @type ^`java.util.Date` := v7 @kind object;
  #L2b1016.  v3.`fe.c$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L2b101a.  goto L2b104e;
  #L2b101c.  v2:= "ETag" @kind object;
  #L2b1020.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b1026.  v2:= temp;
  #L2b1028.  if v2 == 0 then goto L2b1032;
  #L2b102c.  v3.`fe.c$a.k` @type ^`java.lang.String` := v1 @kind object;
  #L2b1030.  goto L2b104e;
  #L2b1032.  v2:= "Age" @kind object;
  #L2b1036.  call temp:= `equalsIgnoreCase`(v2, v7) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b103c.  v7:= temp;
  #L2b103e.  if v7 == 0 then goto L2b104e;
  #L2b1042.  call temp:= `d`(v1, v0) @signature `Lge/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L2b1048.  v7:= temp;
  #L2b104a.  v3.`fe.c$a.l` @type ^`int` := v7;
  #L2b104e.  v5:= v5 + 1;
  #L2b1052.  goto L2b0fa6;
  #L2b1054.  return @kind void;
}
procedure `long` `a`(`fe.c$a` v9 @kind this) @signature `Lfe/c$a;.a:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b0e18.  v0:= v9.`fe.c$a.d` @type ^`java.util.Date` @kind object;
  #L2b0e1c.  v1:= 0L;
  #L2b0e20.  if v0 == 0 then goto L2b0e3a;
  #L2b0e24.  v3:= v9.`fe.c$a.j` @type ^`long` @kind wide;
  #L2b0e28.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L2b0e2e.  v5:= temp @kind wide;
  #L2b0e30.  v3:= v3 - v5 @kind long;
  #L2b0e32.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L2b0e38.  v1:= temp @kind wide;
  #L2b0e3a.  v0:= v9.`fe.c$a.l` @type ^`int`;
  #L2b0e3e.  v3:= -1I;
  #L2b0e40.  if v0 == v3 then goto L2b0e5a;
  #L2b0e44.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b0e48.  v4:= (`long`) v0 @kind i2l;
  #L2b0e4a.  call temp:= `toMillis`(v3, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2b0e50.  v3:= temp @kind wide;
  #L2b0e52.  call temp:= `max`(v1, v3) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L2b0e58.  v1:= temp @kind wide;
  #L2b0e5a.  v3:= v9.`fe.c$a.j` @type ^`long` @kind wide;
  #L2b0e5e.  v5:= v9.`fe.c$a.i` @type ^`long` @kind wide;
  #L2b0e62.  v5:= v3 - v5 @kind long;
  #L2b0e66.  v7:= v9.`fe.c$a.a` @type ^`long` @kind wide;
  #L2b0e6a.  v7:= v7 - v3 @kind long;
  #L2b0e6c.  v1:= v1 + v5 @kind long;
  #L2b0e6e.  v1:= v1 + v7 @kind long;
  #L2b0e70.  return v1 @kind wide;
}
procedure `long` `b`(`fe.c$a` v7 @kind this) @signature `Lfe/c$a;.b:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b0e84.  v0:= v7.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0e88.  call temp:= `i`(v0) @signature `Lokhttp3/g0;.i:()Lokhttp3/e;` @kind virtual;
  #L2b0e8e.  v0:= temp @kind object;
  #L2b0e90.  call temp:= `d`(v0) @signature `Lokhttp3/e;.d:()I` @kind virtual;
  #L2b0e96.  v1:= temp;
  #L2b0e98.  v2:= -1I;
  #L2b0e9a.  if v1 == v2 then goto L2b0eb6;
  #L2b0e9e.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b0ea2.  call temp:= `d`(v0) @signature `Lokhttp3/e;.d:()I` @kind virtual;
  #L2b0ea8.  v0:= temp;
  #L2b0eaa.  v2:= (`long`) v0 @kind i2l;
  #L2b0eac.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2b0eb2.  v0:= temp @kind wide;
  #L2b0eb4.  return v0 @kind wide;
  #L2b0eb6.  v0:= v7.`fe.c$a.h` @type ^`java.util.Date` @kind object;
  #L2b0eba.  v1:= 0L;
  #L2b0ebe.  if v0 == 0 then goto L2b0ef2;
  #L2b0ec2.  v0:= v7.`fe.c$a.d` @type ^`java.util.Date` @kind object;
  #L2b0ec6.  if v0 == 0 then goto L2b0ed4;
  #L2b0eca.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L2b0ed0.  v3:= temp @kind wide;
  #L2b0ed2.  goto L2b0ed8;
  #L2b0ed4.  v3:= v7.`fe.c$a.j` @type ^`long` @kind wide;
  #L2b0ed8.  v0:= v7.`fe.c$a.h` @type ^`java.util.Date` @kind object;
  #L2b0edc.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L2b0ee2.  v5:= temp @kind wide;
  #L2b0ee4.  v5:= v5 - v3 @kind long;
  #L2b0ee6.  v0:= lcmp(v5, v1);
  #L2b0eea.  if v0 <= 0 then goto L2b0ef0;
  #L2b0eee.  v1:= v5 @kind wide;
  #L2b0ef0.  return v1 @kind wide;
  #L2b0ef2.  v0:= v7.`fe.c$a.f` @type ^`java.util.Date` @kind object;
  #L2b0ef6.  if v0 == 0 then goto L2b0f4e;
  #L2b0efa.  v0:= v7.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0efe.  call temp:= `Y`(v0) @signature `Lokhttp3/g0;.Y:()Lokhttp3/e0;` @kind virtual;
  #L2b0f04.  v0:= temp @kind object;
  #L2b0f06.  call temp:= `h`(v0) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L2b0f0c.  v0:= temp @kind object;
  #L2b0f0e.  call temp:= `y`(v0) @signature `Lokhttp3/x;.y:()Ljava/lang/String;` @kind virtual;
  #L2b0f14.  v0:= temp @kind object;
  #L2b0f16.  if v0 != 0 then goto L2b0f4e;
  #L2b0f1a.  v0:= v7.`fe.c$a.d` @type ^`java.util.Date` @kind object;
  #L2b0f1e.  if v0 == 0 then goto L2b0f2c;
  #L2b0f22.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L2b0f28.  v3:= temp @kind wide;
  #L2b0f2a.  goto L2b0f30;
  #L2b0f2c.  v3:= v7.`fe.c$a.i` @type ^`long` @kind wide;
  #L2b0f30.  v0:= v7.`fe.c$a.f` @type ^`java.util.Date` @kind object;
  #L2b0f34.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L2b0f3a.  v5:= temp @kind wide;
  #L2b0f3c.  v3:= v3 - v5 @kind long;
  #L2b0f3e.  v0:= lcmp(v3, v1);
  #L2b0f42.  if v0 <= 0 then goto L2b0f4e;
  #L2b0f46.  v0:= 10L;
  #L2b0f4a.  v1:= v3 / v0 @kind long;
  #L2b0f4e.  return v1 @kind wide;
}
procedure `fe.c` `d`(`fe.c$a` v13 @kind this) @signature `Lfe/c$a;.d:()Lfe/c;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2b0bbc.  v0:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0bc0.  v1:= 0I;
  #L2b0bc2.  if v0 != 0 then goto L2b0bd6;
  #L2b0bc6.  v0:= new `fe.c`;
  #L2b0bca.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0bce.  call `<init>`(v0, v2, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0bd4.  return v0 @kind object;
  #L2b0bd6.  v0:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0bda.  call temp:= `e`(v0) @signature `Lokhttp3/e0;.e:()Z` @kind virtual;
  #L2b0be0.  v0:= temp;
  #L2b0be2.  if v0 == 0 then goto L2b0c06;
  #L2b0be6.  v0:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0bea.  call temp:= `r`(v0) @signature `Lokhttp3/g0;.r:()Lokhttp3/v;` @kind virtual;
  #L2b0bf0.  v0:= temp @kind object;
  #L2b0bf2.  if v0 != 0 then goto L2b0c06;
  #L2b0bf6.  v0:= new `fe.c`;
  #L2b0bfa.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0bfe.  call `<init>`(v0, v2, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0c04.  return v0 @kind object;
  #L2b0c06.  v0:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0c0a.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0c0e.  call temp:= `a`(v0, v2) @signature `Lfe/c;.a:(Lokhttp3/g0;Lokhttp3/e0;)Z` @kind static;
  #L2b0c14.  v0:= temp;
  #L2b0c16.  if v0 != 0 then goto L2b0c2a;
  #L2b0c1a.  v0:= new `fe.c`;
  #L2b0c1e.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0c22.  call `<init>`(v0, v2, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0c28.  return v0 @kind object;
  #L2b0c2a.  v0:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0c2e.  call temp:= `b`(v0) @signature `Lokhttp3/e0;.b:()Lokhttp3/e;` @kind virtual;
  #L2b0c34.  v0:= temp @kind object;
  #L2b0c36.  call temp:= `h`(v0) @signature `Lokhttp3/e;.h:()Z` @kind virtual;
  #L2b0c3c.  v2:= temp;
  #L2b0c3e.  if v2 != 0 then goto L2b0df6;
  #L2b0c42.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0c46.  call temp:= `e`(v2) @signature `Lfe/c$a;.e:(Lokhttp3/e0;)Z` @kind static;
  #L2b0c4c.  v2:= temp;
  #L2b0c4e.  if v2 == 0 then goto L2b0c56;
  #L2b0c52.  goto L2b0df6;
  #L2b0c56.  v2:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0c5a.  call temp:= `i`(v2) @signature `Lokhttp3/g0;.i:()Lokhttp3/e;` @kind virtual;
  #L2b0c60.  v2:= temp @kind object;
  #L2b0c62.  call temp:= `a`(v13) @signature `Lfe/c$a;.a:()J` @kind direct;
  #L2b0c68.  v3:= temp @kind wide;
  #L2b0c6a.  call temp:= `b`(v13) @signature `Lfe/c$a;.b:()J` @kind direct;
  #L2b0c70.  v5:= temp @kind wide;
  #L2b0c72.  call temp:= `d`(v0) @signature `Lokhttp3/e;.d:()I` @kind virtual;
  #L2b0c78.  v7:= temp;
  #L2b0c7a.  v8:= -1I;
  #L2b0c7c.  if v7 == v8 then goto L2b0c9e;
  #L2b0c80.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b0c84.  call temp:= `d`(v0) @signature `Lokhttp3/e;.d:()I` @kind virtual;
  #L2b0c8a.  v9:= temp;
  #L2b0c8c.  v9:= (`long`) v9 @kind i2l;
  #L2b0c8e.  call temp:= `toMillis`(v7, v9) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2b0c94.  v9:= temp @kind wide;
  #L2b0c96.  call temp:= `min`(v5, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2b0c9c.  v5:= temp @kind wide;
  #L2b0c9e.  call temp:= `f`(v0) @signature `Lokhttp3/e;.f:()I` @kind virtual;
  #L2b0ca4.  v7:= temp;
  #L2b0ca6.  v9:= 0L;
  #L2b0caa.  if v7 == v8 then goto L2b0cc6;
  #L2b0cae.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b0cb2.  call temp:= `f`(v0) @signature `Lokhttp3/e;.f:()I` @kind virtual;
  #L2b0cb8.  v11:= temp;
  #L2b0cba.  v11:= (`long`) v11 @kind i2l;
  #L2b0cbc.  call temp:= `toMillis`(v7, v11) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2b0cc2.  v11:= temp @kind wide;
  #L2b0cc4.  goto L2b0cc8;
  #L2b0cc6.  v11:= v9 @kind wide;
  #L2b0cc8.  call temp:= `g`(v2) @signature `Lokhttp3/e;.g:()Z` @kind virtual;
  #L2b0cce.  v7:= temp;
  #L2b0cd0.  if v7 != 0 then goto L2b0cf6;
  #L2b0cd4.  call temp:= `e`(v0) @signature `Lokhttp3/e;.e:()I` @kind virtual;
  #L2b0cda.  v7:= temp;
  #L2b0cdc.  if v7 == v8 then goto L2b0cf6;
  #L2b0ce0.  v7:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b0ce4.  call temp:= `e`(v0) @signature `Lokhttp3/e;.e:()I` @kind virtual;
  #L2b0cea.  v0:= temp;
  #L2b0cec.  v8:= (`long`) v0 @kind i2l;
  #L2b0cee.  call temp:= `toMillis`(v7, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2b0cf4.  v9:= temp @kind wide;
  #L2b0cf6.  call temp:= `h`(v2) @signature `Lokhttp3/e;.h:()Z` @kind virtual;
  #L2b0cfc.  v0:= temp;
  #L2b0cfe.  if v0 != 0 then goto L2b0d68;
  #L2b0d02.  v11:= v11 + v3 @kind long;
  #L2b0d04.  v9:= v9 + v5 @kind long;
  #L2b0d06.  v0:= lcmp(v11, v9);
  #L2b0d0a.  if v0 >= 0 then goto L2b0d68;
  #L2b0d0e.  v0:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0d12.  call temp:= `J`(v0) @signature `Lokhttp3/g0;.J:()Lokhttp3/g0$a;` @kind virtual;
  #L2b0d18.  v0:= temp @kind object;
  #L2b0d1a.  v2:= "Warning" @kind object;
  #L2b0d1e.  v7:= lcmp(v11, v5);
  #L2b0d22.  if v7 < 0 then goto L2b0d30;
  #L2b0d26.  v5:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L2b0d2a.  call temp:= `a`(v0, v2, v5) @signature `Lokhttp3/g0$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L2b0d30.  v5:= 86400000L;
  #L2b0d36.  v7:= lcmp(v3, v5);
  #L2b0d3a.  if v7 <= 0 then goto L2b0d54;
  #L2b0d3e.  call temp:= `f`(v13) @signature `Lfe/c$a;.f:()Z` @kind direct;
  #L2b0d44.  v3:= temp;
  #L2b0d46.  if v3 == 0 then goto L2b0d54;
  #L2b0d4a.  v3:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L2b0d4e.  call temp:= `a`(v0, v2, v3) @signature `Lokhttp3/g0$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L2b0d54.  v2:= new `fe.c`;
  #L2b0d58.  call temp:= `c`(v0) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L2b0d5e.  v0:= temp @kind object;
  #L2b0d60.  call `<init>`(v2, v1, v0) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0d66.  return v2 @kind object;
  #L2b0d68.  v0:= v13.`fe.c$a.k` @type ^`java.lang.String` @kind object;
  #L2b0d6c.  v2:= "If-Modified-Since" @kind object;
  #L2b0d70.  if v0 == 0 then goto L2b0d7a;
  #L2b0d74.  v2:= "If-None-Match" @kind object;
  #L2b0d78.  goto L2b0d94;
  #L2b0d7a.  v0:= v13.`fe.c$a.f` @type ^`java.util.Date` @kind object;
  #L2b0d7e.  if v0 == 0 then goto L2b0d88;
  #L2b0d82.  v0:= v13.`fe.c$a.g` @type ^`java.lang.String` @kind object;
  #L2b0d86.  goto L2b0d94;
  #L2b0d88.  v0:= v13.`fe.c$a.d` @type ^`java.util.Date` @kind object;
  #L2b0d8c.  if v0 == 0 then goto L2b0de6;
  #L2b0d90.  v0:= v13.`fe.c$a.e` @type ^`java.lang.String` @kind object;
  #L2b0d94.  v1:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0d98.  call temp:= `d`(v1) @signature `Lokhttp3/e0;.d:()Lokhttp3/w;` @kind virtual;
  #L2b0d9e.  v1:= temp @kind object;
  #L2b0da0.  call temp:= `f`(v1) @signature `Lokhttp3/w;.f:()Lokhttp3/w$a;` @kind virtual;
  #L2b0da6.  v1:= temp @kind object;
  #L2b0da8.  v3:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L2b0dac.  call `b`(v3, v1, v2, v0) @signature `Lee/a;.b:(Lokhttp3/w$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2b0db2.  v0:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0db6.  call temp:= `g`(v0) @signature `Lokhttp3/e0;.g:()Lokhttp3/e0$a;` @kind virtual;
  #L2b0dbc.  v0:= temp @kind object;
  #L2b0dbe.  call temp:= `e`(v1) @signature `Lokhttp3/w$a;.e:()Lokhttp3/w;` @kind virtual;
  #L2b0dc4.  v1:= temp @kind object;
  #L2b0dc6.  call temp:= `e`(v0, v1) @signature `Lokhttp3/e0$a;.e:(Lokhttp3/w;)Lokhttp3/e0$a;` @kind virtual;
  #L2b0dcc.  v0:= temp @kind object;
  #L2b0dce.  call temp:= `b`(v0) @signature `Lokhttp3/e0$a;.b:()Lokhttp3/e0;` @kind virtual;
  #L2b0dd4.  v0:= temp @kind object;
  #L2b0dd6.  v1:= new `fe.c`;
  #L2b0dda.  v2:= v13.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0dde.  call `<init>`(v1, v0, v2) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0de4.  return v1 @kind object;
  #L2b0de6.  v0:= new `fe.c`;
  #L2b0dea.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0dee.  call `<init>`(v0, v2, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0df4.  return v0 @kind object;
  #L2b0df6.  v0:= new `fe.c`;
  #L2b0dfa.  v2:= v13.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0dfe.  call `<init>`(v0, v2, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0e04.  return v0 @kind object;
}
procedure `boolean` `e`(`okhttp3.e0` v1 @kind object) @signature `Lfe/c$a;.e:(Lokhttp3/e0;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L2b0afc.  v0:= "If-Modified-Since" @kind object;
  #L2b0b00.  call temp:= `c`(v1, v0) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b0b06.  v0:= temp @kind object;
  #L2b0b08.  if v0 != 0 then goto L2b0b22;
  #L2b0b0c.  v0:= "If-None-Match" @kind object;
  #L2b0b10.  call temp:= `c`(v1, v0) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b0b16.  v1:= temp @kind object;
  #L2b0b18.  if v1 == 0 then goto L2b0b1e;
  #L2b0b1c.  goto L2b0b22;
  #L2b0b1e.  v1:= 0I;
  #L2b0b20.  goto L2b0b24;
  #L2b0b22.  v1:= 1I;
  #L2b0b24.  return v1;
}
procedure `boolean` `f`(`fe.c$a` v2 @kind this) @signature `Lfe/c$a;.f:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b0b38.  v0:= v2.`fe.c$a.c` @type ^`okhttp3.g0` @kind object;
  #L2b0b3c.  call temp:= `i`(v0) @signature `Lokhttp3/g0;.i:()Lokhttp3/e;` @kind virtual;
  #L2b0b42.  v0:= temp @kind object;
  #L2b0b44.  call temp:= `d`(v0) @signature `Lokhttp3/e;.d:()I` @kind virtual;
  #L2b0b4a.  v0:= temp;
  #L2b0b4c.  v1:= -1I;
  #L2b0b4e.  if v0 != v1 then goto L2b0b5e;
  #L2b0b52.  v0:= v2.`fe.c$a.h` @type ^`java.util.Date` @kind object;
  #L2b0b56.  if v0 != 0 then goto L2b0b5e;
  #L2b0b5a.  v0:= 1I;
  #L2b0b5c.  goto L2b0b60;
  #L2b0b5e.  v0:= 0I;
  #L2b0b60.  return v0;
}
procedure `fe.c` `c`(`fe.c$a` v2 @kind this) @signature `Lfe/c$a;.c:()Lfe/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b0b74.  call temp:= `d`(v2) @signature `Lfe/c$a;.d:()Lfe/c;` @kind direct;
  #L2b0b7a.  v0:= temp @kind object;
  #L2b0b7c.  v1:= v0.`fe.c.a` @type ^`okhttp3.e0` @kind object;
  #L2b0b80.  if v1 == 0 then goto L2b0ba8;
  #L2b0b84.  v1:= v2.`fe.c$a.b` @type ^`okhttp3.e0` @kind object;
  #L2b0b88.  call temp:= `b`(v1) @signature `Lokhttp3/e0;.b:()Lokhttp3/e;` @kind virtual;
  #L2b0b8e.  v1:= temp @kind object;
  #L2b0b90.  call temp:= `j`(v1) @signature `Lokhttp3/e;.j:()Z` @kind virtual;
  #L2b0b96.  v1:= temp;
  #L2b0b98.  if v1 == 0 then goto L2b0ba8;
  #L2b0b9c.  v0:= new `fe.c`;
  #L2b0ba0.  v1:= 0I;
  #L2b0ba2.  call `<init>`(v0, v1, v1) @signature `Lfe/c;.<init>:(Lokhttp3/e0;Lokhttp3/g0;)V` @kind direct;
  #L2b0ba8.  return v0 @kind object;
}
