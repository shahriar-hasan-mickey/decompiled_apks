record `x7.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`android.graphics.drawable.RippleDrawable` v6 @kind object, `int` v7 ) @signature `Lx7/a;.a:(Landroid/graphics/drawable/RippleDrawable;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L384bc8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L384bcc.  v1:= 23I;
  #L384bd0.  if v0 < v1 then goto L384bdc;
  #L384bd4.  call `setRadius`(v6, v7) @signature `Landroid/graphics/drawable/RippleDrawable;.setRadius:(I)V` @kind virtual;
  #L384bda.  goto L384c12;
  #L384bdc.  v0:= constclass @type ^`android.graphics.drawable.RippleDrawable` @kind object;
  #L384be0.  v1:= "setMaxRadius" @kind object;
  #L384be4.  v2:= 1I;
  #L384be6.  v3:= new `java.lang.Class`[v2];
  #L384bea.  v4:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L384bee.  v5:= 0I;
  #L384bf0.  v3[v5]:= v4 @kind object;
  #L384bf4.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L384bfa.  v0:= temp @kind object;
  #L384bfc.  v1:= new `java.lang.Object`[v2];
  #L384c00.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L384c06.  v7:= temp @kind object;
  #L384c08.  v1[v5]:= v7 @kind object;
  #L384c0c.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L384c12.  return @kind void;
  #L384c14.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L384c16.  goto L384c1e;
  #L384c18.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L384c1a.  goto L384c1e;
  #L384c1c.  v6:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L384c1e.  v7:= new `java.lang.IllegalStateException`;
  #L384c22.  v0:= "Couldn't set RippleDrawable radius" @kind object;
  #L384c26.  call `<init>`(v7, v0, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L384c2c.  throw v7;
  catch `java.lang.NoSuchMethodException` @[L384bdc..L384c12] goto L384c1c;
  catch `java.lang.reflect.InvocationTargetException` @[L384bdc..L384c12] goto L384c18;
  catch `java.lang.IllegalAccessException` @[L384bdc..L384c12] goto L384c14;
}
procedure `android.graphics.PorterDuffColorFilter` `b`(`android.graphics.drawable.Drawable` v1 @kind object, `android.content.res.ColorStateList` v2 @kind object, `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Lx7/a;.b:(Landroid/graphics/drawable/Drawable;Landroid/content/res/ColorStateList;Landroid/graphics/PorterDuff$Mode;)Landroid/graphics/PorterDuffColorFilter;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L384b8c.  if v2 == 0 then goto L384bb4;
  #L384b90.  if v3 != 0 then goto L384b96;
  #L384b94.  goto L384bb4;
  #L384b96.  call temp:= `getState`(v1) @signature `Landroid/graphics/drawable/Drawable;.getState:()[I` @kind virtual;
  #L384b9c.  v1:= temp @kind object;
  #L384b9e.  v0:= 0I;
  #L384ba0.  call temp:= `getColorForState`(v2, v1, v0) @signature `Landroid/content/res/ColorStateList;.getColorForState:([II)I` @kind virtual;
  #L384ba6.  v1:= temp;
  #L384ba8.  v2:= new `android.graphics.PorterDuffColorFilter`;
  #L384bac.  call `<init>`(v2, v1, v3) @signature `Landroid/graphics/PorterDuffColorFilter;.<init>:(ILandroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L384bb2.  return v2 @kind object;
  #L384bb4.  v1:= 0I;
  #L384bb6.  return v1 @kind object;
}
