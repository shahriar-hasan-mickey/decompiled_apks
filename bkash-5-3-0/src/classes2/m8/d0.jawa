record `m8.d0` @kind class @AccessFlag  extends `h9.b` @kind interface, `h9.a` @kind interface {
  `h9.a$a` `m8.d0.a` @AccessFlag PRIVATE;
  `h9.b` `m8.d0.b` @AccessFlag PRIVATE_VOLATILE;
}
global `h9.a$a` `@@m8.d0.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `h9.b` `@@m8.d0.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm8/d0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L320a20.  v0:= `@@m8.b0.a` @type ^`m8.b0` @kind object;
  #L320a24.  `@@m8.d0.c` @type ^`h9.a$a` := v0 @kind object;
  #L320a28.  v0:= `@@m8.c0.a` @type ^`m8.c0` @kind object;
  #L320a2c.  `@@m8.d0.d` @type ^`h9.b` := v0 @kind object;
  #L320a30.  return @kind void;
}
procedure `void` `<init>`(`m8.d0` v0 @kind this, `h9.a$a` v1 @kind object, `h9.b` v2 @kind object) @signature `Lm8/d0;.<init>:(Lh9/a$a;Lh9/b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L320a44.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L320a4a.  v0.`m8.d0.a` @type ^`h9.a$a` := v1 @kind object;
  #L320a4e.  v0.`m8.d0.b` @type ^`h9.b` := v2 @kind object;
  #L320a52.  return @kind void;
}
procedure `java.lang.Object` `b`() @signature `Lm8/d0;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L32095c.  call temp:= `g`() @signature `Lm8/d0;.g:()Ljava/lang/Object;` @kind static;
  #L320962.  v0:= temp @kind object;
  #L320964.  return v0 @kind object;
}
procedure `void` `c`(`h9.b` v0 @kind object) @signature `Lm8/d0;.c:(Lh9/b;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L3209f0.  call `f`(v0) @signature `Lm8/d0;.f:(Lh9/b;)V` @kind static;
  #L3209f6.  return @kind void;
}
procedure `void` `d`(`h9.a$a` v0 @kind object, `h9.a$a` v1 @kind object, `h9.b` v2 @kind object) @signature `Lm8/d0;.d:(Lh9/a$a;Lh9/a$a;Lh9/b;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L320a08.  call `h`(v0, v1, v2) @signature `Lm8/d0;.h:(Lh9/a$a;Lh9/a$a;Lh9/b;)V` @kind static;
  #L320a0e.  return @kind void;
}
procedure `m8.d0` `e`() @signature `Lm8/d0;.e:()Lm8/d0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3209ac.  v0:= new `m8.d0`;
  #L3209b0.  v1:= `@@m8.d0.c` @type ^`h9.a$a` @kind object;
  #L3209b4.  v2:= `@@m8.d0.d` @type ^`h9.b` @kind object;
  #L3209b8.  call `<init>`(v0, v1, v2) @signature `Lm8/d0;.<init>:(Lh9/a$a;Lh9/b;)V` @kind direct;
  #L3209be.  return v0 @kind object;
}
procedure `void` `f`(`h9.b` v0 @kind object) @signature `Lm8/d0;.f:(Lh9/b;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L320a64.  return @kind void;
}
procedure `java.lang.Object` `g`() @signature `Lm8/d0;.g:()Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L320998.  v0:= 0I;
  #L32099a.  return v0 @kind object;
}
procedure `void` `h`(`h9.a$a` v0 @kind object, `h9.a$a` v1 @kind object, `h9.b` v2 @kind object) @signature `Lm8/d0;.h:(Lh9/a$a;Lh9/a$a;Lh9/b;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L320a78.  call `a`(v0, v2) @signature `Lh9/a$a;.a:(Lh9/b;)V` @kind interface;
  #L320a7e.  call `a`(v1, v2) @signature `Lh9/a$a;.a:(Lh9/b;)V` @kind interface;
  #L320a84.  return @kind void;
}
procedure `m8.d0` `i`(`h9.b` v2 @kind object) @signature `Lm8/d0;.i:(Lh9/b;)Lm8/d0;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3209d0.  v0:= new `m8.d0`;
  #L3209d4.  v1:= 0I;
  #L3209d6.  call `<init>`(v0, v1, v2) @signature `Lm8/d0;.<init>:(Lh9/a$a;Lh9/b;)V` @kind direct;
  #L3209dc.  return v0 @kind object;
}
procedure `void` `a`(`m8.d0` v4 @kind this, `h9.a$a` v5 @kind object) @signature `Lm8/d0;.a:(Lh9/a$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L320af8.  v0:= v4.`m8.d0.b` @type ^`h9.b` @kind object;
  #L320afc.  v1:= `@@m8.d0.d` @type ^`h9.b` @kind object;
  #L320b00.  if v0 == v1 then goto L320b0c;
  #L320b04.  call `a`(v5, v0) @signature `Lh9/a$a;.a:(Lh9/b;)V` @kind interface;
  #L320b0a.  return @kind void;
  #L320b0c.  v0:= 0I;
  #L320b0e.  @monitorenter v4
  #L320b10.  v2:= v4.`m8.d0.b` @type ^`h9.b` @kind object;
  #L320b14.  if v2 == v1 then goto L320b1c;
  #L320b18.  v0:= v2 @kind object;
  #L320b1a.  goto L320b2e;
  #L320b1c.  v1:= v4.`m8.d0.a` @type ^`h9.a$a` @kind object;
  #L320b20.  v3:= new `m8.a0`;
  #L320b24.  call `<init>`(v3, v1, v5) @signature `Lm8/a0;.<init>:(Lh9/a$a;Lh9/a$a;)V` @kind direct;
  #L320b2a.  v4.`m8.d0.a` @type ^`h9.a$a` := v3 @kind object;
  #L320b2e.  @monitorexit v4
  #L320b30.  if v0 == 0 then goto L320b3a;
  #L320b34.  call `a`(v5, v2) @signature `Lh9/a$a;.a:(Lh9/b;)V` @kind interface;
  #L320b3a.  return @kind void;
  #L320b3c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L320b3e.  @monitorexit v4
  #L320b40.  throw v5;
  catch `java.lang.Throwable` @[L320b10..L320b30] goto L320b3c;
  catch `java.lang.Throwable` @[L320b3e..L320b40] goto L320b3c;
}
procedure `java.lang.Object` `get`(`m8.d0` v1 @kind this) @signature `Lm8/d0;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L320978.  v0:= v1.`m8.d0.b` @type ^`h9.b` @kind object;
  #L32097c.  call temp:= `get`(v0) @signature `Lh9/b;.get:()Ljava/lang/Object;` @kind interface;
  #L320982.  v0:= temp @kind object;
  #L320984.  return v0 @kind object;
}
procedure `void` `j`(`m8.d0` v2 @kind this, `h9.b` v3 @kind object) @signature `Lm8/d0;.j:(Lh9/b;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L320a98.  v0:= v2.`m8.d0.b` @type ^`h9.b` @kind object;
  #L320a9c.  v1:= `@@m8.d0.d` @type ^`h9.b` @kind object;
  #L320aa0.  if v0 != v1 then goto L320ac4;
  #L320aa4.  @monitorenter v2
  #L320aa6.  v0:= v2.`m8.d0.a` @type ^`h9.a$a` @kind object;
  #L320aaa.  v1:= 0I;
  #L320aac.  v2.`m8.d0.a` @type ^`h9.a$a` := v1 @kind object;
  #L320ab0.  v2.`m8.d0.b` @type ^`h9.b` := v3 @kind object;
  #L320ab4.  @monitorexit v2
  #L320ab6.  call `a`(v0, v3) @signature `Lh9/a$a;.a:(Lh9/b;)V` @kind interface;
  #L320abc.  return @kind void;
  #L320abe.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L320ac0.  @monitorexit v2
  #L320ac2.  throw v3;
  #L320ac4.  v3:= new `java.lang.IllegalStateException`;
  #L320ac8.  v0:= "provide() can be called only once." @kind object;
  #L320acc.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L320ad2.  throw v3;
  catch `java.lang.Throwable` @[L320aa6..L320ab6] goto L320abe;
  catch `java.lang.Throwable` @[L320ac0..L320ac2] goto L320abe;
}
