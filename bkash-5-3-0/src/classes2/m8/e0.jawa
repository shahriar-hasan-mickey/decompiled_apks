record `m8.e0` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`boolean` v0 , `java.lang.String` v1 @kind object) @signature `Lm8/e0;.a:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L320b98.  if v0 == 0 then goto L320b9e;
  #L320b9c.  return @kind void;
  #L320b9e.  v0:= new `java.lang.IllegalArgumentException`;
  #L320ba2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L320ba8.  throw v0;
}
procedure `java.lang.Object` `b`(`java.lang.Object` v0 @kind object) @signature `Lm8/e0;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L320b68.  call temp:= `requireNonNull`(v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L320b6e.  return v0 @kind object;
}
procedure `java.lang.Object` `c`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lm8/e0;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L320b80.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L320b86.  return v0 @kind object;
}
procedure `void` `d`(`boolean` v0 , `java.lang.String` v1 @kind object) @signature `Lm8/e0;.d:(ZLjava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L320bbc.  if v0 == 0 then goto L320bc2;
  #L320bc0.  return @kind void;
  #L320bc2.  v0:= new `java.lang.IllegalStateException`;
  #L320bc6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L320bcc.  throw v0;
}
