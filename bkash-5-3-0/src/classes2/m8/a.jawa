record `m8.a` @kind class @AccessFlag ABSTRACT extends `m8.e` @kind interface {
}
procedure `void` `<init>`(`m8.a` v0 @kind this) @signature `Lm8/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L31e4bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31e4c2.  return @kind void;
}
procedure `java.lang.Object` `a`(`m8.a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lm8/a;.a:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L31e468.  call temp:= `b`(v0, v1) @signature `Lm8/e;.b:(Ljava/lang/Class;)Lh9/b;` @kind interface;
  #L31e46e.  v1:= temp @kind object;
  #L31e470.  if v1 != 0 then goto L31e478;
  #L31e474.  v1:= 0I;
  #L31e476.  return v1 @kind object;
  #L31e478.  call temp:= `get`(v1) @signature `Lh9/b;.get:()Ljava/lang/Object;` @kind interface;
  #L31e47e.  v1:= temp @kind object;
  #L31e480.  return v1 @kind object;
}
procedure `java.util.Set` `d`(`m8.a` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lm8/a;.d:(Ljava/lang/Class;)Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;

  #L31e494.  call temp:= `c`(v0, v1) @signature `Lm8/e;.c:(Ljava/lang/Class;)Lh9/b;` @kind interface;
  #L31e49a.  v1:= temp @kind object;
  #L31e49c.  call temp:= `get`(v1) @signature `Lh9/b;.get:()Ljava/lang/Object;` @kind interface;
  #L31e4a2.  v1:= temp @kind object;
  #L31e4a4.  v1:= (`java.util.Set`) v1 @kind object;
  #L31e4a8.  return v1 @kind object;
}
