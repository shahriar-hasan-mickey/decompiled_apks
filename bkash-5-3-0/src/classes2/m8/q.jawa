record `m8.q` @kind class @AccessFlag  {
}
procedure `void` `a`(`java.util.List` v7 @kind object) @signature `Lm8/q;.a:(Ljava/util/List;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31fe6c.  call temp:= `c`(v7) @signature `Lm8/q;.c:(Ljava/util/List;)Ljava/util/Set;` @kind static;
  #L31fe72.  v0:= temp @kind object;
  #L31fe74.  call temp:= `b`(v0) @signature `Lm8/q;.b:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L31fe7a.  v1:= temp @kind object;
  #L31fe7c.  v2:= 0I;
  #L31fe7e.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L31fe84.  v3:= temp;
  #L31fe86.  if v3 != 0 then goto L31feea;
  #L31fe8a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fe90.  v3:= temp @kind object;
  #L31fe92.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fe98.  v3:= temp @kind object;
  #L31fe9a.  v3:= (`m8.q$b`) v3 @kind object;
  #L31fe9e.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L31fea4.  v2:= v2 + 1;
  #L31fea8.  call temp:= `d`(v3) @signature `Lm8/q$b;.d:()Ljava/util/Set;` @kind virtual;
  #L31feae.  v4:= temp @kind object;
  #L31feb0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31feb6.  v4:= temp @kind object;
  #L31feb8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31febe.  v5:= temp;
  #L31fec0.  if v5 == 0 then goto L31fe7e;
  #L31fec4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31feca.  v5:= temp @kind object;
  #L31fecc.  v5:= (`m8.q$b`) v5 @kind object;
  #L31fed0.  call `g`(v5, v3) @signature `Lm8/q$b;.g:(Lm8/q$b;)V` @kind virtual;
  #L31fed6.  call temp:= `f`(v5) @signature `Lm8/q$b;.f:()Z` @kind virtual;
  #L31fedc.  v6:= temp;
  #L31fede.  if v6 == 0 then goto L31feb8;
  #L31fee2.  call temp:= `add`(v1, v5) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31fee8.  goto L31feb8;
  #L31feea.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L31fef0.  v7:= temp;
  #L31fef2.  if v2 != v7 then goto L31fef8;
  #L31fef6.  return @kind void;
  #L31fef8.  v7:= new `java.util.ArrayList`;
  #L31fefc.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L31ff02.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31ff08.  v0:= temp @kind object;
  #L31ff0a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31ff10.  v1:= temp;
  #L31ff12.  if v1 == 0 then goto L31ff4a;
  #L31ff16.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31ff1c.  v1:= temp @kind object;
  #L31ff1e.  v1:= (`m8.q$b`) v1 @kind object;
  #L31ff22.  call temp:= `f`(v1) @signature `Lm8/q$b;.f:()Z` @kind virtual;
  #L31ff28.  v2:= temp;
  #L31ff2a.  if v2 != 0 then goto L31ff0a;
  #L31ff2e.  call temp:= `e`(v1) @signature `Lm8/q$b;.e:()Z` @kind virtual;
  #L31ff34.  v2:= temp;
  #L31ff36.  if v2 != 0 then goto L31ff0a;
  #L31ff3a.  call temp:= `c`(v1) @signature `Lm8/q$b;.c:()Lm8/d;` @kind virtual;
  #L31ff40.  v1:= temp @kind object;
  #L31ff42.  call temp:= `add`(v7, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31ff48.  goto L31ff0a;
  #L31ff4a.  v0:= new `m8.s`;
  #L31ff4e.  call `<init>`(v0, v7) @signature `Lm8/s;.<init>:(Ljava/util/List;)V` @kind direct;
  #L31ff54.  throw v0;
}
procedure `java.util.Set` `b`(`java.util.Set` v3 @kind object) @signature `Lm8/q;.b:(Ljava/util/Set;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L31fc08.  v0:= new `java.util.HashSet`;
  #L31fc0c.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31fc12.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fc18.  v3:= temp @kind object;
  #L31fc1a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fc20.  v1:= temp;
  #L31fc22.  if v1 == 0 then goto L31fc46;
  #L31fc26.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fc2c.  v1:= temp @kind object;
  #L31fc2e.  v1:= (`m8.q$b`) v1 @kind object;
  #L31fc32.  call temp:= `f`(v1) @signature `Lm8/q$b;.f:()Z` @kind virtual;
  #L31fc38.  v2:= temp;
  #L31fc3a.  if v2 == 0 then goto L31fc1a;
  #L31fc3e.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31fc44.  goto L31fc1a;
  #L31fc46.  return v0 @kind object;
}
procedure `java.util.Set` `c`(`java.util.List` v10 @kind object) @signature `Lm8/q;.c:(Ljava/util/List;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L31fc58.  v0:= new `java.util.HashMap`;
  #L31fc5c.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L31fc62.  v1:= temp;
  #L31fc64.  call `<init>`(v0, v1) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L31fc6a.  call temp:= `iterator`(v10) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fc70.  v10:= temp @kind object;
  #L31fc72.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fc78.  v1:= temp;
  #L31fc7a.  v2:= 0I;
  #L31fc7c.  if v1 == 0 then goto L31fd40;
  #L31fc80.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fc86.  v1:= temp @kind object;
  #L31fc88.  v1:= (`m8.d`) v1 @kind object;
  #L31fc8c.  v3:= new `m8.q$b`;
  #L31fc90.  call `<init>`(v3, v1) @signature `Lm8/q$b;.<init>:(Lm8/d;)V` @kind direct;
  #L31fc96.  call temp:= `h`(v1) @signature `Lm8/d;.h:()Ljava/util/Set;` @kind virtual;
  #L31fc9c.  v4:= temp @kind object;
  #L31fc9e.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fca4.  v4:= temp @kind object;
  #L31fca6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fcac.  v5:= temp;
  #L31fcae.  if v5 == 0 then goto L31fc72;
  #L31fcb2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fcb8.  v5:= temp @kind object;
  #L31fcba.  v5:= (`java.lang.Class`) v5 @kind object;
  #L31fcbe.  v6:= new `m8.q$c`;
  #L31fcc2.  call temp:= `n`(v1) @signature `Lm8/d;.n:()Z` @kind virtual;
  #L31fcc8.  v7:= temp;
  #L31fcca.  v8:= 1I;
  #L31fccc.  v7:= v7 ^~ v8 @kind int;
  #L31fcce.  call `<init>`(v6, v5, v7, v2) @signature `Lm8/q$c;.<init>:(Ljava/lang/Class;ZLm8/q$a;)V` @kind direct;
  #L31fcd4.  call temp:= `containsKey`(v0, v6) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L31fcda.  v7:= temp;
  #L31fcdc.  if v7 != 0 then goto L31fcf0;
  #L31fce0.  v7:= new `java.util.HashSet`;
  #L31fce4.  call `<init>`(v7) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31fcea.  call temp:= `put`(v0, v6, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31fcf0.  call temp:= `get`(v0, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31fcf6.  v7:= temp @kind object;
  #L31fcf8.  v7:= (`java.util.Set`) v7 @kind object;
  #L31fcfc.  call temp:= `isEmpty`(v7) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L31fd02.  v9:= temp;
  #L31fd04.  if v9 != 0 then goto L31fd38;
  #L31fd08.  call temp:= `a`(v6) @signature `Lm8/q$c;.a:(Lm8/q$c;)Z` @kind static;
  #L31fd0e.  v6:= temp;
  #L31fd10.  if v6 == 0 then goto L31fd16;
  #L31fd14.  goto L31fd38;
  #L31fd16.  v10:= new `java.lang.IllegalArgumentException`;
  #L31fd1a.  v0:= new `java.lang.Object`[v8];
  #L31fd1e.  v1:= 0I;
  #L31fd20.  v0[v1]:= v5 @kind object;
  #L31fd24.  v1:= "Multiple components provide %s." @kind object;
  #L31fd28.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31fd2e.  v0:= temp @kind object;
  #L31fd30.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31fd36.  throw v10;
  #L31fd38.  call temp:= `add`(v7, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31fd3e.  goto L31fca6;
  #L31fd40.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L31fd46.  v10:= temp @kind object;
  #L31fd48.  call temp:= `iterator`(v10) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fd4e.  v10:= temp @kind object;
  #L31fd50.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fd56.  v1:= temp;
  #L31fd58.  if v1 == 0 then goto L31fe20;
  #L31fd5c.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fd62.  v1:= temp @kind object;
  #L31fd64.  v1:= (`java.util.Set`) v1 @kind object;
  #L31fd68.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fd6e.  v1:= temp @kind object;
  #L31fd70.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fd76.  v3:= temp;
  #L31fd78.  if v3 == 0 then goto L31fd50;
  #L31fd7c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fd82.  v3:= temp @kind object;
  #L31fd84.  v3:= (`m8.q$b`) v3 @kind object;
  #L31fd88.  call temp:= `c`(v3) @signature `Lm8/q$b;.c:()Lm8/d;` @kind virtual;
  #L31fd8e.  v4:= temp @kind object;
  #L31fd90.  call temp:= `e`(v4) @signature `Lm8/d;.e:()Ljava/util/Set;` @kind virtual;
  #L31fd96.  v4:= temp @kind object;
  #L31fd98.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fd9e.  v4:= temp @kind object;
  #L31fda0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fda6.  v5:= temp;
  #L31fda8.  if v5 == 0 then goto L31fd70;
  #L31fdac.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fdb2.  v5:= temp @kind object;
  #L31fdb4.  v5:= (`m8.r`) v5 @kind object;
  #L31fdb8.  call temp:= `e`(v5) @signature `Lm8/r;.e:()Z` @kind virtual;
  #L31fdbe.  v6:= temp;
  #L31fdc0.  if v6 != 0 then goto L31fdc6;
  #L31fdc4.  goto L31fda0;
  #L31fdc6.  v6:= new `m8.q$c`;
  #L31fdca.  call temp:= `c`(v5) @signature `Lm8/r;.c:()Ljava/lang/Class;` @kind virtual;
  #L31fdd0.  v7:= temp @kind object;
  #L31fdd2.  call temp:= `g`(v5) @signature `Lm8/r;.g:()Z` @kind virtual;
  #L31fdd8.  v5:= temp;
  #L31fdda.  call `<init>`(v6, v7, v5, v2) @signature `Lm8/q$c;.<init>:(Ljava/lang/Class;ZLm8/q$a;)V` @kind direct;
  #L31fde0.  call temp:= `get`(v0, v6) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31fde6.  v5:= temp @kind object;
  #L31fde8.  v5:= (`java.util.Set`) v5 @kind object;
  #L31fdec.  if v5 != 0 then goto L31fdf2;
  #L31fdf0.  goto L31fda0;
  #L31fdf2.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fdf8.  v5:= temp @kind object;
  #L31fdfa.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fe00.  v6:= temp;
  #L31fe02.  if v6 == 0 then goto L31fda0;
  #L31fe06.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fe0c.  v6:= temp @kind object;
  #L31fe0e.  v6:= (`m8.q$b`) v6 @kind object;
  #L31fe12.  call `a`(v3, v6) @signature `Lm8/q$b;.a:(Lm8/q$b;)V` @kind virtual;
  #L31fe18.  call `b`(v6, v3) @signature `Lm8/q$b;.b:(Lm8/q$b;)V` @kind virtual;
  #L31fe1e.  goto L31fdfa;
  #L31fe20.  v10:= new `java.util.HashSet`;
  #L31fe24.  call `<init>`(v10) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31fe2a.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L31fe30.  v0:= temp @kind object;
  #L31fe32.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31fe38.  v0:= temp @kind object;
  #L31fe3a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L31fe40.  v1:= temp;
  #L31fe42.  if v1 == 0 then goto L31fe5a;
  #L31fe46.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31fe4c.  v1:= temp @kind object;
  #L31fe4e.  v1:= (`java.util.Set`) v1 @kind object;
  #L31fe52.  call temp:= `addAll`(v10, v1) @signature `Ljava/util/HashSet;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L31fe58.  goto L31fe3a;
  #L31fe5a.  return v10 @kind object;
}
