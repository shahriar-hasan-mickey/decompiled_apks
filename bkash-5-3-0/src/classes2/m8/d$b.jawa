record `m8.d$b` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `m8.d$b.a` @AccessFlag PRIVATE;
  `java.util.Set` `m8.d$b.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `m8.d$b.c` @AccessFlag PRIVATE_FINAL;
  `int` `m8.d$b.d` @AccessFlag PRIVATE;
  `int` `m8.d$b.e` @AccessFlag PRIVATE;
  `m8.h` `m8.d$b.f` @AccessFlag PRIVATE;
  `java.util.Set` `m8.d$b.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m8.d$b` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class`[] v5 @kind object) @signature `Lm8/d$b;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L31e6ac.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L31e6b2.  v0:= 0I;
  #L31e6b4.  v3.`m8.d$b.a` @type ^`java.lang.String` := v0 @kind object;
  #L31e6b8.  v0:= new `java.util.HashSet`;
  #L31e6bc.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31e6c2.  v3.`m8.d$b.b` @type ^`java.util.Set` := v0 @kind object;
  #L31e6c6.  v1:= new `java.util.HashSet`;
  #L31e6ca.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31e6d0.  v3.`m8.d$b.c` @type ^`java.util.Set` := v1 @kind object;
  #L31e6d4.  v1:= 0I;
  #L31e6d6.  v3.`m8.d$b.d` @type ^`int` := v1;
  #L31e6da.  v3.`m8.d$b.e` @type ^`int` := v1;
  #L31e6de.  v2:= new `java.util.HashSet`;
  #L31e6e2.  call `<init>`(v2) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L31e6e8.  v3.`m8.d$b.g` @type ^`java.util.Set` := v2 @kind object;
  #L31e6ec.  v2:= "Null interface" @kind object;
  #L31e6f0.  call temp:= `c`(v4, v2) @signature `Lm8/e0;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31e6f6.  call temp:= `add`(v0, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31e6fc.  v4:= length @variable v5;
  #L31e6fe.  if v1 >= v4 then goto L31e712;
  #L31e702.  v0:= v5[v1] @kind object;
  #L31e706.  call temp:= `c`(v0, v2) @signature `Lm8/e0;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31e70c.  v1:= v1 + 1;
  #L31e710.  goto L31e6fe;
  #L31e712.  v4:= v3.`m8.d$b.b` @type ^`java.util.Set` @kind object;
  #L31e716.  call temp:= `addAll`(v4, v5) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L31e71c.  return @kind void;
}
procedure `void` `<init>`(`m8.d$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class`[] v2 @kind object, `m8.d$a` v3 @kind object) @signature `Lm8/d$b;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;Lm8/d$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L31e730.  call `<init>`(v0, v1, v2) @signature `Lm8/d$b;.<init>:(Ljava/lang/Class;[Ljava/lang/Class;)V` @kind direct;
  #L31e736.  return @kind void;
}
procedure `m8.d$b` `a`(`m8.d$b` v0 @kind object) @signature `Lm8/d$b;.a:(Lm8/d$b;)Lm8/d$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L31e5b4.  call temp:= `g`(v0) @signature `Lm8/d$b;.g:()Lm8/d$b;` @kind direct;
  #L31e5ba.  v0:= temp @kind object;
  #L31e5bc.  return v0 @kind object;
}
procedure `m8.d$b` `g`(`m8.d$b` v1 @kind this) @signature `Lm8/d$b;.g:()Lm8/d$b;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L31e664.  v0:= 1I;
  #L31e666.  v1.`m8.d$b.e` @type ^`int` := v0;
  #L31e66a.  return v1 @kind object;
}
procedure `m8.d$b` `h`(`m8.d$b` v2 @kind this, `int` v3 ) @signature `Lm8/d$b;.h:(I)Lm8/d$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L31e67c.  v0:= v2.`m8.d$b.d` @type ^`int`;
  #L31e680.  if v0 != 0 then goto L31e688;
  #L31e684.  v0:= 1I;
  #L31e686.  goto L31e68a;
  #L31e688.  v0:= 0I;
  #L31e68a.  v1:= "Instantiation type has already been set." @kind object;
  #L31e68e.  call `d`(v0, v1) @signature `Lm8/e0;.d:(ZLjava/lang/String;)V` @kind static;
  #L31e694.  v2.`m8.d$b.d` @type ^`int` := v3;
  #L31e698.  return v2 @kind object;
}
procedure `void` `i`(`m8.d$b` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lm8/d$b;.i:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L31e748.  v0:= v1.`m8.d$b.b` @type ^`java.util.Set` @kind object;
  #L31e74c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L31e752.  v2:= temp;
  #L31e754.  v2:= v2 ^~ 1;
  #L31e758.  v0:= "Components are not allowed to depend on interfaces they themselves provide." @kind object;
  #L31e75c.  call `a`(v2, v0) @signature `Lm8/e0;.a:(ZLjava/lang/String;)V` @kind static;
  #L31e762.  return @kind void;
}
procedure `m8.d$b` `b`(`m8.d$b` v1 @kind this, `m8.r` v2 @kind object) @signature `Lm8/d$b;.b:(Lm8/r;)Lm8/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e5d0.  v0:= "Null dependency" @kind object;
  #L31e5d4.  call temp:= `c`(v2, v0) @signature `Lm8/e0;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31e5da.  call temp:= `c`(v2) @signature `Lm8/r;.c:()Ljava/lang/Class;` @kind virtual;
  #L31e5e0.  v0:= temp @kind object;
  #L31e5e2.  call `i`(v1, v0) @signature `Lm8/d$b;.i:(Ljava/lang/Class;)V` @kind direct;
  #L31e5e8.  v0:= v1.`m8.d$b.c` @type ^`java.util.Set` @kind object;
  #L31e5ec.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L31e5f2.  return v1 @kind object;
}
procedure `m8.d$b` `c`(`m8.d$b` v1 @kind this) @signature `Lm8/d$b;.c:()Lm8/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e604.  v0:= 1I;
  #L31e606.  call temp:= `h`(v1, v0) @signature `Lm8/d$b;.h:(I)Lm8/d$b;` @kind direct;
  #L31e60c.  v0:= temp @kind object;
  #L31e60e.  return v0 @kind object;
}
procedure `m8.d` `d`(`m8.d$b` v11 @kind this) @signature `Lm8/d$b;.d:()Lm8/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L31e54c.  v0:= v11.`m8.d$b.f` @type ^`m8.h` @kind object;
  #L31e550.  if v0 == 0 then goto L31e558;
  #L31e554.  v0:= 1I;
  #L31e556.  goto L31e55a;
  #L31e558.  v0:= 0I;
  #L31e55a.  v1:= "Missing required property: factory." @kind object;
  #L31e55e.  call `d`(v0, v1) @signature `Lm8/e0;.d:(ZLjava/lang/String;)V` @kind static;
  #L31e564.  v0:= new `m8.d`;
  #L31e568.  v3:= v11.`m8.d$b.a` @type ^`java.lang.String` @kind object;
  #L31e56c.  v4:= new `java.util.HashSet`;
  #L31e570.  v1:= v11.`m8.d$b.b` @type ^`java.util.Set` @kind object;
  #L31e574.  call `<init>`(v4, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L31e57a.  v5:= new `java.util.HashSet`;
  #L31e57e.  v1:= v11.`m8.d$b.c` @type ^`java.util.Set` @kind object;
  #L31e582.  call `<init>`(v5, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L31e588.  v6:= v11.`m8.d$b.d` @type ^`int`;
  #L31e58c.  v7:= v11.`m8.d$b.e` @type ^`int`;
  #L31e590.  v8:= v11.`m8.d$b.f` @type ^`m8.h` @kind object;
  #L31e594.  v9:= v11.`m8.d$b.g` @type ^`java.util.Set` @kind object;
  #L31e598.  v10:= 0I;
  #L31e59a.  v2:= v0 @kind object;
  #L31e59c.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lm8/d;.<init>:(Ljava/lang/String;Ljava/util/Set;Ljava/util/Set;IILm8/h;Ljava/util/Set;Lm8/d$a;)V` @kind direct;
  #L31e5a2.  return v0 @kind object;
}
procedure `m8.d$b` `e`(`m8.d$b` v1 @kind this) @signature `Lm8/d$b;.e:()Lm8/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e620.  v0:= 2I;
  #L31e622.  call temp:= `h`(v1, v0) @signature `Lm8/d$b;.h:(I)Lm8/d$b;` @kind direct;
  #L31e628.  v0:= temp @kind object;
  #L31e62a.  return v0 @kind object;
}
procedure `m8.d$b` `f`(`m8.d$b` v1 @kind this, `m8.h` v2 @kind object) @signature `Lm8/d$b;.f:(Lm8/h;)Lm8/d$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31e63c.  v0:= "Null factory" @kind object;
  #L31e640.  call temp:= `c`(v2, v0) @signature `Lm8/e0;.c:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L31e646.  v2:= temp @kind object;
  #L31e648.  v2:= (`m8.h`) v2 @kind object;
  #L31e64c.  v1.`m8.d$b.f` @type ^`m8.h` := v2 @kind object;
  #L31e650.  return v1 @kind object;
}
