record `m8.s` @kind class @AccessFlag PUBLIC extends `m8.t` @kind class {
  `java.util.List` `m8.s.componentsInCycle` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`m8.s` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lm8/s;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31ff80.  v0:= new `java.lang.StringBuilder`;
  #L31ff84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ff8a.  v1:= "Dependency cycle detected: " @kind object;
  #L31ff8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ff94.  call temp:= `toArray`(v3) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L31ff9a.  v1:= temp @kind object;
  #L31ff9c.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L31ffa2.  v1:= temp @kind object;
  #L31ffa4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ffaa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31ffb0.  v0:= temp @kind object;
  #L31ffb2.  call `<init>`(v2, v0) @signature `Lm8/t;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31ffb8.  v2.`m8.s.componentsInCycle` @type ^`java.util.List` := v3 @kind object;
  #L31ffbc.  return @kind void;
}
procedure `java.util.List` `getComponentsInCycle`(`m8.s` v1 @kind this) @signature `Lm8/s;.getComponentsInCycle:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31ff68.  v0:= v1.`m8.s.componentsInCycle` @type ^`java.util.List` @kind object;
  #L31ff6c.  return v0 @kind object;
}
