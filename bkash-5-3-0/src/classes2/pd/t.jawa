record `pd.t` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.ListIterator` @kind interface {
}
global `pd.t` `@@pd.t.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lpd/t;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L36d1c8.  v0:= new `pd.t`;
  #L36d1cc.  call `<init>`(v0) @signature `Lpd/t;.<init>:()V` @kind direct;
  #L36d1d2.  `@@pd.t.g` @type ^`pd.t` := v0 @kind object;
  #L36d1d6.  return @kind void;
}
procedure `void` `<init>`(`pd.t` v0 @kind this) @signature `Lpd/t;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L36d1e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36d1ee.  return @kind void;
}
procedure `java.lang.Void` `a`(`pd.t` v1 @kind this) @signature `Lpd/t;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d190.  v0:= new `java.util.NoSuchElementException`;
  #L36d194.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L36d19a.  throw v0;
}
procedure `void` `add`(`pd.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lpd/t;.add:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L36d200.  v2:= new `java.lang.UnsupportedOperationException`;
  #L36d204.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L36d208.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d20e.  throw v2;
}
procedure `java.lang.Void` `b`(`pd.t` v1 @kind this) @signature `Lpd/t;.b:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d1ac.  v0:= new `java.util.NoSuchElementException`;
  #L36d1b0.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L36d1b6.  throw v0;
}
procedure `boolean` `hasNext`(`pd.t` v1 @kind this) @signature `Lpd/t;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d108.  v0:= 0I;
  #L36d10a.  return v0;
}
procedure `boolean` `hasPrevious`(`pd.t` v1 @kind this) @signature `Lpd/t;.hasPrevious:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d11c.  v0:= 0I;
  #L36d11e.  return v0;
}
procedure `java.lang.Object` `next`(`pd.t` v1 @kind this) @signature `Lpd/t;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L36d158.  call temp:= `a`(v1) @signature `Lpd/t;.a:()Ljava/lang/Void;` @kind virtual;
  #L36d15e.  v0:= temp @kind object;
  #L36d160.  return v0 @kind object;
}
procedure `int` `nextIndex`(`pd.t` v1 @kind this) @signature `Lpd/t;.nextIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d130.  v0:= 0I;
  #L36d132.  return v0;
}
procedure `java.lang.Object` `previous`(`pd.t` v1 @kind this) @signature `Lpd/t;.previous:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L36d174.  call temp:= `b`(v1) @signature `Lpd/t;.b:()Ljava/lang/Void;` @kind virtual;
  #L36d17a.  v0:= temp @kind object;
  #L36d17c.  return v0 @kind object;
}
procedure `int` `previousIndex`(`pd.t` v1 @kind this) @signature `Lpd/t;.previousIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36d144.  v0:= -1I;
  #L36d146.  return v0;
}
procedure `void` `remove`(`pd.t` v2 @kind this) @signature `Lpd/t;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36d220.  v0:= new `java.lang.UnsupportedOperationException`;
  #L36d224.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L36d228.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d22e.  throw v0;
}
procedure `void` `set`(`pd.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lpd/t;.set:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L36d240.  v2:= new `java.lang.UnsupportedOperationException`;
  #L36d244.  v0:= "Operation is not supported for read-only collection" @kind object;
  #L36d248.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36d24e.  throw v2;
}
