record `pd.b0` @kind class @AccessFlag  extends `pd.a0` @kind class {
}
procedure `int` `a`(`int` v1 ) @signature `Lpd/b0;.a:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L36ddb4.  if v1 >= 0 then goto L36ddba;
  #L36ddb8.  goto L36dde6;
  #L36ddba.  v0:= 3I;
  #L36ddbc.  if v1 >= v0 then goto L36ddc6;
  #L36ddc0.  v1:= v1 + 1;
  #L36ddc4.  goto L36dde6;
  #L36ddc6.  v0:= 2.0F;
  #L36ddca.  if v1 >= v0 then goto L36dde0;
  #L36ddce.  v1:= (`float`) v1 @kind i2f;
  #L36ddd0.  v0:= 0.75F;
  #L36ddd4.  v1:= v1 / v0 @kind float;
  #L36ddd6.  v0:= 1.0F;
  #L36ddda.  v1:= v1 + v0 @kind float;
  #L36dddc.  v1:= (`int`) v1 @kind f2i;
  #L36ddde.  goto L36dde6;
  #L36dde0.  v1:= 2147483647I;
  #L36dde6.  return v1;
}
procedure `java.util.Map` `b`(`od.m` v1 @kind object) @signature `Lpd/b0;.b:(Lod/m;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L36ddf8.  v0:= "pair" @kind object;
  #L36ddfc.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36de02.  call temp:= `getFirst`(v1) @signature `Lod/m;.getFirst:()Ljava/lang/Object;` @kind virtual;
  #L36de08.  v0:= temp @kind object;
  #L36de0a.  call temp:= `getSecond`(v1) @signature `Lod/m;.getSecond:()Ljava/lang/Object;` @kind virtual;
  #L36de10.  v1:= temp @kind object;
  #L36de12.  call temp:= `singletonMap`(v0, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L36de18.  v1:= temp @kind object;
  #L36de1a.  v0:= "singletonMap(pair.first, pair.second)" @kind object;
  #L36de1e.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36de24.  return v1 @kind object;
}
procedure `java.util.Map` `c`(`java.util.Map` v1 @kind object) @signature `Lpd/b0;.c:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L36de38.  v0:= "<this>" @kind object;
  #L36de3c.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36de42.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L36de48.  v1:= temp @kind object;
  #L36de4a.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36de50.  v1:= temp @kind object;
  #L36de52.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36de58.  v1:= temp @kind object;
  #L36de5a.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L36de5e.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L36de64.  v0:= temp @kind object;
  #L36de66.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L36de6c.  v1:= temp @kind object;
  #L36de6e.  call temp:= `singletonMap`(v0, v1) @signature `Ljava/util/Collections;.singletonMap:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L36de74.  v1:= temp @kind object;
  #L36de76.  v0:= "with(entries.iterator().â€¦ingletonMap(key, value) }" @kind object;
  #L36de7a.  call `e`(v1, v0) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36de80.  return v1 @kind object;
}
