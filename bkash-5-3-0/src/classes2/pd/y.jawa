record `pd.y` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface {
}
procedure `void` `<init>`(`pd.y` v0 @kind this) @signature `Lpd/y;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L36dd7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36dd82.  return @kind void;
}
procedure `long` `a`() @signature `Lpd/y;.a:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `next`(`pd.y` v2 @kind this) @signature `Lpd/y;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L36dd58.  call temp:= `a`(v2) @signature `Lpd/y;.a:()J` @kind virtual;
  #L36dd5e.  v0:= temp @kind wide;
  #L36dd60.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L36dd66.  v0:= temp @kind object;
  #L36dd68.  return v0 @kind object;
}
procedure `void` `remove`(`pd.y` v2 @kind this) @signature `Lpd/y;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36dd94.  v0:= new `java.lang.UnsupportedOperationException`;
  #L36dd98.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L36dd9c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36dda2.  throw v0;
}
