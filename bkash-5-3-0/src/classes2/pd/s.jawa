record `pd.s` @kind class @AccessFlag  extends `pd.r` @kind class {
}
procedure `java.lang.Appendable` `k`(`java.lang.Iterable` v2 @kind object, `java.lang.Appendable` v3 @kind object, `java.lang.CharSequence` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `int` v7 , `java.lang.CharSequence` v8 @kind object, `wd.l` v9 @kind object) @signature `Lpd/s;.k:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L36c9e8.  v0:= "<this>" @kind object;
  #L36c9ec.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36c9f2.  v0:= "buffer" @kind object;
  #L36c9f6.  call `f`(v3, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36c9fc.  v0:= "separator" @kind object;
  #L36ca00.  call `f`(v4, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ca06.  v0:= "prefix" @kind object;
  #L36ca0a.  call `f`(v5, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ca10.  v0:= "postfix" @kind object;
  #L36ca14.  call `f`(v6, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ca1a.  v0:= "truncated" @kind object;
  #L36ca1e.  call `f`(v8, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ca24.  call temp:= `append`(v3, v5) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L36ca2a.  call temp:= `iterator`(v2) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36ca30.  v2:= temp @kind object;
  #L36ca32.  v5:= 0I;
  #L36ca34.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36ca3a.  v0:= temp;
  #L36ca3c.  if v0 == 0 then goto L36ca68;
  #L36ca40.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36ca46.  v0:= temp @kind object;
  #L36ca48.  v5:= v5 + 1;
  #L36ca4c.  v1:= 1I;
  #L36ca4e.  if v5 <= v1 then goto L36ca58;
  #L36ca52.  call temp:= `append`(v3, v4) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L36ca58.  if v7 < 0 then goto L36ca60;
  #L36ca5c.  if v5 > v7 then goto L36ca68;
  #L36ca60.  call `a`(v3, v0, v9) @signature `Lkotlin/text/d;.a:(Ljava/lang/Appendable;Ljava/lang/Object;Lwd/l;)V` @kind static;
  #L36ca66.  goto L36ca34;
  #L36ca68.  if v7 < 0 then goto L36ca76;
  #L36ca6c.  if v5 <= v7 then goto L36ca76;
  #L36ca70.  call temp:= `append`(v3, v8) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L36ca76.  call temp:= `append`(v3, v6) @signature `Ljava/lang/Appendable;.append:(Ljava/lang/CharSequence;)Ljava/lang/Appendable;` @kind interface;
  #L36ca7c.  return v3 @kind object;
}
procedure `java.lang.Appendable` `l`(`java.lang.Iterable` v6 @kind object, `java.lang.Appendable` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `java.lang.CharSequence` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `int` v11 , `java.lang.CharSequence` v12 @kind object, `wd.l` v13 @kind object, `int` v14 , `java.lang.Object` v15 @kind object) @signature `Lpd/s;.l:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;ILjava/lang/Object;)Ljava/lang/Appendable;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L36c964.  v0:= v14 ^& 2;
  #L36c968.  if v0 == 0 then goto L36c972;
  #L36c96c.  v0:= ", " @kind object;
  #L36c970.  goto L36c974;
  #L36c972.  v0:= v8 @kind object;
  #L36c974.  v1:= v14 ^& 4;
  #L36c978.  v2:= "" @kind object;
  #L36c97c.  if v1 == 0 then goto L36c984;
  #L36c980.  v1:= v2 @kind object;
  #L36c982.  goto L36c986;
  #L36c984.  v1:= v9 @kind object;
  #L36c986.  v3:= v14 ^& 8;
  #L36c98a.  if v3 == 0 then goto L36c990;
  #L36c98e.  goto L36c992;
  #L36c990.  v2:= v10 @kind object;
  #L36c992.  v3:= v14 ^& 16;
  #L36c996.  if v3 == 0 then goto L36c99e;
  #L36c99a.  v3:= -1I;
  #L36c99c.  goto L36c9a0;
  #L36c99e.  v3:= v11;
  #L36c9a0.  v4:= v14 ^& 32;
  #L36c9a4.  if v4 == 0 then goto L36c9ae;
  #L36c9a8.  v4:= "..." @kind object;
  #L36c9ac.  goto L36c9b0;
  #L36c9ae.  v4:= v12 @kind object;
  #L36c9b0.  v5:= v14 ^& 64;
  #L36c9b4.  if v5 == 0 then goto L36c9bc;
  #L36c9b8.  v5:= 0I;
  #L36c9ba.  goto L36c9be;
  #L36c9bc.  v5:= v13 @kind object;
  #L36c9be.  v8:= v6 @kind object;
  #L36c9c0.  v9:= v7 @kind object;
  #L36c9c2.  v10:= v0 @kind object;
  #L36c9c4.  v11:= v1 @kind object;
  #L36c9c6.  v12:= v2 @kind object;
  #L36c9c8.  v13:= v3;
  #L36c9ca.  v14:= v4 @kind object;
  #L36c9cc.  v15:= v5 @kind object;
  #L36c9ce.  call temp:= `k`(v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lpd/s;.k:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;)Ljava/lang/Appendable;` @kind static;
  #L36c9d4.  v0:= temp @kind object;
  #L36c9d6.  return v0 @kind object;
}
procedure `java.lang.String` `m`(`java.lang.Iterable` v9 @kind object, `java.lang.CharSequence` v10 @kind object, `java.lang.CharSequence` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 , `java.lang.CharSequence` v14 @kind object, `wd.l` v15 @kind object) @signature `Lpd/s;.m:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L36cc48.  v0:= "<this>" @kind object;
  #L36cc4c.  call `f`(v9, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cc52.  v0:= "separator" @kind object;
  #L36cc56.  call `f`(v10, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cc5c.  v0:= "prefix" @kind object;
  #L36cc60.  call `f`(v11, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cc66.  v0:= "postfix" @kind object;
  #L36cc6a.  call `f`(v12, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cc70.  v0:= "truncated" @kind object;
  #L36cc74.  call `f`(v14, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cc7a.  v2:= new `java.lang.StringBuilder`;
  #L36cc7e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36cc84.  v1:= v9 @kind object;
  #L36cc86.  v3:= v10 @kind object;
  #L36cc88.  v4:= v11 @kind object;
  #L36cc8a.  v5:= v12 @kind object;
  #L36cc8c.  v6:= v13;
  #L36cc8e.  v7:= v14 @kind object;
  #L36cc90.  v8:= v15 @kind object;
  #L36cc92.  call temp:= `k`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lpd/s;.k:(Ljava/lang/Iterable;Ljava/lang/Appendable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;)Ljava/lang/Appendable;` @kind static;
  #L36cc98.  v9:= temp @kind object;
  #L36cc9a.  v9:= (`java.lang.StringBuilder`) v9 @kind object;
  #L36cc9e.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36cca4.  v9:= temp @kind object;
  #L36cca6.  v10:= "joinTo(StringBuilder(), â€¦ed, transform).toString()" @kind object;
  #L36ccaa.  call `e`(v9, v10) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ccb0.  return v9 @kind object;
}
procedure `java.lang.String` `n`(`java.lang.Iterable` v4 @kind object, `java.lang.CharSequence` v5 @kind object, `java.lang.CharSequence` v6 @kind object, `java.lang.CharSequence` v7 @kind object, `int` v8 , `java.lang.CharSequence` v9 @kind object, `wd.l` v10 @kind object, `int` v11 , `java.lang.Object` v12 @kind object) @signature `Lpd/s;.n:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;ILjava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36cbcc.  v12:= v11 ^& 1;
  #L36cbd0.  if v12 == 0 then goto L36cbd8;
  #L36cbd4.  v5:= ", " @kind object;
  #L36cbd8.  v12:= v11 ^& 2;
  #L36cbdc.  v0:= "" @kind object;
  #L36cbe0.  if v12 == 0 then goto L36cbe8;
  #L36cbe4.  v12:= v0 @kind object;
  #L36cbe6.  goto L36cbea;
  #L36cbe8.  v12:= v6 @kind object;
  #L36cbea.  v6:= v11 ^& 4;
  #L36cbee.  if v6 == 0 then goto L36cbf4;
  #L36cbf2.  goto L36cbf6;
  #L36cbf4.  v0:= v7 @kind object;
  #L36cbf6.  v6:= v11 ^& 8;
  #L36cbfa.  if v6 == 0 then goto L36cc04;
  #L36cbfe.  v8:= -1I;
  #L36cc00.  v1:= -1I;
  #L36cc02.  goto L36cc06;
  #L36cc04.  v1:= v8;
  #L36cc06.  v6:= v11 ^& 16;
  #L36cc0a.  if v6 == 0 then goto L36cc12;
  #L36cc0e.  v9:= "..." @kind object;
  #L36cc12.  v2:= v9 @kind object;
  #L36cc14.  v6:= v11 ^& 32;
  #L36cc18.  if v6 == 0 then goto L36cc1e;
  #L36cc1c.  v10:= 0I;
  #L36cc1e.  v3:= v10 @kind object;
  #L36cc20.  v6:= v4 @kind object;
  #L36cc22.  v7:= v5 @kind object;
  #L36cc24.  v8:= v12 @kind object;
  #L36cc26.  v9:= v0 @kind object;
  #L36cc28.  v10:= v1;
  #L36cc2a.  v11:= v2 @kind object;
  #L36cc2c.  v12:= v3 @kind object;
  #L36cc2e.  call temp:= `m`(v6, v7, v8, v9, v10, v11, v12) @signature `Lpd/s;.m:(Ljava/lang/Iterable;Ljava/lang/CharSequence;Ljava/lang/CharSequence;Ljava/lang/CharSequence;ILjava/lang/CharSequence;Lwd/l;)Ljava/lang/String;` @kind static;
  #L36cc34.  v4:= temp @kind object;
  #L36cc36.  return v4 @kind object;
}
procedure `java.lang.Comparable` `o`(`java.lang.Iterable` v3 @kind object) @signature `Lpd/s;.o:(Ljava/lang/Iterable;)Ljava/lang/Comparable;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36ca90.  v0:= "<this>" @kind object;
  #L36ca94.  call `f`(v3, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ca9a.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36caa0.  v3:= temp @kind object;
  #L36caa2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36caa8.  v0:= temp;
  #L36caaa.  if v0 != 0 then goto L36cab2;
  #L36caae.  v3:= 0I;
  #L36cab0.  return v3 @kind object;
  #L36cab2.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36cab8.  v0:= temp @kind object;
  #L36caba.  v0:= (`java.lang.Comparable`) v0 @kind object;
  #L36cabe.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36cac4.  v1:= temp;
  #L36cac6.  if v1 == 0 then goto L36cae6;
  #L36caca.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36cad0.  v1:= temp @kind object;
  #L36cad2.  v1:= (`java.lang.Comparable`) v1 @kind object;
  #L36cad6.  call temp:= `compareTo`(v0, v1) @signature `Ljava/lang/Comparable;.compareTo:(Ljava/lang/Object;)I` @kind interface;
  #L36cadc.  v2:= temp;
  #L36cade.  if v2 <= 0 then goto L36cabe;
  #L36cae2.  v0:= v1 @kind object;
  #L36cae4.  goto L36cabe;
  #L36cae6.  return v0 @kind object;
}
procedure `java.lang.Object` `p`(`java.lang.Iterable` v1 @kind object) @signature `Lpd/s;.p:(Ljava/lang/Iterable;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L36caf8.  v0:= "<this>" @kind object;
  #L36cafc.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cb02.  v0:= instanceof @variable v1 @type ^`java.util.List` @kind boolean;
  #L36cb06.  if v0 == 0 then goto L36cb18;
  #L36cb0a.  v1:= (`java.util.List`) v1 @kind object;
  #L36cb0e.  call temp:= `q`(v1) @signature `Lpd/s;.q:(Ljava/util/List;)Ljava/lang/Object;` @kind static;
  #L36cb14.  v1:= temp @kind object;
  #L36cb16.  return v1 @kind object;
  #L36cb18.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36cb1e.  v1:= temp @kind object;
  #L36cb20.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36cb26.  v0:= temp;
  #L36cb28.  if v0 == 0 then goto L36cb52;
  #L36cb2c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36cb32.  v0:= temp @kind object;
  #L36cb34.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36cb3a.  v1:= temp;
  #L36cb3c.  if v1 != 0 then goto L36cb42;
  #L36cb40.  return v0 @kind object;
  #L36cb42.  v1:= new `java.lang.IllegalArgumentException`;
  #L36cb46.  v0:= "Collection has more than one element." @kind object;
  #L36cb4a.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36cb50.  throw v1;
  #L36cb52.  v1:= new `java.util.NoSuchElementException`;
  #L36cb56.  v0:= "Collection is empty." @kind object;
  #L36cb5a.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36cb60.  throw v1;
}
procedure `java.lang.Object` `q`(`java.util.List` v2 @kind object) @signature `Lpd/s;.q:(Ljava/util/List;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;
    v1;

  #L36cb74.  v0:= "<this>" @kind object;
  #L36cb78.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cb7e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36cb84.  v0:= temp;
  #L36cb86.  if v0 == 0 then goto L36cbac;
  #L36cb8a.  v1:= 1I;
  #L36cb8c.  if v0 != v1 then goto L36cb9c;
  #L36cb90.  v0:= 0I;
  #L36cb92.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36cb98.  v2:= temp @kind object;
  #L36cb9a.  return v2 @kind object;
  #L36cb9c.  v2:= new `java.lang.IllegalArgumentException`;
  #L36cba0.  v0:= "List has more than one element." @kind object;
  #L36cba4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36cbaa.  throw v2;
  #L36cbac.  v2:= new `java.util.NoSuchElementException`;
  #L36cbb0.  v0:= "List is empty." @kind object;
  #L36cbb4.  call `<init>`(v2, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36cbba.  throw v2;
}
procedure `java.util.Collection` `r`(`java.lang.Iterable` v1 @kind object, `java.util.Collection` v2 @kind object) @signature `Lpd/s;.r:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L36ccc4.  v0:= "<this>" @kind object;
  #L36ccc8.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ccce.  v0:= "destination" @kind object;
  #L36ccd2.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ccd8.  call temp:= `iterator`(v1) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36ccde.  v1:= temp @kind object;
  #L36cce0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36cce6.  v0:= temp;
  #L36cce8.  if v0 == 0 then goto L36ccfc;
  #L36ccec.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36ccf2.  v0:= temp @kind object;
  #L36ccf4.  call temp:= `add`(v2, v0) @signature `Ljava/util/Collection;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36ccfa.  goto L36cce0;
  #L36ccfc.  return v2 @kind object;
}
procedure `java.util.List` `s`(`java.lang.Iterable` v3 @kind object) @signature `Lpd/s;.s:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36cd10.  v0:= "<this>" @kind object;
  #L36cd14.  call `f`(v3, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cd1a.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L36cd1e.  if v0 == 0 then goto L36cd80;
  #L36cd22.  v0:= v3 @kind object;
  #L36cd24.  v0:= (`java.util.Collection`) v0 @kind object;
  #L36cd28.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L36cd2e.  v1:= temp;
  #L36cd30.  if v1 == 0 then goto L36cd76;
  #L36cd34.  v2:= 1I;
  #L36cd36.  if v1 == v2 then goto L36cd44;
  #L36cd3a.  call temp:= `u`(v0) @signature `Lpd/s;.u:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L36cd40.  v3:= temp @kind object;
  #L36cd42.  goto L36cd7e;
  #L36cd44.  v0:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L36cd48.  if v0 == 0 then goto L36cd5c;
  #L36cd4c.  v3:= (`java.util.List`) v3 @kind object;
  #L36cd50.  v0:= 0I;
  #L36cd52.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36cd58.  v3:= temp @kind object;
  #L36cd5a.  goto L36cd6c;
  #L36cd5c.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36cd62.  v3:= temp @kind object;
  #L36cd64.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36cd6a.  v3:= temp @kind object;
  #L36cd6c.  call temp:= `b`(v3) @signature `Lpd/i;.b:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L36cd72.  v3:= temp @kind object;
  #L36cd74.  goto L36cd7e;
  #L36cd76.  call temp:= `d`() @signature `Lpd/i;.d:()Ljava/util/List;` @kind static;
  #L36cd7c.  v3:= temp @kind object;
  #L36cd7e.  return v3 @kind object;
  #L36cd80.  call temp:= `t`(v3) @signature `Lpd/s;.t:(Ljava/lang/Iterable;)Ljava/util/List;` @kind static;
  #L36cd86.  v3:= temp @kind object;
  #L36cd88.  call temp:= `g`(v3) @signature `Lpd/i;.g:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36cd8e.  v3:= temp @kind object;
  #L36cd90.  return v3 @kind object;
}
procedure `java.util.List` `t`(`java.lang.Iterable` v1 @kind object) @signature `Lpd/s;.t:(Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L36cda4.  v0:= "<this>" @kind object;
  #L36cda8.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cdae.  v0:= instanceof @variable v1 @type ^`java.util.Collection` @kind boolean;
  #L36cdb2.  if v0 == 0 then goto L36cdc4;
  #L36cdb6.  v1:= (`java.util.Collection`) v1 @kind object;
  #L36cdba.  call temp:= `u`(v1) @signature `Lpd/s;.u:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L36cdc0.  v1:= temp @kind object;
  #L36cdc2.  return v1 @kind object;
  #L36cdc4.  v0:= new `java.util.ArrayList`;
  #L36cdc8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36cdce.  call temp:= `r`(v1, v0) @signature `Lpd/s;.r:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L36cdd4.  v1:= temp @kind object;
  #L36cdd6.  v1:= (`java.util.List`) v1 @kind object;
  #L36cdda.  return v1 @kind object;
}
procedure `java.util.List` `u`(`java.util.Collection` v1 @kind object) @signature `Lpd/s;.u:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L36cdec.  v0:= "<this>" @kind object;
  #L36cdf0.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36cdf6.  v0:= new `java.util.ArrayList`;
  #L36cdfa.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L36ce00.  return v0 @kind object;
}
procedure `java.util.Set` `v`(`java.lang.Iterable` v3 @kind object) @signature `Lpd/s;.v:(Ljava/lang/Iterable;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36cea8.  v0:= "<this>" @kind object;
  #L36ceac.  call `f`(v3, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ceb2.  v0:= instanceof @variable v3 @type ^`java.util.Collection` @kind boolean;
  #L36ceb6.  if v0 == 0 then goto L36cf36;
  #L36ceba.  v0:= v3 @kind object;
  #L36cebc.  v0:= (`java.util.Collection`) v0 @kind object;
  #L36cec0.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L36cec6.  v1:= temp;
  #L36cec8.  if v1 == 0 then goto L36cf2c;
  #L36cecc.  v2:= 1I;
  #L36cece.  if v1 == v2 then goto L36cefa;
  #L36ced2.  v1:= new `java.util.LinkedHashSet`;
  #L36ced6.  call temp:= `size`(v0) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L36cedc.  v0:= temp;
  #L36cede.  call temp:= `a`(v0) @signature `Lpd/z;.a:(I)I` @kind static;
  #L36cee4.  v0:= temp;
  #L36cee6.  call `<init>`(v1, v0) @signature `Ljava/util/LinkedHashSet;.<init>:(I)V` @kind direct;
  #L36ceec.  call temp:= `r`(v3, v1) @signature `Lpd/s;.r:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L36cef2.  v3:= temp @kind object;
  #L36cef4.  v3:= (`java.util.Set`) v3 @kind object;
  #L36cef8.  goto L36cf34;
  #L36cefa.  v0:= instanceof @variable v3 @type ^`java.util.List` @kind boolean;
  #L36cefe.  if v0 == 0 then goto L36cf12;
  #L36cf02.  v3:= (`java.util.List`) v3 @kind object;
  #L36cf06.  v0:= 0I;
  #L36cf08.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36cf0e.  v3:= temp @kind object;
  #L36cf10.  goto L36cf22;
  #L36cf12.  call temp:= `iterator`(v3) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36cf18.  v3:= temp @kind object;
  #L36cf1a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36cf20.  v3:= temp @kind object;
  #L36cf22.  call temp:= `a`(v3) @signature `Lpd/g0;.a:(Ljava/lang/Object;)Ljava/util/Set;` @kind static;
  #L36cf28.  v3:= temp @kind object;
  #L36cf2a.  goto L36cf34;
  #L36cf2c.  call temp:= `b`() @signature `Lpd/f0;.b:()Ljava/util/Set;` @kind static;
  #L36cf32.  v3:= temp @kind object;
  #L36cf34.  return v3 @kind object;
  #L36cf36.  v0:= new `java.util.LinkedHashSet`;
  #L36cf3a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L36cf40.  call temp:= `r`(v3, v0) @signature `Lpd/s;.r:(Ljava/lang/Iterable;Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L36cf46.  v3:= temp @kind object;
  #L36cf48.  v3:= (`java.util.Set`) v3 @kind object;
  #L36cf4c.  call temp:= `c`(v3) @signature `Lpd/h0;.c:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L36cf52.  v3:= temp @kind object;
  #L36cf54.  return v3 @kind object;
}
procedure `java.util.List` `w`(`java.lang.Iterable` v4 @kind object, `java.lang.Iterable` v5 @kind object) @signature `Lpd/s;.w:(Ljava/lang/Iterable;Ljava/lang/Iterable;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36ce14.  v0:= "<this>" @kind object;
  #L36ce18.  call `f`(v4, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ce1e.  v0:= "other" @kind object;
  #L36ce22.  call `f`(v5, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L36ce28.  call temp:= `iterator`(v4) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36ce2e.  v0:= temp @kind object;
  #L36ce30.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36ce36.  v1:= temp @kind object;
  #L36ce38.  v2:= new `java.util.ArrayList`;
  #L36ce3c.  v3:= 10I;
  #L36ce40.  call temp:= `i`(v4, v3) @signature `Lpd/i;.i:(Ljava/lang/Iterable;I)I` @kind static;
  #L36ce46.  v4:= temp;
  #L36ce48.  call temp:= `i`(v5, v3) @signature `Lpd/i;.i:(Ljava/lang/Iterable;I)I` @kind static;
  #L36ce4e.  v5:= temp;
  #L36ce50.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L36ce56.  v4:= temp;
  #L36ce58.  call `<init>`(v2, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L36ce5e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36ce64.  v4:= temp;
  #L36ce66.  if v4 == 0 then goto L36ce96;
  #L36ce6a.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36ce70.  v4:= temp;
  #L36ce72.  if v4 == 0 then goto L36ce96;
  #L36ce76.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36ce7c.  v4:= temp @kind object;
  #L36ce7e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36ce84.  v5:= temp @kind object;
  #L36ce86.  call temp:= `a`(v4, v5) @signature `Lod/q;.a:(Ljava/lang/Object;Ljava/lang/Object;)Lod/m;` @kind static;
  #L36ce8c.  v4:= temp @kind object;
  #L36ce8e.  call temp:= `add`(v2, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L36ce94.  goto L36ce5e;
  #L36ce96.  return v2 @kind object;
}
