record `pd.h` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.util.Iterator` @kind interface {
}
procedure `void` `<init>`(`pd.h` v0 @kind this) @signature `Lpd/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L36c714.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36c71a.  return @kind void;
}
procedure `char` `a`() @signature `Lpd/h;.a:()C` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `next`(`pd.h` v1 @kind this) @signature `Lpd/h;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L36c6f0.  call temp:= `a`(v1) @signature `Lpd/h;.a:()C` @kind virtual;
  #L36c6f6.  v0:= temp;
  #L36c6f8.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Character;.valueOf:(C)Ljava/lang/Character;` @kind static;
  #L36c6fe.  v0:= temp @kind object;
  #L36c700.  return v0 @kind object;
}
procedure `void` `remove`(`pd.h` v2 @kind this) @signature `Lpd/h;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36c72c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L36c730.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L36c734.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36c73a.  throw v0;
}
