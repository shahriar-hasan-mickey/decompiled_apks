record `okio.n` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.n.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L339c5c.  v0:= constclass @type ^`okio.n` @kind object;
  #L339c60.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L339c66.  v0:= temp @kind object;
  #L339c68.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L339c6e.  v0:= temp @kind object;
  #L339c70.  `@@okio.n.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L339c74.  return @kind void;
}
procedure `void` `<init>`(`okio.n` v0 @kind this) @signature `Lokio/n;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L339c88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339c8e.  return @kind void;
}
procedure `okio.d` `a`(`okio.u` v1 @kind object) @signature `Lokio/n;.a:(Lokio/u;)Lokio/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L339ab0.  v0:= new `okio.p`;
  #L339ab4.  call `<init>`(v0, v1) @signature `Lokio/p;.<init>:(Lokio/u;)V` @kind direct;
  #L339aba.  return v0 @kind object;
}
procedure `okio.e` `b`(`okio.v` v1 @kind object) @signature `Lokio/n;.b:(Lokio/v;)Lokio/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L339acc.  v0:= new `okio.q`;
  #L339ad0.  call `<init>`(v0, v1) @signature `Lokio/q;.<init>:(Lokio/v;)V` @kind direct;
  #L339ad6.  return v0 @kind object;
}
procedure `boolean` `c`(`java.lang.AssertionError` v1 @kind object) @signature `Lokio/n;.c:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L339a4c.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L339a52.  v0:= temp @kind object;
  #L339a54.  if v0 == 0 then goto L339a80;
  #L339a58.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L339a5e.  v0:= temp @kind object;
  #L339a60.  if v0 == 0 then goto L339a80;
  #L339a64.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L339a6a.  v1:= temp @kind object;
  #L339a6c.  v0:= "getsockname failed" @kind object;
  #L339a70.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L339a76.  v1:= temp;
  #L339a78.  if v1 == 0 then goto L339a80;
  #L339a7c.  v1:= 1I;
  #L339a7e.  goto L339a82;
  #L339a80.  v1:= 0I;
  #L339a82.  return v1;
}
procedure `okio.u` `d`(`java.io.OutputStream` v1 @kind object, `okio.w` v2 @kind object) @signature `Lokio/n;.d:(Ljava/io/OutputStream;Lokio/w;)Lokio/u;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339ae8.  if v1 == 0 then goto L339b0c;
  #L339aec.  if v2 == 0 then goto L339afc;
  #L339af0.  v0:= new `okio.n$a`;
  #L339af4.  call `<init>`(v0, v2, v1) @signature `Lokio/n$a;.<init>:(Lokio/w;Ljava/io/OutputStream;)V` @kind direct;
  #L339afa.  return v0 @kind object;
  #L339afc.  v1:= new `java.lang.IllegalArgumentException`;
  #L339b00.  v2:= "timeout == null" @kind object;
  #L339b04.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339b0a.  throw v1;
  #L339b0c.  v1:= new `java.lang.IllegalArgumentException`;
  #L339b10.  v2:= "out == null" @kind object;
  #L339b14.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339b1a.  throw v1;
}
procedure `okio.u` `e`(`java.net.Socket` v1 @kind object) @signature `Lokio/n;.e:(Ljava/net/Socket;)Lokio/u;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L339b2c.  if v1 == 0 then goto L339b6e;
  #L339b30.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L339b36.  v0:= temp @kind object;
  #L339b38.  if v0 == 0 then goto L339b5e;
  #L339b3c.  call temp:= `i`(v1) @signature `Lokio/n;.i:(Ljava/net/Socket;)Lokio/a;` @kind static;
  #L339b42.  v0:= temp @kind object;
  #L339b44.  call temp:= `getOutputStream`(v1) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L339b4a.  v1:= temp @kind object;
  #L339b4c.  call temp:= `d`(v1, v0) @signature `Lokio/n;.d:(Ljava/io/OutputStream;Lokio/w;)Lokio/u;` @kind static;
  #L339b52.  v1:= temp @kind object;
  #L339b54.  call temp:= `r`(v0, v1) @signature `Lokio/a;.r:(Lokio/u;)Lokio/u;` @kind virtual;
  #L339b5a.  v1:= temp @kind object;
  #L339b5c.  return v1 @kind object;
  #L339b5e.  v1:= new `java.io.IOException`;
  #L339b62.  v0:= "socket's output stream == null" @kind object;
  #L339b66.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339b6c.  throw v1;
  #L339b6e.  v1:= new `java.lang.IllegalArgumentException`;
  #L339b72.  v0:= "socket == null" @kind object;
  #L339b76.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339b7c.  throw v1;
}
procedure `okio.v` `f`(`java.io.InputStream` v1 @kind object) @signature `Lokio/n;.f:(Ljava/io/InputStream;)Lokio/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L339b90.  v0:= new `okio.w`;
  #L339b94.  call `<init>`(v0) @signature `Lokio/w;.<init>:()V` @kind direct;
  #L339b9a.  call temp:= `g`(v1, v0) @signature `Lokio/n;.g:(Ljava/io/InputStream;Lokio/w;)Lokio/v;` @kind static;
  #L339ba0.  v1:= temp @kind object;
  #L339ba2.  return v1 @kind object;
}
procedure `okio.v` `g`(`java.io.InputStream` v1 @kind object, `okio.w` v2 @kind object) @signature `Lokio/n;.g:(Ljava/io/InputStream;Lokio/w;)Lokio/v;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339bb4.  if v1 == 0 then goto L339bd8;
  #L339bb8.  if v2 == 0 then goto L339bc8;
  #L339bbc.  v0:= new `okio.n$b`;
  #L339bc0.  call `<init>`(v0, v2, v1) @signature `Lokio/n$b;.<init>:(Lokio/w;Ljava/io/InputStream;)V` @kind direct;
  #L339bc6.  return v0 @kind object;
  #L339bc8.  v1:= new `java.lang.IllegalArgumentException`;
  #L339bcc.  v2:= "timeout == null" @kind object;
  #L339bd0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339bd6.  throw v1;
  #L339bd8.  v1:= new `java.lang.IllegalArgumentException`;
  #L339bdc.  v2:= "in == null" @kind object;
  #L339be0.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339be6.  throw v1;
}
procedure `okio.v` `h`(`java.net.Socket` v1 @kind object) @signature `Lokio/n;.h:(Ljava/net/Socket;)Lokio/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L339bf8.  if v1 == 0 then goto L339c3a;
  #L339bfc.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L339c02.  v0:= temp @kind object;
  #L339c04.  if v0 == 0 then goto L339c2a;
  #L339c08.  call temp:= `i`(v1) @signature `Lokio/n;.i:(Ljava/net/Socket;)Lokio/a;` @kind static;
  #L339c0e.  v0:= temp @kind object;
  #L339c10.  call temp:= `getInputStream`(v1) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L339c16.  v1:= temp @kind object;
  #L339c18.  call temp:= `g`(v1, v0) @signature `Lokio/n;.g:(Ljava/io/InputStream;Lokio/w;)Lokio/v;` @kind static;
  #L339c1e.  v1:= temp @kind object;
  #L339c20.  call temp:= `s`(v0, v1) @signature `Lokio/a;.s:(Lokio/v;)Lokio/v;` @kind virtual;
  #L339c26.  v1:= temp @kind object;
  #L339c28.  return v1 @kind object;
  #L339c2a.  v1:= new `java.io.IOException`;
  #L339c2e.  v0:= "socket's input stream == null" @kind object;
  #L339c32.  call `<init>`(v1, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339c38.  throw v1;
  #L339c3a.  v1:= new `java.lang.IllegalArgumentException`;
  #L339c3e.  v0:= "socket == null" @kind object;
  #L339c42.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339c48.  throw v1;
}
procedure `okio.a` `i`(`java.net.Socket` v1 @kind object) @signature `Lokio/n;.i:(Ljava/net/Socket;)Lokio/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L339a94.  v0:= new `okio.n$c`;
  #L339a98.  call `<init>`(v0, v1) @signature `Lokio/n$c;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L339a9e.  return v0 @kind object;
}
