record `okio.s` @kind class @AccessFlag FINAL {
}
global `okio.r` `@@okio.s.a` @AccessFlag STATIC;
global `long` `@@okio.s.b` @AccessFlag STATIC;
procedure `void` `<init>`(`okio.s` v0 @kind this) @signature `Lokio/s;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L33b1cc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33b1d2.  return @kind void;
}
procedure `void` `a`(`okio.r` v10 @kind object) @signature `Lokio/s;.a:(Lokio/r;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L33b1e4.  v0:= v10.`okio.r.f` @type ^`okio.r` @kind object;
  #L33b1e8.  if v0 != 0 then goto L33b248;
  #L33b1ec.  v0:= v10.`okio.r.g` @type ^`okio.r` @kind object;
  #L33b1f0.  if v0 != 0 then goto L33b248;
  #L33b1f4.  v0:= v10.`okio.r.d` @type ^`boolean` @kind boolean;
  #L33b1f8.  if v0 == 0 then goto L33b1fe;
  #L33b1fc.  return @kind void;
  #L33b1fe.  v0:= constclass @type ^`okio.s` @kind object;
  #L33b202.  @monitorenter v0
  #L33b204.  v1:= `@@okio.s.b` @type ^`long` @kind wide;
  #L33b208.  v3:= 8192L;
  #L33b20c.  v5:= v1 + v3 @kind long;
  #L33b210.  v7:= 65536L;
  #L33b216.  v9:= lcmp(v5, v7);
  #L33b21a.  if v9 <= 0 then goto L33b222;
  #L33b21e.  @monitorexit v0
  #L33b220.  return @kind void;
  #L33b222.  v1:= v1 + v3 @kind long;
  #L33b224.  `@@okio.s.b` @type ^`long` := v1 @kind wide;
  #L33b228.  v1:= `@@okio.s.a` @type ^`okio.r` @kind object;
  #L33b22c.  v10.`okio.r.f` @type ^`okio.r` := v1 @kind object;
  #L33b230.  v1:= 0I;
  #L33b232.  v10.`okio.r.c` @type ^`int` := v1;
  #L33b236.  v10.`okio.r.b` @type ^`int` := v1;
  #L33b23a.  `@@okio.s.a` @type ^`okio.r` := v10 @kind object;
  #L33b23e.  @monitorexit v0
  #L33b240.  return @kind void;
  #L33b242.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33b244.  @monitorexit v0
  #L33b246.  throw v10;
  #L33b248.  v10:= new `java.lang.IllegalArgumentException`;
  #L33b24c.  call `<init>`(v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L33b252.  throw v10;
  catch `java.lang.Throwable` @[L33b204..L33b246] goto L33b242;
}
procedure `okio.r` `b`() @signature `Lokio/s;.b:()Lokio/r;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33b164.  v0:= constclass @type ^`okio.s` @kind object;
  #L33b168.  @monitorenter v0
  #L33b16a.  v1:= `@@okio.s.a` @type ^`okio.r` @kind object;
  #L33b16e.  if v1 == 0 then goto L33b192;
  #L33b172.  v2:= v1.`okio.r.f` @type ^`okio.r` @kind object;
  #L33b176.  `@@okio.s.a` @type ^`okio.r` := v2 @kind object;
  #L33b17a.  v2:= 0I;
  #L33b17c.  v1.`okio.r.f` @type ^`okio.r` := v2 @kind object;
  #L33b180.  v2:= `@@okio.s.b` @type ^`long` @kind wide;
  #L33b184.  v4:= 8192L;
  #L33b188.  v2:= v2 - v4 @kind long;
  #L33b18a.  `@@okio.s.b` @type ^`long` := v2 @kind wide;
  #L33b18e.  @monitorexit v0
  #L33b190.  return v1 @kind object;
  #L33b192.  @monitorexit v0
  #L33b194.  v0:= new `okio.r`;
  #L33b198.  call `<init>`(v0) @signature `Lokio/r;.<init>:()V` @kind direct;
  #L33b19e.  return v0 @kind object;
  #L33b1a0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33b1a2.  @monitorexit v0
  #L33b1a4.  throw v1;
  catch `java.lang.Throwable` @[L33b16a..L33b194] goto L33b1a0;
  catch `java.lang.Throwable` @[L33b1a2..L33b1a4] goto L33b1a0;
}
