record `okio.n$a` @kind class @AccessFlag FINAL extends `okio.u` @kind interface {
  `okio.w` `okio.n$a.g` @AccessFlag FINAL_SYNTHETIC;
  `java.io.OutputStream` `okio.n$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.n$a` v0 @kind this, `okio.w` v1 @kind object, `java.io.OutputStream` v2 @kind object) @signature `Lokio/n$a;.<init>:(Lokio/w;Ljava/io/OutputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3396f8.  v0.`okio.n$a.g` @type ^`okio.w` := v1 @kind object;
  #L3396fc.  v0.`okio.n$a.h` @type ^`java.io.OutputStream` := v2 @kind object;
  #L339700.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L339706.  return @kind void;
}
procedure `void` `close`(`okio.n$a` v1 @kind this) @signature `Lokio/n$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339718.  v0:= v1.`okio.n$a.h` @type ^`java.io.OutputStream` @kind object;
  #L33971c.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L339722.  return @kind void;
}
procedure `void` `e0`(`okio.n$a` v6 @kind this, `okio.c` v7 @kind object, `long` v8 ) @signature `Lokio/n$a;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L339750.  v0:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L339754.  v2:= 0L;
  #L339758.  v4:= v8 @kind wide;
  #L33975a.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L339760.  v0:= 0L;
  #L339764.  v2:= lcmp(v8, v0);
  #L339768.  if v2 <= 0 then goto L3397d6;
  #L33976c.  v0:= v6.`okio.n$a.g` @type ^`okio.w` @kind object;
  #L339770.  call `f`(v0) @signature `Lokio/w;.f:()V` @kind virtual;
  #L339776.  v0:= v7.`okio.c.g` @type ^`okio.r` @kind object;
  #L33977a.  v1:= v0.`okio.r.c` @type ^`int`;
  #L33977e.  v2:= v0.`okio.r.b` @type ^`int`;
  #L339782.  v1:= v1 - v2 @kind int;
  #L339784.  v1:= (`long`) v1 @kind i2l;
  #L339786.  call temp:= `min`(v8, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L33978c.  v1:= temp @kind wide;
  #L33978e.  v2:= (`int`) v1 @kind l2i;
  #L339790.  v1:= v6.`okio.n$a.h` @type ^`java.io.OutputStream` @kind object;
  #L339794.  v3:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L339798.  v4:= v0.`okio.r.b` @type ^`int`;
  #L33979c.  call `write`(v1, v3, v4, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3397a2.  v1:= v0.`okio.r.b` @type ^`int`;
  #L3397a6.  v1:= v1 + v2 @kind int;
  #L3397a8.  v0.`okio.r.b` @type ^`int` := v1;
  #L3397ac.  v2:= (`long`) v2 @kind i2l;
  #L3397ae.  v8:= v8 - v2 @kind long;
  #L3397b0.  v4:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L3397b4.  v4:= v4 - v2 @kind long;
  #L3397b6.  v7.`okio.c.h` @type ^`long` := v4 @kind wide;
  #L3397ba.  v2:= v0.`okio.r.c` @type ^`int`;
  #L3397be.  if v1 != v2 then goto L339760;
  #L3397c2.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L3397c8.  v1:= temp @kind object;
  #L3397ca.  v7.`okio.c.g` @type ^`okio.r` := v1 @kind object;
  #L3397ce.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L3397d4.  goto L339760;
  #L3397d6.  return @kind void;
}
procedure `void` `flush`(`okio.n$a` v1 @kind this) @signature `Lokio/n$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339734.  v0:= v1.`okio.n$a.h` @type ^`java.io.OutputStream` @kind object;
  #L339738.  call `flush`(v0) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L33973e.  return @kind void;
}
procedure `okio.w` `timeout`(`okio.n$a` v1 @kind this) @signature `Lokio/n$a;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3396e0.  v0:= v1.`okio.n$a.g` @type ^`okio.w` @kind object;
  #L3396e4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.n$a` v2 @kind this) @signature `Lokio/n$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33969c.  v0:= new `java.lang.StringBuilder`;
  #L3396a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3396a6.  v1:= "sink(" @kind object;
  #L3396aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3396b0.  v1:= v2.`okio.n$a.h` @type ^`java.io.OutputStream` @kind object;
  #L3396b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3396ba.  v1:= ")" @kind object;
  #L3396be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3396c4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3396ca.  v0:= temp @kind object;
  #L3396cc.  return v0 @kind object;
}
