record `okio.l` @kind class @AccessFlag PUBLIC_FINAL extends `okio.v` @kind interface {
  `int` `okio.l.g` @AccessFlag PRIVATE;
  `okio.e` `okio.l.h` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Inflater` `okio.l.i` @AccessFlag PRIVATE_FINAL;
  `okio.m` `okio.l.j` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.CRC32` `okio.l.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.l` v2 @kind this, `okio.v` v3 @kind object) @signature `Lokio/l;.<init>:(Lokio/v;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L339028.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33902e.  v0:= 0I;
  #L339030.  v2.`okio.l.g` @type ^`int` := v0;
  #L339034.  v0:= new `java.util.zip.CRC32`;
  #L339038.  call `<init>`(v0) @signature `Ljava/util/zip/CRC32;.<init>:()V` @kind direct;
  #L33903e.  v2.`okio.l.k` @type ^`java.util.zip.CRC32` := v0 @kind object;
  #L339042.  if v3 == 0 then goto L339072;
  #L339046.  v0:= new `java.util.zip.Inflater`;
  #L33904a.  v1:= 1I;
  #L33904c.  call `<init>`(v0, v1) @signature `Ljava/util/zip/Inflater;.<init>:(Z)V` @kind direct;
  #L339052.  v2.`okio.l.i` @type ^`java.util.zip.Inflater` := v0 @kind object;
  #L339056.  call temp:= `b`(v3) @signature `Lokio/n;.b:(Lokio/v;)Lokio/e;` @kind static;
  #L33905c.  v3:= temp @kind object;
  #L33905e.  v2.`okio.l.h` @type ^`okio.e` := v3 @kind object;
  #L339062.  v1:= new `okio.m`;
  #L339066.  call `<init>`(v1, v3, v0) @signature `Lokio/m;.<init>:(Lokio/e;Ljava/util/zip/Inflater;)V` @kind direct;
  #L33906c.  v2.`okio.l.j` @type ^`okio.m` := v1 @kind object;
  #L339070.  return @kind void;
  #L339072.  v3:= new `java.lang.IllegalArgumentException`;
  #L339076.  v0:= "source == null" @kind object;
  #L33907a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339080.  throw v3;
}
procedure `void` `e`(`okio.l` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lokio/l;.e:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L339094.  if v6 != v5 then goto L33909a;
  #L339098.  return @kind void;
  #L33909a.  v0:= new `java.io.IOException`;
  #L33909e.  v1:= 3I;
  #L3390a0.  v1:= new `java.lang.Object`[v1];
  #L3390a4.  v2:= 0I;
  #L3390a6.  v1[v2]:= v4 @kind object;
  #L3390aa.  v4:= 1I;
  #L3390ac.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3390b2.  v6:= temp @kind object;
  #L3390b4.  v1[v4]:= v6 @kind object;
  #L3390b8.  v4:= 2I;
  #L3390ba.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3390c0.  v5:= temp @kind object;
  #L3390c2.  v1[v4]:= v5 @kind object;
  #L3390c6.  v4:= "%s: actual 0x%08x != expected 0x%08x" @kind object;
  #L3390ca.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3390d0.  v4:= temp @kind object;
  #L3390d2.  call `<init>`(v0, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3390d8.  throw v0;
}
procedure `void` `i`(`okio.l` v17 @kind this) @signature `Lokio/l;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L339108.  v6:= v17 @kind object;
  #L33910c.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L339110.  v1:= 10L;
  #L339114.  call `F0`(v0, v1) @signature `Lokio/e;.F0:(J)V` @kind interface;
  #L33911a.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33911e.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L339124.  v0:= temp @kind object;
  #L339126.  v1:= 3L;
  #L33912a.  call temp:= `w`(v0, v1) @signature `Lokio/c;.w:(J)B` @kind virtual;
  #L339130.  v7:= temp;
  #L339132.  v0:= v7 ^> 1;
  #L339136.  v8:= 1I;
  #L339138.  v0:= v0 ^& v8 @kind int;
  #L33913a.  v9:= 0I;
  #L33913c.  if v0 != v8 then goto L339144;
  #L339140.  v10:= 1I;
  #L339142.  goto L339146;
  #L339144.  v10:= 0I;
  #L339146.  if v10 == 0 then goto L339168;
  #L33914a.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33914e.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L339154.  v1:= temp @kind object;
  #L339156.  v2:= 0L;
  #L33915a.  v4:= 10L;
  #L33915e.  v0:= v17 @kind object;
  #L339162.  call `r`(v0, v1, v2, v4) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L339168.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33916c.  call temp:= `readShort`(v0) @signature `Lokio/e;.readShort:()S` @kind interface;
  #L339172.  v0:= temp;
  #L339174.  v1:= 8075I;
  #L339178.  v2:= "ID1ID2" @kind object;
  #L33917c.  call `e`(v6, v2, v1, v0) @signature `Lokio/l;.e:(Ljava/lang/String;II)V` @kind direct;
  #L339182.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L339186.  v1:= 8L;
  #L33918a.  call `h0`(v0, v1) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L339190.  v0:= v7 ^> 2;
  #L339194.  v0:= v0 ^& v8 @kind int;
  #L339196.  if v0 != v8 then goto L339214;
  #L33919a.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33919e.  v1:= 2L;
  #L3391a2.  call `F0`(v0, v1) @signature `Lokio/e;.F0:(J)V` @kind interface;
  #L3391a8.  if v10 == 0 then goto L3391ca;
  #L3391ac.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3391b0.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L3391b6.  v1:= temp @kind object;
  #L3391b8.  v2:= 0L;
  #L3391bc.  v4:= 2L;
  #L3391c0.  v0:= v17 @kind object;
  #L3391c4.  call `r`(v0, v1, v2, v4) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L3391ca.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3391ce.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L3391d4.  v0:= temp @kind object;
  #L3391d6.  call temp:= `y0`(v0) @signature `Lokio/c;.y0:()S` @kind virtual;
  #L3391dc.  v0:= temp;
  #L3391de.  v1:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3391e2.  v11:= (`long`) v0 @kind i2l;
  #L3391e4.  call `F0`(v1, v11) @signature `Lokio/e;.F0:(J)V` @kind interface;
  #L3391ea.  if v10 == 0 then goto L33920a;
  #L3391ee.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3391f2.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L3391f8.  v1:= temp @kind object;
  #L3391fa.  v2:= 0L;
  #L3391fe.  v0:= v17 @kind object;
  #L339202.  v4:= v11 @kind wide;
  #L339204.  call `r`(v0, v1, v2, v4) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L33920a.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33920e.  call `h0`(v0, v11) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L339214.  v0:= v7 ^> 3;
  #L339218.  v0:= v0 ^& v8 @kind int;
  #L33921a.  v11:= -1L;
  #L33921e.  v13:= 1L;
  #L339222.  if v0 != v8 then goto L339278;
  #L339226.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33922a.  call temp:= `L0`(v0, v9) @signature `Lokio/e;.L0:(B)J` @kind interface;
  #L339230.  v15:= temp @kind wide;
  #L339232.  v0:= lcmp(v15, v11);
  #L339236.  if v0 == 0 then goto L33926c;
  #L33923a.  if v10 == 0 then goto L33925c;
  #L33923e.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L339242.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L339248.  v1:= temp @kind object;
  #L33924a.  v2:= 0L;
  #L33924e.  v4:= v15 + v13 @kind long;
  #L339252.  v0:= v17 @kind object;
  #L339256.  call `r`(v0, v1, v2, v4) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L33925c.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L339260.  v1:= v15 + v13 @kind long;
  #L339264.  call `h0`(v0, v1) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L33926a.  goto L339278;
  #L33926c.  v0:= new `java.io.EOFException`;
  #L339270.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L339276.  throw v0;
  #L339278.  v0:= v7 ^> 4;
  #L33927c.  v0:= v0 ^& v8 @kind int;
  #L33927e.  if v0 != v8 then goto L3392d2;
  #L339282.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L339286.  call temp:= `L0`(v0, v9) @signature `Lokio/e;.L0:(B)J` @kind interface;
  #L33928c.  v7:= temp @kind wide;
  #L33928e.  v0:= lcmp(v7, v11);
  #L339292.  if v0 == 0 then goto L3392c6;
  #L339296.  if v10 == 0 then goto L3392b8;
  #L33929a.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L33929e.  call temp:= `b`(v0) @signature `Lokio/e;.b:()Lokio/c;` @kind interface;
  #L3392a4.  v1:= temp @kind object;
  #L3392a6.  v2:= 0L;
  #L3392aa.  v4:= v7 + v13 @kind long;
  #L3392ae.  v0:= v17 @kind object;
  #L3392b2.  call `r`(v0, v1, v2, v4) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L3392b8.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3392bc.  v7:= v7 + v13 @kind long;
  #L3392be.  call `h0`(v0, v7) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L3392c4.  goto L3392d2;
  #L3392c6.  v0:= new `java.io.EOFException`;
  #L3392ca.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3392d0.  throw v0;
  #L3392d2.  if v10 == 0 then goto L339306;
  #L3392d6.  v0:= v6.`okio.l.h` @type ^`okio.e` @kind object;
  #L3392da.  call temp:= `y0`(v0) @signature `Lokio/e;.y0:()S` @kind interface;
  #L3392e0.  v0:= temp;
  #L3392e2.  v1:= v6.`okio.l.k` @type ^`java.util.zip.CRC32` @kind object;
  #L3392e6.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L3392ec.  v1:= temp @kind wide;
  #L3392ee.  v2:= (`int`) v1 @kind l2i;
  #L3392f0.  v1:= (`short`) v2 @kind i2s;
  #L3392f2.  v2:= "FHCRC" @kind object;
  #L3392f6.  call `e`(v6, v2, v0, v1) @signature `Lokio/l;.e:(Ljava/lang/String;II)V` @kind direct;
  #L3392fc.  v0:= v6.`okio.l.k` @type ^`java.util.zip.CRC32` @kind object;
  #L339300.  call `reset`(v0) @signature `Ljava/util/zip/CRC32;.reset:()V` @kind virtual;
  #L339306.  return @kind void;
}
procedure `void` `k`(`okio.l` v3 @kind this) @signature `Lokio/l;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L339318.  v0:= v3.`okio.l.h` @type ^`okio.e` @kind object;
  #L33931c.  call temp:= `p0`(v0) @signature `Lokio/e;.p0:()I` @kind interface;
  #L339322.  v0:= temp;
  #L339324.  v1:= v3.`okio.l.k` @type ^`java.util.zip.CRC32` @kind object;
  #L339328.  call temp:= `getValue`(v1) @signature `Ljava/util/zip/CRC32;.getValue:()J` @kind virtual;
  #L33932e.  v1:= temp @kind wide;
  #L339330.  v2:= (`int`) v1 @kind l2i;
  #L339332.  v1:= "CRC" @kind object;
  #L339336.  call `e`(v3, v1, v0, v2) @signature `Lokio/l;.e:(Ljava/lang/String;II)V` @kind direct;
  #L33933c.  v0:= v3.`okio.l.h` @type ^`okio.e` @kind object;
  #L339340.  call temp:= `p0`(v0) @signature `Lokio/e;.p0:()I` @kind interface;
  #L339346.  v0:= temp;
  #L339348.  v1:= v3.`okio.l.i` @type ^`java.util.zip.Inflater` @kind object;
  #L33934c.  call temp:= `getBytesWritten`(v1) @signature `Ljava/util/zip/Inflater;.getBytesWritten:()J` @kind virtual;
  #L339352.  v1:= temp @kind wide;
  #L339354.  v2:= (`int`) v1 @kind l2i;
  #L339356.  v1:= "ISIZE" @kind object;
  #L33935a.  call `e`(v3, v1, v0, v2) @signature `Lokio/l;.e:(Ljava/lang/String;II)V` @kind direct;
  #L339360.  return @kind void;
}
procedure `void` `r`(`okio.l` v5 @kind this, `okio.c` v6 @kind object, `long` v7 , `long` v9 ) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L339374.  v6:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L339378.  v0:= v6.`okio.r.c` @type ^`int`;
  #L33937c.  v1:= v6.`okio.r.b` @type ^`int`;
  #L339380.  v2:= v0 - v1 @kind int;
  #L339384.  v2:= (`long`) v2 @kind i2l;
  #L339386.  v4:= lcmp(v7, v2);
  #L33938a.  if v4 < 0 then goto L33939a;
  #L33938e.  v0:= v0 - v1 @kind int;
  #L339390.  v0:= (`long`) v0 @kind i2l;
  #L339392.  v7:= v7 - v0 @kind long;
  #L339394.  v6:= v6.`okio.r.f` @type ^`okio.r` @kind object;
  #L339398.  goto L339378;
  #L33939a.  v0:= 0L;
  #L33939e.  v2:= lcmp(v9, v0);
  #L3393a2.  if v2 <= 0 then goto L3393dc;
  #L3393a6.  v2:= v6.`okio.r.b` @type ^`int`;
  #L3393aa.  v2:= (`long`) v2 @kind i2l;
  #L3393ac.  v2:= v2 + v7 @kind long;
  #L3393ae.  v7:= (`int`) v2 @kind l2i;
  #L3393b0.  v8:= v6.`okio.r.c` @type ^`int`;
  #L3393b4.  v8:= v8 - v7 @kind int;
  #L3393b6.  v2:= (`long`) v8 @kind i2l;
  #L3393b8.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3393be.  v2:= temp @kind wide;
  #L3393c0.  v8:= (`int`) v2 @kind l2i;
  #L3393c2.  v2:= v5.`okio.l.k` @type ^`java.util.zip.CRC32` @kind object;
  #L3393c6.  v3:= v6.`okio.r.a` @type ^`byte`[] @kind object;
  #L3393ca.  call `update`(v2, v3, v7, v8) @signature `Ljava/util/zip/CRC32;.update:([BII)V` @kind virtual;
  #L3393d0.  v7:= (`long`) v8 @kind i2l;
  #L3393d2.  v9:= v9 - v7 @kind long;
  #L3393d4.  v6:= v6.`okio.r.f` @type ^`okio.r` @kind object;
  #L3393d8.  v7:= v0 @kind wide;
  #L3393da.  goto L33939e;
  #L3393dc.  return @kind void;
}
procedure `void` `close`(`okio.l` v1 @kind this) @signature `Lokio/l;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3390ec.  v0:= v1.`okio.l.j` @type ^`okio.m` @kind object;
  #L3390f0.  call `close`(v0) @signature `Lokio/m;.close:()V` @kind virtual;
  #L3390f6.  return @kind void;
}
procedure `okio.w` `timeout`(`okio.l` v1 @kind this) @signature `Lokio/l;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339008.  v0:= v1.`okio.l.h` @type ^`okio.e` @kind object;
  #L33900c.  call temp:= `timeout`(v0) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L339012.  v0:= temp @kind object;
  #L339014.  return v0 @kind object;
}
procedure `long` `z0`(`okio.l` v11 @kind this, `okio.c` v12 @kind object, `long` v13 ) @signature `Lokio/l;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L338f34.  v0:= 0L;
  #L338f38.  v2:= lcmp(v13, v0);
  #L338f3c.  if v2 < 0 then goto L338fca;
  #L338f40.  if v2 != 0 then goto L338f46;
  #L338f44.  return v0 @kind wide;
  #L338f46.  v0:= v11.`okio.l.g` @type ^`int`;
  #L338f4a.  v1:= 1I;
  #L338f4c.  if v0 != 0 then goto L338f5a;
  #L338f50.  call `i`(v11) @signature `Lokio/l;.i:()V` @kind direct;
  #L338f56.  v11.`okio.l.g` @type ^`int` := v1;
  #L338f5a.  v0:= v11.`okio.l.g` @type ^`int`;
  #L338f5e.  v2:= -1L;
  #L338f62.  v4:= 2I;
  #L338f64.  if v0 != v1 then goto L338f92;
  #L338f68.  v7:= v12.`okio.c.h` @type ^`long` @kind wide;
  #L338f6c.  v0:= v11.`okio.l.j` @type ^`okio.m` @kind object;
  #L338f70.  call temp:= `z0`(v0, v12, v13) @signature `Lokio/m;.z0:(Lokio/c;J)J` @kind virtual;
  #L338f76.  v13:= temp @kind wide;
  #L338f78.  v0:= lcmp(v13, v2);
  #L338f7c.  if v0 == 0 then goto L338f8e;
  #L338f80.  v5:= v11 @kind object;
  #L338f82.  v6:= v12 @kind object;
  #L338f84.  v9:= v13 @kind wide;
  #L338f86.  call `r`(v5, v6, v7, v9) @signature `Lokio/l;.r:(Lokio/c;JJ)V` @kind direct;
  #L338f8c.  return v13 @kind wide;
  #L338f8e.  v11.`okio.l.g` @type ^`int` := v4;
  #L338f92.  v12:= v11.`okio.l.g` @type ^`int`;
  #L338f96.  if v12 != v4 then goto L338fc8;
  #L338f9a.  call `k`(v11) @signature `Lokio/l;.k:()V` @kind direct;
  #L338fa0.  v12:= 3I;
  #L338fa2.  v11.`okio.l.g` @type ^`int` := v12;
  #L338fa6.  v12:= v11.`okio.l.h` @type ^`okio.e` @kind object;
  #L338faa.  call temp:= `H`(v12) @signature `Lokio/e;.H:()Z` @kind interface;
  #L338fb0.  v12:= temp;
  #L338fb2.  if v12 == 0 then goto L338fb8;
  #L338fb6.  goto L338fc8;
  #L338fb8.  v12:= new `java.io.IOException`;
  #L338fbc.  v13:= "gzip finished without exhausting source" @kind object;
  #L338fc0.  call `<init>`(v12, v13) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338fc6.  throw v12;
  #L338fc8.  return v2 @kind wide;
  #L338fca.  v12:= new `java.lang.IllegalArgumentException`;
  #L338fce.  v0:= new `java.lang.StringBuilder`;
  #L338fd2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338fd8.  v1:= "byteCount < 0: " @kind object;
  #L338fdc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fe2.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L338fe8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338fee.  v13:= temp @kind object;
  #L338ff0.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338ff6.  throw v12;
}
