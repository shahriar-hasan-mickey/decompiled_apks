record `okio.b` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.b.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3355e0.  v0:= 64I;
  #L3355e4.  v1:= new `byte`[v0];
  #L3355e8.  goto L335604;
  #L3355ee.  `@@okio.b.a` @type ^`byte`[] := v1 @kind object;
  #L3355f2.  v0:= new `byte`[v0];
  #L3355f6.  goto L33564c;
  #L3355fc.  `@@okio.b.b` @type ^`byte`[] := v0 @kind object;
  #L335600.  return @kind void;
  #L335602.  
  #L335604.  v1:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L33564b.  goto L3355ee;
  #L33564c.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L335693.  goto L3355fc;
}
procedure `byte`[] `a`(`java.lang.String` v15 @kind object) @signature `Lokio/b;.a:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L335264.  call temp:= `length`(v15) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33526a.  v0:= temp;
  #L33526c.  v1:= 9I;
  #L335270.  v2:= 32I;
  #L335274.  v3:= 13I;
  #L335278.  v4:= 10I;
  #L33527c.  if v0 <= 0 then goto L3352ac;
  #L335280.  v5:= v0 + -1;
  #L335284.  call temp:= `charAt`(v15, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L33528a.  v5:= temp;
  #L33528c.  v6:= 61I;
  #L335290.  if v5 == v6 then goto L3352a6;
  #L335294.  if v5 == v4 then goto L3352a6;
  #L335298.  if v5 == v3 then goto L3352a6;
  #L33529c.  if v5 == v2 then goto L3352a6;
  #L3352a0.  if v5 == v1 then goto L3352a6;
  #L3352a4.  goto L3352ac;
  #L3352a6.  v0:= v0 + -1;
  #L3352aa.  goto L33526c;
  #L3352ac.  v5:= (`long`) v0 @kind i2l;
  #L3352ae.  v7:= 6L;
  #L3352b2.  v5:= v5 * v7 @kind long;
  #L3352b6.  v7:= 8L;
  #L3352ba.  v5:= v5 / v7 @kind long;
  #L3352bc.  v6:= (`int`) v5 @kind l2i;
  #L3352be.  v5:= new `byte`[v6];
  #L3352c2.  v7:= 0I;
  #L3352c4.  v8:= 0I;
  #L3352c6.  v9:= 0I;
  #L3352c8.  v10:= 0I;
  #L3352ca.  v11:= 0I;
  #L3352cc.  v12:= 0I;
  #L3352ce.  if v8 >= v0 then goto L3353a0;
  #L3352d2.  call temp:= `charAt`(v15, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3352d8.  v13:= temp;
  #L3352da.  v14:= 65I;
  #L3352de.  if v13 < v14 then goto L3352f0;
  #L3352e2.  v14:= 90I;
  #L3352e6.  if v13 > v14 then goto L3352f0;
  #L3352ea.  v13:= v13 + -65;
  #L3352ee.  goto L33535e;
  #L3352f0.  v14:= 97I;
  #L3352f4.  if v13 < v14 then goto L335306;
  #L3352f8.  v14:= 122I;
  #L3352fc.  if v13 > v14 then goto L335306;
  #L335300.  v13:= v13 + -71;
  #L335304.  goto L33535e;
  #L335306.  v14:= 48I;
  #L33530a.  if v13 < v14 then goto L33531c;
  #L33530e.  v14:= 57I;
  #L335312.  if v13 > v14 then goto L33531c;
  #L335316.  v13:= v13 + 4;
  #L33531a.  goto L33535e;
  #L33531c.  v14:= 43I;
  #L335320.  if v13 == v14 then goto L33535a;
  #L335324.  v14:= 45I;
  #L335328.  if v13 != v14 then goto L33532e;
  #L33532c.  goto L33535a;
  #L33532e.  v14:= 47I;
  #L335332.  if v13 == v14 then goto L335354;
  #L335336.  v14:= 95I;
  #L33533a.  if v13 != v14 then goto L335340;
  #L33533e.  goto L335354;
  #L335340.  if v13 == v4 then goto L33539a;
  #L335344.  if v13 == v3 then goto L33539a;
  #L335348.  if v13 == v2 then goto L33539a;
  #L33534c.  if v13 != v1 then goto L335352;
  #L335350.  goto L33539a;
  #L335352.  return v12 @kind object;
  #L335354.  v13:= 63I;
  #L335358.  goto L33535e;
  #L33535a.  v13:= 62I;
  #L33535e.  v10:= v10 ^< 6;
  #L335362.  v12:= (`byte`) v13 @kind i2b;
  #L335364.  v10:= v10 ^| v12 @kind int;
  #L335366.  v9:= v9 + 1;
  #L33536a.  v12:= v9 %% 4;
  #L33536e.  if v12 != 0 then goto L33539a;
  #L335372.  v12:= v11 + 1;
  #L335376.  v13:= v10 ^> 16;
  #L33537a.  v13:= (`byte`) v13 @kind i2b;
  #L33537c.  v5[v11]:= v13 @kind byte;
  #L335380.  v11:= v12 + 1;
  #L335384.  v13:= v10 ^> 8;
  #L335388.  v13:= (`byte`) v13 @kind i2b;
  #L33538a.  v5[v12]:= v13 @kind byte;
  #L33538e.  v12:= v11 + 1;
  #L335392.  v13:= (`byte`) v10 @kind i2b;
  #L335394.  v5[v11]:= v13 @kind byte;
  #L335398.  v11:= v12;
  #L33539a.  v8:= v8 + 1;
  #L33539e.  goto L3352cc;
  #L3353a0.  v9:= v9 %% 4;
  #L3353a4.  v15:= 1I;
  #L3353a6.  if v9 != v15 then goto L3353ac;
  #L3353aa.  return v12 @kind object;
  #L3353ac.  v15:= 2I;
  #L3353ae.  if v9 != v15 then goto L3353c8;
  #L3353b2.  v15:= v10 ^< 12;
  #L3353b6.  v0:= v11 + 1;
  #L3353ba.  v15:= v15 ^> 16;
  #L3353be.  v15:= (`byte`) v15 @kind i2b;
  #L3353c0.  v5[v11]:= v15 @kind byte;
  #L3353c4.  v11:= v0;
  #L3353c6.  goto L3353ee;
  #L3353c8.  v15:= 3I;
  #L3353ca.  if v9 != v15 then goto L3353ee;
  #L3353ce.  v15:= v10 ^< 6;
  #L3353d2.  v0:= v11 + 1;
  #L3353d6.  v1:= v15 ^> 16;
  #L3353da.  v1:= (`byte`) v1 @kind i2b;
  #L3353dc.  v5[v11]:= v1 @kind byte;
  #L3353e0.  v11:= v0 + 1;
  #L3353e4.  v15:= v15 ^> 8;
  #L3353e8.  v15:= (`byte`) v15 @kind i2b;
  #L3353ea.  v5[v0]:= v15 @kind byte;
  #L3353ee.  if v11 != v6 then goto L3353f4;
  #L3353f2.  return v5 @kind object;
  #L3353f4.  v15:= new `byte`[v11];
  #L3353f8.  call `arraycopy`(v5, v7, v15, v7, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3353fe.  return v15 @kind object;
}
procedure `java.lang.String` `b`(`byte`[] v1 @kind object) @signature `Lokio/b;.b:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L335410.  v0:= `@@okio.b.a` @type ^`byte`[] @kind object;
  #L335414.  call temp:= `c`(v1, v0) @signature `Lokio/b;.c:([B[B)Ljava/lang/String;` @kind static;
  #L33541a.  v1:= temp @kind object;
  #L33541c.  return v1 @kind object;
}
procedure `java.lang.String` `c`(`byte`[] v9 @kind object, `byte`[] v10 @kind object) @signature `Lokio/b;.c:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L335430.  v0:= length @variable v9;
  #L335432.  v1:= 2I;
  #L335434.  v0:= v0 + v1 @kind int;
  #L335436.  v0:= v0 / 3;
  #L33543a.  v0:= v0 * 4;
  #L33543e.  v0:= new `byte`[v0];
  #L335442.  v2:= length @variable v9;
  #L335444.  v3:= length @variable v9;
  #L335446.  v3:= v3 %% 3;
  #L33544a.  v2:= v2 - v3 @kind int;
  #L33544c.  v3:= 0I;
  #L33544e.  v4:= 0I;
  #L335450.  if v3 >= v2 then goto L3354d6;
  #L335454.  v5:= v4 + 1;
  #L335458.  v6:= v9[v3] @kind byte;
  #L33545c.  v6:= v6 ^& 255;
  #L335460.  v6:= v6 ^> v1 @kind int;
  #L335462.  v6:= v10[v6] @kind byte;
  #L335466.  v0[v4]:= v6 @kind byte;
  #L33546a.  v4:= v5 + 1;
  #L33546e.  v6:= v9[v3] @kind byte;
  #L335472.  v6:= v6 ^& 3;
  #L335476.  v6:= v6 ^< 4;
  #L33547a.  v7:= v3 + 1;
  #L33547e.  v8:= v9[v7] @kind byte;
  #L335482.  v8:= v8 ^& 255;
  #L335486.  v8:= v8 ^> 4;
  #L33548a.  v6:= v6 ^| v8 @kind int;
  #L33548c.  v6:= v10[v6] @kind byte;
  #L335490.  v0[v5]:= v6 @kind byte;
  #L335494.  v5:= v4 + 1;
  #L335498.  v6:= v9[v7] @kind byte;
  #L33549c.  v6:= v6 ^& 15;
  #L3354a0.  v6:= v6 ^< v1 @kind int;
  #L3354a2.  v7:= v3 + 2;
  #L3354a6.  v8:= v9[v7] @kind byte;
  #L3354aa.  v8:= v8 ^& 255;
  #L3354ae.  v8:= v8 ^> 6;
  #L3354b2.  v6:= v6 ^| v8 @kind int;
  #L3354b4.  v6:= v10[v6] @kind byte;
  #L3354b8.  v0[v4]:= v6 @kind byte;
  #L3354bc.  v4:= v5 + 1;
  #L3354c0.  v6:= v9[v7] @kind byte;
  #L3354c4.  v6:= v6 ^& 63;
  #L3354c8.  v6:= v10[v6] @kind byte;
  #L3354cc.  v0[v5]:= v6 @kind byte;
  #L3354d0.  v3:= v3 + 3;
  #L3354d4.  goto L335450;
  #L3354d6.  v3:= length @variable v9;
  #L3354d8.  v3:= v3 %% 3;
  #L3354dc.  v5:= 61I;
  #L3354e0.  v6:= 1I;
  #L3354e2.  if v3 == v6 then goto L335546;
  #L3354e6.  if v3 == v1 then goto L3354ec;
  #L3354ea.  goto L335582;
  #L3354ec.  v3:= v4 + 1;
  #L3354f0.  v7:= v9[v2] @kind byte;
  #L3354f4.  v7:= v7 ^& 255;
  #L3354f8.  v7:= v7 ^> v1 @kind int;
  #L3354fa.  v7:= v10[v7] @kind byte;
  #L3354fe.  v0[v4]:= v7 @kind byte;
  #L335502.  v4:= v3 + 1;
  #L335506.  v7:= v9[v2] @kind byte;
  #L33550a.  v7:= v7 ^& 3;
  #L33550e.  v7:= v7 ^< 4;
  #L335512.  v2:= v2 + v6 @kind int;
  #L335514.  v6:= v9[v2] @kind byte;
  #L335518.  v6:= v6 ^& 255;
  #L33551c.  v6:= v6 ^> 4;
  #L335520.  v6:= v6 ^| v7 @kind int;
  #L335522.  v6:= v10[v6] @kind byte;
  #L335526.  v0[v3]:= v6 @kind byte;
  #L33552a.  v3:= v4 + 1;
  #L33552e.  v9:= v9[v2] @kind byte;
  #L335532.  v9:= v9 ^& 15;
  #L335536.  v9:= v9 ^< v1 @kind int;
  #L335538.  v9:= v10[v9] @kind byte;
  #L33553c.  v0[v4]:= v9 @kind byte;
  #L335540.  v0[v3]:= v5 @kind byte;
  #L335544.  goto L335582;
  #L335546.  v3:= v4 + 1;
  #L33554a.  v6:= v9[v2] @kind byte;
  #L33554e.  v6:= v6 ^& 255;
  #L335552.  v1:= v6 ^> 2;
  #L335556.  v1:= v10[v1] @kind byte;
  #L33555a.  v0[v4]:= v1 @kind byte;
  #L33555e.  v1:= v3 + 1;
  #L335562.  v9:= v9[v2] @kind byte;
  #L335566.  v9:= v9 ^& 3;
  #L33556a.  v9:= v9 ^< 4;
  #L33556e.  v9:= v10[v9] @kind byte;
  #L335572.  v0[v3]:= v9 @kind byte;
  #L335576.  v9:= v1 + 1;
  #L33557a.  v0[v1]:= v5 @kind byte;
  #L33557e.  v0[v9]:= v5 @kind byte;
  #L335582.  v9:= new `java.lang.String`;
  #L335586.  v10:= "US-ASCII" @kind object;
  #L33558a.  call `<init>`(v9, v0, v10) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L335590.  return v9 @kind object;
  #L335592.  v9:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L335594.  v10:= new `java.lang.AssertionError`;
  #L335598.  call `<init>`(v10, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L33559e.  throw v10;
  catch `java.io.UnsupportedEncodingException` @[L335582..L335590] goto L335592;
}
procedure `java.lang.String` `d`(`byte`[] v1 @kind object) @signature `Lokio/b;.d:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3355c0.  v0:= `@@okio.b.b` @type ^`byte`[] @kind object;
  #L3355c4.  call temp:= `c`(v1, v0) @signature `Lokio/b;.c:([B[B)Ljava/lang/String;` @kind static;
  #L3355ca.  v1:= temp @kind object;
  #L3355cc.  return v1 @kind object;
}
