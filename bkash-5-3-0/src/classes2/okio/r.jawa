record `okio.r` @kind class @AccessFlag FINAL {
  `byte`[] `okio.r.a` @AccessFlag FINAL;
  `int` `okio.r.b` @AccessFlag ;
  `int` `okio.r.c` @AccessFlag ;
  `boolean` `okio.r.d` @AccessFlag ;
  `boolean` `okio.r.e` @AccessFlag ;
  `okio.r` `okio.r.f` @AccessFlag ;
  `okio.r` `okio.r.g` @AccessFlag ;
}
procedure `void` `<init>`(`okio.r` v1 @kind this) @signature `Lokio/r;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L33bb34.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33bb3a.  v0:= 8192I;
  #L33bb3e.  v0:= new `byte`[v0];
  #L33bb42.  v1.`okio.r.a` @type ^`byte`[] := v0 @kind object;
  #L33bb46.  v0:= 1I;
  #L33bb48.  v1.`okio.r.e` @type ^`boolean` := v0 @kind boolean;
  #L33bb4c.  v0:= 0I;
  #L33bb4e.  v1.`okio.r.d` @type ^`boolean` := v0 @kind boolean;
  #L33bb52.  return @kind void;
}
procedure `void` `<init>`(`okio.r` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 , `boolean` v4 , `boolean` v5 ) @signature `Lokio/r;.<init>:([BIIZZ)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33bb64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33bb6a.  v0.`okio.r.a` @type ^`byte`[] := v1 @kind object;
  #L33bb6e.  v0.`okio.r.b` @type ^`int` := v2;
  #L33bb72.  v0.`okio.r.c` @type ^`int` := v3;
  #L33bb76.  v0.`okio.r.d` @type ^`boolean` := v4 @kind boolean;
  #L33bb7a.  v0.`okio.r.e` @type ^`boolean` := v5 @kind boolean;
  #L33bb7e.  return @kind void;
}
procedure `void` `a`(`okio.r` v4 @kind this) @signature `Lokio/r;.a:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33bb90.  v0:= v4.`okio.r.g` @type ^`okio.r` @kind object;
  #L33bb94.  if v0 == v4 then goto L33bbe0;
  #L33bb98.  v1:= v0.`okio.r.e` @type ^`boolean` @kind boolean;
  #L33bb9c.  if v1 != 0 then goto L33bba2;
  #L33bba0.  return @kind void;
  #L33bba2.  v1:= v4.`okio.r.c` @type ^`int`;
  #L33bba6.  v2:= v4.`okio.r.b` @type ^`int`;
  #L33bbaa.  v1:= v1 - v2 @kind int;
  #L33bbac.  v2:= v0.`okio.r.c` @type ^`int`;
  #L33bbb0.  v2:= v2 - 8192;
  #L33bbb4.  v3:= v0.`okio.r.d` @type ^`boolean` @kind boolean;
  #L33bbb8.  if v3 == 0 then goto L33bbc0;
  #L33bbbc.  v3:= 0I;
  #L33bbbe.  goto L33bbc4;
  #L33bbc0.  v3:= v0.`okio.r.b` @type ^`int`;
  #L33bbc4.  v2:= v2 + v3 @kind int;
  #L33bbc6.  if v1 <= v2 then goto L33bbcc;
  #L33bbca.  return @kind void;
  #L33bbcc.  call `f`(v4, v0, v1) @signature `Lokio/r;.f:(Lokio/r;I)V` @kind virtual;
  #L33bbd2.  call temp:= `b`(v4) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L33bbd8.  call `a`(v4) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L33bbde.  return @kind void;
  #L33bbe0.  v0:= new `java.lang.IllegalStateException`;
  #L33bbe4.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L33bbea.  throw v0;
}
procedure `okio.r` `b`(`okio.r` v4 @kind this) @signature `Lokio/r;.b:()Lokio/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33ba1c.  v0:= v4.`okio.r.f` @type ^`okio.r` @kind object;
  #L33ba20.  v1:= 0I;
  #L33ba22.  if v0 == v4 then goto L33ba2a;
  #L33ba26.  v2:= v0 @kind object;
  #L33ba28.  goto L33ba2c;
  #L33ba2a.  v2:= v1 @kind object;
  #L33ba2c.  v3:= v4.`okio.r.g` @type ^`okio.r` @kind object;
  #L33ba30.  v3.`okio.r.f` @type ^`okio.r` := v0 @kind object;
  #L33ba34.  v0:= v4.`okio.r.f` @type ^`okio.r` @kind object;
  #L33ba38.  v0.`okio.r.g` @type ^`okio.r` := v3 @kind object;
  #L33ba3c.  v4.`okio.r.f` @type ^`okio.r` := v1 @kind object;
  #L33ba40.  v4.`okio.r.g` @type ^`okio.r` := v1 @kind object;
  #L33ba44.  return v2 @kind object;
}
procedure `okio.r` `c`(`okio.r` v1 @kind this, `okio.r` v2 @kind object) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L33ba58.  v2.`okio.r.g` @type ^`okio.r` := v1 @kind object;
  #L33ba5c.  v0:= v1.`okio.r.f` @type ^`okio.r` @kind object;
  #L33ba60.  v2.`okio.r.f` @type ^`okio.r` := v0 @kind object;
  #L33ba64.  v0:= v1.`okio.r.f` @type ^`okio.r` @kind object;
  #L33ba68.  v0.`okio.r.g` @type ^`okio.r` := v2 @kind object;
  #L33ba6c.  v1.`okio.r.f` @type ^`okio.r` := v2 @kind object;
  #L33ba70.  return v2 @kind object;
}
procedure `okio.r` `d`(`okio.r` v7 @kind this) @signature `Lokio/r;.d:()Lokio/r;` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33ba84.  v0:= 1I;
  #L33ba86.  v7.`okio.r.d` @type ^`boolean` := v0 @kind boolean;
  #L33ba8a.  v0:= new `okio.r`;
  #L33ba8e.  v2:= v7.`okio.r.a` @type ^`byte`[] @kind object;
  #L33ba92.  v3:= v7.`okio.r.b` @type ^`int`;
  #L33ba96.  v4:= v7.`okio.r.c` @type ^`int`;
  #L33ba9a.  v5:= 1I;
  #L33ba9c.  v6:= 0I;
  #L33ba9e.  v1:= v0 @kind object;
  #L33baa0.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lokio/r;.<init>:([BIIZZ)V` @kind direct;
  #L33baa6.  return v0 @kind object;
}
procedure `okio.r` `e`(`okio.r` v5 @kind this, `int` v6 ) @signature `Lokio/r;.e:(I)Lokio/r;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33bab8.  if v6 <= 0 then goto L33bb18;
  #L33babc.  v0:= v5.`okio.r.c` @type ^`int`;
  #L33bac0.  v1:= v5.`okio.r.b` @type ^`int`;
  #L33bac4.  v0:= v0 - v1 @kind int;
  #L33bac6.  if v6 > v0 then goto L33bb18;
  #L33baca.  v0:= 1024I;
  #L33bace.  if v6 < v0 then goto L33badc;
  #L33bad2.  call temp:= `d`(v5) @signature `Lokio/r;.d:()Lokio/r;` @kind virtual;
  #L33bad8.  v0:= temp @kind object;
  #L33bada.  goto L33baf8;
  #L33badc.  call temp:= `b`() @signature `Lokio/s;.b:()Lokio/r;` @kind static;
  #L33bae2.  v0:= temp @kind object;
  #L33bae4.  v1:= v5.`okio.r.a` @type ^`byte`[] @kind object;
  #L33bae8.  v2:= v5.`okio.r.b` @type ^`int`;
  #L33baec.  v3:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L33baf0.  v4:= 0I;
  #L33baf2.  call `arraycopy`(v1, v2, v3, v4, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33baf8.  v1:= v0.`okio.r.b` @type ^`int`;
  #L33bafc.  v1:= v1 + v6 @kind int;
  #L33bafe.  v0.`okio.r.c` @type ^`int` := v1;
  #L33bb02.  v1:= v5.`okio.r.b` @type ^`int`;
  #L33bb06.  v1:= v1 + v6 @kind int;
  #L33bb08.  v5.`okio.r.b` @type ^`int` := v1;
  #L33bb0c.  v6:= v5.`okio.r.g` @type ^`okio.r` @kind object;
  #L33bb10.  call temp:= `c`(v6, v0) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L33bb16.  return v0 @kind object;
  #L33bb18.  v6:= new `java.lang.IllegalArgumentException`;
  #L33bb1c.  call `<init>`(v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L33bb22.  throw v6;
}
procedure `void` `f`(`okio.r` v4 @kind this, `okio.r` v5 @kind object, `int` v6 ) @signature `Lokio/r;.f:(Lokio/r;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33bbfc.  v0:= v5.`okio.r.e` @type ^`boolean` @kind boolean;
  #L33bc00.  if v0 == 0 then goto L33bc90;
  #L33bc04.  v0:= v5.`okio.r.c` @type ^`int`;
  #L33bc08.  v1:= v0 + v6 @kind int;
  #L33bc0c.  v2:= 8192I;
  #L33bc10.  if v1 <= v2 then goto L33bc64;
  #L33bc14.  v1:= v5.`okio.r.d` @type ^`boolean` @kind boolean;
  #L33bc18.  if v1 != 0 then goto L33bc58;
  #L33bc1c.  v1:= v0 + v6 @kind int;
  #L33bc20.  v3:= v5.`okio.r.b` @type ^`int`;
  #L33bc24.  v1:= v1 - v3 @kind int;
  #L33bc26.  if v1 > v2 then goto L33bc4c;
  #L33bc2a.  v1:= v5.`okio.r.a` @type ^`byte`[] @kind object;
  #L33bc2e.  v0:= v0 - v3 @kind int;
  #L33bc30.  v2:= 0I;
  #L33bc32.  call `arraycopy`(v1, v3, v1, v2, v0) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33bc38.  v0:= v5.`okio.r.c` @type ^`int`;
  #L33bc3c.  v1:= v5.`okio.r.b` @type ^`int`;
  #L33bc40.  v0:= v0 - v1 @kind int;
  #L33bc42.  v5.`okio.r.c` @type ^`int` := v0;
  #L33bc46.  v5.`okio.r.b` @type ^`int` := v2;
  #L33bc4a.  goto L33bc64;
  #L33bc4c.  v5:= new `java.lang.IllegalArgumentException`;
  #L33bc50.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L33bc56.  throw v5;
  #L33bc58.  v5:= new `java.lang.IllegalArgumentException`;
  #L33bc5c.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L33bc62.  throw v5;
  #L33bc64.  v0:= v4.`okio.r.a` @type ^`byte`[] @kind object;
  #L33bc68.  v1:= v4.`okio.r.b` @type ^`int`;
  #L33bc6c.  v2:= v5.`okio.r.a` @type ^`byte`[] @kind object;
  #L33bc70.  v3:= v5.`okio.r.c` @type ^`int`;
  #L33bc74.  call `arraycopy`(v0, v1, v2, v3, v6) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33bc7a.  v0:= v5.`okio.r.c` @type ^`int`;
  #L33bc7e.  v0:= v0 + v6 @kind int;
  #L33bc80.  v5.`okio.r.c` @type ^`int` := v0;
  #L33bc84.  v5:= v4.`okio.r.b` @type ^`int`;
  #L33bc88.  v5:= v5 + v6 @kind int;
  #L33bc8a.  v4.`okio.r.b` @type ^`int` := v5;
  #L33bc8e.  return @kind void;
  #L33bc90.  v5:= new `java.lang.IllegalArgumentException`;
  #L33bc94.  call `<init>`(v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L33bc9a.  throw v5;
}
