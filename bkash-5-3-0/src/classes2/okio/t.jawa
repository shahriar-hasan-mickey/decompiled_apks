record `okio.t` @kind class @AccessFlag FINAL extends `okio.f` @kind class {
  `int`[] `okio.t.directory` @AccessFlag FINAL_TRANSIENT;
  `byte`[][] `okio.t.segments` @AccessFlag FINAL_TRANSIENT;
}
procedure `void` `<init>`(`okio.t` v7 @kind this, `okio.c` v8 @kind object, `int` v9 ) @signature `Lokio/t;.<init>:(Lokio/c;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33b878.  v0:= 0I;
  #L33b87a.  call `<init>`(v7, v0) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L33b880.  v1:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L33b884.  v5:= (`long`) v9 @kind i2l;
  #L33b886.  v3:= 0L;
  #L33b88a.  call `b`(v1, v3, v5) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L33b890.  v0:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L33b894.  v1:= 0I;
  #L33b896.  v2:= 0I;
  #L33b898.  v3:= 0I;
  #L33b89a.  if v2 >= v9 then goto L33b8c8;
  #L33b89e.  v4:= v0.`okio.r.c` @type ^`int`;
  #L33b8a2.  v5:= v0.`okio.r.b` @type ^`int`;
  #L33b8a6.  if v4 == v5 then goto L33b8b8;
  #L33b8aa.  v4:= v4 - v5 @kind int;
  #L33b8ac.  v2:= v2 + v4 @kind int;
  #L33b8ae.  v3:= v3 + 1;
  #L33b8b2.  v0:= v0.`okio.r.f` @type ^`okio.r` @kind object;
  #L33b8b6.  goto L33b89a;
  #L33b8b8.  v8:= new `java.lang.AssertionError`;
  #L33b8bc.  v9:= "s.limit == s.pos" @kind object;
  #L33b8c0.  call `<init>`(v8, v9) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L33b8c6.  throw v8;
  #L33b8c8.  v0:= new `byte`[][v3];
  #L33b8cc.  v7.`okio.t.segments` @type ^`byte`[][] := v0 @kind object;
  #L33b8d0.  v3:= v3 * 2;
  #L33b8d4.  v0:= new `int`[v3];
  #L33b8d8.  v7.`okio.t.directory` @type ^`int`[] := v0 @kind object;
  #L33b8dc.  v8:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L33b8e0.  v0:= 0I;
  #L33b8e2.  if v1 >= v9 then goto L33b924;
  #L33b8e6.  v2:= v7.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b8ea.  v3:= v8.`okio.r.a` @type ^`byte`[] @kind object;
  #L33b8ee.  v2[v0]:= v3 @kind object;
  #L33b8f2.  v3:= v8.`okio.r.c` @type ^`int`;
  #L33b8f6.  v4:= v8.`okio.r.b` @type ^`int`;
  #L33b8fa.  v3:= v3 - v4 @kind int;
  #L33b8fc.  v1:= v1 + v3 @kind int;
  #L33b8fe.  if v1 <= v9 then goto L33b904;
  #L33b902.  v1:= v9;
  #L33b904.  v3:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b908.  v3[v0]:= v1;
  #L33b90c.  v2:= length @variable v2;
  #L33b90e.  v2:= v2 + v0 @kind int;
  #L33b910.  v3[v2]:= v4;
  #L33b914.  v2:= 1I;
  #L33b916.  v8.`okio.r.d` @type ^`boolean` := v2 @kind boolean;
  #L33b91a.  v0:= v0 + 1;
  #L33b91e.  v8:= v8.`okio.r.f` @type ^`okio.r` @kind object;
  #L33b922.  goto L33b8e2;
  #L33b924.  return @kind void;
}
procedure `int` `d`(`okio.t` v3 @kind this, `int` v4 ) @signature `Lokio/t;.d:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L33b598.  v0:= v3.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b59c.  v1:= v3.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b5a0.  v1:= length @variable v1;
  #L33b5a2.  v4:= v4 + 1;
  #L33b5a6.  v2:= 0I;
  #L33b5a8.  call temp:= `binarySearch`(v0, v2, v1, v4) @signature `Ljava/util/Arrays;.binarySearch:([IIII)I` @kind static;
  #L33b5ae.  v4:= temp;
  #L33b5b0.  if v4 < 0 then goto L33b5b6;
  #L33b5b4.  goto L33b5b8;
  #L33b5b6.  v4:= ~v4 @kind int;
  #L33b5b8.  return v4;
}
procedure `okio.f` `f`(`okio.t` v2 @kind this) @signature `Lokio/t;.f:()Lokio/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L33b854.  v0:= new `okio.f`;
  #L33b858.  call temp:= `toByteArray`(v2) @signature `Lokio/t;.toByteArray:()[B` @kind virtual;
  #L33b85e.  v1:= temp @kind object;
  #L33b860.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L33b866.  return v0 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`okio.t` v1 @kind this) @signature `Lokio/t;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33b5f0.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b5f6.  v0:= temp @kind object;
  #L33b5f8.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `asByteBuffer`(`okio.t` v1 @kind this) @signature `Lokio/t;.asByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b6e4.  call temp:= `toByteArray`(v1) @signature `Lokio/t;.toByteArray:()[B` @kind virtual;
  #L33b6ea.  v0:= temp @kind object;
  #L33b6ec.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L33b6f2.  v0:= temp @kind object;
  #L33b6f4.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L33b6fa.  v0:= temp @kind object;
  #L33b6fc.  return v0 @kind object;
}
procedure `java.lang.String` `base64`(`okio.t` v1 @kind this) @signature `Lokio/t;.base64:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b60c.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b612.  v0:= temp @kind object;
  #L33b614.  call temp:= `base64`(v0) @signature `Lokio/f;.base64:()Ljava/lang/String;` @kind virtual;
  #L33b61a.  v0:= temp @kind object;
  #L33b61c.  return v0 @kind object;
}
procedure `java.lang.String` `base64Url`(`okio.t` v1 @kind this) @signature `Lokio/t;.base64Url:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b630.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b636.  v0:= temp @kind object;
  #L33b638.  call temp:= `base64Url`(v0) @signature `Lokio/f;.base64Url:()Ljava/lang/String;` @kind virtual;
  #L33b63e.  v0:= temp @kind object;
  #L33b640.  return v0 @kind object;
}
procedure `boolean` `equals`(`okio.t` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokio/t;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33b270.  v0:= 1I;
  #L33b272.  if v5 != v4 then goto L33b278;
  #L33b276.  return v0;
  #L33b278.  v1:= instanceof @variable v5 @type ^`okio.f` @kind boolean;
  #L33b27c.  v2:= 0I;
  #L33b27e.  if v1 == 0 then goto L33b2b0;
  #L33b282.  v5:= (`okio.f`) v5 @kind object;
  #L33b286.  call temp:= `size`(v5) @signature `Lokio/f;.size:()I` @kind virtual;
  #L33b28c.  v1:= temp;
  #L33b28e.  call temp:= `size`(v4) @signature `Lokio/t;.size:()I` @kind virtual;
  #L33b294.  v3:= temp;
  #L33b296.  if v1 != v3 then goto L33b2b0;
  #L33b29a.  call temp:= `size`(v4) @signature `Lokio/t;.size:()I` @kind virtual;
  #L33b2a0.  v1:= temp;
  #L33b2a2.  call temp:= `rangeEquals`(v4, v2, v5, v2, v1) @signature `Lokio/t;.rangeEquals:(ILokio/f;II)Z` @kind virtual;
  #L33b2a8.  v5:= temp;
  #L33b2aa.  if v5 == 0 then goto L33b2b0;
  #L33b2ae.  goto L33b2b2;
  #L33b2b0.  v0:= 0I;
  #L33b2b2.  return v0;
}
procedure `byte` `getByte`(`okio.t` v7 @kind this, `int` v8 ) @signature `Lokio/t;.getByte:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33b400.  v0:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b404.  v1:= v7.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b408.  v1:= length @variable v1;
  #L33b40a.  v1:= v1 + -1;
  #L33b40e.  v0:= v0[v1];
  #L33b412.  v1:= (`long`) v0 @kind i2l;
  #L33b414.  v3:= (`long`) v8 @kind i2l;
  #L33b416.  v5:= 1L;
  #L33b41a.  call `b`(v1, v3, v5) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L33b420.  call temp:= `d`(v7, v8) @signature `Lokio/t;.d:(I)I` @kind direct;
  #L33b426.  v0:= temp;
  #L33b428.  if v0 != 0 then goto L33b430;
  #L33b42c.  v1:= 0I;
  #L33b42e.  goto L33b43c;
  #L33b430.  v1:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b434.  v2:= v0 + -1;
  #L33b438.  v1:= v1[v2];
  #L33b43c.  v2:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b440.  v3:= v7.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b444.  v4:= length @variable v3;
  #L33b446.  v4:= v4 + v0 @kind int;
  #L33b448.  v2:= v2[v4];
  #L33b44c.  v0:= v3[v0] @kind object;
  #L33b450.  v8:= v8 - v1 @kind int;
  #L33b452.  v8:= v8 + v2 @kind int;
  #L33b454.  v8:= v0[v8] @kind byte;
  #L33b458.  return v8;
}
procedure `int` `hashCode`(`okio.t` v8 @kind this) @signature `Lokio/t;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L33b4e4.  v0:= v8.`okio.f.hashCode` @type ^`int`;
  #L33b4e8.  if v0 == 0 then goto L33b4ee;
  #L33b4ec.  return v0;
  #L33b4ee.  v0:= v8.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b4f2.  v0:= length @variable v0;
  #L33b4f4.  v1:= 0I;
  #L33b4f6.  v2:= 1I;
  #L33b4f8.  v2:= 0I;
  #L33b4fa.  v3:= 1I;
  #L33b4fc.  if v1 >= v0 then goto L33b53a;
  #L33b500.  v4:= v8.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b504.  v4:= v4[v1] @kind object;
  #L33b508.  v5:= v8.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b50c.  v6:= v0 + v1 @kind int;
  #L33b510.  v6:= v5[v6];
  #L33b514.  v5:= v5[v1];
  #L33b518.  v2:= v5 - v2 @kind int;
  #L33b51c.  v2:= v2 + v6 @kind int;
  #L33b51e.  if v6 >= v2 then goto L33b532;
  #L33b522.  v3:= v3 * 31;
  #L33b526.  v7:= v4[v6] @kind byte;
  #L33b52a.  v3:= v3 + v7 @kind int;
  #L33b52c.  v6:= v6 + 1;
  #L33b530.  goto L33b51e;
  #L33b532.  v1:= v1 + 1;
  #L33b536.  v2:= v5;
  #L33b538.  goto L33b4fc;
  #L33b53a.  v8.`okio.f.hashCode` @type ^`int` := v3;
  #L33b53e.  return v3;
}
procedure `java.lang.String` `hex`(`okio.t` v1 @kind this) @signature `Lokio/t;.hex:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b654.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b65a.  v0:= temp @kind object;
  #L33b65c.  call temp:= `hex`(v0) @signature `Lokio/f;.hex:()Ljava/lang/String;` @kind virtual;
  #L33b662.  v0:= temp @kind object;
  #L33b664.  return v0 @kind object;
}
procedure `okio.f` `hmacSha1`(`okio.t` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/t;.hmacSha1:(Lokio/f;)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b710.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b716.  v0:= temp @kind object;
  #L33b718.  call temp:= `hmacSha1`(v0, v2) @signature `Lokio/f;.hmacSha1:(Lokio/f;)Lokio/f;` @kind virtual;
  #L33b71e.  v2:= temp @kind object;
  #L33b720.  return v2 @kind object;
}
procedure `okio.f` `hmacSha256`(`okio.t` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/t;.hmacSha256:(Lokio/f;)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b734.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b73a.  v0:= temp @kind object;
  #L33b73c.  call temp:= `hmacSha256`(v0, v2) @signature `Lokio/f;.hmacSha256:(Lokio/f;)Lokio/f;` @kind virtual;
  #L33b742.  v2:= temp @kind object;
  #L33b744.  return v2 @kind object;
}
procedure `int` `indexOf`(`okio.t` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lokio/t;.indexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b550.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b556.  v0:= temp @kind object;
  #L33b558.  call temp:= `indexOf`(v0, v2, v3) @signature `Lokio/f;.indexOf:([BI)I` @kind virtual;
  #L33b55e.  v2:= temp;
  #L33b560.  return v2;
}
procedure `byte`[] `internalArray`(`okio.t` v1 @kind this) @signature `Lokio/t;.internalArray:()[B` @AccessFlag  {
    temp;
    v0;

  #L33b46c.  call temp:= `toByteArray`(v1) @signature `Lokio/t;.toByteArray:()[B` @kind virtual;
  #L33b472.  v0:= temp @kind object;
  #L33b474.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`okio.t` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lokio/t;.lastIndexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b574.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b57a.  v0:= temp @kind object;
  #L33b57c.  call temp:= `lastIndexOf`(v0, v2, v3) @signature `Lokio/f;.lastIndexOf:([BI)I` @kind virtual;
  #L33b582.  v2:= temp;
  #L33b584.  return v2;
}
procedure `okio.f` `md5`(`okio.t` v1 @kind this) @signature `Lokio/t;.md5:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b758.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b75e.  v0:= temp @kind object;
  #L33b760.  call temp:= `md5`(v0) @signature `Lokio/f;.md5:()Lokio/f;` @kind virtual;
  #L33b766.  v0:= temp @kind object;
  #L33b768.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.t` v7 @kind this, `int` v8 , `okio.f` v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokio/t;.rangeEquals:(ILokio/f;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33b368.  v0:= 0I;
  #L33b36a.  if v8 < 0 then goto L33b3ec;
  #L33b36e.  call temp:= `size`(v7) @signature `Lokio/t;.size:()I` @kind virtual;
  #L33b374.  v1:= temp;
  #L33b376.  v1:= v1 - v11 @kind int;
  #L33b378.  if v8 <= v1 then goto L33b37e;
  #L33b37c.  goto L33b3ec;
  #L33b37e.  call temp:= `d`(v7, v8) @signature `Lokio/t;.d:(I)I` @kind direct;
  #L33b384.  v1:= temp;
  #L33b386.  if v11 <= 0 then goto L33b3e8;
  #L33b38a.  if v1 != 0 then goto L33b392;
  #L33b38e.  v2:= 0I;
  #L33b390.  goto L33b39e;
  #L33b392.  v2:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b396.  v3:= v1 + -1;
  #L33b39a.  v2:= v2[v3];
  #L33b39e.  v3:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b3a2.  v3:= v3[v1];
  #L33b3a6.  v3:= v3 - v2 @kind int;
  #L33b3a8.  v3:= v3 + v2 @kind int;
  #L33b3aa.  v3:= v3 - v8 @kind int;
  #L33b3ac.  call temp:= `min`(v11, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L33b3b2.  v3:= temp;
  #L33b3b4.  v4:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b3b8.  v5:= v7.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b3bc.  v6:= length @variable v5;
  #L33b3be.  v6:= v6 + v1 @kind int;
  #L33b3c0.  v4:= v4[v6];
  #L33b3c4.  v2:= v8 - v2 @kind int;
  #L33b3c8.  v2:= v2 + v4 @kind int;
  #L33b3ca.  v4:= v5[v1] @kind object;
  #L33b3ce.  call temp:= `rangeEquals`(v9, v10, v4, v2, v3) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @kind virtual;
  #L33b3d4.  v2:= temp;
  #L33b3d6.  if v2 != 0 then goto L33b3dc;
  #L33b3da.  return v0;
  #L33b3dc.  v8:= v8 + v3 @kind int;
  #L33b3de.  v10:= v10 + v3 @kind int;
  #L33b3e0.  v11:= v11 - v3 @kind int;
  #L33b3e2.  v1:= v1 + 1;
  #L33b3e6.  goto L33b386;
  #L33b3e8.  v8:= 1I;
  #L33b3ea.  return v8;
  #L33b3ec.  return v0;
}
procedure `boolean` `rangeEquals`(`okio.t` v7 @kind this, `int` v8 , `byte`[] v9 @kind object, `int` v10 , `int` v11 ) @signature `Lokio/t;.rangeEquals:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L33b2c4.  v0:= 0I;
  #L33b2c6.  if v8 < 0 then goto L33b354;
  #L33b2ca.  call temp:= `size`(v7) @signature `Lokio/t;.size:()I` @kind virtual;
  #L33b2d0.  v1:= temp;
  #L33b2d2.  v1:= v1 - v11 @kind int;
  #L33b2d4.  if v8 > v1 then goto L33b354;
  #L33b2d8.  if v10 < 0 then goto L33b354;
  #L33b2dc.  v1:= length @variable v9;
  #L33b2de.  v1:= v1 - v11 @kind int;
  #L33b2e0.  if v10 <= v1 then goto L33b2e6;
  #L33b2e4.  goto L33b354;
  #L33b2e6.  call temp:= `d`(v7, v8) @signature `Lokio/t;.d:(I)I` @kind direct;
  #L33b2ec.  v1:= temp;
  #L33b2ee.  if v11 <= 0 then goto L33b350;
  #L33b2f2.  if v1 != 0 then goto L33b2fa;
  #L33b2f6.  v2:= 0I;
  #L33b2f8.  goto L33b306;
  #L33b2fa.  v2:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b2fe.  v3:= v1 + -1;
  #L33b302.  v2:= v2[v3];
  #L33b306.  v3:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b30a.  v3:= v3[v1];
  #L33b30e.  v3:= v3 - v2 @kind int;
  #L33b310.  v3:= v3 + v2 @kind int;
  #L33b312.  v3:= v3 - v8 @kind int;
  #L33b314.  call temp:= `min`(v11, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L33b31a.  v3:= temp;
  #L33b31c.  v4:= v7.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b320.  v5:= v7.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b324.  v6:= length @variable v5;
  #L33b326.  v6:= v6 + v1 @kind int;
  #L33b328.  v4:= v4[v6];
  #L33b32c.  v2:= v8 - v2 @kind int;
  #L33b330.  v2:= v2 + v4 @kind int;
  #L33b332.  v4:= v5[v1] @kind object;
  #L33b336.  call temp:= `a`(v4, v2, v9, v10, v3) @signature `Lokio/x;.a:([BI[BII)Z` @kind static;
  #L33b33c.  v2:= temp;
  #L33b33e.  if v2 != 0 then goto L33b344;
  #L33b342.  return v0;
  #L33b344.  v8:= v8 + v3 @kind int;
  #L33b346.  v10:= v10 + v3 @kind int;
  #L33b348.  v11:= v11 - v3 @kind int;
  #L33b34a.  v1:= v1 + 1;
  #L33b34e.  goto L33b2ee;
  #L33b350.  v8:= 1I;
  #L33b352.  return v8;
  #L33b354.  return v0;
}
procedure `okio.f` `sha1`(`okio.t` v1 @kind this) @signature `Lokio/t;.sha1:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b77c.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b782.  v0:= temp @kind object;
  #L33b784.  call temp:= `sha1`(v0) @signature `Lokio/f;.sha1:()Lokio/f;` @kind virtual;
  #L33b78a.  v0:= temp @kind object;
  #L33b78c.  return v0 @kind object;
}
procedure `okio.f` `sha256`(`okio.t` v1 @kind this) @signature `Lokio/t;.sha256:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b7a0.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b7a6.  v0:= temp @kind object;
  #L33b7a8.  call temp:= `sha256`(v0) @signature `Lokio/f;.sha256:()Lokio/f;` @kind virtual;
  #L33b7ae.  v0:= temp @kind object;
  #L33b7b0.  return v0 @kind object;
}
procedure `int` `size`(`okio.t` v2 @kind this) @signature `Lokio/t;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33b5cc.  v0:= v2.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b5d0.  v1:= v2.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b5d4.  v1:= length @variable v1;
  #L33b5d6.  v1:= v1 + -1;
  #L33b5da.  v0:= v0[v1];
  #L33b5de.  return v0;
}
procedure `java.lang.String` `string`(`okio.t` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokio/t;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b678.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b67e.  v0:= temp @kind object;
  #L33b680.  call temp:= `string`(v0, v2) @signature `Lokio/f;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L33b686.  v2:= temp @kind object;
  #L33b688.  return v2 @kind object;
}
procedure `okio.f` `substring`(`okio.t` v1 @kind this, `int` v2 ) @signature `Lokio/t;.substring:(I)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b7c4.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b7ca.  v0:= temp @kind object;
  #L33b7cc.  call temp:= `substring`(v0, v2) @signature `Lokio/f;.substring:(I)Lokio/f;` @kind virtual;
  #L33b7d2.  v2:= temp @kind object;
  #L33b7d4.  return v2 @kind object;
}
procedure `okio.f` `substring`(`okio.t` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lokio/t;.substring:(II)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b7e8.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b7ee.  v0:= temp @kind object;
  #L33b7f0.  call temp:= `substring`(v0, v2, v3) @signature `Lokio/f;.substring:(II)Lokio/f;` @kind virtual;
  #L33b7f6.  v2:= temp @kind object;
  #L33b7f8.  return v2 @kind object;
}
procedure `okio.f` `toAsciiLowercase`(`okio.t` v1 @kind this) @signature `Lokio/t;.toAsciiLowercase:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b80c.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b812.  v0:= temp @kind object;
  #L33b814.  call temp:= `toAsciiLowercase`(v0) @signature `Lokio/f;.toAsciiLowercase:()Lokio/f;` @kind virtual;
  #L33b81a.  v0:= temp @kind object;
  #L33b81c.  return v0 @kind object;
}
procedure `okio.f` `toAsciiUppercase`(`okio.t` v1 @kind this) @signature `Lokio/t;.toAsciiUppercase:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b830.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b836.  v0:= temp @kind object;
  #L33b838.  call temp:= `toAsciiUppercase`(v0) @signature `Lokio/f;.toAsciiUppercase:()Lokio/f;` @kind virtual;
  #L33b83e.  v0:= temp @kind object;
  #L33b840.  return v0 @kind object;
}
procedure `byte`[] `toByteArray`(`okio.t` v8 @kind this) @signature `Lokio/t;.toByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L33b488.  v0:= v8.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b48c.  v1:= v8.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b490.  v2:= length @variable v1;
  #L33b492.  v2:= v2 + -1;
  #L33b496.  v0:= v0[v2];
  #L33b49a.  v0:= new `byte`[v0];
  #L33b49e.  v1:= length @variable v1;
  #L33b4a0.  v2:= 0I;
  #L33b4a2.  v3:= 0I;
  #L33b4a4.  if v2 >= v1 then goto L33b4d2;
  #L33b4a8.  v4:= v8.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b4ac.  v5:= v1 + v2 @kind int;
  #L33b4b0.  v5:= v4[v5];
  #L33b4b4.  v4:= v4[v2];
  #L33b4b8.  v6:= v8.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b4bc.  v6:= v6[v2] @kind object;
  #L33b4c0.  v7:= v4 - v3 @kind int;
  #L33b4c4.  call `arraycopy`(v6, v5, v0, v3, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33b4ca.  v2:= v2 + 1;
  #L33b4ce.  v3:= v4;
  #L33b4d0.  goto L33b4a4;
  #L33b4d2.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.t` v1 @kind this) @signature `Lokio/t;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b69c.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b6a2.  v0:= temp @kind object;
  #L33b6a4.  call temp:= `toString`(v0) @signature `Lokio/f;.toString:()Ljava/lang/String;` @kind virtual;
  #L33b6aa.  v0:= temp @kind object;
  #L33b6ac.  return v0 @kind object;
}
procedure `java.lang.String` `utf8`(`okio.t` v1 @kind this) @signature `Lokio/t;.utf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33b6c0.  call temp:= `f`(v1) @signature `Lokio/t;.f:()Lokio/f;` @kind direct;
  #L33b6c6.  v0:= temp @kind object;
  #L33b6c8.  call temp:= `utf8`(v0) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L33b6ce.  v0:= temp @kind object;
  #L33b6d0.  return v0 @kind object;
}
procedure `void` `write`(`okio.t` v6 @kind this, `java.io.OutputStream` v7 @kind object) @signature `Lokio/t;.write:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33b938.  if v7 == 0 then goto L33b976;
  #L33b93c.  v0:= v6.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b940.  v0:= length @variable v0;
  #L33b942.  v1:= 0I;
  #L33b944.  v2:= 0I;
  #L33b946.  if v1 >= v0 then goto L33b974;
  #L33b94a.  v3:= v6.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b94e.  v4:= v0 + v1 @kind int;
  #L33b952.  v4:= v3[v4];
  #L33b956.  v3:= v3[v1];
  #L33b95a.  v5:= v6.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b95e.  v5:= v5[v1] @kind object;
  #L33b962.  v2:= v3 - v2 @kind int;
  #L33b966.  call `write`(v7, v5, v4, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L33b96c.  v1:= v1 + 1;
  #L33b970.  v2:= v3;
  #L33b972.  goto L33b946;
  #L33b974.  return @kind void;
  #L33b976.  v7:= new `java.lang.IllegalArgumentException`;
  #L33b97a.  v0:= "out == null" @kind object;
  #L33b97e.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33b984.  throw v7;
}
procedure `void` `write`(`okio.t` v11 @kind this, `okio.c` v12 @kind object) @signature `Lokio/t;.write:(Lokio/c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L33b998.  v0:= v11.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b99c.  v0:= length @variable v0;
  #L33b99e.  v1:= 0I;
  #L33b9a0.  v2:= 0I;
  #L33b9a2.  if v1 >= v0 then goto L33b9fe;
  #L33b9a6.  v3:= v11.`okio.t.directory` @type ^`int`[] @kind object;
  #L33b9aa.  v4:= v0 + v1 @kind int;
  #L33b9ae.  v7:= v3[v4];
  #L33b9b2.  v3:= v3[v1];
  #L33b9b6.  v4:= new `okio.r`;
  #L33b9ba.  v5:= v11.`okio.t.segments` @type ^`byte`[][] @kind object;
  #L33b9be.  v6:= v5[v1] @kind object;
  #L33b9c2.  v5:= v7 + v3 @kind int;
  #L33b9c6.  v8:= v5 - v2 @kind int;
  #L33b9ca.  v9:= 1I;
  #L33b9cc.  v10:= 0I;
  #L33b9ce.  v5:= v4 @kind object;
  #L33b9d0.  call `<init>`(v5, v6, v7, v8, v9, v10) @signature `Lokio/r;.<init>:([BIIZZ)V` @kind direct;
  #L33b9d6.  v2:= v12.`okio.c.g` @type ^`okio.r` @kind object;
  #L33b9da.  if v2 != 0 then goto L33b9ec;
  #L33b9de.  v4.`okio.r.g` @type ^`okio.r` := v4 @kind object;
  #L33b9e2.  v4.`okio.r.f` @type ^`okio.r` := v4 @kind object;
  #L33b9e6.  v12.`okio.c.g` @type ^`okio.r` := v4 @kind object;
  #L33b9ea.  goto L33b9f6;
  #L33b9ec.  v2:= v2.`okio.r.g` @type ^`okio.r` @kind object;
  #L33b9f0.  call temp:= `c`(v2, v4) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L33b9f6.  v1:= v1 + 1;
  #L33b9fa.  v2:= v3;
  #L33b9fc.  goto L33b9a2;
  #L33b9fe.  v0:= v12.`okio.c.h` @type ^`long` @kind wide;
  #L33ba02.  v2:= (`long`) v2 @kind i2l;
  #L33ba04.  v0:= v0 + v2 @kind long;
  #L33ba06.  v12.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L33ba0a.  return @kind void;
}
