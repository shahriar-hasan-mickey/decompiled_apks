record `okio.n$b` @kind class @AccessFlag FINAL extends `okio.v` @kind interface {
  `okio.w` `okio.n$b.g` @AccessFlag FINAL_SYNTHETIC;
  `java.io.InputStream` `okio.n$b.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.n$b` v0 @kind this, `okio.w` v1 @kind object, `java.io.InputStream` v2 @kind object) @signature `Lokio/n$b;.<init>:(Lokio/w;Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L339920.  v0.`okio.n$b.g` @type ^`okio.w` := v1 @kind object;
  #L339924.  v0.`okio.n$b.h` @type ^`java.io.InputStream` := v2 @kind object;
  #L339928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33992e.  return @kind void;
}
procedure `void` `close`(`okio.n$b` v1 @kind this) @signature `Lokio/n$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339940.  v0:= v1.`okio.n$b.h` @type ^`java.io.InputStream` @kind object;
  #L339944.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L33994a.  return @kind void;
}
procedure `okio.w` `timeout`(`okio.n$b` v1 @kind this) @signature `Lokio/n$b;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339908.  v0:= v1.`okio.n$b.g` @type ^`okio.w` @kind object;
  #L33990c.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.n$b` v2 @kind this) @signature `Lokio/n$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3397e8.  v0:= new `java.lang.StringBuilder`;
  #L3397ec.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3397f2.  v1:= "source(" @kind object;
  #L3397f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3397fc.  v1:= v2.`okio.n$b.h` @type ^`java.io.InputStream` @kind object;
  #L339800.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339806.  v1:= ")" @kind object;
  #L33980a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339810.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L339816.  v0:= temp @kind object;
  #L339818.  return v0 @kind object;
}
procedure `long` `z0`(`okio.n$b` v3 @kind this, `okio.c` v4 @kind object, `long` v5 ) @signature `Lokio/n$b;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33982c.  v0:= 0L;
  #L339830.  v2:= lcmp(v5, v0);
  #L339834.  if v2 < 0 then goto L3398ba;
  #L339838.  if v2 != 0 then goto L33983e;
  #L33983c.  return v0 @kind wide;
  #L33983e.  v0:= v3.`okio.n$b.g` @type ^`okio.w` @kind object;
  #L339842.  call `f`(v0) @signature `Lokio/w;.f:()V` @kind virtual;
  #L339848.  v0:= 1I;
  #L33984a.  call temp:= `E0`(v4, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L339850.  v0:= temp @kind object;
  #L339852.  v1:= v0.`okio.r.c` @type ^`int`;
  #L339856.  v1:= v1 - 8192;
  #L33985a.  v1:= (`long`) v1 @kind i2l;
  #L33985c.  call temp:= `min`(v5, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L339862.  v5:= temp @kind wide;
  #L339864.  v6:= (`int`) v5 @kind l2i;
  #L339866.  v5:= v3.`okio.n$b.h` @type ^`java.io.InputStream` @kind object;
  #L33986a.  v1:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L33986e.  v2:= v0.`okio.r.c` @type ^`int`;
  #L339872.  call temp:= `read`(v5, v1, v2, v6) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L339878.  v5:= temp;
  #L33987a.  v6:= -1I;
  #L33987c.  if v5 != v6 then goto L339886;
  #L339880.  v4:= -1L;
  #L339884.  return v4 @kind wide;
  #L339886.  v6:= v0.`okio.r.c` @type ^`int`;
  #L33988a.  v6:= v6 + v5 @kind int;
  #L33988c.  v0.`okio.r.c` @type ^`int` := v6;
  #L339890.  v0:= v4.`okio.c.h` @type ^`long` @kind wide;
  #L339894.  v5:= (`long`) v5 @kind i2l;
  #L339896.  v0:= v0 + v5 @kind long;
  #L339898.  v4.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L33989c.  return v5 @kind wide;
  #L33989e.  v4:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3398a0.  call temp:= `c`(v4) @signature `Lokio/n;.c:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3398a6.  v5:= temp;
  #L3398a8.  if v5 == 0 then goto L3398b8;
  #L3398ac.  v5:= new `java.io.IOException`;
  #L3398b0.  call `<init>`(v5, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3398b6.  throw v5;
  #L3398b8.  throw v4;
  #L3398ba.  v4:= new `java.lang.IllegalArgumentException`;
  #L3398be.  v0:= new `java.lang.StringBuilder`;
  #L3398c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3398c8.  v1:= "byteCount < 0: " @kind object;
  #L3398cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3398d2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3398d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3398de.  v5:= temp @kind object;
  #L3398e0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3398e6.  throw v4;
  catch `java.lang.AssertionError` @[L33983e..L33989c] goto L33989e;
}
