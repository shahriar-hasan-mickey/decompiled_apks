record `okio.h` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.u` @kind interface {
  `okio.u` `okio.h.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.h` v1 @kind this, `okio.u` v2 @kind object) @signature `Lokio/h;.<init>:(Lokio/u;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L338a00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L338a06.  if v2 == 0 then goto L338a10;
  #L338a0a.  v1.`okio.h.g` @type ^`okio.u` := v2 @kind object;
  #L338a0e.  return @kind void;
  #L338a10.  v2:= new `java.lang.IllegalArgumentException`;
  #L338a14.  v0:= "delegate == null" @kind object;
  #L338a18.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338a1e.  throw v2;
}
procedure `void` `close`(`okio.h` v1 @kind this) @signature `Lokio/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338a30.  v0:= v1.`okio.h.g` @type ^`okio.u` @kind object;
  #L338a34.  call `close`(v0) @signature `Lokio/u;.close:()V` @kind interface;
  #L338a3a.  return @kind void;
}
procedure `void` `e0`(`okio.h` v1 @kind this, `okio.c` v2 @kind object, `long` v3 ) @signature `Lokio/h;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338a68.  v0:= v1.`okio.h.g` @type ^`okio.u` @kind object;
  #L338a6c.  call `e0`(v0, v2, v3) @signature `Lokio/u;.e0:(Lokio/c;J)V` @kind interface;
  #L338a72.  return @kind void;
}
procedure `void` `flush`(`okio.h` v1 @kind this) @signature `Lokio/h;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338a4c.  v0:= v1.`okio.h.g` @type ^`okio.u` @kind object;
  #L338a50.  call `flush`(v0) @signature `Lokio/u;.flush:()V` @kind interface;
  #L338a56.  return @kind void;
}
procedure `okio.w` `timeout`(`okio.h` v1 @kind this) @signature `Lokio/h;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3389e0.  v0:= v1.`okio.h.g` @type ^`okio.u` @kind object;
  #L3389e4.  call temp:= `timeout`(v0) @signature `Lokio/u;.timeout:()Lokio/w;` @kind interface;
  #L3389ea.  v0:= temp @kind object;
  #L3389ec.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.h` v2 @kind this) @signature `Lokio/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L338980.  v0:= new `java.lang.StringBuilder`;
  #L338984.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33898a.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L338990.  v1:= temp @kind object;
  #L338992.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L338998.  v1:= temp @kind object;
  #L33899a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3389a0.  v1:= "(" @kind object;
  #L3389a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3389aa.  v1:= v2.`okio.h.g` @type ^`okio.u` @kind object;
  #L3389ae.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3389b4.  v1:= temp @kind object;
  #L3389b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3389bc.  v1:= ")" @kind object;
  #L3389c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3389c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3389cc.  v0:= temp @kind object;
  #L3389ce.  return v0 @kind object;
}
