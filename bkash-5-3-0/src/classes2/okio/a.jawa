record `okio.a` @kind class @AccessFlag PUBLIC extends `okio.w` @kind class {
  `boolean` `okio.a.e` @AccessFlag PRIVATE;
  `okio.a` `okio.a.f` @AccessFlag PRIVATE;
  `long` `okio.a.g` @AccessFlag PRIVATE;
}
global `long` `@@okio.a.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@okio.a.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.a` `@@okio.a.j` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lokio/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L33507c.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L335080.  v1:= 60L;
  #L335084.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L33508a.  v0:= temp @kind wide;
  #L33508c.  `@@okio.a.h` @type ^`long` := v0 @kind wide;
  #L335090.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L335094.  call temp:= `toNanos`(v2, v0) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L33509a.  v0:= temp @kind wide;
  #L33509c.  `@@okio.a.i` @type ^`long` := v0 @kind wide;
  #L3350a0.  return @kind void;
}
procedure `void` `<init>`(`okio.a` v0 @kind this) @signature `Lokio/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3350b4.  call `<init>`(v0) @signature `Lokio/w;.<init>:()V` @kind direct;
  #L3350ba.  return @kind void;
}
procedure `okio.a` `i`() @signature `Lokio/a;.i:()Lokio/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L334fa0.  v0:= constclass @type ^`okio.a` @kind object;
  #L334fa4.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L334fa8.  v1:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L334fac.  v2:= 0I;
  #L334fae.  if v1 != 0 then goto L334fec;
  #L334fb2.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L334fb8.  v3:= temp @kind wide;
  #L334fba.  v5:= `@@okio.a.h` @type ^`long` @kind wide;
  #L334fbe.  call `wait`(v0, v5) @signature `Ljava/lang/Object;.wait:(J)V` @kind virtual;
  #L334fc4.  v0:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L334fc8.  v0:= v0.`okio.a.f` @type ^`okio.a` @kind object;
  #L334fcc.  if v0 != 0 then goto L334fea;
  #L334fd0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L334fd6.  v0:= temp @kind wide;
  #L334fd8.  v0:= v0 - v3 @kind long;
  #L334fda.  v3:= `@@okio.a.i` @type ^`long` @kind wide;
  #L334fde.  v5:= lcmp(v0, v3);
  #L334fe2.  if v5 < 0 then goto L334fea;
  #L334fe6.  v2:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L334fea.  return v2 @kind object;
  #L334fec.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L334ff2.  v3:= temp @kind wide;
  #L334ff4.  call temp:= `p`(v1, v3) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L334ffa.  v3:= temp @kind wide;
  #L334ffc.  v5:= 0L;
  #L335000.  v7:= lcmp(v3, v5);
  #L335004.  if v7 <= 0 then goto L335022;
  #L335008.  v5:= 1000000L;
  #L33500e.  v7:= v3 / v5 @kind long;
  #L335012.  v5:= v5 * v7 @kind long;
  #L335016.  v3:= v3 - v5 @kind long;
  #L335018.  v1:= (`int`) v3 @kind l2i;
  #L33501a.  call `wait`(v0, v7, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L335020.  return v2 @kind object;
  #L335022.  v0:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L335026.  v3:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L33502a.  v0.`okio.a.f` @type ^`okio.a` := v3 @kind object;
  #L33502e.  v1.`okio.a.f` @type ^`okio.a` := v2 @kind object;
  #L335032.  return v1 @kind object;
}
procedure `boolean` `j`(`okio.a` v3 @kind object) @signature `Lokio/a;.j:(Lokio/a;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L334eb0.  v0:= constclass @type ^`okio.a` @kind object;
  #L334eb4.  @monitorenter v0
  #L334eb6.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L334eba.  if v1 == 0 then goto L334ede;
  #L334ebe.  v2:= v1.`okio.a.f` @type ^`okio.a` @kind object;
  #L334ec2.  if v2 != v3 then goto L334eda;
  #L334ec6.  v2:= v3.`okio.a.f` @type ^`okio.a` @kind object;
  #L334eca.  v1.`okio.a.f` @type ^`okio.a` := v2 @kind object;
  #L334ece.  v1:= 0I;
  #L334ed0.  v3.`okio.a.f` @type ^`okio.a` := v1 @kind object;
  #L334ed4.  v3:= 0I;
  #L334ed6.  @monitorexit v0
  #L334ed8.  return v3;
  #L334eda.  v1:= v2 @kind object;
  #L334edc.  goto L334eba;
  #L334ede.  v3:= 1I;
  #L334ee0.  @monitorexit v0
  #L334ee2.  return v3;
  #L334ee4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L334ee6.  @monitorexit v0
  #L334ee8.  throw v3;
  catch `java.lang.Throwable` @[L334eb6..L334ed4] goto L334ee4;
}
procedure `long` `p`(`okio.a` v2 @kind this, `long` v3 ) @signature `Lokio/a;.p:(J)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L334f88.  v0:= v2.`okio.a.g` @type ^`long` @kind wide;
  #L334f8c.  v0:= v0 - v3 @kind long;
  #L334f8e.  return v0 @kind wide;
}
procedure `void` `q`(`okio.a` v6 @kind object, `long` v7 , `boolean` v9 ) @signature `Lokio/a;.q:(Lokio/a;JZ)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L335154.  v0:= constclass @type ^`okio.a` @kind object;
  #L335158.  @monitorenter v0
  #L33515a.  v1:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L33515e.  if v1 != 0 then goto L335180;
  #L335162.  v1:= new `okio.a`;
  #L335166.  call `<init>`(v1) @signature `Lokio/a;.<init>:()V` @kind direct;
  #L33516c.  `@@okio.a.j` @type ^`okio.a` := v1 @kind object;
  #L335170.  v1:= new `okio.a$c`;
  #L335174.  call `<init>`(v1) @signature `Lokio/a$c;.<init>:()V` @kind direct;
  #L33517a.  call `start`(v1) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L335180.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L335186.  v1:= temp @kind wide;
  #L335188.  v3:= 0L;
  #L33518c.  v5:= lcmp(v7, v3);
  #L335190.  if v5 == 0 then goto L3351b2;
  #L335194.  if v9 == 0 then goto L3351b2;
  #L335198.  call temp:= `c`(v6) @signature `Lokio/w;.c:()J` @kind virtual;
  #L33519e.  v3:= temp @kind wide;
  #L3351a0.  v3:= v3 - v1 @kind long;
  #L3351a2.  call temp:= `min`(v7, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3351a8.  v7:= temp @kind wide;
  #L3351aa.  v7:= v7 + v1 @kind long;
  #L3351ac.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3351b0.  goto L3351ce;
  #L3351b2.  if v5 == 0 then goto L3351be;
  #L3351b6.  v7:= v7 + v1 @kind long;
  #L3351b8.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3351bc.  goto L3351ce;
  #L3351be.  if v9 == 0 then goto L335218;
  #L3351c2.  call temp:= `c`(v6) @signature `Lokio/w;.c:()J` @kind virtual;
  #L3351c8.  v7:= temp @kind wide;
  #L3351ca.  v6.`okio.a.g` @type ^`long` := v7 @kind wide;
  #L3351ce.  call temp:= `p`(v6, v1) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L3351d4.  v7:= temp @kind wide;
  #L3351d6.  v9:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L3351da.  v3:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3351de.  if v3 == 0 then goto L3351fa;
  #L3351e2.  call temp:= `p`(v3, v1) @signature `Lokio/a;.p:(J)J` @kind direct;
  #L3351e8.  v3:= temp @kind wide;
  #L3351ea.  v5:= lcmp(v7, v3);
  #L3351ee.  if v5 >= 0 then goto L3351f4;
  #L3351f2.  goto L3351fa;
  #L3351f4.  v9:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3351f8.  goto L3351da;
  #L3351fa.  v7:= v9.`okio.a.f` @type ^`okio.a` @kind object;
  #L3351fe.  v6.`okio.a.f` @type ^`okio.a` := v7 @kind object;
  #L335202.  v9.`okio.a.f` @type ^`okio.a` := v6 @kind object;
  #L335206.  v6:= `@@okio.a.j` @type ^`okio.a` @kind object;
  #L33520a.  if v9 != v6 then goto L335214;
  #L33520e.  call `notify`(v0) @signature `Ljava/lang/Object;.notify:()V` @kind virtual;
  #L335214.  @monitorexit v0
  #L335216.  return @kind void;
  #L335218.  v6:= new `java.lang.AssertionError`;
  #L33521c.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L335222.  throw v6;
  #L335224.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L335226.  @monitorexit v0
  #L335228.  throw v6;
  catch `java.lang.Throwable` @[L33515a..L335214] goto L335224;
  catch `java.lang.Throwable` @[L335218..L335224] goto L335224;
}
procedure `void` `k`(`okio.a` v6 @kind this) @signature `Lokio/a;.k:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3350cc.  v0:= v6.`okio.a.e` @type ^`boolean` @kind boolean;
  #L3350d0.  if v0 != 0 then goto L335104;
  #L3350d4.  call temp:= `h`(v6) @signature `Lokio/w;.h:()J` @kind virtual;
  #L3350da.  v0:= temp @kind wide;
  #L3350dc.  call temp:= `e`(v6) @signature `Lokio/w;.e:()Z` @kind virtual;
  #L3350e2.  v2:= temp;
  #L3350e4.  v3:= 0L;
  #L3350e8.  v5:= lcmp(v0, v3);
  #L3350ec.  if v5 != 0 then goto L3350f6;
  #L3350f0.  if v2 != 0 then goto L3350f6;
  #L3350f4.  return @kind void;
  #L3350f6.  v3:= 1I;
  #L3350f8.  v6.`okio.a.e` @type ^`boolean` := v3 @kind boolean;
  #L3350fc.  call `q`(v6, v0, v2) @signature `Lokio/a;.q:(Lokio/a;JZ)V` @kind static;
  #L335102.  return @kind void;
  #L335104.  v0:= new `java.lang.IllegalStateException`;
  #L335108.  v1:= "Unbalanced enter/exit" @kind object;
  #L33510c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335112.  throw v0;
}
procedure `java.io.IOException` `l`(`okio.a` v1 @kind this, `java.io.IOException` v2 @kind object) @signature `Lokio/a;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag FINAL {
    temp;
    v0;

  #L334f34.  call temp:= `n`(v1) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L334f3a.  v0:= temp;
  #L334f3c.  if v0 != 0 then goto L334f42;
  #L334f40.  return v2 @kind object;
  #L334f42.  call temp:= `o`(v1, v2) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L334f48.  v2:= temp @kind object;
  #L334f4a.  return v2 @kind object;
}
procedure `void` `m`(`okio.a` v1 @kind this, `boolean` v2 ) @signature `Lokio/a;.m:(Z)V` @AccessFlag FINAL {
    temp;
    v0;

  #L335124.  call temp:= `n`(v1) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L33512a.  v0:= temp;
  #L33512c.  if v0 == 0 then goto L335142;
  #L335130.  if v2 != 0 then goto L335136;
  #L335134.  goto L335142;
  #L335136.  v2:= 0I;
  #L335138.  call temp:= `o`(v1, v2) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L33513e.  v2:= temp @kind object;
  #L335140.  throw v2;
  #L335142.  return @kind void;
}
procedure `boolean` `n`(`okio.a` v2 @kind this) @signature `Lokio/a;.n:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L334f08.  v0:= v2.`okio.a.e` @type ^`boolean` @kind boolean;
  #L334f0c.  v1:= 0I;
  #L334f0e.  if v0 != 0 then goto L334f14;
  #L334f12.  return v1;
  #L334f14.  v2.`okio.a.e` @type ^`boolean` := v1 @kind boolean;
  #L334f18.  call temp:= `j`(v2) @signature `Lokio/a;.j:(Lokio/a;)Z` @kind static;
  #L334f1e.  v0:= temp;
  #L334f20.  return v0;
}
procedure `java.io.IOException` `o`(`okio.a` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokio/a;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L334f5c.  v0:= new `java.io.InterruptedIOException`;
  #L334f60.  v1:= "timeout" @kind object;
  #L334f64.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L334f6a.  if v3 == 0 then goto L334f74;
  #L334f6e.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L334f74.  return v0 @kind object;
}
procedure `okio.u` `r`(`okio.a` v1 @kind this, `okio.u` v2 @kind object) @signature `Lokio/a;.r:(Lokio/u;)Lokio/u;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L335044.  v0:= new `okio.a$a`;
  #L335048.  call `<init>`(v0, v1, v2) @signature `Lokio/a$a;.<init>:(Lokio/a;Lokio/u;)V` @kind direct;
  #L33504e.  return v0 @kind object;
}
procedure `okio.v` `s`(`okio.a` v1 @kind this, `okio.v` v2 @kind object) @signature `Lokio/a;.s:(Lokio/v;)Lokio/v;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L335060.  v0:= new `okio.a$b`;
  #L335064.  call `<init>`(v0, v1, v2) @signature `Lokio/a$b;.<init>:(Lokio/a;Lokio/v;)V` @kind direct;
  #L33506a.  return v0 @kind object;
}
procedure `void` `t`(`okio.a` v0 @kind this) @signature `Lokio/a;.t:()V` @AccessFlag PROTECTED {
    temp;

  #L335250.  return @kind void;
}
