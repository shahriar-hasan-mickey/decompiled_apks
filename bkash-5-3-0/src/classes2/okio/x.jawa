record `okio.x` @kind class @AccessFlag FINAL {
}
global `java.nio.charset.Charset` `@@okio.x.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/x;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L33bf70.  v0:= "UTF-8" @kind object;
  #L33bf74.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L33bf7a.  v0:= temp @kind object;
  #L33bf7c.  `@@okio.x.a` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L33bf80.  return @kind void;
}
procedure `boolean` `a`(`byte`[] v4 @kind object, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lokio/x;.a:([BI[BII)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33bec4.  v0:= 0I;
  #L33bec6.  v1:= 0I;
  #L33bec8.  if v1 >= v8 then goto L33bee8;
  #L33becc.  v2:= v1 + v5 @kind int;
  #L33bed0.  v2:= v4[v2] @kind byte;
  #L33bed4.  v3:= v1 + v7 @kind int;
  #L33bed8.  v3:= v6[v3] @kind byte;
  #L33bedc.  if v2 == v3 then goto L33bee2;
  #L33bee0.  return v0;
  #L33bee2.  v1:= v1 + 1;
  #L33bee6.  goto L33bec8;
  #L33bee8.  v4:= 1I;
  #L33beea.  return v4;
}
procedure `void` `b`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lokio/x;.b:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33bf94.  v0:= v7 ^| v9 @kind long;
  #L33bf98.  v2:= 0L;
  #L33bf9c.  v4:= lcmp(v0, v2);
  #L33bfa0.  if v4 < 0 then goto L33bfba;
  #L33bfa4.  v0:= lcmp(v7, v5);
  #L33bfa8.  if v0 > 0 then goto L33bfba;
  #L33bfac.  v0:= v5 - v7 @kind long;
  #L33bfb0.  v2:= lcmp(v0, v9);
  #L33bfb4.  if v2 < 0 then goto L33bfba;
  #L33bfb8.  return @kind void;
  #L33bfba.  v0:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L33bfbe.  v1:= 3I;
  #L33bfc0.  v1:= new `java.lang.Object`[v1];
  #L33bfc4.  v2:= 0I;
  #L33bfc6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L33bfcc.  v5:= temp @kind object;
  #L33bfce.  v1[v2]:= v5 @kind object;
  #L33bfd2.  v5:= 1I;
  #L33bfd4.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L33bfda.  v6:= temp @kind object;
  #L33bfdc.  v1[v5]:= v6 @kind object;
  #L33bfe0.  v5:= 2I;
  #L33bfe2.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L33bfe8.  v6:= temp @kind object;
  #L33bfea.  v1[v5]:= v6 @kind object;
  #L33bfee.  v5:= "size=%s offset=%s byteCount=%s" @kind object;
  #L33bff2.  call temp:= `format`(v5, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L33bff8.  v5:= temp @kind object;
  #L33bffa.  call `<init>`(v0, v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33c000.  throw v0;
}
procedure `int` `c`(`int` v2 ) @signature `Lokio/x;.c:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L33befc.  v0:= -16777216I;
  #L33bf00.  v0:= v0 ^& v2 @kind int;
  #L33bf02.  v0:= v0 ^>> 24;
  #L33bf06.  v1:= 16711680I;
  #L33bf0a.  v1:= v1 ^& v2 @kind int;
  #L33bf0c.  v1:= v1 ^>> 8;
  #L33bf10.  v0:= v0 ^| v1 @kind int;
  #L33bf12.  v1:= 65280I;
  #L33bf18.  v1:= v1 ^& v2 @kind int;
  #L33bf1a.  v1:= v1 ^< 8;
  #L33bf1e.  v0:= v0 ^| v1 @kind int;
  #L33bf20.  v2:= v2 ^& 255;
  #L33bf24.  v2:= v2 ^< 24;
  #L33bf28.  v2:= v2 ^| v0 @kind int;
  #L33bf2a.  return v2;
}
procedure `short` `d`(`short` v1 ) @signature `Lokio/x;.d:(S)S` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33bf3c.  v0:= 65535I;
  #L33bf42.  v1:= v1 ^& v0 @kind int;
  #L33bf44.  v0:= 65280I;
  #L33bf4a.  v0:= v0 ^& v1 @kind int;
  #L33bf4c.  v0:= v0 ^>> 8;
  #L33bf50.  v1:= v1 ^& 255;
  #L33bf54.  v1:= v1 ^< 8;
  #L33bf58.  v1:= v1 ^| v0 @kind int;
  #L33bf5a.  v1:= (`short`) v1 @kind i2s;
  #L33bf5c.  return v1;
}
procedure `void` `e`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/x;.e:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L33c014.  call `f`(v0) @signature `Lokio/x;.f:(Ljava/lang/Throwable;)V` @kind static;
  #L33c01a.  return @kind void;
}
procedure `void` `f`(`java.lang.Throwable` v0 @kind object) @signature `Lokio/x;.f:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L33c02c.  throw v0;
}
