record `okio.f` @kind class @AccessFlag PUBLIC extends `java.io.Serializable` @kind interface, `java.lang.Comparable` @kind interface {
  `byte`[] `okio.f.data` @AccessFlag FINAL;
  `int` `okio.f.hashCode` @AccessFlag TRANSIENT;
  `java.lang.String` `okio.f.utf8` @AccessFlag TRANSIENT;
}
global `okio.f` `@@okio.f.EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `char`[] `@@okio.f.HEX_DIGITS` @AccessFlag STATIC_FINAL;
global `long` `@@okio.f.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L338560.  v0:= 16I;
  #L338564.  v0:= new `char`[v0];
  #L338568.  goto L338588;
  #L33856e.  `@@okio.f.HEX_DIGITS` @type ^`char`[] := v0 @kind object;
  #L338572.  v0:= 0I;
  #L338574.  v0:= new `byte`[v0];
  #L338578.  call temp:= `of`(v0) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L33857e.  v0:= temp @kind object;
  #L338580.  `@@okio.f.EMPTY` @type ^`okio.f` := v0 @kind object;
  #L338584.  return @kind void;
  #L338586.  
  #L338588.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L3385af.  goto L33856e;
}
procedure `void` `<init>`(`okio.f` v0 @kind this, `byte`[] v1 @kind object) @signature `Lokio/f;.<init>:([B)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3385c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3385c6.  v0.`okio.f.data` @type ^`byte`[] := v1 @kind object;
  #L3385ca.  return @kind void;
}
procedure `int` `a`(`char` v3 ) @signature `Lokio/f;.a:(C)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L337a30.  v0:= 48I;
  #L337a34.  if v3 < v0 then goto L337a44;
  #L337a38.  v1:= 57I;
  #L337a3c.  if v3 > v1 then goto L337a44;
  #L337a40.  v3:= v3 - v0 @kind int;
  #L337a42.  return v3;
  #L337a44.  v0:= 97I;
  #L337a48.  if v3 < v0 then goto L337a5c;
  #L337a4c.  v1:= 102I;
  #L337a50.  if v3 > v1 then goto L337a5c;
  #L337a54.  v3:= v3 - v0 @kind int;
  #L337a56.  v3:= v3 + 10;
  #L337a5a.  return v3;
  #L337a5c.  v0:= 65I;
  #L337a60.  if v3 < v0 then goto L337a6e;
  #L337a64.  v1:= 70I;
  #L337a68.  if v3 > v1 then goto L337a6e;
  #L337a6c.  goto L337a54;
  #L337a6e.  v0:= new `java.lang.IllegalArgumentException`;
  #L337a72.  v1:= new `java.lang.StringBuilder`;
  #L337a76.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337a7c.  v2:= "Unexpected hex digit: " @kind object;
  #L337a80.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337a86.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L337a8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337a92.  v3:= temp @kind object;
  #L337a94.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337a9a.  throw v0;
}
procedure `okio.f` `b`(`okio.f` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokio/f;.b:(Ljava/lang/String;)Lokio/f;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L338008.  call temp:= `getInstance`(v2) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L33800e.  v2:= temp @kind object;
  #L338010.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L338014.  call temp:= `digest`(v2, v0) @signature `Ljava/security/MessageDigest;.digest:([B)[B` @kind virtual;
  #L33801a.  v2:= temp @kind object;
  #L33801c.  call temp:= `of`(v2) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L338022.  v2:= temp @kind object;
  #L338024.  return v2 @kind object;
  #L338026.  v2:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L338028.  v0:= new `java.lang.AssertionError`;
  #L33802c.  call `<init>`(v0, v2) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L338032.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L338008..L338024] goto L338026;
}
procedure `okio.f` `c`(`okio.f` v2 @kind this, `java.lang.String` v3 @kind object, `okio.f` v4 @kind object) @signature `Lokio/f;.c:(Ljava/lang/String;Lokio/f;)Lokio/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3380e0.  call temp:= `getInstance`(v3) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L3380e6.  v0:= temp @kind object;
  #L3380e8.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L3380ec.  call temp:= `toByteArray`(v4) @signature `Lokio/f;.toByteArray:()[B` @kind virtual;
  #L3380f2.  v4:= temp @kind object;
  #L3380f4.  call `<init>`(v1, v4, v3) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3380fa.  call `init`(v0, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L338100.  v3:= v2.`okio.f.data` @type ^`byte`[] @kind object;
  #L338104.  call temp:= `doFinal`(v0, v3) @signature `Ljavax/crypto/Mac;.doFinal:([B)[B` @kind virtual;
  #L33810a.  v3:= temp @kind object;
  #L33810c.  call temp:= `of`(v3) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L338112.  v3:= temp @kind object;
  #L338114.  return v3 @kind object;
  #L338116.  v3:= Exception @type ^`java.security.InvalidKeyException` @kind object;
  #L338118.  v4:= new `java.lang.IllegalArgumentException`;
  #L33811c.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L338122.  throw v4;
  #L338124.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L338126.  v4:= new `java.lang.AssertionError`;
  #L33812a.  call `<init>`(v4, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L338130.  throw v4;
  catch `java.security.NoSuchAlgorithmException` @[L3380e0..L338114] goto L338124;
  catch `java.security.InvalidKeyException` @[L3380e0..L338114] goto L338116;
}
procedure `int` `codePointIndexToCharIndex`(`java.lang.String` v5 @kind object, `int` v6 ) @signature `Lokio/f;.codePointIndexToCharIndex:(Ljava/lang/String;I)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33792c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L337932.  v0:= temp;
  #L337934.  v1:= 0I;
  #L337936.  v2:= 0I;
  #L337938.  if v1 >= v0 then goto L337984;
  #L33793c.  if v2 != v6 then goto L337942;
  #L337940.  return v1;
  #L337942.  call temp:= `codePointAt`(v5, v1) @signature `Ljava/lang/String;.codePointAt:(I)I` @kind virtual;
  #L337948.  v3:= temp;
  #L33794a.  call temp:= `isISOControl`(v3) @signature `Ljava/lang/Character;.isISOControl:(I)Z` @kind static;
  #L337950.  v4:= temp;
  #L337952.  if v4 == 0 then goto L337966;
  #L337956.  v4:= 10I;
  #L33795a.  if v3 == v4 then goto L337966;
  #L33795e.  v4:= 13I;
  #L337962.  if v3 != v4 then goto L337970;
  #L337966.  v4:= 65533I;
  #L33796c.  if v3 != v4 then goto L337974;
  #L337970.  v5:= -1I;
  #L337972.  return v5;
  #L337974.  v2:= v2 + 1;
  #L337978.  call temp:= `charCount`(v3) @signature `Ljava/lang/Character;.charCount:(I)I` @kind static;
  #L33797e.  v3:= temp;
  #L337980.  v1:= v1 + v3 @kind int;
  #L337982.  goto L337938;
  #L337984.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L33798a.  v5:= temp;
  #L33798c.  return v5;
}
procedure `okio.f` `decodeBase64`(`java.lang.String` v1 @kind object) @signature `Lokio/f;.decodeBase64:(Ljava/lang/String;)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L337f0c.  if v1 == 0 then goto L337f2c;
  #L337f10.  call temp:= `a`(v1) @signature `Lokio/b;.a:(Ljava/lang/String;)[B` @kind static;
  #L337f16.  v1:= temp @kind object;
  #L337f18.  if v1 == 0 then goto L337f28;
  #L337f1c.  v0:= new `okio.f`;
  #L337f20.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L337f26.  goto L337f2a;
  #L337f28.  v0:= 0I;
  #L337f2a.  return v0 @kind object;
  #L337f2c.  v1:= new `java.lang.IllegalArgumentException`;
  #L337f30.  v0:= "base64 == null" @kind object;
  #L337f34.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337f3a.  throw v1;
}
procedure `okio.f` `decodeHex`(`java.lang.String` v5 @kind object) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L337f4c.  if v5 == 0 then goto L337fe8;
  #L337f50.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L337f56.  v0:= temp;
  #L337f58.  v0:= v0 %% 2;
  #L337f5c.  if v0 != 0 then goto L337fba;
  #L337f60.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L337f66.  v0:= temp;
  #L337f68.  v0:= v0 / 2;
  #L337f6c.  v1:= new `byte`[v0];
  #L337f70.  v2:= 0I;
  #L337f72.  if v2 >= v0 then goto L337fb0;
  #L337f76.  v3:= v2 * 2;
  #L337f7a.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L337f80.  v4:= temp;
  #L337f82.  call temp:= `a`(v4) @signature `Lokio/f;.a:(C)I` @kind static;
  #L337f88.  v4:= temp;
  #L337f8a.  v4:= v4 ^< 4;
  #L337f8e.  v3:= v3 + 1;
  #L337f92.  call temp:= `charAt`(v5, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L337f98.  v3:= temp;
  #L337f9a.  call temp:= `a`(v3) @signature `Lokio/f;.a:(C)I` @kind static;
  #L337fa0.  v3:= temp;
  #L337fa2.  v4:= v4 + v3 @kind int;
  #L337fa4.  v3:= (`byte`) v4 @kind i2b;
  #L337fa6.  v1[v2]:= v3 @kind byte;
  #L337faa.  v2:= v2 + 1;
  #L337fae.  goto L337f72;
  #L337fb0.  call temp:= `of`(v1) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L337fb6.  v5:= temp @kind object;
  #L337fb8.  return v5 @kind object;
  #L337fba.  v0:= new `java.lang.IllegalArgumentException`;
  #L337fbe.  v1:= new `java.lang.StringBuilder`;
  #L337fc2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337fc8.  v2:= "Unexpected hex string: " @kind object;
  #L337fcc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337fd2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337fd8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337fde.  v5:= temp @kind object;
  #L337fe0.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337fe6.  throw v0;
  #L337fe8.  v5:= new `java.lang.IllegalArgumentException`;
  #L337fec.  v0:= "hex == null" @kind object;
  #L337ff0.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337ff6.  throw v5;
}
procedure `okio.f` `encodeString`(`java.lang.String` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lokio/f;.encodeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L338054.  if v1 == 0 then goto L338080;
  #L338058.  if v2 == 0 then goto L338070;
  #L33805c.  v0:= new `okio.f`;
  #L338060.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L338066.  v1:= temp @kind object;
  #L338068.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L33806e.  return v0 @kind object;
  #L338070.  v1:= new `java.lang.IllegalArgumentException`;
  #L338074.  v2:= "charset == null" @kind object;
  #L338078.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33807e.  throw v1;
  #L338080.  v1:= new `java.lang.IllegalArgumentException`;
  #L338084.  v2:= "s == null" @kind object;
  #L338088.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33808e.  throw v1;
}
procedure `okio.f` `encodeUtf8`(`java.lang.String` v2 @kind object) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3380a0.  if v2 == 0 then goto L3380c0;
  #L3380a4.  v0:= new `okio.f`;
  #L3380a8.  v1:= `@@okio.x.a` @type ^`java.nio.charset.Charset` @kind object;
  #L3380ac.  call temp:= `getBytes`(v2, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3380b2.  v1:= temp @kind object;
  #L3380b4.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L3380ba.  v0.`okio.f.utf8` @type ^`java.lang.String` := v2 @kind object;
  #L3380be.  return v0 @kind object;
  #L3380c0.  v2:= new `java.lang.IllegalArgumentException`;
  #L3380c4.  v0:= "s == null" @kind object;
  #L3380c8.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3380ce.  throw v2;
}
procedure `okio.f` `of`(`java.nio.ByteBuffer` v1 @kind object) @signature `Lokio/f;.of:(Ljava/nio/ByteBuffer;)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L33825c.  if v1 == 0 then goto L33827e;
  #L338260.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L338266.  v0:= temp;
  #L338268.  v0:= new `byte`[v0];
  #L33826c.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L338272.  v1:= new `okio.f`;
  #L338276.  call `<init>`(v1, v0) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L33827c.  return v1 @kind object;
  #L33827e.  v1:= new `java.lang.IllegalArgumentException`;
  #L338282.  v0:= "data == null" @kind object;
  #L338286.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33828c.  throw v1;
}
procedure `okio.f` `of`(`byte`[] v1 @kind object) @signature `Lokio/f;.of:([B)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3381d4.  if v1 == 0 then goto L3381f0;
  #L3381d8.  v0:= new `okio.f`;
  #L3381dc.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L3381e2.  v1:= temp @kind object;
  #L3381e4.  v1:= (`byte`[]) v1 @kind object;
  #L3381e8.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L3381ee.  return v0 @kind object;
  #L3381f0.  v1:= new `java.lang.IllegalArgumentException`;
  #L3381f4.  v0:= "data == null" @kind object;
  #L3381f8.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3381fe.  throw v1;
}
procedure `okio.f` `of`(`byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokio/f;.of:([BII)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L338210.  if v7 == 0 then goto L33823a;
  #L338214.  v0:= length @variable v7;
  #L338216.  v1:= (`long`) v0 @kind i2l;
  #L338218.  v3:= (`long`) v8 @kind i2l;
  #L33821a.  v5:= (`long`) v9 @kind i2l;
  #L33821c.  call `b`(v1, v3, v5) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L338222.  v0:= new `byte`[v9];
  #L338226.  v1:= 0I;
  #L338228.  call `arraycopy`(v7, v8, v0, v1, v9) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L33822e.  v7:= new `okio.f`;
  #L338232.  call `<init>`(v7, v0) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L338238.  return v7 @kind object;
  #L33823a.  v7:= new `java.lang.IllegalArgumentException`;
  #L33823e.  v8:= "data == null" @kind object;
  #L338242.  call `<init>`(v7, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338248.  throw v7;
}
procedure `okio.f` `read`(`java.io.InputStream` v4 @kind object, `int` v5 ) @signature `Lokio/f;.read:(Ljava/io/InputStream;I)Lokio/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3382a0.  if v4 == 0 then goto L33830e;
  #L3382a4.  if v5 < 0 then goto L3382e0;
  #L3382a8.  v0:= new `byte`[v5];
  #L3382ac.  v1:= 0I;
  #L3382ae.  if v1 >= v5 then goto L3382d4;
  #L3382b2.  v2:= v5 - v1 @kind int;
  #L3382b6.  call temp:= `read`(v4, v0, v1, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3382bc.  v2:= temp;
  #L3382be.  v3:= -1I;
  #L3382c0.  if v2 == v3 then goto L3382c8;
  #L3382c4.  v1:= v1 + v2 @kind int;
  #L3382c6.  goto L3382ae;
  #L3382c8.  v4:= new `java.io.EOFException`;
  #L3382cc.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3382d2.  throw v4;
  #L3382d4.  v4:= new `okio.f`;
  #L3382d8.  call `<init>`(v4, v0) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L3382de.  return v4 @kind object;
  #L3382e0.  v4:= new `java.lang.IllegalArgumentException`;
  #L3382e4.  v0:= new `java.lang.StringBuilder`;
  #L3382e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3382ee.  v1:= "byteCount < 0: " @kind object;
  #L3382f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3382f8.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3382fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L338304.  v5:= temp @kind object;
  #L338306.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33830c.  throw v4;
  #L33830e.  v4:= new `java.lang.IllegalArgumentException`;
  #L338312.  v5:= "in == null" @kind object;
  #L338316.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33831c.  throw v4;
}
procedure `void` `readObject`(`okio.f` v2 @kind this, `java.io.ObjectInputStream` v3 @kind object) @signature `Lokio/f;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3385dc.  call temp:= `readInt`(v3) @signature `Ljava/io/ObjectInputStream;.readInt:()I` @kind virtual;
  #L3385e2.  v0:= temp;
  #L3385e4.  call temp:= `read`(v3, v0) @signature `Lokio/f;.read:(Ljava/io/InputStream;I)Lokio/f;` @kind static;
  #L3385ea.  v3:= temp @kind object;
  #L3385ec.  v0:= constclass @type ^`okio.f` @kind object;
  #L3385f0.  v1:= "data" @kind object;
  #L3385f4.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L3385fa.  v0:= temp @kind object;
  #L3385fc.  v1:= 1I;
  #L3385fe.  call `setAccessible`(v0, v1) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L338604.  v3:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L338608.  call `set`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L33860e.  return @kind void;
  #L338610.  v3:= new `java.lang.AssertionError`;
  #L338614.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L33861a.  throw v3;
  #L33861c.  v3:= new `java.lang.AssertionError`;
  #L338620.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L338626.  throw v3;
  catch `java.lang.NoSuchFieldException` @[L3385ec..L33860e] goto L33861c;
  catch `java.lang.IllegalAccessException` @[L3385ec..L33860e] goto L338610;
}
procedure `void` `writeObject`(`okio.f` v1 @kind this, `java.io.ObjectOutputStream` v2 @kind object) @signature `Lokio/f;.writeObject:(Ljava/io/ObjectOutputStream;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L338698.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L33869c.  v0:= length @variable v0;
  #L33869e.  call `writeInt`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.writeInt:(I)V` @kind virtual;
  #L3386a4.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L3386a8.  call `write`(v2, v0) @signature `Ljava/io/ObjectOutputStream;.write:([B)V` @kind virtual;
  #L3386ae.  return @kind void;
}
procedure `java.nio.ByteBuffer` `asByteBuffer`(`okio.f` v1 @kind this) @signature `Lokio/f;.asByteBuffer:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337ee4.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337ee8.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L337eee.  v0:= temp @kind object;
  #L337ef0.  call temp:= `asReadOnlyBuffer`(v0) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L337ef6.  v0:= temp @kind object;
  #L337ef8.  return v0 @kind object;
}
procedure `java.lang.String` `base64`(`okio.f` v1 @kind this) @signature `Lokio/f;.base64:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337c58.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337c5c.  call temp:= `b`(v0) @signature `Lokio/b;.b:([B)Ljava/lang/String;` @kind static;
  #L337c62.  v0:= temp @kind object;
  #L337c64.  return v0 @kind object;
}
procedure `java.lang.String` `base64Url`(`okio.f` v1 @kind this) @signature `Lokio/f;.base64Url:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337c78.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337c7c.  call temp:= `d`(v0) @signature `Lokio/b;.d:([B)Ljava/lang/String;` @kind static;
  #L337c82.  v0:= temp @kind object;
  #L337c84.  return v0 @kind object;
}
procedure `int` `compareTo`(`okio.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokio/f;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3379a0.  v1:= (`okio.f`) v1 @kind object;
  #L3379a4.  call temp:= `compareTo`(v0, v1) @signature `Lokio/f;.compareTo:(Lokio/f;)I` @kind virtual;
  #L3379aa.  v1:= temp;
  #L3379ac.  return v1;
}
procedure `int` `compareTo`(`okio.f` v9 @kind this, `okio.f` v10 @kind object) @signature `Lokio/f;.compareTo:(Lokio/f;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3379c0.  call temp:= `size`(v9) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3379c6.  v0:= temp;
  #L3379c8.  call temp:= `size`(v10) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3379ce.  v1:= temp;
  #L3379d0.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3379d6.  v2:= temp;
  #L3379d8.  v3:= 0I;
  #L3379da.  v4:= 0I;
  #L3379dc.  v5:= -1I;
  #L3379de.  v6:= 1I;
  #L3379e0.  if v4 >= v2 then goto L337a10;
  #L3379e4.  call temp:= `getByte`(v9, v4) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L3379ea.  v7:= temp;
  #L3379ec.  v7:= v7 ^& 255;
  #L3379f0.  call temp:= `getByte`(v10, v4) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L3379f6.  v8:= temp;
  #L3379f8.  v8:= v8 ^& 255;
  #L3379fc.  if v7 != v8 then goto L337a06;
  #L337a00.  v4:= v4 + 1;
  #L337a04.  goto L3379dc;
  #L337a06.  if v7 >= v8 then goto L337a0c;
  #L337a0a.  goto L337a0e;
  #L337a0c.  v5:= 1I;
  #L337a0e.  return v5;
  #L337a10.  if v0 != v1 then goto L337a16;
  #L337a14.  return v3;
  #L337a16.  if v0 >= v1 then goto L337a1c;
  #L337a1a.  goto L337a1e;
  #L337a1c.  v5:= 1I;
  #L337a1e.  return v5;
}
procedure `boolean` `endsWith`(`okio.f` v3 @kind this, `okio.f` v4 @kind object) @signature `Lokio/f;.endsWith:(Lokio/f;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L3377ac.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3377b2.  v0:= temp;
  #L3377b4.  call temp:= `size`(v4) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3377ba.  v1:= temp;
  #L3377bc.  v0:= v0 - v1 @kind int;
  #L3377be.  call temp:= `size`(v4) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3377c4.  v1:= temp;
  #L3377c6.  v2:= 0I;
  #L3377c8.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/f;.rangeEquals:(ILokio/f;II)Z` @kind virtual;
  #L3377ce.  v4:= temp;
  #L3377d0.  return v4;
}
procedure `boolean` `endsWith`(`okio.f` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/f;.endsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L337780.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L337786.  v0:= temp;
  #L337788.  v1:= length @variable v4;
  #L33778a.  v0:= v0 - v1 @kind int;
  #L33778c.  v1:= length @variable v4;
  #L33778e.  v2:= 0I;
  #L337790.  call temp:= `rangeEquals`(v3, v0, v4, v2, v1) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @kind virtual;
  #L337796.  v4:= temp;
  #L337798.  return v4;
}
procedure `boolean` `equals`(`okio.f` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3377e4.  v0:= 1I;
  #L3377e6.  if v6 != v5 then goto L3377ec;
  #L3377ea.  return v0;
  #L3377ec.  v1:= instanceof @variable v6 @type ^`okio.f` @kind boolean;
  #L3377f0.  v2:= 0I;
  #L3377f2.  if v1 == 0 then goto L33781c;
  #L3377f6.  v6:= (`okio.f`) v6 @kind object;
  #L3377fa.  call temp:= `size`(v6) @signature `Lokio/f;.size:()I` @kind virtual;
  #L337800.  v1:= temp;
  #L337802.  v3:= v5.`okio.f.data` @type ^`byte`[] @kind object;
  #L337806.  v4:= length @variable v3;
  #L337808.  if v1 != v4 then goto L33781c;
  #L33780c.  v1:= length @variable v3;
  #L33780e.  call temp:= `rangeEquals`(v6, v2, v3, v2, v1) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @kind virtual;
  #L337814.  v6:= temp;
  #L337816.  if v6 == 0 then goto L33781c;
  #L33781a.  goto L33781e;
  #L33781c.  v0:= 0I;
  #L33781e.  return v0;
}
procedure `byte` `getByte`(`okio.f` v1 @kind this, `int` v2 ) @signature `Lokio/f;.getByte:(I)B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3378d4.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L3378d8.  v2:= v0[v2] @kind byte;
  #L3378dc.  return v2;
}
procedure `int` `hashCode`(`okio.f` v1 @kind this) @signature `Lokio/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337aac.  v0:= v1.`okio.f.hashCode` @type ^`int`;
  #L337ab0.  if v0 == 0 then goto L337ab6;
  #L337ab4.  goto L337ac6;
  #L337ab6.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337aba.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L337ac0.  v0:= temp;
  #L337ac2.  v1.`okio.f.hashCode` @type ^`int` := v0;
  #L337ac6.  return v0;
}
procedure `java.lang.String` `hex`(`okio.f` v9 @kind this) @signature `Lokio/f;.hex:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L337c98.  v0:= v9.`okio.f.data` @type ^`byte`[] @kind object;
  #L337c9c.  v1:= length @variable v0;
  #L337c9e.  v1:= v1 * 2;
  #L337ca2.  v1:= new `char`[v1];
  #L337ca6.  v2:= length @variable v0;
  #L337ca8.  v3:= 0I;
  #L337caa.  v4:= 0I;
  #L337cac.  if v3 >= v2 then goto L337ce2;
  #L337cb0.  v5:= v0[v3] @kind byte;
  #L337cb4.  v6:= v4 + 1;
  #L337cb8.  v7:= `@@okio.f.HEX_DIGITS` @type ^`char`[] @kind object;
  #L337cbc.  v8:= v5 ^> 4;
  #L337cc0.  v8:= v8 ^& 15;
  #L337cc4.  v8:= v7[v8] @kind char;
  #L337cc8.  v1[v4]:= v8 @kind char;
  #L337ccc.  v4:= v6 + 1;
  #L337cd0.  v5:= v5 ^& 15;
  #L337cd4.  v5:= v7[v5] @kind char;
  #L337cd8.  v1[v6]:= v5 @kind char;
  #L337cdc.  v3:= v3 + 1;
  #L337ce0.  goto L337cac;
  #L337ce2.  v0:= new `java.lang.String`;
  #L337ce6.  call `<init>`(v0, v1) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L337cec.  return v0 @kind object;
}
procedure `okio.f` `hmacSha1`(`okio.f` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/f;.hmacSha1:(Lokio/f;)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338154.  v0:= "HmacSHA1" @kind object;
  #L338158.  call temp:= `c`(v1, v0, v2) @signature `Lokio/f;.c:(Ljava/lang/String;Lokio/f;)Lokio/f;` @kind direct;
  #L33815e.  v2:= temp @kind object;
  #L338160.  return v2 @kind object;
}
procedure `okio.f` `hmacSha256`(`okio.f` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/f;.hmacSha256:(Lokio/f;)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338174.  v0:= "HmacSHA256" @kind object;
  #L338178.  call temp:= `c`(v1, v0, v2) @signature `Lokio/f;.c:(Ljava/lang/String;Lokio/f;)Lokio/f;` @kind direct;
  #L33817e.  v2:= temp @kind object;
  #L338180.  return v2 @kind object;
}
procedure `okio.f` `hmacSha512`(`okio.f` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/f;.hmacSha512:(Lokio/f;)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338194.  v0:= "HmacSHA512" @kind object;
  #L338198.  call temp:= `c`(v1, v0, v2) @signature `Lokio/f;.c:(Ljava/lang/String;Lokio/f;)Lokio/f;` @kind direct;
  #L33819e.  v2:= temp @kind object;
  #L3381a0.  return v2 @kind object;
}
procedure `int` `indexOf`(`okio.f` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/f;.indexOf:(Lokio/f;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L337b3c.  call temp:= `internalArray`(v2) @signature `Lokio/f;.internalArray:()[B` @kind virtual;
  #L337b42.  v2:= temp @kind object;
  #L337b44.  v0:= 0I;
  #L337b46.  call temp:= `indexOf`(v1, v2, v0) @signature `Lokio/f;.indexOf:([BI)I` @kind virtual;
  #L337b4c.  v2:= temp;
  #L337b4e.  return v2;
}
procedure `int` `indexOf`(`okio.f` v0 @kind this, `okio.f` v1 @kind object, `int` v2 ) @signature `Lokio/f;.indexOf:(Lokio/f;I)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L337b60.  call temp:= `internalArray`(v1) @signature `Lokio/f;.internalArray:()[B` @kind virtual;
  #L337b66.  v1:= temp @kind object;
  #L337b68.  call temp:= `indexOf`(v0, v1, v2) @signature `Lokio/f;.indexOf:([BI)I` @kind virtual;
  #L337b6e.  v1:= temp;
  #L337b70.  return v1;
}
procedure `int` `indexOf`(`okio.f` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/f;.indexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L337ad8.  v0:= 0I;
  #L337ada.  call temp:= `indexOf`(v1, v2, v0) @signature `Lokio/f;.indexOf:([BI)I` @kind virtual;
  #L337ae0.  v2:= temp;
  #L337ae2.  return v2;
}
procedure `int` `indexOf`(`okio.f` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lokio/f;.indexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L337af4.  v0:= 0I;
  #L337af6.  call temp:= `max`(v6, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L337afc.  v6:= temp;
  #L337afe.  v1:= v4.`okio.f.data` @type ^`byte`[] @kind object;
  #L337b02.  v1:= length @variable v1;
  #L337b04.  v2:= length @variable v5;
  #L337b06.  v1:= v1 - v2 @kind int;
  #L337b08.  if v6 > v1 then goto L337b26;
  #L337b0c.  v2:= v4.`okio.f.data` @type ^`byte`[] @kind object;
  #L337b10.  v3:= length @variable v5;
  #L337b12.  call temp:= `a`(v2, v6, v5, v0, v3) @signature `Lokio/x;.a:([BI[BII)Z` @kind static;
  #L337b18.  v2:= temp;
  #L337b1a.  if v2 == 0 then goto L337b20;
  #L337b1e.  return v6;
  #L337b20.  v6:= v6 + 1;
  #L337b24.  goto L337b08;
  #L337b26.  v5:= -1I;
  #L337b28.  return v5;
}
procedure `byte`[] `internalArray`(`okio.f` v1 @kind this) @signature `Lokio/f;.internalArray:()[B` @AccessFlag  {
    temp;
    v0;

  #L3378f0.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L3378f4.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`okio.f` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/f;.lastIndexOf:(Lokio/f;)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L337bf0.  call temp:= `internalArray`(v2) @signature `Lokio/f;.internalArray:()[B` @kind virtual;
  #L337bf6.  v2:= temp @kind object;
  #L337bf8.  call temp:= `size`(v1) @signature `Lokio/f;.size:()I` @kind virtual;
  #L337bfe.  v0:= temp;
  #L337c00.  call temp:= `lastIndexOf`(v1, v2, v0) @signature `Lokio/f;.lastIndexOf:([BI)I` @kind virtual;
  #L337c06.  v2:= temp;
  #L337c08.  return v2;
}
procedure `int` `lastIndexOf`(`okio.f` v0 @kind this, `okio.f` v1 @kind object, `int` v2 ) @signature `Lokio/f;.lastIndexOf:(Lokio/f;I)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L337c1c.  call temp:= `internalArray`(v1) @signature `Lokio/f;.internalArray:()[B` @kind virtual;
  #L337c22.  v1:= temp @kind object;
  #L337c24.  call temp:= `lastIndexOf`(v0, v1, v2) @signature `Lokio/f;.lastIndexOf:([BI)I` @kind virtual;
  #L337c2a.  v1:= temp;
  #L337c2c.  return v1;
}
procedure `int` `lastIndexOf`(`okio.f` v1 @kind this, `byte`[] v2 @kind object) @signature `Lokio/f;.lastIndexOf:([B)I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L337b84.  call temp:= `size`(v1) @signature `Lokio/f;.size:()I` @kind virtual;
  #L337b8a.  v0:= temp;
  #L337b8c.  call temp:= `lastIndexOf`(v1, v2, v0) @signature `Lokio/f;.lastIndexOf:([BI)I` @kind virtual;
  #L337b92.  v2:= temp;
  #L337b94.  return v2;
}
procedure `int` `lastIndexOf`(`okio.f` v3 @kind this, `byte`[] v4 @kind object, `int` v5 ) @signature `Lokio/f;.lastIndexOf:([BI)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L337ba8.  v0:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L337bac.  v0:= length @variable v0;
  #L337bae.  v1:= length @variable v4;
  #L337bb0.  v0:= v0 - v1 @kind int;
  #L337bb2.  call temp:= `min`(v5, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L337bb8.  v5:= temp;
  #L337bba.  if v5 < 0 then goto L337bda;
  #L337bbe.  v0:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L337bc2.  v1:= 0I;
  #L337bc4.  v2:= length @variable v4;
  #L337bc6.  call temp:= `a`(v0, v5, v4, v1, v2) @signature `Lokio/x;.a:([BI[BII)Z` @kind static;
  #L337bcc.  v0:= temp;
  #L337bce.  if v0 == 0 then goto L337bd4;
  #L337bd2.  return v5;
  #L337bd4.  v5:= v5 + -1;
  #L337bd8.  goto L337bba;
  #L337bda.  v4:= -1I;
  #L337bdc.  return v4;
}
procedure `okio.f` `md5`(`okio.f` v1 @kind this) @signature `Lokio/f;.md5:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3381b4.  v0:= "MD5" @kind object;
  #L3381b8.  call temp:= `b`(v1, v0) @signature `Lokio/f;.b:(Ljava/lang/String;)Lokio/f;` @kind direct;
  #L3381be.  v0:= temp @kind object;
  #L3381c0.  return v0 @kind object;
}
procedure `boolean` `rangeEquals`(`okio.f` v1 @kind this, `int` v2 , `okio.f` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokio/f;.rangeEquals:(ILokio/f;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337870.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337874.  call temp:= `rangeEquals`(v3, v4, v0, v2, v5) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @kind virtual;
  #L33787a.  v2:= temp;
  #L33787c.  return v2;
}
procedure `boolean` `rangeEquals`(`okio.f` v2 @kind this, `int` v3 , `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337830.  if v3 < 0 then goto L33785c;
  #L337834.  v0:= v2.`okio.f.data` @type ^`byte`[] @kind object;
  #L337838.  v1:= length @variable v0;
  #L33783a.  v1:= v1 - v6 @kind int;
  #L33783c.  if v3 > v1 then goto L33785c;
  #L337840.  if v5 < 0 then goto L33785c;
  #L337844.  v1:= length @variable v4;
  #L337846.  v1:= v1 - v6 @kind int;
  #L337848.  if v5 > v1 then goto L33785c;
  #L33784c.  call temp:= `a`(v0, v3, v4, v5, v6) @signature `Lokio/x;.a:([BI[BII)Z` @kind static;
  #L337852.  v3:= temp;
  #L337854.  if v3 == 0 then goto L33785c;
  #L337858.  v3:= 1I;
  #L33785a.  goto L33785e;
  #L33785c.  v3:= 0I;
  #L33785e.  return v3;
}
procedure `okio.f` `sha1`(`okio.f` v1 @kind this) @signature `Lokio/f;.sha1:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338330.  v0:= "SHA-1" @kind object;
  #L338334.  call temp:= `b`(v1, v0) @signature `Lokio/f;.b:(Ljava/lang/String;)Lokio/f;` @kind direct;
  #L33833a.  v0:= temp @kind object;
  #L33833c.  return v0 @kind object;
}
procedure `okio.f` `sha256`(`okio.f` v1 @kind this) @signature `Lokio/f;.sha256:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338350.  v0:= "SHA-256" @kind object;
  #L338354.  call temp:= `b`(v1, v0) @signature `Lokio/f;.b:(Ljava/lang/String;)Lokio/f;` @kind direct;
  #L33835a.  v0:= temp @kind object;
  #L33835c.  return v0 @kind object;
}
procedure `okio.f` `sha512`(`okio.f` v1 @kind this) @signature `Lokio/f;.sha512:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338370.  v0:= "SHA-512" @kind object;
  #L338374.  call temp:= `b`(v1, v0) @signature `Lokio/f;.b:(Ljava/lang/String;)Lokio/f;` @kind direct;
  #L33837a.  v0:= temp @kind object;
  #L33837c.  return v0 @kind object;
}
procedure `int` `size`(`okio.f` v1 @kind this) @signature `Lokio/f;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337c40.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L337c44.  v0:= length @variable v0;
  #L337c46.  return v0;
}
procedure `boolean` `startsWith`(`okio.f` v2 @kind this, `okio.f` v3 @kind object) @signature `Lokio/f;.startsWith:(Lokio/f;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3378b0.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L3378b6.  v0:= temp;
  #L3378b8.  v1:= 0I;
  #L3378ba.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/f;.rangeEquals:(ILokio/f;II)Z` @kind virtual;
  #L3378c0.  v3:= temp;
  #L3378c2.  return v3;
}
procedure `boolean` `startsWith`(`okio.f` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/f;.startsWith:([B)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L337890.  v0:= length @variable v3;
  #L337892.  v1:= 0I;
  #L337894.  call temp:= `rangeEquals`(v2, v1, v3, v1, v0) @signature `Lokio/f;.rangeEquals:(I[BII)Z` @kind virtual;
  #L33789a.  v3:= temp;
  #L33789c.  return v3;
}
procedure `java.lang.String` `string`(`okio.f` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/f;.string:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337d00.  if v3 == 0 then goto L337d14;
  #L337d04.  v0:= new `java.lang.String`;
  #L337d08.  v1:= v2.`okio.f.data` @type ^`byte`[] @kind object;
  #L337d0c.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L337d12.  return v0 @kind object;
  #L337d14.  v3:= new `java.lang.IllegalArgumentException`;
  #L337d18.  v0:= "charset == null" @kind object;
  #L337d1c.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337d22.  throw v3;
}
procedure `okio.f` `substring`(`okio.f` v1 @kind this, `int` v2 ) @signature `Lokio/f;.substring:(I)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338390.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L338394.  v0:= length @variable v0;
  #L338396.  call temp:= `substring`(v1, v2, v0) @signature `Lokio/f;.substring:(II)Lokio/f;` @kind virtual;
  #L33839c.  v2:= temp @kind object;
  #L33839e.  return v2 @kind object;
}
procedure `okio.f` `substring`(`okio.f` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lokio/f;.substring:(II)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3383b0.  if v4 < 0 then goto L338438;
  #L3383b4.  v0:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L3383b8.  v1:= length @variable v0;
  #L3383ba.  if v5 > v1 then goto L3383fa;
  #L3383be.  v1:= v5 - v4 @kind int;
  #L3383c2.  if v1 < 0 then goto L3383ea;
  #L3383c6.  if v4 != 0 then goto L3383d2;
  #L3383ca.  v2:= length @variable v0;
  #L3383cc.  if v5 != v2 then goto L3383d2;
  #L3383d0.  return v3 @kind object;
  #L3383d2.  v5:= new `byte`[v1];
  #L3383d6.  v2:= 0I;
  #L3383d8.  call `arraycopy`(v0, v4, v5, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3383de.  v4:= new `okio.f`;
  #L3383e2.  call `<init>`(v4, v5) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L3383e8.  return v4 @kind object;
  #L3383ea.  v4:= new `java.lang.IllegalArgumentException`;
  #L3383ee.  v5:= "endIndex < beginIndex" @kind object;
  #L3383f2.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3383f8.  throw v4;
  #L3383fa.  v4:= new `java.lang.IllegalArgumentException`;
  #L3383fe.  v5:= new `java.lang.StringBuilder`;
  #L338402.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L338408.  v0:= "endIndex > length(" @kind object;
  #L33840c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338412.  v0:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L338416.  v0:= length @variable v0;
  #L338418.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33841e.  v0:= ")" @kind object;
  #L338422.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L338428.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33842e.  v5:= temp @kind object;
  #L338430.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338436.  throw v4;
  #L338438.  v4:= new `java.lang.IllegalArgumentException`;
  #L33843c.  v5:= "beginIndex < 0" @kind object;
  #L338440.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338446.  throw v4;
}
procedure `okio.f` `toAsciiLowercase`(`okio.f` v6 @kind this) @signature `Lokio/f;.toAsciiLowercase:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L338458.  v0:= 0I;
  #L33845a.  v1:= v6.`okio.f.data` @type ^`byte`[] @kind object;
  #L33845e.  v2:= length @variable v1;
  #L338460.  if v0 >= v2 then goto L3384ca;
  #L338464.  v2:= v1[v0] @kind byte;
  #L338468.  v3:= 65I;
  #L33846c.  if v2 < v3 then goto L3384c4;
  #L338470.  v4:= 90I;
  #L338474.  if v2 <= v4 then goto L33847a;
  #L338478.  goto L3384c4;
  #L33847a.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L338480.  v1:= temp @kind object;
  #L338482.  v1:= (`byte`[]) v1 @kind object;
  #L338486.  v5:= v0 + 1;
  #L33848a.  v2:= v2 + 32;
  #L33848e.  v2:= (`byte`) v2 @kind i2b;
  #L338490.  v1[v0]:= v2 @kind byte;
  #L338494.  v0:= length @variable v1;
  #L338496.  if v5 >= v0 then goto L3384b8;
  #L33849a.  v0:= v1[v5] @kind byte;
  #L33849e.  if v0 < v3 then goto L3384b2;
  #L3384a2.  if v0 <= v4 then goto L3384a8;
  #L3384a6.  goto L3384b2;
  #L3384a8.  v0:= v0 + 32;
  #L3384ac.  v0:= (`byte`) v0 @kind i2b;
  #L3384ae.  v1[v5]:= v0 @kind byte;
  #L3384b2.  v5:= v5 + 1;
  #L3384b6.  goto L338494;
  #L3384b8.  v0:= new `okio.f`;
  #L3384bc.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L3384c2.  return v0 @kind object;
  #L3384c4.  v0:= v0 + 1;
  #L3384c8.  goto L33845a;
  #L3384ca.  return v6 @kind object;
}
procedure `okio.f` `toAsciiUppercase`(`okio.f` v6 @kind this) @signature `Lokio/f;.toAsciiUppercase:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3384dc.  v0:= 0I;
  #L3384de.  v1:= v6.`okio.f.data` @type ^`byte`[] @kind object;
  #L3384e2.  v2:= length @variable v1;
  #L3384e4.  if v0 >= v2 then goto L33854e;
  #L3384e8.  v2:= v1[v0] @kind byte;
  #L3384ec.  v3:= 97I;
  #L3384f0.  if v2 < v3 then goto L338548;
  #L3384f4.  v4:= 122I;
  #L3384f8.  if v2 <= v4 then goto L3384fe;
  #L3384fc.  goto L338548;
  #L3384fe.  call temp:= `clone`(v1) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L338504.  v1:= temp @kind object;
  #L338506.  v1:= (`byte`[]) v1 @kind object;
  #L33850a.  v5:= v0 + 1;
  #L33850e.  v2:= v2 + -32;
  #L338512.  v2:= (`byte`) v2 @kind i2b;
  #L338514.  v1[v0]:= v2 @kind byte;
  #L338518.  v0:= length @variable v1;
  #L33851a.  if v5 >= v0 then goto L33853c;
  #L33851e.  v0:= v1[v5] @kind byte;
  #L338522.  if v0 < v3 then goto L338536;
  #L338526.  if v0 <= v4 then goto L33852c;
  #L33852a.  goto L338536;
  #L33852c.  v0:= v0 + -32;
  #L338530.  v0:= (`byte`) v0 @kind i2b;
  #L338532.  v1[v5]:= v0 @kind byte;
  #L338536.  v5:= v5 + 1;
  #L33853a.  goto L338518;
  #L33853c.  v0:= new `okio.f`;
  #L338540.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L338546.  return v0 @kind object;
  #L338548.  v0:= v0 + 1;
  #L33854c.  goto L3384de;
  #L33854e.  return v6 @kind object;
}
procedure `byte`[] `toByteArray`(`okio.f` v1 @kind this) @signature `Lokio/f;.toByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337908.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L33790c.  call temp:= `clone`(v0) @signature `[B.clone:()Ljava/lang/Object;` @kind virtual;
  #L337912.  v0:= temp @kind object;
  #L337914.  v0:= (`byte`[]) v0 @kind object;
  #L337918.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.f` v8 @kind this) @signature `Lokio/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L337d34.  v0:= v8.`okio.f.data` @type ^`byte`[] @kind object;
  #L337d38.  v0:= length @variable v0;
  #L337d3a.  if v0 != 0 then goto L337d44;
  #L337d3e.  v0:= "[size=0]" @kind object;
  #L337d42.  return v0 @kind object;
  #L337d44.  call temp:= `utf8`(v8) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L337d4a.  v0:= temp @kind object;
  #L337d4c.  v1:= 64I;
  #L337d50.  call temp:= `codePointIndexToCharIndex`(v0, v1) @signature `Lokio/f;.codePointIndexToCharIndex:(Ljava/lang/String;I)I` @kind static;
  #L337d56.  v2:= temp;
  #L337d58.  v3:= -1I;
  #L337d5a.  v4:= "…]" @kind object;
  #L337d5e.  v5:= "[size=" @kind object;
  #L337d62.  v6:= "]" @kind object;
  #L337d66.  v7:= 0I;
  #L337d68.  if v2 != v3 then goto L337df4;
  #L337d6c.  v0:= v8.`okio.f.data` @type ^`byte`[] @kind object;
  #L337d70.  v0:= length @variable v0;
  #L337d72.  if v0 > v1 then goto L337da8;
  #L337d76.  v0:= new `java.lang.StringBuilder`;
  #L337d7a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337d80.  v1:= "[hex=" @kind object;
  #L337d84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337d8a.  call temp:= `hex`(v8) @signature `Lokio/f;.hex:()Ljava/lang/String;` @kind virtual;
  #L337d90.  v1:= temp @kind object;
  #L337d92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337d98.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337d9e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337da4.  v0:= temp @kind object;
  #L337da6.  goto L337df2;
  #L337da8.  v0:= new `java.lang.StringBuilder`;
  #L337dac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337db2.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337db8.  v2:= v8.`okio.f.data` @type ^`byte`[] @kind object;
  #L337dbc.  v2:= length @variable v2;
  #L337dbe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L337dc4.  v2:= " hex=" @kind object;
  #L337dc8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337dce.  call temp:= `substring`(v8, v7, v1) @signature `Lokio/f;.substring:(II)Lokio/f;` @kind virtual;
  #L337dd4.  v1:= temp @kind object;
  #L337dd6.  call temp:= `hex`(v1) @signature `Lokio/f;.hex:()Ljava/lang/String;` @kind virtual;
  #L337ddc.  v1:= temp @kind object;
  #L337dde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337de4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337dea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337df0.  v0:= temp @kind object;
  #L337df2.  return v0 @kind object;
  #L337df4.  call temp:= `substring`(v0, v7, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L337dfa.  v1:= temp @kind object;
  #L337dfc.  v3:= "\\" @kind object;
  #L337e00.  v7:= "\\\\" @kind object;
  #L337e04.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L337e0a.  v1:= temp @kind object;
  #L337e0c.  v3:= "\n" @kind object;
  #L337e10.  v7:= "\\n" @kind object;
  #L337e14.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L337e1a.  v1:= temp @kind object;
  #L337e1c.  v3:= "\r" @kind object;
  #L337e20.  v7:= "\\r" @kind object;
  #L337e24.  call temp:= `replace`(v1, v3, v7) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L337e2a.  v1:= temp @kind object;
  #L337e2c.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L337e32.  v0:= temp;
  #L337e34.  if v2 >= v0 then goto L337e74;
  #L337e38.  v0:= new `java.lang.StringBuilder`;
  #L337e3c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337e42.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e48.  v2:= v8.`okio.f.data` @type ^`byte`[] @kind object;
  #L337e4c.  v2:= length @variable v2;
  #L337e4e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e54.  v2:= " text=" @kind object;
  #L337e58.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e64.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e6a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337e70.  v0:= temp @kind object;
  #L337e72.  goto L337e9c;
  #L337e74.  v0:= new `java.lang.StringBuilder`;
  #L337e78.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L337e7e.  v2:= "[text=" @kind object;
  #L337e82.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e8e.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337e94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337e9a.  v0:= temp @kind object;
  #L337e9c.  return v0 @kind object;
}
procedure `java.lang.String` `utf8`(`okio.f` v3 @kind this) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L337eb0.  v0:= v3.`okio.f.utf8` @type ^`java.lang.String` @kind object;
  #L337eb4.  if v0 == 0 then goto L337eba;
  #L337eb8.  goto L337ed0;
  #L337eba.  v0:= new `java.lang.String`;
  #L337ebe.  v1:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L337ec2.  v2:= `@@okio.x.a` @type ^`java.nio.charset.Charset` @kind object;
  #L337ec6.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L337ecc.  v3.`okio.f.utf8` @type ^`java.lang.String` := v0 @kind object;
  #L337ed0.  return v0 @kind object;
}
procedure `void` `write`(`okio.f` v1 @kind this, `java.io.OutputStream` v2 @kind object) @signature `Lokio/f;.write:(Ljava/io/OutputStream;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338648.  if v2 == 0 then goto L338658;
  #L33864c.  v0:= v1.`okio.f.data` @type ^`byte`[] @kind object;
  #L338650.  call `write`(v2, v0) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L338656.  return @kind void;
  #L338658.  v2:= new `java.lang.IllegalArgumentException`;
  #L33865c.  v0:= "out == null" @kind object;
  #L338660.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L338666.  throw v2;
}
procedure `void` `write`(`okio.f` v3 @kind this, `okio.c` v4 @kind object) @signature `Lokio/f;.write:(Lokio/c;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L338678.  v0:= v3.`okio.f.data` @type ^`byte`[] @kind object;
  #L33867c.  v1:= length @variable v0;
  #L33867e.  v2:= 0I;
  #L338680.  call temp:= `S0`(v4, v0, v2, v1) @signature `Lokio/c;.S0:([BII)Lokio/c;` @kind virtual;
  #L338686.  return @kind void;
}
