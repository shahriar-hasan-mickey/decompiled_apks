record `okio.g` @kind class @AccessFlag PUBLIC_FINAL extends `okio.u` @kind interface {
  `okio.d` `okio.g.g` @AccessFlag PRIVATE_FINAL;
  `java.util.zip.Deflater` `okio.g.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `okio.g.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okio.g` v0 @kind this, `okio.d` v1 @kind object, `java.util.zip.Deflater` v2 @kind object) @signature `Lokio/g;.<init>:(Lokio/d;Ljava/util/zip/Deflater;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L338724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L33872a.  if v1 == 0 then goto L33874c;
  #L33872e.  if v2 == 0 then goto L33873c;
  #L338732.  v0.`okio.g.g` @type ^`okio.d` := v1 @kind object;
  #L338736.  v0.`okio.g.h` @type ^`java.util.zip.Deflater` := v2 @kind object;
  #L33873a.  return @kind void;
  #L33873c.  v1:= new `java.lang.IllegalArgumentException`;
  #L338740.  v2:= "inflater == null" @kind object;
  #L338744.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33874a.  throw v1;
  #L33874c.  v1:= new `java.lang.IllegalArgumentException`;
  #L338750.  v2:= "source == null" @kind object;
  #L338754.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33875a.  throw v1;
}
procedure `void` `e`(`okio.g` v7 @kind this, `boolean` v8 ) @signature `Lokio/g;.e:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3387ec.  v0:= v7.`okio.g.g` @type ^`okio.d` @kind object;
  #L3387f0.  call temp:= `b`(v0) @signature `Lokio/d;.b:()Lokio/c;` @kind interface;
  #L3387f6.  v0:= temp @kind object;
  #L3387f8.  v1:= 1I;
  #L3387fa.  call temp:= `E0`(v0, v1) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L338800.  v1:= temp @kind object;
  #L338802.  if v8 == 0 then goto L338822;
  #L338806.  v2:= v7.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L33880a.  v3:= v1.`okio.r.a` @type ^`byte`[] @kind object;
  #L33880e.  v4:= v1.`okio.r.c` @type ^`int`;
  #L338812.  v5:= v4 - 8192;
  #L338816.  v6:= 2I;
  #L338818.  call temp:= `deflate`(v2, v3, v4, v5, v6) @signature `Ljava/util/zip/Deflater;.deflate:([BIII)I` @kind virtual;
  #L33881e.  v2:= temp;
  #L338820.  goto L33883a;
  #L338822.  v2:= v7.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L338826.  v3:= v1.`okio.r.a` @type ^`byte`[] @kind object;
  #L33882a.  v4:= v1.`okio.r.c` @type ^`int`;
  #L33882e.  v5:= v4 - 8192;
  #L338832.  call temp:= `deflate`(v2, v3, v4, v5) @signature `Ljava/util/zip/Deflater;.deflate:([BII)I` @kind virtual;
  #L338838.  v2:= temp;
  #L33883a.  if v2 <= 0 then goto L338860;
  #L33883e.  v3:= v1.`okio.r.c` @type ^`int`;
  #L338842.  v3:= v3 + v2 @kind int;
  #L338844.  v1.`okio.r.c` @type ^`int` := v3;
  #L338848.  v3:= v0.`okio.c.h` @type ^`long` @kind wide;
  #L33884c.  v1:= (`long`) v2 @kind i2l;
  #L33884e.  v3:= v3 + v1 @kind long;
  #L338850.  v0.`okio.c.h` @type ^`long` := v3 @kind wide;
  #L338854.  v1:= v7.`okio.g.g` @type ^`okio.d` @kind object;
  #L338858.  call temp:= `L`(v1) @signature `Lokio/d;.L:()Lokio/d;` @kind interface;
  #L33885e.  goto L3387f8;
  #L338860.  v2:= v7.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L338864.  call temp:= `needsInput`(v2) @signature `Ljava/util/zip/Deflater;.needsInput:()Z` @kind virtual;
  #L33886a.  v2:= temp;
  #L33886c.  if v2 == 0 then goto L3387f8;
  #L338870.  v8:= v1.`okio.r.b` @type ^`int`;
  #L338874.  v2:= v1.`okio.r.c` @type ^`int`;
  #L338878.  if v8 != v2 then goto L33888e;
  #L33887c.  call temp:= `b`(v1) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L338882.  v8:= temp @kind object;
  #L338884.  v0.`okio.c.g` @type ^`okio.r` := v8 @kind object;
  #L338888.  call `a`(v1) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L33888e.  return @kind void;
}
procedure `void` `close`(`okio.g` v2 @kind this) @signature `Lokio/g;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33876c.  v0:= v2.`okio.g.i` @type ^`boolean` @kind boolean;
  #L338770.  if v0 == 0 then goto L338776;
  #L338774.  return @kind void;
  #L338776.  v0:= 0I;
  #L338778.  call `i`(v2) @signature `Lokio/g;.i:()V` @kind virtual;
  #L33877e.  goto L338782;
  #L338780.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L338782.  v1:= v2.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L338786.  call `end`(v1) @signature `Ljava/util/zip/Deflater;.end:()V` @kind virtual;
  #L33878c.  goto L338796;
  #L33878e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L338790.  if v0 != 0 then goto L338796;
  #L338794.  v0:= v1 @kind object;
  #L338796.  v1:= v2.`okio.g.g` @type ^`okio.d` @kind object;
  #L33879a.  call `close`(v1) @signature `Lokio/u;.close:()V` @kind interface;
  #L3387a0.  goto L3387aa;
  #L3387a2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3387a4.  if v0 != 0 then goto L3387aa;
  #L3387a8.  v0:= v1 @kind object;
  #L3387aa.  v1:= 1I;
  #L3387ac.  v2.`okio.g.i` @type ^`boolean` := v1 @kind boolean;
  #L3387b0.  if v0 == 0 then goto L3387ba;
  #L3387b4.  call `e`(v0) @signature `Lokio/x;.e:(Ljava/lang/Throwable;)V` @kind static;
  #L3387ba.  return @kind void;
  catch `java.lang.Throwable` @[L338778..L33877e] goto L338780;
  catch `java.lang.Throwable` @[L338782..L33878c] goto L33878e;
  catch `java.lang.Throwable` @[L338796..L3387a0] goto L3387a2;
}
procedure `void` `e0`(`okio.g` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lokio/g;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3388e8.  v0:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L3388ec.  v2:= 0L;
  #L3388f0.  v4:= v9 @kind wide;
  #L3388f2.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L3388f8.  v0:= 0L;
  #L3388fc.  v2:= lcmp(v9, v0);
  #L338900.  if v2 <= 0 then goto L33896c;
  #L338904.  v0:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L338908.  v1:= v0.`okio.r.c` @type ^`int`;
  #L33890c.  v2:= v0.`okio.r.b` @type ^`int`;
  #L338910.  v1:= v1 - v2 @kind int;
  #L338912.  v1:= (`long`) v1 @kind i2l;
  #L338914.  call temp:= `min`(v9, v1) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L33891a.  v1:= temp @kind wide;
  #L33891c.  v2:= (`int`) v1 @kind l2i;
  #L33891e.  v1:= v7.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L338922.  v3:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L338926.  v4:= v0.`okio.r.b` @type ^`int`;
  #L33892a.  call `setInput`(v1, v3, v4, v2) @signature `Ljava/util/zip/Deflater;.setInput:([BII)V` @kind virtual;
  #L338930.  v1:= 0I;
  #L338932.  call `e`(v7, v1) @signature `Lokio/g;.e:(Z)V` @kind direct;
  #L338938.  v3:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L33893c.  v5:= (`long`) v2 @kind i2l;
  #L33893e.  v3:= v3 - v5 @kind long;
  #L338940.  v8.`okio.c.h` @type ^`long` := v3 @kind wide;
  #L338944.  v1:= v0.`okio.r.b` @type ^`int`;
  #L338948.  v1:= v1 + v2 @kind int;
  #L33894a.  v0.`okio.r.b` @type ^`int` := v1;
  #L33894e.  v2:= v0.`okio.r.c` @type ^`int`;
  #L338952.  if v1 != v2 then goto L338968;
  #L338956.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L33895c.  v1:= temp @kind object;
  #L33895e.  v8.`okio.c.g` @type ^`okio.r` := v1 @kind object;
  #L338962.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L338968.  v9:= v9 - v5 @kind long;
  #L33896a.  goto L3388f8;
  #L33896c.  return @kind void;
}
procedure `void` `flush`(`okio.g` v1 @kind this) @signature `Lokio/g;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3388c4.  v0:= 1I;
  #L3388c6.  call `e`(v1, v0) @signature `Lokio/g;.e:(Z)V` @kind direct;
  #L3388cc.  v0:= v1.`okio.g.g` @type ^`okio.d` @kind object;
  #L3388d0.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L3388d6.  return @kind void;
}
procedure `void` `i`(`okio.g` v1 @kind this) @signature `Lokio/g;.i:()V` @AccessFlag  {
    temp;
    v0;

  #L3388a0.  v0:= v1.`okio.g.h` @type ^`java.util.zip.Deflater` @kind object;
  #L3388a4.  call `finish`(v0) @signature `Ljava/util/zip/Deflater;.finish:()V` @kind virtual;
  #L3388aa.  v0:= 0I;
  #L3388ac.  call `e`(v1, v0) @signature `Lokio/g;.e:(Z)V` @kind direct;
  #L3388b2.  return @kind void;
}
procedure `okio.w` `timeout`(`okio.g` v1 @kind this) @signature `Lokio/g;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L338704.  v0:= v1.`okio.g.g` @type ^`okio.d` @kind object;
  #L338708.  call temp:= `timeout`(v0) @signature `Lokio/u;.timeout:()Lokio/w;` @kind interface;
  #L33870e.  v0:= temp @kind object;
  #L338710.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.g` v2 @kind this) @signature `Lokio/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3386c0.  v0:= new `java.lang.StringBuilder`;
  #L3386c4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3386ca.  v1:= "DeflaterSink(" @kind object;
  #L3386ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3386d4.  v1:= v2.`okio.g.g` @type ^`okio.d` @kind object;
  #L3386d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3386de.  v1:= ")" @kind object;
  #L3386e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3386e8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3386ee.  v0:= temp @kind object;
  #L3386f0.  return v0 @kind object;
}
