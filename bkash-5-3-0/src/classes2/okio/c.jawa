record `okio.c` @kind class @AccessFlag PUBLIC_FINAL extends `okio.e` @kind interface, `okio.d` @kind interface, `java.lang.Cloneable` @kind interface, `java.nio.channels.ByteChannel` @kind interface {
  `okio.r` `okio.c.g` @AccessFlag ;
  `long` `okio.c.h` @AccessFlag ;
}
global `byte`[] `@@okio.c.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3374a4.  v0:= 16I;
  #L3374a8.  v0:= new `byte`[v0];
  #L3374ac.  goto L3374b8;
  #L3374b2.  `@@okio.c.i` @type ^`byte`[] := v0 @kind object;
  #L3374b6.  return @kind void;
  #L3374b8.  v0:= (48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 97I, 98I, 99I, 100I, 101I, 102I) @kind object;
  #L3374cf.  goto L3374b2;
}
procedure `void` `<init>`(`okio.c` v0 @kind this) @signature `Lokio/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3374e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3374e6.  return @kind void;
}
procedure `okio.d` `B`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.B:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3371e4.  call temp:= `X0`(v0, v1) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L3371ea.  v1:= temp @kind object;
  #L3371ec.  return v1 @kind object;
}
procedure `okio.f` `B0`(`okio.c` v1 @kind this, `int` v2 ) @signature `Lokio/c;.B0:(I)Lokio/f;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3372fc.  if v2 != 0 then goto L337306;
  #L337300.  v2:= `@@okio.f.EMPTY` @type ^`okio.f` @kind object;
  #L337304.  return v2 @kind object;
  #L337306.  v0:= new `okio.t`;
  #L33730a.  call `<init>`(v0, v1, v2) @signature `Lokio/t;.<init>:(Lokio/c;I)V` @kind direct;
  #L337310.  return v0 @kind object;
}
procedure `byte`[] `E`(`okio.c` v2 @kind this) @signature `Lokio/c;.E:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3358b4.  v0:= v2.`okio.c.h` @type ^`long` @kind wide;
  #L3358b8.  call temp:= `s0`(v2, v0) @signature `Lokio/c;.s0:(J)[B` @kind virtual;
  #L3358be.  v0:= temp @kind object;
  #L3358c0.  return v0 @kind object;
  #L3358c2.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3358c4.  v1:= new `java.lang.AssertionError`;
  #L3358c8.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3358ce.  throw v1;
  catch `java.io.EOFException` @[L3358b4..L3358c0] goto L3358c2;
}
procedure `okio.r` `E0`(`okio.c` v3 @kind this, `int` v4 ) @signature `Lokio/c;.E0:(I)Lokio/r;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L337324.  v0:= 1I;
  #L337326.  if v4 < v0 then goto L337378;
  #L33732a.  v0:= 8192I;
  #L33732e.  if v4 > v0 then goto L337378;
  #L337332.  v1:= v3.`okio.c.g` @type ^`okio.r` @kind object;
  #L337336.  if v1 != 0 then goto L337350;
  #L33733a.  call temp:= `b`() @signature `Lokio/s;.b:()Lokio/r;` @kind static;
  #L337340.  v4:= temp @kind object;
  #L337342.  v3.`okio.c.g` @type ^`okio.r` := v4 @kind object;
  #L337346.  v4.`okio.r.g` @type ^`okio.r` := v4 @kind object;
  #L33734a.  v4.`okio.r.f` @type ^`okio.r` := v4 @kind object;
  #L33734e.  return v4 @kind object;
  #L337350.  v1:= v1.`okio.r.g` @type ^`okio.r` @kind object;
  #L337354.  v2:= v1.`okio.r.c` @type ^`int`;
  #L337358.  v2:= v2 + v4 @kind int;
  #L33735a.  if v2 > v0 then goto L337366;
  #L33735e.  v4:= v1.`okio.r.e` @type ^`boolean` @kind boolean;
  #L337362.  if v4 != 0 then goto L337376;
  #L337366.  call temp:= `b`() @signature `Lokio/s;.b:()Lokio/r;` @kind static;
  #L33736c.  v4:= temp @kind object;
  #L33736e.  call temp:= `c`(v1, v4) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L337374.  v1:= temp @kind object;
  #L337376.  return v1 @kind object;
  #L337378.  v4:= new `java.lang.IllegalArgumentException`;
  #L33737c.  call `<init>`(v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:()V` @kind direct;
  #L337382.  throw v4;
}
procedure `okio.c` `F`(`okio.c` v0 @kind this) @signature `Lokio/c;.F:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L336758.  return v0 @kind object;
}
procedure `void` `F0`(`okio.c` v3 @kind this, `long` v4 ) @signature `Lokio/c;.F0:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L337598.  v0:= v3.`okio.c.h` @type ^`long` @kind wide;
  #L33759c.  v2:= lcmp(v0, v4);
  #L3375a0.  if v2 < 0 then goto L3375a6;
  #L3375a4.  return @kind void;
  #L3375a6.  v4:= new `java.io.EOFException`;
  #L3375aa.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L3375b0.  throw v4;
}
procedure `okio.d` `G`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.G:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L337200.  call temp:= `Y0`(v0, v1) @signature `Lokio/c;.Y0:(I)Lokio/c;` @kind virtual;
  #L337206.  v1:= temp @kind object;
  #L337208.  return v1 @kind object;
}
procedure `boolean` `H`(`okio.c` v5 @kind this) @signature `Lokio/c;.H:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L335778.  v0:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L33577c.  v2:= 0L;
  #L335780.  v4:= lcmp(v0, v2);
  #L335784.  if v4 != 0 then goto L33578c;
  #L335788.  v0:= 1I;
  #L33578a.  goto L33578e;
  #L33578c.  v0:= 0I;
  #L33578e.  return v0;
}
procedure `okio.d` `I`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.I:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L337190.  call temp:= `U0`(v0, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337196.  v1:= temp @kind object;
  #L337198.  return v1 @kind object;
}
procedure `okio.d` `I0`(`okio.c` v0 @kind this, `long` v1 ) @signature `Lokio/c;.I0:(J)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3371ac.  call temp:= `V0`(v0, v1) @signature `Lokio/c;.V0:(J)Lokio/c;` @kind virtual;
  #L3371b2.  v1:= temp @kind object;
  #L3371b4.  return v1 @kind object;
}
procedure `long` `J`(`okio.c` v15 @kind this, `byte` v16 , `long` v17 , `long` v19 ) @signature `Lokio/c;.J:(BJJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L336224.  v0:= v15 @kind object;
  #L336226.  v1:= 0L;
  #L33622a.  v3:= lcmp(v17, v1);
  #L33622e.  if v3 < 0 then goto L336322;
  #L336232.  v3:= lcmp(v19, v17);
  #L336236.  if v3 < 0 then goto L336322;
  #L33623a.  v3:= v0.`okio.c.h` @type ^`long` @kind wide;
  #L33623e.  v5:= lcmp(v19, v3);
  #L336242.  if v5 <= 0 then goto L33624a;
  #L336246.  v5:= v3 @kind wide;
  #L336248.  goto L33624e;
  #L33624a.  v5:= v19 @kind wide;
  #L33624e.  v7:= -1L;
  #L336252.  v9:= lcmp(v17, v5);
  #L336256.  if v9 != 0 then goto L33625c;
  #L33625a.  return v7 @kind wide;
  #L33625c.  v9:= v0.`okio.c.g` @type ^`okio.r` @kind object;
  #L336260.  if v9 != 0 then goto L336266;
  #L336264.  return v7 @kind wide;
  #L336266.  v10:= v3 - v17 @kind long;
  #L33626a.  v12:= lcmp(v10, v17);
  #L33626e.  if v12 >= 0 then goto L33628e;
  #L336272.  v1:= lcmp(v3, v17);
  #L336276.  if v1 <= 0 then goto L3362ae;
  #L33627a.  v9:= v9.`okio.r.g` @type ^`okio.r` @kind object;
  #L33627e.  v1:= v9.`okio.r.c` @type ^`int`;
  #L336282.  v2:= v9.`okio.r.b` @type ^`int`;
  #L336286.  v1:= v1 - v2 @kind int;
  #L336288.  v1:= (`long`) v1 @kind i2l;
  #L33628a.  v3:= v3 - v1 @kind long;
  #L33628c.  goto L336272;
  #L33628e.  v3:= v9.`okio.r.c` @type ^`int`;
  #L336292.  v4:= v9.`okio.r.b` @type ^`int`;
  #L336296.  v3:= v3 - v4 @kind int;
  #L336298.  v3:= (`long`) v3 @kind i2l;
  #L33629a.  v3:= v3 + v1 @kind long;
  #L33629c.  v10:= lcmp(v3, v17);
  #L3362a0.  if v10 >= 0 then goto L3362ac;
  #L3362a4.  v9:= v9.`okio.r.f` @type ^`okio.r` @kind object;
  #L3362a8.  v1:= v3 @kind wide;
  #L3362aa.  goto L33628e;
  #L3362ac.  v3:= v1 @kind wide;
  #L3362ae.  v1:= v17 @kind wide;
  #L3362b2.  v10:= lcmp(v3, v5);
  #L3362b6.  if v10 >= 0 then goto L336320;
  #L3362ba.  v10:= v9.`okio.r.a` @type ^`byte`[] @kind object;
  #L3362be.  v11:= v9.`okio.r.c` @type ^`int`;
  #L3362c2.  v11:= (`long`) v11 @kind i2l;
  #L3362c4.  v13:= v9.`okio.r.b` @type ^`int`;
  #L3362c8.  v13:= (`long`) v13 @kind i2l;
  #L3362ca.  v13:= v13 + v5 @kind long;
  #L3362cc.  v13:= v13 - v3 @kind long;
  #L3362ce.  call temp:= `min`(v11, v13) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3362d4.  v11:= temp @kind wide;
  #L3362d6.  v12:= (`int`) v11 @kind l2i;
  #L3362d8.  v11:= v9.`okio.r.b` @type ^`int`;
  #L3362dc.  v13:= (`long`) v11 @kind i2l;
  #L3362de.  v13:= v13 + v1 @kind long;
  #L3362e0.  v13:= v13 - v3 @kind long;
  #L3362e2.  v1:= (`int`) v13 @kind l2i;
  #L3362e4.  if v1 >= v12 then goto L336306;
  #L3362e8.  v2:= v10[v1] @kind byte;
  #L3362ec.  v11:= v16;
  #L3362f0.  if v2 != v11 then goto L336300;
  #L3362f4.  v2:= v9.`okio.r.b` @type ^`int`;
  #L3362f8.  v1:= v1 - v2 @kind int;
  #L3362fa.  v1:= (`long`) v1 @kind i2l;
  #L3362fc.  v1:= v1 + v3 @kind long;
  #L3362fe.  return v1 @kind wide;
  #L336300.  v1:= v1 + 1;
  #L336304.  goto L3362e4;
  #L336306.  v11:= v16;
  #L33630a.  v1:= v9.`okio.r.c` @type ^`int`;
  #L33630e.  v2:= v9.`okio.r.b` @type ^`int`;
  #L336312.  v1:= v1 - v2 @kind int;
  #L336314.  v1:= (`long`) v1 @kind i2l;
  #L336316.  v3:= v3 + v1 @kind long;
  #L336318.  v9:= v9.`okio.r.f` @type ^`okio.r` @kind object;
  #L33631c.  v1:= v3 @kind wide;
  #L33631e.  goto L3362b2;
  #L336320.  return v7 @kind wide;
  #L336322.  v1:= new `java.lang.IllegalArgumentException`;
  #L336326.  v2:= 3I;
  #L336328.  v2:= new `java.lang.Object`[v2];
  #L33632c.  v3:= 0I;
  #L33632e.  v4:= v0.`okio.c.h` @type ^`long` @kind wide;
  #L336332.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L336338.  v4:= temp @kind object;
  #L33633a.  v2[v3]:= v4 @kind object;
  #L33633e.  call temp:= `valueOf`(v17) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L336344.  v3:= temp @kind object;
  #L336346.  v4:= 1I;
  #L336348.  v2[v4]:= v3 @kind object;
  #L33634c.  v3:= 2I;
  #L33634e.  call temp:= `valueOf`(v19) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L336354.  v4:= temp @kind object;
  #L336356.  v2[v3]:= v4 @kind object;
  #L33635a.  v3:= "size=%s fromIndex=%s toIndex=%s" @kind object;
  #L33635e.  call temp:= `format`(v3, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L336364.  v2:= temp @kind object;
  #L336366.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33636c.  throw v1;
}
procedure `okio.d` `L`(`okio.c` v1 @kind this) @signature `Lokio/c;.L:()Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L337120.  call temp:= `v`(v1) @signature `Lokio/c;.v:()Lokio/c;` @kind virtual;
  #L337126.  v0:= temp @kind object;
  #L337128.  return v0 @kind object;
}
procedure `long` `L0`(`okio.c` v6 @kind this, `byte` v7 ) @signature `Lokio/c;.L0:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3361f8.  v2:= 0L;
  #L3361fc.  v4:= 9223372036854775807L;
  #L336206.  v0:= v6 @kind object;
  #L336208.  v1:= v7;
  #L33620a.  call temp:= `J`(v0, v1, v2, v4) @signature `Lokio/c;.J:(BJJ)J` @kind virtual;
  #L336210.  v0:= temp @kind wide;
  #L336212.  return v0 @kind wide;
}
procedure `java.lang.String` `M`(`okio.c` v10 @kind this, `long` v11 ) @signature `Lokio/c;.M:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L336024.  v0:= 0L;
  #L336028.  v2:= lcmp(v11, v0);
  #L33602c.  if v2 < 0 then goto L336148;
  #L336030.  v0:= 1L;
  #L336034.  v2:= 9223372036854775807L;
  #L33603e.  v4:= lcmp(v11, v2);
  #L336042.  if v4 != 0 then goto L336048;
  #L336046.  goto L33604c;
  #L336048.  v2:= v11 + v0 @kind long;
  #L33604c.  v5:= 10I;
  #L336050.  v6:= 0L;
  #L336054.  v4:= v10 @kind object;
  #L336056.  v8:= v2 @kind wide;
  #L336058.  call temp:= `J`(v4, v5, v6, v8) @signature `Lokio/c;.J:(BJJ)J` @kind virtual;
  #L33605e.  v4:= temp @kind wide;
  #L336060.  v6:= -1L;
  #L336064.  v8:= lcmp(v4, v6);
  #L336068.  if v8 == 0 then goto L336076;
  #L33606c.  call temp:= `n0`(v10, v4) @signature `Lokio/c;.n0:(J)Ljava/lang/String;` @kind virtual;
  #L336072.  v11:= temp @kind object;
  #L336074.  return v11 @kind object;
  #L336076.  call temp:= `u0`(v10) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L33607c.  v4:= temp @kind wide;
  #L33607e.  v6:= lcmp(v2, v4);
  #L336082.  if v6 >= 0 then goto L3360b4;
  #L336086.  v0:= v2 - v0 @kind long;
  #L33608a.  call temp:= `w`(v10, v0) @signature `Lokio/c;.w:(J)B` @kind virtual;
  #L336090.  v0:= temp;
  #L336092.  v1:= 13I;
  #L336096.  if v0 != v1 then goto L3360b4;
  #L33609a.  call temp:= `w`(v10, v2) @signature `Lokio/c;.w:(J)B` @kind virtual;
  #L3360a0.  v0:= temp;
  #L3360a2.  v1:= 10I;
  #L3360a6.  if v0 != v1 then goto L3360b4;
  #L3360aa.  call temp:= `n0`(v10, v2) @signature `Lokio/c;.n0:(J)Ljava/lang/String;` @kind virtual;
  #L3360b0.  v11:= temp @kind object;
  #L3360b2.  return v11 @kind object;
  #L3360b4.  v6:= new `okio.c`;
  #L3360b8.  call `<init>`(v6) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3360be.  v2:= 0L;
  #L3360c2.  v0:= 32L;
  #L3360c6.  call temp:= `u0`(v10) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L3360cc.  v4:= temp @kind wide;
  #L3360ce.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3360d4.  v4:= temp @kind wide;
  #L3360d6.  v0:= v10 @kind object;
  #L3360d8.  v1:= v6 @kind object;
  #L3360da.  call temp:= `s`(v0, v1, v2, v4) @signature `Lokio/c;.s:(Lokio/c;JJ)Lokio/c;` @kind virtual;
  #L3360e0.  v0:= new `java.io.EOFException`;
  #L3360e4.  v1:= new `java.lang.StringBuilder`;
  #L3360e8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3360ee.  v2:= "\\n not found: limit=" @kind object;
  #L3360f2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3360f8.  call temp:= `u0`(v10) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L3360fe.  v2:= temp @kind wide;
  #L336100.  call temp:= `min`(v2, v11) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L336106.  v11:= temp @kind wide;
  #L336108.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L33610e.  v11:= " content=" @kind object;
  #L336112.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336118.  call temp:= `Y`(v6) @signature `Lokio/c;.Y:()Lokio/f;` @kind virtual;
  #L33611e.  v11:= temp @kind object;
  #L336120.  call temp:= `hex`(v11) @signature `Lokio/f;.hex:()Ljava/lang/String;` @kind virtual;
  #L336126.  v11:= temp @kind object;
  #L336128.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33612e.  v11:= 8230I;
  #L336132.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L336138.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33613e.  v11:= temp @kind object;
  #L336140.  call `<init>`(v0, v11) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336146.  throw v0;
  #L336148.  v0:= new `java.lang.IllegalArgumentException`;
  #L33614c.  v1:= new `java.lang.StringBuilder`;
  #L336150.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336156.  v2:= "limit < 0: " @kind object;
  #L33615a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336160.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L336166.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33616c.  v11:= temp @kind object;
  #L33616e.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336174.  throw v0;
}
procedure `long` `N0`(`okio.c` v15 @kind this) @signature `Lokio/c;.N0:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L336404.  v0:= v15.`okio.c.h` @type ^`long` @kind wide;
  #L336408.  v2:= 0L;
  #L33640c.  v4:= lcmp(v0, v2);
  #L336410.  if v4 == 0 then goto L33655c;
  #L336414.  v0:= 0I;
  #L336416.  v4:= v2 @kind wide;
  #L336418.  v1:= 0I;
  #L33641a.  v6:= v15.`okio.c.g` @type ^`okio.r` @kind object;
  #L33641e.  v7:= v6.`okio.r.a` @type ^`byte`[] @kind object;
  #L336422.  v8:= v6.`okio.r.b` @type ^`int`;
  #L336426.  v9:= v6.`okio.r.c` @type ^`int`;
  #L33642a.  if v8 >= v9 then goto L336526;
  #L33642e.  v10:= v7[v8] @kind byte;
  #L336432.  v11:= 48I;
  #L336436.  if v10 < v11 then goto L336448;
  #L33643a.  v11:= 57I;
  #L33643e.  if v10 > v11 then goto L336448;
  #L336442.  v11:= v10 + -48;
  #L336446.  goto L336478;
  #L336448.  v11:= 97I;
  #L33644c.  if v10 < v11 then goto L336462;
  #L336450.  v11:= 102I;
  #L336454.  if v10 > v11 then goto L336462;
  #L336458.  v11:= v10 + -97;
  #L33645c.  v11:= v11 + 10;
  #L336460.  goto L336478;
  #L336462.  v11:= 65I;
  #L336466.  if v10 < v11 then goto L3364e8;
  #L33646a.  v11:= 70I;
  #L33646e.  if v10 > v11 then goto L3364e8;
  #L336472.  v11:= v10 + -65;
  #L336476.  goto L33645c;
  #L336478.  v12:= -3.105036184601418E231D;
  #L33647c.  v12:= v12 ^& v4 @kind long;
  #L33647e.  v14:= lcmp(v12, v2);
  #L336482.  if v14 != 0 then goto L336498;
  #L336486.  v10:= 4I;
  #L336488.  v4:= v4 ^< v10 @kind long;
  #L33648a.  v10:= (`long`) v11 @kind i2l;
  #L33648c.  v4:= v4 ^| v10 @kind long;
  #L33648e.  v8:= v8 + 1;
  #L336492.  v0:= v0 + 1;
  #L336496.  goto L33642a;
  #L336498.  v0:= new `okio.c`;
  #L33649c.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3364a2.  call temp:= `W0`(v0, v4) @signature `Lokio/c;.W0:(J)Lokio/c;` @kind virtual;
  #L3364a8.  v0:= temp @kind object;
  #L3364aa.  call temp:= `U0`(v0, v10) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3364b0.  v0:= temp @kind object;
  #L3364b2.  v1:= new `java.lang.NumberFormatException`;
  #L3364b6.  v2:= new `java.lang.StringBuilder`;
  #L3364ba.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3364c0.  v3:= "Number too large: " @kind object;
  #L3364c4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3364ca.  call temp:= `i0`(v0) @signature `Lokio/c;.i0:()Ljava/lang/String;` @kind virtual;
  #L3364d0.  v0:= temp @kind object;
  #L3364d2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3364d8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3364de.  v0:= temp @kind object;
  #L3364e0.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3364e6.  throw v1;
  #L3364e8.  if v0 == 0 then goto L3364f0;
  #L3364ec.  v1:= 1I;
  #L3364ee.  goto L336526;
  #L3364f0.  v0:= new `java.lang.NumberFormatException`;
  #L3364f4.  v1:= new `java.lang.StringBuilder`;
  #L3364f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3364fe.  v2:= "Expected leading [0-9a-fA-F] character but was 0x" @kind object;
  #L336502.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336508.  call temp:= `toHexString`(v10) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L33650e.  v2:= temp @kind object;
  #L336510.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336516.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33651c.  v1:= temp @kind object;
  #L33651e.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336524.  throw v0;
  #L336526.  if v8 != v9 then goto L33653e;
  #L33652a.  call temp:= `b`(v6) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L336530.  v7:= temp @kind object;
  #L336532.  v15.`okio.c.g` @type ^`okio.r` := v7 @kind object;
  #L336536.  call `a`(v6) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L33653c.  goto L336542;
  #L33653e.  v6.`okio.r.b` @type ^`int` := v8;
  #L336542.  if v1 != 0 then goto L33654e;
  #L336546.  v6:= v15.`okio.c.g` @type ^`okio.r` @kind object;
  #L33654a.  if v6 != 0 then goto L33641a;
  #L33654e.  v1:= v15.`okio.c.h` @type ^`long` @kind wide;
  #L336552.  v6:= (`long`) v0 @kind i2l;
  #L336554.  v1:= v1 - v6 @kind long;
  #L336556.  v15.`okio.c.h` @type ^`long` := v1 @kind wide;
  #L33655a.  return v4 @kind wide;
  #L33655c.  v0:= new `java.lang.IllegalStateException`;
  #L336560.  v1:= "size == 0" @kind object;
  #L336564.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33656a.  throw v0;
}
procedure `int` `P0`(`okio.c` v3 @kind this, `okio.o` v4 @kind object) @signature `Lokio/c;.P0:(Lokio/o;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L335bd8.  v0:= 0I;
  #L335bda.  call temp:= `q0`(v3, v4, v0) @signature `Lokio/c;.q0:(Lokio/o;Z)I` @kind virtual;
  #L335be0.  v0:= temp;
  #L335be2.  v1:= -1I;
  #L335be4.  if v0 != v1 then goto L335bea;
  #L335be8.  return v1;
  #L335bea.  v4:= v4.`okio.o.g` @type ^`okio.f`[] @kind object;
  #L335bee.  v4:= v4[v0] @kind object;
  #L335bf2.  call temp:= `size`(v4) @signature `Lokio/f;.size:()I` @kind virtual;
  #L335bf8.  v4:= temp;
  #L335bfa.  v1:= (`long`) v4 @kind i2l;
  #L335bfc.  call `h0`(v3, v1) @signature `Lokio/c;.h0:(J)V` @kind virtual;
  #L335c02.  return v0;
  #L335c04.  v4:= new `java.lang.AssertionError`;
  #L335c08.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L335c0e.  throw v4;
  catch `java.io.EOFException` @[L335bfc..L335c02] goto L335c04;
}
procedure `okio.c` `Q0`(`okio.c` v1 @kind this, `okio.f` v2 @kind object) @signature `Lokio/c;.Q0:(Lokio/f;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336820.  if v2 == 0 then goto L33682c;
  #L336824.  call `write`(v2, v1) @signature `Lokio/f;.write:(Lokio/c;)V` @kind virtual;
  #L33682a.  return v1 @kind object;
  #L33682c.  v2:= new `java.lang.IllegalArgumentException`;
  #L336830.  v0:= "byteString == null" @kind object;
  #L336834.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33683a.  throw v2;
}
procedure `okio.c` `R0`(`okio.c` v2 @kind this, `byte`[] v3 @kind object) @signature `Lokio/c;.R0:([B)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33676c.  if v3 == 0 then goto L33677e;
  #L336770.  v0:= 0I;
  #L336772.  v1:= length @variable v3;
  #L336774.  call temp:= `S0`(v2, v3, v0, v1) @signature `Lokio/c;.S0:([BII)Lokio/c;` @kind virtual;
  #L33677a.  v3:= temp @kind object;
  #L33677c.  return v3 @kind object;
  #L33677e.  v3:= new `java.lang.IllegalArgumentException`;
  #L336782.  v0:= "source == null" @kind object;
  #L336786.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33678c.  throw v3;
}
procedure `okio.c` `S0`(`okio.c` v9 @kind this, `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokio/c;.S0:([BII)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3367a0.  if v10 == 0 then goto L336800;
  #L3367a4.  v0:= length @variable v10;
  #L3367a6.  v1:= (`long`) v0 @kind i2l;
  #L3367a8.  v3:= (`long`) v11 @kind i2l;
  #L3367aa.  v7:= (`long`) v12 @kind i2l;
  #L3367ac.  v5:= v7 @kind wide;
  #L3367ae.  call `b`(v1, v3, v5) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L3367b4.  v12:= v12 + v11 @kind int;
  #L3367b6.  if v11 >= v12 then goto L3367f4;
  #L3367ba.  v0:= 1I;
  #L3367bc.  call temp:= `E0`(v9, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L3367c2.  v0:= temp @kind object;
  #L3367c4.  v1:= v12 - v11 @kind int;
  #L3367c8.  v2:= v0.`okio.r.c` @type ^`int`;
  #L3367cc.  v2:= v2 - 8192;
  #L3367d0.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3367d6.  v1:= temp;
  #L3367d8.  v2:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L3367dc.  v3:= v0.`okio.r.c` @type ^`int`;
  #L3367e0.  call `arraycopy`(v10, v11, v2, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3367e6.  v11:= v11 + v1 @kind int;
  #L3367e8.  v2:= v0.`okio.r.c` @type ^`int`;
  #L3367ec.  v2:= v2 + v1 @kind int;
  #L3367ee.  v0.`okio.r.c` @type ^`int` := v2;
  #L3367f2.  goto L3367b6;
  #L3367f4.  v10:= v9.`okio.c.h` @type ^`long` @kind wide;
  #L3367f8.  v10:= v10 + v7 @kind long;
  #L3367fa.  v9.`okio.c.h` @type ^`long` := v10 @kind wide;
  #L3367fe.  return v9 @kind object;
  #L336800.  v10:= new `java.lang.IllegalArgumentException`;
  #L336804.  v11:= "source == null" @kind object;
  #L336808.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33680e.  throw v10;
}
procedure `okio.d` `T`(`okio.c` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokio/c;.T:(Ljava/lang/String;)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L337238.  call temp:= `b1`(v0, v1) @signature `Lokio/c;.b1:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L33723e.  v1:= temp @kind object;
  #L337240.  return v1 @kind object;
}
procedure `long` `T0`(`okio.c` v7 @kind this, `okio.v` v8 @kind object) @signature `Lokio/c;.T0:(Lokio/v;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L336594.  if v8 == 0 then goto L3365ba;
  #L336598.  v0:= 0L;
  #L33659c.  v2:= 8192L;
  #L3365a0.  call temp:= `z0`(v8, v7, v2) @signature `Lokio/v;.z0:(Lokio/c;J)J` @kind interface;
  #L3365a6.  v2:= temp @kind wide;
  #L3365a8.  v4:= -1L;
  #L3365ac.  v6:= lcmp(v2, v4);
  #L3365b0.  if v6 == 0 then goto L3365b8;
  #L3365b4.  v0:= v0 + v2 @kind long;
  #L3365b6.  goto L33659c;
  #L3365b8.  return v0 @kind wide;
  #L3365ba.  v8:= new `java.lang.IllegalArgumentException`;
  #L3365be.  v0:= "source == null" @kind object;
  #L3365c2.  call `<init>`(v8, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3365c8.  throw v8;
}
procedure `okio.c` `U0`(`okio.c` v4 @kind this, `int` v5 ) @signature `Lokio/c;.U0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33684c.  v0:= 1I;
  #L33684e.  call temp:= `E0`(v4, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336854.  v0:= temp @kind object;
  #L336856.  v1:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L33685a.  v2:= v0.`okio.r.c` @type ^`int`;
  #L33685e.  v3:= v2 + 1;
  #L336862.  v0.`okio.r.c` @type ^`int` := v3;
  #L336866.  v5:= (`byte`) v5 @kind i2b;
  #L336868.  v1[v2]:= v5 @kind byte;
  #L33686c.  v0:= v4.`okio.c.h` @type ^`long` @kind wide;
  #L336870.  v2:= 1L;
  #L336874.  v0:= v0 + v2 @kind long;
  #L336876.  v4.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L33687a.  return v4 @kind object;
}
procedure `int` `V`(`okio.c` v7 @kind this, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/c;.V:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3359a8.  v0:= length @variable v8;
  #L3359aa.  v1:= (`long`) v0 @kind i2l;
  #L3359ac.  v3:= (`long`) v9 @kind i2l;
  #L3359ae.  v5:= (`long`) v10 @kind i2l;
  #L3359b0.  call `b`(v1, v3, v5) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L3359b6.  v0:= v7.`okio.c.g` @type ^`okio.r` @kind object;
  #L3359ba.  if v0 != 0 then goto L3359c2;
  #L3359be.  v8:= -1I;
  #L3359c0.  return v8;
  #L3359c2.  v1:= v0.`okio.r.c` @type ^`int`;
  #L3359c6.  v2:= v0.`okio.r.b` @type ^`int`;
  #L3359ca.  v1:= v1 - v2 @kind int;
  #L3359cc.  call temp:= `min`(v10, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3359d2.  v10:= temp;
  #L3359d4.  v1:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L3359d8.  v2:= v0.`okio.r.b` @type ^`int`;
  #L3359dc.  call `arraycopy`(v1, v2, v8, v9, v10) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3359e2.  v8:= v0.`okio.r.b` @type ^`int`;
  #L3359e6.  v8:= v8 + v10 @kind int;
  #L3359e8.  v0.`okio.r.b` @type ^`int` := v8;
  #L3359ec.  v1:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L3359f0.  v3:= (`long`) v10 @kind i2l;
  #L3359f2.  v1:= v1 - v3 @kind long;
  #L3359f4.  v7.`okio.c.h` @type ^`long` := v1 @kind wide;
  #L3359f8.  v9:= v0.`okio.r.c` @type ^`int`;
  #L3359fc.  if v8 != v9 then goto L335a12;
  #L335a00.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L335a06.  v8:= temp @kind object;
  #L335a08.  v7.`okio.c.g` @type ^`okio.r` := v8 @kind object;
  #L335a0c.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L335a12.  return v10;
}
procedure `okio.c` `V0`(`okio.c` v11 @kind this, `long` v12 ) @signature `Lokio/c;.V0:(J)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L33688c.  v0:= 0L;
  #L336890.  v2:= lcmp(v12, v0);
  #L336894.  if v2 != 0 then goto L3368a6;
  #L336898.  v12:= 48I;
  #L33689c.  call temp:= `U0`(v11, v12) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3368a2.  v12:= temp @kind object;
  #L3368a4.  return v12 @kind object;
  #L3368a6.  v3:= 0I;
  #L3368a8.  v4:= 1I;
  #L3368aa.  if v2 >= 0 then goto L3368c8;
  #L3368ae.  v12:= -v12 @kind long;
  #L3368b0.  v2:= lcmp(v12, v0);
  #L3368b4.  if v2 >= 0 then goto L3368c6;
  #L3368b8.  v12:= "-9223372036854775808" @kind object;
  #L3368bc.  call temp:= `b1`(v11, v12) @signature `Lokio/c;.b1:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L3368c2.  v12:= temp @kind object;
  #L3368c4.  return v12 @kind object;
  #L3368c6.  v3:= 1I;
  #L3368c8.  v5:= 100000000L;
  #L3368ce.  v7:= 10L;
  #L3368d2.  v2:= lcmp(v12, v5);
  #L3368d6.  if v2 >= 0 then goto L336960;
  #L3368da.  v5:= 10000L;
  #L3368de.  v2:= lcmp(v12, v5);
  #L3368e2.  if v2 >= 0 then goto L33691c;
  #L3368e6.  v5:= 100L;
  #L3368ea.  v2:= lcmp(v12, v5);
  #L3368ee.  if v2 >= 0 then goto L336904;
  #L3368f2.  v2:= lcmp(v12, v7);
  #L3368f6.  if v2 >= 0 then goto L3368fe;
  #L3368fa.  goto L336a50;
  #L3368fe.  v4:= 2I;
  #L336900.  goto L336a50;
  #L336904.  v4:= 1000L;
  #L336908.  v2:= lcmp(v12, v4);
  #L33690c.  if v2 >= 0 then goto L336916;
  #L336910.  v4:= 3I;
  #L336912.  goto L336a50;
  #L336916.  v4:= 4I;
  #L336918.  goto L336a50;
  #L33691c.  v4:= 1000000L;
  #L336922.  v2:= lcmp(v12, v4);
  #L336926.  if v2 >= 0 then goto L336944;
  #L33692a.  v4:= 100000L;
  #L336930.  v2:= lcmp(v12, v4);
  #L336934.  if v2 >= 0 then goto L33693e;
  #L336938.  v4:= 5I;
  #L33693a.  goto L336a50;
  #L33693e.  v4:= 6I;
  #L336940.  goto L336a50;
  #L336944.  v4:= 10000000L;
  #L33694a.  v2:= lcmp(v12, v4);
  #L33694e.  if v2 >= 0 then goto L336958;
  #L336952.  v4:= 7I;
  #L336954.  goto L336a50;
  #L336958.  v4:= 8I;
  #L33695c.  goto L336a50;
  #L336960.  v4:= 1000000000000L;
  #L33696a.  v2:= lcmp(v12, v4);
  #L33696e.  if v2 >= 0 then goto L3369bc;
  #L336972.  v4:= 10000000000L;
  #L33697c.  v2:= lcmp(v12, v4);
  #L336980.  if v2 >= 0 then goto L33699e;
  #L336984.  v4:= 1000000000L;
  #L33698a.  v2:= lcmp(v12, v4);
  #L33698e.  if v2 >= 0 then goto L336998;
  #L336992.  v4:= 9I;
  #L336996.  goto L336a50;
  #L336998.  v4:= 10I;
  #L33699c.  goto L336a50;
  #L33699e.  v4:= 100000000000L;
  #L3369a8.  v2:= lcmp(v12, v4);
  #L3369ac.  if v2 >= 0 then goto L3369b6;
  #L3369b0.  v4:= 11I;
  #L3369b4.  goto L336a50;
  #L3369b6.  v4:= 12I;
  #L3369ba.  goto L336a50;
  #L3369bc.  v4:= 1000000000000000L;
  #L3369c6.  v2:= lcmp(v12, v4);
  #L3369ca.  if v2 >= 0 then goto L336a04;
  #L3369ce.  v4:= 10000000000000L;
  #L3369d8.  v2:= lcmp(v12, v4);
  #L3369dc.  if v2 >= 0 then goto L3369e6;
  #L3369e0.  v4:= 13I;
  #L3369e4.  goto L336a50;
  #L3369e6.  v4:= 100000000000000L;
  #L3369f0.  v2:= lcmp(v12, v4);
  #L3369f4.  if v2 >= 0 then goto L3369fe;
  #L3369f8.  v4:= 14I;
  #L3369fc.  goto L336a50;
  #L3369fe.  v4:= 15I;
  #L336a02.  goto L336a50;
  #L336a04.  v4:= 100000000000000000L;
  #L336a0e.  v2:= lcmp(v12, v4);
  #L336a12.  if v2 >= 0 then goto L336a34;
  #L336a16.  v4:= 10000000000000000L;
  #L336a20.  v2:= lcmp(v12, v4);
  #L336a24.  if v2 >= 0 then goto L336a2e;
  #L336a28.  v4:= 16I;
  #L336a2c.  goto L336a50;
  #L336a2e.  v4:= 17I;
  #L336a32.  goto L336a50;
  #L336a34.  v4:= 1000000000000000000L;
  #L336a3e.  v2:= lcmp(v12, v4);
  #L336a42.  if v2 >= 0 then goto L336a4c;
  #L336a46.  v4:= 18I;
  #L336a4a.  goto L336a50;
  #L336a4c.  v4:= 19I;
  #L336a50.  if v3 == 0 then goto L336a58;
  #L336a54.  v4:= v4 + 1;
  #L336a58.  call temp:= `E0`(v11, v4) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336a5e.  v2:= temp @kind object;
  #L336a60.  v5:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L336a64.  v6:= v2.`okio.r.c` @type ^`int`;
  #L336a68.  v6:= v6 + v4 @kind int;
  #L336a6a.  v9:= lcmp(v12, v0);
  #L336a6e.  if v9 == 0 then goto L336a8c;
  #L336a72.  v9:= v12 %% v7 @kind long;
  #L336a76.  v10:= (`int`) v9 @kind l2i;
  #L336a78.  v6:= v6 + -1;
  #L336a7c.  v9:= `@@okio.c.i` @type ^`byte`[] @kind object;
  #L336a80.  v9:= v9[v10] @kind byte;
  #L336a84.  v5[v6]:= v9 @kind byte;
  #L336a88.  v12:= v12 / v7 @kind long;
  #L336a8a.  goto L336a6a;
  #L336a8c.  if v3 == 0 then goto L336a9c;
  #L336a90.  v6:= v6 + -1;
  #L336a94.  v12:= 45I;
  #L336a98.  v5[v6]:= v12 @kind byte;
  #L336a9c.  v12:= v2.`okio.r.c` @type ^`int`;
  #L336aa0.  v12:= v12 + v4 @kind int;
  #L336aa2.  v2.`okio.r.c` @type ^`int` := v12;
  #L336aa6.  v12:= v11.`okio.c.h` @type ^`long` @kind wide;
  #L336aaa.  v0:= (`long`) v4 @kind i2l;
  #L336aac.  v12:= v12 + v0 @kind long;
  #L336aae.  v11.`okio.c.h` @type ^`long` := v12 @kind wide;
  #L336ab2.  return v11 @kind object;
}
procedure `okio.c` `W0`(`okio.c` v9 @kind this, `long` v10 ) @signature `Lokio/c;.W0:(J)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L336ac4.  v0:= 0L;
  #L336ac8.  v2:= lcmp(v10, v0);
  #L336acc.  if v2 != 0 then goto L336ade;
  #L336ad0.  v10:= 48I;
  #L336ad4.  call temp:= `U0`(v9, v10) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336ada.  v10:= temp @kind object;
  #L336adc.  return v10 @kind object;
  #L336ade.  call temp:= `highestOneBit`(v10) @signature `Ljava/lang/Long;.highestOneBit:(J)J` @kind static;
  #L336ae4.  v0:= temp @kind wide;
  #L336ae6.  call temp:= `numberOfTrailingZeros`(v0) @signature `Ljava/lang/Long;.numberOfTrailingZeros:(J)I` @kind static;
  #L336aec.  v0:= temp;
  #L336aee.  v1:= 4I;
  #L336af0.  v0:= v0 / v1 @kind int;
  #L336af2.  v0:= v0 + 1;
  #L336af6.  call temp:= `E0`(v9, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336afc.  v2:= temp @kind object;
  #L336afe.  v3:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L336b02.  v4:= v2.`okio.r.c` @type ^`int`;
  #L336b06.  v5:= v4 + v0 @kind int;
  #L336b0a.  v5:= v5 + -1;
  #L336b0e.  if v5 < v4 then goto L336b2e;
  #L336b12.  v6:= `@@okio.c.i` @type ^`byte`[] @kind object;
  #L336b16.  v7:= 15L;
  #L336b1a.  v7:= v7 ^& v10 @kind long;
  #L336b1c.  v8:= (`int`) v7 @kind l2i;
  #L336b1e.  v6:= v6[v8] @kind byte;
  #L336b22.  v3[v5]:= v6 @kind byte;
  #L336b26.  v10:= v10 ^>> v1 @kind long;
  #L336b28.  v5:= v5 + -1;
  #L336b2c.  goto L336b0e;
  #L336b2e.  v10:= v2.`okio.r.c` @type ^`int`;
  #L336b32.  v10:= v10 + v0 @kind int;
  #L336b34.  v2.`okio.r.c` @type ^`int` := v10;
  #L336b38.  v10:= v9.`okio.c.h` @type ^`long` @kind wide;
  #L336b3c.  v0:= (`long`) v0 @kind i2l;
  #L336b3e.  v10:= v10 + v0 @kind long;
  #L336b40.  v9.`okio.c.h` @type ^`long` := v10 @kind wide;
  #L336b44.  return v9 @kind object;
}
procedure `java.lang.String` `X`(`okio.c` v2 @kind this, `java.nio.charset.Charset` v3 @kind object) @signature `Lokio/c;.X:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L335e18.  v0:= v2.`okio.c.h` @type ^`long` @kind wide;
  #L335e1c.  call temp:= `d0`(v2, v0, v3) @signature `Lokio/c;.d0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L335e22.  v3:= temp @kind object;
  #L335e24.  return v3 @kind object;
  #L335e26.  v3:= Exception @type ^`java.io.EOFException` @kind object;
  #L335e28.  v0:= new `java.lang.AssertionError`;
  #L335e2c.  call `<init>`(v0, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L335e32.  throw v0;
  catch `java.io.EOFException` @[L335e18..L335e24] goto L335e26;
}
procedure `okio.c` `X0`(`okio.c` v5 @kind this, `int` v6 ) @signature `Lokio/c;.X0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L336b58.  v0:= 4I;
  #L336b5a.  call temp:= `E0`(v5, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336b60.  v0:= temp @kind object;
  #L336b62.  v1:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L336b66.  v2:= v0.`okio.r.c` @type ^`int`;
  #L336b6a.  v3:= v2 + 1;
  #L336b6e.  v4:= v6 ^>> 24;
  #L336b72.  v4:= v4 ^& 255;
  #L336b76.  v4:= (`byte`) v4 @kind i2b;
  #L336b78.  v1[v2]:= v4 @kind byte;
  #L336b7c.  v2:= v3 + 1;
  #L336b80.  v4:= v6 ^>> 16;
  #L336b84.  v4:= v4 ^& 255;
  #L336b88.  v4:= (`byte`) v4 @kind i2b;
  #L336b8a.  v1[v3]:= v4 @kind byte;
  #L336b8e.  v3:= v2 + 1;
  #L336b92.  v4:= v6 ^>> 8;
  #L336b96.  v4:= v4 ^& 255;
  #L336b9a.  v4:= (`byte`) v4 @kind i2b;
  #L336b9c.  v1[v2]:= v4 @kind byte;
  #L336ba0.  v2:= v3 + 1;
  #L336ba4.  v6:= v6 ^& 255;
  #L336ba8.  v6:= (`byte`) v6 @kind i2b;
  #L336baa.  v1[v3]:= v6 @kind byte;
  #L336bae.  v0.`okio.r.c` @type ^`int` := v2;
  #L336bb2.  v0:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L336bb6.  v2:= 4L;
  #L336bba.  v0:= v0 + v2 @kind long;
  #L336bbc.  v5.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L336bc0.  return v5 @kind object;
}
procedure `okio.f` `Y`(`okio.c` v2 @kind this) @signature `Lokio/c;.Y:()Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L337254.  v0:= new `okio.f`;
  #L337258.  call temp:= `E`(v2) @signature `Lokio/c;.E:()[B` @kind virtual;
  #L33725e.  v1:= temp @kind object;
  #L337260.  call `<init>`(v0, v1) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L337266.  return v0 @kind object;
}
procedure `okio.c` `Y0`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.Y0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L336bd4.  call temp:= `c`(v1) @signature `Lokio/x;.c:(I)I` @kind static;
  #L336bda.  v1:= temp;
  #L336bdc.  call temp:= `X0`(v0, v1) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L336be2.  v1:= temp @kind object;
  #L336be4.  return v1 @kind object;
}
procedure `okio.c` `Z0`(`okio.c` v5 @kind this, `int` v6 ) @signature `Lokio/c;.Z0:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L336bf8.  v0:= 2I;
  #L336bfa.  call temp:= `E0`(v5, v0) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336c00.  v0:= temp @kind object;
  #L336c02.  v1:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L336c06.  v2:= v0.`okio.r.c` @type ^`int`;
  #L336c0a.  v3:= v2 + 1;
  #L336c0e.  v4:= v6 ^>> 8;
  #L336c12.  v4:= v4 ^& 255;
  #L336c16.  v4:= (`byte`) v4 @kind i2b;
  #L336c18.  v1[v2]:= v4 @kind byte;
  #L336c1c.  v2:= v3 + 1;
  #L336c20.  v6:= v6 ^& 255;
  #L336c24.  v6:= (`byte`) v6 @kind i2b;
  #L336c26.  v1[v3]:= v6 @kind byte;
  #L336c2a.  v0.`okio.r.c` @type ^`int` := v2;
  #L336c2e.  v0:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L336c32.  v2:= 2L;
  #L336c36.  v0:= v0 + v2 @kind long;
  #L336c38.  v5.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L336c3c.  return v5 @kind object;
}
procedure `okio.c` `a1`(`okio.c` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.nio.charset.Charset` v5 @kind object) @signature `Lokio/c;.a1:(Ljava/lang/String;IILjava/nio/charset/Charset;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336c50.  if v2 == 0 then goto L336d66;
  #L336c54.  if v3 < 0 then goto L336d38;
  #L336c58.  if v4 < v3 then goto L336cfa;
  #L336c5c.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336c62.  v0:= temp;
  #L336c64.  if v4 > v0 then goto L336cb4;
  #L336c68.  if v5 == 0 then goto L336ca4;
  #L336c6c.  v0:= `@@okio.x.a` @type ^`java.nio.charset.Charset` @kind object;
  #L336c70.  call temp:= `equals`(v5, v0) @signature `Ljava/nio/charset/Charset;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L336c76.  v0:= temp;
  #L336c78.  if v0 == 0 then goto L336c86;
  #L336c7c.  call temp:= `c1`(v1, v2, v3, v4) @signature `Lokio/c;.c1:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L336c82.  v2:= temp @kind object;
  #L336c84.  return v2 @kind object;
  #L336c86.  call temp:= `substring`(v2, v3, v4) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L336c8c.  v2:= temp @kind object;
  #L336c8e.  call temp:= `getBytes`(v2, v5) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L336c94.  v2:= temp @kind object;
  #L336c96.  v3:= 0I;
  #L336c98.  v4:= length @variable v2;
  #L336c9a.  call temp:= `S0`(v1, v2, v3, v4) @signature `Lokio/c;.S0:([BII)Lokio/c;` @kind virtual;
  #L336ca0.  v2:= temp @kind object;
  #L336ca2.  return v2 @kind object;
  #L336ca4.  v2:= new `java.lang.IllegalArgumentException`;
  #L336ca8.  v3:= "charset == null" @kind object;
  #L336cac.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336cb2.  throw v2;
  #L336cb4.  v3:= new `java.lang.IllegalArgumentException`;
  #L336cb8.  v5:= new `java.lang.StringBuilder`;
  #L336cbc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336cc2.  v0:= "endIndex > string.length: " @kind object;
  #L336cc6.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336ccc.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336cd2.  v4:= " > " @kind object;
  #L336cd6.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336cdc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336ce2.  v2:= temp;
  #L336ce4.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336cea.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336cf0.  v2:= temp @kind object;
  #L336cf2.  call `<init>`(v3, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336cf8.  throw v3;
  #L336cfa.  v2:= new `java.lang.IllegalArgumentException`;
  #L336cfe.  v5:= new `java.lang.StringBuilder`;
  #L336d02.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336d08.  v0:= "endIndex < beginIndex: " @kind object;
  #L336d0c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d12.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d18.  v4:= " < " @kind object;
  #L336d1c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d22.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d28.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336d2e.  v3:= temp @kind object;
  #L336d30.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336d36.  throw v2;
  #L336d38.  v2:= new `java.lang.IllegalAccessError`;
  #L336d3c.  v4:= new `java.lang.StringBuilder`;
  #L336d40.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336d46.  v5:= "beginIndex < 0: " @kind object;
  #L336d4a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d50.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336d56.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336d5c.  v3:= temp @kind object;
  #L336d5e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalAccessError;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336d64.  throw v2;
  #L336d66.  v2:= new `java.lang.IllegalArgumentException`;
  #L336d6a.  v3:= "string == null" @kind object;
  #L336d6e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336d74.  throw v2;
}
procedure `okio.c` `b`(`okio.c` v0 @kind this) @signature `Lokio/c;.b:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L3365dc.  return v0 @kind object;
}
procedure `okio.d` `b0`(`okio.c` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokio/c;.b0:([BII)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L337158.  call temp:= `S0`(v0, v1, v2, v3) @signature `Lokio/c;.S0:([BII)Lokio/c;` @kind virtual;
  #L33715e.  v1:= temp @kind object;
  #L337160.  return v1 @kind object;
}
procedure `okio.c` `b1`(`okio.c` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokio/c;.b1:(Ljava/lang/String;)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336d88.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336d8e.  v0:= temp;
  #L336d90.  v1:= 0I;
  #L336d92.  call temp:= `c1`(v2, v3, v1, v0) @signature `Lokio/c;.c1:(Ljava/lang/String;II)Lokio/c;` @kind virtual;
  #L336d98.  v3:= temp @kind object;
  #L336d9a.  return v3 @kind object;
}
procedure `okio.c` `c1`(`okio.c` v7 @kind this, `java.lang.String` v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokio/c;.c1:(Ljava/lang/String;II)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L336dac.  if v8 == 0 then goto L336ff6;
  #L336db0.  if v9 < 0 then goto L336fc8;
  #L336db4.  if v10 < v9 then goto L336f8a;
  #L336db8.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336dbe.  v0:= temp;
  #L336dc0.  if v10 > v0 then goto L336f44;
  #L336dc4.  if v9 >= v10 then goto L336f42;
  #L336dc8.  call temp:= `charAt`(v8, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L336dce.  v0:= temp;
  #L336dd0.  v1:= 128I;
  #L336dd4.  if v0 >= v1 then goto L336e44;
  #L336dd8.  v2:= 1I;
  #L336dda.  call temp:= `E0`(v7, v2) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L336de0.  v2:= temp @kind object;
  #L336de2.  v3:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L336de6.  v4:= v2.`okio.r.c` @type ^`int`;
  #L336dea.  v4:= v4 - v9 @kind int;
  #L336dec.  v5:= v4 - 8192;
  #L336df0.  call temp:= `min`(v10, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L336df6.  v5:= temp;
  #L336df8.  v6:= v9 + 1;
  #L336dfc.  v9:= v9 + v4 @kind int;
  #L336dfe.  v0:= (`byte`) v0 @kind i2b;
  #L336e00.  v3[v9]:= v0 @kind byte;
  #L336e04.  if v6 >= v5 then goto L336e26;
  #L336e08.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L336e0e.  v9:= temp;
  #L336e10.  if v9 < v1 then goto L336e16;
  #L336e14.  goto L336e26;
  #L336e16.  v0:= v6 + 1;
  #L336e1a.  v6:= v6 + v4 @kind int;
  #L336e1c.  v9:= (`byte`) v9 @kind i2b;
  #L336e1e.  v3[v6]:= v9 @kind byte;
  #L336e22.  v6:= v0;
  #L336e24.  goto L336e04;
  #L336e26.  v4:= v4 + v6 @kind int;
  #L336e28.  v9:= v2.`okio.r.c` @type ^`int`;
  #L336e2c.  v4:= v4 - v9 @kind int;
  #L336e2e.  v9:= v9 + v4 @kind int;
  #L336e30.  v2.`okio.r.c` @type ^`int` := v9;
  #L336e34.  v0:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L336e38.  v2:= (`long`) v4 @kind i2l;
  #L336e3a.  v0:= v0 + v2 @kind long;
  #L336e3c.  v7.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L336e40.  v9:= v6;
  #L336e42.  goto L336dc4;
  #L336e44.  v2:= 2048I;
  #L336e48.  if v0 >= v2 then goto L336e6c;
  #L336e4c.  v2:= v0 ^> 6;
  #L336e50.  v2:= v2 ^| 192;
  #L336e54.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336e5a.  v0:= v0 ^& 63;
  #L336e5e.  v0:= v0 ^| v1 @kind int;
  #L336e60.  call temp:= `U0`(v7, v0) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336e66.  v9:= v9 + 1;
  #L336e6a.  goto L336dc4;
  #L336e6c.  v2:= 55296I;
  #L336e72.  v3:= 63I;
  #L336e76.  if v0 < v2 then goto L336f18;
  #L336e7a.  v2:= 57343I;
  #L336e80.  if v0 <= v2 then goto L336e86;
  #L336e84.  goto L336f18;
  #L336e86.  v4:= v9 + 1;
  #L336e8a.  if v4 >= v10 then goto L336e98;
  #L336e8e.  call temp:= `charAt`(v8, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L336e94.  v5:= temp;
  #L336e96.  goto L336e9a;
  #L336e98.  v5:= 0I;
  #L336e9a.  v6:= 56319I;
  #L336ea0.  if v0 > v6 then goto L336f0c;
  #L336ea4.  v6:= 56320I;
  #L336eaa.  if v5 < v6 then goto L336f0c;
  #L336eae.  if v5 <= v2 then goto L336eb4;
  #L336eb2.  goto L336f0c;
  #L336eb4.  v2:= 65536I;
  #L336eb8.  v4:= -55297I;
  #L336ebe.  v0:= v0 ^& v4 @kind int;
  #L336ec0.  v0:= v0 ^< 10;
  #L336ec4.  v4:= -56321I;
  #L336eca.  v4:= v4 ^& v5 @kind int;
  #L336ecc.  v0:= v0 ^| v4 @kind int;
  #L336ece.  v0:= v0 + v2 @kind int;
  #L336ed0.  v2:= v0 ^> 18;
  #L336ed4.  v2:= v2 ^| 240;
  #L336ed8.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336ede.  v2:= v0 ^> 12;
  #L336ee2.  v2:= v2 ^& v3 @kind int;
  #L336ee4.  v2:= v2 ^| v1 @kind int;
  #L336ee6.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336eec.  v2:= v0 ^> 6;
  #L336ef0.  v2:= v2 ^& v3 @kind int;
  #L336ef2.  v2:= v2 ^| v1 @kind int;
  #L336ef4.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336efa.  v0:= v0 ^& v3 @kind int;
  #L336efc.  v0:= v0 ^| v1 @kind int;
  #L336efe.  call temp:= `U0`(v7, v0) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336f04.  v9:= v9 + 2;
  #L336f08.  goto L336dc4;
  #L336f0c.  call temp:= `U0`(v7, v3) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336f12.  v9:= v4;
  #L336f14.  goto L336dc4;
  #L336f18.  v2:= v0 ^> 12;
  #L336f1c.  v2:= v2 ^| 224;
  #L336f20.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336f26.  v2:= v0 ^> 6;
  #L336f2a.  v2:= v2 ^& v3 @kind int;
  #L336f2c.  v2:= v2 ^| v1 @kind int;
  #L336f2e.  call temp:= `U0`(v7, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336f34.  v0:= v0 ^& 63;
  #L336f38.  v0:= v0 ^| v1 @kind int;
  #L336f3a.  call temp:= `U0`(v7, v0) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L336f40.  goto L336e66;
  #L336f42.  return v7 @kind object;
  #L336f44.  v9:= new `java.lang.IllegalArgumentException`;
  #L336f48.  v0:= new `java.lang.StringBuilder`;
  #L336f4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336f52.  v1:= "endIndex > string.length: " @kind object;
  #L336f56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336f5c.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336f62.  v10:= " > " @kind object;
  #L336f66.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336f6c.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L336f72.  v8:= temp;
  #L336f74.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336f7a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336f80.  v8:= temp @kind object;
  #L336f82.  call `<init>`(v9, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336f88.  throw v9;
  #L336f8a.  v8:= new `java.lang.IllegalArgumentException`;
  #L336f8e.  v0:= new `java.lang.StringBuilder`;
  #L336f92.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336f98.  v1:= "endIndex < beginIndex: " @kind object;
  #L336f9c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fa2.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fa8.  v10:= " < " @kind object;
  #L336fac.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fb2.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fb8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336fbe.  v9:= temp @kind object;
  #L336fc0.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336fc6.  throw v8;
  #L336fc8.  v8:= new `java.lang.IllegalArgumentException`;
  #L336fcc.  v10:= new `java.lang.StringBuilder`;
  #L336fd0.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L336fd6.  v0:= "beginIndex < 0: " @kind object;
  #L336fda.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fe0.  call temp:= `append`(v10, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L336fe6.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L336fec.  v9:= temp @kind object;
  #L336fee.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336ff4.  throw v8;
  #L336ff6.  v8:= new `java.lang.IllegalArgumentException`;
  #L336ffa.  v9:= "string == null" @kind object;
  #L336ffe.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L337004.  throw v8;
}
procedure `java.lang.Object` `clone`(`okio.c` v1 @kind this) @signature `Lokio/c;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L335dfc.  call temp:= `i`(v1) @signature `Lokio/c;.i:()Lokio/c;` @kind virtual;
  #L335e02.  v0:= temp @kind object;
  #L335e04.  return v0 @kind object;
}
procedure `void` `close`(`okio.c` v0 @kind this) @signature `Lokio/c;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L337534.  return @kind void;
}
procedure `java.lang.String` `d0`(`okio.c` v7 @kind this, `long` v8 , `java.nio.charset.Charset` v10 @kind object) @signature `Lokio/c;.d0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L335e54.  v0:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L335e58.  v2:= 0L;
  #L335e5c.  v4:= v8 @kind wide;
  #L335e5e.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L335e64.  if v10 == 0 then goto L335f28;
  #L335e68.  v0:= 2147483647L;
  #L335e6e.  v2:= lcmp(v8, v0);
  #L335e72.  if v2 > 0 then goto L335efa;
  #L335e76.  v0:= 0L;
  #L335e7a.  v2:= lcmp(v8, v0);
  #L335e7e.  if v2 != 0 then goto L335e88;
  #L335e82.  v8:= "" @kind object;
  #L335e86.  return v8 @kind object;
  #L335e88.  v0:= v7.`okio.c.g` @type ^`okio.r` @kind object;
  #L335e8c.  v1:= v0.`okio.r.b` @type ^`int`;
  #L335e90.  v2:= (`long`) v1 @kind i2l;
  #L335e92.  v2:= v2 + v8 @kind long;
  #L335e94.  v4:= v0.`okio.r.c` @type ^`int`;
  #L335e98.  v4:= (`long`) v4 @kind i2l;
  #L335e9a.  v6:= lcmp(v2, v4);
  #L335e9e.  if v6 <= 0 then goto L335eb6;
  #L335ea2.  v0:= new `java.lang.String`;
  #L335ea6.  call temp:= `s0`(v7, v8) @signature `Lokio/c;.s0:(J)[B` @kind virtual;
  #L335eac.  v8:= temp @kind object;
  #L335eae.  call `<init>`(v0, v8, v10) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L335eb4.  return v0 @kind object;
  #L335eb6.  v2:= new `java.lang.String`;
  #L335eba.  v3:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L335ebe.  v4:= (`int`) v8 @kind l2i;
  #L335ec0.  call `<init>`(v2, v3, v1, v4, v10) @signature `Ljava/lang/String;.<init>:([BIILjava/nio/charset/Charset;)V` @kind direct;
  #L335ec6.  v10:= v0.`okio.r.b` @type ^`int`;
  #L335eca.  v3:= (`long`) v10 @kind i2l;
  #L335ecc.  v3:= v3 + v8 @kind long;
  #L335ece.  v10:= (`int`) v3 @kind l2i;
  #L335ed0.  v0.`okio.r.b` @type ^`int` := v10;
  #L335ed4.  v3:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L335ed8.  v3:= v3 - v8 @kind long;
  #L335eda.  v7.`okio.c.h` @type ^`long` := v3 @kind wide;
  #L335ede.  v8:= v0.`okio.r.c` @type ^`int`;
  #L335ee2.  if v10 != v8 then goto L335ef8;
  #L335ee6.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L335eec.  v8:= temp @kind object;
  #L335eee.  v7.`okio.c.g` @type ^`okio.r` := v8 @kind object;
  #L335ef2.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L335ef8.  return v2 @kind object;
  #L335efa.  v10:= new `java.lang.IllegalArgumentException`;
  #L335efe.  v0:= new `java.lang.StringBuilder`;
  #L335f02.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L335f08.  v1:= "byteCount > Integer.MAX_VALUE: " @kind object;
  #L335f0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L335f12.  call temp:= `append`(v0, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L335f18.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L335f1e.  v8:= temp @kind object;
  #L335f20.  call `<init>`(v10, v8) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335f26.  throw v10;
  #L335f28.  v8:= new `java.lang.IllegalArgumentException`;
  #L335f2c.  v9:= "charset == null" @kind object;
  #L335f30.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335f36.  throw v8;
}
procedure `okio.c` `d1`(`okio.c` v3 @kind this, `int` v4 ) @signature `Lokio/c;.d1:(I)Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L337018.  v0:= 128I;
  #L33701c.  if v4 >= v0 then goto L337028;
  #L337020.  call temp:= `U0`(v3, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337026.  goto L3370d8;
  #L337028.  v1:= 2048I;
  #L33702c.  v2:= 63I;
  #L337030.  if v4 >= v1 then goto L33704e;
  #L337034.  v1:= v4 ^> 6;
  #L337038.  v1:= v1 ^| 192;
  #L33703c.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337042.  v4:= v4 ^& v2 @kind int;
  #L337044.  v4:= v4 ^| v0 @kind int;
  #L337046.  call temp:= `U0`(v3, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L33704c.  goto L3370d8;
  #L33704e.  v1:= 65536I;
  #L337052.  if v4 >= v1 then goto L33709a;
  #L337056.  v1:= 55296I;
  #L33705c.  if v4 < v1 then goto L337072;
  #L337060.  v1:= 57343I;
  #L337066.  if v4 > v1 then goto L337072;
  #L33706a.  call temp:= `U0`(v3, v2) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337070.  goto L3370d8;
  #L337072.  v1:= v4 ^> 12;
  #L337076.  v1:= v1 ^| 224;
  #L33707a.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337080.  v1:= v4 ^> 6;
  #L337084.  v1:= v1 ^& v2 @kind int;
  #L337086.  v1:= v1 ^| v0 @kind int;
  #L337088.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L33708e.  v4:= v4 ^& v2 @kind int;
  #L337090.  v4:= v4 ^| v0 @kind int;
  #L337092.  call temp:= `U0`(v3, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L337098.  goto L3370d8;
  #L33709a.  v1:= 1114111I;
  #L3370a0.  if v4 > v1 then goto L3370da;
  #L3370a4.  v1:= v4 ^> 18;
  #L3370a8.  v1:= v1 ^| 240;
  #L3370ac.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3370b2.  v1:= v4 ^> 12;
  #L3370b6.  v1:= v1 ^& v2 @kind int;
  #L3370b8.  v1:= v1 ^| v0 @kind int;
  #L3370ba.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3370c0.  v1:= v4 ^> 6;
  #L3370c4.  v1:= v1 ^& v2 @kind int;
  #L3370c6.  v1:= v1 ^| v0 @kind int;
  #L3370c8.  call temp:= `U0`(v3, v1) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3370ce.  v4:= v4 ^& v2 @kind int;
  #L3370d0.  v4:= v4 ^| v0 @kind int;
  #L3370d2.  call temp:= `U0`(v3, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L3370d8.  return v3 @kind object;
  #L3370da.  v0:= new `java.lang.IllegalArgumentException`;
  #L3370de.  v1:= new `java.lang.StringBuilder`;
  #L3370e2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3370e8.  v2:= "Unexpected code point: " @kind object;
  #L3370ec.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3370f2.  call temp:= `toHexString`(v4) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3370f8.  v4:= temp @kind object;
  #L3370fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337100.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337106.  v4:= temp @kind object;
  #L337108.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33710e.  throw v0;
}
procedure `void` `e`(`okio.c` v2 @kind this) @signature `Lokio/c;.e:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3374f8.  v0:= v2.`okio.c.h` @type ^`long` @kind wide;
  #L3374fc.  call `h0`(v2, v0) @signature `Lokio/c;.h0:(J)V` @kind virtual;
  #L337502.  return @kind void;
  #L337504.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L337506.  v1:= new `java.lang.AssertionError`;
  #L33750a.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L337510.  throw v1;
  catch `java.io.EOFException` @[L3374f8..L337502] goto L337504;
}
procedure `void` `e0`(`okio.c` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lokio/c;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L337644.  if v8 == 0 then goto L33775e;
  #L337648.  if v8 == v7 then goto L33774e;
  #L33764c.  v0:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L337650.  v2:= 0L;
  #L337654.  v4:= v9 @kind wide;
  #L337656.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L33765c.  v0:= 0L;
  #L337660.  v2:= lcmp(v9, v0);
  #L337664.  if v2 <= 0 then goto L33774c;
  #L337668.  v0:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L33766c.  v1:= v0.`okio.r.c` @type ^`int`;
  #L337670.  v2:= v0.`okio.r.b` @type ^`int`;
  #L337674.  v1:= v1 - v2 @kind int;
  #L337676.  v1:= (`long`) v1 @kind i2l;
  #L337678.  v3:= lcmp(v9, v1);
  #L33767c.  if v3 >= 0 then goto L3376f0;
  #L337680.  v1:= v7.`okio.c.g` @type ^`okio.r` @kind object;
  #L337684.  if v1 == 0 then goto L33768e;
  #L337688.  v1:= v1.`okio.r.g` @type ^`okio.r` @kind object;
  #L33768c.  goto L337690;
  #L33768e.  v1:= 0I;
  #L337690.  if v1 == 0 then goto L3376e2;
  #L337694.  v2:= v1.`okio.r.e` @type ^`boolean` @kind boolean;
  #L337698.  if v2 == 0 then goto L3376e2;
  #L33769c.  v2:= v1.`okio.r.c` @type ^`int`;
  #L3376a0.  v2:= (`long`) v2 @kind i2l;
  #L3376a2.  v2:= v2 + v9 @kind long;
  #L3376a4.  v4:= v1.`okio.r.d` @type ^`boolean` @kind boolean;
  #L3376a8.  if v4 == 0 then goto L3376b0;
  #L3376ac.  v4:= 0I;
  #L3376ae.  goto L3376b4;
  #L3376b0.  v4:= v1.`okio.r.b` @type ^`int`;
  #L3376b4.  v4:= (`long`) v4 @kind i2l;
  #L3376b6.  v2:= v2 - v4 @kind long;
  #L3376b8.  v4:= 8192L;
  #L3376bc.  v6:= lcmp(v2, v4);
  #L3376c0.  if v6 > 0 then goto L3376e2;
  #L3376c4.  v2:= (`int`) v9 @kind l2i;
  #L3376c6.  call `f`(v0, v1, v2) @signature `Lokio/r;.f:(Lokio/r;I)V` @kind virtual;
  #L3376cc.  v0:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L3376d0.  v0:= v0 - v9 @kind long;
  #L3376d2.  v8.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L3376d6.  v0:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L3376da.  v0:= v0 + v9 @kind long;
  #L3376dc.  v7.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L3376e0.  return @kind void;
  #L3376e2.  v1:= (`int`) v9 @kind l2i;
  #L3376e4.  call temp:= `e`(v0, v1) @signature `Lokio/r;.e:(I)Lokio/r;` @kind virtual;
  #L3376ea.  v0:= temp @kind object;
  #L3376ec.  v8.`okio.c.g` @type ^`okio.r` := v0 @kind object;
  #L3376f0.  v0:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L3376f4.  v1:= v0.`okio.r.c` @type ^`int`;
  #L3376f8.  v2:= v0.`okio.r.b` @type ^`int`;
  #L3376fc.  v1:= v1 - v2 @kind int;
  #L3376fe.  v1:= (`long`) v1 @kind i2l;
  #L337700.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L337706.  v3:= temp @kind object;
  #L337708.  v8.`okio.c.g` @type ^`okio.r` := v3 @kind object;
  #L33770c.  v3:= v7.`okio.c.g` @type ^`okio.r` @kind object;
  #L337710.  if v3 != 0 then goto L337722;
  #L337714.  v7.`okio.c.g` @type ^`okio.r` := v0 @kind object;
  #L337718.  v0.`okio.r.g` @type ^`okio.r` := v0 @kind object;
  #L33771c.  v0.`okio.r.f` @type ^`okio.r` := v0 @kind object;
  #L337720.  goto L337734;
  #L337722.  v3:= v3.`okio.r.g` @type ^`okio.r` @kind object;
  #L337726.  call temp:= `c`(v3, v0) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L33772c.  v0:= temp @kind object;
  #L33772e.  call `a`(v0) @signature `Lokio/r;.a:()V` @kind virtual;
  #L337734.  v3:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L337738.  v3:= v3 - v1 @kind long;
  #L33773a.  v8.`okio.c.h` @type ^`long` := v3 @kind wide;
  #L33773e.  v3:= v7.`okio.c.h` @type ^`long` @kind wide;
  #L337742.  v3:= v3 + v1 @kind long;
  #L337744.  v7.`okio.c.h` @type ^`long` := v3 @kind wide;
  #L337748.  v9:= v9 - v1 @kind long;
  #L33774a.  goto L33765c;
  #L33774c.  return @kind void;
  #L33774e.  v8:= new `java.lang.IllegalArgumentException`;
  #L337752.  v9:= "source == this" @kind object;
  #L337756.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33775c.  throw v8;
  #L33775e.  v8:= new `java.lang.IllegalArgumentException`;
  #L337762.  v9:= "source == null" @kind object;
  #L337766.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33776c.  throw v8;
}
procedure `boolean` `equals`(`okio.c` v13 @kind this, `java.lang.Object` v14 @kind object) @signature `Lokio/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L3356a4.  v0:= 1I;
  #L3356a6.  if v13 != v14 then goto L3356ac;
  #L3356aa.  return v0;
  #L3356ac.  v1:= instanceof @variable v14 @type ^`okio.c` @kind boolean;
  #L3356b0.  v2:= 0I;
  #L3356b2.  if v1 != 0 then goto L3356b8;
  #L3356b6.  return v2;
  #L3356b8.  v14:= (`okio.c`) v14 @kind object;
  #L3356bc.  v3:= v13.`okio.c.h` @type ^`long` @kind wide;
  #L3356c0.  v5:= v14.`okio.c.h` @type ^`long` @kind wide;
  #L3356c4.  v1:= lcmp(v3, v5);
  #L3356c8.  if v1 == 0 then goto L3356ce;
  #L3356cc.  return v2;
  #L3356ce.  v5:= 0L;
  #L3356d2.  v1:= lcmp(v3, v5);
  #L3356d6.  if v1 != 0 then goto L3356dc;
  #L3356da.  return v0;
  #L3356dc.  v1:= v13.`okio.c.g` @type ^`okio.r` @kind object;
  #L3356e0.  v14:= v14.`okio.c.g` @type ^`okio.r` @kind object;
  #L3356e4.  v3:= v1.`okio.r.b` @type ^`int`;
  #L3356e8.  v4:= v14.`okio.r.b` @type ^`int`;
  #L3356ec.  v7:= v13.`okio.c.h` @type ^`long` @kind wide;
  #L3356f0.  v9:= lcmp(v5, v7);
  #L3356f4.  if v9 >= 0 then goto L335766;
  #L3356f8.  v7:= v1.`okio.r.c` @type ^`int`;
  #L3356fc.  v7:= v7 - v3 @kind int;
  #L3356fe.  v8:= v14.`okio.r.c` @type ^`int`;
  #L335702.  v8:= v8 - v4 @kind int;
  #L335704.  call temp:= `min`(v7, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L33570a.  v7:= temp;
  #L33570c.  v7:= (`long`) v7 @kind i2l;
  #L33570e.  v9:= 0I;
  #L335710.  v10:= (`long`) v9 @kind i2l;
  #L335712.  v12:= lcmp(v10, v7);
  #L335716.  if v12 >= 0 then goto L335742;
  #L33571a.  v10:= v1.`okio.r.a` @type ^`byte`[] @kind object;
  #L33571e.  v11:= v3 + 1;
  #L335722.  v3:= v10[v3] @kind byte;
  #L335726.  v10:= v14.`okio.r.a` @type ^`byte`[] @kind object;
  #L33572a.  v12:= v4 + 1;
  #L33572e.  v4:= v10[v4] @kind byte;
  #L335732.  if v3 == v4 then goto L335738;
  #L335736.  return v2;
  #L335738.  v9:= v9 + 1;
  #L33573c.  v3:= v11;
  #L33573e.  v4:= v12;
  #L335740.  goto L335710;
  #L335742.  v9:= v1.`okio.r.c` @type ^`int`;
  #L335746.  if v3 != v9 then goto L335752;
  #L33574a.  v1:= v1.`okio.r.f` @type ^`okio.r` @kind object;
  #L33574e.  v3:= v1.`okio.r.b` @type ^`int`;
  #L335752.  v9:= v14.`okio.r.c` @type ^`int`;
  #L335756.  if v4 != v9 then goto L335762;
  #L33575a.  v14:= v14.`okio.r.f` @type ^`okio.r` @kind object;
  #L33575e.  v4:= v14.`okio.r.b` @type ^`int`;
  #L335762.  v5:= v5 + v7 @kind long;
  #L335764.  goto L3356ec;
  #L335766.  return v0;
}
procedure `okio.d` `f0`(`okio.c` v0 @kind this, `long` v1 ) @signature `Lokio/c;.f0:(J)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3371c8.  call temp:= `W0`(v0, v1) @signature `Lokio/c;.W0:(J)Lokio/c;` @kind virtual;
  #L3371ce.  v1:= temp @kind object;
  #L3371d0.  return v1 @kind object;
}
procedure `void` `flush`(`okio.c` v0 @kind this) @signature `Lokio/c;.flush:()V` @AccessFlag PUBLIC {
    temp;

  #L337548.  return @kind void;
}
procedure `void` `h0`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.h0:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3375c4.  v0:= 0L;
  #L3375c8.  v2:= lcmp(v7, v0);
  #L3375cc.  if v2 <= 0 then goto L337632;
  #L3375d0.  v0:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L3375d4.  if v0 == 0 then goto L337626;
  #L3375d8.  v1:= v0.`okio.r.c` @type ^`int`;
  #L3375dc.  v0:= v0.`okio.r.b` @type ^`int`;
  #L3375e0.  v1:= v1 - v0 @kind int;
  #L3375e2.  v0:= (`long`) v1 @kind i2l;
  #L3375e4.  call temp:= `min`(v7, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3375ea.  v0:= temp @kind wide;
  #L3375ec.  v1:= (`int`) v0 @kind l2i;
  #L3375ee.  v2:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L3375f2.  v4:= (`long`) v1 @kind i2l;
  #L3375f4.  v2:= v2 - v4 @kind long;
  #L3375f6.  v6.`okio.c.h` @type ^`long` := v2 @kind wide;
  #L3375fa.  v7:= v7 - v4 @kind long;
  #L3375fc.  v0:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L337600.  v2:= v0.`okio.r.b` @type ^`int`;
  #L337604.  v2:= v2 + v1 @kind int;
  #L337606.  v0.`okio.r.b` @type ^`int` := v2;
  #L33760a.  v1:= v0.`okio.r.c` @type ^`int`;
  #L33760e.  if v2 != v1 then goto L3375c4;
  #L337612.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L337618.  v1:= temp @kind object;
  #L33761a.  v6.`okio.c.g` @type ^`okio.r` := v1 @kind object;
  #L33761e.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L337624.  goto L3375c4;
  #L337626.  v7:= new `java.io.EOFException`;
  #L33762a.  call `<init>`(v7) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L337630.  throw v7;
  #L337632.  return @kind void;
}
procedure `int` `hashCode`(`okio.c` v5 @kind this) @signature `Lokio/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33595c.  v0:= v5.`okio.c.g` @type ^`okio.r` @kind object;
  #L335960.  if v0 != 0 then goto L335968;
  #L335964.  v0:= 0I;
  #L335966.  return v0;
  #L335968.  v1:= 1I;
  #L33596a.  v2:= v0.`okio.r.b` @type ^`int`;
  #L33596e.  v3:= v0.`okio.r.c` @type ^`int`;
  #L335972.  if v2 >= v3 then goto L33598a;
  #L335976.  v1:= v1 * 31;
  #L33597a.  v4:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L33597e.  v4:= v4[v2] @kind byte;
  #L335982.  v1:= v1 + v4 @kind int;
  #L335984.  v2:= v2 + 1;
  #L335988.  goto L335972;
  #L33598a.  v0:= v0.`okio.r.f` @type ^`okio.r` @kind object;
  #L33598e.  v2:= v5.`okio.c.g` @type ^`okio.r` @kind object;
  #L335992.  if v0 != v2 then goto L33596a;
  #L335996.  return v1;
}
procedure `okio.c` `i`(`okio.c` v6 @kind this) @signature `Lokio/c;.i:()Lokio/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3365f0.  v0:= new `okio.c`;
  #L3365f4.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L3365fa.  v1:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L3365fe.  v3:= 0L;
  #L336602.  v5:= lcmp(v1, v3);
  #L336606.  if v5 != 0 then goto L33660c;
  #L33660a.  return v0 @kind object;
  #L33660c.  v1:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L336610.  call temp:= `d`(v1) @signature `Lokio/r;.d:()Lokio/r;` @kind virtual;
  #L336616.  v1:= temp @kind object;
  #L336618.  v0.`okio.c.g` @type ^`okio.r` := v1 @kind object;
  #L33661c.  v1.`okio.r.g` @type ^`okio.r` := v1 @kind object;
  #L336620.  v1.`okio.r.f` @type ^`okio.r` := v1 @kind object;
  #L336624.  v1:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L336628.  v1:= v1.`okio.r.f` @type ^`okio.r` @kind object;
  #L33662c.  v2:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L336630.  if v1 == v2 then goto L33664c;
  #L336634.  v2:= v0.`okio.c.g` @type ^`okio.r` @kind object;
  #L336638.  v2:= v2.`okio.r.g` @type ^`okio.r` @kind object;
  #L33663c.  call temp:= `d`(v1) @signature `Lokio/r;.d:()Lokio/r;` @kind virtual;
  #L336642.  v3:= temp @kind object;
  #L336644.  call temp:= `c`(v2, v3) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L33664a.  goto L336628;
  #L33664c.  v1:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L336650.  v0.`okio.c.h` @type ^`long` := v1 @kind wide;
  #L336654.  return v0 @kind object;
}
procedure `java.lang.String` `i0`(`okio.c` v3 @kind this) @signature `Lokio/c;.i0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L335f48.  v0:= v3.`okio.c.h` @type ^`long` @kind wide;
  #L335f4c.  v2:= `@@okio.x.a` @type ^`java.nio.charset.Charset` @kind object;
  #L335f50.  call temp:= `d0`(v3, v0, v2) @signature `Lokio/c;.d0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L335f56.  v0:= temp @kind object;
  #L335f58.  return v0 @kind object;
  #L335f5a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L335f5c.  v1:= new `java.lang.AssertionError`;
  #L335f60.  call `<init>`(v1, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L335f66.  throw v1;
  catch `java.io.EOFException` @[L335f48..L335f58] goto L335f5a;
}
procedure `boolean` `isOpen`(`okio.c` v1 @kind this) @signature `Lokio/c;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3357a0.  v0:= 1I;
  #L3357a2.  return v0;
}
procedure `java.lang.String` `k0`(`okio.c` v1 @kind this, `long` v2 ) @signature `Lokio/c;.k0:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335f88.  v0:= `@@okio.x.a` @type ^`java.nio.charset.Charset` @kind object;
  #L335f8c.  call temp:= `d0`(v1, v2, v0) @signature `Lokio/c;.d0:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L335f92.  v2:= temp @kind object;
  #L335f94.  return v2 @kind object;
}
procedure `java.lang.String` `n0`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.n0:(J)Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L335fa8.  v0:= 1L;
  #L335fac.  v2:= 0L;
  #L335fb0.  v4:= lcmp(v7, v2);
  #L335fb4.  if v4 <= 0 then goto L335fe0;
  #L335fb8.  v2:= v7 - v0 @kind long;
  #L335fbc.  call temp:= `w`(v6, v2) @signature `Lokio/c;.w:(J)B` @kind virtual;
  #L335fc2.  v4:= temp;
  #L335fc4.  v5:= 13I;
  #L335fc8.  if v4 != v5 then goto L335fe0;
  #L335fcc.  call temp:= `k0`(v6, v2) @signature `Lokio/c;.k0:(J)Ljava/lang/String;` @kind virtual;
  #L335fd2.  v7:= temp @kind object;
  #L335fd4.  v0:= 2L;
  #L335fd8.  call `h0`(v6, v0) @signature `Lokio/c;.h0:(J)V` @kind virtual;
  #L335fde.  return v7 @kind object;
  #L335fe0.  call temp:= `k0`(v6, v7) @signature `Lokio/c;.k0:(J)Ljava/lang/String;` @kind virtual;
  #L335fe6.  v7:= temp @kind object;
  #L335fe8.  call `h0`(v6, v0) @signature `Lokio/c;.h0:(J)V` @kind virtual;
  #L335fee.  return v7 @kind object;
}
procedure `okio.f` `o`(`okio.c` v1 @kind this, `long` v2 ) @signature `Lokio/c;.o:(J)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337278.  v0:= new `okio.f`;
  #L33727c.  call temp:= `s0`(v1, v2) @signature `Lokio/c;.s0:(J)[B` @kind virtual;
  #L337282.  v2:= temp @kind object;
  #L337284.  call `<init>`(v0, v2) @signature `Lokio/f;.<init>:([B)V` @kind direct;
  #L33728a.  return v0 @kind object;
}
procedure `java.lang.String` `o0`(`okio.c` v2 @kind this) @signature `Lokio/c;.o0:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L336000.  v0:= 9223372036854775807L;
  #L33600a.  call temp:= `M`(v2, v0) @signature `Lokio/c;.M:(J)Ljava/lang/String;` @kind virtual;
  #L336010.  v0:= temp @kind object;
  #L336012.  return v0 @kind object;
}
procedure `int` `p0`(`okio.c` v1 @kind this) @signature `Lokio/c;.p0:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L335bb4.  call temp:= `readInt`(v1) @signature `Lokio/c;.readInt:()I` @kind virtual;
  #L335bba.  v0:= temp;
  #L335bbc.  call temp:= `c`(v0) @signature `Lokio/x;.c:(I)I` @kind static;
  #L335bc2.  v0:= temp;
  #L335bc4.  return v0;
}
procedure `int` `q0`(`okio.c` v17 @kind this, `okio.o` v18 @kind object, `boolean` v19 ) @signature `Lokio/c;.q0:(Lokio/o;Z)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L335c30.  v0:= v18 @kind object;
  #L335c34.  v1:= v17 @kind object;
  #L335c38.  v2:= v1.`okio.c.g` @type ^`okio.r` @kind object;
  #L335c3c.  v3:= -2I;
  #L335c3e.  if v2 != 0 then goto L335c56;
  #L335c42.  if v19 == 0 then goto L335c48;
  #L335c46.  return v3;
  #L335c48.  v2:= `@@okio.f.EMPTY` @type ^`okio.f` @kind object;
  #L335c4c.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/AbstractList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L335c52.  v0:= temp;
  #L335c54.  return v0;
  #L335c56.  v4:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L335c5a.  v5:= v2.`okio.r.b` @type ^`int`;
  #L335c5e.  v6:= v2.`okio.r.c` @type ^`int`;
  #L335c62.  v0:= v0.`okio.o.h` @type ^`int`[] @kind object;
  #L335c66.  v7:= 0I;
  #L335c68.  v8:= -1I;
  #L335c6a.  v10:= v2 @kind object;
  #L335c6c.  v9:= 0I;
  #L335c6e.  v11:= -1I;
  #L335c70.  v12:= v9 + 1;
  #L335c74.  v9:= v0[v9];
  #L335c78.  v13:= v12 + 1;
  #L335c7c.  v12:= v0[v12];
  #L335c80.  if v12 == v8 then goto L335c86;
  #L335c84.  v11:= v12;
  #L335c86.  if v10 != 0 then goto L335c8c;
  #L335c8a.  goto L335cda;
  #L335c8c.  v12:= 0I;
  #L335c8e.  if v9 >= 0 then goto L335d1a;
  #L335c92.  v9:= v9 * -1;
  #L335c96.  v14:= v13 + v9 @kind int;
  #L335c9a.  v9:= v5 + 1;
  #L335c9e.  v5:= v4[v5] @kind byte;
  #L335ca2.  v5:= v5 ^& 255;
  #L335ca6.  v15:= v13 + 1;
  #L335caa.  v13:= v0[v13];
  #L335cae.  if v5 == v13 then goto L335cb4;
  #L335cb2.  return v11;
  #L335cb4.  if v15 != v14 then goto L335cbc;
  #L335cb8.  v5:= 1I;
  #L335cba.  goto L335cbe;
  #L335cbc.  v5:= 0I;
  #L335cbe.  if v9 != v6 then goto L335cf4;
  #L335cc2.  v4:= v10.`okio.r.f` @type ^`okio.r` @kind object;
  #L335cc6.  v6:= v4.`okio.r.b` @type ^`int`;
  #L335cca.  v9:= v4.`okio.r.a` @type ^`byte`[] @kind object;
  #L335cce.  v10:= v4.`okio.r.c` @type ^`int`;
  #L335cd2.  if v4 != v2 then goto L335ce8;
  #L335cd6.  if v5 != 0 then goto L335ce2;
  #L335cda.  if v19 == 0 then goto L335ce0;
  #L335cde.  return v3;
  #L335ce0.  return v11;
  #L335ce2.  v4:= v9 @kind object;
  #L335ce4.  v9:= v12 @kind object;
  #L335ce6.  goto L335d00;
  #L335ce8.  v16:= v9 @kind object;
  #L335cec.  v9:= v4 @kind object;
  #L335cee.  v4:= v16 @kind object;
  #L335cf2.  goto L335d00;
  #L335cf4.  v16:= v10 @kind object;
  #L335cf8.  v10:= v6;
  #L335cfa.  v6:= v9;
  #L335cfc.  v9:= v16 @kind object;
  #L335d00.  if v5 == 0 then goto L335d10;
  #L335d04.  v5:= v0[v15];
  #L335d08.  v3:= v6;
  #L335d0a.  v6:= v10;
  #L335d0c.  v10:= v9 @kind object;
  #L335d0e.  goto L335d5c;
  #L335d10.  v5:= v6;
  #L335d12.  v6:= v10;
  #L335d14.  v13:= v15;
  #L335d16.  v10:= v9 @kind object;
  #L335d18.  goto L335c9a;
  #L335d1a.  v14:= v5 + 1;
  #L335d1e.  v5:= v4[v5] @kind byte;
  #L335d22.  v5:= v5 ^& 255;
  #L335d26.  v15:= v13 + v9 @kind int;
  #L335d2a.  if v13 != v15 then goto L335d30;
  #L335d2e.  return v11;
  #L335d30.  v3:= v0[v13];
  #L335d34.  if v5 != v3 then goto L335d6a;
  #L335d38.  v13:= v13 + v9 @kind int;
  #L335d3a.  v5:= v0[v13];
  #L335d3e.  if v14 != v6 then goto L335d5a;
  #L335d42.  v10:= v10.`okio.r.f` @type ^`okio.r` @kind object;
  #L335d46.  v3:= v10.`okio.r.b` @type ^`int`;
  #L335d4a.  v4:= v10.`okio.r.a` @type ^`byte`[] @kind object;
  #L335d4e.  v6:= v10.`okio.r.c` @type ^`int`;
  #L335d52.  if v10 != v2 then goto L335d5c;
  #L335d56.  v10:= v12 @kind object;
  #L335d58.  goto L335d5c;
  #L335d5a.  v3:= v14;
  #L335d5c.  if v5 < 0 then goto L335d62;
  #L335d60.  return v5;
  #L335d62.  v9:= -v5 @kind int;
  #L335d64.  v5:= v3;
  #L335d66.  v3:= -2I;
  #L335d68.  goto L335c70;
  #L335d6a.  v13:= v13 + 1;
  #L335d6e.  v3:= -2I;
  #L335d70.  goto L335d2a;
}
procedure `long` `r`(`okio.c` v5 @kind this) @signature `Lokio/c;.r:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3361ac.  v0:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L3361b0.  v2:= 0L;
  #L3361b4.  v4:= lcmp(v0, v2);
  #L3361b8.  if v4 != 0 then goto L3361be;
  #L3361bc.  return v2 @kind wide;
  #L3361be.  v2:= v5.`okio.c.g` @type ^`okio.r` @kind object;
  #L3361c2.  v2:= v2.`okio.r.g` @type ^`okio.r` @kind object;
  #L3361c6.  v3:= v2.`okio.r.c` @type ^`int`;
  #L3361ca.  v4:= 8192I;
  #L3361ce.  if v3 >= v4 then goto L3361e4;
  #L3361d2.  v4:= v2.`okio.r.e` @type ^`boolean` @kind boolean;
  #L3361d6.  if v4 == 0 then goto L3361e4;
  #L3361da.  v2:= v2.`okio.r.b` @type ^`int`;
  #L3361de.  v3:= v3 - v2 @kind int;
  #L3361e0.  v2:= (`long`) v3 @kind i2l;
  #L3361e2.  v0:= v0 - v2 @kind long;
  #L3361e4.  return v0 @kind wide;
}
procedure `int` `read`(`okio.c` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/c;.read:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L335a24.  v0:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L335a28.  if v0 != 0 then goto L335a30;
  #L335a2c.  v7:= -1I;
  #L335a2e.  return v7;
  #L335a30.  call temp:= `remaining`(v7) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L335a36.  v1:= temp;
  #L335a38.  v2:= v0.`okio.r.c` @type ^`int`;
  #L335a3c.  v3:= v0.`okio.r.b` @type ^`int`;
  #L335a40.  v2:= v2 - v3 @kind int;
  #L335a42.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L335a48.  v1:= temp;
  #L335a4a.  v2:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L335a4e.  v3:= v0.`okio.r.b` @type ^`int`;
  #L335a52.  call temp:= `put`(v7, v2, v3, v1) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L335a58.  v7:= v0.`okio.r.b` @type ^`int`;
  #L335a5c.  v7:= v7 + v1 @kind int;
  #L335a5e.  v0.`okio.r.b` @type ^`int` := v7;
  #L335a62.  v2:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L335a66.  v4:= (`long`) v1 @kind i2l;
  #L335a68.  v2:= v2 - v4 @kind long;
  #L335a6a.  v6.`okio.c.h` @type ^`long` := v2 @kind wide;
  #L335a6e.  v2:= v0.`okio.r.c` @type ^`int`;
  #L335a72.  if v7 != v2 then goto L335a88;
  #L335a76.  call temp:= `b`(v0) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L335a7c.  v7:= temp @kind object;
  #L335a7e.  v6.`okio.c.g` @type ^`okio.r` := v7 @kind object;
  #L335a82.  call `a`(v0) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L335a88.  return v1;
}
procedure `byte` `readByte`(`okio.c` v9 @kind this) @signature `Lokio/c;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L335844.  v0:= v9.`okio.c.h` @type ^`long` @kind wide;
  #L335848.  v2:= 0L;
  #L33584c.  v4:= lcmp(v0, v2);
  #L335850.  if v4 == 0 then goto L335894;
  #L335854.  v2:= v9.`okio.c.g` @type ^`okio.r` @kind object;
  #L335858.  v3:= v2.`okio.r.b` @type ^`int`;
  #L33585c.  v4:= v2.`okio.r.c` @type ^`int`;
  #L335860.  v5:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L335864.  v6:= v3 + 1;
  #L335868.  v3:= v5[v3] @kind byte;
  #L33586c.  v7:= 1L;
  #L335870.  v0:= v0 - v7 @kind long;
  #L335872.  v9.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L335876.  if v6 != v4 then goto L33588e;
  #L33587a.  call temp:= `b`(v2) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L335880.  v0:= temp @kind object;
  #L335882.  v9.`okio.c.g` @type ^`okio.r` := v0 @kind object;
  #L335886.  call `a`(v2) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L33588c.  goto L335892;
  #L33588e.  v2.`okio.r.b` @type ^`int` := v6;
  #L335892.  return v3;
  #L335894.  v0:= new `java.lang.IllegalStateException`;
  #L335898.  v1:= "size == 0" @kind object;
  #L33589c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3358a2.  throw v0;
}
procedure `void` `readFully`(`okio.c` v3 @kind this, `byte`[] v4 @kind object) @signature `Lokio/c;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33755c.  v0:= 0I;
  #L33755e.  v1:= length @variable v4;
  #L337560.  if v0 >= v1 then goto L337586;
  #L337564.  v1:= length @variable v4;
  #L337566.  v1:= v1 - v0 @kind int;
  #L337568.  call temp:= `V`(v3, v4, v0, v1) @signature `Lokio/c;.V:([BII)I` @kind virtual;
  #L33756e.  v1:= temp;
  #L337570.  v2:= -1I;
  #L337572.  if v1 == v2 then goto L33757a;
  #L337576.  v0:= v0 + v1 @kind int;
  #L337578.  goto L33755e;
  #L33757a.  v4:= new `java.io.EOFException`;
  #L33757e.  call `<init>`(v4) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L337584.  throw v4;
  #L337586.  return @kind void;
}
procedure `int` `readInt`(`okio.c` v10 @kind this) @signature `Lokio/c;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L335a9c.  v0:= v10.`okio.c.h` @type ^`long` @kind wide;
  #L335aa0.  v2:= 4L;
  #L335aa4.  v4:= lcmp(v0, v2);
  #L335aa8.  if v4 < 0 then goto L335b70;
  #L335aac.  v4:= v10.`okio.c.g` @type ^`okio.r` @kind object;
  #L335ab0.  v5:= v4.`okio.r.b` @type ^`int`;
  #L335ab4.  v6:= v4.`okio.r.c` @type ^`int`;
  #L335ab8.  v7:= v6 - v5 @kind int;
  #L335abc.  v8:= 4I;
  #L335abe.  if v7 >= v8 then goto L335b06;
  #L335ac2.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L335ac8.  v0:= temp;
  #L335aca.  v0:= v0 ^& 255;
  #L335ace.  v0:= v0 ^< 24;
  #L335ad2.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L335ad8.  v1:= temp;
  #L335ada.  v1:= v1 ^& 255;
  #L335ade.  v1:= v1 ^< 16;
  #L335ae2.  v0:= v0 ^| v1 @kind int;
  #L335ae4.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L335aea.  v1:= temp;
  #L335aec.  v1:= v1 ^& 255;
  #L335af0.  v1:= v1 ^< 8;
  #L335af4.  v0:= v0 ^| v1 @kind int;
  #L335af6.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L335afc.  v1:= temp;
  #L335afe.  v1:= v1 ^& 255;
  #L335b02.  v0:= v0 ^| v1 @kind int;
  #L335b04.  return v0;
  #L335b06.  v7:= v4.`okio.r.a` @type ^`byte`[] @kind object;
  #L335b0a.  v8:= v5 + 1;
  #L335b0e.  v5:= v7[v5] @kind byte;
  #L335b12.  v5:= v5 ^& 255;
  #L335b16.  v5:= v5 ^< 24;
  #L335b1a.  v9:= v8 + 1;
  #L335b1e.  v8:= v7[v8] @kind byte;
  #L335b22.  v8:= v8 ^& 255;
  #L335b26.  v8:= v8 ^< 16;
  #L335b2a.  v5:= v5 ^| v8 @kind int;
  #L335b2c.  v8:= v9 + 1;
  #L335b30.  v9:= v7[v9] @kind byte;
  #L335b34.  v9:= v9 ^& 255;
  #L335b38.  v9:= v9 ^< 8;
  #L335b3c.  v5:= v5 ^| v9 @kind int;
  #L335b3e.  v9:= v8 + 1;
  #L335b42.  v7:= v7[v8] @kind byte;
  #L335b46.  v7:= v7 ^& 255;
  #L335b4a.  v5:= v5 ^| v7 @kind int;
  #L335b4c.  v0:= v0 - v2 @kind long;
  #L335b4e.  v10.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L335b52.  if v9 != v6 then goto L335b6a;
  #L335b56.  call temp:= `b`(v4) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L335b5c.  v0:= temp @kind object;
  #L335b5e.  v10.`okio.c.g` @type ^`okio.r` := v0 @kind object;
  #L335b62.  call `a`(v4) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L335b68.  goto L335b6e;
  #L335b6a.  v4.`okio.r.b` @type ^`int` := v9;
  #L335b6e.  return v5;
  #L335b70.  v0:= new `java.lang.IllegalStateException`;
  #L335b74.  v1:= new `java.lang.StringBuilder`;
  #L335b78.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L335b7e.  v2:= "size < 4: " @kind object;
  #L335b82.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L335b88.  v2:= v10.`okio.c.h` @type ^`long` @kind wide;
  #L335b8c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L335b92.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L335b98.  v1:= temp @kind object;
  #L335b9a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335ba0.  throw v0;
}
procedure `short` `readShort`(`okio.c` v10 @kind this) @signature `Lokio/c;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3373ac.  v0:= v10.`okio.c.h` @type ^`long` @kind wide;
  #L3373b0.  v2:= 2L;
  #L3373b4.  v4:= lcmp(v0, v2);
  #L3373b8.  if v4 < 0 then goto L33743c;
  #L3373bc.  v4:= v10.`okio.c.g` @type ^`okio.r` @kind object;
  #L3373c0.  v5:= v4.`okio.r.b` @type ^`int`;
  #L3373c4.  v6:= v4.`okio.r.c` @type ^`int`;
  #L3373c8.  v7:= v6 - v5 @kind int;
  #L3373cc.  v8:= 2I;
  #L3373ce.  if v7 >= v8 then goto L3373f4;
  #L3373d2.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3373d8.  v0:= temp;
  #L3373da.  v0:= v0 ^& 255;
  #L3373de.  v0:= v0 ^< 8;
  #L3373e2.  call temp:= `readByte`(v10) @signature `Lokio/c;.readByte:()B` @kind virtual;
  #L3373e8.  v1:= temp;
  #L3373ea.  v1:= v1 ^& 255;
  #L3373ee.  v0:= v0 ^| v1 @kind int;
  #L3373f0.  v0:= (`short`) v0 @kind i2s;
  #L3373f2.  return v0;
  #L3373f4.  v7:= v4.`okio.r.a` @type ^`byte`[] @kind object;
  #L3373f8.  v8:= v5 + 1;
  #L3373fc.  v5:= v7[v5] @kind byte;
  #L337400.  v5:= v5 ^& 255;
  #L337404.  v5:= v5 ^< 8;
  #L337408.  v9:= v8 + 1;
  #L33740c.  v7:= v7[v8] @kind byte;
  #L337410.  v7:= v7 ^& 255;
  #L337414.  v5:= v5 ^| v7 @kind int;
  #L337416.  v0:= v0 - v2 @kind long;
  #L337418.  v10.`okio.c.h` @type ^`long` := v0 @kind wide;
  #L33741c.  if v9 != v6 then goto L337434;
  #L337420.  call temp:= `b`(v4) @signature `Lokio/r;.b:()Lokio/r;` @kind virtual;
  #L337426.  v0:= temp @kind object;
  #L337428.  v10.`okio.c.g` @type ^`okio.r` := v0 @kind object;
  #L33742c.  call `a`(v4) @signature `Lokio/s;.a:(Lokio/r;)V` @kind static;
  #L337432.  goto L337438;
  #L337434.  v4.`okio.r.b` @type ^`int` := v9;
  #L337438.  v0:= (`short`) v5 @kind i2s;
  #L33743a.  return v0;
  #L33743c.  v0:= new `java.lang.IllegalStateException`;
  #L337440.  v1:= new `java.lang.StringBuilder`;
  #L337444.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33744a.  v2:= "size < 2: " @kind object;
  #L33744e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L337454.  v2:= v10.`okio.c.h` @type ^`long` @kind wide;
  #L337458.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L33745e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L337464.  v1:= temp @kind object;
  #L337466.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33746c.  throw v0;
}
procedure `okio.c` `s`(`okio.c` v8 @kind this, `okio.c` v9 @kind object, `long` v10 , `long` v12 ) @signature `Lokio/c;.s:(Lokio/c;JJ)Lokio/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L336668.  if v9 == 0 then goto L336722;
  #L33666c.  v0:= v8.`okio.c.h` @type ^`long` @kind wide;
  #L336670.  v2:= v10 @kind wide;
  #L336672.  v4:= v12 @kind wide;
  #L336674.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L33667a.  v0:= 0L;
  #L33667e.  v2:= lcmp(v12, v0);
  #L336682.  if v2 != 0 then goto L336688;
  #L336686.  return v8 @kind object;
  #L336688.  v2:= v9.`okio.c.h` @type ^`long` @kind wide;
  #L33668c.  v2:= v2 + v12 @kind long;
  #L33668e.  v9.`okio.c.h` @type ^`long` := v2 @kind wide;
  #L336692.  v2:= v8.`okio.c.g` @type ^`okio.r` @kind object;
  #L336696.  v3:= v2.`okio.r.c` @type ^`int`;
  #L33669a.  v4:= v2.`okio.r.b` @type ^`int`;
  #L33669e.  v5:= v3 - v4 @kind int;
  #L3366a2.  v5:= (`long`) v5 @kind i2l;
  #L3366a4.  v7:= lcmp(v10, v5);
  #L3366a8.  if v7 < 0 then goto L3366b8;
  #L3366ac.  v3:= v3 - v4 @kind int;
  #L3366ae.  v3:= (`long`) v3 @kind i2l;
  #L3366b0.  v10:= v10 - v3 @kind long;
  #L3366b2.  v2:= v2.`okio.r.f` @type ^`okio.r` @kind object;
  #L3366b6.  goto L336696;
  #L3366b8.  v3:= lcmp(v12, v0);
  #L3366bc.  if v3 <= 0 then goto L336720;
  #L3366c0.  call temp:= `d`(v2) @signature `Lokio/r;.d:()Lokio/r;` @kind virtual;
  #L3366c6.  v3:= temp @kind object;
  #L3366c8.  v4:= v3.`okio.r.b` @type ^`int`;
  #L3366cc.  v4:= (`long`) v4 @kind i2l;
  #L3366ce.  v4:= v4 + v10 @kind long;
  #L3366d0.  v10:= (`int`) v4 @kind l2i;
  #L3366d2.  v3.`okio.r.b` @type ^`int` := v10;
  #L3366d6.  v11:= (`int`) v12 @kind l2i;
  #L3366d8.  v10:= v10 + v11 @kind int;
  #L3366da.  v11:= v3.`okio.r.c` @type ^`int`;
  #L3366de.  call temp:= `min`(v10, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3366e4.  v10:= temp;
  #L3366e6.  v3.`okio.r.c` @type ^`int` := v10;
  #L3366ea.  v10:= v9.`okio.c.g` @type ^`okio.r` @kind object;
  #L3366ee.  if v10 != 0 then goto L336700;
  #L3366f2.  v3.`okio.r.g` @type ^`okio.r` := v3 @kind object;
  #L3366f6.  v3.`okio.r.f` @type ^`okio.r` := v3 @kind object;
  #L3366fa.  v9.`okio.c.g` @type ^`okio.r` := v3 @kind object;
  #L3366fe.  goto L33670a;
  #L336700.  v10:= v10.`okio.r.g` @type ^`okio.r` @kind object;
  #L336704.  call temp:= `c`(v10, v3) @signature `Lokio/r;.c:(Lokio/r;)Lokio/r;` @kind virtual;
  #L33670a.  v10:= v3.`okio.r.c` @type ^`int`;
  #L33670e.  v11:= v3.`okio.r.b` @type ^`int`;
  #L336712.  v10:= v10 - v11 @kind int;
  #L336714.  v10:= (`long`) v10 @kind i2l;
  #L336716.  v12:= v12 - v10 @kind long;
  #L336718.  v2:= v2.`okio.r.f` @type ^`okio.r` @kind object;
  #L33671c.  v10:= v0 @kind wide;
  #L33671e.  goto L3366b8;
  #L336720.  return v8 @kind object;
  #L336722.  v9:= new `java.lang.IllegalArgumentException`;
  #L336726.  v10:= "out == null" @kind object;
  #L33672a.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L336730.  throw v9;
}
procedure `byte`[] `s0`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.s0:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3358f0.  v0:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L3358f4.  v2:= 0L;
  #L3358f8.  v4:= v7 @kind wide;
  #L3358fa.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L335900.  v0:= 2147483647L;
  #L335906.  v2:= lcmp(v7, v0);
  #L33590a.  if v2 > 0 then goto L33591c;
  #L33590e.  v8:= (`int`) v7 @kind l2i;
  #L335910.  v7:= new `byte`[v8];
  #L335914.  call `readFully`(v6, v7) @signature `Lokio/c;.readFully:([B)V` @kind virtual;
  #L33591a.  return v7 @kind object;
  #L33591c.  v0:= new `java.lang.IllegalArgumentException`;
  #L335920.  v1:= new `java.lang.StringBuilder`;
  #L335924.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33592a.  v2:= "byteCount > Integer.MAX_VALUE: " @kind object;
  #L33592e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L335934.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L33593a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L335940.  v7:= temp @kind object;
  #L335942.  call `<init>`(v0, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335948.  throw v0;
}
procedure `okio.w` `timeout`(`okio.c` v1 @kind this) @signature `Lokio/c;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337394.  v0:= `@@okio.w.d` @type ^`okio.w` @kind object;
  #L337398.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.c` v1 @kind this) @signature `Lokio/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L336188.  call temp:= `x0`(v1) @signature `Lokio/c;.x0:()Lokio/f;` @kind virtual;
  #L33618e.  v0:= temp @kind object;
  #L336190.  call temp:= `toString`(v0) @signature `Lokio/f;.toString:()Ljava/lang/String;` @kind virtual;
  #L336196.  v0:= temp @kind object;
  #L336198.  return v0 @kind object;
}
procedure `okio.d` `u`(`okio.c` v0 @kind this, `int` v1 ) @signature `Lokio/c;.u:(I)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33721c.  call temp:= `Z0`(v0, v1) @signature `Lokio/c;.Z0:(I)Lokio/c;` @kind virtual;
  #L337222.  v1:= temp @kind object;
  #L337224.  return v1 @kind object;
}
procedure `long` `u0`(`okio.c` v2 @kind this) @signature `Lokio/c;.u0:()J` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L33657c.  v0:= v2.`okio.c.h` @type ^`long` @kind wide;
  #L336580.  return v0 @kind wide;
}
procedure `okio.c` `v`(`okio.c` v0 @kind this) @signature `Lokio/c;.v:()Lokio/c;` @AccessFlag PUBLIC {
    temp;

  #L336744.  return v0 @kind object;
}
procedure `okio.d` `v0`(`okio.c` v0 @kind this, `byte`[] v1 @kind object) @signature `Lokio/c;.v0:([B)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L33713c.  call temp:= `R0`(v0, v1) @signature `Lokio/c;.R0:([B)Lokio/c;` @kind virtual;
  #L337142.  v1:= temp @kind object;
  #L337144.  return v1 @kind object;
}
procedure `byte` `w`(`okio.c` v6 @kind this, `long` v7 ) @signature `Lokio/c;.w:(J)B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3357b4.  v0:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L3357b8.  v4:= 1L;
  #L3357bc.  v2:= v7 @kind wide;
  #L3357be.  call `b`(v0, v2, v4) @signature `Lokio/x;.b:(JJJ)V` @kind static;
  #L3357c4.  v0:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L3357c8.  v2:= v0 - v7 @kind long;
  #L3357cc.  v4:= lcmp(v2, v7);
  #L3357d0.  if v4 <= 0 then goto L335802;
  #L3357d4.  v0:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L3357d8.  v1:= v0.`okio.r.c` @type ^`int`;
  #L3357dc.  v2:= v0.`okio.r.b` @type ^`int`;
  #L3357e0.  v1:= v1 - v2 @kind int;
  #L3357e2.  v3:= (`long`) v1 @kind i2l;
  #L3357e4.  v1:= lcmp(v7, v3);
  #L3357e8.  if v1 >= 0 then goto L3357fa;
  #L3357ec.  v0:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L3357f0.  v8:= (`int`) v7 @kind l2i;
  #L3357f2.  v2:= v2 + v8 @kind int;
  #L3357f4.  v7:= v0[v2] @kind byte;
  #L3357f8.  return v7;
  #L3357fa.  v7:= v7 - v3 @kind long;
  #L3357fc.  v0:= v0.`okio.r.f` @type ^`okio.r` @kind object;
  #L335800.  goto L3357d8;
  #L335802.  v7:= v7 - v0 @kind long;
  #L335804.  v0:= v6.`okio.c.g` @type ^`okio.r` @kind object;
  #L335808.  v0:= v0.`okio.r.g` @type ^`okio.r` @kind object;
  #L33580c.  v1:= v0.`okio.r.c` @type ^`int`;
  #L335810.  v2:= v0.`okio.r.b` @type ^`int`;
  #L335814.  v1:= v1 - v2 @kind int;
  #L335816.  v3:= (`long`) v1 @kind i2l;
  #L335818.  v7:= v7 + v3 @kind long;
  #L33581a.  v3:= 0L;
  #L33581e.  v1:= lcmp(v7, v3);
  #L335822.  if v1 < 0 then goto L335808;
  #L335826.  v0:= v0.`okio.r.a` @type ^`byte`[] @kind object;
  #L33582a.  v8:= (`int`) v7 @kind l2i;
  #L33582c.  v2:= v2 + v8 @kind int;
  #L33582e.  v7:= v0[v2] @kind byte;
  #L335832.  return v7;
}
procedure `okio.d` `w0`(`okio.c` v0 @kind this, `okio.f` v1 @kind object) @signature `Lokio/c;.w0:(Lokio/f;)Lokio/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L337174.  call temp:= `Q0`(v0, v1) @signature `Lokio/c;.Q0:(Lokio/f;)Lokio/c;` @kind virtual;
  #L33717a.  v1:= temp @kind object;
  #L33717c.  return v1 @kind object;
}
procedure `int` `write`(`okio.c` v6 @kind this, `java.nio.ByteBuffer` v7 @kind object) @signature `Lokio/c;.write:(Ljava/nio/ByteBuffer;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L335d84.  if v7 == 0 then goto L335dda;
  #L335d88.  call temp:= `remaining`(v7) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L335d8e.  v0:= temp;
  #L335d90.  v1:= v0;
  #L335d92.  if v1 <= 0 then goto L335dcc;
  #L335d96.  v2:= 1I;
  #L335d98.  call temp:= `E0`(v6, v2) @signature `Lokio/c;.E0:(I)Lokio/r;` @kind virtual;
  #L335d9e.  v2:= temp @kind object;
  #L335da0.  v3:= v2.`okio.r.c` @type ^`int`;
  #L335da4.  v3:= v3 - 8192;
  #L335da8.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L335dae.  v3:= temp;
  #L335db0.  v4:= v2.`okio.r.a` @type ^`byte`[] @kind object;
  #L335db4.  v5:= v2.`okio.r.c` @type ^`int`;
  #L335db8.  call temp:= `get`(v7, v4, v5, v3) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L335dbe.  v1:= v1 - v3 @kind int;
  #L335dc0.  v4:= v2.`okio.r.c` @type ^`int`;
  #L335dc4.  v4:= v4 + v3 @kind int;
  #L335dc6.  v2.`okio.r.c` @type ^`int` := v4;
  #L335dca.  goto L335d92;
  #L335dcc.  v1:= v6.`okio.c.h` @type ^`long` @kind wide;
  #L335dd0.  v3:= (`long`) v0 @kind i2l;
  #L335dd2.  v1:= v1 + v3 @kind long;
  #L335dd4.  v6.`okio.c.h` @type ^`long` := v1 @kind wide;
  #L335dd8.  return v0;
  #L335dda.  v7:= new `java.lang.IllegalArgumentException`;
  #L335dde.  v0:= "source == null" @kind object;
  #L335de2.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L335de8.  throw v7;
}
procedure `okio.f` `x0`(`okio.c` v5 @kind this) @signature `Lokio/c;.x0:()Lokio/f;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33729c.  v0:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L3372a0.  v2:= 2147483647L;
  #L3372a6.  v4:= lcmp(v0, v2);
  #L3372aa.  if v4 > 0 then goto L3372ba;
  #L3372ae.  v1:= (`int`) v0 @kind l2i;
  #L3372b0.  call temp:= `B0`(v5, v1) @signature `Lokio/c;.B0:(I)Lokio/f;` @kind virtual;
  #L3372b6.  v0:= temp @kind object;
  #L3372b8.  return v0 @kind object;
  #L3372ba.  v0:= new `java.lang.IllegalArgumentException`;
  #L3372be.  v1:= new `java.lang.StringBuilder`;
  #L3372c2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3372c8.  v2:= "size > Integer.MAX_VALUE: " @kind object;
  #L3372cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3372d2.  v2:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L3372d6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3372dc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3372e2.  v1:= temp @kind object;
  #L3372e4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3372ea.  throw v0;
}
procedure `short` `y0`(`okio.c` v1 @kind this) @signature `Lokio/c;.y0:()S` @AccessFlag PUBLIC {
    temp;
    v0;

  #L337480.  call temp:= `readShort`(v1) @signature `Lokio/c;.readShort:()S` @kind virtual;
  #L337486.  v0:= temp;
  #L337488.  call temp:= `d`(v0) @signature `Lokio/x;.d:(S)S` @kind static;
  #L33748e.  v0:= temp;
  #L337490.  return v0;
}
procedure `long` `z0`(`okio.c` v5 @kind this, `okio.c` v6 @kind object, `long` v7 ) @signature `Lokio/c;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L336380.  if v6 == 0 then goto L3363e2;
  #L336384.  v0:= 0L;
  #L336388.  v2:= lcmp(v7, v0);
  #L33638c.  if v2 < 0 then goto L3363b4;
  #L336390.  v2:= v5.`okio.c.h` @type ^`long` @kind wide;
  #L336394.  v4:= lcmp(v2, v0);
  #L336398.  if v4 != 0 then goto L3363a2;
  #L33639c.  v6:= -1L;
  #L3363a0.  return v6 @kind wide;
  #L3363a2.  v0:= lcmp(v7, v2);
  #L3363a6.  if v0 <= 0 then goto L3363ac;
  #L3363aa.  v7:= v2 @kind wide;
  #L3363ac.  call `e0`(v6, v5, v7) @signature `Lokio/c;.e0:(Lokio/c;J)V` @kind virtual;
  #L3363b2.  return v7 @kind wide;
  #L3363b4.  v6:= new `java.lang.IllegalArgumentException`;
  #L3363b8.  v0:= new `java.lang.StringBuilder`;
  #L3363bc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3363c2.  v1:= "byteCount < 0: " @kind object;
  #L3363c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3363cc.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3363d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3363d8.  v7:= temp @kind object;
  #L3363da.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3363e0.  throw v6;
  #L3363e2.  v6:= new `java.lang.IllegalArgumentException`;
  #L3363e6.  v7:= "sink == null" @kind object;
  #L3363ea.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3363f0.  throw v6;
}
