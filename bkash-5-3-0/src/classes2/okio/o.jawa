record `okio.o` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.AbstractList` @kind class, `java.util.RandomAccess` @kind interface {
  `okio.f`[] `okio.o.g` @AccessFlag FINAL;
  `int`[] `okio.o.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okio.o` v0 @kind this, `okio.f`[] v1 @kind object, `int`[] v2 @kind object) @signature `Lokio/o;.<init>:([Lokio/f;[I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L339f34.  call `<init>`(v0) @signature `Ljava/util/AbstractList;.<init>:()V` @kind direct;
  #L339f3a.  v0.`okio.o.g` @type ^`okio.f`[] := v1 @kind object;
  #L339f3e.  v0.`okio.o.h` @type ^`int`[] := v2 @kind object;
  #L339f42.  return @kind void;
}
procedure `void` `g`(`long` v17 , `okio.c` v19 @kind object, `int` v20 , `java.util.List` v21 @kind object, `int` v22 , `int` v23 , `java.util.List` v24 @kind object) @signature `Lokio/o;.g:(JLokio/c;ILjava/util/List;IILjava/util/List;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L339f54.  v0:= v19 @kind object;
  #L339f58.  v1:= v20;
  #L339f5c.  v10:= v21 @kind object;
  #L339f60.  v2:= v22;
  #L339f64.  v11:= v23;
  #L339f68.  v12:= v24 @kind object;
  #L339f6c.  if v2 >= v11 then goto L33a2cc;
  #L339f70.  v3:= v2;
  #L339f72.  if v3 >= v11 then goto L339fa0;
  #L339f76.  call temp:= `get`(v10, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339f7c.  v4:= temp @kind object;
  #L339f7e.  v4:= (`okio.f`) v4 @kind object;
  #L339f82.  call temp:= `size`(v4) @signature `Lokio/f;.size:()I` @kind virtual;
  #L339f88.  v4:= temp;
  #L339f8a.  if v4 < v1 then goto L339f94;
  #L339f8e.  v3:= v3 + 1;
  #L339f92.  goto L339f72;
  #L339f94.  v0:= new `java.lang.AssertionError`;
  #L339f98.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L339f9e.  throw v0;
  #L339fa0.  call temp:= `get`(v21, v22) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339fa6.  v3:= temp @kind object;
  #L339fa8.  v3:= (`okio.f`) v3 @kind object;
  #L339fac.  v4:= v11 + -1;
  #L339fb0.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339fb6.  v4:= temp @kind object;
  #L339fb8.  v4:= (`okio.f`) v4 @kind object;
  #L339fbc.  v5:= -1I;
  #L339fbe.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L339fc4.  v6:= temp;
  #L339fc6.  if v1 != v6 then goto L339fee;
  #L339fca.  call temp:= `get`(v12, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339fd0.  v3:= temp @kind object;
  #L339fd2.  v3:= (`java.lang.Integer`) v3 @kind object;
  #L339fd6.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L339fdc.  v5:= temp;
  #L339fde.  v2:= v2 + 1;
  #L339fe2.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339fe8.  v3:= temp @kind object;
  #L339fea.  v3:= (`okio.f`) v3 @kind object;
  #L339fee.  v6:= v2;
  #L339ff0.  call temp:= `getByte`(v3, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L339ff6.  v2:= temp;
  #L339ff8.  call temp:= `getByte`(v4, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L339ffe.  v7:= temp;
  #L33a000.  v8:= 2L;
  #L33a004.  if v2 == v7 then goto L33a1ae;
  #L33a008.  v2:= v6 + 1;
  #L33a00c.  v3:= 1I;
  #L33a00e.  if v2 >= v11 then goto L33a04c;
  #L33a012.  v4:= v2 + -1;
  #L33a016.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a01c.  v4:= temp @kind object;
  #L33a01e.  v4:= (`okio.f`) v4 @kind object;
  #L33a022.  call temp:= `getByte`(v4, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a028.  v4:= temp;
  #L33a02a.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a030.  v7:= temp @kind object;
  #L33a032.  v7:= (`okio.f`) v7 @kind object;
  #L33a036.  call temp:= `getByte`(v7, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a03c.  v7:= temp;
  #L33a03e.  if v4 == v7 then goto L33a046;
  #L33a042.  v3:= v3 + 1;
  #L33a046.  v2:= v2 + 1;
  #L33a04a.  goto L33a00e;
  #L33a04c.  call temp:= `i`(v19) @signature `Lokio/o;.i:(Lokio/c;)I` @kind static;
  #L33a052.  v2:= temp;
  #L33a054.  v13:= (`long`) v2 @kind i2l;
  #L33a056.  v13:= v17 + v13 @kind long;
  #L33a05a.  v13:= v13 + v8 @kind long;
  #L33a05c.  v2:= v3 * 2;
  #L33a060.  v7:= (`long`) v2 @kind i2l;
  #L33a062.  v13:= v13 + v7 @kind long;
  #L33a064.  call temp:= `X0`(v0, v3) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a06a.  call temp:= `X0`(v0, v5) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a070.  v2:= v6;
  #L33a072.  if v2 >= v11 then goto L33a0ba;
  #L33a076.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a07c.  v3:= temp @kind object;
  #L33a07e.  v3:= (`okio.f`) v3 @kind object;
  #L33a082.  call temp:= `getByte`(v3, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a088.  v3:= temp;
  #L33a08a.  if v2 == v6 then goto L33a0aa;
  #L33a08e.  v4:= v2 + -1;
  #L33a092.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a098.  v4:= temp @kind object;
  #L33a09a.  v4:= (`okio.f`) v4 @kind object;
  #L33a09e.  call temp:= `getByte`(v4, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a0a4.  v4:= temp;
  #L33a0a6.  if v3 == v4 then goto L33a0b4;
  #L33a0aa.  v3:= v3 ^& 255;
  #L33a0ae.  call temp:= `X0`(v0, v3) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a0b4.  v2:= v2 + 1;
  #L33a0b8.  goto L33a072;
  #L33a0ba.  v9:= new `okio.c`;
  #L33a0be.  call `<init>`(v9) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L33a0c4.  v7:= v6;
  #L33a0c6.  if v7 >= v11 then goto L33a194;
  #L33a0ca.  call temp:= `get`(v10, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a0d0.  v2:= temp @kind object;
  #L33a0d2.  v2:= (`okio.f`) v2 @kind object;
  #L33a0d6.  call temp:= `getByte`(v2, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a0dc.  v2:= temp;
  #L33a0de.  v3:= v7 + 1;
  #L33a0e2.  v4:= v3;
  #L33a0e4.  if v4 >= v11 then goto L33a10a;
  #L33a0e8.  call temp:= `get`(v10, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a0ee.  v5:= temp @kind object;
  #L33a0f0.  v5:= (`okio.f`) v5 @kind object;
  #L33a0f4.  call temp:= `getByte`(v5, v1) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a0fa.  v5:= temp;
  #L33a0fc.  if v2 == v5 then goto L33a104;
  #L33a100.  v8:= v4;
  #L33a102.  goto L33a10c;
  #L33a104.  v4:= v4 + 1;
  #L33a108.  goto L33a0e4;
  #L33a10a.  v8:= v11;
  #L33a10c.  if v3 != v8 then goto L33a150;
  #L33a110.  v2:= v1 + 1;
  #L33a114.  call temp:= `get`(v10, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a11a.  v3:= temp @kind object;
  #L33a11c.  v3:= (`okio.f`) v3 @kind object;
  #L33a120.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L33a126.  v3:= temp;
  #L33a128.  if v2 != v3 then goto L33a150;
  #L33a12c.  call temp:= `get`(v12, v7) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a132.  v2:= temp @kind object;
  #L33a134.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L33a138.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L33a13e.  v2:= temp;
  #L33a140.  call temp:= `X0`(v0, v2) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a146.  v16:= v8;
  #L33a14a.  v17:= v9 @kind object;
  #L33a14e.  goto L33a18a;
  #L33a150.  call temp:= `i`(v9) @signature `Lokio/o;.i:(Lokio/c;)I` @kind static;
  #L33a156.  v2:= temp;
  #L33a158.  v2:= (`long`) v2 @kind i2l;
  #L33a15a.  v2:= v2 + v13 @kind long;
  #L33a15c.  v4:= -1L;
  #L33a160.  v2:= v2 * v4 @kind long;
  #L33a164.  v3:= (`int`) v2 @kind l2i;
  #L33a166.  call temp:= `X0`(v0, v3) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a16c.  v5:= v1 + 1;
  #L33a170.  v2:= v13 @kind wide;
  #L33a172.  v4:= v9 @kind object;
  #L33a174.  v6:= v21 @kind object;
  #L33a178.  v16:= v8;
  #L33a17c.  v17:= v9 @kind object;
  #L33a180.  v9:= v24 @kind object;
  #L33a184.  call `g`(v2, v4, v5, v6, v7, v8, v9) @signature `Lokio/o;.g:(JLokio/c;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L33a18a.  v9:= v17 @kind object;
  #L33a18e.  v7:= v16;
  #L33a192.  goto L33a0c6;
  #L33a194.  v17:= v9 @kind object;
  #L33a198.  call temp:= `u0`(v17) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L33a19e.  v1:= temp @kind wide;
  #L33a1a0.  v3:= v17 @kind object;
  #L33a1a4.  call `e0`(v0, v3, v1) @signature `Lokio/c;.e0:(Lokio/c;J)V` @kind virtual;
  #L33a1aa.  goto L33a2ca;
  #L33a1ae.  v2:= 0I;
  #L33a1b0.  call temp:= `size`(v3) @signature `Lokio/f;.size:()I` @kind virtual;
  #L33a1b6.  v7:= temp;
  #L33a1b8.  call temp:= `size`(v4) @signature `Lokio/f;.size:()I` @kind virtual;
  #L33a1be.  v13:= temp;
  #L33a1c0.  call temp:= `min`(v7, v13) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L33a1c6.  v7:= temp;
  #L33a1c8.  v13:= v1;
  #L33a1ca.  if v13 >= v7 then goto L33a1ec;
  #L33a1ce.  call temp:= `getByte`(v3, v13) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a1d4.  v14:= temp;
  #L33a1d6.  call temp:= `getByte`(v4, v13) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a1dc.  v15:= temp;
  #L33a1de.  if v14 != v15 then goto L33a1ec;
  #L33a1e2.  v2:= v2 + 1;
  #L33a1e6.  v13:= v13 + 1;
  #L33a1ea.  goto L33a1ca;
  #L33a1ec.  call temp:= `i`(v19) @signature `Lokio/o;.i:(Lokio/c;)I` @kind static;
  #L33a1f2.  v4:= temp;
  #L33a1f4.  v13:= (`long`) v4 @kind i2l;
  #L33a1f6.  v13:= v17 + v13 @kind long;
  #L33a1fa.  v13:= v13 + v8 @kind long;
  #L33a1fc.  v7:= (`long`) v2 @kind i2l;
  #L33a1fe.  v13:= v13 + v7 @kind long;
  #L33a200.  v7:= 1L;
  #L33a204.  v7:= v7 + v13 @kind long;
  #L33a206.  v4:= -v2 @kind int;
  #L33a208.  call temp:= `X0`(v0, v4) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a20e.  call temp:= `X0`(v0, v5) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a214.  v4:= v1;
  #L33a216.  v5:= v1 + v2 @kind int;
  #L33a21a.  if v4 >= v5 then goto L33a236;
  #L33a21e.  call temp:= `getByte`(v3, v4) @signature `Lokio/f;.getByte:(I)B` @kind virtual;
  #L33a224.  v5:= temp;
  #L33a226.  v5:= v5 ^& 255;
  #L33a22a.  call temp:= `X0`(v0, v5) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a230.  v4:= v4 + 1;
  #L33a234.  goto L33a216;
  #L33a236.  v1:= v6 + 1;
  #L33a23a.  if v1 != v11 then goto L33a27e;
  #L33a23e.  call temp:= `get`(v10, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a244.  v1:= temp @kind object;
  #L33a246.  v1:= (`okio.f`) v1 @kind object;
  #L33a24a.  call temp:= `size`(v1) @signature `Lokio/f;.size:()I` @kind virtual;
  #L33a250.  v1:= temp;
  #L33a252.  if v5 != v1 then goto L33a272;
  #L33a256.  call temp:= `get`(v12, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33a25c.  v1:= temp @kind object;
  #L33a25e.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L33a262.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L33a268.  v1:= temp;
  #L33a26a.  call temp:= `X0`(v0, v1) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a270.  goto L33a2ca;
  #L33a272.  v0:= new `java.lang.AssertionError`;
  #L33a276.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L33a27c.  throw v0;
  #L33a27e.  v9:= new `okio.c`;
  #L33a282.  call `<init>`(v9) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L33a288.  call temp:= `i`(v9) @signature `Lokio/o;.i:(Lokio/c;)I` @kind static;
  #L33a28e.  v1:= temp;
  #L33a290.  v1:= (`long`) v1 @kind i2l;
  #L33a292.  v1:= v1 + v7 @kind long;
  #L33a294.  v3:= -1L;
  #L33a298.  v1:= v1 * v3 @kind long;
  #L33a29c.  v2:= (`int`) v1 @kind l2i;
  #L33a29e.  call temp:= `X0`(v0, v2) @signature `Lokio/c;.X0:(I)Lokio/c;` @kind virtual;
  #L33a2a4.  v1:= v7 @kind wide;
  #L33a2a6.  v3:= v9 @kind object;
  #L33a2a8.  v4:= v5;
  #L33a2aa.  v5:= v21 @kind object;
  #L33a2ae.  v7:= v23;
  #L33a2b2.  v8:= v24 @kind object;
  #L33a2b6.  call `g`(v1, v3, v4, v5, v6, v7, v8) @signature `Lokio/o;.g:(JLokio/c;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L33a2bc.  call temp:= `u0`(v9) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L33a2c2.  v1:= temp @kind wide;
  #L33a2c4.  call `e0`(v0, v9, v1) @signature `Lokio/c;.e0:(Lokio/c;J)V` @kind virtual;
  #L33a2ca.  return @kind void;
  #L33a2cc.  v0:= new `java.lang.AssertionError`;
  #L33a2d0.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L33a2d6.  throw v0;
}
procedure `int` `i`(`okio.c` v4 @kind object) @signature `Lokio/o;.i:(Lokio/c;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L339ca0.  call temp:= `u0`(v4) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L339ca6.  v0:= temp @kind wide;
  #L339ca8.  v2:= 4L;
  #L339cac.  v0:= v0 / v2 @kind long;
  #L339cae.  v4:= (`int`) v0 @kind l2i;
  #L339cb0.  return v4;
}
procedure `okio.o` `j`(`okio.f`[] v10 @kind object) @signature `Lokio/o;.j:([Lokio/f;)Lokio/o;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L339d14.  v0:= length @variable v10;
  #L339d16.  v1:= 0I;
  #L339d18.  if v0 != 0 then goto L339d38;
  #L339d1c.  v10:= new `okio.o`;
  #L339d20.  v0:= new `okio.f`[v1];
  #L339d24.  v1:= 2I;
  #L339d26.  v1:= new `int`[v1];
  #L339d2a.  goto L339f14;
  #L339d30.  call `<init>`(v10, v0, v1) @signature `Lokio/o;.<init>:([Lokio/f;[I)V` @kind direct;
  #L339d36.  return v10 @kind object;
  #L339d38.  v6:= new `java.util.ArrayList`;
  #L339d3c.  call temp:= `asList`(v10) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L339d42.  v0:= temp @kind object;
  #L339d44.  call `<init>`(v6, v0) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L339d4a.  call `sort`(v6) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L339d50.  v9:= new `java.util.ArrayList`;
  #L339d54.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L339d5a.  v0:= 0I;
  #L339d5c.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339d62.  v2:= temp;
  #L339d64.  if v0 >= v2 then goto L339d7e;
  #L339d68.  v2:= -1I;
  #L339d6a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L339d70.  v2:= temp @kind object;
  #L339d72.  call temp:= `add`(v9, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L339d78.  v0:= v0 + 1;
  #L339d7c.  goto L339d5c;
  #L339d7e.  v0:= 0I;
  #L339d80.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339d86.  v2:= temp;
  #L339d88.  if v0 >= v2 then goto L339dac;
  #L339d8c.  v2:= v10[v0] @kind object;
  #L339d90.  call temp:= `binarySearch`(v6, v2) @signature `Ljava/util/Collections;.binarySearch:(Ljava/util/List;Ljava/lang/Object;)I` @kind static;
  #L339d96.  v2:= temp;
  #L339d98.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L339d9e.  v3:= temp @kind object;
  #L339da0.  call temp:= `set`(v9, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L339da6.  v0:= v0 + 1;
  #L339daa.  goto L339d80;
  #L339dac.  call temp:= `get`(v6, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339db2.  v0:= temp @kind object;
  #L339db4.  v0:= (`okio.f`) v0 @kind object;
  #L339db8.  call temp:= `size`(v0) @signature `Lokio/f;.size:()I` @kind virtual;
  #L339dbe.  v0:= temp;
  #L339dc0.  if v0 == 0 then goto L339f04;
  #L339dc4.  v0:= 0I;
  #L339dc6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339dcc.  v2:= temp;
  #L339dce.  if v0 >= v2 then goto L339e90;
  #L339dd2.  call temp:= `get`(v6, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339dd8.  v2:= temp @kind object;
  #L339dda.  v2:= (`okio.f`) v2 @kind object;
  #L339dde.  v3:= v0 + 1;
  #L339de2.  v4:= v3;
  #L339de4.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339dea.  v5:= temp;
  #L339dec.  if v4 >= v5 then goto L339e8c;
  #L339df0.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339df6.  v5:= temp @kind object;
  #L339df8.  v5:= (`okio.f`) v5 @kind object;
  #L339dfc.  call temp:= `startsWith`(v5, v2) @signature `Lokio/f;.startsWith:(Lokio/f;)Z` @kind virtual;
  #L339e02.  v7:= temp;
  #L339e04.  if v7 != 0 then goto L339e0a;
  #L339e08.  goto L339e8c;
  #L339e0a.  call temp:= `size`(v5) @signature `Lokio/f;.size:()I` @kind virtual;
  #L339e10.  v7:= temp;
  #L339e12.  call temp:= `size`(v2) @signature `Lokio/f;.size:()I` @kind virtual;
  #L339e18.  v8:= temp;
  #L339e1a.  if v7 == v8 then goto L339e5e;
  #L339e1e.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339e24.  v5:= temp @kind object;
  #L339e26.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L339e2a.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L339e30.  v5:= temp;
  #L339e32.  call temp:= `get`(v9, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L339e38.  v7:= temp @kind object;
  #L339e3a.  v7:= (`java.lang.Integer`) v7 @kind object;
  #L339e3e.  call temp:= `intValue`(v7) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L339e44.  v7:= temp;
  #L339e46.  if v5 <= v7 then goto L339e58;
  #L339e4a.  call temp:= `remove`(v6, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L339e50.  call temp:= `remove`(v9, v4) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L339e56.  goto L339de4;
  #L339e58.  v4:= v4 + 1;
  #L339e5c.  goto L339de4;
  #L339e5e.  v10:= new `java.lang.IllegalArgumentException`;
  #L339e62.  v0:= new `java.lang.StringBuilder`;
  #L339e66.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L339e6c.  v1:= "duplicate option: " @kind object;
  #L339e70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339e76.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L339e7c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L339e82.  v0:= temp @kind object;
  #L339e84.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339e8a.  throw v10;
  #L339e8c.  v0:= v3;
  #L339e8e.  goto L339dc6;
  #L339e90.  v0:= new `okio.c`;
  #L339e94.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L339e9a.  v2:= 0L;
  #L339e9e.  v5:= 0I;
  #L339ea0.  v7:= 0I;
  #L339ea2.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L339ea8.  v8:= temp;
  #L339eaa.  v4:= v0 @kind object;
  #L339eac.  call `g`(v2, v4, v5, v6, v7, v8, v9) @signature `Lokio/o;.g:(JLokio/c;ILjava/util/List;IILjava/util/List;)V` @kind static;
  #L339eb2.  call temp:= `i`(v0) @signature `Lokio/o;.i:(Lokio/c;)I` @kind static;
  #L339eb8.  v2:= temp;
  #L339eba.  v3:= new `int`[v2];
  #L339ebe.  if v1 >= v2 then goto L339ed4;
  #L339ec2.  call temp:= `readInt`(v0) @signature `Lokio/c;.readInt:()I` @kind virtual;
  #L339ec8.  v4:= temp;
  #L339eca.  v3[v1]:= v4;
  #L339ece.  v1:= v1 + 1;
  #L339ed2.  goto L339ebe;
  #L339ed4.  call temp:= `H`(v0) @signature `Lokio/c;.H:()Z` @kind virtual;
  #L339eda.  v0:= temp;
  #L339edc.  if v0 == 0 then goto L339ef8;
  #L339ee0.  v0:= new `okio.o`;
  #L339ee4.  call temp:= `clone`(v10) @signature `[Lokio/f;.clone:()Ljava/lang/Object;` @kind virtual;
  #L339eea.  v10:= temp @kind object;
  #L339eec.  v10:= (`okio.f`[]) v10 @kind object;
  #L339ef0.  call `<init>`(v0, v10, v3) @signature `Lokio/o;.<init>:([Lokio/f;[I)V` @kind direct;
  #L339ef6.  return v0 @kind object;
  #L339ef8.  v10:= new `java.lang.AssertionError`;
  #L339efc.  call `<init>`(v10) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L339f02.  throw v10;
  #L339f04.  v10:= new `java.lang.IllegalArgumentException`;
  #L339f08.  v0:= "the empty byte string is not a supported option" @kind object;
  #L339f0c.  call `<init>`(v10, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L339f12.  throw v10;
  #L339f14.  v1:= (0I, -1I) @kind object;
  #L339f23.  goto L339d30;
}
procedure `java.lang.Object` `get`(`okio.o` v0 @kind this, `int` v1 ) @signature `Lokio/o;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L339cdc.  call temp:= `h`(v0, v1) @signature `Lokio/o;.h:(I)Lokio/f;` @kind virtual;
  #L339ce2.  v1:= temp @kind object;
  #L339ce4.  return v1 @kind object;
}
procedure `okio.f` `h`(`okio.o` v1 @kind this, `int` v2 ) @signature `Lokio/o;.h:(I)Lokio/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L339cf8.  v0:= v1.`okio.o.g` @type ^`okio.f`[] @kind object;
  #L339cfc.  v2:= v0[v2] @kind object;
  #L339d00.  return v2 @kind object;
}
procedure `int` `size`(`okio.o` v1 @kind this) @signature `Lokio/o;.size:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L339cc4.  v0:= v1.`okio.o.g` @type ^`okio.f`[] @kind object;
  #L339cc8.  v0:= length @variable v0;
  #L339cca.  return v0;
}
