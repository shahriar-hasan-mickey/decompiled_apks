record `ge.g` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.y$a` @kind interface {
  `java.util.List` `ge.g.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.k` `ge.g.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.c` `ge.g.c` @AccessFlag PRIVATE_FINAL;
  `int` `ge.g.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.e0` `ge.g.e` @AccessFlag PRIVATE_FINAL;
  `okhttp3.f` `ge.g.f` @AccessFlag PRIVATE_FINAL;
  `int` `ge.g.g` @AccessFlag PRIVATE_FINAL;
  `int` `ge.g.h` @AccessFlag PRIVATE_FINAL;
  `int` `ge.g.i` @AccessFlag PRIVATE_FINAL;
  `int` `ge.g.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`ge.g` v0 @kind this, `java.util.List` v1 @kind object, `okhttp3.internal.connection.k` v2 @kind object, `okhttp3.internal.connection.c` v3 @kind object, `int` v4 , `okhttp3.e0` v5 @kind object, `okhttp3.f` v6 @kind object, `int` v7 , `int` v8 , `int` v9 ) @signature `Lge/g;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;ILokhttp3/e0;Lokhttp3/f;III)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b3494.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b349a.  v0.`ge.g.a` @type ^`java.util.List` := v1 @kind object;
  #L2b349e.  v0.`ge.g.b` @type ^`okhttp3.internal.connection.k` := v2 @kind object;
  #L2b34a2.  v0.`ge.g.c` @type ^`okhttp3.internal.connection.c` := v3 @kind object;
  #L2b34a6.  v0.`ge.g.d` @type ^`int` := v4;
  #L2b34aa.  v0.`ge.g.e` @type ^`okhttp3.e0` := v5 @kind object;
  #L2b34ae.  v0.`ge.g.f` @type ^`okhttp3.f` := v6 @kind object;
  #L2b34b2.  v0.`ge.g.g` @type ^`int` := v7;
  #L2b34b6.  v0.`ge.g.h` @type ^`int` := v8;
  #L2b34ba.  v0.`ge.g.i` @type ^`int` := v9;
  #L2b34be.  return @kind void;
}
procedure `int` `a`(`ge.g` v1 @kind this) @signature `Lge/g;.a:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b31c0.  v0:= v1.`ge.g.h` @type ^`int`;
  #L2b31c4.  return v0;
}
procedure `int` `b`(`ge.g` v1 @kind this) @signature `Lge/g;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b31d8.  v0:= v1.`ge.g.i` @type ^`int`;
  #L2b31dc.  return v0;
}
procedure `okhttp3.g0` `c`(`ge.g` v2 @kind this, `okhttp3.e0` v3 @kind object) @signature `Lge/g;.c:(Lokhttp3/e0;)Lokhttp3/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3208.  v0:= v2.`ge.g.b` @type ^`okhttp3.internal.connection.k` @kind object;
  #L2b320c.  v1:= v2.`ge.g.c` @type ^`okhttp3.internal.connection.c` @kind object;
  #L2b3210.  call temp:= `f`(v2, v3, v0, v1) @signature `Lge/g;.f:(Lokhttp3/e0;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;)Lokhttp3/g0;` @kind virtual;
  #L2b3216.  v3:= temp @kind object;
  #L2b3218.  return v3 @kind object;
}
procedure `int` `d`(`ge.g` v1 @kind this) @signature `Lge/g;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b31a8.  v0:= v1.`ge.g.g` @type ^`int`;
  #L2b31ac.  return v0;
}
procedure `okhttp3.internal.connection.c` `e`(`ge.g` v1 @kind this) @signature `Lge/g;.e:()Lokhttp3/internal/connection/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3454.  v0:= v1.`ge.g.c` @type ^`okhttp3.internal.connection.c` @kind object;
  #L2b3458.  if v0 == 0 then goto L2b345e;
  #L2b345c.  return v0 @kind object;
  #L2b345e.  v0:= new `java.lang.IllegalStateException`;
  #L2b3462.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2b3468.  throw v0;
}
procedure `okhttp3.g0` `f`(`ge.g` v15 @kind this, `okhttp3.e0` v16 @kind object, `okhttp3.internal.connection.k` v17 @kind object, `okhttp3.internal.connection.c` v18 @kind object) @signature `Lge/g;.f:(Lokhttp3/e0;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;)Lokhttp3/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L2b322c.  v0:= v15 @kind object;
  #L2b322e.  v1:= v0.`ge.g.d` @type ^`int`;
  #L2b3232.  v2:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b3236.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b323c.  v2:= temp;
  #L2b323e.  if v1 >= v2 then goto L2b3438;
  #L2b3242.  v1:= v0.`ge.g.j` @type ^`int`;
  #L2b3246.  v2:= 1I;
  #L2b3248.  v1:= v1 + v2 @kind int;
  #L2b324a.  v0.`ge.g.j` @type ^`int` := v1;
  #L2b324e.  v1:= v0.`ge.g.c` @type ^`okhttp3.internal.connection.c` @kind object;
  #L2b3252.  v3:= "network interceptor " @kind object;
  #L2b3256.  if v1 == 0 then goto L2b32be;
  #L2b325a.  call temp:= `c`(v1) @signature `Lokhttp3/internal/connection/c;.c:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L2b3260.  v1:= temp @kind object;
  #L2b3262.  call temp:= `h`(v16) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L2b3268.  v4:= temp @kind object;
  #L2b326a.  call temp:= `u`(v1, v4) @signature `Lokhttp3/internal/connection/e;.u:(Lokhttp3/x;)Z` @kind virtual;
  #L2b3270.  v1:= temp;
  #L2b3272.  if v1 == 0 then goto L2b3278;
  #L2b3276.  goto L2b32be;
  #L2b3278.  v1:= new `java.lang.IllegalStateException`;
  #L2b327c.  v4:= new `java.lang.StringBuilder`;
  #L2b3280.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3286.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b328c.  v3:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b3290.  v5:= v0.`ge.g.d` @type ^`int`;
  #L2b3294.  v5:= v5 - v2 @kind int;
  #L2b3296.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b329c.  v2:= temp @kind object;
  #L2b329e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b32a4.  v2:= " must retain the same host and port" @kind object;
  #L2b32a8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b32ae.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b32b4.  v2:= temp @kind object;
  #L2b32b6.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b32bc.  throw v1;
  #L2b32be.  v1:= v0.`ge.g.c` @type ^`okhttp3.internal.connection.c` @kind object;
  #L2b32c2.  v4:= " must call proceed() exactly once" @kind object;
  #L2b32c6.  if v1 == 0 then goto L2b3316;
  #L2b32ca.  v1:= v0.`ge.g.j` @type ^`int`;
  #L2b32ce.  if v1 > v2 then goto L2b32d4;
  #L2b32d2.  goto L2b3316;
  #L2b32d4.  v1:= new `java.lang.IllegalStateException`;
  #L2b32d8.  v5:= new `java.lang.StringBuilder`;
  #L2b32dc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b32e2.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b32e8.  v3:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b32ec.  v6:= v0.`ge.g.d` @type ^`int`;
  #L2b32f0.  v6:= v6 - v2 @kind int;
  #L2b32f2.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b32f8.  v2:= temp @kind object;
  #L2b32fa.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3300.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3306.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b330c.  v2:= temp @kind object;
  #L2b330e.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3314.  throw v1;
  #L2b3316.  v1:= new `ge.g`;
  #L2b331a.  v6:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b331e.  v5:= v0.`ge.g.d` @type ^`int`;
  #L2b3322.  v9:= v5 + 1;
  #L2b3326.  v11:= v0.`ge.g.f` @type ^`okhttp3.f` @kind object;
  #L2b332a.  v12:= v0.`ge.g.g` @type ^`int`;
  #L2b332e.  v13:= v0.`ge.g.h` @type ^`int`;
  #L2b3332.  v14:= v0.`ge.g.i` @type ^`int`;
  #L2b3336.  v5:= v1 @kind object;
  #L2b3338.  v7:= v17 @kind object;
  #L2b333c.  v8:= v18 @kind object;
  #L2b3340.  v10:= v16 @kind object;
  #L2b3344.  call `<init>`(v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lge/g;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;ILokhttp3/e0;Lokhttp3/f;III)V` @kind direct;
  #L2b334a.  v5:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b334e.  v6:= v0.`ge.g.d` @type ^`int`;
  #L2b3352.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b3358.  v5:= temp @kind object;
  #L2b335a.  v5:= (`okhttp3.y`) v5 @kind object;
  #L2b335e.  call temp:= `a`(v5, v1) @signature `Lokhttp3/y;.a:(Lokhttp3/y$a;)Lokhttp3/g0;` @kind interface;
  #L2b3364.  v6:= temp @kind object;
  #L2b3366.  if v18 == 0 then goto L2b33ba;
  #L2b336a.  v7:= v0.`ge.g.d` @type ^`int`;
  #L2b336e.  v7:= v7 + v2 @kind int;
  #L2b3370.  v8:= v0.`ge.g.a` @type ^`java.util.List` @kind object;
  #L2b3374.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b337a.  v8:= temp;
  #L2b337c.  if v7 >= v8 then goto L2b33ba;
  #L2b3380.  v1:= v1.`ge.g.j` @type ^`int`;
  #L2b3384.  if v1 != v2 then goto L2b338a;
  #L2b3388.  goto L2b33ba;
  #L2b338a.  v1:= new `java.lang.IllegalStateException`;
  #L2b338e.  v2:= new `java.lang.StringBuilder`;
  #L2b3392.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3398.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b339e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b33a4.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b33aa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b33b0.  v2:= temp @kind object;
  #L2b33b2.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b33b8.  throw v1;
  #L2b33ba.  v1:= "interceptor " @kind object;
  #L2b33be.  if v6 == 0 then goto L2b3404;
  #L2b33c2.  call temp:= `e`(v6) @signature `Lokhttp3/g0;.e:()Lokhttp3/h0;` @kind virtual;
  #L2b33c8.  v2:= temp @kind object;
  #L2b33ca.  if v2 == 0 then goto L2b33d0;
  #L2b33ce.  return v6 @kind object;
  #L2b33d0.  v2:= new `java.lang.IllegalStateException`;
  #L2b33d4.  v3:= new `java.lang.StringBuilder`;
  #L2b33d8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b33de.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b33e4.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b33ea.  v1:= " returned a response with no body" @kind object;
  #L2b33ee.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b33f4.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b33fa.  v1:= temp @kind object;
  #L2b33fc.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3402.  throw v2;
  #L2b3404.  v2:= new `java.lang.NullPointerException`;
  #L2b3408.  v3:= new `java.lang.StringBuilder`;
  #L2b340c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3412.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3418.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b341e.  v1:= " returned null" @kind object;
  #L2b3422.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3428.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b342e.  v1:= temp @kind object;
  #L2b3430.  call `<init>`(v2, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3436.  throw v2;
  #L2b3438.  v1:= new `java.lang.AssertionError`;
  #L2b343c.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2b3442.  throw v1;
}
procedure `okhttp3.internal.connection.k` `g`(`ge.g` v1 @kind this) @signature `Lge/g;.g:()Lokhttp3/internal/connection/k;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b347c.  v0:= v1.`ge.g.b` @type ^`okhttp3.internal.connection.k` @kind object;
  #L2b3480.  return v0 @kind object;
}
procedure `okhttp3.e0` `k`(`ge.g` v1 @kind this) @signature `Lge/g;.k:()Lokhttp3/e0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b31f0.  v0:= v1.`ge.g.e` @type ^`okhttp3.e0` @kind object;
  #L2b31f4.  return v0 @kind object;
}
