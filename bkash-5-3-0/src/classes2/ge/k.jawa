record `ge.k` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.c0` `ge.k.a` @AccessFlag PUBLIC_FINAL;
  `int` `ge.k.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `ge.k.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ge.k` v0 @kind this, `okhttp3.c0` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lge/k;.<init>:(Lokhttp3/c0;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b3ea0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b3ea6.  v0.`ge.k.a` @type ^`okhttp3.c0` := v1 @kind object;
  #L2b3eaa.  v0.`ge.k.b` @type ^`int` := v2;
  #L2b3eae.  v0.`ge.k.c` @type ^`java.lang.String` := v3 @kind object;
  #L2b3eb2.  return @kind void;
}
procedure `ge.k` `a`(`java.lang.String` v8 @kind object) @signature `Lge/k;.a:(Ljava/lang/String;)Lge/k;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b3c50.  v0:= "HTTP/1." @kind object;
  #L2b3c54.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2b3c5a.  v0:= temp;
  #L2b3c5c.  v1:= 32I;
  #L2b3c60.  v2:= 4I;
  #L2b3c62.  v3:= 9I;
  #L2b3c66.  v4:= "Unexpected status line: " @kind object;
  #L2b3c6a.  if v0 == 0 then goto L2b3d02;
  #L2b3c6e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b3c74.  v0:= temp;
  #L2b3c76.  if v0 < v3 then goto L2b3cd8;
  #L2b3c7a.  v0:= 8I;
  #L2b3c7e.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2b3c84.  v0:= temp;
  #L2b3c86.  if v0 != v1 then goto L2b3cd8;
  #L2b3c8a.  v0:= 7I;
  #L2b3c8c.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2b3c92.  v0:= temp;
  #L2b3c94.  v0:= v0 + -48;
  #L2b3c98.  if v0 != 0 then goto L2b3ca2;
  #L2b3c9c.  v0:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L2b3ca0.  goto L2b3d18;
  #L2b3ca2.  v5:= 1I;
  #L2b3ca4.  if v0 != v5 then goto L2b3cae;
  #L2b3ca8.  v0:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L2b3cac.  goto L2b3d18;
  #L2b3cae.  v0:= new `java.net.ProtocolException`;
  #L2b3cb2.  v1:= new `java.lang.StringBuilder`;
  #L2b3cb6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3cbc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3cc2.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3cc8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3cce.  v8:= temp @kind object;
  #L2b3cd0.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3cd6.  throw v0;
  #L2b3cd8.  v0:= new `java.net.ProtocolException`;
  #L2b3cdc.  v1:= new `java.lang.StringBuilder`;
  #L2b3ce0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3ce6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3cec.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3cf2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3cf8.  v8:= temp @kind object;
  #L2b3cfa.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3d00.  throw v0;
  #L2b3d02.  v0:= "ICY " @kind object;
  #L2b3d06.  call temp:= `startsWith`(v8, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2b3d0c.  v0:= temp;
  #L2b3d0e.  if v0 == 0 then goto L2b3dea;
  #L2b3d12.  v0:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L2b3d16.  v3:= 4I;
  #L2b3d18.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b3d1e.  v5:= temp;
  #L2b3d20.  v6:= v3 + 3;
  #L2b3d24.  if v5 < v6 then goto L2b3dc0;
  #L2b3d28.  call temp:= `substring`(v8, v3, v6) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2b3d2e.  v5:= temp @kind object;
  #L2b3d30.  call temp:= `parseInt`(v5) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L2b3d36.  v5:= temp;
  #L2b3d38.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b3d3e.  v7:= temp;
  #L2b3d40.  if v7 <= v6 then goto L2b3d86;
  #L2b3d44.  call temp:= `charAt`(v8, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2b3d4a.  v6:= temp;
  #L2b3d4c.  if v6 != v1 then goto L2b3d5c;
  #L2b3d50.  v3:= v3 + v2 @kind int;
  #L2b3d52.  call temp:= `substring`(v8, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2b3d58.  v8:= temp @kind object;
  #L2b3d5a.  goto L2b3d8a;
  #L2b3d5c.  v0:= new `java.net.ProtocolException`;
  #L2b3d60.  v1:= new `java.lang.StringBuilder`;
  #L2b3d64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3d6a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3d70.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3d76.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3d7c.  v8:= temp @kind object;
  #L2b3d7e.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3d84.  throw v0;
  #L2b3d86.  v8:= "" @kind object;
  #L2b3d8a.  v1:= new `ge.k`;
  #L2b3d8e.  call `<init>`(v1, v0, v5, v8) @signature `Lge/k;.<init>:(Lokhttp3/c0;ILjava/lang/String;)V` @kind direct;
  #L2b3d94.  return v1 @kind object;
  #L2b3d96.  v0:= new `java.net.ProtocolException`;
  #L2b3d9a.  v1:= new `java.lang.StringBuilder`;
  #L2b3d9e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3da4.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3daa.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3db0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3db6.  v8:= temp @kind object;
  #L2b3db8.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3dbe.  throw v0;
  #L2b3dc0.  v0:= new `java.net.ProtocolException`;
  #L2b3dc4.  v1:= new `java.lang.StringBuilder`;
  #L2b3dc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3dce.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3dd4.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3dda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3de0.  v8:= temp @kind object;
  #L2b3de2.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3de8.  throw v0;
  #L2b3dea.  v0:= new `java.net.ProtocolException`;
  #L2b3dee.  v1:= new `java.lang.StringBuilder`;
  #L2b3df2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3df8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3dfe.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3e0a.  v8:= temp @kind object;
  #L2b3e0c.  call `<init>`(v0, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b3e12.  throw v0;
  catch `java.lang.NumberFormatException` @[L2b3d28..L2b3d38] goto L2b3d96;
}
procedure `java.lang.String` `toString`(`ge.k` v3 @kind this) @signature `Lge/k;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b3e34.  v0:= new `java.lang.StringBuilder`;
  #L2b3e38.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3e3e.  v1:= v3.`ge.k.a` @type ^`okhttp3.c0` @kind object;
  #L2b3e42.  v2:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L2b3e46.  if v1 != v2 then goto L2b3e50;
  #L2b3e4a.  v1:= "HTTP/1.0" @kind object;
  #L2b3e4e.  goto L2b3e54;
  #L2b3e50.  v1:= "HTTP/1.1" @kind object;
  #L2b3e54.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e5a.  v1:= 32I;
  #L2b3e5e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e64.  v2:= v3.`ge.k.b` @type ^`int`;
  #L2b3e68.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e6e.  v2:= v3.`ge.k.c` @type ^`java.lang.String` @kind object;
  #L2b3e72.  if v2 == 0 then goto L2b3e86;
  #L2b3e76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e7c.  v1:= v3.`ge.k.c` @type ^`java.lang.String` @kind object;
  #L2b3e80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3e86.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3e8c.  v0:= temp @kind object;
  #L2b3e8e.  return v0 @kind object;
}
