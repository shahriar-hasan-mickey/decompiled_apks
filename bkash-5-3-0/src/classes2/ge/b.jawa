record `ge.b` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.y` @kind interface {
  `boolean` `ge.b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ge.b` v0 @kind this, `boolean` v1 ) @signature `Lge/b;.<init>:(Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b2c10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b2c16.  v0.`ge.b.a` @type ^`boolean` := v1 @kind boolean;
  #L2b2c1a.  return @kind void;
}
procedure `okhttp3.g0` `a`(`ge.b` v8 @kind this, `okhttp3.y$a` v9 @kind object) @signature `Lge/b;.a:(Lokhttp3/y$a;)Lokhttp3/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b2908.  v9:= (`ge.g`) v9 @kind object;
  #L2b290c.  call temp:= `e`(v9) @signature `Lge/g;.e:()Lokhttp3/internal/connection/c;` @kind virtual;
  #L2b2912.  v0:= temp @kind object;
  #L2b2914.  call temp:= `k`(v9) @signature `Lge/g;.k:()Lokhttp3/e0;` @kind virtual;
  #L2b291a.  v9:= temp @kind object;
  #L2b291c.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2b2922.  v1:= temp @kind wide;
  #L2b2924.  call `p`(v0, v9) @signature `Lokhttp3/internal/connection/c;.p:(Lokhttp3/e0;)V` @kind virtual;
  #L2b292a.  call temp:= `f`(v9) @signature `Lokhttp3/e0;.f:()Ljava/lang/String;` @kind virtual;
  #L2b2930.  v3:= temp @kind object;
  #L2b2932.  call temp:= `b`(v3) @signature `Lge/f;.b:(Ljava/lang/String;)Z` @kind static;
  #L2b2938.  v3:= temp;
  #L2b293a.  v4:= 0I;
  #L2b293c.  v5:= 0I;
  #L2b293e.  if v3 == 0 then goto L2b2a0c;
  #L2b2942.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b2948.  v3:= temp @kind object;
  #L2b294a.  if v3 == 0 then goto L2b2a0c;
  #L2b294e.  v3:= "Expect" @kind object;
  #L2b2952.  call temp:= `c`(v9, v3) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b2958.  v3:= temp @kind object;
  #L2b295a.  v6:= "100-continue" @kind object;
  #L2b295e.  call temp:= `equalsIgnoreCase`(v6, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b2964.  v3:= temp;
  #L2b2966.  v6:= 1I;
  #L2b2968.  if v3 == 0 then goto L2b2984;
  #L2b296c.  call `g`(v0) @signature `Lokhttp3/internal/connection/c;.g:()V` @kind virtual;
  #L2b2972.  call `n`(v0) @signature `Lokhttp3/internal/connection/c;.n:()V` @kind virtual;
  #L2b2978.  call temp:= `l`(v0, v6) @signature `Lokhttp3/internal/connection/c;.l:(Z)Lokhttp3/g0$a;` @kind virtual;
  #L2b297e.  v5:= temp @kind object;
  #L2b2980.  v3:= 1I;
  #L2b2982.  goto L2b2986;
  #L2b2984.  v3:= 0I;
  #L2b2986.  if v5 != 0 then goto L2b29ea;
  #L2b298a.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b2990.  v7:= temp @kind object;
  #L2b2992.  call temp:= `f`(v7) @signature `Lokhttp3/f0;.f:()Z` @kind virtual;
  #L2b2998.  v7:= temp;
  #L2b299a.  if v7 == 0 then goto L2b29c4;
  #L2b299e.  call `g`(v0) @signature `Lokhttp3/internal/connection/c;.g:()V` @kind virtual;
  #L2b29a4.  call temp:= `d`(v0, v9, v6) @signature `Lokhttp3/internal/connection/c;.d:(Lokhttp3/e0;Z)Lokio/u;` @kind virtual;
  #L2b29aa.  v6:= temp @kind object;
  #L2b29ac.  call temp:= `a`(v6) @signature `Lokio/n;.a:(Lokio/u;)Lokio/d;` @kind static;
  #L2b29b2.  v6:= temp @kind object;
  #L2b29b4.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b29ba.  v7:= temp @kind object;
  #L2b29bc.  call `h`(v7, v6) @signature `Lokhttp3/f0;.h:(Lokio/d;)V` @kind virtual;
  #L2b29c2.  goto L2b2a14;
  #L2b29c4.  call temp:= `d`(v0, v9, v4) @signature `Lokhttp3/internal/connection/c;.d:(Lokhttp3/e0;Z)Lokio/u;` @kind virtual;
  #L2b29ca.  v6:= temp @kind object;
  #L2b29cc.  call temp:= `a`(v6) @signature `Lokio/n;.a:(Lokio/u;)Lokio/d;` @kind static;
  #L2b29d2.  v6:= temp @kind object;
  #L2b29d4.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b29da.  v7:= temp @kind object;
  #L2b29dc.  call `h`(v7, v6) @signature `Lokhttp3/f0;.h:(Lokio/d;)V` @kind virtual;
  #L2b29e2.  call `close`(v6) @signature `Lokio/u;.close:()V` @kind interface;
  #L2b29e8.  goto L2b2a14;
  #L2b29ea.  call `j`(v0) @signature `Lokhttp3/internal/connection/c;.j:()V` @kind virtual;
  #L2b29f0.  call temp:= `c`(v0) @signature `Lokhttp3/internal/connection/c;.c:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L2b29f6.  v6:= temp @kind object;
  #L2b29f8.  call temp:= `n`(v6) @signature `Lokhttp3/internal/connection/e;.n:()Z` @kind virtual;
  #L2b29fe.  v6:= temp;
  #L2b2a00.  if v6 != 0 then goto L2b2a14;
  #L2b2a04.  call `i`(v0) @signature `Lokhttp3/internal/connection/c;.i:()V` @kind virtual;
  #L2b2a0a.  goto L2b2a14;
  #L2b2a0c.  call `j`(v0) @signature `Lokhttp3/internal/connection/c;.j:()V` @kind virtual;
  #L2b2a12.  v3:= 0I;
  #L2b2a14.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b2a1a.  v6:= temp @kind object;
  #L2b2a1c.  if v6 == 0 then goto L2b2a34;
  #L2b2a20.  call temp:= `a`(v9) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b2a26.  v6:= temp @kind object;
  #L2b2a28.  call temp:= `f`(v6) @signature `Lokhttp3/f0;.f:()Z` @kind virtual;
  #L2b2a2e.  v6:= temp;
  #L2b2a30.  if v6 != 0 then goto L2b2a3a;
  #L2b2a34.  call `f`(v0) @signature `Lokhttp3/internal/connection/c;.f:()V` @kind virtual;
  #L2b2a3a.  if v3 != 0 then goto L2b2a44;
  #L2b2a3e.  call `n`(v0) @signature `Lokhttp3/internal/connection/c;.n:()V` @kind virtual;
  #L2b2a44.  if v5 != 0 then goto L2b2a50;
  #L2b2a48.  call temp:= `l`(v0, v4) @signature `Lokhttp3/internal/connection/c;.l:(Z)Lokhttp3/g0$a;` @kind virtual;
  #L2b2a4e.  v5:= temp @kind object;
  #L2b2a50.  call temp:= `q`(v5, v9) @signature `Lokhttp3/g0$a;.q:(Lokhttp3/e0;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2a56.  v3:= temp @kind object;
  #L2b2a58.  call temp:= `c`(v0) @signature `Lokhttp3/internal/connection/c;.c:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L2b2a5e.  v5:= temp @kind object;
  #L2b2a60.  call temp:= `k`(v5) @signature `Lokhttp3/internal/connection/e;.k:()Lokhttp3/v;` @kind virtual;
  #L2b2a66.  v5:= temp @kind object;
  #L2b2a68.  call temp:= `h`(v3, v5) @signature `Lokhttp3/g0$a;.h:(Lokhttp3/v;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2a6e.  v3:= temp @kind object;
  #L2b2a70.  call temp:= `r`(v3, v1) @signature `Lokhttp3/g0$a;.r:(J)Lokhttp3/g0$a;` @kind virtual;
  #L2b2a76.  v3:= temp @kind object;
  #L2b2a78.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2b2a7e.  v5:= temp @kind wide;
  #L2b2a80.  call temp:= `p`(v3, v5) @signature `Lokhttp3/g0$a;.p:(J)Lokhttp3/g0$a;` @kind virtual;
  #L2b2a86.  v3:= temp @kind object;
  #L2b2a88.  call temp:= `c`(v3) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L2b2a8e.  v3:= temp @kind object;
  #L2b2a90.  call temp:= `k`(v3) @signature `Lokhttp3/g0;.k:()I` @kind virtual;
  #L2b2a96.  v5:= temp;
  #L2b2a98.  v6:= 100I;
  #L2b2a9c.  if v5 != v6 then goto L2b2af0;
  #L2b2aa0.  call temp:= `l`(v0, v4) @signature `Lokhttp3/internal/connection/c;.l:(Z)Lokhttp3/g0$a;` @kind virtual;
  #L2b2aa6.  v3:= temp @kind object;
  #L2b2aa8.  call temp:= `q`(v3, v9) @signature `Lokhttp3/g0$a;.q:(Lokhttp3/e0;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2aae.  v9:= temp @kind object;
  #L2b2ab0.  call temp:= `c`(v0) @signature `Lokhttp3/internal/connection/c;.c:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L2b2ab6.  v3:= temp @kind object;
  #L2b2ab8.  call temp:= `k`(v3) @signature `Lokhttp3/internal/connection/e;.k:()Lokhttp3/v;` @kind virtual;
  #L2b2abe.  v3:= temp @kind object;
  #L2b2ac0.  call temp:= `h`(v9, v3) @signature `Lokhttp3/g0$a;.h:(Lokhttp3/v;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2ac6.  v9:= temp @kind object;
  #L2b2ac8.  call temp:= `r`(v9, v1) @signature `Lokhttp3/g0$a;.r:(J)Lokhttp3/g0$a;` @kind virtual;
  #L2b2ace.  v9:= temp @kind object;
  #L2b2ad0.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L2b2ad6.  v1:= temp @kind wide;
  #L2b2ad8.  call temp:= `p`(v9, v1) @signature `Lokhttp3/g0$a;.p:(J)Lokhttp3/g0$a;` @kind virtual;
  #L2b2ade.  v9:= temp @kind object;
  #L2b2ae0.  call temp:= `c`(v9) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L2b2ae6.  v3:= temp @kind object;
  #L2b2ae8.  call temp:= `k`(v3) @signature `Lokhttp3/g0;.k:()I` @kind virtual;
  #L2b2aee.  v5:= temp;
  #L2b2af0.  call `m`(v0, v3) @signature `Lokhttp3/internal/connection/c;.m:(Lokhttp3/g0;)V` @kind virtual;
  #L2b2af6.  v9:= v8.`ge.b.a` @type ^`boolean` @kind boolean;
  #L2b2afa.  if v9 == 0 then goto L2b2b24;
  #L2b2afe.  v9:= 101I;
  #L2b2b02.  if v5 != v9 then goto L2b2b24;
  #L2b2b06.  call temp:= `J`(v3) @signature `Lokhttp3/g0;.J:()Lokhttp3/g0$a;` @kind virtual;
  #L2b2b0c.  v9:= temp @kind object;
  #L2b2b0e.  v1:= `@@ee.e.d` @type ^`okhttp3.h0` @kind object;
  #L2b2b12.  call temp:= `b`(v9, v1) @signature `Lokhttp3/g0$a;.b:(Lokhttp3/h0;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2b18.  v9:= temp @kind object;
  #L2b2b1a.  call temp:= `c`(v9) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L2b2b20.  v9:= temp @kind object;
  #L2b2b22.  goto L2b2b44;
  #L2b2b24.  call temp:= `J`(v3) @signature `Lokhttp3/g0;.J:()Lokhttp3/g0$a;` @kind virtual;
  #L2b2b2a.  v9:= temp @kind object;
  #L2b2b2c.  call temp:= `k`(v0, v3) @signature `Lokhttp3/internal/connection/c;.k:(Lokhttp3/g0;)Lokhttp3/h0;` @kind virtual;
  #L2b2b32.  v1:= temp @kind object;
  #L2b2b34.  call temp:= `b`(v9, v1) @signature `Lokhttp3/g0$a;.b:(Lokhttp3/h0;)Lokhttp3/g0$a;` @kind virtual;
  #L2b2b3a.  v9:= temp @kind object;
  #L2b2b3c.  call temp:= `c`(v9) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L2b2b42.  v9:= temp @kind object;
  #L2b2b44.  call temp:= `Y`(v9) @signature `Lokhttp3/g0;.Y:()Lokhttp3/e0;` @kind virtual;
  #L2b2b4a.  v1:= temp @kind object;
  #L2b2b4c.  v2:= "Connection" @kind object;
  #L2b2b50.  call temp:= `c`(v1, v2) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b2b56.  v1:= temp @kind object;
  #L2b2b58.  v3:= "close" @kind object;
  #L2b2b5c.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b2b62.  v1:= temp;
  #L2b2b64.  if v1 != 0 then goto L2b2b7c;
  #L2b2b68.  call temp:= `s`(v9, v2) @signature `Lokhttp3/g0;.s:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b2b6e.  v1:= temp @kind object;
  #L2b2b70.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b2b76.  v1:= temp;
  #L2b2b78.  if v1 == 0 then goto L2b2b82;
  #L2b2b7c.  call `i`(v0) @signature `Lokhttp3/internal/connection/c;.i:()V` @kind virtual;
  #L2b2b82.  v0:= 204I;
  #L2b2b86.  if v5 == v0 then goto L2b2b92;
  #L2b2b8a.  v0:= 205I;
  #L2b2b8e.  if v5 != v0 then goto L2b2bae;
  #L2b2b92.  call temp:= `e`(v9) @signature `Lokhttp3/g0;.e:()Lokhttp3/h0;` @kind virtual;
  #L2b2b98.  v0:= temp @kind object;
  #L2b2b9a.  call temp:= `r`(v0) @signature `Lokhttp3/h0;.r:()J` @kind virtual;
  #L2b2ba0.  v0:= temp @kind wide;
  #L2b2ba2.  v2:= 0L;
  #L2b2ba6.  v4:= lcmp(v0, v2);
  #L2b2baa.  if v4 > 0 then goto L2b2bb0;
  #L2b2bae.  return v9 @kind object;
  #L2b2bb0.  v0:= new `java.net.ProtocolException`;
  #L2b2bb4.  v1:= new `java.lang.StringBuilder`;
  #L2b2bb8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b2bbe.  v2:= "HTTP " @kind object;
  #L2b2bc2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2bc8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2bce.  v2:= " had non-zero Content-Length: " @kind object;
  #L2b2bd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2bd8.  call temp:= `e`(v9) @signature `Lokhttp3/g0;.e:()Lokhttp3/h0;` @kind virtual;
  #L2b2bde.  v9:= temp @kind object;
  #L2b2be0.  call temp:= `r`(v9) @signature `Lokhttp3/h0;.r:()J` @kind virtual;
  #L2b2be6.  v2:= temp @kind wide;
  #L2b2be8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b2bee.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b2bf4.  v9:= temp @kind object;
  #L2b2bf6.  call `<init>`(v0, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b2bfc.  throw v0;
}
