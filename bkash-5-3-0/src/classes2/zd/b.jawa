record `zd.b` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `zd.a` @kind interface {
}
procedure `java.lang.Object` `call`(`java.lang.Object`[] v0 @kind object) @signature `Lzd/b;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.Object` `callBy`(`java.util.Map` v0 @kind object) @signature `Lzd/b;.callBy:(Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getParameters`() @signature `Lzd/b;.getParameters:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `zd.i` `getReturnType`() @signature `Lzd/b;.getReturnType:()Lzd/i;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getTypeParameters`() @signature `Lzd/b;.getTypeParameters:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `zd.j` `getVisibility`() @signature `Lzd/b;.getVisibility:()Lzd/j;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isAbstract`() @signature `Lzd/b;.isAbstract:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isFinal`() @signature `Lzd/b;.isFinal:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isOpen`() @signature `Lzd/b;.isOpen:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isSuspend`() @signature `Lzd/b;.isSuspend:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
