record `wb.c$e` @kind class @AccessFlag  extends `wb.c$i` @kind interface {
  `java.util.concurrent.ExecutorService` `wb.c$e.a` @AccessFlag ;
}
procedure `void` `<init>`(`wb.c$e` v1 @kind this) @signature `Lwb/c$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L383c7c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383c82.  call temp:= `e`() @signature `Lvb/a;.e:()Lvb/a;` @kind static;
  #L383c88.  v0:= temp @kind object;
  #L383c8a.  call temp:= `b`(v0) @signature `Lvb/a;.b:()Ljava/util/concurrent/ExecutorService;` @kind virtual;
  #L383c90.  v0:= temp @kind object;
  #L383c92.  v1.`wb.c$e.a` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L383c96.  return @kind void;
}
procedure `wb.c$d` `makeBackgroundTaskQueue`(`wb.c$e` v1 @kind this, `io.flutter.plugin.common.d$d` v2 @kind object) @signature `Lwb/c$e;.makeBackgroundTaskQueue:(Lio/flutter/plugin/common/d$d;)Lwb/c$d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L383ca8.  call temp:= `a`(v2) @signature `Lio/flutter/plugin/common/d$d;.a:()Z` @kind virtual;
  #L383cae.  v2:= temp;
  #L383cb0.  if v2 == 0 then goto L383cc4;
  #L383cb4.  v2:= new `wb.c$h`;
  #L383cb8.  v0:= v1.`wb.c$e.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L383cbc.  call `<init>`(v2, v0) @signature `Lwb/c$h;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L383cc2.  return v2 @kind object;
  #L383cc4.  v2:= new `wb.c$c`;
  #L383cc8.  v0:= v1.`wb.c$e.a` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L383ccc.  call `<init>`(v2, v0) @signature `Lwb/c$c;.<init>:(Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L383cd2.  return v2 @kind object;
}
