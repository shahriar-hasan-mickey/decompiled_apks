record `wb.c` @kind class @AccessFlag  extends `io.flutter.plugin.common.d` @kind interface, `wb.f` @kind interface {
  `io.flutter.embedding.engine.FlutterJNI` `wb.c.g` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `wb.c.h` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `wb.c.i` @AccessFlag PRIVATE;
  `java.lang.Object` `wb.c.j` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `wb.c.k` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `wb.c.l` @AccessFlag PRIVATE_FINAL;
  `int` `wb.c.m` @AccessFlag PRIVATE;
  `wb.c$d` `wb.c.n` @AccessFlag PRIVATE_FINAL;
  `java.util.WeakHashMap` `wb.c.o` @AccessFlag PRIVATE;
  `wb.c$i` `wb.c.p` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`wb.c` v1 @kind this, `io.flutter.embedding.engine.FlutterJNI` v2 @kind object) @signature `Lwb/c;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L384018.  v0:= new `wb.c$e`;
  #L38401c.  call `<init>`(v0) @signature `Lwb/c$e;.<init>:()V` @kind direct;
  #L384022.  call `<init>`(v1, v2, v0) @signature `Lwb/c;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;Lwb/c$i;)V` @kind direct;
  #L384028.  return @kind void;
}
procedure `void` `<init>`(`wb.c` v2 @kind this, `io.flutter.embedding.engine.FlutterJNI` v3 @kind object, `wb.c$i` v4 @kind object) @signature `Lwb/c;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;Lwb/c$i;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L38403c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L384042.  v0:= new `java.util.HashMap`;
  #L384046.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38404c.  v2.`wb.c.h` @type ^`java.util.Map` := v0 @kind object;
  #L384050.  v0:= new `java.util.HashMap`;
  #L384054.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L38405a.  v2.`wb.c.i` @type ^`java.util.Map` := v0 @kind object;
  #L38405e.  v0:= new `java.lang.Object`;
  #L384062.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L384068.  v2.`wb.c.j` @type ^`java.lang.Object` := v0 @kind object;
  #L38406c.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L384070.  v1:= 0I;
  #L384072.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L384078.  v2.`wb.c.k` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L38407c.  v0:= new `java.util.HashMap`;
  #L384080.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L384086.  v2.`wb.c.l` @type ^`java.util.Map` := v0 @kind object;
  #L38408a.  v0:= 1I;
  #L38408c.  v2.`wb.c.m` @type ^`int` := v0;
  #L384090.  v0:= new `wb.g`;
  #L384094.  call `<init>`(v0) @signature `Lwb/g;.<init>:()V` @kind direct;
  #L38409a.  v2.`wb.c.n` @type ^`wb.c$d` := v0 @kind object;
  #L38409e.  v0:= new `java.util.WeakHashMap`;
  #L3840a2.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3840a8.  v2.`wb.c.o` @type ^`java.util.WeakHashMap` := v0 @kind object;
  #L3840ac.  v2.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` := v3 @kind object;
  #L3840b0.  v2.`wb.c.p` @type ^`wb.c$i` := v4 @kind object;
  #L3840b4.  return @kind void;
}
procedure `void` `c`(`wb.c` v0 @kind object, `java.lang.String` v1 @kind object, `wb.c$f` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object, `int` v4 , `long` v5 ) @signature `Lwb/c;.c:(Lwb/c;Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L384000.  call `g`(v0, v1, v2, v3, v4, v5) @signature `Lwb/c;.g:(Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @kind direct;
  #L384006.  return @kind void;
}
procedure `void` `d`(`wb.c` v10 @kind this, `java.lang.String` v11 @kind object, `wb.c$f` v12 @kind object, `java.nio.ByteBuffer` v13 @kind object, `int` v14 , `long` v15 ) @signature `Lwb/c;.d:(Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3840c8.  v3:= v12 @kind object;
  #L3840ca.  if v3 == 0 then goto L3840d4;
  #L3840ce.  v0:= v3.`wb.c$f.b` @type ^`wb.c$d` @kind object;
  #L3840d2.  goto L3840d6;
  #L3840d4.  v0:= 0I;
  #L3840d6.  v8:= v0 @kind object;
  #L3840d8.  v9:= new `wb.b`;
  #L3840dc.  v0:= v9 @kind object;
  #L3840de.  v1:= v10 @kind object;
  #L3840e0.  v2:= v11 @kind object;
  #L3840e2.  v3:= v12 @kind object;
  #L3840e4.  v4:= v13 @kind object;
  #L3840e6.  v5:= v14;
  #L3840e8.  v6:= v15 @kind wide;
  #L3840ea.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lwb/b;.<init>:(Lwb/c;Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @kind direct;
  #L3840f0.  v0:= v10 @kind object;
  #L3840f2.  if v8 != 0 then goto L3840fa;
  #L3840f6.  v8:= v0.`wb.c.n` @type ^`wb.c$d` @kind object;
  #L3840fa.  call `a`(v8, v9) @signature `Lwb/c$d;.a:(Ljava/lang/Runnable;)V` @kind interface;
  #L384100.  return @kind void;
}
procedure `void` `e`(`java.lang.Error` v2 @kind object) @signature `Lwb/c;.e:(Ljava/lang/Error;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L384114.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L38411a.  v0:= temp @kind object;
  #L38411c.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L384122.  v1:= temp @kind object;
  #L384124.  if v1 == 0 then goto L384138;
  #L384128.  call temp:= `getUncaughtExceptionHandler`(v0) @signature `Ljava/lang/Thread;.getUncaughtExceptionHandler:()Ljava/lang/Thread$UncaughtExceptionHandler;` @kind virtual;
  #L38412e.  v1:= temp @kind object;
  #L384130.  call `uncaughtException`(v1, v0, v2) @signature `Ljava/lang/Thread$UncaughtExceptionHandler;.uncaughtException:(Ljava/lang/Thread;Ljava/lang/Throwable;)V` @kind interface;
  #L384136.  return @kind void;
  #L384138.  throw v2;
}
procedure `void` `f`(`wb.c` v3 @kind this, `wb.c$f` v4 @kind object, `java.nio.ByteBuffer` v5 @kind object, `int` v6 ) @signature `Lwb/c;.f:(Lwb/c$f;Ljava/nio/ByteBuffer;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3842cc.  v0:= "DartMessenger" @kind object;
  #L3842d0.  if v4 == 0 then goto L38431a;
  #L3842d4.  v1:= "Deferring to registered handler to process message." @kind object;
  #L3842d8.  call `e`(v0, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3842de.  v4:= v4.`wb.c$f.a` @type ^`io.flutter.plugin.common.d$a` @kind object;
  #L3842e2.  v1:= new `wb.c$g`;
  #L3842e6.  v2:= v3.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3842ea.  call `<init>`(v1, v2, v6) @signature `Lwb/c$g;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;I)V` @kind direct;
  #L3842f0.  call `a`(v4, v5, v1) @signature `Lio/flutter/plugin/common/d$a;.a:(Ljava/nio/ByteBuffer;Lio/flutter/plugin/common/d$b;)V` @kind interface;
  #L3842f6.  goto L38432e;
  #L3842f8.  v4:= Exception @type ^`java.lang.Error` @kind object;
  #L3842fa.  call `e`(v4) @signature `Lwb/c;.e:(Ljava/lang/Error;)V` @kind static;
  #L384300.  goto L38432e;
  #L384302.  v4:= Exception @type ^`java.lang.Exception` @kind object;
  #L384304.  v5:= "Uncaught exception in binary message listener" @kind object;
  #L384308.  call `c`(v0, v5, v4) @signature `Lvb/b;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L38430e.  v4:= v3.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L384312.  call `invokePlatformMessageEmptyResponseCallback`(v4, v6) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageEmptyResponseCallback:(I)V` @kind virtual;
  #L384318.  goto L38432e;
  #L38431a.  v4:= "No registered handler for message. Responding to Dart with empty reply message." @kind object;
  #L38431e.  call `e`(v0, v4) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L384324.  v4:= v3.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L384328.  call `invokePlatformMessageEmptyResponseCallback`(v4, v6) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageEmptyResponseCallback:(I)V` @kind virtual;
  #L38432e.  return @kind void;
  catch `java.lang.Exception` @[L3842d4..L3842f6] goto L384302;
  catch `java.lang.Error` @[L3842d4..L3842f6] goto L3842f8;
}
procedure `void` `g`(`wb.c` v2 @kind this, `java.lang.String` v3 @kind object, `wb.c$f` v4 @kind object, `java.nio.ByteBuffer` v5 @kind object, `int` v6 , `long` v7 ) @signature `Lwb/c;.g:(Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L384350.  v0:= new `java.lang.StringBuilder`;
  #L384354.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38435a.  v1:= "DartMessenger#handleMessageFromDart on " @kind object;
  #L38435e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384364.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38436a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384370.  v3:= temp @kind object;
  #L384372.  call `a`(v3) @signature `Lbd/e;.a:(Ljava/lang/String;)V` @kind static;
  #L384378.  call `f`(v2, v4, v5, v6) @signature `Lwb/c;.f:(Lwb/c$f;Ljava/nio/ByteBuffer;I)V` @kind direct;
  #L38437e.  if v5 == 0 then goto L384396;
  #L384382.  call temp:= `isDirect`(v5) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L384388.  v3:= temp;
  #L38438a.  if v3 == 0 then goto L384396;
  #L38438e.  v3:= 0I;
  #L384390.  call temp:= `limit`(v5, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L384396.  v3:= v2.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L38439a.  call `cleanupMessageData`(v3, v7) @signature `Lio/flutter/embedding/engine/FlutterJNI;.cleanupMessageData:(J)V` @kind virtual;
  #L3843a0.  call `b`() @signature `Lbd/e;.b:()V` @kind static;
  #L3843a6.  return @kind void;
  #L3843a8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3843aa.  v4:= v2.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3843ae.  call `cleanupMessageData`(v4, v7) @signature `Lio/flutter/embedding/engine/FlutterJNI;.cleanupMessageData:(J)V` @kind virtual;
  #L3843b4.  call `b`() @signature `Lbd/e;.b:()V` @kind static;
  #L3843ba.  throw v3;
  catch `java.lang.Throwable` @[L384378..L384396] goto L3843a8;
}
procedure `void` `a`(`wb.c` v2 @kind this, `int` v3 , `java.nio.ByteBuffer` v4 @kind object) @signature `Lwb/c;.a:(ILjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L384240.  v0:= "DartMessenger" @kind object;
  #L384244.  v1:= "Received message reply from Dart." @kind object;
  #L384248.  call `e`(v0, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L38424e.  v1:= v2.`wb.c.l` @type ^`java.util.Map` @kind object;
  #L384252.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L384258.  v3:= temp @kind object;
  #L38425a.  call temp:= `remove`(v1, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L384260.  v3:= temp @kind object;
  #L384262.  v3:= (`io.flutter.plugin.common.d$b`) v3 @kind object;
  #L384266.  if v3 == 0 then goto L3842aa;
  #L38426a.  v1:= "Invoking registered callback for reply from Dart." @kind object;
  #L38426e.  call `e`(v0, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L384274.  call `a`(v3, v4) @signature `Lio/flutter/plugin/common/d$b;.a:(Ljava/nio/ByteBuffer;)V` @kind interface;
  #L38427a.  if v4 == 0 then goto L3842aa;
  #L38427e.  call temp:= `isDirect`(v4) @signature `Ljava/nio/ByteBuffer;.isDirect:()Z` @kind virtual;
  #L384284.  v3:= temp;
  #L384286.  if v3 == 0 then goto L3842aa;
  #L38428a.  v3:= 0I;
  #L38428c.  call temp:= `limit`(v4, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L384292.  goto L3842aa;
  #L384294.  v3:= Exception @type ^`java.lang.Error` @kind object;
  #L384296.  call `e`(v3) @signature `Lwb/c;.e:(Ljava/lang/Error;)V` @kind static;
  #L38429c.  goto L3842aa;
  #L38429e.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L3842a0.  v4:= "Uncaught exception in binary message reply handler" @kind object;
  #L3842a4.  call `c`(v0, v4, v3) @signature `Lvb/b;.c:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L3842aa.  return @kind void;
  catch `java.lang.Exception` @[L38426a..L384292] goto L38429e;
  catch `java.lang.Error` @[L38426a..L384292] goto L384294;
}
procedure `void` `b`(`wb.c` v9 @kind this, `java.lang.String` v10 @kind object, `java.nio.ByteBuffer` v11 @kind object, `int` v12 , `long` v13 ) @signature `Lwb/c;.b:(Ljava/lang/String;Ljava/nio/ByteBuffer;IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L38414c.  v0:= "DartMessenger" @kind object;
  #L384150.  v1:= new `java.lang.StringBuilder`;
  #L384154.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38415a.  v2:= "Received message from Dart over channel '" @kind object;
  #L38415e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384164.  call temp:= `append`(v1, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38416a.  v2:= "'" @kind object;
  #L38416e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384174.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38417a.  v1:= temp @kind object;
  #L38417c.  call `e`(v0, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L384182.  v0:= v9.`wb.c.j` @type ^`java.lang.Object` @kind object;
  #L384186.  @monitorenter v0
  #L384188.  v1:= v9.`wb.c.h` @type ^`java.util.Map` @kind object;
  #L38418c.  call temp:= `get`(v1, v10) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L384192.  v1:= temp @kind object;
  #L384194.  v4:= v1 @kind object;
  #L384196.  v4:= (`wb.c$f`) v4 @kind object;
  #L38419a.  v1:= v9.`wb.c.k` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L38419e.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L3841a4.  v1:= temp;
  #L3841a6.  if v1 == 0 then goto L3841b2;
  #L3841aa.  if v4 != 0 then goto L3841b2;
  #L3841ae.  v1:= 1I;
  #L3841b0.  goto L3841b4;
  #L3841b2.  v1:= 0I;
  #L3841b4.  if v1 == 0 then goto L3841fc;
  #L3841b8.  v2:= v9.`wb.c.i` @type ^`java.util.Map` @kind object;
  #L3841bc.  call temp:= `containsKey`(v2, v10) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L3841c2.  v2:= temp;
  #L3841c4.  if v2 != 0 then goto L3841dc;
  #L3841c8.  v2:= v9.`wb.c.i` @type ^`java.util.Map` @kind object;
  #L3841cc.  v3:= new `java.util.LinkedList`;
  #L3841d0.  call `<init>`(v3) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L3841d6.  call temp:= `put`(v2, v10, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3841dc.  v2:= v9.`wb.c.i` @type ^`java.util.Map` @kind object;
  #L3841e0.  call temp:= `get`(v2, v10) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3841e6.  v2:= temp @kind object;
  #L3841e8.  v2:= (`java.util.List`) v2 @kind object;
  #L3841ec.  v3:= new `wb.c$b`;
  #L3841f0.  call `<init>`(v3, v11, v12, v13) @signature `Lwb/c$b;.<init>:(Ljava/nio/ByteBuffer;IJ)V` @kind direct;
  #L3841f6.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3841fc.  @monitorexit v0
  #L3841fe.  if v1 != 0 then goto L384212;
  #L384202.  v2:= v9 @kind object;
  #L384204.  v3:= v10 @kind object;
  #L384206.  v5:= v11 @kind object;
  #L384208.  v6:= v12;
  #L38420a.  v7:= v13 @kind wide;
  #L38420c.  call `d`(v2, v3, v4, v5, v6, v7) @signature `Lwb/c;.d:(Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @kind direct;
  #L384212.  return @kind void;
  #L384214.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L384216.  @monitorexit v0
  #L384218.  throw v10;
  catch `java.lang.Throwable` @[L384188..L3841fe] goto L384214;
  catch `java.lang.Throwable` @[L384216..L384218] goto L384214;
}
procedure `io.flutter.plugin.common.d$c` `makeBackgroundTaskQueue`(`wb.c` v1 @kind this) @signature `Lwb/c;.makeBackgroundTaskQueue:()Lio/flutter/plugin/common/d$c;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L383fb0.  call temp:= `a`(v1) @signature `Lio/flutter/plugin/common/c;.a:(Lio/flutter/plugin/common/d;)Lio/flutter/plugin/common/d$c;` @kind static;
  #L383fb6.  v0:= temp @kind object;
  #L383fb8.  return v0 @kind object;
}
procedure `io.flutter.plugin.common.d$c` `makeBackgroundTaskQueue`(`wb.c` v2 @kind this, `io.flutter.plugin.common.d$d` v3 @kind object) @signature `Lwb/c;.makeBackgroundTaskQueue:(Lio/flutter/plugin/common/d$d;)Lio/flutter/plugin/common/d$c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L383fcc.  v0:= v2.`wb.c.p` @type ^`wb.c$i` @kind object;
  #L383fd0.  call temp:= `makeBackgroundTaskQueue`(v0, v3) @signature `Lwb/c$i;.makeBackgroundTaskQueue:(Lio/flutter/plugin/common/d$d;)Lwb/c$d;` @kind interface;
  #L383fd6.  v3:= temp @kind object;
  #L383fd8.  v0:= new `wb.c$j`;
  #L383fdc.  v1:= 0I;
  #L383fde.  call `<init>`(v0, v1) @signature `Lwb/c$j;.<init>:(Lwb/c$a;)V` @kind direct;
  #L383fe4.  v1:= v2.`wb.c.o` @type ^`java.util.WeakHashMap` @kind object;
  #L383fe8.  call temp:= `put`(v1, v0, v3) @signature `Ljava/util/WeakHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383fee.  return v0 @kind object;
}
procedure `void` `send`(`wb.c` v2 @kind this, `java.lang.String` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object) @signature `Lwb/c;.send:(Ljava/lang/String;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3843d8.  v0:= new `java.lang.StringBuilder`;
  #L3843dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3843e2.  v1:= "Sending message over channel '" @kind object;
  #L3843e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3843ec.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3843f2.  v1:= "'" @kind object;
  #L3843f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3843fc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384402.  v0:= temp @kind object;
  #L384404.  v1:= "DartMessenger" @kind object;
  #L384408.  call `e`(v1, v0) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L38440e.  v0:= 0I;
  #L384410.  call `send`(v2, v3, v4, v0) @signature `Lwb/c;.send:(Ljava/lang/String;Ljava/nio/ByteBuffer;Lio/flutter/plugin/common/d$b;)V` @kind virtual;
  #L384416.  return @kind void;
}
procedure `void` `send`(`wb.c` v3 @kind this, `java.lang.String` v4 @kind object, `java.nio.ByteBuffer` v5 @kind object, `io.flutter.plugin.common.d$b` v6 @kind object) @signature `Lwb/c;.send:(Ljava/lang/String;Ljava/nio/ByteBuffer;Lio/flutter/plugin/common/d$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L384428.  v0:= new `java.lang.StringBuilder`;
  #L38442c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384432.  v1:= "DartMessenger#send on " @kind object;
  #L384436.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38443c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384442.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384448.  v0:= temp @kind object;
  #L38444a.  call `a`(v0) @signature `Lbd/e;.a:(Ljava/lang/String;)V` @kind static;
  #L384450.  v0:= "DartMessenger" @kind object;
  #L384454.  v1:= new `java.lang.StringBuilder`;
  #L384458.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38445e.  v2:= "Sending message with callback over channel '" @kind object;
  #L384462.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384468.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38446e.  v2:= "'" @kind object;
  #L384472.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384478.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38447e.  v1:= temp @kind object;
  #L384480.  call `e`(v0, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L384486.  v0:= v3.`wb.c.m` @type ^`int`;
  #L38448a.  v1:= v0 + 1;
  #L38448e.  v3.`wb.c.m` @type ^`int` := v1;
  #L384492.  if v6 == 0 then goto L3844a8;
  #L384496.  v1:= v3.`wb.c.l` @type ^`java.util.Map` @kind object;
  #L38449a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3844a0.  v2:= temp @kind object;
  #L3844a2.  call temp:= `put`(v1, v2, v6) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3844a8.  if v5 != 0 then goto L3844b8;
  #L3844ac.  v5:= v3.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3844b0.  call `dispatchEmptyPlatformMessage`(v5, v4, v0) @signature `Lio/flutter/embedding/engine/FlutterJNI;.dispatchEmptyPlatformMessage:(Ljava/lang/String;I)V` @kind virtual;
  #L3844b6.  goto L3844ca;
  #L3844b8.  v6:= v3.`wb.c.g` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L3844bc.  call temp:= `position`(v5) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L3844c2.  v1:= temp;
  #L3844c4.  call `dispatchPlatformMessage`(v6, v4, v5, v1, v0) @signature `Lio/flutter/embedding/engine/FlutterJNI;.dispatchPlatformMessage:(Ljava/lang/String;Ljava/nio/ByteBuffer;II)V` @kind virtual;
  #L3844ca.  call `b`() @signature `Lbd/e;.b:()V` @kind static;
  #L3844d0.  return @kind void;
  #L3844d2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3844d4.  call `b`() @signature `Lbd/e;.b:()V` @kind static;
  #L3844da.  throw v4;
  catch `java.lang.Throwable` @[L384450..L3844ca] goto L3844d2;
}
procedure `void` `setMessageHandler`(`wb.c` v1 @kind this, `java.lang.String` v2 @kind object, `io.flutter.plugin.common.d$a` v3 @kind object) @signature `Lwb/c;.setMessageHandler:(Ljava/lang/String;Lio/flutter/plugin/common/d$a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3844f8.  v0:= 0I;
  #L3844fa.  call `setMessageHandler`(v1, v2, v3, v0) @signature `Lwb/c;.setMessageHandler:(Ljava/lang/String;Lio/flutter/plugin/common/d$a;Lio/flutter/plugin/common/d$c;)V` @kind virtual;
  #L384500.  return @kind void;
}
procedure `void` `setMessageHandler`(`wb.c` v8 @kind this, `java.lang.String` v9 @kind object, `io.flutter.plugin.common.d$a` v10 @kind object, `io.flutter.plugin.common.d$c` v11 @kind object) @signature `Lwb/c;.setMessageHandler:(Ljava/lang/String;Lio/flutter/plugin/common/d$a;Lio/flutter/plugin/common/d$c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L384514.  if v10 != 0 then goto L384568;
  #L384518.  v10:= "DartMessenger" @kind object;
  #L38451c.  v11:= new `java.lang.StringBuilder`;
  #L384520.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384526.  v0:= "Removing handler for channel '" @kind object;
  #L38452a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384530.  call temp:= `append`(v11, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384536.  v0:= "'" @kind object;
  #L38453a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384540.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384546.  v11:= temp @kind object;
  #L384548.  call `e`(v10, v11) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L38454e.  v0:= v8.`wb.c.j` @type ^`java.lang.Object` @kind object;
  #L384552.  @monitorenter v0
  #L384554.  v10:= v8.`wb.c.h` @type ^`java.util.Map` @kind object;
  #L384558.  call temp:= `remove`(v10, v9) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38455e.  @monitorexit v0
  #L384560.  return @kind void;
  #L384562.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L384564.  @monitorexit v0
  #L384566.  throw v9;
  #L384568.  v0:= 0I;
  #L38456a.  if v11 == 0 then goto L384596;
  #L38456e.  v0:= v8.`wb.c.o` @type ^`java.util.WeakHashMap` @kind object;
  #L384572.  call temp:= `get`(v0, v11) @signature `Ljava/util/WeakHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L384578.  v11:= temp @kind object;
  #L38457a.  v0:= v11 @kind object;
  #L38457c.  v0:= (`wb.c$d`) v0 @kind object;
  #L384580.  if v0 == 0 then goto L384586;
  #L384584.  goto L384596;
  #L384586.  v9:= new `java.lang.IllegalArgumentException`;
  #L38458a.  v10:= "Unrecognized TaskQueue, use BinaryMessenger to create your TaskQueue (ex makeBackgroundTaskQueue)." @kind object;
  #L38458e.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L384594.  throw v9;
  #L384596.  v11:= "DartMessenger" @kind object;
  #L38459a.  v1:= new `java.lang.StringBuilder`;
  #L38459e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3845a4.  v2:= "Setting handler for channel '" @kind object;
  #L3845a8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3845ae.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3845b4.  v2:= "'" @kind object;
  #L3845b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3845be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3845c4.  v1:= temp @kind object;
  #L3845c6.  call `e`(v11, v1) @signature `Lvb/b;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L3845cc.  v11:= v8.`wb.c.j` @type ^`java.lang.Object` @kind object;
  #L3845d0.  @monitorenter v11
  #L3845d2.  v1:= v8.`wb.c.h` @type ^`java.util.Map` @kind object;
  #L3845d6.  v2:= new `wb.c$f`;
  #L3845da.  call `<init>`(v2, v10, v0) @signature `Lwb/c$f;.<init>:(Lio/flutter/plugin/common/d$a;Lwb/c$d;)V` @kind direct;
  #L3845e0.  call temp:= `put`(v1, v9, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3845e6.  v10:= v8.`wb.c.i` @type ^`java.util.Map` @kind object;
  #L3845ea.  call temp:= `remove`(v10, v9) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3845f0.  v10:= temp @kind object;
  #L3845f2.  v10:= (`java.util.List`) v10 @kind object;
  #L3845f6.  if v10 != 0 then goto L3845fe;
  #L3845fa.  @monitorexit v11
  #L3845fc.  return @kind void;
  #L3845fe.  @monitorexit v11
  #L384600.  call temp:= `iterator`(v10) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L384606.  v10:= temp @kind object;
  #L384608.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L38460e.  v11:= temp;
  #L384610.  if v11 == 0 then goto L38464a;
  #L384614.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L38461a.  v11:= temp @kind object;
  #L38461c.  v11:= (`wb.c$b`) v11 @kind object;
  #L384620.  v0:= v8.`wb.c.h` @type ^`java.util.Map` @kind object;
  #L384624.  call temp:= `get`(v0, v9) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38462a.  v0:= temp @kind object;
  #L38462c.  v3:= v0 @kind object;
  #L38462e.  v3:= (`wb.c$f`) v3 @kind object;
  #L384632.  v4:= v11.`wb.c$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L384636.  v5:= v11.`wb.c$b.b` @type ^`int`;
  #L38463a.  v6:= v11.`wb.c$b.c` @type ^`long` @kind wide;
  #L38463e.  v1:= v8 @kind object;
  #L384640.  v2:= v9 @kind object;
  #L384642.  call `d`(v1, v2, v3, v4, v5, v6) @signature `Lwb/c;.d:(Ljava/lang/String;Lwb/c$f;Ljava/nio/ByteBuffer;IJ)V` @kind direct;
  #L384648.  goto L384608;
  #L38464a.  return @kind void;
  #L38464c.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L38464e.  @monitorexit v11
  #L384650.  throw v9;
  catch `java.lang.Throwable` @[L384554..L384566] goto L384562;
  catch `java.lang.Throwable` @[L3845d2..L384600] goto L38464c;
  catch `java.lang.Throwable` @[L38464e..L384650] goto L38464c;
}
