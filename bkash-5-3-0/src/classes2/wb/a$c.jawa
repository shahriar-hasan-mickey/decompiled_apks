record `wb.a$c` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `wb.a$c.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `wb.a$c.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `wb.a$c.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`wb.a$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lwb/a$c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L383720.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383726.  v0.`wb.a$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L38372a.  v1:= 0I;
  #L38372c.  v0.`wb.a$c.b` @type ^`java.lang.String` := v1 @kind object;
  #L383730.  v0.`wb.a$c.c` @type ^`java.lang.String` := v2 @kind object;
  #L383734.  return @kind void;
}
procedure `void` `<init>`(`wb.a$c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lwb/a$c;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L383748.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38374e.  v0.`wb.a$c.a` @type ^`java.lang.String` := v1 @kind object;
  #L383752.  v0.`wb.a$c.b` @type ^`java.lang.String` := v2 @kind object;
  #L383756.  v0.`wb.a$c.c` @type ^`java.lang.String` := v3 @kind object;
  #L38375a.  return @kind void;
}
procedure `boolean` `equals`(`wb.a$c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lwb/a$c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L383638.  if v3 != v4 then goto L383640;
  #L38363c.  v4:= 1I;
  #L38363e.  return v4;
  #L383640.  v0:= 0I;
  #L383642.  if v4 == 0 then goto L383684;
  #L383646.  v1:= constclass @type ^`wb.a$c` @kind object;
  #L38364a.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L383650.  v2:= temp @kind object;
  #L383652.  if v1 == v2 then goto L383658;
  #L383656.  goto L383684;
  #L383658.  v4:= (`wb.a$c`) v4 @kind object;
  #L38365c.  v1:= v3.`wb.a$c.a` @type ^`java.lang.String` @kind object;
  #L383660.  v2:= v4.`wb.a$c.a` @type ^`java.lang.String` @kind object;
  #L383664.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L38366a.  v1:= temp;
  #L38366c.  if v1 != 0 then goto L383672;
  #L383670.  return v0;
  #L383672.  v0:= v3.`wb.a$c.c` @type ^`java.lang.String` @kind object;
  #L383676.  v4:= v4.`wb.a$c.c` @type ^`java.lang.String` @kind object;
  #L38367a.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L383680.  v4:= temp;
  #L383682.  return v4;
  #L383684.  return v0;
}
procedure `int` `hashCode`(`wb.a$c` v2 @kind this) @signature `Lwb/a$c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L383698.  v0:= v2.`wb.a$c.a` @type ^`java.lang.String` @kind object;
  #L38369c.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3836a2.  v0:= temp;
  #L3836a4.  v0:= v0 * 31;
  #L3836a8.  v1:= v2.`wb.a$c.c` @type ^`java.lang.String` @kind object;
  #L3836ac.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3836b2.  v1:= temp;
  #L3836b4.  v0:= v0 + v1 @kind int;
  #L3836b6.  return v0;
}
procedure `java.lang.String` `toString`(`wb.a$c` v2 @kind this) @signature `Lwb/a$c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3836c8.  v0:= new `java.lang.StringBuilder`;
  #L3836cc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3836d2.  v1:= "DartEntrypoint( bundle path: " @kind object;
  #L3836d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3836dc.  v1:= v2.`wb.a$c.a` @type ^`java.lang.String` @kind object;
  #L3836e0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3836e6.  v1:= ", function: " @kind object;
  #L3836ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3836f0.  v1:= v2.`wb.a$c.c` @type ^`java.lang.String` @kind object;
  #L3836f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3836fa.  v1:= " )" @kind object;
  #L3836fe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383704.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L38370a.  v0:= temp @kind object;
  #L38370c.  return v0 @kind object;
}
