record `wb.c$g` @kind class @AccessFlag  extends `io.flutter.plugin.common.d$b` @kind interface {
  `io.flutter.embedding.engine.FlutterJNI` `wb.c$g.a` @AccessFlag PRIVATE_FINAL;
  `int` `wb.c$g.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicBoolean` `wb.c$g.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`wb.c$g` v2 @kind this, `io.flutter.embedding.engine.FlutterJNI` v3 @kind object, `int` v4 ) @signature `Lwb/c$g;.<init>:(Lio/flutter/embedding/engine/FlutterJNI;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L383d04.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L383d0a.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L383d0e.  v1:= 0I;
  #L383d10.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L383d16.  v2.`wb.c$g.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v0 @kind object;
  #L383d1a.  v2.`wb.c$g.a` @type ^`io.flutter.embedding.engine.FlutterJNI` := v3 @kind object;
  #L383d1e.  v2.`wb.c$g.b` @type ^`int` := v4;
  #L383d22.  return @kind void;
}
procedure `void` `a`(`wb.c$g` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lwb/c$g;.a:(Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L383d34.  v0:= v3.`wb.c$g.c` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L383d38.  v1:= 1I;
  #L383d3a.  call temp:= `getAndSet`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.getAndSet:(Z)Z` @kind virtual;
  #L383d40.  v0:= temp;
  #L383d42.  if v0 != 0 then goto L383d72;
  #L383d46.  if v4 != 0 then goto L383d5a;
  #L383d4a.  v4:= v3.`wb.c$g.a` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L383d4e.  v0:= v3.`wb.c$g.b` @type ^`int`;
  #L383d52.  call `invokePlatformMessageEmptyResponseCallback`(v4, v0) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageEmptyResponseCallback:(I)V` @kind virtual;
  #L383d58.  goto L383d70;
  #L383d5a.  v0:= v3.`wb.c$g.a` @type ^`io.flutter.embedding.engine.FlutterJNI` @kind object;
  #L383d5e.  v1:= v3.`wb.c$g.b` @type ^`int`;
  #L383d62.  call temp:= `position`(v4) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L383d68.  v2:= temp;
  #L383d6a.  call `invokePlatformMessageResponseCallback`(v0, v1, v4, v2) @signature `Lio/flutter/embedding/engine/FlutterJNI;.invokePlatformMessageResponseCallback:(ILjava/nio/ByteBuffer;I)V` @kind virtual;
  #L383d70.  return @kind void;
  #L383d72.  v4:= new `java.lang.IllegalStateException`;
  #L383d76.  v0:= "Reply already submitted" @kind object;
  #L383d7a.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L383d80.  throw v4;
}
