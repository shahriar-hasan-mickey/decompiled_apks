record `com.zoloz.zhub.common.factor.model.FactorNextRequest` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `com.zoloz.zhub.common.factor.model.FactorNextRequest.bizId` @AccessFlag PUBLIC;
  `java.lang.String` `com.zoloz.zhub.common.factor.model.FactorNextRequest.hummerId` @AccessFlag PUBLIC;
  `java.lang.Integer` `com.zoloz.zhub.common.factor.model.FactorNextRequest.nextIndex` @AccessFlag PUBLIC;
  `java.util.Map` `com.zoloz.zhub.common.factor.model.FactorNextRequest.params` @AccessFlag PUBLIC;
  `java.lang.String` `com.zoloz.zhub.common.factor.model.FactorNextRequest.versionToken` @AccessFlag PUBLIC;
  `java.util.List` `com.zoloz.zhub.common.factor.model.FactorNextRequest.zStack` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.zoloz.zhub.common.factor.model.FactorNextRequest` v2 @kind this) @signature `Lcom/zoloz/zhub/common/factor/model/FactorNextRequest;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a7568.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a756e.  v0:= "" @kind object;
  #L2a7572.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.hummerId` @type ^`java.lang.String` := v0 @kind object;
  #L2a7576.  v1:= 0I;
  #L2a7578.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2a757e.  v1:= temp @kind object;
  #L2a7580.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.nextIndex` @type ^`java.lang.Integer` := v1 @kind object;
  #L2a7584.  v1:= new `java.util.HashMap`;
  #L2a7588.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2a758e.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.params` @type ^`java.util.Map` := v1 @kind object;
  #L2a7592.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.bizId` @type ^`java.lang.String` := v0 @kind object;
  #L2a7596.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.versionToken` @type ^`java.lang.String` := v0 @kind object;
  #L2a759a.  v0:= new `java.util.ArrayList`;
  #L2a759e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a75a4.  v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.zStack` @type ^`java.util.List` := v0 @kind object;
  #L2a75a8.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.zoloz.zhub.common.factor.model.FactorNextRequest` v2 @kind this) @signature `Lcom/zoloz/zhub/common/factor/model/FactorNextRequest;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a74b0.  v0:= new `java.lang.StringBuilder`;
  #L2a74b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a74ba.  v1:= "FactorNextRequest{hummerId = " @kind object;
  #L2a74be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74c4.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.hummerId` @type ^`java.lang.String` @kind object;
  #L2a74c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74ce.  v1:= ", nextIndex = " @kind object;
  #L2a74d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74d8.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.nextIndex` @type ^`java.lang.Integer` @kind object;
  #L2a74dc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74e2.  v1:= ", bizId = " @kind object;
  #L2a74e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74ec.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.bizId` @type ^`java.lang.String` @kind object;
  #L2a74f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a74f6.  v1:= ", versionToken = " @kind object;
  #L2a74fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7500.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.versionToken` @type ^`java.lang.String` @kind object;
  #L2a7504.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a750a.  v1:= ", zStack = " @kind object;
  #L2a750e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7514.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.zStack` @type ^`java.util.List` @kind object;
  #L2a7518.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a751e.  v1:= temp @kind object;
  #L2a7520.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7526.  v1:= ", params = " @kind object;
  #L2a752a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7530.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextRequest.params` @type ^`java.util.Map` @kind object;
  #L2a7534.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a753a.  v1:= temp @kind object;
  #L2a753c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7542.  v1:= 125I;
  #L2a7546.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a754c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a7552.  v0:= temp @kind object;
  #L2a7554.  return v0 @kind object;
}
