record `com.zoloz.zhub.common.factor.model.FactorNextResponse` @kind class @AccessFlag PUBLIC {
  `java.lang.Integer` `com.zoloz.zhub.common.factor.model.FactorNextResponse.nextIndex` @AccessFlag PUBLIC;
  `java.util.List` `com.zoloz.zhub.common.factor.model.FactorNextResponse.response` @AccessFlag PUBLIC;
  `java.lang.String` `com.zoloz.zhub.common.factor.model.FactorNextResponse.versionToken` @AccessFlag PUBLIC;
  `java.util.List` `com.zoloz.zhub.common.factor.model.FactorNextResponse.zStack` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.zoloz.zhub.common.factor.model.FactorNextResponse` v1 @kind this) @signature `Lcom/zoloz/zhub/common/factor/model/FactorNextResponse;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a7700.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a7706.  v0:= "" @kind object;
  #L2a770a.  v1.`com.zoloz.zhub.common.factor.model.FactorNextResponse.versionToken` @type ^`java.lang.String` := v0 @kind object;
  #L2a770e.  v0:= new `java.util.ArrayList`;
  #L2a7712.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a7718.  v1.`com.zoloz.zhub.common.factor.model.FactorNextResponse.response` @type ^`java.util.List` := v0 @kind object;
  #L2a771c.  v0:= new `java.util.ArrayList`;
  #L2a7720.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a7726.  v1.`com.zoloz.zhub.common.factor.model.FactorNextResponse.zStack` @type ^`java.util.List` := v0 @kind object;
  #L2a772a.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.zoloz.zhub.common.factor.model.FactorNextResponse` v2 @kind this) @signature `Lcom/zoloz/zhub/common/factor/model/FactorNextResponse;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a7670.  v0:= new `java.lang.StringBuilder`;
  #L2a7674.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a767a.  v1:= "FactorNextResponse{nextIndex = " @kind object;
  #L2a767e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7684.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextResponse.nextIndex` @type ^`java.lang.Integer` @kind object;
  #L2a7688.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a768e.  v1:= ", versionToken = " @kind object;
  #L2a7692.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7698.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextResponse.versionToken` @type ^`java.lang.String` @kind object;
  #L2a769c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76a2.  v1:= ", response = " @kind object;
  #L2a76a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76ac.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextResponse.response` @type ^`java.util.List` @kind object;
  #L2a76b0.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a76b6.  v1:= temp @kind object;
  #L2a76b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76be.  v1:= ", zStack = " @kind object;
  #L2a76c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76c8.  v1:= v2.`com.zoloz.zhub.common.factor.model.FactorNextResponse.zStack` @type ^`java.util.List` @kind object;
  #L2a76cc.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a76d2.  v1:= temp @kind object;
  #L2a76d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76da.  v1:= 125I;
  #L2a76de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a76e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a76ea.  v0:= temp @kind object;
  #L2a76ec.  return v0 @kind object;
}
