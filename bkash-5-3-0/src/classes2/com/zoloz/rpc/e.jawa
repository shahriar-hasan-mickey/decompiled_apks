record `com.zoloz.rpc.e` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@com.zoloz.rpc.e.a` @AccessFlag PUBLIC_STATIC;
global `char`[] `@@com.zoloz.rpc.e.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/zoloz/rpc/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a6294.  v0:= "0123456789ABCDEF" @kind object;
  #L2a6298.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L2a629e.  v0:= temp @kind object;
  #L2a62a0.  `@@com.zoloz.rpc.e.b` @type ^`char`[] := v0 @kind object;
  #L2a62a4.  return @kind void;
}
procedure `java.lang.String` `a`(`java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/zoloz/rpc/e;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2a6100.  v0:= "HmacSHA1" @kind object;
  #L2a6104.  call temp:= `getBytes`(v3) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L2a610a.  v3:= temp @kind object;
  #L2a610c.  v1:= new `javax.crypto.spec.SecretKeySpec`;
  #L2a6110.  call `<init>`(v1, v3, v0) @signature `Ljavax/crypto/spec/SecretKeySpec;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L2a6116.  call temp:= `getInstance`(v0) @signature `Ljavax/crypto/Mac;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Mac;` @kind static;
  #L2a611c.  v3:= temp @kind object;
  #L2a611e.  call `init`(v3, v1) @signature `Ljavax/crypto/Mac;.init:(Ljava/security/Key;)V` @kind virtual;
  #L2a6124.  call temp:= `getBytes`(v2) @signature `Ljava/lang/String;.getBytes:()[B` @kind virtual;
  #L2a612a.  v2:= temp @kind object;
  #L2a612c.  call temp:= `doFinal`(v3, v2) @signature `Ljavax/crypto/Mac;.doFinal:([B)[B` @kind virtual;
  #L2a6132.  v2:= temp @kind object;
  #L2a6134.  call temp:= `c`(v2) @signature `Lcom/zoloz/rpc/e;.c:([B)Ljava/lang/String;` @kind static;
  #L2a613a.  v2:= temp @kind object;
  #L2a613c.  return v2 @kind object;
  #L2a613e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2a6140.  call temp:= `getMessage`(v2) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2a6146.  v2:= "" @kind object;
  #L2a614a.  return v2 @kind object;
  catch `java.lang.Exception` @[L2a6104..L2a613c] goto L2a613e;
}
procedure `java.lang.String` `b`(`java.lang.String` v4 @kind object, `java.util.HashMap` v5 @kind object) @signature `Lcom/zoloz/rpc/e;.b:(Ljava/lang/String;Ljava/util/HashMap;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a616c.  if v5 != 0 then goto L2a6176;
  #L2a6170.  v4:= "" @kind object;
  #L2a6174.  return v4 @kind object;
  #L2a6176.  v0:= new `java.util.ArrayList`;
  #L2a617a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a6180.  call temp:= `entrySet`(v5) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L2a6186.  v5:= temp @kind object;
  #L2a6188.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a618e.  v5:= temp @kind object;
  #L2a6190.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a6196.  v1:= temp;
  #L2a6198.  if v1 == 0 then goto L2a61e6;
  #L2a619c.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a61a2.  v1:= temp @kind object;
  #L2a61a4.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L2a61a8.  v2:= new `java.lang.StringBuilder`;
  #L2a61ac.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a61b2.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2a61b8.  v3:= temp @kind object;
  #L2a61ba.  v3:= (`java.lang.String`) v3 @kind object;
  #L2a61be.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a61c4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2a61ca.  v1:= temp @kind object;
  #L2a61cc.  v1:= (`java.lang.String`) v1 @kind object;
  #L2a61d0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a61d6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a61dc.  v1:= temp @kind object;
  #L2a61de.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a61e4.  goto L2a6190;
  #L2a61e6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a61ec.  v5:= temp;
  #L2a61ee.  v5:= v5 + 1;
  #L2a61f2.  v5:= new `java.lang.String`[v5];
  #L2a61f6.  v1:= 0I;
  #L2a61f8.  v5[v1]:= v4 @kind object;
  #L2a61fc.  call `sort`(v0) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;)V` @kind static;
  #L2a6202.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a6208.  v4:= temp;
  #L2a620a.  if v1 >= v4 then goto L2a6226;
  #L2a620e.  v4:= v1 + 1;
  #L2a6212.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a6218.  v1:= temp @kind object;
  #L2a621a.  v1:= (`java.lang.String`) v1 @kind object;
  #L2a621e.  v5[v4]:= v1 @kind object;
  #L2a6222.  v1:= v4;
  #L2a6224.  goto L2a6202;
  #L2a6226.  call temp:= `d`(v5) @signature `Lcom/zoloz/rpc/e;.d:([Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2a622c.  v4:= temp @kind object;
  #L2a622e.  return v4 @kind object;
}
procedure `java.lang.String` `c`(`byte`[] v5 @kind object) @signature `Lcom/zoloz/rpc/e;.c:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a6094.  if v5 != 0 then goto L2a609c;
  #L2a6098.  v5:= 0I;
  #L2a609a.  return v5 @kind object;
  #L2a609c.  v0:= length @variable v5;
  #L2a609e.  v0:= v0 * 2;
  #L2a60a2.  v0:= new `char`[v0];
  #L2a60a6.  v1:= 0I;
  #L2a60a8.  v2:= length @variable v5;
  #L2a60aa.  if v1 >= v2 then goto L2a60e4;
  #L2a60ae.  v2:= v1 * 2;
  #L2a60b2.  v3:= `@@com.zoloz.rpc.e.b` @type ^`char`[] @kind object;
  #L2a60b6.  v4:= v5[v1] @kind byte;
  #L2a60ba.  v4:= v4 ^& 240;
  #L2a60be.  v4:= v4 ^> 4;
  #L2a60c2.  v4:= v3[v4] @kind char;
  #L2a60c6.  v0[v2]:= v4 @kind char;
  #L2a60ca.  v2:= v2 + 1;
  #L2a60ce.  v4:= v5[v1] @kind byte;
  #L2a60d2.  v4:= v4 ^& 15;
  #L2a60d6.  v3:= v3[v4] @kind char;
  #L2a60da.  v0[v2]:= v3 @kind char;
  #L2a60de.  v1:= v1 + 1;
  #L2a60e2.  goto L2a60a8;
  #L2a60e4.  v5:= new `java.lang.String`;
  #L2a60e8.  call `<init>`(v5, v0) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L2a60ee.  return v5 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String`[] v4 @kind object) @signature `Lcom/zoloz/rpc/e;.d:([Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a6240.  v0:= new `java.lang.StringBuffer`;
  #L2a6244.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L2a624a.  v1:= length @variable v4;
  #L2a624c.  v2:= 0I;
  #L2a624e.  if v2 >= v1 then goto L2a6262;
  #L2a6252.  v3:= v4[v2] @kind object;
  #L2a6256.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L2a625c.  v2:= v2 + 1;
  #L2a6260.  goto L2a624e;
  #L2a6262.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a6268.  v4:= temp @kind object;
  #L2a626a.  v0:= `@@com.zoloz.rpc.e.a` @type ^`java.lang.String` @kind object;
  #L2a626e.  call temp:= `a`(v4, v0) @signature `Lcom/zoloz/rpc/e;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2a6274.  v4:= temp @kind object;
  #L2a6276.  if v4 == 0 then goto L2a6282;
  #L2a627a.  call temp:= `toUpperCase`(v4) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L2a6280.  v4:= temp @kind object;
  #L2a6282.  return v4 @kind object;
}
