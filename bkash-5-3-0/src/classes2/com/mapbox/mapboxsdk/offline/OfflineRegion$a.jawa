record `com.mapbox.mapboxsdk.offline.OfflineRegion$a` @kind class @AccessFlag  extends `com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver` @kind interface {
  `com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver` `com.mapbox.mapboxsdk.offline.OfflineRegion$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.mapbox.mapboxsdk.offline.OfflineRegion` `com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.offline.OfflineRegion$a` v0 @kind this, `com.mapbox.mapboxsdk.offline.OfflineRegion` v1 @kind object, `com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;Lcom/mapbox/mapboxsdk/offline/OfflineRegion$OfflineRegionObserver;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L276d54.  v0.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` := v1 @kind object;
  #L276d58.  v0.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.a` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion$OfflineRegionObserver` := v2 @kind object;
  #L276d5c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L276d62.  return @kind void;
}
procedure `void` `mapboxTileCountLimitExceeded`(`com.mapbox.mapboxsdk.offline.OfflineRegion$a` v2 @kind this, `long` v3 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;.mapboxTileCountLimitExceeded:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276d74.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276d78.  call temp:= `a`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.a:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Z` @kind static;
  #L276d7e.  v0:= temp;
  #L276d80.  if v0 == 0 then goto L276da0;
  #L276d84.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276d88.  call temp:= `b`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.b:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Landroid/os/Handler;` @kind static;
  #L276d8e.  v0:= temp @kind object;
  #L276d90.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineRegion$a$c`;
  #L276d94.  call `<init>`(v1, v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a$c;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;J)V` @kind direct;
  #L276d9a.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L276da0.  return @kind void;
}
procedure `void` `onError`(`com.mapbox.mapboxsdk.offline.OfflineRegion$a` v2 @kind this, `com.mapbox.mapboxsdk.offline.OfflineRegionError` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;.onError:(Lcom/mapbox/mapboxsdk/offline/OfflineRegionError;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276db4.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276db8.  call temp:= `a`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.a:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Z` @kind static;
  #L276dbe.  v0:= temp;
  #L276dc0.  if v0 == 0 then goto L276de0;
  #L276dc4.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276dc8.  call temp:= `b`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.b:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Landroid/os/Handler;` @kind static;
  #L276dce.  v0:= temp @kind object;
  #L276dd0.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineRegion$a$b`;
  #L276dd4.  call `<init>`(v1, v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a$b;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;Lcom/mapbox/mapboxsdk/offline/OfflineRegionError;)V` @kind direct;
  #L276dda.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L276de0.  return @kind void;
}
procedure `void` `onStatusChanged`(`com.mapbox.mapboxsdk.offline.OfflineRegion$a` v2 @kind this, `com.mapbox.mapboxsdk.offline.OfflineRegionStatus` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;.onStatusChanged:(Lcom/mapbox/mapboxsdk/offline/OfflineRegionStatus;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276df4.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276df8.  call temp:= `a`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.a:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Z` @kind static;
  #L276dfe.  v0:= temp;
  #L276e00.  if v0 == 0 then goto L276e20;
  #L276e04.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineRegion$a.b` @type ^`com.mapbox.mapboxsdk.offline.OfflineRegion` @kind object;
  #L276e08.  call temp:= `b`(v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion;.b:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion;)Landroid/os/Handler;` @kind static;
  #L276e0e.  v0:= temp @kind object;
  #L276e10.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineRegion$a$a`;
  #L276e14.  call `<init>`(v1, v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a$a;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineRegion$a;Lcom/mapbox/mapboxsdk/offline/OfflineRegionStatus;)V` @kind direct;
  #L276e1a.  call temp:= `post`(v0, v1) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L276e20.  return @kind void;
}
