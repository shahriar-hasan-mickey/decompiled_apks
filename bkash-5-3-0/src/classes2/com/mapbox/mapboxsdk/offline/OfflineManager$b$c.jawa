record `com.mapbox.mapboxsdk.offline.OfflineManager$b$c` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `com.mapbox.mapboxsdk.offline.OfflineManager$b$c.g` @AccessFlag FINAL_SYNTHETIC;
  `com.mapbox.mapboxsdk.offline.OfflineManager$b` `com.mapbox.mapboxsdk.offline.OfflineManager$b$c.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.offline.OfflineManager$b$c` v0 @kind this, `com.mapbox.mapboxsdk.offline.OfflineManager$b` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$b$c;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$b;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L276354.  v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b$c.h` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$b` := v1 @kind object;
  #L276358.  v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b$c.g` @type ^`java.lang.String` := v2 @kind object;
  #L27635c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L276362.  return @kind void;
}
procedure `void` `run`(`com.mapbox.mapboxsdk.offline.OfflineManager$b$c` v2 @kind this) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$b$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276374.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager$b$c.h` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$b` @kind object;
  #L276378.  v0:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b.h` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` @kind object;
  #L27637c.  v1:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager$b$c.g` @type ^`java.lang.String` @kind object;
  #L276380.  call `onError`(v0, v1) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;.onError:(Ljava/lang/String;)V` @kind interface;
  #L276386.  return @kind void;
}
