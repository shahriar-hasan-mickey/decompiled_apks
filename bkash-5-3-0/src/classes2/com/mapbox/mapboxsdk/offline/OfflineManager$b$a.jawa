record `com.mapbox.mapboxsdk.offline.OfflineManager$b$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.mapbox.mapboxsdk.offline.OfflineManager$b` `com.mapbox.mapboxsdk.offline.OfflineManager$b$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.offline.OfflineManager$b$a` v0 @kind this, `com.mapbox.mapboxsdk.offline.OfflineManager$b` v1 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$b$a;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2762c0.  v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b$a.g` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$b` := v1 @kind object;
  #L2762c4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2762ca.  return @kind void;
}
procedure `void` `run`(`com.mapbox.mapboxsdk.offline.OfflineManager$b$a` v4 @kind this) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2762dc.  v0:= v4.`com.mapbox.mapboxsdk.offline.OfflineManager$b$a.g` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$b` @kind object;
  #L2762e0.  v1:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b.i` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager` @kind object;
  #L2762e4.  v2:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b.g` @type ^`java.io.File` @kind object;
  #L2762e8.  v0:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager$b.h` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` @kind object;
  #L2762ec.  v3:= 0I;
  #L2762ee.  call `c`(v1, v2, v0, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.c:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Ljava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;Z)V` @kind static;
  #L2762f4.  return @kind void;
}
