record `com.mapbox.mapboxsdk.offline.OfflineManager` @kind class @AccessFlag PUBLIC {
  `com.mapbox.mapboxsdk.storage.FileSource` `com.mapbox.mapboxsdk.offline.OfflineManager.a` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.mapbox.mapboxsdk.offline.OfflineManager.b` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.mapbox.mapboxsdk.offline.OfflineManager.c` @AccessFlag PRIVATE;
  `long` `com.mapbox.mapboxsdk.offline.OfflineManager.nativePtr` @AccessFlag PRIVATE;
}
global `com.mapbox.mapboxsdk.offline.OfflineManager` `@@com.mapbox.mapboxsdk.offline.OfflineManager.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L276950.  call `a`() @signature `Lcom/mapbox/mapboxsdk/b;.a:()V` @kind static;
  #L276956.  return @kind void;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.offline.OfflineManager` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.<init>:(Landroid/content/Context;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L276968.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L27696e.  v0:= new `android.os.Handler`;
  #L276972.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L276978.  v1:= temp @kind object;
  #L27697a.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L276980.  v2.`com.mapbox.mapboxsdk.offline.OfflineManager.b` @type ^`android.os.Handler` := v0 @kind object;
  #L276984.  call temp:= `getApplicationContext`(v3) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L27698a.  v3:= temp @kind object;
  #L27698c.  v2.`com.mapbox.mapboxsdk.offline.OfflineManager.c` @type ^`android.content.Context` := v3 @kind object;
  #L276990.  call temp:= `g`(v3) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.g:(Landroid/content/Context;)Lcom/mapbox/mapboxsdk/storage/FileSource;` @kind static;
  #L276996.  v3:= temp @kind object;
  #L276998.  v2.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` := v3 @kind object;
  #L27699c.  call `initialize`(v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.initialize:(Lcom/mapbox/mapboxsdk/storage/FileSource;)V` @kind direct;
  #L2769a2.  v3:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.c` @type ^`android.content.Context` @kind object;
  #L2769a6.  call `h`(v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.h:(Landroid/content/Context;)V` @kind direct;
  #L2769ac.  return @kind void;
}
procedure `com.mapbox.mapboxsdk.storage.FileSource` `a`(`com.mapbox.mapboxsdk.offline.OfflineManager` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.a:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;)Lcom/mapbox/mapboxsdk/storage/FileSource;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L276938.  v0:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L27693c.  return v0 @kind object;
}
procedure `android.os.Handler` `b`(`com.mapbox.mapboxsdk.offline.OfflineManager` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.b:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;)Landroid/os/Handler;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2768d8.  v0:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager.b` @type ^`android.os.Handler` @kind object;
  #L2768dc.  return v0 @kind object;
}
procedure `void` `c`(`com.mapbox.mapboxsdk.offline.OfflineManager` v0 @kind object, `java.io.File` v1 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` v2 @kind object, `boolean` v3 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.c:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Ljava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;Z)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2769c0.  call `l`(v0, v1, v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.l:(Ljava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;Z)V` @kind direct;
  #L2769c6.  return @kind void;
}
procedure `void` `createOfflineRegion`(`com.mapbox.mapboxsdk.storage.FileSource` v0 @kind object, `com.mapbox.mapboxsdk.offline.OfflineRegionDefinition` v1 @kind object, `byte`[] v2 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.createOfflineRegion:(Lcom/mapbox/mapboxsdk/storage/FileSource;Lcom/mapbox/mapboxsdk/offline/OfflineRegionDefinition;[BLcom/mapbox/mapboxsdk/offline/OfflineManager$CreateOfflineRegionCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `android.content.Context` `d`(`com.mapbox.mapboxsdk.offline.OfflineManager` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.d:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;)Landroid/content/Context;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2768c0.  v0:= v0.`com.mapbox.mapboxsdk.offline.OfflineManager.c` @type ^`android.content.Context` @kind object;
  #L2768c4.  return v0 @kind object;
}
procedure `void` `e`(`java.io.File` v0 @kind object, `java.io.File` v1 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.e:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2769d8.  call `f`(v0, v1) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.f:(Ljava/io/File;Ljava/io/File;)V` @kind static;
  #L2769de.  return @kind void;
}
procedure `void` `f`(`java.io.File` v9 @kind object, `java.io.File` v10 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.f:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2769f0.  call temp:= `exists`(v10) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L2769f6.  v0:= temp;
  #L2769f8.  if v0 != 0 then goto L276a1a;
  #L2769fc.  call temp:= `createNewFile`(v10) @signature `Ljava/io/File;.createNewFile:()Z` @kind virtual;
  #L276a02.  v0:= temp;
  #L276a04.  if v0 == 0 then goto L276a0a;
  #L276a08.  goto L276a1a;
  #L276a0a.  v9:= new `java.io.IOException`;
  #L276a0e.  v10:= "Unable to copy database file for merge." @kind object;
  #L276a12.  call `<init>`(v9, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L276a18.  throw v9;
  #L276a1a.  v0:= 0I;
  #L276a1c.  v1:= new `java.io.FileInputStream`;
  #L276a20.  call `<init>`(v1, v9) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L276a26.  call temp:= `getChannel`(v1) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L276a2c.  v9:= temp @kind object;
  #L276a2e.  v1:= new `java.io.FileOutputStream`;
  #L276a32.  call `<init>`(v1, v10) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L276a38.  call temp:= `getChannel`(v1) @signature `Ljava/io/FileOutputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L276a3e.  v0:= temp @kind object;
  #L276a40.  v4:= 0L;
  #L276a44.  call temp:= `size`(v9) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L276a4a.  v6:= temp @kind wide;
  #L276a4c.  v2:= v0 @kind object;
  #L276a4e.  v3:= v9 @kind object;
  #L276a50.  call temp:= `transferFrom`(v2, v3, v4, v6) @signature `Ljava/nio/channels/FileChannel;.transferFrom:(Ljava/nio/channels/ReadableByteChannel;JJ)J` @kind virtual;
  #L276a56.  call `close`(v9) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L276a5c.  call `close`(v0) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L276a62.  return @kind void;
  #L276a64.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276a66.  v8:= v0 @kind object;
  #L276a68.  v0:= v9 @kind object;
  #L276a6a.  v9:= v8 @kind object;
  #L276a6c.  goto L276ab0;
  #L276a6e.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L276a70.  v8:= v0 @kind object;
  #L276a72.  v0:= v9 @kind object;
  #L276a74.  v9:= v8 @kind object;
  #L276a76.  goto L276a82;
  #L276a78.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276a7a.  v9:= v0 @kind object;
  #L276a7c.  goto L276ab0;
  #L276a7e.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L276a80.  v9:= v0 @kind object;
  #L276a82.  v1:= new `java.io.IOException`;
  #L276a86.  v2:= "Unable to copy database file for merge. %s" @kind object;
  #L276a8a.  v3:= 1I;
  #L276a8c.  v3:= new `java.lang.Object`[v3];
  #L276a90.  v4:= 0I;
  #L276a92.  call temp:= `getMessage`(v10) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L276a98.  v10:= temp @kind object;
  #L276a9a.  v3[v4]:= v10 @kind object;
  #L276a9e.  call temp:= `format`(v2, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L276aa4.  v10:= temp @kind object;
  #L276aa6.  call `<init>`(v1, v10) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L276aac.  throw v1;
  #L276aae.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276ab0.  if v0 == 0 then goto L276aba;
  #L276ab4.  call `close`(v0) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L276aba.  if v9 == 0 then goto L276ac4;
  #L276abe.  call `close`(v9) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L276ac4.  throw v10;
  catch `java.io.IOException` @[L276a1c..L276a2e] goto L276a7e;
  catch `java.lang.Throwable` @[L276a1c..L276a2e] goto L276a78;
  catch `java.io.IOException` @[L276a2e..L276a56] goto L276a6e;
  catch `java.lang.Throwable` @[L276a2e..L276a56] goto L276a64;
  catch `java.lang.Throwable` @[L276a82..L276aae] goto L276aae;
}
procedure `void` `h`(`com.mapbox.mapboxsdk.offline.OfflineManager` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.h:(Landroid/content/Context;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L276b64.  v0:= new `java.lang.StringBuilder`;
  #L276b68.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L276b6e.  call temp:= `h`(v2) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.h:(Landroid/content/Context;)Ljava/lang/String;` @kind static;
  #L276b74.  v2:= temp @kind object;
  #L276b76.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276b7c.  v2:= `@@java.io.File.separator` @type ^`java.lang.String` @kind object;
  #L276b80.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276b86.  v2:= "mbgl-cache.db" @kind object;
  #L276b8a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L276b90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L276b96.  v2:= temp @kind object;
  #L276b98.  call `a`(v2) @signature `Lcom/mapbox/mapboxsdk/utils/d;.a:(Ljava/lang/String;)V` @kind static;
  #L276b9e.  return @kind void;
}
procedure `com.mapbox.mapboxsdk.offline.OfflineManager` `i`(`android.content.Context` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.i:(Landroid/content/Context;)Lcom/mapbox/mapboxsdk/offline/OfflineManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2768f0.  v0:= constclass @type ^`com.mapbox.mapboxsdk.offline.OfflineManager` @kind object;
  #L2768f4.  @monitorenter v0
  #L2768f6.  v1:= `@@com.mapbox.mapboxsdk.offline.OfflineManager.d` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager` @kind object;
  #L2768fa.  if v1 != 0 then goto L27690c;
  #L2768fe.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineManager`;
  #L276902.  call `<init>`(v1, v2) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L276908.  `@@com.mapbox.mapboxsdk.offline.OfflineManager.d` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager` := v1 @kind object;
  #L27690c.  v2:= `@@com.mapbox.mapboxsdk.offline.OfflineManager.d` @type ^`com.mapbox.mapboxsdk.offline.OfflineManager` @kind object;
  #L276910.  @monitorexit v0
  #L276912.  return v2 @kind object;
  #L276914.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L276916.  @monitorexit v0
  #L276918.  throw v2;
  catch `java.lang.Throwable` @[L2768f6..L276910] goto L276914;
}
procedure `void` `initialize`(`com.mapbox.mapboxsdk.storage.FileSource` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.initialize:(Lcom/mapbox/mapboxsdk/storage/FileSource;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `l`(`com.mapbox.mapboxsdk.offline.OfflineManager` v3 @kind this, `java.io.File` v4 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` v5 @kind object, `boolean` v6 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.l:(Ljava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L276c0c.  v0:= v3.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276c10.  call `activate`(v0) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.activate:()V` @kind virtual;
  #L276c16.  v0:= v3.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276c1a.  call temp:= `getAbsolutePath`(v4) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L276c20.  v1:= temp @kind object;
  #L276c22.  v2:= new `com.mapbox.mapboxsdk.offline.OfflineManager$d`;
  #L276c26.  call `<init>`(v2, v3, v6, v4, v5) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$d;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;ZLjava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;)V` @kind direct;
  #L276c2c.  call `mergeOfflineRegions`(v3, v0, v1, v2) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.mergeOfflineRegions:(Lcom/mapbox/mapboxsdk/storage/FileSource;Ljava/lang/String;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;)V` @kind direct;
  #L276c32.  return @kind void;
}
procedure `void` `listOfflineRegions`(`com.mapbox.mapboxsdk.storage.FileSource` v0 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback` v1 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.listOfflineRegions:(Lcom/mapbox/mapboxsdk/storage/FileSource;Lcom/mapbox/mapboxsdk/offline/OfflineManager$ListOfflineRegionsCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `mergeOfflineRegions`(`com.mapbox.mapboxsdk.storage.FileSource` v0 @kind object, `java.lang.String` v1 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.mergeOfflineRegions:(Lcom/mapbox/mapboxsdk/storage/FileSource;Ljava/lang/String;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeCancelPrefetchAmbientCacheRequest`(`long` v0 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeCancelPrefetchAmbientCacheRequest:(J)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeClearAmbientCache`(`com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeClearAmbientCache:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeInvalidateAmbientCache`(`com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeInvalidateAmbientCache:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativePackDatabase`(`com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativePackDatabase:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `long` `nativePrefetchAmbientCache`(`com.mapbox.mapboxsdk.offline.CacheAreaDefinition` v0 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$PrefetchAmbientCacheCallback` v1 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativePrefetchAmbientCache:(Lcom/mapbox/mapboxsdk/offline/CacheAreaDefinition;Lcom/mapbox/mapboxsdk/offline/OfflineManager$PrefetchAmbientCacheCallback;)J` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeResetDatabase`(`com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeResetDatabase:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeSetMaximumAmbientCacheSize`(`long` v0 , `com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeSetMaximumAmbientCacheSize:(JLcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `finalize`() @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.finalize:()V` @AccessFlag PROTECTED_NATIVE {

  # return;
}
procedure `void` `g`(`com.mapbox.mapboxsdk.offline.OfflineManager` v2 @kind this, `com.mapbox.mapboxsdk.offline.OfflineRegionDefinition` v3 @kind object, `byte`[] v4 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$CreateOfflineRegionCallback` v5 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.g:(Lcom/mapbox/mapboxsdk/offline/OfflineRegionDefinition;[BLcom/mapbox/mapboxsdk/offline/OfflineManager$CreateOfflineRegionCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276b00.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.c` @type ^`android.content.Context` @kind object;
  #L276b04.  call temp:= `instance`(v0) @signature `Lcom/mapbox/mapboxsdk/net/ConnectivityReceiver;.instance:(Landroid/content/Context;)Lcom/mapbox/mapboxsdk/net/ConnectivityReceiver;` @kind static;
  #L276b0a.  v0:= temp @kind object;
  #L276b0c.  call `activate`(v0) @signature `Lcom/mapbox/mapboxsdk/net/ConnectivityReceiver;.activate:()V` @kind virtual;
  #L276b12.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.c` @type ^`android.content.Context` @kind object;
  #L276b16.  call temp:= `g`(v0) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.g:(Landroid/content/Context;)Lcom/mapbox/mapboxsdk/storage/FileSource;` @kind static;
  #L276b1c.  v0:= temp @kind object;
  #L276b1e.  call `activate`(v0) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.activate:()V` @kind virtual;
  #L276b24.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276b28.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineManager$e`;
  #L276b2c.  call `<init>`(v1, v2, v5) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$e;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Lcom/mapbox/mapboxsdk/offline/OfflineManager$CreateOfflineRegionCallback;)V` @kind direct;
  #L276b32.  call `createOfflineRegion`(v2, v0, v3, v4, v1) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.createOfflineRegion:(Lcom/mapbox/mapboxsdk/storage/FileSource;Lcom/mapbox/mapboxsdk/offline/OfflineRegionDefinition;[BLcom/mapbox/mapboxsdk/offline/OfflineManager$CreateOfflineRegionCallback;)V` @kind direct;
  #L276b38.  call temp:= `getTelemetry`() @signature `Lcom/mapbox/mapboxsdk/Mapbox;.getTelemetry:()Lcom/mapbox/mapboxsdk/maps/a0;` @kind static;
  #L276b3e.  v4:= temp @kind object;
  #L276b40.  if v4 == 0 then goto L276b50;
  #L276b44.  call temp:= `getBounds`(v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineRegionDefinition;.getBounds:()Lcom/mapbox/mapboxsdk/geometry/LatLngBounds;` @kind interface;
  #L276b4a.  call `onCreateOfflineRegion`(v4, v3) @signature `Lcom/mapbox/mapboxsdk/maps/a0;.onCreateOfflineRegion:(Lcom/mapbox/mapboxsdk/offline/OfflineRegionDefinition;)V` @kind interface;
  #L276b50.  return @kind void;
}
procedure `void` `j`(`com.mapbox.mapboxsdk.offline.OfflineManager` v1 @kind this, `com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.j:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L276bb0.  v0:= v1.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276bb4.  call `activate`(v0) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.activate:()V` @kind virtual;
  #L276bba.  v0:= new `com.mapbox.mapboxsdk.offline.OfflineManager$c`;
  #L276bbe.  call `<init>`(v0, v1, v2) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$c;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @kind direct;
  #L276bc4.  call `nativeInvalidateAmbientCache`(v1, v0) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.nativeInvalidateAmbientCache:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$FileSourceCallback;)V` @kind direct;
  #L276bca.  return @kind void;
}
procedure `void` `k`(`com.mapbox.mapboxsdk.offline.OfflineManager` v2 @kind this, `com.mapbox.mapboxsdk.offline.OfflineManager$ListOfflineRegionsCallback` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.k:(Lcom/mapbox/mapboxsdk/offline/OfflineManager$ListOfflineRegionsCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276bdc.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276be0.  call `activate`(v0) @signature `Lcom/mapbox/mapboxsdk/storage/FileSource;.activate:()V` @kind virtual;
  #L276be6.  v0:= v2.`com.mapbox.mapboxsdk.offline.OfflineManager.a` @type ^`com.mapbox.mapboxsdk.storage.FileSource` @kind object;
  #L276bea.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineManager$a`;
  #L276bee.  call `<init>`(v1, v2, v3) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$a;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Lcom/mapbox/mapboxsdk/offline/OfflineManager$ListOfflineRegionsCallback;)V` @kind direct;
  #L276bf4.  call `listOfflineRegions`(v2, v0, v1) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.listOfflineRegions:(Lcom/mapbox/mapboxsdk/storage/FileSource;Lcom/mapbox/mapboxsdk/offline/OfflineManager$ListOfflineRegionsCallback;)V` @kind direct;
  #L276bfa.  return @kind void;
}
procedure `void` `m`(`com.mapbox.mapboxsdk.offline.OfflineManager` v2 @kind this, `java.lang.String` v3 @kind object, `com.mapbox.mapboxsdk.offline.OfflineManager$MergeOfflineRegionsCallback` v4 @kind object) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.m:(Ljava/lang/String;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L276c44.  v0:= new `java.io.File`;
  #L276c48.  call `<init>`(v0, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L276c4e.  v3:= new `java.lang.Thread`;
  #L276c52.  v1:= new `com.mapbox.mapboxsdk.offline.OfflineManager$b`;
  #L276c56.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager$b;.<init>:(Lcom/mapbox/mapboxsdk/offline/OfflineManager;Ljava/io/File;Lcom/mapbox/mapboxsdk/offline/OfflineManager$MergeOfflineRegionsCallback;)V` @kind direct;
  #L276c5c.  call `<init>`(v3, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L276c62.  call `start`(v3) @signature `Ljava/lang/Thread;.start:()V` @kind virtual;
  #L276c68.  return @kind void;
}
procedure `void` `putResourceWithUrl`(`java.lang.String` v0 @kind object, `byte`[] v1 @kind object, `long` v2 , `long` v4 , `java.lang.String` v6 @kind object, `boolean` v7 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.putResourceWithUrl:(Ljava/lang/String;[BJJLjava/lang/String;Z)V` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `void` `runPackDatabaseAutomatically`(`boolean` v0 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.runPackDatabaseAutomatically:(Z)V` @AccessFlag PUBLIC_NATIVE {

  # return;
}
procedure `void` `setOfflineMapboxTileCountLimit`(`long` v0 ) @signature `Lcom/mapbox/mapboxsdk/offline/OfflineManager;.setOfflineMapboxTileCountLimit:(J)V` @AccessFlag PUBLIC_NATIVE {

  # return;
}
