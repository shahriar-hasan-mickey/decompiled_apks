record `com.mapbox.mapboxsdk.location.l` @kind class @AccessFlag  extends `com.mapbox.mapboxsdk.location.b` @kind interface, `android.hardware.SensorEventListener` @kind interface {
  `android.view.WindowManager` `com.mapbox.mapboxsdk.location.l.a` @AccessFlag PRIVATE_FINAL;
  `android.hardware.SensorManager` `com.mapbox.mapboxsdk.location.l.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.mapbox.mapboxsdk.location.l.c` @AccessFlag PRIVATE_FINAL;
  `android.hardware.Sensor` `com.mapbox.mapboxsdk.location.l.d` @AccessFlag PRIVATE;
  `android.hardware.Sensor` `com.mapbox.mapboxsdk.location.l.e` @AccessFlag PRIVATE;
  `android.hardware.Sensor` `com.mapbox.mapboxsdk.location.l.f` @AccessFlag PRIVATE;
  `float`[] `com.mapbox.mapboxsdk.location.l.g` @AccessFlag PRIVATE;
  `float`[] `com.mapbox.mapboxsdk.location.l.h` @AccessFlag PRIVATE;
  `float`[] `com.mapbox.mapboxsdk.location.l.i` @AccessFlag PRIVATE;
  `float` `com.mapbox.mapboxsdk.location.l.j` @AccessFlag PRIVATE;
  `int` `com.mapbox.mapboxsdk.location.l.k` @AccessFlag PRIVATE;
  `long` `com.mapbox.mapboxsdk.location.l.l` @AccessFlag PRIVATE;
  `float`[] `com.mapbox.mapboxsdk.location.l.m` @AccessFlag PRIVATE;
  `float`[] `com.mapbox.mapboxsdk.location.l.n` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.location.l` v2 @kind this, `android.view.WindowManager` v3 @kind object, `android.hardware.SensorManager` v4 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.<init>:(Landroid/view/WindowManager;Landroid/hardware/SensorManager;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L25ea8c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25ea92.  v0:= new `java.util.ArrayList`;
  #L25ea96.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L25ea9c.  v2.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` := v0 @kind object;
  #L25eaa0.  v0:= 4I;
  #L25eaa2.  v0:= new `float`[v0];
  #L25eaa6.  v2.`com.mapbox.mapboxsdk.location.l.g` @type ^`float`[] := v0 @kind object;
  #L25eaaa.  v0:= 9I;
  #L25eaae.  v0:= new `float`[v0];
  #L25eab2.  v2.`com.mapbox.mapboxsdk.location.l.h` @type ^`float`[] := v0 @kind object;
  #L25eab6.  v0:= 3I;
  #L25eab8.  v1:= new `float`[v0];
  #L25eabc.  v2.`com.mapbox.mapboxsdk.location.l.m` @type ^`float`[] := v1 @kind object;
  #L25eac0.  v0:= new `float`[v0];
  #L25eac4.  v2.`com.mapbox.mapboxsdk.location.l.n` @type ^`float`[] := v0 @kind object;
  #L25eac8.  v2.`com.mapbox.mapboxsdk.location.l.a` @type ^`android.view.WindowManager` := v3 @kind object;
  #L25eacc.  v2.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` := v4 @kind object;
  #L25ead0.  v3:= 11I;
  #L25ead4.  call temp:= `getDefaultSensor`(v4, v3) @signature `Landroid/hardware/SensorManager;.getDefaultSensor:(I)Landroid/hardware/Sensor;` @kind virtual;
  #L25eada.  v3:= temp @kind object;
  #L25eadc.  v2.`com.mapbox.mapboxsdk.location.l.d` @type ^`android.hardware.Sensor` := v3 @kind object;
  #L25eae0.  if v3 != 0 then goto L25eb0e;
  #L25eae4.  v3:= "Mbgl-LocationComponentCompassEngine" @kind object;
  #L25eae8.  v0:= "Rotation vector sensor not supported on device, falling back to accelerometer and magnetic field." @kind object;
  #L25eaec.  call `d`(v3, v0) @signature `Lcom/mapbox/mapboxsdk/log/Logger;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L25eaf2.  v3:= 1I;
  #L25eaf4.  call temp:= `getDefaultSensor`(v4, v3) @signature `Landroid/hardware/SensorManager;.getDefaultSensor:(I)Landroid/hardware/Sensor;` @kind virtual;
  #L25eafa.  v3:= temp @kind object;
  #L25eafc.  v2.`com.mapbox.mapboxsdk.location.l.e` @type ^`android.hardware.Sensor` := v3 @kind object;
  #L25eb00.  v3:= 2I;
  #L25eb02.  call temp:= `getDefaultSensor`(v4, v3) @signature `Landroid/hardware/SensorManager;.getDefaultSensor:(I)Landroid/hardware/Sensor;` @kind virtual;
  #L25eb08.  v3:= temp @kind object;
  #L25eb0a.  v2.`com.mapbox.mapboxsdk.location.l.f` @type ^`android.hardware.Sensor` := v3 @kind object;
  #L25eb0e.  return @kind void;
}
procedure `float`[] `d`(`com.mapbox.mapboxsdk.location.l` v3 @kind this, `android.hardware.SensorEvent` v4 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.d:(Landroid/hardware/SensorEvent;)[F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L25ea18.  v4:= v4.`android.hardware.SensorEvent.values` @type ^`float`[] @kind object;
  #L25ea1c.  v0:= length @variable v4;
  #L25ea1e.  v1:= 4I;
  #L25ea20.  if v0 <= v1 then goto L25ea34;
  #L25ea24.  v0:= v3.`com.mapbox.mapboxsdk.location.l.g` @type ^`float`[] @kind object;
  #L25ea28.  v2:= 0I;
  #L25ea2a.  call `arraycopy`(v4, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L25ea30.  v4:= v3.`com.mapbox.mapboxsdk.location.l.g` @type ^`float`[] @kind object;
  #L25ea34.  return v4 @kind object;
}
procedure `boolean` `e`(`com.mapbox.mapboxsdk.location.l` v1 @kind this) @signature `Lcom/mapbox/mapboxsdk/location/l;.e:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L25e9e0.  v0:= v1.`com.mapbox.mapboxsdk.location.l.d` @type ^`android.hardware.Sensor` @kind object;
  #L25e9e4.  if v0 == 0 then goto L25e9ec;
  #L25e9e8.  v0:= 1I;
  #L25e9ea.  goto L25e9ee;
  #L25e9ec.  v0:= 0I;
  #L25e9ee.  return v0;
}
procedure `float`[] `f`(`com.mapbox.mapboxsdk.location.l` v5 @kind this, `float`[] v6 @kind object, `float`[] v7 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.f:([F[F)[F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25ea48.  if v7 != 0 then goto L25ea4e;
  #L25ea4c.  return v6 @kind object;
  #L25ea4e.  v0:= 0I;
  #L25ea50.  v1:= length @variable v6;
  #L25ea52.  if v0 >= v1 then goto L25ea7a;
  #L25ea56.  v1:= v7[v0];
  #L25ea5a.  v2:= 1055286886I;
  #L25ea60.  v3:= v6[v0];
  #L25ea64.  v4:= v7[v0];
  #L25ea68.  v3:= v3 - v4 @kind float;
  #L25ea6a.  v3:= v3 * v2 @kind float;
  #L25ea6e.  v1:= v1 + v3 @kind float;
  #L25ea70.  v7[v0]:= v1;
  #L25ea74.  v0:= v0 + 1;
  #L25ea78.  goto L25ea50;
  #L25ea7a.  return v7 @kind object;
}
procedure `void` `g`(`com.mapbox.mapboxsdk.location.l` v2 @kind this, `float` v3 ) @signature `Lcom/mapbox/mapboxsdk/location/l;.g:(F)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L25eb54.  v0:= v2.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25eb58.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25eb5e.  v0:= temp @kind object;
  #L25eb60.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25eb66.  v1:= temp;
  #L25eb68.  if v1 == 0 then goto L25eb80;
  #L25eb6c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25eb72.  v1:= temp @kind object;
  #L25eb74.  v1:= (`com.mapbox.mapboxsdk.location.c`) v1 @kind object;
  #L25eb78.  call `a`(v1, v3) @signature `Lcom/mapbox/mapboxsdk/location/c;.a:(F)V` @kind interface;
  #L25eb7e.  goto L25eb60;
  #L25eb80.  v2.`com.mapbox.mapboxsdk.location.l.j` @type ^`float` := v3;
  #L25eb84.  return @kind void;
}
procedure `void` `h`(`com.mapbox.mapboxsdk.location.l` v3 @kind this) @signature `Lcom/mapbox/mapboxsdk/location/l;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L25ec98.  call temp:= `e`(v3) @signature `Lcom/mapbox/mapboxsdk/location/l;.e:()Z` @kind direct;
  #L25ec9e.  v0:= temp;
  #L25eca0.  v1:= 100000I;
  #L25eca6.  if v0 == 0 then goto L25ecba;
  #L25ecaa.  v0:= v3.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25ecae.  v2:= v3.`com.mapbox.mapboxsdk.location.l.d` @type ^`android.hardware.Sensor` @kind object;
  #L25ecb2.  call temp:= `registerListener`(v0, v3, v2, v1) @signature `Landroid/hardware/SensorManager;.registerListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;I)Z` @kind virtual;
  #L25ecb8.  goto L25ecd6;
  #L25ecba.  v0:= v3.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25ecbe.  v2:= v3.`com.mapbox.mapboxsdk.location.l.e` @type ^`android.hardware.Sensor` @kind object;
  #L25ecc2.  call temp:= `registerListener`(v0, v3, v2, v1) @signature `Landroid/hardware/SensorManager;.registerListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;I)Z` @kind virtual;
  #L25ecc8.  v0:= v3.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25eccc.  v2:= v3.`com.mapbox.mapboxsdk.location.l.f` @type ^`android.hardware.Sensor` @kind object;
  #L25ecd0.  call temp:= `registerListener`(v0, v3, v2, v1) @signature `Landroid/hardware/SensorManager;.registerListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;I)Z` @kind virtual;
  #L25ecd6.  return @kind void;
}
procedure `void` `i`(`com.mapbox.mapboxsdk.location.l` v2 @kind this) @signature `Lcom/mapbox/mapboxsdk/location/l;.i:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L25ed1c.  call temp:= `e`(v2) @signature `Lcom/mapbox/mapboxsdk/location/l;.e:()Z` @kind direct;
  #L25ed22.  v0:= temp;
  #L25ed24.  if v0 == 0 then goto L25ed38;
  #L25ed28.  v0:= v2.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25ed2c.  v1:= v2.`com.mapbox.mapboxsdk.location.l.d` @type ^`android.hardware.Sensor` @kind object;
  #L25ed30.  call `unregisterListener`(v0, v2, v1) @signature `Landroid/hardware/SensorManager;.unregisterListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;)V` @kind virtual;
  #L25ed36.  goto L25ed54;
  #L25ed38.  v0:= v2.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25ed3c.  v1:= v2.`com.mapbox.mapboxsdk.location.l.e` @type ^`android.hardware.Sensor` @kind object;
  #L25ed40.  call `unregisterListener`(v0, v2, v1) @signature `Landroid/hardware/SensorManager;.unregisterListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;)V` @kind virtual;
  #L25ed46.  v0:= v2.`com.mapbox.mapboxsdk.location.l.b` @type ^`android.hardware.SensorManager` @kind object;
  #L25ed4a.  v1:= v2.`com.mapbox.mapboxsdk.location.l.f` @type ^`android.hardware.Sensor` @kind object;
  #L25ed4e.  call `unregisterListener`(v0, v2, v1) @signature `Landroid/hardware/SensorManager;.unregisterListener:(Landroid/hardware/SensorEventListener;Landroid/hardware/Sensor;)V` @kind virtual;
  #L25ed54.  return @kind void;
}
procedure `void` `j`(`com.mapbox.mapboxsdk.location.l` v18 @kind this) @signature `Lcom/mapbox/mapboxsdk/location/l;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L25ed68.  v0:= v18 @kind object;
  #L25ed6c.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L25ed72.  v1:= temp @kind wide;
  #L25ed74.  v3:= v0.`com.mapbox.mapboxsdk.location.l.l` @type ^`long` @kind wide;
  #L25ed78.  v5:= lcmp(v1, v3);
  #L25ed7c.  if v5 >= 0 then goto L25ed82;
  #L25ed80.  return @kind void;
  #L25ed82.  v3:= v0.`com.mapbox.mapboxsdk.location.l.i` @type ^`float`[] @kind object;
  #L25ed86.  if v3 == 0 then goto L25ed96;
  #L25ed8a.  v4:= v0.`com.mapbox.mapboxsdk.location.l.h` @type ^`float`[] @kind object;
  #L25ed8e.  call `getRotationMatrixFromVector`(v4, v3) @signature `Landroid/hardware/SensorManager;.getRotationMatrixFromVector:([F[F)V` @kind static;
  #L25ed94.  goto L25edaa;
  #L25ed96.  v3:= v0.`com.mapbox.mapboxsdk.location.l.h` @type ^`float`[] @kind object;
  #L25ed9a.  v4:= 0I;
  #L25ed9c.  v5:= v0.`com.mapbox.mapboxsdk.location.l.m` @type ^`float`[] @kind object;
  #L25eda0.  v6:= v0.`com.mapbox.mapboxsdk.location.l.n` @type ^`float`[] @kind object;
  #L25eda4.  call temp:= `getRotationMatrix`(v3, v4, v5, v6) @signature `Landroid/hardware/SensorManager;.getRotationMatrix:([F[F[F[F)Z` @kind static;
  #L25edaa.  v3:= v0.`com.mapbox.mapboxsdk.location.l.a` @type ^`android.view.WindowManager` @kind object;
  #L25edae.  call temp:= `getDefaultDisplay`(v3) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L25edb4.  v3:= temp @kind object;
  #L25edb6.  call temp:= `getRotation`(v3) @signature `Landroid/view/Display;.getRotation:()I` @kind virtual;
  #L25edbc.  v3:= temp;
  #L25edbe.  v4:= 130I;
  #L25edc2.  v5:= 129I;
  #L25edc6.  v6:= 3I;
  #L25edc8.  v7:= 2I;
  #L25edca.  v8:= 1I;
  #L25edcc.  if v3 == v8 then goto L25edf0;
  #L25edd0.  if v3 == v7 then goto L25ede6;
  #L25edd4.  if v3 == v6 then goto L25edde;
  #L25edd8.  v3:= 1I;
  #L25edda.  v9:= 2I;
  #L25eddc.  goto L25edf6;
  #L25edde.  v3:= 130I;
  #L25ede2.  v9:= 1I;
  #L25ede4.  goto L25edf6;
  #L25ede6.  v3:= 129I;
  #L25edea.  v9:= 130I;
  #L25edee.  goto L25edf6;
  #L25edf0.  v3:= 2I;
  #L25edf2.  v9:= 129I;
  #L25edf6.  v10:= 9I;
  #L25edfa.  v10:= new `float`[v10];
  #L25edfe.  v11:= v0.`com.mapbox.mapboxsdk.location.l.h` @type ^`float`[] @kind object;
  #L25ee02.  call temp:= `remapCoordinateSystem`(v11, v3, v9, v10) @signature `Landroid/hardware/SensorManager;.remapCoordinateSystem:([FII[F)Z` @kind static;
  #L25ee08.  v11:= new `float`[v6];
  #L25ee0c.  call temp:= `getOrientation`(v10, v11) @signature `Landroid/hardware/SensorManager;.getOrientation:([F[F)[F` @kind static;
  #L25ee12.  v12:= v11[v8];
  #L25ee16.  v12:= (`double`) v12 @kind f2d;
  #L25ee18.  v14:= -0.7853981633974483D;
  #L25ee22.  v16:= 131I;
  #L25ee26.  v17:= dcmpg(v12, v14);
  #L25ee2a.  if v17 >= 0 then goto L25ee6c;
  #L25ee2e.  v3:= v0.`com.mapbox.mapboxsdk.location.l.a` @type ^`android.view.WindowManager` @kind object;
  #L25ee32.  call temp:= `getDefaultDisplay`(v3) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L25ee38.  v3:= temp @kind object;
  #L25ee3a.  call temp:= `getRotation`(v3) @signature `Landroid/view/Display;.getRotation:()I` @kind virtual;
  #L25ee40.  v3:= temp;
  #L25ee42.  if v3 == v8 then goto L25ee68;
  #L25ee46.  if v3 == v7 then goto L25ee5e;
  #L25ee4a.  if v3 == v6 then goto L25ee56;
  #L25ee4e.  v4:= 1I;
  #L25ee50.  v5:= 3I;
  #L25ee52.  goto L25ef10;
  #L25ee56.  v4:= 131I;
  #L25ee5a.  v5:= 1I;
  #L25ee5c.  goto L25ef10;
  #L25ee5e.  v4:= 129I;
  #L25ee62.  v5:= 131I;
  #L25ee66.  goto L25ef10;
  #L25ee68.  v4:= 3I;
  #L25ee6a.  goto L25ef10;
  #L25ee6c.  v12:= v11[v8];
  #L25ee70.  v12:= (`double`) v12 @kind f2d;
  #L25ee72.  v14:= 0.7853981633974483D;
  #L25ee7c.  v17:= dcmpl(v12, v14);
  #L25ee80.  if v17 <= 0 then goto L25eeb8;
  #L25ee84.  v3:= v0.`com.mapbox.mapboxsdk.location.l.a` @type ^`android.view.WindowManager` @kind object;
  #L25ee88.  call temp:= `getDefaultDisplay`(v3) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L25ee8e.  v3:= temp @kind object;
  #L25ee90.  call temp:= `getRotation`(v3) @signature `Landroid/view/Display;.getRotation:()I` @kind virtual;
  #L25ee96.  v3:= temp;
  #L25ee98.  if v3 == v8 then goto L25eeb2;
  #L25ee9c.  if v3 == v7 then goto L25eeac;
  #L25eea0.  if v3 == v6 then goto L25eea8;
  #L25eea4.  v4:= 1I;
  #L25eea6.  goto L25ee62;
  #L25eea8.  v4:= 3I;
  #L25eeaa.  goto L25ee5a;
  #L25eeac.  v4:= 129I;
  #L25eeb0.  goto L25ee50;
  #L25eeb2.  v4:= 131I;
  #L25eeb6.  goto L25ef10;
  #L25eeb8.  v12:= v11[v7];
  #L25eebc.  call temp:= `abs`(v12) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L25eec2.  v12:= temp;
  #L25eec4.  v12:= (`double`) v12 @kind f2d;
  #L25eec6.  v14:= 1.5707963267948966D;
  #L25eed0.  v16:= dcmpl(v12, v14);
  #L25eed4.  if v16 <= 0 then goto L25ef0c;
  #L25eed8.  v3:= v0.`com.mapbox.mapboxsdk.location.l.a` @type ^`android.view.WindowManager` @kind object;
  #L25eedc.  call temp:= `getDefaultDisplay`(v3) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L25eee2.  v3:= temp @kind object;
  #L25eee4.  call temp:= `getRotation`(v3) @signature `Landroid/view/Display;.getRotation:()I` @kind virtual;
  #L25eeea.  v3:= temp;
  #L25eeec.  if v3 == v8 then goto L25ef10;
  #L25eef0.  if v3 == v7 then goto L25ef04;
  #L25eef4.  if v3 == v6 then goto L25ef00;
  #L25eef8.  v4:= 1I;
  #L25eefa.  v5:= 130I;
  #L25eefe.  goto L25ef10;
  #L25ef00.  v4:= 2I;
  #L25ef02.  goto L25ee5a;
  #L25ef04.  v4:= 129I;
  #L25ef08.  v5:= 2I;
  #L25ef0a.  goto L25ef10;
  #L25ef0c.  v4:= v3;
  #L25ef0e.  v5:= v9;
  #L25ef10.  v3:= v0.`com.mapbox.mapboxsdk.location.l.h` @type ^`float`[] @kind object;
  #L25ef14.  call temp:= `remapCoordinateSystem`(v3, v4, v5, v10) @signature `Landroid/hardware/SensorManager;.remapCoordinateSystem:([FII[F)Z` @kind static;
  #L25ef1a.  call temp:= `getOrientation`(v10, v11) @signature `Landroid/hardware/SensorManager;.getOrientation:([F[F)[F` @kind static;
  #L25ef20.  v3:= 0I;
  #L25ef22.  v3:= v11[v3];
  #L25ef26.  v3:= (`double`) v3 @kind f2d;
  #L25ef28.  call temp:= `toDegrees`(v3) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L25ef2e.  v3:= temp @kind wide;
  #L25ef30.  v3:= (`float`) v3 @kind d2f;
  #L25ef32.  call `g`(v0, v3) @signature `Lcom/mapbox/mapboxsdk/location/l;.g:(F)V` @kind direct;
  #L25ef38.  v3:= 500L;
  #L25ef3c.  v1:= v1 + v3 @kind long;
  #L25ef3e.  v0.`com.mapbox.mapboxsdk.location.l.l` @type ^`long` := v1 @kind wide;
  #L25ef42.  return @kind void;
}
procedure `void` `a`(`com.mapbox.mapboxsdk.location.l` v1 @kind this, `com.mapbox.mapboxsdk.location.c` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.a:(Lcom/mapbox/mapboxsdk/location/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25ece8.  v0:= v1.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25ecec.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L25ecf2.  v2:= v1.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25ecf6.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L25ecfc.  v2:= temp;
  #L25ecfe.  if v2 == 0 then goto L25ed08;
  #L25ed02.  call `i`(v1) @signature `Lcom/mapbox/mapboxsdk/location/l;.i:()V` @kind direct;
  #L25ed08.  return @kind void;
}
procedure `float` `b`(`com.mapbox.mapboxsdk.location.l` v1 @kind this) @signature `Lcom/mapbox/mapboxsdk/location/l;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25ea00.  v0:= v1.`com.mapbox.mapboxsdk.location.l.j` @type ^`float`;
  #L25ea04.  return v0;
}
procedure `void` `c`(`com.mapbox.mapboxsdk.location.l` v1 @kind this, `com.mapbox.mapboxsdk.location.c` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.c:(Lcom/mapbox/mapboxsdk/location/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25eb20.  v0:= v1.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25eb24.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L25eb2a.  v0:= temp;
  #L25eb2c.  if v0 == 0 then goto L25eb36;
  #L25eb30.  call `h`(v1) @signature `Lcom/mapbox/mapboxsdk/location/l;.h:()V` @kind direct;
  #L25eb36.  v0:= v1.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25eb3a.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L25eb40.  return @kind void;
}
procedure `void` `onAccuracyChanged`(`com.mapbox.mapboxsdk.location.l` v1 @kind this, `android.hardware.Sensor` v2 @kind object, `int` v3 ) @signature `Lcom/mapbox/mapboxsdk/location/l;.onAccuracyChanged:(Landroid/hardware/Sensor;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L25eb98.  v2:= v1.`com.mapbox.mapboxsdk.location.l.k` @type ^`int`;
  #L25eb9c.  if v2 == v3 then goto L25ebd0;
  #L25eba0.  v2:= v1.`com.mapbox.mapboxsdk.location.l.c` @type ^`java.util.List` @kind object;
  #L25eba4.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L25ebaa.  v2:= temp @kind object;
  #L25ebac.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L25ebb2.  v0:= temp;
  #L25ebb4.  if v0 == 0 then goto L25ebcc;
  #L25ebb8.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L25ebbe.  v0:= temp @kind object;
  #L25ebc0.  v0:= (`com.mapbox.mapboxsdk.location.c`) v0 @kind object;
  #L25ebc4.  call `b`(v0, v3) @signature `Lcom/mapbox/mapboxsdk/location/c;.b:(I)V` @kind interface;
  #L25ebca.  goto L25ebac;
  #L25ebcc.  v1.`com.mapbox.mapboxsdk.location.l.k` @type ^`int` := v3;
  #L25ebd0.  return @kind void;
}
procedure `void` `onSensorChanged`(`com.mapbox.mapboxsdk.location.l` v2 @kind this, `android.hardware.SensorEvent` v3 @kind object) @signature `Lcom/mapbox/mapboxsdk/location/l;.onSensorChanged:(Landroid/hardware/SensorEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25ebe4.  v0:= v2.`com.mapbox.mapboxsdk.location.l.k` @type ^`int`;
  #L25ebe8.  if v0 != 0 then goto L25ebfa;
  #L25ebec.  v0:= "Mbgl-LocationComponentCompassEngine" @kind object;
  #L25ebf0.  v1:= "Compass sensor is unreliable, device calibration is needed." @kind object;
  #L25ebf4.  call `d`(v0, v1) @signature `Lcom/mapbox/mapboxsdk/log/Logger;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L25ebfa.  v0:= v3.`android.hardware.SensorEvent.sensor` @type ^`android.hardware.Sensor` @kind object;
  #L25ebfe.  call temp:= `getType`(v0) @signature `Landroid/hardware/Sensor;.getType:()I` @kind virtual;
  #L25ec04.  v0:= temp;
  #L25ec06.  v1:= 11I;
  #L25ec0a.  if v0 != v1 then goto L25ec22;
  #L25ec0e.  call temp:= `d`(v2, v3) @signature `Lcom/mapbox/mapboxsdk/location/l;.d:(Landroid/hardware/SensorEvent;)[F` @kind direct;
  #L25ec14.  v3:= temp @kind object;
  #L25ec16.  v2.`com.mapbox.mapboxsdk.location.l.i` @type ^`float`[] := v3 @kind object;
  #L25ec1a.  call `j`(v2) @signature `Lcom/mapbox/mapboxsdk/location/l;.j:()V` @kind direct;
  #L25ec20.  goto L25ec84;
  #L25ec22.  v0:= v3.`android.hardware.SensorEvent.sensor` @type ^`android.hardware.Sensor` @kind object;
  #L25ec26.  call temp:= `getType`(v0) @signature `Landroid/hardware/Sensor;.getType:()I` @kind virtual;
  #L25ec2c.  v0:= temp;
  #L25ec2e.  v1:= 1I;
  #L25ec30.  if v0 != v1 then goto L25ec54;
  #L25ec34.  call temp:= `d`(v2, v3) @signature `Lcom/mapbox/mapboxsdk/location/l;.d:(Landroid/hardware/SensorEvent;)[F` @kind direct;
  #L25ec3a.  v3:= temp @kind object;
  #L25ec3c.  v0:= v2.`com.mapbox.mapboxsdk.location.l.m` @type ^`float`[] @kind object;
  #L25ec40.  call temp:= `f`(v2, v3, v0) @signature `Lcom/mapbox/mapboxsdk/location/l;.f:([F[F)[F` @kind direct;
  #L25ec46.  v3:= temp @kind object;
  #L25ec48.  v2.`com.mapbox.mapboxsdk.location.l.m` @type ^`float`[] := v3 @kind object;
  #L25ec4c.  call `j`(v2) @signature `Lcom/mapbox/mapboxsdk/location/l;.j:()V` @kind direct;
  #L25ec52.  goto L25ec84;
  #L25ec54.  v0:= v3.`android.hardware.SensorEvent.sensor` @type ^`android.hardware.Sensor` @kind object;
  #L25ec58.  call temp:= `getType`(v0) @signature `Landroid/hardware/Sensor;.getType:()I` @kind virtual;
  #L25ec5e.  v0:= temp;
  #L25ec60.  v1:= 2I;
  #L25ec62.  if v0 != v1 then goto L25ec84;
  #L25ec66.  call temp:= `d`(v2, v3) @signature `Lcom/mapbox/mapboxsdk/location/l;.d:(Landroid/hardware/SensorEvent;)[F` @kind direct;
  #L25ec6c.  v3:= temp @kind object;
  #L25ec6e.  v0:= v2.`com.mapbox.mapboxsdk.location.l.n` @type ^`float`[] @kind object;
  #L25ec72.  call temp:= `f`(v2, v3, v0) @signature `Lcom/mapbox/mapboxsdk/location/l;.f:([F[F)[F` @kind direct;
  #L25ec78.  v3:= temp @kind object;
  #L25ec7a.  v2.`com.mapbox.mapboxsdk.location.l.n` @type ^`float`[] := v3 @kind object;
  #L25ec7e.  call `j`(v2) @signature `Lcom/mapbox/mapboxsdk/location/l;.j:()V` @kind direct;
  #L25ec84.  return @kind void;
}
