record `com.mapbox.mapboxsdk.http.NativeHttpRequest` @kind class @AccessFlag PUBLIC extends `com.mapbox.mapboxsdk.http.e` @kind interface {
  `com.mapbox.mapboxsdk.http.c` `com.mapbox.mapboxsdk.http.NativeHttpRequest.httpRequest` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.locks.ReentrantLock` `com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @AccessFlag PRIVATE_FINAL;
  `long` `com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v9 @kind this, `long` v10 , `java.lang.String` v12 @kind object, `java.lang.String` v13 @kind object, `java.lang.String` v14 @kind object, `boolean` v15 ) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.<init>:(JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L25b914.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25b91a.  call temp:= `getModuleProvider`() @signature `Lcom/mapbox/mapboxsdk/Mapbox;.getModuleProvider:()Lcom/mapbox/mapboxsdk/f;` @kind static;
  #L25b920.  v0:= temp @kind object;
  #L25b922.  call temp:= `b`(v0) @signature `Lcom/mapbox/mapboxsdk/f;.b:()Lcom/mapbox/mapboxsdk/http/c;` @kind interface;
  #L25b928.  v1:= temp @kind object;
  #L25b92a.  v9.`com.mapbox.mapboxsdk.http.NativeHttpRequest.httpRequest` @type ^`com.mapbox.mapboxsdk.http.c` := v1 @kind object;
  #L25b92e.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L25b932.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L25b938.  v9.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` := v0 @kind object;
  #L25b93c.  v9.`com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @type ^`long` := v10 @kind wide;
  #L25b940.  v0:= "local://" @kind object;
  #L25b944.  call temp:= `startsWith`(v12, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L25b94a.  v0:= temp;
  #L25b94c.  if v0 == 0 then goto L25b958;
  #L25b950.  call `executeLocalRequest`(v9, v12) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.executeLocalRequest:(Ljava/lang/String;)V` @kind direct;
  #L25b956.  return @kind void;
  #L25b958.  v2:= v9 @kind object;
  #L25b95a.  v3:= v10 @kind wide;
  #L25b95c.  v5:= v12 @kind object;
  #L25b95e.  v6:= v13 @kind object;
  #L25b960.  v7:= v14 @kind object;
  #L25b962.  v8:= v15;
  #L25b964.  call `a`(v1, v2, v3, v5, v6, v7, v8) @signature `Lcom/mapbox/mapboxsdk/http/c;.a:(Lcom/mapbox/mapboxsdk/http/e;JLjava/lang/String;Ljava/lang/String;Ljava/lang/String;Z)V` @kind interface;
  #L25b96a.  return @kind void;
}
procedure `java.util.concurrent.locks.ReentrantLock` `access$000`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v0 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.access$000:(Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;)Ljava/util/concurrent/locks/ReentrantLock;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L25b8e4.  v0:= v0.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25b8e8.  return v0 @kind object;
}
procedure `long` `access$100`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v2 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.access$100:(Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L25b8fc.  v0:= v2.`com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @type ^`long` @kind wide;
  #L25b900.  return v0 @kind wide;
}
procedure `void` `access$200`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v0 @kind object, `int` v1 , `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `java.lang.String` v7 @kind object, `byte`[] v8 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.access$200:(Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L25b97c.  call `nativeOnResponse`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.nativeOnResponse:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @kind direct;
  #L25b982.  return @kind void;
}
procedure `void` `executeLocalRequest`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.executeLocalRequest:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L25b9cc.  v0:= new `com.mapbox.mapboxsdk.http.f`;
  #L25b9d0.  v1:= new `com.mapbox.mapboxsdk.http.NativeHttpRequest$a`;
  #L25b9d4.  call `<init>`(v1, v3) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest$a;.<init>:(Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;)V` @kind direct;
  #L25b9da.  call `<init>`(v0, v1) @signature `Lcom/mapbox/mapboxsdk/http/f;.<init>:(Lcom/mapbox/mapboxsdk/http/f$a;)V` @kind direct;
  #L25b9e0.  v1:= 1I;
  #L25b9e2.  v1:= new `java.lang.String`[v1];
  #L25b9e6.  v2:= 0I;
  #L25b9e8.  v1[v2]:= v4 @kind object;
  #L25b9ec.  call temp:= `execute`(v0, v1) @signature `Landroid/os/AsyncTask;.execute:([Ljava/lang/Object;)Landroid/os/AsyncTask;` @kind virtual;
  #L25b9f2.  return @kind void;
}
procedure `void` `nativeOnFailure`(`int` v0 , `java.lang.String` v1 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.nativeOnFailure:(ILjava/lang/String;)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `nativeOnResponse`(`int` v0 , `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.String` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.nativeOnResponse:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @AccessFlag PRIVATE_NATIVE {

  # return;
}
procedure `void` `cancel`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v2 @kind this) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L25b994.  v0:= v2.`com.mapbox.mapboxsdk.http.NativeHttpRequest.httpRequest` @type ^`com.mapbox.mapboxsdk.http.c` @kind object;
  #L25b998.  call `b`(v0) @signature `Lcom/mapbox/mapboxsdk/http/c;.b:()V` @kind interface;
  #L25b99e.  v0:= v2.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25b9a2.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L25b9a8.  v0:= 0L;
  #L25b9ac.  v2.`com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @type ^`long` := v0 @kind wide;
  #L25b9b0.  v0:= v2.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25b9b4.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L25b9ba.  return @kind void;
}
procedure `void` `handleFailure`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.handleFailure:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25ba04.  v0:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25ba08.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L25ba0e.  v0:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @type ^`long` @kind wide;
  #L25ba12.  v2:= 0L;
  #L25ba16.  v4:= lcmp(v0, v2);
  #L25ba1a.  if v4 == 0 then goto L25ba24;
  #L25ba1e.  call `nativeOnFailure`(v5, v6, v7) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.nativeOnFailure:(ILjava/lang/String;)V` @kind direct;
  #L25ba24.  v6:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25ba28.  call `unlock`(v6) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L25ba2e.  return @kind void;
}
procedure `void` `onResponse`(`com.mapbox.mapboxsdk.http.NativeHttpRequest` v5 @kind this, `int` v6 , `java.lang.String` v7 @kind object, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object, `java.lang.String` v11 @kind object, `java.lang.String` v12 @kind object, `byte`[] v13 @kind object) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.onResponse:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L25ba40.  v0:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25ba44.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.lock:()V` @kind virtual;
  #L25ba4a.  v0:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.nativePtr` @type ^`long` @kind wide;
  #L25ba4e.  v2:= 0L;
  #L25ba52.  v4:= lcmp(v0, v2);
  #L25ba56.  if v4 == 0 then goto L25ba60;
  #L25ba5a.  call `nativeOnResponse`(v5, v6, v7, v8, v9, v10, v11, v12, v13) @signature `Lcom/mapbox/mapboxsdk/http/NativeHttpRequest;.nativeOnResponse:(ILjava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;[B)V` @kind direct;
  #L25ba60.  v6:= v5.`com.mapbox.mapboxsdk.http.NativeHttpRequest.lock` @type ^`java.util.concurrent.locks.ReentrantLock` @kind object;
  #L25ba64.  call `unlock`(v6) @signature `Ljava/util/concurrent/locks/ReentrantLock;.unlock:()V` @kind virtual;
  #L25ba6a.  return @kind void;
}
