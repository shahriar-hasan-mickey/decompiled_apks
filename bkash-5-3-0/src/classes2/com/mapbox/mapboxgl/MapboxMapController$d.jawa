record `com.mapbox.mapboxgl.MapboxMapController$d` @kind class @AccessFlag  extends `com.mapbox.mapboxsdk.offline.OfflineManager$FileSourceCallback` @kind interface {
  `io.flutter.plugin.common.l$d` `com.mapbox.mapboxgl.MapboxMapController$d.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.mapboxgl.MapboxMapController$d` v0 @kind this, `com.mapbox.mapboxgl.MapboxMapController` v1 @kind object, `io.flutter.plugin.common.l$d` v2 @kind object) @signature `Lcom/mapbox/mapboxgl/MapboxMapController$d;.<init>:(Lcom/mapbox/mapboxgl/MapboxMapController;Lio/flutter/plugin/common/l$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L250304.  v0.`com.mapbox.mapboxgl.MapboxMapController$d.a` @type ^`io.flutter.plugin.common.l$d` := v2 @kind object;
  #L250308.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L25030e.  return @kind void;
}
procedure `void` `onError`(`com.mapbox.mapboxgl.MapboxMapController$d` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lcom/mapbox/mapboxgl/MapboxMapController$d;.onError:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L250320.  v0:= v3.`com.mapbox.mapboxgl.MapboxMapController$d.a` @type ^`io.flutter.plugin.common.l$d` @kind object;
  #L250324.  v1:= "MAPBOX CACHE ERROR" @kind object;
  #L250328.  v2:= 0I;
  #L25032a.  call `error`(v0, v1, v4, v2) @signature `Lio/flutter/plugin/common/l$d;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L250330.  return @kind void;
}
procedure `void` `onSuccess`(`com.mapbox.mapboxgl.MapboxMapController$d` v2 @kind this) @signature `Lcom/mapbox/mapboxgl/MapboxMapController$d;.onSuccess:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L250344.  v0:= v2.`com.mapbox.mapboxgl.MapboxMapController$d.a` @type ^`io.flutter.plugin.common.l$d` @kind object;
  #L250348.  v1:= 0I;
  #L25034a.  call `success`(v0, v1) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L250350.  return @kind void;
}
