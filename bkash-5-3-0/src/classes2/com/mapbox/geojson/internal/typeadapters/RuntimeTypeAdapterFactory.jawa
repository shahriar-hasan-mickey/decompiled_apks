record `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.gson.r` @kind interface {
  `java.lang.Class` `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.baseType` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.labelToSubtype` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.maintainType` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.subtypeToLabel` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.typeFieldName` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L24ce84.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24ce8a.  v0:= new `java.util.LinkedHashMap`;
  #L24ce8e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L24ce94.  v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` := v0 @kind object;
  #L24ce98.  v0:= new `java.util.LinkedHashMap`;
  #L24ce9c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L24cea2.  v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` := v0 @kind object;
  #L24cea6.  if v3 == 0 then goto L24cebc;
  #L24ceaa.  if v2 == 0 then goto L24cebc;
  #L24ceae.  v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` := v2 @kind object;
  #L24ceb2.  v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.typeFieldName` @type ^`java.lang.String` := v3 @kind object;
  #L24ceb6.  v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.maintainType` @type ^`boolean` := v4 @kind boolean;
  #L24ceba.  return @kind void;
  #L24cebc.  v2:= 0I;
  #L24cebe.  throw v2;
}
procedure `boolean` `access$000`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.access$000:(Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L24cc88.  v0:= v0.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.maintainType` @type ^`boolean` @kind boolean;
  #L24cc8c.  return v0;
}
procedure `java.lang.String` `access$100`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.access$100:(Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L24ce54.  v0:= v0.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.typeFieldName` @type ^`java.lang.String` @kind object;
  #L24ce58.  return v0 @kind object;
}
procedure `java.lang.Class` `access$200`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.access$200:(Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;)Ljava/lang/Class;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L24ce3c.  v0:= v0.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` @kind object;
  #L24ce40.  return v0 @kind object;
}
procedure `java.util.Map` `access$300`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v0 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.access$300:(Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L24ce6c.  v0:= v0.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L24ce70.  return v0 @kind object;
}
procedure `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` `of`(`java.lang.Class` v3 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.of:(Ljava/lang/Class;)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24cd54.  v0:= new `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory`;
  #L24cd58.  v1:= "type" @kind object;
  #L24cd5c.  v2:= 0I;
  #L24cd5e.  call `<init>`(v0, v3, v1, v2) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;Z)V` @kind direct;
  #L24cd64.  return v0 @kind object;
}
procedure `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` `of`(`java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.of:(Ljava/lang/Class;Ljava/lang/String;)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24cd78.  v0:= new `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory`;
  #L24cd7c.  v1:= 0I;
  #L24cd7e.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;Z)V` @kind direct;
  #L24cd84.  return v0 @kind object;
}
procedure `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` `of`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.of:(Ljava/lang/Class;Ljava/lang/String;Z)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24cd98.  v0:= new `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory`;
  #L24cd9c.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.<init>:(Ljava/lang/Class;Ljava/lang/String;Z)V` @kind direct;
  #L24cda2.  return v0 @kind object;
}
procedure `com.google.gson.TypeAdapter` `create`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v5 @kind this, `com.google.gson.Gson` v6 @kind object, `com.google.gson.reflect.a` v7 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.create:(Lcom/google/gson/Gson;Lcom/google/gson/reflect/a;)Lcom/google/gson/TypeAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24cca0.  call temp:= `getRawType`(v7) @signature `Lcom/google/gson/reflect/a;.getRawType:()Ljava/lang/Class;` @kind virtual;
  #L24cca6.  v7:= temp @kind object;
  #L24cca8.  v0:= v5.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.baseType` @type ^`java.lang.Class` @kind object;
  #L24ccac.  if v7 == v0 then goto L24ccb4;
  #L24ccb0.  v6:= 0I;
  #L24ccb2.  return v6 @kind object;
  #L24ccb4.  v7:= new `java.util.LinkedHashMap`;
  #L24ccb8.  call `<init>`(v7) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L24ccbe.  v0:= new `java.util.LinkedHashMap`;
  #L24ccc2.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L24ccc8.  v1:= v5.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L24cccc.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L24ccd2.  v1:= temp @kind object;
  #L24ccd4.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24ccda.  v1:= temp @kind object;
  #L24ccdc.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24cce2.  v2:= temp;
  #L24cce4.  if v2 == 0 then goto L24cd2e;
  #L24cce8.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24ccee.  v2:= temp @kind object;
  #L24ccf0.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L24ccf4.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24ccfa.  v3:= temp @kind object;
  #L24ccfc.  v3:= (`java.lang.Class`) v3 @kind object;
  #L24cd00.  call temp:= `get`(v3) @signature `Lcom/google/gson/reflect/a;.get:(Ljava/lang/Class;)Lcom/google/gson/reflect/a;` @kind static;
  #L24cd06.  v3:= temp @kind object;
  #L24cd08.  call temp:= `p`(v6, v5, v3) @signature `Lcom/google/gson/Gson;.p:(Lcom/google/gson/r;Lcom/google/gson/reflect/a;)Lcom/google/gson/TypeAdapter;` @kind virtual;
  #L24cd0e.  v3:= temp @kind object;
  #L24cd10.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L24cd16.  v4:= temp @kind object;
  #L24cd18.  call temp:= `put`(v7, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24cd1e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L24cd24.  v2:= temp @kind object;
  #L24cd26.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24cd2c.  goto L24ccdc;
  #L24cd2e.  v6:= new `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory$1`;
  #L24cd32.  call `<init>`(v6, v5, v7, v0) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory$1;.<init>:(Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;Ljava/util/Map;Ljava/util/Map;)V` @kind direct;
  #L24cd38.  call temp:= `nullSafe`(v6) @signature `Lcom/google/gson/TypeAdapter;.nullSafe:()Lcom/google/gson/TypeAdapter;` @kind virtual;
  #L24cd3e.  v6:= temp @kind object;
  #L24cd40.  return v6 @kind object;
}
procedure `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` `registerSubtype`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24cdb4.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L24cdba.  v0:= temp @kind object;
  #L24cdbc.  call temp:= `registerSubtype`(v1, v2, v0) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;Ljava/lang/String;)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @kind virtual;
  #L24cdc2.  v2:= temp @kind object;
  #L24cdc4.  return v2 @kind object;
}
procedure `com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` `registerSubtype`(`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;.registerSubtype:(Ljava/lang/Class;Ljava/lang/String;)Lcom/mapbox/geojson/internal/typeadapters/RuntimeTypeAdapterFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24cdd8.  if v2 == 0 then goto L24ce26;
  #L24cddc.  if v3 == 0 then goto L24ce26;
  #L24cde0.  v0:= v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L24cde4.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L24cdea.  v0:= temp;
  #L24cdec.  if v0 != 0 then goto L24ce16;
  #L24cdf0.  v0:= v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L24cdf4.  call temp:= `containsKey`(v0, v3) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L24cdfa.  v0:= temp;
  #L24cdfc.  if v0 != 0 then goto L24ce16;
  #L24ce00.  v0:= v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.labelToSubtype` @type ^`java.util.Map` @kind object;
  #L24ce04.  call temp:= `put`(v0, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24ce0a.  v0:= v1.`com.mapbox.geojson.internal.typeadapters.RuntimeTypeAdapterFactory.subtypeToLabel` @type ^`java.util.Map` @kind object;
  #L24ce0e.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24ce14.  return v1 @kind object;
  #L24ce16.  v2:= new `java.lang.IllegalArgumentException`;
  #L24ce1a.  v3:= "types and labels must be unique" @kind object;
  #L24ce1e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ce24.  throw v2;
  #L24ce26.  v2:= 0I;
  #L24ce28.  throw v2;
}
