record `com.mapbox.geojson.utils.GeoJsonUtils` @kind class @AccessFlag PUBLIC {
}
global `long` `@@com.mapbox.geojson.utils.GeoJsonUtils.MAX_DOUBLE_TO_ROUND` @AccessFlag PRIVATE_STATIC;
global `double` `@@com.mapbox.geojson.utils.GeoJsonUtils.ROUND_PRECISION` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/mapbox/geojson/utils/GeoJsonUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24d0b0.  v0:= 9.223372036854776E18D;
  #L24d0b4.  v2:= 1.0E7D;
  #L24d0be.  v0:= v0 / v2 @kind double;
  #L24d0c0.  v0:= (`long`) v0 @kind d2l;
  #L24d0c2.  `@@com.mapbox.geojson.utils.GeoJsonUtils.MAX_DOUBLE_TO_ROUND` @type ^`long` := v0 @kind wide;
  #L24d0c6.  return @kind void;
}
procedure `void` `<init>`(`com.mapbox.geojson.utils.GeoJsonUtils` v0 @kind this) @signature `Lcom/mapbox/geojson/utils/GeoJsonUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L24d0d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24d0de.  return @kind void;
}
procedure `double` `trim`(`double` v5 ) @signature `Lcom/mapbox/geojson/utils/GeoJsonUtils;.trim:(D)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24d068.  v0:= `@@com.mapbox.geojson.utils.GeoJsonUtils.MAX_DOUBLE_TO_ROUND` @type ^`long` @kind wide;
  #L24d06c.  v2:= (`double`) v0 @kind l2d;
  #L24d06e.  v4:= dcmpl(v5, v2);
  #L24d072.  if v4 > 0 then goto L24d09c;
  #L24d076.  v0:= -v0 @kind long;
  #L24d078.  v0:= (`double`) v0 @kind l2d;
  #L24d07a.  v2:= dcmpg(v5, v0);
  #L24d07e.  if v2 >= 0 then goto L24d084;
  #L24d082.  goto L24d09c;
  #L24d084.  v0:= `@@com.mapbox.geojson.utils.GeoJsonUtils.ROUND_PRECISION` @type ^`double` @kind wide;
  #L24d088.  v5:= v5 * v0 @kind double;
  #L24d08c.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L24d092.  v5:= temp @kind wide;
  #L24d094.  v5:= (`double`) v5 @kind l2d;
  #L24d096.  v0:= `@@com.mapbox.geojson.utils.GeoJsonUtils.ROUND_PRECISION` @type ^`double` @kind wide;
  #L24d09a.  v5:= v5 / v0 @kind double;
  #L24d09c.  return v5 @kind wide;
}
