record `com.mapbox.geojson.utils.PolylineUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@com.mapbox.geojson.utils.PolylineUtils.SIMPLIFY_DEFAULT_HIGHEST_QUALITY` @AccessFlag PRIVATE_STATIC_FINAL;
global `double` `@@com.mapbox.geojson.utils.PolylineUtils.SIMPLIFY_DEFAULT_TOLERANCE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.mapbox.geojson.utils.PolylineUtils` v0 @kind this) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24d59c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24d5a2.  return @kind void;
}
procedure `java.util.List` `decode`(`java.lang.String` v13 @kind object, `int` v14 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.decode:(Ljava/lang/String;I)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L24d290.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24d296.  v0:= temp;
  #L24d298.  v1:= (`double`) v14 @kind i2d;
  #L24d29a.  v3:= 10.0D;
  #L24d29e.  call temp:= `pow`(v3, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L24d2a4.  v1:= temp @kind wide;
  #L24d2a6.  v14:= new `java.util.ArrayList`;
  #L24d2aa.  call `<init>`(v14) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24d2b0.  v3:= 0I;
  #L24d2b2.  v4:= 0I;
  #L24d2b4.  v5:= 0I;
  #L24d2b6.  v6:= 0I;
  #L24d2b8.  if v4 >= v0 then goto L24d354;
  #L24d2bc.  v7:= 1I;
  #L24d2be.  v8:= 1I;
  #L24d2c0.  v9:= 0I;
  #L24d2c2.  v10:= v4 + 1;
  #L24d2c6.  call temp:= `charAt`(v13, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24d2cc.  v4:= temp;
  #L24d2ce.  v4:= v4 + -63;
  #L24d2d2.  v4:= v4 - v7 @kind int;
  #L24d2d4.  v11:= v4 ^< v9 @kind int;
  #L24d2d8.  v8:= v8 + v11 @kind int;
  #L24d2da.  v9:= v9 + 5;
  #L24d2de.  v11:= 31I;
  #L24d2e2.  if v4 >= v11 then goto L24d350;
  #L24d2e6.  v4:= v8 ^& 1;
  #L24d2ea.  if v4 == 0 then goto L24d2f6;
  #L24d2ee.  v4:= v8 ^> 1;
  #L24d2f2.  v4:= ~v4 @kind int;
  #L24d2f4.  goto L24d2fa;
  #L24d2f6.  v4:= v8 ^> 1;
  #L24d2fa.  v4:= v4 + v5 @kind int;
  #L24d2fc.  v5:= 1I;
  #L24d2fe.  v8:= 0I;
  #L24d300.  v9:= v10 + 1;
  #L24d304.  call temp:= `charAt`(v13, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24d30a.  v10:= temp;
  #L24d30c.  v10:= v10 + -63;
  #L24d310.  v10:= v10 - v7 @kind int;
  #L24d312.  v12:= v10 ^< v8 @kind int;
  #L24d316.  v5:= v5 + v12 @kind int;
  #L24d318.  v8:= v8 + 5;
  #L24d31c.  if v10 >= v11 then goto L24d34c;
  #L24d320.  v7:= v5 ^& 1;
  #L24d324.  v5:= v5 ^> 1;
  #L24d328.  if v7 == 0 then goto L24d32e;
  #L24d32c.  v5:= ~v5 @kind int;
  #L24d32e.  v6:= v6 + v5 @kind int;
  #L24d330.  v7:= (`double`) v6 @kind i2d;
  #L24d332.  v7:= v7 / v1 @kind double;
  #L24d334.  v10:= (`double`) v4 @kind i2d;
  #L24d336.  v10:= v10 / v1 @kind double;
  #L24d338.  call temp:= `fromLngLat`(v7, v10) @signature `Lcom/mapbox/geojson/Point;.fromLngLat:(DD)Lcom/mapbox/geojson/Point;` @kind static;
  #L24d33e.  v5:= temp @kind object;
  #L24d340.  call temp:= `add`(v14, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24d346.  v5:= v4;
  #L24d348.  v4:= v9;
  #L24d34a.  goto L24d2b8;
  #L24d34c.  v10:= v9;
  #L24d34e.  goto L24d300;
  #L24d350.  v4:= v10;
  #L24d352.  goto L24d2c2;
  #L24d354.  return v14 @kind object;
}
procedure `java.lang.String` `encode`(`java.util.List` v11 @kind object, `int` v12 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.encode:(Ljava/util/List;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L24d1f4.  v0:= new `java.lang.StringBuilder`;
  #L24d1f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24d1fe.  v1:= (`double`) v12 @kind i2d;
  #L24d200.  v3:= 10.0D;
  #L24d204.  call temp:= `pow`(v3, v1) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L24d20a.  v1:= temp @kind wide;
  #L24d20c.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24d212.  v11:= temp @kind object;
  #L24d214.  v3:= 0L;
  #L24d218.  v5:= v3 @kind wide;
  #L24d21a.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24d220.  v12:= temp;
  #L24d222.  if v12 == 0 then goto L24d274;
  #L24d226.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24d22c.  v12:= temp @kind object;
  #L24d22e.  v12:= (`com.mapbox.geojson.Point`) v12 @kind object;
  #L24d232.  call temp:= `latitude`(v12) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d238.  v7:= temp @kind wide;
  #L24d23a.  v7:= v7 * v1 @kind double;
  #L24d23e.  call temp:= `round`(v7) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L24d244.  v7:= temp @kind wide;
  #L24d246.  call temp:= `longitude`(v12) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d24c.  v9:= temp @kind wide;
  #L24d24e.  v9:= v9 * v1 @kind double;
  #L24d252.  call temp:= `round`(v9) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L24d258.  v9:= temp @kind wide;
  #L24d25a.  v3:= v7 - v3 @kind long;
  #L24d25e.  v5:= v9 - v5 @kind long;
  #L24d262.  call `encode`(v3, v0) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.encode:(JLjava/lang/StringBuilder;)V` @kind static;
  #L24d268.  call `encode`(v5, v0) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.encode:(JLjava/lang/StringBuilder;)V` @kind static;
  #L24d26e.  v3:= v7 @kind wide;
  #L24d270.  v5:= v9 @kind wide;
  #L24d272.  goto L24d21a;
  #L24d274.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24d27a.  v11:= temp @kind object;
  #L24d27c.  return v11 @kind object;
}
procedure `void` `encode`(`long` v6 , `java.lang.StringBuilder` v8 @kind object) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.encode:(JLjava/lang/StringBuilder;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24d5b4.  v0:= 1I;
  #L24d5b6.  v1:= 0L;
  #L24d5ba.  v3:= lcmp(v6, v1);
  #L24d5be.  v6:= v6 ^< v0 @kind long;
  #L24d5c0.  if v3 >= 0 then goto L24d5c6;
  #L24d5c4.  v6:= ~v6 @kind long;
  #L24d5c6.  v0:= 63L;
  #L24d5ca.  v2:= 32L;
  #L24d5ce.  v4:= lcmp(v6, v2);
  #L24d5d2.  if v4 < 0 then goto L24d5f6;
  #L24d5d6.  v4:= 31L;
  #L24d5da.  v4:= v4 ^& v6 @kind long;
  #L24d5dc.  v2:= v2 ^| v4 @kind long;
  #L24d5de.  v2:= v2 + v0 @kind long;
  #L24d5e0.  v0:= (`int`) v2 @kind l2i;
  #L24d5e2.  call temp:= `toChars`(v0) @signature `Ljava/lang/Character;.toChars:(I)[C` @kind static;
  #L24d5e8.  v0:= temp @kind object;
  #L24d5ea.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d5f0.  v0:= 5I;
  #L24d5f2.  v6:= v6 ^> v0 @kind long;
  #L24d5f4.  goto L24d5c6;
  #L24d5f6.  v6:= v6 + v0 @kind long;
  #L24d5f8.  v7:= (`int`) v6 @kind l2i;
  #L24d5fa.  call temp:= `toChars`(v7) @signature `Ljava/lang/Character;.toChars:(I)[C` @kind static;
  #L24d600.  v6:= temp @kind object;
  #L24d602.  call temp:= `append`(v8, v6) @signature `Ljava/lang/StringBuilder;.append:([C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24d608.  return @kind void;
}
procedure `double` `getSqDist`(`com.mapbox.geojson.Point` v4 @kind object, `com.mapbox.geojson.Point` v5 @kind object) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.getSqDist:(Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;)D` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24d0f0.  call temp:= `longitude`(v4) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d0f6.  v0:= temp @kind wide;
  #L24d0f8.  call temp:= `longitude`(v5) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d0fe.  v2:= temp @kind wide;
  #L24d100.  v0:= v0 - v2 @kind double;
  #L24d102.  call temp:= `latitude`(v4) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d108.  v2:= temp @kind wide;
  #L24d10a.  call temp:= `latitude`(v5) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d110.  v4:= temp @kind wide;
  #L24d112.  v2:= v2 - v4 @kind double;
  #L24d114.  v0:= v0 * v0 @kind double;
  #L24d118.  v2:= v2 * v2 @kind double;
  #L24d11c.  v0:= v0 + v2 @kind double;
  #L24d11e.  return v0 @kind wide;
}
procedure `double` `getSqSegDist`(`com.mapbox.geojson.Point` v16 @kind object, `com.mapbox.geojson.Point` v17 @kind object, `com.mapbox.geojson.Point` v18 @kind object) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.getSqSegDist:(Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;)D` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L24d130.  call temp:= `longitude`(v17) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d136.  v0:= temp @kind wide;
  #L24d138.  call temp:= `latitude`(v17) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d13e.  v2:= temp @kind wide;
  #L24d140.  call temp:= `longitude`(v18) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d146.  v4:= temp @kind wide;
  #L24d148.  v4:= v4 - v0 @kind double;
  #L24d14a.  call temp:= `latitude`(v18) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d150.  v6:= temp @kind wide;
  #L24d152.  v6:= v6 - v2 @kind double;
  #L24d154.  v8:= 0L;
  #L24d158.  v10:= dcmpl(v4, v8);
  #L24d15c.  if v10 != 0 then goto L24d168;
  #L24d160.  v10:= dcmpl(v6, v8);
  #L24d164.  if v10 == 0 then goto L24d1c4;
  #L24d168.  call temp:= `longitude`(v16) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d16e.  v10:= temp @kind wide;
  #L24d170.  v10:= v10 - v0 @kind double;
  #L24d172.  v10:= v10 * v4 @kind double;
  #L24d176.  call temp:= `latitude`(v16) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d17c.  v12:= temp @kind wide;
  #L24d17e.  v12:= v12 - v2 @kind double;
  #L24d180.  v12:= v12 * v6 @kind double;
  #L24d184.  v10:= v10 + v12 @kind double;
  #L24d186.  v12:= v4 * v4 @kind double;
  #L24d18a.  v14:= v6 * v6 @kind double;
  #L24d18e.  v12:= v12 + v14 @kind double;
  #L24d190.  v10:= v10 / v12 @kind double;
  #L24d192.  v12:= 1.0D;
  #L24d196.  v14:= dcmpl(v10, v12);
  #L24d19a.  if v14 <= 0 then goto L24d1b0;
  #L24d19e.  call temp:= `longitude`(v18) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d1a4.  v0:= temp @kind wide;
  #L24d1a6.  call temp:= `latitude`(v18) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d1ac.  v2:= temp @kind wide;
  #L24d1ae.  goto L24d1c4;
  #L24d1b0.  v12:= dcmpl(v10, v8);
  #L24d1b4.  if v12 <= 0 then goto L24d1c4;
  #L24d1b8.  v4:= v4 * v10 @kind double;
  #L24d1bc.  v0:= v0 + v4 @kind double;
  #L24d1be.  v6:= v6 * v10 @kind double;
  #L24d1c2.  v2:= v2 + v6 @kind double;
  #L24d1c4.  call temp:= `longitude`(v16) @signature `Lcom/mapbox/geojson/Point;.longitude:()D` @kind virtual;
  #L24d1ca.  v4:= temp @kind wide;
  #L24d1cc.  v4:= v4 - v0 @kind double;
  #L24d1ce.  call temp:= `latitude`(v16) @signature `Lcom/mapbox/geojson/Point;.latitude:()D` @kind virtual;
  #L24d1d4.  v0:= temp @kind wide;
  #L24d1d6.  v0:= v0 - v2 @kind double;
  #L24d1d8.  v4:= v4 * v4 @kind double;
  #L24d1dc.  v0:= v0 * v0 @kind double;
  #L24d1e0.  v4:= v4 + v0 @kind double;
  #L24d1e2.  return v4 @kind wide;
}
procedure `java.util.List` `simplify`(`java.util.List` v3 @kind object) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24d368.  v0:= 1.0D;
  #L24d36c.  v2:= 0I;
  #L24d36e.  call temp:= `simplify`(v3, v0, v2) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;DZ)Ljava/util/List;` @kind static;
  #L24d374.  v3:= temp @kind object;
  #L24d376.  return v3 @kind object;
}
procedure `java.util.List` `simplify`(`java.util.List` v1 @kind object, `double` v2 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;D)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24d3a8.  v0:= 0I;
  #L24d3aa.  call temp:= `simplify`(v1, v2, v0) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;DZ)Ljava/util/List;` @kind static;
  #L24d3b0.  v1:= temp @kind object;
  #L24d3b2.  return v1 @kind object;
}
procedure `java.util.List` `simplify`(`java.util.List` v2 @kind object, `double` v3 , `boolean` v5 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;DZ)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24d3c4.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24d3ca.  v0:= temp;
  #L24d3cc.  v1:= 2I;
  #L24d3ce.  if v0 > v1 then goto L24d3d4;
  #L24d3d2.  return v2 @kind object;
  #L24d3d4.  v3:= v3 * v3 @kind double;
  #L24d3d8.  if v5 == 0 then goto L24d3de;
  #L24d3dc.  goto L24d3e6;
  #L24d3de.  call temp:= `simplifyRadialDist`(v2, v3) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyRadialDist:(Ljava/util/List;D)Ljava/util/List;` @kind static;
  #L24d3e4.  v2:= temp @kind object;
  #L24d3e6.  call temp:= `simplifyDouglasPeucker`(v2, v3) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDouglasPeucker:(Ljava/util/List;D)Ljava/util/List;` @kind static;
  #L24d3ec.  v2:= temp @kind object;
  #L24d3ee.  return v2 @kind object;
}
procedure `java.util.List` `simplify`(`java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;Z)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24d388.  v0:= 1.0D;
  #L24d38c.  call temp:= `simplify`(v2, v0, v3) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplify:(Ljava/util/List;DZ)Ljava/util/List;` @kind static;
  #L24d392.  v2:= temp @kind object;
  #L24d394.  return v2 @kind object;
}
procedure `java.util.List` `simplifyDouglasPeucker`(`java.util.List` v8 @kind object, `double` v9 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDouglasPeucker:(Ljava/util/List;D)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24d400.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24d406.  v0:= temp;
  #L24d408.  v0:= v0 + -1;
  #L24d40c.  v7:= new `java.util.ArrayList`;
  #L24d410.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24d416.  v1:= 0I;
  #L24d418.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d41e.  v1:= temp @kind object;
  #L24d420.  call temp:= `add`(v7, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d426.  v2:= 0I;
  #L24d428.  v1:= v8 @kind object;
  #L24d42a.  v3:= v0;
  #L24d42c.  v4:= v9 @kind wide;
  #L24d42e.  v6:= v7 @kind object;
  #L24d430.  call temp:= `simplifyDpStep`(v1, v2, v3, v4, v6) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDpStep:(Ljava/util/List;IIDLjava/util/List;)Ljava/util/List;` @kind static;
  #L24d436.  v9:= temp @kind object;
  #L24d438.  call temp:= `addAll`(v7, v9) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L24d43e.  call temp:= `get`(v8, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d444.  v8:= temp @kind object;
  #L24d446.  call temp:= `add`(v7, v8) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d44c.  return v7 @kind object;
}
procedure `java.util.List` `simplifyDpStep`(`java.util.List` v10 @kind object, `int` v11 , `int` v12 , `double` v13 , `java.util.List` v15 @kind object) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDpStep:(Ljava/util/List;IIDLjava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L24d460.  v0:= new `java.util.ArrayList`;
  #L24d464.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24d46a.  v1:= v11 + 1;
  #L24d46e.  v2:= 0I;
  #L24d470.  v2:= v13 @kind wide;
  #L24d472.  v8:= 0I;
  #L24d474.  if v1 >= v12 then goto L24d4b6;
  #L24d478.  call temp:= `get`(v10, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d47e.  v4:= temp @kind object;
  #L24d480.  v4:= (`com.mapbox.geojson.Point`) v4 @kind object;
  #L24d484.  call temp:= `get`(v10, v11) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d48a.  v5:= temp @kind object;
  #L24d48c.  v5:= (`com.mapbox.geojson.Point`) v5 @kind object;
  #L24d490.  call temp:= `get`(v10, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d496.  v6:= temp @kind object;
  #L24d498.  v6:= (`com.mapbox.geojson.Point`) v6 @kind object;
  #L24d49c.  call temp:= `getSqSegDist`(v4, v5, v6) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.getSqSegDist:(Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;)D` @kind static;
  #L24d4a2.  v4:= temp @kind wide;
  #L24d4a4.  v6:= dcmpl(v4, v2);
  #L24d4a8.  if v6 <= 0 then goto L24d4b0;
  #L24d4ac.  v8:= v1;
  #L24d4ae.  v2:= v4 @kind wide;
  #L24d4b0.  v1:= v1 + 1;
  #L24d4b4.  goto L24d474;
  #L24d4b6.  v1:= dcmpl(v2, v13);
  #L24d4ba.  if v1 <= 0 then goto L24d50e;
  #L24d4be.  v1:= v8 - v11 @kind int;
  #L24d4c2.  v9:= 1I;
  #L24d4c4.  if v1 <= v9 then goto L24d4e0;
  #L24d4c8.  v2:= v10 @kind object;
  #L24d4ca.  v3:= v11;
  #L24d4cc.  v4:= v8;
  #L24d4ce.  v5:= v13 @kind wide;
  #L24d4d0.  v7:= v15 @kind object;
  #L24d4d2.  call temp:= `simplifyDpStep`(v2, v3, v4, v5, v7) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDpStep:(Ljava/util/List;IIDLjava/util/List;)Ljava/util/List;` @kind static;
  #L24d4d8.  v11:= temp @kind object;
  #L24d4da.  call temp:= `addAll`(v0, v11) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L24d4e0.  call temp:= `get`(v10, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d4e6.  v11:= temp @kind object;
  #L24d4e8.  call temp:= `add`(v0, v11) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d4ee.  v11:= v12 - v8 @kind int;
  #L24d4f2.  if v11 <= v9 then goto L24d50e;
  #L24d4f6.  v2:= v10 @kind object;
  #L24d4f8.  v3:= v8;
  #L24d4fa.  v4:= v12;
  #L24d4fc.  v5:= v13 @kind wide;
  #L24d4fe.  v7:= v15 @kind object;
  #L24d500.  call temp:= `simplifyDpStep`(v2, v3, v4, v5, v7) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyDpStep:(Ljava/util/List;IIDLjava/util/List;)Ljava/util/List;` @kind static;
  #L24d506.  v10:= temp @kind object;
  #L24d508.  call temp:= `addAll`(v0, v10) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L24d50e.  return v0 @kind object;
}
procedure `java.util.List` `simplifyRadialDist`(`java.util.List` v8 @kind object, `double` v9 ) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.simplifyRadialDist:(Ljava/util/List;D)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24d520.  v0:= 0I;
  #L24d522.  call temp:= `get`(v8, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d528.  v0:= temp @kind object;
  #L24d52a.  v0:= (`com.mapbox.geojson.Point`) v0 @kind object;
  #L24d52e.  v1:= new `java.util.ArrayList`;
  #L24d532.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24d538.  call temp:= `add`(v1, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d53e.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24d544.  v2:= temp;
  #L24d546.  v3:= 1I;
  #L24d548.  v4:= 0I;
  #L24d54a.  if v3 >= v2 then goto L24d578;
  #L24d54e.  call temp:= `get`(v8, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24d554.  v4:= temp @kind object;
  #L24d556.  v4:= (`com.mapbox.geojson.Point`) v4 @kind object;
  #L24d55a.  call temp:= `getSqDist`(v4, v0) @signature `Lcom/mapbox/geojson/utils/PolylineUtils;.getSqDist:(Lcom/mapbox/geojson/Point;Lcom/mapbox/geojson/Point;)D` @kind static;
  #L24d560.  v5:= temp @kind wide;
  #L24d562.  v7:= dcmpl(v5, v9);
  #L24d566.  if v7 <= 0 then goto L24d572;
  #L24d56a.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d570.  v0:= v4 @kind object;
  #L24d572.  v3:= v3 + 1;
  #L24d576.  goto L24d54a;
  #L24d578.  call temp:= `equals`(v0, v4) @signature `Lcom/mapbox/geojson/Point;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d57e.  v8:= temp;
  #L24d580.  if v8 != 0 then goto L24d58a;
  #L24d584.  call temp:= `add`(v1, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L24d58a.  return v1 @kind object;
}
