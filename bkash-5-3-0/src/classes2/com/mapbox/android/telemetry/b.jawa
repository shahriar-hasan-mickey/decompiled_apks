record `com.mapbox.android.telemetry.b` @kind class @AccessFlag  extends `com.mapbox.android.telemetry.b0` @kind interface {
  `android.content.Context` `com.mapbox.android.telemetry.b.a` @AccessFlag PRIVATE_FINAL;
  `android.app.AlarmManager` `com.mapbox.android.telemetry.b.b` @AccessFlag PRIVATE_FINAL;
  `com.mapbox.android.telemetry.a` `com.mapbox.android.telemetry.b.c` @AccessFlag PRIVATE_FINAL;
  `android.app.PendingIntent` `com.mapbox.android.telemetry.b.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.b` v0 @kind this, `android.content.Context` v1 @kind object, `android.app.AlarmManager` v2 @kind object, `com.mapbox.android.telemetry.a` v3 @kind object) @signature `Lcom/mapbox/android/telemetry/b;.<init>:(Landroid/content/Context;Landroid/app/AlarmManager;Lcom/mapbox/android/telemetry/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L240c08.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L240c0e.  v0.`com.mapbox.android.telemetry.b.a` @type ^`android.content.Context` := v1 @kind object;
  #L240c12.  v0.`com.mapbox.android.telemetry.b.b` @type ^`android.app.AlarmManager` := v2 @kind object;
  #L240c16.  v0.`com.mapbox.android.telemetry.b.c` @type ^`com.mapbox.android.telemetry.a` := v3 @kind object;
  #L240c1a.  return @kind void;
}
procedure `void` `a`(`com.mapbox.android.telemetry.b` v7 @kind this, `long` v8 ) @signature `Lcom/mapbox/android/telemetry/b;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L240c90.  v4:= `@@com.mapbox.android.telemetry.c0.c` @type ^`long` @kind wide;
  #L240c94.  v2:= v8 + v4 @kind long;
  #L240c98.  v0:= v7.`com.mapbox.android.telemetry.b.b` @type ^`android.app.AlarmManager` @kind object;
  #L240c9c.  v6:= v7.`com.mapbox.android.telemetry.b.d` @type ^`android.app.PendingIntent` @kind object;
  #L240ca0.  v1:= 3I;
  #L240ca2.  call `setInexactRepeating`(v0, v1, v2, v4, v6) @signature `Landroid/app/AlarmManager;.setInexactRepeating:(IJJLandroid/app/PendingIntent;)V` @kind virtual;
  #L240ca8.  return @kind void;
}
procedure `void` `b`(`com.mapbox.android.telemetry.b` v4 @kind this) @signature `Lcom/mapbox/android/telemetry/b;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L240c2c.  v0:= v4.`com.mapbox.android.telemetry.b.c` @type ^`com.mapbox.android.telemetry.a` @kind object;
  #L240c30.  call temp:= `a`(v0) @signature `Lcom/mapbox/android/telemetry/a;.a:()Landroid/content/Intent;` @kind virtual;
  #L240c36.  v0:= temp @kind object;
  #L240c38.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L240c3c.  v2:= 23I;
  #L240c40.  if v1 < v2 then goto L240c4a;
  #L240c44.  v1:= 201326592I;
  #L240c48.  goto L240c4e;
  #L240c4a.  v1:= 134217728I;
  #L240c4e.  v2:= v4.`com.mapbox.android.telemetry.b.a` @type ^`android.content.Context` @kind object;
  #L240c52.  v3:= 0I;
  #L240c54.  call temp:= `getBroadcast`(v2, v3, v0, v1) @signature `Landroid/app/PendingIntent;.getBroadcast:(Landroid/content/Context;ILandroid/content/Intent;I)Landroid/app/PendingIntent;` @kind static;
  #L240c5a.  v0:= temp @kind object;
  #L240c5c.  v4.`com.mapbox.android.telemetry.b.d` @type ^`android.app.PendingIntent` := v0 @kind object;
  #L240c60.  v0:= new `android.content.IntentFilter`;
  #L240c64.  v1:= "com.mapbox.scheduler_flusher" @kind object;
  #L240c68.  call `<init>`(v0, v1) @signature `Landroid/content/IntentFilter;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L240c6e.  v1:= v4.`com.mapbox.android.telemetry.b.a` @type ^`android.content.Context` @kind object;
  #L240c72.  v2:= v4.`com.mapbox.android.telemetry.b.c` @type ^`com.mapbox.android.telemetry.a` @kind object;
  #L240c76.  call temp:= `registerReceiver`(v1, v2, v0) @signature `Landroid/content/Context;.registerReceiver:(Landroid/content/BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/content/Intent;` @kind virtual;
  #L240c7c.  return @kind void;
}
procedure `void` `c`(`com.mapbox.android.telemetry.b` v2 @kind this) @signature `Lcom/mapbox/android/telemetry/b;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L240cbc.  v0:= v2.`com.mapbox.android.telemetry.b.d` @type ^`android.app.PendingIntent` @kind object;
  #L240cc0.  if v0 == 0 then goto L240cce;
  #L240cc4.  v1:= v2.`com.mapbox.android.telemetry.b.b` @type ^`android.app.AlarmManager` @kind object;
  #L240cc8.  call `cancel`(v1, v0) @signature `Landroid/app/AlarmManager;.cancel:(Landroid/app/PendingIntent;)V` @kind virtual;
  #L240cce.  v0:= v2.`com.mapbox.android.telemetry.b.a` @type ^`android.content.Context` @kind object;
  #L240cd2.  v1:= v2.`com.mapbox.android.telemetry.b.c` @type ^`com.mapbox.android.telemetry.a` @kind object;
  #L240cd6.  call `unregisterReceiver`(v0, v1) @signature `Landroid/content/Context;.unregisterReceiver:(Landroid/content/BroadcastReceiver;)V` @kind virtual;
  #L240cdc.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L240cce..L240cdc] goto L240cdc;
}
