record `com.mapbox.android.telemetry.z$h$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `com.mapbox.android.telemetry.z$h$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.z$h$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/mapbox/android/telemetry/z$h$a;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243bb8.  v0.`com.mapbox.android.telemetry.z$h$a.g` @type ^`java.lang.String` := v1 @kind object;
  #L243bbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243bc2.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`com.mapbox.android.telemetry.z$h$a` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lcom/mapbox/android/telemetry/z$h$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L243b98.  v0:= new `java.lang.Thread`;
  #L243b9c.  v1:= v2.`com.mapbox.android.telemetry.z$h$a.g` @type ^`java.lang.String` @kind object;
  #L243ba0.  call `<init>`(v0, v3, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L243ba6.  return v0 @kind object;
}
