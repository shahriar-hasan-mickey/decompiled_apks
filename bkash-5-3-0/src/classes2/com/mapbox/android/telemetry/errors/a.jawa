record `com.mapbox.android.telemetry.errors.a` @kind class @AccessFlag FINAL {
  `android.content.SharedPreferences` `com.mapbox.android.telemetry.errors.a.a` @AccessFlag PRIVATE_FINAL;
  `com.mapbox.android.telemetry.z` `com.mapbox.android.telemetry.errors.a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.HashSet` `com.mapbox.android.telemetry.errors.a.c` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `com.mapbox.android.telemetry.errors.a.d` @AccessFlag PRIVATE_FINAL;
  `java.io.File`[] `com.mapbox.android.telemetry.errors.a.e` @AccessFlag PRIVATE;
  `int` `com.mapbox.android.telemetry.errors.a.f` @AccessFlag PRIVATE;
  `boolean` `com.mapbox.android.telemetry.errors.a.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.errors.a` v1 @kind this, `android.content.SharedPreferences` v2 @kind object, `com.mapbox.android.telemetry.z` v3 @kind object, `java.io.File`[] v4 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.<init>:(Landroid/content/SharedPreferences;Lcom/mapbox/android/telemetry/z;[Ljava/io/File;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L246d24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L246d2a.  v0:= new `java.util.HashSet`;
  #L246d2e.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L246d34.  v1.`com.mapbox.android.telemetry.errors.a.c` @type ^`java.util.HashSet` := v0 @kind object;
  #L246d38.  v0:= new `java.util.HashMap`;
  #L246d3c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L246d42.  v1.`com.mapbox.android.telemetry.errors.a.d` @type ^`java.util.HashMap` := v0 @kind object;
  #L246d46.  v1.`com.mapbox.android.telemetry.errors.a.a` @type ^`android.content.SharedPreferences` := v2 @kind object;
  #L246d4a.  v1.`com.mapbox.android.telemetry.errors.a.b` @type ^`com.mapbox.android.telemetry.z` := v3 @kind object;
  #L246d4e.  v1.`com.mapbox.android.telemetry.errors.a.e` @type ^`java.io.File`[] := v4 @kind object;
  #L246d52.  v2:= 0I;
  #L246d54.  v1.`com.mapbox.android.telemetry.errors.a.f` @type ^`int` := v2;
  #L246d58.  v1.`com.mapbox.android.telemetry.errors.a.g` @type ^`boolean` := v2 @kind boolean;
  #L246d5c.  return @kind void;
}
procedure `com.mapbox.android.telemetry.z` `a`(`com.mapbox.android.telemetry.errors.a` v0 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.a:(Lcom/mapbox/android/telemetry/errors/a;)Lcom/mapbox/android/telemetry/z;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L246c78.  v0:= v0.`com.mapbox.android.telemetry.errors.a.b` @type ^`com.mapbox.android.telemetry.z` @kind object;
  #L246c7c.  return v0 @kind object;
}
procedure `com.mapbox.android.telemetry.errors.a` `b`(`android.content.Context` v7 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.b:(Landroid/content/Context;)Lcom/mapbox/android/telemetry/errors/a;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L246c90.  v0:= "MapboxCrashReporterPrefs" @kind object;
  #L246c94.  v1:= 0I;
  #L246c96.  call temp:= `getSharedPreferences`(v7, v0, v1) @signature `Landroid/content/Context;.getSharedPreferences:(Ljava/lang/String;I)Landroid/content/SharedPreferences;` @kind virtual;
  #L246c9c.  v0:= temp @kind object;
  #L246c9e.  v2:= new `com.mapbox.android.telemetry.errors.a`;
  #L246ca2.  v3:= new `com.mapbox.android.telemetry.z`;
  #L246ca6.  v4:= 2I;
  #L246ca8.  v4:= new `java.lang.Object`[v4];
  #L246cac.  v5:= "mapbox-android-crash" @kind object;
  #L246cb0.  v4[v1]:= v5 @kind object;
  #L246cb4.  v5:= 1I;
  #L246cb6.  v6:= "8.1.0-okhttp3" @kind object;
  #L246cba.  v4[v5]:= v6 @kind object;
  #L246cbe.  v5:= "%s/%s" @kind object;
  #L246cc2.  call temp:= `format`(v5, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L246cc8.  v4:= temp @kind object;
  #L246cca.  v5:= "" @kind object;
  #L246cce.  call `<init>`(v3, v7, v5, v4) @signature `Lcom/mapbox/android/telemetry/z;.<init>:(Landroid/content/Context;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L246cd4.  v7:= new `java.io.File`[v1];
  #L246cd8.  call `<init>`(v2, v0, v3, v7) @signature `Lcom/mapbox/android/telemetry/errors/a;.<init>:(Landroid/content/SharedPreferences;Lcom/mapbox/android/telemetry/z;[Ljava/io/File;)V` @kind direct;
  #L246cde.  return v2 @kind object;
}
procedure `void` `k`(`com.mapbox.android.telemetry.errors.a` v2 @kind this, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object, `java.util.concurrent.CountDownLatch` v4 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.k:(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/CountDownLatch;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L246d70.  v0:= v2.`com.mapbox.android.telemetry.errors.a.b` @type ^`com.mapbox.android.telemetry.z` @kind object;
  #L246d74.  v1:= new `com.mapbox.android.telemetry.errors.a$a`;
  #L246d78.  call `<init>`(v1, v2, v3, v4) @signature `Lcom/mapbox/android/telemetry/errors/a$a;.<init>:(Lcom/mapbox/android/telemetry/errors/a;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/CountDownLatch;)V` @kind direct;
  #L246d7e.  call temp:= `e`(v0, v1) @signature `Lcom/mapbox/android/telemetry/z;.e:(Lcom/mapbox/android/telemetry/l0;)Z` @kind virtual;
  #L246d84.  return @kind void;
}
procedure `boolean` `c`(`com.mapbox.android.telemetry.errors.a` v1 @kind this, `com.mapbox.android.telemetry.CrashEvent` v2 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.c:(Lcom/mapbox/android/telemetry/CrashEvent;)Z` @AccessFlag  {
    temp;
    v0;

  #L2469f0.  v0:= v1.`com.mapbox.android.telemetry.errors.a.d` @type ^`java.util.HashMap` @kind object;
  #L2469f4.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2469fa.  v2:= temp @kind object;
  #L2469fc.  v2:= (`java.io.File`) v2 @kind object;
  #L246a00.  if v2 == 0 then goto L246a14;
  #L246a04.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L246a0a.  v2:= temp;
  #L246a0c.  if v2 == 0 then goto L246a14;
  #L246a10.  v2:= 1I;
  #L246a12.  goto L246a16;
  #L246a14.  v2:= 0I;
  #L246a16.  return v2;
}
procedure `boolean` `d`(`com.mapbox.android.telemetry.errors.a` v2 @kind this) @signature `Lcom/mapbox/android/telemetry/errors/a;.d:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L246a28.  v0:= v2.`com.mapbox.android.telemetry.errors.a.f` @type ^`int`;
  #L246a2c.  v1:= v2.`com.mapbox.android.telemetry.errors.a.e` @type ^`java.io.File`[] @kind object;
  #L246a30.  v1:= length @variable v1;
  #L246a32.  if v0 >= v1 then goto L246a3a;
  #L246a36.  v0:= 1I;
  #L246a38.  goto L246a3c;
  #L246a3a.  v0:= 0I;
  #L246a3c.  return v0;
}
procedure `boolean` `e`(`com.mapbox.android.telemetry.errors.a` v1 @kind this, `com.mapbox.android.telemetry.CrashEvent` v2 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.e:(Lcom/mapbox/android/telemetry/CrashEvent;)Z` @AccessFlag  {
    temp;
    v0;

  #L246a50.  v0:= v1.`com.mapbox.android.telemetry.errors.a.c` @type ^`java.util.HashSet` @kind object;
  #L246a54.  call temp:= `getHash`(v2) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.getHash:()Ljava/lang/String;` @kind virtual;
  #L246a5a.  v2:= temp @kind object;
  #L246a5c.  call temp:= `contains`(v0, v2) @signature `Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L246a62.  v2:= temp;
  #L246a64.  return v2;
}
procedure `boolean` `f`(`com.mapbox.android.telemetry.errors.a` v3 @kind this) @signature `Lcom/mapbox/android/telemetry/errors/a;.f:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L246a78.  v0:= v3.`com.mapbox.android.telemetry.errors.a.a` @type ^`android.content.SharedPreferences` @kind object;
  #L246a7c.  v1:= "mapbox.crash.enable" @kind object;
  #L246a80.  v2:= 1I;
  #L246a82.  call temp:= `getBoolean`(v0, v1, v2) @signature `Landroid/content/SharedPreferences;.getBoolean:(Ljava/lang/String;Z)Z` @kind interface;
  #L246a88.  v0:= temp;
  #L246a8a.  return v0;
  #L246a8c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L246a8e.  call temp:= `toString`(v0) @signature `Ljava/lang/Exception;.toString:()Ljava/lang/String;` @kind virtual;
  #L246a94.  v0:= 0I;
  #L246a96.  return v0;
  catch `java.lang.Exception` @[L246a78..L246a8a] goto L246a8c;
}
procedure `com.mapbox.android.telemetry.errors.a` `g`(`com.mapbox.android.telemetry.errors.a` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.g:(Ljava/io/File;)Lcom/mapbox/android/telemetry/errors/a;` @AccessFlag  {
    temp;
    v0;

  #L246cf0.  v0:= 0I;
  #L246cf2.  v1.`com.mapbox.android.telemetry.errors.a.f` @type ^`int` := v0;
  #L246cf6.  call temp:= `d`(v2) @signature `Lma/a;.d:(Ljava/io/File;)[Ljava/io/File;` @kind static;
  #L246cfc.  v2:= temp @kind object;
  #L246cfe.  v1.`com.mapbox.android.telemetry.errors.a.e` @type ^`java.io.File`[] := v2 @kind object;
  #L246d02.  v0:= new `ma.a$a`;
  #L246d06.  call `<init>`(v0) @signature `Lma/a$a;.<init>:()V` @kind direct;
  #L246d0c.  call `sort`(v2, v0) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L246d12.  return v1 @kind object;
}
procedure `com.mapbox.android.telemetry.CrashEvent` `h`(`com.mapbox.android.telemetry.errors.a` v4 @kind this) @signature `Lcom/mapbox/android/telemetry/errors/a;.h:()Lcom/mapbox/android/telemetry/CrashEvent;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L246ba8.  call temp:= `d`(v4) @signature `Lcom/mapbox/android/telemetry/errors/a;.d:()Z` @kind virtual;
  #L246bae.  v0:= temp;
  #L246bb0.  if v0 == 0 then goto L246c3e;
  #L246bb4.  v0:= v4.`com.mapbox.android.telemetry.errors.a.e` @type ^`java.io.File`[] @kind object;
  #L246bb8.  v1:= v4.`com.mapbox.android.telemetry.errors.a.f` @type ^`int`;
  #L246bbc.  v0:= v0[v1] @kind object;
  #L246bc0.  call temp:= `e`(v0) @signature `Lma/a;.e:(Ljava/io/File;)Ljava/lang/String;` @kind static;
  #L246bc6.  v1:= temp @kind object;
  #L246bc8.  call temp:= `a`(v1) @signature `Lcom/mapbox/android/telemetry/errors/c;.a:(Ljava/lang/String;)Lcom/mapbox/android/telemetry/CrashEvent;` @kind static;
  #L246bce.  v1:= temp @kind object;
  #L246bd0.  call temp:= `isValid`(v1) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.isValid:()Z` @kind virtual;
  #L246bd6.  v2:= temp;
  #L246bd8.  if v2 == 0 then goto L246be6;
  #L246bdc.  v2:= v4.`com.mapbox.android.telemetry.errors.a.d` @type ^`java.util.HashMap` @kind object;
  #L246be0.  call temp:= `put`(v2, v1, v0) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L246be6.  v0:= v4.`com.mapbox.android.telemetry.errors.a.f` @type ^`int`;
  #L246bea.  v0:= v0 + 1;
  #L246bee.  v4.`com.mapbox.android.telemetry.errors.a.f` @type ^`int` := v0;
  #L246bf2.  return v1 @kind object;
  #L246bf4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246bf6.  goto L246c30;
  #L246bf8.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L246bfa.  v1:= new `java.lang.IllegalStateException`;
  #L246bfe.  v2:= new `java.lang.StringBuilder`;
  #L246c02.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L246c08.  v3:= "File cannot be read: " @kind object;
  #L246c0c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246c12.  call temp:= `toString`(v0) @signature `Ljava/io/FileNotFoundException;.toString:()Ljava/lang/String;` @kind virtual;
  #L246c18.  v0:= temp @kind object;
  #L246c1a.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246c20.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L246c26.  v0:= temp @kind object;
  #L246c28.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246c2e.  throw v1;
  #L246c30.  v1:= v4.`com.mapbox.android.telemetry.errors.a.f` @type ^`int`;
  #L246c34.  v1:= v1 + 1;
  #L246c38.  v4.`com.mapbox.android.telemetry.errors.a.f` @type ^`int` := v1;
  #L246c3c.  throw v0;
  #L246c3e.  v0:= new `java.lang.IllegalStateException`;
  #L246c42.  v1:= "No more events can be read" @kind object;
  #L246c46.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L246c4c.  throw v0;
  catch `java.io.FileNotFoundException` @[L246bb4..L246be6] goto L246bf8;
  catch `java.lang.Throwable` @[L246bb4..L246be6] goto L246bf4;
  catch `java.lang.Throwable` @[L246bfa..L246c30] goto L246bf4;
}
procedure `boolean` `i`(`com.mapbox.android.telemetry.errors.a` v3 @kind this, `com.mapbox.android.telemetry.CrashEvent` v4 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.i:(Lcom/mapbox/android/telemetry/CrashEvent;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L246ab8.  call temp:= `isValid`(v4) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.isValid:()Z` @kind virtual;
  #L246abe.  v0:= temp;
  #L246ac0.  if v0 != 0 then goto L246ac8;
  #L246ac4.  v4:= 0I;
  #L246ac6.  return v4;
  #L246ac8.  v0:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L246acc.  v1:= v3.`com.mapbox.android.telemetry.errors.a.g` @type ^`boolean` @kind boolean;
  #L246ad0.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L246ad6.  v1:= new `java.util.concurrent.CountDownLatch`;
  #L246ada.  v2:= 1I;
  #L246adc.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/CountDownLatch;.<init>:(I)V` @kind direct;
  #L246ae2.  call temp:= `j`(v3, v4, v0, v1) @signature `Lcom/mapbox/android/telemetry/errors/a;.j:(Lcom/mapbox/android/telemetry/CrashEvent;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/CountDownLatch;)Z` @kind virtual;
  #L246ae8.  v4:= temp;
  #L246aea.  return v4;
}
procedure `boolean` `j`(`com.mapbox.android.telemetry.errors.a` v3 @kind this, `com.mapbox.android.telemetry.CrashEvent` v4 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v5 @kind object, `java.util.concurrent.CountDownLatch` v6 @kind object) @signature `Lcom/mapbox/android/telemetry/errors/a;.j:(Lcom/mapbox/android/telemetry/CrashEvent;Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/CountDownLatch;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L246afc.  call `k`(v3, v5, v6) @signature `Lcom/mapbox/android/telemetry/errors/a;.k:(Ljava/util/concurrent/atomic/AtomicBoolean;Ljava/util/concurrent/CountDownLatch;)V` @kind direct;
  #L246b02.  v0:= v3.`com.mapbox.android.telemetry.errors.a.b` @type ^`com.mapbox.android.telemetry.z` @kind object;
  #L246b06.  call temp:= `A`(v0, v4) @signature `Lcom/mapbox/android/telemetry/z;.A:(Lcom/mapbox/android/telemetry/Event;)Z` @kind virtual;
  #L246b0c.  v0:= 10L;
  #L246b10.  v2:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L246b14.  call temp:= `await`(v6, v0, v2) @signature `Ljava/util/concurrent/CountDownLatch;.await:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L246b1a.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L246b20.  v6:= temp;
  #L246b22.  if v6 == 0 then goto L246b38;
  #L246b26.  v6:= v3.`com.mapbox.android.telemetry.errors.a.c` @type ^`java.util.HashSet` @kind object;
  #L246b2a.  call temp:= `getHash`(v4) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.getHash:()Ljava/lang/String;` @kind virtual;
  #L246b30.  v4:= temp @kind object;
  #L246b32.  call temp:= `add`(v6, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L246b38.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L246b3e.  v4:= temp;
  #L246b40.  return v4;
  #L246b42.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L246b44.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L246b4a.  v5:= temp;
  #L246b4c.  if v5 == 0 then goto L246b62;
  #L246b50.  v5:= v3.`com.mapbox.android.telemetry.errors.a.c` @type ^`java.util.HashSet` @kind object;
  #L246b54.  call temp:= `getHash`(v4) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.getHash:()Ljava/lang/String;` @kind virtual;
  #L246b5a.  v4:= temp @kind object;
  #L246b5c.  call temp:= `add`(v5, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L246b62.  throw v6;
  #L246b64.  
  #L246b66.  v6:= 0I;
  #L246b68.  call temp:= `get`(v5) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L246b6e.  v5:= temp;
  #L246b70.  if v5 == 0 then goto L246b86;
  #L246b74.  v5:= v3.`com.mapbox.android.telemetry.errors.a.c` @type ^`java.util.HashSet` @kind object;
  #L246b78.  call temp:= `getHash`(v4) @signature `Lcom/mapbox/android/telemetry/CrashEvent;.getHash:()Ljava/lang/String;` @kind virtual;
  #L246b7e.  v4:= temp @kind object;
  #L246b80.  call temp:= `add`(v5, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L246b86.  return v6;
  catch `java.lang.InterruptedException` @[L246b10..L246b1a] goto L246b64;
  catch `java.lang.Throwable` @[L246b10..L246b1a] goto L246b42;
}
