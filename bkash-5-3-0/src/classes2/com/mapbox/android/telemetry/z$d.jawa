record `com.mapbox.android.telemetry.z$d` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.List` `com.mapbox.android.telemetry.z$d.g` @AccessFlag FINAL_SYNTHETIC;
  `com.mapbox.android.telemetry.z` `com.mapbox.android.telemetry.z$d.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.z$d` v0 @kind this, `com.mapbox.android.telemetry.z` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/mapbox/android/telemetry/z$d;.<init>:(Lcom/mapbox/android/telemetry/z;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L243938.  v0.`com.mapbox.android.telemetry.z$d.h` @type ^`com.mapbox.android.telemetry.z` := v1 @kind object;
  #L24393c.  v0.`com.mapbox.android.telemetry.z$d.g` @type ^`java.util.List` := v2 @kind object;
  #L243940.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L243946.  return @kind void;
}
procedure `void` `run`(`com.mapbox.android.telemetry.z$d` v3 @kind this) @signature `Lcom/mapbox/android/telemetry/z$d;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L243958.  v0:= v3.`com.mapbox.android.telemetry.z$d.h` @type ^`com.mapbox.android.telemetry.z` @kind object;
  #L24395c.  v1:= v3.`com.mapbox.android.telemetry.z$d.g` @type ^`java.util.List` @kind object;
  #L243960.  v2:= 1I;
  #L243962.  call `c`(v0, v1, v2) @signature `Lcom/mapbox/android/telemetry/z;.c:(Lcom/mapbox/android/telemetry/z;Ljava/util/List;Z)V` @kind static;
  #L243968.  goto L243972;
  #L24396a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24396c.  call temp:= `toString`(v0) @signature `Ljava/lang/Throwable;.toString:()Ljava/lang/String;` @kind virtual;
  #L243972.  return @kind void;
  catch `java.lang.Throwable` @[L243958..L243968] goto L24396a;
}
