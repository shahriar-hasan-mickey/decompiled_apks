record `com.mapbox.android.telemetry.s$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.util.List` `com.mapbox.android.telemetry.s$a.g` @AccessFlag FINAL_SYNTHETIC;
  `com.mapbox.android.telemetry.s` `com.mapbox.android.telemetry.s$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.s$a` v0 @kind this, `com.mapbox.android.telemetry.s` v1 @kind object, `java.util.List` v2 @kind object) @signature `Lcom/mapbox/android/telemetry/s$a;.<init>:(Lcom/mapbox/android/telemetry/s;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L242f60.  v0.`com.mapbox.android.telemetry.s$a.h` @type ^`com.mapbox.android.telemetry.s` := v1 @kind object;
  #L242f64.  v0.`com.mapbox.android.telemetry.s$a.g` @type ^`java.util.List` := v2 @kind object;
  #L242f68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L242f6e.  return @kind void;
}
procedure `void` `run`(`com.mapbox.android.telemetry.s$a` v2 @kind this) @signature `Lcom/mapbox/android/telemetry/s$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L242f80.  v0:= v2.`com.mapbox.android.telemetry.s$a.h` @type ^`com.mapbox.android.telemetry.s` @kind object;
  #L242f84.  call temp:= `a`(v0) @signature `Lcom/mapbox/android/telemetry/s;.a:(Lcom/mapbox/android/telemetry/s;)Lcom/mapbox/android/telemetry/v;` @kind static;
  #L242f8a.  v0:= temp @kind object;
  #L242f8c.  v1:= v2.`com.mapbox.android.telemetry.s$a.g` @type ^`java.util.List` @kind object;
  #L242f90.  call `a`(v0, v1) @signature `Lcom/mapbox/android/telemetry/v;.a:(Ljava/util/List;)V` @kind interface;
  #L242f96.  goto L242fa0;
  #L242f98.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L242f9a.  call temp:= `toString`(v0) @signature `Ljava/lang/Throwable;.toString:()Ljava/lang/String;` @kind virtual;
  #L242fa0.  return @kind void;
  catch `java.lang.Throwable` @[L242f80..L242f96] goto L242f98;
}
