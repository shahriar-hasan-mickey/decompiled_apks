record `com.mapbox.android.telemetry.s` @kind class @AccessFlag  {
  `com.mapbox.android.telemetry.v` `com.mapbox.android.telemetry.s.a` @AccessFlag PRIVATE_FINAL;
  `com.mapbox.android.telemetry.m` `com.mapbox.android.telemetry.s.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `com.mapbox.android.telemetry.s.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.s` v0 @kind this, `com.mapbox.android.telemetry.m` v1 @kind object, `com.mapbox.android.telemetry.v` v2 @kind object, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lcom/mapbox/android/telemetry/s;.<init>:(Lcom/mapbox/android/telemetry/m;Lcom/mapbox/android/telemetry/v;Ljava/util/concurrent/ExecutorService;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2430c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2430ce.  v0.`com.mapbox.android.telemetry.s.b` @type ^`com.mapbox.android.telemetry.m` := v1 @kind object;
  #L2430d2.  v0.`com.mapbox.android.telemetry.s.a` @type ^`com.mapbox.android.telemetry.v` := v2 @kind object;
  #L2430d6.  v0.`com.mapbox.android.telemetry.s.c` @type ^`java.util.concurrent.ExecutorService` := v3 @kind object;
  #L2430da.  return @kind void;
}
procedure `com.mapbox.android.telemetry.v` `a`(`com.mapbox.android.telemetry.s` v0 @kind object) @signature `Lcom/mapbox/android/telemetry/s;.a:(Lcom/mapbox/android/telemetry/s;)Lcom/mapbox/android/telemetry/v;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L24307c.  v0:= v0.`com.mapbox.android.telemetry.s.a` @type ^`com.mapbox.android.telemetry.v` @kind object;
  #L243080.  return v0 @kind object;
}
procedure `com.mapbox.android.telemetry.s` `b`(`com.mapbox.android.telemetry.v` v3 @kind object, `java.util.concurrent.ExecutorService` v4 @kind object) @signature `Lcom/mapbox/android/telemetry/s;.b:(Lcom/mapbox/android/telemetry/v;Ljava/util/concurrent/ExecutorService;)Lcom/mapbox/android/telemetry/s;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24301c.  v0:= constclass @type ^`com.mapbox.android.telemetry.s` @kind object;
  #L243020.  @monitorenter v0
  #L243022.  if v3 == 0 then goto L243042;
  #L243026.  if v4 == 0 then goto L243042;
  #L24302a.  v1:= new `com.mapbox.android.telemetry.s`;
  #L24302e.  v2:= new `com.mapbox.android.telemetry.m`;
  #L243032.  call `<init>`(v2) @signature `Lcom/mapbox/android/telemetry/m;.<init>:()V` @kind direct;
  #L243038.  call `<init>`(v1, v2, v3, v4) @signature `Lcom/mapbox/android/telemetry/s;.<init>:(Lcom/mapbox/android/telemetry/m;Lcom/mapbox/android/telemetry/v;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L24303e.  @monitorexit v0
  #L243040.  return v1 @kind object;
  #L243042.  v3:= new `java.lang.IllegalArgumentException`;
  #L243046.  v4:= "Callback or executor can't be null" @kind object;
  #L24304a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L243050.  throw v3;
  #L243052.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L243054.  @monitorexit v0
  #L243056.  throw v3;
  catch `java.lang.Throwable` @[L24302a..L24303e] goto L243052;
  catch `java.lang.Throwable` @[L243042..L243052] goto L243052;
}
procedure `void` `c`(`com.mapbox.android.telemetry.s` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/mapbox/android/telemetry/s;.c:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2430ec.  v0:= v2.`com.mapbox.android.telemetry.s.c` @type ^`java.util.concurrent.ExecutorService` @kind object;
  #L2430f0.  v1:= new `com.mapbox.android.telemetry.s$a`;
  #L2430f4.  call `<init>`(v1, v2, v3) @signature `Lcom/mapbox/android/telemetry/s$a;.<init>:(Lcom/mapbox/android/telemetry/s;Ljava/util/List;)V` @kind direct;
  #L2430fa.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L243100.  goto L24310a;
  #L243102.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L243104.  call temp:= `toString`(v3) @signature `Ljava/util/concurrent/RejectedExecutionException;.toString:()Ljava/lang/String;` @kind virtual;
  #L24310a.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2430ec..L243100] goto L243102;
}
procedure `java.util.List` `d`(`com.mapbox.android.telemetry.s` v1 @kind this) @signature `Lcom/mapbox/android/telemetry/s;.d:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L243094.  @monitorenter v1
  #L243096.  v0:= v1.`com.mapbox.android.telemetry.s.b` @type ^`com.mapbox.android.telemetry.m` @kind object;
  #L24309a.  call temp:= `b`(v0) @signature `Lcom/mapbox/android/telemetry/m;.b:()Ljava/util/List;` @kind virtual;
  #L2430a0.  v0:= temp @kind object;
  #L2430a2.  @monitorexit v1
  #L2430a4.  return v0 @kind object;
  #L2430a6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2430a8.  @monitorexit v1
  #L2430aa.  throw v0;
  catch `java.lang.Throwable` @[L243096..L2430aa] goto L2430a6;
}
procedure `boolean` `e`(`com.mapbox.android.telemetry.s` v2 @kind this, `com.mapbox.android.telemetry.Event` v3 @kind object) @signature `Lcom/mapbox/android/telemetry/s;.e:(Lcom/mapbox/android/telemetry/Event;)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L242fc0.  @monitorenter v2
  #L242fc2.  v0:= v2.`com.mapbox.android.telemetry.s.b` @type ^`com.mapbox.android.telemetry.m` @kind object;
  #L242fc6.  call temp:= `c`(v0) @signature `Lcom/mapbox/android/telemetry/m;.c:()I` @kind virtual;
  #L242fcc.  v0:= temp;
  #L242fce.  v1:= 180I;
  #L242fd2.  if v0 < v1 then goto L242fe8;
  #L242fd6.  v0:= v2.`com.mapbox.android.telemetry.s.b` @type ^`com.mapbox.android.telemetry.m` @kind object;
  #L242fda.  call temp:= `b`(v0) @signature `Lcom/mapbox/android/telemetry/m;.b:()Ljava/util/List;` @kind virtual;
  #L242fe0.  v0:= temp @kind object;
  #L242fe2.  call `c`(v2, v0) @signature `Lcom/mapbox/android/telemetry/s;.c:(Ljava/util/List;)V` @kind direct;
  #L242fe8.  v0:= v2.`com.mapbox.android.telemetry.s.b` @type ^`com.mapbox.android.telemetry.m` @kind object;
  #L242fec.  call temp:= `a`(v0, v3) @signature `Lcom/mapbox/android/telemetry/m;.a:(Ljava/lang/Object;)Z` @kind virtual;
  #L242ff2.  v3:= temp;
  #L242ff4.  @monitorexit v2
  #L242ff6.  return v3;
  #L242ff8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L242ffa.  @monitorexit v2
  #L242ffc.  throw v3;
  catch `java.lang.Throwable` @[L242fc2..L242ffc] goto L242ff8;
}
