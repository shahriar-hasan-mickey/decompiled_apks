record `com.mapbox.android.telemetry.e0` @kind class @AccessFlag PUBLIC {
  `int` `com.mapbox.android.telemetry.e0.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.mapbox.android.telemetry.e0` v0 @kind this, `int` v1 ) @signature `Lcom/mapbox/android/telemetry/e0;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2449a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2449ae.  call `a`(v0, v1) @signature `Lcom/mapbox/android/telemetry/e0;.a:(I)V` @kind direct;
  #L2449b4.  v0.`com.mapbox.android.telemetry.e0.a` @type ^`int` := v1;
  #L2449b8.  return @kind void;
}
procedure `void` `a`(`com.mapbox.android.telemetry.e0` v1 @kind this, `int` v2 ) @signature `Lcom/mapbox/android/telemetry/e0;.a:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2449cc.  v0:= 1I;
  #L2449ce.  if v2 < v0 then goto L2449dc;
  #L2449d2.  v0:= 24I;
  #L2449d6.  if v2 > v0 then goto L2449dc;
  #L2449da.  return @kind void;
  #L2449dc.  v2:= new `java.lang.IllegalArgumentException`;
  #L2449e0.  v0:= "The interval passed in must be an an integer in the range of 1 to 24 hours." @kind object;
  #L2449e4.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2449ea.  throw v2;
}
procedure `int` `b`(`com.mapbox.android.telemetry.e0` v1 @kind this) @signature `Lcom/mapbox/android/telemetry/e0;.b:()I` @AccessFlag  {
    temp;
    v0;

  #L244990.  v0:= v1.`com.mapbox.android.telemetry.e0.a` @type ^`int`;
  #L244994.  return v0;
}
