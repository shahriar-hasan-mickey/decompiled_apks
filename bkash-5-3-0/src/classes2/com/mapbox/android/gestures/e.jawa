record `com.mapbox.android.gestures.e` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`com.mapbox.android.gestures.e` v0 @kind this) @signature `Lcom/mapbox/android/gestures/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L23f614.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f61a.  return @kind void;
}
procedure `long` `b`(`com.mapbox.android.gestures.e` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/mapbox/android/gestures/e;.b:(II)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23f5b4.  if v6 != 0 then goto L23f5be;
  #L23f5b8.  v5:= 0L;
  #L23f5bc.  goto L23f600;
  #L23f5be.  v0:= v5 - v6 @kind int;
  #L23f5c2.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L23f5c8.  v0:= temp;
  #L23f5ca.  v1:= 255L;
  #L23f5ce.  v3:= 1I;
  #L23f5d0.  if v0 <= v3 then goto L23f5d6;
  #L23f5d4.  return v1 @kind wide;
  #L23f5d6.  if v5 <= v6 then goto L23f5e0;
  #L23f5da.  v5:= 5L;
  #L23f5de.  goto L23f600;
  #L23f5e0.  if v5 >= v6 then goto L23f5e6;
  #L23f5e4.  return v1 @kind wide;
  #L23f5e6.  if v5 != v3 then goto L23f5f0;
  #L23f5ea.  v5:= 1L;
  #L23f5ee.  goto L23f5f4;
  #L23f5f0.  v5:= 6L;
  #L23f5f4.  v0:= 8I;
  #L23f5f8.  v5:= v5 ^< v0 @kind long;
  #L23f5fa.  v0:= 2L;
  #L23f5fe.  v5:= v5 + v0 @kind long;
  #L23f600.  return v5 @kind wide;
}
procedure `boolean` `a`(`com.mapbox.android.gestures.e` v5 @kind this, `int` v6 , `int` v7 , `int` v8 ) @signature `Lcom/mapbox/android/gestures/e;.a:(III)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23f564.  call temp:= `b`(v5, v7, v8) @signature `Lcom/mapbox/android/gestures/e;.b:(II)J` @kind direct;
  #L23f56a.  v7:= temp @kind wide;
  #L23f56c.  v0:= (`long`) v6 @kind i2l;
  #L23f56e.  v6:= 0I;
  #L23f570.  v2:= lcmp(v0, v7);
  #L23f574.  if v2 != 0 then goto L23f57a;
  #L23f578.  return v6;
  #L23f57a.  v2:= 0L;
  #L23f57e.  v4:= lcmp(v7, v2);
  #L23f582.  if v4 == 0 then goto L23f59e;
  #L23f586.  v2:= 255L;
  #L23f58a.  v2:= v2 ^& v7 @kind long;
  #L23f58c.  v4:= lcmp(v0, v2);
  #L23f590.  if v4 != 0 then goto L23f596;
  #L23f594.  return v6;
  #L23f596.  v2:= 8I;
  #L23f59a.  v7:= v7 ^> v2 @kind long;
  #L23f59c.  goto L23f57a;
  #L23f59e.  v6:= 1I;
  #L23f5a0.  return v6;
}
