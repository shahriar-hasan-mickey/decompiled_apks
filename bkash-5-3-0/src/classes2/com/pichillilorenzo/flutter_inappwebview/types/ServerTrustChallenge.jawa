record `com.pichillilorenzo.flutter_inappwebview.types.ServerTrustChallenge` @kind class @AccessFlag PUBLIC extends `com.pichillilorenzo.flutter_inappwebview.types.URLAuthenticationChallenge` @kind class {
}
procedure `void` `<init>`(`com.pichillilorenzo.flutter_inappwebview.types.ServerTrustChallenge` v0 @kind this, `com.pichillilorenzo.flutter_inappwebview.types.URLProtectionSpace` v1 @kind object) @signature `Lcom/pichillilorenzo/flutter_inappwebview/types/ServerTrustChallenge;.<init>:(Lcom/pichillilorenzo/flutter_inappwebview/types/URLProtectionSpace;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2974ac.  call `<init>`(v0, v1) @signature `Lcom/pichillilorenzo/flutter_inappwebview/types/URLAuthenticationChallenge;.<init>:(Lcom/pichillilorenzo/flutter_inappwebview/types/URLProtectionSpace;)V` @kind direct;
  #L2974b2.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.pichillilorenzo.flutter_inappwebview.types.ServerTrustChallenge` v2 @kind this) @signature `Lcom/pichillilorenzo/flutter_inappwebview/types/ServerTrustChallenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L297470.  v0:= new `java.lang.StringBuilder`;
  #L297474.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L29747a.  v1:= "ServerTrustChallenge{} " @kind object;
  #L29747e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297484.  call temp:= `toString`(v2) @signature `Lcom/pichillilorenzo/flutter_inappwebview/types/URLAuthenticationChallenge;.toString:()Ljava/lang/String;` @kind super;
  #L29748a.  v1:= temp @kind object;
  #L29748c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L297492.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L297498.  v0:= temp @kind object;
  #L29749a.  return v0 @kind object;
}
