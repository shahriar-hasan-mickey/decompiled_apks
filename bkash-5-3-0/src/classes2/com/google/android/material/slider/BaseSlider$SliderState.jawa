record `com.google.android.material.slider.BaseSlider$SliderState` @kind class @AccessFlag  extends `android.view.View$BaseSavedState` @kind class {
  `float` `com.google.android.material.slider.BaseSlider$SliderState.g` @AccessFlag ;
  `float` `com.google.android.material.slider.BaseSlider$SliderState.h` @AccessFlag ;
  `java.util.ArrayList` `com.google.android.material.slider.BaseSlider$SliderState.i` @AccessFlag ;
  `float` `com.google.android.material.slider.BaseSlider$SliderState.j` @AccessFlag ;
  `boolean` `com.google.android.material.slider.BaseSlider$SliderState.k` @AccessFlag ;
}
global `android.os.Parcelable$Creator` `@@com.google.android.material.slider.BaseSlider$SliderState.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1e4da8.  v0:= new `com.google.android.material.slider.BaseSlider$SliderState$a`;
  #L1e4dac.  call `<init>`(v0) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState$a;.<init>:()V` @kind direct;
  #L1e4db2.  `@@com.google.android.material.slider.BaseSlider$SliderState.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1e4db6.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider$SliderState` v2 @kind this, `android.os.Parcel` v3 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcel;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1e4dc8.  call `<init>`(v2, v3) @signature `Landroid/view/View$BaseSavedState;.<init>:(Landroid/os/Parcel;)V` @kind direct;
  #L1e4dce.  call temp:= `readFloat`(v3) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L1e4dd4.  v0:= temp;
  #L1e4dd6.  v2.`com.google.android.material.slider.BaseSlider$SliderState.g` @type ^`float` := v0;
  #L1e4dda.  call temp:= `readFloat`(v3) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L1e4de0.  v0:= temp;
  #L1e4de2.  v2.`com.google.android.material.slider.BaseSlider$SliderState.h` @type ^`float` := v0;
  #L1e4de6.  v0:= new `java.util.ArrayList`;
  #L1e4dea.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1e4df0.  v2.`com.google.android.material.slider.BaseSlider$SliderState.i` @type ^`java.util.ArrayList` := v0 @kind object;
  #L1e4df4.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L1e4df8.  call temp:= `getClassLoader`(v1) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L1e4dfe.  v1:= temp @kind object;
  #L1e4e00.  call `readList`(v3, v0, v1) @signature `Landroid/os/Parcel;.readList:(Ljava/util/List;Ljava/lang/ClassLoader;)V` @kind virtual;
  #L1e4e06.  call temp:= `readFloat`(v3) @signature `Landroid/os/Parcel;.readFloat:()F` @kind virtual;
  #L1e4e0c.  v0:= temp;
  #L1e4e0e.  v2.`com.google.android.material.slider.BaseSlider$SliderState.j` @type ^`float` := v0;
  #L1e4e12.  call temp:= `createBooleanArray`(v3) @signature `Landroid/os/Parcel;.createBooleanArray:()[Z` @kind virtual;
  #L1e4e18.  v3:= temp @kind object;
  #L1e4e1a.  v0:= 0I;
  #L1e4e1c.  v3:= v3[v0] @kind boolean;
  #L1e4e20.  v2.`com.google.android.material.slider.BaseSlider$SliderState.k` @type ^`boolean` := v3 @kind boolean;
  #L1e4e24.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider$SliderState` v0 @kind this, `android.os.Parcel` v1 @kind object, `com.google.android.material.slider.BaseSlider$a` v2 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcel;Lcom/google/android/material/slider/BaseSlider$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1e4e38.  call `<init>`(v0, v1) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcel;)V` @kind direct;
  #L1e4e3e.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.slider.BaseSlider$SliderState` v0 @kind this, `android.os.Parcelable` v1 @kind object) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.<init>:(Landroid/os/Parcelable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1e4e50.  call `<init>`(v0, v1) @signature `Landroid/view/View$BaseSavedState;.<init>:(Landroid/os/Parcelable;)V` @kind direct;
  #L1e4e56.  return @kind void;
}
procedure `void` `writeToParcel`(`com.google.android.material.slider.BaseSlider$SliderState` v2 @kind this, `android.os.Parcel` v3 @kind object, `int` v4 ) @signature `Lcom/google/android/material/slider/BaseSlider$SliderState;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1e4e68.  call `writeToParcel`(v2, v3, v4) @signature `Landroid/view/View$BaseSavedState;.writeToParcel:(Landroid/os/Parcel;I)V` @kind super;
  #L1e4e6e.  v4:= v2.`com.google.android.material.slider.BaseSlider$SliderState.g` @type ^`float`;
  #L1e4e72.  call `writeFloat`(v3, v4) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L1e4e78.  v4:= v2.`com.google.android.material.slider.BaseSlider$SliderState.h` @type ^`float`;
  #L1e4e7c.  call `writeFloat`(v3, v4) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L1e4e82.  v4:= v2.`com.google.android.material.slider.BaseSlider$SliderState.i` @type ^`java.util.ArrayList` @kind object;
  #L1e4e86.  call `writeList`(v3, v4) @signature `Landroid/os/Parcel;.writeList:(Ljava/util/List;)V` @kind virtual;
  #L1e4e8c.  v4:= v2.`com.google.android.material.slider.BaseSlider$SliderState.j` @type ^`float`;
  #L1e4e90.  call `writeFloat`(v3, v4) @signature `Landroid/os/Parcel;.writeFloat:(F)V` @kind virtual;
  #L1e4e96.  v4:= 1I;
  #L1e4e98.  v4:= new `boolean`[v4];
  #L1e4e9c.  v0:= v2.`com.google.android.material.slider.BaseSlider$SliderState.k` @type ^`boolean` @kind boolean;
  #L1e4ea0.  v1:= 0I;
  #L1e4ea2.  v4[v1]:= v0 @kind boolean;
  #L1e4ea6.  call `writeBooleanArray`(v3, v4) @signature `Landroid/os/Parcel;.writeBooleanArray:([Z)V` @kind virtual;
  #L1e4eac.  return @kind void;
}
