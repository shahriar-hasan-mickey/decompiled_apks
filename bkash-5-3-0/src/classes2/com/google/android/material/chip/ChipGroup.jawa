record `com.google.android.material.chip.ChipGroup` @kind class @AccessFlag PUBLIC extends `com.google.android.material.internal.FlowLayout` @kind class {
  `int` `com.google.android.material.chip.ChipGroup.k` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.l` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.m` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.n` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$c` `com.google.android.material.chip.ChipGroup.o` @AccessFlag PRIVATE;
  `com.google.android.material.chip.ChipGroup$b` `com.google.android.material.chip.ChipGroup.p` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.chip.ChipGroup$d` `com.google.android.material.chip.ChipGroup.q` @AccessFlag PRIVATE;
  `int` `com.google.android.material.chip.ChipGroup.r` @AccessFlag PRIVATE;
  `boolean` `com.google.android.material.chip.ChipGroup.s` @AccessFlag PRIVATE;
}
global `int` `@@com.google.android.material.chip.ChipGroup.t` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/chip/ChipGroup;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c24b0.  v0:= `@@s7.k.u` @type ^`int`;
  #L1c24b4.  `@@com.google.android.material.chip.ChipGroup.t` @type ^`int` := v0;
  #L1c24b8.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c24cc.  v0:= 0I;
  #L1c24ce.  call `<init>`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1c24d4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.content.Context` v2 @kind object, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c24e8.  v0:= `@@s7.b.h` @type ^`int`;
  #L1c24ec.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1c24f2.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.chip.ChipGroup` v7 @kind this, `android.content.Context` v8 @kind object, `android.util.AttributeSet` v9 @kind object, `int` v10 ) @signature `Lcom/google/android/material/chip/ChipGroup;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1c2504.  v4:= `@@com.google.android.material.chip.ChipGroup.t` @type ^`int`;
  #L1c2508.  call temp:= `c`(v8, v9, v10, v4) @signature `Lf8/a;.c:(Landroid/content/Context;Landroid/util/AttributeSet;II)Landroid/content/Context;` @kind static;
  #L1c250e.  v8:= temp @kind object;
  #L1c2510.  call `<init>`(v7, v8, v9, v10) @signature `Lcom/google/android/material/internal/FlowLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L1c2516.  v8:= new `com.google.android.material.chip.ChipGroup$b`;
  #L1c251a.  v0:= 0I;
  #L1c251c.  call `<init>`(v8, v7, v0) @signature `Lcom/google/android/material/chip/ChipGroup$b;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$a;)V` @kind direct;
  #L1c2522.  v7.`com.google.android.material.chip.ChipGroup.p` @type ^`com.google.android.material.chip.ChipGroup$b` := v8 @kind object;
  #L1c2526.  v8:= new `com.google.android.material.chip.ChipGroup$d`;
  #L1c252a.  call `<init>`(v8, v7, v0) @signature `Lcom/google/android/material/chip/ChipGroup$d;.<init>:(Lcom/google/android/material/chip/ChipGroup;Lcom/google/android/material/chip/ChipGroup$a;)V` @kind direct;
  #L1c2530.  v7.`com.google.android.material.chip.ChipGroup.q` @type ^`com.google.android.material.chip.ChipGroup$d` := v8 @kind object;
  #L1c2534.  v8:= -1I;
  #L1c2536.  v7.`com.google.android.material.chip.ChipGroup.r` @type ^`int` := v8;
  #L1c253a.  v6:= 0I;
  #L1c253c.  v7.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` := v6 @kind boolean;
  #L1c2540.  call temp:= `getContext`(v7) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1c2546.  v0:= temp @kind object;
  #L1c2548.  v2:= `@@s7.l.b1` @type ^`int`[] @kind object;
  #L1c254c.  v5:= new `int`[v6];
  #L1c2550.  v1:= v9 @kind object;
  #L1c2552.  v3:= v10;
  #L1c2554.  call temp:= `h`(v0, v1, v2, v3, v4, v5) @signature `Lcom/google/android/material/internal/m;.h:(Landroid/content/Context;Landroid/util/AttributeSet;[III[I)Landroid/content/res/TypedArray;` @kind static;
  #L1c255a.  v9:= temp @kind object;
  #L1c255c.  v10:= `@@s7.l.d1` @type ^`int`;
  #L1c2560.  call temp:= `getDimensionPixelOffset`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c2566.  v10:= temp;
  #L1c2568.  v0:= `@@s7.l.e1` @type ^`int`;
  #L1c256c.  call temp:= `getDimensionPixelOffset`(v9, v0, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c2572.  v0:= temp;
  #L1c2574.  call `setChipSpacingHorizontal`(v7, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c257a.  v0:= `@@s7.l.f1` @type ^`int`;
  #L1c257e.  call temp:= `getDimensionPixelOffset`(v9, v0, v10) @signature `Landroid/content/res/TypedArray;.getDimensionPixelOffset:(II)I` @kind virtual;
  #L1c2584.  v10:= temp;
  #L1c2586.  call `setChipSpacingVertical`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c258c.  v10:= `@@s7.l.h1` @type ^`int`;
  #L1c2590.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c2596.  v10:= temp;
  #L1c2598.  call `setSingleLine`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1c259e.  v10:= `@@s7.l.i1` @type ^`int`;
  #L1c25a2.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c25a8.  v10:= temp;
  #L1c25aa.  call `setSingleSelection`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1c25b0.  v10:= `@@s7.l.g1` @type ^`int`;
  #L1c25b4.  call temp:= `getBoolean`(v9, v10, v6) @signature `Landroid/content/res/TypedArray;.getBoolean:(IZ)Z` @kind virtual;
  #L1c25ba.  v10:= temp;
  #L1c25bc.  call `setSelectionRequired`(v7, v10) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @kind virtual;
  #L1c25c2.  v10:= `@@s7.l.c1` @type ^`int`;
  #L1c25c6.  call temp:= `getResourceId`(v9, v10, v8) @signature `Landroid/content/res/TypedArray;.getResourceId:(II)I` @kind virtual;
  #L1c25cc.  v10:= temp;
  #L1c25ce.  if v10 == v8 then goto L1c25d6;
  #L1c25d2.  v7.`com.google.android.material.chip.ChipGroup.r` @type ^`int` := v10;
  #L1c25d6.  call `recycle`(v9) @signature `Landroid/content/res/TypedArray;.recycle:()V` @kind virtual;
  #L1c25dc.  v8:= v7.`com.google.android.material.chip.ChipGroup.q` @type ^`com.google.android.material.chip.ChipGroup$d` @kind object;
  #L1c25e0.  call `setOnHierarchyChangeListener`(v7, v8) @signature `Landroid/view/ViewGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @kind super;
  #L1c25e6.  v8:= 1I;
  #L1c25e8.  call `E0`(v7, v8) @signature `Landroidx/core/view/ViewCompat;.E0:(Landroid/view/View;I)V` @kind static;
  #L1c25ee.  return @kind void;
}
procedure `com.google.android.material.chip.ChipGroup$b` `access$1000`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$1000:(Lcom/google/android/material/chip/ChipGroup;)Lcom/google/android/material/chip/ChipGroup$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2320.  v0:= v0.`com.google.android.material.chip.ChipGroup.p` @type ^`com.google.android.material.chip.ChipGroup$b` @kind object;
  #L1c2324.  return v0 @kind object;
}
procedure `boolean` `access$300`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$300:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2260.  v0:= v0.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` @kind boolean;
  #L1c2264.  return v0;
}
procedure `boolean` `access$400`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$400:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2278.  v0:= v0.`com.google.android.material.chip.ChipGroup.n` @type ^`boolean` @kind boolean;
  #L1c227c.  return v0;
}
procedure `void` `access$500`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$500:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2600.  call `d`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @kind direct;
  #L1c2606.  return @kind void;
}
procedure `void` `access$600`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 , `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$600:(Lcom/google/android/material/chip/ChipGroup;IZ)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2618.  call `c`(v0, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.c:(IZ)V` @kind direct;
  #L1c261e.  return @kind void;
}
procedure `int` `access$700`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$700:(Lcom/google/android/material/chip/ChipGroup;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2338.  v0:= v0.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c233c.  return v0;
}
procedure `boolean` `access$800`(`com.google.android.material.chip.ChipGroup` v0 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.access$800:(Lcom/google/android/material/chip/ChipGroup;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2290.  v0:= v0.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2294.  return v0;
}
procedure `void` `access$900`(`com.google.android.material.chip.ChipGroup` v0 @kind object, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.access$900:(Lcom/google/android/material/chip/ChipGroup;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c2630.  call `setCheckedId`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c2636.  return @kind void;
}
procedure `void` `c`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `int` v3 , `boolean` v4 ) @signature `Lcom/google/android/material/chip/ChipGroup;.c:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c27f0.  v2.`com.google.android.material.chip.ChipGroup.r` @type ^`int` := v3;
  #L1c27f4.  v0:= v2.`com.google.android.material.chip.ChipGroup.o` @type ^`com.google.android.material.chip.ChipGroup$c` @kind object;
  #L1c27f8.  if v0 == 0 then goto L1c280e;
  #L1c27fc.  v1:= v2.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2800.  if v1 == 0 then goto L1c280e;
  #L1c2804.  if v4 == 0 then goto L1c280e;
  #L1c2808.  call `a`(v0, v2, v3) @signature `Lcom/google/android/material/chip/ChipGroup$c;.a:(Lcom/google/android/material/chip/ChipGroup;I)V` @kind interface;
  #L1c280e.  return @kind void;
}
procedure `void` `d`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c2820.  call temp:= `findViewById`(v1, v2) @signature `Landroid/view/ViewGroup;.findViewById:(I)Landroid/view/View;` @kind virtual;
  #L1c2826.  v2:= temp @kind object;
  #L1c2828.  v0:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c282c.  if v0 == 0 then goto L1c2846;
  #L1c2830.  v0:= 1I;
  #L1c2832.  v1.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` := v0 @kind boolean;
  #L1c2836.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L1c283a.  call `setChecked`(v2, v3) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1c2840.  v2:= 0I;
  #L1c2842.  v1.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` := v2 @kind boolean;
  #L1c2846.  return @kind void;
}
procedure `int` `getChipCount`(`com.google.android.material.chip.ChipGroup` v3 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1c2374.  v0:= 0I;
  #L1c2376.  v1:= 0I;
  #L1c2378.  call temp:= `getChildCount`(v3) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L1c237e.  v2:= temp;
  #L1c2380.  if v0 >= v2 then goto L1c239e;
  #L1c2384.  call temp:= `getChildAt`(v3, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c238a.  v2:= temp @kind object;
  #L1c238c.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c2390.  if v2 == 0 then goto L1c2398;
  #L1c2394.  v1:= v1 + 1;
  #L1c2398.  v0:= v0 + 1;
  #L1c239c.  goto L1c2378;
  #L1c239e.  return v1;
}
procedure `void` `setCheckedId`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L1c27d4.  v0:= 1I;
  #L1c27d6.  call `c`(v1, v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.c:(IZ)V` @kind direct;
  #L1c27dc.  return @kind void;
}
procedure `void` `addView`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `android.view.View` v4 @kind object, `int` v5 , `android.view.ViewGroup$LayoutParams` v6 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c2648.  v0:= instanceof @variable v4 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c264c.  if v0 == 0 then goto L1c268a;
  #L1c2650.  v0:= v4 @kind object;
  #L1c2652.  v0:= (`com.google.android.material.chip.Chip`) v0 @kind object;
  #L1c2656.  call temp:= `isChecked`(v0) @signature `Landroid/widget/CheckBox;.isChecked:()Z` @kind virtual;
  #L1c265c.  v1:= temp;
  #L1c265e.  if v1 == 0 then goto L1c268a;
  #L1c2662.  v1:= v3.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c2666.  v2:= -1I;
  #L1c2668.  if v1 == v2 then goto L1c267c;
  #L1c266c.  v2:= v3.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2670.  if v2 == 0 then goto L1c267c;
  #L1c2674.  v2:= 0I;
  #L1c2676.  call `d`(v3, v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @kind direct;
  #L1c267c.  call temp:= `getId`(v0) @signature `Landroid/widget/CheckBox;.getId:()I` @kind virtual;
  #L1c2682.  v0:= temp;
  #L1c2684.  call `setCheckedId`(v3, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c268a.  call `addView`(v3, v4, v5, v6) @signature `Landroid/view/ViewGroup;.addView:(Landroid/view/View;ILandroid/view/ViewGroup$LayoutParams;)V` @kind super;
  #L1c2690.  return @kind void;
}
procedure `void` `check`(`com.google.android.material.chip.ChipGroup` v3 @kind this, `int` v4 ) @signature `Lcom/google/android/material/chip/ChipGroup;.check:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c26a4.  v0:= v3.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c26a8.  if v4 != v0 then goto L1c26ae;
  #L1c26ac.  return @kind void;
  #L1c26ae.  v1:= -1I;
  #L1c26b0.  if v0 == v1 then goto L1c26c4;
  #L1c26b4.  v2:= v3.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c26b8.  if v2 == 0 then goto L1c26c4;
  #L1c26bc.  v2:= 0I;
  #L1c26be.  call `d`(v3, v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @kind direct;
  #L1c26c4.  if v4 == v1 then goto L1c26d0;
  #L1c26c8.  v0:= 1I;
  #L1c26ca.  call `d`(v3, v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @kind direct;
  #L1c26d0.  call `setCheckedId`(v3, v4) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c26d6.  return @kind void;
}
procedure `boolean` `checkLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c22a8.  call temp:= `checkLayoutParams`(v1, v2) @signature `Landroid/view/ViewGroup;.checkLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Z` @kind super;
  #L1c22ae.  v0:= temp;
  #L1c22b0.  if v0 == 0 then goto L1c22c0;
  #L1c22b4.  v2:= instanceof @variable v2 @type ^`com.google.android.material.chip.ChipGroup$LayoutParams` @kind boolean;
  #L1c22b8.  if v2 == 0 then goto L1c22c0;
  #L1c22bc.  v2:= 1I;
  #L1c22be.  goto L1c22c2;
  #L1c22c0.  v2:= 0I;
  #L1c22c2.  return v2;
}
procedure `void` `clearCheck`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c26e8.  v0:= 1I;
  #L1c26ea.  v4.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` := v0 @kind boolean;
  #L1c26ee.  v0:= 0I;
  #L1c26f0.  v1:= 0I;
  #L1c26f2.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L1c26f8.  v2:= temp;
  #L1c26fa.  if v1 >= v2 then goto L1c271e;
  #L1c26fe.  call temp:= `getChildAt`(v4, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c2704.  v2:= temp @kind object;
  #L1c2706.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c270a.  if v3 == 0 then goto L1c2718;
  #L1c270e.  v2:= (`com.google.android.material.chip.Chip`) v2 @kind object;
  #L1c2712.  call `setChecked`(v2, v0) @signature `Lcom/google/android/material/chip/Chip;.setChecked:(Z)V` @kind virtual;
  #L1c2718.  v1:= v1 + 1;
  #L1c271c.  goto L1c26f2;
  #L1c271e.  v4.`com.google.android.material.chip.ChipGroup.s` @type ^`boolean` := v0 @kind boolean;
  #L1c2722.  v0:= -1I;
  #L1c2724.  call `setCheckedId`(v4, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c272a.  return @kind void;
}
procedure `android.view.ViewGroup$LayoutParams` `generateDefaultLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.generateDefaultLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c2200.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c2204.  v1:= -2I;
  #L1c2206.  call `<init>`(v0, v1, v1) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(II)V` @kind direct;
  #L1c220c.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v2 @kind this, `android.util.AttributeSet` v3 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/util/AttributeSet;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c2220.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c2224.  call temp:= `getContext`(v2) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1c222a.  v1:= temp @kind object;
  #L1c222c.  call `<init>`(v0, v1, v3) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1c2232.  return v0 @kind object;
}
procedure `android.view.ViewGroup$LayoutParams` `generateLayoutParams`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$LayoutParams` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.generateLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)Landroid/view/ViewGroup$LayoutParams;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L1c2244.  v0:= new `com.google.android.material.chip.ChipGroup$LayoutParams`;
  #L1c2248.  call `<init>`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$LayoutParams;.<init>:(Landroid/view/ViewGroup$LayoutParams;)V` @kind direct;
  #L1c224e.  return v0 @kind object;
}
procedure `int` `getCheckedChipId`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipId:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2350.  v0:= v1.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2354.  if v0 == 0 then goto L1c235e;
  #L1c2358.  v0:= v1.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c235c.  goto L1c2360;
  #L1c235e.  v0:= -1I;
  #L1c2360.  return v0;
}
procedure `java.util.List` `getCheckedChipIds`(`com.google.android.material.chip.ChipGroup` v4 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getCheckedChipIds:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c243c.  v0:= new `java.util.ArrayList`;
  #L1c2440.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1c2446.  v1:= 0I;
  #L1c2448.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L1c244e.  v2:= temp;
  #L1c2450.  if v1 >= v2 then goto L1c249c;
  #L1c2454.  call temp:= `getChildAt`(v4, v1) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c245a.  v2:= temp @kind object;
  #L1c245c.  v3:= instanceof @variable v2 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c2460.  if v3 == 0 then goto L1c2496;
  #L1c2464.  v3:= v2 @kind object;
  #L1c2466.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L1c246a.  call temp:= `isChecked`(v3) @signature `Landroid/widget/CheckBox;.isChecked:()Z` @kind virtual;
  #L1c2470.  v3:= temp;
  #L1c2472.  if v3 == 0 then goto L1c2496;
  #L1c2476.  call temp:= `getId`(v2) @signature `Landroid/view/View;.getId:()I` @kind virtual;
  #L1c247c.  v2:= temp;
  #L1c247e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L1c2484.  v2:= temp @kind object;
  #L1c2486.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c248c.  v2:= v4.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2490.  if v2 == 0 then goto L1c2496;
  #L1c2494.  return v0 @kind object;
  #L1c2496.  v1:= v1 + 1;
  #L1c249a.  goto L1c2448;
  #L1c249c.  return v0 @kind object;
}
procedure `int` `getChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingHorizontal:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c23b0.  v0:= v1.`com.google.android.material.chip.ChipGroup.k` @type ^`int`;
  #L1c23b4.  return v0;
}
procedure `int` `getChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipSpacingVertical:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c23c8.  v0:= v1.`com.google.android.material.chip.ChipGroup.l` @type ^`int`;
  #L1c23cc.  return v0;
}
procedure `int` `getIndexOfChip`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.View` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.getIndexOfChip:(Landroid/view/View;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c23e0.  v0:= instanceof @variable v5 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c23e4.  v1:= -1I;
  #L1c23e6.  if v0 != 0 then goto L1c23ec;
  #L1c23ea.  return v1;
  #L1c23ec.  v0:= 0I;
  #L1c23ee.  v2:= 0I;
  #L1c23f0.  call temp:= `getChildCount`(v4) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L1c23f6.  v3:= temp;
  #L1c23f8.  if v0 >= v3 then goto L1c2428;
  #L1c23fc.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c2402.  v3:= temp @kind object;
  #L1c2404.  v3:= instanceof @variable v3 @type ^`com.google.android.material.chip.Chip` @kind boolean;
  #L1c2408.  if v3 == 0 then goto L1c2422;
  #L1c240c.  call temp:= `getChildAt`(v4, v0) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L1c2412.  v3:= temp @kind object;
  #L1c2414.  v3:= (`com.google.android.material.chip.Chip`) v3 @kind object;
  #L1c2418.  if v3 != v5 then goto L1c241e;
  #L1c241c.  return v2;
  #L1c241e.  v2:= v2 + 1;
  #L1c2422.  v0:= v0 + 1;
  #L1c2426.  goto L1c23f0;
  #L1c2428.  return v1;
}
procedure `boolean` `isSelectionRequired`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSelectionRequired:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c22d4.  v0:= v1.`com.google.android.material.chip.ChipGroup.n` @type ^`boolean` @kind boolean;
  #L1c22d8.  return v0;
}
procedure `boolean` `isSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c22ec.  call temp:= `isSingleLine`(v1) @signature `Lcom/google/android/material/internal/FlowLayout;.isSingleLine:()Z` @kind super;
  #L1c22f2.  v0:= temp;
  #L1c22f4.  return v0;
}
procedure `boolean` `isSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2308.  v0:= v1.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c230c.  return v0;
}
procedure `void` `onFinishInflate`(`com.google.android.material.chip.ChipGroup` v2 @kind this) @signature `Lcom/google/android/material/chip/ChipGroup;.onFinishInflate:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c273c.  call `onFinishInflate`(v2) @signature `Landroid/view/ViewGroup;.onFinishInflate:()V` @kind super;
  #L1c2742.  v0:= v2.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c2746.  v1:= -1I;
  #L1c2748.  if v0 == v1 then goto L1c275e;
  #L1c274c.  v1:= 1I;
  #L1c274e.  call `d`(v2, v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.d:(IZ)V` @kind direct;
  #L1c2754.  v0:= v2.`com.google.android.material.chip.ChipGroup.r` @type ^`int`;
  #L1c2758.  call `setCheckedId`(v2, v0) @signature `Lcom/google/android/material/chip/ChipGroup;.setCheckedId:(I)V` @kind direct;
  #L1c275e.  return @kind void;
}
procedure `void` `onInitializeAccessibilityNodeInfo`(`com.google.android.material.chip.ChipGroup` v4 @kind this, `android.view.accessibility.AccessibilityNodeInfo` v5 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c2770.  call `onInitializeAccessibilityNodeInfo`(v4, v5) @signature `Landroid/view/ViewGroup;.onInitializeAccessibilityNodeInfo:(Landroid/view/accessibility/AccessibilityNodeInfo;)V` @kind super;
  #L1c2776.  call temp:= `H0`(v5) @signature `Landroidx/core/view/accessibility/b;.H0:(Landroid/view/accessibility/AccessibilityNodeInfo;)Landroidx/core/view/accessibility/b;` @kind static;
  #L1c277c.  v5:= temp @kind object;
  #L1c277e.  call temp:= `isSingleLine`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleLine:()Z` @kind virtual;
  #L1c2784.  v0:= temp;
  #L1c2786.  if v0 == 0 then goto L1c2794;
  #L1c278a.  call temp:= `getChipCount`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.getChipCount:()I` @kind direct;
  #L1c2790.  v0:= temp;
  #L1c2792.  goto L1c2796;
  #L1c2794.  v0:= -1I;
  #L1c2796.  call temp:= `getRowCount`(v4) @signature `Lcom/google/android/material/internal/FlowLayout;.getRowCount:()I` @kind virtual;
  #L1c279c.  v1:= temp;
  #L1c279e.  v2:= 0I;
  #L1c27a0.  call temp:= `isSingleSelection`(v4) @signature `Lcom/google/android/material/chip/ChipGroup;.isSingleSelection:()Z` @kind virtual;
  #L1c27a6.  v3:= temp;
  #L1c27a8.  if v3 == 0 then goto L1c27b0;
  #L1c27ac.  v3:= 1I;
  #L1c27ae.  goto L1c27b2;
  #L1c27b0.  v3:= 2I;
  #L1c27b2.  call temp:= `b`(v1, v0, v2, v3) @signature `Landroidx/core/view/accessibility/b$b;.b:(IIZI)Landroidx/core/view/accessibility/b$b;` @kind static;
  #L1c27b8.  v0:= temp @kind object;
  #L1c27ba.  call `e0`(v5, v0) @signature `Landroidx/core/view/accessibility/b;.e0:(Ljava/lang/Object;)V` @kind virtual;
  #L1c27c0.  return @kind void;
}
procedure `void` `setChipSpacing`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `int` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c2858.  call `setChipSpacingHorizontal`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c285e.  call `setChipSpacingVertical`(v0, v1) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c2864.  return @kind void;
}
procedure `void` `setChipSpacingHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2878.  v0:= v1.`com.google.android.material.chip.ChipGroup.k` @type ^`int`;
  #L1c287c.  if v0 == v2 then goto L1c2890;
  #L1c2880.  v1.`com.google.android.material.chip.ChipGroup.k` @type ^`int` := v2;
  #L1c2884.  call `setItemSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setItemSpacing:(I)V` @kind virtual;
  #L1c288a.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L1c2890.  return @kind void;
}
procedure `void` `setChipSpacingHorizontalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c28a4.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c28aa.  v0:= temp @kind object;
  #L1c28ac.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c28b2.  v2:= temp;
  #L1c28b4.  call `setChipSpacingHorizontal`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingHorizontal:(I)V` @kind virtual;
  #L1c28ba.  return @kind void;
}
procedure `void` `setChipSpacingResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c28cc.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c28d2.  v0:= temp @kind object;
  #L1c28d4.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c28da.  v2:= temp;
  #L1c28dc.  call `setChipSpacing`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacing:(I)V` @kind virtual;
  #L1c28e2.  return @kind void;
}
procedure `void` `setChipSpacingVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c28f4.  v0:= v1.`com.google.android.material.chip.ChipGroup.l` @type ^`int`;
  #L1c28f8.  if v0 == v2 then goto L1c290c;
  #L1c28fc.  v1.`com.google.android.material.chip.ChipGroup.l` @type ^`int` := v2;
  #L1c2900.  call `setLineSpacing`(v1, v2) @signature `Lcom/google/android/material/internal/FlowLayout;.setLineSpacing:(I)V` @kind virtual;
  #L1c2906.  call `requestLayout`(v1) @signature `Landroid/view/ViewGroup;.requestLayout:()V` @kind virtual;
  #L1c290c.  return @kind void;
}
procedure `void` `setChipSpacingVerticalResource`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVerticalResource:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2920.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c2926.  v0:= temp @kind object;
  #L1c2928.  call temp:= `getDimensionPixelOffset`(v0, v2) @signature `Landroid/content/res/Resources;.getDimensionPixelOffset:(I)I` @kind virtual;
  #L1c292e.  v2:= temp;
  #L1c2930.  call `setChipSpacingVertical`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setChipSpacingVertical:(I)V` @kind virtual;
  #L1c2936.  return @kind void;
}
procedure `void` `setDividerDrawableHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableHorizontal:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2948.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c294c.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c2950.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c2956.  throw v2;
}
procedure `void` `setDividerDrawableVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setDividerDrawableVertical:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2968.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c296c.  v0:= "Changing divider drawables have no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c2970.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c2976.  throw v2;
}
procedure `void` `setFlexWrap`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setFlexWrap:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2988.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c298c.  v0:= "Changing flex wrap not allowed. ChipGroup exposes a singleLine attribute instead." @kind object;
  #L1c2990.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c2996.  throw v2;
}
procedure `void` `setOnCheckedChangeListener`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `com.google.android.material.chip.ChipGroup$c` v1 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnCheckedChangeListener:(Lcom/google/android/material/chip/ChipGroup$c;)V` @AccessFlag PUBLIC {
    temp;

  #L1c29a8.  v0.`com.google.android.material.chip.ChipGroup.o` @type ^`com.google.android.material.chip.ChipGroup$c` := v1 @kind object;
  #L1c29ac.  return @kind void;
}
procedure `void` `setOnHierarchyChangeListener`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `android.view.ViewGroup$OnHierarchyChangeListener` v2 @kind object) @signature `Lcom/google/android/material/chip/ChipGroup;.setOnHierarchyChangeListener:(Landroid/view/ViewGroup$OnHierarchyChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c29c0.  v0:= v1.`com.google.android.material.chip.ChipGroup.q` @type ^`com.google.android.material.chip.ChipGroup$d` @kind object;
  #L1c29c4.  call temp:= `a`(v0, v2) @signature `Lcom/google/android/material/chip/ChipGroup$d;.a:(Lcom/google/android/material/chip/ChipGroup$d;Landroid/view/ViewGroup$OnHierarchyChangeListener;)Landroid/view/ViewGroup$OnHierarchyChangeListener;` @kind static;
  #L1c29ca.  return @kind void;
}
procedure `void` `setSelectionRequired`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSelectionRequired:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c29dc.  v0.`com.google.android.material.chip.ChipGroup.n` @type ^`boolean` := v1 @kind boolean;
  #L1c29e0.  return @kind void;
}
procedure `void` `setShowDividerHorizontal`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerHorizontal:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c29f4.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c29f8.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c29fc.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c2a02.  throw v2;
}
procedure `void` `setShowDividerVertical`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setShowDividerVertical:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2a14.  v2:= new `java.lang.UnsupportedOperationException`;
  #L1c2a18.  v0:= "Changing divider modes has no effect. ChipGroup do not use divider drawables as spacing." @kind object;
  #L1c2a1c.  call `<init>`(v2, v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c2a22.  throw v2;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2a4c.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c2a52.  v0:= temp @kind object;
  #L1c2a54.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c2a5a.  v2:= temp;
  #L1c2a5c.  call `setSingleLine`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @kind virtual;
  #L1c2a62.  return @kind void;
}
procedure `void` `setSingleLine`(`com.google.android.material.chip.ChipGroup` v0 @kind this, `boolean` v1 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L1c2a34.  call `setSingleLine`(v0, v1) @signature `Lcom/google/android/material/internal/FlowLayout;.setSingleLine:(Z)V` @kind super;
  #L1c2a3a.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `int` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2a98.  call temp:= `getResources`(v1) @signature `Landroid/view/ViewGroup;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1c2a9e.  v0:= temp @kind object;
  #L1c2aa0.  call temp:= `getBoolean`(v0, v2) @signature `Landroid/content/res/Resources;.getBoolean:(I)Z` @kind virtual;
  #L1c2aa6.  v2:= temp;
  #L1c2aa8.  call `setSingleSelection`(v1, v2) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @kind virtual;
  #L1c2aae.  return @kind void;
}
procedure `void` `setSingleSelection`(`com.google.android.material.chip.ChipGroup` v1 @kind this, `boolean` v2 ) @signature `Lcom/google/android/material/chip/ChipGroup;.setSingleSelection:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c2a74.  v0:= v1.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` @kind boolean;
  #L1c2a78.  if v0 == v2 then goto L1c2a86;
  #L1c2a7c.  v1.`com.google.android.material.chip.ChipGroup.m` @type ^`boolean` := v2 @kind boolean;
  #L1c2a80.  call `clearCheck`(v1) @signature `Lcom/google/android/material/chip/ChipGroup;.clearCheck:()V` @kind virtual;
  #L1c2a86.  return @kind void;
}
