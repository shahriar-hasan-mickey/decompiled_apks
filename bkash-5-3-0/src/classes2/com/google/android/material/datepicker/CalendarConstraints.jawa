record `com.google.android.material.datepicker.CalendarConstraints` @kind class @AccessFlag PUBLIC_FINAL extends `android.os.Parcelable` @kind interface {
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.g` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.h` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `com.google.android.material.datepicker.CalendarConstraints.i` @AccessFlag PRIVATE_FINAL;
  `com.google.android.material.datepicker.Month` `com.google.android.material.datepicker.CalendarConstraints.j` @AccessFlag PRIVATE;
  `int` `com.google.android.material.datepicker.CalendarConstraints.k` @AccessFlag PRIVATE_FINAL;
  `int` `com.google.android.material.datepicker.CalendarConstraints.l` @AccessFlag PRIVATE_FINAL;
}
global `android.os.Parcelable$Creator` `@@com.google.android.material.datepicker.CalendarConstraints.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1c674c.  v0:= new `com.google.android.material.datepicker.CalendarConstraints$a`;
  #L1c6750.  call `<init>`(v0) @signature `Lcom/google/android/material/datepicker/CalendarConstraints$a;.<init>:()V` @kind direct;
  #L1c6756.  `@@com.google.android.material.datepicker.CalendarConstraints.CREATOR` @type ^`android.os.Parcelable$Creator` := v0 @kind object;
  #L1c675a.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind this, `com.google.android.material.datepicker.Month` v1 @kind object, `com.google.android.material.datepicker.Month` v2 @kind object, `com.google.android.material.datepicker.CalendarConstraints$DateValidator` v3 @kind object, `com.google.android.material.datepicker.Month` v4 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;Lcom/google/android/material/datepicker/Month;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c676c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c6772.  v0.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` := v1 @kind object;
  #L1c6776.  v0.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` := v2 @kind object;
  #L1c677a.  v0.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` := v4 @kind object;
  #L1c677e.  v0.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` := v3 @kind object;
  #L1c6782.  if v4 == 0 then goto L1c67a4;
  #L1c6786.  call temp:= `a`(v1, v4) @signature `Lcom/google/android/material/datepicker/Month;.a:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1c678c.  v3:= temp;
  #L1c678e.  if v3 > 0 then goto L1c6794;
  #L1c6792.  goto L1c67a4;
  #L1c6794.  v1:= new `java.lang.IllegalArgumentException`;
  #L1c6798.  v2:= "start Month cannot be after current Month" @kind object;
  #L1c679c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c67a2.  throw v1;
  #L1c67a4.  if v4 == 0 then goto L1c67c6;
  #L1c67a8.  call temp:= `a`(v4, v2) @signature `Lcom/google/android/material/datepicker/Month;.a:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1c67ae.  v3:= temp;
  #L1c67b0.  if v3 > 0 then goto L1c67b6;
  #L1c67b4.  goto L1c67c6;
  #L1c67b6.  v1:= new `java.lang.IllegalArgumentException`;
  #L1c67ba.  v2:= "current Month cannot be after end Month" @kind object;
  #L1c67be.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c67c4.  throw v1;
  #L1c67c6.  call temp:= `m`(v1, v2) @signature `Lcom/google/android/material/datepicker/Month;.m:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1c67cc.  v3:= temp;
  #L1c67ce.  v3:= v3 + 1;
  #L1c67d2.  v0.`com.google.android.material.datepicker.CalendarConstraints.l` @type ^`int` := v3;
  #L1c67d6.  v2:= v2.`com.google.android.material.datepicker.Month.i` @type ^`int`;
  #L1c67da.  v1:= v1.`com.google.android.material.datepicker.Month.i` @type ^`int`;
  #L1c67de.  v2:= v2 - v1 @kind int;
  #L1c67e0.  v2:= v2 + 1;
  #L1c67e4.  v0.`com.google.android.material.datepicker.CalendarConstraints.k` @type ^`int` := v2;
  #L1c67e8.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind this, `com.google.android.material.datepicker.Month` v1 @kind object, `com.google.android.material.datepicker.Month` v2 @kind object, `com.google.android.material.datepicker.CalendarConstraints$DateValidator` v3 @kind object, `com.google.android.material.datepicker.Month` v4 @kind object, `com.google.android.material.datepicker.CalendarConstraints$a` v5 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c67fc.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.<init>:(Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/Month;Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;Lcom/google/android/material/datepicker/Month;)V` @kind direct;
  #L1c6802.  return @kind void;
}
procedure `com.google.android.material.datepicker.Month` `a`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.a:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c65f4.  v0:= v0.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c65f8.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `b`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.b:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c660c.  v0:= v0.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6610.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `c`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.c:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/Month;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c6624.  v0:= v0.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6628.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `d`(`com.google.android.material.datepicker.CalendarConstraints` v0 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.d:(Lcom/google/android/material/datepicker/CalendarConstraints;)Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c65c4.  v0:= v0.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c65c8.  return v0 @kind object;
}
procedure `int` `describeContents`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.describeContents:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c66c0.  v0:= 0I;
  #L1c66c2.  return v0;
}
procedure `com.google.android.material.datepicker.Month` `e`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this, `com.google.android.material.datepicker.Month` v2 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.e:(Lcom/google/android/material/datepicker/Month;)Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1c663c.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6640.  call temp:= `a`(v2, v0) @signature `Lcom/google/android/material/datepicker/Month;.a:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1c6646.  v0:= temp;
  #L1c6648.  if v0 >= 0 then goto L1c6652;
  #L1c664c.  v2:= v1.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6650.  return v2 @kind object;
  #L1c6652.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6656.  call temp:= `a`(v2, v0) @signature `Lcom/google/android/material/datepicker/Month;.a:(Lcom/google/android/material/datepicker/Month;)I` @kind virtual;
  #L1c665c.  v0:= temp;
  #L1c665e.  if v0 <= 0 then goto L1c6666;
  #L1c6662.  v2:= v1.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6666.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.google.android.material.datepicker.CalendarConstraints` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6500.  v0:= 1I;
  #L1c6502.  if v4 != v5 then goto L1c6508;
  #L1c6506.  return v0;
  #L1c6508.  v1:= instanceof @variable v5 @type ^`com.google.android.material.datepicker.CalendarConstraints` @kind boolean;
  #L1c650c.  v2:= 0I;
  #L1c650e.  if v1 != 0 then goto L1c6514;
  #L1c6512.  return v2;
  #L1c6514.  v5:= (`com.google.android.material.datepicker.CalendarConstraints`) v5 @kind object;
  #L1c6518.  v1:= v4.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c651c.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6520.  call temp:= `equals`(v1, v3) @signature `Lcom/google/android/material/datepicker/Month;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c6526.  v1:= temp;
  #L1c6528.  if v1 == 0 then goto L1c656a;
  #L1c652c.  v1:= v4.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6530.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6534.  call temp:= `equals`(v1, v3) @signature `Lcom/google/android/material/datepicker/Month;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c653a.  v1:= temp;
  #L1c653c.  if v1 == 0 then goto L1c656a;
  #L1c6540.  v1:= v4.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6544.  v3:= v5.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6548.  call temp:= `a`(v1, v3) @signature `Landroidx/core/util/d;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L1c654e.  v1:= temp;
  #L1c6550.  if v1 == 0 then goto L1c656a;
  #L1c6554.  v1:= v4.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c6558.  v5:= v5.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c655c.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c6562.  v5:= temp;
  #L1c6564.  if v5 == 0 then goto L1c656a;
  #L1c6568.  goto L1c656c;
  #L1c656a.  v0:= 0I;
  #L1c656c.  return v0;
}
procedure `com.google.android.material.datepicker.CalendarConstraints$DateValidator` `f`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.f:()Lcom/google/android/material/datepicker/CalendarConstraints$DateValidator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c65dc.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c65e0.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `g`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.g:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1c6678.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c667c.  return v0 @kind object;
}
procedure `int` `h`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.h:()I` @AccessFlag  {
    temp;
    v0;

  #L1c66d4.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.l` @type ^`int`;
  #L1c66d8.  return v0;
}
procedure `int` `hashCode`(`com.google.android.material.datepicker.CalendarConstraints` v3 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1c6704.  v0:= 4I;
  #L1c6706.  v0:= new `java.lang.Object`[v0];
  #L1c670a.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c670e.  v2:= 0I;
  #L1c6710.  v0[v2]:= v1 @kind object;
  #L1c6714.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6718.  v2:= 1I;
  #L1c671a.  v0[v2]:= v1 @kind object;
  #L1c671e.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6722.  v2:= 2I;
  #L1c6724.  v0[v2]:= v1 @kind object;
  #L1c6728.  v1:= v3.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c672c.  v2:= 3I;
  #L1c672e.  v0[v2]:= v1 @kind object;
  #L1c6732.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1c6738.  v0:= temp;
  #L1c673a.  return v0;
}
procedure `com.google.android.material.datepicker.Month` `i`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.i:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1c6690.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6694.  return v0 @kind object;
}
procedure `com.google.android.material.datepicker.Month` `j`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.j:()Lcom/google/android/material/datepicker/Month;` @AccessFlag  {
    temp;
    v0;

  #L1c66a8.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c66ac.  return v0 @kind object;
}
procedure `int` `k`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.k:()I` @AccessFlag  {
    temp;
    v0;

  #L1c66ec.  v0:= v1.`com.google.android.material.datepicker.CalendarConstraints.k` @type ^`int`;
  #L1c66f0.  return v0;
}
procedure `boolean` `l`(`com.google.android.material.datepicker.CalendarConstraints` v4 @kind this, `long` v5 ) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.l:(J)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c6580.  v0:= v4.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6584.  v1:= 1I;
  #L1c6586.  call temp:= `g`(v0, v1) @signature `Lcom/google/android/material/datepicker/Month;.g:(I)J` @kind virtual;
  #L1c658c.  v2:= temp @kind wide;
  #L1c658e.  v0:= lcmp(v2, v5);
  #L1c6592.  if v0 > 0 then goto L1c65b0;
  #L1c6596.  v0:= v4.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c659a.  v2:= v0.`com.google.android.material.datepicker.Month.k` @type ^`int`;
  #L1c659e.  call temp:= `g`(v0, v2) @signature `Lcom/google/android/material/datepicker/Month;.g:(I)J` @kind virtual;
  #L1c65a4.  v2:= temp @kind wide;
  #L1c65a6.  v0:= lcmp(v5, v2);
  #L1c65aa.  if v0 > 0 then goto L1c65b0;
  #L1c65ae.  goto L1c65b2;
  #L1c65b0.  v1:= 0I;
  #L1c65b2.  return v1;
}
procedure `void` `writeToParcel`(`com.google.android.material.datepicker.CalendarConstraints` v1 @kind this, `android.os.Parcel` v2 @kind object, `int` v3 ) @signature `Lcom/google/android/material/datepicker/CalendarConstraints;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c6814.  v3:= v1.`com.google.android.material.datepicker.CalendarConstraints.g` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6818.  v0:= 0I;
  #L1c681a.  call `writeParcelable`(v2, v3, v0) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L1c6820.  v3:= v1.`com.google.android.material.datepicker.CalendarConstraints.h` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c6824.  call `writeParcelable`(v2, v3, v0) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L1c682a.  v3:= v1.`com.google.android.material.datepicker.CalendarConstraints.j` @type ^`com.google.android.material.datepicker.Month` @kind object;
  #L1c682e.  call `writeParcelable`(v2, v3, v0) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L1c6834.  v3:= v1.`com.google.android.material.datepicker.CalendarConstraints.i` @type ^`com.google.android.material.datepicker.CalendarConstraints$DateValidator` @kind object;
  #L1c6838.  call `writeParcelable`(v2, v3, v0) @signature `Landroid/os/Parcel;.writeParcelable:(Landroid/os/Parcelable;I)V` @kind virtual;
  #L1c683e.  return @kind void;
}
