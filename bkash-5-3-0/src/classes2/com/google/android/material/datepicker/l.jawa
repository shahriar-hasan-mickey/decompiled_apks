record `com.google.android.material.datepicker.l` @kind class @AccessFlag ABSTRACT extends `androidx.fragment.app.Fragment` @kind class {
  `java.util.LinkedHashSet` `com.google.android.material.datepicker.l.g` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`com.google.android.material.datepicker.l` v1 @kind this) @signature `Lcom/google/android/material/datepicker/l;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1caca0.  call `<init>`(v1) @signature `Landroidx/fragment/app/Fragment;.<init>:()V` @kind direct;
  #L1caca6.  v0:= new `java.util.LinkedHashSet`;
  #L1cacaa.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L1cacb0.  v1.`com.google.android.material.datepicker.l.g` @type ^`java.util.LinkedHashSet` := v0 @kind object;
  #L1cacb4.  return @kind void;
}
procedure `boolean` `l`(`com.google.android.material.datepicker.l` v1 @kind this, `com.google.android.material.datepicker.k` v2 @kind object) @signature `Lcom/google/android/material/datepicker/l;.l:(Lcom/google/android/material/datepicker/k;)Z` @AccessFlag  {
    temp;
    v0;

  #L1cac80.  v0:= v1.`com.google.android.material.datepicker.l.g` @type ^`java.util.LinkedHashSet` @kind object;
  #L1cac84.  call temp:= `add`(v0, v2) @signature `Ljava/util/LinkedHashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L1cac8a.  v2:= temp;
  #L1cac8c.  return v2;
}
procedure `void` `m`(`com.google.android.material.datepicker.l` v1 @kind this) @signature `Lcom/google/android/material/datepicker/l;.m:()V` @AccessFlag  {
    temp;
    v0;

  #L1cacc8.  v0:= v1.`com.google.android.material.datepicker.l.g` @type ^`java.util.LinkedHashSet` @kind object;
  #L1caccc.  call `clear`(v0) @signature `Ljava/util/LinkedHashSet;.clear:()V` @kind virtual;
  #L1cacd2.  return @kind void;
}
