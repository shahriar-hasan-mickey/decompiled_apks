record `com.google.android.material.transformation.ExpandableBehavior` @kind class @AccessFlag PUBLIC_ABSTRACT extends `androidx.coordinatorlayout.widget.CoordinatorLayout$Behavior` @kind class {
  `int` `com.google.android.material.transformation.ExpandableBehavior.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1f8098.  call `<init>`(v1) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:()V` @kind direct;
  #L1f809e.  v0:= 0I;
  #L1f80a0.  v1.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int` := v0;
  #L1f80a4.  return @kind void;
}
procedure `void` `<init>`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind this, `android.content.Context` v1 @kind object, `android.util.AttributeSet` v2 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1f80b8.  call `<init>`(v0, v1, v2) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L1f80be.  v1:= 0I;
  #L1f80c0.  v0.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int` := v1;
  #L1f80c4.  return @kind void;
}
procedure `int` `E`(`com.google.android.material.transformation.ExpandableBehavior` v0 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.E:(Lcom/google/android/material/transformation/ExpandableBehavior;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1f8080.  v0:= v0.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int`;
  #L1f8084.  return v0;
}
procedure `boolean` `F`(`com.google.android.material.transformation.ExpandableBehavior` v3 @kind this, `boolean` v4 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.F:(Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L1f7f7c.  v0:= 0I;
  #L1f7f7e.  v1:= 1I;
  #L1f7f80.  if v4 == 0 then goto L1f7f96;
  #L1f7f84.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int`;
  #L1f7f88.  if v4 == 0 then goto L1f7f92;
  #L1f7f8c.  v2:= 2I;
  #L1f7f8e.  if v4 != v2 then goto L1f7f94;
  #L1f7f92.  v0:= 1I;
  #L1f7f94.  return v0;
  #L1f7f96.  v4:= v3.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int`;
  #L1f7f9a.  if v4 != v1 then goto L1f7fa0;
  #L1f7f9e.  v0:= 1I;
  #L1f7fa0.  return v0;
}
procedure `z7.a` `G`(`com.google.android.material.transformation.ExpandableBehavior` v5 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v6 @kind object, `android.view.View` v7 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.G:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lz7/a;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1f80d8.  call temp:= `getDependencies`(v6, v7) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout;.getDependencies:(Landroid/view/View;)Ljava/util/List;` @kind virtual;
  #L1f80de.  v0:= temp @kind object;
  #L1f80e0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1f80e6.  v1:= temp;
  #L1f80e8.  v2:= 0I;
  #L1f80ea.  if v2 >= v1 then goto L1f8112;
  #L1f80ee.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1f80f4.  v3:= temp @kind object;
  #L1f80f6.  v3:= (`android.view.View`) v3 @kind object;
  #L1f80fa.  call temp:= `e`(v5, v6, v7, v3) @signature `Landroidx/coordinatorlayout/widget/CoordinatorLayout$Behavior;.e:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @kind virtual;
  #L1f8100.  v4:= temp;
  #L1f8102.  if v4 == 0 then goto L1f810c;
  #L1f8106.  v3:= (`z7.a`) v3 @kind object;
  #L1f810a.  return v3 @kind object;
  #L1f810c.  v2:= v2 + 1;
  #L1f8110.  goto L1f80ea;
  #L1f8112.  v6:= 0I;
  #L1f8114.  return v6 @kind object;
}
procedure `boolean` `H`(`android.view.View` v0 @kind object, `android.view.View` v1 @kind object, `boolean` v2 , `boolean` v3 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.H:(Landroid/view/View;Landroid/view/View;ZZ)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `h`(`com.google.android.material.transformation.ExpandableBehavior` v1 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v2 @kind object, `android.view.View` v3 @kind object, `android.view.View` v4 @kind object) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.h:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;Landroid/view/View;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1f7fb4.  v4:= (`z7.a`) v4 @kind object;
  #L1f7fb8.  call temp:= `isExpanded`(v4) @signature `Lz7/a;.isExpanded:()Z` @kind interface;
  #L1f7fbe.  v2:= temp;
  #L1f7fc0.  call temp:= `F`(v1, v2) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.F:(Z)Z` @kind direct;
  #L1f7fc6.  v2:= temp;
  #L1f7fc8.  if v2 == 0 then goto L1f7ffc;
  #L1f7fcc.  call temp:= `isExpanded`(v4) @signature `Lz7/a;.isExpanded:()Z` @kind interface;
  #L1f7fd2.  v2:= temp;
  #L1f7fd4.  v0:= 1I;
  #L1f7fd6.  if v2 == 0 then goto L1f7fde;
  #L1f7fda.  v2:= 1I;
  #L1f7fdc.  goto L1f7fe0;
  #L1f7fde.  v2:= 2I;
  #L1f7fe0.  v1.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int` := v2;
  #L1f7fe4.  v2:= v4 @kind object;
  #L1f7fe6.  v2:= (`android.view.View`) v2 @kind object;
  #L1f7fea.  call temp:= `isExpanded`(v4) @signature `Lz7/a;.isExpanded:()Z` @kind interface;
  #L1f7ff0.  v4:= temp;
  #L1f7ff2.  call temp:= `H`(v1, v2, v3, v4, v0) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.H:(Landroid/view/View;Landroid/view/View;ZZ)Z` @kind virtual;
  #L1f7ff8.  v2:= temp;
  #L1f7ffa.  return v2;
  #L1f7ffc.  v2:= 0I;
  #L1f7ffe.  return v2;
}
procedure `boolean` `l`(`com.google.android.material.transformation.ExpandableBehavior` v2 @kind this, `androidx.coordinatorlayout.widget.CoordinatorLayout` v3 @kind object, `android.view.View` v4 @kind object, `int` v5 ) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.l:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1f8010.  call temp:= `W`(v4) @signature `Landroidx/core/view/ViewCompat;.W:(Landroid/view/View;)Z` @kind static;
  #L1f8016.  v5:= temp;
  #L1f8018.  if v5 != 0 then goto L1f806a;
  #L1f801c.  call temp:= `G`(v2, v3, v4) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.G:(Landroidx/coordinatorlayout/widget/CoordinatorLayout;Landroid/view/View;)Lz7/a;` @kind virtual;
  #L1f8022.  v3:= temp @kind object;
  #L1f8024.  if v3 == 0 then goto L1f806a;
  #L1f8028.  call temp:= `isExpanded`(v3) @signature `Lz7/a;.isExpanded:()Z` @kind interface;
  #L1f802e.  v5:= temp;
  #L1f8030.  call temp:= `F`(v2, v5) @signature `Lcom/google/android/material/transformation/ExpandableBehavior;.F:(Z)Z` @kind direct;
  #L1f8036.  v5:= temp;
  #L1f8038.  if v5 == 0 then goto L1f806a;
  #L1f803c.  call temp:= `isExpanded`(v3) @signature `Lz7/a;.isExpanded:()Z` @kind interface;
  #L1f8042.  v5:= temp;
  #L1f8044.  if v5 == 0 then goto L1f804c;
  #L1f8048.  v5:= 1I;
  #L1f804a.  goto L1f804e;
  #L1f804c.  v5:= 2I;
  #L1f804e.  v2.`com.google.android.material.transformation.ExpandableBehavior.a` @type ^`int` := v5;
  #L1f8052.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L1f8058.  v0:= temp @kind object;
  #L1f805a.  v1:= new `com.google.android.material.transformation.ExpandableBehavior$a`;
  #L1f805e.  call `<init>`(v1, v2, v4, v5, v3) @signature `Lcom/google/android/material/transformation/ExpandableBehavior$a;.<init>:(Lcom/google/android/material/transformation/ExpandableBehavior;Landroid/view/View;ILz7/a;)V` @kind direct;
  #L1f8064.  call `addOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L1f806a.  v3:= 0I;
  #L1f806c.  return v3;
}
