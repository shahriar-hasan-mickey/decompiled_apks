record `com.google.mlkit.vision.common.internal.a` @kind class @AccessFlag PUBLIC {
  `java.util.Map` `com.google.mlkit.vision.common.internal.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.mlkit.vision.common.internal.a` v5 @kind this, `java.util.Set` v6 @kind object) @signature `Lcom/google/mlkit/vision/common/internal/a;.<init>:(Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L23a75c.  call `<init>`(v5) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23a762.  v0:= new `java.util.HashMap`;
  #L23a766.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L23a76c.  v5.`com.google.mlkit.vision.common.internal.a.a` @type ^`java.util.Map` := v0 @kind object;
  #L23a770.  v0:= new `java.util.HashMap`;
  #L23a774.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L23a77a.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L23a780.  v6:= temp @kind object;
  #L23a782.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23a788.  v1:= temp;
  #L23a78a.  if v1 == 0 then goto L23a808;
  #L23a78e.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23a794.  v1:= temp @kind object;
  #L23a796.  v1:= (`com.google.mlkit.vision.common.internal.a$a`) v1 @kind object;
  #L23a79a.  call temp:= `c`(v1) @signature `Lcom/google/mlkit/vision/common/internal/a$a;.c:()Ljava/lang/Class;` @kind virtual;
  #L23a7a0.  v2:= temp @kind object;
  #L23a7a2.  v3:= v5.`com.google.mlkit.vision.common.internal.a.a` @type ^`java.util.Map` @kind object;
  #L23a7a6.  call temp:= `containsKey`(v3, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L23a7ac.  v3:= temp;
  #L23a7ae.  if v3 == 0 then goto L23a7de;
  #L23a7b2.  call temp:= `a`(v1) @signature `Lcom/google/mlkit/vision/common/internal/a$a;.a:()I` @kind virtual;
  #L23a7b8.  v3:= temp;
  #L23a7ba.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23a7c0.  v4:= temp @kind object;
  #L23a7c2.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L23a7c6.  call temp:= `j`(v4) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L23a7cc.  v4:= temp @kind object;
  #L23a7ce.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L23a7d2.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L23a7d8.  v4:= temp;
  #L23a7da.  if v3 < v4 then goto L23a782;
  #L23a7de.  v3:= v5.`com.google.mlkit.vision.common.internal.a.a` @type ^`java.util.Map` @kind object;
  #L23a7e2.  call temp:= `b`(v1) @signature `Lcom/google/mlkit/vision/common/internal/a$a;.b:()Lh9/b;` @kind virtual;
  #L23a7e8.  v4:= temp @kind object;
  #L23a7ea.  call temp:= `put`(v3, v2, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23a7f0.  call temp:= `a`(v1) @signature `Lcom/google/mlkit/vision/common/internal/a$a;.a:()I` @kind virtual;
  #L23a7f6.  v1:= temp;
  #L23a7f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L23a7fe.  v1:= temp @kind object;
  #L23a800.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L23a806.  goto L23a782;
  #L23a808.  return @kind void;
}
