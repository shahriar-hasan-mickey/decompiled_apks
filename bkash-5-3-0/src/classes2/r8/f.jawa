record `r8.f` @kind class @AccessFlag  extends `r8.a` @kind interface {
  `java.io.File` `r8.f.a` @AccessFlag PRIVATE_FINAL;
  `int` `r8.f.b` @AccessFlag PRIVATE_FINAL;
  `r8.e` `r8.f.c` @AccessFlag PRIVATE;
}
global `java.nio.charset.Charset` `@@r8.f.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr8/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L371d7c.  v0:= "UTF-8" @kind object;
  #L371d80.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L371d86.  v0:= temp @kind object;
  #L371d88.  `@@r8.f.d` @type ^`java.nio.charset.Charset` := v0 @kind object;
  #L371d8c.  return @kind void;
}
procedure `void` `<init>`(`r8.f` v0 @kind this, `java.io.File` v1 @kind object, `int` v2 ) @signature `Lr8/f;.<init>:(Ljava/io/File;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L371da0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L371da6.  v0.`r8.f.a` @type ^`java.io.File` := v1 @kind object;
  #L371daa.  v0.`r8.f.b` @type ^`int` := v2;
  #L371dae.  return @kind void;
}
procedure `void` `f`(`r8.f` v4 @kind this, `long` v5 , `java.lang.String` v7 @kind object) @signature `Lr8/f;.f:(JLjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L371e0c.  v0:= " " @kind object;
  #L371e10.  v1:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371e14.  if v1 != 0 then goto L371e1a;
  #L371e18.  return @kind void;
  #L371e1a.  if v7 != 0 then goto L371e22;
  #L371e1e.  v7:= "null" @kind object;
  #L371e22.  v1:= v4.`r8.f.b` @type ^`int`;
  #L371e26.  v1:= v1 / 4;
  #L371e2a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L371e30.  v2:= temp;
  #L371e32.  if v2 <= v1 then goto L371e6a;
  #L371e36.  v2:= new `java.lang.StringBuilder`;
  #L371e3a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L371e40.  v3:= "..." @kind object;
  #L371e44.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371e4a.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L371e50.  v3:= temp;
  #L371e52.  v3:= v3 - v1 @kind int;
  #L371e54.  call temp:= `substring`(v7, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L371e5a.  v7:= temp @kind object;
  #L371e5c.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371e62.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L371e68.  v7:= temp @kind object;
  #L371e6a.  v1:= "\r" @kind object;
  #L371e6e.  call temp:= `replaceAll`(v7, v1, v0) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L371e74.  v7:= temp @kind object;
  #L371e76.  v1:= "\n" @kind object;
  #L371e7a.  call temp:= `replaceAll`(v7, v1, v0) @signature `Ljava/lang/String;.replaceAll:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L371e80.  v7:= temp @kind object;
  #L371e82.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L371e86.  v1:= "%d %s%n" @kind object;
  #L371e8a.  v2:= 2I;
  #L371e8c.  v2:= new `java.lang.Object`[v2];
  #L371e90.  v3:= 0I;
  #L371e92.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L371e98.  v5:= temp @kind object;
  #L371e9a.  v2[v3]:= v5 @kind object;
  #L371e9e.  v5:= 1I;
  #L371ea0.  v2[v5]:= v7 @kind object;
  #L371ea4.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L371eaa.  v5:= temp @kind object;
  #L371eac.  v6:= `@@r8.f.d` @type ^`java.nio.charset.Charset` @kind object;
  #L371eb0.  call temp:= `getBytes`(v5, v6) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L371eb6.  v5:= temp @kind object;
  #L371eb8.  v6:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371ebc.  call `s`(v6, v5) @signature `Lr8/e;.s:([B)V` @kind virtual;
  #L371ec2.  v5:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371ec6.  call temp:= `Q`(v5) @signature `Lr8/e;.Q:()Z` @kind virtual;
  #L371ecc.  v5:= temp;
  #L371ece.  if v5 != 0 then goto L371f06;
  #L371ed2.  v5:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371ed6.  call temp:= `q0`(v5) @signature `Lr8/e;.q0:()I` @kind virtual;
  #L371edc.  v5:= temp;
  #L371ede.  v6:= v4.`r8.f.b` @type ^`int`;
  #L371ee2.  if v5 <= v6 then goto L371f06;
  #L371ee6.  v5:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371eea.  call `j0`(v5) @signature `Lr8/e;.j0:()V` @kind virtual;
  #L371ef0.  goto L371ec2;
  #L371ef2.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L371ef4.  call temp:= `f`() @signature `Lo8/f;.f:()Lo8/f;` @kind static;
  #L371efa.  v6:= temp @kind object;
  #L371efc.  v7:= "There was a problem writing to the Crashlytics log." @kind object;
  #L371f00.  call `e`(v6, v7, v5) @signature `Lo8/f;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L371f06.  return @kind void;
  catch `java.io.IOException` @[L371e22..L371ef0] goto L371ef2;
}
procedure `r8.f$b` `g`(`r8.f` v6 @kind this) @signature `Lr8/f;.g:()Lr8/f$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L371ce4.  v0:= v6.`r8.f.a` @type ^`java.io.File` @kind object;
  #L371ce8.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L371cee.  v0:= temp;
  #L371cf0.  v1:= 0I;
  #L371cf2.  if v0 != 0 then goto L371cf8;
  #L371cf6.  return v1 @kind object;
  #L371cf8.  call `h`(v6) @signature `Lr8/f;.h:()V` @kind direct;
  #L371cfe.  v0:= v6.`r8.f.c` @type ^`r8.e` @kind object;
  #L371d02.  if v0 != 0 then goto L371d08;
  #L371d06.  return v1 @kind object;
  #L371d08.  v1:= 1I;
  #L371d0a.  v1:= new `int`[v1];
  #L371d0e.  v2:= 0I;
  #L371d10.  v1[v2]:= v2;
  #L371d14.  call temp:= `q0`(v0) @signature `Lr8/e;.q0:()I` @kind virtual;
  #L371d1a.  v0:= temp;
  #L371d1c.  v0:= new `byte`[v0];
  #L371d20.  v3:= v6.`r8.f.c` @type ^`r8.e` @kind object;
  #L371d24.  v4:= new `r8.f$a`;
  #L371d28.  call `<init>`(v4, v6, v0, v1) @signature `Lr8/f$a;.<init>:(Lr8/f;[B[I)V` @kind direct;
  #L371d2e.  call `C`(v3, v4) @signature `Lr8/e;.C:(Lr8/e$d;)V` @kind virtual;
  #L371d34.  goto L371d4a;
  #L371d36.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L371d38.  call temp:= `f`() @signature `Lo8/f;.f:()Lo8/f;` @kind static;
  #L371d3e.  v4:= temp @kind object;
  #L371d40.  v5:= "A problem occurred while reading the Crashlytics log file." @kind object;
  #L371d44.  call `e`(v4, v5, v3) @signature `Lo8/f;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L371d4a.  v3:= new `r8.f$b`;
  #L371d4e.  v1:= v1[v2];
  #L371d52.  call `<init>`(v3, v0, v1) @signature `Lr8/f$b;.<init>:([BI)V` @kind direct;
  #L371d58.  return v3 @kind object;
  catch `java.io.IOException` @[L371d20..L371d34] goto L371d36;
}
procedure `void` `h`(`r8.f` v4 @kind this) @signature `Lr8/f;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L371f28.  v0:= v4.`r8.f.c` @type ^`r8.e` @kind object;
  #L371f2c.  if v0 != 0 then goto L371f7a;
  #L371f30.  v0:= new `r8.e`;
  #L371f34.  v1:= v4.`r8.f.a` @type ^`java.io.File` @kind object;
  #L371f38.  call `<init>`(v0, v1) @signature `Lr8/e;.<init>:(Ljava/io/File;)V` @kind direct;
  #L371f3e.  v4.`r8.f.c` @type ^`r8.e` := v0 @kind object;
  #L371f42.  goto L371f7a;
  #L371f44.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L371f46.  call temp:= `f`() @signature `Lo8/f;.f:()Lo8/f;` @kind static;
  #L371f4c.  v1:= temp @kind object;
  #L371f4e.  v2:= new `java.lang.StringBuilder`;
  #L371f52.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L371f58.  v3:= "Could not open log file: " @kind object;
  #L371f5c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371f62.  v3:= v4.`r8.f.a` @type ^`java.io.File` @kind object;
  #L371f66.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L371f6c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L371f72.  v2:= temp @kind object;
  #L371f74.  call `e`(v1, v2, v0) @signature `Lo8/f;.e:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L371f7a.  return @kind void;
  catch `java.io.IOException` @[L371f30..L371f42] goto L371f44;
}
procedure `void` `a`(`r8.f` v2 @kind this) @signature `Lr8/f;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L371dc0.  v0:= v2.`r8.f.c` @type ^`r8.e` @kind object;
  #L371dc4.  v1:= "There was a problem closing the Crashlytics log file." @kind object;
  #L371dc8.  call `e`(v0, v1) @signature `Lcom/google/firebase/crashlytics/internal/common/g;.e:(Ljava/io/Closeable;Ljava/lang/String;)V` @kind static;
  #L371dce.  v0:= 0I;
  #L371dd0.  v2.`r8.f.c` @type ^`r8.e` := v0 @kind object;
  #L371dd4.  return @kind void;
}
procedure `java.lang.String` `b`(`r8.f` v3 @kind this) @signature `Lr8/f;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L371cb4.  call temp:= `c`(v3) @signature `Lr8/f;.c:()[B` @kind virtual;
  #L371cba.  v0:= temp @kind object;
  #L371cbc.  if v0 == 0 then goto L371cd0;
  #L371cc0.  v1:= new `java.lang.String`;
  #L371cc4.  v2:= `@@r8.f.d` @type ^`java.nio.charset.Charset` @kind object;
  #L371cc8.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L371cce.  goto L371cd2;
  #L371cd0.  v1:= 0I;
  #L371cd2.  return v1 @kind object;
}
procedure `byte`[] `c`(`r8.f` v4 @kind this) @signature `Lr8/f;.c:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L371c7c.  call temp:= `g`(v4) @signature `Lr8/f;.g:()Lr8/f$b;` @kind direct;
  #L371c82.  v0:= temp @kind object;
  #L371c84.  if v0 != 0 then goto L371c8c;
  #L371c88.  v0:= 0I;
  #L371c8a.  return v0 @kind object;
  #L371c8c.  v1:= v0.`r8.f$b.b` @type ^`int`;
  #L371c90.  v2:= new `byte`[v1];
  #L371c94.  v0:= v0.`r8.f$b.a` @type ^`byte`[] @kind object;
  #L371c98.  v3:= 0I;
  #L371c9a.  call `arraycopy`(v0, v3, v2, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L371ca0.  return v2 @kind object;
}
procedure `void` `d`(`r8.f` v1 @kind this) @signature `Lr8/f;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L371de8.  call `a`(v1) @signature `Lr8/f;.a:()V` @kind virtual;
  #L371dee.  v0:= v1.`r8.f.a` @type ^`java.io.File` @kind object;
  #L371df2.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L371df8.  return @kind void;
}
procedure `void` `e`(`r8.f` v0 @kind this, `long` v1 , `java.lang.String` v3 @kind object) @signature `Lr8/f;.e:(JLjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L371f9c.  call `h`(v0) @signature `Lr8/f;.h:()V` @kind direct;
  #L371fa2.  call `f`(v0, v1, v3) @signature `Lr8/f;.f:(JLjava/lang/String;)V` @kind direct;
  #L371fa8.  return @kind void;
}
