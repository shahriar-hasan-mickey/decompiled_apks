record `r8.e` @kind class @AccessFlag  extends `java.io.Closeable` @kind interface {
  `java.io.RandomAccessFile` `r8.e.g` @AccessFlag PRIVATE_FINAL;
  `int` `r8.e.h` @AccessFlag ;
  `int` `r8.e.i` @AccessFlag PRIVATE;
  `r8.e$b` `r8.e.j` @AccessFlag PRIVATE;
  `r8.e$b` `r8.e.k` @AccessFlag PRIVATE;
  `byte`[] `r8.e.l` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@r8.e.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lr8/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L372284.  v0:= constclass @type ^`r8.e` @kind object;
  #L372288.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L37228e.  v0:= temp @kind object;
  #L372290.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L372296.  v0:= temp @kind object;
  #L372298.  `@@r8.e.m` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L37229c.  return @kind void;
}
procedure `void` `<init>`(`r8.e` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lr8/e;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3722b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3722b6.  v0:= 16I;
  #L3722ba.  v0:= new `byte`[v0];
  #L3722be.  v1.`r8.e.l` @type ^`byte`[] := v0 @kind object;
  #L3722c2.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3722c8.  v0:= temp;
  #L3722ca.  if v0 != 0 then goto L3722d4;
  #L3722ce.  call `J`(v2) @signature `Lr8/e;.J:(Ljava/io/File;)V` @kind static;
  #L3722d4.  call temp:= `Y`(v2) @signature `Lr8/e;.Y:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L3722da.  v2:= temp @kind object;
  #L3722dc.  v1.`r8.e.g` @type ^`java.io.RandomAccessFile` := v2 @kind object;
  #L3722e0.  call `a0`(v1) @signature `Lr8/e;.a0:()V` @kind direct;
  #L3722e6.  return @kind void;
}
procedure `void` `B0`(`byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lr8/e;.B0:([BII)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L372a08.  v0:= v4 ^> 24;
  #L372a0c.  v0:= (`byte`) v0 @kind i2b;
  #L372a0e.  v2[v3]:= v0 @kind byte;
  #L372a12.  v0:= v3 + 1;
  #L372a16.  v1:= v4 ^> 16;
  #L372a1a.  v1:= (`byte`) v1 @kind i2b;
  #L372a1c.  v2[v0]:= v1 @kind byte;
  #L372a20.  v0:= v3 + 2;
  #L372a24.  v1:= v4 ^> 8;
  #L372a28.  v1:= (`byte`) v1 @kind i2b;
  #L372a2a.  v2[v0]:= v1 @kind byte;
  #L372a2e.  v3:= v3 + 3;
  #L372a32.  v4:= (`byte`) v4 @kind i2b;
  #L372a34.  v2[v3]:= v4 @kind byte;
  #L372a38.  return @kind void;
}
procedure `void` `E0`(`byte`[] v4 @kind object, `int`[] v5 @kind object) @signature `Lr8/e;.E0:([B[I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L372a4c.  v0:= length @variable v5;
  #L372a4e.  v1:= 0I;
  #L372a50.  v2:= 0I;
  #L372a52.  if v1 >= v0 then goto L372a6a;
  #L372a56.  v3:= v5[v1];
  #L372a5a.  call `B0`(v4, v2, v3) @signature `Lr8/e;.B0:([BII)V` @kind static;
  #L372a60.  v2:= v2 + 4;
  #L372a64.  v1:= v1 + 1;
  #L372a68.  goto L372a52;
  #L372a6a.  return @kind void;
}
procedure `void` `J`(`java.io.File` v6 @kind object) @signature `Lr8/e;.J:(Ljava/io/File;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L372618.  v0:= new `java.io.File`;
  #L37261c.  v1:= new `java.lang.StringBuilder`;
  #L372620.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L372626.  call temp:= `getPath`(v6) @signature `Ljava/io/File;.getPath:()Ljava/lang/String;` @kind virtual;
  #L37262c.  v2:= temp @kind object;
  #L37262e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372634.  v2:= ".tmp" @kind object;
  #L372638.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37263e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L372644.  v1:= temp @kind object;
  #L372646.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37264c.  call temp:= `Y`(v0) @signature `Lr8/e;.Y:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @kind static;
  #L372652.  v1:= temp @kind object;
  #L372654.  v2:= 4096L;
  #L372658.  call `setLength`(v1, v2) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L37265e.  v2:= 0L;
  #L372662.  call `seek`(v1, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L372668.  v2:= 16I;
  #L37266c.  v2:= new `byte`[v2];
  #L372670.  v3:= 4I;
  #L372672.  v3:= new `int`[v3];
  #L372676.  v4:= 4096I;
  #L37267a.  v5:= 0I;
  #L37267c.  v3[v5]:= v4;
  #L372680.  v4:= 1I;
  #L372682.  v3[v4]:= v5;
  #L372686.  v4:= 2I;
  #L372688.  v3[v4]:= v5;
  #L37268c.  v4:= 3I;
  #L37268e.  v3[v4]:= v5;
  #L372692.  call `E0`(v2, v3) @signature `Lr8/e;.E0:([B[I)V` @kind static;
  #L372698.  call `write`(v1, v2) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L37269e.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L3726a4.  call temp:= `renameTo`(v0, v6) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L3726aa.  v6:= temp;
  #L3726ac.  if v6 == 0 then goto L3726b2;
  #L3726b0.  return @kind void;
  #L3726b2.  v6:= new `java.io.IOException`;
  #L3726b6.  v0:= "Rename failed!" @kind object;
  #L3726ba.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3726c0.  throw v6;
  #L3726c2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3726c4.  call `close`(v1) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L3726ca.  throw v6;
  catch `java.lang.Throwable` @[L372658..L37269e] goto L3726c2;
}
procedure `java.lang.Object` `V`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lr8/e;.V:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L372150.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L372156.  return v0 @kind object;
}
procedure `java.io.RandomAccessFile` `Y`(`java.io.File` v2 @kind object) @signature `Lr8/e;.Y:(Ljava/io/File;)Ljava/io/RandomAccessFile;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L372114.  v0:= new `java.io.RandomAccessFile`;
  #L372118.  v1:= "rwd" @kind object;
  #L37211c.  call `<init>`(v0, v2, v1) @signature `Ljava/io/RandomAccessFile;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L372122.  return v0 @kind object;
}
procedure `r8.e$b` `Z`(`r8.e` v3 @kind this, `int` v4 ) @signature `Lr8/e;.Z:(I)Lr8/e$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L372244.  if v4 != 0 then goto L37224e;
  #L372248.  v4:= `@@r8.e$b.c` @type ^`r8.e$b` @kind object;
  #L37224c.  return v4 @kind object;
  #L37224e.  v0:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372252.  v1:= (`long`) v4 @kind i2l;
  #L372254.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L37225a.  v0:= new `r8.e$b`;
  #L37225e.  v1:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372262.  call temp:= `readInt`(v1) @signature `Ljava/io/RandomAccessFile;.readInt:()I` @kind virtual;
  #L372268.  v1:= temp;
  #L37226a.  call `<init>`(v0, v4, v1) @signature `Lr8/e$b;.<init>:(II)V` @kind direct;
  #L372270.  return v0 @kind object;
}
procedure `void` `a0`(`r8.e` v5 @kind this) @signature `Lr8/e;.a0:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3726e8.  v0:= v5.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3726ec.  v1:= 0L;
  #L3726f0.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3726f6.  v0:= v5.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3726fa.  v1:= v5.`r8.e.l` @type ^`byte`[] @kind object;
  #L3726fe.  call `readFully`(v0, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([B)V` @kind virtual;
  #L372704.  v0:= v5.`r8.e.l` @type ^`byte`[] @kind object;
  #L372708.  v1:= 0I;
  #L37270a.  call temp:= `d0`(v0, v1) @signature `Lr8/e;.d0:([BI)I` @kind static;
  #L372710.  v0:= temp;
  #L372712.  v5.`r8.e.h` @type ^`int` := v0;
  #L372716.  v0:= (`long`) v0 @kind i2l;
  #L372718.  v2:= v5.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L37271c.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L372722.  v2:= temp @kind wide;
  #L372724.  v4:= lcmp(v0, v2);
  #L372728.  if v4 > 0 then goto L372778;
  #L37272c.  v0:= v5.`r8.e.l` @type ^`byte`[] @kind object;
  #L372730.  v1:= 4I;
  #L372732.  call temp:= `d0`(v0, v1) @signature `Lr8/e;.d0:([BI)I` @kind static;
  #L372738.  v0:= temp;
  #L37273a.  v5.`r8.e.i` @type ^`int` := v0;
  #L37273e.  v0:= v5.`r8.e.l` @type ^`byte`[] @kind object;
  #L372742.  v1:= 8I;
  #L372746.  call temp:= `d0`(v0, v1) @signature `Lr8/e;.d0:([BI)I` @kind static;
  #L37274c.  v0:= temp;
  #L37274e.  v1:= v5.`r8.e.l` @type ^`byte`[] @kind object;
  #L372752.  v2:= 12I;
  #L372756.  call temp:= `d0`(v1, v2) @signature `Lr8/e;.d0:([BI)I` @kind static;
  #L37275c.  v1:= temp;
  #L37275e.  call temp:= `Z`(v5, v0) @signature `Lr8/e;.Z:(I)Lr8/e$b;` @kind direct;
  #L372764.  v0:= temp @kind object;
  #L372766.  v5.`r8.e.j` @type ^`r8.e$b` := v0 @kind object;
  #L37276a.  call temp:= `Z`(v5, v1) @signature `Lr8/e;.Z:(I)Lr8/e$b;` @kind direct;
  #L372770.  v0:= temp @kind object;
  #L372772.  v5.`r8.e.k` @type ^`r8.e$b` := v0 @kind object;
  #L372776.  return @kind void;
  #L372778.  v0:= new `java.io.IOException`;
  #L37277c.  v1:= new `java.lang.StringBuilder`;
  #L372780.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L372786.  v2:= "File is truncated. Expected length: " @kind object;
  #L37278a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372790.  v2:= v5.`r8.e.h` @type ^`int`;
  #L372794.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L37279a.  v2:= ", Actual length: " @kind object;
  #L37279e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3727a4.  v2:= v5.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3727a8.  call temp:= `length`(v2) @signature `Ljava/io/RandomAccessFile;.length:()J` @kind virtual;
  #L3727ae.  v2:= temp @kind wide;
  #L3727b0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3727b6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3727bc.  v1:= temp @kind object;
  #L3727be.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3727c4.  throw v0;
}
procedure `int` `d0`(`byte`[] v2 @kind object, `int` v3 ) @signature `Lr8/e;.d0:([BI)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L372010.  v0:= v2[v3] @kind byte;
  #L372014.  v0:= v0 ^& 255;
  #L372018.  v0:= v0 ^< 24;
  #L37201c.  v1:= v3 + 1;
  #L372020.  v1:= v2[v1] @kind byte;
  #L372024.  v1:= v1 ^& 255;
  #L372028.  v1:= v1 ^< 16;
  #L37202c.  v0:= v0 + v1 @kind int;
  #L37202e.  v1:= v3 + 2;
  #L372032.  v1:= v2[v1] @kind byte;
  #L372036.  v1:= v1 ^& 255;
  #L37203a.  v1:= v1 ^< 8;
  #L37203e.  v0:= v0 + v1 @kind int;
  #L372040.  v3:= v3 + 3;
  #L372044.  v2:= v2[v3] @kind byte;
  #L372048.  v2:= v2 ^& 255;
  #L37204c.  v0:= v0 + v2 @kind int;
  #L37204e.  return v0;
}
procedure `int` `e`(`r8.e` v0 @kind object, `int` v1 ) @signature `Lr8/e;.e:(Lr8/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L371ff4.  call temp:= `u0`(v0, v1) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L371ffa.  v0:= temp;
  #L371ffc.  return v0;
}
procedure `java.lang.Object` `i`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lr8/e;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L372134.  call temp:= `V`(v0, v1) @signature `Lr8/e;.V:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L37213a.  v0:= temp @kind object;
  #L37213c.  return v0 @kind object;
}
procedure `int` `i0`(`r8.e` v2 @kind this) @signature `Lr8/e;.i0:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L372060.  v0:= v2.`r8.e.h` @type ^`int`;
  #L372064.  call temp:= `q0`(v2) @signature `Lr8/e;.q0:()I` @kind virtual;
  #L37206a.  v1:= temp;
  #L37206c.  v0:= v0 - v1 @kind int;
  #L37206e.  return v0;
}
procedure `void` `k`(`r8.e` v0 @kind object, `int` v1 , `byte`[] v2 @kind object, `int` v3 , `int` v4 ) @signature `Lr8/e;.k:(Lr8/e;I[BII)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3722f8.  call `k0`(v0, v1, v2, v3, v4) @signature `Lr8/e;.k0:(I[BII)V` @kind direct;
  #L3722fe.  return @kind void;
}
procedure `void` `k0`(`r8.e` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lr8/e;.k0:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L372894.  call temp:= `u0`(v4, v5) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L37289a.  v5:= temp;
  #L37289c.  v0:= v5 + v8 @kind int;
  #L3728a0.  v1:= v4.`r8.e.h` @type ^`int`;
  #L3728a4.  if v0 > v1 then goto L3728c0;
  #L3728a8.  v0:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728ac.  v1:= (`long`) v5 @kind i2l;
  #L3728ae.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3728b4.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728b8.  call `readFully`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L3728be.  goto L3728f4;
  #L3728c0.  v1:= v1 - v5 @kind int;
  #L3728c2.  v0:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728c6.  v2:= (`long`) v5 @kind i2l;
  #L3728c8.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3728ce.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728d2.  call `readFully`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L3728d8.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728dc.  v2:= 16L;
  #L3728e0.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3728e6.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3728ea.  v7:= v7 + v1 @kind int;
  #L3728ec.  v8:= v8 - v1 @kind int;
  #L3728ee.  call `readFully`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.readFully:([BII)V` @kind virtual;
  #L3728f4.  return @kind void;
}
procedure `void` `l0`(`r8.e` v4 @kind this, `int` v5 , `byte`[] v6 @kind object, `int` v7 , `int` v8 ) @signature `Lr8/e;.l0:(I[BII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L372908.  call temp:= `u0`(v4, v5) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L37290e.  v5:= temp;
  #L372910.  v0:= v5 + v8 @kind int;
  #L372914.  v1:= v4.`r8.e.h` @type ^`int`;
  #L372918.  if v0 > v1 then goto L372934;
  #L37291c.  v0:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372920.  v1:= (`long`) v5 @kind i2l;
  #L372922.  call `seek`(v0, v1) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L372928.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L37292c.  call `write`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L372932.  goto L372968;
  #L372934.  v1:= v1 - v5 @kind int;
  #L372936.  v0:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L37293a.  v2:= (`long`) v5 @kind i2l;
  #L37293c.  call `seek`(v0, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L372942.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372946.  call `write`(v5, v6, v7, v1) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L37294c.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372950.  v2:= 16L;
  #L372954.  call `seek`(v5, v2) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L37295a.  v5:= v4.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L37295e.  v7:= v7 + v1 @kind int;
  #L372960.  v8:= v8 - v1 @kind int;
  #L372962.  call `write`(v5, v6, v7, v8) @signature `Ljava/io/RandomAccessFile;.write:([BII)V` @kind virtual;
  #L372968.  return @kind void;
}
procedure `void` `n0`(`r8.e` v3 @kind this, `int` v4 ) @signature `Lr8/e;.n0:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L37297c.  v0:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372980.  v1:= (`long`) v4 @kind i2l;
  #L372982.  call `setLength`(v0, v1) @signature `Ljava/io/RandomAccessFile;.setLength:(J)V` @kind virtual;
  #L372988.  v4:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L37298c.  call temp:= `getChannel`(v4) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L372992.  v4:= temp @kind object;
  #L372994.  v0:= 1I;
  #L372996.  call `force`(v4, v0) @signature `Ljava/nio/channels/FileChannel;.force:(Z)V` @kind virtual;
  #L37299c.  return @kind void;
}
procedure `java.io.RandomAccessFile` `r`(`r8.e` v0 @kind object) @signature `Lr8/e;.r:(Lr8/e;)Ljava/io/RandomAccessFile;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3720fc.  v0:= v0.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372100.  return v0 @kind object;
}
procedure `int` `u0`(`r8.e` v1 @kind this, `int` v2 ) @signature `Lr8/e;.u0:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3720d8.  v0:= v1.`r8.e.h` @type ^`int`;
  #L3720dc.  if v2 >= v0 then goto L3720e2;
  #L3720e0.  goto L3720e8;
  #L3720e2.  v2:= v2 + 16;
  #L3720e6.  v2:= v2 - v0 @kind int;
  #L3720e8.  return v2;
}
procedure `void` `x0`(`r8.e` v3 @kind this, `int` v4 , `int` v5 , `int` v6 , `int` v7 ) @signature `Lr8/e;.x0:(IIII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3729b0.  v0:= v3.`r8.e.l` @type ^`byte`[] @kind object;
  #L3729b4.  v1:= 4I;
  #L3729b6.  v1:= new `int`[v1];
  #L3729ba.  v2:= 0I;
  #L3729bc.  v1[v2]:= v4;
  #L3729c0.  v4:= 1I;
  #L3729c2.  v1[v4]:= v5;
  #L3729c6.  v4:= 2I;
  #L3729c8.  v1[v4]:= v6;
  #L3729cc.  v4:= 3I;
  #L3729ce.  v1[v4]:= v7;
  #L3729d2.  call `E0`(v0, v1) @signature `Lr8/e;.E0:([B[I)V` @kind static;
  #L3729d8.  v4:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3729dc.  v5:= 0L;
  #L3729e0.  call `seek`(v4, v5) @signature `Ljava/io/RandomAccessFile;.seek:(J)V` @kind virtual;
  #L3729e6.  v4:= v3.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L3729ea.  v5:= v3.`r8.e.l` @type ^`byte`[] @kind object;
  #L3729ee.  call `write`(v4, v5) @signature `Ljava/io/RandomAccessFile;.write:([B)V` @kind virtual;
  #L3729f4.  return @kind void;
}
procedure `void` `y`(`r8.e` v10 @kind this, `int` v11 ) @signature `Lr8/e;.y:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3724b0.  v11:= v11 + 4;
  #L3724b4.  call temp:= `i0`(v10) @signature `Lr8/e;.i0:()I` @kind direct;
  #L3724ba.  v0:= temp;
  #L3724bc.  if v0 < v11 then goto L3724c2;
  #L3724c0.  return @kind void;
  #L3724c2.  v1:= v10.`r8.e.h` @type ^`int`;
  #L3724c6.  v0:= v0 + v1 @kind int;
  #L3724c8.  v1:= v1 ^< 1;
  #L3724cc.  if v0 < v11 then goto L3724c6;
  #L3724d0.  call `n0`(v10, v1) @signature `Lr8/e;.n0:(I)V` @kind direct;
  #L3724d6.  v11:= v10.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L3724da.  v0:= v11.`r8.e$b.a` @type ^`int`;
  #L3724de.  v0:= v0 + 4;
  #L3724e2.  v11:= v11.`r8.e$b.b` @type ^`int`;
  #L3724e6.  v0:= v0 + v11 @kind int;
  #L3724e8.  call temp:= `u0`(v10, v0) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L3724ee.  v11:= temp;
  #L3724f0.  v0:= v10.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L3724f4.  v0:= v0.`r8.e$b.a` @type ^`int`;
  #L3724f8.  if v11 >= v0 then goto L372544;
  #L3724fc.  v0:= v10.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372500.  call temp:= `getChannel`(v0) @signature `Ljava/io/RandomAccessFile;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L372506.  v7:= temp @kind object;
  #L372508.  v0:= v10.`r8.e.h` @type ^`int`;
  #L37250c.  v2:= (`long`) v0 @kind i2l;
  #L37250e.  call temp:= `position`(v7, v2) @signature `Ljava/nio/channels/FileChannel;.position:(J)Ljava/nio/channels/FileChannel;` @kind virtual;
  #L372514.  v11:= v11 + -4;
  #L372518.  v3:= 16L;
  #L37251c.  v8:= (`long`) v11 @kind i2l;
  #L37251e.  v2:= v7 @kind object;
  #L372520.  v5:= v8 @kind wide;
  #L372522.  call temp:= `transferTo`(v2, v3, v5, v7) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L372528.  v2:= temp @kind wide;
  #L37252a.  v11:= lcmp(v2, v8);
  #L37252e.  if v11 != 0 then goto L372534;
  #L372532.  goto L372544;
  #L372534.  v11:= new `java.lang.AssertionError`;
  #L372538.  v0:= "Copied insufficient number of bytes!" @kind object;
  #L37253c.  call `<init>`(v11, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L372542.  throw v11;
  #L372544.  v11:= v10.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L372548.  v11:= v11.`r8.e$b.a` @type ^`int`;
  #L37254c.  v0:= v10.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L372550.  v0:= v0.`r8.e$b.a` @type ^`int`;
  #L372554.  if v11 >= v0 then goto L372584;
  #L372558.  v2:= v10.`r8.e.h` @type ^`int`;
  #L37255c.  v2:= v2 + v11 @kind int;
  #L37255e.  v2:= v2 + -16;
  #L372562.  v11:= v10.`r8.e.i` @type ^`int`;
  #L372566.  call `x0`(v10, v1, v11, v0, v2) @signature `Lr8/e;.x0:(IIII)V` @kind direct;
  #L37256c.  v11:= new `r8.e$b`;
  #L372570.  v0:= v10.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L372574.  v0:= v0.`r8.e$b.b` @type ^`int`;
  #L372578.  call `<init>`(v11, v2, v0) @signature `Lr8/e$b;.<init>:(II)V` @kind direct;
  #L37257e.  v10.`r8.e.k` @type ^`r8.e$b` := v11 @kind object;
  #L372582.  goto L37258e;
  #L372584.  v2:= v10.`r8.e.i` @type ^`int`;
  #L372588.  call `x0`(v10, v1, v2, v0, v11) @signature `Lr8/e;.x0:(IIII)V` @kind direct;
  #L37258e.  v10.`r8.e.h` @type ^`int` := v1;
  #L372592.  return @kind void;
}
procedure `void` `C`(`r8.e` v4 @kind this, `r8.e$d` v5 @kind object) @signature `Lr8/e;.C:(Lr8/e$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3725a4.  @monitorenter v4
  #L3725a6.  v0:= v4.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L3725aa.  v0:= v0.`r8.e$b.a` @type ^`int`;
  #L3725ae.  v1:= 0I;
  #L3725b0.  v2:= v4.`r8.e.i` @type ^`int`;
  #L3725b4.  if v1 >= v2 then goto L3725f2;
  #L3725b8.  call temp:= `Z`(v4, v0) @signature `Lr8/e;.Z:(I)Lr8/e$b;` @kind direct;
  #L3725be.  v0:= temp @kind object;
  #L3725c0.  v2:= new `r8.e$c`;
  #L3725c4.  v3:= 0I;
  #L3725c6.  call `<init>`(v2, v4, v0, v3) @signature `Lr8/e$c;.<init>:(Lr8/e;Lr8/e$b;Lr8/e$a;)V` @kind direct;
  #L3725cc.  v3:= v0.`r8.e$b.b` @type ^`int`;
  #L3725d0.  call `a`(v5, v2, v3) @signature `Lr8/e$d;.a:(Ljava/io/InputStream;I)V` @kind interface;
  #L3725d6.  v2:= v0.`r8.e$b.a` @type ^`int`;
  #L3725da.  v2:= v2 + 4;
  #L3725de.  v0:= v0.`r8.e$b.b` @type ^`int`;
  #L3725e2.  v2:= v2 + v0 @kind int;
  #L3725e4.  call temp:= `u0`(v4, v2) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L3725ea.  v0:= temp;
  #L3725ec.  v1:= v1 + 1;
  #L3725f0.  goto L3725b0;
  #L3725f2.  @monitorexit v4
  #L3725f4.  return @kind void;
  #L3725f6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3725f8.  @monitorexit v4
  #L3725fa.  throw v5;
  catch `java.lang.Throwable` @[L3725a6..L3725ec] goto L3725f6;
}
procedure `boolean` `Q`(`r8.e` v1 @kind this) @signature `Lr8/e;.Q:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L371fbc.  @monitorenter v1
  #L371fbe.  v0:= v1.`r8.e.i` @type ^`int`;
  #L371fc2.  if v0 != 0 then goto L371fca;
  #L371fc6.  v0:= 1I;
  #L371fc8.  goto L371fcc;
  #L371fca.  v0:= 0I;
  #L371fcc.  @monitorexit v1
  #L371fce.  return v0;
  #L371fd0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L371fd2.  @monitorexit v1
  #L371fd4.  throw v0;
  catch `java.lang.Throwable` @[L371fbe..L371fc2] goto L371fd0;
}
procedure `void` `close`(`r8.e` v1 @kind this) @signature `Lr8/e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37247c.  @monitorenter v1
  #L37247e.  v0:= v1.`r8.e.g` @type ^`java.io.RandomAccessFile` @kind object;
  #L372482.  call `close`(v0) @signature `Ljava/io/RandomAccessFile;.close:()V` @kind virtual;
  #L372488.  @monitorexit v1
  #L37248a.  return @kind void;
  #L37248c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37248e.  @monitorexit v1
  #L372490.  throw v0;
  catch `java.lang.Throwable` @[L37247e..L372488] goto L37248c;
}
procedure `void` `j0`(`r8.e` v6 @kind this) @signature `Lr8/e;.j0:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3727d8.  @monitorenter v6
  #L3727da.  call temp:= `Q`(v6) @signature `Lr8/e;.Q:()Z` @kind virtual;
  #L3727e0.  v0:= temp;
  #L3727e2.  if v0 != 0 then goto L37285e;
  #L3727e6.  v0:= v6.`r8.e.i` @type ^`int`;
  #L3727ea.  v1:= 1I;
  #L3727ec.  if v0 != v1 then goto L3727f8;
  #L3727f0.  call `w`(v6) @signature `Lr8/e;.w:()V` @kind virtual;
  #L3727f6.  goto L37285a;
  #L3727f8.  v0:= v6.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L3727fc.  v2:= v0.`r8.e$b.a` @type ^`int`;
  #L372800.  v3:= 4I;
  #L372802.  v2:= v2 + v3 @kind int;
  #L372804.  v0:= v0.`r8.e$b.b` @type ^`int`;
  #L372808.  v2:= v2 + v0 @kind int;
  #L37280a.  call temp:= `u0`(v6, v2) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L372810.  v0:= temp;
  #L372812.  v2:= v6.`r8.e.l` @type ^`byte`[] @kind object;
  #L372816.  v4:= 0I;
  #L372818.  call `k0`(v6, v0, v2, v4, v3) @signature `Lr8/e;.k0:(I[BII)V` @kind direct;
  #L37281e.  v2:= v6.`r8.e.l` @type ^`byte`[] @kind object;
  #L372822.  call temp:= `d0`(v2, v4) @signature `Lr8/e;.d0:([BI)I` @kind static;
  #L372828.  v2:= temp;
  #L37282a.  v3:= v6.`r8.e.h` @type ^`int`;
  #L37282e.  v4:= v6.`r8.e.i` @type ^`int`;
  #L372832.  v4:= v4 - v1 @kind int;
  #L372834.  v5:= v6.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L372838.  v5:= v5.`r8.e$b.a` @type ^`int`;
  #L37283c.  call `x0`(v6, v3, v4, v0, v5) @signature `Lr8/e;.x0:(IIII)V` @kind direct;
  #L372842.  v3:= v6.`r8.e.i` @type ^`int`;
  #L372846.  v3:= v3 - v1 @kind int;
  #L372848.  v6.`r8.e.i` @type ^`int` := v3;
  #L37284c.  v1:= new `r8.e$b`;
  #L372850.  call `<init>`(v1, v0, v2) @signature `Lr8/e$b;.<init>:(II)V` @kind direct;
  #L372856.  v6.`r8.e.j` @type ^`r8.e$b` := v1 @kind object;
  #L37285a.  @monitorexit v6
  #L37285c.  return @kind void;
  #L37285e.  v0:= new `java.util.NoSuchElementException`;
  #L372862.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L372868.  throw v0;
  #L37286a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37286c.  @monitorexit v6
  #L37286e.  throw v0;
  catch `java.lang.Throwable` @[L3727da..L37285a] goto L37286a;
  catch `java.lang.Throwable` @[L37285e..L37286a] goto L37286a;
}
procedure `int` `q0`(`r8.e` v4 @kind this) @signature `Lr8/e;.q0:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L372080.  v0:= v4.`r8.e.i` @type ^`int`;
  #L372084.  v1:= 16I;
  #L372088.  if v0 != 0 then goto L37208e;
  #L37208c.  return v1;
  #L37208e.  v0:= v4.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L372092.  v2:= v0.`r8.e$b.a` @type ^`int`;
  #L372096.  v3:= v4.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L37209a.  v3:= v3.`r8.e$b.a` @type ^`int`;
  #L37209e.  if v2 < v3 then goto L3720b2;
  #L3720a2.  v2:= v2 - v3 @kind int;
  #L3720a4.  v2:= v2 + 4;
  #L3720a8.  v0:= v0.`r8.e$b.b` @type ^`int`;
  #L3720ac.  v2:= v2 + v0 @kind int;
  #L3720ae.  v2:= v2 + v1 @kind int;
  #L3720b0.  return v2;
  #L3720b2.  v2:= v2 + 4;
  #L3720b6.  v0:= v0.`r8.e$b.b` @type ^`int`;
  #L3720ba.  v2:= v2 + v0 @kind int;
  #L3720bc.  v0:= v4.`r8.e.h` @type ^`int`;
  #L3720c0.  v2:= v2 + v0 @kind int;
  #L3720c2.  v2:= v2 - v3 @kind int;
  #L3720c4.  return v2;
}
procedure `void` `s`(`r8.e` v2 @kind this, `byte`[] v3 @kind object) @signature `Lr8/e;.s:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L372310.  v0:= length @variable v3;
  #L372312.  v1:= 0I;
  #L372314.  call `v`(v2, v3, v1, v0) @signature `Lr8/e;.v:([BII)V` @kind virtual;
  #L37231a.  return @kind void;
}
procedure `java.lang.String` `toString`(`r8.e` v5 @kind this) @signature `Lr8/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L372168.  v0:= new `java.lang.StringBuilder`;
  #L37216c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L372172.  v1:= constclass @type ^`r8.e` @kind object;
  #L372176.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L37217c.  v1:= temp @kind object;
  #L37217e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372184.  v1:= 91I;
  #L372188.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L37218e.  v1:= "fileLength=" @kind object;
  #L372192.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372198.  v1:= v5.`r8.e.h` @type ^`int`;
  #L37219c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721a2.  v1:= ", size=" @kind object;
  #L3721a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721ac.  v1:= v5.`r8.e.i` @type ^`int`;
  #L3721b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721b6.  v1:= ", first=" @kind object;
  #L3721ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721c0.  v1:= v5.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L3721c4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721ca.  v1:= ", last=" @kind object;
  #L3721ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721d4.  v1:= v5.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L3721d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721de.  v1:= ", element lengths=[" @kind object;
  #L3721e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3721e8.  v1:= new `r8.e$a`;
  #L3721ec.  call `<init>`(v1, v5, v0) @signature `Lr8/e$a;.<init>:(Lr8/e;Ljava/lang/StringBuilder;)V` @kind direct;
  #L3721f2.  call `C`(v5, v1) @signature `Lr8/e;.C:(Lr8/e$d;)V` @kind virtual;
  #L3721f8.  goto L37220e;
  #L3721fa.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3721fc.  v2:= `@@r8.e.m` @type ^`java.util.logging.Logger` @kind object;
  #L372200.  v3:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L372204.  v4:= "read error" @kind object;
  #L372208.  call `log`(v2, v3, v4, v1) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L37220e.  v1:= "]]" @kind object;
  #L372212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L372218.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37221e.  v0:= temp @kind object;
  #L372220.  return v0 @kind object;
  catch `java.io.IOException` @[L3721e8..L3721f8] goto L3721fa;
}
procedure `void` `v`(`r8.e` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lr8/e;.v:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L37232c.  @monitorenter v6
  #L37232e.  v0:= "buffer" @kind object;
  #L372332.  call temp:= `V`(v7, v0) @signature `Lr8/e;.V:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L372338.  v0:= v8 ^| v9 @kind int;
  #L37233c.  if v0 < 0 then goto L3723ee;
  #L372340.  v0:= length @variable v7;
  #L372342.  v0:= v0 - v8 @kind int;
  #L372344.  if v9 > v0 then goto L3723ee;
  #L372348.  call `y`(v6, v9) @signature `Lr8/e;.y:(I)V` @kind direct;
  #L37234e.  call temp:= `Q`(v6) @signature `Lr8/e;.Q:()Z` @kind virtual;
  #L372354.  v0:= temp;
  #L372356.  v1:= 4I;
  #L372358.  if v0 == 0 then goto L372362;
  #L37235c.  v2:= 16I;
  #L372360.  goto L37237a;
  #L372362.  v2:= v6.`r8.e.k` @type ^`r8.e$b` @kind object;
  #L372366.  v3:= v2.`r8.e$b.a` @type ^`int`;
  #L37236a.  v3:= v3 + v1 @kind int;
  #L37236c.  v2:= v2.`r8.e$b.b` @type ^`int`;
  #L372370.  v3:= v3 + v2 @kind int;
  #L372372.  call temp:= `u0`(v6, v3) @signature `Lr8/e;.u0:(I)I` @kind direct;
  #L372378.  v2:= temp;
  #L37237a.  v3:= new `r8.e$b`;
  #L37237e.  call `<init>`(v3, v2, v9) @signature `Lr8/e$b;.<init>:(II)V` @kind direct;
  #L372384.  v2:= v6.`r8.e.l` @type ^`byte`[] @kind object;
  #L372388.  v4:= 0I;
  #L37238a.  call `B0`(v2, v4, v9) @signature `Lr8/e;.B0:([BII)V` @kind static;
  #L372390.  v2:= v3.`r8.e$b.a` @type ^`int`;
  #L372394.  v5:= v6.`r8.e.l` @type ^`byte`[] @kind object;
  #L372398.  call `l0`(v6, v2, v5, v4, v1) @signature `Lr8/e;.l0:(I[BII)V` @kind direct;
  #L37239e.  v2:= v3.`r8.e$b.a` @type ^`int`;
  #L3723a2.  v2:= v2 + v1 @kind int;
  #L3723a4.  call `l0`(v6, v2, v7, v8, v9) @signature `Lr8/e;.l0:(I[BII)V` @kind direct;
  #L3723aa.  if v0 == 0 then goto L3723b4;
  #L3723ae.  v7:= v3.`r8.e$b.a` @type ^`int`;
  #L3723b2.  goto L3723bc;
  #L3723b4.  v7:= v6.`r8.e.j` @type ^`r8.e$b` @kind object;
  #L3723b8.  v7:= v7.`r8.e$b.a` @type ^`int`;
  #L3723bc.  v8:= v6.`r8.e.h` @type ^`int`;
  #L3723c0.  v9:= v6.`r8.e.i` @type ^`int`;
  #L3723c4.  v9:= v9 + 1;
  #L3723c8.  v1:= v3.`r8.e$b.a` @type ^`int`;
  #L3723cc.  call `x0`(v6, v8, v9, v7, v1) @signature `Lr8/e;.x0:(IIII)V` @kind direct;
  #L3723d2.  v6.`r8.e.k` @type ^`r8.e$b` := v3 @kind object;
  #L3723d6.  v7:= v6.`r8.e.i` @type ^`int`;
  #L3723da.  v7:= v7 + 1;
  #L3723de.  v6.`r8.e.i` @type ^`int` := v7;
  #L3723e2.  if v0 == 0 then goto L3723ea;
  #L3723e6.  v6.`r8.e.j` @type ^`r8.e$b` := v3 @kind object;
  #L3723ea.  @monitorexit v6
  #L3723ec.  return @kind void;
  #L3723ee.  v7:= new `java.lang.IndexOutOfBoundsException`;
  #L3723f2.  call `<init>`(v7) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L3723f8.  throw v7;
  #L3723fa.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3723fc.  @monitorexit v6
  #L3723fe.  throw v7;
  catch `java.lang.Throwable` @[L37232e..L3723ea] goto L3723fa;
  catch `java.lang.Throwable` @[L3723ee..L3723fa] goto L3723fa;
}
procedure `void` `w`(`r8.e` v2 @kind this) @signature `Lr8/e;.w:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L372424.  @monitorenter v2
  #L372426.  v0:= 0I;
  #L372428.  v1:= 4096I;
  #L37242c.  call `x0`(v2, v1, v0, v0, v0) @signature `Lr8/e;.x0:(IIII)V` @kind direct;
  #L372432.  v2.`r8.e.i` @type ^`int` := v0;
  #L372436.  v0:= `@@r8.e$b.c` @type ^`r8.e$b` @kind object;
  #L37243a.  v2.`r8.e.j` @type ^`r8.e$b` := v0 @kind object;
  #L37243e.  v2.`r8.e.k` @type ^`r8.e$b` := v0 @kind object;
  #L372442.  v0:= v2.`r8.e.h` @type ^`int`;
  #L372446.  if v0 <= v1 then goto L372450;
  #L37244a.  call `n0`(v2, v1) @signature `Lr8/e;.n0:(I)V` @kind direct;
  #L372450.  v2.`r8.e.h` @type ^`int` := v1;
  #L372454.  @monitorexit v2
  #L372456.  return @kind void;
  #L372458.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37245a.  @monitorexit v2
  #L37245c.  throw v0;
  catch `java.lang.Throwable` @[L37242c..L372454] goto L372458;
}
