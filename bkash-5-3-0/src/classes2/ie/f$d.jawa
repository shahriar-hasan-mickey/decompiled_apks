record `ie.f$d` @kind class @AccessFlag  extends `ee.b` @kind class {
  `int` `ie.f$d.h` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `ie.f$d.i` @AccessFlag FINAL_SYNTHETIC;
  `ie.f` `ie.f$d.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.f$d` v0 @kind this, `ie.f` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object) @signature `Lie/f$d;.<init>:(Lie/f;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b8cc4.  v0.`ie.f$d.j` @type ^`ie.f` := v1 @kind object;
  #L2b8cc8.  v0.`ie.f$d.h` @type ^`int` := v4;
  #L2b8ccc.  v0.`ie.f$d.i` @type ^`java.util.List` := v5 @kind object;
  #L2b8cd0.  call `<init>`(v0, v2, v3) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b8cd6.  return @kind void;
}
procedure `void` `k`(`ie.f$d` v3 @kind this) @signature `Lie/f$d;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b8ce8.  v0:= v3.`ie.f$d.j` @type ^`ie.f` @kind object;
  #L2b8cec.  v0:= v0.`ie.f.p` @type ^`ie.l` @kind object;
  #L2b8cf0.  v1:= v3.`ie.f$d.h` @type ^`int`;
  #L2b8cf4.  v2:= v3.`ie.f$d.i` @type ^`java.util.List` @kind object;
  #L2b8cf8.  call temp:= `b`(v0, v1, v2) @signature `Lie/l;.b:(ILjava/util/List;)Z` @kind interface;
  #L2b8cfe.  v0:= temp;
  #L2b8d00.  if v0 == 0 then goto L2b8d44;
  #L2b8d04.  v0:= v3.`ie.f$d.j` @type ^`ie.f` @kind object;
  #L2b8d08.  v0:= v0.`ie.f.B` @type ^`ie.j` @kind object;
  #L2b8d0c.  v1:= v3.`ie.f$d.h` @type ^`int`;
  #L2b8d10.  v2:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2b8d14.  call `Q`(v0, v1, v2) @signature `Lie/j;.Q:(ILie/b;)V` @kind virtual;
  #L2b8d1a.  v0:= v3.`ie.f$d.j` @type ^`ie.f` @kind object;
  #L2b8d1e.  @monitorenter v0
  #L2b8d20.  v1:= v3.`ie.f$d.j` @type ^`ie.f` @kind object;
  #L2b8d24.  v1:= v1.`ie.f.D` @type ^`java.util.Set` @kind object;
  #L2b8d28.  v2:= v3.`ie.f$d.h` @type ^`int`;
  #L2b8d2c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b8d32.  v2:= temp @kind object;
  #L2b8d34.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2b8d3a.  @monitorexit v0
  #L2b8d3c.  goto L2b8d44;
  #L2b8d3e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b8d40.  @monitorexit v0
  #L2b8d42.  throw v1;
  #L2b8d44.  return @kind void;
  catch `java.io.IOException` @[L2b8d04..L2b8d20] goto L2b8d44;
  catch `java.lang.Throwable` @[L2b8d20..L2b8d42] goto L2b8d3e;
  catch `java.io.IOException` @[L2b8d42..L2b8d44] goto L2b8d44;
}
