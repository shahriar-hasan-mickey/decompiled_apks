record `ie.n` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.IOException` @kind class {
  `ie.b` `ie.n.errorCode` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`ie.n` v2 @kind this, `ie.b` v3 @kind object) @signature `Lie/n;.<init>:(Lie/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bdd00.  v0:= new `java.lang.StringBuilder`;
  #L2bdd04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bdd0a.  v1:= "stream was reset: " @kind object;
  #L2bdd0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bdd14.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bdd1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bdd20.  v0:= temp @kind object;
  #L2bdd22.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bdd28.  v2.`ie.n.errorCode` @type ^`ie.b` := v3 @kind object;
  #L2bdd2c.  return @kind void;
}
