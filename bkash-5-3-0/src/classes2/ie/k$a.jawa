record `ie.k$a` @kind class @AccessFlag FINAL {
  `ie.k$a`[] `ie.k$a.a` @AccessFlag FINAL;
  `int` `ie.k$a.b` @AccessFlag FINAL;
  `int` `ie.k$a.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`ie.k$a` v1 @kind this) @signature `Lie/k$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bd23c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd242.  v0:= 256I;
  #L2bd246.  v0:= new `ie.k$a`[v0];
  #L2bd24a.  v1.`ie.k$a.a` @type ^`ie.k$a`[] := v0 @kind object;
  #L2bd24e.  v0:= 0I;
  #L2bd250.  v1.`ie.k$a.b` @type ^`int` := v0;
  #L2bd254.  v1.`ie.k$a.c` @type ^`int` := v0;
  #L2bd258.  return @kind void;
}
procedure `void` `<init>`(`ie.k$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lie/k$a;.<init>:(II)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bd26c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bd272.  v0:= 0I;
  #L2bd274.  v1.`ie.k$a.a` @type ^`ie.k$a`[] := v0 @kind object;
  #L2bd278.  v1.`ie.k$a.b` @type ^`int` := v2;
  #L2bd27c.  v2:= v3 ^& 7;
  #L2bd280.  if v2 != 0 then goto L2bd288;
  #L2bd284.  v2:= 8I;
  #L2bd288.  v1.`ie.k$a.c` @type ^`int` := v2;
  #L2bd28c.  return @kind void;
}
