record `ie.c` @kind class @AccessFlag PUBLIC_FINAL {
  `okio.f` `ie.c.a` @AccessFlag PUBLIC_FINAL;
  `okio.f` `ie.c.b` @AccessFlag PUBLIC_FINAL;
  `int` `ie.c.c` @AccessFlag FINAL;
}
global `okio.f` `@@ie.c.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.f` `@@ie.c.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.f` `@@ie.c.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.f` `@@ie.c.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.f` `@@ie.c.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.f` `@@ie.c.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lie/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b7878.  v0:= ":" @kind object;
  #L2b787c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b7882.  v0:= temp @kind object;
  #L2b7884.  `@@ie.c.d` @type ^`okio.f` := v0 @kind object;
  #L2b7888.  v0:= ":status" @kind object;
  #L2b788c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b7892.  v0:= temp @kind object;
  #L2b7894.  `@@ie.c.e` @type ^`okio.f` := v0 @kind object;
  #L2b7898.  v0:= ":method" @kind object;
  #L2b789c.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78a2.  v0:= temp @kind object;
  #L2b78a4.  `@@ie.c.f` @type ^`okio.f` := v0 @kind object;
  #L2b78a8.  v0:= ":path" @kind object;
  #L2b78ac.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78b2.  v0:= temp @kind object;
  #L2b78b4.  `@@ie.c.g` @type ^`okio.f` := v0 @kind object;
  #L2b78b8.  v0:= ":scheme" @kind object;
  #L2b78bc.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78c2.  v0:= temp @kind object;
  #L2b78c4.  `@@ie.c.h` @type ^`okio.f` := v0 @kind object;
  #L2b78c8.  v0:= ":authority" @kind object;
  #L2b78cc.  call temp:= `encodeUtf8`(v0) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78d2.  v0:= temp @kind object;
  #L2b78d4.  `@@ie.c.i` @type ^`okio.f` := v0 @kind object;
  #L2b78d8.  return @kind void;
}
procedure `void` `<init>`(`ie.c` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lie/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b78ec.  call temp:= `encodeUtf8`(v1) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78f2.  v1:= temp @kind object;
  #L2b78f4.  call temp:= `encodeUtf8`(v2) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b78fa.  v2:= temp @kind object;
  #L2b78fc.  call `<init>`(v0, v1, v2) @signature `Lie/c;.<init>:(Lokio/f;Lokio/f;)V` @kind direct;
  #L2b7902.  return @kind void;
}
procedure `void` `<init>`(`ie.c` v0 @kind this, `okio.f` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lie/c;.<init>:(Lokio/f;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b7914.  call temp:= `encodeUtf8`(v2) @signature `Lokio/f;.encodeUtf8:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2b791a.  v2:= temp @kind object;
  #L2b791c.  call `<init>`(v0, v1, v2) @signature `Lie/c;.<init>:(Lokio/f;Lokio/f;)V` @kind direct;
  #L2b7922.  return @kind void;
}
procedure `void` `<init>`(`ie.c` v0 @kind this, `okio.f` v1 @kind object, `okio.f` v2 @kind object) @signature `Lie/c;.<init>:(Lokio/f;Lokio/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b7934.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b793a.  v0.`ie.c.a` @type ^`okio.f` := v1 @kind object;
  #L2b793e.  v0.`ie.c.b` @type ^`okio.f` := v2 @kind object;
  #L2b7942.  call temp:= `size`(v1) @signature `Lokio/f;.size:()I` @kind virtual;
  #L2b7948.  v1:= temp;
  #L2b794a.  v1:= v1 + 32;
  #L2b794e.  call temp:= `size`(v2) @signature `Lokio/f;.size:()I` @kind virtual;
  #L2b7954.  v2:= temp;
  #L2b7956.  v1:= v1 + v2 @kind int;
  #L2b7958.  v0.`ie.c.c` @type ^`int` := v1;
  #L2b795c.  return @kind void;
}
procedure `boolean` `equals`(`ie.c` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lie/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b77ac.  v0:= instanceof @variable v4 @type ^`ie.c` @kind boolean;
  #L2b77b0.  v1:= 0I;
  #L2b77b2.  if v0 == 0 then goto L2b77e4;
  #L2b77b6.  v4:= (`ie.c`) v4 @kind object;
  #L2b77ba.  v0:= v3.`ie.c.a` @type ^`okio.f` @kind object;
  #L2b77be.  v2:= v4.`ie.c.a` @type ^`okio.f` @kind object;
  #L2b77c2.  call temp:= `equals`(v0, v2) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b77c8.  v0:= temp;
  #L2b77ca.  if v0 == 0 then goto L2b77e4;
  #L2b77ce.  v0:= v3.`ie.c.b` @type ^`okio.f` @kind object;
  #L2b77d2.  v4:= v4.`ie.c.b` @type ^`okio.f` @kind object;
  #L2b77d6.  call temp:= `equals`(v0, v4) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b77dc.  v4:= temp;
  #L2b77de.  if v4 == 0 then goto L2b77e4;
  #L2b77e2.  v1:= 1I;
  #L2b77e4.  return v1;
}
procedure `int` `hashCode`(`ie.c` v2 @kind this) @signature `Lie/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b77f8.  v0:= v2.`ie.c.a` @type ^`okio.f` @kind object;
  #L2b77fc.  call temp:= `hashCode`(v0) @signature `Lokio/f;.hashCode:()I` @kind virtual;
  #L2b7802.  v0:= temp;
  #L2b7804.  v1:= 527I;
  #L2b7808.  v1:= v1 + v0 @kind int;
  #L2b780a.  v1:= v1 * 31;
  #L2b780e.  v0:= v2.`ie.c.b` @type ^`okio.f` @kind object;
  #L2b7812.  call temp:= `hashCode`(v0) @signature `Lokio/f;.hashCode:()I` @kind virtual;
  #L2b7818.  v0:= temp;
  #L2b781a.  v1:= v1 + v0 @kind int;
  #L2b781c.  return v1;
}
procedure `java.lang.String` `toString`(`ie.c` v3 @kind this) @signature `Lie/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b7830.  v0:= 2I;
  #L2b7832.  v0:= new `java.lang.Object`[v0];
  #L2b7836.  v1:= v3.`ie.c.a` @type ^`okio.f` @kind object;
  #L2b783a.  call temp:= `utf8`(v1) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2b7840.  v1:= temp @kind object;
  #L2b7842.  v2:= 0I;
  #L2b7844.  v0[v2]:= v1 @kind object;
  #L2b7848.  v1:= v3.`ie.c.b` @type ^`okio.f` @kind object;
  #L2b784c.  call temp:= `utf8`(v1) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2b7852.  v1:= temp @kind object;
  #L2b7854.  v2:= 1I;
  #L2b7856.  v0[v2]:= v1 @kind object;
  #L2b785a.  v1:= "%s: %s" @kind object;
  #L2b785e.  call temp:= `q`(v1, v0) @signature `Lee/e;.q:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2b7864.  v0:= temp @kind object;
  #L2b7866.  return v0 @kind object;
}
