record `ie.f$c` @kind class @AccessFlag  extends `ee.b` @kind class {
  `ie.f` `ie.f$c.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.f$c` v0 @kind this, `ie.f` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lie/f$c;.<init>:(Lie/f;Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b8c88.  v0.`ie.f$c.h` @type ^`ie.f` := v1 @kind object;
  #L2b8c8c.  call `<init>`(v0, v2, v3) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b8c92.  return @kind void;
}
procedure `void` `k`(`ie.f$c` v3 @kind this) @signature `Lie/f$c;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b8ca4.  v0:= v3.`ie.f$c.h` @type ^`ie.f` @kind object;
  #L2b8ca8.  v1:= 0I;
  #L2b8caa.  v2:= 2I;
  #L2b8cac.  call `V0`(v0, v1, v2, v1) @signature `Lie/f;.V0:(ZII)V` @kind virtual;
  #L2b8cb2.  return @kind void;
}
