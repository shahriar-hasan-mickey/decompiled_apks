record `ie.f$l$b` @kind class @AccessFlag  extends `ee.b` @kind class {
  `boolean` `ie.f$l$b.h` @AccessFlag FINAL_SYNTHETIC;
  `ie.m` `ie.f$l$b.i` @AccessFlag FINAL_SYNTHETIC;
  `ie.f$l` `ie.f$l$b.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.f$l$b` v0 @kind this, `ie.f$l` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `boolean` v4 , `ie.m` v5 @kind object) @signature `Lie/f$l$b;.<init>:(Lie/f$l;Ljava/lang/String;[Ljava/lang/Object;ZLie/m;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b9298.  v0.`ie.f$l$b.j` @type ^`ie.f$l` := v1 @kind object;
  #L2b929c.  v0.`ie.f$l$b.h` @type ^`boolean` := v4 @kind boolean;
  #L2b92a0.  v0.`ie.f$l$b.i` @type ^`ie.m` := v5 @kind object;
  #L2b92a4.  call `<init>`(v0, v2, v3) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b92aa.  return @kind void;
}
procedure `void` `k`(`ie.f$l$b` v3 @kind this) @signature `Lie/f$l$b;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b92bc.  v0:= v3.`ie.f$l$b.j` @type ^`ie.f$l` @kind object;
  #L2b92c0.  v1:= v3.`ie.f$l$b.h` @type ^`boolean` @kind boolean;
  #L2b92c4.  v2:= v3.`ie.f$l$b.i` @type ^`ie.m` @kind object;
  #L2b92c8.  call `l`(v0, v1, v2) @signature `Lie/f$l;.l:(ZLie/m;)V` @kind virtual;
  #L2b92ce.  return @kind void;
}
