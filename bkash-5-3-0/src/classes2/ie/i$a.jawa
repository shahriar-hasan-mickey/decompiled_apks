record `ie.i$a` @kind class @AccessFlag FINAL extends `okio.u` @kind interface {
  `okio.c` `ie.i$a.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.w` `ie.i$a.h` @AccessFlag PRIVATE;
  `boolean` `ie.i$a.i` @AccessFlag ;
  `boolean` `ie.i$a.j` @AccessFlag ;
  `ie.i` `ie.i$a.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lie/i$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2bb74c.  return @kind void;
}
procedure `void` `<init>`(`ie.i$a` v0 @kind this, `ie.i` v1 @kind object) @signature `Lie/i$a;.<init>:(Lie/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bb760.  v0.`ie.i$a.k` @type ^`ie.i` := v1 @kind object;
  #L2bb764.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bb76a.  v1:= new `okio.c`;
  #L2bb76e.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L2bb774.  v0.`ie.i$a.g` @type ^`okio.c` := v1 @kind object;
  #L2bb778.  return @kind void;
}
procedure `void` `e`(`ie.i$a` v11 @kind this, `boolean` v12 ) @signature `Lie/i$a;.e:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2bb8c4.  v0:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb8c8.  @monitorenter v0
  #L2bb8ca.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb8ce.  v1:= v1.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb8d2.  call `k`(v1) @signature `Lokio/a;.k:()V` @kind virtual;
  #L2bb8d8.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb8dc.  v2:= v1.`ie.i.b` @type ^`long` @kind wide;
  #L2bb8e0.  v4:= 0L;
  #L2bb8e4.  v6:= lcmp(v2, v4);
  #L2bb8e8.  if v6 > 0 then goto L2bb90c;
  #L2bb8ec.  v2:= v11.`ie.i$a.j` @type ^`boolean` @kind boolean;
  #L2bb8f0.  if v2 != 0 then goto L2bb90c;
  #L2bb8f4.  v2:= v11.`ie.i$a.i` @type ^`boolean` @kind boolean;
  #L2bb8f8.  if v2 != 0 then goto L2bb90c;
  #L2bb8fc.  v2:= v1.`ie.i.k` @type ^`ie.b` @kind object;
  #L2bb900.  if v2 != 0 then goto L2bb90c;
  #L2bb904.  call `q`(v1) @signature `Lie/i;.q:()V` @kind virtual;
  #L2bb90a.  goto L2bb8d8;
  #L2bb90c.  v1:= v1.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb910.  call `u`(v1) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bb916.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb91a.  call `c`(v1) @signature `Lie/i;.c:()V` @kind virtual;
  #L2bb920.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb924.  v1:= v1.`ie.i.b` @type ^`long` @kind wide;
  #L2bb928.  v3:= v11.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb92c.  call temp:= `u0`(v3) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bb932.  v3:= temp @kind wide;
  #L2bb934.  call temp:= `min`(v1, v3) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2bb93a.  v9:= temp @kind wide;
  #L2bb93c.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb940.  v2:= v1.`ie.i.b` @type ^`long` @kind wide;
  #L2bb944.  v2:= v2 - v9 @kind long;
  #L2bb946.  v1.`ie.i.b` @type ^`long` := v2 @kind wide;
  #L2bb94a.  @monitorexit v0
  #L2bb94c.  v0:= v1.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb950.  call `k`(v0) @signature `Lokio/a;.k:()V` @kind virtual;
  #L2bb956.  if v12 == 0 then goto L2bb978;
  #L2bb95a.  v12:= v11.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb95e.  call temp:= `u0`(v12) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bb964.  v0:= temp @kind wide;
  #L2bb966.  v12:= lcmp(v9, v0);
  #L2bb96a.  if v12 != 0 then goto L2bb978;
  #L2bb96e.  v12:= 1I;
  #L2bb970.  v7:= 1I;
  #L2bb972.  goto L2bb97c;
  #L2bb974.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bb976.  goto L2bb9a2;
  #L2bb978.  v12:= 0I;
  #L2bb97a.  v7:= 0I;
  #L2bb97c.  v12:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb980.  v5:= v12.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bb984.  v6:= v12.`ie.i.c` @type ^`int`;
  #L2bb988.  v8:= v11.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb98c.  call `T0`(v5, v6, v7, v8, v9) @signature `Lie/f;.T0:(IZLokio/c;J)V` @kind virtual;
  #L2bb992.  v12:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb996.  v12:= v12.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb99a.  call `u`(v12) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bb9a0.  return @kind void;
  #L2bb9a2.  v0:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb9a6.  v0:= v0.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb9aa.  call `u`(v0) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bb9b0.  throw v12;
  #L2bb9b2.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bb9b4.  v1:= v11.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb9b8.  v1:= v1.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb9bc.  call `u`(v1) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bb9c2.  throw v12;
  #L2bb9c4.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bb9c6.  @monitorexit v0
  #L2bb9c8.  throw v12;
  catch `java.lang.Throwable` @[L2bb8ca..L2bb8d8] goto L2bb9c4;
  catch `java.lang.Throwable` @[L2bb8d8..L2bb90a] goto L2bb9b2;
  catch `java.lang.Throwable` @[L2bb90c..L2bb94c] goto L2bb9c4;
  catch `java.lang.Throwable` @[L2bb95a..L2bb992] goto L2bb974;
  catch `java.lang.Throwable` @[L2bb9b4..L2bb9c8] goto L2bb9c4;
}
procedure `void` `close`(`ie.i$a` v8 @kind this) @signature `Lie/i$a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bb78c.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb790.  @monitorenter v0
  #L2bb792.  v1:= v8.`ie.i$a.i` @type ^`boolean` @kind boolean;
  #L2bb796.  if v1 == 0 then goto L2bb79e;
  #L2bb79a.  @monitorexit v0
  #L2bb79c.  return @kind void;
  #L2bb79e.  @monitorexit v0
  #L2bb7a0.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb7a4.  v0:= v0.`ie.i.h` @type ^`ie.i$a` @kind object;
  #L2bb7a8.  v0:= v0.`ie.i$a.j` @type ^`boolean` @kind boolean;
  #L2bb7ac.  v1:= 1I;
  #L2bb7ae.  if v0 != 0 then goto L2bb85a;
  #L2bb7b2.  v0:= v8.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb7b6.  call temp:= `u0`(v0) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bb7bc.  v2:= temp @kind wide;
  #L2bb7be.  v0:= 0I;
  #L2bb7c0.  v4:= 0L;
  #L2bb7c4.  v6:= lcmp(v2, v4);
  #L2bb7c8.  if v6 <= 0 then goto L2bb7d0;
  #L2bb7cc.  v2:= 1I;
  #L2bb7ce.  goto L2bb7d2;
  #L2bb7d0.  v2:= 0I;
  #L2bb7d2.  v3:= v8.`ie.i$a.h` @type ^`okhttp3.w` @kind object;
  #L2bb7d6.  if v3 == 0 then goto L2bb7de;
  #L2bb7da.  v3:= 1I;
  #L2bb7dc.  goto L2bb7e0;
  #L2bb7de.  v3:= 0I;
  #L2bb7e0.  if v3 == 0 then goto L2bb820;
  #L2bb7e4.  v2:= v8.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb7e8.  call temp:= `u0`(v2) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bb7ee.  v2:= temp @kind wide;
  #L2bb7f0.  v6:= lcmp(v2, v4);
  #L2bb7f4.  if v6 <= 0 then goto L2bb800;
  #L2bb7f8.  call `e`(v8, v0) @signature `Lie/i$a;.e:(Z)V` @kind direct;
  #L2bb7fe.  goto L2bb7e4;
  #L2bb800.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb804.  v2:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bb808.  v0:= v0.`ie.i.c` @type ^`int`;
  #L2bb80c.  v3:= v8.`ie.i$a.h` @type ^`okhttp3.w` @kind object;
  #L2bb810.  call temp:= `J`(v3) @signature `Lee/e;.J:(Lokhttp3/w;)Ljava/util/List;` @kind static;
  #L2bb816.  v3:= temp @kind object;
  #L2bb818.  call `U0`(v2, v0, v1, v3) @signature `Lie/f;.U0:(IZLjava/util/List;)V` @kind virtual;
  #L2bb81e.  goto L2bb85a;
  #L2bb820.  if v2 == 0 then goto L2bb840;
  #L2bb824.  v0:= v8.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bb828.  call temp:= `u0`(v0) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bb82e.  v2:= temp @kind wide;
  #L2bb830.  v0:= lcmp(v2, v4);
  #L2bb834.  if v0 <= 0 then goto L2bb85a;
  #L2bb838.  call `e`(v8, v1) @signature `Lie/i$a;.e:(Z)V` @kind direct;
  #L2bb83e.  goto L2bb824;
  #L2bb840.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb844.  v2:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bb848.  v3:= v0.`ie.i.c` @type ^`int`;
  #L2bb84c.  v4:= 1I;
  #L2bb84e.  v5:= 0I;
  #L2bb850.  v6:= 0L;
  #L2bb854.  call `T0`(v2, v3, v4, v5, v6) @signature `Lie/f;.T0:(IZLokio/c;J)V` @kind virtual;
  #L2bb85a.  v2:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb85e.  @monitorenter v2
  #L2bb860.  v8.`ie.i$a.i` @type ^`boolean` := v1 @kind boolean;
  #L2bb864.  @monitorexit v2
  #L2bb866.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb86a.  v0:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bb86e.  call `flush`(v0) @signature `Lie/f;.flush:()V` @kind virtual;
  #L2bb874.  v0:= v8.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb878.  call `b`(v0) @signature `Lie/i;.b:()V` @kind virtual;
  #L2bb87e.  return @kind void;
  #L2bb880.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bb882.  @monitorexit v2
  #L2bb884.  throw v0;
  #L2bb886.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bb888.  @monitorexit v0
  #L2bb88a.  throw v1;
  catch `java.lang.Throwable` @[L2bb792..L2bb7a0] goto L2bb886;
  catch `java.lang.Throwable` @[L2bb860..L2bb866] goto L2bb880;
  catch `java.lang.Throwable` @[L2bb882..L2bb884] goto L2bb880;
  catch `java.lang.Throwable` @[L2bb888..L2bb88a] goto L2bb886;
}
procedure `void` `e0`(`ie.i$a` v2 @kind this, `okio.c` v3 @kind object, `long` v4 ) @signature `Lie/i$a;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bba7c.  v0:= v2.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bba80.  call `e0`(v0, v3, v4) @signature `Lokio/c;.e0:(Lokio/c;J)V` @kind virtual;
  #L2bba86.  v3:= v2.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bba8a.  call temp:= `u0`(v3) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bba90.  v3:= temp @kind wide;
  #L2bba92.  v0:= 16384L;
  #L2bba96.  v5:= lcmp(v3, v0);
  #L2bba9a.  if v5 < 0 then goto L2bbaa8;
  #L2bba9e.  v3:= 0I;
  #L2bbaa0.  call `e`(v2, v3) @signature `Lie/i$a;.e:(Z)V` @kind direct;
  #L2bbaa6.  goto L2bba86;
  #L2bbaa8.  return @kind void;
}
procedure `void` `flush`(`ie.i$a` v5 @kind this) @signature `Lie/i$a;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bba0c.  v0:= v5.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bba10.  @monitorenter v0
  #L2bba12.  v1:= v5.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bba16.  call `c`(v1) @signature `Lie/i;.c:()V` @kind virtual;
  #L2bba1c.  @monitorexit v0
  #L2bba1e.  v0:= v5.`ie.i$a.g` @type ^`okio.c` @kind object;
  #L2bba22.  call temp:= `u0`(v0) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bba28.  v0:= temp @kind wide;
  #L2bba2a.  v2:= 0L;
  #L2bba2e.  v4:= lcmp(v0, v2);
  #L2bba32.  if v4 <= 0 then goto L2bba4e;
  #L2bba36.  v0:= 0I;
  #L2bba38.  call `e`(v5, v0) @signature `Lie/i$a;.e:(Z)V` @kind direct;
  #L2bba3e.  v0:= v5.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bba42.  v0:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bba46.  call `flush`(v0) @signature `Lie/f;.flush:()V` @kind virtual;
  #L2bba4c.  goto L2bba1e;
  #L2bba4e.  return @kind void;
  #L2bba50.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bba52.  @monitorexit v0
  #L2bba54.  throw v1;
  catch `java.lang.Throwable` @[L2bba12..L2bba1e] goto L2bba50;
  catch `java.lang.Throwable` @[L2bba52..L2bba54] goto L2bba50;
}
procedure `okio.w` `timeout`(`ie.i$a` v1 @kind this) @signature `Lie/i$a;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bb730.  v0:= v1.`ie.i$a.k` @type ^`ie.i` @kind object;
  #L2bb734.  v0:= v0.`ie.i.j` @type ^`ie.i$c` @kind object;
  #L2bb738.  return v0 @kind object;
}
