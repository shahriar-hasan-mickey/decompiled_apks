record `ie.i$c` @kind class @AccessFlag  extends `okio.a` @kind class {
  `ie.i` `ie.i$c.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.i$c` v0 @kind this, `ie.i` v1 @kind object) @signature `Lie/i$c;.<init>:(Lie/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bbf00.  v0.`ie.i$c.k` @type ^`ie.i` := v1 @kind object;
  #L2bbf04.  call `<init>`(v0) @signature `Lokio/a;.<init>:()V` @kind direct;
  #L2bbf0a.  return @kind void;
}
procedure `java.io.IOException` `o`(`ie.i$c` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lie/i$c;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2bbed4.  v0:= new `java.net.SocketTimeoutException`;
  #L2bbed8.  v1:= "timeout" @kind object;
  #L2bbedc.  call `<init>`(v0, v1) @signature `Ljava/net/SocketTimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bbee2.  if v3 == 0 then goto L2bbeec;
  #L2bbee6.  call temp:= `initCause`(v0, v3) @signature `Ljava/net/SocketTimeoutException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2bbeec.  return v0 @kind object;
}
procedure `void` `t`(`ie.i$c` v2 @kind this) @signature `Lie/i$c;.t:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2bbf48.  v0:= v2.`ie.i$c.k` @type ^`ie.i` @kind object;
  #L2bbf4c.  v1:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2bbf50.  call `f`(v0, v1) @signature `Lie/i;.f:(Lie/b;)V` @kind virtual;
  #L2bbf56.  v0:= v2.`ie.i$c.k` @type ^`ie.i` @kind object;
  #L2bbf5a.  v0:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bbf5e.  call `E0`(v0) @signature `Lie/f;.E0:()V` @kind virtual;
  #L2bbf64.  return @kind void;
}
procedure `void` `u`(`ie.i$c` v1 @kind this) @signature `Lie/i$c;.u:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbf1c.  call temp:= `n`(v1) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L2bbf22.  v0:= temp;
  #L2bbf24.  if v0 != 0 then goto L2bbf2a;
  #L2bbf28.  return @kind void;
  #L2bbf2a.  v0:= 0I;
  #L2bbf2c.  call temp:= `o`(v1, v0) @signature `Lie/i$c;.o:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L2bbf32.  v0:= temp @kind object;
  #L2bbf34.  throw v0;
}
