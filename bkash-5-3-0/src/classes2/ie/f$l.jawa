record `ie.f$l` @kind class @AccessFlag  extends `ee.b` @kind class, `ie.h$b` @kind interface {
  `ie.h` `ie.f$l.h` @AccessFlag FINAL;
  `ie.f` `ie.f$l.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.f$l` v2 @kind this, `ie.f` v3 @kind object, `ie.h` v4 @kind object) @signature `Lie/f$l;.<init>:(Lie/f;Lie/h;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b9320.  v2.`ie.f$l.i` @type ^`ie.f` := v3 @kind object;
  #L2b9324.  v0:= 1I;
  #L2b9326.  v0:= new `java.lang.Object`[v0];
  #L2b932a.  v3:= v3.`ie.f.j` @type ^`java.lang.String` @kind object;
  #L2b932e.  v1:= 0I;
  #L2b9330.  v0[v1]:= v3 @kind object;
  #L2b9334.  v3:= "OkHttp %s" @kind object;
  #L2b9338.  call `<init>`(v2, v3, v0) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b933e.  v2.`ie.f$l.h` @type ^`ie.h` := v4 @kind object;
  #L2b9342.  return @kind void;
}
procedure `void` `a`(`ie.f$l` v8 @kind this, `boolean` v9 , `ie.m` v10 @kind object) @signature `Lie/f$l;.a:(ZLie/m;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b990c.  v0:= v8.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9910.  call temp:= `C`(v0) @signature `Lie/f;.C:(Lie/f;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L2b9916.  v0:= temp @kind object;
  #L2b9918.  v7:= new `ie.f$l$b`;
  #L2b991c.  v3:= "OkHttp %s ACK Settings" @kind object;
  #L2b9920.  v1:= 1I;
  #L2b9922.  v4:= new `java.lang.Object`[v1];
  #L2b9926.  v1:= 0I;
  #L2b9928.  v2:= v8.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b992c.  v2:= v2.`ie.f.j` @type ^`java.lang.String` @kind object;
  #L2b9930.  v4[v1]:= v2 @kind object;
  #L2b9934.  v1:= v7 @kind object;
  #L2b9936.  v2:= v8 @kind object;
  #L2b9938.  v5:= v9;
  #L2b993a.  v6:= v10 @kind object;
  #L2b993c.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lie/f$l$b;.<init>:(Lie/f$l;Ljava/lang/String;[Ljava/lang/Object;ZLie/m;)V` @kind direct;
  #L2b9942.  call `execute`(v0, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2b9948.  return @kind void;
  catch `java.util.concurrent.RejectedExecutionException` @[L2b990c..L2b9948] goto L2b9948;
}
procedure `void` `b`(`ie.f$l` v0 @kind this) @signature `Lie/f$l;.b:()V` @AccessFlag PUBLIC {
    temp;

  #L2b9354.  return @kind void;
}
procedure `void` `c`(`ie.f$l` v9 @kind this, `boolean` v10 , `int` v11 , `int` v12 , `java.util.List` v13 @kind object) @signature `Lie/f$l;.c:(ZIILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b96d8.  v12:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b96dc.  call temp:= `x0`(v12, v11) @signature `Lie/f;.x0:(I)Z` @kind virtual;
  #L2b96e2.  v12:= temp;
  #L2b96e4.  if v12 == 0 then goto L2b96f4;
  #L2b96e8.  v12:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b96ec.  call `n0`(v12, v11, v13, v10) @signature `Lie/f;.n0:(ILjava/util/List;Z)V` @kind virtual;
  #L2b96f2.  return @kind void;
  #L2b96f4.  v12:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b96f8.  @monitorenter v12
  #L2b96fa.  v0:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b96fe.  call temp:= `Z`(v0, v11) @signature `Lie/f;.Z:(I)Lie/i;` @kind virtual;
  #L2b9704.  v0:= temp @kind object;
  #L2b9706.  if v0 != 0 then goto L2b97ba;
  #L2b970a.  v0:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b970e.  call temp:= `v`(v0) @signature `Lie/f;.v:(Lie/f;)Z` @kind static;
  #L2b9714.  v0:= temp;
  #L2b9716.  if v0 == 0 then goto L2b971e;
  #L2b971a.  @monitorexit v12
  #L2b971c.  return @kind void;
  #L2b971e.  v0:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9722.  v1:= v0.`ie.f.k` @type ^`int`;
  #L2b9726.  if v11 > v1 then goto L2b972e;
  #L2b972a.  @monitorexit v12
  #L2b972c.  return @kind void;
  #L2b972e.  v1:= v11 %% 2;
  #L2b9732.  v0:= v0.`ie.f.l` @type ^`int`;
  #L2b9736.  v2:= 2I;
  #L2b9738.  v0:= v0 %% v2 @kind int;
  #L2b973a.  if v1 != v0 then goto L2b9742;
  #L2b973e.  @monitorexit v12
  #L2b9740.  return @kind void;
  #L2b9742.  call temp:= `K`(v13) @signature `Lee/e;.K:(Ljava/util/List;)Lokhttp3/w;` @kind static;
  #L2b9748.  v8:= temp @kind object;
  #L2b974a.  v13:= new `ie.i`;
  #L2b974e.  v5:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9752.  v6:= 0I;
  #L2b9754.  v3:= v13 @kind object;
  #L2b9756.  v4:= v11;
  #L2b9758.  v7:= v10;
  #L2b975a.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lie/i;.<init>:(ILie/f;ZZLokhttp3/w;)V` @kind direct;
  #L2b9760.  v10:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9764.  v10.`ie.f.k` @type ^`int` := v11;
  #L2b9768.  v10:= v10.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b976c.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b9772.  v0:= temp @kind object;
  #L2b9774.  call temp:= `put`(v10, v0, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b977a.  call temp:= `y`() @signature `Lie/f;.y:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2b9780.  v10:= temp @kind object;
  #L2b9782.  v0:= new `ie.f$l$a`;
  #L2b9786.  v1:= "OkHttp %s stream %d" @kind object;
  #L2b978a.  v2:= new `java.lang.Object`[v2];
  #L2b978e.  v3:= 0I;
  #L2b9790.  v4:= v9.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9794.  v4:= v4.`ie.f.j` @type ^`java.lang.String` @kind object;
  #L2b9798.  v2[v3]:= v4 @kind object;
  #L2b979c.  v3:= 1I;
  #L2b979e.  call temp:= `valueOf`(v11) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b97a4.  v11:= temp @kind object;
  #L2b97a6.  v2[v3]:= v11 @kind object;
  #L2b97aa.  call `<init>`(v0, v9, v1, v2, v13) @signature `Lie/f$l$a;.<init>:(Lie/f$l;Ljava/lang/String;[Ljava/lang/Object;Lie/i;)V` @kind direct;
  #L2b97b0.  call `execute`(v10, v0) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2b97b6.  @monitorexit v12
  #L2b97b8.  return @kind void;
  #L2b97ba.  @monitorexit v12
  #L2b97bc.  call temp:= `K`(v13) @signature `Lee/e;.K:(Ljava/util/List;)Lokhttp3/w;` @kind static;
  #L2b97c2.  v11:= temp @kind object;
  #L2b97c4.  call `n`(v0, v11, v10) @signature `Lie/i;.n:(Lokhttp3/w;Z)V` @kind virtual;
  #L2b97ca.  return @kind void;
  #L2b97cc.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b97ce.  @monitorexit v12
  #L2b97d0.  throw v10;
  catch `java.lang.Throwable` @[L2b96fa..L2b97bc] goto L2b97cc;
  catch `java.lang.Throwable` @[L2b97ce..L2b97d0] goto L2b97cc;
}
procedure `void` `d`(`ie.f$l` v3 @kind this, `int` v4 , `long` v5 ) @signature `Lie/f$l;.d:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b996c.  if v4 != 0 then goto L2b9994;
  #L2b9970.  v0:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9974.  @monitorenter v0
  #L2b9976.  v4:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b997a.  v1:= v4.`ie.f.x` @type ^`long` @kind wide;
  #L2b997e.  v1:= v1 + v5 @kind long;
  #L2b9980.  v4.`ie.f.x` @type ^`long` := v1 @kind wide;
  #L2b9984.  call `notifyAll`(v4) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2b998a.  @monitorexit v0
  #L2b998c.  goto L2b99b6;
  #L2b998e.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b9990.  @monitorexit v0
  #L2b9992.  throw v4;
  #L2b9994.  v0:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9998.  call temp:= `Z`(v0, v4) @signature `Lie/f;.Z:(I)Lie/i;` @kind virtual;
  #L2b999e.  v4:= temp @kind object;
  #L2b99a0.  if v4 == 0 then goto L2b99b6;
  #L2b99a4.  @monitorenter v4
  #L2b99a6.  call `a`(v4, v5) @signature `Lie/i;.a:(J)V` @kind virtual;
  #L2b99ac.  @monitorexit v4
  #L2b99ae.  goto L2b99b6;
  #L2b99b0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b99b2.  @monitorexit v4
  #L2b99b4.  throw v5;
  #L2b99b6.  return @kind void;
  catch `java.lang.Throwable` @[L2b9976..L2b9992] goto L2b998e;
  catch `java.lang.Throwable` @[L2b99a6..L2b99b4] goto L2b99b0;
}
procedure `void` `e`(`ie.f$l` v1 @kind this, `int` v2 , `ie.b` v3 @kind object) @signature `Lie/f$l;.e:(ILie/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b98c8.  v0:= v1.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b98cc.  call temp:= `x0`(v0, v2) @signature `Lie/f;.x0:(I)Z` @kind virtual;
  #L2b98d2.  v0:= temp;
  #L2b98d4.  if v0 == 0 then goto L2b98e4;
  #L2b98d8.  v0:= v1.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b98dc.  call `u0`(v0, v2, v3) @signature `Lie/f;.u0:(ILie/b;)V` @kind virtual;
  #L2b98e2.  return @kind void;
  #L2b98e4.  v0:= v1.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b98e8.  call temp:= `B0`(v0, v2) @signature `Lie/f;.B0:(I)Lie/i;` @kind virtual;
  #L2b98ee.  v2:= temp @kind object;
  #L2b98f0.  if v2 == 0 then goto L2b98fa;
  #L2b98f4.  call `o`(v2, v3) @signature `Lie/i;.o:(Lie/b;)V` @kind virtual;
  #L2b98fa.  return @kind void;
}
procedure `void` `f`(`ie.f$l` v2 @kind this, `boolean` v3 , `int` v4 , `okio.e` v5 @kind object, `int` v6 ) @signature `Lie/f$l;.f:(ZILokio/e;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b94f4.  v0:= v2.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b94f8.  call temp:= `x0`(v0, v4) @signature `Lie/f;.x0:(I)Z` @kind virtual;
  #L2b94fe.  v0:= temp;
  #L2b9500.  if v0 == 0 then goto L2b9510;
  #L2b9504.  v0:= v2.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9508.  call `k0`(v0, v4, v5, v6, v3) @signature `Lie/f;.k0:(ILokio/e;IZ)V` @kind virtual;
  #L2b950e.  return @kind void;
  #L2b9510.  v0:= v2.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9514.  call temp:= `Z`(v0, v4) @signature `Lie/f;.Z:(I)Lie/i;` @kind virtual;
  #L2b951a.  v0:= temp @kind object;
  #L2b951c.  if v0 != 0 then goto L2b9542;
  #L2b9520.  v3:= v2.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9524.  v0:= `@@ie.b.PROTOCOL_ERROR` @type ^`ie.b` @kind object;
  #L2b9528.  call `X0`(v3, v4, v0) @signature `Lie/f;.X0:(ILie/b;)V` @kind virtual;
  #L2b952e.  v3:= v2.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9532.  v0:= (`long`) v6 @kind i2l;
  #L2b9534.  call `S0`(v3, v0) @signature `Lie/f;.S0:(J)V` @kind virtual;
  #L2b953a.  call `h0`(v5, v0) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L2b9540.  return @kind void;
  #L2b9542.  call `m`(v0, v5, v6) @signature `Lie/i;.m:(Lokio/e;I)V` @kind virtual;
  #L2b9548.  if v3 == 0 then goto L2b9558;
  #L2b954c.  v3:= `@@ee.e.c` @type ^`okhttp3.w` @kind object;
  #L2b9550.  v4:= 1I;
  #L2b9552.  call `n`(v0, v3, v4) @signature `Lie/i;.n:(Lokhttp3/w;Z)V` @kind virtual;
  #L2b9558.  return @kind void;
}
procedure `void` `g`(`ie.f$l` v3 @kind this, `boolean` v4 , `int` v5 , `int` v6 ) @signature `Lie/f$l;.g:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b97f8.  v0:= 1I;
  #L2b97fa.  if v4 == 0 then goto L2b984c;
  #L2b97fe.  v4:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9802.  @monitorenter v4
  #L2b9804.  if v5 != v0 then goto L2b9818;
  #L2b9808.  v5:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b980c.  call temp:= `k`(v5) @signature `Lie/f;.k:(Lie/f;)J` @kind static;
  #L2b9812.  goto L2b9844;
  #L2b9814.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b9816.  goto L2b9848;
  #L2b9818.  v6:= 2I;
  #L2b981a.  if v5 != v6 then goto L2b982a;
  #L2b981e.  v5:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9822.  call temp:= `J`(v5) @signature `Lie/f;.J:(Lie/f;)J` @kind static;
  #L2b9828.  goto L2b9844;
  #L2b982a.  v6:= 3I;
  #L2b982c.  if v5 != v6 then goto L2b9844;
  #L2b9830.  v5:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9834.  call temp:= `Q`(v5) @signature `Lie/f;.Q:(Lie/f;)J` @kind static;
  #L2b983a.  v5:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b983e.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2b9844.  @monitorexit v4
  #L2b9846.  goto L2b986c;
  #L2b9848.  @monitorexit v4
  #L2b984a.  throw v5;
  #L2b984c.  v4:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9850.  call temp:= `C`(v4) @signature `Lie/f;.C:(Lie/f;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L2b9856.  v4:= temp @kind object;
  #L2b9858.  v1:= new `ie.f$k`;
  #L2b985c.  v2:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9860.  call `<init>`(v1, v2, v0, v5, v6) @signature `Lie/f$k;.<init>:(Lie/f;ZII)V` @kind direct;
  #L2b9866.  call `execute`(v4, v1) @signature `Ljava/util/concurrent/ScheduledExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2b986c.  return @kind void;
  catch `java.lang.Throwable` @[L2b9808..L2b984a] goto L2b9814;
  catch `java.util.concurrent.RejectedExecutionException` @[L2b984c..L2b986c] goto L2b986c;
}
procedure `void` `h`(`ie.f$l` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `boolean` v4 ) @signature `Lie/f$l;.h:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L2b9898.  return @kind void;
}
procedure `void` `i`(`ie.f$l` v0 @kind this, `int` v1 , `int` v2 , `java.util.List` v3 @kind object) @signature `Lie/f$l;.i:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2b98ac.  v1:= v0.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b98b0.  call `q0`(v1, v2, v3) @signature `Lie/f;.q0:(ILjava/util/List;)V` @kind virtual;
  #L2b98b6.  return @kind void;
}
procedure `void` `j`(`ie.f$l` v3 @kind this, `int` v4 , `ie.b` v5 @kind object, `okio.f` v6 @kind object) @signature `Lie/f$l;.j:(ILie/b;Lokio/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b961c.  call temp:= `size`(v6) @signature `Lokio/f;.size:()I` @kind virtual;
  #L2b9622.  v5:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9626.  @monitorenter v5
  #L2b9628.  v6:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b962c.  v6:= v6.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b9630.  call temp:= `values`(v6) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2b9636.  v6:= temp @kind object;
  #L2b9638.  v0:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b963c.  v0:= v0.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b9640.  call temp:= `size`(v0) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2b9646.  v0:= temp;
  #L2b9648.  v0:= new `ie.i`[v0];
  #L2b964c.  call temp:= `toArray`(v6, v0) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2b9652.  v6:= temp @kind object;
  #L2b9654.  v6:= (`ie.i`[]) v6 @kind object;
  #L2b9658.  v0:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b965c.  v1:= 1I;
  #L2b965e.  call temp:= `w`(v0, v1) @signature `Lie/f;.w:(Lie/f;Z)Z` @kind static;
  #L2b9664.  @monitorexit v5
  #L2b9666.  v5:= length @variable v6;
  #L2b9668.  v0:= 0I;
  #L2b966a.  if v0 >= v5 then goto L2b96ac;
  #L2b966e.  v1:= v6[v0] @kind object;
  #L2b9672.  call temp:= `g`(v1) @signature `Lie/i;.g:()I` @kind virtual;
  #L2b9678.  v2:= temp;
  #L2b967a.  if v2 <= v4 then goto L2b96a6;
  #L2b967e.  call temp:= `j`(v1) @signature `Lie/i;.j:()Z` @kind virtual;
  #L2b9684.  v2:= temp;
  #L2b9686.  if v2 == 0 then goto L2b96a6;
  #L2b968a.  v2:= `@@ie.b.REFUSED_STREAM` @type ^`ie.b` @kind object;
  #L2b968e.  call `o`(v1, v2) @signature `Lie/i;.o:(Lie/b;)V` @kind virtual;
  #L2b9694.  v2:= v3.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9698.  call temp:= `g`(v1) @signature `Lie/i;.g:()I` @kind virtual;
  #L2b969e.  v1:= temp;
  #L2b96a0.  call temp:= `B0`(v2, v1) @signature `Lie/f;.B0:(I)Lie/i;` @kind virtual;
  #L2b96a6.  v0:= v0 + 1;
  #L2b96aa.  goto L2b966a;
  #L2b96ac.  return @kind void;
  #L2b96ae.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b96b0.  @monitorexit v5
  #L2b96b2.  throw v4;
  catch `java.lang.Throwable` @[L2b9628..L2b9666] goto L2b96ae;
  catch `java.lang.Throwable` @[L2b96b0..L2b96b2] goto L2b96ae;
}
procedure `void` `k`(`ie.f$l` v5 @kind this) @signature `Lie/f$l;.k:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b956c.  v0:= `@@ie.b.INTERNAL_ERROR` @type ^`ie.b` @kind object;
  #L2b9570.  v1:= 0I;
  #L2b9572.  v2:= v5.`ie.f$l.h` @type ^`ie.h` @kind object;
  #L2b9576.  call `k`(v2, v5) @signature `Lie/h;.k:(Lie/h$b;)V` @kind virtual;
  #L2b957c.  v2:= v5.`ie.f$l.h` @type ^`ie.h` @kind object;
  #L2b9580.  v3:= 0I;
  #L2b9582.  call temp:= `i`(v2, v3, v5) @signature `Lie/h;.i:(ZLie/h$b;)Z` @kind virtual;
  #L2b9588.  v2:= temp;
  #L2b958a.  if v2 == 0 then goto L2b9590;
  #L2b958e.  goto L2b957c;
  #L2b9590.  v2:= `@@ie.b.NO_ERROR` @type ^`ie.b` @kind object;
  #L2b9594.  v0:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2b9598.  v3:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b959c.  call `V`(v3, v2, v0, v1) @signature `Lie/f;.V:(Lie/b;Lie/b;Ljava/io/IOException;)V` @kind virtual;
  #L2b95a2.  goto L2b95c0;
  #L2b95a4.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2b95a6.  goto L2b95b2;
  #L2b95a8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b95aa.  v2:= v0 @kind object;
  #L2b95ac.  goto L2b95ce;
  #L2b95ae.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2b95b0.  v2:= v0 @kind object;
  #L2b95b2.  v0:= `@@ie.b.PROTOCOL_ERROR` @type ^`ie.b` @kind object;
  #L2b95b6.  v2:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b95ba.  call `V`(v2, v0, v0, v1) @signature `Lie/f;.V:(Lie/b;Lie/b;Ljava/io/IOException;)V` @kind virtual;
  #L2b95c0.  v0:= v5.`ie.f$l.h` @type ^`ie.h` @kind object;
  #L2b95c4.  call `g`(v0) @signature `Lee/e;.g:(Ljava/io/Closeable;)V` @kind static;
  #L2b95ca.  return @kind void;
  #L2b95cc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b95ce.  v4:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b95d2.  call `V`(v4, v2, v0, v1) @signature `Lie/f;.V:(Lie/b;Lie/b;Ljava/io/IOException;)V` @kind virtual;
  #L2b95d8.  v0:= v5.`ie.f$l.h` @type ^`ie.h` @kind object;
  #L2b95dc.  call `g`(v0) @signature `Lee/e;.g:(Ljava/io/Closeable;)V` @kind static;
  #L2b95e2.  throw v3;
  catch `java.io.IOException` @[L2b9572..L2b9594] goto L2b95ae;
  catch `java.lang.Throwable` @[L2b9572..L2b9594] goto L2b95a8;
  catch `java.io.IOException` @[L2b9594..L2b9598] goto L2b95a4;
  catch `java.lang.Throwable` @[L2b9594..L2b9598] goto L2b95cc;
  catch `java.lang.Throwable` @[L2b95b2..L2b95b6] goto L2b95cc;
}
procedure `void` `l`(`ie.f$l` v5 @kind this, `boolean` v6 , `ie.m` v7 @kind object) @signature `Lie/f$l;.l:(ZLie/m;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b9368.  v0:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b936c.  v0:= v0.`ie.f.B` @type ^`ie.j` @kind object;
  #L2b9370.  @monitorenter v0
  #L2b9372.  v1:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9376.  @monitorenter v1
  #L2b9378.  v2:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b937c.  v2:= v2.`ie.f.z` @type ^`ie.m` @kind object;
  #L2b9380.  call temp:= `d`(v2) @signature `Lie/m;.d:()I` @kind virtual;
  #L2b9386.  v2:= temp;
  #L2b9388.  if v6 == 0 then goto L2b939a;
  #L2b938c.  v6:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9390.  v6:= v6.`ie.f.z` @type ^`ie.m` @kind object;
  #L2b9394.  call `a`(v6) @signature `Lie/m;.a:()V` @kind virtual;
  #L2b939a.  v6:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b939e.  v6:= v6.`ie.f.z` @type ^`ie.m` @kind object;
  #L2b93a2.  call `h`(v6, v7) @signature `Lie/m;.h:(Lie/m;)V` @kind virtual;
  #L2b93a8.  v6:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b93ac.  v6:= v6.`ie.f.z` @type ^`ie.m` @kind object;
  #L2b93b0.  call temp:= `d`(v6) @signature `Lie/m;.d:()I` @kind virtual;
  #L2b93b6.  v6:= temp;
  #L2b93b8.  v7:= -1I;
  #L2b93ba.  v3:= 0I;
  #L2b93bc.  if v6 == v7 then goto L2b9410;
  #L2b93c0.  if v6 == v2 then goto L2b9410;
  #L2b93c4.  v6:= v6 - v2 @kind int;
  #L2b93c6.  v6:= (`long`) v6 @kind i2l;
  #L2b93c8.  v2:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b93cc.  v2:= v2.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b93d0.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2b93d6.  v2:= temp;
  #L2b93d8.  if v2 != 0 then goto L2b9414;
  #L2b93dc.  v2:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b93e0.  v2:= v2.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b93e4.  call temp:= `values`(v2) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L2b93ea.  v2:= temp @kind object;
  #L2b93ec.  v3:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b93f0.  v3:= v3.`ie.f.i` @type ^`java.util.Map` @kind object;
  #L2b93f4.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2b93fa.  v3:= temp;
  #L2b93fc.  v3:= new `ie.i`[v3];
  #L2b9400.  call temp:= `toArray`(v2, v3) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2b9406.  v2:= temp @kind object;
  #L2b9408.  v2:= (`ie.i`[]) v2 @kind object;
  #L2b940c.  v3:= v2 @kind object;
  #L2b940e.  goto L2b9414;
  #L2b9410.  v6:= 0L;
  #L2b9414.  @monitorexit v1
  #L2b9416.  v1:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b941a.  v2:= v1.`ie.f.B` @type ^`ie.j` @kind object;
  #L2b941e.  v1:= v1.`ie.f.z` @type ^`ie.m` @kind object;
  #L2b9422.  call `e`(v2, v1) @signature `Lie/j;.e:(Lie/m;)V` @kind virtual;
  #L2b9428.  goto L2b9436;
  #L2b942a.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2b942c.  v2:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b9430.  call `e`(v2, v1) @signature `Lie/f;.e:(Lie/f;Ljava/io/IOException;)V` @kind static;
  #L2b9436.  @monitorexit v0
  #L2b9438.  v0:= 0I;
  #L2b943a.  if v3 == 0 then goto L2b9460;
  #L2b943e.  v1:= length @variable v3;
  #L2b9440.  v2:= 0I;
  #L2b9442.  if v2 >= v1 then goto L2b9460;
  #L2b9446.  v4:= v3[v2] @kind object;
  #L2b944a.  @monitorenter v4
  #L2b944c.  call `a`(v4, v6) @signature `Lie/i;.a:(J)V` @kind virtual;
  #L2b9452.  @monitorexit v4
  #L2b9454.  v2:= v2 + 1;
  #L2b9458.  goto L2b9442;
  #L2b945a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b945c.  @monitorexit v4
  #L2b945e.  throw v6;
  #L2b9460.  call temp:= `y`() @signature `Lie/f;.y:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L2b9466.  v6:= temp @kind object;
  #L2b9468.  v7:= new `ie.f$l$c`;
  #L2b946c.  v1:= "OkHttp %s settings" @kind object;
  #L2b9470.  v2:= 1I;
  #L2b9472.  v2:= new `java.lang.Object`[v2];
  #L2b9476.  v3:= v5.`ie.f$l.i` @type ^`ie.f` @kind object;
  #L2b947a.  v3:= v3.`ie.f.j` @type ^`java.lang.String` @kind object;
  #L2b947e.  v2[v0]:= v3 @kind object;
  #L2b9482.  call `<init>`(v7, v5, v1, v2) @signature `Lie/f$l$c;.<init>:(Lie/f$l;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b9488.  call `execute`(v6, v7) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L2b948e.  return @kind void;
  #L2b9490.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b9492.  @monitorexit v1
  #L2b9494.  throw v6;
  #L2b9496.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b9498.  @monitorexit v0
  #L2b949a.  throw v6;
  catch `java.lang.Throwable` @[L2b9372..L2b9378] goto L2b9496;
  catch `java.lang.Throwable` @[L2b9378..L2b9416] goto L2b9490;
  catch `java.io.IOException` @[L2b9416..L2b9428] goto L2b942a;
  catch `java.lang.Throwable` @[L2b9416..L2b9428] goto L2b9496;
  catch `java.lang.Throwable` @[L2b942c..L2b9438] goto L2b9496;
  catch `java.lang.Throwable` @[L2b944c..L2b945e] goto L2b945a;
  catch `java.lang.Throwable` @[L2b9492..L2b9494] goto L2b9490;
  catch `java.lang.Throwable` @[L2b9494..L2b949a] goto L2b9496;
}
