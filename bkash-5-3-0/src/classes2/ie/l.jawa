record `ie.l` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `ie.l` `@@ie.l.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lie/l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bdb14.  v0:= new `ie.l$a`;
  #L2bdb18.  call `<init>`(v0) @signature `Lie/l$a;.<init>:()V` @kind direct;
  #L2bdb1e.  `@@ie.l.a` @type ^`ie.l` := v0 @kind object;
  #L2bdb22.  return @kind void;
}
procedure `void` `a`(`int` v0 , `ie.b` v1 @kind object) @signature `Lie/l;.a:(ILie/b;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `b`(`int` v0 , `java.util.List` v1 @kind object) @signature `Lie/l;.b:(ILjava/util/List;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `c`(`int` v0 , `java.util.List` v1 @kind object, `boolean` v2 ) @signature `Lie/l;.c:(ILjava/util/List;Z)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `d`(`int` v0 , `okio.e` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lie/l;.d:(ILokio/e;IZ)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
