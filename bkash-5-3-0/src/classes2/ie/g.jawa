record `ie.g` @kind class @AccessFlag PUBLIC_FINAL extends `ge.c` @kind interface {
  `okhttp3.y$a` `ie.g.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.e` `ie.g.b` @AccessFlag PRIVATE_FINAL;
  `ie.f` `ie.g.c` @AccessFlag PRIVATE_FINAL;
  `ie.i` `ie.g.d` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.c0` `ie.g.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `ie.g.f` @AccessFlag PRIVATE_VOLATILE;
}
global `java.util.List` `@@ie.g.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@ie.g.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lie/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2baa64.  v0:= "connection" @kind object;
  #L2baa68.  v1:= "host" @kind object;
  #L2baa6c.  v2:= "keep-alive" @kind object;
  #L2baa70.  v3:= "proxy-connection" @kind object;
  #L2baa74.  v4:= "te" @kind object;
  #L2baa78.  v5:= "transfer-encoding" @kind object;
  #L2baa7c.  v6:= "encoding" @kind object;
  #L2baa80.  v7:= "upgrade" @kind object;
  #L2baa84.  v8:= ":method" @kind object;
  #L2baa88.  v9:= ":path" @kind object;
  #L2baa8c.  v10:= ":scheme" @kind object;
  #L2baa90.  v11:= ":authority" @kind object;
  #L2baa94.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11];
  #L2baa9a.  v0:= temp @kind object;
  #L2baa9c.  call temp:= `u`(v0) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2baaa2.  v0:= temp @kind object;
  #L2baaa4.  `@@ie.g.g` @type ^`java.util.List` := v0 @kind object;
  #L2baaa8.  v1:= "connection" @kind object;
  #L2baaac.  v2:= "host" @kind object;
  #L2baab0.  v3:= "keep-alive" @kind object;
  #L2baab4.  v4:= "proxy-connection" @kind object;
  #L2baab8.  v5:= "te" @kind object;
  #L2baabc.  v6:= "transfer-encoding" @kind object;
  #L2baac0.  v7:= "encoding" @kind object;
  #L2baac4.  v8:= "upgrade" @kind object;
  #L2baac8.  temp:= new `java.lang.String`[v1, v2, v3, v4, v5, v6, v7, v8];
  #L2baace.  v0:= temp @kind object;
  #L2baad0.  call temp:= `u`(v0) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2baad6.  v0:= temp @kind object;
  #L2baad8.  `@@ie.g.h` @type ^`java.util.List` := v0 @kind object;
  #L2baadc.  return @kind void;
}
procedure `void` `<init>`(`ie.g` v0 @kind this, `okhttp3.b0` v1 @kind object, `okhttp3.internal.connection.e` v2 @kind object, `okhttp3.y$a` v3 @kind object, `ie.f` v4 @kind object) @signature `Lie/g;.<init>:(Lokhttp3/b0;Lokhttp3/internal/connection/e;Lokhttp3/y$a;Lie/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2baaf0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2baaf6.  v0.`ie.g.b` @type ^`okhttp3.internal.connection.e` := v2 @kind object;
  #L2baafa.  v0.`ie.g.a` @type ^`okhttp3.y$a` := v3 @kind object;
  #L2baafe.  v0.`ie.g.c` @type ^`ie.f` := v4 @kind object;
  #L2bab02.  call temp:= `v`(v1) @signature `Lokhttp3/b0;.v:()Ljava/util/List;` @kind virtual;
  #L2bab08.  v1:= temp @kind object;
  #L2bab0a.  v2:= `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.c0` @kind object;
  #L2bab0e.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2bab14.  v1:= temp;
  #L2bab16.  if v1 == 0 then goto L2bab1c;
  #L2bab1a.  goto L2bab20;
  #L2bab1c.  v2:= `@@okhttp3.c0.HTTP_2` @type ^`okhttp3.c0` @kind object;
  #L2bab20.  v0.`ie.g.e` @type ^`okhttp3.c0` := v2 @kind object;
  #L2bab24.  return @kind void;
}
procedure `java.util.List` `i`(`okhttp3.e0` v6 @kind object) @signature `Lie/g;.i:(Lokhttp3/e0;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ba790.  call temp:= `d`(v6) @signature `Lokhttp3/e0;.d:()Lokhttp3/w;` @kind virtual;
  #L2ba796.  v0:= temp @kind object;
  #L2ba798.  v1:= new `java.util.ArrayList`;
  #L2ba79c.  call temp:= `h`(v0) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2ba7a2.  v2:= temp;
  #L2ba7a4.  v2:= v2 + 4;
  #L2ba7a8.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2ba7ae.  v2:= new `ie.c`;
  #L2ba7b2.  v3:= `@@ie.c.f` @type ^`okio.f` @kind object;
  #L2ba7b6.  call temp:= `f`(v6) @signature `Lokhttp3/e0;.f:()Ljava/lang/String;` @kind virtual;
  #L2ba7bc.  v4:= temp @kind object;
  #L2ba7be.  call `<init>`(v2, v3, v4) @signature `Lie/c;.<init>:(Lokio/f;Ljava/lang/String;)V` @kind direct;
  #L2ba7c4.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba7ca.  v2:= new `ie.c`;
  #L2ba7ce.  v3:= `@@ie.c.g` @type ^`okio.f` @kind object;
  #L2ba7d2.  call temp:= `h`(v6) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L2ba7d8.  v4:= temp @kind object;
  #L2ba7da.  call temp:= `c`(v4) @signature `Lge/i;.c:(Lokhttp3/x;)Ljava/lang/String;` @kind static;
  #L2ba7e0.  v4:= temp @kind object;
  #L2ba7e2.  call `<init>`(v2, v3, v4) @signature `Lie/c;.<init>:(Lokio/f;Ljava/lang/String;)V` @kind direct;
  #L2ba7e8.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba7ee.  v2:= "Host" @kind object;
  #L2ba7f2.  call temp:= `c`(v6, v2) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2ba7f8.  v2:= temp @kind object;
  #L2ba7fa.  if v2 == 0 then goto L2ba812;
  #L2ba7fe.  v3:= new `ie.c`;
  #L2ba802.  v4:= `@@ie.c.i` @type ^`okio.f` @kind object;
  #L2ba806.  call `<init>`(v3, v4, v2) @signature `Lie/c;.<init>:(Lokio/f;Ljava/lang/String;)V` @kind direct;
  #L2ba80c.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba812.  v2:= new `ie.c`;
  #L2ba816.  v3:= `@@ie.c.h` @type ^`okio.f` @kind object;
  #L2ba81a.  call temp:= `h`(v6) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L2ba820.  v6:= temp @kind object;
  #L2ba822.  call temp:= `D`(v6) @signature `Lokhttp3/x;.D:()Ljava/lang/String;` @kind virtual;
  #L2ba828.  v6:= temp @kind object;
  #L2ba82a.  call `<init>`(v2, v3, v6) @signature `Lie/c;.<init>:(Lokio/f;Ljava/lang/String;)V` @kind direct;
  #L2ba830.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba836.  v6:= 0I;
  #L2ba838.  call temp:= `h`(v0) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2ba83e.  v2:= temp;
  #L2ba840.  if v6 >= v2 then goto L2ba8ae;
  #L2ba844.  call temp:= `e`(v0, v6) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L2ba84a.  v3:= temp @kind object;
  #L2ba84c.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2ba850.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2ba856.  v3:= temp @kind object;
  #L2ba858.  v4:= `@@ie.g.g` @type ^`java.util.List` @kind object;
  #L2ba85c.  call temp:= `contains`(v4, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba862.  v4:= temp;
  #L2ba864.  if v4 == 0 then goto L2ba890;
  #L2ba868.  v4:= "te" @kind object;
  #L2ba86c.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba872.  v4:= temp;
  #L2ba874.  if v4 == 0 then goto L2ba8a8;
  #L2ba878.  call temp:= `i`(v0, v6) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2ba87e.  v4:= temp @kind object;
  #L2ba880.  v5:= "trailers" @kind object;
  #L2ba884.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba88a.  v4:= temp;
  #L2ba88c.  if v4 == 0 then goto L2ba8a8;
  #L2ba890.  v4:= new `ie.c`;
  #L2ba894.  call temp:= `i`(v0, v6) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2ba89a.  v5:= temp @kind object;
  #L2ba89c.  call `<init>`(v4, v3, v5) @signature `Lie/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2ba8a2.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba8a8.  v6:= v6 + 1;
  #L2ba8ac.  goto L2ba840;
  #L2ba8ae.  return v1 @kind object;
}
procedure `okhttp3.g0$a` `j`(`okhttp3.w` v7 @kind object, `okhttp3.c0` v8 @kind object) @signature `Lie/g;.j:(Lokhttp3/w;Lokhttp3/c0;)Lokhttp3/g0$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ba8dc.  v0:= new `okhttp3.w$a`;
  #L2ba8e0.  call `<init>`(v0) @signature `Lokhttp3/w$a;.<init>:()V` @kind direct;
  #L2ba8e6.  call temp:= `h`(v7) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2ba8ec.  v1:= temp;
  #L2ba8ee.  v2:= 0I;
  #L2ba8f0.  v3:= 0I;
  #L2ba8f2.  if v3 >= v1 then goto L2ba962;
  #L2ba8f6.  call temp:= `e`(v7, v3) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L2ba8fc.  v4:= temp @kind object;
  #L2ba8fe.  call temp:= `i`(v7, v3) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2ba904.  v5:= temp @kind object;
  #L2ba906.  v6:= ":status" @kind object;
  #L2ba90a.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba910.  v6:= temp;
  #L2ba912.  if v6 == 0 then goto L2ba942;
  #L2ba916.  v2:= new `java.lang.StringBuilder`;
  #L2ba91a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ba920.  v4:= "HTTP/1.1 " @kind object;
  #L2ba924.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba92a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba930.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba936.  v2:= temp @kind object;
  #L2ba938.  call temp:= `a`(v2) @signature `Lge/k;.a:(Ljava/lang/String;)Lge/k;` @kind static;
  #L2ba93e.  v2:= temp @kind object;
  #L2ba940.  goto L2ba95c;
  #L2ba942.  v6:= `@@ie.g.h` @type ^`java.util.List` @kind object;
  #L2ba946.  call temp:= `contains`(v6, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L2ba94c.  v6:= temp;
  #L2ba94e.  if v6 != 0 then goto L2ba95c;
  #L2ba952.  v6:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L2ba956.  call `b`(v6, v0, v4, v5) @signature `Lee/a;.b:(Lokhttp3/w$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ba95c.  v3:= v3 + 1;
  #L2ba960.  goto L2ba8f2;
  #L2ba962.  if v2 == 0 then goto L2ba9a2;
  #L2ba966.  v7:= new `okhttp3.g0$a`;
  #L2ba96a.  call `<init>`(v7) @signature `Lokhttp3/g0$a;.<init>:()V` @kind direct;
  #L2ba970.  call temp:= `o`(v7, v8) @signature `Lokhttp3/g0$a;.o:(Lokhttp3/c0;)Lokhttp3/g0$a;` @kind virtual;
  #L2ba976.  v7:= temp @kind object;
  #L2ba978.  v8:= v2.`ge.k.b` @type ^`int`;
  #L2ba97c.  call temp:= `g`(v7, v8) @signature `Lokhttp3/g0$a;.g:(I)Lokhttp3/g0$a;` @kind virtual;
  #L2ba982.  v7:= temp @kind object;
  #L2ba984.  v8:= v2.`ge.k.c` @type ^`java.lang.String` @kind object;
  #L2ba988.  call temp:= `l`(v7, v8) @signature `Lokhttp3/g0$a;.l:(Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L2ba98e.  v7:= temp @kind object;
  #L2ba990.  call temp:= `e`(v0) @signature `Lokhttp3/w$a;.e:()Lokhttp3/w;` @kind virtual;
  #L2ba996.  v8:= temp @kind object;
  #L2ba998.  call temp:= `j`(v7, v8) @signature `Lokhttp3/g0$a;.j:(Lokhttp3/w;)Lokhttp3/g0$a;` @kind virtual;
  #L2ba99e.  v7:= temp @kind object;
  #L2ba9a0.  return v7 @kind object;
  #L2ba9a2.  v7:= new `java.net.ProtocolException`;
  #L2ba9a6.  v8:= "Expected ':status' header not present" @kind object;
  #L2ba9aa.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba9b0.  throw v7;
}
procedure `void` `a`(`ie.g` v1 @kind this) @signature `Lie/g;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bab68.  v0:= v1.`ie.g.d` @type ^`ie.i` @kind object;
  #L2bab6c.  call temp:= `h`(v0) @signature `Lie/i;.h:()Lokio/u;` @kind virtual;
  #L2bab72.  v0:= temp @kind object;
  #L2bab74.  call `close`(v0) @signature `Lokio/u;.close:()V` @kind interface;
  #L2bab7a.  return @kind void;
}
procedure `void` `b`(`ie.g` v3 @kind this, `okhttp3.e0` v4 @kind object) @signature `Lie/g;.b:(Lokhttp3/e0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2baba8.  v0:= v3.`ie.g.d` @type ^`ie.i` @kind object;
  #L2babac.  if v0 == 0 then goto L2babb2;
  #L2babb0.  return @kind void;
  #L2babb2.  call temp:= `a`(v4) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2babb8.  v0:= temp @kind object;
  #L2babba.  if v0 == 0 then goto L2babc2;
  #L2babbe.  v0:= 1I;
  #L2babc0.  goto L2babc4;
  #L2babc2.  v0:= 0I;
  #L2babc4.  call temp:= `i`(v4) @signature `Lie/g;.i:(Lokhttp3/e0;)Ljava/util/List;` @kind static;
  #L2babca.  v4:= temp @kind object;
  #L2babcc.  v1:= v3.`ie.g.c` @type ^`ie.f` @kind object;
  #L2babd0.  call temp:= `j0`(v1, v4, v0) @signature `Lie/f;.j0:(Ljava/util/List;Z)Lie/i;` @kind virtual;
  #L2babd6.  v4:= temp @kind object;
  #L2babd8.  v3.`ie.g.d` @type ^`ie.i` := v4 @kind object;
  #L2babdc.  v4:= v3.`ie.g.f` @type ^`boolean` @kind boolean;
  #L2babe0.  if v4 != 0 then goto L2bac2a;
  #L2babe4.  v4:= v3.`ie.g.d` @type ^`ie.i` @kind object;
  #L2babe8.  call temp:= `l`(v4) @signature `Lie/i;.l:()Lokio/w;` @kind virtual;
  #L2babee.  v4:= temp @kind object;
  #L2babf0.  v0:= v3.`ie.g.a` @type ^`okhttp3.y$a` @kind object;
  #L2babf4.  call temp:= `a`(v0) @signature `Lokhttp3/y$a;.a:()I` @kind interface;
  #L2babfa.  v0:= temp;
  #L2babfc.  v0:= (`long`) v0 @kind i2l;
  #L2babfe.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2bac02.  call temp:= `g`(v4, v0, v2) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L2bac08.  v4:= v3.`ie.g.d` @type ^`ie.i` @kind object;
  #L2bac0c.  call temp:= `r`(v4) @signature `Lie/i;.r:()Lokio/w;` @kind virtual;
  #L2bac12.  v4:= temp @kind object;
  #L2bac14.  v0:= v3.`ie.g.a` @type ^`okhttp3.y$a` @kind object;
  #L2bac18.  call temp:= `b`(v0) @signature `Lokhttp3/y$a;.b:()I` @kind interface;
  #L2bac1e.  v0:= temp;
  #L2bac20.  v0:= (`long`) v0 @kind i2l;
  #L2bac22.  call temp:= `g`(v4, v0, v2) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L2bac28.  return @kind void;
  #L2bac2a.  v4:= v3.`ie.g.d` @type ^`ie.i` @kind object;
  #L2bac2e.  v0:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2bac32.  call `f`(v4, v0) @signature `Lie/i;.f:(Lie/b;)V` @kind virtual;
  #L2bac38.  v4:= new `java.io.IOException`;
  #L2bac3c.  v0:= "Canceled" @kind object;
  #L2bac40.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bac46.  throw v4;
}
procedure `okio.v` `c`(`ie.g` v0 @kind this, `okhttp3.g0` v1 @kind object) @signature `Lie/g;.c:(Lokhttp3/g0;)Lokio/v;` @AccessFlag PUBLIC {
    temp;

  #L2baa44.  v1:= v0.`ie.g.d` @type ^`ie.i` @kind object;
  #L2baa48.  call temp:= `i`(v1) @signature `Lie/i;.i:()Lokio/v;` @kind virtual;
  #L2baa4e.  v1:= temp @kind object;
  #L2baa50.  return v1 @kind object;
}
procedure `void` `cancel`(`ie.g` v2 @kind this) @signature `Lie/g;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bab38.  v0:= 1I;
  #L2bab3a.  v2.`ie.g.f` @type ^`boolean` := v0 @kind boolean;
  #L2bab3e.  v0:= v2.`ie.g.d` @type ^`ie.i` @kind object;
  #L2bab42.  if v0 == 0 then goto L2bab54;
  #L2bab46.  v0:= v2.`ie.g.d` @type ^`ie.i` @kind object;
  #L2bab4a.  v1:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2bab4e.  call `f`(v0, v1) @signature `Lie/i;.f:(Lie/b;)V` @kind virtual;
  #L2bab54.  return @kind void;
}
procedure `okhttp3.g0$a` `d`(`ie.g` v2 @kind this, `boolean` v3 ) @signature `Lie/g;.d:(Z)Lokhttp3/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ba9c4.  v0:= v2.`ie.g.d` @type ^`ie.i` @kind object;
  #L2ba9c8.  call temp:= `p`(v0) @signature `Lie/i;.p:()Lokhttp3/w;` @kind virtual;
  #L2ba9ce.  v0:= temp @kind object;
  #L2ba9d0.  v1:= v2.`ie.g.e` @type ^`okhttp3.c0` @kind object;
  #L2ba9d4.  call temp:= `j`(v0, v1) @signature `Lie/g;.j:(Lokhttp3/w;Lokhttp3/c0;)Lokhttp3/g0$a;` @kind static;
  #L2ba9da.  v0:= temp @kind object;
  #L2ba9dc.  if v3 == 0 then goto L2ba9f8;
  #L2ba9e0.  v3:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L2ba9e4.  call temp:= `d`(v3, v0) @signature `Lee/a;.d:(Lokhttp3/g0$a;)I` @kind virtual;
  #L2ba9ea.  v3:= temp;
  #L2ba9ec.  v1:= 100I;
  #L2ba9f0.  if v3 != v1 then goto L2ba9f8;
  #L2ba9f4.  v3:= 0I;
  #L2ba9f6.  return v3 @kind object;
  #L2ba9f8.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.e` `e`(`ie.g` v1 @kind this) @signature `Lie/g;.e:()Lokhttp3/internal/connection/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2baa0c.  v0:= v1.`ie.g.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2baa10.  return v0 @kind object;
}
procedure `void` `f`(`ie.g` v1 @kind this) @signature `Lie/g;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bab8c.  v0:= v1.`ie.g.c` @type ^`ie.f` @kind object;
  #L2bab90.  call `flush`(v0) @signature `Lie/f;.flush:()V` @kind virtual;
  #L2bab96.  return @kind void;
}
procedure `long` `g`(`ie.g` v2 @kind this, `okhttp3.g0` v3 @kind object) @signature `Lie/g;.g:(Lokhttp3/g0;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ba8c0.  call temp:= `b`(v3) @signature `Lge/e;.b:(Lokhttp3/g0;)J` @kind static;
  #L2ba8c6.  v0:= temp @kind wide;
  #L2ba8c8.  return v0 @kind wide;
}
procedure `okio.u` `h`(`ie.g` v0 @kind this, `okhttp3.e0` v1 @kind object, `long` v2 ) @signature `Lie/g;.h:(Lokhttp3/e0;J)Lokio/u;` @AccessFlag PUBLIC {
    temp;

  #L2baa24.  v1:= v0.`ie.g.d` @type ^`ie.i` @kind object;
  #L2baa28.  call temp:= `h`(v1) @signature `Lie/i;.h:()Lokio/u;` @kind virtual;
  #L2baa2e.  v1:= temp @kind object;
  #L2baa30.  return v1 @kind object;
}
