record `ie.f$e` @kind class @AccessFlag  extends `ee.b` @kind class {
  `int` `ie.f$e.h` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `ie.f$e.i` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `ie.f$e.j` @AccessFlag FINAL_SYNTHETIC;
  `ie.f` `ie.f$e.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`ie.f$e` v0 @kind this, `ie.f` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object`[] v3 @kind object, `int` v4 , `java.util.List` v5 @kind object, `boolean` v6 ) @signature `Lie/f$e;.<init>:(Lie/f;Ljava/lang/String;[Ljava/lang/Object;ILjava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b8d78.  v0.`ie.f$e.k` @type ^`ie.f` := v1 @kind object;
  #L2b8d7c.  v0.`ie.f$e.h` @type ^`int` := v4;
  #L2b8d80.  v0.`ie.f$e.i` @type ^`java.util.List` := v5 @kind object;
  #L2b8d84.  v0.`ie.f$e.j` @type ^`boolean` := v6 @kind boolean;
  #L2b8d88.  call `<init>`(v0, v2, v3) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L2b8d8e.  return @kind void;
}
procedure `void` `k`(`ie.f$e` v4 @kind this) @signature `Lie/f$e;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b8da0.  v0:= v4.`ie.f$e.k` @type ^`ie.f` @kind object;
  #L2b8da4.  v0:= v0.`ie.f.p` @type ^`ie.l` @kind object;
  #L2b8da8.  v1:= v4.`ie.f$e.h` @type ^`int`;
  #L2b8dac.  v2:= v4.`ie.f$e.i` @type ^`java.util.List` @kind object;
  #L2b8db0.  v3:= v4.`ie.f$e.j` @type ^`boolean` @kind boolean;
  #L2b8db4.  call temp:= `c`(v0, v1, v2, v3) @signature `Lie/l;.c:(ILjava/util/List;Z)Z` @kind interface;
  #L2b8dba.  v0:= temp;
  #L2b8dbc.  if v0 == 0 then goto L2b8dd6;
  #L2b8dc0.  v1:= v4.`ie.f$e.k` @type ^`ie.f` @kind object;
  #L2b8dc4.  v1:= v1.`ie.f.B` @type ^`ie.j` @kind object;
  #L2b8dc8.  v2:= v4.`ie.f$e.h` @type ^`int`;
  #L2b8dcc.  v3:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L2b8dd0.  call `Q`(v1, v2, v3) @signature `Lie/j;.Q:(ILie/b;)V` @kind virtual;
  #L2b8dd6.  if v0 != 0 then goto L2b8de2;
  #L2b8dda.  v0:= v4.`ie.f$e.j` @type ^`boolean` @kind boolean;
  #L2b8dde.  if v0 == 0 then goto L2b8e0c;
  #L2b8de2.  v0:= v4.`ie.f$e.k` @type ^`ie.f` @kind object;
  #L2b8de6.  @monitorenter v0
  #L2b8de8.  v1:= v4.`ie.f$e.k` @type ^`ie.f` @kind object;
  #L2b8dec.  v1:= v1.`ie.f.D` @type ^`java.util.Set` @kind object;
  #L2b8df0.  v2:= v4.`ie.f$e.h` @type ^`int`;
  #L2b8df4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b8dfa.  v2:= temp @kind object;
  #L2b8dfc.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2b8e02.  @monitorexit v0
  #L2b8e04.  goto L2b8e0c;
  #L2b8e06.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b8e08.  @monitorexit v0
  #L2b8e0a.  throw v1;
  #L2b8e0c.  return @kind void;
  catch `java.io.IOException` @[L2b8dc0..L2b8de8] goto L2b8e0c;
  catch `java.lang.Throwable` @[L2b8de8..L2b8e0a] goto L2b8e06;
  catch `java.io.IOException` @[L2b8e0a..L2b8e0c] goto L2b8e0c;
}
