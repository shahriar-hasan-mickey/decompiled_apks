record `ie.h` @kind class @AccessFlag FINAL extends `java.io.Closeable` @kind interface {
  `okio.e` `ie.h.g` @AccessFlag PRIVATE_FINAL;
  `ie.h$a` `ie.h.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `ie.h.i` @AccessFlag PRIVATE_FINAL;
  `ie.d$a` `ie.h.j` @AccessFlag FINAL;
}
global `java.util.logging.Logger` `@@ie.h.k` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lie/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2bb04c.  v0:= constclass @type ^`ie.e` @kind object;
  #L2bb050.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2bb056.  v0:= temp @kind object;
  #L2bb058.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2bb05e.  v0:= temp @kind object;
  #L2bb060.  `@@ie.h.k` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L2bb064.  return @kind void;
}
procedure `void` `<init>`(`ie.h` v1 @kind this, `okio.e` v2 @kind object, `boolean` v3 ) @signature `Lie/h;.<init>:(Lokio/e;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2bb078.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bb07e.  v1.`ie.h.g` @type ^`okio.e` := v2 @kind object;
  #L2bb082.  v1.`ie.h.i` @type ^`boolean` := v3 @kind boolean;
  #L2bb086.  v3:= new `ie.h$a`;
  #L2bb08a.  call `<init>`(v3, v2) @signature `Lie/h$a;.<init>:(Lokio/e;)V` @kind direct;
  #L2bb090.  v1.`ie.h.h` @type ^`ie.h$a` := v3 @kind object;
  #L2bb094.  v2:= new `ie.d$a`;
  #L2bb098.  v0:= 4096I;
  #L2bb09c.  call `<init>`(v2, v0, v3) @signature `Lie/d$a;.<init>:(ILokio/v;)V` @kind direct;
  #L2bb0a2.  v1.`ie.h.j` @type ^`ie.d$a` := v2 @kind object;
  #L2bb0a6.  return @kind void;
}
procedure `void` `C`(`ie.h` v3 @kind this, `ie.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lie/h;.C:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bb350.  v0:= 0I;
  #L2bb352.  v1:= 1I;
  #L2bb354.  v2:= 8I;
  #L2bb358.  if v5 != v2 then goto L2bb39a;
  #L2bb35c.  if v7 != 0 then goto L2bb388;
  #L2bb360.  v5:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb364.  call temp:= `readInt`(v5) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb36a.  v5:= temp;
  #L2bb36c.  v7:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb370.  call temp:= `readInt`(v7) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb376.  v7:= temp;
  #L2bb378.  v6:= v6 ^& v1 @kind int;
  #L2bb37a.  if v6 == 0 then goto L2bb380;
  #L2bb37e.  v0:= 1I;
  #L2bb380.  call `g`(v4, v0, v5, v7) @signature `Lie/h$b;.g:(ZII)V` @kind interface;
  #L2bb386.  return @kind void;
  #L2bb388.  v4:= new `java.lang.Object`[v0];
  #L2bb38c.  v5:= "TYPE_PING streamId != 0" @kind object;
  #L2bb390.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb396.  v4:= temp @kind object;
  #L2bb398.  throw v4;
  #L2bb39a.  v4:= new `java.lang.Object`[v1];
  #L2bb39e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb3a4.  v5:= temp @kind object;
  #L2bb3a6.  v4[v0]:= v5 @kind object;
  #L2bb3aa.  v5:= "TYPE_PING length != 8: %s" @kind object;
  #L2bb3ae.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb3b4.  v4:= temp @kind object;
  #L2bb3b6.  throw v4;
}
procedure `void` `J`(`ie.h` v4 @kind this, `ie.h$b` v5 @kind object, `int` v6 ) @signature `Lie/h;.J:(Lie/h$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bb3c8.  v0:= v4.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb3cc.  call temp:= `readInt`(v0) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb3d2.  v0:= temp;
  #L2bb3d4.  v1:= -2147483648I;
  #L2bb3d8.  v1:= v1 ^& v0 @kind int;
  #L2bb3da.  v2:= 1I;
  #L2bb3dc.  if v1 == 0 then goto L2bb3e4;
  #L2bb3e0.  v1:= 1I;
  #L2bb3e2.  goto L2bb3e6;
  #L2bb3e4.  v1:= 0I;
  #L2bb3e6.  v3:= 2147483647I;
  #L2bb3ec.  v0:= v0 ^& v3 @kind int;
  #L2bb3ee.  v3:= v4.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb3f2.  call temp:= `readByte`(v3) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bb3f8.  v3:= temp;
  #L2bb3fa.  v3:= v3 ^& 255;
  #L2bb3fe.  v3:= v3 + v2 @kind int;
  #L2bb400.  call `h`(v5, v6, v0, v3, v1) @signature `Lie/h$b;.h:(IIIZ)V` @kind interface;
  #L2bb406.  return @kind void;
}
procedure `void` `Q`(`ie.h` v1 @kind this, `ie.h$b` v2 @kind object, `int` v3 , `byte` v4 , `int` v5 ) @signature `Lie/h;.Q:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bb418.  v4:= 0I;
  #L2bb41a.  v0:= 5I;
  #L2bb41c.  if v3 != v0 then goto L2bb43e;
  #L2bb420.  if v5 == 0 then goto L2bb42c;
  #L2bb424.  call `J`(v1, v2, v5) @signature `Lie/h;.J:(Lie/h$b;I)V` @kind direct;
  #L2bb42a.  return @kind void;
  #L2bb42c.  v2:= new `java.lang.Object`[v4];
  #L2bb430.  v3:= "TYPE_PRIORITY streamId == 0" @kind object;
  #L2bb434.  call temp:= `d`(v3, v2) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb43a.  v2:= temp @kind object;
  #L2bb43c.  throw v2;
  #L2bb43e.  v2:= 1I;
  #L2bb440.  v2:= new `java.lang.Object`[v2];
  #L2bb444.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb44a.  v3:= temp @kind object;
  #L2bb44c.  v2[v4]:= v3 @kind object;
  #L2bb450.  v3:= "TYPE_PRIORITY length: %d != 5" @kind object;
  #L2bb454.  call temp:= `d`(v3, v2) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb45a.  v2:= temp @kind object;
  #L2bb45c.  throw v2;
}
procedure `void` `V`(`ie.h` v3 @kind this, `ie.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lie/h;.V:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bb470.  v0:= 0I;
  #L2bb472.  if v7 == 0 then goto L2bb4c0;
  #L2bb476.  v1:= v6 ^& 8;
  #L2bb47a.  if v1 == 0 then goto L2bb490;
  #L2bb47e.  v0:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb482.  call temp:= `readByte`(v0) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bb488.  v0:= temp;
  #L2bb48a.  v0:= v0 ^& 255;
  #L2bb48e.  v0:= (`short`) v0 @kind i2s;
  #L2bb490.  v1:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb494.  call temp:= `readInt`(v1) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb49a.  v1:= temp;
  #L2bb49c.  v2:= 2147483647I;
  #L2bb4a2.  v1:= v1 ^& v2 @kind int;
  #L2bb4a4.  v5:= v5 + -4;
  #L2bb4a8.  call temp:= `e`(v5, v6, v0) @signature `Lie/h;.e:(IBS)I` @kind static;
  #L2bb4ae.  v5:= temp;
  #L2bb4b0.  call temp:= `v`(v3, v5, v0, v6, v7) @signature `Lie/h;.v:(ISBI)Ljava/util/List;` @kind direct;
  #L2bb4b6.  v5:= temp @kind object;
  #L2bb4b8.  call `i`(v4, v7, v1, v5) @signature `Lie/h$b;.i:(IILjava/util/List;)V` @kind interface;
  #L2bb4be.  return @kind void;
  #L2bb4c0.  v4:= new `java.lang.Object`[v0];
  #L2bb4c4.  v5:= "PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0" @kind object;
  #L2bb4c8.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb4ce.  v4:= temp @kind object;
  #L2bb4d0.  throw v4;
}
procedure `void` `Y`(`ie.h` v2 @kind this, `ie.h$b` v3 @kind object, `int` v4 , `byte` v5 , `int` v6 ) @signature `Lie/h;.Y:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2bb4e4.  v5:= 1I;
  #L2bb4e6.  v0:= 0I;
  #L2bb4e8.  v1:= 4I;
  #L2bb4ea.  if v4 != v1 then goto L2bb542;
  #L2bb4ee.  if v6 == 0 then goto L2bb530;
  #L2bb4f2.  v4:= v2.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb4f6.  call temp:= `readInt`(v4) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb4fc.  v4:= temp;
  #L2bb4fe.  call temp:= `fromHttp2`(v4) @signature `Lie/b;.fromHttp2:(I)Lie/b;` @kind static;
  #L2bb504.  v1:= temp @kind object;
  #L2bb506.  if v1 == 0 then goto L2bb512;
  #L2bb50a.  call `e`(v3, v6, v1) @signature `Lie/h$b;.e:(ILie/b;)V` @kind interface;
  #L2bb510.  return @kind void;
  #L2bb512.  v3:= new `java.lang.Object`[v5];
  #L2bb516.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb51c.  v4:= temp @kind object;
  #L2bb51e.  v3[v0]:= v4 @kind object;
  #L2bb522.  v4:= "TYPE_RST_STREAM unexpected error code: %d" @kind object;
  #L2bb526.  call temp:= `d`(v4, v3) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb52c.  v3:= temp @kind object;
  #L2bb52e.  throw v3;
  #L2bb530.  v3:= new `java.lang.Object`[v0];
  #L2bb534.  v4:= "TYPE_RST_STREAM streamId == 0" @kind object;
  #L2bb538.  call temp:= `d`(v4, v3) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb53e.  v3:= temp @kind object;
  #L2bb540.  throw v3;
  #L2bb542.  v3:= new `java.lang.Object`[v5];
  #L2bb546.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb54c.  v4:= temp @kind object;
  #L2bb54e.  v3[v0]:= v4 @kind object;
  #L2bb552.  v4:= "TYPE_RST_STREAM length: %d != 4" @kind object;
  #L2bb556.  call temp:= `d`(v4, v3) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb55c.  v3:= temp @kind object;
  #L2bb55e.  throw v3;
}
procedure `void` `Z`(`ie.h` v6 @kind this, `ie.h$b` v7 @kind object, `int` v8 , `byte` v9 , `int` v10 ) @signature `Lie/h;.Z:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bb570.  v0:= 0I;
  #L2bb572.  if v10 != 0 then goto L2bb68c;
  #L2bb576.  v10:= 1I;
  #L2bb578.  v9:= v9 ^& v10 @kind int;
  #L2bb57a.  if v9 == 0 then goto L2bb59c;
  #L2bb57e.  if v8 != 0 then goto L2bb58a;
  #L2bb582.  call `b`(v7) @signature `Lie/h$b;.b:()V` @kind interface;
  #L2bb588.  return @kind void;
  #L2bb58a.  v7:= new `java.lang.Object`[v0];
  #L2bb58e.  v8:= "FRAME_SIZE_ERROR ack frame should be empty!" @kind object;
  #L2bb592.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb598.  v7:= temp @kind object;
  #L2bb59a.  throw v7;
  #L2bb59c.  v9:= v8 %% 6;
  #L2bb5a0.  if v9 != 0 then goto L2bb66e;
  #L2bb5a4.  v9:= new `ie.m`;
  #L2bb5a8.  call `<init>`(v9) @signature `Lie/m;.<init>:()V` @kind direct;
  #L2bb5ae.  v1:= 0I;
  #L2bb5b0.  if v1 >= v8 then goto L2bb666;
  #L2bb5b4.  v2:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb5b8.  call temp:= `readShort`(v2) @signature `Lokio/e;.readShort:()S` @kind interface;
  #L2bb5be.  v2:= temp;
  #L2bb5c0.  v3:= 65535I;
  #L2bb5c6.  v2:= v2 ^& v3 @kind int;
  #L2bb5c8.  v3:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb5cc.  call temp:= `readInt`(v3) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb5d2.  v3:= temp;
  #L2bb5d4.  v4:= 2I;
  #L2bb5d6.  v5:= 4I;
  #L2bb5d8.  if v2 == v4 then goto L2bb63e;
  #L2bb5dc.  v4:= 3I;
  #L2bb5de.  if v2 == v4 then goto L2bb63a;
  #L2bb5e2.  if v2 == v5 then goto L2bb620;
  #L2bb5e6.  v4:= 5I;
  #L2bb5e8.  if v2 == v4 then goto L2bb5ee;
  #L2bb5ec.  goto L2bb65a;
  #L2bb5ee.  v4:= 16384I;
  #L2bb5f2.  if v3 < v4 then goto L2bb602;
  #L2bb5f6.  v4:= 16777215I;
  #L2bb5fc.  if v3 > v4 then goto L2bb602;
  #L2bb600.  goto L2bb65a;
  #L2bb602.  v7:= new `java.lang.Object`[v10];
  #L2bb606.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb60c.  v8:= temp @kind object;
  #L2bb60e.  v7[v0]:= v8 @kind object;
  #L2bb612.  v8:= "PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s" @kind object;
  #L2bb616.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb61c.  v7:= temp @kind object;
  #L2bb61e.  throw v7;
  #L2bb620.  v2:= 7I;
  #L2bb622.  if v3 < 0 then goto L2bb628;
  #L2bb626.  goto L2bb65a;
  #L2bb628.  v7:= new `java.lang.Object`[v0];
  #L2bb62c.  v8:= "PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1" @kind object;
  #L2bb630.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb636.  v7:= temp @kind object;
  #L2bb638.  throw v7;
  #L2bb63a.  v2:= 4I;
  #L2bb63c.  goto L2bb65a;
  #L2bb63e.  if v3 == 0 then goto L2bb65a;
  #L2bb642.  if v3 != v10 then goto L2bb648;
  #L2bb646.  goto L2bb65a;
  #L2bb648.  v7:= new `java.lang.Object`[v0];
  #L2bb64c.  v8:= "PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1" @kind object;
  #L2bb650.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb656.  v7:= temp @kind object;
  #L2bb658.  throw v7;
  #L2bb65a.  call temp:= `i`(v9, v2, v3) @signature `Lie/m;.i:(II)Lie/m;` @kind virtual;
  #L2bb660.  v1:= v1 + 6;
  #L2bb664.  goto L2bb5b0;
  #L2bb666.  call `a`(v7, v0, v9) @signature `Lie/h$b;.a:(ZLie/m;)V` @kind interface;
  #L2bb66c.  return @kind void;
  #L2bb66e.  v7:= new `java.lang.Object`[v10];
  #L2bb672.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb678.  v8:= temp @kind object;
  #L2bb67a.  v7[v0]:= v8 @kind object;
  #L2bb67e.  v8:= "TYPE_SETTINGS length %% 6 != 0: %s" @kind object;
  #L2bb682.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb688.  v7:= temp @kind object;
  #L2bb68a.  throw v7;
  #L2bb68c.  v7:= new `java.lang.Object`[v0];
  #L2bb690.  v8:= "TYPE_SETTINGS streamId != 0" @kind object;
  #L2bb694.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb69a.  v7:= temp @kind object;
  #L2bb69c.  throw v7;
}
procedure `void` `a0`(`ie.h` v5 @kind this, `ie.h$b` v6 @kind object, `int` v7 , `byte` v8 , `int` v9 ) @signature `Lie/h;.a0:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bb6b0.  v8:= 0I;
  #L2bb6b2.  v0:= 1I;
  #L2bb6b4.  v1:= 4I;
  #L2bb6b6.  if v7 != v1 then goto L2bb702;
  #L2bb6ba.  v7:= v5.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb6be.  call temp:= `readInt`(v7) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb6c4.  v7:= temp;
  #L2bb6c6.  v1:= (`long`) v7 @kind i2l;
  #L2bb6c8.  v3:= 2147483647L;
  #L2bb6ce.  v1:= v1 ^& v3 @kind long;
  #L2bb6d0.  v3:= 0L;
  #L2bb6d4.  v7:= lcmp(v1, v3);
  #L2bb6d8.  if v7 == 0 then goto L2bb6e4;
  #L2bb6dc.  call `d`(v6, v9, v1) @signature `Lie/h$b;.d:(IJ)V` @kind interface;
  #L2bb6e2.  return @kind void;
  #L2bb6e4.  v6:= new `java.lang.Object`[v0];
  #L2bb6e8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2bb6ee.  v7:= temp @kind object;
  #L2bb6f0.  v6[v8]:= v7 @kind object;
  #L2bb6f4.  v7:= "windowSizeIncrement was 0" @kind object;
  #L2bb6f8.  call temp:= `d`(v7, v6) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb6fe.  v6:= temp @kind object;
  #L2bb700.  throw v6;
  #L2bb702.  v6:= new `java.lang.Object`[v0];
  #L2bb706.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb70c.  v7:= temp @kind object;
  #L2bb70e.  v6[v8]:= v7 @kind object;
  #L2bb712.  v7:= "TYPE_WINDOW_UPDATE length !=4: %s" @kind object;
  #L2bb716.  call temp:= `d`(v7, v6) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb71c.  v6:= temp @kind object;
  #L2bb71e.  throw v6;
}
procedure `int` `e`(`int` v1 , `byte` v2 , `short` v3 ) @signature `Lie/h;.e:(IBS)I` @AccessFlag STATIC {
    temp;
    v0;

  #L2baf70.  v2:= v2 ^& 8;
  #L2baf74.  if v2 == 0 then goto L2baf7c;
  #L2baf78.  v1:= v1 + -1;
  #L2baf7c.  if v3 > v1 then goto L2baf86;
  #L2baf80.  v1:= v1 - v3 @kind int;
  #L2baf82.  v1:= (`short`) v1 @kind i2s;
  #L2baf84.  return v1;
  #L2baf86.  v2:= 2I;
  #L2baf88.  v2:= new `java.lang.Object`[v2];
  #L2baf8c.  v0:= 0I;
  #L2baf8e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L2baf94.  v3:= temp @kind object;
  #L2baf96.  v2[v0]:= v3 @kind object;
  #L2baf9a.  v3:= 1I;
  #L2baf9c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bafa2.  v1:= temp @kind object;
  #L2bafa4.  v2[v3]:= v1 @kind object;
  #L2bafa8.  v1:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L2bafac.  call temp:= `d`(v1, v2) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bafb2.  v1:= temp @kind object;
  #L2bafb4.  throw v1;
}
procedure `void` `r`(`ie.h` v4 @kind this, `ie.h$b` v5 @kind object, `int` v6 , `byte` v7 , `int` v8 ) @signature `Lie/h;.r:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2bb18c.  v0:= 0I;
  #L2bb18e.  if v8 == 0 then goto L2bb1fe;
  #L2bb192.  v1:= v7 ^& 1;
  #L2bb196.  v2:= 1I;
  #L2bb198.  if v1 == 0 then goto L2bb1a0;
  #L2bb19c.  v1:= 1I;
  #L2bb19e.  goto L2bb1a2;
  #L2bb1a0.  v1:= 0I;
  #L2bb1a2.  v3:= v7 ^& 32;
  #L2bb1a6.  if v3 == 0 then goto L2bb1ac;
  #L2bb1aa.  goto L2bb1ae;
  #L2bb1ac.  v2:= 0I;
  #L2bb1ae.  if v2 != 0 then goto L2bb1ec;
  #L2bb1b2.  v2:= v7 ^& 8;
  #L2bb1b6.  if v2 == 0 then goto L2bb1cc;
  #L2bb1ba.  v0:= v4.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb1be.  call temp:= `readByte`(v0) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bb1c4.  v0:= temp;
  #L2bb1c6.  v0:= v0 ^& 255;
  #L2bb1ca.  v0:= (`short`) v0 @kind i2s;
  #L2bb1cc.  call temp:= `e`(v6, v7, v0) @signature `Lie/h;.e:(IBS)I` @kind static;
  #L2bb1d2.  v6:= temp;
  #L2bb1d4.  v7:= v4.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb1d8.  call `f`(v5, v1, v8, v7, v6) @signature `Lie/h$b;.f:(ZILokio/e;I)V` @kind interface;
  #L2bb1de.  v5:= v4.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb1e2.  v6:= (`long`) v0 @kind i2l;
  #L2bb1e4.  call `h0`(v5, v6) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L2bb1ea.  return @kind void;
  #L2bb1ec.  v5:= new `java.lang.Object`[v0];
  #L2bb1f0.  v6:= "PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA" @kind object;
  #L2bb1f4.  call temp:= `d`(v6, v5) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb1fa.  v5:= temp @kind object;
  #L2bb1fc.  throw v5;
  #L2bb1fe.  v5:= new `java.lang.Object`[v0];
  #L2bb202.  v6:= "PROTOCOL_ERROR: TYPE_DATA streamId == 0" @kind object;
  #L2bb206.  call temp:= `d`(v6, v5) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb20c.  v5:= temp @kind object;
  #L2bb20e.  throw v5;
}
procedure `void` `s`(`ie.h` v3 @kind this, `ie.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lie/h;.s:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bb220.  v6:= 1I;
  #L2bb222.  v0:= 8I;
  #L2bb226.  v1:= 0I;
  #L2bb228.  if v5 < v0 then goto L2bb2a4;
  #L2bb22c.  if v7 != 0 then goto L2bb292;
  #L2bb230.  v7:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb234.  call temp:= `readInt`(v7) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb23a.  v7:= temp;
  #L2bb23c.  v2:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb240.  call temp:= `readInt`(v2) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bb246.  v2:= temp;
  #L2bb248.  v5:= v5 - v0 @kind int;
  #L2bb24a.  call temp:= `fromHttp2`(v2) @signature `Lie/b;.fromHttp2:(I)Lie/b;` @kind static;
  #L2bb250.  v0:= temp @kind object;
  #L2bb252.  if v0 == 0 then goto L2bb274;
  #L2bb256.  v6:= `@@okio.f.EMPTY` @type ^`okio.f` @kind object;
  #L2bb25a.  if v5 <= 0 then goto L2bb26c;
  #L2bb25e.  v6:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb262.  v1:= (`long`) v5 @kind i2l;
  #L2bb264.  call temp:= `o`(v6, v1) @signature `Lokio/e;.o:(J)Lokio/f;` @kind interface;
  #L2bb26a.  v6:= temp @kind object;
  #L2bb26c.  call `j`(v4, v7, v0, v6) @signature `Lie/h$b;.j:(ILie/b;Lokio/f;)V` @kind interface;
  #L2bb272.  return @kind void;
  #L2bb274.  v4:= new `java.lang.Object`[v6];
  #L2bb278.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb27e.  v5:= temp @kind object;
  #L2bb280.  v4[v1]:= v5 @kind object;
  #L2bb284.  v5:= "TYPE_GOAWAY unexpected error code: %d" @kind object;
  #L2bb288.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb28e.  v4:= temp @kind object;
  #L2bb290.  throw v4;
  #L2bb292.  v4:= new `java.lang.Object`[v1];
  #L2bb296.  v5:= "TYPE_GOAWAY streamId != 0" @kind object;
  #L2bb29a.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb2a0.  v4:= temp @kind object;
  #L2bb2a2.  throw v4;
  #L2bb2a4.  v4:= new `java.lang.Object`[v6];
  #L2bb2a8.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb2ae.  v5:= temp @kind object;
  #L2bb2b0.  v4[v1]:= v5 @kind object;
  #L2bb2b4.  v5:= "TYPE_GOAWAY length < 8: %s" @kind object;
  #L2bb2b8.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb2be.  v4:= temp @kind object;
  #L2bb2c0.  throw v4;
}
procedure `java.util.List` `v`(`ie.h` v1 @kind this, `int` v2 , `short` v3 , `byte` v4 , `int` v5 ) @signature `Lie/h;.v:(ISBI)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bb00c.  v0:= v1.`ie.h.h` @type ^`ie.h$a` @kind object;
  #L2bb010.  v0.`ie.h$a.k` @type ^`int` := v2;
  #L2bb014.  v0.`ie.h$a.h` @type ^`int` := v2;
  #L2bb018.  v0.`ie.h$a.l` @type ^`short` := v3 @kind char;
  #L2bb01c.  v0.`ie.h$a.i` @type ^`byte` := v4 @kind byte;
  #L2bb020.  v0.`ie.h$a.j` @type ^`int` := v5;
  #L2bb024.  v2:= v1.`ie.h.j` @type ^`ie.d$a` @kind object;
  #L2bb028.  call `k`(v2) @signature `Lie/d$a;.k:()V` @kind virtual;
  #L2bb02e.  v2:= v1.`ie.h.j` @type ^`ie.d$a` @kind object;
  #L2bb032.  call temp:= `e`(v2) @signature `Lie/d$a;.e:()Ljava/util/List;` @kind virtual;
  #L2bb038.  v2:= temp @kind object;
  #L2bb03a.  return v2 @kind object;
}
procedure `void` `w`(`ie.h` v3 @kind this, `ie.h$b` v4 @kind object, `int` v5 , `byte` v6 , `int` v7 ) @signature `Lie/h;.w:(Lie/h$b;IBI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2bb2d4.  v0:= 0I;
  #L2bb2d6.  if v7 == 0 then goto L2bb32e;
  #L2bb2da.  v1:= v6 ^& 1;
  #L2bb2de.  if v1 == 0 then goto L2bb2e6;
  #L2bb2e2.  v1:= 1I;
  #L2bb2e4.  goto L2bb2e8;
  #L2bb2e6.  v1:= 0I;
  #L2bb2e8.  v2:= v6 ^& 8;
  #L2bb2ec.  if v2 == 0 then goto L2bb302;
  #L2bb2f0.  v0:= v3.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb2f4.  call temp:= `readByte`(v0) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bb2fa.  v0:= temp;
  #L2bb2fc.  v0:= v0 ^& 255;
  #L2bb300.  v0:= (`short`) v0 @kind i2s;
  #L2bb302.  v2:= v6 ^& 32;
  #L2bb306.  if v2 == 0 then goto L2bb314;
  #L2bb30a.  call `J`(v3, v4, v7) @signature `Lie/h;.J:(Lie/h$b;I)V` @kind direct;
  #L2bb310.  v5:= v5 + -5;
  #L2bb314.  call temp:= `e`(v5, v6, v0) @signature `Lie/h;.e:(IBS)I` @kind static;
  #L2bb31a.  v5:= temp;
  #L2bb31c.  call temp:= `v`(v3, v5, v0, v6, v7) @signature `Lie/h;.v:(ISBI)Ljava/util/List;` @kind direct;
  #L2bb322.  v5:= temp @kind object;
  #L2bb324.  v6:= -1I;
  #L2bb326.  call `c`(v4, v1, v7, v6, v5) @signature `Lie/h$b;.c:(ZIILjava/util/List;)V` @kind interface;
  #L2bb32c.  return @kind void;
  #L2bb32e.  v4:= new `java.lang.Object`[v0];
  #L2bb332.  v5:= "PROTOCOL_ERROR: TYPE_HEADERS streamId == 0" @kind object;
  #L2bb336.  call temp:= `d`(v5, v4) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb33c.  v4:= temp @kind object;
  #L2bb33e.  throw v4;
}
procedure `int` `y`(`okio.e` v2 @kind object) @signature `Lie/h;.y:(Lokio/e;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2bafc8.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bafce.  v0:= temp;
  #L2bafd0.  v0:= v0 ^& 255;
  #L2bafd4.  v0:= v0 ^< 16;
  #L2bafd8.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bafde.  v1:= temp;
  #L2bafe0.  v1:= v1 ^& 255;
  #L2bafe4.  v1:= v1 ^< 8;
  #L2bafe8.  v0:= v0 ^| v1 @kind int;
  #L2bafea.  call temp:= `readByte`(v2) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2baff0.  v2:= temp;
  #L2baff2.  v2:= v2 ^& 255;
  #L2baff6.  v2:= v2 ^| v0 @kind int;
  #L2baff8.  return v2;
}
procedure `void` `close`(`ie.h` v1 @kind this) @signature `Lie/h;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bb0b8.  v0:= v1.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb0bc.  call `close`(v0) @signature `Lokio/v;.close:()V` @kind interface;
  #L2bb0c2.  return @kind void;
}
procedure `boolean` `i`(`ie.h` v6 @kind this, `boolean` v7 , `ie.h$b` v8 @kind object) @signature `Lie/h;.i:(ZLie/h$b;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2badf8.  v0:= 0I;
  #L2badfa.  v1:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2badfe.  v2:= 9L;
  #L2bae02.  call `F0`(v1, v2) @signature `Lokio/e;.F0:(J)V` @kind interface;
  #L2bae08.  v1:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bae0c.  call temp:= `y`(v1) @signature `Lie/h;.y:(Lokio/e;)I` @kind static;
  #L2bae12.  v1:= temp;
  #L2bae14.  v2:= 1I;
  #L2bae16.  if v1 < 0 then goto L2baf02;
  #L2bae1a.  v3:= 16384I;
  #L2bae1e.  if v1 > v3 then goto L2baf02;
  #L2bae22.  v3:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bae26.  call temp:= `readByte`(v3) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bae2c.  v3:= temp;
  #L2bae2e.  v3:= v3 ^& 255;
  #L2bae32.  v3:= (`byte`) v3 @kind i2b;
  #L2bae34.  if v7 == 0 then goto L2bae5e;
  #L2bae38.  v7:= 4I;
  #L2bae3a.  if v3 != v7 then goto L2bae40;
  #L2bae3e.  goto L2bae5e;
  #L2bae40.  v7:= new `java.lang.Object`[v2];
  #L2bae44.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L2bae4a.  v8:= temp @kind object;
  #L2bae4c.  v7[v0]:= v8 @kind object;
  #L2bae50.  v8:= "Expected a SETTINGS frame but was %s" @kind object;
  #L2bae54.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bae5a.  v7:= temp @kind object;
  #L2bae5c.  throw v7;
  #L2bae5e.  v7:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bae62.  call temp:= `readByte`(v7) @signature `Lokio/e;.readByte:()B` @kind interface;
  #L2bae68.  v7:= temp;
  #L2bae6a.  v7:= v7 ^& 255;
  #L2bae6e.  v7:= (`byte`) v7 @kind i2b;
  #L2bae70.  v0:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bae74.  call temp:= `readInt`(v0) @signature `Lokio/e;.readInt:()I` @kind interface;
  #L2bae7a.  v0:= temp;
  #L2bae7c.  v4:= 2147483647I;
  #L2bae82.  v0:= v0 ^& v4 @kind int;
  #L2bae84.  v4:= `@@ie.h.k` @type ^`java.util.logging.Logger` @kind object;
  #L2bae88.  v5:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L2bae8c.  call temp:= `isLoggable`(v4, v5) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L2bae92.  v5:= temp;
  #L2bae94.  if v5 == 0 then goto L2baea6;
  #L2bae98.  call temp:= `b`(v2, v0, v1, v3, v7) @signature `Lie/e;.b:(ZIIBB)Ljava/lang/String;` @kind static;
  #L2bae9e.  v5:= temp @kind object;
  #L2baea0.  call `fine`(v4, v5) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L2baea6.  goto L2baf24;
  #L2baeac.  v7:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2baeb0.  v0:= (`long`) v1 @kind i2l;
  #L2baeb2.  call `h0`(v7, v0) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L2baeb8.  goto L2baf00;
  #L2baeba.  call `a0`(v6, v8, v1, v7, v0) @signature `Lie/h;.a0:(Lie/h$b;IBI)V` @kind direct;
  #L2baec0.  goto L2baf00;
  #L2baec2.  call `s`(v6, v8, v1, v7, v0) @signature `Lie/h;.s:(Lie/h$b;IBI)V` @kind direct;
  #L2baec8.  goto L2baf00;
  #L2baeca.  call `C`(v6, v8, v1, v7, v0) @signature `Lie/h;.C:(Lie/h$b;IBI)V` @kind direct;
  #L2baed0.  goto L2baf00;
  #L2baed2.  call `V`(v6, v8, v1, v7, v0) @signature `Lie/h;.V:(Lie/h$b;IBI)V` @kind direct;
  #L2baed8.  goto L2baf00;
  #L2baeda.  call `Z`(v6, v8, v1, v7, v0) @signature `Lie/h;.Z:(Lie/h$b;IBI)V` @kind direct;
  #L2baee0.  goto L2baf00;
  #L2baee2.  call `Y`(v6, v8, v1, v7, v0) @signature `Lie/h;.Y:(Lie/h$b;IBI)V` @kind direct;
  #L2baee8.  goto L2baf00;
  #L2baeea.  call `Q`(v6, v8, v1, v7, v0) @signature `Lie/h;.Q:(Lie/h$b;IBI)V` @kind direct;
  #L2baef0.  goto L2baf00;
  #L2baef2.  call `w`(v6, v8, v1, v7, v0) @signature `Lie/h;.w:(Lie/h$b;IBI)V` @kind direct;
  #L2baef8.  goto L2baf00;
  #L2baefa.  call `r`(v6, v8, v1, v7, v0) @signature `Lie/h;.r:(Lie/h$b;IBI)V` @kind direct;
  #L2baf00.  return v2;
  #L2baf02.  v7:= new `java.lang.Object`[v2];
  #L2baf06.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2baf0c.  v8:= temp @kind object;
  #L2baf0e.  v7[v0]:= v8 @kind object;
  #L2baf12.  v8:= "FRAME_SIZE_ERROR: %s" @kind object;
  #L2baf16.  call temp:= `d`(v8, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2baf1c.  v7:= temp @kind object;
  #L2baf1e.  throw v7;
  #L2baf20.  return v0;
  #L2baf22.  
  #L2baf24.  switch v3
                  | 0 => goto L2baefa
                  | 1 => goto L2baef2
                  | 2 => goto L2baeea
                  | 3 => goto L2baee2
                  | 4 => goto L2baeda
                  | 5 => goto L2baed2
                  | 6 => goto L2baeca
                  | 7 => goto L2baec2
                  | 8 => goto L2baeba
                  | else => goto L2baeac;
  catch `java.io.EOFException` @[L2badfa..L2bae08] goto L2baf20;
}
procedure `void` `k`(`ie.h` v6 @kind this, `ie.h$b` v7 @kind object) @signature `Lie/h;.k:(Lie/h$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bb0d4.  v0:= v6.`ie.h.i` @type ^`boolean` @kind boolean;
  #L2bb0d8.  v1:= 0I;
  #L2bb0da.  v2:= 1I;
  #L2bb0dc.  if v0 == 0 then goto L2bb100;
  #L2bb0e0.  call temp:= `i`(v6, v2, v7) @signature `Lie/h;.i:(ZLie/h$b;)Z` @kind virtual;
  #L2bb0e6.  v7:= temp;
  #L2bb0e8.  if v7 == 0 then goto L2bb0ee;
  #L2bb0ec.  goto L2bb15c;
  #L2bb0ee.  v7:= new `java.lang.Object`[v1];
  #L2bb0f2.  v0:= "Required SETTINGS preface not received" @kind object;
  #L2bb0f6.  call temp:= `d`(v0, v7) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb0fc.  v7:= temp @kind object;
  #L2bb0fe.  throw v7;
  #L2bb100.  v7:= v6.`ie.h.g` @type ^`okio.e` @kind object;
  #L2bb104.  v0:= `@@ie.e.a` @type ^`okio.f` @kind object;
  #L2bb108.  call temp:= `size`(v0) @signature `Lokio/f;.size:()I` @kind virtual;
  #L2bb10e.  v3:= temp;
  #L2bb110.  v3:= (`long`) v3 @kind i2l;
  #L2bb112.  call temp:= `o`(v7, v3) @signature `Lokio/e;.o:(J)Lokio/f;` @kind interface;
  #L2bb118.  v7:= temp @kind object;
  #L2bb11a.  v3:= `@@ie.h.k` @type ^`java.util.logging.Logger` @kind object;
  #L2bb11e.  v4:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L2bb122.  call temp:= `isLoggable`(v3, v4) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L2bb128.  v4:= temp;
  #L2bb12a.  if v4 == 0 then goto L2bb150;
  #L2bb12e.  v4:= new `java.lang.Object`[v2];
  #L2bb132.  call temp:= `hex`(v7) @signature `Lokio/f;.hex:()Ljava/lang/String;` @kind virtual;
  #L2bb138.  v5:= temp @kind object;
  #L2bb13a.  v4[v1]:= v5 @kind object;
  #L2bb13e.  v5:= "<< CONNECTION %s" @kind object;
  #L2bb142.  call temp:= `q`(v5, v4) @signature `Lee/e;.q:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2bb148.  v4:= temp @kind object;
  #L2bb14a.  call `fine`(v3, v4) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L2bb150.  call temp:= `equals`(v0, v7) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bb156.  v0:= temp;
  #L2bb158.  if v0 == 0 then goto L2bb15e;
  #L2bb15c.  return @kind void;
  #L2bb15e.  v0:= new `java.lang.Object`[v2];
  #L2bb162.  call temp:= `utf8`(v7) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2bb168.  v7:= temp @kind object;
  #L2bb16a.  v0[v1]:= v7 @kind object;
  #L2bb16e.  v7:= "Expected a connection header but was %s" @kind object;
  #L2bb172.  call temp:= `d`(v7, v0) @signature `Lie/e;.d:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L2bb178.  v7:= temp @kind object;
  #L2bb17a.  throw v7;
}
