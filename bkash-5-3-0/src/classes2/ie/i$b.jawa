record `ie.i$b` @kind class @AccessFlag FINAL extends `okio.v` @kind interface {
  `okio.c` `ie.i$b.g` @AccessFlag PRIVATE_FINAL;
  `okio.c` `ie.i$b.h` @AccessFlag PRIVATE_FINAL;
  `long` `ie.i$b.i` @AccessFlag PRIVATE_FINAL;
  `okhttp3.w` `ie.i$b.j` @AccessFlag PRIVATE;
  `boolean` `ie.i$b.k` @AccessFlag ;
  `boolean` `ie.i$b.l` @AccessFlag ;
  `ie.i` `ie.i$b.m` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lie/i$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2bbcb0.  return @kind void;
}
procedure `void` `<init>`(`ie.i$b` v0 @kind this, `ie.i` v1 @kind object, `long` v2 ) @signature `Lie/i$b;.<init>:(Lie/i;J)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2bbcc4.  v0.`ie.i$b.m` @type ^`ie.i` := v1 @kind object;
  #L2bbcc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bbcce.  v1:= new `okio.c`;
  #L2bbcd2.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L2bbcd8.  v0.`ie.i$b.g` @type ^`okio.c` := v1 @kind object;
  #L2bbcdc.  v1:= new `okio.c`;
  #L2bbce0.  call `<init>`(v1) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L2bbce6.  v0.`ie.i$b.h` @type ^`okio.c` := v1 @kind object;
  #L2bbcea.  v0.`ie.i$b.i` @type ^`long` := v2 @kind wide;
  #L2bbcee.  return @kind void;
}
procedure `okhttp3.w` `e`(`ie.i$b` v0 @kind object, `okhttp3.w` v1 @kind object) @signature `Lie/i$b;.e:(Lie/i$b;Lokhttp3/w;)Lokhttp3/w;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2bbc7c.  v0.`ie.i$b.j` @type ^`okhttp3.w` := v1 @kind object;
  #L2bbc80.  return v1 @kind object;
}
procedure `void` `k`(`ie.i$b` v1 @kind this, `long` v2 ) @signature `Lie/i$b;.k:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bbeb4.  v0:= v1.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbeb8.  v0:= v0.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bbebc.  call `S0`(v0, v2) @signature `Lie/f;.S0:(J)V` @kind virtual;
  #L2bbec2.  return @kind void;
}
procedure `void` `close`(`ie.i$b` v5 @kind this) @signature `Lie/i$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bbd00.  v0:= v5.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbd04.  @monitorenter v0
  #L2bbd06.  v1:= 1I;
  #L2bbd08.  v5.`ie.i$b.k` @type ^`boolean` := v1 @kind boolean;
  #L2bbd0c.  v1:= v5.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbd10.  call temp:= `u0`(v1) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbd16.  v1:= temp @kind wide;
  #L2bbd18.  v3:= v5.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbd1c.  call `e`(v3) @signature `Lokio/c;.e:()V` @kind virtual;
  #L2bbd22.  v3:= v5.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbd26.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2bbd2c.  @monitorexit v0
  #L2bbd2e.  v3:= 0L;
  #L2bbd32.  v0:= lcmp(v1, v3);
  #L2bbd36.  if v0 <= 0 then goto L2bbd40;
  #L2bbd3a.  call `k`(v5, v1) @signature `Lie/i$b;.k:(J)V` @kind direct;
  #L2bbd40.  v0:= v5.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbd44.  call `b`(v0) @signature `Lie/i;.b:()V` @kind virtual;
  #L2bbd4a.  return @kind void;
  #L2bbd4c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bbd4e.  @monitorexit v0
  #L2bbd50.  throw v1;
  catch `java.lang.Throwable` @[L2bbd08..L2bbd2e] goto L2bbd4c;
  catch `java.lang.Throwable` @[L2bbd4e..L2bbd50] goto L2bbd4c;
}
procedure `void` `i`(`ie.i$b` v11 @kind this, `okio.e` v12 @kind object, `long` v13 ) @signature `Lie/i$b;.i:(Lokio/e;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2bbd78.  v0:= 0L;
  #L2bbd7c.  v2:= lcmp(v13, v0);
  #L2bbd80.  if v2 <= 0 then goto L2bbe7a;
  #L2bbd84.  v2:= v11.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbd88.  @monitorenter v2
  #L2bbd8a.  v3:= v11.`ie.i$b.l` @type ^`boolean` @kind boolean;
  #L2bbd8e.  v4:= v11.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbd92.  call temp:= `u0`(v4) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbd98.  v4:= temp @kind wide;
  #L2bbd9a.  v4:= v4 + v13 @kind long;
  #L2bbd9c.  v6:= v11.`ie.i$b.i` @type ^`long` @kind wide;
  #L2bbda0.  v8:= 1I;
  #L2bbda2.  v9:= 0I;
  #L2bbda4.  v10:= lcmp(v4, v6);
  #L2bbda8.  if v10 <= 0 then goto L2bbdb0;
  #L2bbdac.  v4:= 1I;
  #L2bbdae.  goto L2bbdb2;
  #L2bbdb0.  v4:= 0I;
  #L2bbdb2.  @monitorexit v2
  #L2bbdb4.  if v4 == 0 then goto L2bbdce;
  #L2bbdb8.  call `h0`(v12, v13) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L2bbdbe.  v12:= v11.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbdc2.  v13:= `@@ie.b.FLOW_CONTROL_ERROR` @type ^`ie.b` @kind object;
  #L2bbdc6.  call `f`(v12, v13) @signature `Lie/i;.f:(Lie/b;)V` @kind virtual;
  #L2bbdcc.  return @kind void;
  #L2bbdce.  if v3 == 0 then goto L2bbdda;
  #L2bbdd2.  call `h0`(v12, v13) @signature `Lokio/e;.h0:(J)V` @kind interface;
  #L2bbdd8.  return @kind void;
  #L2bbdda.  v2:= v11.`ie.i$b.g` @type ^`okio.c` @kind object;
  #L2bbdde.  call temp:= `z0`(v12, v2, v13) @signature `Lokio/v;.z0:(Lokio/c;J)J` @kind interface;
  #L2bbde4.  v2:= temp @kind wide;
  #L2bbde6.  v4:= -1L;
  #L2bbdea.  v6:= lcmp(v2, v4);
  #L2bbdee.  if v6 == 0 then goto L2bbe68;
  #L2bbdf2.  v13:= v13 - v2 @kind long;
  #L2bbdf4.  v2:= v11.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbdf8.  @monitorenter v2
  #L2bbdfa.  v3:= v11.`ie.i$b.k` @type ^`boolean` @kind boolean;
  #L2bbdfe.  if v3 == 0 then goto L2bbe1a;
  #L2bbe02.  v3:= v11.`ie.i$b.g` @type ^`okio.c` @kind object;
  #L2bbe06.  call temp:= `u0`(v3) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbe0c.  v3:= temp @kind wide;
  #L2bbe0e.  v5:= v11.`ie.i$b.g` @type ^`okio.c` @kind object;
  #L2bbe12.  call `e`(v5) @signature `Lokio/c;.e:()V` @kind virtual;
  #L2bbe18.  goto L2bbe50;
  #L2bbe1a.  v3:= v11.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbe1e.  call temp:= `u0`(v3) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbe24.  v3:= temp @kind wide;
  #L2bbe26.  v5:= lcmp(v3, v0);
  #L2bbe2a.  if v5 != 0 then goto L2bbe30;
  #L2bbe2e.  goto L2bbe32;
  #L2bbe30.  v8:= 0I;
  #L2bbe32.  v3:= v11.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbe36.  v4:= v11.`ie.i$b.g` @type ^`okio.c` @kind object;
  #L2bbe3a.  call temp:= `T0`(v3, v4) @signature `Lokio/c;.T0:(Lokio/v;)J` @kind virtual;
  #L2bbe40.  if v8 == 0 then goto L2bbe4e;
  #L2bbe44.  v3:= v11.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbe48.  call `notifyAll`(v3) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L2bbe4e.  v3:= v0 @kind wide;
  #L2bbe50.  @monitorexit v2
  #L2bbe52.  v2:= lcmp(v3, v0);
  #L2bbe56.  if v2 <= 0 then goto L2bbd78;
  #L2bbe5a.  call `k`(v11, v3) @signature `Lie/i$b;.k:(J)V` @kind direct;
  #L2bbe60.  goto L2bbd78;
  #L2bbe62.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bbe64.  @monitorexit v2
  #L2bbe66.  throw v12;
  #L2bbe68.  v12:= new `java.io.EOFException`;
  #L2bbe6c.  call `<init>`(v12) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L2bbe72.  throw v12;
  #L2bbe74.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bbe76.  @monitorexit v2
  #L2bbe78.  throw v12;
  #L2bbe7a.  return @kind void;
  catch `java.lang.Throwable` @[L2bbd8a..L2bbdb4] goto L2bbe74;
  catch `java.lang.Throwable` @[L2bbdfa..L2bbe52] goto L2bbe62;
  catch `java.lang.Throwable` @[L2bbe64..L2bbe66] goto L2bbe62;
  catch `java.lang.Throwable` @[L2bbe76..L2bbe78] goto L2bbe74;
}
procedure `okio.w` `timeout`(`ie.i$b` v1 @kind this) @signature `Lie/i$b;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bbc94.  v0:= v1.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbc98.  v0:= v0.`ie.i.i` @type ^`ie.i$c` @kind object;
  #L2bbc9c.  return v0 @kind object;
}
procedure `long` `z0`(`ie.i$b` v10 @kind this, `okio.c` v11 @kind object, `long` v12 ) @signature `Lie/i$b;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2bbabc.  v0:= 0L;
  #L2bbac0.  v2:= lcmp(v12, v0);
  #L2bbac4.  if v2 < 0 then goto L2bbc0c;
  #L2bbac8.  v2:= 0I;
  #L2bbaca.  v3:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbace.  @monitorenter v3
  #L2bbad0.  v4:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbad4.  v4:= v4.`ie.i.i` @type ^`ie.i$c` @kind object;
  #L2bbad8.  call `k`(v4) @signature `Lokio/a;.k:()V` @kind virtual;
  #L2bbade.  v4:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbae2.  v5:= v4.`ie.i.k` @type ^`ie.b` @kind object;
  #L2bbae6.  if v5 == 0 then goto L2bbb06;
  #L2bbaea.  v2:= v4.`ie.i.l` @type ^`java.io.IOException` @kind object;
  #L2bbaee.  if v2 == 0 then goto L2bbaf4;
  #L2bbaf2.  goto L2bbb06;
  #L2bbaf4.  v2:= new `ie.n`;
  #L2bbaf8.  v4:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbafc.  v4:= v4.`ie.i.k` @type ^`ie.b` @kind object;
  #L2bbb00.  call `<init>`(v2, v4) @signature `Lie/n;.<init>:(Lie/b;)V` @kind direct;
  #L2bbb06.  v4:= v10.`ie.i$b.k` @type ^`boolean` @kind boolean;
  #L2bbb0a.  if v4 != 0 then goto L2bbbe4;
  #L2bbb0e.  v4:= v10.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbb12.  call temp:= `u0`(v4) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbb18.  v4:= temp @kind wide;
  #L2bbb1a.  v6:= -1L;
  #L2bbb1e.  v8:= lcmp(v4, v0);
  #L2bbb22.  if v8 <= 0 then goto L2bbb92;
  #L2bbb26.  v4:= v10.`ie.i$b.h` @type ^`okio.c` @kind object;
  #L2bbb2a.  call temp:= `u0`(v4) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L2bbb30.  v8:= temp @kind wide;
  #L2bbb32.  call temp:= `min`(v12, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2bbb38.  v12:= temp @kind wide;
  #L2bbb3a.  call temp:= `z0`(v4, v11, v12) @signature `Lokio/c;.z0:(Lokio/c;J)J` @kind virtual;
  #L2bbb40.  v11:= temp @kind wide;
  #L2bbb42.  v13:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbb46.  v4:= v13.`ie.i.a` @type ^`long` @kind wide;
  #L2bbb4a.  v4:= v4 + v11 @kind long;
  #L2bbb4c.  v13.`ie.i.a` @type ^`long` := v4 @kind wide;
  #L2bbb50.  if v2 != 0 then goto L2bbbbc;
  #L2bbb54.  v13:= v13.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bbb58.  v13:= v13.`ie.f.y` @type ^`ie.m` @kind object;
  #L2bbb5c.  call temp:= `d`(v13) @signature `Lie/m;.d:()I` @kind virtual;
  #L2bbb62.  v13:= temp;
  #L2bbb64.  v13:= v13 / 2;
  #L2bbb68.  v8:= (`long`) v13 @kind i2l;
  #L2bbb6a.  v13:= lcmp(v4, v8);
  #L2bbb6e.  if v13 < 0 then goto L2bbbbc;
  #L2bbb72.  v13:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbb76.  v4:= v13.`ie.i.d` @type ^`ie.f` @kind object;
  #L2bbb7a.  v5:= v13.`ie.i.c` @type ^`int`;
  #L2bbb7e.  v8:= v13.`ie.i.a` @type ^`long` @kind wide;
  #L2bbb82.  call `Y0`(v4, v5, v8) @signature `Lie/f;.Y0:(IJ)V` @kind virtual;
  #L2bbb88.  v13:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbb8c.  v13.`ie.i.a` @type ^`long` := v0 @kind wide;
  #L2bbb90.  goto L2bbbbc;
  #L2bbb92.  v4:= v10.`ie.i$b.l` @type ^`boolean` @kind boolean;
  #L2bbb96.  if v4 != 0 then goto L2bbbba;
  #L2bbb9a.  if v2 != 0 then goto L2bbbba;
  #L2bbb9e.  v2:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbba2.  call `q`(v2) @signature `Lie/i;.q:()V` @kind virtual;
  #L2bbba8.  v2:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbbac.  v2:= v2.`ie.i.i` @type ^`ie.i$c` @kind object;
  #L2bbbb0.  call `u`(v2) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bbbb6.  @monitorexit v3
  #L2bbbb8.  goto L2bbac8;
  #L2bbbba.  v11:= v6 @kind wide;
  #L2bbbbc.  v13:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbbc0.  v13:= v13.`ie.i.i` @type ^`ie.i$c` @kind object;
  #L2bbbc4.  call `u`(v13) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bbbca.  @monitorexit v3
  #L2bbbcc.  v13:= lcmp(v11, v6);
  #L2bbbd0.  if v13 == 0 then goto L2bbbdc;
  #L2bbbd4.  call `k`(v10, v11) @signature `Lie/i$b;.k:(J)V` @kind direct;
  #L2bbbda.  return v11 @kind wide;
  #L2bbbdc.  if v2 != 0 then goto L2bbbe2;
  #L2bbbe0.  return v6 @kind wide;
  #L2bbbe2.  throw v2;
  #L2bbbe4.  v11:= new `java.io.IOException`;
  #L2bbbe8.  v12:= "stream closed" @kind object;
  #L2bbbec.  call `<init>`(v11, v12) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bbbf2.  throw v11;
  #L2bbbf4.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bbbf6.  v12:= v10.`ie.i$b.m` @type ^`ie.i` @kind object;
  #L2bbbfa.  v12:= v12.`ie.i.i` @type ^`ie.i$c` @kind object;
  #L2bbbfe.  call `u`(v12) @signature `Lie/i$c;.u:()V` @kind virtual;
  #L2bbc04.  throw v11;
  #L2bbc06.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2bbc08.  @monitorexit v3
  #L2bbc0a.  throw v11;
  #L2bbc0c.  v11:= new `java.lang.IllegalArgumentException`;
  #L2bbc10.  v0:= new `java.lang.StringBuilder`;
  #L2bbc14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bbc1a.  v1:= "byteCount < 0: " @kind object;
  #L2bbc1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbc24.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bbc2a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bbc30.  v12:= temp @kind object;
  #L2bbc32.  call `<init>`(v11, v12) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bbc38.  throw v11;
  catch `java.lang.Throwable` @[L2bbad0..L2bbade] goto L2bbc06;
  catch `java.lang.Throwable` @[L2bbade..L2bbba8] goto L2bbbf4;
  catch `java.lang.Throwable` @[L2bbba8..L2bbbcc] goto L2bbc06;
  catch `java.lang.Throwable` @[L2bbbe4..L2bbbf4] goto L2bbbf4;
  catch `java.lang.Throwable` @[L2bbbf6..L2bbc0a] goto L2bbc06;
}
