record `s9.a` @kind class @AccessFlag PUBLIC {
}
global `java.util.TimeZone` `@@s9.a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ls9/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L376d90.  v0:= "UTC" @kind object;
  #L376d94.  call temp:= `getTimeZone`(v0) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L376d9a.  v0:= temp @kind object;
  #L376d9c.  `@@s9.a.a` @type ^`java.util.TimeZone` := v0 @kind object;
  #L376da0.  return @kind void;
}
procedure `boolean` `a`(`java.lang.String` v1 @kind object, `int` v2 , `char` v3 ) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3767b0.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3767b6.  v0:= temp;
  #L3767b8.  if v2 >= v0 then goto L3767cc;
  #L3767bc.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3767c2.  v1:= temp;
  #L3767c4.  if v1 != v3 then goto L3767cc;
  #L3767c8.  v1:= 1I;
  #L3767ca.  goto L3767ce;
  #L3767cc.  v1:= 0I;
  #L3767ce.  return v1;
}
procedure `int` `b`(`java.lang.String` v2 @kind object, `int` v3 ) @signature `Ls9/a;.b:(Ljava/lang/String;I)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3767e0.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3767e6.  v0:= temp;
  #L3767e8.  if v3 >= v0 then goto L37680e;
  #L3767ec.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3767f2.  v0:= temp;
  #L3767f4.  v1:= 48I;
  #L3767f8.  if v0 < v1 then goto L37680c;
  #L3767fc.  v1:= 57I;
  #L376800.  if v0 <= v1 then goto L376806;
  #L376804.  goto L37680c;
  #L376806.  v3:= v3 + 1;
  #L37680a.  goto L3767e0;
  #L37680c.  return v3;
  #L37680e.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376814.  v2:= temp;
  #L376816.  return v2;
}
procedure `java.util.Date` `c`(`java.lang.String` v17 @kind object, `java.text.ParsePosition` v18 @kind object) @signature `Ls9/a;.c:(Ljava/lang/String;Ljava/text/ParsePosition;)Ljava/util/Date;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L376914.  v1:= v17 @kind object;
  #L376918.  v2:= v18 @kind object;
  #L37691c.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L376922.  v0:= temp;
  #L376924.  v3:= v0 + 4;
  #L376928.  call temp:= `d`(v1, v0, v3) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L37692e.  v0:= temp;
  #L376930.  v4:= 45I;
  #L376934.  call temp:= `a`(v1, v3, v4) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L37693a.  v5:= temp;
  #L37693c.  if v5 == 0 then goto L376944;
  #L376940.  v3:= v3 + 1;
  #L376944.  v5:= v3 + 2;
  #L376948.  call temp:= `d`(v1, v3, v5) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L37694e.  v3:= temp;
  #L376950.  call temp:= `a`(v1, v5, v4) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L376956.  v6:= temp;
  #L376958.  if v6 == 0 then goto L376960;
  #L37695c.  v5:= v5 + 1;
  #L376960.  v6:= v5 + 2;
  #L376964.  call temp:= `d`(v1, v5, v6) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L37696a.  v5:= temp;
  #L37696c.  v7:= 84I;
  #L376970.  call temp:= `a`(v1, v6, v7) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L376976.  v7:= temp;
  #L376978.  v8:= 1I;
  #L37697a.  if v7 != 0 then goto L3769a6;
  #L37697e.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376984.  v9:= temp;
  #L376986.  if v9 > v6 then goto L3769a6;
  #L37698a.  v4:= new `java.util.GregorianCalendar`;
  #L37698e.  v3:= v3 - v8 @kind int;
  #L376990.  call `<init>`(v4, v0, v3, v5) @signature `Ljava/util/GregorianCalendar;.<init>:(III)V` @kind direct;
  #L376996.  call `setIndex`(v2, v6) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L37699c.  call temp:= `getTime`(v4) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L3769a2.  v0:= temp @kind object;
  #L3769a4.  return v0 @kind object;
  #L3769a6.  v9:= 43I;
  #L3769aa.  v10:= 90I;
  #L3769ae.  v12:= 2I;
  #L3769b0.  if v7 == 0 then goto L376a9e;
  #L3769b4.  v6:= v6 + 1;
  #L3769b8.  v7:= v6 + 2;
  #L3769bc.  call temp:= `d`(v1, v6, v7) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L3769c2.  v6:= temp;
  #L3769c4.  v13:= 58I;
  #L3769c8.  call temp:= `a`(v1, v7, v13) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L3769ce.  v14:= temp;
  #L3769d0.  if v14 == 0 then goto L3769d8;
  #L3769d4.  v7:= v7 + 1;
  #L3769d8.  v14:= v7 + 2;
  #L3769dc.  call temp:= `d`(v1, v7, v14) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L3769e2.  v7:= temp;
  #L3769e4.  call temp:= `a`(v1, v14, v13) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L3769ea.  v13:= temp;
  #L3769ec.  if v13 == 0 then goto L3769f4;
  #L3769f0.  v14:= v14 + 1;
  #L3769f4.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3769fa.  v13:= temp;
  #L3769fc.  if v13 <= v14 then goto L376a94;
  #L376a00.  call temp:= `charAt`(v1, v14) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L376a06.  v13:= temp;
  #L376a08.  if v13 == v10 then goto L376a94;
  #L376a0c.  if v13 == v9 then goto L376a94;
  #L376a10.  if v13 == v4 then goto L376a94;
  #L376a14.  v13:= v14 + 2;
  #L376a18.  call temp:= `d`(v1, v14, v13) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L376a1e.  v14:= temp;
  #L376a20.  v15:= 59I;
  #L376a24.  if v14 <= v15 then goto L376a34;
  #L376a28.  v15:= 63I;
  #L376a2c.  if v14 >= v15 then goto L376a34;
  #L376a30.  v14:= 59I;
  #L376a34.  v15:= 46I;
  #L376a38.  call temp:= `a`(v1, v13, v15) @signature `Ls9/a;.a:(Ljava/lang/String;IC)Z` @kind static;
  #L376a3e.  v15:= temp;
  #L376a40.  if v15 == 0 then goto L376a8a;
  #L376a44.  v13:= v13 + 1;
  #L376a48.  v15:= v13 + 1;
  #L376a4c.  call temp:= `b`(v1, v15) @signature `Ls9/a;.b:(Ljava/lang/String;I)I` @kind static;
  #L376a52.  v15:= temp;
  #L376a54.  v11:= v13 + 3;
  #L376a58.  call temp:= `min`(v15, v11) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L376a5e.  v11:= temp;
  #L376a60.  call temp:= `d`(v1, v13, v11) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @kind static;
  #L376a66.  v16:= temp;
  #L376a68.  v11:= v11 - v13 @kind int;
  #L376a6a.  if v11 == v8 then goto L376a7a;
  #L376a6e.  if v11 == v12 then goto L376a74;
  #L376a72.  goto L376a7e;
  #L376a74.  v16:= v16 * 10;
  #L376a78.  goto L376a7e;
  #L376a7a.  v16:= v16 * 100;
  #L376a7e.  v11:= v7;
  #L376a80.  v13:= v16;
  #L376a84.  v7:= v6;
  #L376a86.  v6:= v15;
  #L376a88.  goto L376aa6;
  #L376a8a.  v11:= v7;
  #L376a8c.  v7:= v6;
  #L376a8e.  v6:= v13;
  #L376a90.  v13:= 0I;
  #L376a92.  goto L376aa6;
  #L376a94.  v11:= v7;
  #L376a96.  v13:= 0I;
  #L376a98.  v7:= v6;
  #L376a9a.  v6:= v14;
  #L376a9c.  goto L376aa4;
  #L376a9e.  v7:= 0I;
  #L376aa0.  v11:= 0I;
  #L376aa2.  v13:= 0I;
  #L376aa4.  v14:= 0I;
  #L376aa6.  call temp:= `length`(v17) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376aac.  v15:= temp;
  #L376aae.  if v15 <= v6 then goto L376c7c;
  #L376ab2.  call temp:= `charAt`(v1, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L376ab8.  v15:= temp;
  #L376aba.  v12:= 5I;
  #L376abc.  if v15 != v10 then goto L376aca;
  #L376ac0.  v4:= `@@s9.a.a` @type ^`java.util.TimeZone` @kind object;
  #L376ac4.  v6:= v6 + v8 @kind int;
  #L376ac6.  goto L376c1a;
  #L376aca.  if v15 == v9 then goto L376b0c;
  #L376ace.  if v15 != v4 then goto L376ad4;
  #L376ad2.  goto L376b0c;
  #L376ad4.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L376ad8.  v3:= new `java.lang.StringBuilder`;
  #L376adc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376ae2.  v4:= "Invalid time zone indicator '" @kind object;
  #L376ae6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376aec.  call temp:= `append`(v3, v15) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L376af2.  v4:= "'" @kind object;
  #L376af6.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376afc.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376b02.  v3:= temp @kind object;
  #L376b04.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L376b0a.  throw v0;
  #L376b0c.  call temp:= `substring`(v1, v6) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L376b12.  v4:= temp @kind object;
  #L376b14.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376b1a.  v9:= temp;
  #L376b1c.  if v9 < v12 then goto L376b22;
  #L376b20.  goto L376b44;
  #L376b22.  v9:= new `java.lang.StringBuilder`;
  #L376b26.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376b2c.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376b32.  v4:= "00" @kind object;
  #L376b36.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376b3c.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376b42.  v4:= temp @kind object;
  #L376b44.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376b4a.  v9:= temp;
  #L376b4c.  v6:= v6 + v9 @kind int;
  #L376b4e.  v9:= "+0000" @kind object;
  #L376b52.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376b58.  v9:= temp;
  #L376b5a.  if v9 != 0 then goto L376c16;
  #L376b5e.  v9:= "+00:00" @kind object;
  #L376b62.  call temp:= `equals`(v9, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376b68.  v9:= temp;
  #L376b6a.  if v9 == 0 then goto L376b70;
  #L376b6e.  goto L376c16;
  #L376b70.  v9:= new `java.lang.StringBuilder`;
  #L376b74.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376b7a.  v10:= "GMT" @kind object;
  #L376b7e.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376b84.  call temp:= `append`(v9, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376b8a.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376b90.  v4:= temp @kind object;
  #L376b92.  call temp:= `getTimeZone`(v4) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L376b98.  v9:= temp @kind object;
  #L376b9a.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L376ba0.  v10:= temp @kind object;
  #L376ba2.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376ba8.  v15:= temp;
  #L376baa.  if v15 != 0 then goto L376c12;
  #L376bae.  v15:= ":" @kind object;
  #L376bb2.  v12:= "" @kind object;
  #L376bb6.  call temp:= `replace`(v10, v15, v12) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L376bbc.  v10:= temp @kind object;
  #L376bbe.  call temp:= `equals`(v10, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L376bc4.  v10:= temp;
  #L376bc6.  if v10 == 0 then goto L376bcc;
  #L376bca.  goto L376c12;
  #L376bcc.  v0:= new `java.lang.IndexOutOfBoundsException`;
  #L376bd0.  v3:= new `java.lang.StringBuilder`;
  #L376bd4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376bda.  v5:= "Mismatching time zone indicator: " @kind object;
  #L376bde.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376be4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376bea.  v4:= " given, resolves to " @kind object;
  #L376bee.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376bf4.  call temp:= `getID`(v9) @signature `Ljava/util/TimeZone;.getID:()Ljava/lang/String;` @kind virtual;
  #L376bfa.  v4:= temp @kind object;
  #L376bfc.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376c02.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376c08.  v3:= temp @kind object;
  #L376c0a.  call `<init>`(v0, v3) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L376c10.  throw v0;
  #L376c12.  v4:= v9 @kind object;
  #L376c14.  goto L376c1a;
  #L376c16.  v4:= `@@s9.a.a` @type ^`java.util.TimeZone` @kind object;
  #L376c1a.  v9:= new `java.util.GregorianCalendar`;
  #L376c1e.  call `<init>`(v9, v4) @signature `Ljava/util/GregorianCalendar;.<init>:(Ljava/util/TimeZone;)V` @kind direct;
  #L376c24.  v4:= 0I;
  #L376c26.  call `setLenient`(v9, v4) @signature `Ljava/util/Calendar;.setLenient:(Z)V` @kind virtual;
  #L376c2c.  call `set`(v9, v8, v0) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c32.  v3:= v3 - v8 @kind int;
  #L376c34.  v0:= 2I;
  #L376c36.  call `set`(v9, v0, v3) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c3c.  v0:= 5I;
  #L376c3e.  call `set`(v9, v0, v5) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c44.  v0:= 11I;
  #L376c48.  call `set`(v9, v0, v7) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c4e.  v0:= 12I;
  #L376c52.  call `set`(v9, v0, v11) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c58.  v0:= 13I;
  #L376c5c.  call `set`(v9, v0, v14) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c62.  v0:= 14I;
  #L376c66.  call `set`(v9, v0, v13) @signature `Ljava/util/Calendar;.set:(II)V` @kind virtual;
  #L376c6c.  call `setIndex`(v2, v6) @signature `Ljava/text/ParsePosition;.setIndex:(I)V` @kind virtual;
  #L376c72.  call temp:= `getTime`(v9) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L376c78.  v0:= temp @kind object;
  #L376c7a.  return v0 @kind object;
  #L376c7c.  v0:= new `java.lang.IllegalArgumentException`;
  #L376c80.  v3:= "No time zone indicator" @kind object;
  #L376c84.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L376c8a.  throw v0;
  #L376c8c.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L376c8e.  goto L376c96;
  #L376c90.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L376c92.  goto L376c96;
  #L376c94.  v0:= Exception @type ^`java.lang.IndexOutOfBoundsException` @kind object;
  #L376c96.  if v1 != 0 then goto L376c9e;
  #L376c9a.  v1:= 0I;
  #L376c9c.  goto L376cc6;
  #L376c9e.  v3:= new `java.lang.StringBuilder`;
  #L376ca2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376ca8.  v4:= 34I;
  #L376cac.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L376cb2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376cb8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L376cbe.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376cc4.  v1:= temp @kind object;
  #L376cc6.  call temp:= `getMessage`(v0) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L376ccc.  v3:= temp @kind object;
  #L376cce.  if v3 == 0 then goto L376cde;
  #L376cd2.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L376cd8.  v4:= temp;
  #L376cda.  if v4 == 0 then goto L376d1a;
  #L376cde.  v3:= new `java.lang.StringBuilder`;
  #L376ce2.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376ce8.  v4:= "(" @kind object;
  #L376cec.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376cf2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L376cf8.  v4:= temp @kind object;
  #L376cfa.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L376d00.  v4:= temp @kind object;
  #L376d02.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d08.  v4:= ")" @kind object;
  #L376d0c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d12.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376d18.  v3:= temp @kind object;
  #L376d1a.  v4:= new `java.text.ParseException`;
  #L376d1e.  v5:= new `java.lang.StringBuilder`;
  #L376d22.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376d28.  v6:= "Failed to parse date [" @kind object;
  #L376d2c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d32.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d38.  v1:= "]: " @kind object;
  #L376d3c.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d42.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376d48.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L376d4e.  v1:= temp @kind object;
  #L376d50.  call temp:= `getIndex`(v18) @signature `Ljava/text/ParsePosition;.getIndex:()I` @kind virtual;
  #L376d56.  v2:= temp;
  #L376d58.  call `<init>`(v4, v1, v2) @signature `Ljava/text/ParseException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L376d5e.  call temp:= `initCause`(v4, v0) @signature `Ljava/text/ParseException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L376d64.  throw v4;
  catch `java.lang.IndexOutOfBoundsException` @[L37691c..L376c8c] goto L376c94;
  catch `java.lang.NumberFormatException` @[L37691c..L376c8c] goto L376c90;
  catch `java.lang.IllegalArgumentException` @[L37691c..L376c8c] goto L376c8c;
}
procedure `int` `d`(`java.lang.String` v5 @kind object, `int` v6 , `int` v7 ) @signature `Ls9/a;.d:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L376828.  if v6 < 0 then goto L3768f8;
  #L37682c.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L376832.  v0:= temp;
  #L376834.  if v7 > v0 then goto L3768f8;
  #L376838.  if v6 > v7 then goto L3768f8;
  #L37683c.  v0:= 0I;
  #L37683e.  v1:= "Invalid number: " @kind object;
  #L376842.  v2:= 10I;
  #L376846.  if v6 >= v7 then goto L376898;
  #L37684a.  v0:= v6 + 1;
  #L37684e.  call temp:= `charAt`(v5, v6) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L376854.  v3:= temp;
  #L376856.  call temp:= `digit`(v3, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L37685c.  v3:= temp;
  #L37685e.  if v3 < 0 then goto L376866;
  #L376862.  v3:= -v3 @kind int;
  #L376864.  goto L37689c;
  #L376866.  v0:= new `java.lang.NumberFormatException`;
  #L37686a.  v2:= new `java.lang.StringBuilder`;
  #L37686e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L376874.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37687a.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L376880.  v5:= temp @kind object;
  #L376882.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L376888.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37688e.  v5:= temp @kind object;
  #L376890.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L376896.  throw v0;
  #L376898.  v0:= v6;
  #L37689a.  v3:= 0I;
  #L37689c.  if v0 >= v7 then goto L3768f4;
  #L3768a0.  v4:= v0 + 1;
  #L3768a4.  call temp:= `charAt`(v5, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3768aa.  v0:= temp;
  #L3768ac.  call temp:= `digit`(v0, v2) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L3768b2.  v0:= temp;
  #L3768b4.  if v0 < 0 then goto L3768c2;
  #L3768b8.  v3:= v3 * 10;
  #L3768bc.  v3:= v3 - v0 @kind int;
  #L3768be.  v0:= v4;
  #L3768c0.  goto L37689c;
  #L3768c2.  v0:= new `java.lang.NumberFormatException`;
  #L3768c6.  v2:= new `java.lang.StringBuilder`;
  #L3768ca.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3768d0.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3768d6.  call temp:= `substring`(v5, v6, v7) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3768dc.  v5:= temp @kind object;
  #L3768de.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3768e4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3768ea.  v5:= temp @kind object;
  #L3768ec.  call `<init>`(v0, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3768f2.  throw v0;
  #L3768f4.  v5:= -v3 @kind int;
  #L3768f6.  return v5;
  #L3768f8.  v6:= new `java.lang.NumberFormatException`;
  #L3768fc.  call `<init>`(v6, v5) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L376902.  throw v6;
}
