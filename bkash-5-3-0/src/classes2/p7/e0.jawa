record `p7.e0` @kind class @AccessFlag FINAL extends `p7.j0` @kind interface {
  `java.util.concurrent.Executor` `p7.e0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `p7.e0.b` @AccessFlag PRIVATE_FINAL;
  `p7.g` `p7.e0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p7.e0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `p7.g` v3 @kind object) @signature `Lp7/e0;.<init>:(Ljava/util/concurrent/Executor;Lp7/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36a484.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a48a.  v0:= new `java.lang.Object`;
  #L36a48e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a494.  v1.`p7.e0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L36a498.  v1.`p7.e0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L36a49c.  v1.`p7.e0.c` @type ^`p7.g` := v3 @kind object;
  #L36a4a0.  return @kind void;
}
procedure `p7.g` `a`(`p7.e0` v0 @kind object) @signature `Lp7/e0;.a:(Lp7/e0;)Lp7/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36a46c.  v0:= v0.`p7.e0.c` @type ^`p7.g` @kind object;
  #L36a470.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`p7.e0` v0 @kind object) @signature `Lp7/e0;.b:(Lp7/e0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36a454.  v0:= v0.`p7.e0.b` @type ^`java.lang.Object` @kind object;
  #L36a458.  return v0 @kind object;
}
procedure `void` `d`(`p7.e0` v2 @kind this, `p7.l` v3 @kind object) @signature `Lp7/e0;.d:(Lp7/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a4e8.  call temp:= `s`(v3) @signature `Lp7/l;.s:()Z` @kind virtual;
  #L36a4ee.  v0:= temp;
  #L36a4f0.  if v0 != 0 then goto L36a530;
  #L36a4f4.  call temp:= `q`(v3) @signature `Lp7/l;.q:()Z` @kind virtual;
  #L36a4fa.  v0:= temp;
  #L36a4fc.  if v0 != 0 then goto L36a530;
  #L36a500.  v0:= v2.`p7.e0.b` @type ^`java.lang.Object` @kind object;
  #L36a504.  @monitorenter v0
  #L36a506.  v1:= v2.`p7.e0.c` @type ^`p7.g` @kind object;
  #L36a50a.  if v1 != 0 then goto L36a512;
  #L36a50e.  @monitorexit v0
  #L36a510.  return @kind void;
  #L36a512.  @monitorexit v0
  #L36a514.  v0:= v2.`p7.e0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36a518.  v1:= new `p7.d0`;
  #L36a51c.  call `<init>`(v1, v2, v3) @signature `Lp7/d0;.<init>:(Lp7/e0;Lp7/l;)V` @kind direct;
  #L36a522.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L36a528.  return @kind void;
  #L36a52a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a52c.  @monitorexit v0
  #L36a52e.  throw v3;
  #L36a530.  return @kind void;
  catch `java.lang.Throwable` @[L36a506..L36a514] goto L36a52a;
  catch `java.lang.Throwable` @[L36a52c..L36a52e] goto L36a52a;
}
procedure `void` `zzc`(`p7.e0` v2 @kind this) @signature `Lp7/e0;.zzc:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a4b4.  v0:= v2.`p7.e0.b` @type ^`java.lang.Object` @kind object;
  #L36a4b8.  @monitorenter v0
  #L36a4ba.  v1:= 0I;
  #L36a4bc.  v2.`p7.e0.c` @type ^`p7.g` := v1 @kind object;
  #L36a4c0.  @monitorexit v0
  #L36a4c2.  return @kind void;
  #L36a4c4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a4c6.  @monitorexit v0
  #L36a4c8.  throw v1;
  catch `java.lang.Throwable` @[L36a4bc..L36a4c8] goto L36a4c4;
}
