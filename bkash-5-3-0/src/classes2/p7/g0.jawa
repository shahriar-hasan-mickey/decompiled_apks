record `p7.g0` @kind class @AccessFlag FINAL extends `p7.j0` @kind interface {
  `java.util.concurrent.Executor` `p7.g0.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `p7.g0.b` @AccessFlag PRIVATE_FINAL;
  `p7.h` `p7.g0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p7.g0` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object, `p7.h` v3 @kind object) @signature `Lp7/g0;.<init>:(Ljava/util/concurrent/Executor;Lp7/h;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L36a608.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a60e.  v0:= new `java.lang.Object`;
  #L36a612.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a618.  v1.`p7.g0.b` @type ^`java.lang.Object` := v0 @kind object;
  #L36a61c.  v1.`p7.g0.a` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L36a620.  v1.`p7.g0.c` @type ^`p7.h` := v3 @kind object;
  #L36a624.  return @kind void;
}
procedure `p7.h` `a`(`p7.g0` v0 @kind object) @signature `Lp7/g0;.a:(Lp7/g0;)Lp7/h;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36a5f0.  v0:= v0.`p7.g0.c` @type ^`p7.h` @kind object;
  #L36a5f4.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`p7.g0` v0 @kind object) @signature `Lp7/g0;.b:(Lp7/g0;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36a5d8.  v0:= v0.`p7.g0.b` @type ^`java.lang.Object` @kind object;
  #L36a5dc.  return v0 @kind object;
}
procedure `void` `d`(`p7.g0` v2 @kind this, `p7.l` v3 @kind object) @signature `Lp7/g0;.d:(Lp7/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a66c.  call temp:= `s`(v3) @signature `Lp7/l;.s:()Z` @kind virtual;
  #L36a672.  v0:= temp;
  #L36a674.  if v0 == 0 then goto L36a6a8;
  #L36a678.  v0:= v2.`p7.g0.b` @type ^`java.lang.Object` @kind object;
  #L36a67c.  @monitorenter v0
  #L36a67e.  v1:= v2.`p7.g0.c` @type ^`p7.h` @kind object;
  #L36a682.  if v1 != 0 then goto L36a68a;
  #L36a686.  @monitorexit v0
  #L36a688.  return @kind void;
  #L36a68a.  @monitorexit v0
  #L36a68c.  v0:= v2.`p7.g0.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36a690.  v1:= new `p7.f0`;
  #L36a694.  call `<init>`(v1, v2, v3) @signature `Lp7/f0;.<init>:(Lp7/g0;Lp7/l;)V` @kind direct;
  #L36a69a.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L36a6a0.  return @kind void;
  #L36a6a2.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a6a4.  @monitorexit v0
  #L36a6a6.  throw v3;
  #L36a6a8.  return @kind void;
  catch `java.lang.Throwable` @[L36a67e..L36a68c] goto L36a6a2;
  catch `java.lang.Throwable` @[L36a6a4..L36a6a6] goto L36a6a2;
}
procedure `void` `zzc`(`p7.g0` v2 @kind this) @signature `Lp7/g0;.zzc:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a638.  v0:= v2.`p7.g0.b` @type ^`java.lang.Object` @kind object;
  #L36a63c.  @monitorenter v0
  #L36a63e.  v1:= 0I;
  #L36a640.  v2.`p7.g0.c` @type ^`p7.h` := v1 @kind object;
  #L36a644.  @monitorexit v0
  #L36a646.  return @kind void;
  #L36a648.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a64a.  @monitorexit v0
  #L36a64c.  throw v1;
  catch `java.lang.Throwable` @[L36a640..L36a64c] goto L36a648;
}
