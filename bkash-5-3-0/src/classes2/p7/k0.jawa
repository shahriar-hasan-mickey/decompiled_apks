record `p7.k0` @kind class @AccessFlag FINAL {
  `java.lang.Object` `p7.k0.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Queue` `p7.k0.b` @AccessFlag PRIVATE;
  `boolean` `p7.k0.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p7.k0` v1 @kind this) @signature `Lp7/k0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L36a89c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a8a2.  v0:= new `java.lang.Object`;
  #L36a8a6.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a8ac.  v1.`p7.k0.a` @type ^`java.lang.Object` := v0 @kind object;
  #L36a8b0.  return @kind void;
}
procedure `void` `a`(`p7.k0` v2 @kind this, `p7.j0` v3 @kind object) @signature `Lp7/k0;.a:(Lp7/j0;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a8c4.  v0:= v2.`p7.k0.a` @type ^`java.lang.Object` @kind object;
  #L36a8c8.  @monitorenter v0
  #L36a8ca.  v1:= v2.`p7.k0.b` @type ^`java.util.Queue` @kind object;
  #L36a8ce.  if v1 != 0 then goto L36a8e0;
  #L36a8d2.  v1:= new `java.util.ArrayDeque`;
  #L36a8d6.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L36a8dc.  v2.`p7.k0.b` @type ^`java.util.Queue` := v1 @kind object;
  #L36a8e0.  v1:= v2.`p7.k0.b` @type ^`java.util.Queue` @kind object;
  #L36a8e4.  call temp:= `add`(v1, v3) @signature `Ljava/util/Queue;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36a8ea.  @monitorexit v0
  #L36a8ec.  return @kind void;
  #L36a8ee.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a8f0.  @monitorexit v0
  #L36a8f2.  throw v3;
  catch `java.lang.Throwable` @[L36a8ca..L36a8f2] goto L36a8ee;
}
procedure `void` `b`(`p7.k0` v2 @kind this, `p7.l` v3 @kind object) @signature `Lp7/k0;.b:(Lp7/l;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36a910.  v0:= v2.`p7.k0.a` @type ^`java.lang.Object` @kind object;
  #L36a914.  @monitorenter v0
  #L36a916.  v1:= v2.`p7.k0.b` @type ^`java.util.Queue` @kind object;
  #L36a91a.  if v1 == 0 then goto L36a964;
  #L36a91e.  v1:= v2.`p7.k0.c` @type ^`boolean` @kind boolean;
  #L36a922.  if v1 == 0 then goto L36a928;
  #L36a926.  goto L36a964;
  #L36a928.  v1:= 1I;
  #L36a92a.  v2.`p7.k0.c` @type ^`boolean` := v1 @kind boolean;
  #L36a92e.  @monitorexit v0
  #L36a930.  v1:= v2.`p7.k0.a` @type ^`java.lang.Object` @kind object;
  #L36a934.  @monitorenter v1
  #L36a936.  v0:= v2.`p7.k0.b` @type ^`java.util.Queue` @kind object;
  #L36a93a.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L36a940.  v0:= temp @kind object;
  #L36a942.  v0:= (`p7.j0`) v0 @kind object;
  #L36a946.  if v0 != 0 then goto L36a954;
  #L36a94a.  v3:= 0I;
  #L36a94c.  v2.`p7.k0.c` @type ^`boolean` := v3 @kind boolean;
  #L36a950.  @monitorexit v1
  #L36a952.  return @kind void;
  #L36a954.  @monitorexit v1
  #L36a956.  call `d`(v0, v3) @signature `Lp7/j0;.d:(Lp7/l;)V` @kind interface;
  #L36a95c.  goto L36a930;
  #L36a95e.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a960.  @monitorexit v1
  #L36a962.  throw v3;
  #L36a964.  @monitorexit v0
  #L36a966.  return @kind void;
  #L36a968.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a96a.  @monitorexit v0
  #L36a96c.  throw v3;
  catch `java.lang.Throwable` @[L36a916..L36a930] goto L36a968;
  catch `java.lang.Throwable` @[L36a936..L36a956] goto L36a95e;
  catch `java.lang.Throwable` @[L36a960..L36a962] goto L36a95e;
  catch `java.lang.Throwable` @[L36a964..L36a96c] goto L36a968;
}
