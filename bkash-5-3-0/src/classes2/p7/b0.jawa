record `p7.b0` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `p7.l` `p7.b0.g` @AccessFlag FINAL_SYNTHETIC;
  `p7.c0` `p7.b0.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p7.b0` v0 @kind this, `p7.c0` v1 @kind object, `p7.l` v2 @kind object) @signature `Lp7/b0;.<init>:(Lp7/c0;Lp7/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36a268.  v0.`p7.b0.h` @type ^`p7.c0` := v1 @kind object;
  #L36a26c.  v0.`p7.b0.g` @type ^`p7.l` := v2 @kind object;
  #L36a270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a276.  return @kind void;
}
procedure `void` `run`(`p7.b0` v3 @kind this) @signature `Lp7/b0;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36a288.  v0:= v3.`p7.b0.h` @type ^`p7.c0` @kind object;
  #L36a28c.  call temp:= `b`(v0) @signature `Lp7/c0;.b:(Lp7/c0;)Ljava/lang/Object;` @kind static;
  #L36a292.  v0:= temp @kind object;
  #L36a294.  @monitorenter v0
  #L36a296.  v1:= v3.`p7.b0.h` @type ^`p7.c0` @kind object;
  #L36a29a.  call temp:= `a`(v1) @signature `Lp7/c0;.a:(Lp7/c0;)Lp7/f;` @kind static;
  #L36a2a0.  v2:= temp @kind object;
  #L36a2a2.  if v2 == 0 then goto L36a2b8;
  #L36a2a6.  call temp:= `a`(v1) @signature `Lp7/c0;.a:(Lp7/c0;)Lp7/f;` @kind static;
  #L36a2ac.  v1:= temp @kind object;
  #L36a2ae.  v2:= v3.`p7.b0.g` @type ^`p7.l` @kind object;
  #L36a2b2.  call `a`(v1, v2) @signature `Lp7/f;.a:(Lp7/l;)V` @kind interface;
  #L36a2b8.  @monitorexit v0
  #L36a2ba.  return @kind void;
  #L36a2bc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a2be.  @monitorexit v0
  #L36a2c0.  throw v1;
  catch `java.lang.Throwable` @[L36a296..L36a2c0] goto L36a2bc;
}
