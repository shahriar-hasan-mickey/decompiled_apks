record `p7.p0` @kind class @AccessFlag FINAL extends `p7.l` @kind class {
  `java.lang.Object` `p7.p0.a` @AccessFlag PRIVATE_FINAL;
  `p7.k0` `p7.p0.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `p7.p0.c` @AccessFlag PRIVATE;
  `boolean` `p7.p0.d` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.Object` `p7.p0.e` @AccessFlag PRIVATE;
  `java.lang.Exception` `p7.p0.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p7.p0` v1 @kind this) @signature `Lp7/p0;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L36b0d8.  call `<init>`(v1) @signature `Lp7/l;.<init>:()V` @kind direct;
  #L36b0de.  v0:= new `java.lang.Object`;
  #L36b0e2.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36b0e8.  v1.`p7.p0.a` @type ^`java.lang.Object` := v0 @kind object;
  #L36b0ec.  v0:= new `p7.k0`;
  #L36b0f0.  call `<init>`(v0) @signature `Lp7/k0;.<init>:()V` @kind direct;
  #L36b0f6.  v1.`p7.p0.b` @type ^`p7.k0` := v0 @kind object;
  #L36b0fa.  return @kind void;
}
procedure `void` `A`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.A:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L36b1b4.  v0:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36b1b8.  v1:= "Task is not yet complete" @kind object;
  #L36b1bc.  call `m`(v0, v1) @signature `Lcom/google/android/gms/common/internal/k;.m:(ZLjava/lang/Object;)V` @kind static;
  #L36b1c2.  return @kind void;
}
procedure `void` `B`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.B:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L36b1d4.  v0:= v2.`p7.p0.d` @type ^`boolean` @kind boolean;
  #L36b1d8.  if v0 != 0 then goto L36b1de;
  #L36b1dc.  return @kind void;
  #L36b1de.  v0:= new `java.util.concurrent.CancellationException`;
  #L36b1e2.  v1:= "Task is already canceled." @kind object;
  #L36b1e6.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36b1ec.  throw v0;
}
procedure `void` `C`(`p7.p0` v1 @kind this) @signature `Lp7/p0;.C:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L36b200.  v0:= v1.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36b204.  if v0 != 0 then goto L36b20a;
  #L36b208.  return @kind void;
  #L36b20a.  call temp:= `of`(v1) @signature `Lp7/d;.of:(Lp7/l;)Ljava/lang/IllegalStateException;` @kind static;
  #L36b210.  v0:= temp @kind object;
  #L36b212.  throw v0;
}
procedure `void` `D`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.D:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L36b224.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36b228.  @monitorenter v0
  #L36b22a.  v1:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36b22e.  if v1 != 0 then goto L36b236;
  #L36b232.  @monitorexit v0
  #L36b234.  return @kind void;
  #L36b236.  @monitorexit v0
  #L36b238.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b23c.  call `b`(v0, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36b242.  return @kind void;
  #L36b244.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36b246.  @monitorexit v0
  #L36b248.  throw v1;
  catch `java.lang.Throwable` @[L36b22a..L36b238] goto L36b244;
  catch `java.lang.Throwable` @[L36b246..L36b248] goto L36b244;
}
procedure `p7.l` `a`(`p7.p0` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `p7.e` v4 @kind object) @signature `Lp7/p0;.a:(Ljava/util/concurrent/Executor;Lp7/e;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ae1c.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36ae20.  v1:= new `p7.a0`;
  #L36ae24.  call `<init>`(v1, v3, v4) @signature `Lp7/a0;.<init>:(Ljava/util/concurrent/Executor;Lp7/e;)V` @kind direct;
  #L36ae2a.  call `a`(v0, v1) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36ae30.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36ae36.  return v2 @kind object;
}
procedure `p7.l` `b`(`p7.p0` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `p7.f` v4 @kind object) @signature `Lp7/p0;.b:(Ljava/util/concurrent/Executor;Lp7/f;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ae48.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36ae4c.  v1:= new `p7.c0`;
  #L36ae50.  call `<init>`(v1, v3, v4) @signature `Lp7/c0;.<init>:(Ljava/util/concurrent/Executor;Lp7/f;)V` @kind direct;
  #L36ae56.  call `a`(v0, v1) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36ae5c.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36ae62.  return v2 @kind object;
}
procedure `p7.l` `c`(`p7.p0` v3 @kind this, `p7.f` v4 @kind object) @signature `Lp7/p0;.c:(Lp7/f;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36ae74.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36ae78.  v1:= v3.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36ae7c.  v2:= new `p7.c0`;
  #L36ae80.  call `<init>`(v2, v0, v4) @signature `Lp7/c0;.<init>:(Ljava/util/concurrent/Executor;Lp7/f;)V` @kind direct;
  #L36ae86.  call `a`(v1, v2) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36ae8c.  call `D`(v3) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36ae92.  return v3 @kind object;
}
procedure `p7.l` `d`(`p7.p0` v2 @kind this, `android.app.Activity` v3 @kind object, `p7.g` v4 @kind object) @signature `Lp7/p0;.d:(Landroid/app/Activity;Lp7/g;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36aea4.  v0:= new `p7.e0`;
  #L36aea8.  v1:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36aeac.  call `<init>`(v0, v1, v4) @signature `Lp7/e0;.<init>:(Ljava/util/concurrent/Executor;Lp7/g;)V` @kind direct;
  #L36aeb2.  v4:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36aeb6.  call `a`(v4, v0) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36aebc.  call temp:= `l`(v3) @signature `Lp7/o0;.l:(Landroid/app/Activity;)Lp7/o0;` @kind static;
  #L36aec2.  v3:= temp @kind object;
  #L36aec4.  call `m`(v3, v0) @signature `Lp7/o0;.m:(Lp7/j0;)V` @kind virtual;
  #L36aeca.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36aed0.  return v2 @kind object;
}
procedure `p7.l` `e`(`p7.p0` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `p7.g` v4 @kind object) @signature `Lp7/p0;.e:(Ljava/util/concurrent/Executor;Lp7/g;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36aee4.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36aee8.  v1:= new `p7.e0`;
  #L36aeec.  call `<init>`(v1, v3, v4) @signature `Lp7/e0;.<init>:(Ljava/util/concurrent/Executor;Lp7/g;)V` @kind direct;
  #L36aef2.  call `a`(v0, v1) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36aef8.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36aefe.  return v2 @kind object;
}
procedure `p7.l` `f`(`p7.p0` v1 @kind this, `p7.g` v2 @kind object) @signature `Lp7/p0;.f:(Lp7/g;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L36af10.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36af14.  call temp:= `e`(v1, v0, v2) @signature `Lp7/p0;.e:(Ljava/util/concurrent/Executor;Lp7/g;)Lp7/l;` @kind virtual;
  #L36af1a.  return v1 @kind object;
}
procedure `p7.l` `g`(`p7.p0` v2 @kind this, `android.app.Activity` v3 @kind object, `p7.h` v4 @kind object) @signature `Lp7/p0;.g:(Landroid/app/Activity;Lp7/h;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36af2c.  v0:= new `p7.g0`;
  #L36af30.  v1:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36af34.  call `<init>`(v0, v1, v4) @signature `Lp7/g0;.<init>:(Ljava/util/concurrent/Executor;Lp7/h;)V` @kind direct;
  #L36af3a.  v4:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36af3e.  call `a`(v4, v0) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36af44.  call temp:= `l`(v3) @signature `Lp7/o0;.l:(Landroid/app/Activity;)Lp7/o0;` @kind static;
  #L36af4a.  v3:= temp @kind object;
  #L36af4c.  call `m`(v3, v0) @signature `Lp7/o0;.m:(Lp7/j0;)V` @kind virtual;
  #L36af52.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36af58.  return v2 @kind object;
}
procedure `p7.l` `h`(`p7.p0` v2 @kind this, `java.util.concurrent.Executor` v3 @kind object, `p7.h` v4 @kind object) @signature `Lp7/p0;.h:(Ljava/util/concurrent/Executor;Lp7/h;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36af6c.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36af70.  v1:= new `p7.g0`;
  #L36af74.  call `<init>`(v1, v3, v4) @signature `Lp7/g0;.<init>:(Ljava/util/concurrent/Executor;Lp7/h;)V` @kind direct;
  #L36af7a.  call `a`(v0, v1) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36af80.  call `D`(v2) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36af86.  return v2 @kind object;
}
procedure `p7.l` `i`(`p7.p0` v1 @kind this, `p7.h` v2 @kind object) @signature `Lp7/p0;.i:(Lp7/h;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L36af98.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36af9c.  call temp:= `h`(v1, v0, v2) @signature `Lp7/p0;.h:(Ljava/util/concurrent/Executor;Lp7/h;)Lp7/l;` @kind virtual;
  #L36afa2.  return v1 @kind object;
}
procedure `p7.l` `j`(`p7.p0` v3 @kind this, `java.util.concurrent.Executor` v4 @kind object, `p7.c` v5 @kind object) @signature `Lp7/p0;.j:(Ljava/util/concurrent/Executor;Lp7/c;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36afb4.  v0:= new `p7.p0`;
  #L36afb8.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L36afbe.  v1:= v3.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36afc2.  v2:= new `p7.w`;
  #L36afc6.  call `<init>`(v2, v4, v5, v0) @signature `Lp7/w;.<init>:(Ljava/util/concurrent/Executor;Lp7/c;Lp7/p0;)V` @kind direct;
  #L36afcc.  call `a`(v1, v2) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36afd2.  call `D`(v3) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36afd8.  return v0 @kind object;
}
procedure `p7.l` `k`(`p7.p0` v1 @kind this, `p7.c` v2 @kind object) @signature `Lp7/p0;.k:(Lp7/c;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L36afec.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36aff0.  call temp:= `j`(v1, v0, v2) @signature `Lp7/l;.j:(Ljava/util/concurrent/Executor;Lp7/c;)Lp7/l;` @kind virtual;
  #L36aff6.  v2:= temp @kind object;
  #L36aff8.  return v2 @kind object;
}
procedure `p7.l` `l`(`p7.p0` v3 @kind this, `java.util.concurrent.Executor` v4 @kind object, `p7.c` v5 @kind object) @signature `Lp7/p0;.l:(Ljava/util/concurrent/Executor;Lp7/c;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36b00c.  v0:= new `p7.p0`;
  #L36b010.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L36b016.  v1:= v3.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b01a.  v2:= new `p7.y`;
  #L36b01e.  call `<init>`(v2, v4, v5, v0) @signature `Lp7/y;.<init>:(Ljava/util/concurrent/Executor;Lp7/c;Lp7/p0;)V` @kind direct;
  #L36b024.  call `a`(v1, v2) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36b02a.  call `D`(v3) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36b030.  return v0 @kind object;
}
procedure `p7.l` `m`(`p7.p0` v1 @kind this, `p7.c` v2 @kind object) @signature `Lp7/p0;.m:(Lp7/c;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L36b044.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36b048.  call temp:= `l`(v1, v0, v2) @signature `Lp7/l;.l:(Ljava/util/concurrent/Executor;Lp7/c;)Lp7/l;` @kind virtual;
  #L36b04e.  v2:= temp @kind object;
  #L36b050.  return v2 @kind object;
}
procedure `java.lang.Exception` `n`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.n:()Ljava/lang/Exception;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ad28.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36ad2c.  @monitorenter v0
  #L36ad2e.  v1:= v2.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36ad32.  @monitorexit v0
  #L36ad34.  return v1 @kind object;
  #L36ad36.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ad38.  @monitorexit v0
  #L36ad3a.  throw v1;
  catch `java.lang.Throwable` @[L36ad2e..L36ad3a] goto L36ad36;
}
procedure `java.lang.Object` `o`(`p7.p0` v3 @kind this) @signature `Lp7/p0;.o:()Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36ad58.  v0:= v3.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36ad5c.  @monitorenter v0
  #L36ad5e.  call `A`(v3) @signature `Lp7/p0;.A:()V` @kind direct;
  #L36ad64.  call `B`(v3) @signature `Lp7/p0;.B:()V` @kind direct;
  #L36ad6a.  v1:= v3.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36ad6e.  if v1 != 0 then goto L36ad7a;
  #L36ad72.  v1:= v3.`p7.p0.e` @type ^`java.lang.Object` @kind object;
  #L36ad76.  @monitorexit v0
  #L36ad78.  return v1 @kind object;
  #L36ad7a.  v2:= new `p7.j`;
  #L36ad7e.  call `<init>`(v2, v1) @signature `Lp7/j;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36ad84.  throw v2;
  #L36ad86.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ad88.  @monitorexit v0
  #L36ad8a.  throw v1;
  catch `java.lang.Throwable` @[L36ad5e..L36ad8a] goto L36ad86;
}
procedure `java.lang.Object` `p`(`p7.p0` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lp7/p0;.p:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ada8.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36adac.  @monitorenter v0
  #L36adae.  call `A`(v2) @signature `Lp7/p0;.A:()V` @kind direct;
  #L36adb4.  call `B`(v2) @signature `Lp7/p0;.B:()V` @kind direct;
  #L36adba.  v1:= v2.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36adbe.  call temp:= `isInstance`(v3, v1) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L36adc4.  v1:= temp;
  #L36adc6.  if v1 != 0 then goto L36ade6;
  #L36adca.  v3:= v2.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36adce.  if v3 != 0 then goto L36adda;
  #L36add2.  v3:= v2.`p7.p0.e` @type ^`java.lang.Object` @kind object;
  #L36add6.  @monitorexit v0
  #L36add8.  return v3 @kind object;
  #L36adda.  v1:= new `p7.j`;
  #L36adde.  call `<init>`(v1, v3) @signature `Lp7/j;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36ade4.  throw v1;
  #L36ade6.  v1:= v2.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36adea.  call temp:= `cast`(v3, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L36adf0.  v3:= temp @kind object;
  #L36adf2.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L36adf6.  throw v3;
  #L36adf8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36adfa.  @monitorexit v0
  #L36adfc.  throw v3;
  catch `java.lang.Throwable` @[L36adae..L36adfc] goto L36adf8;
}
procedure `boolean` `q`(`p7.p0` v1 @kind this) @signature `Lp7/p0;.q:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L36ab88.  v0:= v1.`p7.p0.d` @type ^`boolean` @kind boolean;
  #L36ab8c.  return v0;
}
procedure `boolean` `r`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.r:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36aba0.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36aba4.  @monitorenter v0
  #L36aba6.  v1:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36abaa.  @monitorexit v0
  #L36abac.  return v1;
  #L36abae.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36abb0.  @monitorexit v0
  #L36abb2.  throw v1;
  catch `java.lang.Throwable` @[L36aba6..L36abb2] goto L36abae;
}
procedure `boolean` `s`(`p7.p0` v3 @kind this) @signature `Lp7/p0;.s:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36abd0.  v0:= v3.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36abd4.  @monitorenter v0
  #L36abd6.  v1:= v3.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36abda.  v2:= 0I;
  #L36abdc.  if v1 == 0 then goto L36abf2;
  #L36abe0.  v1:= v3.`p7.p0.d` @type ^`boolean` @kind boolean;
  #L36abe4.  if v1 != 0 then goto L36abf2;
  #L36abe8.  v1:= v3.`p7.p0.f` @type ^`java.lang.Exception` @kind object;
  #L36abec.  if v1 != 0 then goto L36abf2;
  #L36abf0.  v2:= 1I;
  #L36abf2.  @monitorexit v0
  #L36abf4.  return v2;
  #L36abf6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36abf8.  @monitorexit v0
  #L36abfa.  throw v1;
  catch `java.lang.Throwable` @[L36abd6..L36abfa] goto L36abf6;
}
procedure `p7.l` `t`(`p7.p0` v3 @kind this, `java.util.concurrent.Executor` v4 @kind object, `p7.k` v5 @kind object) @signature `Lp7/p0;.t:(Ljava/util/concurrent/Executor;Lp7/k;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36b064.  v0:= new `p7.p0`;
  #L36b068.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L36b06e.  v1:= v3.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b072.  v2:= new `p7.i0`;
  #L36b076.  call `<init>`(v2, v4, v5, v0) @signature `Lp7/i0;.<init>:(Ljava/util/concurrent/Executor;Lp7/k;Lp7/p0;)V` @kind direct;
  #L36b07c.  call `a`(v1, v2) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36b082.  call `D`(v3) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36b088.  return v0 @kind object;
}
procedure `p7.l` `u`(`p7.p0` v4 @kind this, `p7.k` v5 @kind object) @signature `Lp7/p0;.u:(Lp7/k;)Lp7/l;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36b09c.  v0:= `@@p7.n.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L36b0a0.  v1:= new `p7.p0`;
  #L36b0a4.  call `<init>`(v1) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L36b0aa.  v2:= v4.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b0ae.  v3:= new `p7.i0`;
  #L36b0b2.  call `<init>`(v3, v0, v5, v1) @signature `Lp7/i0;.<init>:(Ljava/util/concurrent/Executor;Lp7/k;Lp7/p0;)V` @kind direct;
  #L36b0b8.  call `a`(v2, v3) @signature `Lp7/k0;.a:(Lp7/j0;)V` @kind virtual;
  #L36b0be.  call `D`(v4) @signature `Lp7/p0;.D:()V` @kind direct;
  #L36b0c4.  return v1 @kind object;
}
procedure `void` `v`(`p7.p0` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36b10c.  v0:= "Exception must not be null" @kind object;
  #L36b110.  call temp:= `k`(v3, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36b116.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36b11a.  @monitorenter v0
  #L36b11c.  call `C`(v2) @signature `Lp7/p0;.C:()V` @kind direct;
  #L36b122.  v1:= 1I;
  #L36b124.  v2.`p7.p0.c` @type ^`boolean` := v1 @kind boolean;
  #L36b128.  v2.`p7.p0.f` @type ^`java.lang.Exception` := v3 @kind object;
  #L36b12c.  @monitorexit v0
  #L36b12e.  v3:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b132.  call `b`(v3, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36b138.  return @kind void;
  #L36b13a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36b13c.  @monitorexit v0
  #L36b13e.  throw v3;
  catch `java.lang.Throwable` @[L36b11c..L36b12e] goto L36b13a;
  catch `java.lang.Throwable` @[L36b13c..L36b13e] goto L36b13a;
}
procedure `void` `w`(`p7.p0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lp7/p0;.w:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36b164.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36b168.  @monitorenter v0
  #L36b16a.  call `C`(v2) @signature `Lp7/p0;.C:()V` @kind direct;
  #L36b170.  v1:= 1I;
  #L36b172.  v2.`p7.p0.c` @type ^`boolean` := v1 @kind boolean;
  #L36b176.  v2.`p7.p0.e` @type ^`java.lang.Object` := v3 @kind object;
  #L36b17a.  @monitorexit v0
  #L36b17c.  v3:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36b180.  call `b`(v3, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36b186.  return @kind void;
  #L36b188.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36b18a.  @monitorexit v0
  #L36b18c.  throw v3;
  catch `java.lang.Throwable` @[L36b16a..L36b17c] goto L36b188;
  catch `java.lang.Throwable` @[L36b18a..L36b18c] goto L36b188;
}
procedure `boolean` `x`(`p7.p0` v2 @kind this) @signature `Lp7/p0;.x:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ac18.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36ac1c.  @monitorenter v0
  #L36ac1e.  v1:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36ac22.  if v1 == 0 then goto L36ac2c;
  #L36ac26.  @monitorexit v0
  #L36ac28.  v0:= 0I;
  #L36ac2a.  return v0;
  #L36ac2c.  v1:= 1I;
  #L36ac2e.  v2.`p7.p0.c` @type ^`boolean` := v1 @kind boolean;
  #L36ac32.  v2.`p7.p0.d` @type ^`boolean` := v1 @kind boolean;
  #L36ac36.  @monitorexit v0
  #L36ac38.  v0:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36ac3c.  call `b`(v0, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36ac42.  return v1;
  #L36ac44.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36ac46.  @monitorexit v0
  #L36ac48.  throw v1;
  catch `java.lang.Throwable` @[L36ac1e..L36ac38] goto L36ac44;
  catch `java.lang.Throwable` @[L36ac46..L36ac48] goto L36ac44;
}
procedure `boolean` `y`(`p7.p0` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lp7/p0;.y:(Ljava/lang/Exception;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36ac70.  v0:= "Exception must not be null" @kind object;
  #L36ac74.  call temp:= `k`(v3, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L36ac7a.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36ac7e.  @monitorenter v0
  #L36ac80.  v1:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36ac84.  if v1 == 0 then goto L36ac8e;
  #L36ac88.  @monitorexit v0
  #L36ac8a.  v3:= 0I;
  #L36ac8c.  return v3;
  #L36ac8e.  v1:= 1I;
  #L36ac90.  v2.`p7.p0.c` @type ^`boolean` := v1 @kind boolean;
  #L36ac94.  v2.`p7.p0.f` @type ^`java.lang.Exception` := v3 @kind object;
  #L36ac98.  @monitorexit v0
  #L36ac9a.  v3:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36ac9e.  call `b`(v3, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36aca4.  return v1;
  #L36aca6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36aca8.  @monitorexit v0
  #L36acaa.  throw v3;
  catch `java.lang.Throwable` @[L36ac80..L36ac9a] goto L36aca6;
  catch `java.lang.Throwable` @[L36aca8..L36acaa] goto L36aca6;
}
procedure `boolean` `z`(`p7.p0` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lp7/p0;.z:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L36acd0.  v0:= v2.`p7.p0.a` @type ^`java.lang.Object` @kind object;
  #L36acd4.  @monitorenter v0
  #L36acd6.  v1:= v2.`p7.p0.c` @type ^`boolean` @kind boolean;
  #L36acda.  if v1 == 0 then goto L36ace4;
  #L36acde.  @monitorexit v0
  #L36ace0.  v3:= 0I;
  #L36ace2.  return v3;
  #L36ace4.  v1:= 1I;
  #L36ace6.  v2.`p7.p0.c` @type ^`boolean` := v1 @kind boolean;
  #L36acea.  v2.`p7.p0.e` @type ^`java.lang.Object` := v3 @kind object;
  #L36acee.  @monitorexit v0
  #L36acf0.  v3:= v2.`p7.p0.b` @type ^`p7.k0` @kind object;
  #L36acf4.  call `b`(v3, v2) @signature `Lp7/k0;.b:(Lp7/l;)V` @kind virtual;
  #L36acfa.  return v1;
  #L36acfc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36acfe.  @monitorexit v0
  #L36ad00.  throw v3;
  catch `java.lang.Throwable` @[L36acd6..L36acf0] goto L36acfc;
  catch `java.lang.Throwable` @[L36acfe..L36ad00] goto L36acfc;
}
