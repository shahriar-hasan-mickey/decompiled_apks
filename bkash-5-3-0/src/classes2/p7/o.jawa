record `p7.o` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.Object` `a`(`p7.l` v2 @kind object) @signature `Lp7/o;.a:(Lp7/l;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L369778.  call `h`() @signature `Lcom/google/android/gms/common/internal/k;.h:()V` @kind static;
  #L36977e.  v0:= "Task must not be null" @kind object;
  #L369782.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L369788.  call temp:= `r`(v2) @signature `Lp7/l;.r:()Z` @kind virtual;
  #L36978e.  v0:= temp;
  #L369790.  if v0 == 0 then goto L36979e;
  #L369794.  call temp:= `i`(v2) @signature `Lp7/o;.i:(Lp7/l;)Ljava/lang/Object;` @kind static;
  #L36979a.  v2:= temp @kind object;
  #L36979c.  return v2 @kind object;
  #L36979e.  v0:= new `p7.r`;
  #L3697a2.  v1:= 0I;
  #L3697a4.  call `<init>`(v0, v1) @signature `Lp7/r;.<init>:(Lp7/q;)V` @kind direct;
  #L3697aa.  call `j`(v2, v0) @signature `Lp7/o;.j:(Lp7/l;Lp7/s;)V` @kind static;
  #L3697b0.  call `d`(v0) @signature `Lp7/r;.d:()V` @kind virtual;
  #L3697b6.  call temp:= `i`(v2) @signature `Lp7/o;.i:(Lp7/l;)Ljava/lang/Object;` @kind static;
  #L3697bc.  v2:= temp @kind object;
  #L3697be.  return v2 @kind object;
}
procedure `java.lang.Object` `b`(`p7.l` v2 @kind object, `long` v3 , `java.util.concurrent.TimeUnit` v5 @kind object) @signature `Lp7/o;.b:(Lp7/l;JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3697d0.  call `h`() @signature `Lcom/google/android/gms/common/internal/k;.h:()V` @kind static;
  #L3697d6.  v0:= "Task must not be null" @kind object;
  #L3697da.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3697e0.  v0:= "TimeUnit must not be null" @kind object;
  #L3697e4.  call temp:= `k`(v5, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3697ea.  call temp:= `r`(v2) @signature `Lp7/l;.r:()Z` @kind virtual;
  #L3697f0.  v0:= temp;
  #L3697f2.  if v0 == 0 then goto L369800;
  #L3697f6.  call temp:= `i`(v2) @signature `Lp7/o;.i:(Lp7/l;)Ljava/lang/Object;` @kind static;
  #L3697fc.  v2:= temp @kind object;
  #L3697fe.  return v2 @kind object;
  #L369800.  v0:= new `p7.r`;
  #L369804.  v1:= 0I;
  #L369806.  call `<init>`(v0, v1) @signature `Lp7/r;.<init>:(Lp7/q;)V` @kind direct;
  #L36980c.  call `j`(v2, v0) @signature `Lp7/o;.j:(Lp7/l;Lp7/s;)V` @kind static;
  #L369812.  call temp:= `e`(v0, v3, v5) @signature `Lp7/r;.e:(JLjava/util/concurrent/TimeUnit;)Z` @kind virtual;
  #L369818.  v3:= temp;
  #L36981a.  if v3 == 0 then goto L369828;
  #L36981e.  call temp:= `i`(v2) @signature `Lp7/o;.i:(Lp7/l;)Ljava/lang/Object;` @kind static;
  #L369824.  v2:= temp @kind object;
  #L369826.  return v2 @kind object;
  #L369828.  v2:= new `java.util.concurrent.TimeoutException`;
  #L36982c.  v3:= "Timed out waiting for Task" @kind object;
  #L369830.  call `<init>`(v2, v3) @signature `Ljava/util/concurrent/TimeoutException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L369836.  throw v2;
}
procedure `p7.l` `c`(`java.util.concurrent.Executor` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lp7/o;.c:(Ljava/util/concurrent/Executor;Ljava/util/concurrent/Callable;)Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3698a0.  v0:= "Executor must not be null" @kind object;
  #L3698a4.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3698aa.  v0:= "Callback must not be null" @kind object;
  #L3698ae.  call temp:= `k`(v3, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3698b4.  v0:= new `p7.p0`;
  #L3698b8.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L3698be.  v1:= new `p7.q0`;
  #L3698c2.  call `<init>`(v1, v0, v3) @signature `Lp7/q0;.<init>:(Lp7/p0;Ljava/util/concurrent/Callable;)V` @kind direct;
  #L3698c8.  call `execute`(v2, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L3698ce.  return v0 @kind object;
}
procedure `p7.l` `d`() @signature `Lp7/o;.d:()Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3698e0.  v0:= new `p7.p0`;
  #L3698e4.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L3698ea.  call temp:= `x`(v0) @signature `Lp7/p0;.x:()Z` @kind virtual;
  #L3698f0.  return v0 @kind object;
}
procedure `p7.l` `e`(`java.lang.Exception` v1 @kind object) @signature `Lp7/o;.e:(Ljava/lang/Exception;)Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L369904.  v0:= new `p7.p0`;
  #L369908.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L36990e.  call `v`(v0, v1) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @kind virtual;
  #L369914.  return v0 @kind object;
}
procedure `p7.l` `f`(`java.lang.Object` v1 @kind object) @signature `Lp7/o;.f:(Ljava/lang/Object;)Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L369928.  v0:= new `p7.p0`;
  #L36992c.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L369932.  call `w`(v0, v1) @signature `Lp7/p0;.w:(Ljava/lang/Object;)V` @kind virtual;
  #L369938.  return v0 @kind object;
}
procedure `p7.l` `g`(`java.util.Collection` v3 @kind object) @signature `Lp7/o;.g:(Ljava/util/Collection;)Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36994c.  if v3 == 0 then goto L3699d0;
  #L369950.  call temp:= `isEmpty`(v3) @signature `Ljava/util/Collection;.isEmpty:()Z` @kind interface;
  #L369956.  v0:= temp;
  #L369958.  if v0 == 0 then goto L36995e;
  #L36995c.  goto L3699d0;
  #L36995e.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L369964.  v0:= temp @kind object;
  #L369966.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36996c.  v1:= temp;
  #L36996e.  if v1 == 0 then goto L36998a;
  #L369972.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L369978.  v1:= temp @kind object;
  #L36997a.  v1:= (`p7.l`) v1 @kind object;
  #L36997e.  v2:= "null tasks are not accepted" @kind object;
  #L369982.  call temp:= `requireNonNull`(v1, v2) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L369988.  goto L369966;
  #L36998a.  v0:= new `p7.p0`;
  #L36998e.  call `<init>`(v0) @signature `Lp7/p0;.<init>:()V` @kind direct;
  #L369994.  v1:= new `p7.t`;
  #L369998.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L36999e.  v2:= temp;
  #L3699a0.  call `<init>`(v1, v2, v0) @signature `Lp7/t;.<init>:(ILp7/p0;)V` @kind direct;
  #L3699a6.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3699ac.  v3:= temp @kind object;
  #L3699ae.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3699b4.  v2:= temp;
  #L3699b6.  if v2 == 0 then goto L3699ce;
  #L3699ba.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3699c0.  v2:= temp @kind object;
  #L3699c2.  v2:= (`p7.l`) v2 @kind object;
  #L3699c6.  call `j`(v2, v1) @signature `Lp7/o;.j:(Lp7/l;Lp7/s;)V` @kind static;
  #L3699cc.  goto L3699ae;
  #L3699ce.  return v0 @kind object;
  #L3699d0.  v3:= 0I;
  #L3699d2.  call temp:= `f`(v3) @signature `Lp7/o;.f:(Ljava/lang/Object;)Lp7/l;` @kind static;
  #L3699d8.  v3:= temp @kind object;
  #L3699da.  return v3 @kind object;
}
procedure `p7.l` `h`(`p7.l`[] v1 @kind object) @signature `Lp7/o;.h:([Lp7/l;)Lp7/l;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3699ec.  if v1 == 0 then goto L369a0a;
  #L3699f0.  v0:= length @variable v1;
  #L3699f2.  if v0 != 0 then goto L3699f8;
  #L3699f6.  goto L369a0a;
  #L3699f8.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3699fe.  v1:= temp @kind object;
  #L369a00.  call temp:= `g`(v1) @signature `Lp7/o;.g:(Ljava/util/Collection;)Lp7/l;` @kind static;
  #L369a06.  v1:= temp @kind object;
  #L369a08.  return v1 @kind object;
  #L369a0a.  v1:= 0I;
  #L369a0c.  call temp:= `f`(v1) @signature `Lp7/o;.f:(Ljava/lang/Object;)Lp7/l;` @kind static;
  #L369a12.  v1:= temp @kind object;
  #L369a14.  return v1 @kind object;
}
procedure `java.lang.Object` `i`(`p7.l` v1 @kind object) @signature `Lp7/o;.i:(Lp7/l;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L369848.  call temp:= `s`(v1) @signature `Lp7/l;.s:()Z` @kind virtual;
  #L36984e.  v0:= temp;
  #L369850.  if v0 == 0 then goto L36985e;
  #L369854.  call temp:= `o`(v1) @signature `Lp7/l;.o:()Ljava/lang/Object;` @kind virtual;
  #L36985a.  v1:= temp @kind object;
  #L36985c.  return v1 @kind object;
  #L36985e.  call temp:= `q`(v1) @signature `Lp7/l;.q:()Z` @kind virtual;
  #L369864.  v0:= temp;
  #L369866.  if v0 == 0 then goto L36987a;
  #L36986a.  v1:= new `java.util.concurrent.CancellationException`;
  #L36986e.  v0:= "Task is already canceled" @kind object;
  #L369872.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/CancellationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L369878.  throw v1;
  #L36987a.  v0:= new `java.util.concurrent.ExecutionException`;
  #L36987e.  call temp:= `n`(v1) @signature `Lp7/l;.n:()Ljava/lang/Exception;` @kind virtual;
  #L369884.  v1:= temp @kind object;
  #L369886.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L36988c.  throw v0;
}
procedure `void` `j`(`p7.l` v1 @kind object, `p7.s` v2 @kind object) @signature `Lp7/o;.j:(Lp7/l;Lp7/s;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L369a28.  v0:= `@@p7.n.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L369a2c.  call temp:= `h`(v1, v0, v2) @signature `Lp7/l;.h:(Ljava/util/concurrent/Executor;Lp7/h;)Lp7/l;` @kind virtual;
  #L369a32.  call temp:= `e`(v1, v0, v2) @signature `Lp7/l;.e:(Ljava/util/concurrent/Executor;Lp7/g;)Lp7/l;` @kind virtual;
  #L369a38.  call temp:= `a`(v1, v0, v2) @signature `Lp7/l;.a:(Ljava/util/concurrent/Executor;Lp7/e;)Lp7/l;` @kind virtual;
  #L369a3e.  return @kind void;
}
