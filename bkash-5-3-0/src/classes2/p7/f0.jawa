record `p7.f0` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `p7.l` `p7.f0.g` @AccessFlag FINAL_SYNTHETIC;
  `p7.g0` `p7.f0.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p7.f0` v0 @kind this, `p7.g0` v1 @kind object, `p7.l` v2 @kind object) @signature `Lp7/f0;.<init>:(Lp7/g0;Lp7/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36a558.  v0.`p7.f0.h` @type ^`p7.g0` := v1 @kind object;
  #L36a55c.  v0.`p7.f0.g` @type ^`p7.l` := v2 @kind object;
  #L36a560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36a566.  return @kind void;
}
procedure `void` `run`(`p7.f0` v3 @kind this) @signature `Lp7/f0;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L36a578.  v0:= v3.`p7.f0.h` @type ^`p7.g0` @kind object;
  #L36a57c.  call temp:= `b`(v0) @signature `Lp7/g0;.b:(Lp7/g0;)Ljava/lang/Object;` @kind static;
  #L36a582.  v0:= temp @kind object;
  #L36a584.  @monitorenter v0
  #L36a586.  v1:= v3.`p7.f0.h` @type ^`p7.g0` @kind object;
  #L36a58a.  call temp:= `a`(v1) @signature `Lp7/g0;.a:(Lp7/g0;)Lp7/h;` @kind static;
  #L36a590.  v2:= temp @kind object;
  #L36a592.  if v2 == 0 then goto L36a5b0;
  #L36a596.  call temp:= `a`(v1) @signature `Lp7/g0;.a:(Lp7/g0;)Lp7/h;` @kind static;
  #L36a59c.  v1:= temp @kind object;
  #L36a59e.  v2:= v3.`p7.f0.g` @type ^`p7.l` @kind object;
  #L36a5a2.  call temp:= `o`(v2) @signature `Lp7/l;.o:()Ljava/lang/Object;` @kind virtual;
  #L36a5a8.  v2:= temp @kind object;
  #L36a5aa.  call `a`(v1, v2) @signature `Lp7/h;.a:(Ljava/lang/Object;)V` @kind interface;
  #L36a5b0.  @monitorexit v0
  #L36a5b2.  return @kind void;
  #L36a5b4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L36a5b6.  @monitorexit v0
  #L36a5b8.  throw v1;
  catch `java.lang.Throwable` @[L36a586..L36a5b8] goto L36a5b4;
}
