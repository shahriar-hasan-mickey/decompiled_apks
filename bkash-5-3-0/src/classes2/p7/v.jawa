record `p7.v` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `p7.l` `p7.v.g` @AccessFlag FINAL_SYNTHETIC;
  `p7.w` `p7.v.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`p7.v` v0 @kind this, `p7.w` v1 @kind object, `p7.l` v2 @kind object) @signature `Lp7/v;.<init>:(Lp7/w;Lp7/l;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L369d94.  v0.`p7.v.h` @type ^`p7.w` := v1 @kind object;
  #L369d98.  v0.`p7.v.g` @type ^`p7.l` := v2 @kind object;
  #L369d9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L369da2.  return @kind void;
}
procedure `void` `run`(`p7.v` v2 @kind this) @signature `Lp7/v;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L369db4.  v0:= v2.`p7.v.g` @type ^`p7.l` @kind object;
  #L369db8.  call temp:= `q`(v0) @signature `Lp7/l;.q:()Z` @kind virtual;
  #L369dbe.  v0:= temp;
  #L369dc0.  if v0 == 0 then goto L369dd8;
  #L369dc4.  v0:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369dc8.  call temp:= `b`(v0) @signature `Lp7/w;.b:(Lp7/w;)Lp7/p0;` @kind static;
  #L369dce.  v0:= temp @kind object;
  #L369dd0.  call temp:= `x`(v0) @signature `Lp7/p0;.x:()Z` @kind virtual;
  #L369dd6.  return @kind void;
  #L369dd8.  v0:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369ddc.  call temp:= `a`(v0) @signature `Lp7/w;.a:(Lp7/w;)Lp7/c;` @kind static;
  #L369de2.  v0:= temp @kind object;
  #L369de4.  v1:= v2.`p7.v.g` @type ^`p7.l` @kind object;
  #L369de8.  call temp:= `a`(v0, v1) @signature `Lp7/c;.a:(Lp7/l;)Ljava/lang/Object;` @kind interface;
  #L369dee.  v0:= temp @kind object;
  #L369df0.  v1:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369df4.  call temp:= `b`(v1) @signature `Lp7/w;.b:(Lp7/w;)Lp7/p0;` @kind static;
  #L369dfa.  v1:= temp @kind object;
  #L369dfc.  call `w`(v1, v0) @signature `Lp7/p0;.w:(Ljava/lang/Object;)V` @kind virtual;
  #L369e02.  return @kind void;
  #L369e04.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L369e06.  v1:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369e0a.  call temp:= `b`(v1) @signature `Lp7/w;.b:(Lp7/w;)Lp7/p0;` @kind static;
  #L369e10.  v1:= temp @kind object;
  #L369e12.  call `v`(v1, v0) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @kind virtual;
  #L369e18.  return @kind void;
  #L369e1a.  v0:= Exception @type ^`p7.j` @kind object;
  #L369e1c.  call temp:= `getCause`(v0) @signature `Ljava/lang/RuntimeException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L369e22.  v1:= temp @kind object;
  #L369e24.  v1:= instanceof @variable v1 @type ^`java.lang.Exception` @kind boolean;
  #L369e28.  if v1 == 0 then goto L369e4c;
  #L369e2c.  v1:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369e30.  call temp:= `b`(v1) @signature `Lp7/w;.b:(Lp7/w;)Lp7/p0;` @kind static;
  #L369e36.  v1:= temp @kind object;
  #L369e38.  call temp:= `getCause`(v0) @signature `Ljava/lang/RuntimeException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L369e3e.  v0:= temp @kind object;
  #L369e40.  v0:= (`java.lang.Exception`) v0 @kind object;
  #L369e44.  call `v`(v1, v0) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @kind virtual;
  #L369e4a.  return @kind void;
  #L369e4c.  v1:= v2.`p7.v.h` @type ^`p7.w` @kind object;
  #L369e50.  call temp:= `b`(v1) @signature `Lp7/w;.b:(Lp7/w;)Lp7/p0;` @kind static;
  #L369e56.  v1:= temp @kind object;
  #L369e58.  call `v`(v1, v0) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @kind virtual;
  #L369e5e.  return @kind void;
  catch `p7.j` @[L369dd8..L369df0] goto L369e1a;
  catch `java.lang.Exception` @[L369dd8..L369df0] goto L369e04;
}
