record `p7.t` @kind class @AccessFlag FINAL extends `p7.s` @kind interface {
  `java.lang.Object` `p7.t.a` @AccessFlag PRIVATE_FINAL;
  `int` `p7.t.b` @AccessFlag PRIVATE_FINAL;
  `p7.p0` `p7.t.c` @AccessFlag PRIVATE_FINAL;
  `int` `p7.t.d` @AccessFlag PRIVATE;
  `int` `p7.t.e` @AccessFlag PRIVATE;
  `int` `p7.t.f` @AccessFlag PRIVATE;
  `java.lang.Exception` `p7.t.g` @AccessFlag PRIVATE;
  `boolean` `p7.t.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p7.t` v1 @kind this, `int` v2 , `p7.p0` v3 @kind object) @signature `Lp7/t;.<init>:(ILp7/p0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L369b20.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L369b26.  v0:= new `java.lang.Object`;
  #L369b2a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L369b30.  v1.`p7.t.a` @type ^`java.lang.Object` := v0 @kind object;
  #L369b34.  v1.`p7.t.b` @type ^`int` := v2;
  #L369b38.  v1.`p7.t.c` @type ^`p7.p0` := v3 @kind object;
  #L369b3c.  return @kind void;
}
procedure `void` `d`(`p7.t` v6 @kind this) @signature `Lp7/t;.d:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L369c18.  v0:= v6.`p7.t.d` @type ^`int`;
  #L369c1c.  v1:= v6.`p7.t.e` @type ^`int`;
  #L369c20.  v0:= v0 + v1 @kind int;
  #L369c22.  v1:= v6.`p7.t.f` @type ^`int`;
  #L369c26.  v0:= v0 + v1 @kind int;
  #L369c28.  v1:= v6.`p7.t.b` @type ^`int`;
  #L369c2c.  if v0 != v1 then goto L369cb0;
  #L369c30.  v0:= v6.`p7.t.g` @type ^`java.lang.Exception` @kind object;
  #L369c34.  if v0 == 0 then goto L369c90;
  #L369c38.  v0:= v6.`p7.t.c` @type ^`p7.p0` @kind object;
  #L369c3c.  v1:= new `java.util.concurrent.ExecutionException`;
  #L369c40.  v2:= v6.`p7.t.e` @type ^`int`;
  #L369c44.  v3:= v6.`p7.t.b` @type ^`int`;
  #L369c48.  v4:= new `java.lang.StringBuilder`;
  #L369c4c.  v5:= 54I;
  #L369c50.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L369c56.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L369c5c.  v2:= " out of " @kind object;
  #L369c60.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L369c66.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L369c6c.  v2:= " underlying tasks failed" @kind object;
  #L369c70.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L369c76.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L369c7c.  v2:= temp @kind object;
  #L369c7e.  v3:= v6.`p7.t.g` @type ^`java.lang.Exception` @kind object;
  #L369c82.  call `<init>`(v1, v2, v3) @signature `Ljava/util/concurrent/ExecutionException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L369c88.  call `v`(v0, v1) @signature `Lp7/p0;.v:(Ljava/lang/Exception;)V` @kind virtual;
  #L369c8e.  return @kind void;
  #L369c90.  v0:= v6.`p7.t.h` @type ^`boolean` @kind boolean;
  #L369c94.  if v0 == 0 then goto L369ca4;
  #L369c98.  v0:= v6.`p7.t.c` @type ^`p7.p0` @kind object;
  #L369c9c.  call temp:= `x`(v0) @signature `Lp7/p0;.x:()Z` @kind virtual;
  #L369ca2.  return @kind void;
  #L369ca4.  v0:= v6.`p7.t.c` @type ^`p7.p0` @kind object;
  #L369ca8.  v1:= 0I;
  #L369caa.  call `w`(v0, v1) @signature `Lp7/p0;.w:(Ljava/lang/Object;)V` @kind virtual;
  #L369cb0.  return @kind void;
}
procedure `void` `a`(`p7.t` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lp7/t;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L369bd8.  v2:= v1.`p7.t.a` @type ^`java.lang.Object` @kind object;
  #L369bdc.  @monitorenter v2
  #L369bde.  v0:= v1.`p7.t.d` @type ^`int`;
  #L369be2.  v0:= v0 + 1;
  #L369be6.  v1.`p7.t.d` @type ^`int` := v0;
  #L369bea.  call `d`(v1) @signature `Lp7/t;.d:()V` @kind direct;
  #L369bf0.  @monitorexit v2
  #L369bf2.  return @kind void;
  #L369bf4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L369bf6.  @monitorexit v2
  #L369bf8.  throw v0;
  catch `java.lang.Throwable` @[L369bde..L369bf8] goto L369bf4;
}
procedure `void` `b`(`p7.t` v3 @kind this) @signature `Lp7/t;.b:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L369b50.  v0:= v3.`p7.t.a` @type ^`java.lang.Object` @kind object;
  #L369b54.  @monitorenter v0
  #L369b56.  v1:= v3.`p7.t.f` @type ^`int`;
  #L369b5a.  v2:= 1I;
  #L369b5c.  v1:= v1 + v2 @kind int;
  #L369b5e.  v3.`p7.t.f` @type ^`int` := v1;
  #L369b62.  v3.`p7.t.h` @type ^`boolean` := v2 @kind boolean;
  #L369b66.  call `d`(v3) @signature `Lp7/t;.d:()V` @kind direct;
  #L369b6c.  @monitorexit v0
  #L369b6e.  return @kind void;
  #L369b70.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L369b72.  @monitorexit v0
  #L369b74.  throw v1;
  catch `java.lang.Throwable` @[L369b56..L369b74] goto L369b70;
}
procedure `void` `c`(`p7.t` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lp7/t;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L369b94.  v0:= v2.`p7.t.a` @type ^`java.lang.Object` @kind object;
  #L369b98.  @monitorenter v0
  #L369b9a.  v1:= v2.`p7.t.e` @type ^`int`;
  #L369b9e.  v1:= v1 + 1;
  #L369ba2.  v2.`p7.t.e` @type ^`int` := v1;
  #L369ba6.  v2.`p7.t.g` @type ^`java.lang.Exception` := v3 @kind object;
  #L369baa.  call `d`(v2) @signature `Lp7/t;.d:()V` @kind direct;
  #L369bb0.  @monitorexit v0
  #L369bb2.  return @kind void;
  #L369bb4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L369bb6.  @monitorexit v0
  #L369bb8.  throw v3;
  catch `java.lang.Throwable` @[L369b9a..L369bb8] goto L369bb4;
}
