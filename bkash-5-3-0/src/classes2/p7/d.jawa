record `p7.d` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.IllegalStateException` @kind class {
}
procedure `void` `<init>`(`p7.d` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lp7/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3694f0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3694f6.  return @kind void;
}
procedure `java.lang.IllegalStateException` `of`(`p7.l` v4 @kind object) @signature `Lp7/d;.of:(Lp7/l;)Ljava/lang/IllegalStateException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L369440.  call temp:= `r`(v4) @signature `Lp7/l;.r:()Z` @kind virtual;
  #L369446.  v0:= temp;
  #L369448.  if v0 != 0 then goto L36945c;
  #L36944c.  v4:= new `java.lang.IllegalStateException`;
  #L369450.  v0:= "DuplicateTaskCompletionException can only be created from completed Task." @kind object;
  #L369454.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36945a.  return v4 @kind object;
  #L36945c.  call temp:= `n`(v4) @signature `Lp7/l;.n:()Ljava/lang/Exception;` @kind virtual;
  #L369462.  v0:= temp @kind object;
  #L369464.  if v0 == 0 then goto L36946e;
  #L369468.  v4:= "failure" @kind object;
  #L36946c.  goto L3694ae;
  #L36946e.  call temp:= `s`(v4) @signature `Lp7/l;.s:()Z` @kind virtual;
  #L369474.  v1:= temp;
  #L369476.  if v1 == 0 then goto L369498;
  #L36947a.  call temp:= `o`(v4) @signature `Lp7/l;.o:()Ljava/lang/Object;` @kind virtual;
  #L369480.  v4:= temp @kind object;
  #L369482.  call temp:= `valueOf`(v4) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L369488.  v4:= temp @kind object;
  #L36948a.  v1:= "result " @kind object;
  #L36948e.  call temp:= `concat`(v1, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L369494.  v4:= temp @kind object;
  #L369496.  goto L3694ae;
  #L369498.  call temp:= `q`(v4) @signature `Lp7/l;.q:()Z` @kind virtual;
  #L36949e.  v4:= temp;
  #L3694a0.  if v4 == 0 then goto L3694aa;
  #L3694a4.  v4:= "cancellation" @kind object;
  #L3694a8.  goto L3694ae;
  #L3694aa.  v4:= "unknown issue" @kind object;
  #L3694ae.  v1:= new `p7.d`;
  #L3694b2.  v2:= "Complete with: " @kind object;
  #L3694b6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3694bc.  v3:= temp;
  #L3694be.  if v3 == 0 then goto L3694cc;
  #L3694c2.  call temp:= `concat`(v2, v4) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3694c8.  v4:= temp @kind object;
  #L3694ca.  goto L3694d6;
  #L3694cc.  v4:= new `java.lang.String`;
  #L3694d0.  call `<init>`(v4, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3694d6.  call `<init>`(v1, v4, v0) @signature `Lp7/d;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3694dc.  return v1 @kind object;
}
