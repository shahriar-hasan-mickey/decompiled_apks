record `ma.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`java.io.Closeable` v0 @kind object) @signature `Lma/a;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32116c.  if v0 == 0 then goto L321176;
  #L321170.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L321176.  return @kind void;
  catch `java.io.IOException` @[L321170..L321176] goto L321176;
}
procedure `void` `b`(`java.io.File`[] v2 @kind object, `java.util.Comparator` v3 @kind object, `int` v4 ) @signature `Lma/a;.b:([Ljava/io/File;Ljava/util/Comparator;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L321198.  call `sort`(v2, v3) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L32119e.  v3:= length @variable v2;
  #L3211a0.  call temp:= `min`(v3, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3211a6.  v3:= temp;
  #L3211a8.  v4:= 0I;
  #L3211aa.  if v4 >= v3 then goto L3211e2;
  #L3211ae.  v0:= v2[v4] @kind object;
  #L3211b2.  call temp:= `delete`(v0) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L3211b8.  v0:= temp;
  #L3211ba.  if v0 != 0 then goto L3211dc;
  #L3211be.  v0:= new `java.lang.StringBuilder`;
  #L3211c2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3211c8.  v1:= "Failed to delete file: " @kind object;
  #L3211cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3211d2.  v1:= v2[v4] @kind object;
  #L3211d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3211dc.  v4:= v4 + 1;
  #L3211e0.  goto L3211aa;
  #L3211e2.  return @kind void;
}
procedure `java.io.File` `c`(`android.content.Context` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lma/a;.c:(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L321050.  v0:= new `java.io.File`;
  #L321054.  call temp:= `getFilesDir`(v1) @signature `Landroid/content/Context;.getFilesDir:()Ljava/io/File;` @kind virtual;
  #L32105a.  v1:= temp @kind object;
  #L32105c.  call `<init>`(v0, v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L321062.  return v0 @kind object;
}
procedure `java.io.File`[] `d`(`java.io.File` v1 @kind object) @signature `Lma/a;.d:(Ljava/io/File;)[Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L321074.  v0:= 0I;
  #L321076.  if v1 != 0 then goto L321080;
  #L32107a.  v1:= new `java.io.File`[v0];
  #L32107e.  return v1 @kind object;
  #L321080.  call temp:= `listFiles`(v1) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L321086.  v1:= temp @kind object;
  #L321088.  if v1 == 0 then goto L32108e;
  #L32108c.  goto L321092;
  #L32108e.  v1:= new `java.io.File`[v0];
  #L321092.  return v1 @kind object;
}
procedure `java.lang.String` `e`(`java.io.File` v4 @kind object) @signature `Lma/a;.e:(Ljava/io/File;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3210a4.  v0:= new `java.io.FileInputStream`;
  #L3210a8.  call `<init>`(v0, v4) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3210ae.  v4:= new `java.io.InputStreamReader`;
  #L3210b2.  call `<init>`(v4, v0) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3210b8.  v0:= new `java.io.StringWriter`;
  #L3210bc.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L3210c2.  v1:= 4096I;
  #L3210c6.  v1:= new `char`[v1];
  #L3210ca.  call temp:= `read`(v4, v1) @signature `Ljava/io/Reader;.read:([C)I` @kind virtual;
  #L3210d0.  v2:= temp;
  #L3210d2.  v3:= -1I;
  #L3210d4.  if v2 == v3 then goto L3210e2;
  #L3210d8.  v3:= 0I;
  #L3210da.  call `write`(v0, v1, v3, v2) @signature `Ljava/io/StringWriter;.write:([CII)V` @kind virtual;
  #L3210e0.  goto L3210ca;
  #L3210e2.  call `close`(v4) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L3210e8.  goto L321106;
  #L3210ea.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L3210ec.  call temp:= `toString`(v4) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3210f2.  goto L321106;
  #L3210f4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3210f6.  goto L321110;
  #L3210f8.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3210fa.  call temp:= `toString`(v1) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L321100.  call `close`(v4) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L321106.  call temp:= `toString`(v0) @signature `Ljava/io/StringWriter;.toString:()Ljava/lang/String;` @kind virtual;
  #L32110c.  v4:= temp @kind object;
  #L32110e.  return v4 @kind object;
  #L321110.  call `close`(v4) @signature `Ljava/io/Reader;.close:()V` @kind virtual;
  #L321116.  goto L321120;
  #L321118.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L32111a.  call temp:= `toString`(v4) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L321120.  throw v0;
  catch `java.io.IOException` @[L3210c6..L3210e0] goto L3210f8;
  catch `java.lang.Throwable` @[L3210c6..L3210e0] goto L3210f4;
  catch `java.io.IOException` @[L3210e2..L3210e8] goto L3210ea;
  catch `java.lang.Throwable` @[L3210fa..L321100] goto L3210f4;
  catch `java.io.IOException` @[L321100..L321106] goto L3210ea;
  catch `java.io.IOException` @[L321110..L321116] goto L321118;
}
procedure `void` `f`(`java.io.File` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lma/a;.f:(Ljava/io/File;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3211f4.  v0:= new `java.io.OutputStreamWriter`;
  #L3211f8.  v1:= new `java.io.FileOutputStream`;
  #L3211fc.  call `<init>`(v1, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L321202.  v2:= "UTF-8" @kind object;
  #L321206.  call `<init>`(v0, v1, v2) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind direct;
  #L32120c.  call `write`(v0, v3) @signature `Ljava/io/OutputStreamWriter;.write:(Ljava/lang/String;)V` @kind virtual;
  #L321212.  call `flush`(v0) @signature `Ljava/io/OutputStreamWriter;.flush:()V` @kind virtual;
  #L321218.  call `close`(v0) @signature `Ljava/io/OutputStreamWriter;.close:()V` @kind virtual;
  #L32121e.  goto L32123c;
  #L321220.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L321222.  call temp:= `toString`(v2) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L321228.  goto L32123c;
  #L32122a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32122c.  goto L32123e;
  #L32122e.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L321230.  call temp:= `toString`(v2) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L321236.  call `close`(v0) @signature `Ljava/io/OutputStreamWriter;.close:()V` @kind virtual;
  #L32123c.  return @kind void;
  #L32123e.  call `close`(v0) @signature `Ljava/io/OutputStreamWriter;.close:()V` @kind virtual;
  #L321244.  goto L32124e;
  #L321246.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L321248.  call temp:= `toString`(v3) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L32124e.  throw v2;
  catch `java.io.IOException` @[L32120c..L321218] goto L32122e;
  catch `java.lang.Throwable` @[L32120c..L321218] goto L32122a;
  catch `java.io.IOException` @[L321218..L32121e] goto L321220;
  catch `java.lang.Throwable` @[L321230..L321236] goto L32122a;
  catch `java.io.IOException` @[L321236..L32123c] goto L321220;
  catch `java.io.IOException` @[L32123e..L321244] goto L321246;
}
