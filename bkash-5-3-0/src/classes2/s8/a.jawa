record `s8.a` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.List` @kind interface, `java.util.RandomAccess` @kind interface {
  `java.util.List` `s8.a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`s8.a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Ls8/a;.<init>:(Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L376754.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37675a.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L376760.  v1:= temp @kind object;
  #L376762.  v0.`s8.a.g` @type ^`java.util.List` := v1 @kind object;
  #L376766.  return @kind void;
}
procedure `s8.a` `g`(`java.util.List` v1 @kind object) @signature `Ls8/a;.g:(Ljava/util/List;)Ls8/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L376738.  v0:= new `s8.a`;
  #L37673c.  call `<init>`(v0, v1) @signature `Ls8/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L376742.  return v0 @kind object;
}
procedure `s8.a` `h`(`java.lang.Object`[] v1 @kind object) @signature `Ls8/a;.h:([Ljava/lang/Object;)Ls8/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L376714.  v0:= new `s8.a`;
  #L376718.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L37671e.  v1:= temp @kind object;
  #L376720.  call `<init>`(v0, v1) @signature `Ls8/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L376726.  return v0 @kind object;
}
procedure `void` `add`(`s8.a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Ls8/a;.add:(ILjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376778.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L37677c.  call `add`(v0, v2, v3) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L376782.  return @kind void;
}
procedure `boolean` `add`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.add:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376434.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376438.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L37643e.  v2:= temp;
  #L376440.  return v2;
}
procedure `boolean` `addAll`(`s8.a` v1 @kind this, `int` v2 , `java.util.Collection` v3 @kind object) @signature `Ls8/a;.addAll:(ILjava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376454.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376458.  call temp:= `addAll`(v0, v2, v3) @signature `Ljava/util/List;.addAll:(ILjava/util/Collection;)Z` @kind interface;
  #L37645e.  v2:= temp;
  #L376460.  return v2;
}
procedure `boolean` `addAll`(`s8.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Ls8/a;.addAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376474.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376478.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L37647e.  v2:= temp;
  #L376480.  return v2;
}
procedure `void` `clear`(`s8.a` v1 @kind this) @signature `Ls8/a;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376794.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376798.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L37679e.  return @kind void;
}
procedure `boolean` `contains`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376494.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376498.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L37649e.  v2:= temp;
  #L3764a0.  return v2;
}
procedure `boolean` `containsAll`(`s8.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Ls8/a;.containsAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3764b4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3764b8.  call temp:= `containsAll`(v0, v2) @signature `Ljava/util/List;.containsAll:(Ljava/util/Collection;)Z` @kind interface;
  #L3764be.  v2:= temp;
  #L3764c0.  return v2;
}
procedure `boolean` `equals`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3764d4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3764d8.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3764de.  v2:= temp;
  #L3764e0.  return v2;
}
procedure `java.lang.Object` `get`(`s8.a` v1 @kind this, `int` v2 ) @signature `Ls8/a;.get:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3765f4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3765f8.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3765fe.  v2:= temp @kind object;
  #L376600.  return v2 @kind object;
}
procedure `int` `hashCode`(`s8.a` v1 @kind this) @signature `Ls8/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376574.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376578.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L37657e.  v0:= temp;
  #L376580.  return v0;
}
procedure `int` `indexOf`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.indexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376594.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376598.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L37659e.  v2:= temp;
  #L3765a0.  return v2;
}
procedure `boolean` `isEmpty`(`s8.a` v1 @kind this) @signature `Ls8/a;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3764f4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3764f8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3764fe.  v0:= temp;
  #L376500.  return v0;
}
procedure `java.util.Iterator` `iterator`(`s8.a` v1 @kind this) @signature `Ls8/a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376694.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376698.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L37669e.  v0:= temp @kind object;
  #L3766a0.  return v0 @kind object;
}
procedure `int` `lastIndexOf`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.lastIndexOf:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3765b4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3765b8.  call temp:= `lastIndexOf`(v0, v2) @signature `Ljava/util/List;.lastIndexOf:(Ljava/lang/Object;)I` @kind interface;
  #L3765be.  v2:= temp;
  #L3765c0.  return v2;
}
procedure `java.util.ListIterator` `listIterator`(`s8.a` v1 @kind this) @signature `Ls8/a;.listIterator:()Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3766d4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3766d8.  call temp:= `listIterator`(v0) @signature `Ljava/util/List;.listIterator:()Ljava/util/ListIterator;` @kind interface;
  #L3766de.  v0:= temp @kind object;
  #L3766e0.  return v0 @kind object;
}
procedure `java.util.ListIterator` `listIterator`(`s8.a` v1 @kind this, `int` v2 ) @signature `Ls8/a;.listIterator:(I)Ljava/util/ListIterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3766f4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3766f8.  call temp:= `listIterator`(v0, v2) @signature `Ljava/util/List;.listIterator:(I)Ljava/util/ListIterator;` @kind interface;
  #L3766fe.  v2:= temp @kind object;
  #L376700.  return v2 @kind object;
}
procedure `java.lang.Object` `remove`(`s8.a` v1 @kind this, `int` v2 ) @signature `Ls8/a;.remove:(I)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376614.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376618.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L37661e.  v2:= temp @kind object;
  #L376620.  return v2 @kind object;
}
procedure `boolean` `remove`(`s8.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Ls8/a;.remove:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376514.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376518.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L37651e.  v2:= temp;
  #L376520.  return v2;
}
procedure `boolean` `removeAll`(`s8.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Ls8/a;.removeAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376534.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376538.  call temp:= `removeAll`(v0, v2) @signature `Ljava/util/List;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L37653e.  v2:= temp;
  #L376540.  return v2;
}
procedure `boolean` `retainAll`(`s8.a` v1 @kind this, `java.util.Collection` v2 @kind object) @signature `Ls8/a;.retainAll:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376554.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376558.  call temp:= `retainAll`(v0, v2) @signature `Ljava/util/List;.retainAll:(Ljava/util/Collection;)Z` @kind interface;
  #L37655e.  v2:= temp;
  #L376560.  return v2;
}
procedure `java.lang.Object` `set`(`s8.a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Ls8/a;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376634.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376638.  call temp:= `set`(v0, v2, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37663e.  v2:= temp @kind object;
  #L376640.  return v2 @kind object;
}
procedure `int` `size`(`s8.a` v1 @kind this) @signature `Ls8/a;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3765d4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3765d8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3765de.  v0:= temp;
  #L3765e0.  return v0;
}
procedure `java.util.List` `subList`(`s8.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Ls8/a;.subList:(II)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3766b4.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L3766b8.  call temp:= `subList`(v0, v2, v3) @signature `Ljava/util/List;.subList:(II)Ljava/util/List;` @kind interface;
  #L3766be.  v2:= temp @kind object;
  #L3766c0.  return v2 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`s8.a` v1 @kind this) @signature `Ls8/a;.toArray:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376654.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376658.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L37665e.  v0:= temp @kind object;
  #L376660.  return v0 @kind object;
}
procedure `java.lang.Object`[] `toArray`(`s8.a` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Ls8/a;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L376674.  v0:= v1.`s8.a.g` @type ^`java.util.List` @kind object;
  #L376678.  call temp:= `toArray`(v0, v2) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L37667e.  v2:= temp @kind object;
  #L376680.  return v2 @kind object;
}
