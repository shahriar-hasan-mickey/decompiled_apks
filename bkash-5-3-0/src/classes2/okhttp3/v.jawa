record `okhttp3.v` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.j0` `okhttp3.v.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.j` `okhttp3.v.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.v.c` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.v.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.v` v0 @kind this, `okhttp3.j0` v1 @kind object, `okhttp3.j` v2 @kind object, `java.util.List` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/v;.<init>:(Lokhttp3/j0;Lokhttp3/j;Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32a878.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32a87e.  v0.`okhttp3.v.a` @type ^`okhttp3.j0` := v1 @kind object;
  #L32a882.  v0.`okhttp3.v.b` @type ^`okhttp3.j` := v2 @kind object;
  #L32a886.  v0.`okhttp3.v.c` @type ^`java.util.List` := v3 @kind object;
  #L32a88a.  v0.`okhttp3.v.d` @type ^`java.util.List` := v4 @kind object;
  #L32a88e.  return @kind void;
}
procedure `okhttp3.v` `b`(`javax.net.ssl.SSLSession` v4 @kind object) @signature `Lokhttp3/v;.b:(Ljavax/net/ssl/SSLSession;)Lokhttp3/v;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a784.  call temp:= `getCipherSuite`(v4) @signature `Ljavax/net/ssl/SSLSession;.getCipherSuite:()Ljava/lang/String;` @kind interface;
  #L32a78a.  v0:= temp @kind object;
  #L32a78c.  if v0 == 0 then goto L32a848;
  #L32a790.  v1:= "SSL_NULL_WITH_NULL_NULL" @kind object;
  #L32a794.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a79a.  v1:= temp;
  #L32a79c.  if v1 != 0 then goto L32a838;
  #L32a7a0.  call temp:= `b`(v0) @signature `Lokhttp3/j;.b:(Ljava/lang/String;)Lokhttp3/j;` @kind static;
  #L32a7a6.  v0:= temp @kind object;
  #L32a7a8.  call temp:= `getProtocol`(v4) @signature `Ljavax/net/ssl/SSLSession;.getProtocol:()Ljava/lang/String;` @kind interface;
  #L32a7ae.  v1:= temp @kind object;
  #L32a7b0.  if v1 == 0 then goto L32a828;
  #L32a7b4.  v2:= "NONE" @kind object;
  #L32a7b8.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a7be.  v2:= temp;
  #L32a7c0.  if v2 != 0 then goto L32a818;
  #L32a7c4.  call temp:= `forJavaName`(v1) @signature `Lokhttp3/j0;.forJavaName:(Ljava/lang/String;)Lokhttp3/j0;` @kind static;
  #L32a7ca.  v1:= temp @kind object;
  #L32a7cc.  call temp:= `getPeerCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L32a7d2.  v2:= temp @kind object;
  #L32a7d4.  goto L32a7d8;
  #L32a7d6.  v2:= 0I;
  #L32a7d8.  if v2 == 0 then goto L32a7e6;
  #L32a7dc.  call temp:= `u`(v2) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32a7e2.  v2:= temp @kind object;
  #L32a7e4.  goto L32a7ee;
  #L32a7e6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L32a7ec.  v2:= temp @kind object;
  #L32a7ee.  call temp:= `getLocalCertificates`(v4) @signature `Ljavax/net/ssl/SSLSession;.getLocalCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L32a7f4.  v4:= temp @kind object;
  #L32a7f6.  if v4 == 0 then goto L32a804;
  #L32a7fa.  call temp:= `u`(v4) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32a800.  v4:= temp @kind object;
  #L32a802.  goto L32a80c;
  #L32a804.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L32a80a.  v4:= temp @kind object;
  #L32a80c.  v3:= new `okhttp3.v`;
  #L32a810.  call `<init>`(v3, v1, v0, v2, v4) @signature `Lokhttp3/v;.<init>:(Lokhttp3/j0;Lokhttp3/j;Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L32a816.  return v3 @kind object;
  #L32a818.  v4:= new `java.io.IOException`;
  #L32a81c.  v0:= "tlsVersion == NONE" @kind object;
  #L32a820.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32a826.  throw v4;
  #L32a828.  v4:= new `java.lang.IllegalStateException`;
  #L32a82c.  v0:= "tlsVersion == null" @kind object;
  #L32a830.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32a836.  throw v4;
  #L32a838.  v4:= new `java.io.IOException`;
  #L32a83c.  v0:= "cipherSuite == SSL_NULL_WITH_NULL_NULL" @kind object;
  #L32a840.  call `<init>`(v4, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32a846.  throw v4;
  #L32a848.  v4:= new `java.lang.IllegalStateException`;
  #L32a84c.  v0:= "cipherSuite == null" @kind object;
  #L32a850.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32a856.  throw v4;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L32a7cc..L32a7d4] goto L32a7d6;
}
procedure `java.util.List` `c`(`okhttp3.v` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lokhttp3/v;.c:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32a6e4.  v0:= new `java.util.ArrayList`;
  #L32a6e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32a6ee.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32a6f4.  v4:= temp @kind object;
  #L32a6f6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32a6fc.  v1:= temp;
  #L32a6fe.  if v1 == 0 then goto L32a742;
  #L32a702.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32a708.  v1:= temp @kind object;
  #L32a70a.  v1:= (`java.security.cert.Certificate`) v1 @kind object;
  #L32a70e.  v2:= instanceof @variable v1 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L32a712.  if v2 == 0 then goto L32a732;
  #L32a716.  v1:= (`java.security.cert.X509Certificate`) v1 @kind object;
  #L32a71a.  call temp:= `getSubjectDN`(v1) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L32a720.  v1:= temp @kind object;
  #L32a722.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L32a728.  v1:= temp @kind object;
  #L32a72a.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a730.  goto L32a6f6;
  #L32a732.  call temp:= `getType`(v1) @signature `Ljava/security/cert/Certificate;.getType:()Ljava/lang/String;` @kind virtual;
  #L32a738.  v1:= temp @kind object;
  #L32a73a.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a740.  goto L32a6f6;
  #L32a742.  return v0 @kind object;
}
procedure `okhttp3.j` `a`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.a:()Lokhttp3/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a76c.  v0:= v1.`okhttp3.v.b` @type ^`okhttp3.j` @kind object;
  #L32a770.  return v0 @kind object;
}
procedure `java.util.List` `d`(`okhttp3.v` v1 @kind this) @signature `Lokhttp3/v;.d:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a754.  v0:= v1.`okhttp3.v.c` @type ^`java.util.List` @kind object;
  #L32a758.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.v` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/v;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32a584.  v0:= instanceof @variable v4 @type ^`okhttp3.v` @kind boolean;
  #L32a588.  v1:= 0I;
  #L32a58a.  if v0 != 0 then goto L32a590;
  #L32a58e.  return v1;
  #L32a590.  v4:= (`okhttp3.v`) v4 @kind object;
  #L32a594.  v0:= v3.`okhttp3.v.a` @type ^`okhttp3.j0` @kind object;
  #L32a598.  v2:= v4.`okhttp3.v.a` @type ^`okhttp3.j0` @kind object;
  #L32a59c.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a5a2.  v0:= temp;
  #L32a5a4.  if v0 == 0 then goto L32a5e6;
  #L32a5a8.  v0:= v3.`okhttp3.v.b` @type ^`okhttp3.j` @kind object;
  #L32a5ac.  v2:= v4.`okhttp3.v.b` @type ^`okhttp3.j` @kind object;
  #L32a5b0.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32a5b6.  v0:= temp;
  #L32a5b8.  if v0 == 0 then goto L32a5e6;
  #L32a5bc.  v0:= v3.`okhttp3.v.c` @type ^`java.util.List` @kind object;
  #L32a5c0.  v2:= v4.`okhttp3.v.c` @type ^`java.util.List` @kind object;
  #L32a5c4.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L32a5ca.  v0:= temp;
  #L32a5cc.  if v0 == 0 then goto L32a5e6;
  #L32a5d0.  v0:= v3.`okhttp3.v.d` @type ^`java.util.List` @kind object;
  #L32a5d4.  v4:= v4.`okhttp3.v.d` @type ^`java.util.List` @kind object;
  #L32a5d8.  call temp:= `equals`(v0, v4) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L32a5de.  v4:= temp;
  #L32a5e0.  if v4 == 0 then goto L32a5e6;
  #L32a5e4.  v1:= 1I;
  #L32a5e6.  return v1;
}
procedure `int` `hashCode`(`okhttp3.v` v2 @kind this) @signature `Lokhttp3/v;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a5f8.  v0:= v2.`okhttp3.v.a` @type ^`okhttp3.j0` @kind object;
  #L32a5fc.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L32a602.  v0:= temp;
  #L32a604.  v1:= 527I;
  #L32a608.  v1:= v1 + v0 @kind int;
  #L32a60a.  v1:= v1 * 31;
  #L32a60e.  v0:= v2.`okhttp3.v.b` @type ^`okhttp3.j` @kind object;
  #L32a612.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L32a618.  v0:= temp;
  #L32a61a.  v1:= v1 + v0 @kind int;
  #L32a61c.  v1:= v1 * 31;
  #L32a620.  v0:= v2.`okhttp3.v.c` @type ^`java.util.List` @kind object;
  #L32a624.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L32a62a.  v0:= temp;
  #L32a62c.  v1:= v1 + v0 @kind int;
  #L32a62e.  v1:= v1 * 31;
  #L32a632.  v0:= v2.`okhttp3.v.d` @type ^`java.util.List` @kind object;
  #L32a636.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L32a63c.  v0:= temp;
  #L32a63e.  v1:= v1 + v0 @kind int;
  #L32a640.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.v` v2 @kind this) @signature `Lokhttp3/v;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a654.  v0:= new `java.lang.StringBuilder`;
  #L32a658.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32a65e.  v1:= "Handshake{tlsVersion=" @kind object;
  #L32a662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a668.  v1:= v2.`okhttp3.v.a` @type ^`okhttp3.j0` @kind object;
  #L32a66c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a672.  v1:= " cipherSuite=" @kind object;
  #L32a676.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a67c.  v1:= v2.`okhttp3.v.b` @type ^`okhttp3.j` @kind object;
  #L32a680.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a686.  v1:= " peerCertificates=" @kind object;
  #L32a68a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a690.  v1:= v2.`okhttp3.v.c` @type ^`java.util.List` @kind object;
  #L32a694.  call temp:= `c`(v2, v1) @signature `Lokhttp3/v;.c:(Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L32a69a.  v1:= temp @kind object;
  #L32a69c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a6a2.  v1:= " localCertificates=" @kind object;
  #L32a6a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a6ac.  v1:= v2.`okhttp3.v.d` @type ^`java.util.List` @kind object;
  #L32a6b0.  call temp:= `c`(v2, v1) @signature `Lokhttp3/v;.c:(Ljava/util/List;)Ljava/util/List;` @kind direct;
  #L32a6b6.  v1:= temp @kind object;
  #L32a6b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a6be.  v1:= 125I;
  #L32a6c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a6c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32a6ce.  v0:= temp @kind object;
  #L32a6d0.  return v0 @kind object;
}
