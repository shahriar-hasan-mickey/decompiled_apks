record `okhttp3.c0` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.c0.protocol` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.c0` `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0` `@@okhttp3.c0.HTTP_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0` `@@okhttp3.c0.HTTP_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0` `@@okhttp3.c0.HTTP_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0` `@@okhttp3.c0.QUIC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0` `@@okhttp3.c0.SPDY_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.c0`[] `@@okhttp3.c0.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/c0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L32dd88.  v0:= new `okhttp3.c0`;
  #L32dd8c.  v1:= "HTTP_1_0" @kind object;
  #L32dd90.  v2:= 0I;
  #L32dd92.  v3:= "http/1.0" @kind object;
  #L32dd96.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32dd9c.  `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` := v0 @kind object;
  #L32dda0.  v1:= new `okhttp3.c0`;
  #L32dda4.  v3:= "HTTP_1_1" @kind object;
  #L32dda8.  v4:= 1I;
  #L32ddaa.  v5:= "http/1.1" @kind object;
  #L32ddae.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32ddb4.  `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` := v1 @kind object;
  #L32ddb8.  v3:= new `okhttp3.c0`;
  #L32ddbc.  v5:= "SPDY_3" @kind object;
  #L32ddc0.  v6:= 2I;
  #L32ddc2.  v7:= "spdy/3.1" @kind object;
  #L32ddc6.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32ddcc.  `@@okhttp3.c0.SPDY_3` @type ^`okhttp3.c0` := v3 @kind object;
  #L32ddd0.  v5:= new `okhttp3.c0`;
  #L32ddd4.  v7:= "HTTP_2" @kind object;
  #L32ddd8.  v8:= 3I;
  #L32ddda.  v9:= "h2" @kind object;
  #L32ddde.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32dde4.  `@@okhttp3.c0.HTTP_2` @type ^`okhttp3.c0` := v5 @kind object;
  #L32dde8.  v7:= new `okhttp3.c0`;
  #L32ddec.  v9:= "H2_PRIOR_KNOWLEDGE" @kind object;
  #L32ddf0.  v10:= 4I;
  #L32ddf2.  v11:= "h2_prior_knowledge" @kind object;
  #L32ddf6.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32ddfc.  `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.c0` := v7 @kind object;
  #L32de00.  v9:= new `okhttp3.c0`;
  #L32de04.  v11:= "QUIC" @kind object;
  #L32de08.  v12:= 5I;
  #L32de0a.  v13:= "quic" @kind object;
  #L32de0e.  call `<init>`(v9, v11, v12, v13) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32de14.  `@@okhttp3.c0.QUIC` @type ^`okhttp3.c0` := v9 @kind object;
  #L32de18.  v11:= 6I;
  #L32de1a.  v11:= new `okhttp3.c0`[v11];
  #L32de1e.  v11[v2]:= v0 @kind object;
  #L32de22.  v11[v4]:= v1 @kind object;
  #L32de26.  v11[v6]:= v3 @kind object;
  #L32de2a.  v11[v8]:= v5 @kind object;
  #L32de2e.  v11[v10]:= v7 @kind object;
  #L32de32.  v11[v12]:= v9 @kind object;
  #L32de36.  `@@okhttp3.c0.g` @type ^`okhttp3.c0`[] := v11 @kind object;
  #L32de3a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.c0` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/c0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32de4c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32de52.  v0.`okhttp3.c0.protocol` @type ^`java.lang.String` := v3 @kind object;
  #L32de56.  return @kind void;
}
procedure `okhttp3.c0` `get`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/c0;.get:(Ljava/lang/String;)Lokhttp3/c0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32dc7c.  v0:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L32dc80.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dc84.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dc8a.  v1:= temp;
  #L32dc8c.  if v1 == 0 then goto L32dc92;
  #L32dc90.  return v0 @kind object;
  #L32dc92.  v0:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L32dc96.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dc9a.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dca0.  v1:= temp;
  #L32dca2.  if v1 == 0 then goto L32dca8;
  #L32dca6.  return v0 @kind object;
  #L32dca8.  v0:= `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.c0` @kind object;
  #L32dcac.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dcb0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dcb6.  v1:= temp;
  #L32dcb8.  if v1 == 0 then goto L32dcbe;
  #L32dcbc.  return v0 @kind object;
  #L32dcbe.  v0:= `@@okhttp3.c0.HTTP_2` @type ^`okhttp3.c0` @kind object;
  #L32dcc2.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dcc6.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dccc.  v1:= temp;
  #L32dcce.  if v1 == 0 then goto L32dcd4;
  #L32dcd2.  return v0 @kind object;
  #L32dcd4.  v0:= `@@okhttp3.c0.SPDY_3` @type ^`okhttp3.c0` @kind object;
  #L32dcd8.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dcdc.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dce2.  v1:= temp;
  #L32dce4.  if v1 == 0 then goto L32dcea;
  #L32dce8.  return v0 @kind object;
  #L32dcea.  v0:= `@@okhttp3.c0.QUIC` @type ^`okhttp3.c0` @kind object;
  #L32dcee.  v1:= v0.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dcf2.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32dcf8.  v1:= temp;
  #L32dcfa.  if v1 == 0 then goto L32dd00;
  #L32dcfe.  return v0 @kind object;
  #L32dd00.  v0:= new `java.io.IOException`;
  #L32dd04.  v1:= new `java.lang.StringBuilder`;
  #L32dd08.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dd0e.  v2:= "Unexpected protocol: " @kind object;
  #L32dd12.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dd18.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dd1e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dd24.  v3:= temp @kind object;
  #L32dd26.  call `<init>`(v0, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dd2c.  throw v0;
}
procedure `okhttp3.c0` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/c0;.valueOf:(Ljava/lang/String;)Lokhttp3/c0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32dd40.  v0:= constclass @type ^`okhttp3.c0` @kind object;
  #L32dd44.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32dd4a.  v1:= temp @kind object;
  #L32dd4c.  v1:= (`okhttp3.c0`) v1 @kind object;
  #L32dd50.  return v1 @kind object;
}
procedure `okhttp3.c0`[] `values`() @signature `Lokhttp3/c0;.values:()[Lokhttp3/c0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32dd64.  v0:= `@@okhttp3.c0.g` @type ^`okhttp3.c0`[] @kind object;
  #L32dd68.  call temp:= `clone`(v0) @signature `[Lokhttp3/c0;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32dd6e.  v0:= temp @kind object;
  #L32dd70.  v0:= (`okhttp3.c0`[]) v0 @kind object;
  #L32dd74.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.c0` v1 @kind this) @signature `Lokhttp3/c0;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32dc64.  v0:= v1.`okhttp3.c0.protocol` @type ^`java.lang.String` @kind object;
  #L32dc68.  return v0 @kind object;
}
