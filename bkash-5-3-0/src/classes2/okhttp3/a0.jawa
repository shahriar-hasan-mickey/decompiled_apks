record `okhttp3.a0` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.f0` @kind class {
  `okio.f` `okhttp3.a0.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.z` `okhttp3.a0.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.a0.c` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.a0.d` @AccessFlag PRIVATE;
}
global `okhttp3.z` `@@okhttp3.a0.e` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.z` `@@okhttp3.a0.f` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.a0.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.a0.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.a0.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/a0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32d0ac.  v0:= "multipart/mixed" @kind object;
  #L32d0b0.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d0b6.  v0:= temp @kind object;
  #L32d0b8.  `@@okhttp3.a0.e` @type ^`okhttp3.z` := v0 @kind object;
  #L32d0bc.  v0:= "multipart/alternative" @kind object;
  #L32d0c0.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d0c6.  v0:= "multipart/digest" @kind object;
  #L32d0ca.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d0d0.  v0:= "multipart/parallel" @kind object;
  #L32d0d4.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d0da.  v0:= "multipart/form-data" @kind object;
  #L32d0de.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d0e4.  v0:= temp @kind object;
  #L32d0e6.  `@@okhttp3.a0.f` @type ^`okhttp3.z` := v0 @kind object;
  #L32d0ea.  v0:= 2I;
  #L32d0ec.  v1:= new `byte`[v0];
  #L32d0f0.  goto L32d118;
  #L32d0f6.  `@@okhttp3.a0.g` @type ^`byte`[] := v1 @kind object;
  #L32d0fa.  v1:= new `byte`[v0];
  #L32d0fe.  goto L32d124;
  #L32d104.  `@@okhttp3.a0.h` @type ^`byte`[] := v1 @kind object;
  #L32d108.  v0:= new `byte`[v0];
  #L32d10c.  goto L32d130;
  #L32d112.  `@@okhttp3.a0.i` @type ^`byte`[] := v0 @kind object;
  #L32d116.  return @kind void;
  #L32d118.  v1:= (58I, 32I) @kind object;
  #L32d121.  goto L32d0f6;
  #L32d122.  
  #L32d124.  v1:= (13I, 10I) @kind object;
  #L32d12d.  goto L32d104;
  #L32d12e.  
  #L32d130.  v0:= (45I, 45I) @kind object;
  #L32d139.  goto L32d112;
}
procedure `void` `<init>`(`okhttp3.a0` v2 @kind this, `okio.f` v3 @kind object, `okhttp3.z` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/a0;.<init>:(Lokio/f;Lokhttp3/z;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32d14c.  call `<init>`(v2) @signature `Lokhttp3/f0;.<init>:()V` @kind direct;
  #L32d152.  v0:= -1L;
  #L32d156.  v2.`okhttp3.a0.d` @type ^`long` := v0 @kind wide;
  #L32d15a.  v2.`okhttp3.a0.a` @type ^`okio.f` := v3 @kind object;
  #L32d15e.  v0:= new `java.lang.StringBuilder`;
  #L32d162.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32d168.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d16e.  v4:= "; boundary=" @kind object;
  #L32d172.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d178.  call temp:= `utf8`(v3) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L32d17e.  v3:= temp @kind object;
  #L32d180.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d186.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32d18c.  v3:= temp @kind object;
  #L32d18e.  call temp:= `c`(v3) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32d194.  v3:= temp @kind object;
  #L32d196.  v2.`okhttp3.a0.b` @type ^`okhttp3.z` := v3 @kind object;
  #L32d19a.  call temp:= `t`(v5) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32d1a0.  v3:= temp @kind object;
  #L32d1a2.  v2.`okhttp3.a0.c` @type ^`java.util.List` := v3 @kind object;
  #L32d1a6.  return @kind void;
}
procedure `void` `i`(`java.lang.StringBuilder` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/a0;.i:(Ljava/lang/StringBuilder;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32d1b8.  v0:= 34I;
  #L32d1bc.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d1c2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32d1c8.  v1:= temp;
  #L32d1ca.  v2:= 0I;
  #L32d1cc.  if v2 >= v1 then goto L32d21c;
  #L32d1d0.  call temp:= `charAt`(v6, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32d1d6.  v3:= temp;
  #L32d1d8.  v4:= 10I;
  #L32d1dc.  if v3 == v4 then goto L32d20c;
  #L32d1e0.  v4:= 13I;
  #L32d1e4.  if v3 == v4 then goto L32d200;
  #L32d1e8.  if v3 == v0 then goto L32d1f4;
  #L32d1ec.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d1f2.  goto L32d216;
  #L32d1f4.  v3:= "%22" @kind object;
  #L32d1f8.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d1fe.  goto L32d216;
  #L32d200.  v3:= "%0D" @kind object;
  #L32d204.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d20a.  goto L32d216;
  #L32d20c.  v3:= "%0A" @kind object;
  #L32d210.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d216.  v2:= v2 + 1;
  #L32d21a.  goto L32d1cc;
  #L32d21c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32d222.  return @kind void;
}
procedure `long` `l`(`okhttp3.a0` v12 @kind this, `okio.d` v13 @kind object, `boolean` v14 ) @signature `Lokhttp3/a0;.l:(Lokio/d;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L32cedc.  if v14 == 0 then goto L32ceee;
  #L32cee0.  v13:= new `okio.c`;
  #L32cee4.  call `<init>`(v13) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L32ceea.  v0:= v13 @kind object;
  #L32ceec.  goto L32cef0;
  #L32ceee.  v0:= 0I;
  #L32cef0.  v1:= v12.`okhttp3.a0.c` @type ^`java.util.List` @kind object;
  #L32cef4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cefa.  v1:= temp;
  #L32cefc.  v2:= 0I;
  #L32cefe.  v3:= 0L;
  #L32cf02.  v5:= 0I;
  #L32cf04.  if v5 >= v1 then goto L32d024;
  #L32cf08.  v6:= v12.`okhttp3.a0.c` @type ^`java.util.List` @kind object;
  #L32cf0c.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cf12.  v6:= temp @kind object;
  #L32cf14.  v6:= (`okhttp3.a0$b`) v6 @kind object;
  #L32cf18.  v7:= v6.`okhttp3.a0$b.a` @type ^`okhttp3.w` @kind object;
  #L32cf1c.  v6:= v6.`okhttp3.a0$b.b` @type ^`okhttp3.f0` @kind object;
  #L32cf20.  v8:= `@@okhttp3.a0.i` @type ^`byte`[] @kind object;
  #L32cf24.  call temp:= `v0`(v13, v8) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cf2a.  v8:= v12.`okhttp3.a0.a` @type ^`okio.f` @kind object;
  #L32cf2e.  call temp:= `w0`(v13, v8) @signature `Lokio/d;.w0:(Lokio/f;)Lokio/d;` @kind interface;
  #L32cf34.  v8:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32cf38.  call temp:= `v0`(v13, v8) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cf3e.  if v7 == 0 then goto L32cf8c;
  #L32cf42.  call temp:= `h`(v7) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L32cf48.  v8:= temp;
  #L32cf4a.  v9:= 0I;
  #L32cf4c.  if v9 >= v8 then goto L32cf8c;
  #L32cf50.  call temp:= `e`(v7, v9) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L32cf56.  v10:= temp @kind object;
  #L32cf58.  call temp:= `T`(v13, v10) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L32cf5e.  v10:= temp @kind object;
  #L32cf60.  v11:= `@@okhttp3.a0.g` @type ^`byte`[] @kind object;
  #L32cf64.  call temp:= `v0`(v10, v11) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cf6a.  v10:= temp @kind object;
  #L32cf6c.  call temp:= `i`(v7, v9) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L32cf72.  v11:= temp @kind object;
  #L32cf74.  call temp:= `T`(v10, v11) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L32cf7a.  v10:= temp @kind object;
  #L32cf7c.  v11:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32cf80.  call temp:= `v0`(v10, v11) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cf86.  v9:= v9 + 1;
  #L32cf8a.  goto L32cf4c;
  #L32cf8c.  call temp:= `b`(v6) @signature `Lokhttp3/f0;.b:()Lokhttp3/z;` @kind virtual;
  #L32cf92.  v7:= temp @kind object;
  #L32cf94.  if v7 == 0 then goto L32cfbe;
  #L32cf98.  v8:= "Content-Type: " @kind object;
  #L32cf9c.  call temp:= `T`(v13, v8) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L32cfa2.  v8:= temp @kind object;
  #L32cfa4.  call temp:= `toString`(v7) @signature `Lokhttp3/z;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cfaa.  v7:= temp @kind object;
  #L32cfac.  call temp:= `T`(v8, v7) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L32cfb2.  v7:= temp @kind object;
  #L32cfb4.  v8:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32cfb8.  call temp:= `v0`(v7, v8) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cfbe.  call temp:= `a`(v6) @signature `Lokhttp3/f0;.a:()J` @kind virtual;
  #L32cfc4.  v7:= temp @kind wide;
  #L32cfc6.  v9:= -1L;
  #L32cfca.  v11:= lcmp(v7, v9);
  #L32cfce.  if v11 == 0 then goto L32cff2;
  #L32cfd2.  v9:= "Content-Length: " @kind object;
  #L32cfd6.  call temp:= `T`(v13, v9) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L32cfdc.  v9:= temp @kind object;
  #L32cfde.  call temp:= `I0`(v9, v7) @signature `Lokio/d;.I0:(J)Lokio/d;` @kind interface;
  #L32cfe4.  v9:= temp @kind object;
  #L32cfe6.  v10:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32cfea.  call temp:= `v0`(v9, v10) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32cff0.  goto L32cffe;
  #L32cff2.  if v14 == 0 then goto L32cffe;
  #L32cff6.  call `e`(v0) @signature `Lokio/c;.e:()V` @kind virtual;
  #L32cffc.  return v9 @kind wide;
  #L32cffe.  v9:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32d002.  call temp:= `v0`(v13, v9) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32d008.  if v14 == 0 then goto L32d010;
  #L32d00c.  v3:= v3 + v7 @kind long;
  #L32d00e.  goto L32d016;
  #L32d010.  call `h`(v6, v13) @signature `Lokhttp3/f0;.h:(Lokio/d;)V` @kind virtual;
  #L32d016.  call temp:= `v0`(v13, v9) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32d01c.  v5:= v5 + 1;
  #L32d020.  goto L32cf04;
  #L32d024.  v1:= `@@okhttp3.a0.i` @type ^`byte`[] @kind object;
  #L32d028.  call temp:= `v0`(v13, v1) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32d02e.  v2:= v12.`okhttp3.a0.a` @type ^`okio.f` @kind object;
  #L32d032.  call temp:= `w0`(v13, v2) @signature `Lokio/d;.w0:(Lokio/f;)Lokio/d;` @kind interface;
  #L32d038.  call temp:= `v0`(v13, v1) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32d03e.  v1:= `@@okhttp3.a0.h` @type ^`byte`[] @kind object;
  #L32d042.  call temp:= `v0`(v13, v1) @signature `Lokio/d;.v0:([B)Lokio/d;` @kind interface;
  #L32d048.  if v14 == 0 then goto L32d05c;
  #L32d04c.  call temp:= `u0`(v0) @signature `Lokio/c;.u0:()J` @kind virtual;
  #L32d052.  v13:= temp @kind wide;
  #L32d054.  v3:= v3 + v13 @kind long;
  #L32d056.  call `e`(v0) @signature `Lokio/c;.e:()V` @kind virtual;
  #L32d05c.  return v3 @kind wide;
}
procedure `long` `a`(`okhttp3.a0` v5 @kind this) @signature `Lokhttp3/a0;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32cea8.  v0:= v5.`okhttp3.a0.d` @type ^`long` @kind wide;
  #L32ceac.  v2:= -1L;
  #L32ceb0.  v4:= lcmp(v0, v2);
  #L32ceb4.  if v4 == 0 then goto L32ceba;
  #L32ceb8.  return v0 @kind wide;
  #L32ceba.  v0:= 0I;
  #L32cebc.  v1:= 1I;
  #L32cebe.  call temp:= `l`(v5, v0, v1) @signature `Lokhttp3/a0;.l:(Lokio/d;Z)J` @kind direct;
  #L32cec4.  v0:= temp @kind wide;
  #L32cec6.  v5.`okhttp3.a0.d` @type ^`long` := v0 @kind wide;
  #L32ceca.  return v0 @kind wide;
}
procedure `okhttp3.z` `b`(`okhttp3.a0` v1 @kind this) @signature `Lokhttp3/a0;.b:()Lokhttp3/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d070.  v0:= v1.`okhttp3.a0.b` @type ^`okhttp3.z` @kind object;
  #L32d074.  return v0 @kind object;
}
procedure `void` `h`(`okhttp3.a0` v1 @kind this, `okio.d` v2 @kind object) @signature `Lokhttp3/a0;.h:(Lokio/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d234.  v0:= 0I;
  #L32d236.  call temp:= `l`(v1, v2, v0) @signature `Lokhttp3/a0;.l:(Lokio/d;Z)J` @kind direct;
  #L32d23c.  return @kind void;
}
procedure `okhttp3.a0$b` `j`(`okhttp3.a0` v1 @kind this, `int` v2 ) @signature `Lokhttp3/a0;.j:(I)Lokhttp3/a0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d088.  v0:= v1.`okhttp3.a0.c` @type ^`java.util.List` @kind object;
  #L32d08c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32d092.  v2:= temp @kind object;
  #L32d094.  v2:= (`okhttp3.a0$b`) v2 @kind object;
  #L32d098.  return v2 @kind object;
}
procedure `int` `k`(`okhttp3.a0` v1 @kind this) @signature `Lokhttp3/a0;.k:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce88.  v0:= v1.`okhttp3.a0.c` @type ^`java.util.List` @kind object;
  #L32ce8c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32ce92.  v0:= temp;
  #L32ce94.  return v0;
}
