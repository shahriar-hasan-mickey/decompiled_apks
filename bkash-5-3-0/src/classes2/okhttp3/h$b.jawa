record `okhttp3.h$b` @kind class @AccessFlag FINAL {
  `java.lang.String` `okhttp3.h$b.a` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.h$b.b` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.h$b.c` @AccessFlag FINAL;
  `okio.f` `okhttp3.h$b.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.h$b` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/h$b;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L327be4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L327bea.  v2.`okhttp3.h$b.a` @type ^`java.lang.String` := v3 @kind object;
  #L327bee.  v0:= "*." @kind object;
  #L327bf2.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L327bf8.  v0:= temp;
  #L327bfa.  v1:= "http://" @kind object;
  #L327bfe.  if v0 == 0 then goto L327c3c;
  #L327c02.  v0:= new `java.lang.StringBuilder`;
  #L327c06.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327c0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327c12.  v1:= 2I;
  #L327c14.  call temp:= `substring`(v3, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L327c1a.  v3:= temp @kind object;
  #L327c1c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327c22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327c28.  v3:= temp @kind object;
  #L327c2a.  call temp:= `k`(v3) @signature `Lokhttp3/x;.k:(Ljava/lang/String;)Lokhttp3/x;` @kind static;
  #L327c30.  v3:= temp @kind object;
  #L327c32.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L327c38.  v3:= temp @kind object;
  #L327c3a.  goto L327c6a;
  #L327c3c.  v0:= new `java.lang.StringBuilder`;
  #L327c40.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327c46.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327c4c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327c52.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327c58.  v3:= temp @kind object;
  #L327c5a.  call temp:= `k`(v3) @signature `Lokhttp3/x;.k:(Ljava/lang/String;)Lokhttp3/x;` @kind static;
  #L327c60.  v3:= temp @kind object;
  #L327c62.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L327c68.  v3:= temp @kind object;
  #L327c6a.  v2.`okhttp3.h$b.b` @type ^`java.lang.String` := v3 @kind object;
  #L327c6e.  v3:= "sha1/" @kind object;
  #L327c72.  call temp:= `startsWith`(v4, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L327c78.  v0:= temp;
  #L327c7a.  if v0 == 0 then goto L327c9a;
  #L327c7e.  v2.`okhttp3.h$b.c` @type ^`java.lang.String` := v3 @kind object;
  #L327c82.  v3:= 5I;
  #L327c84.  call temp:= `substring`(v4, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L327c8a.  v3:= temp @kind object;
  #L327c8c.  call temp:= `decodeBase64`(v3) @signature `Lokio/f;.decodeBase64:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L327c92.  v3:= temp @kind object;
  #L327c94.  v2.`okhttp3.h$b.d` @type ^`okio.f` := v3 @kind object;
  #L327c98.  goto L327cc4;
  #L327c9a.  v3:= "sha256/" @kind object;
  #L327c9e.  call temp:= `startsWith`(v4, v3) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L327ca4.  v0:= temp;
  #L327ca6.  if v0 == 0 then goto L327cfc;
  #L327caa.  v2.`okhttp3.h$b.c` @type ^`java.lang.String` := v3 @kind object;
  #L327cae.  v3:= 7I;
  #L327cb0.  call temp:= `substring`(v4, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L327cb6.  v3:= temp @kind object;
  #L327cb8.  call temp:= `decodeBase64`(v3) @signature `Lokio/f;.decodeBase64:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L327cbe.  v3:= temp @kind object;
  #L327cc0.  v2.`okhttp3.h$b.d` @type ^`okio.f` := v3 @kind object;
  #L327cc4.  v3:= v2.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327cc8.  if v3 == 0 then goto L327cce;
  #L327ccc.  return @kind void;
  #L327cce.  v3:= new `java.lang.IllegalArgumentException`;
  #L327cd2.  v0:= new `java.lang.StringBuilder`;
  #L327cd6.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327cdc.  v1:= "pins must be base64: " @kind object;
  #L327ce0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327ce6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327cec.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327cf2.  v4:= temp @kind object;
  #L327cf4.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327cfa.  throw v3;
  #L327cfc.  v3:= new `java.lang.IllegalArgumentException`;
  #L327d00.  v0:= new `java.lang.StringBuilder`;
  #L327d04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327d0a.  v1:= "pins must start with 'sha256/' or 'sha1/': " @kind object;
  #L327d0e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327d14.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327d1a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327d20.  v4:= temp @kind object;
  #L327d22.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327d28.  throw v3;
}
procedure `boolean` `a`(`okhttp3.h$b` v10 @kind this, `java.lang.String` v11 @kind object) @signature `Lokhttp3/h$b;.a:(Ljava/lang/String;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L327ad8.  v0:= v10.`okhttp3.h$b.a` @type ^`java.lang.String` @kind object;
  #L327adc.  v1:= "*." @kind object;
  #L327ae0.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L327ae6.  v0:= temp;
  #L327ae8.  if v0 == 0 then goto L327b3e;
  #L327aec.  v0:= 46I;
  #L327af0.  call temp:= `indexOf`(v11, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L327af6.  v0:= temp;
  #L327af8.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L327afe.  v1:= temp;
  #L327b00.  v1:= v1 - v0 @kind int;
  #L327b02.  v2:= 1I;
  #L327b04.  v1:= v1 - v2 @kind int;
  #L327b06.  v3:= v10.`okhttp3.h$b.b` @type ^`java.lang.String` @kind object;
  #L327b0a.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L327b10.  v3:= temp;
  #L327b12.  if v1 != v3 then goto L327b3a;
  #L327b16.  v5:= 0I;
  #L327b18.  v6:= v0 + 1;
  #L327b1c.  v7:= v10.`okhttp3.h$b.b` @type ^`java.lang.String` @kind object;
  #L327b20.  v8:= 0I;
  #L327b22.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L327b28.  v9:= temp;
  #L327b2a.  v4:= v11 @kind object;
  #L327b2c.  call temp:= `regionMatches`(v4, v5, v6, v7, v8, v9) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L327b32.  v11:= temp;
  #L327b34.  if v11 == 0 then goto L327b3a;
  #L327b38.  goto L327b3c;
  #L327b3a.  v2:= 0I;
  #L327b3c.  return v2;
  #L327b3e.  v0:= v10.`okhttp3.h$b.b` @type ^`java.lang.String` @kind object;
  #L327b42.  call temp:= `equals`(v11, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327b48.  v11:= temp;
  #L327b4a.  return v11;
}
procedure `boolean` `equals`(`okhttp3.h$b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/h$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327a78.  v0:= instanceof @variable v3 @type ^`okhttp3.h$b` @kind boolean;
  #L327a7c.  if v0 == 0 then goto L327ac4;
  #L327a80.  v0:= v2.`okhttp3.h$b.a` @type ^`java.lang.String` @kind object;
  #L327a84.  v3:= (`okhttp3.h$b`) v3 @kind object;
  #L327a88.  v1:= v3.`okhttp3.h$b.a` @type ^`java.lang.String` @kind object;
  #L327a8c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327a92.  v0:= temp;
  #L327a94.  if v0 == 0 then goto L327ac4;
  #L327a98.  v0:= v2.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L327a9c.  v1:= v3.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L327aa0.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327aa6.  v0:= temp;
  #L327aa8.  if v0 == 0 then goto L327ac4;
  #L327aac.  v0:= v2.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327ab0.  v3:= v3.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327ab4.  call temp:= `equals`(v0, v3) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327aba.  v3:= temp;
  #L327abc.  if v3 == 0 then goto L327ac4;
  #L327ac0.  v3:= 1I;
  #L327ac2.  goto L327ac6;
  #L327ac4.  v3:= 0I;
  #L327ac6.  return v3;
}
procedure `int` `hashCode`(`okhttp3.h$b` v2 @kind this) @signature `Lokhttp3/h$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327b5c.  v0:= v2.`okhttp3.h$b.a` @type ^`java.lang.String` @kind object;
  #L327b60.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L327b66.  v0:= temp;
  #L327b68.  v1:= 527I;
  #L327b6c.  v1:= v1 + v0 @kind int;
  #L327b6e.  v1:= v1 * 31;
  #L327b72.  v0:= v2.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L327b76.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L327b7c.  v0:= temp;
  #L327b7e.  v1:= v1 + v0 @kind int;
  #L327b80.  v1:= v1 * 31;
  #L327b84.  v0:= v2.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327b88.  call temp:= `hashCode`(v0) @signature `Lokio/f;.hashCode:()I` @kind virtual;
  #L327b8e.  v0:= temp;
  #L327b90.  v1:= v1 + v0 @kind int;
  #L327b92.  return v1;
}
procedure `java.lang.String` `toString`(`okhttp3.h$b` v2 @kind this) @signature `Lokhttp3/h$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327ba4.  v0:= new `java.lang.StringBuilder`;
  #L327ba8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327bae.  v1:= v2.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L327bb2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327bb8.  v1:= v2.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327bbc.  call temp:= `base64`(v1) @signature `Lokio/f;.base64:()Ljava/lang/String;` @kind virtual;
  #L327bc2.  v1:= temp @kind object;
  #L327bc4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327bca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327bd0.  v0:= temp @kind object;
  #L327bd2.  return v0 @kind object;
}
