record `okhttp3.j0` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.j0.javaName` @AccessFlag FINAL;
}
global `okhttp3.j0` `@@okhttp3.j0.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.j0` `@@okhttp3.j0.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.j0` `@@okhttp3.j0.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.j0` `@@okhttp3.j0.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.j0` `@@okhttp3.j0.TLS_1_3` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.j0`[] `@@okhttp3.j0.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/j0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L32f980.  v0:= new `okhttp3.j0`;
  #L32f984.  v1:= "TLS_1_3" @kind object;
  #L32f988.  v2:= 0I;
  #L32f98a.  v3:= "TLSv1.3" @kind object;
  #L32f98e.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32f994.  `@@okhttp3.j0.TLS_1_3` @type ^`okhttp3.j0` := v0 @kind object;
  #L32f998.  v1:= new `okhttp3.j0`;
  #L32f99c.  v3:= "TLS_1_2" @kind object;
  #L32f9a0.  v4:= 1I;
  #L32f9a2.  v5:= "TLSv1.2" @kind object;
  #L32f9a6.  call `<init>`(v1, v3, v4, v5) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32f9ac.  `@@okhttp3.j0.TLS_1_2` @type ^`okhttp3.j0` := v1 @kind object;
  #L32f9b0.  v3:= new `okhttp3.j0`;
  #L32f9b4.  v5:= "TLS_1_1" @kind object;
  #L32f9b8.  v6:= 2I;
  #L32f9ba.  v7:= "TLSv1.1" @kind object;
  #L32f9be.  call `<init>`(v3, v5, v6, v7) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32f9c4.  `@@okhttp3.j0.TLS_1_1` @type ^`okhttp3.j0` := v3 @kind object;
  #L32f9c8.  v5:= new `okhttp3.j0`;
  #L32f9cc.  v7:= "TLS_1_0" @kind object;
  #L32f9d0.  v8:= 3I;
  #L32f9d2.  v9:= "TLSv1" @kind object;
  #L32f9d6.  call `<init>`(v5, v7, v8, v9) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32f9dc.  `@@okhttp3.j0.TLS_1_0` @type ^`okhttp3.j0` := v5 @kind object;
  #L32f9e0.  v7:= new `okhttp3.j0`;
  #L32f9e4.  v9:= "SSL_3_0" @kind object;
  #L32f9e8.  v10:= 4I;
  #L32f9ea.  v11:= "SSLv3" @kind object;
  #L32f9ee.  call `<init>`(v7, v9, v10, v11) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L32f9f4.  `@@okhttp3.j0.SSL_3_0` @type ^`okhttp3.j0` := v7 @kind object;
  #L32f9f8.  v9:= 5I;
  #L32f9fa.  v9:= new `okhttp3.j0`[v9];
  #L32f9fe.  v9[v2]:= v0 @kind object;
  #L32fa02.  v9[v4]:= v1 @kind object;
  #L32fa06.  v9[v6]:= v3 @kind object;
  #L32fa0a.  v9[v8]:= v5 @kind object;
  #L32fa0e.  v9[v10]:= v7 @kind object;
  #L32fa12.  `@@okhttp3.j0.g` @type ^`okhttp3.j0`[] := v9 @kind object;
  #L32fa16.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.j0` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lokhttp3/j0;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32fa28.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L32fa2e.  v0.`okhttp3.j0.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L32fa32.  return @kind void;
}
procedure `okhttp3.j0` `forJavaName`(`java.lang.String` v3 @kind object) @signature `Lokhttp3/j0;.forJavaName:(Ljava/lang/String;)Lokhttp3/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32f808.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L32f80e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L32f814.  v0:= temp;
  #L32f816.  v1:= -1I;
  #L32f818.  goto L32f8e0;
  #L32f81e.  goto L32f88c;
  #L32f820.  v0:= "TLSv1" @kind object;
  #L32f824.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f82a.  v0:= temp;
  #L32f82c.  if v0 != 0 then goto L32f832;
  #L32f830.  goto L32f88c;
  #L32f832.  v1:= 4I;
  #L32f834.  goto L32f88c;
  #L32f836.  v0:= "SSLv3" @kind object;
  #L32f83a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f840.  v0:= temp;
  #L32f842.  if v0 != 0 then goto L32f848;
  #L32f846.  goto L32f88c;
  #L32f848.  v1:= 3I;
  #L32f84a.  goto L32f88c;
  #L32f84c.  v0:= "TLSv1.3" @kind object;
  #L32f850.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f856.  v0:= temp;
  #L32f858.  if v0 != 0 then goto L32f85e;
  #L32f85c.  goto L32f88c;
  #L32f85e.  v1:= 2I;
  #L32f860.  goto L32f88c;
  #L32f862.  v0:= "TLSv1.2" @kind object;
  #L32f866.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f86c.  v0:= temp;
  #L32f86e.  if v0 != 0 then goto L32f874;
  #L32f872.  goto L32f88c;
  #L32f874.  v1:= 1I;
  #L32f876.  goto L32f88c;
  #L32f878.  v0:= "TLSv1.1" @kind object;
  #L32f87c.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32f882.  v0:= temp;
  #L32f884.  if v0 != 0 then goto L32f88a;
  #L32f888.  goto L32f88c;
  #L32f88a.  v1:= 0I;
  #L32f88c.  goto L32f90c;
  #L32f892.  v0:= new `java.lang.IllegalArgumentException`;
  #L32f896.  v1:= new `java.lang.StringBuilder`;
  #L32f89a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32f8a0.  v2:= "Unexpected TLS version: " @kind object;
  #L32f8a4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8aa.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32f8b0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32f8b6.  v3:= temp @kind object;
  #L32f8b8.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32f8be.  throw v0;
  #L32f8c0.  v3:= `@@okhttp3.j0.TLS_1_0` @type ^`okhttp3.j0` @kind object;
  #L32f8c4.  return v3 @kind object;
  #L32f8c6.  v3:= `@@okhttp3.j0.SSL_3_0` @type ^`okhttp3.j0` @kind object;
  #L32f8ca.  return v3 @kind object;
  #L32f8cc.  v3:= `@@okhttp3.j0.TLS_1_3` @type ^`okhttp3.j0` @kind object;
  #L32f8d0.  return v3 @kind object;
  #L32f8d2.  v3:= `@@okhttp3.j0.TLS_1_2` @type ^`okhttp3.j0` @kind object;
  #L32f8d6.  return v3 @kind object;
  #L32f8d8.  v3:= `@@okhttp3.j0.TLS_1_1` @type ^`okhttp3.j0` @kind object;
  #L32f8dc.  return v3 @kind object;
  #L32f8de.  
  #L32f8e0.  switch v0
                  | -503070503 => goto L32f878
                  | -503070502 => goto L32f862
                  | -503070501 => goto L32f84c
                  | 79201641 => goto L32f836
                  | 79923350 => goto L32f820
                  | else => goto L32f81e;
  #L32f90c.  switch v1
                  | 0 => goto L32f8d8
                  | 1 => goto L32f8d2
                  | 2 => goto L32f8cc
                  | 3 => goto L32f8c6
                  | 4 => goto L32f8c0
                  | else => goto L32f892;
}
procedure `java.util.List` `forJavaNames`(`java.lang.String`[] v4 @kind object) @signature `Lokhttp3/j0;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32f7c0.  v0:= new `java.util.ArrayList`;
  #L32f7c4.  v1:= length @variable v4;
  #L32f7c6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L32f7cc.  v1:= length @variable v4;
  #L32f7ce.  v2:= 0I;
  #L32f7d0.  if v2 >= v1 then goto L32f7ec;
  #L32f7d4.  v3:= v4[v2] @kind object;
  #L32f7d8.  call temp:= `forJavaName`(v3) @signature `Lokhttp3/j0;.forJavaName:(Ljava/lang/String;)Lokhttp3/j0;` @kind static;
  #L32f7de.  v3:= temp @kind object;
  #L32f7e0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32f7e6.  v2:= v2 + 1;
  #L32f7ea.  goto L32f7d0;
  #L32f7ec.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32f7f2.  v4:= temp @kind object;
  #L32f7f4.  return v4 @kind object;
}
procedure `okhttp3.j0` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lokhttp3/j0;.valueOf:(Ljava/lang/String;)Lokhttp3/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32f938.  v0:= constclass @type ^`okhttp3.j0` @kind object;
  #L32f93c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L32f942.  v1:= temp @kind object;
  #L32f944.  v1:= (`okhttp3.j0`) v1 @kind object;
  #L32f948.  return v1 @kind object;
}
procedure `okhttp3.j0`[] `values`() @signature `Lokhttp3/j0;.values:()[Lokhttp3/j0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L32f95c.  v0:= `@@okhttp3.j0.g` @type ^`okhttp3.j0`[] @kind object;
  #L32f960.  call temp:= `clone`(v0) @signature `[Lokhttp3/j0;.clone:()Ljava/lang/Object;` @kind virtual;
  #L32f966.  v0:= temp @kind object;
  #L32f968.  v0:= (`okhttp3.j0`[]) v0 @kind object;
  #L32f96c.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.j0` v1 @kind this) @signature `Lokhttp3/j0;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f7a8.  v0:= v1.`okhttp3.j0.javaName` @type ^`java.lang.String` @kind object;
  #L32f7ac.  return v0 @kind object;
}
