record `okhttp3.i` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `okhttp3.i` `@@okhttp3.i.g` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/i;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L328170.  v0:= new `okhttp3.i`;
  #L328174.  call `<init>`(v0) @signature `Lokhttp3/i;.<init>:()V` @kind direct;
  #L32817a.  `@@okhttp3.i.g` @type ^`okhttp3.i` := v0 @kind object;
  #L32817e.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.i` v0 @kind this) @signature `Lokhttp3/i;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L328190.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L328196.  return @kind void;
}
procedure `int` `compare`(`okhttp3.i` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/i;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L32814c.  v1:= (`java.lang.String`) v1 @kind object;
  #L328150.  v2:= (`java.lang.String`) v2 @kind object;
  #L328154.  call temp:= `a`(v1, v2) @signature `Lokhttp3/j;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32815a.  v1:= temp;
  #L32815c.  return v1;
}
