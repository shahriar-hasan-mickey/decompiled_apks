record `okhttp3.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `okhttp3.d` @kind interface {
}
global `okhttp3.b` `@@okhttp3.b.b` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/b;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L32723c.  v0:= new `okhttp3.b`;
  #L327240.  call `<init>`(v0) @signature `Lokhttp3/b;.<init>:()V` @kind direct;
  #L327246.  `@@okhttp3.b.b` @type ^`okhttp3.b` := v0 @kind object;
  #L32724a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.b` v0 @kind this) @signature `Lokhttp3/b;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L32725c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L327262.  return @kind void;
}
procedure `okhttp3.e0` `a`(`okhttp3.b` v0 @kind this, `okhttp3.i0` v1 @kind object, `okhttp3.g0` v2 @kind object) @signature `Lokhttp3/b;.a:(Lokhttp3/i0;Lokhttp3/g0;)Lokhttp3/e0;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L327220.  call temp:= `a`(v1, v2) @signature `Lokhttp3/c;.a:(Lokhttp3/i0;Lokhttp3/g0;)Lokhttp3/e0;` @kind static;
  #L327226.  v1:= temp @kind object;
  #L327228.  return v1 @kind object;
}
