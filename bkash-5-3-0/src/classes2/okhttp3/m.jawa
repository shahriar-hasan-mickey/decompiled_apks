record `okhttp3.m` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.m.a` @AccessFlag FINAL;
  `boolean` `okhttp3.m.b` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.m.c` @AccessFlag FINAL;
  `java.lang.String`[] `okhttp3.m.d` @AccessFlag FINAL;
}
global `okhttp3.j`[] `@@okhttp3.m.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.j`[] `@@okhttp3.m.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.m` `@@okhttp3.m.g` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.m` `@@okhttp3.m.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.m` `@@okhttp3.m.i` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/m;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L329064.  v0:= 9I;
  #L329068.  v1:= new `okhttp3.j`[v0];
  #L32906c.  v2:= `@@okhttp3.j.q` @type ^`okhttp3.j` @kind object;
  #L329070.  v3:= 0I;
  #L329072.  v1[v3]:= v2 @kind object;
  #L329076.  v4:= `@@okhttp3.j.r` @type ^`okhttp3.j` @kind object;
  #L32907a.  v5:= 1I;
  #L32907c.  v1[v5]:= v4 @kind object;
  #L329080.  v6:= `@@okhttp3.j.s` @type ^`okhttp3.j` @kind object;
  #L329084.  v7:= 2I;
  #L329086.  v1[v7]:= v6 @kind object;
  #L32908a.  v8:= `@@okhttp3.j.k` @type ^`okhttp3.j` @kind object;
  #L32908e.  v9:= 3I;
  #L329090.  v1[v9]:= v8 @kind object;
  #L329094.  v10:= `@@okhttp3.j.m` @type ^`okhttp3.j` @kind object;
  #L329098.  v11:= 4I;
  #L32909a.  v1[v11]:= v10 @kind object;
  #L32909e.  v12:= `@@okhttp3.j.l` @type ^`okhttp3.j` @kind object;
  #L3290a2.  v13:= 5I;
  #L3290a4.  v1[v13]:= v12 @kind object;
  #L3290a8.  v14:= `@@okhttp3.j.n` @type ^`okhttp3.j` @kind object;
  #L3290ac.  v15:= 6I;
  #L3290ae.  v1[v15]:= v14 @kind object;
  #L3290b2.  v16:= `@@okhttp3.j.p` @type ^`okhttp3.j` @kind object;
  #L3290b6.  v17:= 7I;
  #L3290ba.  v1[v17]:= v16 @kind object;
  #L3290be.  v18:= `@@okhttp3.j.o` @type ^`okhttp3.j` @kind object;
  #L3290c2.  v19:= 8I;
  #L3290c6.  v1[v19]:= v18 @kind object;
  #L3290ca.  `@@okhttp3.m.e` @type ^`okhttp3.j`[] := v1 @kind object;
  #L3290ce.  v0:= 16I;
  #L3290d2.  v0:= new `okhttp3.j`[v0];
  #L3290d6.  v0[v3]:= v2 @kind object;
  #L3290da.  v0[v5]:= v4 @kind object;
  #L3290de.  v0[v7]:= v6 @kind object;
  #L3290e2.  v0[v9]:= v8 @kind object;
  #L3290e6.  v0[v11]:= v10 @kind object;
  #L3290ea.  v0[v13]:= v12 @kind object;
  #L3290ee.  v0[v15]:= v14 @kind object;
  #L3290f2.  v0[v17]:= v16 @kind object;
  #L3290f6.  v0[v19]:= v18 @kind object;
  #L3290fa.  v2:= `@@okhttp3.j.i` @type ^`okhttp3.j` @kind object;
  #L3290fe.  v4:= 9I;
  #L329102.  v0[v4]:= v2 @kind object;
  #L329106.  v2:= `@@okhttp3.j.j` @type ^`okhttp3.j` @kind object;
  #L32910a.  v4:= 10I;
  #L32910e.  v0[v4]:= v2 @kind object;
  #L329112.  v2:= `@@okhttp3.j.g` @type ^`okhttp3.j` @kind object;
  #L329116.  v4:= 11I;
  #L32911a.  v0[v4]:= v2 @kind object;
  #L32911e.  v2:= `@@okhttp3.j.h` @type ^`okhttp3.j` @kind object;
  #L329122.  v4:= 12I;
  #L329126.  v0[v4]:= v2 @kind object;
  #L32912a.  v2:= `@@okhttp3.j.e` @type ^`okhttp3.j` @kind object;
  #L32912e.  v4:= 13I;
  #L329132.  v0[v4]:= v2 @kind object;
  #L329136.  v2:= `@@okhttp3.j.f` @type ^`okhttp3.j` @kind object;
  #L32913a.  v4:= 14I;
  #L32913e.  v0[v4]:= v2 @kind object;
  #L329142.  v2:= `@@okhttp3.j.d` @type ^`okhttp3.j` @kind object;
  #L329146.  v4:= 15I;
  #L32914a.  v0[v4]:= v2 @kind object;
  #L32914e.  `@@okhttp3.m.f` @type ^`okhttp3.j`[] := v0 @kind object;
  #L329152.  v2:= new `okhttp3.m$a`;
  #L329156.  call `<init>`(v2, v5) @signature `Lokhttp3/m$a;.<init>:(Z)V` @kind direct;
  #L32915c.  call temp:= `c`(v2, v1) @signature `Lokhttp3/m$a;.c:([Lokhttp3/j;)Lokhttp3/m$a;` @kind virtual;
  #L329162.  v1:= temp @kind object;
  #L329164.  v2:= new `okhttp3.j0`[v7];
  #L329168.  v4:= `@@okhttp3.j0.TLS_1_3` @type ^`okhttp3.j0` @kind object;
  #L32916c.  v2[v3]:= v4 @kind object;
  #L329170.  v6:= `@@okhttp3.j0.TLS_1_2` @type ^`okhttp3.j0` @kind object;
  #L329174.  v2[v5]:= v6 @kind object;
  #L329178.  call temp:= `f`(v1, v2) @signature `Lokhttp3/m$a;.f:([Lokhttp3/j0;)Lokhttp3/m$a;` @kind virtual;
  #L32917e.  v1:= temp @kind object;
  #L329180.  call temp:= `d`(v1, v5) @signature `Lokhttp3/m$a;.d:(Z)Lokhttp3/m$a;` @kind virtual;
  #L329186.  v1:= temp @kind object;
  #L329188.  call temp:= `a`(v1) @signature `Lokhttp3/m$a;.a:()Lokhttp3/m;` @kind virtual;
  #L32918e.  v1:= new `okhttp3.m$a`;
  #L329192.  call `<init>`(v1, v5) @signature `Lokhttp3/m$a;.<init>:(Z)V` @kind direct;
  #L329198.  call temp:= `c`(v1, v0) @signature `Lokhttp3/m$a;.c:([Lokhttp3/j;)Lokhttp3/m$a;` @kind virtual;
  #L32919e.  v1:= temp @kind object;
  #L3291a0.  v2:= new `okhttp3.j0`[v7];
  #L3291a4.  v2[v3]:= v4 @kind object;
  #L3291a8.  v2[v5]:= v6 @kind object;
  #L3291ac.  call temp:= `f`(v1, v2) @signature `Lokhttp3/m$a;.f:([Lokhttp3/j0;)Lokhttp3/m$a;` @kind virtual;
  #L3291b2.  v1:= temp @kind object;
  #L3291b4.  call temp:= `d`(v1, v5) @signature `Lokhttp3/m$a;.d:(Z)Lokhttp3/m$a;` @kind virtual;
  #L3291ba.  v1:= temp @kind object;
  #L3291bc.  call temp:= `a`(v1) @signature `Lokhttp3/m$a;.a:()Lokhttp3/m;` @kind virtual;
  #L3291c2.  v1:= temp @kind object;
  #L3291c4.  `@@okhttp3.m.g` @type ^`okhttp3.m` := v1 @kind object;
  #L3291c8.  v1:= new `okhttp3.m$a`;
  #L3291cc.  call `<init>`(v1, v5) @signature `Lokhttp3/m$a;.<init>:(Z)V` @kind direct;
  #L3291d2.  call temp:= `c`(v1, v0) @signature `Lokhttp3/m$a;.c:([Lokhttp3/j;)Lokhttp3/m$a;` @kind virtual;
  #L3291d8.  v0:= temp @kind object;
  #L3291da.  v1:= new `okhttp3.j0`[v11];
  #L3291de.  v1[v3]:= v4 @kind object;
  #L3291e2.  v1[v5]:= v6 @kind object;
  #L3291e6.  v2:= `@@okhttp3.j0.TLS_1_1` @type ^`okhttp3.j0` @kind object;
  #L3291ea.  v1[v7]:= v2 @kind object;
  #L3291ee.  v2:= `@@okhttp3.j0.TLS_1_0` @type ^`okhttp3.j0` @kind object;
  #L3291f2.  v1[v9]:= v2 @kind object;
  #L3291f6.  call temp:= `f`(v0, v1) @signature `Lokhttp3/m$a;.f:([Lokhttp3/j0;)Lokhttp3/m$a;` @kind virtual;
  #L3291fc.  v0:= temp @kind object;
  #L3291fe.  call temp:= `d`(v0, v5) @signature `Lokhttp3/m$a;.d:(Z)Lokhttp3/m$a;` @kind virtual;
  #L329204.  v0:= temp @kind object;
  #L329206.  call temp:= `a`(v0) @signature `Lokhttp3/m$a;.a:()Lokhttp3/m;` @kind virtual;
  #L32920c.  v0:= temp @kind object;
  #L32920e.  `@@okhttp3.m.h` @type ^`okhttp3.m` := v0 @kind object;
  #L329212.  v0:= new `okhttp3.m$a`;
  #L329216.  call `<init>`(v0, v3) @signature `Lokhttp3/m$a;.<init>:(Z)V` @kind direct;
  #L32921c.  call temp:= `a`(v0) @signature `Lokhttp3/m$a;.a:()Lokhttp3/m;` @kind virtual;
  #L329222.  v0:= temp @kind object;
  #L329224.  `@@okhttp3.m.i` @type ^`okhttp3.m` := v0 @kind object;
  #L329228.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.m` v1 @kind this, `okhttp3.m$a` v2 @kind object) @signature `Lokhttp3/m;.<init>:(Lokhttp3/m$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32923c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L329242.  v0:= v2.`okhttp3.m$a.a` @type ^`boolean` @kind boolean;
  #L329246.  v1.`okhttp3.m.a` @type ^`boolean` := v0 @kind boolean;
  #L32924a.  v0:= v2.`okhttp3.m$a.b` @type ^`java.lang.String`[] @kind object;
  #L32924e.  v1.`okhttp3.m.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L329252.  v0:= v2.`okhttp3.m$a.c` @type ^`java.lang.String`[] @kind object;
  #L329256.  v1.`okhttp3.m.d` @type ^`java.lang.String`[] := v0 @kind object;
  #L32925a.  v2:= v2.`okhttp3.m$a.d` @type ^`boolean` @kind boolean;
  #L32925e.  v1.`okhttp3.m.b` @type ^`boolean` := v2 @kind boolean;
  #L329262.  return @kind void;
}
procedure `okhttp3.m` `e`(`okhttp3.m` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `boolean` v6 ) @signature `Lokhttp3/m;.e:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/m;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328fac.  v0:= v4.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328fb0.  if v0 == 0 then goto L328fce;
  #L328fb4.  v0:= `@@okhttp3.j.b` @type ^`java.util.Comparator` @kind object;
  #L328fb8.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L328fbe.  v1:= temp @kind object;
  #L328fc0.  v2:= v4.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328fc4.  call temp:= `z`(v0, v1, v2) @signature `Lee/e;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L328fca.  v0:= temp @kind object;
  #L328fcc.  goto L328fd6;
  #L328fce.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L328fd4.  v0:= temp @kind object;
  #L328fd6.  v1:= v4.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328fda.  if v1 == 0 then goto L328ff8;
  #L328fde.  v1:= `@@ee.e.i` @type ^`java.util.Comparator` @kind object;
  #L328fe2.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L328fe8.  v2:= temp @kind object;
  #L328fea.  v3:= v4.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328fee.  call temp:= `z`(v1, v2, v3) @signature `Lee/e;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L328ff4.  v1:= temp @kind object;
  #L328ff6.  goto L329000;
  #L328ff8.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L328ffe.  v1:= temp @kind object;
  #L329000.  call temp:= `getSupportedCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSupportedCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L329006.  v5:= temp @kind object;
  #L329008.  v2:= `@@okhttp3.j.b` @type ^`java.util.Comparator` @kind object;
  #L32900c.  v3:= "TLS_FALLBACK_SCSV" @kind object;
  #L329010.  call temp:= `w`(v2, v5, v3) @signature `Lee/e;.w:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329016.  v2:= temp;
  #L329018.  if v6 == 0 then goto L32902e;
  #L32901c.  v6:= -1I;
  #L32901e.  if v2 == v6 then goto L32902e;
  #L329022.  v5:= v5[v2] @kind object;
  #L329026.  call temp:= `i`(v0, v5) @signature `Lee/e;.i:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @kind static;
  #L32902c.  v0:= temp @kind object;
  #L32902e.  v5:= new `okhttp3.m$a`;
  #L329032.  call `<init>`(v5, v4) @signature `Lokhttp3/m$a;.<init>:(Lokhttp3/m;)V` @kind direct;
  #L329038.  call temp:= `b`(v5, v0) @signature `Lokhttp3/m$a;.b:([Ljava/lang/String;)Lokhttp3/m$a;` @kind virtual;
  #L32903e.  v5:= temp @kind object;
  #L329040.  call temp:= `e`(v5, v1) @signature `Lokhttp3/m$a;.e:([Ljava/lang/String;)Lokhttp3/m$a;` @kind virtual;
  #L329046.  v5:= temp @kind object;
  #L329048.  call temp:= `a`(v5) @signature `Lokhttp3/m$a;.a:()Lokhttp3/m;` @kind virtual;
  #L32904e.  v5:= temp @kind object;
  #L329050.  return v5 @kind object;
}
procedure `void` `a`(`okhttp3.m` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/m;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag  {
    temp;
    v0;

  #L329274.  call temp:= `e`(v1, v2, v3) @signature `Lokhttp3/m;.e:(Ljavax/net/ssl/SSLSocket;Z)Lokhttp3/m;` @kind direct;
  #L32927a.  v3:= temp @kind object;
  #L32927c.  v0:= v3.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L329280.  if v0 == 0 then goto L32928a;
  #L329284.  call `setEnabledProtocols`(v2, v0) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L32928a.  v3:= v3.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L32928e.  if v3 == 0 then goto L329298;
  #L329292.  call `setEnabledCipherSuites`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setEnabledCipherSuites:([Ljava/lang/String;)V` @kind virtual;
  #L329298.  return @kind void;
}
procedure `java.util.List` `b`(`okhttp3.m` v1 @kind this) @signature `Lokhttp3/m;.b:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328f5c.  v0:= v1.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328f60.  if v0 == 0 then goto L328f6e;
  #L328f64.  call temp:= `c`(v0) @signature `Lokhttp3/j;.c:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L328f6a.  v0:= temp @kind object;
  #L328f6c.  goto L328f70;
  #L328f6e.  v0:= 0I;
  #L328f70.  return v0 @kind object;
}
procedure `boolean` `c`(`okhttp3.m` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/m;.c:(Ljavax/net/ssl/SSLSocket;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328de0.  v0:= v4.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328de4.  v1:= 0I;
  #L328de6.  if v0 != 0 then goto L328dec;
  #L328dea.  return v1;
  #L328dec.  v0:= v4.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328df0.  if v0 == 0 then goto L328e0e;
  #L328df4.  v2:= `@@ee.e.i` @type ^`java.util.Comparator` @kind object;
  #L328df8.  call temp:= `getEnabledProtocols`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledProtocols:()[Ljava/lang/String;` @kind virtual;
  #L328dfe.  v3:= temp @kind object;
  #L328e00.  call temp:= `C`(v2, v0, v3) @signature `Lee/e;.C:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L328e06.  v0:= temp;
  #L328e08.  if v0 != 0 then goto L328e0e;
  #L328e0c.  return v1;
  #L328e0e.  v0:= v4.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328e12.  if v0 == 0 then goto L328e30;
  #L328e16.  v2:= `@@okhttp3.j.b` @type ^`java.util.Comparator` @kind object;
  #L328e1a.  call temp:= `getEnabledCipherSuites`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getEnabledCipherSuites:()[Ljava/lang/String;` @kind virtual;
  #L328e20.  v5:= temp @kind object;
  #L328e22.  call temp:= `C`(v2, v0, v5) @signature `Lee/e;.C:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @kind static;
  #L328e28.  v5:= temp;
  #L328e2a.  if v5 != 0 then goto L328e30;
  #L328e2e.  return v1;
  #L328e30.  v5:= 1I;
  #L328e32.  return v5;
}
procedure `boolean` `d`(`okhttp3.m` v1 @kind this) @signature `Lokhttp3/m;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328e44.  v0:= v1.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328e48.  return v0;
}
procedure `boolean` `equals`(`okhttp3.m` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lokhttp3/m;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328d68.  v0:= instanceof @variable v5 @type ^`okhttp3.m` @kind boolean;
  #L328d6c.  v1:= 0I;
  #L328d6e.  if v0 != 0 then goto L328d74;
  #L328d72.  return v1;
  #L328d74.  v0:= 1I;
  #L328d76.  if v5 != v4 then goto L328d7c;
  #L328d7a.  return v0;
  #L328d7c.  v5:= (`okhttp3.m`) v5 @kind object;
  #L328d80.  v2:= v4.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328d84.  v3:= v5.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328d88.  if v2 == v3 then goto L328d8e;
  #L328d8c.  return v1;
  #L328d8e.  if v2 == 0 then goto L328dcc;
  #L328d92.  v2:= v4.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328d96.  v3:= v5.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328d9a.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L328da0.  v2:= temp;
  #L328da2.  if v2 != 0 then goto L328da8;
  #L328da6.  return v1;
  #L328da8.  v2:= v4.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328dac.  v3:= v5.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328db0.  call temp:= `equals`(v2, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L328db6.  v2:= temp;
  #L328db8.  if v2 != 0 then goto L328dbe;
  #L328dbc.  return v1;
  #L328dbe.  v2:= v4.`okhttp3.m.b` @type ^`boolean` @kind boolean;
  #L328dc2.  v5:= v5.`okhttp3.m.b` @type ^`boolean` @kind boolean;
  #L328dc6.  if v2 == v5 then goto L328dcc;
  #L328dca.  return v1;
  #L328dcc.  return v0;
}
procedure `boolean` `f`(`okhttp3.m` v1 @kind this) @signature `Lokhttp3/m;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328e5c.  v0:= v1.`okhttp3.m.b` @type ^`boolean` @kind boolean;
  #L328e60.  return v0;
}
procedure `java.util.List` `g`(`okhttp3.m` v1 @kind this) @signature `Lokhttp3/m;.g:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L328f84.  v0:= v1.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328f88.  if v0 == 0 then goto L328f96;
  #L328f8c.  call temp:= `forJavaNames`(v0) @signature `Lokhttp3/j0;.forJavaNames:([Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L328f92.  v0:= temp @kind object;
  #L328f94.  goto L328f98;
  #L328f96.  v0:= 0I;
  #L328f98.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.m` v2 @kind this) @signature `Lokhttp3/m;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L328e74.  v0:= v2.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328e78.  if v0 == 0 then goto L328eb0;
  #L328e7c.  v0:= 527I;
  #L328e80.  v1:= v2.`okhttp3.m.c` @type ^`java.lang.String`[] @kind object;
  #L328e84.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L328e8a.  v1:= temp;
  #L328e8c.  v0:= v0 + v1 @kind int;
  #L328e8e.  v0:= v0 * 31;
  #L328e92.  v1:= v2.`okhttp3.m.d` @type ^`java.lang.String`[] @kind object;
  #L328e96.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L328e9c.  v1:= temp;
  #L328e9e.  v0:= v0 + v1 @kind int;
  #L328ea0.  v0:= v0 * 31;
  #L328ea4.  v1:= v2.`okhttp3.m.b` @type ^`boolean` @kind boolean;
  #L328ea8.  v1:= v1 ^~ 1;
  #L328eac.  v0:= v0 + v1 @kind int;
  #L328eae.  goto L328eb4;
  #L328eb0.  v0:= 17I;
  #L328eb4.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.m` v3 @kind this) @signature `Lokhttp3/m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L328ec8.  v0:= v3.`okhttp3.m.a` @type ^`boolean` @kind boolean;
  #L328ecc.  if v0 != 0 then goto L328ed6;
  #L328ed0.  v0:= "ConnectionSpec()" @kind object;
  #L328ed4.  return v0 @kind object;
  #L328ed6.  v0:= new `java.lang.StringBuilder`;
  #L328eda.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328ee0.  v1:= "ConnectionSpec(cipherSuites=" @kind object;
  #L328ee4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328eea.  call temp:= `b`(v3) @signature `Lokhttp3/m;.b:()Ljava/util/List;` @kind virtual;
  #L328ef0.  v1:= temp @kind object;
  #L328ef2.  v2:= "[all enabled]" @kind object;
  #L328ef6.  call temp:= `toString`(v1, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L328efc.  v1:= temp @kind object;
  #L328efe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f04.  v1:= ", tlsVersions=" @kind object;
  #L328f08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f0e.  call temp:= `g`(v3) @signature `Lokhttp3/m;.g:()Ljava/util/List;` @kind virtual;
  #L328f14.  v1:= temp @kind object;
  #L328f16.  call temp:= `toString`(v1, v2) @signature `Ljava/util/Objects;.toString:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L328f1c.  v1:= temp @kind object;
  #L328f1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f24.  v1:= ", supportsTlsExtensions=" @kind object;
  #L328f28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f2e.  v1:= v3.`okhttp3.m.b` @type ^`boolean` @kind boolean;
  #L328f32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f38.  v1:= ")" @kind object;
  #L328f3c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328f42.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328f48.  v0:= temp @kind object;
  #L328f4a.  return v0 @kind object;
}
