record `okhttp3.z` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.z.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.z.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.z.c` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.z.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.z.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/z;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32cbcc.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L32cbd0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L32cbd6.  v0:= temp @kind object;
  #L32cbd8.  `@@okhttp3.z.d` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L32cbdc.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L32cbe0.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L32cbe6.  v0:= temp @kind object;
  #L32cbe8.  `@@okhttp3.z.e` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L32cbec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.z` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lokhttp3/z;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32cc00.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32cc06.  v0.`okhttp3.z.a` @type ^`java.lang.String` := v1 @kind object;
  #L32cc0a.  v0.`okhttp3.z.b` @type ^`java.lang.String` := v2 @kind object;
  #L32cc0e.  v0.`okhttp3.z.c` @type ^`java.lang.String` := v4 @kind object;
  #L32cc12.  return @kind void;
}
procedure `okhttp3.z` `c`(`java.lang.String` v11 @kind object) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L32c9a0.  v0:= `@@okhttp3.z.d` @type ^`java.util.regex.Pattern` @kind object;
  #L32c9a4.  call temp:= `matcher`(v0, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L32c9aa.  v0:= temp @kind object;
  #L32c9ac.  call temp:= `lookingAt`(v0) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L32c9b2.  v1:= temp;
  #L32c9b4.  v2:= 34I;
  #L32c9b8.  if v1 == 0 then goto L32cb58;
  #L32c9bc.  v1:= 1I;
  #L32c9be.  call temp:= `group`(v0, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L32c9c4.  v3:= temp @kind object;
  #L32c9c6.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L32c9ca.  call temp:= `toLowerCase`(v3, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L32c9d0.  v3:= temp @kind object;
  #L32c9d2.  v5:= 2I;
  #L32c9d4.  call temp:= `group`(v0, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L32c9da.  v6:= temp @kind object;
  #L32c9dc.  call temp:= `toLowerCase`(v6, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L32c9e2.  v4:= temp @kind object;
  #L32c9e4.  v6:= 0I;
  #L32c9e6.  v7:= `@@okhttp3.z.e` @type ^`java.util.regex.Pattern` @kind object;
  #L32c9ea.  call temp:= `matcher`(v7, v11) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L32c9f0.  v7:= temp @kind object;
  #L32c9f2.  call temp:= `end`(v0) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L32c9f8.  v0:= temp;
  #L32c9fa.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32ca00.  v8:= temp;
  #L32ca02.  if v0 >= v8 then goto L32cb4c;
  #L32ca06.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32ca0c.  v8:= temp;
  #L32ca0e.  call temp:= `region`(v7, v0, v8) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L32ca14.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L32ca1a.  v8:= temp;
  #L32ca1c.  v9:= "\" for: \"" @kind object;
  #L32ca20.  if v8 == 0 then goto L32cb04;
  #L32ca24.  call temp:= `group`(v7, v1) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L32ca2a.  v0:= temp @kind object;
  #L32ca2c.  if v0 == 0 then goto L32caf8;
  #L32ca30.  v8:= "charset" @kind object;
  #L32ca34.  call temp:= `equalsIgnoreCase`(v0, v8) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32ca3a.  v0:= temp;
  #L32ca3c.  if v0 != 0 then goto L32ca42;
  #L32ca40.  goto L32caf8;
  #L32ca42.  call temp:= `group`(v7, v5) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L32ca48.  v0:= temp @kind object;
  #L32ca4a.  if v0 == 0 then goto L32ca8a;
  #L32ca4e.  v8:= "'" @kind object;
  #L32ca52.  call temp:= `startsWith`(v0, v8) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L32ca58.  v10:= temp;
  #L32ca5a.  if v10 == 0 then goto L32ca94;
  #L32ca5e.  call temp:= `endsWith`(v0, v8) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L32ca64.  v8:= temp;
  #L32ca66.  if v8 == 0 then goto L32ca94;
  #L32ca6a.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32ca70.  v8:= temp;
  #L32ca72.  if v8 <= v5 then goto L32ca94;
  #L32ca76.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32ca7c.  v8:= temp;
  #L32ca7e.  v8:= v8 - v1 @kind int;
  #L32ca80.  call temp:= `substring`(v0, v1, v8) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32ca86.  v0:= temp @kind object;
  #L32ca88.  goto L32ca94;
  #L32ca8a.  v0:= 3I;
  #L32ca8c.  call temp:= `group`(v7, v0) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L32ca92.  v0:= temp @kind object;
  #L32ca94.  if v6 == 0 then goto L32caf6;
  #L32ca98.  call temp:= `equalsIgnoreCase`(v0, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32ca9e.  v8:= temp;
  #L32caa0.  if v8 == 0 then goto L32caa6;
  #L32caa4.  goto L32caf6;
  #L32caa6.  v1:= new `java.lang.IllegalArgumentException`;
  #L32caaa.  v3:= new `java.lang.StringBuilder`;
  #L32caae.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32cab4.  v4:= "Multiple charsets defined: \"" @kind object;
  #L32cab8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cabe.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cac4.  v4:= "\" and: \"" @kind object;
  #L32cac8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cace.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cad4.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cada.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cae0.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cae6.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32caec.  v11:= temp @kind object;
  #L32caee.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32caf4.  throw v1;
  #L32caf6.  v6:= v0 @kind object;
  #L32caf8.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L32cafe.  v0:= temp;
  #L32cb00.  goto L32c9fa;
  #L32cb04.  v1:= new `java.lang.IllegalArgumentException`;
  #L32cb08.  v3:= new `java.lang.StringBuilder`;
  #L32cb0c.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32cb12.  v4:= "Parameter is not formatted correctly: \"" @kind object;
  #L32cb16.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb1c.  call temp:= `substring`(v11, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L32cb22.  v0:= temp @kind object;
  #L32cb24.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb2a.  call temp:= `append`(v3, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb30.  call temp:= `append`(v3, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb36.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb3c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cb42.  v11:= temp @kind object;
  #L32cb44.  call `<init>`(v1, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32cb4a.  throw v1;
  #L32cb4c.  v0:= new `okhttp3.z`;
  #L32cb50.  call `<init>`(v0, v11, v3, v4, v6) @signature `Lokhttp3/z;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L32cb56.  return v0 @kind object;
  #L32cb58.  v0:= new `java.lang.IllegalArgumentException`;
  #L32cb5c.  v1:= new `java.lang.StringBuilder`;
  #L32cb60.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32cb66.  v3:= "No subtype found for: \"" @kind object;
  #L32cb6a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb70.  call temp:= `append`(v1, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb76.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cb7c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cb82.  v11:= temp @kind object;
  #L32cb84.  call `<init>`(v0, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32cb8a.  throw v0;
}
procedure `okhttp3.z` `d`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/z;.d:(Ljava/lang/String;)Lokhttp3/z;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L32cb9c.  call temp:= `c`(v0) @signature `Lokhttp3/z;.c:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32cba2.  v0:= temp @kind object;
  #L32cba4.  return v0 @kind object;
  #L32cba6.  v0:= 0I;
  #L32cba8.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L32cb9c..L32cba4] goto L32cba6;
}
procedure `java.nio.charset.Charset` `a`(`okhttp3.z` v1 @kind this) @signature `Lokhttp3/z;.a:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c950.  v0:= 0I;
  #L32c952.  call temp:= `b`(v1, v0) @signature `Lokhttp3/z;.b:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L32c958.  v0:= temp @kind object;
  #L32c95a.  return v0 @kind object;
}
procedure `java.nio.charset.Charset` `b`(`okhttp3.z` v1 @kind this, `java.nio.charset.Charset` v2 @kind object) @signature `Lokhttp3/z;.b:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c96c.  v0:= v1.`okhttp3.z.c` @type ^`java.lang.String` @kind object;
  #L32c970.  if v0 == 0 then goto L32c97c;
  #L32c974.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L32c97a.  v2:= temp @kind object;
  #L32c97c.  return v2 @kind object;
  catch `java.lang.IllegalArgumentException` @[L32c96c..L32c97c] goto L32c97c;
}
procedure `java.lang.String` `e`(`okhttp3.z` v1 @kind this) @signature `Lokhttp3/z;.e:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c938.  v0:= v1.`okhttp3.z.b` @type ^`java.lang.String` @kind object;
  #L32c93c.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.z` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lokhttp3/z;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c8c8.  v0:= instanceof @variable v2 @type ^`okhttp3.z` @kind boolean;
  #L32c8cc.  if v0 == 0 then goto L32c8ec;
  #L32c8d0.  v2:= (`okhttp3.z`) v2 @kind object;
  #L32c8d4.  v2:= v2.`okhttp3.z.a` @type ^`java.lang.String` @kind object;
  #L32c8d8.  v0:= v1.`okhttp3.z.a` @type ^`java.lang.String` @kind object;
  #L32c8dc.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32c8e2.  v2:= temp;
  #L32c8e4.  if v2 == 0 then goto L32c8ec;
  #L32c8e8.  v2:= 1I;
  #L32c8ea.  goto L32c8ee;
  #L32c8ec.  v2:= 0I;
  #L32c8ee.  return v2;
}
procedure `int` `hashCode`(`okhttp3.z` v1 @kind this) @signature `Lokhttp3/z;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c900.  v0:= v1.`okhttp3.z.a` @type ^`java.lang.String` @kind object;
  #L32c904.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L32c90a.  v0:= temp;
  #L32c90c.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.z` v1 @kind this) @signature `Lokhttp3/z;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c920.  v0:= v1.`okhttp3.z.a` @type ^`java.lang.String` @kind object;
  #L32c924.  return v0 @kind object;
}
