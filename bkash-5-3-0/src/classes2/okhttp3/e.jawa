record `okhttp3.e` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.e.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.b` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.e.c` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.e.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.g` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.e.h` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.e.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.j` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.k` @AccessFlag PRIVATE_FINAL;
  `boolean` `okhttp3.e.l` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.e.m` @AccessFlag ;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3278d4.  v0:= new `okhttp3.e$a`;
  #L3278d8.  call `<init>`(v0) @signature `Lokhttp3/e$a;.<init>:()V` @kind direct;
  #L3278de.  call temp:= `c`(v0) @signature `Lokhttp3/e$a;.c:()Lokhttp3/e$a;` @kind virtual;
  #L3278e4.  v0:= temp @kind object;
  #L3278e6.  call temp:= `a`(v0) @signature `Lokhttp3/e$a;.a:()Lokhttp3/e;` @kind virtual;
  #L3278ec.  v0:= new `okhttp3.e$a`;
  #L3278f0.  call `<init>`(v0) @signature `Lokhttp3/e$a;.<init>:()V` @kind direct;
  #L3278f6.  call temp:= `d`(v0) @signature `Lokhttp3/e$a;.d:()Lokhttp3/e$a;` @kind virtual;
  #L3278fc.  v0:= temp @kind object;
  #L3278fe.  v1:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L327902.  v2:= 2147483647I;
  #L327908.  call temp:= `b`(v0, v2, v1) @signature `Lokhttp3/e$a;.b:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/e$a;` @kind virtual;
  #L32790e.  v0:= temp @kind object;
  #L327910.  call temp:= `a`(v0) @signature `Lokhttp3/e$a;.a:()Lokhttp3/e;` @kind virtual;
  #L327916.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.e` v1 @kind this, `okhttp3.e$a` v2 @kind object) @signature `Lokhttp3/e;.<init>:(Lokhttp3/e$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L327974.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32797a.  v0:= v2.`okhttp3.e$a.a` @type ^`boolean` @kind boolean;
  #L32797e.  v1.`okhttp3.e.a` @type ^`boolean` := v0 @kind boolean;
  #L327982.  v0:= v2.`okhttp3.e$a.b` @type ^`boolean` @kind boolean;
  #L327986.  v1.`okhttp3.e.b` @type ^`boolean` := v0 @kind boolean;
  #L32798a.  v0:= v2.`okhttp3.e$a.c` @type ^`int`;
  #L32798e.  v1.`okhttp3.e.c` @type ^`int` := v0;
  #L327992.  v0:= -1I;
  #L327994.  v1.`okhttp3.e.d` @type ^`int` := v0;
  #L327998.  v0:= 0I;
  #L32799a.  v1.`okhttp3.e.e` @type ^`boolean` := v0 @kind boolean;
  #L32799e.  v1.`okhttp3.e.f` @type ^`boolean` := v0 @kind boolean;
  #L3279a2.  v1.`okhttp3.e.g` @type ^`boolean` := v0 @kind boolean;
  #L3279a6.  v0:= v2.`okhttp3.e$a.d` @type ^`int`;
  #L3279aa.  v1.`okhttp3.e.h` @type ^`int` := v0;
  #L3279ae.  v0:= v2.`okhttp3.e$a.e` @type ^`int`;
  #L3279b2.  v1.`okhttp3.e.i` @type ^`int` := v0;
  #L3279b6.  v0:= v2.`okhttp3.e$a.f` @type ^`boolean` @kind boolean;
  #L3279ba.  v1.`okhttp3.e.j` @type ^`boolean` := v0 @kind boolean;
  #L3279be.  v0:= v2.`okhttp3.e$a.g` @type ^`boolean` @kind boolean;
  #L3279c2.  v1.`okhttp3.e.k` @type ^`boolean` := v0 @kind boolean;
  #L3279c6.  v2:= v2.`okhttp3.e$a.h` @type ^`boolean` @kind boolean;
  #L3279ca.  v1.`okhttp3.e.l` @type ^`boolean` := v2 @kind boolean;
  #L3279ce.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.e` v0 @kind this, `boolean` v1 , `boolean` v2 , `int` v3 , `int` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 , `int` v8 , `int` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 , `java.lang.String` v13 @kind object) @signature `Lokhttp3/e;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L327928.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32792e.  v0.`okhttp3.e.a` @type ^`boolean` := v1 @kind boolean;
  #L327932.  v0.`okhttp3.e.b` @type ^`boolean` := v2 @kind boolean;
  #L327936.  v0.`okhttp3.e.c` @type ^`int` := v3;
  #L32793a.  v0.`okhttp3.e.d` @type ^`int` := v4;
  #L32793e.  v0.`okhttp3.e.e` @type ^`boolean` := v5 @kind boolean;
  #L327942.  v0.`okhttp3.e.f` @type ^`boolean` := v6 @kind boolean;
  #L327946.  v0.`okhttp3.e.g` @type ^`boolean` := v7 @kind boolean;
  #L32794a.  v0.`okhttp3.e.h` @type ^`int` := v8;
  #L32794e.  v0.`okhttp3.e.i` @type ^`int` := v9;
  #L327952.  v0.`okhttp3.e.j` @type ^`boolean` := v10 @kind boolean;
  #L327956.  v0.`okhttp3.e.k` @type ^`boolean` := v11 @kind boolean;
  #L32795a.  v0.`okhttp3.e.l` @type ^`boolean` := v12 @kind boolean;
  #L32795e.  v0.`okhttp3.e.m` @type ^`java.lang.String` := v13 @kind object;
  #L327962.  return @kind void;
}
procedure `java.lang.String` `a`(`okhttp3.e` v4 @kind this) @signature `Lokhttp3/e;.a:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L327490.  v0:= new `java.lang.StringBuilder`;
  #L327494.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32749a.  v1:= v4.`okhttp3.e.a` @type ^`boolean` @kind boolean;
  #L32749e.  if v1 == 0 then goto L3274ac;
  #L3274a2.  v1:= "no-cache, " @kind object;
  #L3274a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274ac.  v1:= v4.`okhttp3.e.b` @type ^`boolean` @kind boolean;
  #L3274b0.  if v1 == 0 then goto L3274be;
  #L3274b4.  v1:= "no-store, " @kind object;
  #L3274b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274be.  v1:= v4.`okhttp3.e.c` @type ^`int`;
  #L3274c2.  v2:= ", " @kind object;
  #L3274c6.  v3:= -1I;
  #L3274c8.  if v1 == v3 then goto L3274e6;
  #L3274cc.  v1:= "max-age=" @kind object;
  #L3274d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274d6.  v1:= v4.`okhttp3.e.c` @type ^`int`;
  #L3274da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274e0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274e6.  v1:= v4.`okhttp3.e.d` @type ^`int`;
  #L3274ea.  if v1 == v3 then goto L327508;
  #L3274ee.  v1:= "s-maxage=" @kind object;
  #L3274f2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3274f8.  v1:= v4.`okhttp3.e.d` @type ^`int`;
  #L3274fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L327502.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327508.  v1:= v4.`okhttp3.e.e` @type ^`boolean` @kind boolean;
  #L32750c.  if v1 == 0 then goto L32751a;
  #L327510.  v1:= "private, " @kind object;
  #L327514.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32751a.  v1:= v4.`okhttp3.e.f` @type ^`boolean` @kind boolean;
  #L32751e.  if v1 == 0 then goto L32752c;
  #L327522.  v1:= "public, " @kind object;
  #L327526.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32752c.  v1:= v4.`okhttp3.e.g` @type ^`boolean` @kind boolean;
  #L327530.  if v1 == 0 then goto L32753e;
  #L327534.  v1:= "must-revalidate, " @kind object;
  #L327538.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32753e.  v1:= v4.`okhttp3.e.h` @type ^`int`;
  #L327542.  if v1 == v3 then goto L327560;
  #L327546.  v1:= "max-stale=" @kind object;
  #L32754a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327550.  v1:= v4.`okhttp3.e.h` @type ^`int`;
  #L327554.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32755a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327560.  v1:= v4.`okhttp3.e.i` @type ^`int`;
  #L327564.  if v1 == v3 then goto L327582;
  #L327568.  v1:= "min-fresh=" @kind object;
  #L32756c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327572.  v1:= v4.`okhttp3.e.i` @type ^`int`;
  #L327576.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32757c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327582.  v1:= v4.`okhttp3.e.j` @type ^`boolean` @kind boolean;
  #L327586.  if v1 == 0 then goto L327594;
  #L32758a.  v1:= "only-if-cached, " @kind object;
  #L32758e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327594.  v1:= v4.`okhttp3.e.k` @type ^`boolean` @kind boolean;
  #L327598.  if v1 == 0 then goto L3275a6;
  #L32759c.  v1:= "no-transform, " @kind object;
  #L3275a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3275a6.  v1:= v4.`okhttp3.e.l` @type ^`boolean` @kind boolean;
  #L3275aa.  if v1 == 0 then goto L3275b8;
  #L3275ae.  v1:= "immutable, " @kind object;
  #L3275b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3275b8.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3275be.  v1:= temp;
  #L3275c0.  if v1 != 0 then goto L3275ca;
  #L3275c4.  v0:= "" @kind object;
  #L3275c8.  return v0 @kind object;
  #L3275ca.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3275d0.  v1:= temp;
  #L3275d2.  v1:= v1 + -2;
  #L3275d6.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3275dc.  v2:= temp;
  #L3275de.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3275e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3275ea.  v0:= temp @kind object;
  #L3275ec.  return v0 @kind object;
}
procedure `okhttp3.e` `k`(`okhttp3.w` v22 @kind object) @signature `Lokhttp3/e;.k:(Lokhttp3/w;)Lokhttp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L327628.  v0:= v22 @kind object;
  #L32762c.  call temp:= `h`(v22) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L327632.  v1:= temp;
  #L327634.  v6:= 0I;
  #L327636.  v7:= 1I;
  #L327638.  v8:= 0I;
  #L32763a.  v9:= 0I;
  #L32763c.  v10:= 0I;
  #L32763e.  v11:= -1I;
  #L327640.  v12:= -1I;
  #L327642.  v13:= 0I;
  #L327644.  v14:= 0I;
  #L327646.  v15:= 0I;
  #L327648.  v16:= -1I;
  #L32764c.  v17:= -1I;
  #L327650.  v18:= 0I;
  #L327654.  v19:= 0I;
  #L327658.  v20:= 0I;
  #L32765c.  if v6 >= v1 then goto L3278a6;
  #L327660.  call temp:= `e`(v0, v6) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L327666.  v2:= temp @kind object;
  #L327668.  call temp:= `i`(v0, v6) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L32766e.  v4:= temp @kind object;
  #L327670.  v3:= "Cache-Control" @kind object;
  #L327674.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32767a.  v3:= temp;
  #L32767c.  if v3 == 0 then goto L32768a;
  #L327680.  if v8 == 0 then goto L327686;
  #L327684.  goto L32769a;
  #L327686.  v8:= v4 @kind object;
  #L327688.  goto L32769c;
  #L32768a.  v3:= "Pragma" @kind object;
  #L32768e.  call temp:= `equalsIgnoreCase`(v2, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327694.  v2:= temp;
  #L327696.  if v2 == 0 then goto L327898;
  #L32769a.  v7:= 0I;
  #L32769c.  v2:= 0I;
  #L32769e.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3276a4.  v3:= temp;
  #L3276a6.  if v2 >= v3 then goto L327898;
  #L3276aa.  v3:= "=,;" @kind object;
  #L3276ae.  call temp:= `f`(v4, v2, v3) @signature `Lge/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L3276b4.  v3:= temp;
  #L3276b6.  call temp:= `substring`(v4, v2, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3276bc.  v2:= temp @kind object;
  #L3276be.  call temp:= `trim`(v2) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L3276c4.  v2:= temp @kind object;
  #L3276c6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3276cc.  v5:= temp;
  #L3276ce.  if v3 == v5 then goto L32775a;
  #L3276d2.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3276d8.  v5:= temp;
  #L3276da.  v0:= 44I;
  #L3276de.  if v5 == v0 then goto L32775a;
  #L3276e2.  call temp:= `charAt`(v4, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3276e8.  v0:= temp;
  #L3276ea.  v5:= 59I;
  #L3276ee.  if v0 != v5 then goto L3276f4;
  #L3276f2.  goto L32775a;
  #L3276f4.  v3:= v3 + 1;
  #L3276f8.  call temp:= `g`(v4, v3) @signature `Lge/e;.g:(Ljava/lang/String;I)I` @kind static;
  #L3276fe.  v0:= temp;
  #L327700.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L327706.  v3:= temp;
  #L327708.  if v0 >= v3 then goto L32773a;
  #L32770c.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L327712.  v3:= temp;
  #L327714.  v5:= 34I;
  #L327718.  if v3 != v5 then goto L32773a;
  #L32771c.  v0:= v0 + 1;
  #L327720.  v3:= "\"" @kind object;
  #L327724.  call temp:= `f`(v4, v0, v3) @signature `Lge/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L32772a.  v3:= temp;
  #L32772c.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L327732.  v0:= temp @kind object;
  #L327734.  v5:= 1I;
  #L327736.  v3:= v3 + v5 @kind int;
  #L327738.  goto L327762;
  #L32773a.  v5:= 1I;
  #L32773c.  v3:= ",;" @kind object;
  #L327740.  call temp:= `f`(v4, v0, v3) @signature `Lge/e;.f:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L327746.  v3:= temp;
  #L327748.  call temp:= `substring`(v4, v0, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32774e.  v0:= temp @kind object;
  #L327750.  call temp:= `trim`(v0) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L327756.  v0:= temp @kind object;
  #L327758.  goto L327762;
  #L32775a.  v5:= 1I;
  #L32775c.  v3:= v3 + 1;
  #L327760.  v0:= 0I;
  #L327762.  v5:= "no-cache" @kind object;
  #L327766.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32776c.  v5:= temp;
  #L32776e.  if v5 == 0 then goto L32777a;
  #L327772.  v5:= -1I;
  #L327774.  v9:= 1I;
  #L327776.  goto L32788e;
  #L32777a.  v5:= "no-store" @kind object;
  #L32777e.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327784.  v5:= temp;
  #L327786.  if v5 == 0 then goto L327792;
  #L32778a.  v5:= -1I;
  #L32778c.  v10:= 1I;
  #L32778e.  goto L32788e;
  #L327792.  v5:= "max-age" @kind object;
  #L327796.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32779c.  v5:= temp;
  #L32779e.  if v5 == 0 then goto L3277b0;
  #L3277a2.  v5:= -1I;
  #L3277a4.  call temp:= `d`(v0, v5) @signature `Lge/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3277aa.  v11:= temp;
  #L3277ac.  goto L32788e;
  #L3277b0.  v5:= "s-maxage" @kind object;
  #L3277b4.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3277ba.  v5:= temp;
  #L3277bc.  if v5 == 0 then goto L3277cc;
  #L3277c0.  v5:= -1I;
  #L3277c2.  call temp:= `d`(v0, v5) @signature `Lge/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L3277c8.  v12:= temp;
  #L3277ca.  goto L32788e;
  #L3277cc.  v5:= "private" @kind object;
  #L3277d0.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3277d6.  v5:= temp;
  #L3277d8.  if v5 == 0 then goto L3277e2;
  #L3277dc.  v5:= -1I;
  #L3277de.  v13:= 1I;
  #L3277e0.  goto L32788e;
  #L3277e2.  v5:= "public" @kind object;
  #L3277e6.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3277ec.  v5:= temp;
  #L3277ee.  if v5 == 0 then goto L3277f8;
  #L3277f2.  v5:= -1I;
  #L3277f4.  v14:= 1I;
  #L3277f6.  goto L32788e;
  #L3277f8.  v5:= "must-revalidate" @kind object;
  #L3277fc.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327802.  v5:= temp;
  #L327804.  if v5 == 0 then goto L32780e;
  #L327808.  v5:= -1I;
  #L32780a.  v15:= 1I;
  #L32780c.  goto L32788e;
  #L32780e.  v5:= "max-stale" @kind object;
  #L327812.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327818.  v5:= temp;
  #L32781a.  if v5 == 0 then goto L327830;
  #L32781e.  v2:= 2147483647I;
  #L327824.  call temp:= `d`(v0, v2) @signature `Lge/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L32782a.  v16:= temp;
  #L32782c.  v5:= -1I;
  #L32782e.  goto L32788e;
  #L327830.  v5:= "min-fresh" @kind object;
  #L327834.  call temp:= `equalsIgnoreCase`(v5, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32783a.  v5:= temp;
  #L32783c.  if v5 == 0 then goto L32784c;
  #L327840.  v5:= -1I;
  #L327842.  call temp:= `d`(v0, v5) @signature `Lge/e;.d:(Ljava/lang/String;I)I` @kind static;
  #L327848.  v17:= temp;
  #L32784a.  goto L32788e;
  #L32784c.  v5:= -1I;
  #L32784e.  v0:= "only-if-cached" @kind object;
  #L327852.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327858.  v0:= temp;
  #L32785a.  if v0 == 0 then goto L327864;
  #L32785e.  v18:= 1I;
  #L327862.  goto L32788e;
  #L327864.  v0:= "no-transform" @kind object;
  #L327868.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32786e.  v0:= temp;
  #L327870.  if v0 == 0 then goto L32787a;
  #L327874.  v19:= 1I;
  #L327878.  goto L32788e;
  #L32787a.  v0:= "immutable" @kind object;
  #L32787e.  call temp:= `equalsIgnoreCase`(v0, v2) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L327884.  v0:= temp;
  #L327886.  if v0 == 0 then goto L32788e;
  #L32788a.  v20:= 1I;
  #L32788e.  v0:= v22 @kind object;
  #L327892.  v2:= v3;
  #L327894.  goto L32769e;
  #L327898.  v5:= -1I;
  #L32789a.  v6:= v6 + 1;
  #L32789e.  v0:= v22 @kind object;
  #L3278a2.  goto L32765c;
  #L3278a6.  if v7 != 0 then goto L3278b0;
  #L3278aa.  v21:= 0I;
  #L3278ae.  goto L3278b4;
  #L3278b0.  v21:= v8 @kind object;
  #L3278b4.  v0:= new `okhttp3.e`;
  #L3278b8.  v8:= v0 @kind object;
  #L3278ba.  call `<init>`(v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lokhttp3/e;.<init>:(ZZIIZZZIIZZZLjava/lang/String;)V` @kind direct;
  #L3278c0.  return v0 @kind object;
}
procedure `boolean` `b`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3273b8.  v0:= v1.`okhttp3.e.e` @type ^`boolean` @kind boolean;
  #L3273bc.  return v0;
}
procedure `boolean` `c`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3273d0.  v0:= v1.`okhttp3.e.f` @type ^`boolean` @kind boolean;
  #L3273d4.  return v0;
}
procedure `int` `d`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327448.  v0:= v1.`okhttp3.e.c` @type ^`int`;
  #L32744c.  return v0;
}
procedure `int` `e`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327460.  v0:= v1.`okhttp3.e.h` @type ^`int`;
  #L327464.  return v0;
}
procedure `int` `f`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.f:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327478.  v0:= v1.`okhttp3.e.i` @type ^`int`;
  #L32747c.  return v0;
}
procedure `boolean` `g`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3273e8.  v0:= v1.`okhttp3.e.g` @type ^`boolean` @kind boolean;
  #L3273ec.  return v0;
}
procedure `boolean` `h`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327400.  v0:= v1.`okhttp3.e.a` @type ^`boolean` @kind boolean;
  #L327404.  return v0;
}
procedure `boolean` `i`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327418.  v0:= v1.`okhttp3.e.b` @type ^`boolean` @kind boolean;
  #L32741c.  return v0;
}
procedure `boolean` `j`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327430.  v0:= v1.`okhttp3.e.j` @type ^`boolean` @kind boolean;
  #L327434.  return v0;
}
procedure `java.lang.String` `toString`(`okhttp3.e` v1 @kind this) @signature `Lokhttp3/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L327600.  v0:= v1.`okhttp3.e.m` @type ^`java.lang.String` @kind object;
  #L327604.  if v0 == 0 then goto L32760a;
  #L327608.  goto L327616;
  #L32760a.  call temp:= `a`(v1) @signature `Lokhttp3/e;.a:()Ljava/lang/String;` @kind direct;
  #L327610.  v0:= temp @kind object;
  #L327612.  v1.`okhttp3.e.m` @type ^`java.lang.String` := v0 @kind object;
  #L327616.  return v0 @kind object;
}
