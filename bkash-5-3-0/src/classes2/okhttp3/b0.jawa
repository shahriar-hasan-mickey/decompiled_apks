record `okhttp3.b0` @kind class @AccessFlag PUBLIC extends `java.lang.Cloneable` @kind interface {
  `boolean` `okhttp3.b0.A` @AccessFlag FINAL;
  `boolean` `okhttp3.b0.B` @AccessFlag FINAL;
  `int` `okhttp3.b0.C` @AccessFlag FINAL;
  `int` `okhttp3.b0.D` @AccessFlag FINAL;
  `int` `okhttp3.b0.E` @AccessFlag FINAL;
  `int` `okhttp3.b0.F` @AccessFlag FINAL;
  `int` `okhttp3.b0.G` @AccessFlag FINAL;
  `okhttp3.p` `okhttp3.b0.g` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.b0.h` @AccessFlag FINAL;
  `java.util.List` `okhttp3.b0.i` @AccessFlag FINAL;
  `java.util.List` `okhttp3.b0.j` @AccessFlag FINAL;
  `java.util.List` `okhttp3.b0.k` @AccessFlag FINAL;
  `java.util.List` `okhttp3.b0.l` @AccessFlag FINAL;
  `okhttp3.u$b` `okhttp3.b0.m` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.b0.n` @AccessFlag FINAL;
  `okhttp3.o` `okhttp3.b0.o` @AccessFlag FINAL;
  `fe.d` `okhttp3.b0.p` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.b0.q` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.b0.r` @AccessFlag FINAL;
  `ke.c` `okhttp3.b0.s` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.b0.t` @AccessFlag FINAL;
  `okhttp3.h` `okhttp3.b0.u` @AccessFlag FINAL;
  `okhttp3.d` `okhttp3.b0.v` @AccessFlag FINAL;
  `okhttp3.d` `okhttp3.b0.w` @AccessFlag FINAL;
  `okhttp3.l` `okhttp3.b0.x` @AccessFlag FINAL;
  `okhttp3.s` `okhttp3.b0.y` @AccessFlag FINAL;
  `boolean` `okhttp3.b0.z` @AccessFlag FINAL;
}
global `java.util.List` `@@okhttp3.b0.H` @AccessFlag STATIC_FINAL;
global `java.util.List` `@@okhttp3.b0.I` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/b0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32d9c8.  v0:= 2I;
  #L32d9ca.  v1:= new `okhttp3.c0`[v0];
  #L32d9ce.  v2:= `@@okhttp3.c0.HTTP_2` @type ^`okhttp3.c0` @kind object;
  #L32d9d2.  v3:= 0I;
  #L32d9d4.  v1[v3]:= v2 @kind object;
  #L32d9d8.  v2:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L32d9dc.  v4:= 1I;
  #L32d9de.  v1[v4]:= v2 @kind object;
  #L32d9e2.  call temp:= `u`(v1) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32d9e8.  v1:= temp @kind object;
  #L32d9ea.  `@@okhttp3.b0.H` @type ^`java.util.List` := v1 @kind object;
  #L32d9ee.  v0:= new `okhttp3.m`[v0];
  #L32d9f2.  v1:= `@@okhttp3.m.g` @type ^`okhttp3.m` @kind object;
  #L32d9f6.  v0[v3]:= v1 @kind object;
  #L32d9fa.  v1:= `@@okhttp3.m.i` @type ^`okhttp3.m` @kind object;
  #L32d9fe.  v0[v4]:= v1 @kind object;
  #L32da02.  call temp:= `u`(v0) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L32da08.  v0:= temp @kind object;
  #L32da0a.  `@@okhttp3.b0.I` @type ^`java.util.List` := v0 @kind object;
  #L32da0e.  v0:= new `okhttp3.b0$a`;
  #L32da12.  call `<init>`(v0) @signature `Lokhttp3/b0$a;.<init>:()V` @kind direct;
  #L32da18.  `@@ee.a.a` @type ^`ee.a` := v0 @kind object;
  #L32da1c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32da30.  v0:= new `okhttp3.b0$b`;
  #L32da34.  call `<init>`(v0) @signature `Lokhttp3/b0$b;.<init>:()V` @kind direct;
  #L32da3a.  call `<init>`(v1, v0) @signature `Lokhttp3/b0;.<init>:(Lokhttp3/b0$b;)V` @kind direct;
  #L32da40.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.b0` v4 @kind this, `okhttp3.b0$b` v5 @kind object) @signature `Lokhttp3/b0;.<init>:(Lokhttp3/b0$b;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32da54.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32da5a.  v0:= v5.`okhttp3.b0$b.a` @type ^`okhttp3.p` @kind object;
  #L32da5e.  v4.`okhttp3.b0.g` @type ^`okhttp3.p` := v0 @kind object;
  #L32da62.  v0:= v5.`okhttp3.b0$b.b` @type ^`java.net.Proxy` @kind object;
  #L32da66.  v4.`okhttp3.b0.h` @type ^`java.net.Proxy` := v0 @kind object;
  #L32da6a.  v0:= v5.`okhttp3.b0$b.c` @type ^`java.util.List` @kind object;
  #L32da6e.  v4.`okhttp3.b0.i` @type ^`java.util.List` := v0 @kind object;
  #L32da72.  v0:= v5.`okhttp3.b0$b.d` @type ^`java.util.List` @kind object;
  #L32da76.  v4.`okhttp3.b0.j` @type ^`java.util.List` := v0 @kind object;
  #L32da7a.  v1:= v5.`okhttp3.b0$b.e` @type ^`java.util.List` @kind object;
  #L32da7e.  call temp:= `t`(v1) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32da84.  v1:= temp @kind object;
  #L32da86.  v4.`okhttp3.b0.k` @type ^`java.util.List` := v1 @kind object;
  #L32da8a.  v1:= v5.`okhttp3.b0$b.f` @type ^`java.util.List` @kind object;
  #L32da8e.  call temp:= `t`(v1) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32da94.  v1:= temp @kind object;
  #L32da96.  v4.`okhttp3.b0.l` @type ^`java.util.List` := v1 @kind object;
  #L32da9a.  v1:= v5.`okhttp3.b0$b.g` @type ^`okhttp3.u$b` @kind object;
  #L32da9e.  v4.`okhttp3.b0.m` @type ^`okhttp3.u$b` := v1 @kind object;
  #L32daa2.  v1:= v5.`okhttp3.b0$b.h` @type ^`java.net.ProxySelector` @kind object;
  #L32daa6.  v4.`okhttp3.b0.n` @type ^`java.net.ProxySelector` := v1 @kind object;
  #L32daaa.  v1:= v5.`okhttp3.b0$b.i` @type ^`okhttp3.o` @kind object;
  #L32daae.  v4.`okhttp3.b0.o` @type ^`okhttp3.o` := v1 @kind object;
  #L32dab2.  v1:= v5.`okhttp3.b0$b.j` @type ^`fe.d` @kind object;
  #L32dab6.  v4.`okhttp3.b0.p` @type ^`fe.d` := v1 @kind object;
  #L32daba.  v1:= v5.`okhttp3.b0$b.k` @type ^`javax.net.SocketFactory` @kind object;
  #L32dabe.  v4.`okhttp3.b0.q` @type ^`javax.net.SocketFactory` := v1 @kind object;
  #L32dac2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32dac8.  v0:= temp @kind object;
  #L32daca.  v1:= 0I;
  #L32dacc.  v2:= 0I;
  #L32dace.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32dad4.  v3:= temp;
  #L32dad6.  if v3 == 0 then goto L32dafa;
  #L32dada.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32dae0.  v3:= temp @kind object;
  #L32dae2.  v3:= (`okhttp3.m`) v3 @kind object;
  #L32dae6.  if v2 != 0 then goto L32daf6;
  #L32daea.  call temp:= `d`(v3) @signature `Lokhttp3/m;.d:()Z` @kind virtual;
  #L32daf0.  v2:= temp;
  #L32daf2.  if v2 == 0 then goto L32dacc;
  #L32daf6.  v2:= 1I;
  #L32daf8.  goto L32dace;
  #L32dafa.  v0:= v5.`okhttp3.b0$b.l` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32dafe.  if v0 != 0 then goto L32db2a;
  #L32db02.  if v2 != 0 then goto L32db08;
  #L32db06.  goto L32db2a;
  #L32db08.  call temp:= `D`() @signature `Lee/e;.D:()Ljavax/net/ssl/X509TrustManager;` @kind static;
  #L32db0e.  v0:= temp @kind object;
  #L32db10.  call temp:= `t`(v0) @signature `Lokhttp3/b0;.t:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @kind static;
  #L32db16.  v1:= temp @kind object;
  #L32db18.  v4.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` := v1 @kind object;
  #L32db1c.  call temp:= `b`(v0) @signature `Lke/c;.b:(Ljavax/net/ssl/X509TrustManager;)Lke/c;` @kind static;
  #L32db22.  v0:= temp @kind object;
  #L32db24.  v4.`okhttp3.b0.s` @type ^`ke.c` := v0 @kind object;
  #L32db28.  goto L32db36;
  #L32db2a.  v4.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L32db2e.  v0:= v5.`okhttp3.b0$b.m` @type ^`ke.c` @kind object;
  #L32db32.  v4.`okhttp3.b0.s` @type ^`ke.c` := v0 @kind object;
  #L32db36.  v0:= v4.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32db3a.  if v0 == 0 then goto L32db50;
  #L32db3e.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L32db44.  v0:= temp @kind object;
  #L32db46.  v1:= v4.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32db4a.  call `f`(v0, v1) @signature `Lokhttp3/internal/platform/e;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @kind virtual;
  #L32db50.  v0:= v5.`okhttp3.b0$b.n` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32db54.  v4.`okhttp3.b0.t` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L32db58.  v0:= v5.`okhttp3.b0$b.o` @type ^`okhttp3.h` @kind object;
  #L32db5c.  v1:= v4.`okhttp3.b0.s` @type ^`ke.c` @kind object;
  #L32db60.  call temp:= `f`(v0, v1) @signature `Lokhttp3/h;.f:(Lke/c;)Lokhttp3/h;` @kind virtual;
  #L32db66.  v0:= temp @kind object;
  #L32db68.  v4.`okhttp3.b0.u` @type ^`okhttp3.h` := v0 @kind object;
  #L32db6c.  v0:= v5.`okhttp3.b0$b.p` @type ^`okhttp3.d` @kind object;
  #L32db70.  v4.`okhttp3.b0.v` @type ^`okhttp3.d` := v0 @kind object;
  #L32db74.  v0:= v5.`okhttp3.b0$b.q` @type ^`okhttp3.d` @kind object;
  #L32db78.  v4.`okhttp3.b0.w` @type ^`okhttp3.d` := v0 @kind object;
  #L32db7c.  v0:= v5.`okhttp3.b0$b.r` @type ^`okhttp3.l` @kind object;
  #L32db80.  v4.`okhttp3.b0.x` @type ^`okhttp3.l` := v0 @kind object;
  #L32db84.  v0:= v5.`okhttp3.b0$b.s` @type ^`okhttp3.s` @kind object;
  #L32db88.  v4.`okhttp3.b0.y` @type ^`okhttp3.s` := v0 @kind object;
  #L32db8c.  v0:= v5.`okhttp3.b0$b.t` @type ^`boolean` @kind boolean;
  #L32db90.  v4.`okhttp3.b0.z` @type ^`boolean` := v0 @kind boolean;
  #L32db94.  v0:= v5.`okhttp3.b0$b.u` @type ^`boolean` @kind boolean;
  #L32db98.  v4.`okhttp3.b0.A` @type ^`boolean` := v0 @kind boolean;
  #L32db9c.  v0:= v5.`okhttp3.b0$b.v` @type ^`boolean` @kind boolean;
  #L32dba0.  v4.`okhttp3.b0.B` @type ^`boolean` := v0 @kind boolean;
  #L32dba4.  v0:= v5.`okhttp3.b0$b.w` @type ^`int`;
  #L32dba8.  v4.`okhttp3.b0.C` @type ^`int` := v0;
  #L32dbac.  v0:= v5.`okhttp3.b0$b.x` @type ^`int`;
  #L32dbb0.  v4.`okhttp3.b0.D` @type ^`int` := v0;
  #L32dbb4.  v0:= v5.`okhttp3.b0$b.y` @type ^`int`;
  #L32dbb8.  v4.`okhttp3.b0.E` @type ^`int` := v0;
  #L32dbbc.  v0:= v5.`okhttp3.b0$b.z` @type ^`int`;
  #L32dbc0.  v4.`okhttp3.b0.F` @type ^`int` := v0;
  #L32dbc4.  v5:= v5.`okhttp3.b0$b.A` @type ^`int`;
  #L32dbc8.  v4.`okhttp3.b0.G` @type ^`int` := v5;
  #L32dbcc.  v5:= v4.`okhttp3.b0.k` @type ^`java.util.List` @kind object;
  #L32dbd0.  v0:= 0I;
  #L32dbd2.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L32dbd8.  v5:= temp;
  #L32dbda.  if v5 != 0 then goto L32dc22;
  #L32dbde.  v5:= v4.`okhttp3.b0.l` @type ^`java.util.List` @kind object;
  #L32dbe2.  call temp:= `contains`(v5, v0) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L32dbe8.  v5:= temp;
  #L32dbea.  if v5 != 0 then goto L32dbf0;
  #L32dbee.  return @kind void;
  #L32dbf0.  v5:= new `java.lang.IllegalStateException`;
  #L32dbf4.  v0:= new `java.lang.StringBuilder`;
  #L32dbf8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dbfe.  v1:= "Null network interceptor: " @kind object;
  #L32dc02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dc08.  v1:= v4.`okhttp3.b0.l` @type ^`java.util.List` @kind object;
  #L32dc0c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dc12.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dc18.  v0:= temp @kind object;
  #L32dc1a.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dc20.  throw v5;
  #L32dc22.  v5:= new `java.lang.IllegalStateException`;
  #L32dc26.  v0:= new `java.lang.StringBuilder`;
  #L32dc2a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dc30.  v1:= "Null interceptor: " @kind object;
  #L32dc34.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dc3a.  v1:= v4.`okhttp3.b0.k` @type ^`java.util.List` @kind object;
  #L32dc3e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dc44.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dc4a.  v0:= temp @kind object;
  #L32dc4c.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dc52.  throw v5;
}
procedure `javax.net.ssl.SSLSocketFactory` `t`(`javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/b0;.t:(Ljavax/net/ssl/X509TrustManager;)Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32d858.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L32d85e.  v0:= temp @kind object;
  #L32d860.  call temp:= `m`(v0) @signature `Lokhttp3/internal/platform/e;.m:()Ljavax/net/ssl/SSLContext;` @kind virtual;
  #L32d866.  v0:= temp @kind object;
  #L32d868.  v1:= 1I;
  #L32d86a.  v1:= new `javax.net.ssl.TrustManager`[v1];
  #L32d86e.  v2:= 0I;
  #L32d870.  v1[v2]:= v3 @kind object;
  #L32d874.  v3:= 0I;
  #L32d876.  call `init`(v0, v3, v1, v3) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L32d87c.  call temp:= `getSocketFactory`(v0) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L32d882.  v3:= temp @kind object;
  #L32d884.  return v3 @kind object;
  #L32d886.  v3:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L32d888.  v0:= new `java.lang.AssertionError`;
  #L32d88c.  v1:= "No System TLS" @kind object;
  #L32d890.  call `<init>`(v0, v1, v3) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L32d896.  throw v0;
  catch `java.security.GeneralSecurityException` @[L32d858..L32d884] goto L32d886;
}
procedure `int` `A`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d768.  v0:= v1.`okhttp3.b0.E` @type ^`int`;
  #L32d76c.  return v0;
}
procedure `boolean` `B`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.B:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d6f0.  v0:= v1.`okhttp3.b0.B` @type ^`boolean` @kind boolean;
  #L32d6f4.  return v0;
}
procedure `javax.net.SocketFactory` `D`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.D:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d828.  v0:= v1.`okhttp3.b0.q` @type ^`javax.net.SocketFactory` @kind object;
  #L32d82c.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `E`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.E:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d8b8.  v0:= v1.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32d8bc.  return v0 @kind object;
}
procedure `int` `F`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.F:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d780.  v0:= v1.`okhttp3.b0.F` @type ^`int`;
  #L32d784.  return v0;
}
procedure `okhttp3.d` `a`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.a:()Lokhttp3/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d8d0.  v0:= v1.`okhttp3.b0.w` @type ^`okhttp3.d` @kind object;
  #L32d8d4.  return v0 @kind object;
}
procedure `int` `b`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d720.  v0:= v1.`okhttp3.b0.C` @type ^`int`;
  #L32d724.  return v0;
}
procedure `okhttp3.h` `c`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.c:()Lokhttp3/h;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d91c.  v0:= v1.`okhttp3.b0.u` @type ^`okhttp3.h` @kind object;
  #L32d920.  return v0 @kind object;
}
procedure `int` `d`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d738.  v0:= v1.`okhttp3.b0.D` @type ^`int`;
  #L32d73c.  return v0;
}
procedure `okhttp3.l` `e`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.e:()Lokhttp3/l;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d934.  v0:= v1.`okhttp3.b0.x` @type ^`okhttp3.l` @kind object;
  #L32d938.  return v0 @kind object;
}
procedure `java.util.List` `f`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.f:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d7c8.  v0:= v1.`okhttp3.b0.j` @type ^`java.util.List` @kind object;
  #L32d7cc.  return v0 @kind object;
}
procedure `okhttp3.o` `g`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.g:()Lokhttp3/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d94c.  v0:= v1.`okhttp3.b0.o` @type ^`okhttp3.o` @kind object;
  #L32d950.  return v0 @kind object;
}
procedure `okhttp3.p` `h`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d964.  v0:= v1.`okhttp3.b0.g` @type ^`okhttp3.p` @kind object;
  #L32d968.  return v0 @kind object;
}
procedure `okhttp3.s` `i`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.i:()Lokhttp3/s;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d97c.  v0:= v1.`okhttp3.b0.y` @type ^`okhttp3.s` @kind object;
  #L32d980.  return v0 @kind object;
}
procedure `okhttp3.u$b` `j`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.j:()Lokhttp3/u$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d994.  v0:= v1.`okhttp3.b0.m` @type ^`okhttp3.u$b` @kind object;
  #L32d998.  return v0 @kind object;
}
procedure `boolean` `l`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d6c0.  v0:= v1.`okhttp3.b0.A` @type ^`boolean` @kind boolean;
  #L32d6c4.  return v0;
}
procedure `boolean` `m`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d6d8.  v0:= v1.`okhttp3.b0.z` @type ^`boolean` @kind boolean;
  #L32d6dc.  return v0;
}
procedure `javax.net.ssl.HostnameVerifier` `n`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.n:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d840.  v0:= v1.`okhttp3.b0.t` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32d844.  return v0 @kind object;
}
procedure `java.util.List` `o`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.o:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d7e0.  v0:= v1.`okhttp3.b0.k` @type ^`java.util.List` @kind object;
  #L32d7e4.  return v0 @kind object;
}
procedure `fe.d` `p`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.p:()Lfe/d;` @AccessFlag  {
    temp;
    v0;

  #L32d708.  v0:= v1.`okhttp3.b0.p` @type ^`fe.d` @kind object;
  #L32d70c.  return v0 @kind object;
}
procedure `java.util.List` `q`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.q:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d7f8.  v0:= v1.`okhttp3.b0.l` @type ^`java.util.List` @kind object;
  #L32d7fc.  return v0 @kind object;
}
procedure `okhttp3.b0$b` `r`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.r:()Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d9ac.  v0:= new `okhttp3.b0$b`;
  #L32d9b0.  call `<init>`(v0, v1) @signature `Lokhttp3/b0$b;.<init>:(Lokhttp3/b0;)V` @kind direct;
  #L32d9b6.  return v0 @kind object;
}
procedure `okhttp3.f` `s`(`okhttp3.b0` v1 @kind this, `okhttp3.e0` v2 @kind object) @signature `Lokhttp3/b0;.s:(Lokhttp3/e0;)Lokhttp3/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d900.  v0:= 0I;
  #L32d902.  call temp:= `e`(v1, v2, v0) @signature `Lokhttp3/d0;.e:(Lokhttp3/b0;Lokhttp3/e0;Z)Lokhttp3/d0;` @kind static;
  #L32d908.  v2:= temp @kind object;
  #L32d90a.  return v2 @kind object;
}
procedure `int` `u`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.u:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d750.  v0:= v1.`okhttp3.b0.G` @type ^`int`;
  #L32d754.  return v0;
}
procedure `java.util.List` `v`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d810.  v0:= v1.`okhttp3.b0.i` @type ^`java.util.List` @kind object;
  #L32d814.  return v0 @kind object;
}
procedure `java.net.Proxy` `w`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.w:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d798.  v0:= v1.`okhttp3.b0.h` @type ^`java.net.Proxy` @kind object;
  #L32d79c.  return v0 @kind object;
}
procedure `okhttp3.d` `x`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.x:()Lokhttp3/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d8e8.  v0:= v1.`okhttp3.b0.v` @type ^`okhttp3.d` @kind object;
  #L32d8ec.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `z`(`okhttp3.b0` v1 @kind this) @signature `Lokhttp3/b0;.z:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d7b0.  v0:= v1.`okhttp3.b0.n` @type ^`java.net.ProxySelector` @kind object;
  #L32d7b4.  return v0 @kind object;
}
