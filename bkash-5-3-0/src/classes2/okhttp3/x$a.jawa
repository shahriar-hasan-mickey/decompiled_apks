record `okhttp3.x$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.x$a.a` @AccessFlag ;
  `java.lang.String` `okhttp3.x$a.b` @AccessFlag ;
  `java.lang.String` `okhttp3.x$a.c` @AccessFlag ;
  `java.lang.String` `okhttp3.x$a.d` @AccessFlag ;
  `int` `okhttp3.x$a.e` @AccessFlag ;
  `java.util.List` `okhttp3.x$a.f` @AccessFlag FINAL;
  `java.util.List` `okhttp3.x$a.g` @AccessFlag ;
  `java.lang.String` `okhttp3.x$a.h` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.x$a` v2 @kind this) @signature `Lokhttp3/x$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32ba9c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32baa2.  v0:= "" @kind object;
  #L32baa6.  v2.`okhttp3.x$a.b` @type ^`java.lang.String` := v0 @kind object;
  #L32baaa.  v2.`okhttp3.x$a.c` @type ^`java.lang.String` := v0 @kind object;
  #L32baae.  v1:= -1I;
  #L32bab0.  v2.`okhttp3.x$a.e` @type ^`int` := v1;
  #L32bab4.  v1:= new `java.util.ArrayList`;
  #L32bab8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32babe.  v2.`okhttp3.x$a.f` @type ^`java.util.List` := v1 @kind object;
  #L32bac2.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32bac8.  return @kind void;
}
procedure `java.lang.String` `d`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lokhttp3/x$a;.d:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L32b128.  v0:= 0I;
  #L32b12a.  call temp:= `s`(v1, v2, v3, v0) @signature `Lokhttp3/x;.s:(Ljava/lang/String;IIZ)Ljava/lang/String;` @kind static;
  #L32b130.  v1:= temp @kind object;
  #L32b132.  call temp:= `d`(v1) @signature `Lee/e;.d:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L32b138.  v1:= temp @kind object;
  #L32b13a.  return v1 @kind object;
}
procedure `boolean` `h`(`okhttp3.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/x$a;.h:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32aee0.  v0:= "." @kind object;
  #L32aee4.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32aeea.  v0:= temp;
  #L32aeec.  if v0 != 0 then goto L32af06;
  #L32aef0.  v0:= "%2e" @kind object;
  #L32aef4.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32aefa.  v2:= temp;
  #L32aefc.  if v2 == 0 then goto L32af02;
  #L32af00.  goto L32af06;
  #L32af02.  v2:= 0I;
  #L32af04.  goto L32af08;
  #L32af06.  v2:= 1I;
  #L32af08.  return v2;
}
procedure `boolean` `i`(`okhttp3.x$a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/x$a;.i:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32af1c.  v0:= ".." @kind object;
  #L32af20.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32af26.  v0:= temp;
  #L32af28.  if v0 != 0 then goto L32af62;
  #L32af2c.  v0:= "%2e." @kind object;
  #L32af30.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32af36.  v0:= temp;
  #L32af38.  if v0 != 0 then goto L32af62;
  #L32af3c.  v0:= ".%2e" @kind object;
  #L32af40.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32af46.  v0:= temp;
  #L32af48.  if v0 != 0 then goto L32af62;
  #L32af4c.  v0:= "%2e%2e" @kind object;
  #L32af50.  call temp:= `equalsIgnoreCase`(v2, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32af56.  v2:= temp;
  #L32af58.  if v2 == 0 then goto L32af5e;
  #L32af5c.  goto L32af62;
  #L32af5e.  v2:= 0I;
  #L32af60.  goto L32af64;
  #L32af62.  v2:= 1I;
  #L32af64.  return v2;
}
procedure `int` `k`(`java.lang.String` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lokhttp3/x$a;.k:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32afa4.  v0:= -1I;
  #L32afa6.  v4:= "" @kind object;
  #L32afaa.  v5:= 0I;
  #L32afac.  v6:= 0I;
  #L32afae.  v7:= 0I;
  #L32afb0.  v8:= 1I;
  #L32afb2.  v9:= 0I;
  #L32afb4.  v1:= v10 @kind object;
  #L32afb6.  v2:= v11;
  #L32afb8.  v3:= v12;
  #L32afba.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32afc0.  v10:= temp @kind object;
  #L32afc2.  call temp:= `parseInt`(v10) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L32afc8.  v10:= temp;
  #L32afca.  if v10 <= 0 then goto L32afda;
  #L32afce.  v11:= 65535I;
  #L32afd4.  if v10 > v11 then goto L32afda;
  #L32afd8.  return v10;
  #L32afda.  return v0;
  catch `java.lang.NumberFormatException` @[L32afa6..L32afca] goto L32afda;
}
procedure `void` `m`(`okhttp3.x$a` v3 @kind this) @signature `Lokhttp3/x$a;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L32badc.  v0:= v3.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bae0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bae6.  v1:= temp;
  #L32bae8.  v1:= v1 + -1;
  #L32baec.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L32baf2.  v0:= temp @kind object;
  #L32baf4.  v0:= (`java.lang.String`) v0 @kind object;
  #L32baf8.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L32bafe.  v0:= temp;
  #L32bb00.  v1:= "" @kind object;
  #L32bb04.  if v0 == 0 then goto L32bb30;
  #L32bb08.  v0:= v3.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bb0c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L32bb12.  v0:= temp;
  #L32bb14.  if v0 != 0 then goto L32bb30;
  #L32bb18.  v0:= v3.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bb1c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bb22.  v2:= temp;
  #L32bb24.  v2:= v2 + -1;
  #L32bb28.  call temp:= `set`(v0, v2, v1) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32bb2e.  goto L32bb3a;
  #L32bb30.  v0:= v3.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bb34.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32bb3a.  return @kind void;
}
procedure `int` `o`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lokhttp3/x$a;.o:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L32affc.  if v3 >= v4 then goto L32b03a;
  #L32b000.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b006.  v0:= temp;
  #L32b008.  v1:= 58I;
  #L32b00c.  if v0 == v1 then goto L32b038;
  #L32b010.  v1:= 91I;
  #L32b014.  if v0 == v1 then goto L32b01a;
  #L32b018.  goto L32b032;
  #L32b01a.  v3:= v3 + 1;
  #L32b01e.  if v3 >= v4 then goto L32b032;
  #L32b022.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b028.  v0:= temp;
  #L32b02a.  v1:= 93I;
  #L32b02e.  if v0 != v1 then goto L32b01a;
  #L32b032.  v3:= v3 + 1;
  #L32b036.  goto L32affc;
  #L32b038.  return v3;
  #L32b03a.  return v4;
}
procedure `void` `p`(`okhttp3.x$a` v9 @kind this, `java.lang.String` v10 @kind object, `int` v11 , `int` v12 , `boolean` v13 , `boolean` v14 ) @signature `Lokhttp3/x$a;.p:(Ljava/lang/String;IIZZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L32bb4c.  v3:= " \"<>^`{}|/\\?#" @kind object;
  #L32bb50.  v5:= 0I;
  #L32bb52.  v6:= 0I;
  #L32bb54.  v7:= 1I;
  #L32bb56.  v8:= 0I;
  #L32bb58.  v0:= v10 @kind object;
  #L32bb5a.  v1:= v11;
  #L32bb5c.  v2:= v12;
  #L32bb5e.  v4:= v14;
  #L32bb60.  call temp:= `a`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32bb66.  v10:= temp @kind object;
  #L32bb68.  call temp:= `h`(v9, v10) @signature `Lokhttp3/x$a;.h:(Ljava/lang/String;)Z` @kind direct;
  #L32bb6e.  v11:= temp;
  #L32bb70.  if v11 == 0 then goto L32bb76;
  #L32bb74.  return @kind void;
  #L32bb76.  call temp:= `i`(v9, v10) @signature `Lokhttp3/x$a;.i:(Ljava/lang/String;)Z` @kind direct;
  #L32bb7c.  v11:= temp;
  #L32bb7e.  if v11 == 0 then goto L32bb8a;
  #L32bb82.  call `m`(v9) @signature `Lokhttp3/x$a;.m:()V` @kind direct;
  #L32bb88.  return @kind void;
  #L32bb8a.  v11:= v9.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bb8e.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bb94.  v12:= temp;
  #L32bb96.  v12:= v12 + -1;
  #L32bb9a.  call temp:= `get`(v11, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32bba0.  v11:= temp @kind object;
  #L32bba2.  v11:= (`java.lang.String`) v11 @kind object;
  #L32bba6.  call temp:= `isEmpty`(v11) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L32bbac.  v11:= temp;
  #L32bbae.  if v11 == 0 then goto L32bbca;
  #L32bbb2.  v11:= v9.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bbb6.  call temp:= `size`(v11) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bbbc.  v12:= temp;
  #L32bbbe.  v12:= v12 + -1;
  #L32bbc2.  call temp:= `set`(v11, v12, v10) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32bbc8.  goto L32bbd4;
  #L32bbca.  v11:= v9.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bbce.  call temp:= `add`(v11, v10) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32bbd4.  if v13 == 0 then goto L32bbe6;
  #L32bbd8.  v10:= v9.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bbdc.  v11:= "" @kind object;
  #L32bbe0.  call temp:= `add`(v10, v11) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32bbe6.  return @kind void;
}
procedure `void` `r`(`okhttp3.x$a` v10 @kind this, `java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lokhttp3/x$a;.r:(Ljava/lang/String;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32bbf8.  if v12 != v13 then goto L32bbfe;
  #L32bbfc.  return @kind void;
  #L32bbfe.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32bc04.  v0:= temp;
  #L32bc06.  v1:= 47I;
  #L32bc0a.  v2:= "" @kind object;
  #L32bc0e.  v3:= 1I;
  #L32bc10.  if v0 == v1 then goto L32bc34;
  #L32bc14.  v1:= 92I;
  #L32bc18.  if v0 != v1 then goto L32bc1e;
  #L32bc1c.  goto L32bc34;
  #L32bc1e.  v0:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bc22.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bc28.  v1:= temp;
  #L32bc2a.  v1:= v1 - v3 @kind int;
  #L32bc2c.  call temp:= `set`(v0, v1, v2) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32bc32.  goto L32bc4a;
  #L32bc34.  v0:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bc38.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L32bc3e.  v0:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32bc42.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32bc48.  goto L32bc7a;
  #L32bc4a.  v6:= v12;
  #L32bc4c.  if v6 >= v13 then goto L32bc80;
  #L32bc50.  v12:= "/\\" @kind object;
  #L32bc54.  call temp:= `o`(v11, v6, v13, v12) @signature `Lee/e;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L32bc5a.  v12:= temp;
  #L32bc5c.  if v12 >= v13 then goto L32bc64;
  #L32bc60.  v0:= 1I;
  #L32bc62.  goto L32bc66;
  #L32bc64.  v0:= 0I;
  #L32bc66.  v9:= 1I;
  #L32bc68.  v4:= v10 @kind object;
  #L32bc6a.  v5:= v11 @kind object;
  #L32bc6c.  v7:= v12;
  #L32bc6e.  v8:= v0;
  #L32bc70.  call `p`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x$a;.p:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L32bc76.  if v0 == 0 then goto L32bc4a;
  #L32bc7a.  v12:= v12 + 1;
  #L32bc7e.  goto L32bc4a;
  #L32bc80.  return @kind void;
}
procedure `int` `t`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lokhttp3/x$a;.t:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32b04c.  v0:= v9 - v8 @kind int;
  #L32b050.  v1:= -1I;
  #L32b052.  v2:= 2I;
  #L32b054.  if v0 >= v2 then goto L32b05a;
  #L32b058.  return v1;
  #L32b05a.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b060.  v0:= temp;
  #L32b062.  v2:= 90I;
  #L32b066.  v3:= 122I;
  #L32b06a.  v4:= 65I;
  #L32b06e.  v5:= 97I;
  #L32b072.  if v0 < v5 then goto L32b07a;
  #L32b076.  if v0 <= v3 then goto L32b084;
  #L32b07a.  if v0 < v4 then goto L32b0d8;
  #L32b07e.  if v0 <= v2 then goto L32b084;
  #L32b082.  goto L32b0d8;
  #L32b084.  v8:= v8 + 1;
  #L32b088.  if v8 >= v9 then goto L32b0d8;
  #L32b08c.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b092.  v0:= temp;
  #L32b094.  if v0 < v5 then goto L32b09c;
  #L32b098.  if v0 <= v3 then goto L32b084;
  #L32b09c.  if v0 < v4 then goto L32b0a4;
  #L32b0a0.  if v0 <= v2 then goto L32b084;
  #L32b0a4.  v6:= 48I;
  #L32b0a8.  if v0 < v6 then goto L32b0b4;
  #L32b0ac.  v6:= 57I;
  #L32b0b0.  if v0 <= v6 then goto L32b084;
  #L32b0b4.  v6:= 43I;
  #L32b0b8.  if v0 == v6 then goto L32b084;
  #L32b0bc.  v6:= 45I;
  #L32b0c0.  if v0 == v6 then goto L32b084;
  #L32b0c4.  v6:= 46I;
  #L32b0c8.  if v0 != v6 then goto L32b0ce;
  #L32b0cc.  goto L32b084;
  #L32b0ce.  v7:= 58I;
  #L32b0d2.  if v0 != v7 then goto L32b0d8;
  #L32b0d6.  return v8;
  #L32b0d8.  return v1;
}
procedure `int` `u`(`java.lang.String` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lokhttp3/x$a;.u:(Ljava/lang/String;II)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L32b0ec.  v0:= 0I;
  #L32b0ee.  if v4 >= v5 then goto L32b114;
  #L32b0f2.  call temp:= `charAt`(v3, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b0f8.  v1:= temp;
  #L32b0fa.  v2:= 92I;
  #L32b0fe.  if v1 == v2 then goto L32b10a;
  #L32b102.  v2:= 47I;
  #L32b106.  if v1 != v2 then goto L32b114;
  #L32b10a.  v0:= v0 + 1;
  #L32b10e.  v4:= v4 + 1;
  #L32b112.  goto L32b0ee;
  #L32b114.  return v0;
}
procedure `okhttp3.x$a` `a`(`okhttp3.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/x$a;.a:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32b2f4.  v0:= "pathSegment == null" @kind object;
  #L32b2f8.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32b2fe.  v3:= 0I;
  #L32b300.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32b306.  v4:= temp;
  #L32b308.  v5:= 0I;
  #L32b30a.  v6:= 0I;
  #L32b30c.  v1:= v7 @kind object;
  #L32b30e.  v2:= v8 @kind object;
  #L32b310.  call `p`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/x$a;.p:(Ljava/lang/String;IIZZ)V` @kind direct;
  #L32b316.  return v7 @kind object;
}
procedure `okhttp3.x$a` `b`(`okhttp3.x$a` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lokhttp3/x$a;.b:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32b328.  v0:= "name == null" @kind object;
  #L32b32c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32b332.  v0:= v7.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b336.  if v0 != 0 then goto L32b348;
  #L32b33a.  v0:= new `java.util.ArrayList`;
  #L32b33e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32b344.  v7.`okhttp3.x$a.g` @type ^`java.util.List` := v0 @kind object;
  #L32b348.  v0:= v7.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b34c.  v3:= 0I;
  #L32b34e.  v4:= 0I;
  #L32b350.  v5:= 1I;
  #L32b352.  v6:= 1I;
  #L32b354.  v2:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L32b358.  v1:= v8 @kind object;
  #L32b35a.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b360.  v8:= temp @kind object;
  #L32b362.  call temp:= `add`(v0, v8) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32b368.  v8:= v7.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b36c.  if v9 == 0 then goto L32b388;
  #L32b370.  v2:= 0I;
  #L32b372.  v3:= 0I;
  #L32b374.  v4:= 1I;
  #L32b376.  v5:= 1I;
  #L32b378.  v1:= " !\"#$&'(),/:;<=>?@[]\\^`{|}~" @kind object;
  #L32b37c.  v0:= v9 @kind object;
  #L32b37e.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b384.  v9:= temp @kind object;
  #L32b386.  goto L32b38a;
  #L32b388.  v9:= 0I;
  #L32b38a.  call temp:= `add`(v8, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32b390.  return v7 @kind object;
}
procedure `okhttp3.x` `c`(`okhttp3.x$a` v2 @kind this) @signature `Lokhttp3/x$a;.c:()Lokhttp3/x;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b2a8.  v0:= v2.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b2ac.  if v0 == 0 then goto L32b2d4;
  #L32b2b0.  v0:= v2.`okhttp3.x$a.d` @type ^`java.lang.String` @kind object;
  #L32b2b4.  if v0 == 0 then goto L32b2c4;
  #L32b2b8.  v0:= new `okhttp3.x`;
  #L32b2bc.  call `<init>`(v0, v2) @signature `Lokhttp3/x;.<init>:(Lokhttp3/x$a;)V` @kind direct;
  #L32b2c2.  return v0 @kind object;
  #L32b2c4.  v0:= new `java.lang.IllegalStateException`;
  #L32b2c8.  v1:= "host == null" @kind object;
  #L32b2cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b2d2.  throw v0;
  #L32b2d4.  v0:= new `java.lang.IllegalStateException`;
  #L32b2d8.  v1:= "scheme == null" @kind object;
  #L32b2dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b2e2.  throw v0;
}
procedure `int` `e`(`okhttp3.x$a` v2 @kind this) @signature `Lokhttp3/x$a;.e:()I` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32af78.  v0:= v2.`okhttp3.x$a.e` @type ^`int`;
  #L32af7c.  v1:= -1I;
  #L32af7e.  if v0 == v1 then goto L32af84;
  #L32af82.  goto L32af90;
  #L32af84.  v0:= v2.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32af88.  call temp:= `d`(v0) @signature `Lokhttp3/x;.d:(Ljava/lang/String;)I` @kind static;
  #L32af8e.  v0:= temp;
  #L32af90.  return v0;
}
procedure `okhttp3.x$a` `f`(`okhttp3.x$a` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lokhttp3/x$a;.f:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32b3a4.  if v7 == 0 then goto L32b3c8;
  #L32b3a8.  v2:= 1I;
  #L32b3aa.  v3:= 0I;
  #L32b3ac.  v4:= 1I;
  #L32b3ae.  v5:= 1I;
  #L32b3b0.  v1:= " \"'<>#" @kind object;
  #L32b3b4.  v0:= v7 @kind object;
  #L32b3b6.  call temp:= `b`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b3bc.  v7:= temp @kind object;
  #L32b3be.  call temp:= `A`(v7) @signature `Lokhttp3/x;.A:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L32b3c4.  v7:= temp @kind object;
  #L32b3c6.  goto L32b3ca;
  #L32b3c8.  v7:= 0I;
  #L32b3ca.  v6.`okhttp3.x$a.g` @type ^`java.util.List` := v7 @kind object;
  #L32b3ce.  return v6 @kind object;
}
procedure `okhttp3.x$a` `g`(`okhttp3.x$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/x$a;.g:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32b3e0.  v0:= "host == null" @kind object;
  #L32b3e4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32b3ea.  v0:= 0I;
  #L32b3ec.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32b3f2.  v1:= temp;
  #L32b3f4.  call temp:= `d`(v4, v0, v1) @signature `Lokhttp3/x$a;.d:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L32b3fa.  v0:= temp @kind object;
  #L32b3fc.  if v0 == 0 then goto L32b406;
  #L32b400.  v3.`okhttp3.x$a.d` @type ^`java.lang.String` := v0 @kind object;
  #L32b404.  return v3 @kind object;
  #L32b406.  v0:= new `java.lang.IllegalArgumentException`;
  #L32b40a.  v1:= new `java.lang.StringBuilder`;
  #L32b40e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b414.  v2:= "unexpected host: " @kind object;
  #L32b418.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b41e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b424.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b42a.  v4:= temp @kind object;
  #L32b42c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b432.  throw v0;
}
procedure `okhttp3.x$a` `j`(`okhttp3.x$a` v21 @kind this, `okhttp3.x` v22 @kind object, `java.lang.String` v23 @kind object) @signature `Lokhttp3/x$a;.j:(Lokhttp3/x;Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L32b444.  v0:= v21 @kind object;
  #L32b448.  v1:= v22 @kind object;
  #L32b44c.  v10:= v23 @kind object;
  #L32b450.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32b456.  v2:= temp;
  #L32b458.  v8:= 0I;
  #L32b45a.  call temp:= `G`(v10, v8, v2) @signature `Lee/e;.G:(Ljava/lang/String;II)I` @kind static;
  #L32b460.  v9:= temp;
  #L32b462.  call temp:= `length`(v23) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L32b468.  v2:= temp;
  #L32b46a.  call temp:= `H`(v10, v9, v2) @signature `Lee/e;.H:(Ljava/lang/String;II)I` @kind static;
  #L32b470.  v11:= temp;
  #L32b472.  call temp:= `t`(v10, v9, v11) @signature `Lokhttp3/x$a;.t:(Ljava/lang/String;II)I` @kind static;
  #L32b478.  v12:= temp;
  #L32b47a.  v13:= -1I;
  #L32b47c.  if v12 == v13 then goto L32b514;
  #L32b480.  v3:= 1I;
  #L32b482.  v6:= 0I;
  #L32b484.  v7:= 6I;
  #L32b486.  v5:= "https:" @kind object;
  #L32b48a.  v2:= v23 @kind object;
  #L32b48e.  v4:= v9;
  #L32b490.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L32b496.  v2:= temp;
  #L32b498.  if v2 == 0 then goto L32b4aa;
  #L32b49c.  v2:= "https" @kind object;
  #L32b4a0.  v0.`okhttp3.x$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L32b4a4.  v9:= v9 + 6;
  #L32b4a8.  goto L32b520;
  #L32b4aa.  v3:= 1I;
  #L32b4ac.  v6:= 0I;
  #L32b4ae.  v7:= 5I;
  #L32b4b0.  v5:= "http:" @kind object;
  #L32b4b4.  v2:= v23 @kind object;
  #L32b4b8.  v4:= v9;
  #L32b4ba.  call temp:= `regionMatches`(v2, v3, v4, v5, v6, v7) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L32b4c0.  v2:= temp;
  #L32b4c2.  if v2 == 0 then goto L32b4d4;
  #L32b4c6.  v2:= "http" @kind object;
  #L32b4ca.  v0.`okhttp3.x$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L32b4ce.  v9:= v9 + 5;
  #L32b4d2.  goto L32b520;
  #L32b4d4.  v1:= new `java.lang.IllegalArgumentException`;
  #L32b4d8.  v2:= new `java.lang.StringBuilder`;
  #L32b4dc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b4e2.  v3:= "Expected URL scheme 'http' or 'https' but was '" @kind object;
  #L32b4e6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b4ec.  call temp:= `substring`(v10, v8, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32b4f2.  v3:= temp @kind object;
  #L32b4f4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b4fa.  v3:= "'" @kind object;
  #L32b4fe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b504.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b50a.  v2:= temp @kind object;
  #L32b50c.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b512.  throw v1;
  #L32b514.  if v1 == 0 then goto L32b878;
  #L32b518.  v2:= v1.`okhttp3.x.a` @type ^`java.lang.String` @kind object;
  #L32b51c.  v0.`okhttp3.x$a.a` @type ^`java.lang.String` := v2 @kind object;
  #L32b520.  call temp:= `u`(v10, v9, v11) @signature `Lokhttp3/x$a;.u:(Ljava/lang/String;II)I` @kind static;
  #L32b526.  v2:= temp;
  #L32b528.  v3:= 2I;
  #L32b52a.  v12:= 63I;
  #L32b52e.  v14:= 35I;
  #L32b532.  if v2 >= v3 then goto L32b5b6;
  #L32b536.  if v1 == 0 then goto L32b5b6;
  #L32b53a.  v3:= v1.`okhttp3.x.a` @type ^`java.lang.String` @kind object;
  #L32b53e.  v4:= v0.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b542.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32b548.  v3:= temp;
  #L32b54a.  if v3 != 0 then goto L32b550;
  #L32b54e.  goto L32b5b6;
  #L32b550.  call temp:= `j`(v22) @signature `Lokhttp3/x;.j:()Ljava/lang/String;` @kind virtual;
  #L32b556.  v2:= temp @kind object;
  #L32b558.  v0.`okhttp3.x$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L32b55c.  call temp:= `f`(v22) @signature `Lokhttp3/x;.f:()Ljava/lang/String;` @kind virtual;
  #L32b562.  v2:= temp @kind object;
  #L32b564.  v0.`okhttp3.x$a.c` @type ^`java.lang.String` := v2 @kind object;
  #L32b568.  v2:= v1.`okhttp3.x.d` @type ^`java.lang.String` @kind object;
  #L32b56c.  v0.`okhttp3.x$a.d` @type ^`java.lang.String` := v2 @kind object;
  #L32b570.  v2:= v1.`okhttp3.x.e` @type ^`int`;
  #L32b574.  v0.`okhttp3.x$a.e` @type ^`int` := v2;
  #L32b578.  v2:= v0.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b57c.  call `clear`(v2) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L32b582.  v2:= v0.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b586.  call temp:= `h`(v22) @signature `Lokhttp3/x;.h:()Ljava/util/List;` @kind virtual;
  #L32b58c.  v3:= temp @kind object;
  #L32b58e.  call temp:= `addAll`(v2, v3) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32b594.  if v9 == v11 then goto L32b5a4;
  #L32b598.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b59e.  v2:= temp;
  #L32b5a0.  if v2 != v14 then goto L32b7a2;
  #L32b5a4.  call temp:= `i`(v22) @signature `Lokhttp3/x;.i:()Ljava/lang/String;` @kind virtual;
  #L32b5aa.  v1:= temp @kind object;
  #L32b5ac.  call temp:= `f`(v0, v1) @signature `Lokhttp3/x$a;.f:(Ljava/lang/String;)Lokhttp3/x$a;` @kind virtual;
  #L32b5b2.  goto L32b7a2;
  #L32b5b6.  v9:= v9 + v2 @kind int;
  #L32b5b8.  v2:= v9;
  #L32b5ba.  v16:= 0I;
  #L32b5be.  v17:= 0I;
  #L32b5c2.  v1:= "@/\\?#" @kind object;
  #L32b5c6.  call temp:= `o`(v10, v2, v11, v1) @signature `Lee/e;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L32b5cc.  v9:= temp;
  #L32b5ce.  if v9 == v11 then goto L32b5dc;
  #L32b5d2.  call temp:= `charAt`(v10, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b5d8.  v1:= temp;
  #L32b5da.  goto L32b5de;
  #L32b5dc.  v1:= -1I;
  #L32b5de.  if v1 == v13 then goto L32b70c;
  #L32b5e2.  if v1 == v14 then goto L32b70c;
  #L32b5e6.  v3:= 47I;
  #L32b5ea.  if v1 == v3 then goto L32b70c;
  #L32b5ee.  v3:= 92I;
  #L32b5f2.  if v1 == v3 then goto L32b70c;
  #L32b5f6.  if v1 == v12 then goto L32b70c;
  #L32b5fa.  v3:= 64I;
  #L32b5fe.  if v1 == v3 then goto L32b606;
  #L32b602.  goto L32b700;
  #L32b606.  v8:= "%40" @kind object;
  #L32b60a.  if v16 != 0 then goto L32b6b0;
  #L32b60e.  v1:= 58I;
  #L32b612.  call temp:= `n`(v10, v2, v9, v1) @signature `Lee/e;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L32b618.  v7:= temp;
  #L32b61a.  v5:= 1I;
  #L32b61c.  v6:= 0I;
  #L32b61e.  v18:= 0I;
  #L32b622.  v19:= 1I;
  #L32b626.  v20:= 0I;
  #L32b62a.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L32b62e.  v1:= v23 @kind object;
  #L32b632.  v3:= v7;
  #L32b634.  v15:= v7;
  #L32b636.  v7:= v18;
  #L32b63a.  v14:= v8 @kind object;
  #L32b63c.  v8:= v19;
  #L32b640.  v12:= v9;
  #L32b642.  v9:= v20 @kind object;
  #L32b646.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32b64c.  v1:= temp @kind object;
  #L32b64e.  if v17 == 0 then goto L32b67a;
  #L32b652.  v2:= new `java.lang.StringBuilder`;
  #L32b656.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b65c.  v3:= v0.`okhttp3.x$a.b` @type ^`java.lang.String` @kind object;
  #L32b660.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b666.  call temp:= `append`(v2, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b66c.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b672.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b678.  v1:= temp @kind object;
  #L32b67a.  v0.`okhttp3.x$a.b` @type ^`java.lang.String` := v1 @kind object;
  #L32b67e.  if v15 == v12 then goto L32b6aa;
  #L32b682.  v2:= v15 + 1;
  #L32b686.  v5:= 1I;
  #L32b688.  v6:= 0I;
  #L32b68a.  v7:= 0I;
  #L32b68c.  v8:= 1I;
  #L32b68e.  v9:= 0I;
  #L32b690.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L32b694.  v1:= v23 @kind object;
  #L32b698.  v3:= v12;
  #L32b69a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32b6a0.  v1:= temp @kind object;
  #L32b6a2.  v0.`okhttp3.x$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L32b6a6.  v16:= 1I;
  #L32b6aa.  v17:= 1I;
  #L32b6ae.  goto L32b6fc;
  #L32b6b0.  v14:= v8 @kind object;
  #L32b6b2.  v12:= v9;
  #L32b6b4.  v15:= new `java.lang.StringBuilder`;
  #L32b6b8.  call `<init>`(v15) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b6be.  v1:= v0.`okhttp3.x$a.c` @type ^`java.lang.String` @kind object;
  #L32b6c2.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b6c8.  call temp:= `append`(v15, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b6ce.  v5:= 1I;
  #L32b6d0.  v6:= 0I;
  #L32b6d2.  v7:= 0I;
  #L32b6d4.  v8:= 1I;
  #L32b6d6.  v9:= 0I;
  #L32b6d8.  v4:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L32b6dc.  v1:= v23 @kind object;
  #L32b6e0.  v3:= v12;
  #L32b6e2.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32b6e8.  v1:= temp @kind object;
  #L32b6ea.  call temp:= `append`(v15, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b6f0.  call temp:= `toString`(v15) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b6f6.  v1:= temp @kind object;
  #L32b6f8.  v0.`okhttp3.x$a.c` @type ^`java.lang.String` := v1 @kind object;
  #L32b6fc.  v2:= v12 + 1;
  #L32b700.  v12:= 63I;
  #L32b704.  v14:= 35I;
  #L32b708.  goto L32b5c2;
  #L32b70c.  v12:= v9;
  #L32b70e.  call temp:= `o`(v10, v2, v12) @signature `Lokhttp3/x$a;.o:(Ljava/lang/String;II)I` @kind static;
  #L32b714.  v1:= temp;
  #L32b716.  v3:= v1 + 1;
  #L32b71a.  v4:= 34I;
  #L32b71e.  if v3 >= v12 then goto L32b77c;
  #L32b722.  call temp:= `d`(v10, v2, v1) @signature `Lokhttp3/x$a;.d:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L32b728.  v5:= temp @kind object;
  #L32b72a.  v0.`okhttp3.x$a.d` @type ^`java.lang.String` := v5 @kind object;
  #L32b72e.  call temp:= `k`(v10, v3, v12) @signature `Lokhttp3/x$a;.k:(Ljava/lang/String;II)I` @kind static;
  #L32b734.  v5:= temp;
  #L32b736.  v0.`okhttp3.x$a.e` @type ^`int` := v5;
  #L32b73a.  if v5 == v13 then goto L32b740;
  #L32b73e.  goto L32b798;
  #L32b740.  v1:= new `java.lang.IllegalArgumentException`;
  #L32b744.  v2:= new `java.lang.StringBuilder`;
  #L32b748.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b74e.  v5:= "Invalid URL port: \"" @kind object;
  #L32b752.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b758.  call temp:= `substring`(v10, v3, v12) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32b75e.  v3:= temp @kind object;
  #L32b760.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b766.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b76c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b772.  v2:= temp @kind object;
  #L32b774.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b77a.  throw v1;
  #L32b77c.  call temp:= `d`(v10, v2, v1) @signature `Lokhttp3/x$a;.d:(Ljava/lang/String;II)Ljava/lang/String;` @kind static;
  #L32b782.  v3:= temp @kind object;
  #L32b784.  v0.`okhttp3.x$a.d` @type ^`java.lang.String` := v3 @kind object;
  #L32b788.  v3:= v0.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b78c.  call temp:= `d`(v3) @signature `Lokhttp3/x;.d:(Ljava/lang/String;)I` @kind static;
  #L32b792.  v3:= temp;
  #L32b794.  v0.`okhttp3.x$a.e` @type ^`int` := v3;
  #L32b798.  v3:= v0.`okhttp3.x$a.d` @type ^`java.lang.String` @kind object;
  #L32b79c.  if v3 == 0 then goto L32b83c;
  #L32b7a0.  v9:= v12;
  #L32b7a2.  v1:= "?#" @kind object;
  #L32b7a6.  call temp:= `o`(v10, v9, v11, v1) @signature `Lee/e;.o:(Ljava/lang/String;IILjava/lang/String;)I` @kind static;
  #L32b7ac.  v1:= temp;
  #L32b7ae.  call `r`(v0, v10, v9, v1) @signature `Lokhttp3/x$a;.r:(Ljava/lang/String;II)V` @kind direct;
  #L32b7b4.  if v1 >= v11 then goto L32b802;
  #L32b7b8.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b7be.  v2:= temp;
  #L32b7c0.  v3:= 63I;
  #L32b7c4.  if v2 != v3 then goto L32b802;
  #L32b7c8.  v2:= 35I;
  #L32b7cc.  call temp:= `n`(v10, v1, v11, v2) @signature `Lee/e;.n:(Ljava/lang/String;IIC)I` @kind static;
  #L32b7d2.  v12:= temp;
  #L32b7d4.  v2:= v1 + 1;
  #L32b7d8.  v5:= 1I;
  #L32b7da.  v6:= 0I;
  #L32b7dc.  v7:= 1I;
  #L32b7de.  v8:= 1I;
  #L32b7e0.  v9:= 0I;
  #L32b7e2.  v4:= " \"'<>#" @kind object;
  #L32b7e6.  v1:= v23 @kind object;
  #L32b7ea.  v3:= v12;
  #L32b7ec.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32b7f2.  v1:= temp @kind object;
  #L32b7f4.  call temp:= `A`(v1) @signature `Lokhttp3/x;.A:(Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L32b7fa.  v1:= temp @kind object;
  #L32b7fc.  v0.`okhttp3.x$a.g` @type ^`java.util.List` := v1 @kind object;
  #L32b800.  v1:= v12;
  #L32b802.  if v1 >= v11 then goto L32b83a;
  #L32b806.  call temp:= `charAt`(v10, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L32b80c.  v2:= temp;
  #L32b80e.  v3:= 35I;
  #L32b812.  if v2 != v3 then goto L32b83a;
  #L32b816.  v2:= 1I;
  #L32b818.  v2:= v2 + v1 @kind int;
  #L32b81a.  v5:= 1I;
  #L32b81c.  v6:= 0I;
  #L32b81e.  v7:= 0I;
  #L32b820.  v8:= 0I;
  #L32b822.  v9:= 0I;
  #L32b824.  v4:= "" @kind object;
  #L32b828.  v1:= v23 @kind object;
  #L32b82c.  v3:= v11;
  #L32b82e.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.a:(Ljava/lang/String;IILjava/lang/String;ZZZZLjava/nio/charset/Charset;)Ljava/lang/String;` @kind static;
  #L32b834.  v1:= temp @kind object;
  #L32b836.  v0.`okhttp3.x$a.h` @type ^`java.lang.String` := v1 @kind object;
  #L32b83a.  return v0 @kind object;
  #L32b83c.  v3:= new `java.lang.IllegalArgumentException`;
  #L32b840.  v5:= new `java.lang.StringBuilder`;
  #L32b844.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b84a.  v6:= "Invalid URL host: \"" @kind object;
  #L32b84e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b854.  call temp:= `substring`(v10, v2, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32b85a.  v1:= temp @kind object;
  #L32b85c.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b862.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b868.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b86e.  v1:= temp @kind object;
  #L32b870.  call `<init>`(v3, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b876.  throw v3;
  #L32b878.  v1:= new `java.lang.IllegalArgumentException`;
  #L32b87c.  v2:= "Expected URL scheme 'http' or 'https' but no colon was found" @kind object;
  #L32b880.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b886.  throw v1;
}
procedure `okhttp3.x$a` `l`(`okhttp3.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/x$a;.l:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32b898.  v0:= "password == null" @kind object;
  #L32b89c.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32b8a2.  v3:= 0I;
  #L32b8a4.  v4:= 0I;
  #L32b8a6.  v5:= 0I;
  #L32b8a8.  v6:= 1I;
  #L32b8aa.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L32b8ae.  v1:= v8 @kind object;
  #L32b8b0.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b8b6.  v8:= temp @kind object;
  #L32b8b8.  v7.`okhttp3.x$a.c` @type ^`java.lang.String` := v8 @kind object;
  #L32b8bc.  return v7 @kind object;
}
procedure `okhttp3.x$a` `n`(`okhttp3.x$a` v3 @kind this, `int` v4 ) @signature `Lokhttp3/x$a;.n:(I)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32b8d0.  if v4 <= 0 then goto L32b8e4;
  #L32b8d4.  v0:= 65535I;
  #L32b8da.  if v4 > v0 then goto L32b8e4;
  #L32b8de.  v3.`okhttp3.x$a.e` @type ^`int` := v4;
  #L32b8e2.  return v3 @kind object;
  #L32b8e4.  v0:= new `java.lang.IllegalArgumentException`;
  #L32b8e8.  v1:= new `java.lang.StringBuilder`;
  #L32b8ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b8f2.  v2:= "unexpected port: " @kind object;
  #L32b8f6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b8fc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b902.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b908.  v4:= temp @kind object;
  #L32b90a.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32b910.  throw v0;
}
procedure `okhttp3.x$a` `q`(`okhttp3.x$a` v10 @kind this) @signature `Lokhttp3/x$a;.q:()Lokhttp3/x$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32b924.  v0:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b928.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32b92e.  v0:= temp;
  #L32b930.  v1:= 0I;
  #L32b932.  v2:= 0I;
  #L32b934.  if v2 >= v0 then goto L32b96e;
  #L32b938.  v3:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b93c.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32b942.  v3:= temp @kind object;
  #L32b944.  v4:= v3 @kind object;
  #L32b946.  v4:= (`java.lang.String`) v4 @kind object;
  #L32b94a.  v3:= v10.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b94e.  v6:= 1I;
  #L32b950.  v7:= 1I;
  #L32b952.  v8:= 0I;
  #L32b954.  v9:= 1I;
  #L32b956.  v5:= "[]" @kind object;
  #L32b95a.  call temp:= `b`(v4, v5, v6, v7, v8, v9) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b960.  v4:= temp @kind object;
  #L32b962.  call temp:= `set`(v3, v2, v4) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32b968.  v2:= v2 + 1;
  #L32b96c.  goto L32b934;
  #L32b96e.  v0:= v10.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b972.  if v0 == 0 then goto L32b9bc;
  #L32b976.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32b97c.  v0:= temp;
  #L32b97e.  if v1 >= v0 then goto L32b9bc;
  #L32b982.  v2:= v10.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b986.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32b98c.  v2:= temp @kind object;
  #L32b98e.  v3:= v2 @kind object;
  #L32b990.  v3:= (`java.lang.String`) v3 @kind object;
  #L32b994.  if v3 == 0 then goto L32b9b6;
  #L32b998.  v2:= v10.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b99c.  v5:= 1I;
  #L32b99e.  v6:= 1I;
  #L32b9a0.  v7:= 1I;
  #L32b9a2.  v8:= 1I;
  #L32b9a4.  v4:= "\\^`{|}" @kind object;
  #L32b9a8.  call temp:= `b`(v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b9ae.  v3:= temp @kind object;
  #L32b9b0.  call temp:= `set`(v2, v1, v3) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L32b9b6.  v1:= v1 + 1;
  #L32b9ba.  goto L32b97e;
  #L32b9bc.  v2:= v10.`okhttp3.x$a.h` @type ^`java.lang.String` @kind object;
  #L32b9c0.  if v2 == 0 then goto L32b9dc;
  #L32b9c4.  v4:= 1I;
  #L32b9c6.  v5:= 1I;
  #L32b9c8.  v6:= 0I;
  #L32b9ca.  v7:= 0I;
  #L32b9cc.  v3:= " \"#<>\\^`{|}" @kind object;
  #L32b9d0.  call temp:= `b`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32b9d6.  v0:= temp @kind object;
  #L32b9d8.  v10.`okhttp3.x$a.h` @type ^`java.lang.String` := v0 @kind object;
  #L32b9dc.  return v10 @kind object;
}
procedure `okhttp3.x$a` `s`(`okhttp3.x$a` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lokhttp3/x$a;.s:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32b9f0.  v0:= "scheme == null" @kind object;
  #L32b9f4.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32b9fa.  v0:= "http" @kind object;
  #L32b9fe.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32ba04.  v1:= temp;
  #L32ba06.  if v1 == 0 then goto L32ba10;
  #L32ba0a.  v3.`okhttp3.x$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L32ba0e.  goto L32ba24;
  #L32ba10.  v0:= "https" @kind object;
  #L32ba14.  call temp:= `equalsIgnoreCase`(v4, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32ba1a.  v1:= temp;
  #L32ba1c.  if v1 == 0 then goto L32ba26;
  #L32ba20.  v3.`okhttp3.x$a.a` @type ^`java.lang.String` := v0 @kind object;
  #L32ba24.  return v3 @kind object;
  #L32ba26.  v0:= new `java.lang.IllegalArgumentException`;
  #L32ba2a.  v1:= new `java.lang.StringBuilder`;
  #L32ba2e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32ba34.  v2:= "unexpected scheme: " @kind object;
  #L32ba38.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ba3e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ba44.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32ba4a.  v4:= temp @kind object;
  #L32ba4c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ba52.  throw v0;
}
procedure `java.lang.String` `toString`(`okhttp3.x$a` v4 @kind this) @signature `Lokhttp3/x$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b14c.  v0:= new `java.lang.StringBuilder`;
  #L32b150.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32b156.  v1:= v4.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b15a.  if v1 == 0 then goto L32b170;
  #L32b15e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b164.  v1:= "://" @kind object;
  #L32b168.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b16e.  goto L32b17a;
  #L32b170.  v1:= "//" @kind object;
  #L32b174.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b17a.  v1:= v4.`okhttp3.x$a.b` @type ^`java.lang.String` @kind object;
  #L32b17e.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L32b184.  v1:= temp;
  #L32b186.  v2:= 58I;
  #L32b18a.  if v1 == 0 then goto L32b19e;
  #L32b18e.  v1:= v4.`okhttp3.x$a.c` @type ^`java.lang.String` @kind object;
  #L32b192.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L32b198.  v1:= temp;
  #L32b19a.  if v1 != 0 then goto L32b1d2;
  #L32b19e.  v1:= v4.`okhttp3.x$a.b` @type ^`java.lang.String` @kind object;
  #L32b1a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1a8.  v1:= v4.`okhttp3.x$a.c` @type ^`java.lang.String` @kind object;
  #L32b1ac.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L32b1b2.  v1:= temp;
  #L32b1b4.  if v1 != 0 then goto L32b1c8;
  #L32b1b8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1be.  v1:= v4.`okhttp3.x$a.c` @type ^`java.lang.String` @kind object;
  #L32b1c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1c8.  v1:= 64I;
  #L32b1cc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1d2.  v1:= v4.`okhttp3.x$a.d` @type ^`java.lang.String` @kind object;
  #L32b1d6.  v3:= -1I;
  #L32b1d8.  if v1 == 0 then goto L32b212;
  #L32b1dc.  call temp:= `indexOf`(v1, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L32b1e2.  v1:= temp;
  #L32b1e4.  if v1 == v3 then goto L32b208;
  #L32b1e8.  v1:= 91I;
  #L32b1ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1f2.  v1:= v4.`okhttp3.x$a.d` @type ^`java.lang.String` @kind object;
  #L32b1f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b1fc.  v1:= 93I;
  #L32b200.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b206.  goto L32b212;
  #L32b208.  v1:= v4.`okhttp3.x$a.d` @type ^`java.lang.String` @kind object;
  #L32b20c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b212.  v1:= v4.`okhttp3.x$a.e` @type ^`int`;
  #L32b216.  if v1 != v3 then goto L32b222;
  #L32b21a.  v1:= v4.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b21e.  if v1 == 0 then goto L32b24a;
  #L32b222.  call temp:= `e`(v4) @signature `Lokhttp3/x$a;.e:()I` @kind virtual;
  #L32b228.  v1:= temp;
  #L32b22a.  v3:= v4.`okhttp3.x$a.a` @type ^`java.lang.String` @kind object;
  #L32b22e.  if v3 == 0 then goto L32b23e;
  #L32b232.  call temp:= `d`(v3) @signature `Lokhttp3/x;.d:(Ljava/lang/String;)I` @kind static;
  #L32b238.  v3:= temp;
  #L32b23a.  if v1 == v3 then goto L32b24a;
  #L32b23e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b244.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b24a.  v1:= v4.`okhttp3.x$a.f` @type ^`java.util.List` @kind object;
  #L32b24e.  call `r`(v0, v1) @signature `Lokhttp3/x;.r:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L32b254.  v1:= v4.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b258.  if v1 == 0 then goto L32b270;
  #L32b25c.  v1:= 63I;
  #L32b260.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b266.  v1:= v4.`okhttp3.x$a.g` @type ^`java.util.List` @kind object;
  #L32b26a.  call `n`(v0, v1) @signature `Lokhttp3/x;.n:(Ljava/lang/StringBuilder;Ljava/util/List;)V` @kind static;
  #L32b270.  v1:= v4.`okhttp3.x$a.h` @type ^`java.lang.String` @kind object;
  #L32b274.  if v1 == 0 then goto L32b28c;
  #L32b278.  v1:= 35I;
  #L32b27c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b282.  v1:= v4.`okhttp3.x$a.h` @type ^`java.lang.String` @kind object;
  #L32b286.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32b28c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32b292.  v0:= temp @kind object;
  #L32b294.  return v0 @kind object;
}
procedure `okhttp3.x$a` `v`(`okhttp3.x$a` v7 @kind this, `java.lang.String` v8 @kind object) @signature `Lokhttp3/x$a;.v:(Ljava/lang/String;)Lokhttp3/x$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32ba64.  v0:= "username == null" @kind object;
  #L32ba68.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32ba6e.  v3:= 0I;
  #L32ba70.  v4:= 0I;
  #L32ba72.  v5:= 0I;
  #L32ba74.  v6:= 1I;
  #L32ba76.  v2:= " \"':;<=>@[]^`{}|/\\?#" @kind object;
  #L32ba7a.  v1:= v8 @kind object;
  #L32ba7c.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/x;.b:(Ljava/lang/String;Ljava/lang/String;ZZZZ)Ljava/lang/String;` @kind static;
  #L32ba82.  v8:= temp @kind object;
  #L32ba84.  v7.`okhttp3.x$a.b` @type ^`java.lang.String` := v8 @kind object;
  #L32ba88.  return v7 @kind object;
}
