record `okhttp3.d0$a` @kind class @AccessFlag FINAL extends `ee.b` @kind class {
  `okhttp3.g` `okhttp3.d0$a.h` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `okhttp3.d0$a.i` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.d0` `okhttp3.d0$a.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/d0$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L32dec4.  v0:= constclass @type ^`okhttp3.d0` @kind object;
  #L32dec8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.d0$a` v2 @kind this, `okhttp3.d0` v3 @kind object, `okhttp3.g` v4 @kind object) @signature `Lokhttp3/d0$a;.<init>:(Lokhttp3/d0;Lokhttp3/g;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32dedc.  v2.`okhttp3.d0$a.j` @type ^`okhttp3.d0` := v3 @kind object;
  #L32dee0.  v0:= 1I;
  #L32dee2.  v0:= new `java.lang.Object`[v0];
  #L32dee6.  call temp:= `f`(v3) @signature `Lokhttp3/d0;.f:()Ljava/lang/String;` @kind virtual;
  #L32deec.  v3:= temp @kind object;
  #L32deee.  v1:= 0I;
  #L32def0.  v0[v1]:= v3 @kind object;
  #L32def4.  v3:= "OkHttp %s" @kind object;
  #L32def8.  call `<init>`(v2, v3, v0) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L32defe.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L32df02.  call `<init>`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L32df08.  v2.`okhttp3.d0$a.i` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L32df0c.  v2.`okhttp3.d0$a.h` @type ^`okhttp3.g` := v4 @kind object;
  #L32df10.  return @kind void;
}
procedure `void` `k`(`okhttp3.d0$a` v5 @kind this) @signature `Lokhttp3/d0$a;.k:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32df24.  v0:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32df28.  call temp:= `a`(v0) @signature `Lokhttp3/d0;.a:(Lokhttp3/d0;)Lokhttp3/internal/connection/k;` @kind static;
  #L32df2e.  v0:= temp @kind object;
  #L32df30.  call `p`(v0) @signature `Lokhttp3/internal/connection/k;.p:()V` @kind virtual;
  #L32df36.  v0:= 0I;
  #L32df38.  v1:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32df3c.  call temp:= `c`(v1) @signature `Lokhttp3/d0;.c:()Lokhttp3/g0;` @kind virtual;
  #L32df42.  v0:= temp @kind object;
  #L32df44.  v1:= 1I;
  #L32df46.  v2:= v5.`okhttp3.d0$a.h` @type ^`okhttp3.g` @kind object;
  #L32df4a.  v3:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32df4e.  call `a`(v2, v3, v0) @signature `Lokhttp3/g;.a:(Lokhttp3/f;Lokhttp3/g0;)V` @kind interface;
  #L32df54.  v0:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32df58.  v0:= v0.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32df5c.  call temp:= `h`(v0) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32df62.  v0:= temp @kind object;
  #L32df64.  call `f`(v0, v5) @signature `Lokhttp3/p;.f:(Lokhttp3/d0$a;)V` @kind virtual;
  #L32df6a.  goto L32e028;
  #L32df6c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32df6e.  goto L32df7a;
  #L32df70.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L32df72.  goto L32dfd4;
  #L32df74.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32df76.  v0:= v1 @kind object;
  #L32df78.  v1:= 0I;
  #L32df7a.  v2:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32df7e.  call `cancel`(v2) @signature `Lokhttp3/d0;.cancel:()V` @kind virtual;
  #L32df84.  if v1 != 0 then goto L32dfc8;
  #L32df88.  v1:= new `java.io.IOException`;
  #L32df8c.  v2:= new `java.lang.StringBuilder`;
  #L32df90.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32df96.  v3:= "canceled due to " @kind object;
  #L32df9a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dfa0.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dfa6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32dfac.  v2:= temp @kind object;
  #L32dfae.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32dfb4.  call `addSuppressed`(v1, v0) @signature `Ljava/io/IOException;.addSuppressed:(Ljava/lang/Throwable;)V` @kind virtual;
  #L32dfba.  v2:= v5.`okhttp3.d0$a.h` @type ^`okhttp3.g` @kind object;
  #L32dfbe.  v3:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32dfc2.  call `b`(v2, v3, v1) @signature `Lokhttp3/g;.b:(Lokhttp3/f;Ljava/io/IOException;)V` @kind interface;
  #L32dfc8.  throw v0;
  #L32dfca.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32dfcc.  goto L32e02a;
  #L32dfce.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L32dfd0.  v0:= v1 @kind object;
  #L32dfd2.  v1:= 0I;
  #L32dfd4.  if v1 == 0 then goto L32e018;
  #L32dfd8.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L32dfde.  v1:= temp @kind object;
  #L32dfe0.  v2:= 4I;
  #L32dfe2.  v3:= new `java.lang.StringBuilder`;
  #L32dfe6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32dfec.  v4:= "Callback failure for " @kind object;
  #L32dff0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32dff6.  v4:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32dffa.  call temp:= `g`(v4) @signature `Lokhttp3/d0;.g:()Ljava/lang/String;` @kind virtual;
  #L32e000.  v4:= temp @kind object;
  #L32e002.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e008.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e00e.  v3:= temp @kind object;
  #L32e010.  call `s`(v1, v2, v3, v0) @signature `Lokhttp3/internal/platform/e;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L32e016.  goto L32df54;
  #L32e018.  v1:= v5.`okhttp3.d0$a.h` @type ^`okhttp3.g` @kind object;
  #L32e01c.  v2:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e020.  call `b`(v1, v2, v0) @signature `Lokhttp3/g;.b:(Lokhttp3/f;Ljava/io/IOException;)V` @kind interface;
  #L32e026.  goto L32df54;
  #L32e028.  return @kind void;
  #L32e02a.  v1:= v5.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e02e.  v1:= v1.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e032.  call temp:= `h`(v1) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e038.  v1:= temp @kind object;
  #L32e03a.  call `f`(v1, v5) @signature `Lokhttp3/p;.f:(Lokhttp3/d0$a;)V` @kind virtual;
  #L32e040.  throw v0;
  catch `java.io.IOException` @[L32df38..L32df44] goto L32dfce;
  catch `java.lang.Throwable` @[L32df38..L32df44] goto L32df74;
  catch `java.io.IOException` @[L32df46..L32df54] goto L32df70;
  catch `java.lang.Throwable` @[L32df46..L32df54] goto L32df6c;
  catch `java.lang.Throwable` @[L32df7a..L32e026] goto L32dfca;
}
procedure `java.util.concurrent.atomic.AtomicInteger` `l`(`okhttp3.d0$a` v1 @kind this) @signature `Lokhttp3/d0$a;.l:()Ljava/util/concurrent/atomic/AtomicInteger;` @AccessFlag  {
    temp;
    v0;

  #L32de94.  v0:= v1.`okhttp3.d0$a.i` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L32de98.  return v0 @kind object;
}
procedure `void` `m`(`okhttp3.d0$a` v2 @kind this, `java.util.concurrent.ExecutorService` v3 @kind object) @signature `Lokhttp3/d0$a;.m:(Ljava/util/concurrent/ExecutorService;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32e07c.  call `execute`(v3, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L32e082.  goto L32e0d4;
  #L32e084.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e086.  goto L32e0d6;
  #L32e088.  v3:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L32e08a.  v0:= new `java.io.InterruptedIOException`;
  #L32e08e.  v1:= "executor rejected" @kind object;
  #L32e092.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e098.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L32e09e.  v3:= v2.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e0a2.  call temp:= `a`(v3) @signature `Lokhttp3/d0;.a:(Lokhttp3/d0;)Lokhttp3/internal/connection/k;` @kind static;
  #L32e0a8.  v3:= temp @kind object;
  #L32e0aa.  call temp:= `l`(v3, v0) @signature `Lokhttp3/internal/connection/k;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32e0b0.  v3:= v2.`okhttp3.d0$a.h` @type ^`okhttp3.g` @kind object;
  #L32e0b4.  v1:= v2.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e0b8.  call `b`(v3, v1, v0) @signature `Lokhttp3/g;.b:(Lokhttp3/f;Ljava/io/IOException;)V` @kind interface;
  #L32e0be.  v3:= v2.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e0c2.  v3:= v3.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e0c6.  call temp:= `h`(v3) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e0cc.  v3:= temp @kind object;
  #L32e0ce.  call `f`(v3, v2) @signature `Lokhttp3/p;.f:(Lokhttp3/d0$a;)V` @kind virtual;
  #L32e0d4.  return @kind void;
  #L32e0d6.  v0:= v2.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32e0da.  v0:= v0.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e0de.  call temp:= `h`(v0) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e0e4.  v0:= temp @kind object;
  #L32e0e6.  call `f`(v0, v2) @signature `Lokhttp3/p;.f:(Lokhttp3/d0$a;)V` @kind virtual;
  #L32e0ec.  throw v3;
  catch `java.util.concurrent.RejectedExecutionException` @[L32e07c..L32e082] goto L32e088;
  catch `java.lang.Throwable` @[L32e07c..L32e082] goto L32e084;
  catch `java.lang.Throwable` @[L32e08a..L32e0be] goto L32e084;
}
procedure `okhttp3.d0` `n`(`okhttp3.d0$a` v1 @kind this) @signature `Lokhttp3/d0$a;.n:()Lokhttp3/d0;` @AccessFlag  {
    temp;
    v0;

  #L32deac.  v0:= v1.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32deb0.  return v0 @kind object;
}
procedure `java.lang.String` `o`(`okhttp3.d0$a` v1 @kind this) @signature `Lokhttp3/d0$a;.o:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L32de68.  v0:= v1.`okhttp3.d0$a.j` @type ^`okhttp3.d0` @kind object;
  #L32de6c.  v0:= v0.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32de70.  call temp:= `h`(v0) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L32de76.  v0:= temp @kind object;
  #L32de78.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L32de7e.  v0:= temp @kind object;
  #L32de80.  return v0 @kind object;
}
procedure `void` `p`(`okhttp3.d0$a` v0 @kind this, `okhttp3.d0$a` v1 @kind object) @signature `Lokhttp3/d0$a;.p:(Lokhttp3/d0$a;)V` @AccessFlag  {
    temp;

  #L32e118.  v1:= v1.`okhttp3.d0$a.i` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L32e11c.  v0.`okhttp3.d0$a.i` @type ^`java.util.concurrent.atomic.AtomicInteger` := v1 @kind object;
  #L32e120.  return @kind void;
}
