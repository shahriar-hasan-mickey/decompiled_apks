record `okhttp3.h0$a` @kind class @AccessFlag  extends `okhttp3.h0` @kind class {
  `okhttp3.z` `okhttp3.h0$a.g` @AccessFlag FINAL_SYNTHETIC;
  `long` `okhttp3.h0$a.h` @AccessFlag FINAL_SYNTHETIC;
  `okio.e` `okhttp3.h0$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.h0$a` v0 @kind this, `okhttp3.z` v1 @kind object, `long` v2 , `okio.e` v4 @kind object) @signature `Lokhttp3/h0$a;.<init>:(Lokhttp3/z;JLokio/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32f0ac.  v0.`okhttp3.h0$a.g` @type ^`okhttp3.z` := v1 @kind object;
  #L32f0b0.  v0.`okhttp3.h0$a.h` @type ^`long` := v2 @kind wide;
  #L32f0b4.  v0.`okhttp3.h0$a.i` @type ^`okio.e` := v4 @kind object;
  #L32f0b8.  call `<init>`(v0) @signature `Lokhttp3/h0;.<init>:()V` @kind direct;
  #L32f0be.  return @kind void;
}
procedure `long` `r`(`okhttp3.h0$a` v2 @kind this) @signature `Lokhttp3/h0$a;.r:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32f064.  v0:= v2.`okhttp3.h0$a.h` @type ^`long` @kind wide;
  #L32f068.  return v0 @kind wide;
}
procedure `okhttp3.z` `s`(`okhttp3.h0$a` v1 @kind this) @signature `Lokhttp3/h0$a;.s:()Lokhttp3/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f07c.  v0:= v1.`okhttp3.h0$a.g` @type ^`okhttp3.z` @kind object;
  #L32f080.  return v0 @kind object;
}
procedure `okio.e` `y`(`okhttp3.h0$a` v1 @kind this) @signature `Lokhttp3/h0$a;.y:()Lokio/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32f094.  v0:= v1.`okhttp3.h0$a.i` @type ^`okio.e` @kind object;
  #L32f098.  return v0 @kind object;
}
