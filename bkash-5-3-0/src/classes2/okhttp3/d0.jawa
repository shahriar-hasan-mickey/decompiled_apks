record `okhttp3.d0` @kind class @AccessFlag FINAL extends `okhttp3.f` @kind interface {
  `okhttp3.b0` `okhttp3.d0.g` @AccessFlag FINAL;
  `okhttp3.internal.connection.k` `okhttp3.d0.h` @AccessFlag PRIVATE;
  `okhttp3.e0` `okhttp3.d0.i` @AccessFlag FINAL;
  `boolean` `okhttp3.d0.j` @AccessFlag FINAL;
  `boolean` `okhttp3.d0.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.d0` v0 @kind this, `okhttp3.b0` v1 @kind object, `okhttp3.e0` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/d0;.<init>:(Lokhttp3/b0;Lokhttp3/e0;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L32e4c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32e4ce.  v0.`okhttp3.d0.g` @type ^`okhttp3.b0` := v1 @kind object;
  #L32e4d2.  v0.`okhttp3.d0.i` @type ^`okhttp3.e0` := v2 @kind object;
  #L32e4d6.  v0.`okhttp3.d0.j` @type ^`boolean` := v3 @kind boolean;
  #L32e4da.  return @kind void;
}
procedure `okhttp3.internal.connection.k` `a`(`okhttp3.d0` v0 @kind object) @signature `Lokhttp3/d0;.a:(Lokhttp3/d0;)Lokhttp3/internal/connection/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L32e4b0.  v0:= v0.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e4b4.  return v0 @kind object;
}
procedure `okhttp3.d0` `e`(`okhttp3.b0` v1 @kind object, `okhttp3.e0` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/d0;.e:(Lokhttp3/b0;Lokhttp3/e0;Z)Lokhttp3/d0;` @AccessFlag STATIC {
    temp;
    v0;

  #L32e230.  v0:= new `okhttp3.d0`;
  #L32e234.  call `<init>`(v0, v1, v2, v3) @signature `Lokhttp3/d0;.<init>:(Lokhttp3/b0;Lokhttp3/e0;Z)V` @kind direct;
  #L32e23a.  v2:= new `okhttp3.internal.connection.k`;
  #L32e23e.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/connection/k;.<init>:(Lokhttp3/b0;Lokhttp3/f;)V` @kind direct;
  #L32e244.  v0.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` := v2 @kind object;
  #L32e248.  return v0 @kind object;
}
procedure `void` `C`(`okhttp3.d0` v2 @kind this, `okhttp3.g` v3 @kind object) @signature `Lokhttp3/d0;.C:(Lokhttp3/g;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e508.  @monitorenter v2
  #L32e50a.  v0:= v2.`okhttp3.d0.k` @type ^`boolean` @kind boolean;
  #L32e50e.  if v0 != 0 then goto L32e542;
  #L32e512.  v0:= 1I;
  #L32e514.  v2.`okhttp3.d0.k` @type ^`boolean` := v0 @kind boolean;
  #L32e518.  @monitorexit v2
  #L32e51a.  v0:= v2.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e51e.  call `b`(v0) @signature `Lokhttp3/internal/connection/k;.b:()V` @kind virtual;
  #L32e524.  v0:= v2.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e528.  call temp:= `h`(v0) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e52e.  v0:= temp @kind object;
  #L32e530.  v1:= new `okhttp3.d0$a`;
  #L32e534.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/d0$a;.<init>:(Lokhttp3/d0;Lokhttp3/g;)V` @kind direct;
  #L32e53a.  call `a`(v0, v1) @signature `Lokhttp3/p;.a:(Lokhttp3/d0$a;)V` @kind virtual;
  #L32e540.  return @kind void;
  #L32e542.  v3:= new `java.lang.IllegalStateException`;
  #L32e546.  v0:= "Already Executed" @kind object;
  #L32e54a.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e550.  throw v3;
  #L32e552.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e554.  @monitorexit v2
  #L32e556.  throw v3;
  catch `java.lang.Throwable` @[L32e50a..L32e51a] goto L32e552;
  catch `java.lang.Throwable` @[L32e542..L32e556] goto L32e552;
}
procedure `okhttp3.d0` `b`(`okhttp3.d0` v3 @kind this) @signature `Lokhttp3/d0;.b:()Lokhttp3/d0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32e208.  v0:= v3.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e20c.  v1:= v3.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32e210.  v2:= v3.`okhttp3.d0.j` @type ^`boolean` @kind boolean;
  #L32e214.  call temp:= `e`(v0, v1, v2) @signature `Lokhttp3/d0;.e:(Lokhttp3/b0;Lokhttp3/e0;Z)Lokhttp3/d0;` @kind static;
  #L32e21a.  v0:= temp @kind object;
  #L32e21c.  return v0 @kind object;
}
procedure `okhttp3.g0` `c`(`okhttp3.d0` v11 @kind this) @signature `Lokhttp3/d0;.c:()Lokhttp3/g0;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L32e324.  v1:= new `java.util.ArrayList`;
  #L32e328.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32e32e.  v0:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e332.  call temp:= `o`(v0) @signature `Lokhttp3/b0;.o:()Ljava/util/List;` @kind virtual;
  #L32e338.  v0:= temp @kind object;
  #L32e33a.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32e340.  v0:= new `ge.j`;
  #L32e344.  v2:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e348.  call `<init>`(v0, v2) @signature `Lge/j;.<init>:(Lokhttp3/b0;)V` @kind direct;
  #L32e34e.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e354.  v0:= new `ge.a`;
  #L32e358.  v2:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e35c.  call temp:= `g`(v2) @signature `Lokhttp3/b0;.g:()Lokhttp3/o;` @kind virtual;
  #L32e362.  v2:= temp @kind object;
  #L32e364.  call `<init>`(v0, v2) @signature `Lge/a;.<init>:(Lokhttp3/o;)V` @kind direct;
  #L32e36a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e370.  v0:= new `fe.a`;
  #L32e374.  v2:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e378.  call temp:= `p`(v2) @signature `Lokhttp3/b0;.p:()Lfe/d;` @kind virtual;
  #L32e37e.  v2:= temp @kind object;
  #L32e380.  call `<init>`(v0, v2) @signature `Lfe/a;.<init>:(Lfe/d;)V` @kind direct;
  #L32e386.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e38c.  v0:= new `okhttp3.internal.connection.a`;
  #L32e390.  v2:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e394.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/connection/a;.<init>:(Lokhttp3/b0;)V` @kind direct;
  #L32e39a.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e3a0.  v0:= v11.`okhttp3.d0.j` @type ^`boolean` @kind boolean;
  #L32e3a4.  if v0 != 0 then goto L32e3ba;
  #L32e3a8.  v0:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e3ac.  call temp:= `q`(v0) @signature `Lokhttp3/b0;.q:()Ljava/util/List;` @kind virtual;
  #L32e3b2.  v0:= temp @kind object;
  #L32e3b4.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32e3ba.  v0:= new `ge.b`;
  #L32e3be.  v2:= v11.`okhttp3.d0.j` @type ^`boolean` @kind boolean;
  #L32e3c2.  call `<init>`(v0, v2) @signature `Lge/b;.<init>:(Z)V` @kind direct;
  #L32e3c8.  call temp:= `add`(v1, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32e3ce.  v10:= new `ge.g`;
  #L32e3d2.  v2:= v11.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e3d6.  v3:= 0I;
  #L32e3d8.  v4:= 0I;
  #L32e3da.  v5:= v11.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32e3de.  v0:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e3e2.  call temp:= `d`(v0) @signature `Lokhttp3/b0;.d:()I` @kind virtual;
  #L32e3e8.  v7:= temp;
  #L32e3ea.  v0:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e3ee.  call temp:= `A`(v0) @signature `Lokhttp3/b0;.A:()I` @kind virtual;
  #L32e3f4.  v8:= temp;
  #L32e3f6.  v0:= v11.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e3fa.  call temp:= `F`(v0) @signature `Lokhttp3/b0;.F:()I` @kind virtual;
  #L32e400.  v9:= temp;
  #L32e402.  v0:= v10 @kind object;
  #L32e404.  v6:= v11 @kind object;
  #L32e406.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lge/g;.<init>:(Ljava/util/List;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;ILokhttp3/e0;Lokhttp3/f;III)V` @kind direct;
  #L32e40c.  v0:= 0I;
  #L32e40e.  v1:= 0I;
  #L32e410.  v2:= v11.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32e414.  call temp:= `c`(v10, v2) @signature `Lokhttp3/y$a;.c:(Lokhttp3/e0;)Lokhttp3/g0;` @kind interface;
  #L32e41a.  v2:= temp @kind object;
  #L32e41c.  v3:= v11.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e420.  call temp:= `i`(v3) @signature `Lokhttp3/internal/connection/k;.i:()Z` @kind virtual;
  #L32e426.  v3:= temp;
  #L32e428.  if v3 != 0 then goto L32e438;
  #L32e42c.  v0:= v11.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e430.  call temp:= `l`(v0, v1) @signature `Lokhttp3/internal/connection/k;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32e436.  return v2 @kind object;
  #L32e438.  call `g`(v2) @signature `Lee/e;.g:(Ljava/io/Closeable;)V` @kind static;
  #L32e43e.  v2:= new `java.io.IOException`;
  #L32e442.  v3:= "Canceled" @kind object;
  #L32e446.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e44c.  throw v2;
  #L32e44e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e450.  goto L32e46a;
  #L32e452.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L32e454.  v2:= 1I;
  #L32e456.  v3:= v11.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e45a.  call temp:= `l`(v3, v0) @signature `Lokhttp3/internal/connection/k;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32e460.  v0:= temp @kind object;
  #L32e462.  throw v0;
  #L32e464.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e466.  v2:= v0 @kind object;
  #L32e468.  v0:= 1I;
  #L32e46a.  if v0 != 0 then goto L32e478;
  #L32e46e.  v0:= v11.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e472.  call temp:= `l`(v0, v1) @signature `Lokhttp3/internal/connection/k;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32e478.  throw v2;
  catch `java.io.IOException` @[L32e410..L32e428] goto L32e452;
  catch `java.lang.Throwable` @[L32e410..L32e428] goto L32e44e;
  catch `java.io.IOException` @[L32e438..L32e44e] goto L32e452;
  catch `java.lang.Throwable` @[L32e438..L32e44e] goto L32e44e;
  catch `java.lang.Throwable` @[L32e456..L32e464] goto L32e464;
}
procedure `void` `cancel`(`okhttp3.d0` v1 @kind this) @signature `Lokhttp3/d0;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e4ec.  v0:= v1.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e4f0.  call `d`(v0) @signature `Lokhttp3/internal/connection/k;.d:()V` @kind virtual;
  #L32e4f6.  return @kind void;
}
procedure `java.lang.Object` `clone`(`okhttp3.d0` v1 @kind this) @signature `Lokhttp3/d0;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L32e154.  call temp:= `b`(v1) @signature `Lokhttp3/d0;.b:()Lokhttp3/d0;` @kind virtual;
  #L32e15a.  v0:= temp @kind object;
  #L32e15c.  return v0 @kind object;
}
procedure `boolean` `d`(`okhttp3.d0` v1 @kind this) @signature `Lokhttp3/d0;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e134.  v0:= v1.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e138.  call temp:= `i`(v0) @signature `Lokhttp3/internal/connection/k;.i:()Z` @kind virtual;
  #L32e13e.  v0:= temp;
  #L32e140.  return v0;
}
procedure `okhttp3.g0` `execute`(`okhttp3.d0` v2 @kind this) @signature `Lokhttp3/d0;.execute:()Lokhttp3/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e274.  @monitorenter v2
  #L32e276.  v0:= v2.`okhttp3.d0.k` @type ^`boolean` @kind boolean;
  #L32e27a.  if v0 != 0 then goto L32e2de;
  #L32e27e.  v0:= 1I;
  #L32e280.  v2.`okhttp3.d0.k` @type ^`boolean` := v0 @kind boolean;
  #L32e284.  @monitorexit v2
  #L32e286.  v0:= v2.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e28a.  call `p`(v0) @signature `Lokhttp3/internal/connection/k;.p:()V` @kind virtual;
  #L32e290.  v0:= v2.`okhttp3.d0.h` @type ^`okhttp3.internal.connection.k` @kind object;
  #L32e294.  call `b`(v0) @signature `Lokhttp3/internal/connection/k;.b:()V` @kind virtual;
  #L32e29a.  v0:= v2.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e29e.  call temp:= `h`(v0) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e2a4.  v0:= temp @kind object;
  #L32e2a6.  call `b`(v0, v2) @signature `Lokhttp3/p;.b:(Lokhttp3/d0;)V` @kind virtual;
  #L32e2ac.  call temp:= `c`(v2) @signature `Lokhttp3/d0;.c:()Lokhttp3/g0;` @kind virtual;
  #L32e2b2.  v0:= temp @kind object;
  #L32e2b4.  v1:= v2.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e2b8.  call temp:= `h`(v1) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e2be.  v1:= temp @kind object;
  #L32e2c0.  call `g`(v1, v2) @signature `Lokhttp3/p;.g:(Lokhttp3/d0;)V` @kind virtual;
  #L32e2c6.  return v0 @kind object;
  #L32e2c8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e2ca.  v1:= v2.`okhttp3.d0.g` @type ^`okhttp3.b0` @kind object;
  #L32e2ce.  call temp:= `h`(v1) @signature `Lokhttp3/b0;.h:()Lokhttp3/p;` @kind virtual;
  #L32e2d4.  v1:= temp @kind object;
  #L32e2d6.  call `g`(v1, v2) @signature `Lokhttp3/p;.g:(Lokhttp3/d0;)V` @kind virtual;
  #L32e2dc.  throw v0;
  #L32e2de.  v0:= new `java.lang.IllegalStateException`;
  #L32e2e2.  v1:= "Already Executed" @kind object;
  #L32e2e6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32e2ec.  throw v0;
  #L32e2ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32e2f0.  @monitorexit v2
  #L32e2f2.  throw v0;
  catch `java.lang.Throwable` @[L32e276..L32e286] goto L32e2ee;
  catch `java.lang.Throwable` @[L32e29a..L32e2b4] goto L32e2c8;
  catch `java.lang.Throwable` @[L32e2de..L32e2f2] goto L32e2ee;
}
procedure `java.lang.String` `f`(`okhttp3.d0` v1 @kind this) @signature `Lokhttp3/d0;.f:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;

  #L32e170.  v0:= v1.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32e174.  call temp:= `h`(v0) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L32e17a.  v0:= temp @kind object;
  #L32e17c.  call temp:= `B`(v0) @signature `Lokhttp3/x;.B:()Ljava/lang/String;` @kind virtual;
  #L32e182.  v0:= temp @kind object;
  #L32e184.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`okhttp3.d0` v2 @kind this) @signature `Lokhttp3/d0;.g:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L32e198.  v0:= new `java.lang.StringBuilder`;
  #L32e19c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32e1a2.  call temp:= `d`(v2) @signature `Lokhttp3/d0;.d:()Z` @kind virtual;
  #L32e1a8.  v1:= temp;
  #L32e1aa.  if v1 == 0 then goto L32e1b4;
  #L32e1ae.  v1:= "canceled " @kind object;
  #L32e1b2.  goto L32e1b8;
  #L32e1b4.  v1:= "" @kind object;
  #L32e1b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e1be.  v1:= v2.`okhttp3.d0.j` @type ^`boolean` @kind boolean;
  #L32e1c2.  if v1 == 0 then goto L32e1cc;
  #L32e1c6.  v1:= "web socket" @kind object;
  #L32e1ca.  goto L32e1d0;
  #L32e1cc.  v1:= "call" @kind object;
  #L32e1d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e1d6.  v1:= " to " @kind object;
  #L32e1da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e1e0.  call temp:= `f`(v2) @signature `Lokhttp3/d0;.f:()Ljava/lang/String;` @kind virtual;
  #L32e1e6.  v1:= temp @kind object;
  #L32e1e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32e1ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32e1f4.  v0:= temp @kind object;
  #L32e1f6.  return v0 @kind object;
}
procedure `okhttp3.e0` `k`(`okhttp3.d0` v1 @kind this) @signature `Lokhttp3/d0;.k:()Lokhttp3/e0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e25c.  v0:= v1.`okhttp3.d0.i` @type ^`okhttp3.e0` @kind object;
  #L32e260.  return v0 @kind object;
}
