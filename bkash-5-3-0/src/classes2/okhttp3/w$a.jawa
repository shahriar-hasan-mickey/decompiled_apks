record `okhttp3.w$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `okhttp3.w$a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.w$a` v2 @kind this) @signature `Lokhttp3/w$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32aa30.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32aa36.  v0:= new `java.util.ArrayList`;
  #L32aa3a.  v1:= 20I;
  #L32aa3e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L32aa44.  v2.`okhttp3.w$a.a` @type ^`java.util.List` := v0 @kind object;
  #L32aa48.  return @kind void;
}
procedure `okhttp3.w$a` `a`(`okhttp3.w$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/w$a;.a:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;

  #L32a8bc.  call `a`(v1) @signature `Lokhttp3/w;.a:(Ljava/lang/String;)V` @kind static;
  #L32a8c2.  call `b`(v2, v1) @signature `Lokhttp3/w;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L32a8c8.  call temp:= `c`(v0, v1, v2) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32a8ce.  v1:= temp @kind object;
  #L32a8d0.  return v1 @kind object;
}
procedure `okhttp3.w$a` `b`(`okhttp3.w$a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a8e4.  v0:= ":" @kind object;
  #L32a8e8.  v1:= 1I;
  #L32a8ea.  call temp:= `indexOf`(v5, v0, v1) @signature `Ljava/lang/String;.indexOf:(Ljava/lang/String;I)I` @kind virtual;
  #L32a8f0.  v2:= temp;
  #L32a8f2.  v3:= -1I;
  #L32a8f4.  if v2 == v3 then goto L32a916;
  #L32a8f8.  v0:= 0I;
  #L32a8fa.  call temp:= `substring`(v5, v0, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L32a900.  v0:= temp @kind object;
  #L32a902.  v2:= v2 + v1 @kind int;
  #L32a904.  call temp:= `substring`(v5, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L32a90a.  v5:= temp @kind object;
  #L32a90c.  call temp:= `c`(v4, v0, v5) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32a912.  v5:= temp @kind object;
  #L32a914.  return v5 @kind object;
  #L32a916.  call temp:= `startsWith`(v5, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L32a91c.  v0:= temp;
  #L32a91e.  v2:= "" @kind object;
  #L32a922.  if v0 == 0 then goto L32a938;
  #L32a926.  call temp:= `substring`(v5, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L32a92c.  v5:= temp @kind object;
  #L32a92e.  call temp:= `c`(v4, v2, v5) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32a934.  v5:= temp @kind object;
  #L32a936.  return v5 @kind object;
  #L32a938.  call temp:= `c`(v4, v2, v5) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32a93e.  v5:= temp @kind object;
  #L32a940.  return v5 @kind object;
}
procedure `okhttp3.w$a` `c`(`okhttp3.w$a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag  {
    temp;
    v0;

  #L32a954.  v0:= v1.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a958.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a95e.  v2:= v1.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a962.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L32a968.  v3:= temp @kind object;
  #L32a96a.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32a970.  return v1 @kind object;
}
procedure `okhttp3.w$a` `d`(`okhttp3.w$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/w$a;.d:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;

  #L32a984.  call `a`(v1) @signature `Lokhttp3/w;.a:(Ljava/lang/String;)V` @kind static;
  #L32a98a.  call temp:= `c`(v0, v1, v2) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32a990.  v1:= temp @kind object;
  #L32a992.  return v1 @kind object;
}
procedure `okhttp3.w` `e`(`okhttp3.w$a` v1 @kind this) @signature `Lokhttp3/w$a;.e:()Lokhttp3/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a8a0.  v0:= new `okhttp3.w`;
  #L32a8a4.  call `<init>`(v0, v1) @signature `Lokhttp3/w;.<init>:(Lokhttp3/w$a;)V` @kind direct;
  #L32a8aa.  return v0 @kind object;
}
procedure `okhttp3.w$a` `f`(`okhttp3.w$a` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/w$a;.f:(Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a9a4.  v0:= 0I;
  #L32a9a6.  v1:= v2.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a9aa.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32a9b0.  v1:= temp;
  #L32a9b2.  if v0 >= v1 then goto L32a9f0;
  #L32a9b6.  v1:= v2.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a9ba.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32a9c0.  v1:= temp @kind object;
  #L32a9c2.  v1:= (`java.lang.String`) v1 @kind object;
  #L32a9c6.  call temp:= `equalsIgnoreCase`(v3, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L32a9cc.  v1:= temp;
  #L32a9ce.  if v1 == 0 then goto L32a9ea;
  #L32a9d2.  v1:= v2.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a9d6.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L32a9dc.  v1:= v2.`okhttp3.w$a.a` @type ^`java.util.List` @kind object;
  #L32a9e0.  call temp:= `remove`(v1, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L32a9e6.  v0:= v0 + -2;
  #L32a9ea.  v0:= v0 + 2;
  #L32a9ee.  goto L32a9a6;
  #L32a9f0.  return v2 @kind object;
}
procedure `okhttp3.w$a` `g`(`okhttp3.w$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/w$a;.g:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @AccessFlag PUBLIC {
    temp;

  #L32aa04.  call `a`(v1) @signature `Lokhttp3/w;.a:(Ljava/lang/String;)V` @kind static;
  #L32aa0a.  call `b`(v2, v1) @signature `Lokhttp3/w;.b:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L32aa10.  call temp:= `f`(v0, v1) @signature `Lokhttp3/w$a;.f:(Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32aa16.  call temp:= `c`(v0, v1, v2) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32aa1c.  return v0 @kind object;
}
