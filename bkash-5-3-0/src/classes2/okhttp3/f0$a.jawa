record `okhttp3.f0$a` @kind class @AccessFlag  extends `okhttp3.f0` @kind class {
  `okhttp3.z` `okhttp3.f0$a.a` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.f0$a.b` @AccessFlag FINAL_SYNTHETIC;
  `byte`[] `okhttp3.f0$a.c` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.f0$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.f0$a` v0 @kind this, `okhttp3.z` v1 @kind object, `int` v2 , `byte`[] v3 @kind object, `int` v4 ) @signature `Lokhttp3/f0$a;.<init>:(Lokhttp3/z;I[BI)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32e970.  v0.`okhttp3.f0$a.a` @type ^`okhttp3.z` := v1 @kind object;
  #L32e974.  v0.`okhttp3.f0$a.b` @type ^`int` := v2;
  #L32e978.  v0.`okhttp3.f0$a.c` @type ^`byte`[] := v3 @kind object;
  #L32e97c.  v0.`okhttp3.f0$a.d` @type ^`int` := v4;
  #L32e980.  call `<init>`(v0) @signature `Lokhttp3/f0;.<init>:()V` @kind direct;
  #L32e986.  return @kind void;
}
procedure `long` `a`(`okhttp3.f0$a` v2 @kind this) @signature `Lokhttp3/f0$a;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32e940.  v0:= v2.`okhttp3.f0$a.b` @type ^`int`;
  #L32e944.  v0:= (`long`) v0 @kind i2l;
  #L32e946.  return v0 @kind wide;
}
procedure `okhttp3.z` `b`(`okhttp3.f0$a` v1 @kind this) @signature `Lokhttp3/f0$a;.b:()Lokhttp3/z;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e958.  v0:= v1.`okhttp3.f0$a.a` @type ^`okhttp3.z` @kind object;
  #L32e95c.  return v0 @kind object;
}
procedure `void` `h`(`okhttp3.f0$a` v3 @kind this, `okio.d` v4 @kind object) @signature `Lokhttp3/f0$a;.h:(Lokio/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32e998.  v0:= v3.`okhttp3.f0$a.c` @type ^`byte`[] @kind object;
  #L32e99c.  v1:= v3.`okhttp3.f0$a.d` @type ^`int`;
  #L32e9a0.  v2:= v3.`okhttp3.f0$a.b` @type ^`int`;
  #L32e9a4.  call temp:= `b0`(v4, v0, v1, v2) @signature `Lokio/d;.b0:([BII)Lokio/d;` @kind interface;
  #L32e9aa.  return @kind void;
}
