record `okhttp3.internal.platform.Jdk8WithJettyBootPlatform` @kind class @AccessFlag  extends `okhttp3.internal.platform.e` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L333e20.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @kind direct;
  #L333e26.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L333e2a.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L333e2e.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L333e32.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` := v4 @kind object;
  #L333e36.  v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` := v5 @kind object;
  #L333e3a.  return @kind void;
}
procedure `okhttp3.internal.platform.e` `u`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.u:()Lokhttp3/internal/platform/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L333d04.  v0:= 0I;
  #L333d06.  v1:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L333d0a.  v2:= "org.eclipse.jetty.alpn.ALPN" @kind object;
  #L333d0e.  v3:= 1I;
  #L333d10.  call temp:= `forName`(v2, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L333d16.  v2:= temp @kind object;
  #L333d18.  v4:= new `java.lang.StringBuilder`;
  #L333d1c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333d22.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d28.  v5:= "$Provider" @kind object;
  #L333d2c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d32.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333d38.  v4:= temp @kind object;
  #L333d3a.  call temp:= `forName`(v4, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L333d40.  v4:= temp @kind object;
  #L333d42.  v5:= new `java.lang.StringBuilder`;
  #L333d46.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333d4c.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d52.  v6:= "$ClientProvider" @kind object;
  #L333d56.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d5c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333d62.  v5:= temp @kind object;
  #L333d64.  call temp:= `forName`(v5, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L333d6a.  v10:= temp @kind object;
  #L333d6c.  v5:= new `java.lang.StringBuilder`;
  #L333d70.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L333d76.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d7c.  v1:= "$ServerProvider" @kind object;
  #L333d80.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333d86.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333d8c.  v1:= temp @kind object;
  #L333d8e.  call temp:= `forName`(v1, v3, v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L333d94.  v11:= temp @kind object;
  #L333d96.  v1:= "put" @kind object;
  #L333d9a.  v5:= 2I;
  #L333d9c.  v5:= new `java.lang.Class`[v5];
  #L333da0.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L333da4.  v7:= 0I;
  #L333da6.  v5[v7]:= v6 @kind object;
  #L333daa.  v5[v3]:= v4 @kind object;
  #L333dae.  call temp:= `getMethod`(v2, v1, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333db4.  v1:= temp @kind object;
  #L333db6.  v4:= "get" @kind object;
  #L333dba.  v5:= new `java.lang.Class`[v3];
  #L333dbe.  v6:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L333dc2.  v5[v7]:= v6 @kind object;
  #L333dc6.  call temp:= `getMethod`(v2, v4, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333dcc.  v8:= temp @kind object;
  #L333dce.  v4:= "remove" @kind object;
  #L333dd2.  v3:= new `java.lang.Class`[v3];
  #L333dd6.  v5:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L333dda.  v3[v7]:= v5 @kind object;
  #L333dde.  call temp:= `getMethod`(v2, v4, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333de4.  v9:= temp @kind object;
  #L333de6.  v2:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform`;
  #L333dea.  v6:= v2 @kind object;
  #L333dec.  v7:= v1 @kind object;
  #L333dee.  call `<init>`(v6, v7, v8, v9, v10, v11) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Class;)V` @kind direct;
  #L333df4.  return v2 @kind object;
  #L333df6.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L333d06..L333d0a] goto L333df6;
  catch `java.lang.NoSuchMethodException` @[L333d06..L333d0a] goto L333df6;
  catch `java.lang.ClassNotFoundException` @[L333d10..L333df4] goto L333df6;
  catch `java.lang.NoSuchMethodException` @[L333d10..L333df4] goto L333df6;
}
procedure `void` `a`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333e4c.  v0:= v4.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.e` @type ^`java.lang.reflect.Method` @kind object;
  #L333e50.  v1:= 0I;
  #L333e52.  v2:= 1I;
  #L333e54.  v2:= new `java.lang.Object`[v2];
  #L333e58.  v3:= 0I;
  #L333e5a.  v2[v3]:= v5 @kind object;
  #L333e5e.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333e64.  return @kind void;
  #L333e66.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L333e68.  goto L333e6c;
  #L333e6a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333e6c.  v0:= new `java.lang.AssertionError`;
  #L333e70.  v1:= "failed to remove ALPN" @kind object;
  #L333e74.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333e7a.  throw v0;
  catch `java.lang.IllegalAccessException` @[L333e4c..L333e64] goto L333e6a;
  catch `java.lang.reflect.InvocationTargetException` @[L333e4c..L333e64] goto L333e66;
}
procedure `void` `g`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L333e9c.  call temp:= `b`(v8) @signature `Lokhttp3/internal/platform/e;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L333ea2.  v7:= temp @kind object;
  #L333ea4.  v8:= constclass @type ^`okhttp3.internal.platform.e` @kind object;
  #L333ea8.  call temp:= `getClassLoader`(v8) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L333eae.  v8:= temp @kind object;
  #L333eb0.  v0:= 2I;
  #L333eb2.  v1:= new `java.lang.Class`[v0];
  #L333eb6.  v2:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.f` @type ^`java.lang.Class` @kind object;
  #L333eba.  v3:= 0I;
  #L333ebc.  v1[v3]:= v2 @kind object;
  #L333ec0.  v2:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.g` @type ^`java.lang.Class` @kind object;
  #L333ec4.  v4:= 1I;
  #L333ec6.  v1[v4]:= v2 @kind object;
  #L333eca.  v2:= new `okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider`;
  #L333ece.  call `<init>`(v2, v7) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform$AlpnProvider;.<init>:(Ljava/util/List;)V` @kind direct;
  #L333ed4.  call temp:= `newProxyInstance`(v8, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L333eda.  v7:= temp @kind object;
  #L333edc.  v8:= v5.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.c` @type ^`java.lang.reflect.Method` @kind object;
  #L333ee0.  v1:= 0I;
  #L333ee2.  v0:= new `java.lang.Object`[v0];
  #L333ee6.  v0[v3]:= v6 @kind object;
  #L333eea.  v0[v4]:= v7 @kind object;
  #L333eee.  call temp:= `invoke`(v8, v1, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333ef4.  return @kind void;
  #L333ef6.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333ef8.  goto L333efc;
  #L333efa.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L333efc.  v7:= new `java.lang.AssertionError`;
  #L333f00.  v8:= "failed to set ALPN" @kind object;
  #L333f04.  call `<init>`(v7, v8, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333f0a.  throw v7;
  catch `java.lang.reflect.InvocationTargetException` @[L333ea4..L333ef4] goto L333efa;
  catch `java.lang.IllegalAccessException` @[L333ea4..L333ef4] goto L333ef6;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.Jdk8WithJettyBootPlatform` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333c74.  v0:= v3.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform.d` @type ^`java.lang.reflect.Method` @kind object;
  #L333c78.  v1:= 1I;
  #L333c7a.  v1:= new `java.lang.Object`[v1];
  #L333c7e.  v2:= 0I;
  #L333c80.  v1[v2]:= v4 @kind object;
  #L333c84.  v4:= 0I;
  #L333c86.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333c8c.  v0:= temp @kind object;
  #L333c8e.  call temp:= `getInvocationHandler`(v0) @signature `Ljava/lang/reflect/Proxy;.getInvocationHandler:(Ljava/lang/Object;)Ljava/lang/reflect/InvocationHandler;` @kind static;
  #L333c94.  v0:= temp @kind object;
  #L333c96.  v0:= (`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider`) v0 @kind object;
  #L333c9a.  v1:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.h` @type ^`boolean` @kind boolean;
  #L333c9e.  if v1 != 0 then goto L333cc0;
  #L333ca2.  v2:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.i` @type ^`java.lang.String` @kind object;
  #L333ca6.  if v2 != 0 then goto L333cc0;
  #L333caa.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L333cb0.  v0:= temp @kind object;
  #L333cb2.  v1:= 4I;
  #L333cb4.  v2:= "ALPN callback dropped: HTTP/2 is disabled. Is alpn-boot on the boot class path?" @kind object;
  #L333cb8.  call `s`(v0, v1, v2, v4) @signature `Lokhttp3/internal/platform/e;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L333cbe.  return v4 @kind object;
  #L333cc0.  if v1 == 0 then goto L333cc6;
  #L333cc4.  goto L333cca;
  #L333cc6.  v4:= v0.`okhttp3.internal.platform.Jdk8WithJettyBootPlatform$AlpnProvider.i` @type ^`java.lang.String` @kind object;
  #L333cca.  return v4 @kind object;
  #L333ccc.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333cce.  goto L333cd2;
  #L333cd0.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L333cd2.  v0:= new `java.lang.AssertionError`;
  #L333cd6.  v1:= "failed to get ALPN selected protocol" @kind object;
  #L333cda.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333ce0.  throw v0;
  catch `java.lang.reflect.InvocationTargetException` @[L333c74..L333cca] goto L333cd0;
  catch `java.lang.IllegalAccessException` @[L333c74..L333cca] goto L333ccc;
}
