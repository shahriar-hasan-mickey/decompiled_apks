record `okhttp3.internal.platform.a` @kind class @AccessFlag  extends `okhttp3.internal.platform.b` @kind class {
}
procedure `void` `<init>`(`okhttp3.internal.platform.a` v7 @kind this, `java.lang.Class` v8 @kind object) @signature `Lokhttp3/internal/platform/a;.<init>:(Ljava/lang/Class;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L332f30.  v2:= 0I;
  #L332f32.  v3:= 0I;
  #L332f34.  v4:= 0I;
  #L332f36.  v5:= 0I;
  #L332f38.  v6:= 0I;
  #L332f3a.  v0:= v7 @kind object;
  #L332f3c.  v1:= v8 @kind object;
  #L332f3e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/platform/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L332f44.  return @kind void;
}
procedure `okhttp3.internal.platform.e` `w`() @signature `Lokhttp3/internal/platform/a;.w:()Lokhttp3/internal/platform/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L332ed4.  call temp:= `p`() @signature `Lokhttp3/internal/platform/e;.p:()Z` @kind static;
  #L332eda.  v0:= temp;
  #L332edc.  v1:= 0I;
  #L332ede.  if v0 != 0 then goto L332ee4;
  #L332ee2.  return v1 @kind object;
  #L332ee4.  call temp:= `x`() @signature `Lokhttp3/internal/platform/b;.x:()I` @kind static;
  #L332eea.  v0:= temp;
  #L332eec.  v2:= 29I;
  #L332ef0.  if v0 < v2 then goto L332f0c;
  #L332ef4.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L332ef8.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L332efe.  v0:= temp @kind object;
  #L332f00.  v2:= new `okhttp3.internal.platform.a`;
  #L332f04.  call `<init>`(v2, v0) @signature `Lokhttp3/internal/platform/a;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L332f0a.  return v2 @kind object;
  #L332f0c.  return v1 @kind object;
  catch `java.lang.ReflectiveOperationException` @[L332ee4..L332f0a] goto L332f0c;
}
procedure `void` `y`(`okhttp3.internal.platform.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/a;.y:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L332fc0.  call temp:= `isSupportedSocket`(v2) @signature `Landroid/net/ssl/SSLSockets;.isSupportedSocket:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L332fc6.  v0:= temp;
  #L332fc8.  if v0 == 0 then goto L332fd4;
  #L332fcc.  v0:= 1I;
  #L332fce.  call `setUseSessionTickets`(v2, v0) @signature `Landroid/net/ssl/SSLSockets;.setUseSessionTickets:(Ljavax/net/ssl/SSLSocket;Z)V` @kind static;
  #L332fd4.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.platform.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/platform/a;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332f58.  call `y`(v1, v2) @signature `Lokhttp3/internal/platform/a;.y:(Ljavax/net/ssl/SSLSocket;)V` @kind direct;
  #L332f5e.  call temp:= `getSSLParameters`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L332f64.  v3:= temp @kind object;
  #L332f66.  call temp:= `b`(v4) @signature `Lokhttp3/internal/platform/e;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L332f6c.  v4:= temp @kind object;
  #L332f6e.  v0:= 0I;
  #L332f70.  v0:= new `java.lang.String`[v0];
  #L332f74.  call temp:= `toArray`(v4, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L332f7a.  v4:= temp @kind object;
  #L332f7c.  v4:= (`java.lang.String`[]) v4 @kind object;
  #L332f80.  call `setApplicationProtocols`(v3, v4) @signature `Ljavax/net/ssl/SSLParameters;.setApplicationProtocols:([Ljava/lang/String;)V` @kind virtual;
  #L332f86.  call `setSSLParameters`(v2, v3) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L332f8c.  return @kind void;
  #L332f8e.  v2:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L332f90.  v3:= new `java.io.IOException`;
  #L332f94.  v4:= "Android internal error" @kind object;
  #L332f98.  call `<init>`(v3, v4, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L332f9e.  throw v3;
  catch `java.lang.IllegalArgumentException` @[L332f58..L332f8c] goto L332f8e;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.a` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/a;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332ea4.  call temp:= `getApplicationProtocol`(v2) @signature `Ljavax/net/ssl/SSLSocket;.getApplicationProtocol:()Ljava/lang/String;` @kind virtual;
  #L332eaa.  v2:= temp @kind object;
  #L332eac.  if v2 == 0 then goto L332ec0;
  #L332eb0.  call temp:= `isEmpty`(v2) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L332eb6.  v0:= temp;
  #L332eb8.  if v0 == 0 then goto L332ebe;
  #L332ebc.  goto L332ec0;
  #L332ebe.  return v2 @kind object;
  #L332ec0.  v2:= 0I;
  #L332ec2.  return v2 @kind object;
}
