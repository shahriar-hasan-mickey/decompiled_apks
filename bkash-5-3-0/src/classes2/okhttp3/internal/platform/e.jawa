record `okhttp3.internal.platform.e` @kind class @AccessFlag PUBLIC {
}
global `okhttp3.internal.platform.e` `@@okhttp3.internal.platform.e.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.platform.e.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/platform/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3343d8.  call temp:= `k`() @signature `Lokhttp3/internal/platform/e;.k:()Lokhttp3/internal/platform/e;` @kind static;
  #L3343de.  v0:= temp @kind object;
  #L3343e0.  `@@okhttp3.internal.platform.e.a` @type ^`okhttp3.internal.platform.e` := v0 @kind object;
  #L3343e4.  v0:= constclass @type ^`okhttp3.b0` @kind object;
  #L3343e8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3343ee.  v0:= temp @kind object;
  #L3343f0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L3343f6.  v0:= temp @kind object;
  #L3343f8.  `@@okhttp3.internal.platform.e.b` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L3343fc.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.platform.e` v0 @kind this) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L334410.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L334416.  return @kind void;
}
procedure `java.util.List` `b`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/e;.b:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334224.  v0:= new `java.util.ArrayList`;
  #L334228.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33422e.  v1:= temp;
  #L334230.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L334236.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33423c.  v1:= temp;
  #L33423e.  v2:= 0I;
  #L334240.  if v2 >= v1 then goto L33426e;
  #L334244.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33424a.  v3:= temp @kind object;
  #L33424c.  v3:= (`okhttp3.c0`) v3 @kind object;
  #L334250.  v4:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L334254.  if v3 != v4 then goto L33425a;
  #L334258.  goto L334268;
  #L33425a.  call temp:= `toString`(v3) @signature `Lokhttp3/c0;.toString:()Ljava/lang/String;` @kind virtual;
  #L334260.  v3:= temp @kind object;
  #L334262.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L334268.  v2:= v2 + 1;
  #L33426c.  goto L334240;
  #L33426e.  return v0 @kind object;
}
procedure `byte`[] `e`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/platform/e;.e:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L334144.  v0:= new `okio.c`;
  #L334148.  call `<init>`(v0) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L33414e.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334154.  v1:= temp;
  #L334156.  v2:= 0I;
  #L334158.  if v2 >= v1 then goto L33419c;
  #L33415c.  call temp:= `get`(v5, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L334162.  v3:= temp @kind object;
  #L334164.  v3:= (`okhttp3.c0`) v3 @kind object;
  #L334168.  v4:= `@@okhttp3.c0.HTTP_1_0` @type ^`okhttp3.c0` @kind object;
  #L33416c.  if v3 != v4 then goto L334172;
  #L334170.  goto L334196;
  #L334172.  call temp:= `toString`(v3) @signature `Lokhttp3/c0;.toString:()Ljava/lang/String;` @kind virtual;
  #L334178.  v4:= temp @kind object;
  #L33417a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L334180.  v4:= temp;
  #L334182.  call temp:= `U0`(v0, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L334188.  call temp:= `toString`(v3) @signature `Lokhttp3/c0;.toString:()Ljava/lang/String;` @kind virtual;
  #L33418e.  v3:= temp @kind object;
  #L334190.  call temp:= `b1`(v0, v3) @signature `Lokio/c;.b1:(Ljava/lang/String;)Lokio/c;` @kind virtual;
  #L334196.  v2:= v2 + 1;
  #L33419a.  goto L334158;
  #L33419c.  call temp:= `E`(v0) @signature `Lokio/c;.E:()[B` @kind virtual;
  #L3341a2.  v5:= temp @kind object;
  #L3341a4.  return v5 @kind object;
}
procedure `okhttp3.internal.platform.e` `i`() @signature `Lokhttp3/internal/platform/e;.i:()Lokhttp3/internal/platform/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L334308.  call temp:= `w`() @signature `Lokhttp3/internal/platform/a;.w:()Lokhttp3/internal/platform/e;` @kind static;
  #L33430e.  v0:= temp @kind object;
  #L334310.  if v0 == 0 then goto L334316;
  #L334314.  return v0 @kind object;
  #L334316.  call temp:= `w`() @signature `Lokhttp3/internal/platform/b;.w:()Lokhttp3/internal/platform/e;` @kind static;
  #L33431c.  v0:= temp @kind object;
  #L33431e.  v1:= "No platform found on Android" @kind object;
  #L334322.  call temp:= `requireNonNull`(v0, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L334328.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.e` `j`() @signature `Lokhttp3/internal/platform/e;.j:()Lokhttp3/internal/platform/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L33433c.  call temp:= `r`() @signature `Lokhttp3/internal/platform/e;.r:()Z` @kind static;
  #L334342.  v0:= temp;
  #L334344.  if v0 == 0 then goto L334356;
  #L334348.  call temp:= `u`() @signature `Lokhttp3/internal/platform/c;.u:()Lokhttp3/internal/platform/c;` @kind static;
  #L33434e.  v0:= temp @kind object;
  #L334350.  if v0 == 0 then goto L334356;
  #L334354.  return v0 @kind object;
  #L334356.  call temp:= `u`() @signature `Lokhttp3/internal/platform/d;.u:()Lokhttp3/internal/platform/d;` @kind static;
  #L33435c.  v0:= temp @kind object;
  #L33435e.  if v0 == 0 then goto L334364;
  #L334362.  return v0 @kind object;
  #L334364.  call temp:= `u`() @signature `Lokhttp3/internal/platform/Jdk8WithJettyBootPlatform;.u:()Lokhttp3/internal/platform/e;` @kind static;
  #L33436a.  v0:= temp @kind object;
  #L33436c.  if v0 == 0 then goto L334372;
  #L334370.  return v0 @kind object;
  #L334372.  v0:= new `okhttp3.internal.platform.e`;
  #L334376.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @kind direct;
  #L33437c.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.e` `k`() @signature `Lokhttp3/internal/platform/e;.k:()Lokhttp3/internal/platform/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L334390.  call temp:= `p`() @signature `Lokhttp3/internal/platform/e;.p:()Z` @kind static;
  #L334396.  v0:= temp;
  #L334398.  if v0 == 0 then goto L3343a6;
  #L33439c.  call temp:= `i`() @signature `Lokhttp3/internal/platform/e;.i:()Lokhttp3/internal/platform/e;` @kind static;
  #L3343a2.  v0:= temp @kind object;
  #L3343a4.  return v0 @kind object;
  #L3343a6.  call temp:= `j`() @signature `Lokhttp3/internal/platform/e;.j:()Lokhttp3/internal/platform/e;` @kind static;
  #L3343ac.  v0:= temp @kind object;
  #L3343ae.  return v0 @kind object;
}
procedure `okhttp3.internal.platform.e` `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3343c0.  v0:= `@@okhttp3.internal.platform.e.a` @type ^`okhttp3.internal.platform.e` @kind object;
  #L3343c4.  return v0 @kind object;
}
procedure `boolean` `p`() @signature `Lokhttp3/internal/platform/e;.p:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3340ac.  v0:= "java.vm.name" @kind object;
  #L3340b0.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3340b6.  v0:= temp @kind object;
  #L3340b8.  v1:= "Dalvik" @kind object;
  #L3340bc.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3340c2.  v0:= temp;
  #L3340c4.  return v0;
}
procedure `boolean` `r`() @signature `Lokhttp3/internal/platform/e;.r:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3340ec.  v0:= "okhttp.platform" @kind object;
  #L3340f0.  v1:= 0I;
  #L3340f2.  call temp:= `r`(v0, v1) @signature `Lee/e;.r:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L3340f8.  v0:= temp @kind object;
  #L3340fa.  v1:= "conscrypt" @kind object;
  #L3340fe.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L334104.  v0:= temp;
  #L334106.  if v0 == 0 then goto L33410e;
  #L33410a.  v0:= 1I;
  #L33410c.  return v0;
  #L33410e.  call temp:= `getProviders`() @signature `Ljava/security/Security;.getProviders:()[Ljava/security/Provider;` @kind static;
  #L334114.  v0:= temp @kind object;
  #L334116.  v1:= 0I;
  #L334118.  v0:= v0[v1] @kind object;
  #L33411c.  call temp:= `getName`(v0) @signature `Ljava/security/Provider;.getName:()Ljava/lang/String;` @kind virtual;
  #L334122.  v0:= temp @kind object;
  #L334124.  v1:= "Conscrypt" @kind object;
  #L334128.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33412e.  v0:= temp;
  #L334130.  return v0;
}
procedure `void` `a`(`okhttp3.internal.platform.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/e;.a:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L334428.  return @kind void;
}
procedure `ke.c` `c`(`okhttp3.internal.platform.e` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/e;.c:(Ljavax/net/ssl/X509TrustManager;)Lke/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3342c0.  v0:= new `ke.a`;
  #L3342c4.  call temp:= `d`(v1, v2) @signature `Lokhttp3/internal/platform/e;.d:(Ljavax/net/ssl/X509TrustManager;)Lke/e;` @kind virtual;
  #L3342ca.  v2:= temp @kind object;
  #L3342cc.  call `<init>`(v0, v2) @signature `Lke/a;.<init>:(Lke/e;)V` @kind direct;
  #L3342d2.  return v0 @kind object;
}
procedure `ke.e` `d`(`okhttp3.internal.platform.e` v1 @kind this, `javax.net.ssl.X509TrustManager` v2 @kind object) @signature `Lokhttp3/internal/platform/e;.d:(Ljavax/net/ssl/X509TrustManager;)Lke/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3342e4.  v0:= new `ke.b`;
  #L3342e8.  call temp:= `getAcceptedIssuers`(v2) @signature `Ljavax/net/ssl/X509TrustManager;.getAcceptedIssuers:()[Ljava/security/cert/X509Certificate;` @kind interface;
  #L3342ee.  v2:= temp @kind object;
  #L3342f0.  call `<init>`(v0, v2) @signature `Lke/b;.<init>:([Ljava/security/cert/X509Certificate;)V` @kind direct;
  #L3342f6.  return v0 @kind object;
}
procedure `void` `f`(`okhttp3.internal.platform.e` v0 @kind this, `javax.net.ssl.SSLSocketFactory` v1 @kind object) @signature `Lokhttp3/internal/platform/e;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @AccessFlag PUBLIC {
    temp;

  #L33443c.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.platform.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object, `java.lang.String` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/platform/e;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L334450.  return @kind void;
}
procedure `void` `h`(`okhttp3.internal.platform.e` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/e;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L334464.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L33446a.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `m`(`okhttp3.internal.platform.e` v3 @kind this) @signature `Lokhttp3/internal/platform/e;.m:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L334280.  v0:= "TLS" @kind object;
  #L334284.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L33428a.  v0:= temp @kind object;
  #L33428c.  return v0 @kind object;
  #L33428e.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L334290.  v1:= new `java.lang.IllegalStateException`;
  #L334294.  v2:= "No TLS provider" @kind object;
  #L334298.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33429e.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L334280..L33428c] goto L33428e;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.e` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object) @signature `Lokhttp3/internal/platform/e;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3341ec.  v1:= 0I;
  #L3341ee.  return v1 @kind object;
}
procedure `java.lang.Object` `o`(`okhttp3.internal.platform.e` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lokhttp3/internal/platform/e;.o:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3341b8.  v0:= `@@okhttp3.internal.platform.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L3341bc.  v1:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L3341c0.  call temp:= `isLoggable`(v0, v1) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L3341c6.  v0:= temp;
  #L3341c8.  if v0 == 0 then goto L3341d8;
  #L3341cc.  v0:= new `java.lang.Throwable`;
  #L3341d0.  call `<init>`(v0, v3) @signature `Ljava/lang/Throwable;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3341d6.  return v0 @kind object;
  #L3341d8.  v3:= 0I;
  #L3341da.  return v3 @kind object;
}
procedure `boolean` `q`(`okhttp3.internal.platform.e` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/platform/e;.q:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;

  #L3340d8.  v1:= 1I;
  #L3340da.  return v1;
}
procedure `void` `s`(`okhttp3.internal.platform.e` v1 @kind this, `int` v2 , `java.lang.String` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lokhttp3/internal/platform/e;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33447c.  v0:= 5I;
  #L33447e.  if v2 != v0 then goto L334488;
  #L334482.  v2:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L334486.  goto L33448c;
  #L334488.  v2:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L33448c.  v0:= `@@okhttp3.internal.platform.e.b` @type ^`java.util.logging.Logger` @kind object;
  #L334490.  call `log`(v0, v2, v3, v4) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L334496.  return @kind void;
}
procedure `void` `t`(`okhttp3.internal.platform.e` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/e;.t:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3344a8.  if v3 != 0 then goto L3344ce;
  #L3344ac.  v0:= new `java.lang.StringBuilder`;
  #L3344b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3344b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3344bc.  v2:= " To see where this was allocated, set the OkHttpClient logger level to FINE: Logger.getLogger(OkHttpClient.class.getName()).setLevel(Level.FINE);" @kind object;
  #L3344c0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3344c6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3344cc.  v2:= temp @kind object;
  #L3344ce.  v0:= 5I;
  #L3344d0.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L3344d4.  call `s`(v1, v0, v2, v3) @signature `Lokhttp3/internal/platform/e;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L3344da.  return @kind void;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.platform.e` v1 @kind this) @signature `Lokhttp3/internal/platform/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L334200.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L334206.  v0:= temp @kind object;
  #L334208.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L33420e.  v0:= temp @kind object;
  #L334210.  return v0 @kind object;
}
