record `okhttp3.internal.platform.b` @kind class @AccessFlag  extends `okhttp3.internal.platform.e` @kind class {
  `java.lang.Class` `okhttp3.internal.platform.b.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.b.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.b.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.b.f` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.b.g` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.platform.b$b` `okhttp3.internal.platform.b.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.reflect.Method` v3 @kind object, `java.lang.reflect.Method` v4 @kind object, `java.lang.reflect.Method` v5 @kind object, `java.lang.reflect.Method` v6 @kind object) @signature `Lokhttp3/internal/platform/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33377c.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @kind direct;
  #L333782.  call temp:= `b`() @signature `Lokhttp3/internal/platform/b$b;.b:()Lokhttp3/internal/platform/b$b;` @kind static;
  #L333788.  v1:= temp @kind object;
  #L33378a.  v0.`okhttp3.internal.platform.b.h` @type ^`okhttp3.internal.platform.b$b` := v1 @kind object;
  #L33378e.  v0.`okhttp3.internal.platform.b.c` @type ^`java.lang.Class` := v2 @kind object;
  #L333792.  v0.`okhttp3.internal.platform.b.d` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L333796.  v0.`okhttp3.internal.platform.b.e` @type ^`java.lang.reflect.Method` := v4 @kind object;
  #L33379a.  v0.`okhttp3.internal.platform.b.f` @type ^`java.lang.reflect.Method` := v5 @kind object;
  #L33379e.  v0.`okhttp3.internal.platform.b.g` @type ^`java.lang.reflect.Method` := v6 @kind object;
  #L3337a2.  return @kind void;
}
procedure `boolean` `u`(`okhttp3.internal.platform.b` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.Class` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lokhttp3/internal/platform/b;.u:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L333300.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L333304.  v1:= 0I;
  #L333306.  v2:= new `java.lang.Class`[v1];
  #L33330a.  call temp:= `getMethod`(v5, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333310.  v5:= temp @kind object;
  #L333312.  v0:= new `java.lang.Object`[v1];
  #L333316.  call temp:= `invoke`(v5, v6, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33331c.  v5:= temp @kind object;
  #L33331e.  v5:= (`java.lang.Boolean`) v5 @kind object;
  #L333322.  call temp:= `booleanValue`(v5) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L333328.  v4:= temp;
  #L33332a.  return v4;
  #L33332c.  call temp:= `q`(v3, v4) @signature `Lokhttp3/internal/platform/e;.q:(Ljava/lang/String;)Z` @kind super;
  #L333332.  v4:= temp;
  #L333334.  return v4;
  catch `java.lang.NoSuchMethodException` @[L333300..L33332a] goto L33332c;
}
procedure `boolean` `v`(`okhttp3.internal.platform.b` v5 @kind this, `java.lang.String` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lokhttp3/internal/platform/b;.v:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L333358.  v0:= "isCleartextTrafficPermitted" @kind object;
  #L33335c.  v1:= 1I;
  #L33335e.  v2:= new `java.lang.Class`[v1];
  #L333362.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L333366.  v4:= 0I;
  #L333368.  v2[v4]:= v3 @kind object;
  #L33336c.  call temp:= `getMethod`(v7, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333372.  v0:= temp @kind object;
  #L333374.  v1:= new `java.lang.Object`[v1];
  #L333378.  v1[v4]:= v6 @kind object;
  #L33337c.  call temp:= `invoke`(v0, v8, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333382.  v0:= temp @kind object;
  #L333384.  v0:= (`java.lang.Boolean`) v0 @kind object;
  #L333388.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L33338e.  v6:= temp;
  #L333390.  return v6;
  #L333392.  call temp:= `u`(v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/b;.u:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L333398.  v6:= temp;
  #L33339a.  return v6;
  catch `java.lang.NoSuchMethodException` @[L333358..L333390] goto L333392;
}
procedure `okhttp3.internal.platform.e` `w`() @signature `Lokhttp3/internal/platform/b;.w:()Lokhttp3/internal/platform/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L33367c.  call temp:= `p`() @signature `Lokhttp3/internal/platform/e;.p:()Z` @kind static;
  #L333682.  v0:= temp;
  #L333684.  v1:= 0I;
  #L333686.  if v0 != 0 then goto L33368c;
  #L33368a.  return v1 @kind object;
  #L33368c.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L333690.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L333696.  v3:= temp @kind object;
  #L333698.  v0:= "com.android.org.conscrypt.OpenSSLSocketImpl" @kind object;
  #L33369c.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3336a2.  v4:= temp @kind object;
  #L3336a4.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3336a8.  v1:= 21I;
  #L3336ac.  if v0 < v1 then goto L33371c;
  #L3336b0.  v0:= "setUseSessionTickets" @kind object;
  #L3336b4.  v1:= 1I;
  #L3336b6.  v2:= new `java.lang.Class`[v1];
  #L3336ba.  v5:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L3336be.  v6:= 0I;
  #L3336c0.  v2[v6]:= v5 @kind object;
  #L3336c4.  call temp:= `getDeclaredMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3336ca.  v5:= temp @kind object;
  #L3336cc.  v0:= "setHostname" @kind object;
  #L3336d0.  v2:= new `java.lang.Class`[v1];
  #L3336d4.  v7:= constclass @type ^`java.lang.String` @kind object;
  #L3336d8.  v2[v6]:= v7 @kind object;
  #L3336dc.  call temp:= `getMethod`(v4, v0, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3336e2.  v0:= temp @kind object;
  #L3336e4.  v2:= "getAlpnSelectedProtocol" @kind object;
  #L3336e8.  v7:= new `java.lang.Class`[v6];
  #L3336ec.  call temp:= `getMethod`(v4, v2, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3336f2.  v7:= temp @kind object;
  #L3336f4.  v2:= "setAlpnProtocols" @kind object;
  #L3336f8.  v1:= new `java.lang.Class`[v1];
  #L3336fc.  v8:= constclass @type ^`byte`[] @kind object;
  #L333700.  v1[v6]:= v8 @kind object;
  #L333704.  call temp:= `getMethod`(v4, v2, v1) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L33370a.  v8:= temp @kind object;
  #L33370c.  v1:= new `okhttp3.internal.platform.b`;
  #L333710.  v2:= v1 @kind object;
  #L333712.  v6:= v0 @kind object;
  #L333714.  call `<init>`(v2, v3, v4, v5, v6, v7, v8) @signature `Lokhttp3/internal/platform/b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L33371a.  return v1 @kind object;
  #L33371c.  v0:= new `java.lang.IllegalStateException`;
  #L333720.  v1:= new `java.lang.StringBuilder`;
  #L333724.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33372a.  v2:= "Expected Android API level 21+ but was " @kind object;
  #L33372e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L333734.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L333738.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L33373e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L333744.  v1:= temp @kind object;
  #L333746.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33374c.  throw v0;
  #L33374e.  return v1 @kind object;
  catch `java.lang.ClassNotFoundException` @[L33368c..L3336a4] goto L33374e;
  catch `java.lang.NoSuchMethodException` @[L3336b0..L33371a] goto L33371c;
}
procedure `int` `x`() @signature `Lokhttp3/internal/platform/b;.x:()I` @AccessFlag STATIC {
    temp;
    v0;

  #L333444.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L333448.  return v0;
  #L33344a.  v0:= 0I;
  #L33344c.  return v0;
  catch `java.lang.NoClassDefFoundError` @[L333444..L333448] goto L33344a;
}
procedure `ke.c` `c`(`okhttp3.internal.platform.b` v8 @kind this, `javax.net.ssl.X509TrustManager` v9 @kind object) @signature `Lokhttp3/internal/platform/b;.c:(Ljavax/net/ssl/X509TrustManager;)Lke/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L333588.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L33358c.  v1:= "android.net.http.X509TrustManagerExtensions" @kind object;
  #L333590.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L333596.  v1:= temp @kind object;
  #L333598.  v2:= 1I;
  #L33359a.  v3:= new `java.lang.Class`[v2];
  #L33359e.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L3335a2.  v5:= 0I;
  #L3335a4.  v3[v5]:= v4 @kind object;
  #L3335a8.  call temp:= `getConstructor`(v1, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L3335ae.  v3:= temp @kind object;
  #L3335b0.  v4:= new `java.lang.Object`[v2];
  #L3335b4.  v4[v5]:= v9 @kind object;
  #L3335b8.  call temp:= `newInstance`(v3, v4) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3335be.  v3:= temp @kind object;
  #L3335c0.  v4:= "checkServerTrusted" @kind object;
  #L3335c4.  v6:= 3I;
  #L3335c6.  v6:= new `java.lang.Class`[v6];
  #L3335ca.  v7:= constclass @type ^`java.security.cert.X509Certificate`[] @kind object;
  #L3335ce.  v6[v5]:= v7 @kind object;
  #L3335d2.  v6[v2]:= v0 @kind object;
  #L3335d6.  v2:= 2I;
  #L3335d8.  v6[v2]:= v0 @kind object;
  #L3335dc.  call temp:= `getMethod`(v1, v4, v6) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3335e2.  v0:= temp @kind object;
  #L3335e4.  v1:= new `okhttp3.internal.platform.b$a`;
  #L3335e8.  call `<init>`(v1, v3, v0) @signature `Lokhttp3/internal/platform/b$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @kind direct;
  #L3335ee.  return v1 @kind object;
  #L3335f0.  call temp:= `c`(v8, v9) @signature `Lokhttp3/internal/platform/e;.c:(Ljavax/net/ssl/X509TrustManager;)Lke/c;` @kind super;
  #L3335f6.  v9:= temp @kind object;
  #L3335f8.  return v9 @kind object;
  catch `java.lang.Exception` @[L33358c..L3335ee] goto L3335f0;
}
procedure `ke.e` `d`(`okhttp3.internal.platform.b` v6 @kind this, `javax.net.ssl.X509TrustManager` v7 @kind object) @signature `Lokhttp3/internal/platform/b;.d:(Ljavax/net/ssl/X509TrustManager;)Lke/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L33361c.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L333622.  v0:= temp @kind object;
  #L333624.  v1:= "findTrustAnchorByIssuerAndSignature" @kind object;
  #L333628.  v2:= 1I;
  #L33362a.  v3:= new `java.lang.Class`[v2];
  #L33362e.  v4:= 0I;
  #L333630.  v5:= constclass @type ^`java.security.cert.X509Certificate` @kind object;
  #L333634.  v3[v4]:= v5 @kind object;
  #L333638.  call temp:= `getDeclaredMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L33363e.  v0:= temp @kind object;
  #L333640.  call `setAccessible`(v0, v2) @signature `Ljava/lang/reflect/Method;.setAccessible:(Z)V` @kind virtual;
  #L333646.  v1:= new `okhttp3.internal.platform.b$c`;
  #L33364a.  call `<init>`(v1, v7, v0) @signature `Lokhttp3/internal/platform/b$c;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @kind direct;
  #L333650.  return v1 @kind object;
  #L333652.  call temp:= `d`(v6, v7) @signature `Lokhttp3/internal/platform/e;.d:(Ljavax/net/ssl/X509TrustManager;)Lke/e;` @kind super;
  #L333658.  v7:= temp @kind object;
  #L33365a.  return v7 @kind object;
  catch `java.lang.NoSuchMethodException` @[L33361c..L333650] goto L333652;
}
procedure `void` `g`(`okhttp3.internal.platform.b` v5 @kind this, `javax.net.ssl.SSLSocket` v6 @kind object, `java.lang.String` v7 @kind object, `java.util.List` v8 @kind object) @signature `Lokhttp3/internal/platform/b;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3337b4.  v0:= v5.`okhttp3.internal.platform.b.c` @type ^`java.lang.Class` @kind object;
  #L3337b8.  call temp:= `isInstance`(v0, v6) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L3337be.  v0:= temp;
  #L3337c0.  if v0 != 0 then goto L3337c6;
  #L3337c4.  return @kind void;
  #L3337c6.  v0:= 0I;
  #L3337c8.  v1:= 1I;
  #L3337ca.  if v7 == 0 then goto L3337f6;
  #L3337ce.  v2:= v5.`okhttp3.internal.platform.b.d` @type ^`java.lang.reflect.Method` @kind object;
  #L3337d2.  v3:= new `java.lang.Object`[v1];
  #L3337d6.  v4:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3337da.  v3[v0]:= v4 @kind object;
  #L3337de.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3337e4.  v2:= v5.`okhttp3.internal.platform.b.e` @type ^`java.lang.reflect.Method` @kind object;
  #L3337e8.  v3:= new `java.lang.Object`[v1];
  #L3337ec.  v3[v0]:= v7 @kind object;
  #L3337f0.  call temp:= `invoke`(v2, v6, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3337f6.  v7:= v5.`okhttp3.internal.platform.b.g` @type ^`java.lang.reflect.Method` @kind object;
  #L3337fa.  v1:= new `java.lang.Object`[v1];
  #L3337fe.  call temp:= `e`(v8) @signature `Lokhttp3/internal/platform/e;.e:(Ljava/util/List;)[B` @kind static;
  #L333804.  v8:= temp @kind object;
  #L333806.  v1[v0]:= v8 @kind object;
  #L33380a.  call temp:= `invoke`(v7, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333810.  return @kind void;
  #L333812.  v6:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L333814.  goto L333818;
  #L333816.  v6:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333818.  v7:= new `java.lang.AssertionError`;
  #L33381c.  call `<init>`(v7, v6) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L333822.  throw v7;
  catch `java.lang.IllegalAccessException` @[L3337ce..L333810] goto L333816;
  catch `java.lang.reflect.InvocationTargetException` @[L3337ce..L333810] goto L333812;
}
procedure `void` `h`(`okhttp3.internal.platform.b` v0 @kind this, `java.net.Socket` v1 @kind object, `java.net.InetSocketAddress` v2 @kind object, `int` v3 ) @signature `Lokhttp3/internal/platform/b;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L333844.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L33384a.  return @kind void;
  #L33384c.  v1:= Exception @type ^`java.lang.ClassCastException` @kind object;
  #L33384e.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L333852.  v3:= 26I;
  #L333856.  if v2 != v3 then goto L33386a;
  #L33385a.  v2:= new `java.io.IOException`;
  #L33385e.  v3:= "Exception in connect" @kind object;
  #L333862.  call `<init>`(v2, v3, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333868.  throw v2;
  #L33386a.  throw v1;
  #L33386c.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L33386e.  call temp:= `A`(v1) @signature `Lee/e;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L333874.  v2:= temp;
  #L333876.  if v2 == 0 then goto L333886;
  #L33387a.  v2:= new `java.io.IOException`;
  #L33387e.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L333884.  throw v2;
  #L333886.  throw v1;
  catch `java.lang.AssertionError` @[L333844..L33384a] goto L33386c;
  catch `java.lang.ClassCastException` @[L333844..L33384a] goto L33384c;
}
procedure `javax.net.ssl.SSLContext` `m`(`okhttp3.internal.platform.b` v3 @kind this) @signature `Lokhttp3/internal/platform/b;.m:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333500.  v0:= 1I;
  #L333502.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L333506.  v2:= 16I;
  #L33350a.  if v1 < v2 then goto L333518;
  #L33350e.  v2:= 22I;
  #L333512.  if v1 >= v2 then goto L333518;
  #L333516.  goto L33351e;
  #L333518.  v0:= 0I;
  #L33351a.  goto L33351e;
  #L33351c.  
  #L33351e.  if v0 == 0 then goto L333530;
  #L333522.  v0:= "TLSv1.2" @kind object;
  #L333526.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L33352c.  v0:= temp @kind object;
  #L33352e.  return v0 @kind object;
  #L333530.  v0:= "TLS" @kind object;
  #L333534.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L33353a.  v0:= temp @kind object;
  #L33353c.  return v0 @kind object;
  #L33353e.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L333540.  v1:= new `java.lang.IllegalStateException`;
  #L333544.  v2:= "No TLS provider" @kind object;
  #L333548.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33354e.  throw v1;
  catch `java.lang.NoClassDefFoundError` @[L333502..L333506] goto L33351c;
  catch `java.security.NoSuchAlgorithmException` @[L333522..L33352e] goto L333530;
  catch `java.security.NoSuchAlgorithmException` @[L333530..L33353c] goto L33353e;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.b` v3 @kind this, `javax.net.ssl.SSLSocket` v4 @kind object) @signature `Lokhttp3/internal/platform/b;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L333490.  v0:= v3.`okhttp3.internal.platform.b.c` @type ^`java.lang.Class` @kind object;
  #L333494.  call temp:= `isInstance`(v0, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L33349a.  v0:= temp;
  #L33349c.  v1:= 0I;
  #L33349e.  if v0 != 0 then goto L3334a4;
  #L3334a2.  return v1 @kind object;
  #L3334a4.  v0:= v3.`okhttp3.internal.platform.b.f` @type ^`java.lang.reflect.Method` @kind object;
  #L3334a8.  v2:= 0I;
  #L3334aa.  v2:= new `java.lang.Object`[v2];
  #L3334ae.  call temp:= `invoke`(v0, v4, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3334b4.  v4:= temp @kind object;
  #L3334b6.  v4:= (`byte`[]) v4 @kind object;
  #L3334ba.  if v4 == 0 then goto L3334cc;
  #L3334be.  v1:= new `java.lang.String`;
  #L3334c2.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L3334c6.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L3334cc.  return v1 @kind object;
  #L3334ce.  v4:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3334d0.  goto L3334d4;
  #L3334d2.  v4:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3334d4.  v0:= new `java.lang.AssertionError`;
  #L3334d8.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3334de.  throw v0;
  catch `java.lang.IllegalAccessException` @[L3334a4..L3334cc] goto L3334d2;
  catch `java.lang.reflect.InvocationTargetException` @[L3334a4..L3334cc] goto L3334ce;
}
procedure `java.lang.Object` `o`(`okhttp3.internal.platform.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/platform/b;.o:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333470.  v0:= v1.`okhttp3.internal.platform.b.h` @type ^`okhttp3.internal.platform.b$b` @kind object;
  #L333474.  call temp:= `a`(v0, v2) @signature `Lokhttp3/internal/platform/b$b;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L33347a.  v2:= temp @kind object;
  #L33347c.  return v2 @kind object;
}
procedure `boolean` `q`(`okhttp3.internal.platform.b` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/internal/platform/b;.q:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3333bc.  v0:= "android.security.NetworkSecurityPolicy" @kind object;
  #L3333c0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3333c6.  v0:= temp @kind object;
  #L3333c8.  v1:= "getInstance" @kind object;
  #L3333cc.  v2:= 0I;
  #L3333ce.  v3:= new `java.lang.Class`[v2];
  #L3333d2.  call temp:= `getMethod`(v0, v1, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3333d8.  v1:= temp @kind object;
  #L3333da.  v3:= 0I;
  #L3333dc.  v2:= new `java.lang.Object`[v2];
  #L3333e0.  call temp:= `invoke`(v1, v3, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3333e6.  v1:= temp @kind object;
  #L3333e8.  call temp:= `v`(v4, v5, v0, v1) @signature `Lokhttp3/internal/platform/b;.v:(Ljava/lang/String;Ljava/lang/Class;Ljava/lang/Object;)Z` @kind direct;
  #L3333ee.  v5:= temp;
  #L3333f0.  return v5;
  #L3333f2.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3333f4.  goto L3333fc;
  #L3333f6.  v5:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3333f8.  goto L3333fc;
  #L3333fa.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3333fc.  v0:= new `java.lang.AssertionError`;
  #L333400.  v1:= "unable to determine cleartext support" @kind object;
  #L333404.  call `<init>`(v0, v1, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33340a.  throw v0;
  #L33340c.  call temp:= `q`(v4, v5) @signature `Lokhttp3/internal/platform/e;.q:(Ljava/lang/String;)Z` @kind super;
  #L333412.  v5:= temp;
  #L333414.  return v5;
  catch `java.lang.ClassNotFoundException` @[L3333bc..L3333f0] goto L33340c;
  catch `java.lang.NoSuchMethodException` @[L3333bc..L3333f0] goto L33340c;
  catch `java.lang.IllegalAccessException` @[L3333bc..L3333f0] goto L3333fa;
  catch `java.lang.IllegalArgumentException` @[L3333bc..L3333f0] goto L3333f6;
  catch `java.lang.reflect.InvocationTargetException` @[L3333bc..L3333f0] goto L3333f2;
}
procedure `void` `s`(`okhttp3.internal.platform.b` v3 @kind this, `int` v4 , `java.lang.String` v5 @kind object, `java.lang.Throwable` v6 @kind object) @signature `Lokhttp3/internal/platform/b;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3338a8.  v4:= 10I;
  #L3338ac.  if v6 == 0 then goto L3338dc;
  #L3338b0.  v0:= new `java.lang.StringBuilder`;
  #L3338b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3338ba.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3338c0.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3338c6.  call temp:= `getStackTraceString`(v6) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L3338cc.  v5:= temp @kind object;
  #L3338ce.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3338d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3338da.  v5:= temp @kind object;
  #L3338dc.  v6:= 0I;
  #L3338de.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3338e4.  v0:= temp;
  #L3338e6.  if v6 >= v0 then goto L33391c;
  #L3338ea.  call temp:= `indexOf`(v5, v4, v6) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L3338f0.  v1:= temp;
  #L3338f2.  v2:= -1I;
  #L3338f4.  if v1 == v2 then goto L3338fa;
  #L3338f8.  goto L3338fc;
  #L3338fa.  v1:= v0;
  #L3338fc.  v2:= v6 + 4000;
  #L333900.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L333906.  v2:= temp;
  #L333908.  call temp:= `substring`(v5, v6, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L33390e.  if v2 < v1 then goto L333918;
  #L333912.  v6:= v2 + 1;
  #L333916.  goto L3338e6;
  #L333918.  v6:= v2;
  #L33391a.  goto L3338fc;
  #L33391c.  return @kind void;
}
procedure `void` `t`(`okhttp3.internal.platform.b` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lokhttp3/internal/platform/b;.t:(Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333930.  v0:= v1.`okhttp3.internal.platform.b.h` @type ^`okhttp3.internal.platform.b$b` @kind object;
  #L333934.  call temp:= `c`(v0, v3) @signature `Lokhttp3/internal/platform/b$b;.c:(Ljava/lang/Object;)Z` @kind virtual;
  #L33393a.  v3:= temp;
  #L33393c.  if v3 != 0 then goto L33394a;
  #L333940.  v3:= 5I;
  #L333942.  v0:= 0I;
  #L333944.  call `s`(v1, v3, v2, v0) @signature `Lokhttp3/internal/platform/b;.s:(ILjava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L33394a.  return @kind void;
}
