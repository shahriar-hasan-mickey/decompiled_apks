record `okhttp3.internal.platform.d` @kind class @AccessFlag FINAL extends `okhttp3.internal.platform.e` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.platform.d.c` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.d.d` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.d` v0 @kind this, `java.lang.reflect.Method` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lokhttp3/internal/platform/d;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L334014.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @kind direct;
  #L33401a.  v0.`okhttp3.internal.platform.d.c` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L33401e.  v0.`okhttp3.internal.platform.d.d` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L334022.  return @kind void;
}
procedure `okhttp3.internal.platform.d` `u`() @signature `Lokhttp3/internal/platform/d;.u:()Lokhttp3/internal/platform/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L333fb0.  v0:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L333fb4.  v1:= "setApplicationProtocols" @kind object;
  #L333fb8.  v2:= 1I;
  #L333fba.  v2:= new `java.lang.Class`[v2];
  #L333fbe.  v3:= constclass @type ^`java.lang.String`[] @kind object;
  #L333fc2.  v4:= 0I;
  #L333fc4.  v2[v4]:= v3 @kind object;
  #L333fc8.  call temp:= `getMethod`(v0, v1, v2) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333fce.  v0:= temp @kind object;
  #L333fd0.  v1:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L333fd4.  v2:= "getApplicationProtocol" @kind object;
  #L333fd8.  v3:= new `java.lang.Class`[v4];
  #L333fdc.  call temp:= `getMethod`(v1, v2, v3) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L333fe2.  v1:= temp @kind object;
  #L333fe4.  v2:= new `okhttp3.internal.platform.d`;
  #L333fe8.  call `<init>`(v2, v0, v1) @signature `Lokhttp3/internal/platform/d;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L333fee.  return v2 @kind object;
  #L333ff0.  v0:= 0I;
  #L333ff2.  return v0 @kind object;
  catch `java.lang.NoSuchMethodException` @[L333fb0..L333fee] goto L333ff0;
}
procedure `void` `g`(`okhttp3.internal.platform.d` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object, `java.lang.String` v6 @kind object, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/platform/d;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L334034.  call temp:= `getSSLParameters`(v5) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L33403a.  v6:= temp @kind object;
  #L33403c.  call temp:= `b`(v7) @signature `Lokhttp3/internal/platform/e;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L334042.  v7:= temp @kind object;
  #L334044.  v0:= v4.`okhttp3.internal.platform.d.c` @type ^`java.lang.reflect.Method` @kind object;
  #L334048.  v1:= 1I;
  #L33404a.  v1:= new `java.lang.Object`[v1];
  #L33404e.  v2:= 0I;
  #L334050.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L334056.  v3:= temp;
  #L334058.  v3:= new `java.lang.String`[v3];
  #L33405c.  call temp:= `toArray`(v7, v3) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L334062.  v7:= temp @kind object;
  #L334064.  v1[v2]:= v7 @kind object;
  #L334068.  call temp:= `invoke`(v0, v6, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L33406e.  call `setSSLParameters`(v5, v6) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L334074.  return @kind void;
  #L334076.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L334078.  goto L33407c;
  #L33407a.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L33407c.  v6:= new `java.lang.AssertionError`;
  #L334080.  v7:= "failed to set SSL parameters" @kind object;
  #L334084.  call `<init>`(v6, v7, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L33408a.  throw v6;
  catch `java.lang.IllegalAccessException` @[L334034..L334074] goto L33407a;
  catch `java.lang.reflect.InvocationTargetException` @[L334034..L334074] goto L334076;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.d` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object) @signature `Lokhttp3/internal/platform/d;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333f2c.  v0:= "failed to get ALPN selected protocol" @kind object;
  #L333f30.  v1:= 0I;
  #L333f32.  v2:= v4.`okhttp3.internal.platform.d.d` @type ^`java.lang.reflect.Method` @kind object;
  #L333f36.  v3:= 0I;
  #L333f38.  v3:= new `java.lang.Object`[v3];
  #L333f3c.  call temp:= `invoke`(v2, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333f42.  v5:= temp @kind object;
  #L333f44.  v5:= (`java.lang.String`) v5 @kind object;
  #L333f48.  if v5 == 0 then goto L333f60;
  #L333f4c.  v2:= "" @kind object;
  #L333f50.  call temp:= `equals`(v5, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L333f56.  v0:= temp;
  #L333f58.  if v0 == 0 then goto L333f5e;
  #L333f5c.  goto L333f60;
  #L333f5e.  return v5 @kind object;
  #L333f60.  return v1 @kind object;
  #L333f62.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333f64.  v1:= new `java.lang.AssertionError`;
  #L333f68.  call `<init>`(v1, v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333f6e.  throw v1;
  #L333f70.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L333f72.  call temp:= `getCause`(v5) @signature `Ljava/lang/reflect/InvocationTargetException;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L333f78.  v2:= temp @kind object;
  #L333f7a.  v2:= instanceof @variable v2 @type ^`java.lang.UnsupportedOperationException` @kind boolean;
  #L333f7e.  if v2 == 0 then goto L333f84;
  #L333f82.  return v1 @kind object;
  #L333f84.  v1:= new `java.lang.AssertionError`;
  #L333f88.  call `<init>`(v1, v0, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L333f8e.  throw v1;
  catch `java.lang.reflect.InvocationTargetException` @[L333f32..L333f58] goto L333f70;
  catch `java.lang.IllegalAccessException` @[L333f32..L333f58] goto L333f62;
}
