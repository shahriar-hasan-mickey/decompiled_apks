record `okhttp3.internal.platform.b$a` @kind class @AccessFlag FINAL extends `ke.c` @kind class {
  `java.lang.Object` `okhttp3.internal.platform.b$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.platform.b$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.platform.b$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.reflect.Method` v2 @kind object) @signature `Lokhttp3/internal/platform/b$a;.<init>:(Ljava/lang/Object;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3330a8.  call `<init>`(v0) @signature `Lke/c;.<init>:()V` @kind direct;
  #L3330ae.  v0.`okhttp3.internal.platform.b$a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L3330b2.  v0.`okhttp3.internal.platform.b$a.b` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3330b6.  return @kind void;
}
procedure `java.util.List` `a`(`okhttp3.internal.platform.b$a` v4 @kind this, `java.util.List` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lokhttp3/internal/platform/b$a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L333014.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33301a.  v0:= temp;
  #L33301c.  v0:= new `java.security.cert.X509Certificate`[v0];
  #L333020.  call temp:= `toArray`(v5, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L333026.  v5:= temp @kind object;
  #L333028.  v5:= (`java.security.cert.X509Certificate`[]) v5 @kind object;
  #L33302c.  v0:= v4.`okhttp3.internal.platform.b$a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L333030.  v1:= v4.`okhttp3.internal.platform.b$a.a` @type ^`java.lang.Object` @kind object;
  #L333034.  v2:= 3I;
  #L333036.  v2:= new `java.lang.Object`[v2];
  #L33303a.  v3:= 0I;
  #L33303c.  v2[v3]:= v5 @kind object;
  #L333040.  v5:= 1I;
  #L333042.  v3:= "RSA" @kind object;
  #L333046.  v2[v5]:= v3 @kind object;
  #L33304a.  v5:= 2I;
  #L33304c.  v2[v5]:= v6 @kind object;
  #L333050.  call temp:= `invoke`(v0, v1, v2) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L333056.  v5:= temp @kind object;
  #L333058.  v5:= (`java.util.List`) v5 @kind object;
  #L33305c.  return v5 @kind object;
  #L33305e.  v5:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L333060.  v6:= new `java.lang.AssertionError`;
  #L333064.  call `<init>`(v6, v5) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L33306a.  throw v6;
  #L33306c.  v5:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L33306e.  v6:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L333072.  call temp:= `getMessage`(v5) @signature `Ljava/lang/reflect/InvocationTargetException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L333078.  v0:= temp @kind object;
  #L33307a.  call `<init>`(v6, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L333080.  call temp:= `initCause`(v6, v5) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L333086.  throw v6;
  catch `java.lang.reflect.InvocationTargetException` @[L333014..L33305c] goto L33306c;
  catch `java.lang.IllegalAccessException` @[L333014..L33305c] goto L33305e;
}
procedure `boolean` `equals`(`okhttp3.internal.platform.b$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lokhttp3/internal/platform/b$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L332fe8.  v1:= instanceof @variable v1 @type ^`okhttp3.internal.platform.b$a` @kind boolean;
  #L332fec.  return v1;
}
procedure `int` `hashCode`(`okhttp3.internal.platform.b$a` v1 @kind this) @signature `Lokhttp3/internal/platform/b$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333000.  v0:= 0I;
  #L333002.  return v0;
}
