record `okhttp3.internal.platform.c` @kind class @AccessFlag PUBLIC extends `okhttp3.internal.platform.e` @kind class {
}
procedure `void` `<init>`(`okhttp3.internal.platform.c` v0 @kind this) @signature `Lokhttp3/internal/platform/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L333a6c.  call `<init>`(v0) @signature `Lokhttp3/internal/platform/e;.<init>:()V` @kind direct;
  #L333a72.  return @kind void;
}
procedure `okhttp3.internal.platform.c` `u`() @signature `Lokhttp3/internal/platform/c;.u:()Lokhttp3/internal/platform/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L333a24.  v0:= 0I;
  #L333a26.  v1:= "org.conscrypt.Conscrypt" @kind object;
  #L333a2a.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L333a30.  call temp:= `isAvailable`() @signature `Lorg/conscrypt/Conscrypt;.isAvailable:()Z` @kind static;
  #L333a36.  v1:= temp;
  #L333a38.  if v1 != 0 then goto L333a3e;
  #L333a3c.  return v0 @kind object;
  #L333a3e.  v1:= new `okhttp3.internal.platform.c`;
  #L333a42.  call `<init>`(v1) @signature `Lokhttp3/internal/platform/c;.<init>:()V` @kind direct;
  #L333a48.  return v1 @kind object;
  #L333a4a.  return v0 @kind object;
  catch `java.lang.ClassNotFoundException` @[L333a26..L333a48] goto L333a4a;
}
procedure `java.security.Provider` `v`(`okhttp3.internal.platform.c` v1 @kind this) @signature `Lokhttp3/internal/platform/c;.v:()Ljava/security/Provider;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L33398c.  call temp:= `newProviderBuilder`() @signature `Lorg/conscrypt/Conscrypt;.newProviderBuilder:()Lorg/conscrypt/Conscrypt$ProviderBuilder;` @kind static;
  #L333992.  v0:= temp @kind object;
  #L333994.  call temp:= `provideTrustManager`(v0) @signature `Lorg/conscrypt/Conscrypt$ProviderBuilder;.provideTrustManager:()Lorg/conscrypt/Conscrypt$ProviderBuilder;` @kind virtual;
  #L33399a.  v0:= temp @kind object;
  #L33399c.  call temp:= `build`(v0) @signature `Lorg/conscrypt/Conscrypt$ProviderBuilder;.build:()Ljava/security/Provider;` @kind virtual;
  #L3339a2.  v0:= temp @kind object;
  #L3339a4.  return v0 @kind object;
}
procedure `void` `f`(`okhttp3.internal.platform.c` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object) @signature `Lokhttp3/internal/platform/c;.f:(Ljavax/net/ssl/SSLSocketFactory;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333a84.  call temp:= `isConscrypt`(v2) @signature `Lorg/conscrypt/Conscrypt;.isConscrypt:(Ljavax/net/ssl/SSLSocketFactory;)Z` @kind static;
  #L333a8a.  v0:= temp;
  #L333a8c.  if v0 == 0 then goto L333a98;
  #L333a90.  v0:= 1I;
  #L333a92.  call `setUseEngineSocket`(v2, v0) @signature `Lorg/conscrypt/Conscrypt;.setUseEngineSocket:(Ljavax/net/ssl/SSLSocketFactory;Z)V` @kind static;
  #L333a98.  return @kind void;
}
procedure `void` `g`(`okhttp3.internal.platform.c` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object, `java.lang.String` v3 @kind object, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/platform/c;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L333aac.  call temp:= `isConscrypt`(v2) @signature `Lorg/conscrypt/Conscrypt;.isConscrypt:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L333ab2.  v0:= temp;
  #L333ab4.  if v0 == 0 then goto L333aec;
  #L333ab8.  if v3 == 0 then goto L333aca;
  #L333abc.  v0:= 1I;
  #L333abe.  call `setUseSessionTickets`(v2, v0) @signature `Lorg/conscrypt/Conscrypt;.setUseSessionTickets:(Ljavax/net/ssl/SSLSocket;Z)V` @kind static;
  #L333ac4.  call `setHostname`(v2, v3) @signature `Lorg/conscrypt/Conscrypt;.setHostname:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;)V` @kind static;
  #L333aca.  call temp:= `b`(v4) @signature `Lokhttp3/internal/platform/e;.b:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L333ad0.  v3:= temp @kind object;
  #L333ad2.  v4:= 0I;
  #L333ad4.  v4:= new `java.lang.String`[v4];
  #L333ad8.  call temp:= `toArray`(v3, v4) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L333ade.  v3:= temp @kind object;
  #L333ae0.  v3:= (`java.lang.String`[]) v3 @kind object;
  #L333ae4.  call `setApplicationProtocols`(v2, v3) @signature `Lorg/conscrypt/Conscrypt;.setApplicationProtocols:(Ljavax/net/ssl/SSLSocket;[Ljava/lang/String;)V` @kind static;
  #L333aea.  goto L333af2;
  #L333aec.  call `g`(v1, v2, v3, v4) @signature `Lokhttp3/internal/platform/e;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind super;
  #L333af2.  return @kind void;
}
procedure `javax.net.ssl.SSLContext` `m`(`okhttp3.internal.platform.c` v3 @kind this) @signature `Lokhttp3/internal/platform/c;.m:()Ljavax/net/ssl/SSLContext;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3339b8.  v0:= "TLSv1.3" @kind object;
  #L3339bc.  call temp:= `v`(v3) @signature `Lokhttp3/internal/platform/c;.v:()Ljava/security/Provider;` @kind direct;
  #L3339c2.  v1:= temp @kind object;
  #L3339c4.  call temp:= `getInstance`(v0, v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3339ca.  v0:= temp @kind object;
  #L3339cc.  return v0 @kind object;
  #L3339ce.  v0:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L3339d0.  v1:= "TLS" @kind object;
  #L3339d4.  call temp:= `v`(v3) @signature `Lokhttp3/internal/platform/c;.v:()Ljava/security/Provider;` @kind direct;
  #L3339da.  v2:= temp @kind object;
  #L3339dc.  call temp:= `getInstance`(v1, v2) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;Ljava/security/Provider;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3339e2.  v0:= temp @kind object;
  #L3339e4.  return v0 @kind object;
  #L3339e6.  v1:= new `java.lang.IllegalStateException`;
  #L3339ea.  v2:= "No TLS provider" @kind object;
  #L3339ee.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3339f4.  throw v1;
  catch `java.security.NoSuchAlgorithmException` @[L3339b8..L3339cc] goto L3339ce;
  catch `java.security.NoSuchAlgorithmException` @[L3339d0..L3339e4] goto L3339e6;
}
procedure `java.lang.String` `n`(`okhttp3.internal.platform.c` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object) @signature `Lokhttp3/internal/platform/c;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33395c.  call temp:= `isConscrypt`(v2) @signature `Lorg/conscrypt/Conscrypt;.isConscrypt:(Ljavax/net/ssl/SSLSocket;)Z` @kind static;
  #L333962.  v0:= temp;
  #L333964.  if v0 == 0 then goto L333972;
  #L333968.  call temp:= `getApplicationProtocol`(v2) @signature `Lorg/conscrypt/Conscrypt;.getApplicationProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind static;
  #L33396e.  v2:= temp @kind object;
  #L333970.  return v2 @kind object;
  #L333972.  call temp:= `n`(v1, v2) @signature `Lokhttp3/internal/platform/e;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind super;
  #L333978.  v2:= temp @kind object;
  #L33397a.  return v2 @kind object;
}
