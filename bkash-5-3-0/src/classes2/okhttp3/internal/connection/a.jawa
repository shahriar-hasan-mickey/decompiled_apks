record `okhttp3.internal.connection.a` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.y` @kind interface {
}
procedure `void` `<init>`(`okhttp3.internal.connection.a` v0 @kind this, `okhttp3.b0` v1 @kind object) @signature `Lokhttp3/internal/connection/a;.<init>:(Lokhttp3/b0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32fa94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32fa9a.  return @kind void;
}
procedure `okhttp3.g0` `a`(`okhttp3.internal.connection.a` v5 @kind this, `okhttp3.y$a` v6 @kind object) @signature `Lokhttp3/internal/connection/a;.a:(Lokhttp3/y$a;)Lokhttp3/g0;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32fa44.  v0:= v6 @kind object;
  #L32fa46.  v0:= (`ge.g`) v0 @kind object;
  #L32fa4a.  call temp:= `k`(v0) @signature `Lge/g;.k:()Lokhttp3/e0;` @kind virtual;
  #L32fa50.  v1:= temp @kind object;
  #L32fa52.  call temp:= `g`(v0) @signature `Lge/g;.g:()Lokhttp3/internal/connection/k;` @kind virtual;
  #L32fa58.  v2:= temp @kind object;
  #L32fa5a.  call temp:= `f`(v1) @signature `Lokhttp3/e0;.f:()Ljava/lang/String;` @kind virtual;
  #L32fa60.  v3:= temp @kind object;
  #L32fa62.  v4:= "GET" @kind object;
  #L32fa66.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32fa6c.  v3:= temp;
  #L32fa6e.  v3:= v3 ^~ 1;
  #L32fa72.  call temp:= `k`(v2, v6, v3) @signature `Lokhttp3/internal/connection/k;.k:(Lokhttp3/y$a;Z)Lokhttp3/internal/connection/c;` @kind virtual;
  #L32fa78.  v6:= temp @kind object;
  #L32fa7a.  call temp:= `f`(v0, v1, v2, v6) @signature `Lge/g;.f:(Lokhttp3/e0;Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/c;)Lokhttp3/g0;` @kind virtual;
  #L32fa80.  v6:= temp @kind object;
  #L32fa82.  return v6 @kind object;
}
