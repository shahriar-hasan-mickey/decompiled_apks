record `okhttp3.internal.connection.h` @kind class @AccessFlag FINAL {
  `java.util.Set` `okhttp3.internal.connection.h.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.h` v1 @kind this) @signature `Lokhttp3/internal/connection/h;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L332010.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L332016.  v0:= new `java.util.LinkedHashSet`;
  #L33201a.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L332020.  v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` := v0 @kind object;
  #L332024.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.h` v1 @kind this, `okhttp3.i0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.a:(Lokhttp3/i0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332038.  @monitorenter v1
  #L33203a.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L33203e.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L332044.  @monitorexit v1
  #L332046.  return @kind void;
  #L332048.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33204a.  @monitorexit v1
  #L33204c.  throw v2;
  catch `java.lang.Throwable` @[L33203a..L332044] goto L332048;
}
procedure `void` `b`(`okhttp3.internal.connection.h` v1 @kind this, `okhttp3.i0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.b:(Lokhttp3/i0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33206c.  @monitorenter v1
  #L33206e.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L332072.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332078.  @monitorexit v1
  #L33207a.  return @kind void;
  #L33207c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L33207e.  @monitorexit v1
  #L332080.  throw v2;
  catch `java.lang.Throwable` @[L33206e..L332078] goto L33207c;
}
procedure `boolean` `c`(`okhttp3.internal.connection.h` v1 @kind this, `okhttp3.i0` v2 @kind object) @signature `Lokhttp3/internal/connection/h;.c:(Lokhttp3/i0;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331fdc.  @monitorenter v1
  #L331fde.  v0:= v1.`okhttp3.internal.connection.h.a` @type ^`java.util.Set` @kind object;
  #L331fe2.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L331fe8.  v2:= temp;
  #L331fea.  @monitorexit v1
  #L331fec.  return v2;
  #L331fee.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331ff0.  @monitorexit v1
  #L331ff2.  throw v2;
  catch `java.lang.Throwable` @[L331fde..L331fea] goto L331fee;
}
