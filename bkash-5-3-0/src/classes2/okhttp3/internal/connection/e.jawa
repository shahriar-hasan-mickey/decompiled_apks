record `okhttp3.internal.connection.e` @kind class @AccessFlag PUBLIC_FINAL extends `ie.f$j` @kind class, `okhttp3.k` @kind interface {
  `okhttp3.internal.connection.g` `okhttp3.internal.connection.e.b` @AccessFlag PUBLIC_FINAL;
  `okhttp3.i0` `okhttp3.internal.connection.e.c` @AccessFlag PRIVATE_FINAL;
  `java.net.Socket` `okhttp3.internal.connection.e.d` @AccessFlag PRIVATE;
  `java.net.Socket` `okhttp3.internal.connection.e.e` @AccessFlag PRIVATE;
  `okhttp3.v` `okhttp3.internal.connection.e.f` @AccessFlag PRIVATE;
  `okhttp3.c0` `okhttp3.internal.connection.e.g` @AccessFlag PRIVATE;
  `ie.f` `okhttp3.internal.connection.e.h` @AccessFlag PRIVATE;
  `okio.e` `okhttp3.internal.connection.e.i` @AccessFlag PRIVATE;
  `okio.d` `okhttp3.internal.connection.e.j` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.e.k` @AccessFlag ;
  `int` `okhttp3.internal.connection.e.l` @AccessFlag ;
  `int` `okhttp3.internal.connection.e.m` @AccessFlag ;
  `int` `okhttp3.internal.connection.e.n` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.e.o` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.e.p` @AccessFlag FINAL;
  `long` `okhttp3.internal.connection.e.q` @AccessFlag ;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L331568.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.e` v2 @kind this, `okhttp3.internal.connection.g` v3 @kind object, `okhttp3.i0` v4 @kind object) @signature `Lokhttp3/internal/connection/e;.<init>:(Lokhttp3/internal/connection/g;Lokhttp3/i0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L33157c.  call `<init>`(v2) @signature `Lie/f$j;.<init>:()V` @kind direct;
  #L331582.  v0:= 1I;
  #L331584.  v2.`okhttp3.internal.connection.e.o` @type ^`int` := v0;
  #L331588.  v0:= new `java.util.ArrayList`;
  #L33158c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L331592.  v2.`okhttp3.internal.connection.e.p` @type ^`java.util.List` := v0 @kind object;
  #L331596.  v0:= 9223372036854775807L;
  #L3315a0.  v2.`okhttp3.internal.connection.e.q` @type ^`long` := v0 @kind wide;
  #L3315a4.  v2.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` := v3 @kind object;
  #L3315a8.  v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` := v4 @kind object;
  #L3315ac.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.connection.e` v4 @kind this, `int` v5 , `int` v6 , `okhttp3.f` v7 @kind object, `okhttp3.u` v8 @kind object) @signature `Lokhttp3/internal/connection/e;.e:(IILokhttp3/f;Lokhttp3/u;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3318d0.  v0:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3318d4.  call temp:= `b`(v0) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3318da.  v0:= temp @kind object;
  #L3318dc.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3318e0.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L3318e6.  v1:= temp @kind object;
  #L3318e8.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3318ee.  v2:= temp @kind object;
  #L3318f0.  v3:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L3318f4.  if v2 == v3 then goto L331916;
  #L3318f8.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3318fe.  v2:= temp @kind object;
  #L331900.  v3:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L331904.  if v2 != v3 then goto L33190a;
  #L331908.  goto L331916;
  #L33190a.  v1:= new `java.net.Socket`;
  #L33190e.  call `<init>`(v1, v0) @signature `Ljava/net/Socket;.<init>:(Ljava/net/Proxy;)V` @kind direct;
  #L331914.  goto L331926;
  #L331916.  call temp:= `j`(v1) @signature `Lokhttp3/a;.j:()Ljavax/net/SocketFactory;` @kind virtual;
  #L33191c.  v1:= temp @kind object;
  #L33191e.  call temp:= `createSocket`(v1) @signature `Ljavax/net/SocketFactory;.createSocket:()Ljava/net/Socket;` @kind virtual;
  #L331924.  v1:= temp @kind object;
  #L331926.  v4.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` := v1 @kind object;
  #L33192a.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33192e.  call temp:= `d`(v1) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L331934.  v1:= temp @kind object;
  #L331936.  call `g`(v8, v7, v1, v0) @signature `Lokhttp3/u;.g:(Lokhttp3/f;Ljava/net/InetSocketAddress;Ljava/net/Proxy;)V` @kind virtual;
  #L33193c.  v7:= v4.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331940.  call `setSoTimeout`(v7, v6) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L331946.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L33194c.  v6:= temp @kind object;
  #L33194e.  v7:= v4.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331952.  v8:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331956.  call temp:= `d`(v8) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L33195c.  v8:= temp @kind object;
  #L33195e.  call `h`(v6, v7, v8, v5) @signature `Lokhttp3/internal/platform/e;.h:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @kind virtual;
  #L331964.  v5:= v4.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331968.  call temp:= `h`(v5) @signature `Lokio/n;.h:(Ljava/net/Socket;)Lokio/v;` @kind static;
  #L33196e.  v5:= temp @kind object;
  #L331970.  call temp:= `b`(v5) @signature `Lokio/n;.b:(Lokio/v;)Lokio/e;` @kind static;
  #L331976.  v5:= temp @kind object;
  #L331978.  v4.`okhttp3.internal.connection.e.i` @type ^`okio.e` := v5 @kind object;
  #L33197c.  v5:= v4.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331980.  call temp:= `e`(v5) @signature `Lokio/n;.e:(Ljava/net/Socket;)Lokio/u;` @kind static;
  #L331986.  v5:= temp @kind object;
  #L331988.  call temp:= `a`(v5) @signature `Lokio/n;.a:(Lokio/u;)Lokio/d;` @kind static;
  #L33198e.  v5:= temp @kind object;
  #L331990.  v4.`okhttp3.internal.connection.e.j` @type ^`okio.d` := v5 @kind object;
  #L331994.  goto L3319b0;
  #L331996.  v5:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L331998.  call temp:= `getMessage`(v5) @signature `Ljava/lang/NullPointerException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L33199e.  v6:= temp @kind object;
  #L3319a0.  v7:= "throw with null exception" @kind object;
  #L3319a4.  call temp:= `equals`(v7, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3319aa.  v6:= temp;
  #L3319ac.  if v6 != 0 then goto L3319b2;
  #L3319b0.  return @kind void;
  #L3319b2.  v6:= new `java.io.IOException`;
  #L3319b6.  call `<init>`(v6, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3319bc.  throw v6;
  #L3319be.  v5:= Exception @type ^`java.net.ConnectException` @kind object;
  #L3319c0.  v6:= new `java.net.ConnectException`;
  #L3319c4.  v7:= new `java.lang.StringBuilder`;
  #L3319c8.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3319ce.  v8:= "Failed to connect to " @kind object;
  #L3319d2.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3319d8.  v8:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3319dc.  call temp:= `d`(v8) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3319e2.  v8:= temp @kind object;
  #L3319e4.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3319ea.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3319f0.  v7:= temp @kind object;
  #L3319f2.  call `<init>`(v6, v7) @signature `Ljava/net/ConnectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3319f8.  call temp:= `initCause`(v6, v5) @signature `Ljava/net/ConnectException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3319fe.  throw v6;
  catch `java.net.ConnectException` @[L331946..L331964] goto L3319be;
  catch `java.lang.NullPointerException` @[L331964..L331994] goto L331996;
}
procedure `void` `f`(`okhttp3.internal.connection.e` v7 @kind this, `okhttp3.internal.connection.b` v8 @kind object) @signature `Lokhttp3/internal/connection/e;.f:(Lokhttp3/internal/connection/b;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L331a2c.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331a30.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331a36.  v0:= temp @kind object;
  #L331a38.  call temp:= `k`(v0) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L331a3e.  v1:= temp @kind object;
  #L331a40.  v2:= 0I;
  #L331a42.  v3:= v7.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331a46.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331a4c.  v4:= temp @kind object;
  #L331a4e.  call temp:= `l`(v4) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331a54.  v4:= temp @kind object;
  #L331a56.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331a5c.  v5:= temp @kind object;
  #L331a5e.  call temp:= `x`(v5) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L331a64.  v5:= temp;
  #L331a66.  v6:= 1I;
  #L331a68.  call temp:= `createSocket`(v1, v3, v4, v5, v6) @signature `Ljavax/net/ssl/SSLSocketFactory;.createSocket:(Ljava/net/Socket;Ljava/lang/String;IZ)Ljava/net/Socket;` @kind virtual;
  #L331a6e.  v1:= temp @kind object;
  #L331a70.  v1:= (`javax.net.ssl.SSLSocket`) v1 @kind object;
  #L331a74.  call temp:= `a`(v8, v1) @signature `Lokhttp3/internal/connection/b;.a:(Ljavax/net/ssl/SSLSocket;)Lokhttp3/m;` @kind virtual;
  #L331a7a.  v8:= temp @kind object;
  #L331a7c.  call temp:= `f`(v8) @signature `Lokhttp3/m;.f:()Z` @kind virtual;
  #L331a82.  v3:= temp;
  #L331a84.  if v3 == 0 then goto L331aae;
  #L331a88.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L331a8e.  v3:= temp @kind object;
  #L331a90.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331a96.  v4:= temp @kind object;
  #L331a98.  call temp:= `l`(v4) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331a9e.  v4:= temp @kind object;
  #L331aa0.  call temp:= `f`(v0) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L331aa6.  v5:= temp @kind object;
  #L331aa8.  call `g`(v3, v1, v4, v5) @signature `Lokhttp3/internal/platform/e;.g:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L331aae.  call `startHandshake`(v1) @signature `Ljavax/net/ssl/SSLSocket;.startHandshake:()V` @kind virtual;
  #L331ab4.  call temp:= `getSession`(v1) @signature `Ljavax/net/ssl/SSLSocket;.getSession:()Ljavax/net/ssl/SSLSession;` @kind virtual;
  #L331aba.  v3:= temp @kind object;
  #L331abc.  call temp:= `b`(v3) @signature `Lokhttp3/v;.b:(Ljavax/net/ssl/SSLSession;)Lokhttp3/v;` @kind static;
  #L331ac2.  v4:= temp @kind object;
  #L331ac4.  call temp:= `e`(v0) @signature `Lokhttp3/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L331aca.  v5:= temp @kind object;
  #L331acc.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331ad2.  v6:= temp @kind object;
  #L331ad4.  call temp:= `l`(v6) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331ada.  v6:= temp @kind object;
  #L331adc.  call temp:= `verify`(v5, v6, v3) @signature `Ljavax/net/ssl/HostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @kind interface;
  #L331ae2.  v3:= temp;
  #L331ae4.  if v3 != 0 then goto L331bdc;
  #L331ae8.  call temp:= `d`(v4) @signature `Lokhttp3/v;.d:()Ljava/util/List;` @kind virtual;
  #L331aee.  v8:= temp @kind object;
  #L331af0.  call temp:= `isEmpty`(v8) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L331af6.  v2:= temp;
  #L331af8.  v3:= "Hostname " @kind object;
  #L331afc.  if v2 != 0 then goto L331b98;
  #L331b00.  v2:= 0I;
  #L331b02.  call temp:= `get`(v8, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L331b08.  v8:= temp @kind object;
  #L331b0a.  v8:= (`java.security.cert.X509Certificate`) v8 @kind object;
  #L331b0e.  v2:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L331b12.  v4:= new `java.lang.StringBuilder`;
  #L331b16.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L331b1c.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b22.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331b28.  v0:= temp @kind object;
  #L331b2a.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331b30.  v0:= temp @kind object;
  #L331b32.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b38.  v0:= " not verified:\n    certificate: " @kind object;
  #L331b3c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b42.  call temp:= `c`(v8) @signature `Lokhttp3/h;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L331b48.  v0:= temp @kind object;
  #L331b4a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b50.  v0:= "\n    DN: " @kind object;
  #L331b54.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b5a.  call temp:= `getSubjectDN`(v8) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L331b60.  v0:= temp @kind object;
  #L331b62.  call temp:= `getName`(v0) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L331b68.  v0:= temp @kind object;
  #L331b6a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b70.  v0:= "\n    subjectAltNames: " @kind object;
  #L331b74.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b7a.  call temp:= `a`(v8) @signature `Lke/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @kind static;
  #L331b80.  v8:= temp @kind object;
  #L331b82.  call temp:= `append`(v4, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331b88.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L331b8e.  v8:= temp @kind object;
  #L331b90.  call `<init>`(v2, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331b96.  throw v2;
  #L331b98.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L331b9c.  v2:= new `java.lang.StringBuilder`;
  #L331ba0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L331ba6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331bac.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331bb2.  v0:= temp @kind object;
  #L331bb4.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331bba.  v0:= temp @kind object;
  #L331bbc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331bc2.  v0:= " not verified (no certificates)" @kind object;
  #L331bc6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331bcc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L331bd2.  v0:= temp @kind object;
  #L331bd4.  call `<init>`(v8, v0) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331bda.  throw v8;
  #L331bdc.  call temp:= `a`(v0) @signature `Lokhttp3/a;.a:()Lokhttp3/h;` @kind virtual;
  #L331be2.  v3:= temp @kind object;
  #L331be4.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331bea.  v0:= temp @kind object;
  #L331bec.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331bf2.  v0:= temp @kind object;
  #L331bf4.  call temp:= `d`(v4) @signature `Lokhttp3/v;.d:()Ljava/util/List;` @kind virtual;
  #L331bfa.  v5:= temp @kind object;
  #L331bfc.  call `a`(v3, v0, v5) @signature `Lokhttp3/h;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L331c02.  call temp:= `f`(v8) @signature `Lokhttp3/m;.f:()Z` @kind virtual;
  #L331c08.  v8:= temp;
  #L331c0a.  if v8 == 0 then goto L331c1e;
  #L331c0e.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L331c14.  v8:= temp @kind object;
  #L331c16.  call temp:= `n`(v8, v1) @signature `Lokhttp3/internal/platform/e;.n:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @kind virtual;
  #L331c1c.  v2:= temp @kind object;
  #L331c1e.  v7.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` := v1 @kind object;
  #L331c22.  call temp:= `h`(v1) @signature `Lokio/n;.h:(Ljava/net/Socket;)Lokio/v;` @kind static;
  #L331c28.  v8:= temp @kind object;
  #L331c2a.  call temp:= `b`(v8) @signature `Lokio/n;.b:(Lokio/v;)Lokio/e;` @kind static;
  #L331c30.  v8:= temp @kind object;
  #L331c32.  v7.`okhttp3.internal.connection.e.i` @type ^`okio.e` := v8 @kind object;
  #L331c36.  v8:= v7.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L331c3a.  call temp:= `e`(v8) @signature `Lokio/n;.e:(Ljava/net/Socket;)Lokio/u;` @kind static;
  #L331c40.  v8:= temp @kind object;
  #L331c42.  call temp:= `a`(v8) @signature `Lokio/n;.a:(Lokio/u;)Lokio/d;` @kind static;
  #L331c48.  v8:= temp @kind object;
  #L331c4a.  v7.`okhttp3.internal.connection.e.j` @type ^`okio.d` := v8 @kind object;
  #L331c4e.  v7.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` := v4 @kind object;
  #L331c52.  if v2 == 0 then goto L331c60;
  #L331c56.  call temp:= `get`(v2) @signature `Lokhttp3/c0;.get:(Ljava/lang/String;)Lokhttp3/c0;` @kind static;
  #L331c5c.  v8:= temp @kind object;
  #L331c5e.  goto L331c64;
  #L331c60.  v8:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L331c64.  v7.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` := v8 @kind object;
  #L331c68.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L331c6e.  v8:= temp @kind object;
  #L331c70.  call `a`(v8, v1) @signature `Lokhttp3/internal/platform/e;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L331c76.  return @kind void;
  #L331c78.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331c7a.  v2:= v1 @kind object;
  #L331c7c.  goto L331ca4;
  #L331c7e.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L331c80.  v2:= v1 @kind object;
  #L331c82.  goto L331c8a;
  #L331c84.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331c86.  goto L331ca4;
  #L331c88.  v8:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L331c8a.  call temp:= `A`(v8) @signature `Lee/e;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L331c90.  v0:= temp;
  #L331c92.  if v0 == 0 then goto L331ca2;
  #L331c96.  v0:= new `java.io.IOException`;
  #L331c9a.  call `<init>`(v0, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L331ca0.  throw v0;
  #L331ca2.  throw v8;
  #L331ca4.  if v2 == 0 then goto L331cb6;
  #L331ca8.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L331cae.  v0:= temp @kind object;
  #L331cb0.  call `a`(v0, v2) @signature `Lokhttp3/internal/platform/e;.a:(Ljavax/net/ssl/SSLSocket;)V` @kind virtual;
  #L331cb6.  call `h`(v2) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L331cbc.  throw v8;
  catch `java.lang.AssertionError` @[L331a42..L331a74] goto L331c88;
  catch `java.lang.Throwable` @[L331a42..L331a74] goto L331c84;
  catch `java.lang.AssertionError` @[L331a74..L331af8] goto L331c7e;
  catch `java.lang.Throwable` @[L331a74..L331af8] goto L331c78;
  catch `java.lang.AssertionError` @[L331b02..L331c68] goto L331c7e;
  catch `java.lang.Throwable` @[L331b02..L331c68] goto L331c78;
  catch `java.lang.Throwable` @[L331c8a..L331ca4] goto L331c84;
}
procedure `void` `g`(`okhttp3.internal.connection.e` v6 @kind this, `int` v7 , `int` v8 , `int` v9 , `okhttp3.f` v10 @kind object, `okhttp3.u` v11 @kind object) @signature `Lokhttp3/internal/connection/e;.g:(IIILokhttp3/f;Lokhttp3/u;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L331d04.  call temp:= `i`(v6) @signature `Lokhttp3/internal/connection/e;.i:()Lokhttp3/e0;` @kind direct;
  #L331d0a.  v0:= temp @kind object;
  #L331d0c.  call temp:= `h`(v0) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L331d12.  v1:= temp @kind object;
  #L331d14.  v2:= 0I;
  #L331d16.  v3:= 21I;
  #L331d1a.  if v2 >= v3 then goto L331d6e;
  #L331d1e.  call `e`(v6, v7, v8, v10, v11) @signature `Lokhttp3/internal/connection/e;.e:(IILokhttp3/f;Lokhttp3/u;)V` @kind direct;
  #L331d24.  call temp:= `h`(v6, v8, v9, v0, v1) @signature `Lokhttp3/internal/connection/e;.h:(IILokhttp3/e0;Lokhttp3/x;)Lokhttp3/e0;` @kind direct;
  #L331d2a.  v0:= temp @kind object;
  #L331d2c.  if v0 != 0 then goto L331d32;
  #L331d30.  goto L331d6e;
  #L331d32.  v3:= v6.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331d36.  call `h`(v3) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L331d3c.  v3:= 0I;
  #L331d3e.  v6.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` := v3 @kind object;
  #L331d42.  v6.`okhttp3.internal.connection.e.j` @type ^`okio.d` := v3 @kind object;
  #L331d46.  v6.`okhttp3.internal.connection.e.i` @type ^`okio.e` := v3 @kind object;
  #L331d4a.  v4:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331d4e.  call temp:= `d`(v4) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L331d54.  v4:= temp @kind object;
  #L331d56.  v5:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331d5a.  call temp:= `b`(v5) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L331d60.  v5:= temp @kind object;
  #L331d62.  call `e`(v11, v10, v4, v5, v3) @signature `Lokhttp3/u;.e:(Lokhttp3/f;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/c0;)V` @kind virtual;
  #L331d68.  v2:= v2 + 1;
  #L331d6c.  goto L331d16;
  #L331d6e.  return @kind void;
}
procedure `okhttp3.e0` `h`(`okhttp3.internal.connection.e` v6 @kind this, `int` v7 , `int` v8 , `okhttp3.e0` v9 @kind object, `okhttp3.x` v10 @kind object) @signature `Lokhttp3/internal/connection/e;.h:(IILokhttp3/e0;Lokhttp3/x;)Lokhttp3/e0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L331280.  v0:= new `java.lang.StringBuilder`;
  #L331284.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33128a.  v1:= "CONNECT " @kind object;
  #L33128e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331294.  v1:= 1I;
  #L331296.  call temp:= `s`(v10, v1) @signature `Lee/e;.s:(Lokhttp3/x;Z)Ljava/lang/String;` @kind static;
  #L33129c.  v10:= temp @kind object;
  #L33129e.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3312a4.  v10:= " HTTP/1.1" @kind object;
  #L3312a8.  call temp:= `append`(v0, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3312ae.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3312b4.  v10:= temp @kind object;
  #L3312b6.  v0:= new `he.a`;
  #L3312ba.  v1:= v6.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L3312be.  v2:= v6.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L3312c2.  v3:= 0I;
  #L3312c4.  call `<init>`(v0, v3, v3, v1, v2) @signature `Lhe/a;.<init>:(Lokhttp3/b0;Lokhttp3/internal/connection/e;Lokio/e;Lokio/d;)V` @kind direct;
  #L3312ca.  v1:= v6.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L3312ce.  call temp:= `timeout`(v1) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L3312d4.  v1:= temp @kind object;
  #L3312d6.  v4:= (`long`) v7 @kind i2l;
  #L3312d8.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3312dc.  call temp:= `g`(v1, v4, v2) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L3312e2.  v1:= v6.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L3312e6.  call temp:= `timeout`(v1) @signature `Lokio/u;.timeout:()Lokio/w;` @kind interface;
  #L3312ec.  v1:= temp @kind object;
  #L3312ee.  v4:= (`long`) v8 @kind i2l;
  #L3312f0.  call temp:= `g`(v1, v4, v2) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L3312f6.  call temp:= `d`(v9) @signature `Lokhttp3/e0;.d:()Lokhttp3/w;` @kind virtual;
  #L3312fc.  v1:= temp @kind object;
  #L3312fe.  call `B`(v0, v1, v10) @signature `Lhe/a;.B:(Lokhttp3/w;Ljava/lang/String;)V` @kind virtual;
  #L331304.  call `a`(v0) @signature `Lhe/a;.a:()V` @kind virtual;
  #L33130a.  v1:= 0I;
  #L33130c.  call temp:= `d`(v0, v1) @signature `Lhe/a;.d:(Z)Lokhttp3/g0$a;` @kind virtual;
  #L331312.  v1:= temp @kind object;
  #L331314.  call temp:= `q`(v1, v9) @signature `Lokhttp3/g0$a;.q:(Lokhttp3/e0;)Lokhttp3/g0$a;` @kind virtual;
  #L33131a.  v9:= temp @kind object;
  #L33131c.  call temp:= `c`(v9) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L331322.  v9:= temp @kind object;
  #L331324.  call `A`(v0, v9) @signature `Lhe/a;.A:(Lokhttp3/g0;)V` @kind virtual;
  #L33132a.  call temp:= `k`(v9) @signature `Lokhttp3/g0;.k:()I` @kind virtual;
  #L331330.  v0:= temp;
  #L331332.  v1:= 200I;
  #L331336.  if v0 == v1 then goto L3313ce;
  #L33133a.  v1:= 407I;
  #L33133e.  if v0 != v1 then goto L331398;
  #L331342.  v0:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331346.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L33134c.  v0:= temp @kind object;
  #L33134e.  call temp:= `h`(v0) @signature `Lokhttp3/a;.h:()Lokhttp3/d;` @kind virtual;
  #L331354.  v0:= temp @kind object;
  #L331356.  v1:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33135a.  call temp:= `a`(v0, v1, v9) @signature `Lokhttp3/d;.a:(Lokhttp3/i0;Lokhttp3/g0;)Lokhttp3/e0;` @kind interface;
  #L331360.  v0:= temp @kind object;
  #L331362.  if v0 == 0 then goto L331388;
  #L331366.  v1:= "Connection" @kind object;
  #L33136a.  call temp:= `s`(v9, v1) @signature `Lokhttp3/g0;.s:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L331370.  v9:= temp @kind object;
  #L331372.  v1:= "close" @kind object;
  #L331376.  call temp:= `equalsIgnoreCase`(v1, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L33137c.  v9:= temp;
  #L33137e.  if v9 == 0 then goto L331384;
  #L331382.  return v0 @kind object;
  #L331384.  v9:= v0 @kind object;
  #L331386.  goto L3312b6;
  #L331388.  v7:= new `java.io.IOException`;
  #L33138c.  v8:= "Failed to authenticate with proxy" @kind object;
  #L331390.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331396.  throw v7;
  #L331398.  v7:= new `java.io.IOException`;
  #L33139c.  v8:= new `java.lang.StringBuilder`;
  #L3313a0.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3313a6.  v10:= "Unexpected response code for CONNECT: " @kind object;
  #L3313aa.  call temp:= `append`(v8, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3313b0.  call temp:= `k`(v9) @signature `Lokhttp3/g0;.k:()I` @kind virtual;
  #L3313b6.  v9:= temp;
  #L3313b8.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3313be.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3313c4.  v8:= temp @kind object;
  #L3313c6.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3313cc.  throw v7;
  #L3313ce.  v7:= v6.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L3313d2.  call temp:= `F`(v7) @signature `Lokio/e;.F:()Lokio/c;` @kind interface;
  #L3313d8.  v7:= temp @kind object;
  #L3313da.  call temp:= `H`(v7) @signature `Lokio/c;.H:()Z` @kind virtual;
  #L3313e0.  v7:= temp;
  #L3313e2.  if v7 == 0 then goto L331400;
  #L3313e6.  v7:= v6.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L3313ea.  call temp:= `b`(v7) @signature `Lokio/d;.b:()Lokio/c;` @kind interface;
  #L3313f0.  v7:= temp @kind object;
  #L3313f2.  call temp:= `H`(v7) @signature `Lokio/c;.H:()Z` @kind virtual;
  #L3313f8.  v7:= temp;
  #L3313fa.  if v7 == 0 then goto L331400;
  #L3313fe.  return v3 @kind object;
  #L331400.  v7:= new `java.io.IOException`;
  #L331404.  v8:= "TLS tunnel buffered too many bytes!" @kind object;
  #L331408.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33140e.  throw v7;
}
procedure `okhttp3.e0` `i`(`okhttp3.internal.connection.e` v4 @kind this) @signature `Lokhttp3/internal/connection/e;.i:()Lokhttp3/e0;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L331420.  v0:= new `okhttp3.e0$a`;
  #L331424.  call `<init>`(v0) @signature `Lokhttp3/e0$a;.<init>:()V` @kind direct;
  #L33142a.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33142e.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331434.  v1:= temp @kind object;
  #L331436.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L33143c.  v1:= temp @kind object;
  #L33143e.  call temp:= `l`(v0, v1) @signature `Lokhttp3/e0$a;.l:(Lokhttp3/x;)Lokhttp3/e0$a;` @kind virtual;
  #L331444.  v0:= temp @kind object;
  #L331446.  v1:= "CONNECT" @kind object;
  #L33144a.  v2:= 0I;
  #L33144c.  call temp:= `f`(v0, v1, v2) @signature `Lokhttp3/e0$a;.f:(Ljava/lang/String;Lokhttp3/f0;)Lokhttp3/e0$a;` @kind virtual;
  #L331452.  v0:= temp @kind object;
  #L331454.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331458.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L33145e.  v1:= temp @kind object;
  #L331460.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331466.  v1:= temp @kind object;
  #L331468.  v2:= 1I;
  #L33146a.  call temp:= `s`(v1, v2) @signature `Lee/e;.s:(Lokhttp3/x;Z)Ljava/lang/String;` @kind static;
  #L331470.  v1:= temp @kind object;
  #L331472.  v2:= "Host" @kind object;
  #L331476.  call temp:= `d`(v0, v2, v1) @signature `Lokhttp3/e0$a;.d:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/e0$a;` @kind virtual;
  #L33147c.  v0:= temp @kind object;
  #L33147e.  v1:= "Proxy-Connection" @kind object;
  #L331482.  v2:= "Keep-Alive" @kind object;
  #L331486.  call temp:= `d`(v0, v1, v2) @signature `Lokhttp3/e0$a;.d:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/e0$a;` @kind virtual;
  #L33148c.  v0:= temp @kind object;
  #L33148e.  call temp:= `a`() @signature `Lee/f;.a:()Ljava/lang/String;` @kind static;
  #L331494.  v1:= temp @kind object;
  #L331496.  v2:= "User-Agent" @kind object;
  #L33149a.  call temp:= `d`(v0, v2, v1) @signature `Lokhttp3/e0$a;.d:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/e0$a;` @kind virtual;
  #L3314a0.  v0:= temp @kind object;
  #L3314a2.  call temp:= `b`(v0) @signature `Lokhttp3/e0$a;.b:()Lokhttp3/e0;` @kind virtual;
  #L3314a8.  v0:= temp @kind object;
  #L3314aa.  v1:= new `okhttp3.g0$a`;
  #L3314ae.  call `<init>`(v1) @signature `Lokhttp3/g0$a;.<init>:()V` @kind direct;
  #L3314b4.  call temp:= `q`(v1, v0) @signature `Lokhttp3/g0$a;.q:(Lokhttp3/e0;)Lokhttp3/g0$a;` @kind virtual;
  #L3314ba.  v1:= temp @kind object;
  #L3314bc.  v2:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L3314c0.  call temp:= `o`(v1, v2) @signature `Lokhttp3/g0$a;.o:(Lokhttp3/c0;)Lokhttp3/g0$a;` @kind virtual;
  #L3314c6.  v1:= temp @kind object;
  #L3314c8.  v2:= 407I;
  #L3314cc.  call temp:= `g`(v1, v2) @signature `Lokhttp3/g0$a;.g:(I)Lokhttp3/g0$a;` @kind virtual;
  #L3314d2.  v1:= temp @kind object;
  #L3314d4.  v2:= "Preemptive Authenticate" @kind object;
  #L3314d8.  call temp:= `l`(v1, v2) @signature `Lokhttp3/g0$a;.l:(Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L3314de.  v1:= temp @kind object;
  #L3314e0.  v2:= `@@ee.e.d` @type ^`okhttp3.h0` @kind object;
  #L3314e4.  call temp:= `b`(v1, v2) @signature `Lokhttp3/g0$a;.b:(Lokhttp3/h0;)Lokhttp3/g0$a;` @kind virtual;
  #L3314ea.  v1:= temp @kind object;
  #L3314ec.  v2:= -1L;
  #L3314f0.  call temp:= `r`(v1, v2) @signature `Lokhttp3/g0$a;.r:(J)Lokhttp3/g0$a;` @kind virtual;
  #L3314f6.  v1:= temp @kind object;
  #L3314f8.  call temp:= `p`(v1, v2) @signature `Lokhttp3/g0$a;.p:(J)Lokhttp3/g0$a;` @kind virtual;
  #L3314fe.  v1:= temp @kind object;
  #L331500.  v2:= "Proxy-Authenticate" @kind object;
  #L331504.  v3:= "OkHttp-Preemptive" @kind object;
  #L331508.  call temp:= `i`(v1, v2, v3) @signature `Lokhttp3/g0$a;.i:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L33150e.  v1:= temp @kind object;
  #L331510.  call temp:= `c`(v1) @signature `Lokhttp3/g0$a;.c:()Lokhttp3/g0;` @kind virtual;
  #L331516.  v1:= temp @kind object;
  #L331518.  v2:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33151c.  call temp:= `a`(v2) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331522.  v2:= temp @kind object;
  #L331524.  call temp:= `h`(v2) @signature `Lokhttp3/a;.h:()Lokhttp3/d;` @kind virtual;
  #L33152a.  v2:= temp @kind object;
  #L33152c.  v3:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331530.  call temp:= `a`(v2, v3, v1) @signature `Lokhttp3/d;.a:(Lokhttp3/i0;Lokhttp3/g0;)Lokhttp3/e0;` @kind interface;
  #L331536.  v1:= temp @kind object;
  #L331538.  if v1 == 0 then goto L33153e;
  #L33153c.  v0:= v1 @kind object;
  #L33153e.  return v0 @kind object;
}
procedure `void` `j`(`okhttp3.internal.connection.e` v1 @kind this, `okhttp3.internal.connection.b` v2 @kind object, `int` v3 , `okhttp3.f` v4 @kind object, `okhttp3.u` v5 @kind object) @signature `Lokhttp3/internal/connection/e;.j:(Lokhttp3/internal/connection/b;ILokhttp3/f;Lokhttp3/u;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L331d80.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331d84.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331d8a.  v0:= temp @kind object;
  #L331d8c.  call temp:= `k`(v0) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L331d92.  v0:= temp @kind object;
  #L331d94.  if v0 != 0 then goto L331de2;
  #L331d98.  v2:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331d9c.  call temp:= `a`(v2) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331da2.  v2:= temp @kind object;
  #L331da4.  call temp:= `f`(v2) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L331daa.  v2:= temp @kind object;
  #L331dac.  v4:= `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.c0` @kind object;
  #L331db0.  call temp:= `contains`(v2, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L331db6.  v2:= temp;
  #L331db8.  if v2 == 0 then goto L331dd0;
  #L331dbc.  v2:= v1.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331dc0.  v1.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` := v2 @kind object;
  #L331dc4.  v1.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` := v4 @kind object;
  #L331dc8.  call `t`(v1, v3) @signature `Lokhttp3/internal/connection/e;.t:(I)V` @kind direct;
  #L331dce.  return @kind void;
  #L331dd0.  v2:= v1.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L331dd4.  v1.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` := v2 @kind object;
  #L331dd8.  v2:= `@@okhttp3.c0.HTTP_1_1` @type ^`okhttp3.c0` @kind object;
  #L331ddc.  v1.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` := v2 @kind object;
  #L331de0.  return @kind void;
  #L331de2.  call `y`(v5, v4) @signature `Lokhttp3/u;.y:(Lokhttp3/f;)V` @kind virtual;
  #L331de8.  call `f`(v1, v2) @signature `Lokhttp3/internal/connection/e;.f:(Lokhttp3/internal/connection/b;)V` @kind direct;
  #L331dee.  v2:= v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` @kind object;
  #L331df2.  call `x`(v5, v4, v2) @signature `Lokhttp3/u;.x:(Lokhttp3/f;Lokhttp3/v;)V` @kind virtual;
  #L331df8.  v2:= v1.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` @kind object;
  #L331dfc.  v4:= `@@okhttp3.c0.HTTP_2` @type ^`okhttp3.c0` @kind object;
  #L331e00.  if v2 != v4 then goto L331e0a;
  #L331e04.  call `t`(v1, v3) @signature `Lokhttp3/internal/connection/e;.t:(I)V` @kind direct;
  #L331e0a.  return @kind void;
}
procedure `boolean` `r`(`okhttp3.internal.connection.e` v6 @kind this, `java.util.List` v7 @kind object) @signature `Lokhttp3/internal/connection/e;.r:(Ljava/util/List;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L330f94.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330f9a.  v0:= temp;
  #L330f9c.  v1:= 0I;
  #L330f9e.  v2:= 0I;
  #L330fa0.  if v2 >= v0 then goto L33100e;
  #L330fa4.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L330faa.  v3:= temp @kind object;
  #L330fac.  v3:= (`okhttp3.i0`) v3 @kind object;
  #L330fb0.  call temp:= `b`(v3) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L330fb6.  v4:= temp @kind object;
  #L330fb8.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L330fbe.  v4:= temp @kind object;
  #L330fc0.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L330fc4.  if v4 != v5 then goto L331008;
  #L330fc8.  v4:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L330fcc.  call temp:= `b`(v4) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L330fd2.  v4:= temp @kind object;
  #L330fd4.  call temp:= `type`(v4) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L330fda.  v4:= temp @kind object;
  #L330fdc.  v5:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L330fe0.  if v4 != v5 then goto L331008;
  #L330fe4.  v4:= v6.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L330fe8.  call temp:= `d`(v4) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L330fee.  v4:= temp @kind object;
  #L330ff0.  call temp:= `d`(v3) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L330ff6.  v3:= temp @kind object;
  #L330ff8.  call temp:= `equals`(v4, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330ffe.  v3:= temp;
  #L331000.  if v3 == 0 then goto L331008;
  #L331004.  v7:= 1I;
  #L331006.  return v7;
  #L331008.  v2:= v2 + 1;
  #L33100c.  goto L330fa0;
  #L33100e.  return v1;
}
procedure `void` `t`(`okhttp3.internal.connection.e` v5 @kind this, `int` v6 ) @signature `Lokhttp3/internal/connection/e;.t:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L331ea8.  v0:= v5.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L331eac.  v1:= 0I;
  #L331eae.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L331eb4.  v0:= new `ie.f$h`;
  #L331eb8.  v1:= 1I;
  #L331eba.  call `<init>`(v0, v1) @signature `Lie/f$h;.<init>:(Z)V` @kind direct;
  #L331ec0.  v1:= v5.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L331ec4.  v2:= v5.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331ec8.  call temp:= `a`(v2) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331ece.  v2:= temp @kind object;
  #L331ed0.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331ed6.  v2:= temp @kind object;
  #L331ed8.  call temp:= `l`(v2) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331ede.  v2:= temp @kind object;
  #L331ee0.  v3:= v5.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L331ee4.  v4:= v5.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L331ee8.  call temp:= `d`(v0, v1, v2, v3, v4) @signature `Lie/f$h;.d:(Ljava/net/Socket;Ljava/lang/String;Lokio/e;Lokio/d;)Lie/f$h;` @kind virtual;
  #L331eee.  v0:= temp @kind object;
  #L331ef0.  call temp:= `b`(v0, v5) @signature `Lie/f$h;.b:(Lie/f$j;)Lie/f$h;` @kind virtual;
  #L331ef6.  v0:= temp @kind object;
  #L331ef8.  call temp:= `c`(v0, v6) @signature `Lie/f$h;.c:(I)Lie/f$h;` @kind virtual;
  #L331efe.  v6:= temp @kind object;
  #L331f00.  call temp:= `a`(v6) @signature `Lie/f$h;.a:()Lie/f;` @kind virtual;
  #L331f06.  v6:= temp @kind object;
  #L331f08.  v5.`okhttp3.internal.connection.e.h` @type ^`ie.f` := v6 @kind object;
  #L331f0c.  call `Q0`(v6) @signature `Lie/f;.Q0:()V` @kind virtual;
  #L331f12.  return @kind void;
}
procedure `void` `a`(`okhttp3.internal.connection.e` v1 @kind this, `ie.f` v2 @kind object) @signature `Lokhttp3/internal/connection/e;.a:(Lie/f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331e50.  v0:= v1.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L331e54.  @monitorenter v0
  #L331e56.  call temp:= `d0`(v2) @signature `Lie/f;.d0:()I` @kind virtual;
  #L331e5c.  v2:= temp;
  #L331e5e.  v1.`okhttp3.internal.connection.e.o` @type ^`int` := v2;
  #L331e62.  @monitorexit v0
  #L331e64.  return @kind void;
  #L331e66.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331e68.  @monitorexit v0
  #L331e6a.  throw v2;
  catch `java.lang.Throwable` @[L331e56..L331e6a] goto L331e66;
}
procedure `void` `b`(`okhttp3.internal.connection.e` v2 @kind this, `ie.i` v3 @kind object) @signature `Lokhttp3/internal/connection/e;.b:(Lie/i;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L331e88.  v0:= `@@ie.b.REFUSED_STREAM` @type ^`ie.b` @kind object;
  #L331e8c.  v1:= 0I;
  #L331e8e.  call `d`(v3, v0, v1) @signature `Lie/i;.d:(Lie/b;Ljava/io/IOException;)V` @kind virtual;
  #L331e94.  return @kind void;
}
procedure `void` `c`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3315c0.  v0:= v1.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L3315c4.  call `h`(v0) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L3315ca.  return @kind void;
}
procedure `void` `d`(`okhttp3.internal.connection.e` v16 @kind this, `int` v17 , `int` v18 , `int` v19 , `int` v20 , `boolean` v21 , `okhttp3.f` v22 @kind object, `okhttp3.u` v23 @kind object) @signature `Lokhttp3/internal/connection/e;.d:(IIIIZLokhttp3/f;Lokhttp3/u;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3315dc.  v7:= v16 @kind object;
  #L3315e0.  v8:= v22 @kind object;
  #L3315e4.  v9:= v23 @kind object;
  #L3315e8.  v0:= v7.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` @kind object;
  #L3315ec.  if v0 != 0 then goto L33187c;
  #L3315f0.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3315f4.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L3315fa.  v0:= temp @kind object;
  #L3315fc.  call temp:= `b`(v0) @signature `Lokhttp3/a;.b:()Ljava/util/List;` @kind virtual;
  #L331602.  v0:= temp @kind object;
  #L331604.  v10:= new `okhttp3.internal.connection.b`;
  #L331608.  call `<init>`(v10, v0) @signature `Lokhttp3/internal/connection/b;.<init>:(Ljava/util/List;)V` @kind direct;
  #L33160e.  v1:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331612.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331618.  v1:= temp @kind object;
  #L33161a.  call temp:= `k`(v1) @signature `Lokhttp3/a;.k:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L331620.  v1:= temp @kind object;
  #L331622.  if v1 != 0 then goto L3316c4;
  #L331626.  v1:= `@@okhttp3.m.i` @type ^`okhttp3.m` @kind object;
  #L33162a.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L331630.  v0:= temp;
  #L331632.  if v0 == 0 then goto L3316aa;
  #L331636.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33163a.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331640.  v0:= temp @kind object;
  #L331642.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331648.  v0:= temp @kind object;
  #L33164a.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331650.  v0:= temp @kind object;
  #L331652.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L331658.  v1:= temp @kind object;
  #L33165a.  call temp:= `q`(v1, v0) @signature `Lokhttp3/internal/platform/e;.q:(Ljava/lang/String;)Z` @kind virtual;
  #L331660.  v1:= temp;
  #L331662.  if v1 == 0 then goto L331668;
  #L331666.  goto L3316e8;
  #L331668.  v1:= new `okhttp3.internal.connection.i`;
  #L33166c.  v2:= new `java.net.UnknownServiceException`;
  #L331670.  v3:= new `java.lang.StringBuilder`;
  #L331674.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33167a.  v4:= "CLEARTEXT communication to " @kind object;
  #L33167e.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331684.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33168a.  v0:= " not permitted by network security policy" @kind object;
  #L33168e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331694.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33169a.  v0:= temp @kind object;
  #L33169c.  call `<init>`(v2, v0) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3316a2.  call `<init>`(v1, v2) @signature `Lokhttp3/internal/connection/i;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3316a8.  throw v1;
  #L3316aa.  v0:= new `okhttp3.internal.connection.i`;
  #L3316ae.  v1:= new `java.net.UnknownServiceException`;
  #L3316b2.  v2:= "CLEARTEXT communication not enabled for client" @kind object;
  #L3316b6.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3316bc.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/i;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L3316c2.  throw v0;
  #L3316c4.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3316c8.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L3316ce.  v0:= temp @kind object;
  #L3316d0.  call temp:= `f`(v0) @signature `Lokhttp3/a;.f:()Ljava/util/List;` @kind virtual;
  #L3316d6.  v0:= temp @kind object;
  #L3316d8.  v1:= `@@okhttp3.c0.H2_PRIOR_KNOWLEDGE` @type ^`okhttp3.c0` @kind object;
  #L3316dc.  call temp:= `contains`(v0, v1) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3316e2.  v0:= temp;
  #L3316e4.  if v0 != 0 then goto L331862;
  #L3316e8.  v11:= 0I;
  #L3316ea.  v12:= v11 @kind object;
  #L3316ec.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3316f0.  call temp:= `c`(v0) @signature `Lokhttp3/i0;.c:()Z` @kind virtual;
  #L3316f6.  v0:= temp;
  #L3316f8.  if v0 == 0 then goto L33172e;
  #L3316fc.  v1:= v16 @kind object;
  #L331700.  v2:= v17;
  #L331704.  v3:= v18;
  #L331708.  v4:= v19;
  #L33170c.  v5:= v22 @kind object;
  #L331710.  v6:= v23 @kind object;
  #L331714.  call `g`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/internal/connection/e;.g:(IIILokhttp3/f;Lokhttp3/u;)V` @kind direct;
  #L33171a.  v0:= v7.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L33171e.  if v0 != 0 then goto L331724;
  #L331722.  goto L331768;
  #L331724.  v13:= v17;
  #L331728.  v14:= v18;
  #L33172c.  goto L33173c;
  #L33172e.  v13:= v17;
  #L331732.  v14:= v18;
  #L331736.  call `e`(v7, v13, v14, v8, v9) @signature `Lokhttp3/internal/connection/e;.e:(IILokhttp3/f;Lokhttp3/u;)V` @kind direct;
  #L33173c.  v15:= v20;
  #L331740.  call `j`(v7, v10, v15, v8, v9) @signature `Lokhttp3/internal/connection/e;.j:(Lokhttp3/internal/connection/b;ILokhttp3/f;Lokhttp3/u;)V` @kind direct;
  #L331746.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33174a.  call temp:= `d`(v0) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L331750.  v0:= temp @kind object;
  #L331752.  v1:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331756.  call temp:= `b`(v1) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L33175c.  v1:= temp @kind object;
  #L33175e.  v2:= v7.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` @kind object;
  #L331762.  call `e`(v9, v8, v0, v1, v2) @signature `Lokhttp3/u;.e:(Lokhttp3/f;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/c0;)V` @kind virtual;
  #L331768.  v0:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33176c.  call temp:= `c`(v0) @signature `Lokhttp3/i0;.c:()Z` @kind virtual;
  #L331772.  v0:= temp;
  #L331774.  if v0 == 0 then goto L33179c;
  #L331778.  v0:= v7.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L33177c.  if v0 == 0 then goto L331782;
  #L331780.  goto L33179c;
  #L331782.  v0:= new `java.net.ProtocolException`;
  #L331786.  v1:= "Too many tunnel connections attempted: 21" @kind object;
  #L33178a.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331790.  v1:= new `okhttp3.internal.connection.i`;
  #L331794.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/i;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L33179a.  throw v1;
  #L33179c.  v0:= v7.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L3317a0.  if v0 == 0 then goto L3317c4;
  #L3317a4.  v1:= v7.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L3317a8.  @monitorenter v1
  #L3317aa.  v0:= v7.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L3317ae.  call temp:= `d0`(v0) @signature `Lie/f;.d0:()I` @kind virtual;
  #L3317b4.  v0:= temp;
  #L3317b6.  v7.`okhttp3.internal.connection.e.o` @type ^`int` := v0;
  #L3317ba.  @monitorexit v1
  #L3317bc.  goto L3317c4;
  #L3317be.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3317c0.  @monitorexit v1
  #L3317c2.  throw v0;
  #L3317c4.  return @kind void;
  #L3317c6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3317c8.  goto L3317dc;
  #L3317ca.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3317cc.  goto L3317d8;
  #L3317ce.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3317d0.  v13:= v17;
  #L3317d4.  v14:= v18;
  #L3317d8.  v15:= v20;
  #L3317dc.  v1:= v7.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L3317e0.  call `h`(v1) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L3317e6.  v1:= v7.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` @kind object;
  #L3317ea.  call `h`(v1) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L3317f0.  v7.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` := v11 @kind object;
  #L3317f4.  v7.`okhttp3.internal.connection.e.d` @type ^`java.net.Socket` := v11 @kind object;
  #L3317f8.  v7.`okhttp3.internal.connection.e.i` @type ^`okio.e` := v11 @kind object;
  #L3317fc.  v7.`okhttp3.internal.connection.e.j` @type ^`okio.d` := v11 @kind object;
  #L331800.  v7.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` := v11 @kind object;
  #L331804.  v7.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` := v11 @kind object;
  #L331808.  v7.`okhttp3.internal.connection.e.h` @type ^`ie.f` := v11 @kind object;
  #L33180c.  v1:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331810.  call temp:= `d`(v1) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L331816.  v3:= temp @kind object;
  #L331818.  v1:= v7.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33181c.  call temp:= `b`(v1) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L331822.  v4:= temp @kind object;
  #L331824.  v5:= 0I;
  #L331826.  v1:= v23 @kind object;
  #L33182a.  v2:= v22 @kind object;
  #L33182e.  v6:= v0 @kind object;
  #L331830.  call `f`(v1, v2, v3, v4, v5, v6) @signature `Lokhttp3/u;.f:(Lokhttp3/f;Ljava/net/InetSocketAddress;Ljava/net/Proxy;Lokhttp3/c0;Ljava/io/IOException;)V` @kind virtual;
  #L331836.  if v12 != 0 then goto L331846;
  #L33183a.  v12:= new `okhttp3.internal.connection.i`;
  #L33183e.  call `<init>`(v12, v0) @signature `Lokhttp3/internal/connection/i;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L331844.  goto L33184c;
  #L331846.  call `addConnectException`(v12, v0) @signature `Lokhttp3/internal/connection/i;.addConnectException:(Ljava/io/IOException;)V` @kind virtual;
  #L33184c.  if v21 == 0 then goto L331860;
  #L331850.  call temp:= `b`(v10, v0) @signature `Lokhttp3/internal/connection/b;.b:(Ljava/io/IOException;)Z` @kind virtual;
  #L331856.  v0:= temp;
  #L331858.  if v0 == 0 then goto L331860;
  #L33185c.  goto L3316ec;
  #L331860.  throw v12;
  #L331862.  v0:= new `okhttp3.internal.connection.i`;
  #L331866.  v1:= new `java.net.UnknownServiceException`;
  #L33186a.  v2:= "H2_PRIOR_KNOWLEDGE cannot be used with HTTPS" @kind object;
  #L33186e.  call `<init>`(v1, v2) @signature `Ljava/net/UnknownServiceException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L331874.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/connection/i;.<init>:(Ljava/io/IOException;)V` @kind direct;
  #L33187a.  throw v0;
  #L33187c.  v0:= new `java.lang.IllegalStateException`;
  #L331880.  v1:= "already connected" @kind object;
  #L331884.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33188a.  throw v0;
  catch `java.io.IOException` @[L3316ec..L33171e] goto L3317ce;
  catch `java.io.IOException` @[L331736..L33173c] goto L3317ca;
  catch `java.io.IOException` @[L331740..L331768] goto L3317c6;
  catch `java.lang.Throwable` @[L3317aa..L3317c2] goto L3317be;
}
procedure `okhttp3.v` `k`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.k:()Lokhttp3/v;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331268.  v0:= v1.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` @kind object;
  #L33126c.  return v0 @kind object;
}
procedure `boolean` `l`(`okhttp3.internal.connection.e` v3 @kind this, `okhttp3.a` v4 @kind object, `java.util.List` v5 @kind object) @signature `Lokhttp3/internal/connection/e;.l:(Lokhttp3/a;Ljava/util/List;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L330d84.  v0:= v3.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L330d88.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330d8e.  v0:= temp;
  #L330d90.  v1:= v3.`okhttp3.internal.connection.e.o` @type ^`int`;
  #L330d94.  v2:= 0I;
  #L330d96.  if v0 >= v1 then goto L330e76;
  #L330d9a.  v0:= v3.`okhttp3.internal.connection.e.k` @type ^`boolean` @kind boolean;
  #L330d9e.  if v0 == 0 then goto L330da4;
  #L330da2.  goto L330e76;
  #L330da4.  v0:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L330da8.  v1:= v3.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L330dac.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L330db2.  v1:= temp @kind object;
  #L330db4.  call temp:= `e`(v0, v1, v4) @signature `Lee/a;.e:(Lokhttp3/a;Lokhttp3/a;)Z` @kind virtual;
  #L330dba.  v0:= temp;
  #L330dbc.  if v0 != 0 then goto L330dc2;
  #L330dc0.  return v2;
  #L330dc2.  call temp:= `l`(v4) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330dc8.  v0:= temp @kind object;
  #L330dca.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L330dd0.  v0:= temp @kind object;
  #L330dd2.  call temp:= `q`(v3) @signature `Lokhttp3/internal/connection/e;.q:()Lokhttp3/i0;` @kind virtual;
  #L330dd8.  v1:= temp @kind object;
  #L330dda.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L330de0.  v1:= temp @kind object;
  #L330de2.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330de8.  v1:= temp @kind object;
  #L330dea.  call temp:= `l`(v1) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L330df0.  v1:= temp @kind object;
  #L330df2.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330df8.  v0:= temp;
  #L330dfa.  v1:= 1I;
  #L330dfc.  if v0 == 0 then goto L330e02;
  #L330e00.  return v1;
  #L330e02.  v0:= v3.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L330e06.  if v0 != 0 then goto L330e0c;
  #L330e0a.  return v2;
  #L330e0c.  if v5 == 0 then goto L330e76;
  #L330e10.  call temp:= `r`(v3, v5) @signature `Lokhttp3/internal/connection/e;.r:(Ljava/util/List;)Z` @kind direct;
  #L330e16.  v5:= temp;
  #L330e18.  if v5 != 0 then goto L330e1e;
  #L330e1c.  goto L330e76;
  #L330e1e.  call temp:= `e`(v4) @signature `Lokhttp3/a;.e:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L330e24.  v5:= temp @kind object;
  #L330e26.  v0:= `@@ke.d.a` @type ^`ke.d` @kind object;
  #L330e2a.  if v5 == v0 then goto L330e30;
  #L330e2e.  return v2;
  #L330e30.  call temp:= `l`(v4) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330e36.  v5:= temp @kind object;
  #L330e38.  call temp:= `u`(v3, v5) @signature `Lokhttp3/internal/connection/e;.u:(Lokhttp3/x;)Z` @kind virtual;
  #L330e3e.  v5:= temp;
  #L330e40.  if v5 != 0 then goto L330e46;
  #L330e44.  return v2;
  #L330e46.  call temp:= `a`(v4) @signature `Lokhttp3/a;.a:()Lokhttp3/h;` @kind virtual;
  #L330e4c.  v5:= temp @kind object;
  #L330e4e.  call temp:= `l`(v4) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330e54.  v4:= temp @kind object;
  #L330e56.  call temp:= `l`(v4) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L330e5c.  v4:= temp @kind object;
  #L330e5e.  call temp:= `k`(v3) @signature `Lokhttp3/internal/connection/e;.k:()Lokhttp3/v;` @kind virtual;
  #L330e64.  v0:= temp @kind object;
  #L330e66.  call temp:= `d`(v0) @signature `Lokhttp3/v;.d:()Ljava/util/List;` @kind virtual;
  #L330e6c.  v0:= temp @kind object;
  #L330e6e.  call `a`(v5, v4, v0) @signature `Lokhttp3/h;.a:(Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L330e74.  return v1;
  #L330e76.  return v2;
  catch `javax.net.ssl.SSLPeerUnverifiedException` @[L330e46..L330e74] goto L330e76;
}
procedure `boolean` `m`(`okhttp3.internal.connection.e` v4 @kind this, `boolean` v5 ) @signature `Lokhttp3/internal/connection/e;.m:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L330e98.  v0:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330e9c.  call temp:= `isClosed`(v0) @signature `Ljava/net/Socket;.isClosed:()Z` @kind virtual;
  #L330ea2.  v0:= temp;
  #L330ea4.  v1:= 0I;
  #L330ea6.  if v0 != 0 then goto L330f3c;
  #L330eaa.  v0:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330eae.  call temp:= `isInputShutdown`(v0) @signature `Ljava/net/Socket;.isInputShutdown:()Z` @kind virtual;
  #L330eb4.  v0:= temp;
  #L330eb6.  if v0 != 0 then goto L330f3c;
  #L330eba.  v0:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330ebe.  call temp:= `isOutputShutdown`(v0) @signature `Ljava/net/Socket;.isOutputShutdown:()Z` @kind virtual;
  #L330ec4.  v0:= temp;
  #L330ec6.  if v0 == 0 then goto L330ecc;
  #L330eca.  goto L330f3c;
  #L330ecc.  v0:= v4.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L330ed0.  if v0 == 0 then goto L330ee6;
  #L330ed4.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L330eda.  v1:= temp @kind wide;
  #L330edc.  call temp:= `a0`(v0, v1) @signature `Lie/f;.a0:(J)Z` @kind virtual;
  #L330ee2.  v5:= temp;
  #L330ee4.  return v5;
  #L330ee6.  v0:= 1I;
  #L330ee8.  if v5 == 0 then goto L330f3a;
  #L330eec.  v5:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330ef0.  call temp:= `getSoTimeout`(v5) @signature `Ljava/net/Socket;.getSoTimeout:()I` @kind virtual;
  #L330ef6.  v5:= temp;
  #L330ef8.  v2:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330efc.  call `setSoTimeout`(v2, v0) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L330f02.  v2:= v4.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L330f06.  call temp:= `H`(v2) @signature `Lokio/e;.H:()Z` @kind interface;
  #L330f0c.  v2:= temp;
  #L330f0e.  if v2 == 0 then goto L330f1e;
  #L330f12.  v2:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330f16.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L330f1c.  return v1;
  #L330f1e.  v2:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330f22.  call `setSoTimeout`(v2, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L330f28.  return v0;
  #L330f2a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L330f2c.  v3:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L330f30.  call `setSoTimeout`(v3, v5) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L330f36.  throw v2;
  #L330f38.  return v1;
  #L330f3a.  return v0;
  #L330f3c.  return v1;
  catch `java.net.SocketTimeoutException` @[L330eec..L330ef8] goto L330f3a;
  catch `java.io.IOException` @[L330eec..L330ef8] goto L330f38;
  catch `java.lang.Throwable` @[L330ef8..L330f0e] goto L330f2a;
  catch `java.net.SocketTimeoutException` @[L330f12..L330f38] goto L330f3a;
  catch `java.io.IOException` @[L330f12..L330f38] goto L330f38;
}
procedure `boolean` `n`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.n:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L330f74.  v0:= v1.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L330f78.  if v0 == 0 then goto L330f80;
  #L330f7c.  v0:= 1I;
  #L330f7e.  goto L330f82;
  #L330f80.  v0:= 0I;
  #L330f82.  return v0;
}
procedure `ge.c` `o`(`okhttp3.internal.connection.e` v4 @kind this, `okhttp3.b0` v5 @kind object, `okhttp3.y$a` v6 @kind object) @signature `Lokhttp3/internal/connection/e;.o:(Lokhttp3/b0;Lokhttp3/y$a;)Lge/c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3310cc.  v0:= v4.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L3310d0.  if v0 == 0 then goto L3310e4;
  #L3310d4.  v0:= new `ie.g`;
  #L3310d8.  v1:= v4.`okhttp3.internal.connection.e.h` @type ^`ie.f` @kind object;
  #L3310dc.  call `<init>`(v0, v5, v4, v6, v1) @signature `Lie/g;.<init>:(Lokhttp3/b0;Lokhttp3/internal/connection/e;Lokhttp3/y$a;Lie/f;)V` @kind direct;
  #L3310e2.  return v0 @kind object;
  #L3310e4.  v0:= v4.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L3310e8.  call temp:= `a`(v6) @signature `Lokhttp3/y$a;.a:()I` @kind interface;
  #L3310ee.  v1:= temp;
  #L3310f0.  call `setSoTimeout`(v0, v1) @signature `Ljava/net/Socket;.setSoTimeout:(I)V` @kind virtual;
  #L3310f6.  v0:= v4.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L3310fa.  call temp:= `timeout`(v0) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L331100.  v0:= temp @kind object;
  #L331102.  call temp:= `a`(v6) @signature `Lokhttp3/y$a;.a:()I` @kind interface;
  #L331108.  v1:= temp;
  #L33110a.  v1:= (`long`) v1 @kind i2l;
  #L33110c.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L331110.  call temp:= `g`(v0, v1, v3) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L331116.  v0:= v4.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L33111a.  call temp:= `timeout`(v0) @signature `Lokio/u;.timeout:()Lokio/w;` @kind interface;
  #L331120.  v0:= temp @kind object;
  #L331122.  call temp:= `b`(v6) @signature `Lokhttp3/y$a;.b:()I` @kind interface;
  #L331128.  v6:= temp;
  #L33112a.  v1:= (`long`) v6 @kind i2l;
  #L33112c.  call temp:= `g`(v0, v1, v3) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L331132.  v6:= new `he.a`;
  #L331136.  v0:= v4.`okhttp3.internal.connection.e.i` @type ^`okio.e` @kind object;
  #L33113a.  v1:= v4.`okhttp3.internal.connection.e.j` @type ^`okio.d` @kind object;
  #L33113e.  call `<init>`(v6, v5, v4, v0, v1) @signature `Lhe/a;.<init>:(Lokhttp3/b0;Lokhttp3/internal/connection/e;Lokio/e;Lokio/d;)V` @kind direct;
  #L331144.  return v6 @kind object;
}
procedure `void` `p`(`okhttp3.internal.connection.e` v2 @kind this) @signature `Lokhttp3/internal/connection/e;.p:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L331e1c.  v0:= v2.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L331e20.  @monitorenter v0
  #L331e22.  v1:= 1I;
  #L331e24.  v2.`okhttp3.internal.connection.e.k` @type ^`boolean` := v1 @kind boolean;
  #L331e28.  @monitorexit v0
  #L331e2a.  return @kind void;
  #L331e2c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331e2e.  @monitorexit v0
  #L331e30.  throw v1;
  catch `java.lang.Throwable` @[L331e24..L331e30] goto L331e2c;
}
procedure `okhttp3.i0` `q`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.q:()Lokhttp3/i0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331550.  v0:= v1.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331554.  return v0 @kind object;
}
procedure `java.net.Socket` `s`(`okhttp3.internal.connection.e` v1 @kind this) @signature `Lokhttp3/internal/connection/e;.s:()Ljava/net/Socket;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L331250.  v0:= v1.`okhttp3.internal.connection.e.e` @type ^`java.net.Socket` @kind object;
  #L331254.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.internal.connection.e` v2 @kind this) @signature `Lokhttp3/internal/connection/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L331158.  v0:= new `java.lang.StringBuilder`;
  #L33115c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L331162.  v1:= "Connection{" @kind object;
  #L331166.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33116c.  v1:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331170.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331176.  v1:= temp @kind object;
  #L331178.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L33117e.  v1:= temp @kind object;
  #L331180.  call temp:= `l`(v1) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331186.  v1:= temp @kind object;
  #L331188.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33118e.  v1:= ":" @kind object;
  #L331192.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331198.  v1:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33119c.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L3311a2.  v1:= temp @kind object;
  #L3311a4.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L3311aa.  v1:= temp @kind object;
  #L3311ac.  call temp:= `x`(v1) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L3311b2.  v1:= temp;
  #L3311b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311ba.  v1:= ", proxy=" @kind object;
  #L3311be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311c4.  v1:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3311c8.  call temp:= `b`(v1) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L3311ce.  v1:= temp @kind object;
  #L3311d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311d6.  v1:= " hostAddress=" @kind object;
  #L3311da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311e0.  v1:= v2.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L3311e4.  call temp:= `d`(v1) @signature `Lokhttp3/i0;.d:()Ljava/net/InetSocketAddress;` @kind virtual;
  #L3311ea.  v1:= temp @kind object;
  #L3311ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311f2.  v1:= " cipherSuite=" @kind object;
  #L3311f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3311fc.  v1:= v2.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` @kind object;
  #L331200.  if v1 == 0 then goto L33120e;
  #L331204.  call temp:= `a`(v1) @signature `Lokhttp3/v;.a:()Lokhttp3/j;` @kind virtual;
  #L33120a.  v1:= temp @kind object;
  #L33120c.  goto L331212;
  #L33120e.  v1:= "none" @kind object;
  #L331212.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331218.  v1:= " protocol=" @kind object;
  #L33121c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L331222.  v1:= v2.`okhttp3.internal.connection.e.g` @type ^`okhttp3.c0` @kind object;
  #L331226.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33122c.  v1:= 125I;
  #L331230.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L331236.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33123c.  v0:= temp @kind object;
  #L33123e.  return v0 @kind object;
}
procedure `boolean` `u`(`okhttp3.internal.connection.e` v4 @kind this, `okhttp3.x` v5 @kind object) @signature `Lokhttp3/internal/connection/e;.u:(Lokhttp3/x;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L331020.  call temp:= `x`(v5) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L331026.  v0:= temp;
  #L331028.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L33102c.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L331032.  v1:= temp @kind object;
  #L331034.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L33103a.  v1:= temp @kind object;
  #L33103c.  call temp:= `x`(v1) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L331042.  v1:= temp;
  #L331044.  v2:= 0I;
  #L331046.  if v0 == v1 then goto L33104c;
  #L33104a.  return v2;
  #L33104c.  call temp:= `l`(v5) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331052.  v0:= temp @kind object;
  #L331054.  v1:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331058.  call temp:= `a`(v1) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L33105e.  v1:= temp @kind object;
  #L331060.  call temp:= `l`(v1) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L331066.  v1:= temp @kind object;
  #L331068.  call temp:= `l`(v1) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L33106e.  v1:= temp @kind object;
  #L331070.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L331076.  v0:= temp;
  #L331078.  v1:= 1I;
  #L33107a.  if v0 != 0 then goto L3310ba;
  #L33107e.  v0:= v4.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` @kind object;
  #L331082.  if v0 == 0 then goto L3310b8;
  #L331086.  v0:= `@@ke.d.a` @type ^`ke.d` @kind object;
  #L33108a.  call temp:= `l`(v5) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L331090.  v5:= temp @kind object;
  #L331092.  v3:= v4.`okhttp3.internal.connection.e.f` @type ^`okhttp3.v` @kind object;
  #L331096.  call temp:= `d`(v3) @signature `Lokhttp3/v;.d:()Ljava/util/List;` @kind virtual;
  #L33109c.  v3:= temp @kind object;
  #L33109e.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3310a4.  v3:= temp @kind object;
  #L3310a6.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L3310aa.  call temp:= `c`(v0, v5, v3) @signature `Lke/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L3310b0.  v5:= temp;
  #L3310b2.  if v5 == 0 then goto L3310b8;
  #L3310b6.  v2:= 1I;
  #L3310b8.  return v2;
  #L3310ba.  return v1;
}
procedure `void` `v`(`okhttp3.internal.connection.e` v4 @kind this, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/e;.v:(Ljava/io/IOException;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L331f24.  v0:= v4.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L331f28.  @monitorenter v0
  #L331f2a.  v1:= instanceof @variable v5 @type ^`ie.n` @kind boolean;
  #L331f2e.  v2:= 1I;
  #L331f30.  if v1 == 0 then goto L331f7a;
  #L331f34.  v5:= (`ie.n`) v5 @kind object;
  #L331f38.  v5:= v5.`ie.n.errorCode` @type ^`ie.b` @kind object;
  #L331f3c.  v1:= `@@ie.b.REFUSED_STREAM` @type ^`ie.b` @kind object;
  #L331f40.  if v5 != v1 then goto L331f62;
  #L331f44.  v5:= v4.`okhttp3.internal.connection.e.n` @type ^`int`;
  #L331f48.  v5:= v5 + v2 @kind int;
  #L331f4a.  v4.`okhttp3.internal.connection.e.n` @type ^`int` := v5;
  #L331f4e.  if v5 <= v2 then goto L331fb6;
  #L331f52.  v4.`okhttp3.internal.connection.e.k` @type ^`boolean` := v2 @kind boolean;
  #L331f56.  v5:= v4.`okhttp3.internal.connection.e.l` @type ^`int`;
  #L331f5a.  v5:= v5 + v2 @kind int;
  #L331f5c.  v4.`okhttp3.internal.connection.e.l` @type ^`int` := v5;
  #L331f60.  goto L331fb6;
  #L331f62.  v1:= `@@ie.b.CANCEL` @type ^`ie.b` @kind object;
  #L331f66.  if v5 == v1 then goto L331fb6;
  #L331f6a.  v4.`okhttp3.internal.connection.e.k` @type ^`boolean` := v2 @kind boolean;
  #L331f6e.  v5:= v4.`okhttp3.internal.connection.e.l` @type ^`int`;
  #L331f72.  v5:= v5 + v2 @kind int;
  #L331f74.  v4.`okhttp3.internal.connection.e.l` @type ^`int` := v5;
  #L331f78.  goto L331fb6;
  #L331f7a.  call temp:= `n`(v4) @signature `Lokhttp3/internal/connection/e;.n:()Z` @kind virtual;
  #L331f80.  v1:= temp;
  #L331f82.  if v1 == 0 then goto L331f8e;
  #L331f86.  v1:= instanceof @variable v5 @type ^`ie.a` @kind boolean;
  #L331f8a.  if v1 == 0 then goto L331fb6;
  #L331f8e.  v4.`okhttp3.internal.connection.e.k` @type ^`boolean` := v2 @kind boolean;
  #L331f92.  v1:= v4.`okhttp3.internal.connection.e.m` @type ^`int`;
  #L331f96.  if v1 != 0 then goto L331fb6;
  #L331f9a.  if v5 == 0 then goto L331fac;
  #L331f9e.  v1:= v4.`okhttp3.internal.connection.e.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L331fa2.  v3:= v4.`okhttp3.internal.connection.e.c` @type ^`okhttp3.i0` @kind object;
  #L331fa6.  call `c`(v1, v3, v5) @signature `Lokhttp3/internal/connection/g;.c:(Lokhttp3/i0;Ljava/io/IOException;)V` @kind virtual;
  #L331fac.  v5:= v4.`okhttp3.internal.connection.e.l` @type ^`int`;
  #L331fb0.  v5:= v5 + v2 @kind int;
  #L331fb2.  v4.`okhttp3.internal.connection.e.l` @type ^`int` := v5;
  #L331fb6.  @monitorexit v0
  #L331fb8.  return @kind void;
  #L331fba.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L331fbc.  @monitorexit v0
  #L331fbe.  throw v5;
  catch `java.lang.Throwable` @[L331f2a..L331fbe] goto L331fba;
}
