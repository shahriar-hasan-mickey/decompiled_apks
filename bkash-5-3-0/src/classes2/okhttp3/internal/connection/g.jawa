record `okhttp3.internal.connection.g` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.internal.connection.g.a` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.g.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `okhttp3.internal.connection.g.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Deque` `okhttp3.internal.connection.g.d` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.h` `okhttp3.internal.connection.g.e` @AccessFlag FINAL;
  `boolean` `okhttp3.internal.connection.g.f` @AccessFlag ;
}
global `java.util.concurrent.Executor` `@@okhttp3.internal.connection.g.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L330b8c.  v8:= new `java.util.concurrent.ThreadPoolExecutor`;
  #L330b90.  v1:= 0I;
  #L330b92.  v2:= 2147483647I;
  #L330b98.  v3:= 60L;
  #L330b9c.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L330ba0.  v6:= new `java.util.concurrent.SynchronousQueue`;
  #L330ba4.  call `<init>`(v6) @signature `Ljava/util/concurrent/SynchronousQueue;.<init>:()V` @kind direct;
  #L330baa.  v0:= 1I;
  #L330bac.  v7:= "OkHttp ConnectionPool" @kind object;
  #L330bb0.  call temp:= `I`(v7, v0) @signature `Lee/e;.I:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L330bb6.  v7:= temp @kind object;
  #L330bb8.  v0:= v8 @kind object;
  #L330bba.  call `<init>`(v0, v1, v2, v3, v5, v6, v7) @signature `Ljava/util/concurrent/ThreadPoolExecutor;.<init>:(IIJLjava/util/concurrent/TimeUnit;Ljava/util/concurrent/BlockingQueue;Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L330bc0.  `@@okhttp3.internal.connection.g.g` @type ^`java.util.concurrent.Executor` := v8 @kind object;
  #L330bc4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.g` v2 @kind this, `int` v3 , `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lokhttp3/internal/connection/g;.<init>:(IJLjava/util/concurrent/TimeUnit;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L330bd8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L330bde.  v0:= new `okhttp3.internal.connection.f`;
  #L330be2.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/connection/f;.<init>:(Lokhttp3/internal/connection/g;)V` @kind direct;
  #L330be8.  v2.`okhttp3.internal.connection.g.c` @type ^`java.lang.Runnable` := v0 @kind object;
  #L330bec.  v0:= new `java.util.ArrayDeque`;
  #L330bf0.  call `<init>`(v0) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L330bf6.  v2.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` := v0 @kind object;
  #L330bfa.  v0:= new `okhttp3.internal.connection.h`;
  #L330bfe.  call `<init>`(v0) @signature `Lokhttp3/internal/connection/h;.<init>:()V` @kind direct;
  #L330c04.  v2.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` := v0 @kind object;
  #L330c08.  v2.`okhttp3.internal.connection.g.a` @type ^`int` := v3;
  #L330c0c.  call temp:= `toNanos`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L330c12.  v0:= temp @kind wide;
  #L330c14.  v2.`okhttp3.internal.connection.g.b` @type ^`long` := v0 @kind wide;
  #L330c18.  v0:= 0L;
  #L330c1c.  v3:= lcmp(v4, v0);
  #L330c20.  if v3 <= 0 then goto L330c26;
  #L330c24.  return @kind void;
  #L330c26.  v3:= new `java.lang.IllegalArgumentException`;
  #L330c2a.  v6:= new `java.lang.StringBuilder`;
  #L330c2e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L330c34.  v0:= "keepAliveDuration <= 0: " @kind object;
  #L330c38.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330c3e.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L330c44.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L330c4a.  v4:= temp @kind object;
  #L330c4c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L330c52.  throw v3;
}
procedure `void` `a`(`okhttp3.internal.connection.g` v0 @kind object) @signature `Lokhttp3/internal/connection/g;.a:(Lokhttp3/internal/connection/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L330b74.  call `e`(v0) @signature `Lokhttp3/internal/connection/g;.e:()V` @kind direct;
  #L330b7a.  return @kind void;
}
procedure `void` `e`(`okhttp3.internal.connection.g` v6 @kind this) @signature `Lokhttp3/internal/connection/g;.e:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L330cd0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L330cd6.  v0:= temp @kind wide;
  #L330cd8.  call temp:= `b`(v6, v0) @signature `Lokhttp3/internal/connection/g;.b:(J)J` @kind virtual;
  #L330cde.  v0:= temp @kind wide;
  #L330ce0.  v2:= -1L;
  #L330ce4.  v4:= lcmp(v0, v2);
  #L330ce8.  if v4 != 0 then goto L330cee;
  #L330cec.  return @kind void;
  #L330cee.  v2:= 0L;
  #L330cf2.  v4:= lcmp(v0, v2);
  #L330cf6.  if v4 <= 0 then goto L330cd0;
  #L330cfa.  v2:= 1000000L;
  #L330d00.  v4:= v0 / v2 @kind long;
  #L330d04.  v2:= v2 * v4 @kind long;
  #L330d08.  v0:= v0 - v2 @kind long;
  #L330d0a.  @monitorenter v6
  #L330d0c.  v1:= (`int`) v0 @kind l2i;
  #L330d0e.  call `wait`(v6, v4, v1) @signature `Ljava/lang/Object;.wait:(JI)V` @kind virtual;
  #L330d14.  goto L330d1a;
  #L330d16.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L330d18.  goto L330d1e;
  #L330d1a.  @monitorexit v6
  #L330d1c.  goto L330cd0;
  #L330d1e.  @monitorexit v6
  #L330d20.  throw v0;
  catch `java.lang.InterruptedException` @[L330d0e..L330d14] goto L330d1a;
  catch `java.lang.Throwable` @[L330d0e..L330d14] goto L330d16;
  catch `java.lang.Throwable` @[L330d1a..L330d20] goto L330d16;
}
procedure `int` `f`(`okhttp3.internal.connection.g` v6 @kind this, `okhttp3.internal.connection.e` v7 @kind object, `long` v8 ) @signature `Lokhttp3/internal/connection/g;.f:(Lokhttp3/internal/connection/e;J)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3309cc.  v0:= v7.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L3309d0.  v1:= 0I;
  #L3309d2.  v2:= 0I;
  #L3309d4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3309da.  v3:= temp;
  #L3309dc.  if v2 >= v3 then goto L330a7c;
  #L3309e0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3309e6.  v3:= temp @kind object;
  #L3309e8.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L3309ec.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3309f2.  v4:= temp @kind object;
  #L3309f4.  if v4 == 0 then goto L3309fe;
  #L3309f8.  v2:= v2 + 1;
  #L3309fc.  goto L3309d4;
  #L3309fe.  v3:= (`okhttp3.internal.connection.k$b`) v3 @kind object;
  #L330a02.  v4:= new `java.lang.StringBuilder`;
  #L330a06.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L330a0c.  v5:= "A connection to " @kind object;
  #L330a10.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330a16.  call temp:= `q`(v7) @signature `Lokhttp3/internal/connection/e;.q:()Lokhttp3/i0;` @kind virtual;
  #L330a1c.  v5:= temp @kind object;
  #L330a1e.  call temp:= `a`(v5) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L330a24.  v5:= temp @kind object;
  #L330a26.  call temp:= `l`(v5) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330a2c.  v5:= temp @kind object;
  #L330a2e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330a34.  v5:= " was leaked. Did you forget to close a response body?" @kind object;
  #L330a38.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L330a3e.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L330a44.  v4:= temp @kind object;
  #L330a46.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L330a4c.  v5:= temp @kind object;
  #L330a4e.  v3:= v3.`okhttp3.internal.connection.k$b.a` @type ^`java.lang.Object` @kind object;
  #L330a52.  call `t`(v5, v4, v3) @signature `Lokhttp3/internal/platform/e;.t:(Ljava/lang/String;Ljava/lang/Object;)V` @kind virtual;
  #L330a58.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L330a5e.  v3:= 1I;
  #L330a60.  v7.`okhttp3.internal.connection.e.k` @type ^`boolean` := v3 @kind boolean;
  #L330a64.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L330a6a.  v3:= temp;
  #L330a6c.  if v3 == 0 then goto L3309d4;
  #L330a70.  v2:= v6.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L330a74.  v8:= v8 - v2 @kind long;
  #L330a76.  v7.`okhttp3.internal.connection.e.q` @type ^`long` := v8 @kind wide;
  #L330a7a.  return v1;
  #L330a7c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330a82.  v7:= temp;
  #L330a84.  return v7;
}
procedure `long` `b`(`okhttp3.internal.connection.g` v11 @kind this, `long` v12 ) @signature `Lokhttp3/internal/connection/g;.b:(J)J` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L330a98.  @monitorenter v11
  #L330a9a.  v0:= v11.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L330a9e.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L330aa4.  v0:= temp @kind object;
  #L330aa6.  v1:= 0I;
  #L330aa8.  v2:= 0I;
  #L330aaa.  v3:= -9223372036854775808L;
  #L330aae.  v5:= 0I;
  #L330ab0.  v6:= 0I;
  #L330ab2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L330ab8.  v7:= temp;
  #L330aba.  if v7 == 0 then goto L330af6;
  #L330abe.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L330ac4.  v7:= temp @kind object;
  #L330ac6.  v7:= (`okhttp3.internal.connection.e`) v7 @kind object;
  #L330aca.  call temp:= `f`(v11, v7, v12) @signature `Lokhttp3/internal/connection/g;.f:(Lokhttp3/internal/connection/e;J)I` @kind direct;
  #L330ad0.  v8:= temp;
  #L330ad2.  if v8 <= 0 then goto L330adc;
  #L330ad6.  v6:= v6 + 1;
  #L330ada.  goto L330ab2;
  #L330adc.  v5:= v5 + 1;
  #L330ae0.  v8:= v7.`okhttp3.internal.connection.e.q` @type ^`long` @kind wide;
  #L330ae4.  v8:= v12 - v8 @kind long;
  #L330ae8.  v10:= lcmp(v8, v3);
  #L330aec.  if v10 <= 0 then goto L330ab2;
  #L330af0.  v2:= v7 @kind object;
  #L330af2.  v3:= v8 @kind wide;
  #L330af4.  goto L330ab2;
  #L330af6.  v12:= v11.`okhttp3.internal.connection.g.b` @type ^`long` @kind wide;
  #L330afa.  v0:= lcmp(v3, v12);
  #L330afe.  if v0 >= 0 then goto L330b2a;
  #L330b02.  v0:= v11.`okhttp3.internal.connection.g.a` @type ^`int`;
  #L330b06.  if v5 <= v0 then goto L330b0c;
  #L330b0a.  goto L330b2a;
  #L330b0c.  if v5 <= 0 then goto L330b16;
  #L330b10.  v12:= v12 - v3 @kind long;
  #L330b12.  @monitorexit v11
  #L330b14.  return v12 @kind wide;
  #L330b16.  if v6 <= 0 then goto L330b1e;
  #L330b1a.  @monitorexit v11
  #L330b1c.  return v12 @kind wide;
  #L330b1e.  v11.`okhttp3.internal.connection.g.f` @type ^`boolean` := v1 @kind boolean;
  #L330b22.  v12:= -1L;
  #L330b26.  @monitorexit v11
  #L330b28.  return v12 @kind wide;
  #L330b2a.  v12:= v11.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L330b2e.  call temp:= `remove`(v12, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L330b34.  @monitorexit v11
  #L330b36.  call temp:= `s`(v2) @signature `Lokhttp3/internal/connection/e;.s:()Ljava/net/Socket;` @kind virtual;
  #L330b3c.  v12:= temp @kind object;
  #L330b3e.  call `h`(v12) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L330b44.  v12:= 0L;
  #L330b48.  return v12 @kind wide;
  #L330b4a.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L330b4c.  @monitorexit v11
  #L330b4e.  throw v12;
  catch `java.lang.Throwable` @[L330a9a..L330b36] goto L330b4a;
  catch `java.lang.Throwable` @[L330b4c..L330b4e] goto L330b4a;
}
procedure `void` `c`(`okhttp3.internal.connection.g` v3 @kind this, `okhttp3.i0` v4 @kind object, `java.io.IOException` v5 @kind object) @signature `Lokhttp3/internal/connection/g;.c:(Lokhttp3/i0;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L330c64.  call temp:= `b`(v4) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L330c6a.  v0:= temp @kind object;
  #L330c6c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L330c72.  v0:= temp @kind object;
  #L330c74.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L330c78.  if v0 == v1 then goto L330cb2;
  #L330c7c.  call temp:= `a`(v4) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L330c82.  v0:= temp @kind object;
  #L330c84.  call temp:= `i`(v0) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @kind virtual;
  #L330c8a.  v1:= temp @kind object;
  #L330c8c.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L330c92.  v0:= temp @kind object;
  #L330c94.  call temp:= `E`(v0) @signature `Lokhttp3/x;.E:()Ljava/net/URI;` @kind virtual;
  #L330c9a.  v0:= temp @kind object;
  #L330c9c.  call temp:= `b`(v4) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L330ca2.  v2:= temp @kind object;
  #L330ca4.  call temp:= `address`(v2) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L330caa.  v2:= temp @kind object;
  #L330cac.  call `connectFailed`(v1, v0, v2, v5) @signature `Ljava/net/ProxySelector;.connectFailed:(Ljava/net/URI;Ljava/net/SocketAddress;Ljava/io/IOException;)V` @kind virtual;
  #L330cb2.  v5:= v3.`okhttp3.internal.connection.g.e` @type ^`okhttp3.internal.connection.h` @kind object;
  #L330cb6.  call `b`(v5, v4) @signature `Lokhttp3/internal/connection/h;.b:(Lokhttp3/i0;)V` @kind virtual;
  #L330cbc.  return @kind void;
}
procedure `boolean` `d`(`okhttp3.internal.connection.g` v1 @kind this, `okhttp3.internal.connection.e` v2 @kind object) @signature `Lokhttp3/internal/connection/g;.d:(Lokhttp3/internal/connection/e;)Z` @AccessFlag  {
    temp;
    v0;

  #L33092c.  v0:= v2.`okhttp3.internal.connection.e.k` @type ^`boolean` @kind boolean;
  #L330930.  if v0 != 0 then goto L330948;
  #L330934.  v0:= v1.`okhttp3.internal.connection.g.a` @type ^`int`;
  #L330938.  if v0 != 0 then goto L33093e;
  #L33093c.  goto L330948;
  #L33093e.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L330944.  v2:= 0I;
  #L330946.  return v2;
  #L330948.  v0:= v1.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L33094c.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Deque;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L330952.  v2:= 1I;
  #L330954.  return v2;
}
procedure `void` `g`(`okhttp3.internal.connection.g` v2 @kind this, `okhttp3.internal.connection.e` v3 @kind object) @signature `Lokhttp3/internal/connection/g;.g:(Lokhttp3/internal/connection/e;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L330d4c.  v0:= v2.`okhttp3.internal.connection.g.f` @type ^`boolean` @kind boolean;
  #L330d50.  if v0 != 0 then goto L330d68;
  #L330d54.  v0:= 1I;
  #L330d56.  v2.`okhttp3.internal.connection.g.f` @type ^`boolean` := v0 @kind boolean;
  #L330d5a.  v0:= `@@okhttp3.internal.connection.g.g` @type ^`java.util.concurrent.Executor` @kind object;
  #L330d5e.  v1:= v2.`okhttp3.internal.connection.g.c` @type ^`java.lang.Runnable` @kind object;
  #L330d62.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L330d68.  v0:= v2.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L330d6c.  call temp:= `add`(v0, v3) @signature `Ljava/util/Deque;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L330d72.  return @kind void;
}
procedure `boolean` `h`(`okhttp3.internal.connection.g` v3 @kind this, `okhttp3.a` v4 @kind object, `okhttp3.internal.connection.k` v5 @kind object, `java.util.List` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/g;.h:(Lokhttp3/a;Lokhttp3/internal/connection/k;Ljava/util/List;Z)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L330968.  v0:= v3.`okhttp3.internal.connection.g.d` @type ^`java.util.Deque` @kind object;
  #L33096c.  call temp:= `iterator`(v0) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L330972.  v0:= temp @kind object;
  #L330974.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L33097a.  v1:= temp;
  #L33097c.  if v1 == 0 then goto L3309b6;
  #L330980.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L330986.  v1:= temp @kind object;
  #L330988.  v1:= (`okhttp3.internal.connection.e`) v1 @kind object;
  #L33098c.  if v7 == 0 then goto L33099e;
  #L330990.  call temp:= `n`(v1) @signature `Lokhttp3/internal/connection/e;.n:()Z` @kind virtual;
  #L330996.  v2:= temp;
  #L330998.  if v2 != 0 then goto L33099e;
  #L33099c.  goto L330974;
  #L33099e.  call temp:= `l`(v1, v4, v6) @signature `Lokhttp3/internal/connection/e;.l:(Lokhttp3/a;Ljava/util/List;)Z` @kind virtual;
  #L3309a4.  v2:= temp;
  #L3309a6.  if v2 != 0 then goto L3309ac;
  #L3309aa.  goto L330974;
  #L3309ac.  call `a`(v5, v1) @signature `Lokhttp3/internal/connection/k;.a:(Lokhttp3/internal/connection/e;)V` @kind virtual;
  #L3309b2.  v4:= 1I;
  #L3309b4.  return v4;
  #L3309b6.  v4:= 0I;
  #L3309b8.  return v4;
}
