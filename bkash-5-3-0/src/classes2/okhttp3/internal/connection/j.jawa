record `okhttp3.internal.connection.j` @kind class @AccessFlag FINAL {
  `okhttp3.a` `okhttp3.internal.connection.j.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.h` `okhttp3.internal.connection.j.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.f` `okhttp3.internal.connection.j.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.u` `okhttp3.internal.connection.j.d` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.internal.connection.j.e` @AccessFlag PRIVATE;
  `int` `okhttp3.internal.connection.j.f` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.j.g` @AccessFlag PRIVATE;
  `java.util.List` `okhttp3.internal.connection.j.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.connection.j` v1 @kind this, `okhttp3.a` v2 @kind object, `okhttp3.internal.connection.h` v3 @kind object, `okhttp3.f` v4 @kind object, `okhttp3.u` v5 @kind object) @signature `Lokhttp3/internal/connection/j;.<init>:(Lokhttp3/a;Lokhttp3/internal/connection/h;Lokhttp3/f;Lokhttp3/u;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3323cc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3323d2.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3323d8.  v0:= temp @kind object;
  #L3323da.  v1.`okhttp3.internal.connection.j.e` @type ^`java.util.List` := v0 @kind object;
  #L3323de.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3323e4.  v0:= temp @kind object;
  #L3323e6.  v1.`okhttp3.internal.connection.j.g` @type ^`java.util.List` := v0 @kind object;
  #L3323ea.  v0:= new `java.util.ArrayList`;
  #L3323ee.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3323f4.  v1.`okhttp3.internal.connection.j.h` @type ^`java.util.List` := v0 @kind object;
  #L3323f8.  v1.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` := v2 @kind object;
  #L3323fc.  v1.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.h` := v3 @kind object;
  #L332400.  v1.`okhttp3.internal.connection.j.c` @type ^`okhttp3.f` := v4 @kind object;
  #L332404.  v1.`okhttp3.internal.connection.j.d` @type ^`okhttp3.u` := v5 @kind object;
  #L332408.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L33240e.  v3:= temp @kind object;
  #L332410.  call temp:= `g`(v2) @signature `Lokhttp3/a;.g:()Ljava/net/Proxy;` @kind virtual;
  #L332416.  v2:= temp @kind object;
  #L332418.  call `g`(v1, v3, v2) @signature `Lokhttp3/internal/connection/j;.g:(Lokhttp3/x;Ljava/net/Proxy;)V` @kind direct;
  #L33241e.  return @kind void;
}
procedure `java.lang.String` `a`(`java.net.InetSocketAddress` v1 @kind object) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;

  #L33222c.  call temp:= `getAddress`(v1) @signature `Ljava/net/InetSocketAddress;.getAddress:()Ljava/net/InetAddress;` @kind virtual;
  #L332232.  v0:= temp @kind object;
  #L332234.  if v0 != 0 then goto L332242;
  #L332238.  call temp:= `getHostName`(v1) @signature `Ljava/net/InetSocketAddress;.getHostName:()Ljava/lang/String;` @kind virtual;
  #L33223e.  v1:= temp @kind object;
  #L332240.  return v1 @kind object;
  #L332242.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L332248.  v1:= temp @kind object;
  #L33224a.  return v1 @kind object;
}
procedure `boolean` `c`(`okhttp3.internal.connection.j` v2 @kind this) @signature `Lokhttp3/internal/connection/j;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L332200.  v0:= v2.`okhttp3.internal.connection.j.f` @type ^`int`;
  #L332204.  v1:= v2.`okhttp3.internal.connection.j.e` @type ^`java.util.List` @kind object;
  #L332208.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33220e.  v1:= temp;
  #L332210.  if v0 >= v1 then goto L332218;
  #L332214.  v0:= 1I;
  #L332216.  goto L33221a;
  #L332218.  v0:= 0I;
  #L33221a.  return v0;
}
procedure `java.net.Proxy` `e`(`okhttp3.internal.connection.j` v3 @kind this) @signature `Lokhttp3/internal/connection/j;.e:()Ljava/net/Proxy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L33225c.  call temp:= `c`(v3) @signature `Lokhttp3/internal/connection/j;.c:()Z` @kind direct;
  #L332262.  v0:= temp;
  #L332264.  if v0 == 0 then goto L33228c;
  #L332268.  v0:= v3.`okhttp3.internal.connection.j.e` @type ^`java.util.List` @kind object;
  #L33226c.  v1:= v3.`okhttp3.internal.connection.j.f` @type ^`int`;
  #L332270.  v2:= v1 + 1;
  #L332274.  v3.`okhttp3.internal.connection.j.f` @type ^`int` := v2;
  #L332278.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L33227e.  v0:= temp @kind object;
  #L332280.  v0:= (`java.net.Proxy`) v0 @kind object;
  #L332284.  call `f`(v3, v0) @signature `Lokhttp3/internal/connection/j;.f:(Ljava/net/Proxy;)V` @kind direct;
  #L33228a.  return v0 @kind object;
  #L33228c.  v0:= new `java.net.SocketException`;
  #L332290.  v1:= new `java.lang.StringBuilder`;
  #L332294.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33229a.  v2:= "No route to " @kind object;
  #L33229e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3322a4.  v2:= v3.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L3322a8.  call temp:= `l`(v2) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L3322ae.  v2:= temp @kind object;
  #L3322b0.  call temp:= `l`(v2) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L3322b6.  v2:= temp @kind object;
  #L3322b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3322be.  v2:= "; exhausted proxy configurations: " @kind object;
  #L3322c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3322c8.  v2:= v3.`okhttp3.internal.connection.j.e` @type ^`java.util.List` @kind object;
  #L3322cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3322d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3322d8.  v1:= temp @kind object;
  #L3322da.  call `<init>`(v0, v1) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3322e0.  throw v0;
}
procedure `void` `f`(`okhttp3.internal.connection.j` v6 @kind this, `java.net.Proxy` v7 @kind object) @signature `Lokhttp3/internal/connection/j;.f:(Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L332430.  v0:= new `java.util.ArrayList`;
  #L332434.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33243a.  v6.`okhttp3.internal.connection.j.g` @type ^`java.util.List` := v0 @kind object;
  #L33243e.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L332444.  v0:= temp @kind object;
  #L332446.  v1:= `@@java.net.Proxy$Type.DIRECT` @type ^`java.net.Proxy$Type` @kind object;
  #L33244a.  if v0 == v1 then goto L3324bc;
  #L33244e.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L332454.  v0:= temp @kind object;
  #L332456.  v1:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L33245a.  if v0 != v1 then goto L332460;
  #L33245e.  goto L3324bc;
  #L332460.  call temp:= `address`(v7) @signature `Ljava/net/Proxy;.address:()Ljava/net/SocketAddress;` @kind virtual;
  #L332466.  v0:= temp @kind object;
  #L332468.  v1:= instanceof @variable v0 @type ^`java.net.InetSocketAddress` @kind boolean;
  #L33246c.  if v1 == 0 then goto L332486;
  #L332470.  v0:= (`java.net.InetSocketAddress`) v0 @kind object;
  #L332474.  call temp:= `a`(v0) @signature `Lokhttp3/internal/connection/j;.a:(Ljava/net/InetSocketAddress;)Ljava/lang/String;` @kind static;
  #L33247a.  v1:= temp @kind object;
  #L33247c.  call temp:= `getPort`(v0) @signature `Ljava/net/InetSocketAddress;.getPort:()I` @kind virtual;
  #L332482.  v0:= temp;
  #L332484.  goto L3324e4;
  #L332486.  v7:= new `java.lang.IllegalArgumentException`;
  #L33248a.  v1:= new `java.lang.StringBuilder`;
  #L33248e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L332494.  v2:= "Proxy.address() is not an InetSocketAddress: " @kind object;
  #L332498.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33249e.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3324a4.  v0:= temp @kind object;
  #L3324a6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3324ac.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3324b2.  v0:= temp @kind object;
  #L3324b4.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3324ba.  throw v7;
  #L3324bc.  v0:= v6.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L3324c0.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L3324c6.  v0:= temp @kind object;
  #L3324c8.  call temp:= `l`(v0) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L3324ce.  v1:= temp @kind object;
  #L3324d0.  v0:= v6.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L3324d4.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L3324da.  v0:= temp @kind object;
  #L3324dc.  call temp:= `x`(v0) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L3324e2.  v0:= temp;
  #L3324e4.  v2:= 1I;
  #L3324e6.  if v0 < v2 then goto L3325ca;
  #L3324ea.  v2:= 65535I;
  #L3324f0.  if v0 > v2 then goto L3325ca;
  #L3324f4.  call temp:= `type`(v7) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L3324fa.  v7:= temp @kind object;
  #L3324fc.  v2:= `@@java.net.Proxy$Type.SOCKS` @type ^`java.net.Proxy$Type` @kind object;
  #L332500.  if v7 != v2 then goto L332518;
  #L332504.  v7:= v6.`okhttp3.internal.connection.j.g` @type ^`java.util.List` @kind object;
  #L332508.  call temp:= `createUnresolved`(v1, v0) @signature `Ljava/net/InetSocketAddress;.createUnresolved:(Ljava/lang/String;I)Ljava/net/InetSocketAddress;` @kind static;
  #L33250e.  v0:= temp @kind object;
  #L332510.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332516.  goto L332588;
  #L332518.  v7:= v6.`okhttp3.internal.connection.j.d` @type ^`okhttp3.u` @kind object;
  #L33251c.  v2:= v6.`okhttp3.internal.connection.j.c` @type ^`okhttp3.f` @kind object;
  #L332520.  call `k`(v7, v2, v1) @signature `Lokhttp3/u;.k:(Lokhttp3/f;Ljava/lang/String;)V` @kind virtual;
  #L332526.  v7:= v6.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L33252a.  call temp:= `c`(v7) @signature `Lokhttp3/a;.c:()Lokhttp3/s;` @kind virtual;
  #L332530.  v7:= temp @kind object;
  #L332532.  call temp:= `a`(v7, v1) @signature `Lokhttp3/s;.a:(Ljava/lang/String;)Ljava/util/List;` @kind interface;
  #L332538.  v7:= temp @kind object;
  #L33253a.  call temp:= `isEmpty`(v7) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L332540.  v2:= temp;
  #L332542.  if v2 != 0 then goto L33258a;
  #L332546.  v2:= v6.`okhttp3.internal.connection.j.d` @type ^`okhttp3.u` @kind object;
  #L33254a.  v3:= v6.`okhttp3.internal.connection.j.c` @type ^`okhttp3.f` @kind object;
  #L33254e.  call `j`(v2, v3, v1, v7) @signature `Lokhttp3/u;.j:(Lokhttp3/f;Ljava/lang/String;Ljava/util/List;)V` @kind virtual;
  #L332554.  v1:= 0I;
  #L332556.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33255c.  v2:= temp;
  #L33255e.  if v1 >= v2 then goto L332588;
  #L332562.  call temp:= `get`(v7, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L332568.  v3:= temp @kind object;
  #L33256a.  v3:= (`java.net.InetAddress`) v3 @kind object;
  #L33256e.  v4:= v6.`okhttp3.internal.connection.j.g` @type ^`java.util.List` @kind object;
  #L332572.  v5:= new `java.net.InetSocketAddress`;
  #L332576.  call `<init>`(v5, v3, v0) @signature `Ljava/net/InetSocketAddress;.<init>:(Ljava/net/InetAddress;I)V` @kind direct;
  #L33257c.  call temp:= `add`(v4, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332582.  v1:= v1 + 1;
  #L332586.  goto L33255e;
  #L332588.  return @kind void;
  #L33258a.  v7:= new `java.net.UnknownHostException`;
  #L33258e.  v0:= new `java.lang.StringBuilder`;
  #L332592.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L332598.  v2:= v6.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L33259c.  call temp:= `c`(v2) @signature `Lokhttp3/a;.c:()Lokhttp3/s;` @kind virtual;
  #L3325a2.  v2:= temp @kind object;
  #L3325a4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325aa.  v2:= " returned no addresses for " @kind object;
  #L3325ae.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325ba.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3325c0.  v0:= temp @kind object;
  #L3325c2.  call `<init>`(v7, v0) @signature `Ljava/net/UnknownHostException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3325c8.  throw v7;
  #L3325ca.  v7:= new `java.net.SocketException`;
  #L3325ce.  v2:= new `java.lang.StringBuilder`;
  #L3325d2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3325d8.  v3:= "No route to " @kind object;
  #L3325dc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325e2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325e8.  v1:= ":" @kind object;
  #L3325ec.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325f2.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3325f8.  v0:= "; port is out of range" @kind object;
  #L3325fc.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L332602.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L332608.  v0:= temp @kind object;
  #L33260a.  call `<init>`(v7, v0) @signature `Ljava/net/SocketException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332610.  throw v7;
}
procedure `void` `g`(`okhttp3.internal.connection.j` v1 @kind this, `okhttp3.x` v2 @kind object, `java.net.Proxy` v3 @kind object) @signature `Lokhttp3/internal/connection/j;.g:(Lokhttp3/x;Ljava/net/Proxy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L332624.  v0:= 0I;
  #L332626.  if v3 == 0 then goto L332638;
  #L33262a.  call temp:= `singletonList`(v3) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L332630.  v2:= temp @kind object;
  #L332632.  v1.`okhttp3.internal.connection.j.e` @type ^`java.util.List` := v2 @kind object;
  #L332636.  goto L332688;
  #L332638.  v3:= v1.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L33263c.  call temp:= `i`(v3) @signature `Lokhttp3/a;.i:()Ljava/net/ProxySelector;` @kind virtual;
  #L332642.  v3:= temp @kind object;
  #L332644.  call temp:= `E`(v2) @signature `Lokhttp3/x;.E:()Ljava/net/URI;` @kind virtual;
  #L33264a.  v2:= temp @kind object;
  #L33264c.  call temp:= `select`(v3, v2) @signature `Ljava/net/ProxySelector;.select:(Ljava/net/URI;)Ljava/util/List;` @kind virtual;
  #L332652.  v2:= temp @kind object;
  #L332654.  if v2 == 0 then goto L33266e;
  #L332658.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L33265e.  v3:= temp;
  #L332660.  if v3 != 0 then goto L33266e;
  #L332664.  call temp:= `t`(v2) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L33266a.  v2:= temp @kind object;
  #L33266c.  goto L332684;
  #L33266e.  v2:= 1I;
  #L332670.  v2:= new `java.net.Proxy`[v2];
  #L332674.  v3:= `@@java.net.Proxy.NO_PROXY` @type ^`java.net.Proxy` @kind object;
  #L332678.  v2[v0]:= v3 @kind object;
  #L33267c.  call temp:= `u`(v2) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L332682.  v2:= temp @kind object;
  #L332684.  v1.`okhttp3.internal.connection.j.e` @type ^`java.util.List` := v2 @kind object;
  #L332688.  v1.`okhttp3.internal.connection.j.f` @type ^`int` := v0;
  #L33268c.  return @kind void;
}
procedure `boolean` `b`(`okhttp3.internal.connection.j` v1 @kind this) @signature `Lokhttp3/internal/connection/j;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3321c8.  call temp:= `c`(v1) @signature `Lokhttp3/internal/connection/j;.c:()Z` @kind direct;
  #L3321ce.  v0:= temp;
  #L3321d0.  if v0 != 0 then goto L3321ea;
  #L3321d4.  v0:= v1.`okhttp3.internal.connection.j.h` @type ^`java.util.List` @kind object;
  #L3321d8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3321de.  v0:= temp;
  #L3321e0.  if v0 != 0 then goto L3321e6;
  #L3321e4.  goto L3321ea;
  #L3321e6.  v0:= 0I;
  #L3321e8.  goto L3321ec;
  #L3321ea.  v0:= 1I;
  #L3321ec.  return v0;
}
procedure `okhttp3.internal.connection.j$a` `d`(`okhttp3.internal.connection.j` v7 @kind this) @signature `Lokhttp3/internal/connection/j;.d:()Lokhttp3/internal/connection/j$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3322f4.  call temp:= `b`(v7) @signature `Lokhttp3/internal/connection/j;.b:()Z` @kind virtual;
  #L3322fa.  v0:= temp;
  #L3322fc.  if v0 == 0 then goto L3323ae;
  #L332300.  v0:= new `java.util.ArrayList`;
  #L332304.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L33230a.  call temp:= `c`(v7) @signature `Lokhttp3/internal/connection/j;.c:()Z` @kind direct;
  #L332310.  v1:= temp;
  #L332312.  if v1 == 0 then goto L332382;
  #L332316.  call temp:= `e`(v7) @signature `Lokhttp3/internal/connection/j;.e:()Ljava/net/Proxy;` @kind direct;
  #L33231c.  v1:= temp @kind object;
  #L33231e.  v2:= 0I;
  #L332320.  v3:= v7.`okhttp3.internal.connection.j.g` @type ^`java.util.List` @kind object;
  #L332324.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L33232a.  v3:= temp;
  #L33232c.  if v2 >= v3 then goto L332376;
  #L332330.  v4:= new `okhttp3.i0`;
  #L332334.  v5:= v7.`okhttp3.internal.connection.j.a` @type ^`okhttp3.a` @kind object;
  #L332338.  v6:= v7.`okhttp3.internal.connection.j.g` @type ^`java.util.List` @kind object;
  #L33233c.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L332342.  v6:= temp @kind object;
  #L332344.  v6:= (`java.net.InetSocketAddress`) v6 @kind object;
  #L332348.  call `<init>`(v4, v5, v1, v6) @signature `Lokhttp3/i0;.<init>:(Lokhttp3/a;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @kind direct;
  #L33234e.  v5:= v7.`okhttp3.internal.connection.j.b` @type ^`okhttp3.internal.connection.h` @kind object;
  #L332352.  call temp:= `c`(v5, v4) @signature `Lokhttp3/internal/connection/h;.c:(Lokhttp3/i0;)Z` @kind virtual;
  #L332358.  v5:= temp;
  #L33235a.  if v5 == 0 then goto L33236a;
  #L33235e.  v5:= v7.`okhttp3.internal.connection.j.h` @type ^`java.util.List` @kind object;
  #L332362.  call temp:= `add`(v5, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332368.  goto L332370;
  #L33236a.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332370.  v2:= v2 + 1;
  #L332374.  goto L33232c;
  #L332376.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L33237c.  v1:= temp;
  #L33237e.  if v1 != 0 then goto L33230a;
  #L332382.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L332388.  v1:= temp;
  #L33238a.  if v1 == 0 then goto L3323a2;
  #L33238e.  v1:= v7.`okhttp3.internal.connection.j.h` @type ^`java.util.List` @kind object;
  #L332392.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L332398.  v1:= v7.`okhttp3.internal.connection.j.h` @type ^`java.util.List` @kind object;
  #L33239c.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3323a2.  v1:= new `okhttp3.internal.connection.j$a`;
  #L3323a6.  call `<init>`(v1, v0) @signature `Lokhttp3/internal/connection/j$a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3323ac.  return v1 @kind object;
  #L3323ae.  v0:= new `java.util.NoSuchElementException`;
  #L3323b2.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L3323b8.  throw v0;
}
