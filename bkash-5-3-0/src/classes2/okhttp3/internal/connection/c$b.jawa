record `okhttp3.internal.connection.c$b` @kind class @AccessFlag FINAL extends `okio.i` @kind class {
  `long` `okhttp3.internal.connection.c$b.h` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.internal.connection.c$b.i` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.c$b.j` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.c$b.k` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.c` `okhttp3.internal.connection.c$b.l` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.connection.c$b` v1 @kind this, `okhttp3.internal.connection.c` v2 @kind object, `okio.v` v3 @kind object, `long` v4 ) @signature `Lokhttp3/internal/connection/c$b;.<init>:(Lokhttp3/internal/connection/c;Lokio/v;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L32ff34.  v1.`okhttp3.internal.connection.c$b.l` @type ^`okhttp3.internal.connection.c` := v2 @kind object;
  #L32ff38.  call `<init>`(v1, v3) @signature `Lokio/i;.<init>:(Lokio/v;)V` @kind direct;
  #L32ff3e.  v1.`okhttp3.internal.connection.c$b.h` @type ^`long` := v4 @kind wide;
  #L32ff42.  v2:= 0L;
  #L32ff46.  v0:= lcmp(v4, v2);
  #L32ff4a.  if v0 != 0 then goto L32ff56;
  #L32ff4e.  v2:= 0I;
  #L32ff50.  call temp:= `i`(v1, v2) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32ff56.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.connection.c$b` v1 @kind this) @signature `Lokhttp3/internal/connection/c$b;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ff68.  v0:= v1.`okhttp3.internal.connection.c$b.k` @type ^`boolean` @kind boolean;
  #L32ff6c.  if v0 == 0 then goto L32ff72;
  #L32ff70.  return @kind void;
  #L32ff72.  v0:= 1I;
  #L32ff74.  v1.`okhttp3.internal.connection.c$b.k` @type ^`boolean` := v0 @kind boolean;
  #L32ff78.  call `close`(v1) @signature `Lokio/i;.close:()V` @kind super;
  #L32ff7e.  v0:= 0I;
  #L32ff80.  call temp:= `i`(v1, v0) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32ff86.  return @kind void;
  #L32ff88.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L32ff8a.  call temp:= `i`(v1, v0) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32ff90.  v0:= temp @kind object;
  #L32ff92.  throw v0;
  catch `java.io.IOException` @[L32ff78..L32ff86] goto L32ff88;
}
procedure `java.io.IOException` `i`(`okhttp3.internal.connection.c$b` v7 @kind this, `java.io.IOException` v8 @kind object) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32fe20.  v0:= v7.`okhttp3.internal.connection.c$b.j` @type ^`boolean` @kind boolean;
  #L32fe24.  if v0 == 0 then goto L32fe2a;
  #L32fe28.  return v8 @kind object;
  #L32fe2a.  v0:= 1I;
  #L32fe2c.  v7.`okhttp3.internal.connection.c$b.j` @type ^`boolean` := v0 @kind boolean;
  #L32fe30.  v1:= v7.`okhttp3.internal.connection.c$b.l` @type ^`okhttp3.internal.connection.c` @kind object;
  #L32fe34.  v2:= v7.`okhttp3.internal.connection.c$b.i` @type ^`long` @kind wide;
  #L32fe38.  v4:= 1I;
  #L32fe3a.  v5:= 0I;
  #L32fe3c.  v6:= v8 @kind object;
  #L32fe3e.  call temp:= `a`(v1, v2, v4, v5, v6) @signature `Lokhttp3/internal/connection/c;.a:(JZZLjava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32fe44.  v8:= temp @kind object;
  #L32fe46.  return v8 @kind object;
}
procedure `long` `z0`(`okhttp3.internal.connection.c$b` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lokhttp3/internal/connection/c$b;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32fe58.  v0:= v7.`okhttp3.internal.connection.c$b.k` @type ^`boolean` @kind boolean;
  #L32fe5c.  if v0 != 0 then goto L32ff04;
  #L32fe60.  call temp:= `e`(v7) @signature `Lokio/i;.e:()Lokio/v;` @kind virtual;
  #L32fe66.  v0:= temp @kind object;
  #L32fe68.  call temp:= `z0`(v0, v8, v9) @signature `Lokio/v;.z0:(Lokio/c;J)J` @kind interface;
  #L32fe6e.  v8:= temp @kind wide;
  #L32fe70.  v10:= 0I;
  #L32fe72.  v0:= -1L;
  #L32fe76.  v2:= lcmp(v8, v0);
  #L32fe7a.  if v2 != 0 then goto L32fe86;
  #L32fe7e.  call temp:= `i`(v7, v10) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32fe84.  return v0 @kind wide;
  #L32fe86.  v2:= v7.`okhttp3.internal.connection.c$b.i` @type ^`long` @kind wide;
  #L32fe8a.  v2:= v2 + v8 @kind long;
  #L32fe8c.  v4:= v7.`okhttp3.internal.connection.c$b.h` @type ^`long` @kind wide;
  #L32fe90.  v6:= lcmp(v4, v0);
  #L32fe94.  if v6 == 0 then goto L32fee4;
  #L32fe98.  v0:= lcmp(v2, v4);
  #L32fe9c.  if v0 > 0 then goto L32fea2;
  #L32fea0.  goto L32fee4;
  #L32fea2.  v8:= new `java.net.ProtocolException`;
  #L32fea6.  v9:= new `java.lang.StringBuilder`;
  #L32feaa.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32feb0.  v10:= "expected " @kind object;
  #L32feb4.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32feba.  v0:= v7.`okhttp3.internal.connection.c$b.h` @type ^`long` @kind wide;
  #L32febe.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fec4.  v10:= " bytes but received " @kind object;
  #L32fec8.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fece.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32fed4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32feda.  v9:= temp @kind object;
  #L32fedc.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32fee2.  throw v8;
  #L32fee4.  v7.`okhttp3.internal.connection.c$b.i` @type ^`long` := v2 @kind wide;
  #L32fee8.  v0:= lcmp(v2, v4);
  #L32feec.  if v0 != 0 then goto L32fef6;
  #L32fef0.  call temp:= `i`(v7, v10) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32fef6.  return v8 @kind wide;
  #L32fef8.  v8:= Exception @type ^`java.io.IOException` @kind object;
  #L32fefa.  call temp:= `i`(v7, v8) @signature `Lokhttp3/internal/connection/c$b;.i:(Ljava/io/IOException;)Ljava/io/IOException;` @kind virtual;
  #L32ff00.  v8:= temp @kind object;
  #L32ff02.  throw v8;
  #L32ff04.  v8:= new `java.lang.IllegalStateException`;
  #L32ff08.  v9:= "closed" @kind object;
  #L32ff0c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32ff12.  throw v8;
  catch `java.io.IOException` @[L32fe60..L32fef6] goto L32fef8;
}
