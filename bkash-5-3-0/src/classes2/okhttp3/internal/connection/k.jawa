record `okhttp3.internal.connection.k` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.b0` `okhttp3.internal.connection.k.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.g` `okhttp3.internal.connection.k.b` @AccessFlag PRIVATE_FINAL;
  `okhttp3.f` `okhttp3.internal.connection.k.c` @AccessFlag PRIVATE_FINAL;
  `okhttp3.u` `okhttp3.internal.connection.k.d` @AccessFlag PRIVATE_FINAL;
  `okio.a` `okhttp3.internal.connection.k.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `okhttp3.internal.connection.k.f` @AccessFlag PRIVATE;
  `okhttp3.e0` `okhttp3.internal.connection.k.g` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.d` `okhttp3.internal.connection.k.h` @AccessFlag PRIVATE;
  `okhttp3.internal.connection.e` `okhttp3.internal.connection.k.i` @AccessFlag PUBLIC;
  `okhttp3.internal.connection.c` `okhttp3.internal.connection.k.j` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.k.k` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.k.l` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.k.m` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.k.n` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.connection.k.o` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/connection/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L332be4.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.connection.k` v3 @kind this, `okhttp3.b0` v4 @kind object, `okhttp3.f` v5 @kind object) @signature `Lokhttp3/internal/connection/k;.<init>:(Lokhttp3/b0;Lokhttp3/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L332bf8.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L332bfe.  v0:= new `okhttp3.internal.connection.k$a`;
  #L332c02.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/connection/k$a;.<init>:(Lokhttp3/internal/connection/k;)V` @kind direct;
  #L332c08.  v3.`okhttp3.internal.connection.k.e` @type ^`okio.a` := v0 @kind object;
  #L332c0c.  v3.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` := v4 @kind object;
  #L332c10.  v1:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L332c14.  call temp:= `e`(v4) @signature `Lokhttp3/b0;.e:()Lokhttp3/l;` @kind virtual;
  #L332c1a.  v2:= temp @kind object;
  #L332c1c.  call temp:= `h`(v1, v2) @signature `Lee/a;.h:(Lokhttp3/l;)Lokhttp3/internal/connection/g;` @kind virtual;
  #L332c22.  v1:= temp @kind object;
  #L332c24.  v3.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` := v1 @kind object;
  #L332c28.  v3.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` := v5 @kind object;
  #L332c2c.  call temp:= `j`(v4) @signature `Lokhttp3/b0;.j:()Lokhttp3/u$b;` @kind virtual;
  #L332c32.  v1:= temp @kind object;
  #L332c34.  call temp:= `a`(v1, v5) @signature `Lokhttp3/u$b;.a:(Lokhttp3/f;)Lokhttp3/u;` @kind interface;
  #L332c3a.  v5:= temp @kind object;
  #L332c3c.  v3.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` := v5 @kind object;
  #L332c40.  call temp:= `b`(v4) @signature `Lokhttp3/b0;.b:()I` @kind virtual;
  #L332c46.  v4:= temp;
  #L332c48.  v4:= (`long`) v4 @kind i2l;
  #L332c4a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L332c4e.  call temp:= `g`(v0, v4, v1) @signature `Lokio/w;.g:(JLjava/util/concurrent/TimeUnit;)Lokio/w;` @kind virtual;
  #L332c54.  return @kind void;
}
procedure `okhttp3.a` `e`(`okhttp3.internal.connection.k` v17 @kind this, `okhttp3.x` v18 @kind object) @signature `Lokhttp3/internal/connection/k;.e:(Lokhttp3/x;)Lokhttp3/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L332a64.  v0:= v17 @kind object;
  #L332a68.  call temp:= `m`(v18) @signature `Lokhttp3/x;.m:()Z` @kind virtual;
  #L332a6e.  v1:= temp;
  #L332a70.  v2:= 0I;
  #L332a72.  if v1 == 0 then goto L332aa2;
  #L332a76.  v1:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332a7a.  call temp:= `E`(v1) @signature `Lokhttp3/b0;.E:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L332a80.  v2:= temp @kind object;
  #L332a82.  v1:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332a86.  call temp:= `n`(v1) @signature `Lokhttp3/b0;.n:()Ljavax/net/ssl/HostnameVerifier;` @kind virtual;
  #L332a8c.  v1:= temp @kind object;
  #L332a8e.  v3:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332a92.  call temp:= `c`(v3) @signature `Lokhttp3/b0;.c:()Lokhttp3/h;` @kind virtual;
  #L332a98.  v3:= temp @kind object;
  #L332a9a.  v10:= v1 @kind object;
  #L332a9c.  v9:= v2 @kind object;
  #L332a9e.  v11:= v3 @kind object;
  #L332aa0.  goto L332aa8;
  #L332aa2.  v9:= v2 @kind object;
  #L332aa4.  v10:= v9 @kind object;
  #L332aa6.  v11:= v10 @kind object;
  #L332aa8.  v1:= new `okhttp3.a`;
  #L332aac.  call temp:= `l`(v18) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L332ab2.  v5:= temp @kind object;
  #L332ab4.  call temp:= `x`(v18) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L332aba.  v6:= temp;
  #L332abc.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332ac0.  call temp:= `i`(v2) @signature `Lokhttp3/b0;.i:()Lokhttp3/s;` @kind virtual;
  #L332ac6.  v7:= temp @kind object;
  #L332ac8.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332acc.  call temp:= `D`(v2) @signature `Lokhttp3/b0;.D:()Ljavax/net/SocketFactory;` @kind virtual;
  #L332ad2.  v8:= temp @kind object;
  #L332ad4.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332ad8.  call temp:= `x`(v2) @signature `Lokhttp3/b0;.x:()Lokhttp3/d;` @kind virtual;
  #L332ade.  v12:= temp @kind object;
  #L332ae0.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332ae4.  call temp:= `w`(v2) @signature `Lokhttp3/b0;.w:()Ljava/net/Proxy;` @kind virtual;
  #L332aea.  v13:= temp @kind object;
  #L332aec.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332af0.  call temp:= `v`(v2) @signature `Lokhttp3/b0;.v:()Ljava/util/List;` @kind virtual;
  #L332af6.  v14:= temp @kind object;
  #L332af8.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332afc.  call temp:= `f`(v2) @signature `Lokhttp3/b0;.f:()Ljava/util/List;` @kind virtual;
  #L332b02.  v15:= temp @kind object;
  #L332b04.  v2:= v0.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332b08.  call temp:= `z`(v2) @signature `Lokhttp3/b0;.z:()Ljava/net/ProxySelector;` @kind virtual;
  #L332b0e.  v16:= temp @kind object;
  #L332b10.  v4:= v1 @kind object;
  #L332b12.  call `<init>`(v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lokhttp3/a;.<init>:(Ljava/lang/String;ILokhttp3/s;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/h;Lokhttp3/d;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @kind direct;
  #L332b18.  return v1 @kind object;
}
procedure `java.io.IOException` `j`(`okhttp3.internal.connection.k` v5 @kind this, `java.io.IOException` v6 @kind object, `boolean` v7 ) @signature `Lokhttp3/internal/connection/k;.j:(Ljava/io/IOException;Z)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L33283c.  v0:= v5.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332840.  @monitorenter v0
  #L332842.  if v7 == 0 then goto L332860;
  #L332846.  v1:= v5.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L33284a.  if v1 != 0 then goto L332850;
  #L33284e.  goto L332860;
  #L332850.  v6:= new `java.lang.IllegalStateException`;
  #L332854.  v7:= "cannot release connection while it is in use" @kind object;
  #L332858.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33285e.  throw v6;
  #L332860.  v1:= v5.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L332864.  v2:= 0I;
  #L332866.  if v1 == 0 then goto L332888;
  #L33286a.  v3:= v5.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L33286e.  if v3 != 0 then goto L332888;
  #L332872.  if v7 != 0 then goto L33287e;
  #L332876.  v7:= v5.`okhttp3.internal.connection.k.o` @type ^`boolean` @kind boolean;
  #L33287a.  if v7 == 0 then goto L332888;
  #L33287e.  call temp:= `n`(v5) @signature `Lokhttp3/internal/connection/k;.n:()Ljava/net/Socket;` @kind virtual;
  #L332884.  v7:= temp @kind object;
  #L332886.  goto L33288a;
  #L332888.  v7:= v2 @kind object;
  #L33288a.  v3:= v5.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L33288e.  if v3 == 0 then goto L332894;
  #L332892.  v1:= v2 @kind object;
  #L332894.  v2:= v5.`okhttp3.internal.connection.k.o` @type ^`boolean` @kind boolean;
  #L332898.  v3:= 1I;
  #L33289a.  v4:= 0I;
  #L33289c.  if v2 == 0 then goto L3328ac;
  #L3328a0.  v2:= v5.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L3328a4.  if v2 != 0 then goto L3328ac;
  #L3328a8.  v2:= 1I;
  #L3328aa.  goto L3328ae;
  #L3328ac.  v2:= 0I;
  #L3328ae.  @monitorexit v0
  #L3328b0.  call `h`(v7) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @kind static;
  #L3328b6.  if v1 == 0 then goto L3328c8;
  #L3328ba.  v7:= v5.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L3328be.  v0:= v5.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L3328c2.  call `i`(v7, v0, v1) @signature `Lokhttp3/u;.i:(Lokhttp3/f;Lokhttp3/k;)V` @kind virtual;
  #L3328c8.  if v2 == 0 then goto L3328fe;
  #L3328cc.  if v6 == 0 then goto L3328d2;
  #L3328d0.  goto L3328d4;
  #L3328d2.  v3:= 0I;
  #L3328d4.  call temp:= `q`(v5, v6) @signature `Lokhttp3/internal/connection/k;.q:(Ljava/io/IOException;)Ljava/io/IOException;` @kind direct;
  #L3328da.  v6:= temp @kind object;
  #L3328dc.  if v3 == 0 then goto L3328f0;
  #L3328e0.  v7:= v5.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L3328e4.  v0:= v5.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L3328e8.  call `c`(v7, v0, v6) @signature `Lokhttp3/u;.c:(Lokhttp3/f;Ljava/io/IOException;)V` @kind virtual;
  #L3328ee.  goto L3328fe;
  #L3328f0.  v7:= v5.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L3328f4.  v0:= v5.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L3328f8.  call `b`(v7, v0) @signature `Lokhttp3/u;.b:(Lokhttp3/f;)V` @kind virtual;
  #L3328fe.  return v6 @kind object;
  #L332900.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332902.  @monitorexit v0
  #L332904.  throw v6;
  catch `java.lang.Throwable` @[L332846..L3328b0] goto L332900;
  catch `java.lang.Throwable` @[L332902..L332904] goto L332900;
}
procedure `java.io.IOException` `q`(`okhttp3.internal.connection.k` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/k;.q:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L332970.  v0:= v2.`okhttp3.internal.connection.k.n` @type ^`boolean` @kind boolean;
  #L332974.  if v0 == 0 then goto L33297a;
  #L332978.  return v3 @kind object;
  #L33297a.  v0:= v2.`okhttp3.internal.connection.k.e` @type ^`okio.a` @kind object;
  #L33297e.  call temp:= `n`(v0) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L332984.  v0:= temp;
  #L332986.  if v0 != 0 then goto L33298c;
  #L33298a.  return v3 @kind object;
  #L33298c.  v0:= new `java.io.InterruptedIOException`;
  #L332990.  v1:= "timeout" @kind object;
  #L332994.  call `<init>`(v0, v1) @signature `Ljava/io/InterruptedIOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L33299a.  if v3 == 0 then goto L3329a4;
  #L33299e.  call temp:= `initCause`(v0, v3) @signature `Ljava/io/InterruptedIOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3329a4.  return v0 @kind object;
}
procedure `void` `a`(`okhttp3.internal.connection.k` v2 @kind this, `okhttp3.internal.connection.e` v3 @kind object) @signature `Lokhttp3/internal/connection/k;.a:(Lokhttp3/internal/connection/e;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L332c68.  v0:= v2.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L332c6c.  if v0 != 0 then goto L332c8e;
  #L332c70.  v2.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` := v3 @kind object;
  #L332c74.  v3:= v3.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L332c78.  v0:= new `okhttp3.internal.connection.k$b`;
  #L332c7c.  v1:= v2.`okhttp3.internal.connection.k.f` @type ^`java.lang.Object` @kind object;
  #L332c80.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/internal/connection/k$b;.<init>:(Lokhttp3/internal/connection/k;Ljava/lang/Object;)V` @kind direct;
  #L332c86.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L332c8c.  return @kind void;
  #L332c8e.  v3:= new `java.lang.IllegalStateException`;
  #L332c92.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L332c98.  throw v3;
}
procedure `void` `b`(`okhttp3.internal.connection.k` v2 @kind this) @signature `Lokhttp3/internal/connection/k;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L332cac.  call temp:= `l`() @signature `Lokhttp3/internal/platform/e;.l:()Lokhttp3/internal/platform/e;` @kind static;
  #L332cb2.  v0:= temp @kind object;
  #L332cb4.  v1:= "response.body().close()" @kind object;
  #L332cb8.  call temp:= `o`(v0, v1) @signature `Lokhttp3/internal/platform/e;.o:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L332cbe.  v0:= temp @kind object;
  #L332cc0.  v2.`okhttp3.internal.connection.k.f` @type ^`java.lang.Object` := v0 @kind object;
  #L332cc4.  v0:= v2.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L332cc8.  v1:= v2.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L332ccc.  call `d`(v0, v1) @signature `Lokhttp3/u;.d:(Lokhttp3/f;)V` @kind virtual;
  #L332cd2.  return @kind void;
}
procedure `boolean` `c`(`okhttp3.internal.connection.k` v1 @kind this) @signature `Lokhttp3/internal/connection/k;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3326f4.  v0:= v1.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L3326f8.  call temp:= `f`(v0) @signature `Lokhttp3/internal/connection/d;.f:()Z` @kind virtual;
  #L3326fe.  v0:= temp;
  #L332700.  if v0 == 0 then goto L332718;
  #L332704.  v0:= v1.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332708.  call temp:= `e`(v0) @signature `Lokhttp3/internal/connection/d;.e:()Z` @kind virtual;
  #L33270e.  v0:= temp;
  #L332710.  if v0 == 0 then goto L332718;
  #L332714.  v0:= 1I;
  #L332716.  goto L33271a;
  #L332718.  v0:= 0I;
  #L33271a.  return v0;
}
procedure `void` `d`(`okhttp3.internal.connection.k` v3 @kind this) @signature `Lokhttp3/internal/connection/k;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L332ce4.  v0:= v3.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332ce8.  @monitorenter v0
  #L332cea.  v1:= 1I;
  #L332cec.  v3.`okhttp3.internal.connection.k.m` @type ^`boolean` := v1 @kind boolean;
  #L332cf0.  v1:= v3.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L332cf4.  v2:= v3.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332cf8.  if v2 == 0 then goto L332d16;
  #L332cfc.  call temp:= `a`(v2) @signature `Lokhttp3/internal/connection/d;.a:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L332d02.  v2:= temp @kind object;
  #L332d04.  if v2 == 0 then goto L332d16;
  #L332d08.  v2:= v3.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332d0c.  call temp:= `a`(v2) @signature `Lokhttp3/internal/connection/d;.a:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L332d12.  v2:= temp @kind object;
  #L332d14.  goto L332d1a;
  #L332d16.  v2:= v3.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L332d1a.  @monitorexit v0
  #L332d1c.  if v1 == 0 then goto L332d28;
  #L332d20.  call `b`(v1) @signature `Lokhttp3/internal/connection/c;.b:()V` @kind virtual;
  #L332d26.  goto L332d32;
  #L332d28.  if v2 == 0 then goto L332d32;
  #L332d2c.  call `c`(v2) @signature `Lokhttp3/internal/connection/e;.c:()V` @kind virtual;
  #L332d32.  return @kind void;
  #L332d34.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332d36.  @monitorexit v0
  #L332d38.  throw v1;
  catch `java.lang.Throwable` @[L332cec..L332d1c] goto L332d34;
  catch `java.lang.Throwable` @[L332d36..L332d38] goto L332d34;
}
procedure `void` `f`(`okhttp3.internal.connection.k` v2 @kind this) @signature `Lokhttp3/internal/connection/k;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L332d60.  v0:= v2.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332d64.  @monitorenter v0
  #L332d66.  v1:= v2.`okhttp3.internal.connection.k.o` @type ^`boolean` @kind boolean;
  #L332d6a.  if v1 != 0 then goto L332d78;
  #L332d6e.  v1:= 0I;
  #L332d70.  v2.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` := v1 @kind object;
  #L332d74.  @monitorexit v0
  #L332d76.  return @kind void;
  #L332d78.  v1:= new `java.lang.IllegalStateException`;
  #L332d7c.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L332d82.  throw v1;
  #L332d84.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332d86.  @monitorexit v0
  #L332d88.  throw v1;
  catch `java.lang.Throwable` @[L332d66..L332d88] goto L332d84;
}
procedure `java.io.IOException` `g`(`okhttp3.internal.connection.k` v3 @kind this, `okhttp3.internal.connection.c` v4 @kind object, `boolean` v5 , `boolean` v6 , `java.io.IOException` v7 @kind object) @signature `Lokhttp3/internal/connection/k;.g:(Lokhttp3/internal/connection/c;ZZLjava/io/IOException;)Ljava/io/IOException;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L332798.  v0:= v3.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L33279c.  @monitorenter v0
  #L33279e.  v1:= v3.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L3327a2.  if v4 == v1 then goto L3327aa;
  #L3327a6.  @monitorexit v0
  #L3327a8.  return v7 @kind object;
  #L3327aa.  v4:= 0I;
  #L3327ac.  v2:= 1I;
  #L3327ae.  if v5 == 0 then goto L3327be;
  #L3327b2.  v5:= v3.`okhttp3.internal.connection.k.k` @type ^`boolean` @kind boolean;
  #L3327b6.  v5:= v5 ^~ v2 @kind int;
  #L3327b8.  v3.`okhttp3.internal.connection.k.k` @type ^`boolean` := v2 @kind boolean;
  #L3327bc.  goto L3327c0;
  #L3327be.  v5:= 0I;
  #L3327c0.  if v6 == 0 then goto L3327d2;
  #L3327c4.  v6:= v3.`okhttp3.internal.connection.k.l` @type ^`boolean` @kind boolean;
  #L3327c8.  if v6 != 0 then goto L3327ce;
  #L3327cc.  v5:= 1I;
  #L3327ce.  v3.`okhttp3.internal.connection.k.l` @type ^`boolean` := v2 @kind boolean;
  #L3327d2.  v6:= v3.`okhttp3.internal.connection.k.k` @type ^`boolean` @kind boolean;
  #L3327d6.  if v6 == 0 then goto L332800;
  #L3327da.  v6:= v3.`okhttp3.internal.connection.k.l` @type ^`boolean` @kind boolean;
  #L3327de.  if v6 == 0 then goto L332800;
  #L3327e2.  if v5 == 0 then goto L332800;
  #L3327e6.  call temp:= `c`(v1) @signature `Lokhttp3/internal/connection/c;.c:()Lokhttp3/internal/connection/e;` @kind virtual;
  #L3327ec.  v5:= temp @kind object;
  #L3327ee.  v6:= v5.`okhttp3.internal.connection.e.m` @type ^`int`;
  #L3327f2.  v6:= v6 + v2 @kind int;
  #L3327f4.  v5.`okhttp3.internal.connection.e.m` @type ^`int` := v6;
  #L3327f8.  v5:= 0I;
  #L3327fa.  v3.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` := v5 @kind object;
  #L3327fe.  goto L332802;
  #L332800.  v2:= 0I;
  #L332802.  @monitorexit v0
  #L332804.  if v2 == 0 then goto L332810;
  #L332808.  call temp:= `j`(v3, v7, v4) @signature `Lokhttp3/internal/connection/k;.j:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L33280e.  v7:= temp @kind object;
  #L332810.  return v7 @kind object;
  #L332812.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332814.  @monitorexit v0
  #L332816.  throw v4;
  catch `java.lang.Throwable` @[L33279e..L332804] goto L332812;
  catch `java.lang.Throwable` @[L332814..L332816] goto L332812;
}
procedure `boolean` `h`(`okhttp3.internal.connection.k` v2 @kind this) @signature `Lokhttp3/internal/connection/k;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33272c.  v0:= v2.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332730.  @monitorenter v0
  #L332732.  v1:= v2.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L332736.  if v1 == 0 then goto L33273e;
  #L33273a.  v1:= 1I;
  #L33273c.  goto L332740;
  #L33273e.  v1:= 0I;
  #L332740.  @monitorexit v0
  #L332742.  return v1;
  #L332744.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332746.  @monitorexit v0
  #L332748.  throw v1;
  catch `java.lang.Throwable` @[L332732..L332748] goto L332744;
}
procedure `boolean` `i`(`okhttp3.internal.connection.k` v2 @kind this) @signature `Lokhttp3/internal/connection/k;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L332768.  v0:= v2.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L33276c.  @monitorenter v0
  #L33276e.  v1:= v2.`okhttp3.internal.connection.k.m` @type ^`boolean` @kind boolean;
  #L332772.  @monitorexit v0
  #L332774.  return v1;
  #L332776.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332778.  @monitorexit v0
  #L33277a.  throw v1;
  catch `java.lang.Throwable` @[L33276e..L33277a] goto L332776;
}
procedure `okhttp3.internal.connection.c` `k`(`okhttp3.internal.connection.k` v8 @kind this, `okhttp3.y$a` v9 @kind object, `boolean` v10 ) @signature `Lokhttp3/internal/connection/k;.k:(Lokhttp3/y$a;Z)Lokhttp3/internal/connection/c;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L332b2c.  v0:= v8.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332b30.  @monitorenter v0
  #L332b32.  v1:= v8.`okhttp3.internal.connection.k.o` @type ^`boolean` @kind boolean;
  #L332b36.  if v1 != 0 then goto L332b9c;
  #L332b3a.  v1:= v8.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L332b3e.  if v1 != 0 then goto L332b8c;
  #L332b42.  @monitorexit v0
  #L332b44.  v0:= v8.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332b48.  v1:= v8.`okhttp3.internal.connection.k.a` @type ^`okhttp3.b0` @kind object;
  #L332b4c.  call temp:= `b`(v0, v1, v9, v10) @signature `Lokhttp3/internal/connection/d;.b:(Lokhttp3/b0;Lokhttp3/y$a;Z)Lge/c;` @kind virtual;
  #L332b52.  v7:= temp @kind object;
  #L332b54.  v9:= new `okhttp3.internal.connection.c`;
  #L332b58.  v4:= v8.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L332b5c.  v5:= v8.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L332b60.  v6:= v8.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332b64.  v2:= v9 @kind object;
  #L332b66.  v3:= v8 @kind object;
  #L332b68.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lokhttp3/internal/connection/c;.<init>:(Lokhttp3/internal/connection/k;Lokhttp3/f;Lokhttp3/u;Lokhttp3/internal/connection/d;Lge/c;)V` @kind direct;
  #L332b6e.  v10:= v8.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332b72.  @monitorenter v10
  #L332b74.  v8.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` := v9 @kind object;
  #L332b78.  v0:= 0I;
  #L332b7a.  v8.`okhttp3.internal.connection.k.k` @type ^`boolean` := v0 @kind boolean;
  #L332b7e.  v8.`okhttp3.internal.connection.k.l` @type ^`boolean` := v0 @kind boolean;
  #L332b82.  @monitorexit v10
  #L332b84.  return v9 @kind object;
  #L332b86.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332b88.  @monitorexit v10
  #L332b8a.  throw v9;
  #L332b8c.  v9:= new `java.lang.IllegalStateException`;
  #L332b90.  v10:= "cannot make a new request because the previous response is still open: please call response.close()" @kind object;
  #L332b94.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332b9a.  throw v9;
  #L332b9c.  v9:= new `java.lang.IllegalStateException`;
  #L332ba0.  v10:= "released" @kind object;
  #L332ba4.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L332baa.  throw v9;
  #L332bac.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332bae.  @monitorexit v0
  #L332bb0.  throw v9;
  catch `java.lang.Throwable` @[L332b32..L332b44] goto L332bac;
  catch `java.lang.Throwable` @[L332b74..L332b8a] goto L332b86;
  catch `java.lang.Throwable` @[L332b8c..L332bb0] goto L332bac;
}
procedure `java.io.IOException` `l`(`okhttp3.internal.connection.k` v2 @kind this, `java.io.IOException` v3 @kind object) @signature `Lokhttp3/internal/connection/k;.l:(Ljava/io/IOException;)Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33292c.  v0:= v2.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332930.  @monitorenter v0
  #L332932.  v1:= 1I;
  #L332934.  v2.`okhttp3.internal.connection.k.o` @type ^`boolean` := v1 @kind boolean;
  #L332938.  @monitorexit v0
  #L33293a.  v0:= 0I;
  #L33293c.  call temp:= `j`(v2, v3, v0) @signature `Lokhttp3/internal/connection/k;.j:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L332942.  v3:= temp @kind object;
  #L332944.  return v3 @kind object;
  #L332946.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L332948.  @monitorexit v0
  #L33294a.  throw v3;
  catch `java.lang.Throwable` @[L332934..L33293a] goto L332946;
  catch `java.lang.Throwable` @[L332948..L33294a] goto L332946;
}
procedure `void` `m`(`okhttp3.internal.connection.k` v7 @kind this, `okhttp3.e0` v8 @kind object) @signature `Lokhttp3/internal/connection/k;.m:(Lokhttp3/e0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L332da8.  v0:= v7.`okhttp3.internal.connection.k.g` @type ^`okhttp3.e0` @kind object;
  #L332dac.  if v0 == 0 then goto L332e0a;
  #L332db0.  call temp:= `h`(v0) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L332db6.  v0:= temp @kind object;
  #L332db8.  call temp:= `h`(v8) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L332dbe.  v1:= temp @kind object;
  #L332dc0.  call temp:= `E`(v0, v1) @signature `Lee/e;.E:(Lokhttp3/x;Lokhttp3/x;)Z` @kind static;
  #L332dc6.  v0:= temp;
  #L332dc8.  if v0 == 0 then goto L332dde;
  #L332dcc.  v0:= v7.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332dd0.  call temp:= `e`(v0) @signature `Lokhttp3/internal/connection/d;.e:()Z` @kind virtual;
  #L332dd6.  v0:= temp;
  #L332dd8.  if v0 == 0 then goto L332dde;
  #L332ddc.  return @kind void;
  #L332dde.  v0:= v7.`okhttp3.internal.connection.k.j` @type ^`okhttp3.internal.connection.c` @kind object;
  #L332de2.  if v0 != 0 then goto L332dfe;
  #L332de6.  v0:= v7.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` @kind object;
  #L332dea.  if v0 == 0 then goto L332e0a;
  #L332dee.  v0:= 1I;
  #L332df0.  v1:= 0I;
  #L332df2.  call temp:= `j`(v7, v1, v0) @signature `Lokhttp3/internal/connection/k;.j:(Ljava/io/IOException;Z)Ljava/io/IOException;` @kind direct;
  #L332df8.  v7.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` := v1 @kind object;
  #L332dfc.  goto L332e0a;
  #L332dfe.  v8:= new `java.lang.IllegalStateException`;
  #L332e02.  call `<init>`(v8) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L332e08.  throw v8;
  #L332e0a.  v7.`okhttp3.internal.connection.k.g` @type ^`okhttp3.e0` := v8 @kind object;
  #L332e0e.  v6:= new `okhttp3.internal.connection.d`;
  #L332e12.  v2:= v7.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332e16.  call temp:= `h`(v8) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L332e1c.  v8:= temp @kind object;
  #L332e1e.  call temp:= `e`(v7, v8) @signature `Lokhttp3/internal/connection/k;.e:(Lokhttp3/x;)Lokhttp3/a;` @kind direct;
  #L332e24.  v3:= temp @kind object;
  #L332e26.  v4:= v7.`okhttp3.internal.connection.k.c` @type ^`okhttp3.f` @kind object;
  #L332e2a.  v5:= v7.`okhttp3.internal.connection.k.d` @type ^`okhttp3.u` @kind object;
  #L332e2e.  v0:= v6 @kind object;
  #L332e30.  v1:= v7 @kind object;
  #L332e32.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/connection/d;.<init>:(Lokhttp3/internal/connection/k;Lokhttp3/internal/connection/g;Lokhttp3/a;Lokhttp3/f;Lokhttp3/u;)V` @kind direct;
  #L332e38.  v7.`okhttp3.internal.connection.k.h` @type ^`okhttp3.internal.connection.d` := v6 @kind object;
  #L332e3c.  return @kind void;
}
procedure `java.net.Socket` `n`(`okhttp3.internal.connection.k` v4 @kind this) @signature `Lokhttp3/internal/connection/k;.n:()Ljava/net/Socket;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3329b8.  v0:= 0I;
  #L3329ba.  v1:= v4.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L3329be.  v1:= v1.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L3329c2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3329c8.  v1:= temp;
  #L3329ca.  v2:= -1I;
  #L3329cc.  if v0 >= v1 then goto L3329f8;
  #L3329d0.  v3:= v4.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L3329d4.  v3:= v3.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L3329d8.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3329de.  v3:= temp @kind object;
  #L3329e0.  v3:= (`java.lang.ref.Reference`) v3 @kind object;
  #L3329e4.  call temp:= `get`(v3) @signature `Ljava/lang/ref/Reference;.get:()Ljava/lang/Object;` @kind virtual;
  #L3329ea.  v3:= temp @kind object;
  #L3329ec.  if v3 != v4 then goto L3329f2;
  #L3329f0.  goto L3329fa;
  #L3329f2.  v0:= v0 + 1;
  #L3329f6.  goto L3329ca;
  #L3329f8.  v0:= -1I;
  #L3329fa.  if v0 == v2 then goto L332a48;
  #L3329fe.  v1:= v4.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` @kind object;
  #L332a02.  v2:= v1.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L332a06.  call temp:= `remove`(v2, v0) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L332a0c.  v0:= 0I;
  #L332a0e.  v4.`okhttp3.internal.connection.k.i` @type ^`okhttp3.internal.connection.e` := v0 @kind object;
  #L332a12.  v2:= v1.`okhttp3.internal.connection.e.p` @type ^`java.util.List` @kind object;
  #L332a16.  call temp:= `isEmpty`(v2) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L332a1c.  v2:= temp;
  #L332a1e.  if v2 == 0 then goto L332a46;
  #L332a22.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L332a28.  v2:= temp @kind wide;
  #L332a2a.  v1.`okhttp3.internal.connection.e.q` @type ^`long` := v2 @kind wide;
  #L332a2e.  v2:= v4.`okhttp3.internal.connection.k.b` @type ^`okhttp3.internal.connection.g` @kind object;
  #L332a32.  call temp:= `d`(v2, v1) @signature `Lokhttp3/internal/connection/g;.d:(Lokhttp3/internal/connection/e;)Z` @kind virtual;
  #L332a38.  v2:= temp;
  #L332a3a.  if v2 == 0 then goto L332a46;
  #L332a3e.  call temp:= `s`(v1) @signature `Lokhttp3/internal/connection/e;.s:()Ljava/net/Socket;` @kind virtual;
  #L332a44.  v0:= temp @kind object;
  #L332a46.  return v0 @kind object;
  #L332a48.  v0:= new `java.lang.IllegalStateException`;
  #L332a4c.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L332a52.  throw v0;
}
procedure `void` `o`(`okhttp3.internal.connection.k` v1 @kind this) @signature `Lokhttp3/internal/connection/k;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332e50.  v0:= v1.`okhttp3.internal.connection.k.n` @type ^`boolean` @kind boolean;
  #L332e54.  if v0 != 0 then goto L332e6a;
  #L332e58.  v0:= 1I;
  #L332e5a.  v1.`okhttp3.internal.connection.k.n` @type ^`boolean` := v0 @kind boolean;
  #L332e5e.  v0:= v1.`okhttp3.internal.connection.k.e` @type ^`okio.a` @kind object;
  #L332e62.  call temp:= `n`(v0) @signature `Lokio/a;.n:()Z` @kind virtual;
  #L332e68.  return @kind void;
  #L332e6a.  v0:= new `java.lang.IllegalStateException`;
  #L332e6e.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L332e74.  throw v0;
}
procedure `void` `p`(`okhttp3.internal.connection.k` v1 @kind this) @signature `Lokhttp3/internal/connection/k;.p:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L332e88.  v0:= v1.`okhttp3.internal.connection.k.e` @type ^`okio.a` @kind object;
  #L332e8c.  call `k`(v0) @signature `Lokio/a;.k:()V` @kind virtual;
  #L332e92.  return @kind void;
}
