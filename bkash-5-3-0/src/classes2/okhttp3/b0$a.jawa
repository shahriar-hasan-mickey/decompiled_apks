record `okhttp3.b0$a` @kind class @AccessFlag  extends `ee.a` @kind class {
}
procedure `void` `<init>`(`okhttp3.b0$a` v0 @kind this) @signature `Lokhttp3/b0$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L32d2b4.  call `<init>`(v0) @signature `Lee/a;.<init>:()V` @kind direct;
  #L32d2ba.  return @kind void;
}
procedure `void` `a`(`okhttp3.b0$a` v0 @kind this, `okhttp3.w$a` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/b0$a;.a:(Lokhttp3/w$a;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L32d2cc.  call temp:= `b`(v1, v2) @signature `Lokhttp3/w$a;.b:(Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32d2d2.  return @kind void;
}
procedure `void` `b`(`okhttp3.b0$a` v0 @kind this, `okhttp3.w$a` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/b0$a;.b:(Lokhttp3/w$a;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L32d2e4.  call temp:= `c`(v1, v2, v3) @signature `Lokhttp3/w$a;.c:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/w$a;` @kind virtual;
  #L32d2ea.  return @kind void;
}
procedure `void` `c`(`okhttp3.b0$a` v0 @kind this, `okhttp3.m` v1 @kind object, `javax.net.ssl.SSLSocket` v2 @kind object, `boolean` v3 ) @signature `Lokhttp3/b0$a;.c:(Lokhttp3/m;Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag PUBLIC {
    temp;

  #L32d2fc.  call `a`(v1, v2, v3) @signature `Lokhttp3/m;.a:(Ljavax/net/ssl/SSLSocket;Z)V` @kind virtual;
  #L32d302.  return @kind void;
}
procedure `int` `d`(`okhttp3.b0$a` v0 @kind this, `okhttp3.g0$a` v1 @kind object) @signature `Lokhttp3/b0$a;.d:(Lokhttp3/g0$a;)I` @AccessFlag PUBLIC {
    temp;

  #L32d26c.  v1:= v1.`okhttp3.g0$a.c` @type ^`int`;
  #L32d270.  return v1;
}
procedure `boolean` `e`(`okhttp3.b0$a` v0 @kind this, `okhttp3.a` v1 @kind object, `okhttp3.a` v2 @kind object) @signature `Lokhttp3/b0$a;.e:(Lokhttp3/a;Lokhttp3/a;)Z` @AccessFlag PUBLIC {
    temp;

  #L32d250.  call temp:= `d`(v1, v2) @signature `Lokhttp3/a;.d:(Lokhttp3/a;)Z` @kind virtual;
  #L32d256.  v1:= temp;
  #L32d258.  return v1;
}
procedure `okhttp3.internal.connection.c` `f`(`okhttp3.b0$a` v0 @kind this, `okhttp3.g0` v1 @kind object) @signature `Lokhttp3/b0$a;.f:(Lokhttp3/g0;)Lokhttp3/internal/connection/c;` @AccessFlag PUBLIC {
    temp;

  #L32d284.  v1:= v1.`okhttp3.g0.s` @type ^`okhttp3.internal.connection.c` @kind object;
  #L32d288.  return v1 @kind object;
}
procedure `void` `g`(`okhttp3.b0$a` v0 @kind this, `okhttp3.g0$a` v1 @kind object, `okhttp3.internal.connection.c` v2 @kind object) @signature `Lokhttp3/b0$a;.g:(Lokhttp3/g0$a;Lokhttp3/internal/connection/c;)V` @AccessFlag PUBLIC {
    temp;

  #L32d314.  call `k`(v1, v2) @signature `Lokhttp3/g0$a;.k:(Lokhttp3/internal/connection/c;)V` @kind virtual;
  #L32d31a.  return @kind void;
}
procedure `okhttp3.internal.connection.g` `h`(`okhttp3.b0$a` v0 @kind this, `okhttp3.l` v1 @kind object) @signature `Lokhttp3/b0$a;.h:(Lokhttp3/l;)Lokhttp3/internal/connection/g;` @AccessFlag PUBLIC {
    temp;

  #L32d29c.  v1:= v1.`okhttp3.l.a` @type ^`okhttp3.internal.connection.g` @kind object;
  #L32d2a0.  return v1 @kind object;
}
