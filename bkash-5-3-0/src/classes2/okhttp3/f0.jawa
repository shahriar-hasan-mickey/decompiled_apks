record `okhttp3.f0` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`okhttp3.f0` v0 @kind this) @signature `Lokhttp3/f0;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32ea9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32eaa2.  return @kind void;
}
procedure `okhttp3.f0` `c`(`okhttp3.z` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lokhttp3/f0;.c:(Lokhttp3/z;Ljava/lang/String;)Lokhttp3/f0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32ea38.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L32ea3c.  if v2 == 0 then goto L32ea7a;
  #L32ea40.  call temp:= `a`(v2) @signature `Lokhttp3/z;.a:()Ljava/nio/charset/Charset;` @kind virtual;
  #L32ea46.  v0:= temp @kind object;
  #L32ea48.  if v0 != 0 then goto L32ea7a;
  #L32ea4c.  v0:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L32ea50.  v1:= new `java.lang.StringBuilder`;
  #L32ea54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32ea5a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ea60.  v2:= "; charset=utf-8" @kind object;
  #L32ea64.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ea6a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32ea70.  v2:= temp @kind object;
  #L32ea72.  call temp:= `d`(v2) @signature `Lokhttp3/z;.d:(Ljava/lang/String;)Lokhttp3/z;` @kind static;
  #L32ea78.  v2:= temp @kind object;
  #L32ea7a.  call temp:= `getBytes`(v3, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L32ea80.  v3:= temp @kind object;
  #L32ea82.  call temp:= `d`(v2, v3) @signature `Lokhttp3/f0;.d:(Lokhttp3/z;[B)Lokhttp3/f0;` @kind static;
  #L32ea88.  v2:= temp @kind object;
  #L32ea8a.  return v2 @kind object;
}
procedure `okhttp3.f0` `d`(`okhttp3.z` v2 @kind object, `byte`[] v3 @kind object) @signature `Lokhttp3/f0;.d:(Lokhttp3/z;[B)Lokhttp3/f0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L32e9e4.  v0:= length @variable v3;
  #L32e9e6.  v1:= 0I;
  #L32e9e8.  call temp:= `e`(v2, v3, v1, v0) @signature `Lokhttp3/f0;.e:(Lokhttp3/z;[BII)Lokhttp3/f0;` @kind static;
  #L32e9ee.  v2:= temp @kind object;
  #L32e9f0.  return v2 @kind object;
}
procedure `okhttp3.f0` `e`(`okhttp3.z` v7 @kind object, `byte`[] v8 @kind object, `int` v9 , `int` v10 ) @signature `Lokhttp3/f0;.e:(Lokhttp3/z;[BII)Lokhttp3/f0;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32ea04.  v0:= "content == null" @kind object;
  #L32ea08.  call temp:= `requireNonNull`(v8, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32ea0e.  v0:= length @variable v8;
  #L32ea10.  v1:= (`long`) v0 @kind i2l;
  #L32ea12.  v3:= (`long`) v9 @kind i2l;
  #L32ea14.  v5:= (`long`) v10 @kind i2l;
  #L32ea16.  call `f`(v1, v3, v5) @signature `Lee/e;.f:(JJJ)V` @kind static;
  #L32ea1c.  v0:= new `okhttp3.f0$a`;
  #L32ea20.  call `<init>`(v0, v7, v10, v8, v9) @signature `Lokhttp3/f0$a;.<init>:(Lokhttp3/z;I[BI)V` @kind direct;
  #L32ea26.  return v0 @kind object;
}
procedure `long` `a`() @signature `Lokhttp3/f0;.a:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.z` `b`() @signature `Lokhttp3/f0;.b:()Lokhttp3/z;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `f`(`okhttp3.f0` v1 @kind this) @signature `Lokhttp3/f0;.f:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e9bc.  v0:= 0I;
  #L32e9be.  return v0;
}
procedure `boolean` `g`(`okhttp3.f0` v1 @kind this) @signature `Lokhttp3/f0;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32e9d0.  v0:= 0I;
  #L32e9d2.  return v0;
}
procedure `void` `h`(`okio.d` v0 @kind object) @signature `Lokhttp3/f0;.h:(Lokio/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
