record `okhttp3.h` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.h.a` @AccessFlag PRIVATE_FINAL;
  `ke.c` `okhttp3.h.b` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.h` `@@okhttp3.h.c` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L327f24.  v0:= new `okhttp3.h$a`;
  #L327f28.  call `<init>`(v0) @signature `Lokhttp3/h$a;.<init>:()V` @kind direct;
  #L327f2e.  call temp:= `b`(v0) @signature `Lokhttp3/h$a;.b:()Lokhttp3/h;` @kind virtual;
  #L327f34.  v0:= temp @kind object;
  #L327f36.  `@@okhttp3.h.c` @type ^`okhttp3.h` := v0 @kind object;
  #L327f3a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.h` v0 @kind this, `java.util.Set` v1 @kind object, `ke.c` v2 @kind object) @signature `Lokhttp3/h;.<init>:(Ljava/util/Set;Lke/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L327f4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L327f52.  v0.`okhttp3.h.a` @type ^`java.util.Set` := v1 @kind object;
  #L327f56.  v0.`okhttp3.h.b` @type ^`ke.c` := v2 @kind object;
  #L327f5a.  return @kind void;
}
procedure `java.lang.String` `c`(`java.security.cert.Certificate` v2 @kind object) @signature `Lokhttp3/h;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L327dc0.  v0:= instanceof @variable v2 @type ^`java.security.cert.X509Certificate` @kind boolean;
  #L327dc4.  if v0 == 0 then goto L327e00;
  #L327dc8.  v0:= new `java.lang.StringBuilder`;
  #L327dcc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L327dd2.  v1:= "sha256/" @kind object;
  #L327dd6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327ddc.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L327de0.  call temp:= `e`(v2) @signature `Lokhttp3/h;.e:(Ljava/security/cert/X509Certificate;)Lokio/f;` @kind static;
  #L327de6.  v2:= temp @kind object;
  #L327de8.  call temp:= `base64`(v2) @signature `Lokio/f;.base64:()Ljava/lang/String;` @kind virtual;
  #L327dee.  v2:= temp @kind object;
  #L327df0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L327df6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L327dfc.  v2:= temp @kind object;
  #L327dfe.  return v2 @kind object;
  #L327e00.  v2:= new `java.lang.IllegalArgumentException`;
  #L327e04.  v0:= "Certificate pinning requires X509 certificates" @kind object;
  #L327e08.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L327e0e.  throw v2;
}
procedure `okio.f` `d`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lokhttp3/h;.d:(Ljava/security/cert/X509Certificate;)Lokio/f;` @AccessFlag STATIC {
    temp;

  #L327ebc.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L327ec2.  v0:= temp @kind object;
  #L327ec4.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L327eca.  v0:= temp @kind object;
  #L327ecc.  call temp:= `of`(v0) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L327ed2.  v0:= temp @kind object;
  #L327ed4.  call temp:= `sha1`(v0) @signature `Lokio/f;.sha1:()Lokio/f;` @kind virtual;
  #L327eda.  v0:= temp @kind object;
  #L327edc.  return v0 @kind object;
}
procedure `okio.f` `e`(`java.security.cert.X509Certificate` v0 @kind object) @signature `Lokhttp3/h;.e:(Ljava/security/cert/X509Certificate;)Lokio/f;` @AccessFlag STATIC {
    temp;

  #L327ef0.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L327ef6.  v0:= temp @kind object;
  #L327ef8.  call temp:= `getEncoded`(v0) @signature `Ljava/security/PublicKey;.getEncoded:()[B` @kind interface;
  #L327efe.  v0:= temp @kind object;
  #L327f00.  call temp:= `of`(v0) @signature `Lokio/f;.of:([B)Lokio/f;` @kind static;
  #L327f06.  v0:= temp @kind object;
  #L327f08.  call temp:= `sha256`(v0) @signature `Lokio/f;.sha256:()Lokio/f;` @kind virtual;
  #L327f0e.  v0:= temp @kind object;
  #L327f10.  return v0 @kind object;
}
procedure `void` `a`(`okhttp3.h` v12 @kind this, `java.lang.String` v13 @kind object, `java.util.List` v14 @kind object) @signature `Lokhttp3/h;.a:(Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L327f6c.  call temp:= `b`(v12, v13) @signature `Lokhttp3/h;.b:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L327f72.  v0:= temp @kind object;
  #L327f74.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L327f7a.  v1:= temp;
  #L327f7c.  if v1 == 0 then goto L327f82;
  #L327f80.  return @kind void;
  #L327f82.  v1:= v12.`okhttp3.h.b` @type ^`ke.c` @kind object;
  #L327f86.  if v1 == 0 then goto L327f92;
  #L327f8a.  call temp:= `a`(v1, v14, v13) @signature `Lke/c;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L327f90.  v14:= temp @kind object;
  #L327f92.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L327f98.  v1:= temp;
  #L327f9a.  v2:= 0I;
  #L327f9c.  v3:= 0I;
  #L327f9e.  if v3 >= v1 then goto L32806e;
  #L327fa2.  call temp:= `get`(v14, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L327fa8.  v4:= temp @kind object;
  #L327faa.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L327fae.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L327fb4.  v5:= temp;
  #L327fb6.  v6:= 0I;
  #L327fb8.  v7:= v6 @kind object;
  #L327fba.  v8:= 0I;
  #L327fbc.  if v8 >= v5 then goto L328068;
  #L327fc0.  call temp:= `get`(v0, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L327fc6.  v9:= temp @kind object;
  #L327fc8.  v9:= (`okhttp3.h$b`) v9 @kind object;
  #L327fcc.  v10:= v9.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L327fd0.  v11:= "sha256/" @kind object;
  #L327fd4.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327fda.  v10:= temp;
  #L327fdc.  if v10 == 0 then goto L327ffe;
  #L327fe0.  if v6 != 0 then goto L327fec;
  #L327fe4.  call temp:= `e`(v4) @signature `Lokhttp3/h;.e:(Ljava/security/cert/X509Certificate;)Lokio/f;` @kind static;
  #L327fea.  v6:= temp @kind object;
  #L327fec.  v9:= v9.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L327ff0.  call temp:= `equals`(v9, v6) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L327ff6.  v9:= temp;
  #L327ff8.  if v9 == 0 then goto L328030;
  #L327ffc.  return @kind void;
  #L327ffe.  v10:= v9.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L328002.  v11:= "sha1/" @kind object;
  #L328006.  call temp:= `equals`(v10, v11) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L32800c.  v10:= temp;
  #L32800e.  if v10 == 0 then goto L328036;
  #L328012.  if v7 != 0 then goto L32801e;
  #L328016.  call temp:= `d`(v4) @signature `Lokhttp3/h;.d:(Ljava/security/cert/X509Certificate;)Lokio/f;` @kind static;
  #L32801c.  v7:= temp @kind object;
  #L32801e.  v9:= v9.`okhttp3.h$b.d` @type ^`okio.f` @kind object;
  #L328022.  call temp:= `equals`(v9, v7) @signature `Lokio/f;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L328028.  v9:= temp;
  #L32802a.  if v9 == 0 then goto L328030;
  #L32802e.  return @kind void;
  #L328030.  v8:= v8 + 1;
  #L328034.  goto L327fbc;
  #L328036.  v13:= new `java.lang.AssertionError`;
  #L32803a.  v14:= new `java.lang.StringBuilder`;
  #L32803e.  call `<init>`(v14) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328044.  v0:= "unsupported hashAlgorithm: " @kind object;
  #L328048.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32804e.  v0:= v9.`okhttp3.h$b.c` @type ^`java.lang.String` @kind object;
  #L328052.  call temp:= `append`(v14, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328058.  call temp:= `toString`(v14) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32805e.  v14:= temp @kind object;
  #L328060.  call `<init>`(v13, v14) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L328066.  throw v13;
  #L328068.  v3:= v3 + 1;
  #L32806c.  goto L327f9e;
  #L32806e.  v1:= new `java.lang.StringBuilder`;
  #L328072.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L328078.  v3:= "Certificate pinning failure!" @kind object;
  #L32807c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328082.  v3:= "\n  Peer certificate chain:" @kind object;
  #L328086.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32808c.  call temp:= `size`(v14) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L328092.  v3:= temp;
  #L328094.  v4:= 0I;
  #L328096.  v5:= "\n    " @kind object;
  #L32809a.  if v4 >= v3 then goto L3280e4;
  #L32809e.  call temp:= `get`(v14, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3280a4.  v6:= temp @kind object;
  #L3280a6.  v6:= (`java.security.cert.X509Certificate`) v6 @kind object;
  #L3280aa.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280b0.  call temp:= `c`(v6) @signature `Lokhttp3/h;.c:(Ljava/security/cert/Certificate;)Ljava/lang/String;` @kind static;
  #L3280b6.  v5:= temp @kind object;
  #L3280b8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280be.  v5:= ": " @kind object;
  #L3280c2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280c8.  call temp:= `getSubjectDN`(v6) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L3280ce.  v5:= temp @kind object;
  #L3280d0.  call temp:= `getName`(v5) @signature `Ljava/security/Principal;.getName:()Ljava/lang/String;` @kind interface;
  #L3280d6.  v5:= temp @kind object;
  #L3280d8.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280de.  v4:= v4 + 1;
  #L3280e2.  goto L328096;
  #L3280e4.  v14:= "\n  Pinned certificates for " @kind object;
  #L3280e8.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280ee.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280f4.  v13:= ":" @kind object;
  #L3280f8.  call temp:= `append`(v1, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3280fe.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L328104.  v13:= temp;
  #L328106.  if v2 >= v13 then goto L328128;
  #L32810a.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L328110.  v14:= temp @kind object;
  #L328112.  v14:= (`okhttp3.h$b`) v14 @kind object;
  #L328116.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32811c.  call temp:= `append`(v1, v14) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L328122.  v2:= v2 + 1;
  #L328126.  goto L328106;
  #L328128.  v13:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L32812c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L328132.  v14:= temp @kind object;
  #L328134.  call `<init>`(v13, v14) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32813a.  throw v13;
}
procedure `java.util.List` `b`(`okhttp3.h` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lokhttp3/h;.b:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L327e20.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L327e26.  v0:= temp @kind object;
  #L327e28.  v1:= v4.`okhttp3.h.a` @type ^`java.util.Set` @kind object;
  #L327e2c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L327e32.  v1:= temp @kind object;
  #L327e34.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L327e3a.  v2:= temp;
  #L327e3c.  if v2 == 0 then goto L327e76;
  #L327e40.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L327e46.  v2:= temp @kind object;
  #L327e48.  v2:= (`okhttp3.h$b`) v2 @kind object;
  #L327e4c.  call temp:= `a`(v2, v5) @signature `Lokhttp3/h$b;.a:(Ljava/lang/String;)Z` @kind virtual;
  #L327e52.  v3:= temp;
  #L327e54.  if v3 == 0 then goto L327e34;
  #L327e58.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L327e5e.  v3:= temp;
  #L327e60.  if v3 == 0 then goto L327e6e;
  #L327e64.  v0:= new `java.util.ArrayList`;
  #L327e68.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L327e6e.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L327e74.  goto L327e34;
  #L327e76.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.h` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lokhttp3/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L327d3c.  v0:= 1I;
  #L327d3e.  if v4 != v3 then goto L327d44;
  #L327d42.  return v0;
  #L327d44.  v1:= instanceof @variable v4 @type ^`okhttp3.h` @kind boolean;
  #L327d48.  if v1 == 0 then goto L327d7a;
  #L327d4c.  v1:= v3.`okhttp3.h.b` @type ^`ke.c` @kind object;
  #L327d50.  v4:= (`okhttp3.h`) v4 @kind object;
  #L327d54.  v2:= v4.`okhttp3.h.b` @type ^`ke.c` @kind object;
  #L327d58.  call temp:= `equals`(v1, v2) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L327d5e.  v1:= temp;
  #L327d60.  if v1 == 0 then goto L327d7a;
  #L327d64.  v1:= v3.`okhttp3.h.a` @type ^`java.util.Set` @kind object;
  #L327d68.  v4:= v4.`okhttp3.h.a` @type ^`java.util.Set` @kind object;
  #L327d6c.  call temp:= `equals`(v1, v4) @signature `Ljava/util/Set;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L327d72.  v4:= temp;
  #L327d74.  if v4 == 0 then goto L327d7a;
  #L327d78.  goto L327d7c;
  #L327d7a.  v0:= 0I;
  #L327d7c.  return v0;
}
procedure `okhttp3.h` `f`(`okhttp3.h` v2 @kind this, `ke.c` v3 @kind object) @signature `Lokhttp3/h;.f:(Lke/c;)Lokhttp3/h;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L327e88.  v0:= v2.`okhttp3.h.b` @type ^`ke.c` @kind object;
  #L327e8c.  call temp:= `equals`(v0, v3) @signature `Ljava/util/Objects;.equals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L327e92.  v0:= temp;
  #L327e94.  if v0 == 0 then goto L327e9c;
  #L327e98.  v0:= v2 @kind object;
  #L327e9a.  goto L327eaa;
  #L327e9c.  v0:= new `okhttp3.h`;
  #L327ea0.  v1:= v2.`okhttp3.h.a` @type ^`java.util.Set` @kind object;
  #L327ea4.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/h;.<init>:(Ljava/util/Set;Lke/c;)V` @kind direct;
  #L327eaa.  return v0 @kind object;
}
procedure `int` `hashCode`(`okhttp3.h` v2 @kind this) @signature `Lokhttp3/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L327d90.  v0:= v2.`okhttp3.h.b` @type ^`ke.c` @kind object;
  #L327d94.  call temp:= `hashCode`(v0) @signature `Ljava/util/Objects;.hashCode:(Ljava/lang/Object;)I` @kind static;
  #L327d9a.  v0:= temp;
  #L327d9c.  v0:= v0 * 31;
  #L327da0.  v1:= v2.`okhttp3.h.a` @type ^`java.util.Set` @kind object;
  #L327da4.  call temp:= `hashCode`(v1) @signature `Ljava/util/Set;.hashCode:()I` @kind interface;
  #L327daa.  v1:= temp;
  #L327dac.  v0:= v0 + v1 @kind int;
  #L327dae.  return v0;
}
