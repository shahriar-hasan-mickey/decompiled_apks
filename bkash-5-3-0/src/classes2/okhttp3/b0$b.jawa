record `okhttp3.b0$b` @kind class @AccessFlag PUBLIC_FINAL {
  `int` `okhttp3.b0$b.A` @AccessFlag ;
  `okhttp3.p` `okhttp3.b0$b.a` @AccessFlag ;
  `java.net.Proxy` `okhttp3.b0$b.b` @AccessFlag ;
  `java.util.List` `okhttp3.b0$b.c` @AccessFlag ;
  `java.util.List` `okhttp3.b0$b.d` @AccessFlag ;
  `java.util.List` `okhttp3.b0$b.e` @AccessFlag FINAL;
  `java.util.List` `okhttp3.b0$b.f` @AccessFlag FINAL;
  `okhttp3.u$b` `okhttp3.b0$b.g` @AccessFlag ;
  `java.net.ProxySelector` `okhttp3.b0$b.h` @AccessFlag ;
  `okhttp3.o` `okhttp3.b0$b.i` @AccessFlag ;
  `fe.d` `okhttp3.b0$b.j` @AccessFlag ;
  `javax.net.SocketFactory` `okhttp3.b0$b.k` @AccessFlag ;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.b0$b.l` @AccessFlag ;
  `ke.c` `okhttp3.b0$b.m` @AccessFlag ;
  `javax.net.ssl.HostnameVerifier` `okhttp3.b0$b.n` @AccessFlag ;
  `okhttp3.h` `okhttp3.b0$b.o` @AccessFlag ;
  `okhttp3.d` `okhttp3.b0$b.p` @AccessFlag ;
  `okhttp3.d` `okhttp3.b0$b.q` @AccessFlag ;
  `okhttp3.l` `okhttp3.b0$b.r` @AccessFlag ;
  `okhttp3.s` `okhttp3.b0$b.s` @AccessFlag ;
  `boolean` `okhttp3.b0$b.t` @AccessFlag ;
  `boolean` `okhttp3.b0$b.u` @AccessFlag ;
  `boolean` `okhttp3.b0$b.v` @AccessFlag ;
  `int` `okhttp3.b0$b.w` @AccessFlag ;
  `int` `okhttp3.b0$b.x` @AccessFlag ;
  `int` `okhttp3.b0$b.y` @AccessFlag ;
  `int` `okhttp3.b0$b.z` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.b0$b` v2 @kind this) @signature `Lokhttp3/b0$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32d4c0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32d4c6.  v0:= new `java.util.ArrayList`;
  #L32d4ca.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32d4d0.  v2.`okhttp3.b0$b.e` @type ^`java.util.List` := v0 @kind object;
  #L32d4d4.  v0:= new `java.util.ArrayList`;
  #L32d4d8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32d4de.  v2.`okhttp3.b0$b.f` @type ^`java.util.List` := v0 @kind object;
  #L32d4e2.  v0:= new `okhttp3.p`;
  #L32d4e6.  call `<init>`(v0) @signature `Lokhttp3/p;.<init>:()V` @kind direct;
  #L32d4ec.  v2.`okhttp3.b0$b.a` @type ^`okhttp3.p` := v0 @kind object;
  #L32d4f0.  v0:= `@@okhttp3.b0.H` @type ^`java.util.List` @kind object;
  #L32d4f4.  v2.`okhttp3.b0$b.c` @type ^`java.util.List` := v0 @kind object;
  #L32d4f8.  v0:= `@@okhttp3.b0.I` @type ^`java.util.List` @kind object;
  #L32d4fc.  v2.`okhttp3.b0$b.d` @type ^`java.util.List` := v0 @kind object;
  #L32d500.  v0:= `@@okhttp3.u.a` @type ^`okhttp3.u` @kind object;
  #L32d504.  call temp:= `l`(v0) @signature `Lokhttp3/u;.l:(Lokhttp3/u;)Lokhttp3/u$b;` @kind static;
  #L32d50a.  v0:= temp @kind object;
  #L32d50c.  v2.`okhttp3.b0$b.g` @type ^`okhttp3.u$b` := v0 @kind object;
  #L32d510.  call temp:= `getDefault`() @signature `Ljava/net/ProxySelector;.getDefault:()Ljava/net/ProxySelector;` @kind static;
  #L32d516.  v0:= temp @kind object;
  #L32d518.  v2.`okhttp3.b0$b.h` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L32d51c.  if v0 != 0 then goto L32d52e;
  #L32d520.  v0:= new `je.a`;
  #L32d524.  call `<init>`(v0) @signature `Lje/a;.<init>:()V` @kind direct;
  #L32d52a.  v2.`okhttp3.b0$b.h` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L32d52e.  v0:= `@@okhttp3.o.a` @type ^`okhttp3.o` @kind object;
  #L32d532.  v2.`okhttp3.b0$b.i` @type ^`okhttp3.o` := v0 @kind object;
  #L32d536.  call temp:= `getDefault`() @signature `Ljavax/net/SocketFactory;.getDefault:()Ljavax/net/SocketFactory;` @kind static;
  #L32d53c.  v0:= temp @kind object;
  #L32d53e.  v2.`okhttp3.b0$b.k` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L32d542.  v0:= `@@ke.d.a` @type ^`ke.d` @kind object;
  #L32d546.  v2.`okhttp3.b0$b.n` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L32d54a.  v0:= `@@okhttp3.h.c` @type ^`okhttp3.h` @kind object;
  #L32d54e.  v2.`okhttp3.b0$b.o` @type ^`okhttp3.h` := v0 @kind object;
  #L32d552.  v0:= `@@okhttp3.d.a` @type ^`okhttp3.d` @kind object;
  #L32d556.  v2.`okhttp3.b0$b.p` @type ^`okhttp3.d` := v0 @kind object;
  #L32d55a.  v2.`okhttp3.b0$b.q` @type ^`okhttp3.d` := v0 @kind object;
  #L32d55e.  v0:= new `okhttp3.l`;
  #L32d562.  call `<init>`(v0) @signature `Lokhttp3/l;.<init>:()V` @kind direct;
  #L32d568.  v2.`okhttp3.b0$b.r` @type ^`okhttp3.l` := v0 @kind object;
  #L32d56c.  v0:= `@@okhttp3.s.a` @type ^`okhttp3.s` @kind object;
  #L32d570.  v2.`okhttp3.b0$b.s` @type ^`okhttp3.s` := v0 @kind object;
  #L32d574.  v0:= 1I;
  #L32d576.  v2.`okhttp3.b0$b.t` @type ^`boolean` := v0 @kind boolean;
  #L32d57a.  v2.`okhttp3.b0$b.u` @type ^`boolean` := v0 @kind boolean;
  #L32d57e.  v2.`okhttp3.b0$b.v` @type ^`boolean` := v0 @kind boolean;
  #L32d582.  v0:= 0I;
  #L32d584.  v2.`okhttp3.b0$b.w` @type ^`int` := v0;
  #L32d588.  v1:= 10000I;
  #L32d58c.  v2.`okhttp3.b0$b.x` @type ^`int` := v1;
  #L32d590.  v2.`okhttp3.b0$b.y` @type ^`int` := v1;
  #L32d594.  v2.`okhttp3.b0$b.z` @type ^`int` := v1;
  #L32d598.  v2.`okhttp3.b0$b.A` @type ^`int` := v0;
  #L32d59c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.b0$b` v3 @kind this, `okhttp3.b0` v4 @kind object) @signature `Lokhttp3/b0$b;.<init>:(Lokhttp3/b0;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32d5b0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32d5b6.  v0:= new `java.util.ArrayList`;
  #L32d5ba.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32d5c0.  v3.`okhttp3.b0$b.e` @type ^`java.util.List` := v0 @kind object;
  #L32d5c4.  v1:= new `java.util.ArrayList`;
  #L32d5c8.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32d5ce.  v3.`okhttp3.b0$b.f` @type ^`java.util.List` := v1 @kind object;
  #L32d5d2.  v2:= v4.`okhttp3.b0.g` @type ^`okhttp3.p` @kind object;
  #L32d5d6.  v3.`okhttp3.b0$b.a` @type ^`okhttp3.p` := v2 @kind object;
  #L32d5da.  v2:= v4.`okhttp3.b0.h` @type ^`java.net.Proxy` @kind object;
  #L32d5de.  v3.`okhttp3.b0$b.b` @type ^`java.net.Proxy` := v2 @kind object;
  #L32d5e2.  v2:= v4.`okhttp3.b0.i` @type ^`java.util.List` @kind object;
  #L32d5e6.  v3.`okhttp3.b0$b.c` @type ^`java.util.List` := v2 @kind object;
  #L32d5ea.  v2:= v4.`okhttp3.b0.j` @type ^`java.util.List` @kind object;
  #L32d5ee.  v3.`okhttp3.b0$b.d` @type ^`java.util.List` := v2 @kind object;
  #L32d5f2.  v2:= v4.`okhttp3.b0.k` @type ^`java.util.List` @kind object;
  #L32d5f6.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32d5fc.  v0:= v4.`okhttp3.b0.l` @type ^`java.util.List` @kind object;
  #L32d600.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L32d606.  v0:= v4.`okhttp3.b0.m` @type ^`okhttp3.u$b` @kind object;
  #L32d60a.  v3.`okhttp3.b0$b.g` @type ^`okhttp3.u$b` := v0 @kind object;
  #L32d60e.  v0:= v4.`okhttp3.b0.n` @type ^`java.net.ProxySelector` @kind object;
  #L32d612.  v3.`okhttp3.b0$b.h` @type ^`java.net.ProxySelector` := v0 @kind object;
  #L32d616.  v0:= v4.`okhttp3.b0.o` @type ^`okhttp3.o` @kind object;
  #L32d61a.  v3.`okhttp3.b0$b.i` @type ^`okhttp3.o` := v0 @kind object;
  #L32d61e.  v0:= v4.`okhttp3.b0.p` @type ^`fe.d` @kind object;
  #L32d622.  v3.`okhttp3.b0$b.j` @type ^`fe.d` := v0 @kind object;
  #L32d626.  v0:= v4.`okhttp3.b0.q` @type ^`javax.net.SocketFactory` @kind object;
  #L32d62a.  v3.`okhttp3.b0$b.k` @type ^`javax.net.SocketFactory` := v0 @kind object;
  #L32d62e.  v0:= v4.`okhttp3.b0.r` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L32d632.  v3.`okhttp3.b0$b.l` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L32d636.  v0:= v4.`okhttp3.b0.s` @type ^`ke.c` @kind object;
  #L32d63a.  v3.`okhttp3.b0$b.m` @type ^`ke.c` := v0 @kind object;
  #L32d63e.  v0:= v4.`okhttp3.b0.t` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L32d642.  v3.`okhttp3.b0$b.n` @type ^`javax.net.ssl.HostnameVerifier` := v0 @kind object;
  #L32d646.  v0:= v4.`okhttp3.b0.u` @type ^`okhttp3.h` @kind object;
  #L32d64a.  v3.`okhttp3.b0$b.o` @type ^`okhttp3.h` := v0 @kind object;
  #L32d64e.  v0:= v4.`okhttp3.b0.v` @type ^`okhttp3.d` @kind object;
  #L32d652.  v3.`okhttp3.b0$b.p` @type ^`okhttp3.d` := v0 @kind object;
  #L32d656.  v0:= v4.`okhttp3.b0.w` @type ^`okhttp3.d` @kind object;
  #L32d65a.  v3.`okhttp3.b0$b.q` @type ^`okhttp3.d` := v0 @kind object;
  #L32d65e.  v0:= v4.`okhttp3.b0.x` @type ^`okhttp3.l` @kind object;
  #L32d662.  v3.`okhttp3.b0$b.r` @type ^`okhttp3.l` := v0 @kind object;
  #L32d666.  v0:= v4.`okhttp3.b0.y` @type ^`okhttp3.s` @kind object;
  #L32d66a.  v3.`okhttp3.b0$b.s` @type ^`okhttp3.s` := v0 @kind object;
  #L32d66e.  v0:= v4.`okhttp3.b0.z` @type ^`boolean` @kind boolean;
  #L32d672.  v3.`okhttp3.b0$b.t` @type ^`boolean` := v0 @kind boolean;
  #L32d676.  v0:= v4.`okhttp3.b0.A` @type ^`boolean` @kind boolean;
  #L32d67a.  v3.`okhttp3.b0$b.u` @type ^`boolean` := v0 @kind boolean;
  #L32d67e.  v0:= v4.`okhttp3.b0.B` @type ^`boolean` @kind boolean;
  #L32d682.  v3.`okhttp3.b0$b.v` @type ^`boolean` := v0 @kind boolean;
  #L32d686.  v0:= v4.`okhttp3.b0.C` @type ^`int`;
  #L32d68a.  v3.`okhttp3.b0$b.w` @type ^`int` := v0;
  #L32d68e.  v0:= v4.`okhttp3.b0.D` @type ^`int`;
  #L32d692.  v3.`okhttp3.b0$b.x` @type ^`int` := v0;
  #L32d696.  v0:= v4.`okhttp3.b0.E` @type ^`int`;
  #L32d69a.  v3.`okhttp3.b0$b.y` @type ^`int` := v0;
  #L32d69e.  v0:= v4.`okhttp3.b0.F` @type ^`int`;
  #L32d6a2.  v3.`okhttp3.b0$b.z` @type ^`int` := v0;
  #L32d6a6.  v4:= v4.`okhttp3.b0.G` @type ^`int`;
  #L32d6aa.  v3.`okhttp3.b0$b.A` @type ^`int` := v4;
  #L32d6ae.  return @kind void;
}
procedure `okhttp3.b0$b` `a`(`okhttp3.b0$b` v1 @kind this, `okhttp3.y` v2 @kind object) @signature `Lokhttp3/b0$b;.a:(Lokhttp3/y;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d348.  if v2 == 0 then goto L32d358;
  #L32d34c.  v0:= v1.`okhttp3.b0$b.e` @type ^`java.util.List` @kind object;
  #L32d350.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32d356.  return v1 @kind object;
  #L32d358.  v2:= new `java.lang.IllegalArgumentException`;
  #L32d35c.  v0:= "interceptor == null" @kind object;
  #L32d360.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d366.  throw v2;
}
procedure `okhttp3.b0` `b`(`okhttp3.b0$b` v1 @kind this) @signature `Lokhttp3/b0$b;.b:()Lokhttp3/b0;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d32c.  v0:= new `okhttp3.b0`;
  #L32d330.  call `<init>`(v0, v1) @signature `Lokhttp3/b0;.<init>:(Lokhttp3/b0$b;)V` @kind direct;
  #L32d336.  return v0 @kind object;
}
procedure `okhttp3.b0$b` `c`(`okhttp3.b0$b` v1 @kind this, `okhttp3.h` v2 @kind object) @signature `Lokhttp3/b0$b;.c:(Lokhttp3/h;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d378.  v0:= "certificatePinner == null" @kind object;
  #L32d37c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32d382.  v1.`okhttp3.b0$b.o` @type ^`okhttp3.h` := v2 @kind object;
  #L32d386.  return v1 @kind object;
}
procedure `okhttp3.b0$b` `d`(`okhttp3.b0$b` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/b0$b;.d:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d398.  v0:= "timeout" @kind object;
  #L32d39c.  call temp:= `e`(v0, v2, v4) @signature `Lee/e;.e:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L32d3a2.  v2:= temp;
  #L32d3a4.  v1.`okhttp3.b0$b.x` @type ^`int` := v2;
  #L32d3a8.  return v1 @kind object;
}
procedure `okhttp3.b0$b` `e`(`okhttp3.b0$b` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lokhttp3/b0$b;.e:(Ljava/util/List;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;

  #L32d3bc.  call temp:= `t`(v1) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L32d3c2.  v1:= temp @kind object;
  #L32d3c4.  v0.`okhttp3.b0$b.d` @type ^`java.util.List` := v1 @kind object;
  #L32d3c8.  return v0 @kind object;
}
procedure `okhttp3.b0$b` `f`(`okhttp3.b0$b` v1 @kind this, `okhttp3.p` v2 @kind object) @signature `Lokhttp3/b0$b;.f:(Lokhttp3/p;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d3dc.  if v2 == 0 then goto L32d3e6;
  #L32d3e0.  v1.`okhttp3.b0$b.a` @type ^`okhttp3.p` := v2 @kind object;
  #L32d3e4.  return v1 @kind object;
  #L32d3e6.  v2:= new `java.lang.IllegalArgumentException`;
  #L32d3ea.  v0:= "dispatcher == null" @kind object;
  #L32d3ee.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32d3f4.  throw v2;
}
procedure `okhttp3.b0$b` `g`(`okhttp3.b0$b` v1 @kind this, `javax.net.ssl.HostnameVerifier` v2 @kind object) @signature `Lokhttp3/b0$b;.g:(Ljavax/net/ssl/HostnameVerifier;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d408.  v0:= "hostnameVerifier == null" @kind object;
  #L32d40c.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32d412.  v1.`okhttp3.b0$b.n` @type ^`javax.net.ssl.HostnameVerifier` := v2 @kind object;
  #L32d416.  return v1 @kind object;
}
procedure `okhttp3.b0$b` `h`(`okhttp3.b0$b` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/b0$b;.h:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d428.  v0:= "timeout" @kind object;
  #L32d42c.  call temp:= `e`(v0, v2, v4) @signature `Lee/e;.e:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L32d432.  v2:= temp;
  #L32d434.  v1.`okhttp3.b0$b.y` @type ^`int` := v2;
  #L32d438.  return v1 @kind object;
}
procedure `okhttp3.b0$b` `i`(`okhttp3.b0$b` v0 @kind this, `boolean` v1 ) @signature `Lokhttp3/b0$b;.i:(Z)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;

  #L32d44c.  v0.`okhttp3.b0$b.v` @type ^`boolean` := v1 @kind boolean;
  #L32d450.  return v0 @kind object;
}
procedure `okhttp3.b0$b` `j`(`okhttp3.b0$b` v1 @kind this, `javax.net.ssl.SSLSocketFactory` v2 @kind object, `javax.net.ssl.X509TrustManager` v3 @kind object) @signature `Lokhttp3/b0$b;.j:(Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/X509TrustManager;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d464.  v0:= "sslSocketFactory == null" @kind object;
  #L32d468.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32d46e.  v0:= "trustManager == null" @kind object;
  #L32d472.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L32d478.  v1.`okhttp3.b0$b.l` @type ^`javax.net.ssl.SSLSocketFactory` := v2 @kind object;
  #L32d47c.  call temp:= `b`(v3) @signature `Lke/c;.b:(Ljavax/net/ssl/X509TrustManager;)Lke/c;` @kind static;
  #L32d482.  v2:= temp @kind object;
  #L32d484.  v1.`okhttp3.b0$b.m` @type ^`ke.c` := v2 @kind object;
  #L32d488.  return v1 @kind object;
}
procedure `okhttp3.b0$b` `k`(`okhttp3.b0$b` v1 @kind this, `long` v2 , `java.util.concurrent.TimeUnit` v4 @kind object) @signature `Lokhttp3/b0$b;.k:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/b0$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d49c.  v0:= "timeout" @kind object;
  #L32d4a0.  call temp:= `e`(v0, v2, v4) @signature `Lee/e;.e:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @kind static;
  #L32d4a6.  v2:= temp;
  #L32d4a8.  v1.`okhttp3.b0$b.z` @type ^`int` := v2;
  #L32d4ac.  return v1 @kind object;
}
