record `mc.a` @kind class @AccessFlag PUBLIC extends `ic.a` @kind class {
  `android.util.Size` `mc.a.b` @AccessFlag PRIVATE;
  `ic.e` `mc.a.c` @AccessFlag PRIVATE;
  `android.hardware.camera2.params.MeteringRectangle` `mc.a.d` @AccessFlag PRIVATE;
  `sc.b` `mc.a.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`mc.a` v0 @kind this, `io.flutter.plugins.camera.a0` v1 @kind object, `sc.b` v2 @kind object) @signature `Lmc/a;.<init>:(Lio/flutter/plugins/camera/a0;Lsc/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L321554.  call `<init>`(v0, v1) @signature `Lic/a;.<init>:(Lio/flutter/plugins/camera/a0;)V` @kind direct;
  #L32155a.  v0.`mc.a.e` @type ^`sc.b` := v2 @kind object;
  #L32155e.  return @kind void;
}
procedure `void` `c`(`mc.a` v7 @kind this) @signature `Lmc/a;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L321570.  v0:= v7.`mc.a.b` @type ^`android.util.Size` @kind object;
  #L321574.  if v0 == 0 then goto L3215e0;
  #L321578.  v0:= v7.`mc.a.c` @type ^`ic.e` @kind object;
  #L32157c.  if v0 != 0 then goto L321588;
  #L321580.  v0:= 0I;
  #L321582.  v7.`mc.a.d` @type ^`android.hardware.camera2.params.MeteringRectangle` := v0 @kind object;
  #L321586.  goto L3215de;
  #L321588.  v0:= v7.`mc.a.e` @type ^`sc.b` @kind object;
  #L32158c.  call temp:= `d`(v0) @signature `Lsc/b;.d:()Lio/flutter/embedding/engine/systemchannels/i$f;` @kind virtual;
  #L321592.  v0:= temp @kind object;
  #L321594.  if v0 != 0 then goto L3215ac;
  #L321598.  v0:= v7.`mc.a.e` @type ^`sc.b` @kind object;
  #L32159c.  call temp:= `c`(v0) @signature `Lsc/b;.c:()Lsc/a;` @kind virtual;
  #L3215a2.  v0:= temp @kind object;
  #L3215a4.  call temp:= `c`(v0) @signature `Lsc/a;.c:()Lio/flutter/embedding/engine/systemchannels/i$f;` @kind virtual;
  #L3215aa.  v0:= temp @kind object;
  #L3215ac.  v6:= v0 @kind object;
  #L3215ae.  v1:= v7.`mc.a.b` @type ^`android.util.Size` @kind object;
  #L3215b2.  v0:= v7.`mc.a.c` @type ^`ic.e` @kind object;
  #L3215b6.  v0:= v0.`ic.e.a` @type ^`java.lang.Double` @kind object;
  #L3215ba.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3215c0.  v2:= temp @kind wide;
  #L3215c2.  v0:= v7.`mc.a.c` @type ^`ic.e` @kind object;
  #L3215c6.  v0:= v0.`ic.e.b` @type ^`java.lang.Double` @kind object;
  #L3215ca.  call temp:= `doubleValue`(v0) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L3215d0.  v4:= temp @kind wide;
  #L3215d2.  call temp:= `b`(v1, v2, v4, v6) @signature `Lio/flutter/plugins/camera/d0;.b:(Landroid/util/Size;DDLio/flutter/embedding/engine/systemchannels/i$f;)Landroid/hardware/camera2/params/MeteringRectangle;` @kind static;
  #L3215d8.  v0:= temp @kind object;
  #L3215da.  v7.`mc.a.d` @type ^`android.hardware.camera2.params.MeteringRectangle` := v0 @kind object;
  #L3215de.  return @kind void;
  #L3215e0.  v0:= new `java.lang.AssertionError`;
  #L3215e4.  v1:= "The cameraBoundaries should be set (using `ExposurePointFeature.setCameraBoundaries(Size)`) before updating the exposure point." @kind object;
  #L3215e8.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3215ee.  throw v0;
}
procedure `java.lang.String` `a`(`mc.a` v1 @kind this) @signature `Lmc/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32153c.  v0:= "ExposurePointFeature" @kind object;
  #L321540.  return v0 @kind object;
}
procedure `void` `b`(`mc.a` v4 @kind this, `android.hardware.camera2.CaptureRequest$Builder` v5 @kind object) @signature `Lmc/a;.b:(Landroid/hardware/camera2/CaptureRequest$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L321650.  call temp:= `d`(v4) @signature `Lmc/a;.d:()Z` @kind virtual;
  #L321656.  v0:= temp;
  #L321658.  if v0 != 0 then goto L32165e;
  #L32165c.  return @kind void;
  #L32165e.  v0:= `@@android.hardware.camera2.CaptureRequest.CONTROL_AE_REGIONS` @type ^`android.hardware.camera2.CaptureRequest$Key` @kind object;
  #L321662.  v1:= v4.`mc.a.d` @type ^`android.hardware.camera2.params.MeteringRectangle` @kind object;
  #L321666.  if v1 != 0 then goto L32166e;
  #L32166a.  v1:= 0I;
  #L32166c.  goto L32167c;
  #L32166e.  v2:= 1I;
  #L321670.  v2:= new `android.hardware.camera2.params.MeteringRectangle`[v2];
  #L321674.  v3:= 0I;
  #L321676.  v2[v3]:= v1 @kind object;
  #L32167a.  v1:= v2 @kind object;
  #L32167c.  call `set`(v5, v0, v1) @signature `Landroid/hardware/camera2/CaptureRequest$Builder;.set:(Landroid/hardware/camera2/CaptureRequest$Key;Ljava/lang/Object;)V` @kind virtual;
  #L321682.  return @kind void;
}
procedure `boolean` `d`(`mc.a` v1 @kind this) @signature `Lmc/a;.d:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L321508.  v0:= v1.`ic.a.a` @type ^`io.flutter.plugins.camera.a0` @kind object;
  #L32150c.  call temp:= `a`(v0) @signature `Lio/flutter/plugins/camera/a0;.a:()Ljava/lang/Integer;` @kind interface;
  #L321512.  v0:= temp @kind object;
  #L321514.  if v0 == 0 then goto L321528;
  #L321518.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L32151e.  v0:= temp;
  #L321520.  if v0 <= 0 then goto L321528;
  #L321524.  v0:= 1I;
  #L321526.  goto L32152a;
  #L321528.  v0:= 0I;
  #L32152a.  return v0;
}
procedure `void` `e`(`mc.a` v0 @kind this, `android.util.Size` v1 @kind object) @signature `Lmc/a;.e:(Landroid/util/Size;)V` @AccessFlag PUBLIC {
    temp;

  #L321600.  v0.`mc.a.b` @type ^`android.util.Size` := v1 @kind object;
  #L321604.  call `c`(v0) @signature `Lmc/a;.c:()V` @kind direct;
  #L32160a.  return @kind void;
}
procedure `void` `f`(`mc.a` v1 @kind this, `ic.e` v2 @kind object) @signature `Lmc/a;.f:(Lic/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32161c.  if v2 == 0 then goto L321630;
  #L321620.  v0:= v2.`ic.e.a` @type ^`java.lang.Double` @kind object;
  #L321624.  if v0 == 0 then goto L321630;
  #L321628.  v0:= v2.`ic.e.b` @type ^`java.lang.Double` @kind object;
  #L32162c.  if v0 != 0 then goto L321632;
  #L321630.  v2:= 0I;
  #L321632.  v1.`mc.a.c` @type ^`ic.e` := v2 @kind object;
  #L321636.  call `c`(v1) @signature `Lmc/a;.c:()V` @kind direct;
  #L32163c.  return @kind void;
}
