record `qa.b` @kind class @AccessFlag PUBLIC {
  `float` `qa.b.a` @AccessFlag PRIVATE_FINAL;
  `float` `qa.b.b` @AccessFlag PRIVATE_FINAL;
  `float` `qa.b.c` @AccessFlag PRIVATE_FINAL;
  `float` `qa.b.d` @AccessFlag PRIVATE_FINAL;
  `float` `qa.b.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`qa.b` v0 @kind this, `float` v1 , `float` v2 , `float` v3 , `float` v4 ) @signature `Lqa/b;.<init>:(FFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L36ffd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36ffde.  v0.`qa.b.a` @type ^`float` := v1;
  #L36ffe2.  v0.`qa.b.b` @type ^`float` := v2;
  #L36ffe6.  v0.`qa.b.c` @type ^`float` := v3;
  #L36ffea.  v0.`qa.b.d` @type ^`float` := v4;
  #L36ffee.  v1:= v1 * v1 @kind float;
  #L36fff2.  v2:= v2 * v2 @kind float;
  #L36fff6.  v1:= v1 + v2 @kind float;
  #L36fff8.  v1:= (`double`) v1 @kind f2d;
  #L36fffa.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L370000.  v3:= v3 * v3 @kind float;
  #L370004.  v4:= v4 * v4 @kind float;
  #L370008.  v3:= v3 + v4 @kind float;
  #L37000a.  v1:= (`double`) v3 @kind f2d;
  #L37000c.  call temp:= `sqrt`(v1) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L370012.  v1:= temp @kind wide;
  #L370014.  v1:= (`float`) v1 @kind d2f;
  #L370016.  v0.`qa.b.e` @type ^`float` := v1;
  #L37001a.  return @kind void;
}
procedure `float` `a`(`qa.b` v1 @kind this) @signature `Lqa/b;.a:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ff60.  v0:= v1.`qa.b.c` @type ^`float`;
  #L36ff64.  return v0;
}
procedure `float` `b`(`qa.b` v1 @kind this) @signature `Lqa/b;.b:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ff78.  v0:= v1.`qa.b.e` @type ^`float`;
  #L36ff7c.  return v0;
}
procedure `float` `c`(`qa.b` v1 @kind this) @signature `Lqa/b;.c:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ff90.  v0:= v1.`qa.b.d` @type ^`float`;
  #L36ff94.  return v0;
}
procedure `float` `d`(`qa.b` v1 @kind this) @signature `Lqa/b;.d:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ffa8.  v0:= v1.`qa.b.a` @type ^`float`;
  #L36ffac.  return v0;
}
procedure `float` `e`(`qa.b` v1 @kind this) @signature `Lqa/b;.e:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ffc0.  v0:= v1.`qa.b.b` @type ^`float`;
  #L36ffc4.  return v0;
}
