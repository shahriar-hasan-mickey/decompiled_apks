record `v8.c` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.util.Comparator` @kind interface {
}
global `v8.c` `@@v8.c.g` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lv8/c;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L37fcd8.  v0:= new `v8.c`;
  #L37fcdc.  call `<init>`(v0) @signature `Lv8/c;.<init>:()V` @kind direct;
  #L37fce2.  `@@v8.c.g` @type ^`v8.c` := v0 @kind object;
  #L37fce6.  return @kind void;
}
procedure `void` `<init>`(`v8.c` v0 @kind this) @signature `Lv8/c;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L37fcf8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37fcfe.  return @kind void;
}
procedure `int` `compare`(`v8.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lv8/c;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {
    temp;

  #L37fcb4.  v1:= (`java.io.File`) v1 @kind object;
  #L37fcb8.  v2:= (`java.io.File`) v2 @kind object;
  #L37fcbc.  call temp:= `a`(v1, v2) @signature `Lv8/e;.a:(Ljava/io/File;Ljava/io/File;)I` @kind static;
  #L37fcc2.  v1:= temp;
  #L37fcc4.  return v1;
}
