record `rd.a$a` @kind class @AccessFlag FINAL {
}
global `java.lang.reflect.Method` `@@rd.a$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lrd/a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L375174.  v0:= new `rd.a$a`;
  #L375178.  call `<init>`(v0) @signature `Lrd/a$a;.<init>:()V` @kind direct;
  #L37517e.  v0:= constclass @type ^`java.lang.Throwable` @kind object;
  #L375182.  call temp:= `getMethods`(v0) @signature `Ljava/lang/Class;.getMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L375188.  v1:= temp @kind object;
  #L37518a.  v2:= "throwableMethods" @kind object;
  #L37518e.  call `e`(v1, v2) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L375194.  v2:= length @variable v1;
  #L375196.  v3:= 0I;
  #L375198.  v4:= 0I;
  #L37519a.  if v4 >= v2 then goto L3751f2;
  #L37519e.  v5:= v1[v4] @kind object;
  #L3751a2.  call temp:= `getName`(v5) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L3751a8.  v6:= temp @kind object;
  #L3751aa.  v7:= "addSuppressed" @kind object;
  #L3751ae.  call temp:= `a`(v6, v7) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3751b4.  v6:= temp;
  #L3751b6.  if v6 == 0 then goto L3751e4;
  #L3751ba.  call temp:= `getParameterTypes`(v5) @signature `Ljava/lang/reflect/Method;.getParameterTypes:()[Ljava/lang/Class;` @kind virtual;
  #L3751c0.  v6:= temp @kind object;
  #L3751c2.  v7:= "it.parameterTypes" @kind object;
  #L3751c6.  call `e`(v6, v7) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3751cc.  call temp:= `l`(v6) @signature `Lpd/b;.l:([Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3751d2.  v6:= temp @kind object;
  #L3751d4.  call temp:= `a`(v6, v0) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3751da.  v6:= temp;
  #L3751dc.  if v6 == 0 then goto L3751e4;
  #L3751e0.  v6:= 1I;
  #L3751e2.  goto L3751e6;
  #L3751e4.  v6:= 0I;
  #L3751e6.  if v6 == 0 then goto L3751ec;
  #L3751ea.  goto L3751f4;
  #L3751ec.  v4:= v4 + 1;
  #L3751f0.  goto L37519a;
  #L3751f2.  v5:= 0I;
  #L3751f4.  `@@rd.a$a.a` @type ^`java.lang.reflect.Method` := v5 @kind object;
  #L3751f8.  v0:= length @variable v1;
  #L3751fa.  if v3 >= v0 then goto L375222;
  #L3751fe.  v2:= v1[v3] @kind object;
  #L375202.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L375208.  v2:= temp @kind object;
  #L37520a.  v4:= "getSuppressed" @kind object;
  #L37520e.  call temp:= `a`(v2, v4) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L375214.  v2:= temp;
  #L375216.  if v2 == 0 then goto L37521c;
  #L37521a.  goto L375222;
  #L37521c.  v3:= v3 + 1;
  #L375220.  goto L3751fa;
  #L375222.  return @kind void;
}
procedure `void` `<init>`(`rd.a$a` v0 @kind this) @signature `Lrd/a$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L375234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37523a.  return @kind void;
}
