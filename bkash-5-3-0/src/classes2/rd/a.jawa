record `rd.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`rd.a` v0 @kind this) @signature `Lrd/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L375650.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L375656.  return @kind void;
}
procedure `void` `a`(`rd.a` v3 @kind this, `java.lang.Throwable` v4 @kind object, `java.lang.Throwable` v5 @kind object) @signature `Lrd/a;.a:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L375668.  v0:= "cause" @kind object;
  #L37566c.  call `f`(v4, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L375672.  v0:= "exception" @kind object;
  #L375676.  call `f`(v5, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L37567c.  v0:= `@@rd.a$a.a` @type ^`java.lang.reflect.Method` @kind object;
  #L375680.  if v0 == 0 then goto L375696;
  #L375684.  v1:= 1I;
  #L375686.  v1:= new `java.lang.Object`[v1];
  #L37568a.  v2:= 0I;
  #L37568c.  v1[v2]:= v5 @kind object;
  #L375690.  call temp:= `invoke`(v0, v4, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L375696.  return @kind void;
}
procedure `xd.d` `b`(`rd.a` v1 @kind this) @signature `Lrd/a;.b:()Lxd/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3756a8.  v0:= new `xd.b`;
  #L3756ac.  call `<init>`(v0) @signature `Lxd/b;.<init>:()V` @kind direct;
  #L3756b2.  return v0 @kind object;
}
