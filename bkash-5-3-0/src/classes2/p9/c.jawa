record `p9.c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `p9.c` `@@p9.c.HIGH_SPEED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `p9.c` `@@p9.c.LOW_POWER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `p9.c`[] `@@p9.c.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lp9/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36b600.  v0:= new `p9.c`;
  #L36b604.  v1:= "LOW_POWER" @kind object;
  #L36b608.  v2:= 0I;
  #L36b60a.  call `<init>`(v0, v1, v2) @signature `Lp9/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L36b610.  `@@p9.c.LOW_POWER` @type ^`p9.c` := v0 @kind object;
  #L36b614.  v1:= new `p9.c`;
  #L36b618.  v3:= "HIGH_SPEED" @kind object;
  #L36b61c.  v4:= 1I;
  #L36b61e.  call `<init>`(v1, v3, v4) @signature `Lp9/c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L36b624.  `@@p9.c.HIGH_SPEED` @type ^`p9.c` := v1 @kind object;
  #L36b628.  v3:= 2I;
  #L36b62a.  v3:= new `p9.c`[v3];
  #L36b62e.  v3[v2]:= v0 @kind object;
  #L36b632.  v3[v4]:= v1 @kind object;
  #L36b636.  `@@p9.c.g` @type ^`p9.c`[] := v3 @kind object;
  #L36b63a.  return @kind void;
}
procedure `void` `<init>`(`p9.c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lp9/c;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L36b64c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L36b652.  return @kind void;
}
procedure `p9.c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lp9/c;.valueOf:(Ljava/lang/String;)Lp9/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L36b5b8.  v0:= constclass @type ^`p9.c` @kind object;
  #L36b5bc.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L36b5c2.  v1:= temp @kind object;
  #L36b5c4.  v1:= (`p9.c`) v1 @kind object;
  #L36b5c8.  return v1 @kind object;
}
procedure `p9.c`[] `values`() @signature `Lp9/c;.values:()[Lp9/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L36b5dc.  v0:= `@@p9.c.g` @type ^`p9.c`[] @kind object;
  #L36b5e0.  call temp:= `clone`(v0) @signature `[Lp9/c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L36b5e6.  v0:= temp @kind object;
  #L36b5e8.  v0:= (`p9.c`[]) v0 @kind object;
  #L36b5ec.  return v0 @kind object;
}
