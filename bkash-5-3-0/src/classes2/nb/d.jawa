record `nb.d` @kind class @AccessFlag PUBLIC {
  `java.util.HashMap` `nb.d.a` @AccessFlag PRIVATE;
}
global `nb.d` `@@nb.d.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`nb.d` v1 @kind this) @signature `Lnb/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3231c0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3231c6.  v0:= new `java.util.HashMap`;
  #L3231ca.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3231d0.  v1.`nb.d.a` @type ^`java.util.HashMap` := v0 @kind object;
  #L3231d4.  return @kind void;
}
procedure `nb.d` `a`() @signature `Lnb/d;.a:()Lnb/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L323178.  v0:= constclass @type ^`nb.d` @kind object;
  #L32317c.  @monitorenter v0
  #L32317e.  v1:= `@@nb.d.b` @type ^`nb.d` @kind object;
  #L323182.  if v1 != 0 then goto L323194;
  #L323186.  v1:= new `nb.d`;
  #L32318a.  call `<init>`(v1) @signature `Lnb/d;.<init>:()V` @kind direct;
  #L323190.  `@@nb.d.b` @type ^`nb.d` := v1 @kind object;
  #L323194.  v1:= `@@nb.d.b` @type ^`nb.d` @kind object;
  #L323198.  @monitorexit v0
  #L32319a.  return v1 @kind object;
  #L32319c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L32319e.  @monitorexit v0
  #L3231a0.  throw v1;
  catch `java.lang.Throwable` @[L32317e..L323198] goto L32319c;
}
procedure `boolean` `d`(`nb.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lnb/d;.d:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L32313c.  v0:= "hideLoading" @kind object;
  #L323140.  call temp:= `equals`(v2, v0) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L323146.  v0:= temp;
  #L323148.  if v0 != 0 then goto L323162;
  #L32314c.  v0:= "showLoading" @kind object;
  #L323150.  call temp:= `equals`(v2, v0) @signature `Landroid/text/TextUtils;.equals:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Z` @kind static;
  #L323156.  v2:= temp;
  #L323158.  if v2 == 0 then goto L32315e;
  #L32315c.  goto L323162;
  #L32315e.  v2:= 0I;
  #L323160.  return v2;
  #L323162.  v2:= 1I;
  #L323164.  return v2;
}
procedure `void` `b`(`nb.d` v2 @kind this, `mb.a` v3 @kind object) @signature `Lnb/d;.b:(Lmb/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3231e8.  v0:= v3.`mb.a.a` @type ^`kb.a` @kind object;
  #L3231ec.  if v0 == 0 then goto L32327c;
  #L3231f0.  v1:= v2.`nb.d.a` @type ^`java.util.HashMap` @kind object;
  #L3231f4.  call temp:= `a`(v0) @signature `Lkb/a;.a:()Ljava/lang/String;` @kind virtual;
  #L3231fa.  v0:= temp @kind object;
  #L3231fc.  call temp:= `get`(v1, v0) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L323202.  v0:= temp @kind object;
  #L323204.  v0:= (`ob.c`) v0 @kind object;
  #L323208.  if v0 == 0 then goto L32321c;
  #L32320c.  v1:= v3.`mb.a.a` @type ^`kb.a` @kind object;
  #L323210.  v3:= v3.`mb.a.b` @type ^`ib.a` @kind object;
  #L323214.  call temp:= `handleBridgeEvent`(v0, v1, v3) @signature `Lob/c;.handleBridgeEvent:(Lkb/a;Lib/a;)Z` @kind interface;
  #L32321a.  goto L32327c;
  #L32321c.  v0:= v3.`mb.a.a` @type ^`kb.a` @kind object;
  #L323220.  call temp:= `a`(v0) @signature `Lkb/a;.a:()Ljava/lang/String;` @kind virtual;
  #L323226.  v0:= temp @kind object;
  #L323228.  call temp:= `d`(v2, v0) @signature `Lnb/d;.d:(Ljava/lang/String;)Z` @kind direct;
  #L32322e.  v0:= temp;
  #L323230.  if v0 == 0 then goto L323244;
  #L323234.  call temp:= `a`() @signature `Lo1/h;.a:()Lo1/f;` @kind static;
  #L32323a.  v0:= temp @kind object;
  #L32323c.  call `k`(v0, v3) @signature `Lo1/f;.k:(Ljava/lang/Object;)V` @kind virtual;
  #L323242.  goto L32327c;
  #L323244.  v0:= new `java.lang.StringBuilder`;
  #L323248.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32324e.  v1:= "runPlugin error " @kind object;
  #L323252.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L323258.  v3:= v3.`mb.a.a` @type ^`kb.a` @kind object;
  #L32325c.  call temp:= `a`(v3) @signature `Lkb/a;.a:()Ljava/lang/String;` @kind virtual;
  #L323262.  v3:= temp @kind object;
  #L323264.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32326a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L323270.  v3:= temp @kind object;
  #L323272.  v0:= "H5PluginManager" @kind object;
  #L323276.  call `e`(v0, v3) @signature `Lcom/zoloz/webcontainer/a;.e:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L32327c.  return @kind void;
}
procedure `void` `c`(`nb.d` v2 @kind this, `ob.c` v3 @kind object) @signature `Lnb/d;.c:(Lob/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L323290.  v0:= v2.`nb.d.a` @type ^`java.util.HashMap` @kind object;
  #L323294.  call temp:= `getJSApiName`(v3) @signature `Lob/c;.getJSApiName:()Ljava/lang/String;` @kind interface;
  #L32329a.  v1:= temp @kind object;
  #L32329c.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3232a2.  return @kind void;
}
