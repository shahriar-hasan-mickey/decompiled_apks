record `nb.c` @kind class @AccessFlag PUBLIC {
  `java.util.HashMap` `nb.c.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`nb.c` v1 @kind this) @signature `Lnb/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3230b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3230b6.  v0:= new `java.util.HashMap`;
  #L3230ba.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3230c0.  v1.`nb.c.a` @type ^`java.util.HashMap` := v0 @kind object;
  #L3230c4.  return @kind void;
}
procedure `void` `a`(`nb.c` v1 @kind this) @signature `Lnb/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3230d8.  v0:= v1.`nb.c.a` @type ^`java.util.HashMap` @kind object;
  #L3230dc.  call `clear`(v0) @signature `Ljava/util/HashMap;.clear:()V` @kind virtual;
  #L3230e2.  return @kind void;
}
procedure `void` `b`(`nb.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lnb/c;.b:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3230f4.  v0:= v1.`nb.c.a` @type ^`java.util.HashMap` @kind object;
  #L3230f8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3230fe.  v2:= temp @kind object;
  #L323100.  v2:= (`rb.a`) v2 @kind object;
  #L323104.  if v2 == 0 then goto L32310e;
  #L323108.  call `e`(v2) @signature `Lrb/a;.e:()V` @kind interface;
  #L32310e.  return @kind void;
}
procedure `void` `c`(`nb.c` v1 @kind this, `java.lang.String` v2 @kind object, `rb.a` v3 @kind object) @signature `Lnb/c;.c:(Ljava/lang/String;Lrb/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323120.  v0:= v1.`nb.c.a` @type ^`java.util.HashMap` @kind object;
  #L323124.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L32312a.  return @kind void;
}
procedure `boolean` `d`(`nb.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lnb/c;.d:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323088.  v0:= v1.`nb.c.a` @type ^`java.util.HashMap` @kind object;
  #L32308c.  call temp:= `get`(v0, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L323092.  v2:= temp @kind object;
  #L323094.  if v2 == 0 then goto L32309c;
  #L323098.  v2:= 1I;
  #L32309a.  return v2;
  #L32309c.  v2:= 0I;
  #L32309e.  return v2;
}
