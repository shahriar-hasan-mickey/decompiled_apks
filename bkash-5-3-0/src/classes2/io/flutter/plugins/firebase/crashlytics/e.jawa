record `io.flutter.plugins.firebase.crashlytics.e` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `io.flutter.plugins.firebase.crashlytics.n` `io.flutter.plugins.firebase.crashlytics.e.g` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.Map` `io.flutter.plugins.firebase.crashlytics.e.h` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `p7.m` `io.flutter.plugins.firebase.crashlytics.e.i` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.crashlytics.e` v0 @kind this, `io.flutter.plugins.firebase.crashlytics.n` v1 @kind object, `java.util.Map` v2 @kind object, `p7.m` v3 @kind object) @signature `Lio/flutter/plugins/firebase/crashlytics/e;.<init>:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;Lp7/m;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e6d98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6d9e.  v0.`io.flutter.plugins.firebase.crashlytics.e.g` @type ^`io.flutter.plugins.firebase.crashlytics.n` := v1 @kind object;
  #L2e6da2.  v0.`io.flutter.plugins.firebase.crashlytics.e.h` @type ^`java.util.Map` := v2 @kind object;
  #L2e6da6.  v0.`io.flutter.plugins.firebase.crashlytics.e.i` @type ^`p7.m` := v3 @kind object;
  #L2e6daa.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugins.firebase.crashlytics.e` v3 @kind this) @signature `Lio/flutter/plugins/firebase/crashlytics/e;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e6dbc.  v0:= v3.`io.flutter.plugins.firebase.crashlytics.e.g` @type ^`io.flutter.plugins.firebase.crashlytics.n` @kind object;
  #L2e6dc0.  v1:= v3.`io.flutter.plugins.firebase.crashlytics.e.h` @type ^`java.util.Map` @kind object;
  #L2e6dc4.  v2:= v3.`io.flutter.plugins.firebase.crashlytics.e.i` @type ^`p7.m` @kind object;
  #L2e6dc8.  call `j`(v0, v1, v2) @signature `Lio/flutter/plugins/firebase/crashlytics/n;.j:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;Lp7/m;)V` @kind static;
  #L2e6dce.  return @kind void;
}
