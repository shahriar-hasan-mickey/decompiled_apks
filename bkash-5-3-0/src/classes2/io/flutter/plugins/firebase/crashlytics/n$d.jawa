record `io.flutter.plugins.firebase.crashlytics.n$d` @kind class @AccessFlag  extends `java.util.HashMap` @kind class {
  `io.flutter.plugins.firebase.crashlytics.n` `io.flutter.plugins.firebase.crashlytics.n$d.this$0` @AccessFlag FINAL_SYNTHETIC;
  `com.google.firebase.d` `io.flutter.plugins.firebase.crashlytics.n$d.val$firebaseApp` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.crashlytics.n$d` v1 @kind this, `io.flutter.plugins.firebase.crashlytics.n` v2 @kind object, `com.google.firebase.d` v3 @kind object) @signature `Lio/flutter/plugins/firebase/crashlytics/n$d;.<init>:(Lio/flutter/plugins/firebase/crashlytics/n;Lcom/google/firebase/d;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2e7080.  v1.`io.flutter.plugins.firebase.crashlytics.n$d.this$0` @type ^`io.flutter.plugins.firebase.crashlytics.n` := v2 @kind object;
  #L2e7084.  v1.`io.flutter.plugins.firebase.crashlytics.n$d.val$firebaseApp` @type ^`com.google.firebase.d` := v3 @kind object;
  #L2e7088.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2e708e.  call temp:= `p`(v3) @signature `Lcom/google/firebase/d;.p:()Ljava/lang/String;` @kind virtual;
  #L2e7094.  v3:= temp @kind object;
  #L2e7096.  v0:= "[DEFAULT]" @kind object;
  #L2e709a.  call temp:= `equals`(v3, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e70a0.  v3:= temp;
  #L2e70a2.  if v3 == 0 then goto L2e70c8;
  #L2e70a6.  call temp:= `n`() @signature `Lcom/google/firebase/d;.n:()Lcom/google/firebase/d;` @kind static;
  #L2e70ac.  v3:= temp @kind object;
  #L2e70ae.  call temp:= `n`(v2, v3) @signature `Lio/flutter/plugins/firebase/crashlytics/n;.n:(Lio/flutter/plugins/firebase/crashlytics/n;Lcom/google/firebase/d;)Z` @kind static;
  #L2e70b4.  v2:= temp;
  #L2e70b6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2e70bc.  v2:= temp @kind object;
  #L2e70be.  v3:= "isCrashlyticsCollectionEnabled" @kind object;
  #L2e70c2.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2e70c8.  return @kind void;
}
