record `io.flutter.plugins.firebase.crashlytics.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `java.lang.Runnable` @kind interface {
  `io.flutter.plugins.firebase.crashlytics.n` `io.flutter.plugins.firebase.crashlytics.a.g` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `java.util.Map` `io.flutter.plugins.firebase.crashlytics.a.h` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
  `p7.m` `io.flutter.plugins.firebase.crashlytics.a.i` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.crashlytics.a` v0 @kind this, `io.flutter.plugins.firebase.crashlytics.n` v1 @kind object, `java.util.Map` v2 @kind object, `p7.m` v3 @kind object) @signature `Lio/flutter/plugins/firebase/crashlytics/a;.<init>:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;Lp7/m;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e6c90.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6c96.  v0.`io.flutter.plugins.firebase.crashlytics.a.g` @type ^`io.flutter.plugins.firebase.crashlytics.n` := v1 @kind object;
  #L2e6c9a.  v0.`io.flutter.plugins.firebase.crashlytics.a.h` @type ^`java.util.Map` := v2 @kind object;
  #L2e6c9e.  v0.`io.flutter.plugins.firebase.crashlytics.a.i` @type ^`p7.m` := v3 @kind object;
  #L2e6ca2.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugins.firebase.crashlytics.a` v3 @kind this) @signature `Lio/flutter/plugins/firebase/crashlytics/a;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2e6cb4.  v0:= v3.`io.flutter.plugins.firebase.crashlytics.a.g` @type ^`io.flutter.plugins.firebase.crashlytics.n` @kind object;
  #L2e6cb8.  v1:= v3.`io.flutter.plugins.firebase.crashlytics.a.h` @type ^`java.util.Map` @kind object;
  #L2e6cbc.  v2:= v3.`io.flutter.plugins.firebase.crashlytics.a.i` @type ^`p7.m` @kind object;
  #L2e6cc0.  call `h`(v0, v1, v2) @signature `Lio/flutter/plugins/firebase/crashlytics/n;.h:(Lio/flutter/plugins/firebase/crashlytics/n;Ljava/util/Map;Lp7/m;)V` @kind static;
  #L2e6cc6.  return @kind void;
}
