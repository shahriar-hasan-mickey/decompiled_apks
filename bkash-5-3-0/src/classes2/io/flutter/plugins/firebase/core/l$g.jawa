record `io.flutter.plugins.firebase.core.l$g` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `io.flutter.plugins.firebase.core.l$g.a` @AccessFlag PRIVATE;
  `io.flutter.plugins.firebase.core.l$f` `io.flutter.plugins.firebase.core.l$g.b` @AccessFlag PRIVATE;
  `java.lang.Boolean` `io.flutter.plugins.firebase.core.l$g.c` @AccessFlag PRIVATE;
  `java.util.Map` `io.flutter.plugins.firebase.core.l$g.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2e6a9c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e6aa2.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this, `io.flutter.plugins.firebase.core.l$a` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:(Lio/flutter/plugins/firebase/core/l$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2e6ab4.  call `<init>`(v0) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @kind direct;
  #L2e6aba.  return @kind void;
}
procedure `io.flutter.plugins.firebase.core.l$g` `a`(`java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.a:(Ljava/util/Map;)Lio/flutter/plugins/firebase/core/l$g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2e69b4.  v0:= new `io.flutter.plugins.firebase.core.l$g`;
  #L2e69b8.  call `<init>`(v0) @signature `Lio/flutter/plugins/firebase/core/l$g;.<init>:()V` @kind direct;
  #L2e69be.  v1:= "name" @kind object;
  #L2e69c2.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e69c8.  v1:= temp @kind object;
  #L2e69ca.  v1:= (`java.lang.String`) v1 @kind object;
  #L2e69ce.  call `c`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.c:(Ljava/lang/String;)V` @kind virtual;
  #L2e69d4.  v1:= "options" @kind object;
  #L2e69d8.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e69de.  v1:= temp @kind object;
  #L2e69e0.  if v1 != 0 then goto L2e69e8;
  #L2e69e4.  v1:= 0I;
  #L2e69e6.  goto L2e69f4;
  #L2e69e8.  v1:= (`java.util.Map`) v1 @kind object;
  #L2e69ec.  call temp:= `a`(v1) @signature `Lio/flutter/plugins/firebase/core/l$f;.a:(Ljava/util/Map;)Lio/flutter/plugins/firebase/core/l$f;` @kind static;
  #L2e69f2.  v1:= temp @kind object;
  #L2e69f4.  call `d`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.d:(Lio/flutter/plugins/firebase/core/l$f;)V` @kind virtual;
  #L2e69fa.  v1:= "isAutomaticDataCollectionEnabled" @kind object;
  #L2e69fe.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a04.  v1:= temp @kind object;
  #L2e6a06.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L2e6a0a.  call `b`(v0, v1) @signature `Lio/flutter/plugins/firebase/core/l$g;.b:(Ljava/lang/Boolean;)V` @kind virtual;
  #L2e6a10.  v1:= "pluginConstants" @kind object;
  #L2e6a14.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a1a.  v2:= temp @kind object;
  #L2e6a1c.  v2:= (`java.util.Map`) v2 @kind object;
  #L2e6a20.  call `e`(v0, v2) @signature `Lio/flutter/plugins/firebase/core/l$g;.e:(Ljava/util/Map;)V` @kind virtual;
  #L2e6a26.  return v0 @kind object;
}
procedure `void` `b`(`io.flutter.plugins.firebase.core.l$g` v0 @kind this, `java.lang.Boolean` v1 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.b:(Ljava/lang/Boolean;)V` @AccessFlag PUBLIC {
    temp;

  #L2e6acc.  v0.`io.flutter.plugins.firebase.core.l$g.c` @type ^`java.lang.Boolean` := v1 @kind object;
  #L2e6ad0.  return @kind void;
}
procedure `void` `c`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.c:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e6ae4.  if v2 == 0 then goto L2e6aee;
  #L2e6ae8.  v1.`io.flutter.plugins.firebase.core.l$g.a` @type ^`java.lang.String` := v2 @kind object;
  #L2e6aec.  return @kind void;
  #L2e6aee.  v2:= new `java.lang.IllegalStateException`;
  #L2e6af2.  v0:= "Nonnull field \"name\" is null." @kind object;
  #L2e6af6.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6afc.  throw v2;
}
procedure `void` `d`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `io.flutter.plugins.firebase.core.l$f` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.d:(Lio/flutter/plugins/firebase/core/l$f;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e6b10.  if v2 == 0 then goto L2e6b1a;
  #L2e6b14.  v1.`io.flutter.plugins.firebase.core.l$g.b` @type ^`io.flutter.plugins.firebase.core.l$f` := v2 @kind object;
  #L2e6b18.  return @kind void;
  #L2e6b1a.  v2:= new `java.lang.IllegalStateException`;
  #L2e6b1e.  v0:= "Nonnull field \"options\" is null." @kind object;
  #L2e6b22.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6b28.  throw v2;
}
procedure `void` `e`(`io.flutter.plugins.firebase.core.l$g` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lio/flutter/plugins/firebase/core/l$g;.e:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e6b3c.  if v2 == 0 then goto L2e6b46;
  #L2e6b40.  v1.`io.flutter.plugins.firebase.core.l$g.d` @type ^`java.util.Map` := v2 @kind object;
  #L2e6b44.  return @kind void;
  #L2e6b46.  v2:= new `java.lang.IllegalStateException`;
  #L2e6b4a.  v0:= "Nonnull field \"pluginConstants\" is null." @kind object;
  #L2e6b4e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2e6b54.  throw v2;
}
procedure `java.util.Map` `f`(`io.flutter.plugins.firebase.core.l$g` v3 @kind this) @signature `Lio/flutter/plugins/firebase/core/l$g;.f:()Ljava/util/Map;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2e6a38.  v0:= new `java.util.HashMap`;
  #L2e6a3c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2e6a42.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.a` @type ^`java.lang.String` @kind object;
  #L2e6a46.  v2:= "name" @kind object;
  #L2e6a4a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a50.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.b` @type ^`io.flutter.plugins.firebase.core.l$f` @kind object;
  #L2e6a54.  if v1 != 0 then goto L2e6a5c;
  #L2e6a58.  v1:= 0I;
  #L2e6a5a.  goto L2e6a64;
  #L2e6a5c.  call temp:= `w`(v1) @signature `Lio/flutter/plugins/firebase/core/l$f;.w:()Ljava/util/Map;` @kind virtual;
  #L2e6a62.  v1:= temp @kind object;
  #L2e6a64.  v2:= "options" @kind object;
  #L2e6a68.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a6e.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.c` @type ^`java.lang.Boolean` @kind object;
  #L2e6a72.  v2:= "isAutomaticDataCollectionEnabled" @kind object;
  #L2e6a76.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a7c.  v1:= v3.`io.flutter.plugins.firebase.core.l$g.d` @type ^`java.util.Map` @kind object;
  #L2e6a80.  v2:= "pluginConstants" @kind object;
  #L2e6a84.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2e6a8a.  return v0 @kind object;
}
