record `io.flutter.plugins.connectivity.b` @kind class @AccessFlag  extends `io.flutter.plugin.common.l$c` @kind interface {
  `io.flutter.plugins.connectivity.a` `io.flutter.plugins.connectivity.b.g` @AccessFlag PRIVATE;
}
procedure `void` `<clinit>`() @signature `Lio/flutter/plugins/connectivity/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L2e4854.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugins.connectivity.b` v0 @kind this, `io.flutter.plugins.connectivity.a` v1 @kind object) @signature `Lio/flutter/plugins/connectivity/b;.<init>:(Lio/flutter/plugins/connectivity/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2e4868.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e486e.  v0.`io.flutter.plugins.connectivity.b.g` @type ^`io.flutter.plugins.connectivity.a` := v1 @kind object;
  #L2e4872.  return @kind void;
}
procedure `void` `onMethodCall`(`io.flutter.plugins.connectivity.b` v1 @kind this, `io.flutter.plugin.common.k` v2 @kind object, `io.flutter.plugin.common.l$d` v3 @kind object) @signature `Lio/flutter/plugins/connectivity/b;.onMethodCall:(Lio/flutter/plugin/common/k;Lio/flutter/plugin/common/l$d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2e4884.  v2:= v2.`io.flutter.plugin.common.k.a` @type ^`java.lang.String` @kind object;
  #L2e4888.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2e488e.  v0:= "check" @kind object;
  #L2e4892.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2e4898.  v2:= temp;
  #L2e489a.  if v2 != 0 then goto L2e48a6;
  #L2e489e.  call `notImplemented`(v3) @signature `Lio/flutter/plugin/common/l$d;.notImplemented:()V` @kind interface;
  #L2e48a4.  goto L2e48b8;
  #L2e48a6.  v2:= v1.`io.flutter.plugins.connectivity.b.g` @type ^`io.flutter.plugins.connectivity.a` @kind object;
  #L2e48aa.  call temp:= `b`(v2) @signature `Lio/flutter/plugins/connectivity/a;.b:()Ljava/lang/String;` @kind virtual;
  #L2e48b0.  v2:= temp @kind object;
  #L2e48b2.  call `success`(v3, v2) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2e48b8.  return @kind void;
}
