record `io.flutter.embedding.engine.systemchannels.m$b` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `io.flutter.embedding.engine.systemchannels.m$b.name` @AccessFlag PUBLIC;
}
global `io.flutter.embedding.engine.systemchannels.m$b` `@@io.flutter.embedding.engine.systemchannels.m$b.dark` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `io.flutter.embedding.engine.systemchannels.m$b`[] `@@io.flutter.embedding.engine.systemchannels.m$b.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `io.flutter.embedding.engine.systemchannels.m$b` `@@io.flutter.embedding.engine.systemchannels.m$b.light` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2d3748.  v0:= new `io.flutter.embedding.engine.systemchannels.m$b`;
  #L2d374c.  v1:= "light" @kind object;
  #L2d3750.  v2:= 0I;
  #L2d3752.  call `<init>`(v0, v1, v2, v1) @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d3758.  `@@io.flutter.embedding.engine.systemchannels.m$b.light` @type ^`io.flutter.embedding.engine.systemchannels.m$b` := v0 @kind object;
  #L2d375c.  v1:= new `io.flutter.embedding.engine.systemchannels.m$b`;
  #L2d3760.  v3:= "dark" @kind object;
  #L2d3764.  v4:= 1I;
  #L2d3766.  call `<init>`(v1, v3, v4, v3) @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L2d376c.  `@@io.flutter.embedding.engine.systemchannels.m$b.dark` @type ^`io.flutter.embedding.engine.systemchannels.m$b` := v1 @kind object;
  #L2d3770.  v3:= 2I;
  #L2d3772.  v3:= new `io.flutter.embedding.engine.systemchannels.m$b`[v3];
  #L2d3776.  v3[v2]:= v0 @kind object;
  #L2d377a.  v3[v4]:= v1 @kind object;
  #L2d377e.  `@@io.flutter.embedding.engine.systemchannels.m$b.g` @type ^`io.flutter.embedding.engine.systemchannels.m$b`[] := v3 @kind object;
  #L2d3782.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.systemchannels.m$b` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2d3794.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L2d379a.  v0.`io.flutter.embedding.engine.systemchannels.m$b.name` @type ^`java.lang.String` := v3 @kind object;
  #L2d379e.  return @kind void;
}
procedure `io.flutter.embedding.engine.systemchannels.m$b` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.valueOf:(Ljava/lang/String;)Lio/flutter/embedding/engine/systemchannels/m$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3700.  v0:= constclass @type ^`io.flutter.embedding.engine.systemchannels.m$b` @kind object;
  #L2d3704.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L2d370a.  v1:= temp @kind object;
  #L2d370c.  v1:= (`io.flutter.embedding.engine.systemchannels.m$b`) v1 @kind object;
  #L2d3710.  return v1 @kind object;
}
procedure `io.flutter.embedding.engine.systemchannels.m$b`[] `values`() @signature `Lio/flutter/embedding/engine/systemchannels/m$b;.values:()[Lio/flutter/embedding/engine/systemchannels/m$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2d3724.  v0:= `@@io.flutter.embedding.engine.systemchannels.m$b.g` @type ^`io.flutter.embedding.engine.systemchannels.m$b`[] @kind object;
  #L2d3728.  call temp:= `clone`(v0) @signature `[Lio/flutter/embedding/engine/systemchannels/m$b;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2d372e.  v0:= temp @kind object;
  #L2d3730.  v0:= (`io.flutter.embedding.engine.systemchannels.m$b`[]) v0 @kind object;
  #L2d3734.  return v0 @kind object;
}
