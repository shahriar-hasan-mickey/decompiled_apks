record `io.flutter.embedding.engine.systemchannels.p$e` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `io.flutter.embedding.engine.systemchannels.p$e.a` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.systemchannels.p$e.b` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.systemchannels.p$e.c` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.systemchannels.p$e.d` @AccessFlag PUBLIC_FINAL;
  `int` `io.flutter.embedding.engine.systemchannels.p$e.e` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.systemchannels.p$e` v3 @kind this, `java.lang.String` v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 ) @signature `Lio/flutter/embedding/engine/systemchannels/p$e;.<init>:(Ljava/lang/String;IIII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2d4b78.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d4b7e.  v0:= ")" @kind object;
  #L2d4b82.  v1:= ", " @kind object;
  #L2d4b86.  v2:= -1I;
  #L2d4b88.  if v5 != v2 then goto L2d4b90;
  #L2d4b8c.  if v6 == v2 then goto L2d4b98;
  #L2d4b90.  if v5 < 0 then goto L2d4cd4;
  #L2d4b94.  if v6 < 0 then goto L2d4cd4;
  #L2d4b98.  if v7 != v2 then goto L2d4ba0;
  #L2d4b9c.  if v8 == v2 then goto L2d4ba8;
  #L2d4ba0.  if v7 < 0 then goto L2d4c84;
  #L2d4ba4.  if v7 > v8 then goto L2d4c84;
  #L2d4ba8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d4bae.  v0:= temp;
  #L2d4bb0.  if v8 > v0 then goto L2d4c4e;
  #L2d4bb4.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d4bba.  v0:= temp;
  #L2d4bbc.  if v5 > v0 then goto L2d4c18;
  #L2d4bc0.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2d4bc6.  v0:= temp;
  #L2d4bc8.  if v6 > v0 then goto L2d4be2;
  #L2d4bcc.  v3.`io.flutter.embedding.engine.systemchannels.p$e.a` @type ^`java.lang.String` := v4 @kind object;
  #L2d4bd0.  v3.`io.flutter.embedding.engine.systemchannels.p$e.b` @type ^`int` := v5;
  #L2d4bd4.  v3.`io.flutter.embedding.engine.systemchannels.p$e.c` @type ^`int` := v6;
  #L2d4bd8.  v3.`io.flutter.embedding.engine.systemchannels.p$e.d` @type ^`int` := v7;
  #L2d4bdc.  v3.`io.flutter.embedding.engine.systemchannels.p$e.e` @type ^`int` := v8;
  #L2d4be0.  return @kind void;
  #L2d4be2.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L2d4be6.  v5:= new `java.lang.StringBuilder`;
  #L2d4bea.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4bf0.  v7:= "invalid selection end: " @kind object;
  #L2d4bf4.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4bfa.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4c00.  v6:= temp @kind object;
  #L2d4c02.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c08.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4c0e.  v5:= temp @kind object;
  #L2d4c10.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4c16.  throw v4;
  #L2d4c18.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L2d4c1c.  v6:= new `java.lang.StringBuilder`;
  #L2d4c20.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4c26.  v7:= "invalid selection start: " @kind object;
  #L2d4c2a.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c30.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4c36.  v5:= temp @kind object;
  #L2d4c38.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c3e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4c44.  v5:= temp @kind object;
  #L2d4c46.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4c4c.  throw v4;
  #L2d4c4e.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L2d4c52.  v5:= new `java.lang.StringBuilder`;
  #L2d4c56.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4c5c.  v6:= "invalid composing start: " @kind object;
  #L2d4c60.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c66.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4c6c.  v6:= temp @kind object;
  #L2d4c6e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c74.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4c7a.  v5:= temp @kind object;
  #L2d4c7c.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4c82.  throw v4;
  #L2d4c84.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L2d4c88.  v5:= new `java.lang.StringBuilder`;
  #L2d4c8c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4c92.  v6:= "invalid composing range: (" @kind object;
  #L2d4c96.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4c9c.  call temp:= `valueOf`(v7) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4ca2.  v6:= temp @kind object;
  #L2d4ca4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4caa.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4cb0.  call temp:= `valueOf`(v8) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4cb6.  v6:= temp @kind object;
  #L2d4cb8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4cbe.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4cc4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4cca.  v5:= temp @kind object;
  #L2d4ccc.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4cd2.  throw v4;
  #L2d4cd4.  v4:= new `java.lang.IndexOutOfBoundsException`;
  #L2d4cd8.  v7:= new `java.lang.StringBuilder`;
  #L2d4cdc.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2d4ce2.  v8:= "invalid selection: (" @kind object;
  #L2d4ce6.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4cec.  call temp:= `valueOf`(v5) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4cf2.  v5:= temp @kind object;
  #L2d4cf4.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4cfa.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4d00.  call temp:= `valueOf`(v6) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2d4d06.  v5:= temp @kind object;
  #L2d4d08.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4d0e.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2d4d14.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d4d1a.  v5:= temp @kind object;
  #L2d4d1c.  call `<init>`(v4, v5) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d4d22.  throw v4;
}
procedure `io.flutter.embedding.engine.systemchannels.p$e` `a`(`org.json.JSONObject` v7 @kind object) @signature `Lio/flutter/embedding/engine/systemchannels/p$e;.a:(Lorg/json/JSONObject;)Lio/flutter/embedding/engine/systemchannels/p$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2d4b1c.  v6:= new `io.flutter.embedding.engine.systemchannels.p$e`;
  #L2d4b20.  v0:= "text" @kind object;
  #L2d4b24.  call temp:= `getString`(v7, v0) @signature `Lorg/json/JSONObject;.getString:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2d4b2a.  v1:= temp @kind object;
  #L2d4b2c.  v0:= "selectionBase" @kind object;
  #L2d4b30.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L2d4b36.  v2:= temp;
  #L2d4b38.  v0:= "selectionExtent" @kind object;
  #L2d4b3c.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L2d4b42.  v3:= temp;
  #L2d4b44.  v0:= "composingBase" @kind object;
  #L2d4b48.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L2d4b4e.  v4:= temp;
  #L2d4b50.  v0:= "composingExtent" @kind object;
  #L2d4b54.  call temp:= `getInt`(v7, v0) @signature `Lorg/json/JSONObject;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L2d4b5a.  v5:= temp;
  #L2d4b5c.  v0:= v6 @kind object;
  #L2d4b5e.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lio/flutter/embedding/engine/systemchannels/p$e;.<init>:(Ljava/lang/String;IIII)V` @kind direct;
  #L2d4b64.  return v6 @kind object;
}
procedure `boolean` `b`(`io.flutter.embedding.engine.systemchannels.p$e` v2 @kind this) @signature `Lio/flutter/embedding/engine/systemchannels/p$e;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d4ad4.  v0:= v2.`io.flutter.embedding.engine.systemchannels.p$e.d` @type ^`int`;
  #L2d4ad8.  if v0 < 0 then goto L2d4ae8;
  #L2d4adc.  v1:= v2.`io.flutter.embedding.engine.systemchannels.p$e.e` @type ^`int`;
  #L2d4ae0.  if v1 <= v0 then goto L2d4ae8;
  #L2d4ae4.  v0:= 1I;
  #L2d4ae6.  goto L2d4aea;
  #L2d4ae8.  v0:= 0I;
  #L2d4aea.  return v0;
}
procedure `boolean` `c`(`io.flutter.embedding.engine.systemchannels.p$e` v1 @kind this) @signature `Lio/flutter/embedding/engine/systemchannels/p$e;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d4afc.  v0:= v1.`io.flutter.embedding.engine.systemchannels.p$e.b` @type ^`int`;
  #L2d4b00.  if v0 < 0 then goto L2d4b08;
  #L2d4b04.  v0:= 1I;
  #L2d4b06.  goto L2d4b0a;
  #L2d4b08.  v0:= 0I;
  #L2d4b0a.  return v0;
}
