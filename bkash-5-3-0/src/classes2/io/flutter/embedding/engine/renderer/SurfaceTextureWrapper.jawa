record `io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` @kind class @AccessFlag PUBLIC {
  `boolean` `io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @AccessFlag PRIVATE;
  `java.lang.Runnable` `io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.onFrameConsumed` @AccessFlag PRIVATE;
  `boolean` `io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @AccessFlag PRIVATE;
  `android.graphics.SurfaceTexture` `io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this, `android.graphics.SurfaceTexture` v2 @kind object) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.<init>:(Landroid/graphics/SurfaceTexture;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2d0068.  v0:= 0I;
  #L2d006a.  call `<init>`(v1, v2, v0) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.<init>:(Landroid/graphics/SurfaceTexture;Ljava/lang/Runnable;)V` @kind direct;
  #L2d0070.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v0 @kind this, `android.graphics.SurfaceTexture` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.<init>:(Landroid/graphics/SurfaceTexture;Ljava/lang/Runnable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d0084.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d008a.  v0.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` := v1 @kind object;
  #L2d008e.  v1:= 0I;
  #L2d0090.  v0.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` := v1 @kind boolean;
  #L2d0094.  v0.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.onFrameConsumed` @type ^`java.lang.Runnable` := v2 @kind object;
  #L2d0098.  return @kind void;
}
procedure `void` `attachToGLContext`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this, `int` v2 ) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.attachToGLContext:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d00ac.  @monitorenter v1
  #L2d00ae.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` @kind boolean;
  #L2d00b2.  if v0 == 0 then goto L2d00ba;
  #L2d00b6.  @monitorexit v1
  #L2d00b8.  return @kind void;
  #L2d00ba.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @type ^`boolean` @kind boolean;
  #L2d00be.  if v0 == 0 then goto L2d00cc;
  #L2d00c2.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d00c6.  call `detachFromGLContext`(v0) @signature `Landroid/graphics/SurfaceTexture;.detachFromGLContext:()V` @kind virtual;
  #L2d00cc.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d00d0.  call `attachToGLContext`(v0, v2) @signature `Landroid/graphics/SurfaceTexture;.attachToGLContext:(I)V` @kind virtual;
  #L2d00d6.  v2:= 1I;
  #L2d00d8.  v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @type ^`boolean` := v2 @kind boolean;
  #L2d00dc.  @monitorexit v1
  #L2d00de.  return @kind void;
  #L2d00e0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d00e2.  @monitorexit v1
  #L2d00e4.  throw v2;
  catch `java.lang.Throwable` @[L2d00ae..L2d00e4] goto L2d00e0;
}
procedure `void` `detachFromGLContext`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.detachFromGLContext:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0104.  @monitorenter v1
  #L2d0106.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @type ^`boolean` @kind boolean;
  #L2d010a.  if v0 == 0 then goto L2d0126;
  #L2d010e.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` @kind boolean;
  #L2d0112.  if v0 != 0 then goto L2d0126;
  #L2d0116.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d011a.  call `detachFromGLContext`(v0) @signature `Landroid/graphics/SurfaceTexture;.detachFromGLContext:()V` @kind virtual;
  #L2d0120.  v0:= 0I;
  #L2d0122.  v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @type ^`boolean` := v0 @kind boolean;
  #L2d0126.  @monitorexit v1
  #L2d0128.  return @kind void;
  #L2d012a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d012c.  @monitorexit v1
  #L2d012e.  throw v0;
  catch `java.lang.Throwable` @[L2d0106..L2d012e] goto L2d012a;
}
procedure `void` `getTransformMatrix`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this, `float`[] v2 @kind object) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.getTransformMatrix:([F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d014c.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d0150.  call `getTransformMatrix`(v0, v2) @signature `Landroid/graphics/SurfaceTexture;.getTransformMatrix:([F)V` @kind virtual;
  #L2d0156.  return @kind void;
}
procedure `void` `release`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0168.  @monitorenter v1
  #L2d016a.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` @kind boolean;
  #L2d016e.  if v0 != 0 then goto L2d0188;
  #L2d0172.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d0176.  call `release`(v0) @signature `Landroid/graphics/SurfaceTexture;.release:()V` @kind virtual;
  #L2d017c.  v0:= 1I;
  #L2d017e.  v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` := v0 @kind boolean;
  #L2d0182.  v0:= 0I;
  #L2d0184.  v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.attached` @type ^`boolean` := v0 @kind boolean;
  #L2d0188.  @monitorexit v1
  #L2d018a.  return @kind void;
  #L2d018c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d018e.  @monitorexit v1
  #L2d0190.  throw v0;
  catch `java.lang.Throwable` @[L2d016a..L2d0190] goto L2d018c;
}
procedure `android.graphics.SurfaceTexture` `surfaceTexture`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.surfaceTexture:()Landroid/graphics/SurfaceTexture;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d0050.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d0054.  return v0 @kind object;
}
procedure `void` `updateTexImage`(`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper` v1 @kind this) @signature `Lio/flutter/embedding/engine/renderer/SurfaceTextureWrapper;.updateTexImage:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2d01b0.  @monitorenter v1
  #L2d01b2.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.released` @type ^`boolean` @kind boolean;
  #L2d01b6.  if v0 != 0 then goto L2d01d2;
  #L2d01ba.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.surfaceTexture` @type ^`android.graphics.SurfaceTexture` @kind object;
  #L2d01be.  call `updateTexImage`(v0) @signature `Landroid/graphics/SurfaceTexture;.updateTexImage:()V` @kind virtual;
  #L2d01c4.  v0:= v1.`io.flutter.embedding.engine.renderer.SurfaceTextureWrapper.onFrameConsumed` @type ^`java.lang.Runnable` @kind object;
  #L2d01c8.  if v0 == 0 then goto L2d01d2;
  #L2d01cc.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2d01d2.  @monitorexit v1
  #L2d01d4.  return @kind void;
  #L2d01d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2d01d8.  @monitorexit v1
  #L2d01da.  throw v0;
  catch `java.lang.Throwable` @[L2d01b2..L2d01da] goto L2d01d6;
}
