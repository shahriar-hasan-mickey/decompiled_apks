record `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` @kind class @AccessFlag PUBLIC extends `android.widget.FrameLayout` @kind class {
  `android.view.ViewTreeObserver$OnGlobalFocusChangeListener` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.activeFocusListener` @AccessFlag ;
  `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.g` @AccessFlag PRIVATE;
  `float` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.h` @AccessFlag PRIVATE;
  `int` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @AccessFlag PRIVATE;
  `int` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @AccessFlag PRIVATE;
  `int` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.k` @AccessFlag PRIVATE;
  `int` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.l` @AccessFlag PRIVATE;
  `io.flutter.embedding.android.AndroidTouchProcessor` `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.m` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2cedc0.  v0:= 1.0F;
  #L2cedc4.  v1:= 0I;
  #L2cedc6.  call `<init>`(v2, v3, v0, v1) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.<init>:(Landroid/content/Context;FLio/flutter/embedding/android/AndroidTouchProcessor;)V` @kind direct;
  #L2cedcc.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v1 @kind this, `android.content.Context` v2 @kind object, `float` v3 , `io.flutter.embedding.android.AndroidTouchProcessor` v4 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.<init>:(Landroid/content/Context;FLio/flutter/embedding/android/AndroidTouchProcessor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2cede0.  v0:= 0I;
  #L2cede2.  call `<init>`(v1, v2, v0) @signature `Landroid/widget/FrameLayout;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L2cede8.  v1.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.h` @type ^`float` := v3;
  #L2cedec.  v1.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.m` @type ^`io.flutter.embedding.android.AndroidTouchProcessor` := v4 @kind object;
  #L2cedf0.  return @kind void;
}
procedure `android.graphics.Matrix` `getPlatformViewMatrix`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v4 @kind this) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.getPlatformViewMatrix:()Landroid/graphics/Matrix;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cec80.  v0:= new `android.graphics.Matrix`;
  #L2cec84.  v1:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.g` @type ^`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack` @kind object;
  #L2cec88.  call temp:= `getFinalMatrix`(v1) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack;.getFinalMatrix:()Landroid/graphics/Matrix;` @kind virtual;
  #L2cec8e.  v1:= temp @kind object;
  #L2cec90.  call `<init>`(v0, v1) @signature `Landroid/graphics/Matrix;.<init>:(Landroid/graphics/Matrix;)V` @kind direct;
  #L2cec96.  v1:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.h` @type ^`float`;
  #L2cec9a.  v2:= 1.0F;
  #L2cec9e.  v3:= v2 / v1 @kind float;
  #L2ceca2.  v2:= v2 / v1 @kind float;
  #L2ceca4.  call temp:= `preScale`(v0, v3, v2) @signature `Landroid/graphics/Matrix;.preScale:(FF)Z` @kind virtual;
  #L2cecaa.  v1:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int`;
  #L2cecae.  v1:= -v1 @kind int;
  #L2cecb0.  v1:= (`float`) v1 @kind i2f;
  #L2cecb2.  v2:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int`;
  #L2cecb6.  v2:= -v2 @kind int;
  #L2cecb8.  v2:= (`float`) v2 @kind i2f;
  #L2cecba.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2cecc0.  return v0 @kind object;
}
procedure `void` `dispatchDraw`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v1 @kind this, `android.graphics.Canvas` v2 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.dispatchDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2cee04.  call temp:= `save`(v2) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L2cee0a.  call temp:= `getPlatformViewMatrix`(v1) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.getPlatformViewMatrix:()Landroid/graphics/Matrix;` @kind direct;
  #L2cee10.  v0:= temp @kind object;
  #L2cee12.  call `concat`(v2, v0) @signature `Landroid/graphics/Canvas;.concat:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L2cee18.  call `dispatchDraw`(v1, v2) @signature `Landroid/widget/FrameLayout;.dispatchDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L2cee1e.  call `restore`(v2) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L2cee24.  return @kind void;
}
procedure `void` `draw`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v4 @kind this, `android.graphics.Canvas` v5 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2cee38.  call temp:= `save`(v5) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L2cee3e.  v0:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.g` @type ^`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack` @kind object;
  #L2cee42.  call temp:= `getFinalClippingPaths`(v0) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack;.getFinalClippingPaths:()Ljava/util/List;` @kind virtual;
  #L2cee48.  v0:= temp @kind object;
  #L2cee4a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2cee50.  v0:= temp @kind object;
  #L2cee52.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2cee58.  v1:= temp;
  #L2cee5a.  if v1 == 0 then goto L2cee92;
  #L2cee5e.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2cee64.  v1:= temp @kind object;
  #L2cee66.  v1:= (`android.graphics.Path`) v1 @kind object;
  #L2cee6a.  v2:= new `android.graphics.Path`;
  #L2cee6e.  call `<init>`(v2, v1) @signature `Landroid/graphics/Path;.<init>:(Landroid/graphics/Path;)V` @kind direct;
  #L2cee74.  v1:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int`;
  #L2cee78.  v1:= -v1 @kind int;
  #L2cee7a.  v1:= (`float`) v1 @kind i2f;
  #L2cee7c.  v3:= v4.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int`;
  #L2cee80.  v3:= -v3 @kind int;
  #L2cee82.  v3:= (`float`) v3 @kind i2f;
  #L2cee84.  call `offset`(v2, v1, v3) @signature `Landroid/graphics/Path;.offset:(FF)V` @kind virtual;
  #L2cee8a.  call temp:= `clipPath`(v5, v2) @signature `Landroid/graphics/Canvas;.clipPath:(Landroid/graphics/Path;)Z` @kind virtual;
  #L2cee90.  goto L2cee52;
  #L2cee92.  call `draw`(v4, v5) @signature `Landroid/widget/FrameLayout;.draw:(Landroid/graphics/Canvas;)V` @kind super;
  #L2cee98.  call `restore`(v5) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L2cee9e.  return @kind void;
}
procedure `boolean` `onInterceptTouchEvent`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v0 @kind this, `android.view.MotionEvent` v1 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.onInterceptTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;

  #L2cecd4.  v1:= 1I;
  #L2cecd6.  return v1;
}
procedure `boolean` `onTouchEvent`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v3 @kind this, `android.view.MotionEvent` v4 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cece8.  v0:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.m` @type ^`io.flutter.embedding.android.AndroidTouchProcessor` @kind object;
  #L2cecec.  if v0 != 0 then goto L2cecfa;
  #L2cecf0.  call temp:= `onTouchEvent`(v3, v4) @signature `Landroid/widget/FrameLayout;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L2cecf6.  v4:= temp;
  #L2cecf8.  return v4;
  #L2cecfa.  v0:= new `android.graphics.Matrix`;
  #L2cecfe.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L2ced04.  call temp:= `getAction`(v4) @signature `Landroid/view/MotionEvent;.getAction:()I` @kind virtual;
  #L2ced0a.  v1:= temp;
  #L2ced0c.  if v1 == 0 then goto L2ced4e;
  #L2ced10.  v2:= 2I;
  #L2ced12.  if v1 == v2 then goto L2ced2a;
  #L2ced16.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int`;
  #L2ced1a.  v1:= (`float`) v1 @kind i2f;
  #L2ced1c.  v2:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int`;
  #L2ced20.  v2:= (`float`) v2 @kind i2f;
  #L2ced22.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2ced28.  goto L2ced68;
  #L2ced2a.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.k` @type ^`int`;
  #L2ced2e.  v1:= (`float`) v1 @kind i2f;
  #L2ced30.  v2:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.l` @type ^`int`;
  #L2ced34.  v2:= (`float`) v2 @kind i2f;
  #L2ced36.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2ced3c.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int`;
  #L2ced40.  v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.k` @type ^`int` := v1;
  #L2ced44.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int`;
  #L2ced48.  v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.l` @type ^`int` := v1;
  #L2ced4c.  goto L2ced68;
  #L2ced4e.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int`;
  #L2ced52.  v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.k` @type ^`int` := v1;
  #L2ced56.  v2:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int`;
  #L2ced5a.  v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.l` @type ^`int` := v2;
  #L2ced5e.  v1:= (`float`) v1 @kind i2f;
  #L2ced60.  v2:= (`float`) v2 @kind i2f;
  #L2ced62.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L2ced68.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.m` @type ^`io.flutter.embedding.android.AndroidTouchProcessor` @kind object;
  #L2ced6c.  call temp:= `g`(v1, v4, v0) @signature `Lio/flutter/embedding/android/AndroidTouchProcessor;.g:(Landroid/view/MotionEvent;Landroid/graphics/Matrix;)Z` @kind virtual;
  #L2ced72.  v4:= temp;
  #L2ced74.  return v4;
}
procedure `void` `readyToDisplay`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v0 @kind this, `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack` v1 @kind object, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.readyToDisplay:(Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorsStack;IIII)V` @AccessFlag PUBLIC {
    temp;

  #L2ceeb0.  v0.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.g` @type ^`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorsStack` := v1 @kind object;
  #L2ceeb4.  v0.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.i` @type ^`int` := v2;
  #L2ceeb8.  v0.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.j` @type ^`int` := v3;
  #L2ceebc.  v1:= new `android.widget.FrameLayout$LayoutParams`;
  #L2ceec0.  call `<init>`(v1, v4, v5) @signature `Landroid/widget/FrameLayout$LayoutParams;.<init>:(II)V` @kind direct;
  #L2ceec6.  v1.`android.widget.FrameLayout$LayoutParams.leftMargin` @type ^`int` := v2;
  #L2ceeca.  v1.`android.widget.FrameLayout$LayoutParams.topMargin` @type ^`int` := v3;
  #L2ceece.  call `setLayoutParams`(v0, v1) @signature `Landroid/widget/FrameLayout;.setLayoutParams:(Landroid/view/ViewGroup$LayoutParams;)V` @kind virtual;
  #L2ceed4.  v1:= 0I;
  #L2ceed6.  call `setWillNotDraw`(v0, v1) @signature `Landroid/widget/FrameLayout;.setWillNotDraw:(Z)V` @kind virtual;
  #L2ceedc.  return @kind void;
}
procedure `boolean` `requestSendAccessibilityEvent`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v3 @kind this, `android.view.View` v4 @kind object, `android.view.accessibility.AccessibilityEvent` v5 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.requestSendAccessibilityEvent:(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ced88.  v0:= 0I;
  #L2ced8a.  call temp:= `getChildAt`(v3, v0) @signature `Landroid/widget/FrameLayout;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L2ced90.  v1:= temp @kind object;
  #L2ced92.  if v1 == 0 then goto L2ceda6;
  #L2ced96.  call temp:= `getImportantForAccessibility`(v1) @signature `Landroid/view/View;.getImportantForAccessibility:()I` @kind virtual;
  #L2ced9c.  v1:= temp;
  #L2ced9e.  v2:= 4I;
  #L2ceda0.  if v1 != v2 then goto L2ceda6;
  #L2ceda4.  return v0;
  #L2ceda6.  call temp:= `requestSendAccessibilityEvent`(v3, v4, v5) @signature `Landroid/widget/FrameLayout;.requestSendAccessibilityEvent:(Landroid/view/View;Landroid/view/accessibility/AccessibilityEvent;)Z` @kind super;
  #L2cedac.  v4:= temp;
  #L2cedae.  return v4;
}
procedure `void` `setOnDescendantFocusChangeListener`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v2 @kind this, `android.view.View$OnFocusChangeListener` v3 @kind object) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.setOnDescendantFocusChangeListener:(Landroid/view/View$OnFocusChangeListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2ceef0.  call `unsetOnDescendantFocusChangeListener`(v2) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.unsetOnDescendantFocusChangeListener:()V` @kind virtual;
  #L2ceef6.  call temp:= `getViewTreeObserver`(v2) @signature `Landroid/widget/FrameLayout;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2ceefc.  v0:= temp @kind object;
  #L2ceefe.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L2cef04.  v1:= temp;
  #L2cef06.  if v1 == 0 then goto L2cef26;
  #L2cef0a.  v1:= v2.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.activeFocusListener` @type ^`android.view.ViewTreeObserver$OnGlobalFocusChangeListener` @kind object;
  #L2cef0e.  if v1 != 0 then goto L2cef26;
  #L2cef12.  v1:= new `io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView$a`;
  #L2cef16.  call `<init>`(v1, v2, v3, v2) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView$a;.<init>:(Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;Landroid/view/View$OnFocusChangeListener;Landroid/view/View;)V` @kind direct;
  #L2cef1c.  v2.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.activeFocusListener` @type ^`android.view.ViewTreeObserver$OnGlobalFocusChangeListener` := v1 @kind object;
  #L2cef20.  call `addOnGlobalFocusChangeListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.addOnGlobalFocusChangeListener:(Landroid/view/ViewTreeObserver$OnGlobalFocusChangeListener;)V` @kind virtual;
  #L2cef26.  return @kind void;
}
procedure `void` `unsetOnDescendantFocusChangeListener`(`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView` v3 @kind this) @signature `Lio/flutter/embedding/engine/mutatorsstack/FlutterMutatorView;.unsetOnDescendantFocusChangeListener:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2cef38.  call temp:= `getViewTreeObserver`(v3) @signature `Landroid/widget/FrameLayout;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2cef3e.  v0:= temp @kind object;
  #L2cef40.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L2cef46.  v1:= temp;
  #L2cef48.  if v1 == 0 then goto L2cef60;
  #L2cef4c.  v1:= v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.activeFocusListener` @type ^`android.view.ViewTreeObserver$OnGlobalFocusChangeListener` @kind object;
  #L2cef50.  if v1 == 0 then goto L2cef60;
  #L2cef54.  v2:= 0I;
  #L2cef56.  v3.`io.flutter.embedding.engine.mutatorsstack.FlutterMutatorView.activeFocusListener` @type ^`android.view.ViewTreeObserver$OnGlobalFocusChangeListener` := v2 @kind object;
  #L2cef5a.  call `removeOnGlobalFocusChangeListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnGlobalFocusChangeListener:(Landroid/view/ViewTreeObserver$OnGlobalFocusChangeListener;)V` @kind virtual;
  #L2cef60.  return @kind void;
}
