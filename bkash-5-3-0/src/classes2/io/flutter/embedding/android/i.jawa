record `io.flutter.embedding.android.i` @kind class @AccessFlag PUBLIC {
  `long` `io.flutter.embedding.android.i.a` @AccessFlag ;
  `io.flutter.embedding.android.i$a` `io.flutter.embedding.android.i.b` @AccessFlag ;
  `long` `io.flutter.embedding.android.i.c` @AccessFlag ;
  `long` `io.flutter.embedding.android.i.d` @AccessFlag ;
  `boolean` `io.flutter.embedding.android.i.e` @AccessFlag ;
  `java.lang.String` `io.flutter.embedding.android.i.f` @AccessFlag ;
}
procedure `void` `<init>`(`io.flutter.embedding.android.i` v0 @kind this) @signature `Lio/flutter/embedding/android/i;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2c6f30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2c6f36.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`io.flutter.embedding.android.i` v5 @kind this) @signature `Lio/flutter/embedding/android/i;.a:()Ljava/nio/ByteBuffer;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2c6e6c.  v0:= v5.`io.flutter.embedding.android.i.f` @type ^`java.lang.String` @kind object;
  #L2c6e70.  if v0 != 0 then goto L2c6e78;
  #L2c6e74.  v0:= 0I;
  #L2c6e76.  goto L2c6e84;
  #L2c6e78.  v1:= "UTF-8" @kind object;
  #L2c6e7c.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2c6e82.  v0:= temp @kind object;
  #L2c6e84.  if v0 != 0 then goto L2c6e8c;
  #L2c6e88.  v1:= 0I;
  #L2c6e8a.  goto L2c6e8e;
  #L2c6e8c.  v1:= length @variable v0;
  #L2c6e8e.  v2:= v1 + 48;
  #L2c6e92.  call temp:= `allocateDirect`(v2) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2c6e98.  v2:= temp @kind object;
  #L2c6e9a.  v3:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L2c6e9e.  call temp:= `order`(v2, v3) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6ea4.  v3:= (`long`) v1 @kind i2l;
  #L2c6ea6.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6eac.  v3:= v5.`io.flutter.embedding.android.i.a` @type ^`long` @kind wide;
  #L2c6eb0.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6eb6.  v1:= v5.`io.flutter.embedding.android.i.b` @type ^`io.flutter.embedding.android.i$a` @kind object;
  #L2c6eba.  call temp:= `getValue`(v1) @signature `Lio/flutter/embedding/android/i$a;.getValue:()J` @kind virtual;
  #L2c6ec0.  v3:= temp @kind wide;
  #L2c6ec2.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6ec8.  v3:= v5.`io.flutter.embedding.android.i.c` @type ^`long` @kind wide;
  #L2c6ecc.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6ed2.  v3:= v5.`io.flutter.embedding.android.i.d` @type ^`long` @kind wide;
  #L2c6ed6.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6edc.  v1:= v5.`io.flutter.embedding.android.i.e` @type ^`boolean` @kind boolean;
  #L2c6ee0.  if v1 == 0 then goto L2c6eea;
  #L2c6ee4.  v3:= 1L;
  #L2c6ee8.  goto L2c6eee;
  #L2c6eea.  v3:= 0L;
  #L2c6eee.  call temp:= `putLong`(v2, v3) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6ef4.  if v0 == 0 then goto L2c6efe;
  #L2c6ef8.  call temp:= `put`(v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2c6efe.  return v2 @kind object;
  #L2c6f00.  v0:= new `java.lang.AssertionError`;
  #L2c6f04.  v1:= "UTF-8 not supported" @kind object;
  #L2c6f08.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2c6f0e.  throw v0;
  catch `java.io.UnsupportedEncodingException` @[L2c6e6c..L2c6e84] goto L2c6f00;
}
