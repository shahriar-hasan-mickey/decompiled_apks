record `io.flutter.embedding.android.DrawableSplashScreen` @kind class @AccessFlag PUBLIC_FINAL extends `io.flutter.embedding.android.q` @kind interface {
  `android.graphics.drawable.Drawable` `io.flutter.embedding.android.DrawableSplashScreen.a` @AccessFlag PRIVATE_FINAL;
  `android.widget.ImageView$ScaleType` `io.flutter.embedding.android.DrawableSplashScreen.b` @AccessFlag PRIVATE_FINAL;
  `long` `io.flutter.embedding.android.DrawableSplashScreen.c` @AccessFlag PRIVATE_FINAL;
  `io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView` `io.flutter.embedding.android.DrawableSplashScreen.d` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`io.flutter.embedding.android.DrawableSplashScreen` v3 @kind this, `android.graphics.drawable.Drawable` v4 @kind object) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.<init>:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bfc60.  v0:= `@@android.widget.ImageView$ScaleType.FIT_XY` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2bfc64.  v1:= 500L;
  #L2bfc68.  call `<init>`(v3, v4, v0, v1) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.<init>:(Landroid/graphics/drawable/Drawable;Landroid/widget/ImageView$ScaleType;J)V` @kind direct;
  #L2bfc6e.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.embedding.android.DrawableSplashScreen` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object, `android.widget.ImageView$ScaleType` v2 @kind object, `long` v3 ) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.<init>:(Landroid/graphics/drawable/Drawable;Landroid/widget/ImageView$ScaleType;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bfc80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bfc86.  v0.`io.flutter.embedding.android.DrawableSplashScreen.a` @type ^`android.graphics.drawable.Drawable` := v1 @kind object;
  #L2bfc8a.  v0.`io.flutter.embedding.android.DrawableSplashScreen.b` @type ^`android.widget.ImageView$ScaleType` := v2 @kind object;
  #L2bfc8e.  v0.`io.flutter.embedding.android.DrawableSplashScreen.c` @type ^`long` := v3 @kind wide;
  #L2bfc92.  return @kind void;
}
procedure `void` `a`(`io.flutter.embedding.android.DrawableSplashScreen` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.a:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bfca4.  v0:= v3.`io.flutter.embedding.android.DrawableSplashScreen.d` @type ^`io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView` @kind object;
  #L2bfca8.  if v0 != 0 then goto L2bfcb4;
  #L2bfcac.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2bfcb2.  return @kind void;
  #L2bfcb4.  call temp:= `animate`(v0) @signature `Landroid/widget/ImageView;.animate:()Landroid/view/ViewPropertyAnimator;` @kind virtual;
  #L2bfcba.  v0:= temp @kind object;
  #L2bfcbc.  v1:= 0I;
  #L2bfcbe.  call temp:= `alpha`(v0, v1) @signature `Landroid/view/ViewPropertyAnimator;.alpha:(F)Landroid/view/ViewPropertyAnimator;` @kind virtual;
  #L2bfcc4.  v0:= temp @kind object;
  #L2bfcc6.  v1:= v3.`io.flutter.embedding.android.DrawableSplashScreen.c` @type ^`long` @kind wide;
  #L2bfcca.  call temp:= `setDuration`(v0, v1) @signature `Landroid/view/ViewPropertyAnimator;.setDuration:(J)Landroid/view/ViewPropertyAnimator;` @kind virtual;
  #L2bfcd0.  v0:= temp @kind object;
  #L2bfcd2.  v1:= new `io.flutter.embedding.android.DrawableSplashScreen$a`;
  #L2bfcd6.  call `<init>`(v1, v3, v4) @signature `Lio/flutter/embedding/android/DrawableSplashScreen$a;.<init>:(Lio/flutter/embedding/android/DrawableSplashScreen;Ljava/lang/Runnable;)V` @kind direct;
  #L2bfcdc.  call temp:= `setListener`(v0, v1) @signature `Landroid/view/ViewPropertyAnimator;.setListener:(Landroid/animation/Animator$AnimatorListener;)Landroid/view/ViewPropertyAnimator;` @kind virtual;
  #L2bfce2.  return @kind void;
}
procedure `boolean` `b`(`io.flutter.embedding.android.DrawableSplashScreen` v1 @kind this) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.b:()Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2bfc44.  call temp:= `a`(v1) @signature `Lio/flutter/embedding/android/p;.a:(Lio/flutter/embedding/android/q;)Z` @kind static;
  #L2bfc4a.  v0:= temp;
  #L2bfc4c.  return v0;
}
procedure `android.view.View` `c`(`io.flutter.embedding.android.DrawableSplashScreen` v1 @kind this, `android.content.Context` v2 @kind object, `android.os.Bundle` v3 @kind object) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.c:(Landroid/content/Context;Landroid/os/Bundle;)Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bfc10.  v3:= new `io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView`;
  #L2bfc14.  call `<init>`(v3, v2) @signature `Lio/flutter/embedding/android/DrawableSplashScreen$DrawableSplashScreenView;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L2bfc1a.  v1.`io.flutter.embedding.android.DrawableSplashScreen.d` @type ^`io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView` := v3 @kind object;
  #L2bfc1e.  v2:= v1.`io.flutter.embedding.android.DrawableSplashScreen.a` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L2bfc22.  v0:= v1.`io.flutter.embedding.android.DrawableSplashScreen.b` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2bfc26.  call `setSplashDrawable`(v3, v2, v0) @signature `Lio/flutter/embedding/android/DrawableSplashScreen$DrawableSplashScreenView;.setSplashDrawable:(Landroid/graphics/drawable/Drawable;Landroid/widget/ImageView$ScaleType;)V` @kind virtual;
  #L2bfc2c.  v2:= v1.`io.flutter.embedding.android.DrawableSplashScreen.d` @type ^`io.flutter.embedding.android.DrawableSplashScreen$DrawableSplashScreenView` @kind object;
  #L2bfc30.  return v2 @kind object;
}
procedure `android.os.Bundle` `d`(`io.flutter.embedding.android.DrawableSplashScreen` v1 @kind this) @signature `Lio/flutter/embedding/android/DrawableSplashScreen;.d:()Landroid/os/Bundle;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L2bfbf4.  call temp:= `b`(v1) @signature `Lio/flutter/embedding/android/p;.b:(Lio/flutter/embedding/android/q;)Landroid/os/Bundle;` @kind static;
  #L2bfbfa.  v0:= temp @kind object;
  #L2bfbfc.  return v0 @kind object;
}
