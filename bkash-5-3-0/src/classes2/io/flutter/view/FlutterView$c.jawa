record `io.flutter.view.FlutterView$c` @kind class @AccessFlag  extends `io.flutter.plugin.common.a` @kind interface {
  `io.flutter.plugin.platform.b` `io.flutter.view.FlutterView$c.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.view.FlutterView$c` v0 @kind this, `io.flutter.view.FlutterView` v1 @kind object, `io.flutter.plugin.platform.b` v2 @kind object) @signature `Lio/flutter/view/FlutterView$c;.<init>:(Lio/flutter/view/FlutterView;Lio/flutter/plugin/platform/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2fc770.  v0.`io.flutter.view.FlutterView$c.a` @type ^`io.flutter.plugin.platform.b` := v2 @kind object;
  #L2fc774.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2fc77a.  return @kind void;
}
procedure `void` `onPostResume`(`io.flutter.view.FlutterView$c` v1 @kind this) @signature `Lio/flutter/view/FlutterView$c;.onPostResume:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2fc78c.  v0:= v1.`io.flutter.view.FlutterView$c.a` @type ^`io.flutter.plugin.platform.b` @kind object;
  #L2fc790.  call `A`(v0) @signature `Lio/flutter/plugin/platform/b;.A:()V` @kind virtual;
  #L2fc796.  return @kind void;
}
