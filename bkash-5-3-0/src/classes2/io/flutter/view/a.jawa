record `io.flutter.view.a` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `bd.d` @kind interface {
  `io.flutter.view.c$l` `io.flutter.view.a.a` @AccessFlag PUBLIC_FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.view.a` v0 @kind this, `io.flutter.view.c$l` v1 @kind object) @signature `Lio/flutter/view/a;.<init>:(Lio/flutter/view/c$l;)V` @AccessFlag PUBLIC_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f68f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f68fa.  v0.`io.flutter.view.a.a` @type ^`io.flutter.view.c$l` := v1 @kind object;
  #L2f68fe.  return @kind void;
}
procedure `boolean` `test`(`io.flutter.view.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/flutter/view/a;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2f68d0.  v0:= v1.`io.flutter.view.a.a` @type ^`io.flutter.view.c$l` @kind object;
  #L2f68d4.  v2:= (`io.flutter.view.c$l`) v2 @kind object;
  #L2f68d8.  call temp:= `b`(v0, v2) @signature `Lio/flutter/view/c;.b:(Lio/flutter/view/c$l;Lio/flutter/view/c$l;)Z` @kind static;
  #L2f68de.  v2:= temp;
  #L2f68e0.  return v2;
}
