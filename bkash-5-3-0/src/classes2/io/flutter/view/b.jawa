record `io.flutter.view.b` @kind class @AccessFlag PUBLIC_FINAL_SYNTHETIC extends `bd.d` @kind interface {
}
global `io.flutter.view.b` `@@io.flutter.view.b.a` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lio/flutter/view/b;.<clinit>:()V` @AccessFlag STATIC_SYNTHETIC_CONSTRUCTOR {
    temp;
    v0;

  #L2f6930.  v0:= new `io.flutter.view.b`;
  #L2f6934.  call `<init>`(v0) @signature `Lio/flutter/view/b;.<init>:()V` @kind direct;
  #L2f693a.  `@@io.flutter.view.b.a` @type ^`io.flutter.view.b` := v0 @kind object;
  #L2f693e.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.view.b` v0 @kind this) @signature `Lio/flutter/view/b;.<init>:()V` @AccessFlag PRIVATE_SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2f6950.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2f6956.  return @kind void;
}
procedure `boolean` `test`(`io.flutter.view.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lio/flutter/view/b;.test:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {
    temp;

  #L2f6910.  v1:= (`io.flutter.view.c$l`) v1 @kind object;
  #L2f6914.  call temp:= `a`(v1) @signature `Lio/flutter/view/c;.a:(Lio/flutter/view/c$l;)Z` @kind static;
  #L2f691a.  v1:= temp;
  #L2f691c.  return v1;
}
