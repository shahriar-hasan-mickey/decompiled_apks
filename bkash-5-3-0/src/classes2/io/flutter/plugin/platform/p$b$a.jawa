record `io.flutter.plugin.platform.p$b$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `io.flutter.plugin.platform.p$b` `io.flutter.plugin.platform.p$b$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugin.platform.p$b$a` v0 @kind this, `io.flutter.plugin.platform.p$b` v1 @kind object) @signature `Lio/flutter/plugin/platform/p$b$a;.<init>:(Lio/flutter/plugin/platform/p$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2deeb8.  v0.`io.flutter.plugin.platform.p$b$a.g` @type ^`io.flutter.plugin.platform.p$b` := v1 @kind object;
  #L2deebc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2deec2.  return @kind void;
}
procedure `void` `run`(`io.flutter.plugin.platform.p$b$a` v2 @kind this) @signature `Lio/flutter/plugin/platform/p$b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2deed4.  v0:= v2.`io.flutter.plugin.platform.p$b$a.g` @type ^`io.flutter.plugin.platform.p$b` @kind object;
  #L2deed8.  v0:= v0.`io.flutter.plugin.platform.p$b.a` @type ^`android.view.View` @kind object;
  #L2deedc.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L2deee2.  v0:= temp @kind object;
  #L2deee4.  v1:= v2.`io.flutter.plugin.platform.p$b$a.g` @type ^`io.flutter.plugin.platform.p$b` @kind object;
  #L2deee8.  call `removeOnDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnDrawListener:(Landroid/view/ViewTreeObserver$OnDrawListener;)V` @kind virtual;
  #L2deeee.  return @kind void;
}
