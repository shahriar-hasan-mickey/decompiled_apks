record `io.flutter.plugin.platform.h$a` @kind class @AccessFlag  extends `io.flutter.view.h$a` @kind interface {
  `io.flutter.plugin.platform.h` `io.flutter.plugin.platform.h$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugin.platform.h$a` v0 @kind this, `io.flutter.plugin.platform.h` v1 @kind object) @signature `Lio/flutter/plugin/platform/h$a;.<init>:(Lio/flutter/plugin/platform/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2dbe08.  v0.`io.flutter.plugin.platform.h$a.a` @type ^`io.flutter.plugin.platform.h` := v1 @kind object;
  #L2dbe0c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2dbe12.  return @kind void;
}
procedure `void` `a`(`io.flutter.plugin.platform.h$a` v2 @kind this) @signature `Lio/flutter/plugin/platform/h$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2dbe24.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L2dbe28.  v1:= 29I;
  #L2dbe2c.  if v0 != v1 then goto L2dbe42;
  #L2dbe30.  v0:= v2.`io.flutter.plugin.platform.h$a.a` @type ^`io.flutter.plugin.platform.h` @kind object;
  #L2dbe34.  call temp:= `a`(v0) @signature `Lio/flutter/plugin/platform/h;.a:(Lio/flutter/plugin/platform/h;)Ljava/util/concurrent/atomic/AtomicLong;` @kind static;
  #L2dbe3a.  v0:= temp @kind object;
  #L2dbe3c.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.decrementAndGet:()J` @kind virtual;
  #L2dbe42.  return @kind void;
}
