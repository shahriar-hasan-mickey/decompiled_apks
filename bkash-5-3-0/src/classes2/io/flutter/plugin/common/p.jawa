record `io.flutter.plugin.common.p` @kind class @AccessFlag PUBLIC_FINAL extends `io.flutter.plugin.common.m` @kind interface {
  `io.flutter.plugin.common.o` `io.flutter.plugin.common.p.a` @AccessFlag PRIVATE_FINAL;
}
global `io.flutter.plugin.common.p` `@@io.flutter.plugin.common.p.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/flutter/plugin/common/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2d7844.  v0:= new `io.flutter.plugin.common.p`;
  #L2d7848.  v1:= `@@io.flutter.plugin.common.o.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d784c.  call `<init>`(v0, v1) @signature `Lio/flutter/plugin/common/p;.<init>:(Lio/flutter/plugin/common/o;)V` @kind direct;
  #L2d7852.  `@@io.flutter.plugin.common.p.b` @type ^`io.flutter.plugin.common.p` := v0 @kind object;
  #L2d7856.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugin.common.p` v0 @kind this, `io.flutter.plugin.common.o` v1 @kind object) @signature `Lio/flutter/plugin/common/p;.<init>:(Lio/flutter/plugin/common/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2d7868.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d786e.  v0.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` := v1 @kind object;
  #L2d7872.  return @kind void;
}
procedure `java.lang.String` `g`(`java.lang.Throwable` v2 @kind object) @signature `Lio/flutter/plugin/common/p;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2d763c.  v0:= new `java.io.StringWriter`;
  #L2d7640.  call `<init>`(v0) @signature `Ljava/io/StringWriter;.<init>:()V` @kind direct;
  #L2d7646.  v1:= new `java.io.PrintWriter`;
  #L2d764a.  call `<init>`(v1, v0) @signature `Ljava/io/PrintWriter;.<init>:(Ljava/io/Writer;)V` @kind direct;
  #L2d7650.  call `printStackTrace`(v2, v1) @signature `Ljava/lang/Throwable;.printStackTrace:(Ljava/io/PrintWriter;)V` @kind virtual;
  #L2d7656.  call temp:= `toString`(v0) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d765c.  v2:= temp @kind object;
  #L2d765e.  return v2 @kind object;
}
procedure `io.flutter.plugin.common.k` `a`(`io.flutter.plugin.common.p` v3 @kind this, `java.nio.ByteBuffer` v4 @kind object) @signature `Lio/flutter/plugin/common/p;.a:(Ljava/nio/ByteBuffer;)Lio/flutter/plugin/common/k;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d751c.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L2d7522.  v0:= temp @kind object;
  #L2d7524.  call temp:= `order`(v4, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d752a.  v0:= v3.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d752e.  call temp:= `f`(v0, v4) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d7534.  v0:= temp @kind object;
  #L2d7536.  v1:= v3.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d753a.  call temp:= `f`(v1, v4) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d7540.  v1:= temp @kind object;
  #L2d7542.  v2:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L2d7546.  if v2 == 0 then goto L2d7566;
  #L2d754a.  call temp:= `hasRemaining`(v4) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L2d7550.  v4:= temp;
  #L2d7552.  if v4 != 0 then goto L2d7566;
  #L2d7556.  v4:= new `io.flutter.plugin.common.k`;
  #L2d755a.  v0:= (`java.lang.String`) v0 @kind object;
  #L2d755e.  call `<init>`(v4, v0, v1) @signature `Lio/flutter/plugin/common/k;.<init>:(Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L2d7564.  return v4 @kind object;
  #L2d7566.  v4:= new `java.lang.IllegalArgumentException`;
  #L2d756a.  v0:= "Method call corrupted" @kind object;
  #L2d756e.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d7574.  throw v4;
}
procedure `java.nio.ByteBuffer` `b`(`io.flutter.plugin.common.p` v3 @kind this, `io.flutter.plugin.common.k` v4 @kind object) @signature `Lio/flutter/plugin/common/p;.b:(Lio/flutter/plugin/common/k;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d7790.  v0:= new `io.flutter.plugin.common.o$a`;
  #L2d7794.  call `<init>`(v0) @signature `Lio/flutter/plugin/common/o$a;.<init>:()V` @kind direct;
  #L2d779a.  v1:= v3.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d779e.  v2:= v4.`io.flutter.plugin.common.k.a` @type ^`java.lang.String` @kind object;
  #L2d77a2.  call `p`(v1, v0, v2) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d77a8.  v1:= v3.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d77ac.  v4:= v4.`io.flutter.plugin.common.k.b` @type ^`java.lang.Object` @kind object;
  #L2d77b0.  call `p`(v1, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d77b6.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d77bc.  v4:= temp;
  #L2d77be.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2d77c4.  v4:= temp @kind object;
  #L2d77c6.  call temp:= `e`(v0) @signature `Lio/flutter/plugin/common/o$a;.e:()[B` @kind virtual;
  #L2d77cc.  v1:= temp @kind object;
  #L2d77ce.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d77d4.  v0:= temp;
  #L2d77d6.  v2:= 0I;
  #L2d77d8.  call temp:= `put`(v4, v1, v2, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d77de.  return v4 @kind object;
}
procedure `java.nio.ByteBuffer` `c`(`io.flutter.plugin.common.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/flutter/plugin/common/p;.c:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d77f0.  v0:= new `io.flutter.plugin.common.o$a`;
  #L2d77f4.  call `<init>`(v0) @signature `Lio/flutter/plugin/common/o$a;.<init>:()V` @kind direct;
  #L2d77fa.  v1:= 0I;
  #L2d77fc.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L2d7802.  v2:= v3.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7806.  call `p`(v2, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d780c.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d7812.  v4:= temp;
  #L2d7814.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2d781a.  v4:= temp @kind object;
  #L2d781c.  call temp:= `e`(v0) @signature `Lio/flutter/plugin/common/o$a;.e:()[B` @kind virtual;
  #L2d7822.  v2:= temp @kind object;
  #L2d7824.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d782a.  v0:= temp;
  #L2d782c.  call temp:= `put`(v4, v2, v1, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d7832.  return v4 @kind object;
}
procedure `java.nio.ByteBuffer` `d`(`io.flutter.plugin.common.p` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lio/flutter/plugin/common/p;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/String;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d76fc.  v0:= new `io.flutter.plugin.common.o$a`;
  #L2d7700.  call `<init>`(v0) @signature `Lio/flutter/plugin/common/o$a;.<init>:()V` @kind direct;
  #L2d7706.  v1:= 1I;
  #L2d7708.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L2d770e.  v1:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7712.  call `p`(v1, v0, v3) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d7718.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d771c.  call `p`(v3, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d7722.  v3:= instanceof @variable v5 @type ^`java.lang.Throwable` @kind boolean;
  #L2d7726.  if v3 == 0 then goto L2d7742;
  #L2d772a.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d772e.  v5:= (`java.lang.Throwable`) v5 @kind object;
  #L2d7732.  call temp:= `g`(v5) @signature `Lio/flutter/plugin/common/p;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L2d7738.  v4:= temp @kind object;
  #L2d773a.  call `p`(v3, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d7740.  goto L2d774c;
  #L2d7742.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7746.  call `p`(v3, v0, v5) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d774c.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7750.  call `p`(v3, v0, v6) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d7756.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d775c.  v3:= temp;
  #L2d775e.  call temp:= `allocateDirect`(v3) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2d7764.  v3:= temp @kind object;
  #L2d7766.  call temp:= `e`(v0) @signature `Lio/flutter/plugin/common/o$a;.e:()[B` @kind virtual;
  #L2d776c.  v4:= temp @kind object;
  #L2d776e.  v5:= 0I;
  #L2d7770.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d7776.  v6:= temp;
  #L2d7778.  call temp:= `put`(v3, v4, v5, v6) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d777e.  return v3 @kind object;
}
procedure `java.nio.ByteBuffer` `e`(`io.flutter.plugin.common.p` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lio/flutter/plugin/common/p;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2d7670.  v0:= new `io.flutter.plugin.common.o$a`;
  #L2d7674.  call `<init>`(v0) @signature `Lio/flutter/plugin/common/o$a;.<init>:()V` @kind direct;
  #L2d767a.  v1:= 1I;
  #L2d767c.  call `write`(v0, v1) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L2d7682.  v1:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7686.  call `p`(v1, v0, v3) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d768c.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d7690.  call `p`(v3, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d7696.  v3:= instanceof @variable v5 @type ^`java.lang.Throwable` @kind boolean;
  #L2d769a.  if v3 == 0 then goto L2d76b6;
  #L2d769e.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d76a2.  v5:= (`java.lang.Throwable`) v5 @kind object;
  #L2d76a6.  call temp:= `g`(v5) @signature `Lio/flutter/plugin/common/p;.g:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L2d76ac.  v4:= temp @kind object;
  #L2d76ae.  call `p`(v3, v0, v4) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d76b4.  goto L2d76c0;
  #L2d76b6.  v3:= v2.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d76ba.  call `p`(v3, v0, v5) @signature `Lio/flutter/plugin/common/o;.p:(Ljava/io/ByteArrayOutputStream;Ljava/lang/Object;)V` @kind virtual;
  #L2d76c0.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d76c6.  v3:= temp;
  #L2d76c8.  call temp:= `allocateDirect`(v3) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L2d76ce.  v3:= temp @kind object;
  #L2d76d0.  call temp:= `e`(v0) @signature `Lio/flutter/plugin/common/o$a;.e:()[B` @kind virtual;
  #L2d76d6.  v4:= temp @kind object;
  #L2d76d8.  v5:= 0I;
  #L2d76da.  call temp:= `size`(v0) @signature `Ljava/io/ByteArrayOutputStream;.size:()I` @kind virtual;
  #L2d76e0.  v0:= temp;
  #L2d76e2.  call temp:= `put`(v3, v4, v5, v0) @signature `Ljava/nio/ByteBuffer;.put:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d76e8.  return v3 @kind object;
}
procedure `java.lang.Object` `f`(`io.flutter.plugin.common.p` v4 @kind this, `java.nio.ByteBuffer` v5 @kind object) @signature `Lio/flutter/plugin/common/p;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d7588.  call temp:= `nativeOrder`() @signature `Ljava/nio/ByteOrder;.nativeOrder:()Ljava/nio/ByteOrder;` @kind static;
  #L2d758e.  v0:= temp @kind object;
  #L2d7590.  call temp:= `order`(v5, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L2d7596.  call temp:= `get`(v5) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L2d759c.  v0:= temp;
  #L2d759e.  if v0 == 0 then goto L2d75aa;
  #L2d75a2.  v1:= 1I;
  #L2d75a4.  if v0 != v1 then goto L2d761c;
  #L2d75a8.  goto L2d75c4;
  #L2d75aa.  v0:= v4.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d75ae.  call temp:= `f`(v0, v5) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d75b4.  v0:= temp @kind object;
  #L2d75b6.  call temp:= `hasRemaining`(v5) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L2d75bc.  v1:= temp;
  #L2d75be.  if v1 != 0 then goto L2d75c4;
  #L2d75c2.  return v0 @kind object;
  #L2d75c4.  v0:= v4.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d75c8.  call temp:= `f`(v0, v5) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d75ce.  v0:= temp @kind object;
  #L2d75d0.  v1:= v4.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d75d4.  call temp:= `f`(v1, v5) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d75da.  v1:= temp @kind object;
  #L2d75dc.  v2:= v4.`io.flutter.plugin.common.p.a` @type ^`io.flutter.plugin.common.o` @kind object;
  #L2d75e0.  call temp:= `f`(v2, v5) @signature `Lio/flutter/plugin/common/o;.f:(Ljava/nio/ByteBuffer;)Ljava/lang/Object;` @kind virtual;
  #L2d75e6.  v2:= temp @kind object;
  #L2d75e8.  v3:= instanceof @variable v0 @type ^`java.lang.String` @kind boolean;
  #L2d75ec.  if v3 == 0 then goto L2d761c;
  #L2d75f0.  if v1 == 0 then goto L2d75fc;
  #L2d75f4.  v3:= instanceof @variable v1 @type ^`java.lang.String` @kind boolean;
  #L2d75f8.  if v3 == 0 then goto L2d761c;
  #L2d75fc.  call temp:= `hasRemaining`(v5) @signature `Ljava/nio/ByteBuffer;.hasRemaining:()Z` @kind virtual;
  #L2d7602.  v5:= temp;
  #L2d7604.  if v5 != 0 then goto L2d761c;
  #L2d7608.  v5:= new `io.flutter.plugin.common.f`;
  #L2d760c.  v0:= (`java.lang.String`) v0 @kind object;
  #L2d7610.  v1:= (`java.lang.String`) v1 @kind object;
  #L2d7614.  call `<init>`(v5, v0, v1, v2) @signature `Lio/flutter/plugin/common/f;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind direct;
  #L2d761a.  throw v5;
  #L2d761c.  v5:= new `java.lang.IllegalArgumentException`;
  #L2d7620.  v0:= "Envelope corrupted" @kind object;
  #L2d7624.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d762a.  throw v5;
}
