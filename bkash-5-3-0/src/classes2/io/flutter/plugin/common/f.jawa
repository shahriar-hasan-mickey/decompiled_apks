record `io.flutter.plugin.common.f` @kind class @AccessFlag PUBLIC extends `java.lang.RuntimeException` @kind class {
  `java.lang.String` `io.flutter.plugin.common.f.code` @AccessFlag PUBLIC_FINAL;
  `java.lang.Object` `io.flutter.plugin.common.f.details` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`io.flutter.plugin.common.f` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lio/flutter/plugin/common/f;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2d5f74.  call `<init>`(v0, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2d5f7a.  v0.`io.flutter.plugin.common.f.code` @type ^`java.lang.String` := v1 @kind object;
  #L2d5f7e.  v0.`io.flutter.plugin.common.f.details` @type ^`java.lang.Object` := v3 @kind object;
  #L2d5f82.  return @kind void;
}
