record `io.flutter.plugin.common.e$c$a` @kind class @AccessFlag FINAL extends `io.flutter.plugin.common.e$b` @kind interface {
  `java.util.concurrent.atomic.AtomicBoolean` `io.flutter.plugin.common.e$c$a.a` @AccessFlag FINAL;
  `io.flutter.plugin.common.e$c` `io.flutter.plugin.common.e$c$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`io.flutter.plugin.common.e$c$a` v1 @kind this, `io.flutter.plugin.common.e$c` v2 @kind object) @signature `Lio/flutter/plugin/common/e$c$a;.<init>:(Lio/flutter/plugin/common/e$c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2d5a78.  v1.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` := v2 @kind object;
  #L2d5a7c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2d5a82.  v2:= new `java.util.concurrent.atomic.AtomicBoolean`;
  #L2d5a86.  v0:= 0I;
  #L2d5a88.  call `<init>`(v2, v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.<init>:(Z)V` @kind direct;
  #L2d5a8e.  v1.`io.flutter.plugin.common.e$c$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` := v2 @kind object;
  #L2d5a92.  return @kind void;
}
procedure `void` `<init>`(`io.flutter.plugin.common.e$c$a` v0 @kind this, `io.flutter.plugin.common.e$c` v1 @kind object, `io.flutter.plugin.common.e$a` v2 @kind object) @signature `Lio/flutter/plugin/common/e$c$a;.<init>:(Lio/flutter/plugin/common/e$c;Lio/flutter/plugin/common/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2d5aa4.  call `<init>`(v0, v1) @signature `Lio/flutter/plugin/common/e$c$a;.<init>:(Lio/flutter/plugin/common/e$c;)V` @kind direct;
  #L2d5aaa.  return @kind void;
}
procedure `void` `error`(`io.flutter.plugin.common.e$c$a` v3 @kind this, `java.lang.String` v4 @kind object, `java.lang.String` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lio/flutter/plugin/common/e$c$a;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d5abc.  v0:= v3.`io.flutter.plugin.common.e$c$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2d5ac0.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L2d5ac6.  v0:= temp;
  #L2d5ac8.  if v0 != 0 then goto L2d5b24;
  #L2d5acc.  v0:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5ad0.  call temp:= `b`(v0) @signature `Lio/flutter/plugin/common/e$c;.b:(Lio/flutter/plugin/common/e$c;)Ljava/util/concurrent/atomic/AtomicReference;` @kind static;
  #L2d5ad6.  v0:= temp @kind object;
  #L2d5ad8.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2d5ade.  v0:= temp @kind object;
  #L2d5ae0.  if v0 == v3 then goto L2d5ae6;
  #L2d5ae4.  goto L2d5b24;
  #L2d5ae6.  v0:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5aea.  v0:= v0.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5aee.  call temp:= `c`(v0) @signature `Lio/flutter/plugin/common/e;.c:(Lio/flutter/plugin/common/e;)Lio/flutter/plugin/common/d;` @kind static;
  #L2d5af4.  v0:= temp @kind object;
  #L2d5af6.  v1:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5afa.  v1:= v1.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5afe.  call temp:= `b`(v1) @signature `Lio/flutter/plugin/common/e;.b:(Lio/flutter/plugin/common/e;)Ljava/lang/String;` @kind static;
  #L2d5b04.  v1:= temp @kind object;
  #L2d5b06.  v2:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5b0a.  v2:= v2.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5b0e.  call temp:= `a`(v2) @signature `Lio/flutter/plugin/common/e;.a:(Lio/flutter/plugin/common/e;)Lio/flutter/plugin/common/m;` @kind static;
  #L2d5b14.  v2:= temp @kind object;
  #L2d5b16.  call temp:= `e`(v2, v4, v5, v6) @signature `Lio/flutter/plugin/common/m;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L2d5b1c.  v4:= temp @kind object;
  #L2d5b1e.  call `send`(v0, v1, v4) @signature `Lio/flutter/plugin/common/d;.send:(Ljava/lang/String;Ljava/nio/ByteBuffer;)V` @kind interface;
  #L2d5b24.  return @kind void;
}
procedure `void` `success`(`io.flutter.plugin.common.e$c$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lio/flutter/plugin/common/e$c$a;.success:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2d5b38.  v0:= v3.`io.flutter.plugin.common.e$c$a.a` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L2d5b3c.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.get:()Z` @kind virtual;
  #L2d5b42.  v0:= temp;
  #L2d5b44.  if v0 != 0 then goto L2d5ba0;
  #L2d5b48.  v0:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5b4c.  call temp:= `b`(v0) @signature `Lio/flutter/plugin/common/e$c;.b:(Lio/flutter/plugin/common/e$c;)Ljava/util/concurrent/atomic/AtomicReference;` @kind static;
  #L2d5b52.  v0:= temp @kind object;
  #L2d5b54.  call temp:= `get`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2d5b5a.  v0:= temp @kind object;
  #L2d5b5c.  if v0 == v3 then goto L2d5b62;
  #L2d5b60.  goto L2d5ba0;
  #L2d5b62.  v0:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5b66.  v0:= v0.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5b6a.  call temp:= `c`(v0) @signature `Lio/flutter/plugin/common/e;.c:(Lio/flutter/plugin/common/e;)Lio/flutter/plugin/common/d;` @kind static;
  #L2d5b70.  v0:= temp @kind object;
  #L2d5b72.  v1:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5b76.  v1:= v1.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5b7a.  call temp:= `b`(v1) @signature `Lio/flutter/plugin/common/e;.b:(Lio/flutter/plugin/common/e;)Ljava/lang/String;` @kind static;
  #L2d5b80.  v1:= temp @kind object;
  #L2d5b82.  v2:= v3.`io.flutter.plugin.common.e$c$a.b` @type ^`io.flutter.plugin.common.e$c` @kind object;
  #L2d5b86.  v2:= v2.`io.flutter.plugin.common.e$c.c` @type ^`io.flutter.plugin.common.e` @kind object;
  #L2d5b8a.  call temp:= `a`(v2) @signature `Lio/flutter/plugin/common/e;.a:(Lio/flutter/plugin/common/e;)Lio/flutter/plugin/common/m;` @kind static;
  #L2d5b90.  v2:= temp @kind object;
  #L2d5b92.  call temp:= `c`(v2, v4) @signature `Lio/flutter/plugin/common/m;.c:(Ljava/lang/Object;)Ljava/nio/ByteBuffer;` @kind interface;
  #L2d5b98.  v4:= temp @kind object;
  #L2d5b9a.  call `send`(v0, v1, v4) @signature `Lio/flutter/plugin/common/d;.send:(Ljava/lang/String;Ljava/nio/ByteBuffer;)V` @kind interface;
  #L2d5ba0.  return @kind void;
}
