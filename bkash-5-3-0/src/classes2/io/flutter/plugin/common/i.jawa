record `io.flutter.plugin.common.i` @kind class @AccessFlag PUBLIC {
}
procedure `java.lang.Object` `a`(`java.lang.Object` v4 @kind object) @signature `Lio/flutter/plugin/common/i;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2d63f4.  if v4 != 0 then goto L2d63fe;
  #L2d63f8.  v4:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L2d63fc.  return v4 @kind object;
  #L2d63fe.  v0:= instanceof @variable v4 @type ^`org.json.JSONArray` @kind boolean;
  #L2d6402.  if v0 != 0 then goto L2d6594;
  #L2d6406.  v0:= instanceof @variable v4 @type ^`org.json.JSONObject` @kind boolean;
  #L2d640a.  if v0 == 0 then goto L2d6412;
  #L2d640e.  goto L2d6594;
  #L2d6412.  v0:= `@@org.json.JSONObject.NULL` @type ^`java.lang.Object` @kind object;
  #L2d6416.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2d641c.  v0:= temp;
  #L2d641e.  if v0 == 0 then goto L2d6424;
  #L2d6422.  return v4 @kind object;
  #L2d6424.  v0:= instanceof @variable v4 @type ^`java.util.Collection` @kind boolean;
  #L2d6428.  if v0 == 0 then goto L2d6468;
  #L2d642c.  v0:= new `org.json.JSONArray`;
  #L2d6430.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L2d6436.  v4:= (`java.util.Collection`) v4 @kind object;
  #L2d643a.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d6440.  v4:= temp @kind object;
  #L2d6442.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d6448.  v1:= temp;
  #L2d644a.  if v1 == 0 then goto L2d6466;
  #L2d644e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d6454.  v1:= temp @kind object;
  #L2d6456.  call temp:= `a`(v1) @signature `Lio/flutter/plugin/common/i;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d645c.  v1:= temp @kind object;
  #L2d645e.  call temp:= `put`(v0, v1) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L2d6464.  goto L2d6442;
  #L2d6466.  return v0 @kind object;
  #L2d6468.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2d646e.  v0:= temp @kind object;
  #L2d6470.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2d6476.  v0:= temp;
  #L2d6478.  if v0 == 0 then goto L2d64b2;
  #L2d647c.  v0:= new `org.json.JSONArray`;
  #L2d6480.  call `<init>`(v0) @signature `Lorg/json/JSONArray;.<init>:()V` @kind direct;
  #L2d6486.  call temp:= `getLength`(v4) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L2d648c.  v1:= temp;
  #L2d648e.  v2:= 0I;
  #L2d6490.  if v2 >= v1 then goto L2d64b0;
  #L2d6494.  call temp:= `get`(v4, v2) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L2d649a.  v3:= temp @kind object;
  #L2d649c.  call temp:= `a`(v3) @signature `Lio/flutter/plugin/common/i;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d64a2.  v3:= temp @kind object;
  #L2d64a4.  call temp:= `put`(v0, v3) @signature `Lorg/json/JSONArray;.put:(Ljava/lang/Object;)Lorg/json/JSONArray;` @kind virtual;
  #L2d64aa.  v2:= v2 + 1;
  #L2d64ae.  goto L2d6490;
  #L2d64b0.  return v0 @kind object;
  #L2d64b2.  v0:= instanceof @variable v4 @type ^`java.util.Map` @kind boolean;
  #L2d64b6.  if v0 == 0 then goto L2d6516;
  #L2d64ba.  v0:= new `org.json.JSONObject`;
  #L2d64be.  call `<init>`(v0) @signature `Lorg/json/JSONObject;.<init>:()V` @kind direct;
  #L2d64c4.  v4:= (`java.util.Map`) v4 @kind object;
  #L2d64c8.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2d64ce.  v4:= temp @kind object;
  #L2d64d0.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2d64d6.  v4:= temp @kind object;
  #L2d64d8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2d64de.  v1:= temp;
  #L2d64e0.  if v1 == 0 then goto L2d6514;
  #L2d64e4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2d64ea.  v1:= temp @kind object;
  #L2d64ec.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L2d64f0.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2d64f6.  v2:= temp @kind object;
  #L2d64f8.  v2:= (`java.lang.String`) v2 @kind object;
  #L2d64fc.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2d6502.  v1:= temp @kind object;
  #L2d6504.  call temp:= `a`(v1) @signature `Lio/flutter/plugin/common/i;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2d650a.  v1:= temp @kind object;
  #L2d650c.  call temp:= `put`(v0, v2, v1) @signature `Lorg/json/JSONObject;.put:(Ljava/lang/String;Ljava/lang/Object;)Lorg/json/JSONObject;` @kind virtual;
  #L2d6512.  goto L2d64d8;
  #L2d6514.  return v0 @kind object;
  #L2d6516.  v0:= instanceof @variable v4 @type ^`java.lang.Boolean` @kind boolean;
  #L2d651a.  if v0 != 0 then goto L2d6590;
  #L2d651e.  v0:= instanceof @variable v4 @type ^`java.lang.Byte` @kind boolean;
  #L2d6522.  if v0 != 0 then goto L2d6590;
  #L2d6526.  v0:= instanceof @variable v4 @type ^`java.lang.Character` @kind boolean;
  #L2d652a.  if v0 != 0 then goto L2d6590;
  #L2d652e.  v0:= instanceof @variable v4 @type ^`java.lang.Double` @kind boolean;
  #L2d6532.  if v0 != 0 then goto L2d6590;
  #L2d6536.  v0:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L2d653a.  if v0 != 0 then goto L2d6590;
  #L2d653e.  v0:= instanceof @variable v4 @type ^`java.lang.Integer` @kind boolean;
  #L2d6542.  if v0 != 0 then goto L2d6590;
  #L2d6546.  v0:= instanceof @variable v4 @type ^`java.lang.Long` @kind boolean;
  #L2d654a.  if v0 != 0 then goto L2d6590;
  #L2d654e.  v0:= instanceof @variable v4 @type ^`java.lang.Short` @kind boolean;
  #L2d6552.  if v0 != 0 then goto L2d6590;
  #L2d6556.  v0:= instanceof @variable v4 @type ^`java.lang.String` @kind boolean;
  #L2d655a.  if v0 == 0 then goto L2d6560;
  #L2d655e.  goto L2d6590;
  #L2d6560.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2d6566.  v0:= temp @kind object;
  #L2d6568.  call temp:= `getPackage`(v0) @signature `Ljava/lang/Class;.getPackage:()Ljava/lang/Package;` @kind virtual;
  #L2d656e.  v0:= temp @kind object;
  #L2d6570.  call temp:= `getName`(v0) @signature `Ljava/lang/Package;.getName:()Ljava/lang/String;` @kind virtual;
  #L2d6576.  v0:= temp @kind object;
  #L2d6578.  v1:= "java." @kind object;
  #L2d657c.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2d6582.  v0:= temp;
  #L2d6584.  if v0 == 0 then goto L2d6592;
  #L2d6588.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2d658e.  v4:= temp @kind object;
  #L2d6590.  return v4 @kind object;
  #L2d6592.  v4:= 0I;
  #L2d6594.  return v4 @kind object;
  catch `java.lang.Exception` @[L2d6424..L2d6590] goto L2d6592;
}
