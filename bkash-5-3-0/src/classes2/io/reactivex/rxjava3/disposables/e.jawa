record `io.reactivex.rxjava3.disposables.e` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.atomic.AtomicReference` @kind class, `io.reactivex.rxjava3.disposables.c` @kind interface {
}
global `long` `@@io.reactivex.rxjava3.disposables.e.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.disposables.e` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lio/reactivex/rxjava3/disposables/e;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2fe3f8.  v0:= "value is null" @kind object;
  #L2fe3fc.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2fe402.  call `<init>`(v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2fe408.  return @kind void;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.disposables.e` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/e;.dispose:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe41c.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2fe422.  v0:= temp @kind object;
  #L2fe424.  if v0 == 0 then goto L2fe43c;
  #L2fe428.  v0:= 0I;
  #L2fe42a.  call temp:= `getAndSet`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.getAndSet:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2fe430.  v0:= temp @kind object;
  #L2fe432.  if v0 == 0 then goto L2fe43c;
  #L2fe436.  call `onDisposed`(v1, v0) @signature `Lio/reactivex/rxjava3/disposables/e;.onDisposed:(Ljava/lang/Object;)V` @kind virtual;
  #L2fe43c.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.disposables.e` v1 @kind this) @signature `Lio/reactivex/rxjava3/disposables/e;.isDisposed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2fe3d4.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L2fe3da.  v0:= temp @kind object;
  #L2fe3dc.  if v0 != 0 then goto L2fe3e4;
  #L2fe3e0.  v0:= 1I;
  #L2fe3e2.  goto L2fe3e6;
  #L2fe3e4.  v0:= 0I;
  #L2fe3e6.  return v0;
}
procedure `void` `onDisposed`(`java.lang.Object` v0 @kind object) @signature `Lio/reactivex/rxjava3/disposables/e;.onDisposed:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
