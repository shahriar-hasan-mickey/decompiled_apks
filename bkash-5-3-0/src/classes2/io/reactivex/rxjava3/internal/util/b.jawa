record `io.reactivex.rxjava3.internal.util.b` @kind class @AccessFlag PUBLIC_FINAL {
  `float` `io.reactivex.rxjava3.internal.util.b.a` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.util.b.b` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.util.b.c` @AccessFlag ;
  `int` `io.reactivex.rxjava3.internal.util.b.d` @AccessFlag ;
  `java.lang.Object`[] `io.reactivex.rxjava3.internal.util.b.e` @AccessFlag ;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.b` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L301498.  v0:= 16I;
  #L30149c.  v1:= 0.75F;
  #L3014a0.  call `<init>`(v2, v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/b;.<init>:(IF)V` @kind direct;
  #L3014a6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.util.b` v1 @kind this, `int` v2 , `float` v3 ) @signature `Lio/reactivex/rxjava3/internal/util/b;.<init>:(IF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3014b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3014be.  v1.`io.reactivex.rxjava3.internal.util.b.a` @type ^`float` := v3;
  #L3014c2.  call temp:= `a`(v2) @signature `Lio/reactivex/rxjava3/internal/util/c;.a:(I)I` @kind static;
  #L3014c8.  v2:= temp;
  #L3014ca.  v0:= v2 + -1;
  #L3014ce.  v1.`io.reactivex.rxjava3.internal.util.b.b` @type ^`int` := v0;
  #L3014d2.  v0:= (`float`) v2 @kind i2f;
  #L3014d4.  v3:= v3 * v0 @kind float;
  #L3014d8.  v3:= (`int`) v3 @kind f2i;
  #L3014da.  v1.`io.reactivex.rxjava3.internal.util.b.d` @type ^`int` := v3;
  #L3014de.  v2:= new `java.lang.Object`[v2];
  #L3014e2.  v1.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] := v2 @kind object;
  #L3014e6.  return @kind void;
}
procedure `int` `c`(`int` v1 ) @signature `Lio/reactivex/rxjava3/internal/util/b;.c:(I)I` @AccessFlag STATIC {
    temp;
    v0;

  #L30145c.  v0:= -1640531527I;
  #L301462.  v1:= v1 * v0 @kind int;
  #L301466.  v0:= v1 ^>> 16;
  #L30146a.  v1:= v1 ^~ v0 @kind int;
  #L30146c.  return v1;
}
procedure `boolean` `a`(`io.reactivex.rxjava3.internal.util.b` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/b;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L301300.  v0:= v6.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] @kind object;
  #L301304.  v1:= v6.`io.reactivex.rxjava3.internal.util.b.b` @type ^`int`;
  #L301308.  call temp:= `hashCode`(v7) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30130e.  v2:= temp;
  #L301310.  call temp:= `c`(v2) @signature `Lio/reactivex/rxjava3/internal/util/b;.c:(I)I` @kind static;
  #L301316.  v2:= temp;
  #L301318.  v2:= v2 ^& v1 @kind int;
  #L30131a.  v3:= v0[v2] @kind object;
  #L30131e.  v4:= 1I;
  #L301320.  if v3 == 0 then goto L301350;
  #L301324.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30132a.  v3:= temp;
  #L30132c.  v5:= 0I;
  #L30132e.  if v3 == 0 then goto L301334;
  #L301332.  return v5;
  #L301334.  v2:= v2 + v4 @kind int;
  #L301336.  v2:= v2 ^& v1 @kind int;
  #L301338.  v3:= v0[v2] @kind object;
  #L30133c.  if v3 != 0 then goto L301342;
  #L301340.  goto L301350;
  #L301342.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L301348.  v3:= temp;
  #L30134a.  if v3 == 0 then goto L301334;
  #L30134e.  return v5;
  #L301350.  v0[v2]:= v7 @kind object;
  #L301354.  v7:= v6.`io.reactivex.rxjava3.internal.util.b.c` @type ^`int`;
  #L301358.  v7:= v7 + v4 @kind int;
  #L30135a.  v6.`io.reactivex.rxjava3.internal.util.b.c` @type ^`int` := v7;
  #L30135e.  v0:= v6.`io.reactivex.rxjava3.internal.util.b.d` @type ^`int`;
  #L301362.  if v7 < v0 then goto L30136c;
  #L301366.  call `d`(v6) @signature `Lio/reactivex/rxjava3/internal/util/b;.d:()V` @kind virtual;
  #L30136c.  return v4;
}
procedure `java.lang.Object`[] `b`(`io.reactivex.rxjava3.internal.util.b` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/b;.b:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L301480.  v0:= v1.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] @kind object;
  #L301484.  return v0 @kind object;
}
procedure `void` `d`(`io.reactivex.rxjava3.internal.util.b` v8 @kind this) @signature `Lio/reactivex/rxjava3/internal/util/b;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3014f8.  v0:= v8.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] @kind object;
  #L3014fc.  v1:= length @variable v0;
  #L3014fe.  v2:= v1 ^< 1;
  #L301502.  v3:= v2 + -1;
  #L301506.  v4:= new `java.lang.Object`[v2];
  #L30150a.  v5:= v8.`io.reactivex.rxjava3.internal.util.b.c` @type ^`int`;
  #L30150e.  v6:= v5 + -1;
  #L301512.  if v5 == 0 then goto L30155c;
  #L301516.  v1:= v1 + -1;
  #L30151a.  v5:= v0[v1] @kind object;
  #L30151e.  if v5 != 0 then goto L301524;
  #L301522.  goto L301516;
  #L301524.  v5:= v0[v1] @kind object;
  #L301528.  call temp:= `hashCode`(v5) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30152e.  v5:= temp;
  #L301530.  call temp:= `c`(v5) @signature `Lio/reactivex/rxjava3/internal/util/b;.c:(I)I` @kind static;
  #L301536.  v5:= temp;
  #L301538.  v5:= v5 ^& v3 @kind int;
  #L30153a.  v7:= v4[v5] @kind object;
  #L30153e.  if v7 == 0 then goto L301550;
  #L301542.  v5:= v5 + 1;
  #L301546.  v5:= v5 ^& v3 @kind int;
  #L301548.  v7:= v4[v5] @kind object;
  #L30154c.  if v7 != 0 then goto L301542;
  #L301550.  v7:= v0[v1] @kind object;
  #L301554.  v4[v5]:= v7 @kind object;
  #L301558.  v5:= v6;
  #L30155a.  goto L30150e;
  #L30155c.  v8.`io.reactivex.rxjava3.internal.util.b.b` @type ^`int` := v3;
  #L301560.  v0:= (`float`) v2 @kind i2f;
  #L301562.  v1:= v8.`io.reactivex.rxjava3.internal.util.b.a` @type ^`float`;
  #L301566.  v0:= v0 * v1 @kind float;
  #L30156a.  v0:= (`int`) v0 @kind f2i;
  #L30156c.  v8.`io.reactivex.rxjava3.internal.util.b.d` @type ^`int` := v0;
  #L301570.  v8.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] := v4 @kind object;
  #L301574.  return @kind void;
}
procedure `boolean` `e`(`io.reactivex.rxjava3.internal.util.b` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/util/b;.e:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L301380.  v0:= v5.`io.reactivex.rxjava3.internal.util.b.e` @type ^`java.lang.Object`[] @kind object;
  #L301384.  v1:= v5.`io.reactivex.rxjava3.internal.util.b.b` @type ^`int`;
  #L301388.  call temp:= `hashCode`(v6) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30138e.  v2:= temp;
  #L301390.  call temp:= `c`(v2) @signature `Lio/reactivex/rxjava3/internal/util/b;.c:(I)I` @kind static;
  #L301396.  v2:= temp;
  #L301398.  v2:= v2 ^& v1 @kind int;
  #L30139a.  v3:= v0[v2] @kind object;
  #L30139e.  v4:= 0I;
  #L3013a0.  if v3 != 0 then goto L3013a6;
  #L3013a4.  return v4;
  #L3013a6.  call temp:= `equals`(v3, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3013ac.  v3:= temp;
  #L3013ae.  if v3 == 0 then goto L3013bc;
  #L3013b2.  call temp:= `f`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/b;.f:(I[Ljava/lang/Object;I)Z` @kind virtual;
  #L3013b8.  v6:= temp;
  #L3013ba.  return v6;
  #L3013bc.  v2:= v2 + 1;
  #L3013c0.  v2:= v2 ^& v1 @kind int;
  #L3013c2.  v3:= v0[v2] @kind object;
  #L3013c6.  if v3 != 0 then goto L3013cc;
  #L3013ca.  return v4;
  #L3013cc.  call temp:= `equals`(v3, v6) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3013d2.  v3:= temp;
  #L3013d4.  if v3 == 0 then goto L3013bc;
  #L3013d8.  call temp:= `f`(v5, v2, v0, v1) @signature `Lio/reactivex/rxjava3/internal/util/b;.f:(I[Ljava/lang/Object;I)Z` @kind virtual;
  #L3013de.  v6:= temp;
  #L3013e0.  return v6;
}
procedure `boolean` `f`(`io.reactivex.rxjava3.internal.util.b` v4 @kind this, `int` v5 , `java.lang.Object`[] v6 @kind object, `int` v7 ) @signature `Lio/reactivex/rxjava3/internal/util/b;.f:(I[Ljava/lang/Object;I)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3013f4.  v0:= v4.`io.reactivex.rxjava3.internal.util.b.c` @type ^`int`;
  #L3013f8.  v1:= 1I;
  #L3013fa.  v0:= v0 - v1 @kind int;
  #L3013fc.  v4.`io.reactivex.rxjava3.internal.util.b.c` @type ^`int` := v0;
  #L301400.  v0:= v5 + 1;
  #L301404.  v0:= v0 ^& v7 @kind int;
  #L301406.  v2:= v6[v0] @kind object;
  #L30140a.  if v2 != 0 then goto L301416;
  #L30140e.  v7:= 0I;
  #L301410.  v6[v5]:= v7 @kind object;
  #L301414.  return v1;
  #L301416.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30141c.  v3:= temp;
  #L30141e.  call temp:= `c`(v3) @signature `Lio/reactivex/rxjava3/internal/util/b;.c:(I)I` @kind static;
  #L301424.  v3:= temp;
  #L301426.  v3:= v3 ^& v7 @kind int;
  #L301428.  if v5 > v0 then goto L301436;
  #L30142c.  if v5 >= v3 then goto L30143e;
  #L301430.  if v3 <= v0 then goto L301446;
  #L301434.  goto L30143e;
  #L301436.  if v5 < v3 then goto L301446;
  #L30143a.  if v3 <= v0 then goto L301446;
  #L30143e.  v6[v5]:= v2 @kind object;
  #L301442.  v5:= v0;
  #L301444.  goto L301400;
  #L301446.  v0:= v0 + 1;
  #L30144a.  goto L301404;
}
