record `io.reactivex.rxjava3.internal.schedulers.h` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicReferenceArray` @kind class, `java.lang.Runnable` @kind interface, `java.util.concurrent.Callable` @kind interface, `io.reactivex.rxjava3.disposables.c` @kind interface {
  `java.lang.Runnable` `io.reactivex.rxjava3.internal.schedulers.h.actual` @AccessFlag FINAL;
}
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.rxjava3.internal.schedulers.h.FUTURE_INDEX` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_INDEX` @AccessFlag STATIC_FINAL;
global `java.lang.Object` `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @AccessFlag STATIC_FINAL;
global `int` `@@io.reactivex.rxjava3.internal.schedulers.h.THREAD_INDEX` @AccessFlag STATIC_FINAL;
global `long` `@@io.reactivex.rxjava3.internal.schedulers.h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L300678.  v0:= new `java.lang.Object`;
  #L30067c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L300682.  `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L300686.  v0:= new `java.lang.Object`;
  #L30068a.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L300690.  `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L300694.  v0:= new `java.lang.Object`;
  #L300698.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30069e.  `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @type ^`java.lang.Object` := v0 @kind object;
  #L3006a2.  v0:= new `java.lang.Object`;
  #L3006a6.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3006ac.  `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` := v0 @kind object;
  #L3006b0.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.h` v1 @kind this, `java.lang.Runnable` v2 @kind object, `io.reactivex.rxjava3.disposables.d` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/disposables/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3006c4.  v0:= 3I;
  #L3006c6.  call `<init>`(v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.<init>:(I)V` @kind direct;
  #L3006cc.  v1.`io.reactivex.rxjava3.internal.schedulers.h.actual` @type ^`java.lang.Runnable` := v2 @kind object;
  #L3006d0.  v2:= 0I;
  #L3006d2.  call `lazySet`(v1, v2, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L3006d8.  return @kind void;
}
procedure `java.lang.Object` `call`(`io.reactivex.rxjava3.internal.schedulers.h` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30065c.  call `run`(v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.run:()V` @kind virtual;
  #L300662.  v0:= 0I;
  #L300664.  return v0 @kind object;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.schedulers.h` v7 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3006ec.  v0:= 1I;
  #L3006ee.  call temp:= `get`(v7, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3006f4.  v1:= temp @kind object;
  #L3006f6.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L3006fa.  v3:= 0I;
  #L3006fc.  if v1 == v2 then goto L30074e;
  #L300700.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L300704.  if v1 == v2 then goto L30074e;
  #L300708.  v4:= `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L30070c.  if v1 != v4 then goto L300712;
  #L300710.  goto L30074e;
  #L300712.  v5:= 2I;
  #L300714.  call temp:= `get`(v7, v5) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L30071a.  v5:= temp @kind object;
  #L30071c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L300722.  v6:= temp @kind object;
  #L300724.  if v5 == v6 then goto L30072c;
  #L300728.  v5:= 1I;
  #L30072a.  goto L30072e;
  #L30072c.  v5:= 0I;
  #L30072e.  if v5 == 0 then goto L300734;
  #L300732.  v2:= v4 @kind object;
  #L300734.  call temp:= `compareAndSet`(v7, v0, v1, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30073a.  v0:= temp;
  #L30073c.  if v0 == 0 then goto L3006ec;
  #L300740.  if v1 == 0 then goto L30074e;
  #L300744.  v1:= (`java.util.concurrent.Future`) v1 @kind object;
  #L300748.  call temp:= `cancel`(v1, v5) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L30074e.  call temp:= `get`(v7, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L300754.  v0:= temp @kind object;
  #L300756.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L30075a.  if v0 == v1 then goto L300782;
  #L30075e.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L300762.  if v0 == v1 then goto L300782;
  #L300766.  if v0 != 0 then goto L30076c;
  #L30076a.  goto L300782;
  #L30076c.  call temp:= `compareAndSet`(v7, v3, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L300772.  v1:= temp;
  #L300774.  if v1 == 0 then goto L30074e;
  #L300778.  v0:= (`io.reactivex.rxjava3.disposables.d`) v0 @kind object;
  #L30077c.  call temp:= `c`(v0, v7) @signature `Lio/reactivex/rxjava3/disposables/d;.c:(Lio/reactivex/rxjava3/disposables/c;)Z` @kind interface;
  #L300782.  return @kind void;
}
procedure `boolean` `isDisposed`(`io.reactivex.rxjava3.internal.schedulers.h` v3 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.isDisposed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30062c.  v0:= 0I;
  #L30062e.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L300634.  v1:= temp @kind object;
  #L300636.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L30063a.  if v1 == v2 then goto L300646;
  #L30063e.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L300642.  if v1 != v2 then goto L300648;
  #L300646.  v0:= 1I;
  #L300648.  return v0;
}
procedure `void` `run`(`io.reactivex.rxjava3.internal.schedulers.h` v5 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L300794.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L30079a.  v0:= temp @kind object;
  #L30079c.  v1:= 2I;
  #L30079e.  call `lazySet`(v5, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L3007a4.  v0:= 0I;
  #L3007a6.  v2:= 1I;
  #L3007a8.  v3:= 0I;
  #L3007aa.  v4:= v5.`io.reactivex.rxjava3.internal.schedulers.h.actual` @type ^`java.lang.Runnable` @kind object;
  #L3007ae.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L3007b4.  goto L3007be;
  #L3007b6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3007b8.  call `k`(v4) @signature `Lld/a;.k:(Ljava/lang/Throwable;)V` @kind static;
  #L3007be.  call `lazySet`(v5, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L3007c4.  call temp:= `get`(v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3007ca.  v0:= temp @kind object;
  #L3007cc.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L3007d0.  if v0 == v1 then goto L3007f2;
  #L3007d4.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L3007d8.  call temp:= `compareAndSet`(v5, v3, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3007de.  v1:= temp;
  #L3007e0.  if v1 == 0 then goto L3007f2;
  #L3007e4.  if v0 == 0 then goto L3007f2;
  #L3007e8.  v0:= (`io.reactivex.rxjava3.disposables.d`) v0 @kind object;
  #L3007ec.  call temp:= `c`(v0, v5) @signature `Lio/reactivex/rxjava3/disposables/d;.c:(Lio/reactivex/rxjava3/disposables/c;)Z` @kind interface;
  #L3007f2.  call temp:= `get`(v5, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3007f8.  v0:= temp @kind object;
  #L3007fa.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L3007fe.  if v0 == v1 then goto L30081a;
  #L300802.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L300806.  if v0 == v1 then goto L30081a;
  #L30080a.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L30080e.  call temp:= `compareAndSet`(v5, v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L300814.  v0:= temp;
  #L300816.  if v0 == 0 then goto L3007f2;
  #L30081a.  return @kind void;
  #L30081c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30081e.  call `lazySet`(v5, v1, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.lazySet:(ILjava/lang/Object;)V` @kind virtual;
  #L300824.  call temp:= `get`(v5, v3) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L30082a.  v0:= temp @kind object;
  #L30082c.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.PARENT_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L300830.  if v0 == v1 then goto L300852;
  #L300834.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L300838.  call temp:= `compareAndSet`(v5, v3, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L30083e.  v1:= temp;
  #L300840.  if v1 == 0 then goto L300852;
  #L300844.  if v0 == 0 then goto L300852;
  #L300848.  v0:= (`io.reactivex.rxjava3.disposables.d`) v0 @kind object;
  #L30084c.  call temp:= `c`(v0, v5) @signature `Lio/reactivex/rxjava3/disposables/d;.c:(Lio/reactivex/rxjava3/disposables/c;)Z` @kind interface;
  #L300852.  call temp:= `get`(v5, v2) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L300858.  v0:= temp @kind object;
  #L30085a.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L30085e.  if v0 == v1 then goto L30087c;
  #L300862.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L300866.  if v0 == v1 then goto L30087c;
  #L30086a.  v1:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L30086e.  call temp:= `compareAndSet`(v5, v2, v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L300874.  v0:= temp;
  #L300876.  if v0 != 0 then goto L30087c;
  #L30087a.  goto L300852;
  #L30087c.  throw v4;
  catch `java.lang.Throwable` @[L3007aa..L3007b4] goto L3007b6;
  catch `java.lang.Throwable` @[L3007b8..L3007be] goto L30081c;
}
procedure `void` `setFuture`(`io.reactivex.rxjava3.internal.schedulers.h` v3 @kind this, `java.util.concurrent.Future` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/h;.setFuture:(Ljava/util/concurrent/Future;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3008a8.  v0:= 1I;
  #L3008aa.  call temp:= `get`(v3, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3008b0.  v1:= temp @kind object;
  #L3008b2.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.DONE` @type ^`java.lang.Object` @kind object;
  #L3008b6.  if v1 != v2 then goto L3008bc;
  #L3008ba.  return @kind void;
  #L3008bc.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.SYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L3008c0.  if v1 != v2 then goto L3008ce;
  #L3008c4.  v0:= 0I;
  #L3008c6.  call temp:= `cancel`(v4, v0) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L3008cc.  return @kind void;
  #L3008ce.  v2:= `@@io.reactivex.rxjava3.internal.schedulers.h.ASYNC_DISPOSED` @type ^`java.lang.Object` @kind object;
  #L3008d2.  if v1 != v2 then goto L3008de;
  #L3008d6.  call temp:= `cancel`(v4, v0) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L3008dc.  return @kind void;
  #L3008de.  call temp:= `compareAndSet`(v3, v0, v1, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.compareAndSet:(ILjava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L3008e4.  v0:= temp;
  #L3008e6.  if v0 == 0 then goto L3008a8;
  #L3008ea.  return @kind void;
}
