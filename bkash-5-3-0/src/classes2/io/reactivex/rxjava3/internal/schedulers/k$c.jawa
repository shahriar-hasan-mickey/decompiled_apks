record `io.reactivex.rxjava3.internal.schedulers.k$c` @kind class @AccessFlag FINAL extends `fd.g$b` @kind class {
  `java.util.concurrent.PriorityBlockingQueue` `io.reactivex.rxjava3.internal.schedulers.k$c.g` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.schedulers.k$c.h` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `io.reactivex.rxjava3.internal.schedulers.k$c.i` @AccessFlag FINAL;
  `boolean` `io.reactivex.rxjava3.internal.schedulers.k$c.j` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.k$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3010c0.  call `<init>`(v1) @signature `Lfd/g$b;.<init>:()V` @kind direct;
  #L3010c6.  v0:= new `java.util.concurrent.PriorityBlockingQueue`;
  #L3010ca.  call `<init>`(v0) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.<init>:()V` @kind direct;
  #L3010d0.  v1.`io.reactivex.rxjava3.internal.schedulers.k$c.g` @type ^`java.util.concurrent.PriorityBlockingQueue` := v0 @kind object;
  #L3010d4.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L3010d8.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L3010de.  v1.`io.reactivex.rxjava3.internal.schedulers.k$c.h` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L3010e2.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L3010e6.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:()V` @kind direct;
  #L3010ec.  v1.`io.reactivex.rxjava3.internal.schedulers.k$c.i` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L3010f0.  return @kind void;
}
procedure `io.reactivex.rxjava3.disposables.c` `b`(`io.reactivex.rxjava3.internal.schedulers.k$c` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.b:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30105c.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L301060.  call temp:= `a`(v2, v0) @signature `Lfd/g$b;.a:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L301066.  v0:= temp @kind wide;
  #L301068.  call temp:= `d`(v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.d:(Ljava/lang/Runnable;J)Lio/reactivex/rxjava3/disposables/c;` @kind virtual;
  #L30106e.  v3:= temp @kind object;
  #L301070.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.c` `c`(`io.reactivex.rxjava3.internal.schedulers.k$c` v2 @kind this, `java.lang.Runnable` v3 @kind object, `long` v4 , `java.util.concurrent.TimeUnit` v6 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L301084.  v0:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L301088.  call temp:= `a`(v2, v0) @signature `Lfd/g$b;.a:(Ljava/util/concurrent/TimeUnit;)J` @kind virtual;
  #L30108e.  v0:= temp @kind wide;
  #L301090.  call temp:= `toMillis`(v6, v4) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L301096.  v4:= temp @kind wide;
  #L301098.  v0:= v0 + v4 @kind long;
  #L30109a.  v4:= new `io.reactivex.rxjava3.internal.schedulers.k$a`;
  #L30109e.  call `<init>`(v4, v3, v2, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$a;.<init>:(Ljava/lang/Runnable;Lio/reactivex/rxjava3/internal/schedulers/k$c;J)V` @kind direct;
  #L3010a4.  call temp:= `d`(v2, v4, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.d:(Ljava/lang/Runnable;J)Lio/reactivex/rxjava3/disposables/c;` @kind virtual;
  #L3010aa.  v3:= temp @kind object;
  #L3010ac.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.c` `d`(`io.reactivex.rxjava3.internal.schedulers.k$c` v1 @kind this, `java.lang.Runnable` v2 @kind object, `long` v3 ) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.d:(Ljava/lang/Runnable;J)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag  {
    temp;
    v0;

  #L300f98.  v0:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.j` @type ^`boolean` @kind boolean;
  #L300f9c.  if v0 == 0 then goto L300fa6;
  #L300fa0.  v2:= `@@hd.b.INSTANCE` @type ^`hd.b` @kind object;
  #L300fa4.  return v2 @kind object;
  #L300fa6.  v0:= new `io.reactivex.rxjava3.internal.schedulers.k$b`;
  #L300faa.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L300fb0.  v3:= temp @kind object;
  #L300fb2.  v4:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.i` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L300fb6.  call temp:= `incrementAndGet`(v4) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L300fbc.  v4:= temp;
  #L300fbe.  call `<init>`(v0, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$b;.<init>:(Ljava/lang/Runnable;Ljava/lang/Long;I)V` @kind direct;
  #L300fc4.  v2:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.g` @type ^`java.util.concurrent.PriorityBlockingQueue` @kind object;
  #L300fc8.  call temp:= `add`(v2, v0) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L300fce.  v2:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.h` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L300fd2.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L300fd8.  v2:= temp;
  #L300fda.  if v2 != 0 then goto L301038;
  #L300fde.  v2:= 1I;
  #L300fe0.  v3:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.j` @type ^`boolean` @kind boolean;
  #L300fe4.  if v3 == 0 then goto L300ff8;
  #L300fe8.  v2:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.g` @type ^`java.util.concurrent.PriorityBlockingQueue` @kind object;
  #L300fec.  call `clear`(v2) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.clear:()V` @kind virtual;
  #L300ff2.  v2:= `@@hd.b.INSTANCE` @type ^`hd.b` @kind object;
  #L300ff6.  return v2 @kind object;
  #L300ff8.  v3:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.g` @type ^`java.util.concurrent.PriorityBlockingQueue` @kind object;
  #L300ffc.  call temp:= `poll`(v3) @signature `Ljava/util/concurrent/PriorityBlockingQueue;.poll:()Ljava/lang/Object;` @kind virtual;
  #L301002.  v3:= temp @kind object;
  #L301004.  v3:= (`io.reactivex.rxjava3.internal.schedulers.k$b`) v3 @kind object;
  #L301008.  if v3 != 0 then goto L301024;
  #L30100c.  v3:= v1.`io.reactivex.rxjava3.internal.schedulers.k$c.h` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L301010.  v2:= -v2 @kind int;
  #L301012.  call temp:= `addAndGet`(v3, v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.addAndGet:(I)I` @kind virtual;
  #L301018.  v2:= temp;
  #L30101a.  if v2 != 0 then goto L300fe0;
  #L30101e.  v2:= `@@hd.b.INSTANCE` @type ^`hd.b` @kind object;
  #L301022.  return v2 @kind object;
  #L301024.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.k$b.j` @type ^`boolean` @kind boolean;
  #L301028.  if v4 != 0 then goto L300fe0;
  #L30102c.  v3:= v3.`io.reactivex.rxjava3.internal.schedulers.k$b.g` @type ^`java.lang.Runnable` @kind object;
  #L301030.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L301036.  goto L300fe0;
  #L301038.  v2:= new `io.reactivex.rxjava3.internal.schedulers.k$c$a`;
  #L30103c.  call `<init>`(v2, v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c$a;.<init>:(Lio/reactivex/rxjava3/internal/schedulers/k$c;Lio/reactivex/rxjava3/internal/schedulers/k$b;)V` @kind direct;
  #L301042.  call temp:= `b`(v2) @signature `Lio/reactivex/rxjava3/disposables/b;.b:(Ljava/lang/Runnable;)Lio/reactivex/rxjava3/disposables/c;` @kind static;
  #L301048.  v2:= temp @kind object;
  #L30104a.  return v2 @kind object;
}
procedure `void` `dispose`(`io.reactivex.rxjava3.internal.schedulers.k$c` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/k$c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L301104.  v0:= 1I;
  #L301106.  v1.`io.reactivex.rxjava3.internal.schedulers.k$c.j` @type ^`boolean` := v0 @kind boolean;
  #L30110a.  return @kind void;
}
