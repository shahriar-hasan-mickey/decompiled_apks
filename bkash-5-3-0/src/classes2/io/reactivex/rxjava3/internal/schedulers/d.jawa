record `io.reactivex.rxjava3.internal.schedulers.d` @kind class @AccessFlag PUBLIC_FINAL extends `fd.g` @kind class {
  `java.util.concurrent.ThreadFactory` `io.reactivex.rxjava3.internal.schedulers.d.a` @AccessFlag FINAL;
}
global `io.reactivex.rxjava3.internal.schedulers.f` `@@io.reactivex.rxjava3.internal.schedulers.d.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L30020c.  v0:= "rx3.newthread-priority" @kind object;
  #L300210.  v1:= 5I;
  #L300212.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L300218.  v0:= temp @kind object;
  #L30021a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L300220.  v0:= temp;
  #L300222.  v1:= 10I;
  #L300226.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L30022c.  v0:= temp;
  #L30022e.  v1:= 1I;
  #L300230.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L300236.  v0:= temp;
  #L300238.  v1:= new `io.reactivex.rxjava3.internal.schedulers.f`;
  #L30023c.  v2:= "RxNewThreadScheduler" @kind object;
  #L300240.  call `<init>`(v1, v2, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L300246.  `@@io.reactivex.rxjava3.internal.schedulers.d.b` @type ^`io.reactivex.rxjava3.internal.schedulers.f` := v1 @kind object;
  #L30024a.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.d` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30025c.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.d.b` @type ^`io.reactivex.rxjava3.internal.schedulers.f` @kind object;
  #L300260.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/d;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L300266.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.d` v0 @kind this, `java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/d;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L300278.  call `<init>`(v0) @signature `Lfd/g;.<init>:()V` @kind direct;
  #L30027e.  v0.`io.reactivex.rxjava3.internal.schedulers.d.a` @type ^`java.util.concurrent.ThreadFactory` := v1 @kind object;
  #L300282.  return @kind void;
}
procedure `fd.g$b` `a`(`io.reactivex.rxjava3.internal.schedulers.d` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/d;.a:()Lfd/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3001ec.  v0:= new `io.reactivex.rxjava3.internal.schedulers.e`;
  #L3001f0.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.d.a` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L3001f4.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/e;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L3001fa.  return v0 @kind object;
}
