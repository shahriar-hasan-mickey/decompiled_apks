record `io.reactivex.rxjava3.internal.schedulers.i` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@io.reactivex.rxjava3.internal.schedulers.i.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@io.reactivex.rxjava3.internal.schedulers.i.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.atomic.AtomicReference` `@@io.reactivex.rxjava3.internal.schedulers.i.c` @AccessFlag STATIC_FINAL;
global `java.util.Map` `@@io.reactivex.rxjava3.internal.schedulers.i.d` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L300a8c.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L300a90.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L300a96.  `@@io.reactivex.rxjava3.internal.schedulers.i.c` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L300a9a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L300a9e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L300aa4.  `@@io.reactivex.rxjava3.internal.schedulers.i.d` @type ^`java.util.Map` := v0 @kind object;
  #L300aa8.  v0:= new `io.reactivex.rxjava3.internal.schedulers.i$b`;
  #L300aac.  call `<init>`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/i$b;.<init>:()V` @kind direct;
  #L300ab2.  v1:= 1I;
  #L300ab4.  v2:= "rx3.purge-enabled" @kind object;
  #L300ab8.  call temp:= `b`(v1, v2, v1, v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.b:(ZLjava/lang/String;ZZLgd/d;)Z` @kind static;
  #L300abe.  v2:= temp;
  #L300ac0.  `@@io.reactivex.rxjava3.internal.schedulers.i.a` @type ^`boolean` := v2 @kind boolean;
  #L300ac4.  v3:= "rx3.purge-period-seconds" @kind object;
  #L300ac8.  call temp:= `c`(v2, v3, v1, v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.c:(ZLjava/lang/String;IILgd/d;)I` @kind static;
  #L300ace.  v0:= temp;
  #L300ad0.  `@@io.reactivex.rxjava3.internal.schedulers.i.b` @type ^`int` := v0;
  #L300ad4.  call `d`() @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.d:()V` @kind static;
  #L300ada.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `a`(`java.util.concurrent.ThreadFactory` v1 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.a:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L300a64.  v0:= 1I;
  #L300a66.  call temp:= `newScheduledThreadPool`(v0, v1) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L300a6c.  v1:= temp @kind object;
  #L300a6e.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.i.a` @type ^`boolean` @kind boolean;
  #L300a72.  call `e`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.e:(ZLjava/util/concurrent/ScheduledExecutorService;)V` @kind static;
  #L300a78.  return v1 @kind object;
}
procedure `boolean` `b`(`boolean` v0 , `java.lang.String` v1 @kind object, `boolean` v2 , `boolean` v3 , `gd.d` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.b:(ZLjava/lang/String;ZZLgd/d;)Z` @AccessFlag STATIC {
    temp;

  #L3009d0.  if v0 == 0 then goto L3009fe;
  #L3009d4.  call temp:= `apply`(v4, v1) @signature `Lgd/d;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3009da.  v0:= temp @kind object;
  #L3009dc.  v0:= (`java.lang.String`) v0 @kind object;
  #L3009e0.  if v0 != 0 then goto L3009e6;
  #L3009e4.  return v2;
  #L3009e6.  v1:= "true" @kind object;
  #L3009ea.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3009f0.  v0:= temp;
  #L3009f2.  return v0;
  #L3009f4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3009f6.  call `b`(v0) @signature `Lio/reactivex/rxjava3/exceptions/b;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L3009fc.  return v2;
  #L3009fe.  return v3;
  catch `java.lang.Throwable` @[L3009d4..L3009f2] goto L3009f4;
}
procedure `int` `c`(`boolean` v0 , `java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `gd.d` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.c:(ZLjava/lang/String;IILgd/d;)I` @AccessFlag STATIC {
    temp;

  #L300a1c.  if v0 == 0 then goto L300a46;
  #L300a20.  call temp:= `apply`(v4, v1) @signature `Lgd/d;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L300a26.  v0:= temp @kind object;
  #L300a28.  v0:= (`java.lang.String`) v0 @kind object;
  #L300a2c.  if v0 != 0 then goto L300a32;
  #L300a30.  return v2;
  #L300a32.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L300a38.  v0:= temp;
  #L300a3a.  return v0;
  #L300a3c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L300a3e.  call `b`(v0) @signature `Lio/reactivex/rxjava3/exceptions/b;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L300a44.  return v2;
  #L300a46.  return v3;
  catch `java.lang.Throwable` @[L300a20..L300a3a] goto L300a3c;
}
procedure `void` `d`() @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.d:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L300aec.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.i.a` @type ^`boolean` @kind boolean;
  #L300af0.  call `f`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.f:(Z)V` @kind static;
  #L300af6.  return @kind void;
}
procedure `void` `e`(`boolean` v1 , `java.util.concurrent.ScheduledExecutorService` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.e:(ZLjava/util/concurrent/ScheduledExecutorService;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L300b08.  if v1 == 0 then goto L300b24;
  #L300b0c.  v1:= instanceof @variable v2 @type ^`java.util.concurrent.ScheduledThreadPoolExecutor` @kind boolean;
  #L300b10.  if v1 == 0 then goto L300b24;
  #L300b14.  v1:= v2 @kind object;
  #L300b16.  v1:= (`java.util.concurrent.ScheduledThreadPoolExecutor`) v1 @kind object;
  #L300b1a.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.i.d` @type ^`java.util.Map` @kind object;
  #L300b1e.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L300b24.  return @kind void;
}
procedure `void` `f`(`boolean` v11 ) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.f:(Z)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L300b38.  if v11 == 0 then goto L300b9c;
  #L300b3c.  v11:= `@@io.reactivex.rxjava3.internal.schedulers.i.c` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L300b40.  call temp:= `get`(v11) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L300b46.  v0:= temp @kind object;
  #L300b48.  v0:= (`java.util.concurrent.ScheduledExecutorService`) v0 @kind object;
  #L300b4c.  if v0 == 0 then goto L300b52;
  #L300b50.  return @kind void;
  #L300b52.  v1:= 1I;
  #L300b54.  v2:= new `io.reactivex.rxjava3.internal.schedulers.f`;
  #L300b58.  v3:= "RxSchedulerPurge" @kind object;
  #L300b5c.  call `<init>`(v2, v3) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L300b62.  call temp:= `newScheduledThreadPool`(v1, v2) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(ILjava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L300b68.  v4:= temp @kind object;
  #L300b6a.  call temp:= `compareAndSet`(v11, v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.compareAndSet:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L300b70.  v11:= temp;
  #L300b72.  if v11 == 0 then goto L300b94;
  #L300b76.  v5:= new `io.reactivex.rxjava3.internal.schedulers.i$a`;
  #L300b7a.  call `<init>`(v5) @signature `Lio/reactivex/rxjava3/internal/schedulers/i$a;.<init>:()V` @kind direct;
  #L300b80.  v11:= `@@io.reactivex.rxjava3.internal.schedulers.i.b` @type ^`int`;
  #L300b84.  v6:= (`long`) v11 @kind i2l;
  #L300b86.  v8:= (`long`) v11 @kind i2l;
  #L300b88.  v10:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L300b8c.  call temp:= `scheduleAtFixedRate`(v4, v5, v6, v8, v10) @signature `Ljava/util/concurrent/ScheduledExecutorService;.scheduleAtFixedRate:(Ljava/lang/Runnable;JJLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L300b92.  return @kind void;
  #L300b94.  call temp:= `shutdownNow`(v4) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L300b9a.  goto L300b3c;
  #L300b9c.  return @kind void;
}
