record `io.reactivex.rxjava3.internal.schedulers.f` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.concurrent.atomic.AtomicLong` @kind class, `java.util.concurrent.ThreadFactory` @kind interface {
  `boolean` `io.reactivex.rxjava3.internal.schedulers.f.nonBlocking` @AccessFlag FINAL;
  `java.lang.String` `io.reactivex.rxjava3.internal.schedulers.f.prefix` @AccessFlag FINAL;
  `int` `io.reactivex.rxjava3.internal.schedulers.f.priority` @AccessFlag FINAL;
}
global `long` `@@io.reactivex.rxjava3.internal.schedulers.f.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.f` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L300528.  v0:= 5I;
  #L30052a.  v1:= 0I;
  #L30052c.  call `<init>`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L300532.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.f` v1 @kind this, `java.lang.String` v2 @kind object, `int` v3 ) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L300544.  v0:= 0I;
  #L300546.  call `<init>`(v1, v2, v3, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L30054c.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.f` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L300560.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L300566.  v0.`io.reactivex.rxjava3.internal.schedulers.f.prefix` @type ^`java.lang.String` := v1 @kind object;
  #L30056a.  v0.`io.reactivex.rxjava3.internal.schedulers.f.priority` @type ^`int` := v2;
  #L30056e.  v0.`io.reactivex.rxjava3.internal.schedulers.f.nonBlocking` @type ^`boolean` := v3 @kind boolean;
  #L300572.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`io.reactivex.rxjava3.internal.schedulers.f` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3004b8.  v0:= new `java.lang.StringBuilder`;
  #L3004bc.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.f.prefix` @type ^`java.lang.String` @kind object;
  #L3004c0.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3004c6.  v1:= 45I;
  #L3004ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3004d0.  call temp:= `incrementAndGet`(v3) @signature `Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J` @kind virtual;
  #L3004d6.  v1:= temp @kind wide;
  #L3004d8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3004de.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3004e4.  v0:= temp @kind object;
  #L3004e6.  v1:= v3.`io.reactivex.rxjava3.internal.schedulers.f.nonBlocking` @type ^`boolean` @kind boolean;
  #L3004ea.  if v1 == 0 then goto L3004fa;
  #L3004ee.  v1:= new `io.reactivex.rxjava3.internal.schedulers.f$a`;
  #L3004f2.  call `<init>`(v1, v4, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/f$a;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L3004f8.  goto L300504;
  #L3004fa.  v1:= new `java.lang.Thread`;
  #L3004fe.  call `<init>`(v1, v4, v0) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L300504.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.f.priority` @type ^`int`;
  #L300508.  call `setPriority`(v1, v4) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L30050e.  v4:= 1I;
  #L300510.  call `setDaemon`(v1, v4) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L300516.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`io.reactivex.rxjava3.internal.schedulers.f` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L300474.  v0:= new `java.lang.StringBuilder`;
  #L300478.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30047e.  v1:= "RxThreadFactory[" @kind object;
  #L300482.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300488.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.f.prefix` @type ^`java.lang.String` @kind object;
  #L30048c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L300492.  v1:= "]" @kind object;
  #L300496.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30049c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3004a2.  v0:= temp @kind object;
  #L3004a4.  return v0 @kind object;
}
