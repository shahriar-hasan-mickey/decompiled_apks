record `io.reactivex.rxjava3.internal.schedulers.j` @kind class @AccessFlag PUBLIC_FINAL extends `fd.g` @kind class {
  `java.util.concurrent.atomic.AtomicReference` `io.reactivex.rxjava3.internal.schedulers.j.a` @AccessFlag FINAL;
}
global `io.reactivex.rxjava3.internal.schedulers.f` `@@io.reactivex.rxjava3.internal.schedulers.j.b` @AccessFlag STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@io.reactivex.rxjava3.internal.schedulers.j.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L300d68.  v0:= 0I;
  #L300d6a.  call temp:= `newScheduledThreadPool`(v0) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L300d70.  v0:= temp @kind object;
  #L300d72.  `@@io.reactivex.rxjava3.internal.schedulers.j.c` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L300d76.  call `shutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdown:()V` @kind interface;
  #L300d7c.  v0:= "rx3.single-priority" @kind object;
  #L300d80.  v1:= 5I;
  #L300d82.  call temp:= `getInteger`(v0, v1) @signature `Ljava/lang/Integer;.getInteger:(Ljava/lang/String;I)Ljava/lang/Integer;` @kind static;
  #L300d88.  v0:= temp @kind object;
  #L300d8a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L300d90.  v0:= temp;
  #L300d92.  v1:= 10I;
  #L300d96.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L300d9c.  v0:= temp;
  #L300d9e.  v1:= 1I;
  #L300da0.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L300da6.  v0:= temp;
  #L300da8.  v2:= new `io.reactivex.rxjava3.internal.schedulers.f`;
  #L300dac.  v3:= "RxSingleScheduler" @kind object;
  #L300db0.  call `<init>`(v2, v3, v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/f;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L300db6.  `@@io.reactivex.rxjava3.internal.schedulers.j.b` @type ^`io.reactivex.rxjava3.internal.schedulers.f` := v2 @kind object;
  #L300dba.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.j` v1 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L300dcc.  v0:= `@@io.reactivex.rxjava3.internal.schedulers.j.b` @type ^`io.reactivex.rxjava3.internal.schedulers.f` @kind object;
  #L300dd0.  call `<init>`(v1, v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @kind direct;
  #L300dd6.  return @kind void;
}
procedure `void` `<init>`(`io.reactivex.rxjava3.internal.schedulers.j` v1 @kind this, `java.util.concurrent.ThreadFactory` v2 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.<init>:(Ljava/util/concurrent/ThreadFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L300de8.  call `<init>`(v1) @signature `Lfd/g;.<init>:()V` @kind direct;
  #L300dee.  v0:= new `java.util.concurrent.atomic.AtomicReference`;
  #L300df2.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicReference;.<init>:()V` @kind direct;
  #L300df8.  v1.`io.reactivex.rxjava3.internal.schedulers.j.a` @type ^`java.util.concurrent.atomic.AtomicReference` := v0 @kind object;
  #L300dfc.  call temp:= `d`(v2) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.d:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L300e02.  v2:= temp @kind object;
  #L300e04.  call `lazySet`(v0, v2) @signature `Ljava/util/concurrent/atomic/AtomicReference;.lazySet:(Ljava/lang/Object;)V` @kind virtual;
  #L300e0a.  return @kind void;
}
procedure `java.util.concurrent.ScheduledExecutorService` `d`(`java.util.concurrent.ThreadFactory` v0 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.d:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @AccessFlag STATIC {
    temp;

  #L300d4c.  call temp:= `a`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/i;.a:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L300d52.  v0:= temp @kind object;
  #L300d54.  return v0 @kind object;
}
procedure `fd.g$b` `a`(`io.reactivex.rxjava3.internal.schedulers.j` v2 @kind this) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.a:()Lfd/g$b;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L300c98.  v0:= new `io.reactivex.rxjava3.internal.schedulers.j$a`;
  #L300c9c.  v1:= v2.`io.reactivex.rxjava3.internal.schedulers.j.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L300ca0.  call temp:= `get`(v1) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L300ca6.  v1:= temp @kind object;
  #L300ca8.  v1:= (`java.util.concurrent.ScheduledExecutorService`) v1 @kind object;
  #L300cac.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/schedulers/j$a;.<init>:(Ljava/util/concurrent/ScheduledExecutorService;)V` @kind direct;
  #L300cb2.  return v0 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.c` `c`(`io.reactivex.rxjava3.internal.schedulers.j` v3 @kind this, `java.lang.Runnable` v4 @kind object, `long` v5 , `java.util.concurrent.TimeUnit` v7 @kind object) @signature `Lio/reactivex/rxjava3/internal/schedulers/j;.c:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L300cc4.  v0:= new `io.reactivex.rxjava3.internal.schedulers.g`;
  #L300cc8.  call temp:= `m`(v4) @signature `Lld/a;.m:(Ljava/lang/Runnable;)Ljava/lang/Runnable;` @kind static;
  #L300cce.  v4:= temp @kind object;
  #L300cd0.  call `<init>`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/g;.<init>:(Ljava/lang/Runnable;)V` @kind direct;
  #L300cd6.  v1:= 0L;
  #L300cda.  v4:= lcmp(v5, v1);
  #L300cde.  if v4 > 0 then goto L300cfc;
  #L300ce2.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.j.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L300ce6.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L300cec.  v4:= temp @kind object;
  #L300cee.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L300cf2.  call temp:= `submit`(v4, v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.submit:(Ljava/util/concurrent/Callable;)Ljava/util/concurrent/Future;` @kind interface;
  #L300cf8.  v4:= temp @kind object;
  #L300cfa.  goto L300d14;
  #L300cfc.  v4:= v3.`io.reactivex.rxjava3.internal.schedulers.j.a` @type ^`java.util.concurrent.atomic.AtomicReference` @kind object;
  #L300d00.  call temp:= `get`(v4) @signature `Ljava/util/concurrent/atomic/AtomicReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L300d06.  v4:= temp @kind object;
  #L300d08.  v4:= (`java.util.concurrent.ScheduledExecutorService`) v4 @kind object;
  #L300d0c.  call temp:= `schedule`(v4, v0, v5, v7) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/util/concurrent/Callable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L300d12.  v4:= temp @kind object;
  #L300d14.  call `setFuture`(v0, v4) @signature `Lio/reactivex/rxjava3/internal/schedulers/a;.setFuture:(Ljava/util/concurrent/Future;)V` @kind virtual;
  #L300d1a.  return v0 @kind object;
  #L300d1c.  v4:= Exception @type ^`java.util.concurrent.RejectedExecutionException` @kind object;
  #L300d1e.  call `k`(v4) @signature `Lld/a;.k:(Ljava/lang/Throwable;)V` @kind static;
  #L300d24.  v4:= `@@hd.b.INSTANCE` @type ^`hd.b` @kind object;
  #L300d28.  return v4 @kind object;
  catch `java.util.concurrent.RejectedExecutionException` @[L300ce2..L300d1a] goto L300d1c;
}
