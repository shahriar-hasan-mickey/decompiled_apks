record `oa.h` @kind class @AccessFlag PUBLIC {
  `long` `oa.h.a` @AccessFlag PRIVATE_FINAL;
  `int` `oa.h.b` @AccessFlag PRIVATE_FINAL;
  `float` `oa.h.c` @AccessFlag PRIVATE_FINAL;
  `long` `oa.h.d` @AccessFlag PRIVATE_FINAL;
  `long` `oa.h.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`oa.h` v2 @kind this, `oa.h$b` v3 @kind object) @signature `Loa/h;.<init>:(Loa/h$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L325904.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L32590a.  call temp:= `a`(v3) @signature `Loa/h$b;.a:(Loa/h$b;)J` @kind static;
  #L325910.  v0:= temp @kind wide;
  #L325912.  v2.`oa.h.a` @type ^`long` := v0 @kind wide;
  #L325916.  call temp:= `b`(v3) @signature `Loa/h$b;.b:(Loa/h$b;)I` @kind static;
  #L32591c.  v0:= temp;
  #L32591e.  v2.`oa.h.b` @type ^`int` := v0;
  #L325922.  call temp:= `c`(v3) @signature `Loa/h$b;.c:(Loa/h$b;)F` @kind static;
  #L325928.  v0:= temp;
  #L32592a.  v2.`oa.h.c` @type ^`float` := v0;
  #L32592e.  call temp:= `d`(v3) @signature `Loa/h$b;.d:(Loa/h$b;)J` @kind static;
  #L325934.  v0:= temp @kind wide;
  #L325936.  v2.`oa.h.d` @type ^`long` := v0 @kind wide;
  #L32593a.  call temp:= `e`(v3) @signature `Loa/h$b;.e:(Loa/h$b;)J` @kind static;
  #L325940.  v0:= temp @kind wide;
  #L325942.  v2.`oa.h.e` @type ^`long` := v0 @kind wide;
  #L325946.  return @kind void;
}
procedure `void` `<init>`(`oa.h` v0 @kind this, `oa.h$b` v1 @kind object, `oa.h$a` v2 @kind object) @signature `Loa/h;.<init>:(Loa/h$b;Loa/h$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L325958.  call `<init>`(v0, v1) @signature `Loa/h;.<init>:(Loa/h$b;)V` @kind direct;
  #L32595e.  return @kind void;
}
procedure `float` `a`(`oa.h` v1 @kind this) @signature `Loa/h;.a:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L325818.  v0:= v1.`oa.h.c` @type ^`float`;
  #L32581c.  return v0;
}
procedure `long` `b`(`oa.h` v2 @kind this) @signature `Loa/h;.b:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3258bc.  v0:= v2.`oa.h.e` @type ^`long` @kind wide;
  #L3258c0.  return v0 @kind wide;
}
procedure `long` `c`(`oa.h` v2 @kind this) @signature `Loa/h;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3258d4.  v0:= v2.`oa.h.a` @type ^`long` @kind wide;
  #L3258d8.  return v0 @kind wide;
}
procedure `long` `d`(`oa.h` v2 @kind this) @signature `Loa/h;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3258ec.  v0:= v2.`oa.h.d` @type ^`long` @kind wide;
  #L3258f0.  return v0 @kind wide;
}
procedure `int` `e`(`oa.h` v1 @kind this) @signature `Loa/h;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L325830.  v0:= v1.`oa.h.b` @type ^`int`;
  #L325834.  return v0;
}
procedure `boolean` `equals`(`oa.h` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Loa/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L325784.  v0:= 1I;
  #L325786.  if v7 != v8 then goto L32578c;
  #L32578a.  return v0;
  #L32578c.  v1:= 0I;
  #L32578e.  if v8 == 0 then goto L325806;
  #L325792.  v2:= constclass @type ^`oa.h` @kind object;
  #L325796.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L32579c.  v3:= temp @kind object;
  #L32579e.  if v2 == v3 then goto L3257a4;
  #L3257a2.  goto L325806;
  #L3257a4.  v8:= (`oa.h`) v8 @kind object;
  #L3257a8.  v2:= v7.`oa.h.a` @type ^`long` @kind wide;
  #L3257ac.  v4:= v8.`oa.h.a` @type ^`long` @kind wide;
  #L3257b0.  v6:= lcmp(v2, v4);
  #L3257b4.  if v6 == 0 then goto L3257ba;
  #L3257b8.  return v1;
  #L3257ba.  v2:= v7.`oa.h.b` @type ^`int`;
  #L3257be.  v3:= v8.`oa.h.b` @type ^`int`;
  #L3257c2.  if v2 == v3 then goto L3257c8;
  #L3257c6.  return v1;
  #L3257c8.  v2:= v8.`oa.h.c` @type ^`float`;
  #L3257cc.  v3:= v7.`oa.h.c` @type ^`float`;
  #L3257d0.  call temp:= `compare`(v2, v3) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L3257d6.  v2:= temp;
  #L3257d8.  if v2 == 0 then goto L3257de;
  #L3257dc.  return v1;
  #L3257de.  v2:= v7.`oa.h.d` @type ^`long` @kind wide;
  #L3257e2.  v4:= v8.`oa.h.d` @type ^`long` @kind wide;
  #L3257e6.  v6:= lcmp(v2, v4);
  #L3257ea.  if v6 == 0 then goto L3257f0;
  #L3257ee.  return v1;
  #L3257f0.  v2:= v7.`oa.h.e` @type ^`long` @kind wide;
  #L3257f4.  v4:= v8.`oa.h.e` @type ^`long` @kind wide;
  #L3257f8.  v8:= lcmp(v2, v4);
  #L3257fc.  if v8 != 0 then goto L325802;
  #L325800.  goto L325804;
  #L325802.  v0:= 0I;
  #L325804.  return v0;
  #L325806.  return v1;
}
procedure `int` `hashCode`(`oa.h` v7 @kind this) @signature `Loa/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L325848.  v0:= v7.`oa.h.a` @type ^`long` @kind wide;
  #L32584c.  v2:= 32I;
  #L325850.  v3:= v0 ^>> v2 @kind long;
  #L325854.  v0:= v0 ^~ v3 @kind long;
  #L325856.  v1:= (`int`) v0 @kind l2i;
  #L325858.  v1:= v1 * 31;
  #L32585c.  v0:= v7.`oa.h.b` @type ^`int`;
  #L325860.  v1:= v1 + v0 @kind int;
  #L325862.  v1:= v1 * 31;
  #L325866.  v0:= v7.`oa.h.c` @type ^`float`;
  #L32586a.  v3:= 0I;
  #L32586c.  v3:= fcmpl(v0, v3);
  #L325870.  if v3 == 0 then goto L32587e;
  #L325874.  call temp:= `floatToIntBits`(v0) @signature `Ljava/lang/Float;.floatToIntBits:(F)I` @kind static;
  #L32587a.  v0:= temp;
  #L32587c.  goto L325880;
  #L32587e.  v0:= 0I;
  #L325880.  v1:= v1 + v0 @kind int;
  #L325882.  v1:= v1 * 31;
  #L325886.  v3:= v7.`oa.h.d` @type ^`long` @kind wide;
  #L32588a.  v5:= v3 ^>> v2 @kind long;
  #L32588e.  v3:= v3 ^~ v5 @kind long;
  #L325890.  v0:= (`int`) v3 @kind l2i;
  #L325892.  v1:= v1 + v0 @kind int;
  #L325894.  v1:= v1 * 31;
  #L325898.  v3:= v7.`oa.h.e` @type ^`long` @kind wide;
  #L32589c.  v5:= v3 ^>> v2 @kind long;
  #L3258a0.  v2:= v3 ^~ v5 @kind long;
  #L3258a4.  v0:= (`int`) v2 @kind l2i;
  #L3258a6.  v1:= v1 + v0 @kind int;
  #L3258a8.  return v1;
}
