record `d9.d` @kind class @AccessFlag PUBLIC_FINAL extends `c9.b` @kind interface {
  `java.util.Map` `d9.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `d9.d.b` @AccessFlag PRIVATE_FINAL;
  `b9.d` `d9.d.c` @AccessFlag PRIVATE;
  `boolean` `d9.d.d` @AccessFlag PRIVATE;
}
global `b9.d` `@@d9.d.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `b9.f` `@@d9.d.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `b9.f` `@@d9.d.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `d9.d$b` `@@d9.d.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld9/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a7e98.  v0:= `@@d9.a.a` @type ^`d9.a` @kind object;
  #L2a7e9c.  `@@d9.d.e` @type ^`b9.d` := v0 @kind object;
  #L2a7ea0.  v0:= `@@d9.c.a` @type ^`d9.c` @kind object;
  #L2a7ea4.  `@@d9.d.f` @type ^`b9.f` := v0 @kind object;
  #L2a7ea8.  v0:= `@@d9.b.a` @type ^`d9.b` @kind object;
  #L2a7eac.  `@@d9.d.g` @type ^`b9.f` := v0 @kind object;
  #L2a7eb0.  v0:= new `d9.d$b`;
  #L2a7eb4.  v1:= 0I;
  #L2a7eb6.  call `<init>`(v0, v1) @signature `Ld9/d$b;.<init>:(Ld9/d$a;)V` @kind direct;
  #L2a7ebc.  `@@d9.d.h` @type ^`d9.d$b` := v0 @kind object;
  #L2a7ec0.  return @kind void;
}
procedure `void` `<init>`(`d9.d` v2 @kind this) @signature `Ld9/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a7ed4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a7eda.  v0:= new `java.util.HashMap`;
  #L2a7ede.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2a7ee4.  v2.`d9.d.a` @type ^`java.util.Map` := v0 @kind object;
  #L2a7ee8.  v0:= new `java.util.HashMap`;
  #L2a7eec.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2a7ef2.  v2.`d9.d.b` @type ^`java.util.Map` := v0 @kind object;
  #L2a7ef6.  v0:= `@@d9.d.e` @type ^`b9.d` @kind object;
  #L2a7efa.  v2.`d9.d.c` @type ^`b9.d` := v0 @kind object;
  #L2a7efe.  v0:= 0I;
  #L2a7f00.  v2.`d9.d.d` @type ^`boolean` := v0 @kind boolean;
  #L2a7f04.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L2a7f08.  v1:= `@@d9.d.f` @type ^`b9.f` @kind object;
  #L2a7f0c.  call temp:= `p`(v2, v0, v1) @signature `Ld9/d;.p:(Ljava/lang/Class;Lb9/f;)Ld9/d;` @kind virtual;
  #L2a7f12.  v0:= constclass @type ^`java.lang.Boolean` @kind object;
  #L2a7f16.  v1:= `@@d9.d.g` @type ^`b9.f` @kind object;
  #L2a7f1a.  call temp:= `p`(v2, v0, v1) @signature `Ld9/d;.p:(Ljava/lang/Class;Lb9/f;)Ld9/d;` @kind virtual;
  #L2a7f20.  v0:= constclass @type ^`java.util.Date` @kind object;
  #L2a7f24.  v1:= `@@d9.d.h` @type ^`d9.d$b` @kind object;
  #L2a7f28.  call temp:= `p`(v2, v0, v1) @signature `Ld9/d;.p:(Ljava/lang/Class;Lb9/f;)Ld9/d;` @kind virtual;
  #L2a7f2e.  return @kind void;
}
procedure `void` `b`(`java.lang.Object` v0 @kind object, `b9.e` v1 @kind object) @signature `Ld9/d;.b:(Ljava/lang/Object;Lb9/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2a7e50.  call `l`(v0, v1) @signature `Ld9/d;.l:(Ljava/lang/Object;Lb9/e;)V` @kind static;
  #L2a7e56.  return @kind void;
}
procedure `void` `c`(`java.lang.String` v0 @kind object, `b9.g` v1 @kind object) @signature `Ld9/d;.c:(Ljava/lang/String;Lb9/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2a7e68.  call `m`(v0, v1) @signature `Ld9/d;.m:(Ljava/lang/String;Lb9/g;)V` @kind static;
  #L2a7e6e.  return @kind void;
}
procedure `void` `d`(`java.lang.Boolean` v0 @kind object, `b9.g` v1 @kind object) @signature `Ld9/d;.d:(Ljava/lang/Boolean;Lb9/g;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2a7e80.  call `n`(v0, v1) @signature `Ld9/d;.n:(Ljava/lang/Boolean;Lb9/g;)V` @kind static;
  #L2a7e86.  return @kind void;
}
procedure `java.util.Map` `e`(`d9.d` v0 @kind object) @signature `Ld9/d;.e:(Ld9/d;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a7e20.  v0:= v0.`d9.d.a` @type ^`java.util.Map` @kind object;
  #L2a7e24.  return v0 @kind object;
}
procedure `java.util.Map` `f`(`d9.d` v0 @kind object) @signature `Ld9/d;.f:(Ld9/d;)Ljava/util/Map;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a7e38.  v0:= v0.`d9.d.b` @type ^`java.util.Map` @kind object;
  #L2a7e3c.  return v0 @kind object;
}
procedure `b9.d` `g`(`d9.d` v0 @kind object) @signature `Ld9/d;.g:(Ld9/d;)Lb9/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a7d54.  v0:= v0.`d9.d.c` @type ^`b9.d` @kind object;
  #L2a7d58.  return v0 @kind object;
}
procedure `boolean` `h`(`d9.d` v0 @kind object) @signature `Ld9/d;.h:(Ld9/d;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2a7d6c.  v0:= v0.`d9.d.d` @type ^`boolean` @kind boolean;
  #L2a7d70.  return v0;
}
procedure `void` `l`(`java.lang.Object` v2 @kind object, `b9.e` v3 @kind object) @signature `Ld9/d;.l:(Ljava/lang/Object;Lb9/e;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L2a7f40.  v3:= new `b9.b`;
  #L2a7f44.  v0:= new `java.lang.StringBuilder`;
  #L2a7f48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a7f4e.  v1:= "Couldn't find encoder for type " @kind object;
  #L2a7f52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7f58.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a7f5e.  v2:= temp @kind object;
  #L2a7f60.  call temp:= `getCanonicalName`(v2) @signature `Ljava/lang/Class;.getCanonicalName:()Ljava/lang/String;` @kind virtual;
  #L2a7f66.  v2:= temp @kind object;
  #L2a7f68.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a7f6e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a7f74.  v2:= temp @kind object;
  #L2a7f76.  call `<init>`(v3, v2) @signature `Lb9/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2a7f7c.  throw v3;
}
procedure `void` `m`(`java.lang.String` v0 @kind object, `b9.g` v1 @kind object) @signature `Ld9/d;.m:(Ljava/lang/String;Lb9/g;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L2a7f90.  call temp:= `b`(v1, v0) @signature `Lb9/g;.b:(Ljava/lang/String;)Lb9/g;` @kind interface;
  #L2a7f96.  return @kind void;
}
procedure `void` `n`(`java.lang.Boolean` v0 @kind object, `b9.g` v1 @kind object) @signature `Ld9/d;.n:(Ljava/lang/Boolean;Lb9/g;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L2a7fa8.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2a7fae.  v0:= temp;
  #L2a7fb0.  call temp:= `d`(v1, v0) @signature `Lb9/g;.d:(Z)Lb9/g;` @kind interface;
  #L2a7fb6.  return @kind void;
}
procedure `c9.b` `a`(`d9.d` v0 @kind this, `java.lang.Class` v1 @kind object, `b9.d` v2 @kind object) @signature `Ld9/d;.a:(Ljava/lang/Class;Lb9/d;)Lc9/b;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2a7d84.  call temp:= `o`(v0, v1, v2) @signature `Ld9/d;.o:(Ljava/lang/Class;Lb9/d;)Ld9/d;` @kind virtual;
  #L2a7d8a.  v1:= temp @kind object;
  #L2a7d8c.  return v1 @kind object;
}
procedure `b9.a` `i`(`d9.d` v1 @kind this) @signature `Ld9/d;.i:()Lb9/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7d38.  v0:= new `d9.d$a`;
  #L2a7d3c.  call `<init>`(v0, v1) @signature `Ld9/d$a;.<init>:(Ld9/d;)V` @kind direct;
  #L2a7d42.  return v0 @kind object;
}
procedure `d9.d` `j`(`d9.d` v0 @kind this, `c9.a` v1 @kind object) @signature `Ld9/d;.j:(Lc9/a;)Ld9/d;` @AccessFlag PUBLIC {
    temp;

  #L2a7da0.  call `a`(v1, v0) @signature `Lc9/a;.a:(Lc9/b;)V` @kind interface;
  #L2a7da6.  return v0 @kind object;
}
procedure `d9.d` `k`(`d9.d` v0 @kind this, `boolean` v1 ) @signature `Ld9/d;.k:(Z)Ld9/d;` @AccessFlag PUBLIC {
    temp;

  #L2a7db8.  v0.`d9.d.d` @type ^`boolean` := v1 @kind boolean;
  #L2a7dbc.  return v0 @kind object;
}
procedure `d9.d` `o`(`d9.d` v1 @kind this, `java.lang.Class` v2 @kind object, `b9.d` v3 @kind object) @signature `Ld9/d;.o:(Ljava/lang/Class;Lb9/d;)Ld9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7dd0.  v0:= v1.`d9.d.a` @type ^`java.util.Map` @kind object;
  #L2a7dd4.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a7dda.  v3:= v1.`d9.d.b` @type ^`java.util.Map` @kind object;
  #L2a7dde.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a7de4.  return v1 @kind object;
}
procedure `d9.d` `p`(`d9.d` v1 @kind this, `java.lang.Class` v2 @kind object, `b9.f` v3 @kind object) @signature `Ld9/d;.p:(Ljava/lang/Class;Lb9/f;)Ld9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a7df8.  v0:= v1.`d9.d.b` @type ^`java.util.Map` @kind object;
  #L2a7dfc.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a7e02.  v3:= v1.`d9.d.a` @type ^`java.util.Map` @kind object;
  #L2a7e06.  call temp:= `remove`(v3, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2a7e0c.  return v1 @kind object;
}
