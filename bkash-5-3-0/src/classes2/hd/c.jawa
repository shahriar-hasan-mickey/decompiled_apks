record `hd.c` @kind class @AccessFlag PUBLIC_FINAL extends `io.reactivex.rxjava3.disposables.c` @kind interface, `io.reactivex.rxjava3.disposables.d` @kind interface {
  `java.util.List` `hd.c.g` @AccessFlag ;
  `boolean` `hd.c.h` @AccessFlag VOLATILE;
}
procedure `void` `<init>`(`hd.c` v0 @kind this) @signature `Lhd/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b52b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b52be.  return @kind void;
}
procedure `boolean` `a`(`hd.c` v1 @kind this, `io.reactivex.rxjava3.disposables.c` v2 @kind object) @signature `Lhd/c;.a:(Lio/reactivex/rxjava3/disposables/c;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b528c.  call temp:= `c`(v1, v2) @signature `Lhd/c;.c:(Lio/reactivex/rxjava3/disposables/c;)Z` @kind virtual;
  #L2b5292.  v0:= temp;
  #L2b5294.  if v0 == 0 then goto L2b52a2;
  #L2b5298.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/c;.dispose:()V` @kind interface;
  #L2b529e.  v2:= 1I;
  #L2b52a0.  return v2;
  #L2b52a2.  v2:= 0I;
  #L2b52a4.  return v2;
}
procedure `boolean` `b`(`hd.c` v1 @kind this, `io.reactivex.rxjava3.disposables.c` v2 @kind object) @signature `Lhd/c;.b:(Lio/reactivex/rxjava3/disposables/c;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b51b4.  v0:= "d is null" @kind object;
  #L2b51b8.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b51be.  v0:= v1.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b51c2.  if v0 != 0 then goto L2b51fc;
  #L2b51c6.  @monitorenter v1
  #L2b51c8.  v0:= v1.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b51cc.  if v0 != 0 then goto L2b51f2;
  #L2b51d0.  v0:= v1.`hd.c.g` @type ^`java.util.List` @kind object;
  #L2b51d4.  if v0 != 0 then goto L2b51e6;
  #L2b51d8.  v0:= new `java.util.LinkedList`;
  #L2b51dc.  call `<init>`(v0) @signature `Ljava/util/LinkedList;.<init>:()V` @kind direct;
  #L2b51e2.  v1.`hd.c.g` @type ^`java.util.List` := v0 @kind object;
  #L2b51e6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b51ec.  v2:= 1I;
  #L2b51ee.  @monitorexit v1
  #L2b51f0.  return v2;
  #L2b51f2.  @monitorexit v1
  #L2b51f4.  goto L2b51fc;
  #L2b51f6.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b51f8.  @monitorexit v1
  #L2b51fa.  throw v2;
  #L2b51fc.  call `dispose`(v2) @signature `Lio/reactivex/rxjava3/disposables/c;.dispose:()V` @kind interface;
  #L2b5202.  v2:= 0I;
  #L2b5204.  return v2;
  catch `java.lang.Throwable` @[L2b51c8..L2b51fa] goto L2b51f6;
}
procedure `boolean` `c`(`hd.c` v2 @kind this, `io.reactivex.rxjava3.disposables.c` v3 @kind object) @signature `Lhd/c;.c:(Lio/reactivex/rxjava3/disposables/c;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5224.  v0:= "Disposable item is null" @kind object;
  #L2b5228.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b522e.  v0:= v2.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b5232.  v1:= 0I;
  #L2b5234.  if v0 == 0 then goto L2b523a;
  #L2b5238.  return v1;
  #L2b523a.  @monitorenter v2
  #L2b523c.  v0:= v2.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b5240.  if v0 == 0 then goto L2b5248;
  #L2b5244.  @monitorexit v2
  #L2b5246.  return v1;
  #L2b5248.  v0:= v2.`hd.c.g` @type ^`java.util.List` @kind object;
  #L2b524c.  if v0 == 0 then goto L2b5264;
  #L2b5250.  call temp:= `remove`(v0, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2b5256.  v3:= temp;
  #L2b5258.  if v3 != 0 then goto L2b525e;
  #L2b525c.  goto L2b5264;
  #L2b525e.  @monitorexit v2
  #L2b5260.  v3:= 1I;
  #L2b5262.  return v3;
  #L2b5264.  @monitorexit v2
  #L2b5266.  return v1;
  #L2b5268.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b526a.  @monitorexit v2
  #L2b526c.  throw v3;
  catch `java.lang.Throwable` @[L2b523c..L2b526c] goto L2b5268;
}
procedure `void` `d`(`hd.c` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lhd/c;.d:(Ljava/util/List;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2b532c.  if v3 != 0 then goto L2b5332;
  #L2b5330.  return @kind void;
  #L2b5332.  v0:= 0I;
  #L2b5334.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b533a.  v3:= temp @kind object;
  #L2b533c.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b5342.  v1:= temp;
  #L2b5344.  if v1 == 0 then goto L2b537a;
  #L2b5348.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b534e.  v1:= temp @kind object;
  #L2b5350.  v1:= (`io.reactivex.rxjava3.disposables.c`) v1 @kind object;
  #L2b5354.  call `dispose`(v1) @signature `Lio/reactivex/rxjava3/disposables/c;.dispose:()V` @kind interface;
  #L2b535a.  goto L2b533c;
  #L2b535c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b535e.  call `b`(v1) @signature `Lio/reactivex/rxjava3/exceptions/b;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2b5364.  if v0 != 0 then goto L2b5372;
  #L2b5368.  v0:= new `java.util.ArrayList`;
  #L2b536c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b5372.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b5378.  goto L2b533c;
  #L2b537a.  if v0 == 0 then goto L2b53b0;
  #L2b537e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b5384.  v3:= temp;
  #L2b5386.  v1:= 1I;
  #L2b5388.  if v3 != v1 then goto L2b53a4;
  #L2b538c.  v3:= 0I;
  #L2b538e.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b5394.  v3:= temp @kind object;
  #L2b5396.  v3:= (`java.lang.Throwable`) v3 @kind object;
  #L2b539a.  call temp:= `d`(v3) @signature `Lio/reactivex/rxjava3/internal/util/a;.d:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L2b53a0.  v3:= temp @kind object;
  #L2b53a2.  throw v3;
  #L2b53a4.  v3:= new `io.reactivex.rxjava3.exceptions.a`;
  #L2b53a8.  call `<init>`(v3, v0) @signature `Lio/reactivex/rxjava3/exceptions/a;.<init>:(Ljava/lang/Iterable;)V` @kind direct;
  #L2b53ae.  throw v3;
  #L2b53b0.  return @kind void;
  catch `java.lang.Throwable` @[L2b5354..L2b535a] goto L2b535c;
}
procedure `void` `dispose`(`hd.c` v2 @kind this) @signature `Lhd/c;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b52d0.  v0:= v2.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b52d4.  if v0 == 0 then goto L2b52da;
  #L2b52d8.  return @kind void;
  #L2b52da.  @monitorenter v2
  #L2b52dc.  v0:= v2.`hd.c.h` @type ^`boolean` @kind boolean;
  #L2b52e0.  if v0 == 0 then goto L2b52e8;
  #L2b52e4.  @monitorexit v2
  #L2b52e6.  return @kind void;
  #L2b52e8.  v0:= 1I;
  #L2b52ea.  v2.`hd.c.h` @type ^`boolean` := v0 @kind boolean;
  #L2b52ee.  v0:= v2.`hd.c.g` @type ^`java.util.List` @kind object;
  #L2b52f2.  v1:= 0I;
  #L2b52f4.  v2.`hd.c.g` @type ^`java.util.List` := v1 @kind object;
  #L2b52f8.  @monitorexit v2
  #L2b52fa.  call `d`(v2, v0) @signature `Lhd/c;.d:(Ljava/util/List;)V` @kind virtual;
  #L2b5300.  return @kind void;
  #L2b5302.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b5304.  @monitorexit v2
  #L2b5306.  throw v0;
  catch `java.lang.Throwable` @[L2b52dc..L2b52fa] goto L2b5302;
  catch `java.lang.Throwable` @[L2b5304..L2b5306] goto L2b5302;
}
