record `md.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `fd.g` `@@md.a.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lmd/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L321864.  v0:= new `md.a$h`;
  #L321868.  call `<init>`(v0) @signature `Lmd/a$h;.<init>:()V` @kind direct;
  #L32186e.  call temp:= `h`(v0) @signature `Lld/a;.h:(Lgd/e;)Lfd/g;` @kind static;
  #L321874.  v0:= new `md.a$b`;
  #L321878.  call `<init>`(v0) @signature `Lmd/a$b;.<init>:()V` @kind direct;
  #L32187e.  call temp:= `e`(v0) @signature `Lld/a;.e:(Lgd/e;)Lfd/g;` @kind static;
  #L321884.  v0:= new `md.a$c`;
  #L321888.  call `<init>`(v0) @signature `Lmd/a$c;.<init>:()V` @kind direct;
  #L32188e.  call temp:= `f`(v0) @signature `Lld/a;.f:(Lgd/e;)Lfd/g;` @kind static;
  #L321894.  v0:= temp @kind object;
  #L321896.  `@@md.a.a` @type ^`fd.g` := v0 @kind object;
  #L32189a.  call temp:= `d`() @signature `Lio/reactivex/rxjava3/internal/schedulers/k;.d:()Lio/reactivex/rxjava3/internal/schedulers/k;` @kind static;
  #L3218a0.  v0:= new `md.a$f`;
  #L3218a4.  call `<init>`(v0) @signature `Lmd/a$f;.<init>:()V` @kind direct;
  #L3218aa.  call temp:= `g`(v0) @signature `Lld/a;.g:(Lgd/e;)Lfd/g;` @kind static;
  #L3218b0.  return @kind void;
}
procedure `fd.g` `a`() @signature `Lmd/a;.a:()Lfd/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L321844.  v0:= `@@md.a.a` @type ^`fd.g` @kind object;
  #L321848.  call temp:= `l`(v0) @signature `Lld/a;.l:(Lfd/g;)Lfd/g;` @kind static;
  #L32184e.  v0:= temp @kind object;
  #L321850.  return v0 @kind object;
}
