record `cb.a$a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `com.google.gson.Gson` `@@cb.a$a.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcb/a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L111868.  v0:= new `com.google.gson.Gson`;
  #L11186c.  call `<init>`(v0) @signature `Lcom/google/gson/Gson;.<init>:()V` @kind direct;
  #L111872.  `@@cb.a$a.a` @type ^`com.google.gson.Gson` := v0 @kind object;
  #L111876.  return @kind void;
}
procedure `cb.a` `a`(`com.google.gson.JsonArray` v9 @kind object) @signature `Lcb/a$a;.a:(Lcom/google/gson/JsonArray;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L11151c.  call temp:= `size`(v9) @signature `Lcom/google/gson/JsonArray;.size:()I` @kind virtual;
  #L111522.  v0:= temp;
  #L111524.  if v0 == 0 then goto L111674;
  #L111528.  v0:= 0I;
  #L11152a.  call temp:= `get`(v9, v0) @signature `Lcom/google/gson/JsonArray;.get:(I)Lcom/google/gson/JsonElement;` @kind virtual;
  #L111530.  v1:= temp @kind object;
  #L111532.  call temp:= `getAsString`(v1) @signature `Lcom/google/gson/JsonElement;.getAsString:()Ljava/lang/String;` @kind virtual;
  #L111538.  v1:= temp @kind object;
  #L11153a.  v2:= new `java.util.ArrayList`;
  #L11153e.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L111544.  v3:= "within" @kind object;
  #L111548.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L11154e.  v3:= temp;
  #L111550.  v4:= 1I;
  #L111552.  if v3 == 0 then goto L111578;
  #L111556.  call temp:= `get`(v9, v4) @signature `Lcom/google/gson/JsonArray;.get:(I)Lcom/google/gson/JsonElement;` @kind virtual;
  #L11155c.  v9:= temp @kind object;
  #L11155e.  call temp:= `toString`(v9) @signature `Lcom/google/gson/JsonElement;.toString:()Ljava/lang/String;` @kind virtual;
  #L111564.  v9:= temp @kind object;
  #L111566.  call temp:= `fromJson`(v9) @signature `Lcom/mapbox/geojson/Polygon;.fromJson:(Ljava/lang/String;)Lcom/mapbox/geojson/Polygon;` @kind static;
  #L11156c.  v9:= temp @kind object;
  #L11156e.  call temp:= `v`(v9) @signature `Lcb/a;.v:(Lcom/mapbox/geojson/Polygon;)Lcb/a;` @kind static;
  #L111574.  v9:= temp @kind object;
  #L111576.  return v9 @kind object;
  #L111578.  v3:= "distance" @kind object;
  #L11157c.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L111582.  v3:= temp;
  #L111584.  if v3 == 0 then goto L1115aa;
  #L111588.  call temp:= `get`(v9, v4) @signature `Lcom/google/gson/JsonArray;.get:(I)Lcom/google/gson/JsonElement;` @kind virtual;
  #L11158e.  v9:= temp @kind object;
  #L111590.  call temp:= `toString`(v9) @signature `Lcom/google/gson/JsonElement;.toString:()Ljava/lang/String;` @kind virtual;
  #L111596.  v9:= temp @kind object;
  #L111598.  call temp:= `fromJson`(v9) @signature `Lcom/mapbox/geojson/gson/GeometryGeoJson;.fromJson:(Ljava/lang/String;)Lcom/mapbox/geojson/Geometry;` @kind static;
  #L11159e.  v9:= temp @kind object;
  #L1115a0.  call temp:= `b`(v9) @signature `Lcb/a;.b:(Lcom/mapbox/geojson/GeoJson;)Lcb/a;` @kind static;
  #L1115a6.  v9:= temp @kind object;
  #L1115a8.  return v9 @kind object;
  #L1115aa.  call temp:= `size`(v9) @signature `Lcom/google/gson/JsonArray;.size:()I` @kind virtual;
  #L1115b0.  v3:= temp;
  #L1115b2.  if v4 >= v3 then goto L111650;
  #L1115b6.  call temp:= `get`(v9, v4) @signature `Lcom/google/gson/JsonArray;.get:(I)Lcom/google/gson/JsonElement;` @kind virtual;
  #L1115bc.  v3:= temp @kind object;
  #L1115be.  v5:= "literal" @kind object;
  #L1115c2.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1115c8.  v5:= temp;
  #L1115ca.  if v5 == 0 then goto L11163c;
  #L1115ce.  v5:= instanceof @variable v3 @type ^`com.google.gson.JsonArray` @kind boolean;
  #L1115d2.  if v5 == 0 then goto L11163c;
  #L1115d6.  v3:= (`com.google.gson.JsonArray`) v3 @kind object;
  #L1115da.  call temp:= `size`(v3) @signature `Lcom/google/gson/JsonArray;.size:()I` @kind virtual;
  #L1115e0.  v5:= temp;
  #L1115e2.  v5:= new `java.lang.Object`[v5];
  #L1115e6.  v6:= 0I;
  #L1115e8.  call temp:= `size`(v3) @signature `Lcom/google/gson/JsonArray;.size:()I` @kind virtual;
  #L1115ee.  v7:= temp;
  #L1115f0.  if v6 >= v7 then goto L11162a;
  #L1115f4.  call temp:= `get`(v3, v6) @signature `Lcom/google/gson/JsonArray;.get:(I)Lcom/google/gson/JsonElement;` @kind virtual;
  #L1115fa.  v7:= temp @kind object;
  #L1115fc.  v8:= instanceof @variable v7 @type ^`com.google.gson.JsonPrimitive` @kind boolean;
  #L111600.  if v8 == 0 then goto L11161a;
  #L111604.  v7:= (`com.google.gson.JsonPrimitive`) v7 @kind object;
  #L111608.  call temp:= `e`(v7) @signature `Lcb/a$a;.e:(Lcom/google/gson/JsonPrimitive;)Ljava/lang/Object;` @kind static;
  #L11160e.  v7:= temp @kind object;
  #L111610.  v5[v6]:= v7 @kind object;
  #L111614.  v6:= v6 + 1;
  #L111618.  goto L1115e8;
  #L11161a.  v9:= new `java.lang.IllegalArgumentException`;
  #L11161e.  v0:= "Nested literal arrays are not supported." @kind object;
  #L111622.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111628.  throw v9;
  #L11162a.  v3:= new `cb.a$c`;
  #L11162e.  call `<init>`(v3, v5) @signature `Lcb/a$c;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L111634.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L11163a.  goto L11164a;
  #L11163c.  call temp:= `b`(v3) @signature `Lcb/a$a;.b:(Lcom/google/gson/JsonElement;)Lcb/a;` @kind static;
  #L111642.  v3:= temp @kind object;
  #L111644.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L11164a.  v4:= v4 + 1;
  #L11164e.  goto L1115aa;
  #L111650.  v9:= new `cb.a`;
  #L111654.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L11165a.  v0:= temp;
  #L11165c.  v0:= new `cb.a`[v0];
  #L111660.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L111666.  v0:= temp @kind object;
  #L111668.  v0:= (`cb.a`[]) v0 @kind object;
  #L11166c.  call `<init>`(v9, v1, v0) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L111672.  return v9 @kind object;
  #L111674.  v9:= new `java.lang.IllegalArgumentException`;
  #L111678.  v0:= "Can't convert empty jsonArray expressions" @kind object;
  #L11167c.  call `<init>`(v9, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111682.  throw v9;
}
procedure `cb.a` `b`(`com.google.gson.JsonElement` v4 @kind object) @signature `Lcb/a$a;.b:(Lcom/google/gson/JsonElement;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L111694.  v0:= instanceof @variable v4 @type ^`com.google.gson.JsonArray` @kind boolean;
  #L111698.  if v0 == 0 then goto L1116aa;
  #L11169c.  v4:= (`com.google.gson.JsonArray`) v4 @kind object;
  #L1116a0.  call temp:= `a`(v4) @signature `Lcb/a$a;.a:(Lcom/google/gson/JsonArray;)Lcb/a;` @kind static;
  #L1116a6.  v4:= temp @kind object;
  #L1116a8.  return v4 @kind object;
  #L1116aa.  v0:= instanceof @variable v4 @type ^`com.google.gson.JsonPrimitive` @kind boolean;
  #L1116ae.  if v0 == 0 then goto L1116c0;
  #L1116b2.  v4:= (`com.google.gson.JsonPrimitive`) v4 @kind object;
  #L1116b6.  call temp:= `c`(v4) @signature `Lcb/a$a;.c:(Lcom/google/gson/JsonPrimitive;)Lcb/a;` @kind static;
  #L1116bc.  v4:= temp @kind object;
  #L1116be.  return v4 @kind object;
  #L1116c0.  v0:= instanceof @variable v4 @type ^`com.google.gson.j` @kind boolean;
  #L1116c4.  if v0 == 0 then goto L1116d8;
  #L1116c8.  v4:= new `cb.a$b`;
  #L1116cc.  v0:= "" @kind object;
  #L1116d0.  call `<init>`(v4, v0) @signature `Lcb/a$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L1116d6.  return v4 @kind object;
  #L1116d8.  v0:= instanceof @variable v4 @type ^`com.google.gson.JsonObject` @kind boolean;
  #L1116dc.  if v0 == 0 then goto L11173a;
  #L1116e0.  v0:= new `java.util.HashMap`;
  #L1116e4.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1116ea.  v4:= (`com.google.gson.JsonObject`) v4 @kind object;
  #L1116ee.  call temp:= `keySet`(v4) @signature `Lcom/google/gson/JsonObject;.keySet:()Ljava/util/Set;` @kind virtual;
  #L1116f4.  v1:= temp @kind object;
  #L1116f6.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1116fc.  v1:= temp @kind object;
  #L1116fe.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L111704.  v2:= temp;
  #L111706.  if v2 == 0 then goto L11172e;
  #L11170a.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L111710.  v2:= temp @kind object;
  #L111712.  v2:= (`java.lang.String`) v2 @kind object;
  #L111716.  call temp:= `get`(v4, v2) @signature `Lcom/google/gson/JsonObject;.get:(Ljava/lang/String;)Lcom/google/gson/JsonElement;` @kind virtual;
  #L11171c.  v3:= temp @kind object;
  #L11171e.  call temp:= `b`(v3) @signature `Lcb/a$a;.b:(Lcom/google/gson/JsonElement;)Lcb/a;` @kind static;
  #L111724.  v3:= temp @kind object;
  #L111726.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L11172c.  goto L1116fe;
  #L11172e.  v4:= new `cb.a$d`;
  #L111732.  call `<init>`(v4, v0) @signature `Lcb/a$d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L111738.  return v4 @kind object;
  #L11173a.  v0:= new `java.lang.RuntimeException`;
  #L11173e.  v1:= new `java.lang.StringBuilder`;
  #L111742.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L111748.  v2:= "Unsupported expression conversion for " @kind object;
  #L11174c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L111752.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L111758.  v4:= temp @kind object;
  #L11175a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L111760.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L111766.  v4:= temp @kind object;
  #L111768.  call `<init>`(v0, v4) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L11176e.  throw v0;
}
procedure `cb.a` `c`(`com.google.gson.JsonPrimitive` v1 @kind object) @signature `Lcb/a$a;.c:(Lcom/google/gson/JsonPrimitive;)Lcb/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L111780.  v0:= new `cb.a$b`;
  #L111784.  call temp:= `e`(v1) @signature `Lcb/a$a;.e:(Lcom/google/gson/JsonPrimitive;)Ljava/lang/Object;` @kind static;
  #L11178a.  v1:= temp @kind object;
  #L11178c.  call `<init>`(v0, v1) @signature `Lcb/a$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L111792.  return v0 @kind object;
}
procedure `cb.a` `d`(`java.lang.String` v2 @kind object) @signature `Lcb/a$a;.d:(Ljava/lang/String;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1117a4.  v0:= `@@cb.a$a.a` @type ^`com.google.gson.Gson` @kind object;
  #L1117a8.  v1:= constclass @type ^`com.google.gson.JsonArray` @kind object;
  #L1117ac.  call temp:= `k`(v0, v2, v1) @signature `Lcom/google/gson/Gson;.k:(Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1117b2.  v2:= temp @kind object;
  #L1117b4.  v2:= (`com.google.gson.JsonArray`) v2 @kind object;
  #L1117b8.  call temp:= `a`(v2) @signature `Lcb/a$a;.a:(Lcom/google/gson/JsonArray;)Lcb/a;` @kind static;
  #L1117be.  v2:= temp @kind object;
  #L1117c0.  return v2 @kind object;
}
procedure `java.lang.Object` `e`(`com.google.gson.JsonPrimitive` v2 @kind object) @signature `Lcb/a$a;.e:(Lcom/google/gson/JsonPrimitive;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1117d4.  call temp:= `isBoolean`(v2) @signature `Lcom/google/gson/JsonPrimitive;.isBoolean:()Z` @kind virtual;
  #L1117da.  v0:= temp;
  #L1117dc.  if v0 == 0 then goto L1117f2;
  #L1117e0.  call temp:= `getAsBoolean`(v2) @signature `Lcom/google/gson/JsonPrimitive;.getAsBoolean:()Z` @kind virtual;
  #L1117e6.  v2:= temp;
  #L1117e8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L1117ee.  v2:= temp @kind object;
  #L1117f0.  return v2 @kind object;
  #L1117f2.  call temp:= `isNumber`(v2) @signature `Lcom/google/gson/JsonPrimitive;.isNumber:()Z` @kind virtual;
  #L1117f8.  v0:= temp;
  #L1117fa.  if v0 == 0 then goto L111810;
  #L1117fe.  call temp:= `getAsFloat`(v2) @signature `Lcom/google/gson/JsonPrimitive;.getAsFloat:()F` @kind virtual;
  #L111804.  v2:= temp;
  #L111806.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L11180c.  v2:= temp @kind object;
  #L11180e.  return v2 @kind object;
  #L111810.  call temp:= `isString`(v2) @signature `Lcom/google/gson/JsonPrimitive;.isString:()Z` @kind virtual;
  #L111816.  v0:= temp;
  #L111818.  if v0 == 0 then goto L111826;
  #L11181c.  call temp:= `getAsString`(v2) @signature `Lcom/google/gson/JsonPrimitive;.getAsString:()Ljava/lang/String;` @kind virtual;
  #L111822.  v2:= temp @kind object;
  #L111824.  return v2 @kind object;
  #L111826.  v2:= new `java.lang.RuntimeException`;
  #L11182a.  v0:= new `java.lang.StringBuilder`;
  #L11182e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L111834.  v1:= "Unsupported literal expression conversion for " @kind object;
  #L111838.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11183e.  v1:= constclass @type ^`com.google.gson.JsonPrimitive` @kind object;
  #L111842.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L111848.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L11184e.  v0:= temp @kind object;
  #L111850.  call `<init>`(v2, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111856.  throw v2;
}
