record `cb.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `cb.a.a` @AccessFlag PRIVATE_FINAL;
  `cb.a`[] `cb.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`cb.a` v1 @kind this) @signature `Lcb/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L1123f0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1123f6.  v0:= 0I;
  #L1123f8.  v1.`cb.a.a` @type ^`java.lang.String` := v0 @kind object;
  #L1123fc.  v1.`cb.a.b` @type ^`cb.a`[] := v0 @kind object;
  #L112400.  return @kind void;
}
procedure `void` `<init>`(`cb.a` v0 @kind this, `java.lang.String` v1 @kind object, `cb.a`[] v2 @kind object) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L112414.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L11241a.  v0.`cb.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L11241e.  v0.`cb.a.b` @type ^`cb.a`[] := v2 @kind object;
  #L112422.  return @kind void;
}
procedure `cb.a` `b`(`com.mapbox.geojson.GeoJson` v3 @kind object) @signature `Lcb/a;.b:(Lcom/mapbox/geojson/GeoJson;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L111e84.  v0:= new `java.util.HashMap`;
  #L111e88.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L111e8e.  call temp:= `toJson`(v3) @signature `Lcom/mapbox/geojson/GeoJson;.toJson:()Ljava/lang/String;` @kind interface;
  #L111e94.  v3:= temp @kind object;
  #L111e96.  call temp:= `k`(v3) @signature `Lcb/a;.k:(Ljava/lang/String;)Lcb/a;` @kind static;
  #L111e9c.  v3:= temp @kind object;
  #L111e9e.  v1:= "json" @kind object;
  #L111ea2.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L111ea8.  v3:= new `cb.a`;
  #L111eac.  v1:= 1I;
  #L111eae.  v1:= new `cb.a`[v1];
  #L111eb2.  v2:= new `cb.a$d`;
  #L111eb6.  call `<init>`(v2, v0) @signature `Lcb/a$d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L111ebc.  v0:= 0I;
  #L111ebe.  v1[v0]:= v2 @kind object;
  #L111ec2.  v0:= "distance" @kind object;
  #L111ec6.  call `<init>`(v3, v0, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L111ecc.  return v3 @kind object;
}
procedure `cb.a` `c`(`cb.a` v3 @kind object) @signature `Lcb/a;.c:(Lcb/a;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L111ee0.  v0:= new `cb.a`;
  #L111ee4.  v1:= 1I;
  #L111ee6.  v1:= new `cb.a`[v1];
  #L111eea.  v2:= 0I;
  #L111eec.  v1[v2]:= v3 @kind object;
  #L111ef0.  v3:= "get" @kind object;
  #L111ef4.  call `<init>`(v0, v3, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L111efa.  return v0 @kind object;
}
procedure `cb.a` `d`(`java.lang.String` v0 @kind object) @signature `Lcb/a;.d:(Ljava/lang/String;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L111f0c.  call temp:= `k`(v0) @signature `Lcb/a;.k:(Ljava/lang/String;)Lcb/a;` @kind static;
  #L111f12.  v0:= temp @kind object;
  #L111f14.  call temp:= `c`(v0) @signature `Lcb/a;.c:(Lcb/a;)Lcb/a;` @kind static;
  #L111f1a.  v0:= temp @kind object;
  #L111f1c.  return v0 @kind object;
}
procedure `cb.a` `e`(`cb.a$e` v0 @kind object, `cb.a` v1 @kind object, `cb.a$f`[] v2 @kind object) @signature `Lcb/a;.e:(Lcb/a$e;Lcb/a;[Lcb/a$f;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L111f30.  call temp:= `a`(v2) @signature `Lcb/a$f;.a:([Lcb/a$f;)[Lcb/a;` @kind static;
  #L111f36.  v2:= temp @kind object;
  #L111f38.  call temp:= `f`(v0, v1, v2) @signature `Lcb/a;.f:(Lcb/a$e;Lcb/a;[Lcb/a;)Lcb/a;` @kind static;
  #L111f3e.  v0:= temp @kind object;
  #L111f40.  return v0 @kind object;
}
procedure `cb.a` `f`(`cb.a$e` v3 @kind object, `cb.a` v4 @kind object, `cb.a`[] v5 @kind object) @signature `Lcb/a;.f:(Lcb/a$e;Lcb/a;[Lcb/a;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L111f54.  v0:= new `cb.a`;
  #L111f58.  v1:= 2I;
  #L111f5a.  v1:= new `cb.a`[v1];
  #L111f5e.  v2:= 0I;
  #L111f60.  v1[v2]:= v3 @kind object;
  #L111f64.  v3:= 1I;
  #L111f66.  v1[v3]:= v4 @kind object;
  #L111f6a.  call temp:= `g`(v1, v5) @signature `Lcb/a;.g:([Lcb/a;[Lcb/a;)[Lcb/a;` @kind static;
  #L111f70.  v3:= temp @kind object;
  #L111f72.  v4:= "interpolate" @kind object;
  #L111f76.  call `<init>`(v0, v4, v3) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L111f7c.  return v0 @kind object;
}
procedure `cb.a`[] `g`(`cb.a`[] v3 @kind object, `cb.a`[] v4 @kind object) @signature `Lcb/a;.g:([Lcb/a;[Lcb/a;)[Lcb/a;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L11225c.  v0:= length @variable v3;
  #L11225e.  v1:= length @variable v4;
  #L112260.  v0:= v0 + v1 @kind int;
  #L112262.  v0:= new `cb.a`[v0];
  #L112266.  v1:= length @variable v3;
  #L112268.  v2:= 0I;
  #L11226a.  call `arraycopy`(v3, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L112270.  v3:= length @variable v3;
  #L112272.  v1:= length @variable v4;
  #L112274.  call `arraycopy`(v4, v2, v0, v3, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L11227a.  return v0 @kind object;
}
procedure `cb.a$e` `h`() @signature `Lcb/a;.h:()Lcb/a$e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L112218.  v0:= new `cb.a$e`;
  #L11221c.  v1:= 0I;
  #L11221e.  v1:= new `cb.a`[v1];
  #L112222.  v2:= "linear" @kind object;
  #L112226.  call `<init>`(v0, v2, v1) @signature `Lcb/a$e;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L11222c.  return v0 @kind object;
}
procedure `cb.a` `i`(`java.lang.Number` v1 @kind object) @signature `Lcb/a;.i:(Ljava/lang/Number;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L111f90.  v0:= new `cb.a$b`;
  #L111f94.  call `<init>`(v0, v1) @signature `Lcb/a$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L111f9a.  return v0 @kind object;
}
procedure `cb.a` `j`(`java.lang.Object` v1 @kind object) @signature `Lcb/a;.j:(Ljava/lang/Object;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L111fac.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L111fb2.  v0:= temp @kind object;
  #L111fb4.  call temp:= `isArray`(v0) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L111fba.  v0:= temp;
  #L111fbc.  if v0 == 0 then goto L111fd2;
  #L111fc0.  call temp:= `u`(v1) @signature `Lcb/a;.u:(Ljava/lang/Object;)[Ljava/lang/Object;` @kind static;
  #L111fc6.  v1:= temp @kind object;
  #L111fc8.  call temp:= `l`(v1) @signature `Lcb/a;.l:([Ljava/lang/Object;)Lcb/a;` @kind static;
  #L111fce.  v1:= temp @kind object;
  #L111fd0.  return v1 @kind object;
  #L111fd2.  v0:= instanceof @variable v1 @type ^`cb.a` @kind boolean;
  #L111fd6.  if v0 != 0 then goto L111fe6;
  #L111fda.  v0:= new `cb.a$b`;
  #L111fde.  call `<init>`(v0, v1) @signature `Lcb/a$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L111fe4.  return v0 @kind object;
  #L111fe6.  v1:= new `java.lang.RuntimeException`;
  #L111fea.  v0:= "Can't convert an expression to a literal" @kind object;
  #L111fee.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L111ff4.  throw v1;
}
procedure `cb.a` `k`(`java.lang.String` v1 @kind object) @signature `Lcb/a;.k:(Ljava/lang/String;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L112040.  v0:= new `cb.a$b`;
  #L112044.  call `<init>`(v0, v1) @signature `Lcb/a$b;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L11204a.  return v0 @kind object;
}
procedure `cb.a` `l`(`java.lang.Object`[] v3 @kind object) @signature `Lcb/a;.l:([Ljava/lang/Object;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L112008.  v0:= new `cb.a`;
  #L11200c.  v1:= 1I;
  #L11200e.  v1:= new `cb.a`[v1];
  #L112012.  v2:= new `cb.a$c`;
  #L112016.  call `<init>`(v2, v3) @signature `Lcb/a$c;.<init>:([Ljava/lang/Object;)V` @kind direct;
  #L11201c.  v3:= 0I;
  #L11201e.  v1[v3]:= v2 @kind object;
  #L112022.  v3:= "literal" @kind object;
  #L112026.  call `<init>`(v0, v3, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L11202c.  return v0 @kind object;
}
procedure `cb.a` `m`(`cb.a` v3 @kind object, `cb.a` v4 @kind object, `cb.a$f`[] v5 @kind object) @signature `Lcb/a;.m:(Lcb/a;Lcb/a;[Lcb/a$f;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L11205c.  v0:= 1I;
  #L11205e.  v1:= new `cb.a`[v0];
  #L112062.  v2:= 0I;
  #L112064.  v1[v2]:= v3 @kind object;
  #L112068.  call temp:= `a`(v5) @signature `Lcb/a$f;.a:([Lcb/a$f;)[Lcb/a;` @kind static;
  #L11206e.  v3:= temp @kind object;
  #L112070.  call temp:= `g`(v1, v3) @signature `Lcb/a;.g:([Lcb/a;[Lcb/a;)[Lcb/a;` @kind static;
  #L112076.  v3:= temp @kind object;
  #L112078.  v5:= new `cb.a`[v0];
  #L11207c.  v5[v2]:= v4 @kind object;
  #L112080.  call temp:= `g`(v3, v5) @signature `Lcb/a;.g:([Lcb/a;[Lcb/a;)[Lcb/a;` @kind static;
  #L112086.  v3:= temp @kind object;
  #L112088.  call temp:= `n`(v3) @signature `Lcb/a;.n:([Lcb/a;)Lcb/a;` @kind static;
  #L11208e.  v3:= temp @kind object;
  #L112090.  return v3 @kind object;
}
procedure `cb.a` `n`(`cb.a`[] v2 @kind object) @signature `Lcb/a;.n:([Lcb/a;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1120a4.  v0:= new `cb.a`;
  #L1120a8.  v1:= "match" @kind object;
  #L1120ac.  call `<init>`(v0, v1, v2) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L1120b2.  return v0 @kind object;
}
procedure `cb.a` `o`(`java.lang.String` v0 @kind object) @signature `Lcb/a;.o:(Ljava/lang/String;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L1120c4.  call temp:= `d`(v0) @signature `Lcb/a$a;.d:(Ljava/lang/String;)Lcb/a;` @kind static;
  #L1120ca.  v0:= temp @kind object;
  #L1120cc.  return v0 @kind object;
}
procedure `cb.a` `p`(`cb.a` v3 @kind object, `cb.a` v4 @kind object, `cb.a` v5 @kind object, `cb.a` v6 @kind object) @signature `Lcb/a;.p:(Lcb/a;Lcb/a;Lcb/a;Lcb/a;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1120e0.  v0:= new `cb.a`;
  #L1120e4.  v1:= 4I;
  #L1120e6.  v1:= new `cb.a`[v1];
  #L1120ea.  v2:= 0I;
  #L1120ec.  v1[v2]:= v3 @kind object;
  #L1120f0.  v3:= 1I;
  #L1120f2.  v1[v3]:= v4 @kind object;
  #L1120f6.  v3:= 2I;
  #L1120f8.  v1[v3]:= v5 @kind object;
  #L1120fc.  v3:= 3I;
  #L1120fe.  v1[v3]:= v6 @kind object;
  #L112102.  v3:= "rgba" @kind object;
  #L112106.  call `<init>`(v0, v3, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L11210c.  return v0 @kind object;
}
procedure `cb.a` `q`(`java.lang.Number` v0 @kind object, `java.lang.Number` v1 @kind object, `java.lang.Number` v2 @kind object, `java.lang.Number` v3 @kind object) @signature `Lcb/a;.q:(Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;Ljava/lang/Number;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L112120.  call temp:= `i`(v0) @signature `Lcb/a;.i:(Ljava/lang/Number;)Lcb/a;` @kind static;
  #L112126.  v0:= temp @kind object;
  #L112128.  call temp:= `i`(v1) @signature `Lcb/a;.i:(Ljava/lang/Number;)Lcb/a;` @kind static;
  #L11212e.  v1:= temp @kind object;
  #L112130.  call temp:= `i`(v2) @signature `Lcb/a;.i:(Ljava/lang/Number;)Lcb/a;` @kind static;
  #L112136.  v2:= temp @kind object;
  #L112138.  call temp:= `i`(v3) @signature `Lcb/a;.i:(Ljava/lang/Number;)Lcb/a;` @kind static;
  #L11213e.  v3:= temp @kind object;
  #L112140.  call temp:= `p`(v0, v1, v2, v3) @signature `Lcb/a;.p:(Lcb/a;Lcb/a;Lcb/a;Lcb/a;)Lcb/a;` @kind static;
  #L112146.  v0:= temp @kind object;
  #L112148.  return v0 @kind object;
}
procedure `cb.a$f` `r`(`java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcb/a;.r:(Ljava/lang/Object;Ljava/lang/Object;)Lcb/a$f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L112240.  v0:= new `cb.a$f`;
  #L112244.  call `<init>`(v0, v1, v2) @signature `Lcb/a$f;.<init>:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind direct;
  #L11224a.  return v0 @kind object;
}
procedure `cb.a` `s`(`cb.a`[] v2 @kind object) @signature `Lcb/a;.s:([Lcb/a;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L11215c.  v0:= new `cb.a`;
  #L112160.  v1:= "case" @kind object;
  #L112164.  call `<init>`(v0, v1, v2) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L11216a.  return v0 @kind object;
}
procedure `java.lang.Object`[] `u`(`java.lang.Object` v4 @kind object) @signature `Lcb/a;.u:(Ljava/lang/Object;)[Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L112338.  call temp:= `getLength`(v4) @signature `Ljava/lang/reflect/Array;.getLength:(Ljava/lang/Object;)I` @kind static;
  #L11233e.  v0:= temp;
  #L112340.  v1:= new `java.lang.Object`[v0];
  #L112344.  v2:= 0I;
  #L112346.  if v2 >= v0 then goto L11235c;
  #L11234a.  call temp:= `get`(v4, v2) @signature `Ljava/lang/reflect/Array;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @kind static;
  #L112350.  v3:= temp @kind object;
  #L112352.  v1[v2]:= v3 @kind object;
  #L112356.  v2:= v2 + 1;
  #L11235a.  goto L112346;
  #L11235c.  return v1 @kind object;
}
procedure `cb.a` `v`(`com.mapbox.geojson.Polygon` v3 @kind object) @signature `Lcb/a;.v:(Lcom/mapbox/geojson/Polygon;)Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L11217c.  v0:= new `java.util.HashMap`;
  #L112180.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L112186.  call temp:= `type`(v3) @signature `Lcom/mapbox/geojson/Polygon;.type:()Ljava/lang/String;` @kind virtual;
  #L11218c.  v1:= temp @kind object;
  #L11218e.  call temp:= `k`(v1) @signature `Lcb/a;.k:(Ljava/lang/String;)Lcb/a;` @kind static;
  #L112194.  v1:= temp @kind object;
  #L112196.  v2:= "type" @kind object;
  #L11219a.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1121a0.  call temp:= `toJson`(v3) @signature `Lcom/mapbox/geojson/Polygon;.toJson:()Ljava/lang/String;` @kind virtual;
  #L1121a6.  v3:= temp @kind object;
  #L1121a8.  call temp:= `k`(v3) @signature `Lcb/a;.k:(Ljava/lang/String;)Lcb/a;` @kind static;
  #L1121ae.  v3:= temp @kind object;
  #L1121b0.  v1:= "json" @kind object;
  #L1121b4.  call temp:= `put`(v0, v1, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L1121ba.  v3:= new `cb.a`;
  #L1121be.  v1:= 1I;
  #L1121c0.  v1:= new `cb.a`[v1];
  #L1121c4.  v2:= new `cb.a$d`;
  #L1121c8.  call `<init>`(v2, v0) @signature `Lcb/a$d;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L1121ce.  v0:= 0I;
  #L1121d0.  v1[v0]:= v2 @kind object;
  #L1121d4.  v0:= "within" @kind object;
  #L1121d8.  call `<init>`(v3, v0, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L1121de.  return v3 @kind object;
}
procedure `cb.a` `w`() @signature `Lcb/a;.w:()Lcb/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1121f0.  v0:= new `cb.a`;
  #L1121f4.  v1:= 0I;
  #L1121f6.  v1:= new `cb.a`[v1];
  #L1121fa.  v2:= "zoom" @kind object;
  #L1121fe.  call `<init>`(v0, v2, v1) @signature `Lcb/a;.<init>:(Ljava/lang/String;[Lcb/a;)V` @kind direct;
  #L112204.  return v0 @kind object;
}
procedure `boolean` `equals`(`cb.a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcb/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L111e20.  if v3 != v4 then goto L111e28;
  #L111e24.  v4:= 1I;
  #L111e26.  return v4;
  #L111e28.  v0:= 0I;
  #L111e2a.  if v4 == 0 then goto L111e72;
  #L111e2e.  v1:= instanceof @variable v4 @type ^`cb.a` @kind boolean;
  #L111e32.  if v1 != 0 then goto L111e38;
  #L111e36.  goto L111e72;
  #L111e38.  v4:= (`cb.a`) v4 @kind object;
  #L111e3c.  v1:= v3.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L111e40.  if v1 == 0 then goto L111e56;
  #L111e44.  v2:= v4.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L111e48.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L111e4e.  v1:= temp;
  #L111e50.  if v1 != 0 then goto L111e60;
  #L111e54.  goto L111e5e;
  #L111e56.  v1:= v4.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L111e5a.  if v1 == 0 then goto L111e60;
  #L111e5e.  return v0;
  #L111e60.  v0:= v3.`cb.a.b` @type ^`cb.a`[] @kind object;
  #L111e64.  v4:= v4.`cb.a.b` @type ^`cb.a`[] @kind object;
  #L111e68.  call temp:= `deepEquals`(v0, v4) @signature `Ljava/util/Arrays;.deepEquals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L111e6e.  v4:= temp;
  #L111e70.  return v4;
  #L111e72.  return v0;
}
procedure `int` `hashCode`(`cb.a` v2 @kind this) @signature `Lcb/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L11228c.  v0:= v2.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L112290.  if v0 == 0 then goto L11229e;
  #L112294.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L11229a.  v0:= temp;
  #L11229c.  goto L1122a0;
  #L11229e.  v0:= 0I;
  #L1122a0.  v0:= v0 * 31;
  #L1122a4.  v1:= v2.`cb.a.b` @type ^`cb.a`[] @kind object;
  #L1122a8.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L1122ae.  v1:= temp;
  #L1122b0.  v0:= v0 + v1 @kind int;
  #L1122b2.  return v0;
}
procedure `java.lang.Object`[] `t`(`cb.a` v6 @kind this) @signature `Lcb/a;.t:()[Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1122c4.  v0:= new `java.util.ArrayList`;
  #L1122c8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1122ce.  v1:= v6.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L1122d2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1122d8.  v1:= v6.`cb.a.b` @type ^`cb.a`[] @kind object;
  #L1122dc.  if v1 == 0 then goto L11231c;
  #L1122e0.  v2:= length @variable v1;
  #L1122e2.  v3:= 0I;
  #L1122e4.  if v3 >= v2 then goto L11231c;
  #L1122e8.  v4:= v1[v3] @kind object;
  #L1122ec.  v5:= instanceof @variable v4 @type ^`cb.a$g` @kind boolean;
  #L1122f0.  if v5 == 0 then goto L112308;
  #L1122f4.  v4:= (`cb.a$g`) v4 @kind object;
  #L1122f8.  call temp:= `a`(v4) @signature `Lcb/a$g;.a:()Ljava/lang/Object;` @kind interface;
  #L1122fe.  v4:= temp @kind object;
  #L112300.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L112306.  goto L112316;
  #L112308.  call temp:= `t`(v4) @signature `Lcb/a;.t:()[Ljava/lang/Object;` @kind virtual;
  #L11230e.  v4:= temp @kind object;
  #L112310.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L112316.  v3:= v3 + 1;
  #L11231a.  goto L1122e4;
  #L11231c.  call temp:= `toArray`(v0) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L112322.  v0:= temp @kind object;
  #L112324.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`cb.a` v6 @kind this) @signature `Lcb/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L112370.  v0:= new `java.lang.StringBuilder`;
  #L112374.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L11237a.  v1:= "[\"" @kind object;
  #L11237e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L112384.  v1:= v6.`cb.a.a` @type ^`java.lang.String` @kind object;
  #L112388.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L11238e.  v1:= "\"" @kind object;
  #L112392.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L112398.  v1:= v6.`cb.a.b` @type ^`cb.a`[] @kind object;
  #L11239c.  if v1 == 0 then goto L1123ca;
  #L1123a0.  v2:= length @variable v1;
  #L1123a2.  v3:= 0I;
  #L1123a4.  if v3 >= v2 then goto L1123ca;
  #L1123a8.  v4:= v1[v3] @kind object;
  #L1123ac.  v5:= ", " @kind object;
  #L1123b0.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1123b6.  call temp:= `toString`(v4) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L1123bc.  v4:= temp @kind object;
  #L1123be.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1123c4.  v3:= v3 + 1;
  #L1123c8.  goto L1123a4;
  #L1123ca.  v1:= "]" @kind object;
  #L1123ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1123d4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1123da.  v0:= temp @kind object;
  #L1123dc.  return v0 @kind object;
}
