record `i8.a$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@i8.a$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Li8/a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2b660c.  call temp:= `values`() @signature `Ljava/math/RoundingMode;.values:()[Ljava/math/RoundingMode;` @kind static;
  #L2b6612.  v0:= temp @kind object;
  #L2b6614.  v0:= length @variable v0;
  #L2b6616.  v0:= new `int`[v0];
  #L2b661a.  `@@i8.a$a.a` @type ^`int`[] := v0 @kind object;
  #L2b661e.  v1:= `@@java.math.RoundingMode.UNNECESSARY` @type ^`java.math.RoundingMode` @kind object;
  #L2b6622.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b6628.  v1:= temp;
  #L2b662a.  v2:= 1I;
  #L2b662c.  v0[v1]:= v2;
  #L2b6630.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b6634.  v1:= `@@java.math.RoundingMode.DOWN` @type ^`java.math.RoundingMode` @kind object;
  #L2b6638.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b663e.  v1:= temp;
  #L2b6640.  v2:= 2I;
  #L2b6642.  v0[v1]:= v2;
  #L2b6646.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b664a.  v1:= `@@java.math.RoundingMode.FLOOR` @type ^`java.math.RoundingMode` @kind object;
  #L2b664e.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b6654.  v1:= temp;
  #L2b6656.  v2:= 3I;
  #L2b6658.  v0[v1]:= v2;
  #L2b665c.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b6660.  v1:= `@@java.math.RoundingMode.UP` @type ^`java.math.RoundingMode` @kind object;
  #L2b6664.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b666a.  v1:= temp;
  #L2b666c.  v2:= 4I;
  #L2b666e.  v0[v1]:= v2;
  #L2b6672.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b6676.  v1:= `@@java.math.RoundingMode.CEILING` @type ^`java.math.RoundingMode` @kind object;
  #L2b667a.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b6680.  v1:= temp;
  #L2b6682.  v2:= 5I;
  #L2b6684.  v0[v1]:= v2;
  #L2b6688.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b668c.  v1:= `@@java.math.RoundingMode.HALF_DOWN` @type ^`java.math.RoundingMode` @kind object;
  #L2b6690.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b6696.  v1:= temp;
  #L2b6698.  v2:= 6I;
  #L2b669a.  v0[v1]:= v2;
  #L2b669e.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b66a2.  v1:= `@@java.math.RoundingMode.HALF_UP` @type ^`java.math.RoundingMode` @kind object;
  #L2b66a6.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b66ac.  v1:= temp;
  #L2b66ae.  v2:= 7I;
  #L2b66b0.  v0[v1]:= v2;
  #L2b66b4.  v0:= `@@i8.a$a.a` @type ^`int`[] @kind object;
  #L2b66b8.  v1:= `@@java.math.RoundingMode.HALF_EVEN` @type ^`java.math.RoundingMode` @kind object;
  #L2b66bc.  call temp:= `ordinal`(v1) @signature `Ljava/math/RoundingMode;.ordinal:()I` @kind virtual;
  #L2b66c2.  v1:= temp;
  #L2b66c4.  v2:= 8I;
  #L2b66c8.  v0[v1]:= v2;
  #L2b66cc.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L2b661e..L2b6630] goto L2b6630;
  catch `java.lang.NoSuchFieldError` @[L2b6630..L2b6646] goto L2b6646;
  catch `java.lang.NoSuchFieldError` @[L2b6646..L2b665c] goto L2b665c;
  catch `java.lang.NoSuchFieldError` @[L2b665c..L2b6672] goto L2b6672;
  catch `java.lang.NoSuchFieldError` @[L2b6672..L2b6688] goto L2b6688;
  catch `java.lang.NoSuchFieldError` @[L2b6688..L2b669e] goto L2b669e;
  catch `java.lang.NoSuchFieldError` @[L2b669e..L2b66b4] goto L2b66b4;
  catch `java.lang.NoSuchFieldError` @[L2b66b4..L2b66cc] goto L2b66cc;
}
