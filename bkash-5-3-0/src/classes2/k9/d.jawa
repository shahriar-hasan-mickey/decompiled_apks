record `k9.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<clinit>`() @signature `Lk9/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L303b4c.  call temp:= `a`() @signature `Lk9/d;.a:()Lk9/d$a;` @kind static;
  #L303b52.  v0:= temp @kind object;
  #L303b54.  call temp:= `a`(v0) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303b5a.  return @kind void;
}
procedure `void` `<init>`(`k9.d` v0 @kind this) @signature `Lk9/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L303b6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L303b72.  return @kind void;
}
procedure `k9.d$a` `a`() @signature `Lk9/d;.a:()Lk9/d$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L303b10.  v0:= new `k9.a$b`;
  #L303b14.  call `<init>`(v0) @signature `Lk9/a$b;.<init>:()V` @kind direct;
  #L303b1a.  v1:= 0L;
  #L303b1e.  call temp:= `h`(v0, v1) @signature `Lk9/a$b;.h:(J)Lk9/d$a;` @kind virtual;
  #L303b24.  v0:= temp @kind object;
  #L303b26.  v3:= `@@k9.c$a.ATTEMPT_MIGRATION` @type ^`k9.c$a` @kind object;
  #L303b2a.  call temp:= `g`(v0, v3) @signature `Lk9/d$a;.g:(Lk9/c$a;)Lk9/d$a;` @kind virtual;
  #L303b30.  v0:= temp @kind object;
  #L303b32.  call temp:= `c`(v0, v1) @signature `Lk9/d$a;.c:(J)Lk9/d$a;` @kind virtual;
  #L303b38.  v0:= temp @kind object;
  #L303b3a.  return v0 @kind object;
}
procedure `java.lang.String` `b`() @signature `Lk9/d;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `c`() @signature `Lk9/d;.c:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `d`() @signature `Lk9/d;.d:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `e`() @signature `Lk9/d;.e:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `f`() @signature `Lk9/d;.f:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `k9.c$a` `g`() @signature `Lk9/d;.g:()Lk9/c$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `h`() @signature `Lk9/d;.h:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `i`(`k9.d` v2 @kind this) @signature `Lk9/d;.i:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3038d4.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L3038da.  v0:= temp @kind object;
  #L3038dc.  v1:= `@@k9.c$a.REGISTER_ERROR` @type ^`k9.c$a` @kind object;
  #L3038e0.  if v0 != v1 then goto L3038e8;
  #L3038e4.  v0:= 1I;
  #L3038e6.  goto L3038ea;
  #L3038e8.  v0:= 0I;
  #L3038ea.  return v0;
}
procedure `boolean` `j`(`k9.d` v2 @kind this) @signature `Lk9/d;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3038fc.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L303902.  v0:= temp @kind object;
  #L303904.  v1:= `@@k9.c$a.NOT_GENERATED` @type ^`k9.c$a` @kind object;
  #L303908.  if v0 == v1 then goto L303922;
  #L30390c.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L303912.  v0:= temp @kind object;
  #L303914.  v1:= `@@k9.c$a.ATTEMPT_MIGRATION` @type ^`k9.c$a` @kind object;
  #L303918.  if v0 != v1 then goto L30391e;
  #L30391c.  goto L303922;
  #L30391e.  v0:= 0I;
  #L303920.  goto L303924;
  #L303922.  v0:= 1I;
  #L303924.  return v0;
}
procedure `boolean` `k`(`k9.d` v2 @kind this) @signature `Lk9/d;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L303938.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L30393e.  v0:= temp @kind object;
  #L303940.  v1:= `@@k9.c$a.REGISTERED` @type ^`k9.c$a` @kind object;
  #L303944.  if v0 != v1 then goto L30394c;
  #L303948.  v0:= 1I;
  #L30394a.  goto L30394e;
  #L30394c.  v0:= 0I;
  #L30394e.  return v0;
}
procedure `boolean` `l`(`k9.d` v2 @kind this) @signature `Lk9/d;.l:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L303960.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L303966.  v0:= temp @kind object;
  #L303968.  v1:= `@@k9.c$a.UNREGISTERED` @type ^`k9.c$a` @kind object;
  #L30396c.  if v0 != v1 then goto L303974;
  #L303970.  v0:= 1I;
  #L303972.  goto L303976;
  #L303974.  v0:= 0I;
  #L303976.  return v0;
}
procedure `boolean` `m`(`k9.d` v2 @kind this) @signature `Lk9/d;.m:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L303988.  call temp:= `g`(v2) @signature `Lk9/d;.g:()Lk9/c$a;` @kind virtual;
  #L30398e.  v0:= temp @kind object;
  #L303990.  v1:= `@@k9.c$a.ATTEMPT_MIGRATION` @type ^`k9.c$a` @kind object;
  #L303994.  if v0 != v1 then goto L30399c;
  #L303998.  v0:= 1I;
  #L30399a.  goto L30399e;
  #L30399c.  v0:= 0I;
  #L30399e.  return v0;
}
procedure `k9.d$a` `n`() @signature `Lk9/d;.n:()Lk9/d$a;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `k9.d` `o`(`k9.d` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 , `long` v5 ) @signature `Lk9/d;.o:(Ljava/lang/String;JJ)Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3039b0.  call temp:= `n`(v1) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L3039b6.  v0:= temp @kind object;
  #L3039b8.  call temp:= `b`(v0, v2) @signature `Lk9/d$a;.b:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L3039be.  v2:= temp @kind object;
  #L3039c0.  call temp:= `c`(v2, v3) @signature `Lk9/d$a;.c:(J)Lk9/d$a;` @kind virtual;
  #L3039c6.  v2:= temp @kind object;
  #L3039c8.  call temp:= `h`(v2, v5) @signature `Lk9/d$a;.h:(J)Lk9/d$a;` @kind virtual;
  #L3039ce.  v2:= temp @kind object;
  #L3039d0.  call temp:= `a`(v2) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L3039d6.  v2:= temp @kind object;
  #L3039d8.  return v2 @kind object;
}
procedure `k9.d` `p`(`k9.d` v2 @kind this) @signature `Lk9/d;.p:()Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3039ec.  call temp:= `n`(v2) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L3039f2.  v0:= temp @kind object;
  #L3039f4.  v1:= 0I;
  #L3039f6.  call temp:= `b`(v0, v1) @signature `Lk9/d$a;.b:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L3039fc.  v0:= temp @kind object;
  #L3039fe.  call temp:= `a`(v0) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303a04.  v0:= temp @kind object;
  #L303a06.  return v0 @kind object;
}
procedure `k9.d` `q`(`k9.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lk9/d;.q:(Ljava/lang/String;)Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L303a18.  call temp:= `n`(v1) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L303a1e.  v0:= temp @kind object;
  #L303a20.  call temp:= `e`(v0, v2) @signature `Lk9/d$a;.e:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L303a26.  v2:= temp @kind object;
  #L303a28.  v0:= `@@k9.c$a.REGISTER_ERROR` @type ^`k9.c$a` @kind object;
  #L303a2c.  call temp:= `g`(v2, v0) @signature `Lk9/d$a;.g:(Lk9/c$a;)Lk9/d$a;` @kind virtual;
  #L303a32.  v2:= temp @kind object;
  #L303a34.  call temp:= `a`(v2) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303a3a.  v2:= temp @kind object;
  #L303a3c.  return v2 @kind object;
}
procedure `k9.d` `r`(`k9.d` v2 @kind this) @signature `Lk9/d;.r:()Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L303a50.  call temp:= `n`(v2) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L303a56.  v0:= temp @kind object;
  #L303a58.  v1:= `@@k9.c$a.NOT_GENERATED` @type ^`k9.c$a` @kind object;
  #L303a5c.  call temp:= `g`(v0, v1) @signature `Lk9/d$a;.g:(Lk9/c$a;)Lk9/d$a;` @kind virtual;
  #L303a62.  v0:= temp @kind object;
  #L303a64.  call temp:= `a`(v0) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303a6a.  v0:= temp @kind object;
  #L303a6c.  return v0 @kind object;
}
procedure `k9.d` `s`(`k9.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object, `long` v4 , `java.lang.String` v6 @kind object, `long` v7 ) @signature `Lk9/d;.s:(Ljava/lang/String;Ljava/lang/String;JLjava/lang/String;J)Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L303a80.  call temp:= `n`(v1) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L303a86.  v0:= temp @kind object;
  #L303a88.  call temp:= `d`(v0, v2) @signature `Lk9/d$a;.d:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L303a8e.  v2:= temp @kind object;
  #L303a90.  v0:= `@@k9.c$a.REGISTERED` @type ^`k9.c$a` @kind object;
  #L303a94.  call temp:= `g`(v2, v0) @signature `Lk9/d$a;.g:(Lk9/c$a;)Lk9/d$a;` @kind virtual;
  #L303a9a.  v2:= temp @kind object;
  #L303a9c.  call temp:= `b`(v2, v6) @signature `Lk9/d$a;.b:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L303aa2.  v2:= temp @kind object;
  #L303aa4.  call temp:= `f`(v2, v3) @signature `Lk9/d$a;.f:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L303aaa.  v2:= temp @kind object;
  #L303aac.  call temp:= `c`(v2, v7) @signature `Lk9/d$a;.c:(J)Lk9/d$a;` @kind virtual;
  #L303ab2.  v2:= temp @kind object;
  #L303ab4.  call temp:= `h`(v2, v4) @signature `Lk9/d$a;.h:(J)Lk9/d$a;` @kind virtual;
  #L303aba.  v2:= temp @kind object;
  #L303abc.  call temp:= `a`(v2) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303ac2.  v2:= temp @kind object;
  #L303ac4.  return v2 @kind object;
}
procedure `k9.d` `t`(`k9.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lk9/d;.t:(Ljava/lang/String;)Lk9/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L303ad8.  call temp:= `n`(v1) @signature `Lk9/d;.n:()Lk9/d$a;` @kind virtual;
  #L303ade.  v0:= temp @kind object;
  #L303ae0.  call temp:= `d`(v0, v2) @signature `Lk9/d$a;.d:(Ljava/lang/String;)Lk9/d$a;` @kind virtual;
  #L303ae6.  v2:= temp @kind object;
  #L303ae8.  v0:= `@@k9.c$a.UNREGISTERED` @type ^`k9.c$a` @kind object;
  #L303aec.  call temp:= `g`(v2, v0) @signature `Lk9/d$a;.g:(Lk9/c$a;)Lk9/d$a;` @kind virtual;
  #L303af2.  v2:= temp @kind object;
  #L303af4.  call temp:= `a`(v2) @signature `Lk9/d$a;.a:()Lk9/d;` @kind virtual;
  #L303afa.  v2:= temp @kind object;
  #L303afc.  return v2 @kind object;
}
