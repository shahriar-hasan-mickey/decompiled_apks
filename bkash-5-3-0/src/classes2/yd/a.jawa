record `yd.a` @kind class @AccessFlag PUBLIC_FINAL extends `xd.a` @kind class {
}
procedure `void` `<init>`(`yd.a` v0 @kind this) @signature `Lyd/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L38f2ec.  call `<init>`(v0) @signature `Lxd/a;.<init>:()V` @kind direct;
  #L38f2f2.  return @kind void;
}
procedure `java.util.Random` `getImpl`(`yd.a` v2 @kind this) @signature `Lyd/a;.getImpl:()Ljava/util/Random;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38f280.  call temp:= `current`() @signature `Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;` @kind static;
  #L38f286.  v0:= temp @kind object;
  #L38f288.  v1:= "current()" @kind object;
  #L38f28c.  call `e`(v0, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L38f292.  return v0 @kind object;
}
procedure `double` `nextDouble`(`yd.a` v1 @kind this, `double` v2 ) @signature `Lyd/a;.nextDouble:(D)D` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f238.  call temp:= `current`() @signature `Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;` @kind static;
  #L38f23e.  v0:= temp @kind object;
  #L38f240.  call temp:= `nextDouble`(v0, v2) @signature `Ljava/util/concurrent/ThreadLocalRandom;.nextDouble:(D)D` @kind virtual;
  #L38f246.  v2:= temp @kind wide;
  #L38f248.  return v2 @kind wide;
}
procedure `int` `nextInt`(`yd.a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lyd/a;.nextInt:(II)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f25c.  call temp:= `current`() @signature `Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;` @kind static;
  #L38f262.  v0:= temp @kind object;
  #L38f264.  call temp:= `nextInt`(v0, v2, v3) @signature `Ljava/util/concurrent/ThreadLocalRandom;.nextInt:(II)I` @kind virtual;
  #L38f26a.  v2:= temp;
  #L38f26c.  return v2;
}
procedure `long` `nextLong`(`yd.a` v1 @kind this, `long` v2 ) @signature `Lyd/a;.nextLong:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f2a4.  call temp:= `current`() @signature `Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;` @kind static;
  #L38f2aa.  v0:= temp @kind object;
  #L38f2ac.  call temp:= `nextLong`(v0, v2) @signature `Ljava/util/concurrent/ThreadLocalRandom;.nextLong:(J)J` @kind virtual;
  #L38f2b2.  v2:= temp @kind wide;
  #L38f2b4.  return v2 @kind wide;
}
procedure `long` `nextLong`(`yd.a` v1 @kind this, `long` v2 , `long` v4 ) @signature `Lyd/a;.nextLong:(JJ)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38f2c8.  call temp:= `current`() @signature `Ljava/util/concurrent/ThreadLocalRandom;.current:()Ljava/util/concurrent/ThreadLocalRandom;` @kind static;
  #L38f2ce.  v0:= temp @kind object;
  #L38f2d0.  call temp:= `nextLong`(v0, v2, v4) @signature `Ljava/util/concurrent/ThreadLocalRandom;.nextLong:(JJ)J` @kind virtual;
  #L38f2d6.  v2:= temp @kind wide;
  #L38f2d8.  return v2 @kind wide;
}
