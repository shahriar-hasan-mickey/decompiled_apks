record `ra.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `ra.a.a` @AccessFlag PRIVATE;
  `java.lang.String` `ra.a.b` @AccessFlag PRIVATE;
}
global `java.util.List` `@@ra.a.c` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lra/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L37422c.  v0:= new `java.util.ArrayList`;
  #L374230.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L374236.  `@@ra.a.c` @type ^`java.util.List` := v0 @kind object;
  #L37423a.  v1:= "https://www.mapbox.com/feedback/" @kind object;
  #L37423e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L374244.  v1:= "https://www.mapbox.com/map-feedback/" @kind object;
  #L374248.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L37424e.  v1:= "https://apps.mapbox.com/feedback/" @kind object;
  #L374252.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L374258.  return @kind void;
}
procedure `void` `<init>`(`ra.a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lra/a;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L37426c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L374272.  v0.`ra.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L374276.  v0.`ra.a.b` @type ^`java.lang.String` := v2 @kind object;
  #L37427a.  return @kind void;
}
procedure `java.lang.String` `a`(`ra.a` v1 @kind this) @signature `Lra/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3741cc.  v0:= v1.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L3741d0.  return v0 @kind object;
}
procedure `java.lang.String` `b`(`ra.a` v2 @kind this) @signature `Lra/a;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3741e4.  v0:= v2.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L3741e8.  v1:= "OpenStreetMap" @kind object;
  #L3741ec.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3741f2.  v0:= temp;
  #L3741f4.  if v0 == 0 then goto L3741fe;
  #L3741f8.  v0:= "OSM" @kind object;
  #L3741fc.  return v0 @kind object;
  #L3741fe.  v0:= v2.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L374202.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`ra.a` v1 @kind this) @signature `Lra/a;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L374214.  v0:= v1.`ra.a.b` @type ^`java.lang.String` @kind object;
  #L374218.  return v0 @kind object;
}
procedure `boolean` `equals`(`ra.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lra/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L374110.  v0:= 1I;
  #L374112.  if v4 != v5 then goto L374118;
  #L374116.  return v0;
  #L374118.  v1:= 0I;
  #L37411a.  if v5 == 0 then goto L374178;
  #L37411e.  v2:= constclass @type ^`ra.a` @kind object;
  #L374122.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L374128.  v3:= temp @kind object;
  #L37412a.  if v2 == v3 then goto L374130;
  #L37412e.  goto L374178;
  #L374130.  v5:= (`ra.a`) v5 @kind object;
  #L374134.  v2:= v4.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L374138.  if v2 == 0 then goto L37414e;
  #L37413c.  v3:= v5.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L374140.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L374146.  v2:= temp;
  #L374148.  if v2 != 0 then goto L374158;
  #L37414c.  goto L374156;
  #L37414e.  v2:= v5.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L374152.  if v2 == 0 then goto L374158;
  #L374156.  return v1;
  #L374158.  v2:= v4.`ra.a.b` @type ^`java.lang.String` @kind object;
  #L37415c.  v5:= v5.`ra.a.b` @type ^`java.lang.String` @kind object;
  #L374160.  if v2 == 0 then goto L37416e;
  #L374164.  call temp:= `equals`(v2, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L37416a.  v0:= temp;
  #L37416c.  goto L374176;
  #L37416e.  if v5 != 0 then goto L374174;
  #L374172.  goto L374176;
  #L374174.  v0:= 0I;
  #L374176.  return v0;
  #L374178.  return v1;
}
procedure `int` `hashCode`(`ra.a` v3 @kind this) @signature `Lra/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L37418c.  v0:= v3.`ra.a.a` @type ^`java.lang.String` @kind object;
  #L374190.  v1:= 0I;
  #L374192.  if v0 == 0 then goto L3741a0;
  #L374196.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L37419c.  v0:= temp;
  #L37419e.  goto L3741a2;
  #L3741a0.  v0:= 0I;
  #L3741a2.  v0:= v0 * 31;
  #L3741a6.  v2:= v3.`ra.a.b` @type ^`java.lang.String` @kind object;
  #L3741aa.  if v2 == 0 then goto L3741b6;
  #L3741ae.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3741b4.  v1:= temp;
  #L3741b6.  v0:= v0 + v1 @kind int;
  #L3741b8.  return v0;
}
