record `ra.d$a` @kind class @AccessFlag PUBLIC {
  `java.lang.ref.WeakReference` `ra.d$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `ra.d$a.b` @AccessFlag PRIVATE;
  `boolean` `ra.d$a.c` @AccessFlag PRIVATE;
  `boolean` `ra.d$a.d` @AccessFlag PRIVATE;
  `boolean` `ra.d$a.e` @AccessFlag PRIVATE;
  `java.lang.String`[] `ra.d$a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`ra.d$a` v2 @kind this, `android.content.Context` v3 @kind object) @signature `Lra/d$a;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L373d20.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L373d26.  v0:= 1I;
  #L373d28.  v2.`ra.d$a.b` @type ^`boolean` := v0 @kind boolean;
  #L373d2c.  v2.`ra.d$a.c` @type ^`boolean` := v0 @kind boolean;
  #L373d30.  v1:= 0I;
  #L373d32.  v2.`ra.d$a.d` @type ^`boolean` := v1 @kind boolean;
  #L373d36.  v2.`ra.d$a.e` @type ^`boolean` := v0 @kind boolean;
  #L373d3a.  v0:= new `java.lang.ref.WeakReference`;
  #L373d3e.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L373d44.  v2.`ra.d$a.a` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L373d48.  return @kind void;
}
procedure `java.lang.String` `b`(`ra.d$a` v5 @kind this, `java.lang.String`[] v6 @kind object) @signature `Lra/d$a;.b:([Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L373c20.  v0:= new `java.lang.StringBuilder`;
  #L373c24.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L373c2a.  v1:= length @variable v6;
  #L373c2c.  v2:= 0I;
  #L373c2e.  if v2 >= v1 then goto L373c4e;
  #L373c32.  v3:= v6[v2] @kind object;
  #L373c36.  call temp:= `isEmpty`(v3) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L373c3c.  v4:= temp;
  #L373c3e.  if v4 != 0 then goto L373c48;
  #L373c42.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L373c48.  v2:= v2 + 1;
  #L373c4c.  goto L373c2e;
  #L373c4e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L373c54.  v6:= temp @kind object;
  #L373c56.  return v6 @kind object;
}
procedure `ra.d` `a`(`ra.d$a` v8 @kind this) @signature `Lra/d$a;.a:()Lra/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L373c68.  v0:= v8.`ra.d$a.f` @type ^`java.lang.String`[] @kind object;
  #L373c6c.  if v0 == 0 then goto L373ca0;
  #L373c70.  call temp:= `b`(v8, v0) @signature `Lra/d$a;.b:([Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L373c76.  v3:= temp @kind object;
  #L373c78.  v0:= new `ra.d`;
  #L373c7c.  v2:= v8.`ra.d$a.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L373c80.  v4:= v8.`ra.d$a.b` @type ^`boolean` @kind boolean;
  #L373c84.  v5:= v8.`ra.d$a.c` @type ^`boolean` @kind boolean;
  #L373c88.  v6:= v8.`ra.d$a.d` @type ^`boolean` @kind boolean;
  #L373c8c.  v7:= v8.`ra.d$a.e` @type ^`boolean` @kind boolean;
  #L373c90.  v1:= v0 @kind object;
  #L373c92.  call `<init>`(v1, v2, v3, v4, v5, v6, v7) @signature `Lra/d;.<init>:(Ljava/lang/ref/WeakReference;Ljava/lang/String;ZZZZ)V` @kind direct;
  #L373c98.  call `i`(v0) @signature `Lra/d;.i:()V` @kind virtual;
  #L373c9e.  return v0 @kind object;
  #L373ca0.  v0:= new `java.lang.IllegalStateException`;
  #L373ca4.  v1:= "Using builder without providing attribution data" @kind object;
  #L373ca8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L373cae.  throw v0;
}
procedure `ra.d$a` `c`(`ra.d$a` v0 @kind this, `java.lang.String`[] v1 @kind object) @signature `Lra/d$a;.c:([Ljava/lang/String;)Lra/d$a;` @AccessFlag PUBLIC {
    temp;

  #L373cc0.  v0.`ra.d$a.f` @type ^`java.lang.String`[] := v1 @kind object;
  #L373cc4.  return v0 @kind object;
}
procedure `ra.d$a` `d`(`ra.d$a` v0 @kind this, `boolean` v1 ) @signature `Lra/d$a;.d:(Z)Lra/d$a;` @AccessFlag PUBLIC {
    temp;

  #L373cd8.  v0.`ra.d$a.c` @type ^`boolean` := v1 @kind boolean;
  #L373cdc.  return v0 @kind object;
}
procedure `ra.d$a` `e`(`ra.d$a` v0 @kind this, `boolean` v1 ) @signature `Lra/d$a;.e:(Z)Lra/d$a;` @AccessFlag PUBLIC {
    temp;

  #L373cf0.  v0.`ra.d$a.b` @type ^`boolean` := v1 @kind boolean;
  #L373cf4.  return v0 @kind object;
}
procedure `ra.d$a` `f`(`ra.d$a` v0 @kind this, `boolean` v1 ) @signature `Lra/d$a;.f:(Z)Lra/d$a;` @AccessFlag PUBLIC {
    temp;

  #L373d08.  v0.`ra.d$a.d` @type ^`boolean` := v1 @kind boolean;
  #L373d0c.  return v0 @kind object;
}
