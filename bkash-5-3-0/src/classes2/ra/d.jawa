record `ra.d` @kind class @AccessFlag PUBLIC {
  `java.lang.ref.WeakReference` `ra.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `ra.d.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `ra.d.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `ra.d.d` @AccessFlag PRIVATE_FINAL;
  `boolean` `ra.d.e` @AccessFlag PRIVATE_FINAL;
  `boolean` `ra.d.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `ra.d.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ra.d` v1 @kind this, `java.lang.ref.WeakReference` v2 @kind object, `java.lang.String` v3 @kind object, `boolean` v4 , `boolean` v5 , `boolean` v6 , `boolean` v7 ) @signature `Lra/d;.<init>:(Ljava/lang/ref/WeakReference;Ljava/lang/String;ZZZZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L373fac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L373fb2.  v0:= new `java.util.LinkedHashSet`;
  #L373fb6.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L373fbc.  v1.`ra.d.b` @type ^`java.util.Set` := v0 @kind object;
  #L373fc0.  v1.`ra.d.a` @type ^`java.lang.ref.WeakReference` := v2 @kind object;
  #L373fc4.  v1.`ra.d.c` @type ^`java.lang.String` := v3 @kind object;
  #L373fc8.  v1.`ra.d.d` @type ^`boolean` := v4 @kind boolean;
  #L373fcc.  v1.`ra.d.e` @type ^`boolean` := v5 @kind boolean;
  #L373fd0.  v1.`ra.d.f` @type ^`boolean` := v6 @kind boolean;
  #L373fd4.  v1.`ra.d.g` @type ^`boolean` := v7 @kind boolean;
  #L373fd8.  return @kind void;
}
procedure `void` `a`(`ra.d` v4 @kind this) @signature `Lra/d;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L373fec.  v0:= v4.`ra.d.f` @type ^`boolean` @kind boolean;
  #L373ff0.  if v0 == 0 then goto L374032;
  #L373ff4.  v0:= v4.`ra.d.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L373ff8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L373ffe.  v0:= temp @kind object;
  #L374000.  v0:= (`android.content.Context`) v0 @kind object;
  #L374004.  v1:= v4.`ra.d.b` @type ^`java.util.Set` @kind object;
  #L374008.  v2:= new `ra.a`;
  #L37400c.  if v0 == 0 then goto L37401e;
  #L374010.  v3:= `@@com.mapbox.mapboxsdk.m.m` @type ^`int`;
  #L374014.  call temp:= `getString`(v0, v3) @signature `Landroid/content/Context;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L37401a.  v0:= temp @kind object;
  #L37401c.  goto L374022;
  #L37401e.  v0:= "Telemetry Settings" @kind object;
  #L374022.  v3:= "https://www.mapbox.com/telemetry/" @kind object;
  #L374026.  call `<init>`(v2, v0, v3) @signature `Lra/a;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L37402c.  call temp:= `add`(v1, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L374032.  return @kind void;
}
procedure `android.text.Spanned` `c`(`java.lang.String` v2 @kind object) @signature `Lra/d;.c:(Ljava/lang/String;)Landroid/text/Spanned;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L373d5c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L373d60.  v1:= 24I;
  #L373d64.  if v0 < v1 then goto L373d74;
  #L373d68.  v0:= 0I;
  #L373d6a.  call temp:= `fromHtml`(v2, v0) @signature `Landroid/text/Html;.fromHtml:(Ljava/lang/String;I)Landroid/text/Spanned;` @kind static;
  #L373d70.  v2:= temp @kind object;
  #L373d72.  goto L373d7c;
  #L373d74.  call temp:= `fromHtml`(v2) @signature `Landroid/text/Html;.fromHtml:(Ljava/lang/String;)Landroid/text/Spanned;` @kind static;
  #L373d7a.  v2:= temp @kind object;
  #L373d7c.  return v2 @kind object;
}
procedure `boolean` `e`(`ra.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lra/d;.e:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L373d90.  v0:= "Improve this map" @kind object;
  #L373d94.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L373d9a.  v2:= temp;
  #L373d9c.  return v2;
}
procedure `boolean` `f`(`ra.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lra/d;.f:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L373db0.  call temp:= `g`(v1, v2) @signature `Lra/d;.g:(Ljava/lang/String;)Z` @kind direct;
  #L373db6.  v0:= temp;
  #L373db8.  if v0 == 0 then goto L373dcc;
  #L373dbc.  call temp:= `h`(v1, v2) @signature `Lra/d;.h:(Ljava/lang/String;)Z` @kind direct;
  #L373dc2.  v2:= temp;
  #L373dc4.  if v2 == 0 then goto L373dcc;
  #L373dc8.  v2:= 1I;
  #L373dca.  goto L373dce;
  #L373dcc.  v2:= 0I;
  #L373dce.  return v2;
}
procedure `boolean` `g`(`ra.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lra/d;.g:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L373de0.  v0:= v1.`ra.d.d` @type ^`boolean` @kind boolean;
  #L373de4.  if v0 != 0 then goto L373dfe;
  #L373de8.  v0:= `@@ra.a.c` @type ^`java.util.List` @kind object;
  #L373dec.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L373df2.  v2:= temp;
  #L373df4.  if v2 != 0 then goto L373dfa;
  #L373df8.  goto L373dfe;
  #L373dfa.  v2:= 0I;
  #L373dfc.  goto L373e00;
  #L373dfe.  v2:= 1I;
  #L373e00.  return v2;
}
procedure `boolean` `h`(`ra.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lra/d;.h:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L373e14.  v0:= v1.`ra.d.g` @type ^`boolean` @kind boolean;
  #L373e18.  if v0 != 0 then goto L373e32;
  #L373e1c.  v0:= "https://www.mapbox.com/about/maps/" @kind object;
  #L373e20.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L373e26.  v2:= temp;
  #L373e28.  if v2 != 0 then goto L373e2e;
  #L373e2c.  goto L373e32;
  #L373e2e.  v2:= 0I;
  #L373e30.  goto L373e34;
  #L373e32.  v2:= 1I;
  #L373e34.  return v2;
}
procedure `java.lang.String` `j`(`ra.d` v3 @kind this, `android.text.SpannableStringBuilder` v4 @kind object, `android.text.style.URLSpan` v5 @kind object) @signature `Lra/d;.j:(Landroid/text/SpannableStringBuilder;Landroid/text/style/URLSpan;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L373ee0.  call temp:= `getSpanStart`(v4, v5) @signature `Landroid/text/SpannableStringBuilder;.getSpanStart:(Ljava/lang/Object;)I` @kind virtual;
  #L373ee6.  v0:= temp;
  #L373ee8.  call temp:= `getSpanEnd`(v4, v5) @signature `Landroid/text/SpannableStringBuilder;.getSpanEnd:(Ljava/lang/Object;)I` @kind virtual;
  #L373eee.  v5:= temp;
  #L373ef0.  v1:= v5 - v0 @kind int;
  #L373ef4.  v1:= new `char`[v1];
  #L373ef8.  v2:= 0I;
  #L373efa.  call `getChars`(v4, v0, v5, v1, v2) @signature `Landroid/text/SpannableStringBuilder;.getChars:(II[CI)V` @kind virtual;
  #L373f00.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:([C)Ljava/lang/String;` @kind static;
  #L373f06.  v4:= temp @kind object;
  #L373f08.  call temp:= `m`(v3, v4) @signature `Lra/d;.m:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L373f0e.  v4:= temp @kind object;
  #L373f10.  return v4 @kind object;
}
procedure `void` `k`(`ra.d` v5 @kind this) @signature `Lra/d;.k:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L374064.  v0:= v5.`ra.d.c` @type ^`java.lang.String` @kind object;
  #L374068.  call temp:= `c`(v0) @signature `Lra/d;.c:(Ljava/lang/String;)Landroid/text/Spanned;` @kind static;
  #L37406e.  v0:= temp @kind object;
  #L374070.  v0:= (`android.text.SpannableStringBuilder`) v0 @kind object;
  #L374074.  call temp:= `length`(v0) @signature `Landroid/text/SpannableStringBuilder;.length:()I` @kind virtual;
  #L37407a.  v1:= temp;
  #L37407c.  v2:= constclass @type ^`android.text.style.URLSpan` @kind object;
  #L374080.  v3:= 0I;
  #L374082.  call temp:= `getSpans`(v0, v3, v1, v2) @signature `Landroid/text/SpannableStringBuilder;.getSpans:(IILjava/lang/Class;)[Ljava/lang/Object;` @kind virtual;
  #L374088.  v1:= temp @kind object;
  #L37408a.  v1:= (`android.text.style.URLSpan`[]) v1 @kind object;
  #L37408e.  v2:= length @variable v1;
  #L374090.  if v3 >= v2 then goto L3740a4;
  #L374094.  v4:= v1[v3] @kind object;
  #L374098.  call `l`(v5, v0, v4) @signature `Lra/d;.l:(Landroid/text/SpannableStringBuilder;Landroid/text/style/URLSpan;)V` @kind direct;
  #L37409e.  v3:= v3 + 1;
  #L3740a2.  goto L374090;
  #L3740a4.  return @kind void;
}
procedure `void` `l`(`ra.d` v2 @kind this, `android.text.SpannableStringBuilder` v3 @kind object, `android.text.style.URLSpan` v4 @kind object) @signature `Lra/d;.l:(Landroid/text/SpannableStringBuilder;Landroid/text/style/URLSpan;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3740b8.  call temp:= `getURL`(v4) @signature `Landroid/text/style/URLSpan;.getURL:()Ljava/lang/String;` @kind virtual;
  #L3740be.  v0:= temp @kind object;
  #L3740c0.  call temp:= `f`(v2, v0) @signature `Lra/d;.f:(Ljava/lang/String;)Z` @kind direct;
  #L3740c6.  v1:= temp;
  #L3740c8.  if v1 == 0 then goto L3740fc;
  #L3740cc.  call temp:= `j`(v2, v3, v4) @signature `Lra/d;.j:(Landroid/text/SpannableStringBuilder;Landroid/text/style/URLSpan;)Ljava/lang/String;` @kind direct;
  #L3740d2.  v3:= temp @kind object;
  #L3740d4.  call temp:= `e`(v2, v3) @signature `Lra/d;.e:(Ljava/lang/String;)Z` @kind direct;
  #L3740da.  v4:= temp;
  #L3740dc.  if v4 == 0 then goto L3740e8;
  #L3740e0.  call temp:= `n`(v2, v3) @signature `Lra/d;.n:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L3740e6.  v3:= temp @kind object;
  #L3740e8.  v4:= v2.`ra.d.b` @type ^`java.util.Set` @kind object;
  #L3740ec.  v1:= new `ra.a`;
  #L3740f0.  call `<init>`(v1, v3, v0) @signature `Lra/a;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L3740f6.  call temp:= `add`(v4, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3740fc.  return @kind void;
}
procedure `java.lang.String` `m`(`ra.d` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lra/d;.m:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L373f24.  v0:= v2.`ra.d.e` @type ^`boolean` @kind boolean;
  #L373f28.  if v0 != 0 then goto L373f4e;
  #L373f2c.  v0:= "© " @kind object;
  #L373f30.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L373f36.  v0:= temp;
  #L373f38.  if v0 == 0 then goto L373f4e;
  #L373f3c.  v0:= 2I;
  #L373f3e.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L373f44.  v1:= temp;
  #L373f46.  call temp:= `substring`(v3, v0, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L373f4c.  v3:= temp @kind object;
  #L373f4e.  return v3 @kind object;
}
procedure `java.lang.String` `n`(`ra.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lra/d;.n:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L373f60.  v0:= v1.`ra.d.a` @type ^`java.lang.ref.WeakReference` @kind object;
  #L373f64.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L373f6a.  v0:= temp @kind object;
  #L373f6c.  v0:= (`android.content.Context`) v0 @kind object;
  #L373f70.  if v0 == 0 then goto L373f80;
  #L373f74.  v2:= `@@com.mapbox.mapboxsdk.m.k` @type ^`int`;
  #L373f78.  call temp:= `getString`(v0, v2) @signature `Landroid/content/Context;.getString:(I)Ljava/lang/String;` @kind virtual;
  #L373f7e.  v2:= temp @kind object;
  #L373f80.  return v2 @kind object;
}
procedure `java.lang.String` `b`(`ra.d` v4 @kind this, `boolean` v5 ) @signature `Lra/d;.b:(Z)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L373e48.  v0:= new `java.lang.StringBuilder`;
  #L373e4c.  v1:= v4.`ra.d.e` @type ^`boolean` @kind boolean;
  #L373e50.  if v1 == 0 then goto L373e5a;
  #L373e54.  v1:= "" @kind object;
  #L373e58.  goto L373e5e;
  #L373e5a.  v1:= "© " @kind object;
  #L373e5e.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L373e64.  v1:= 0I;
  #L373e66.  v2:= v4.`ra.d.b` @type ^`java.util.Set` @kind object;
  #L373e6a.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L373e70.  v2:= temp @kind object;
  #L373e72.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L373e78.  v3:= temp;
  #L373e7a.  if v3 == 0 then goto L373ec6;
  #L373e7e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L373e84.  v3:= temp @kind object;
  #L373e86.  v3:= (`ra.a`) v3 @kind object;
  #L373e8a.  v1:= v1 + 1;
  #L373e8e.  if v5 != 0 then goto L373e9c;
  #L373e92.  call temp:= `a`(v3) @signature `Lra/a;.a:()Ljava/lang/String;` @kind virtual;
  #L373e98.  v3:= temp @kind object;
  #L373e9a.  goto L373ea4;
  #L373e9c.  call temp:= `b`(v3) @signature `Lra/a;.b:()Ljava/lang/String;` @kind virtual;
  #L373ea2.  v3:= temp @kind object;
  #L373ea4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L373eaa.  v3:= v4.`ra.d.b` @type ^`java.util.Set` @kind object;
  #L373eae.  call temp:= `size`(v3) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L373eb4.  v3:= temp;
  #L373eb6.  if v1 == v3 then goto L373e72;
  #L373eba.  v3:= " / " @kind object;
  #L373ebe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L373ec4.  goto L373e72;
  #L373ec6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L373ecc.  v5:= temp @kind object;
  #L373ece.  return v5 @kind object;
}
procedure `java.util.Set` `d`(`ra.d` v1 @kind this) @signature `Lra/d;.d:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L373f94.  v0:= v1.`ra.d.b` @type ^`java.util.Set` @kind object;
  #L373f98.  return v0 @kind object;
}
procedure `void` `i`(`ra.d` v0 @kind this) @signature `Lra/d;.i:()V` @AccessFlag PROTECTED {
    temp;

  #L374044.  call `k`(v0) @signature `Lra/d;.k:()V` @kind direct;
  #L37404a.  call `a`(v0) @signature `Lra/d;.a:()V` @kind direct;
  #L374050.  return @kind void;
}
