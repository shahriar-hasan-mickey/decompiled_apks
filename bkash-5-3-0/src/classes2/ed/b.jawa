record `ed.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `fd.g` `@@ed.b.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Led/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ad1f0.  v0:= `@@ed.a.g` @type ^`ed.a` @kind object;
  #L2ad1f4.  call temp:= `d`(v0) @signature `Ldd/a;.d:(Ljava/util/concurrent/Callable;)Lfd/g;` @kind static;
  #L2ad1fa.  v0:= temp @kind object;
  #L2ad1fc.  `@@ed.b.a` @type ^`fd.g` := v0 @kind object;
  #L2ad200.  return @kind void;
}
procedure `fd.g` `a`() @signature `Led/b;.a:()Lfd/g;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;

  #L2ad19c.  call temp:= `b`() @signature `Led/b;.b:()Lfd/g;` @kind static;
  #L2ad1a2.  v0:= temp @kind object;
  #L2ad1a4.  return v0 @kind object;
}
procedure `fd.g` `b`() @signature `Led/b;.b:()Lfd/g;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L2ad1b8.  v0:= `@@ed.b$a.a` @type ^`fd.g` @kind object;
  #L2ad1bc.  return v0 @kind object;
}
procedure `fd.g` `c`() @signature `Led/b;.c:()Lfd/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad1d0.  v0:= `@@ed.b.a` @type ^`fd.g` @kind object;
  #L2ad1d4.  call temp:= `e`(v0) @signature `Ldd/a;.e:(Lfd/g;)Lfd/g;` @kind static;
  #L2ad1da.  v0:= temp @kind object;
  #L2ad1dc.  return v0 @kind object;
}
