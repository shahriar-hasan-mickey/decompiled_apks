record `xd.b` @kind class @AccessFlag PUBLIC_FINAL extends `xd.a` @kind class {
  `xd.b$a` `xd.b.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`xd.b` v1 @kind this) @signature `Lxd/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3862a8.  call `<init>`(v1) @signature `Lxd/a;.<init>:()V` @kind direct;
  #L3862ae.  v0:= new `xd.b$a`;
  #L3862b2.  call `<init>`(v0) @signature `Lxd/b$a;.<init>:()V` @kind direct;
  #L3862b8.  v1.`xd.b.h` @type ^`xd.b$a` := v0 @kind object;
  #L3862bc.  return @kind void;
}
procedure `java.util.Random` `getImpl`(`xd.b` v2 @kind this) @signature `Lxd/b;.getImpl:()Ljava/util/Random;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L38627c.  v0:= v2.`xd.b.h` @type ^`xd.b$a` @kind object;
  #L386280.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L386286.  v0:= temp @kind object;
  #L386288.  v1:= "implStorage.get()" @kind object;
  #L38628c.  call `e`(v0, v1) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L386292.  v0:= (`java.util.Random`) v0 @kind object;
  #L386296.  return v0 @kind object;
}
