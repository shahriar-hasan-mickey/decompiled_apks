record `he.a$b` @kind class @AccessFlag ABSTRACT extends `okio.v` @kind interface {
  `okio.j` `he.a$b.g` @AccessFlag PROTECTED_FINAL;
  `boolean` `he.a$b.h` @AccessFlag PROTECTED;
  `he.a` `he.a$b.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`he.a$b` v1 @kind this, `he.a` v2 @kind object) @signature `Lhe/a$b;.<init>:(Lhe/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L2b543c.  v1.`he.a$b.i` @type ^`he.a` := v2 @kind object;
  #L2b5440.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5446.  v0:= new `okio.j`;
  #L2b544a.  call temp:= `n`(v2) @signature `Lhe/a;.n:(Lhe/a;)Lokio/e;` @kind static;
  #L2b5450.  v2:= temp @kind object;
  #L2b5452.  call temp:= `timeout`(v2) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2b5458.  v2:= temp @kind object;
  #L2b545a.  call `<init>`(v0, v2) @signature `Lokio/j;.<init>:(Lokio/w;)V` @kind direct;
  #L2b5460.  v1.`he.a$b.g` @type ^`okio.j` := v0 @kind object;
  #L2b5464.  return @kind void;
}
procedure `void` `<init>`(`he.a$b` v0 @kind this, `he.a` v1 @kind object, `he.a$a` v2 @kind object) @signature `Lhe/a$b;.<init>:(Lhe/a;Lhe/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b5478.  call `<init>`(v0, v1) @signature `Lhe/a$b;.<init>:(Lhe/a;)V` @kind direct;
  #L2b547e.  return @kind void;
}
procedure `void` `e`(`he.a$b` v3 @kind this) @signature `Lhe/a$b;.e:()V` @AccessFlag FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2b5490.  v0:= v3.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b5494.  call temp:= `l`(v0) @signature `Lhe/a;.l:(Lhe/a;)I` @kind static;
  #L2b549a.  v0:= temp;
  #L2b549c.  v1:= 6I;
  #L2b549e.  if v0 != v1 then goto L2b54a4;
  #L2b54a2.  return @kind void;
  #L2b54a4.  v0:= v3.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b54a8.  call temp:= `l`(v0) @signature `Lhe/a;.l:(Lhe/a;)I` @kind static;
  #L2b54ae.  v0:= temp;
  #L2b54b0.  v2:= 5I;
  #L2b54b2.  if v0 != v2 then goto L2b54d0;
  #L2b54b6.  v0:= v3.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b54ba.  v2:= v3.`he.a$b.g` @type ^`okio.j` @kind object;
  #L2b54be.  call `k`(v0, v2) @signature `Lhe/a;.k:(Lhe/a;Lokio/j;)V` @kind static;
  #L2b54c4.  v0:= v3.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b54c8.  call temp:= `m`(v0, v1) @signature `Lhe/a;.m:(Lhe/a;I)I` @kind static;
  #L2b54ce.  return @kind void;
  #L2b54d0.  v0:= new `java.lang.IllegalStateException`;
  #L2b54d4.  v1:= new `java.lang.StringBuilder`;
  #L2b54d8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b54de.  v2:= "state: " @kind object;
  #L2b54e2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b54e8.  v2:= v3.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b54ec.  call temp:= `l`(v2) @signature `Lhe/a;.l:(Lhe/a;)I` @kind static;
  #L2b54f2.  v2:= temp;
  #L2b54f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b54fa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b5500.  v1:= temp @kind object;
  #L2b5502.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b5508.  throw v0;
}
procedure `okio.w` `timeout`(`he.a$b` v1 @kind this) @signature `Lhe/a$b;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5424.  v0:= v1.`he.a$b.g` @type ^`okio.j` @kind object;
  #L2b5428.  return v0 @kind object;
}
procedure `long` `z0`(`he.a$b` v1 @kind this, `okio.c` v2 @kind object, `long` v3 ) @signature `Lhe/a$b;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b53d0.  v0:= v1.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b53d4.  call temp:= `n`(v0) @signature `Lhe/a;.n:(Lhe/a;)Lokio/e;` @kind static;
  #L2b53da.  v0:= temp @kind object;
  #L2b53dc.  call temp:= `z0`(v0, v2, v3) @signature `Lokio/v;.z0:(Lokio/c;J)J` @kind interface;
  #L2b53e2.  v2:= temp @kind wide;
  #L2b53e4.  return v2 @kind wide;
  #L2b53e6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L2b53e8.  v3:= v1.`he.a$b.i` @type ^`he.a` @kind object;
  #L2b53ec.  call temp:= `o`(v3) @signature `Lhe/a;.o:(Lhe/a;)Lokhttp3/internal/connection/e;` @kind static;
  #L2b53f2.  v3:= temp @kind object;
  #L2b53f4.  call `p`(v3) @signature `Lokhttp3/internal/connection/e;.p:()V` @kind virtual;
  #L2b53fa.  call `e`(v1) @signature `Lhe/a$b;.e:()V` @kind virtual;
  #L2b5400.  throw v2;
  catch `java.io.IOException` @[L2b53d0..L2b53e4] goto L2b53e6;
}
