record `he.a$e` @kind class @AccessFlag  extends `he.a$b` @kind class {
  `long` `he.a$e.j` @AccessFlag PRIVATE;
  `he.a` `he.a$e.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`he.a$e` v2 @kind this, `he.a` v3 @kind object, `long` v4 ) @signature `Lhe/a$e;.<init>:(Lhe/a;J)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b5a4c.  v2.`he.a$e.k` @type ^`he.a` := v3 @kind object;
  #L2b5a50.  v0:= 0I;
  #L2b5a52.  call `<init>`(v2, v3, v0) @signature `Lhe/a$b;.<init>:(Lhe/a;Lhe/a$a;)V` @kind direct;
  #L2b5a58.  v2.`he.a$e.j` @type ^`long` := v4 @kind wide;
  #L2b5a5c.  v0:= 0L;
  #L2b5a60.  v3:= lcmp(v4, v0);
  #L2b5a64.  if v3 != 0 then goto L2b5a6e;
  #L2b5a68.  call `e`(v2) @signature `Lhe/a$b;.e:()V` @kind virtual;
  #L2b5a6e.  return @kind void;
}
procedure `void` `close`(`he.a$e` v5 @kind this) @signature `Lhe/a$e;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b5a80.  v0:= v5.`he.a$b.h` @type ^`boolean` @kind boolean;
  #L2b5a84.  if v0 == 0 then goto L2b5a8a;
  #L2b5a88.  return @kind void;
  #L2b5a8a.  v0:= v5.`he.a$e.j` @type ^`long` @kind wide;
  #L2b5a8e.  v2:= 0L;
  #L2b5a92.  v4:= lcmp(v0, v2);
  #L2b5a96.  if v4 == 0 then goto L2b5ac6;
  #L2b5a9a.  v0:= 100I;
  #L2b5a9e.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b5aa2.  call temp:= `p`(v5, v0, v1) @signature `Lee/e;.p:(Lokio/v;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2b5aa8.  v0:= temp;
  #L2b5aaa.  if v0 != 0 then goto L2b5ac6;
  #L2b5aae.  v0:= v5.`he.a$e.k` @type ^`he.a` @kind object;
  #L2b5ab2.  call temp:= `o`(v0) @signature `Lhe/a;.o:(Lhe/a;)Lokhttp3/internal/connection/e;` @kind static;
  #L2b5ab8.  v0:= temp @kind object;
  #L2b5aba.  call `p`(v0) @signature `Lokhttp3/internal/connection/e;.p:()V` @kind virtual;
  #L2b5ac0.  call `e`(v5) @signature `Lhe/a$b;.e:()V` @kind virtual;
  #L2b5ac6.  v0:= 1I;
  #L2b5ac8.  v5.`he.a$b.h` @type ^`boolean` := v0 @kind boolean;
  #L2b5acc.  return @kind void;
}
procedure `long` `z0`(`he.a$e` v7 @kind this, `okio.c` v8 @kind object, `long` v9 ) @signature `Lhe/a$e;.z0:(Lokio/c;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b597c.  v0:= 0L;
  #L2b5980.  v2:= lcmp(v9, v0);
  #L2b5984.  if v2 < 0 then goto L2b5a0c;
  #L2b5988.  v2:= v7.`he.a$b.h` @type ^`boolean` @kind boolean;
  #L2b598c.  if v2 != 0 then goto L2b59fc;
  #L2b5990.  v2:= v7.`he.a$e.j` @type ^`long` @kind wide;
  #L2b5994.  v4:= -1L;
  #L2b5998.  v6:= lcmp(v2, v0);
  #L2b599c.  if v6 != 0 then goto L2b59a2;
  #L2b59a0.  return v4 @kind wide;
  #L2b59a2.  call temp:= `min`(v2, v9) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2b59a8.  v9:= temp @kind wide;
  #L2b59aa.  call temp:= `z0`(v7, v8, v9) @signature `Lhe/a$b;.z0:(Lokio/c;J)J` @kind super;
  #L2b59b0.  v8:= temp @kind wide;
  #L2b59b2.  v10:= lcmp(v8, v4);
  #L2b59b6.  if v10 == 0 then goto L2b59d4;
  #L2b59ba.  v2:= v7.`he.a$e.j` @type ^`long` @kind wide;
  #L2b59be.  v2:= v2 - v8 @kind long;
  #L2b59c0.  v7.`he.a$e.j` @type ^`long` := v2 @kind wide;
  #L2b59c4.  v10:= lcmp(v2, v0);
  #L2b59c8.  if v10 != 0 then goto L2b59d2;
  #L2b59cc.  call `e`(v7) @signature `Lhe/a$b;.e:()V` @kind virtual;
  #L2b59d2.  return v8 @kind wide;
  #L2b59d4.  v8:= v7.`he.a$e.k` @type ^`he.a` @kind object;
  #L2b59d8.  call temp:= `o`(v8) @signature `Lhe/a;.o:(Lhe/a;)Lokhttp3/internal/connection/e;` @kind static;
  #L2b59de.  v8:= temp @kind object;
  #L2b59e0.  call `p`(v8) @signature `Lokhttp3/internal/connection/e;.p:()V` @kind virtual;
  #L2b59e6.  v8:= new `java.net.ProtocolException`;
  #L2b59ea.  v9:= "unexpected end of stream" @kind object;
  #L2b59ee.  call `<init>`(v8, v9) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b59f4.  call `e`(v7) @signature `Lhe/a$b;.e:()V` @kind virtual;
  #L2b59fa.  throw v8;
  #L2b59fc.  v8:= new `java.lang.IllegalStateException`;
  #L2b5a00.  v9:= "closed" @kind object;
  #L2b5a04.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b5a0a.  throw v8;
  #L2b5a0c.  v8:= new `java.lang.IllegalArgumentException`;
  #L2b5a10.  v0:= new `java.lang.StringBuilder`;
  #L2b5a14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b5a1a.  v1:= "byteCount < 0: " @kind object;
  #L2b5a1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5a24.  call temp:= `append`(v0, v9) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5a2a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b5a30.  v9:= temp @kind object;
  #L2b5a32.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b5a38.  throw v8;
}
