record `he.a$c` @kind class @AccessFlag FINAL extends `okio.u` @kind interface {
  `okio.j` `he.a$c.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `he.a$c.h` @AccessFlag PRIVATE;
  `he.a` `he.a$c.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`he.a$c` v1 @kind this, `he.a` v2 @kind object) @signature `Lhe/a$c;.<init>:(Lhe/a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2b5534.  v1.`he.a$c.i` @type ^`he.a` := v2 @kind object;
  #L2b5538.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b553e.  v0:= new `okio.j`;
  #L2b5542.  call temp:= `j`(v2) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b5548.  v2:= temp @kind object;
  #L2b554a.  call temp:= `timeout`(v2) @signature `Lokio/u;.timeout:()Lokio/w;` @kind interface;
  #L2b5550.  v2:= temp @kind object;
  #L2b5552.  call `<init>`(v0, v2) @signature `Lokio/j;.<init>:(Lokio/w;)V` @kind direct;
  #L2b5558.  v1.`he.a$c.g` @type ^`okio.j` := v0 @kind object;
  #L2b555c.  return @kind void;
}
procedure `void` `close`(`he.a$c` v2 @kind this) @signature `Lhe/a$c;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5570.  @monitorenter v2
  #L2b5572.  v0:= v2.`he.a$c.h` @type ^`boolean` @kind boolean;
  #L2b5576.  if v0 == 0 then goto L2b557e;
  #L2b557a.  @monitorexit v2
  #L2b557c.  return @kind void;
  #L2b557e.  v0:= 1I;
  #L2b5580.  v2.`he.a$c.h` @type ^`boolean` := v0 @kind boolean;
  #L2b5584.  v0:= v2.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b5588.  call temp:= `j`(v0) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b558e.  v0:= temp @kind object;
  #L2b5590.  v1:= "0\r\n\r\n" @kind object;
  #L2b5594.  call temp:= `T`(v0, v1) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b559a.  v0:= v2.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b559e.  v1:= v2.`he.a$c.g` @type ^`okio.j` @kind object;
  #L2b55a2.  call `k`(v0, v1) @signature `Lhe/a;.k:(Lhe/a;Lokio/j;)V` @kind static;
  #L2b55a8.  v0:= v2.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b55ac.  v1:= 3I;
  #L2b55ae.  call temp:= `m`(v0, v1) @signature `Lhe/a;.m:(Lhe/a;I)I` @kind static;
  #L2b55b4.  @monitorexit v2
  #L2b55b6.  return @kind void;
  #L2b55b8.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b55ba.  @monitorexit v2
  #L2b55bc.  throw v0;
  catch `java.lang.Throwable` @[L2b5572..L2b5576] goto L2b55b8;
  catch `java.lang.Throwable` @[L2b5580..L2b55b4] goto L2b55b8;
}
procedure `void` `e0`(`he.a$c` v3 @kind this, `okio.c` v4 @kind object, `long` v5 ) @signature `Lhe/a$c;.e0:(Lokio/c;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b5634.  v0:= v3.`he.a$c.h` @type ^`boolean` @kind boolean;
  #L2b5638.  if v0 != 0 then goto L2b5698;
  #L2b563c.  v0:= 0L;
  #L2b5640.  v2:= lcmp(v5, v0);
  #L2b5644.  if v2 != 0 then goto L2b564a;
  #L2b5648.  return @kind void;
  #L2b564a.  v0:= v3.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b564e.  call temp:= `j`(v0) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b5654.  v0:= temp @kind object;
  #L2b5656.  call temp:= `f0`(v0, v5) @signature `Lokio/d;.f0:(J)Lokio/d;` @kind interface;
  #L2b565c.  v0:= v3.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b5660.  call temp:= `j`(v0) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b5666.  v0:= temp @kind object;
  #L2b5668.  v1:= "\r\n" @kind object;
  #L2b566c.  call temp:= `T`(v0, v1) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b5672.  v0:= v3.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b5676.  call temp:= `j`(v0) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b567c.  v0:= temp @kind object;
  #L2b567e.  call `e0`(v0, v4, v5) @signature `Lokio/u;.e0:(Lokio/c;J)V` @kind interface;
  #L2b5684.  v4:= v3.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b5688.  call temp:= `j`(v4) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b568e.  v4:= temp @kind object;
  #L2b5690.  call temp:= `T`(v4, v1) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b5696.  return @kind void;
  #L2b5698.  v4:= new `java.lang.IllegalStateException`;
  #L2b569c.  v5:= "closed" @kind object;
  #L2b56a0.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b56a6.  throw v4;
}
procedure `void` `flush`(`he.a$c` v1 @kind this) @signature `Lhe/a$c;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b55e4.  @monitorenter v1
  #L2b55e6.  v0:= v1.`he.a$c.h` @type ^`boolean` @kind boolean;
  #L2b55ea.  if v0 == 0 then goto L2b55f2;
  #L2b55ee.  @monitorexit v1
  #L2b55f0.  return @kind void;
  #L2b55f2.  v0:= v1.`he.a$c.i` @type ^`he.a` @kind object;
  #L2b55f6.  call temp:= `j`(v0) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @kind static;
  #L2b55fc.  v0:= temp @kind object;
  #L2b55fe.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L2b5604.  @monitorexit v1
  #L2b5606.  return @kind void;
  #L2b5608.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b560a.  @monitorexit v1
  #L2b560c.  throw v0;
  catch `java.lang.Throwable` @[L2b55e6..L2b55ea] goto L2b5608;
  catch `java.lang.Throwable` @[L2b55f2..L2b5604] goto L2b5608;
}
procedure `okio.w` `timeout`(`he.a$c` v1 @kind this) @signature `Lhe/a$c;.timeout:()Lokio/w;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b551c.  v0:= v1.`he.a$c.g` @type ^`okio.j` @kind object;
  #L2b5520.  return v0 @kind object;
}
