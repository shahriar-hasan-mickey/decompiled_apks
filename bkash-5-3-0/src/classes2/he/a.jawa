record `he.a` @kind class @AccessFlag PUBLIC_FINAL extends `ge.c` @kind interface {
  `okhttp3.b0` `he.a.a` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.connection.e` `he.a.b` @AccessFlag PRIVATE_FINAL;
  `okio.e` `he.a.c` @AccessFlag PRIVATE_FINAL;
  `okio.d` `he.a.d` @AccessFlag PRIVATE_FINAL;
  `int` `he.a.e` @AccessFlag PRIVATE;
  `long` `he.a.f` @AccessFlag PRIVATE;
  `okhttp3.w` `he.a.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`he.a` v2 @kind this, `okhttp3.b0` v3 @kind object, `okhttp3.internal.connection.e` v4 @kind object, `okio.e` v5 @kind object, `okio.d` v6 @kind object) @signature `Lhe/a;.<init>:(Lokhttp3/b0;Lokhttp3/internal/connection/e;Lokio/e;Lokio/d;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b62fc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b6302.  v0:= 0I;
  #L2b6304.  v2.`he.a.e` @type ^`int` := v0;
  #L2b6308.  v0:= 262144L;
  #L2b630e.  v2.`he.a.f` @type ^`long` := v0 @kind wide;
  #L2b6312.  v2.`he.a.a` @type ^`okhttp3.b0` := v3 @kind object;
  #L2b6316.  v2.`he.a.b` @type ^`okhttp3.internal.connection.e` := v4 @kind object;
  #L2b631a.  v2.`he.a.c` @type ^`okio.e` := v5 @kind object;
  #L2b631e.  v2.`he.a.d` @type ^`okio.d` := v6 @kind object;
  #L2b6322.  return @kind void;
}
procedure `okhttp3.b0` `i`(`he.a` v0 @kind object) @signature `Lhe/a;.i:(Lhe/a;)Lokhttp3/b0;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5e44.  v0:= v0.`he.a.a` @type ^`okhttp3.b0` @kind object;
  #L2b5e48.  return v0 @kind object;
}
procedure `okio.d` `j`(`he.a` v0 @kind object) @signature `Lhe/a;.j:(Lhe/a;)Lokio/d;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5fc8.  v0:= v0.`he.a.d` @type ^`okio.d` @kind object;
  #L2b5fcc.  return v0 @kind object;
}
procedure `void` `k`(`he.a` v0 @kind object, `okio.j` v1 @kind object) @signature `Lhe/a;.k:(Lhe/a;Lokio/j;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b6334.  call `s`(v0, v1) @signature `Lhe/a;.s:(Lokio/j;)V` @kind direct;
  #L2b633a.  return @kind void;
}
procedure `int` `l`(`he.a` v0 @kind object) @signature `Lhe/a;.l:(Lhe/a;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5cfc.  v0:= v0.`he.a.e` @type ^`int`;
  #L2b5d00.  return v0;
}
procedure `int` `m`(`he.a` v0 @kind object, `int` v1 ) @signature `Lhe/a;.m:(Lhe/a;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5d14.  v0.`he.a.e` @type ^`int` := v1;
  #L2b5d18.  return v1;
}
procedure `okio.e` `n`(`he.a` v0 @kind object) @signature `Lhe/a;.n:(Lhe/a;)Lokio/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5fe0.  v0:= v0.`he.a.c` @type ^`okio.e` @kind object;
  #L2b5fe4.  return v0 @kind object;
}
procedure `okhttp3.internal.connection.e` `o`(`he.a` v0 @kind object) @signature `Lhe/a;.o:(Lhe/a;)Lokhttp3/internal/connection/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5f98.  v0:= v0.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b5f9c.  return v0 @kind object;
}
procedure `okhttp3.w` `p`(`he.a` v0 @kind object) @signature `Lhe/a;.p:(Lhe/a;)Lokhttp3/w;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5db4.  v0:= v0.`he.a.g` @type ^`okhttp3.w` @kind object;
  #L2b5db8.  return v0 @kind object;
}
procedure `okhttp3.w` `q`(`he.a` v0 @kind object, `okhttp3.w` v1 @kind object) @signature `Lhe/a;.q:(Lhe/a;Lokhttp3/w;)Lokhttp3/w;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5dcc.  v0.`he.a.g` @type ^`okhttp3.w` := v1 @kind object;
  #L2b5dd0.  return v1 @kind object;
}
procedure `okhttp3.w` `r`(`he.a` v0 @kind object) @signature `Lhe/a;.r:(Lhe/a;)Lokhttp3/w;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2b5de4.  call temp:= `z`(v0) @signature `Lhe/a;.z:()Lokhttp3/w;` @kind direct;
  #L2b5dea.  v0:= temp @kind object;
  #L2b5dec.  return v0 @kind object;
}
procedure `void` `s`(`he.a` v2 @kind this, `okio.j` v3 @kind object) @signature `Lhe/a;.s:(Lokio/j;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b636c.  call temp:= `i`(v3) @signature `Lokio/j;.i:()Lokio/w;` @kind virtual;
  #L2b6372.  v0:= temp @kind object;
  #L2b6374.  v1:= `@@okio.w.d` @type ^`okio.w` @kind object;
  #L2b6378.  call temp:= `j`(v3, v1) @signature `Lokio/j;.j:(Lokio/w;)Lokio/j;` @kind virtual;
  #L2b637e.  call temp:= `a`(v0) @signature `Lokio/w;.a:()Lokio/w;` @kind virtual;
  #L2b6384.  call temp:= `b`(v0) @signature `Lokio/w;.b:()Lokio/w;` @kind virtual;
  #L2b638a.  return @kind void;
}
procedure `okio.u` `t`(`he.a` v3 @kind this) @signature `Lhe/a;.t:()Lokio/u;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b6088.  v0:= v3.`he.a.e` @type ^`int`;
  #L2b608c.  v1:= 1I;
  #L2b608e.  if v0 != v1 then goto L2b60a4;
  #L2b6092.  v0:= 2I;
  #L2b6094.  v3.`he.a.e` @type ^`int` := v0;
  #L2b6098.  v0:= new `he.a$c`;
  #L2b609c.  call `<init>`(v0, v3) @signature `Lhe/a$c;.<init>:(Lhe/a;)V` @kind direct;
  #L2b60a2.  return v0 @kind object;
  #L2b60a4.  v0:= new `java.lang.IllegalStateException`;
  #L2b60a8.  v1:= new `java.lang.StringBuilder`;
  #L2b60ac.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b60b2.  v2:= "state: " @kind object;
  #L2b60b6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b60bc.  v2:= v3.`he.a.e` @type ^`int`;
  #L2b60c0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b60c6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b60cc.  v1:= temp @kind object;
  #L2b60ce.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b60d4.  throw v0;
}
procedure `okio.v` `u`(`he.a` v2 @kind this, `okhttp3.x` v3 @kind object) @signature `Lhe/a;.u:(Lokhttp3/x;)Lokio/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b6148.  v0:= v2.`he.a.e` @type ^`int`;
  #L2b614c.  v1:= 4I;
  #L2b614e.  if v0 != v1 then goto L2b6164;
  #L2b6152.  v0:= 5I;
  #L2b6154.  v2.`he.a.e` @type ^`int` := v0;
  #L2b6158.  v0:= new `he.a$d`;
  #L2b615c.  call `<init>`(v0, v2, v3) @signature `Lhe/a$d;.<init>:(Lhe/a;Lokhttp3/x;)V` @kind direct;
  #L2b6162.  return v0 @kind object;
  #L2b6164.  v3:= new `java.lang.IllegalStateException`;
  #L2b6168.  v0:= new `java.lang.StringBuilder`;
  #L2b616c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b6172.  v1:= "state: " @kind object;
  #L2b6176.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b617c.  v1:= v2.`he.a.e` @type ^`int`;
  #L2b6180.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6186.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b618c.  v0:= temp @kind object;
  #L2b618e.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6194.  throw v3;
}
procedure `okio.v` `v`(`he.a` v2 @kind this, `long` v3 ) @signature `Lhe/a;.v:(J)Lokio/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2b61a8.  v0:= v2.`he.a.e` @type ^`int`;
  #L2b61ac.  v1:= 4I;
  #L2b61ae.  if v0 != v1 then goto L2b61c4;
  #L2b61b2.  v0:= 5I;
  #L2b61b4.  v2.`he.a.e` @type ^`int` := v0;
  #L2b61b8.  v0:= new `he.a$e`;
  #L2b61bc.  call `<init>`(v0, v2, v3) @signature `Lhe/a$e;.<init>:(Lhe/a;J)V` @kind direct;
  #L2b61c2.  return v0 @kind object;
  #L2b61c4.  v3:= new `java.lang.IllegalStateException`;
  #L2b61c8.  v4:= new `java.lang.StringBuilder`;
  #L2b61cc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b61d2.  v0:= "state: " @kind object;
  #L2b61d6.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b61dc.  v0:= v2.`he.a.e` @type ^`int`;
  #L2b61e0.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b61e6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b61ec.  v4:= temp @kind object;
  #L2b61ee.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b61f4.  throw v3;
}
procedure `okio.u` `w`(`he.a` v3 @kind this) @signature `Lhe/a;.w:()Lokio/u;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b60e8.  v0:= v3.`he.a.e` @type ^`int`;
  #L2b60ec.  v1:= 1I;
  #L2b60ee.  if v0 != v1 then goto L2b6106;
  #L2b60f2.  v0:= 2I;
  #L2b60f4.  v3.`he.a.e` @type ^`int` := v0;
  #L2b60f8.  v0:= new `he.a$f`;
  #L2b60fc.  v1:= 0I;
  #L2b60fe.  call `<init>`(v0, v3, v1) @signature `Lhe/a$f;.<init>:(Lhe/a;Lhe/a$a;)V` @kind direct;
  #L2b6104.  return v0 @kind object;
  #L2b6106.  v0:= new `java.lang.IllegalStateException`;
  #L2b610a.  v1:= new `java.lang.StringBuilder`;
  #L2b610e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b6114.  v2:= "state: " @kind object;
  #L2b6118.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b611e.  v2:= v3.`he.a.e` @type ^`int`;
  #L2b6122.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6128.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b612e.  v1:= temp @kind object;
  #L2b6130.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6136.  throw v0;
}
procedure `okio.v` `x`(`he.a` v3 @kind this) @signature `Lhe/a;.x:()Lokio/v;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b6208.  v0:= v3.`he.a.e` @type ^`int`;
  #L2b620c.  v1:= 4I;
  #L2b620e.  if v0 != v1 then goto L2b6230;
  #L2b6212.  v0:= 5I;
  #L2b6214.  v3.`he.a.e` @type ^`int` := v0;
  #L2b6218.  v0:= v3.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b621c.  call `p`(v0) @signature `Lokhttp3/internal/connection/e;.p:()V` @kind virtual;
  #L2b6222.  v0:= new `he.a$g`;
  #L2b6226.  v1:= 0I;
  #L2b6228.  call `<init>`(v0, v3, v1) @signature `Lhe/a$g;.<init>:(Lhe/a;Lhe/a$a;)V` @kind direct;
  #L2b622e.  return v0 @kind object;
  #L2b6230.  v0:= new `java.lang.IllegalStateException`;
  #L2b6234.  v1:= new `java.lang.StringBuilder`;
  #L2b6238.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b623e.  v2:= "state: " @kind object;
  #L2b6242.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6248.  v2:= v3.`he.a.e` @type ^`int`;
  #L2b624c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b6252.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b6258.  v1:= temp @kind object;
  #L2b625a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6260.  throw v0;
}
procedure `java.lang.String` `y`(`he.a` v5 @kind this) @signature `Lhe/a;.y:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b5d2c.  v0:= v5.`he.a.c` @type ^`okio.e` @kind object;
  #L2b5d30.  v1:= v5.`he.a.f` @type ^`long` @kind wide;
  #L2b5d34.  call temp:= `M`(v0, v1) @signature `Lokio/e;.M:(J)Ljava/lang/String;` @kind interface;
  #L2b5d3a.  v0:= temp @kind object;
  #L2b5d3c.  v1:= v5.`he.a.f` @type ^`long` @kind wide;
  #L2b5d40.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b5d46.  v3:= temp;
  #L2b5d48.  v3:= (`long`) v3 @kind i2l;
  #L2b5d4a.  v1:= v1 - v3 @kind long;
  #L2b5d4c.  v5.`he.a.f` @type ^`long` := v1 @kind wide;
  #L2b5d50.  return v0 @kind object;
}
procedure `okhttp3.w` `z`(`he.a` v3 @kind this) @signature `Lhe/a;.z:()Lokhttp3/w;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2b5e00.  v0:= new `okhttp3.w$a`;
  #L2b5e04.  call `<init>`(v0) @signature `Lokhttp3/w$a;.<init>:()V` @kind direct;
  #L2b5e0a.  call temp:= `y`(v3) @signature `Lhe/a;.y:()Ljava/lang/String;` @kind direct;
  #L2b5e10.  v1:= temp @kind object;
  #L2b5e12.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b5e18.  v2:= temp;
  #L2b5e1a.  if v2 == 0 then goto L2b5e2a;
  #L2b5e1e.  v2:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L2b5e22.  call `a`(v2, v0, v1) @signature `Lee/a;.a:(Lokhttp3/w$a;Ljava/lang/String;)V` @kind virtual;
  #L2b5e28.  goto L2b5e0a;
  #L2b5e2a.  call temp:= `e`(v0) @signature `Lokhttp3/w$a;.e:()Lokhttp3/w;` @kind virtual;
  #L2b5e30.  v0:= temp @kind object;
  #L2b5e32.  return v0 @kind object;
}
procedure `void` `A`(`he.a` v4 @kind this, `okhttp3.g0` v5 @kind object) @signature `Lhe/a;.A:(Lokhttp3/g0;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b63d4.  call temp:= `b`(v5) @signature `Lge/e;.b:(Lokhttp3/g0;)J` @kind static;
  #L2b63da.  v0:= temp @kind wide;
  #L2b63dc.  v2:= -1L;
  #L2b63e0.  v5:= lcmp(v0, v2);
  #L2b63e4.  if v5 != 0 then goto L2b63ea;
  #L2b63e8.  return @kind void;
  #L2b63ea.  call temp:= `v`(v4, v0) @signature `Lhe/a;.v:(J)Lokio/v;` @kind direct;
  #L2b63f0.  v5:= temp @kind object;
  #L2b63f2.  v0:= 2147483647I;
  #L2b63f8.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L2b63fc.  call temp:= `F`(v5, v0, v1) @signature `Lee/e;.F:(Lokio/v;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2b6402.  call `close`(v5) @signature `Lokio/v;.close:()V` @kind interface;
  #L2b6408.  return @kind void;
}
procedure `void` `B`(`he.a` v4 @kind this, `okhttp3.w` v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lhe/a;.B:(Lokhttp3/w;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b641c.  v0:= v4.`he.a.e` @type ^`int`;
  #L2b6420.  if v0 != 0 then goto L2b6496;
  #L2b6424.  v0:= v4.`he.a.d` @type ^`okio.d` @kind object;
  #L2b6428.  call temp:= `T`(v0, v6) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b642e.  v6:= temp @kind object;
  #L2b6430.  v0:= "\r\n" @kind object;
  #L2b6434.  call temp:= `T`(v6, v0) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b643a.  v6:= 0I;
  #L2b643c.  call temp:= `h`(v5) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2b6442.  v1:= temp;
  #L2b6444.  if v6 >= v1 then goto L2b6484;
  #L2b6448.  v2:= v4.`he.a.d` @type ^`okio.d` @kind object;
  #L2b644c.  call temp:= `e`(v5, v6) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L2b6452.  v3:= temp @kind object;
  #L2b6454.  call temp:= `T`(v2, v3) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b645a.  v2:= temp @kind object;
  #L2b645c.  v3:= ": " @kind object;
  #L2b6460.  call temp:= `T`(v2, v3) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b6466.  v2:= temp @kind object;
  #L2b6468.  call temp:= `i`(v5, v6) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2b646e.  v3:= temp @kind object;
  #L2b6470.  call temp:= `T`(v2, v3) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b6476.  v2:= temp @kind object;
  #L2b6478.  call temp:= `T`(v2, v0) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b647e.  v6:= v6 + 1;
  #L2b6482.  goto L2b6444;
  #L2b6484.  v5:= v4.`he.a.d` @type ^`okio.d` @kind object;
  #L2b6488.  call temp:= `T`(v5, v0) @signature `Lokio/d;.T:(Ljava/lang/String;)Lokio/d;` @kind interface;
  #L2b648e.  v5:= 1I;
  #L2b6490.  v4.`he.a.e` @type ^`int` := v5;
  #L2b6494.  return @kind void;
  #L2b6496.  v5:= new `java.lang.IllegalStateException`;
  #L2b649a.  v6:= new `java.lang.StringBuilder`;
  #L2b649e.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b64a4.  v0:= "state: " @kind object;
  #L2b64a8.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b64ae.  v0:= v4.`he.a.e` @type ^`int`;
  #L2b64b2.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b64b8.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b64be.  v6:= temp @kind object;
  #L2b64c0.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b64c6.  throw v5;
}
procedure `void` `a`(`he.a` v1 @kind this) @signature `Lhe/a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b639c.  v0:= v1.`he.a.d` @type ^`okio.d` @kind object;
  #L2b63a0.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L2b63a6.  return @kind void;
}
procedure `void` `b`(`he.a` v1 @kind this, `okhttp3.e0` v2 @kind object) @signature `Lhe/a;.b:(Lokhttp3/e0;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b64d8.  v0:= v1.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b64dc.  call temp:= `q`(v0) @signature `Lokhttp3/internal/connection/e;.q:()Lokhttp3/i0;` @kind virtual;
  #L2b64e2.  v0:= temp @kind object;
  #L2b64e4.  call temp:= `b`(v0) @signature `Lokhttp3/i0;.b:()Ljava/net/Proxy;` @kind virtual;
  #L2b64ea.  v0:= temp @kind object;
  #L2b64ec.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L2b64f2.  v0:= temp @kind object;
  #L2b64f4.  call temp:= `a`(v2, v0) @signature `Lge/i;.a:(Lokhttp3/e0;Ljava/net/Proxy$Type;)Ljava/lang/String;` @kind static;
  #L2b64fa.  v0:= temp @kind object;
  #L2b64fc.  call temp:= `d`(v2) @signature `Lokhttp3/e0;.d:()Lokhttp3/w;` @kind virtual;
  #L2b6502.  v2:= temp @kind object;
  #L2b6504.  call `B`(v1, v2, v0) @signature `Lhe/a;.B:(Lokhttp3/w;Ljava/lang/String;)V` @kind virtual;
  #L2b650a.  return @kind void;
}
procedure `okio.v` `c`(`he.a` v4 @kind this, `okhttp3.g0` v5 @kind object) @signature `Lhe/a;.c:(Lokhttp3/g0;)Lokio/v;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b6274.  call temp:= `c`(v5) @signature `Lge/e;.c:(Lokhttp3/g0;)Z` @kind static;
  #L2b627a.  v0:= temp;
  #L2b627c.  if v0 != 0 then goto L2b628e;
  #L2b6280.  v0:= 0L;
  #L2b6284.  call temp:= `v`(v4, v0) @signature `Lhe/a;.v:(J)Lokio/v;` @kind direct;
  #L2b628a.  v5:= temp @kind object;
  #L2b628c.  return v5 @kind object;
  #L2b628e.  v0:= "Transfer-Encoding" @kind object;
  #L2b6292.  call temp:= `s`(v5, v0) @signature `Lokhttp3/g0;.s:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b6298.  v0:= temp @kind object;
  #L2b629a.  v1:= "chunked" @kind object;
  #L2b629e.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b62a4.  v0:= temp;
  #L2b62a6.  if v0 == 0 then goto L2b62c4;
  #L2b62aa.  call temp:= `Y`(v5) @signature `Lokhttp3/g0;.Y:()Lokhttp3/e0;` @kind virtual;
  #L2b62b0.  v5:= temp @kind object;
  #L2b62b2.  call temp:= `h`(v5) @signature `Lokhttp3/e0;.h:()Lokhttp3/x;` @kind virtual;
  #L2b62b8.  v5:= temp @kind object;
  #L2b62ba.  call temp:= `u`(v4, v5) @signature `Lhe/a;.u:(Lokhttp3/x;)Lokio/v;` @kind direct;
  #L2b62c0.  v5:= temp @kind object;
  #L2b62c2.  return v5 @kind object;
  #L2b62c4.  call temp:= `b`(v5) @signature `Lge/e;.b:(Lokhttp3/g0;)J` @kind static;
  #L2b62ca.  v0:= temp @kind wide;
  #L2b62cc.  v2:= -1L;
  #L2b62d0.  v5:= lcmp(v0, v2);
  #L2b62d4.  if v5 == 0 then goto L2b62e2;
  #L2b62d8.  call temp:= `v`(v4, v0) @signature `Lhe/a;.v:(J)Lokio/v;` @kind direct;
  #L2b62de.  v5:= temp @kind object;
  #L2b62e0.  return v5 @kind object;
  #L2b62e2.  call temp:= `x`(v4) @signature `Lhe/a;.x:()Lokio/v;` @kind direct;
  #L2b62e8.  v5:= temp @kind object;
  #L2b62ea.  return v5 @kind object;
}
procedure `void` `cancel`(`he.a` v1 @kind this) @signature `Lhe/a;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b634c.  v0:= v1.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b6350.  if v0 == 0 then goto L2b635a;
  #L2b6354.  call `c`(v0) @signature `Lokhttp3/internal/connection/e;.c:()V` @kind virtual;
  #L2b635a.  return @kind void;
}
procedure `okhttp3.g0$a` `d`(`he.a` v4 @kind this, `boolean` v5 ) @signature `Lhe/a;.d:(Z)Lokhttp3/g0$a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5e5c.  v0:= v4.`he.a.e` @type ^`int`;
  #L2b5e60.  v1:= 3I;
  #L2b5e62.  v2:= 1I;
  #L2b5e64.  if v0 == v2 then goto L2b5ea0;
  #L2b5e68.  if v0 != v1 then goto L2b5e6e;
  #L2b5e6c.  goto L2b5ea0;
  #L2b5e6e.  v5:= new `java.lang.IllegalStateException`;
  #L2b5e72.  v0:= new `java.lang.StringBuilder`;
  #L2b5e76.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b5e7c.  v1:= "state: " @kind object;
  #L2b5e80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5e86.  v1:= v4.`he.a.e` @type ^`int`;
  #L2b5e8a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5e90.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b5e96.  v0:= temp @kind object;
  #L2b5e98.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b5e9e.  throw v5;
  #L2b5ea0.  call temp:= `y`(v4) @signature `Lhe/a;.y:()Ljava/lang/String;` @kind direct;
  #L2b5ea6.  v0:= temp @kind object;
  #L2b5ea8.  call temp:= `a`(v0) @signature `Lge/k;.a:(Ljava/lang/String;)Lge/k;` @kind static;
  #L2b5eae.  v0:= temp @kind object;
  #L2b5eb0.  v2:= new `okhttp3.g0$a`;
  #L2b5eb4.  call `<init>`(v2) @signature `Lokhttp3/g0$a;.<init>:()V` @kind direct;
  #L2b5eba.  v3:= v0.`ge.k.a` @type ^`okhttp3.c0` @kind object;
  #L2b5ebe.  call temp:= `o`(v2, v3) @signature `Lokhttp3/g0$a;.o:(Lokhttp3/c0;)Lokhttp3/g0$a;` @kind virtual;
  #L2b5ec4.  v2:= temp @kind object;
  #L2b5ec6.  v3:= v0.`ge.k.b` @type ^`int`;
  #L2b5eca.  call temp:= `g`(v2, v3) @signature `Lokhttp3/g0$a;.g:(I)Lokhttp3/g0$a;` @kind virtual;
  #L2b5ed0.  v2:= temp @kind object;
  #L2b5ed2.  v3:= v0.`ge.k.c` @type ^`java.lang.String` @kind object;
  #L2b5ed6.  call temp:= `l`(v2, v3) @signature `Lokhttp3/g0$a;.l:(Ljava/lang/String;)Lokhttp3/g0$a;` @kind virtual;
  #L2b5edc.  v2:= temp @kind object;
  #L2b5ede.  call temp:= `z`(v4) @signature `Lhe/a;.z:()Lokhttp3/w;` @kind direct;
  #L2b5ee4.  v3:= temp @kind object;
  #L2b5ee6.  call temp:= `j`(v2, v3) @signature `Lokhttp3/g0$a;.j:(Lokhttp3/w;)Lokhttp3/g0$a;` @kind virtual;
  #L2b5eec.  v2:= temp @kind object;
  #L2b5eee.  v3:= 100I;
  #L2b5ef2.  if v5 == 0 then goto L2b5f02;
  #L2b5ef6.  v5:= v0.`ge.k.b` @type ^`int`;
  #L2b5efa.  if v5 != v3 then goto L2b5f02;
  #L2b5efe.  v5:= 0I;
  #L2b5f00.  return v5 @kind object;
  #L2b5f02.  v5:= v0.`ge.k.b` @type ^`int`;
  #L2b5f06.  if v5 != v3 then goto L2b5f10;
  #L2b5f0a.  v4.`he.a.e` @type ^`int` := v1;
  #L2b5f0e.  return v2 @kind object;
  #L2b5f10.  v5:= 4I;
  #L2b5f12.  v4.`he.a.e` @type ^`int` := v5;
  #L2b5f16.  return v2 @kind object;
  #L2b5f18.  v5:= Exception @type ^`java.io.EOFException` @kind object;
  #L2b5f1a.  v0:= v4.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b5f1e.  if v0 == 0 then goto L2b5f44;
  #L2b5f22.  call temp:= `q`(v0) @signature `Lokhttp3/internal/connection/e;.q:()Lokhttp3/i0;` @kind virtual;
  #L2b5f28.  v0:= temp @kind object;
  #L2b5f2a.  call temp:= `a`(v0) @signature `Lokhttp3/i0;.a:()Lokhttp3/a;` @kind virtual;
  #L2b5f30.  v0:= temp @kind object;
  #L2b5f32.  call temp:= `l`(v0) @signature `Lokhttp3/a;.l:()Lokhttp3/x;` @kind virtual;
  #L2b5f38.  v0:= temp @kind object;
  #L2b5f3a.  call temp:= `B`(v0) @signature `Lokhttp3/x;.B:()Ljava/lang/String;` @kind virtual;
  #L2b5f40.  v0:= temp @kind object;
  #L2b5f42.  goto L2b5f48;
  #L2b5f44.  v0:= "unknown" @kind object;
  #L2b5f48.  v1:= new `java.io.IOException`;
  #L2b5f4c.  v2:= new `java.lang.StringBuilder`;
  #L2b5f50.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b5f56.  v3:= "unexpected end of stream on " @kind object;
  #L2b5f5a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5f60.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b5f66.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b5f6c.  v0:= temp @kind object;
  #L2b5f6e.  call `<init>`(v1, v0, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2b5f74.  throw v1;
  catch `java.io.EOFException` @[L2b5ea0..L2b5f16] goto L2b5f18;
}
procedure `okhttp3.internal.connection.e` `e`(`he.a` v1 @kind this) @signature `Lhe/a;.e:()Lokhttp3/internal/connection/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b5fb0.  v0:= v1.`he.a.b` @type ^`okhttp3.internal.connection.e` @kind object;
  #L2b5fb4.  return v0 @kind object;
}
procedure `void` `f`(`he.a` v1 @kind this) @signature `Lhe/a;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b63b8.  v0:= v1.`he.a.d` @type ^`okio.d` @kind object;
  #L2b63bc.  call `flush`(v0) @signature `Lokio/d;.flush:()V` @kind interface;
  #L2b63c2.  return @kind void;
}
procedure `long` `g`(`he.a` v2 @kind this, `okhttp3.g0` v3 @kind object) @signature `Lhe/a;.g:(Lokhttp3/g0;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5d64.  call temp:= `c`(v3) @signature `Lge/e;.c:(Lokhttp3/g0;)Z` @kind static;
  #L2b5d6a.  v0:= temp;
  #L2b5d6c.  if v0 != 0 then goto L2b5d76;
  #L2b5d70.  v0:= 0L;
  #L2b5d74.  return v0 @kind wide;
  #L2b5d76.  v0:= "Transfer-Encoding" @kind object;
  #L2b5d7a.  call temp:= `s`(v3, v0) @signature `Lokhttp3/g0;.s:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b5d80.  v0:= temp @kind object;
  #L2b5d82.  v1:= "chunked" @kind object;
  #L2b5d86.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b5d8c.  v0:= temp;
  #L2b5d8e.  if v0 == 0 then goto L2b5d98;
  #L2b5d92.  v0:= -1L;
  #L2b5d96.  return v0 @kind wide;
  #L2b5d98.  call temp:= `b`(v3) @signature `Lge/e;.b:(Lokhttp3/g0;)J` @kind static;
  #L2b5d9e.  v0:= temp @kind wide;
  #L2b5da0.  return v0 @kind wide;
}
procedure `okio.u` `h`(`he.a` v2 @kind this, `okhttp3.e0` v3 @kind object, `long` v4 ) @signature `Lhe/a;.h:(Lokhttp3/e0;J)Lokio/u;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5ff8.  call temp:= `a`(v3) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b5ffe.  v0:= temp @kind object;
  #L2b6000.  if v0 == 0 then goto L2b602a;
  #L2b6004.  call temp:= `a`(v3) @signature `Lokhttp3/e0;.a:()Lokhttp3/f0;` @kind virtual;
  #L2b600a.  v0:= temp @kind object;
  #L2b600c.  call temp:= `f`(v0) @signature `Lokhttp3/f0;.f:()Z` @kind virtual;
  #L2b6012.  v0:= temp;
  #L2b6014.  if v0 != 0 then goto L2b601a;
  #L2b6018.  goto L2b602a;
  #L2b601a.  v3:= new `java.net.ProtocolException`;
  #L2b601e.  v4:= "Duplex connections are not supported for HTTP/1" @kind object;
  #L2b6022.  call `<init>`(v3, v4) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6028.  throw v3;
  #L2b602a.  v0:= "Transfer-Encoding" @kind object;
  #L2b602e.  call temp:= `c`(v3, v0) @signature `Lokhttp3/e0;.c:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2b6034.  v3:= temp @kind object;
  #L2b6036.  v0:= "chunked" @kind object;
  #L2b603a.  call temp:= `equalsIgnoreCase`(v0, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L2b6040.  v3:= temp;
  #L2b6042.  if v3 == 0 then goto L2b6050;
  #L2b6046.  call temp:= `t`(v2) @signature `Lhe/a;.t:()Lokio/u;` @kind direct;
  #L2b604c.  v3:= temp @kind object;
  #L2b604e.  return v3 @kind object;
  #L2b6050.  v0:= -1L;
  #L2b6054.  v3:= lcmp(v4, v0);
  #L2b6058.  if v3 == 0 then goto L2b6066;
  #L2b605c.  call temp:= `w`(v2) @signature `Lhe/a;.w:()Lokio/u;` @kind direct;
  #L2b6062.  v3:= temp @kind object;
  #L2b6064.  return v3 @kind object;
  #L2b6066.  v3:= new `java.lang.IllegalStateException`;
  #L2b606a.  v4:= "Cannot stream a request body without chunked encoding or a known content length!" @kind object;
  #L2b606e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b6074.  throw v3;
}
