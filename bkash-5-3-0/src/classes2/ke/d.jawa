record `ke.d` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `ke.d` `@@ke.d.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lke/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30505c.  v0:= new `ke.d`;
  #L305060.  call `<init>`(v0) @signature `Lke/d;.<init>:()V` @kind direct;
  #L305066.  `@@ke.d.a` @type ^`ke.d` := v0 @kind object;
  #L30506a.  return @kind void;
}
procedure `void` `<init>`(`ke.d` v0 @kind this) @signature `Lke/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L30507c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L305082.  return @kind void;
}
procedure `java.util.List` `a`(`java.security.cert.X509Certificate` v4 @kind object) @signature `Lke/d;.a:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304f50.  v0:= 7I;
  #L304f52.  call temp:= `b`(v4, v0) @signature `Lke/d;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L304f58.  v0:= temp @kind object;
  #L304f5a.  v1:= 2I;
  #L304f5c.  call temp:= `b`(v4, v1) @signature `Lke/d;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L304f62.  v4:= temp @kind object;
  #L304f64.  v1:= new `java.util.ArrayList`;
  #L304f68.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304f6e.  v2:= temp;
  #L304f70.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304f76.  v3:= temp;
  #L304f78.  v2:= v2 + v3 @kind int;
  #L304f7a.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L304f80.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L304f86.  call temp:= `addAll`(v1, v4) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L304f8c.  return v1 @kind object;
}
procedure `java.util.List` `b`(`java.security.cert.X509Certificate` v4 @kind object, `int` v5 ) @signature `Lke/d;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304fa0.  v0:= new `java.util.ArrayList`;
  #L304fa4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L304faa.  call temp:= `getSubjectAlternativeNames`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L304fb0.  v4:= temp @kind object;
  #L304fb2.  if v4 != 0 then goto L304fc0;
  #L304fb6.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L304fbc.  v4:= temp @kind object;
  #L304fbe.  return v4 @kind object;
  #L304fc0.  call temp:= `iterator`(v4) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L304fc6.  v4:= temp @kind object;
  #L304fc8.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L304fce.  v1:= temp;
  #L304fd0.  if v1 == 0 then goto L30502e;
  #L304fd4.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L304fda.  v1:= temp @kind object;
  #L304fdc.  v1:= (`java.util.List`) v1 @kind object;
  #L304fe0.  if v1 == 0 then goto L304fc8;
  #L304fe4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304fea.  v2:= temp;
  #L304fec.  v3:= 2I;
  #L304fee.  if v2 >= v3 then goto L304ff4;
  #L304ff2.  goto L304fc8;
  #L304ff4.  v2:= 0I;
  #L304ff6.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L304ffc.  v2:= temp @kind object;
  #L304ffe.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L305002.  if v2 != 0 then goto L305008;
  #L305006.  goto L304fc8;
  #L305008.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L30500e.  v2:= temp;
  #L305010.  if v2 != v5 then goto L304fc8;
  #L305014.  v2:= 1I;
  #L305016.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30501c.  v1:= temp @kind object;
  #L30501e.  v1:= (`java.lang.String`) v1 @kind object;
  #L305022.  if v1 == 0 then goto L304fc8;
  #L305026.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30502c.  goto L304fc8;
  #L30502e.  return v0 @kind object;
  #L305030.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L305036.  v4:= temp @kind object;
  #L305038.  return v4 @kind object;
  catch `java.security.cert.CertificateParsingException` @[L304faa..L30502c] goto L305030;
}
procedure `boolean` `e`(`ke.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lke/d;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L304ea4.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L304ea8.  call temp:= `toLowerCase`(v2, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L304eae.  v2:= temp @kind object;
  #L304eb0.  v0:= 2I;
  #L304eb2.  call temp:= `b`(v3, v0) @signature `Lke/d;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L304eb8.  v3:= temp @kind object;
  #L304eba.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L304ec0.  v3:= temp @kind object;
  #L304ec2.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L304ec8.  v0:= temp;
  #L304eca.  if v0 == 0 then goto L304eea;
  #L304ece.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L304ed4.  v0:= temp @kind object;
  #L304ed6.  v0:= (`java.lang.String`) v0 @kind object;
  #L304eda.  call temp:= `d`(v1, v2, v0) @signature `Lke/d;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @kind virtual;
  #L304ee0.  v0:= temp;
  #L304ee2.  if v0 == 0 then goto L304ec2;
  #L304ee6.  v2:= 1I;
  #L304ee8.  return v2;
  #L304eea.  v2:= 0I;
  #L304eec.  return v2;
}
procedure `boolean` `f`(`ke.d` v4 @kind this, `java.lang.String` v5 @kind object, `java.security.cert.X509Certificate` v6 @kind object) @signature `Lke/d;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L304f00.  v0:= 7I;
  #L304f02.  call temp:= `b`(v6, v0) @signature `Lke/d;.b:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L304f08.  v6:= temp @kind object;
  #L304f0a.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304f10.  v0:= temp;
  #L304f12.  v1:= 0I;
  #L304f14.  v2:= 0I;
  #L304f16.  if v2 >= v0 then goto L304f3c;
  #L304f1a.  call temp:= `get`(v6, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L304f20.  v3:= temp @kind object;
  #L304f22.  v3:= (`java.lang.String`) v3 @kind object;
  #L304f26.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L304f2c.  v3:= temp;
  #L304f2e.  if v3 == 0 then goto L304f36;
  #L304f32.  v5:= 1I;
  #L304f34.  return v5;
  #L304f36.  v2:= v2 + 1;
  #L304f3a.  goto L304f16;
  #L304f3c.  return v1;
}
procedure `boolean` `c`(`ke.d` v1 @kind this, `java.lang.String` v2 @kind object, `java.security.cert.X509Certificate` v3 @kind object) @signature `Lke/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304cb8.  call temp:= `M`(v2) @signature `Lee/e;.M:(Ljava/lang/String;)Z` @kind static;
  #L304cbe.  v0:= temp;
  #L304cc0.  if v0 == 0 then goto L304cce;
  #L304cc4.  call temp:= `f`(v1, v2, v3) @signature `Lke/d;.f:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L304cca.  v2:= temp;
  #L304ccc.  goto L304cd6;
  #L304cce.  call temp:= `e`(v1, v2, v3) @signature `Lke/d;.e:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L304cd4.  v2:= temp;
  #L304cd6.  return v2;
}
procedure `boolean` `d`(`ke.d` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object) @signature `Lke/d;.d:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L304d28.  v0:= 0I;
  #L304d2a.  if v8 == 0 then goto L304e90;
  #L304d2e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304d34.  v1:= temp;
  #L304d36.  if v1 == 0 then goto L304e90;
  #L304d3a.  v1:= "." @kind object;
  #L304d3e.  call temp:= `startsWith`(v8, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304d44.  v2:= temp;
  #L304d46.  if v2 != 0 then goto L304e90;
  #L304d4a.  v2:= ".." @kind object;
  #L304d4e.  call temp:= `endsWith`(v8, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304d54.  v3:= temp;
  #L304d56.  if v3 == 0 then goto L304d5e;
  #L304d5a.  goto L304e90;
  #L304d5e.  if v9 == 0 then goto L304e90;
  #L304d62.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304d68.  v3:= temp;
  #L304d6a.  if v3 == 0 then goto L304e90;
  #L304d6e.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304d74.  v3:= temp;
  #L304d76.  if v3 != 0 then goto L304e90;
  #L304d7a.  call temp:= `endsWith`(v9, v2) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304d80.  v2:= temp;
  #L304d82.  if v2 == 0 then goto L304d8a;
  #L304d86.  goto L304e90;
  #L304d8a.  call temp:= `endsWith`(v8, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304d90.  v2:= temp;
  #L304d92.  v3:= 46I;
  #L304d96.  if v2 != 0 then goto L304db8;
  #L304d9a.  v2:= new `java.lang.StringBuilder`;
  #L304d9e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304da4.  call temp:= `append`(v2, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304daa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L304db0.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304db6.  v8:= temp @kind object;
  #L304db8.  call temp:= `endsWith`(v9, v1) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304dbe.  v1:= temp;
  #L304dc0.  if v1 != 0 then goto L304de2;
  #L304dc4.  v1:= new `java.lang.StringBuilder`;
  #L304dc8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304dce.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dd4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L304dda.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304de0.  v9:= temp @kind object;
  #L304de2.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L304de6.  call temp:= `toLowerCase`(v9, v1) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L304dec.  v9:= temp @kind object;
  #L304dee.  v1:= "*" @kind object;
  #L304df2.  call temp:= `contains`(v9, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L304df8.  v1:= temp;
  #L304dfa.  if v1 != 0 then goto L304e08;
  #L304dfe.  call temp:= `equals`(v8, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L304e04.  v8:= temp;
  #L304e06.  return v8;
  #L304e08.  v1:= "*." @kind object;
  #L304e0c.  call temp:= `startsWith`(v9, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304e12.  v2:= temp;
  #L304e14.  if v2 == 0 then goto L304e90;
  #L304e18.  v2:= 42I;
  #L304e1c.  v4:= 1I;
  #L304e1e.  call temp:= `indexOf`(v9, v2, v4) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L304e24.  v2:= temp;
  #L304e26.  v5:= -1I;
  #L304e28.  if v2 == v5 then goto L304e2e;
  #L304e2c.  goto L304e90;
  #L304e2e.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304e34.  v2:= temp;
  #L304e36.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304e3c.  v6:= temp;
  #L304e3e.  if v2 >= v6 then goto L304e44;
  #L304e42.  return v0;
  #L304e44.  call temp:= `equals`(v1, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L304e4a.  v1:= temp;
  #L304e4c.  if v1 == 0 then goto L304e52;
  #L304e50.  return v0;
  #L304e52.  call temp:= `substring`(v9, v4) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L304e58.  v9:= temp @kind object;
  #L304e5a.  call temp:= `endsWith`(v8, v9) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L304e60.  v1:= temp;
  #L304e62.  if v1 != 0 then goto L304e68;
  #L304e66.  return v0;
  #L304e68.  call temp:= `length`(v8) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304e6e.  v1:= temp;
  #L304e70.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L304e76.  v9:= temp;
  #L304e78.  v1:= v1 - v9 @kind int;
  #L304e7a.  if v1 <= 0 then goto L304e8e;
  #L304e7e.  v1:= v1 - v4 @kind int;
  #L304e80.  call temp:= `lastIndexOf`(v8, v3, v1) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L304e86.  v8:= temp;
  #L304e88.  if v8 == v5 then goto L304e8e;
  #L304e8c.  return v0;
  #L304e8e.  return v4;
  #L304e90.  return v0;
}
procedure `boolean` `verify`(`ke.d` v1 @kind this, `java.lang.String` v2 @kind object, `javax.net.ssl.SSLSession` v3 @kind object) @signature `Lke/d;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L304ce8.  v0:= 0I;
  #L304cea.  call temp:= `getPeerCertificates`(v3) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L304cf0.  v3:= temp @kind object;
  #L304cf2.  v3:= v3[v0] @kind object;
  #L304cf6.  v3:= (`java.security.cert.X509Certificate`) v3 @kind object;
  #L304cfa.  call temp:= `c`(v1, v2, v3) @signature `Lke/d;.c:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L304d00.  v2:= temp;
  #L304d02.  return v2;
  #L304d04.  return v0;
  catch `javax.net.ssl.SSLException` @[L304cea..L304d02] goto L304d04;
}
