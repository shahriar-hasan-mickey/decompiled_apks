record `ke.a` @kind class @AccessFlag PUBLIC_FINAL extends `ke.c` @kind class {
  `ke.e` `ke.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`ke.a` v0 @kind this, `ke.e` v1 @kind object) @signature `Lke/a;.<init>:(Lke/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L304b18.  call `<init>`(v0) @signature `Lke/c;.<init>:()V` @kind direct;
  #L304b1e.  v0.`ke.a.a` @type ^`ke.e` := v1 @kind object;
  #L304b22.  return @kind void;
}
procedure `boolean` `c`(`ke.a` v2 @kind this, `java.security.cert.X509Certificate` v3 @kind object, `java.security.cert.X509Certificate` v4 @kind object) @signature `Lke/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L304968.  call temp:= `getIssuerDN`(v3) @signature `Ljava/security/cert/X509Certificate;.getIssuerDN:()Ljava/security/Principal;` @kind virtual;
  #L30496e.  v0:= temp @kind object;
  #L304970.  call temp:= `getSubjectDN`(v4) @signature `Ljava/security/cert/X509Certificate;.getSubjectDN:()Ljava/security/Principal;` @kind virtual;
  #L304976.  v1:= temp @kind object;
  #L304978.  call temp:= `equals`(v0, v1) @signature `Ljava/security/Principal;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L30497e.  v0:= temp;
  #L304980.  v1:= 0I;
  #L304982.  if v0 != 0 then goto L304988;
  #L304986.  return v1;
  #L304988.  call temp:= `getPublicKey`(v4) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L30498e.  v4:= temp @kind object;
  #L304990.  call `verify`(v3, v4) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L304996.  v3:= 1I;
  #L304998.  return v3;
  #L30499a.  return v1;
  catch `java.security.GeneralSecurityException` @[L304988..L304996] goto L30499a;
}
procedure `java.util.List` `a`(`ke.a` v6 @kind this, `java.util.List` v7 @kind object, `java.lang.String` v8 @kind object) @signature `Lke/a;.a:(Ljava/util/List;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3049dc.  v8:= new `java.util.ArrayDeque`;
  #L3049e0.  call `<init>`(v8, v7) @signature `Ljava/util/ArrayDeque;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3049e6.  v7:= new `java.util.ArrayList`;
  #L3049ea.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3049f0.  call temp:= `removeFirst`(v8) @signature `Ljava/util/Deque;.removeFirst:()Ljava/lang/Object;` @kind interface;
  #L3049f6.  v0:= temp @kind object;
  #L3049f8.  v0:= (`java.security.cert.Certificate`) v0 @kind object;
  #L3049fc.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L304a02.  v0:= 0I;
  #L304a04.  v1:= 0I;
  #L304a06.  v2:= 9I;
  #L304a0a.  if v0 >= v2 then goto L304ad8;
  #L304a0e.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304a14.  v2:= temp;
  #L304a16.  v3:= 1I;
  #L304a18.  v2:= v2 - v3 @kind int;
  #L304a1a.  call temp:= `get`(v7, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L304a20.  v2:= temp @kind object;
  #L304a22.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L304a26.  v4:= v6.`ke.a.a` @type ^`ke.e` @kind object;
  #L304a2a.  call temp:= `a`(v4, v2) @signature `Lke/e;.a:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @kind interface;
  #L304a30.  v4:= temp @kind object;
  #L304a32.  if v4 == 0 then goto L304a66;
  #L304a36.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L304a3c.  v1:= temp;
  #L304a3e.  if v1 > v3 then goto L304a4e;
  #L304a42.  call temp:= `equals`(v2, v4) @signature `Ljava/security/cert/X509Certificate;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L304a48.  v1:= temp;
  #L304a4a.  if v1 != 0 then goto L304a54;
  #L304a4e.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L304a54.  call temp:= `c`(v6, v4, v4) @signature `Lke/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L304a5a.  v1:= temp;
  #L304a5c.  if v1 == 0 then goto L304a62;
  #L304a60.  return v7 @kind object;
  #L304a62.  v1:= 1I;
  #L304a64.  goto L304a9e;
  #L304a66.  call temp:= `iterator`(v8) @signature `Ljava/util/Deque;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L304a6c.  v3:= temp @kind object;
  #L304a6e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L304a74.  v4:= temp;
  #L304a76.  if v4 == 0 then goto L304aa4;
  #L304a7a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L304a80.  v4:= temp @kind object;
  #L304a82.  v4:= (`java.security.cert.X509Certificate`) v4 @kind object;
  #L304a86.  call temp:= `c`(v6, v2, v4) @signature `Lke/a;.c:(Ljava/security/cert/X509Certificate;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L304a8c.  v5:= temp;
  #L304a8e.  if v5 == 0 then goto L304a6e;
  #L304a92.  call `remove`(v3) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L304a98.  call temp:= `add`(v7, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L304a9e.  v0:= v0 + 1;
  #L304aa2.  goto L304a06;
  #L304aa4.  if v1 == 0 then goto L304aaa;
  #L304aa8.  return v7 @kind object;
  #L304aaa.  v7:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L304aae.  v8:= new `java.lang.StringBuilder`;
  #L304ab2.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304ab8.  v0:= "Failed to find a trusted cert that signed " @kind object;
  #L304abc.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304ac2.  call temp:= `append`(v8, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304ac8.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304ace.  v8:= temp @kind object;
  #L304ad0.  call `<init>`(v7, v8) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304ad6.  throw v7;
  #L304ad8.  v8:= new `javax.net.ssl.SSLPeerUnverifiedException`;
  #L304adc.  v0:= new `java.lang.StringBuilder`;
  #L304ae0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L304ae6.  v1:= "Certificate chain too long: " @kind object;
  #L304aea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304af0.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L304af6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L304afc.  v7:= temp @kind object;
  #L304afe.  call `<init>`(v8, v7) @signature `Ljavax/net/ssl/SSLPeerUnverifiedException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L304b04.  throw v8;
}
procedure `boolean` `equals`(`ke.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lke/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L304928.  v0:= 1I;
  #L30492a.  if v3 != v2 then goto L304930;
  #L30492e.  return v0;
  #L304930.  v1:= instanceof @variable v3 @type ^`ke.a` @kind boolean;
  #L304934.  if v1 == 0 then goto L304952;
  #L304938.  v3:= (`ke.a`) v3 @kind object;
  #L30493c.  v3:= v3.`ke.a.a` @type ^`ke.e` @kind object;
  #L304940.  v1:= v2.`ke.a.a` @type ^`ke.e` @kind object;
  #L304944.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30494a.  v3:= temp;
  #L30494c.  if v3 == 0 then goto L304952;
  #L304950.  goto L304954;
  #L304952.  v0:= 0I;
  #L304954.  return v0;
}
procedure `int` `hashCode`(`ke.a` v1 @kind this) @signature `Lke/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3049bc.  v0:= v1.`ke.a.a` @type ^`ke.e` @kind object;
  #L3049c0.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3049c6.  v0:= temp;
  #L3049c8.  return v0;
}
