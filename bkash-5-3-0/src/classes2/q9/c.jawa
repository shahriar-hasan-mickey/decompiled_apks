record `q9.c` @kind class @AccessFlag PUBLIC extends `q9.i` @kind interface {
  `java.lang.String` `q9.c.a` @AccessFlag PRIVATE_FINAL;
  `q9.d` `q9.c.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q9.c` v0 @kind this, `java.util.Set` v1 @kind object, `q9.d` v2 @kind object) @signature `Lq9/c;.<init>:(Ljava/util/Set;Lq9/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L36fc20.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36fc26.  call temp:= `e`(v1) @signature `Lq9/c;.e:(Ljava/util/Set;)Ljava/lang/String;` @kind static;
  #L36fc2c.  v1:= temp @kind object;
  #L36fc2e.  v0.`q9.c.a` @type ^`java.lang.String` := v1 @kind object;
  #L36fc32.  v0.`q9.c.b` @type ^`q9.d` := v2 @kind object;
  #L36fc36.  return @kind void;
}
procedure `q9.i` `b`(`m8.e` v0 @kind object) @signature `Lq9/c;.b:(Lm8/e;)Lq9/i;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L36fbd4.  call temp:= `d`(v0) @signature `Lq9/c;.d:(Lm8/e;)Lq9/i;` @kind static;
  #L36fbda.  v0:= temp @kind object;
  #L36fbdc.  return v0 @kind object;
}
procedure `m8.d` `c`() @signature `Lq9/c;.c:()Lm8/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L36fb8c.  v0:= constclass @type ^`q9.i` @kind object;
  #L36fb90.  call temp:= `c`(v0) @signature `Lm8/d;.c:(Ljava/lang/Class;)Lm8/d$b;` @kind static;
  #L36fb96.  v0:= temp @kind object;
  #L36fb98.  v1:= constclass @type ^`q9.f` @kind object;
  #L36fb9c.  call temp:= `l`(v1) @signature `Lm8/r;.l:(Ljava/lang/Class;)Lm8/r;` @kind static;
  #L36fba2.  v1:= temp @kind object;
  #L36fba4.  call temp:= `b`(v0, v1) @signature `Lm8/d$b;.b:(Lm8/r;)Lm8/d$b;` @kind virtual;
  #L36fbaa.  v0:= temp @kind object;
  #L36fbac.  v1:= `@@q9.b.a` @type ^`q9.b` @kind object;
  #L36fbb0.  call temp:= `f`(v0, v1) @signature `Lm8/d$b;.f:(Lm8/h;)Lm8/d$b;` @kind virtual;
  #L36fbb6.  v0:= temp @kind object;
  #L36fbb8.  call temp:= `d`(v0) @signature `Lm8/d$b;.d:()Lm8/d;` @kind virtual;
  #L36fbbe.  v0:= temp @kind object;
  #L36fbc0.  return v0 @kind object;
}
procedure `q9.i` `d`(`m8.e` v2 @kind object) @signature `Lq9/c;.d:(Lm8/e;)Lq9/i;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L36fbf0.  v0:= new `q9.c`;
  #L36fbf4.  v1:= constclass @type ^`q9.f` @kind object;
  #L36fbf8.  call temp:= `d`(v2, v1) @signature `Lm8/e;.d:(Ljava/lang/Class;)Ljava/util/Set;` @kind interface;
  #L36fbfe.  v2:= temp @kind object;
  #L36fc00.  call temp:= `a`() @signature `Lq9/d;.a:()Lq9/d;` @kind static;
  #L36fc06.  v1:= temp @kind object;
  #L36fc08.  call `<init>`(v0, v2, v1) @signature `Lq9/c;.<init>:(Ljava/util/Set;Lq9/d;)V` @kind direct;
  #L36fc0e.  return v0 @kind object;
}
procedure `java.lang.String` `e`(`java.util.Set` v3 @kind object) @signature `Lq9/c;.e:(Ljava/util/Set;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L36fb08.  v0:= new `java.lang.StringBuilder`;
  #L36fb0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36fb12.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36fb18.  v3:= temp @kind object;
  #L36fb1a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36fb20.  v1:= temp;
  #L36fb22.  if v1 == 0 then goto L36fb70;
  #L36fb26.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L36fb2c.  v1:= temp @kind object;
  #L36fb2e.  v1:= (`q9.f`) v1 @kind object;
  #L36fb32.  call temp:= `b`(v1) @signature `Lq9/f;.b:()Ljava/lang/String;` @kind virtual;
  #L36fb38.  v2:= temp @kind object;
  #L36fb3a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36fb40.  v2:= 47I;
  #L36fb44.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36fb4a.  call temp:= `c`(v1) @signature `Lq9/f;.c:()Ljava/lang/String;` @kind virtual;
  #L36fb50.  v1:= temp @kind object;
  #L36fb52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36fb58.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L36fb5e.  v1:= temp;
  #L36fb60.  if v1 == 0 then goto L36fb1a;
  #L36fb64.  v1:= 32I;
  #L36fb68.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36fb6e.  goto L36fb1a;
  #L36fb70.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36fb76.  v3:= temp @kind object;
  #L36fb78.  return v3 @kind object;
}
procedure `java.lang.String` `a`(`q9.c` v2 @kind this) @signature `Lq9/c;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36fa98.  v0:= v2.`q9.c.b` @type ^`q9.d` @kind object;
  #L36fa9c.  call temp:= `b`(v0) @signature `Lq9/d;.b:()Ljava/util/Set;` @kind virtual;
  #L36faa2.  v0:= temp @kind object;
  #L36faa4.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L36faaa.  v0:= temp;
  #L36faac.  if v0 == 0 then goto L36fab6;
  #L36fab0.  v0:= v2.`q9.c.a` @type ^`java.lang.String` @kind object;
  #L36fab4.  return v0 @kind object;
  #L36fab6.  v0:= new `java.lang.StringBuilder`;
  #L36faba.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L36fac0.  v1:= v2.`q9.c.a` @type ^`java.lang.String` @kind object;
  #L36fac4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36faca.  v1:= 32I;
  #L36face.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36fad4.  v1:= v2.`q9.c.b` @type ^`q9.d` @kind object;
  #L36fad8.  call temp:= `b`(v1) @signature `Lq9/d;.b:()Ljava/util/Set;` @kind virtual;
  #L36fade.  v1:= temp @kind object;
  #L36fae0.  call temp:= `e`(v1) @signature `Lq9/c;.e:(Ljava/util/Set;)Ljava/lang/String;` @kind static;
  #L36fae6.  v1:= temp @kind object;
  #L36fae8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36faee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36faf4.  v0:= temp @kind object;
  #L36faf6.  return v0 @kind object;
}
