record `hb.b` @kind class @AccessFlag PUBLIC extends `hb.f` @kind interface {
  `java.util.List` `hb.b.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`hb.b` v0 @kind this) @signature `Lhb/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2b45c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b45ce.  return @kind void;
}
procedure `void` `<init>`(`hb.b` v0 @kind this, `hb.c` v1 @kind object) @signature `Lhb/b;.<init>:(Lhb/c;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L2b45e0.  call `<init>`(v0) @signature `Lhb/b;.<init>:()V` @kind direct;
  #L2b45e6.  return @kind void;
}
procedure `hb.b` `c`() @signature `Lhb/b;.c:()Lhb/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b45b0.  v0:= `@@hb.b$a.a` @type ^`hb.b` @kind object;
  #L2b45b4.  return v0 @kind object;
}
procedure `void` `a`(`hb.b` v2 @kind this, `hb.d` v3 @kind object) @signature `Lhb/b;.a:(Lhb/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b45f8.  v0:= v2.`hb.b.a` @type ^`java.util.List` @kind object;
  #L2b45fc.  if v0 == 0 then goto L2b4628;
  #L2b4600.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b4606.  v0:= temp @kind object;
  #L2b4608.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b460e.  v1:= temp;
  #L2b4610.  if v1 == 0 then goto L2b4628;
  #L2b4614.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b461a.  v1:= temp @kind object;
  #L2b461c.  v1:= (`hb.f`) v1 @kind object;
  #L2b4620.  call `a`(v1, v3) @signature `Lhb/f;.a:(Lhb/d;)V` @kind interface;
  #L2b4626.  goto L2b4608;
  #L2b4628.  return @kind void;
}
procedure `void` `b`(`hb.b` v2 @kind this, `hb.d` v3 @kind object, `hb.e` v4 @kind object) @signature `Lhb/b;.b:(Lhb/d;Lhb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b463c.  v0:= v2.`hb.b.a` @type ^`java.util.List` @kind object;
  #L2b4640.  if v0 == 0 then goto L2b466c;
  #L2b4644.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2b464a.  v0:= temp @kind object;
  #L2b464c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2b4652.  v1:= temp;
  #L2b4654.  if v1 == 0 then goto L2b466c;
  #L2b4658.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2b465e.  v1:= temp @kind object;
  #L2b4660.  v1:= (`hb.f`) v1 @kind object;
  #L2b4664.  call `b`(v1, v3, v4) @signature `Lhb/f;.b:(Lhb/d;Lhb/e;)V` @kind interface;
  #L2b466a.  goto L2b464c;
  #L2b466c.  return @kind void;
}
