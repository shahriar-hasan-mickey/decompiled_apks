record `fa.a$a$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `java.lang.Object` `fa.a$a$a.g` @AccessFlag FINAL_SYNTHETIC;
  `fa.a$a` `fa.a$a$a.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`fa.a$a$a` v0 @kind this, `fa.a$a` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lfa/a$a$a;.<init>:(Lfa/a$a;Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2af7b8.  v0.`fa.a$a$a.h` @type ^`fa.a$a` := v1 @kind object;
  #L2af7bc.  v0.`fa.a$a$a.g` @type ^`java.lang.Object` := v2 @kind object;
  #L2af7c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af7c6.  return @kind void;
}
procedure `void` `run`(`fa.a$a$a` v2 @kind this) @signature `Lfa/a$a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2af7d8.  v0:= v2.`fa.a$a$a.h` @type ^`fa.a$a` @kind object;
  #L2af7dc.  call temp:= `a`(v0) @signature `Lfa/a$a;.a:(Lfa/a$a;)Lio/flutter/plugin/common/l$d;` @kind static;
  #L2af7e2.  v0:= temp @kind object;
  #L2af7e4.  v1:= v2.`fa.a$a$a.g` @type ^`java.lang.Object` @kind object;
  #L2af7e8.  call `success`(v0, v1) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2af7ee.  return @kind void;
}
