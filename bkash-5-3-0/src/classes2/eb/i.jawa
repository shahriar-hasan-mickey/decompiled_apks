record `eb.i` @kind class @AccessFlag  {
  `boolean` `eb.i.a` @AccessFlag FINAL;
  `java.lang.String` `eb.i.b` @AccessFlag FINAL;
  `int` `eb.i.c` @AccessFlag FINAL;
  `int` `eb.i.d` @AccessFlag FINAL;
  `android.content.Context` `eb.i.e` @AccessFlag FINAL;
  `java.util.List` `eb.i.f` @AccessFlag FINAL;
  `java.util.Map` `eb.i.g` @AccessFlag FINAL;
  `android.os.Handler` `eb.i.h` @AccessFlag PUBLIC;
  `android.database.sqlite.SQLiteDatabase` `eb.i.i` @AccessFlag ;
  `boolean` `eb.i.j` @AccessFlag ;
  `int` `eb.i.k` @AccessFlag PRIVATE;
  `java.lang.Integer` `eb.i.l` @AccessFlag PRIVATE;
  `int` `eb.i.m` @AccessFlag PRIVATE;
}
global `java.lang.Boolean` `@@eb.i.n` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`eb.i` v1 @kind this, `android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 , `boolean` v5 , `int` v6 ) @signature `Leb/i;.<init>:(Landroid/content/Context;Ljava/lang/String;IZI)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L2aad58.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2aad5e.  v0:= new `java.util.ArrayList`;
  #L2aad62.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2aad68.  v1.`eb.i.f` @type ^`java.util.List` := v0 @kind object;
  #L2aad6c.  v0:= new `java.util.HashMap`;
  #L2aad70.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2aad76.  v1.`eb.i.g` @type ^`java.util.Map` := v0 @kind object;
  #L2aad7a.  v0:= 0I;
  #L2aad7c.  v1.`eb.i.k` @type ^`int` := v0;
  #L2aad80.  v1.`eb.i.m` @type ^`int` := v0;
  #L2aad84.  v1.`eb.i.e` @type ^`android.content.Context` := v2 @kind object;
  #L2aad88.  v1.`eb.i.b` @type ^`java.lang.String` := v3 @kind object;
  #L2aad8c.  v1.`eb.i.a` @type ^`boolean` := v5 @kind boolean;
  #L2aad90.  v1.`eb.i.c` @type ^`int` := v4;
  #L2aad94.  v1.`eb.i.d` @type ^`int` := v6;
  #L2aad98.  return @kind void;
}
procedure `android.database.Cursor` `B`(`eb.t` v0 @kind object, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `android.database.sqlite.SQLiteCursorDriver` v2 @kind object, `java.lang.String` v3 @kind object, `android.database.sqlite.SQLiteQuery` v4 @kind object) @signature `Leb/i;.B:(Leb/t;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;

  #L2aa33c.  call `a`(v0, v4) @signature `Leb/t;.a:(Landroid/database/sqlite/SQLiteProgram;)V` @kind virtual;
  #L2aa342.  v0:= new `android.database.sqlite.SQLiteCursor`;
  #L2aa346.  call `<init>`(v0, v2, v3, v4) @signature `Landroid/database/sqlite/SQLiteCursor;.<init>:(Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)V` @kind direct;
  #L2aa34c.  return v0 @kind object;
}
procedure `void` `C`(`eb.i` v4 @kind this, `gb.e` v5 @kind object) @signature `Leb/i;.C:(Lgb/e;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ab1dc.  call temp:= `h`(v5) @signature `Lgb/e;.h:()Ljava/lang/Boolean;` @kind interface;
  #L2ab1e2.  v0:= temp @kind object;
  #L2ab1e4.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2ab1e8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ab1ee.  v1:= temp;
  #L2ab1f0.  v2:= 1I;
  #L2ab1f2.  if v1 == 0 then goto L2ab206;
  #L2ab1f6.  call temp:= `e`(v5) @signature `Lgb/e;.e:()Z` @kind interface;
  #L2ab1fc.  v1:= temp;
  #L2ab1fe.  if v1 == 0 then goto L2ab206;
  #L2ab202.  v1:= 1I;
  #L2ab204.  goto L2ab208;
  #L2ab206.  v1:= 0I;
  #L2ab208.  if v1 == 0 then goto L2ab222;
  #L2ab20c.  v3:= v4.`eb.i.k` @type ^`int`;
  #L2ab210.  v3:= v3 + v2 @kind int;
  #L2ab212.  v4.`eb.i.k` @type ^`int` := v3;
  #L2ab216.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ab21c.  v2:= temp @kind object;
  #L2ab21e.  v4.`eb.i.l` @type ^`java.lang.Integer` := v2 @kind object;
  #L2ab222.  call temp:= `u`(v4, v5) @signature `Leb/i;.u:(Lgb/e;)Z` @kind direct;
  #L2ab228.  v2:= temp;
  #L2ab22a.  v3:= 0I;
  #L2ab22c.  if v2 != 0 then goto L2ab23a;
  #L2ab230.  if v1 == 0 then goto L2ab278;
  #L2ab234.  v4.`eb.i.l` @type ^`java.lang.Integer` := v3 @kind object;
  #L2ab238.  goto L2ab278;
  #L2ab23a.  if v1 == 0 then goto L2ab25e;
  #L2ab23e.  v0:= new `java.util.HashMap`;
  #L2ab242.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2ab248.  v1:= v4.`eb.i.l` @type ^`java.lang.Integer` @kind object;
  #L2ab24c.  v2:= "transactionId" @kind object;
  #L2ab250.  call temp:= `put`(v0, v2, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ab256.  call `success`(v5, v0) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2ab25c.  goto L2ab278;
  #L2ab25e.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L2ab262.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ab268.  v0:= temp;
  #L2ab26a.  if v0 == 0 then goto L2ab272;
  #L2ab26e.  v4.`eb.i.l` @type ^`java.lang.Integer` := v3 @kind object;
  #L2ab272.  call `success`(v5, v3) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2ab278.  return @kind void;
}
procedure `void` `D`(`eb.i` v0 @kind this, `gb.e` v1 @kind object) @signature `Leb/i;.D:(Lgb/e;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L2ab28c.  call temp:= `p`(v0, v1) @signature `Leb/i;.p:(Lgb/e;)Z` @kind direct;
  #L2ab292.  return @kind void;
}
procedure `void` `E`(`eb.i` v0 @kind this, `gb.e` v1 @kind object) @signature `Leb/i;.E:(Lgb/e;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L2ab2a4.  call temp:= `q`(v0, v1) @signature `Leb/i;.q:(Lgb/e;)Z` @kind direct;
  #L2ab2aa.  return @kind void;
}
procedure `void` `F`(`eb.i` v0 @kind this, `gb.e` v1 @kind object) @signature `Leb/i;.F:(Lgb/e;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L2ab2bc.  call temp:= `r`(v0, v1) @signature `Leb/i;.r:(Lgb/e;)Z` @kind direct;
  #L2ab2c2.  return @kind void;
}
procedure `void` `G`(`eb.i` v0 @kind this, `gb.e` v1 @kind object) @signature `Leb/i;.G:(Lgb/e;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;

  #L2ab2d4.  call temp:= `s`(v0, v1) @signature `Leb/i;.s:(Lgb/e;)Z` @kind direct;
  #L2ab2da.  return @kind void;
}
procedure `void` `L`(`eb.i` v2 @kind this) @signature `Leb/i;.L:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ab400.  v0:= v2.`eb.i.f` @type ^`java.util.List` @kind object;
  #L2ab404.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2ab40a.  v0:= temp;
  #L2ab40c.  if v0 != 0 then goto L2ab43e;
  #L2ab410.  v0:= v2.`eb.i.l` @type ^`java.lang.Integer` @kind object;
  #L2ab414.  if v0 == 0 then goto L2ab41a;
  #L2ab418.  goto L2ab43e;
  #L2ab41a.  v0:= v2.`eb.i.f` @type ^`java.util.List` @kind object;
  #L2ab41e.  v1:= 0I;
  #L2ab420.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2ab426.  v0:= temp @kind object;
  #L2ab428.  v0:= (`gb.g`) v0 @kind object;
  #L2ab42c.  call `a`(v0) @signature `Lgb/g;.a:()V` @kind virtual;
  #L2ab432.  v0:= v2.`eb.i.f` @type ^`java.util.List` @kind object;
  #L2ab436.  call temp:= `remove`(v0, v1) @signature `Ljava/util/List;.remove:(I)Ljava/lang/Object;` @kind interface;
  #L2ab43c.  goto L2ab400;
  #L2ab43e.  return @kind void;
}
procedure `void` `N`(`eb.i` v2 @kind this, `gb.e` v3 @kind object, `java.lang.Runnable` v4 @kind object) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2ab474.  call temp:= `d`(v3) @signature `Lgb/e;.d:()Ljava/lang/Integer;` @kind interface;
  #L2ab47a.  v0:= temp @kind object;
  #L2ab47c.  v1:= v2.`eb.i.l` @type ^`java.lang.Integer` @kind object;
  #L2ab480.  if v1 != 0 then goto L2ab48c;
  #L2ab484.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2ab48a.  goto L2ab4f2;
  #L2ab48c.  if v0 == 0 then goto L2ab4de;
  #L2ab490.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ab496.  v1:= temp;
  #L2ab498.  if v1 != 0 then goto L2ab4aa;
  #L2ab49c.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2ab4a2.  v0:= temp;
  #L2ab4a4.  v1:= -1I;
  #L2ab4a6.  if v0 != v1 then goto L2ab4de;
  #L2ab4aa.  call `run`(v4) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2ab4b0.  v3:= v2.`eb.i.l` @type ^`java.lang.Integer` @kind object;
  #L2ab4b4.  if v3 != 0 then goto L2ab4f2;
  #L2ab4b8.  v3:= v2.`eb.i.f` @type ^`java.util.List` @kind object;
  #L2ab4bc.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2ab4c2.  v3:= temp;
  #L2ab4c4.  if v3 != 0 then goto L2ab4f2;
  #L2ab4c8.  v3:= v2.`eb.i.h` @type ^`android.os.Handler` @kind object;
  #L2ab4cc.  v4:= new `eb.c`;
  #L2ab4d0.  call `<init>`(v4, v2) @signature `Leb/c;.<init>:(Leb/i;)V` @kind direct;
  #L2ab4d6.  call temp:= `post`(v3, v4) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L2ab4dc.  goto L2ab4f2;
  #L2ab4de.  v0:= new `gb.g`;
  #L2ab4e2.  call `<init>`(v0, v3, v4) @signature `Lgb/g;.<init>:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab4e8.  v3:= v2.`eb.i.f` @type ^`java.util.List` @kind object;
  #L2ab4ec.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ab4f2.  return @kind void;
}
procedure `void` `a`(`eb.i` v0 @kind object, `gb.e` v1 @kind object) @signature `Leb/i;.a:(Leb/i;Lgb/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aacc8.  call `D`(v0, v1) @signature `Leb/i;.D:(Lgb/e;)V` @kind direct;
  #L2aacce.  return @kind void;
}
procedure `void` `b`(`eb.i` v0 @kind object, `gb.e` v1 @kind object) @signature `Leb/i;.b:(Leb/i;Lgb/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aace0.  call `F`(v0, v1) @signature `Leb/i;.F:(Lgb/e;)V` @kind direct;
  #L2aace6.  return @kind void;
}
procedure `void` `c`(`eb.i` v0 @kind object, `gb.e` v1 @kind object) @signature `Leb/i;.c:(Leb/i;Lgb/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aacf8.  call `E`(v0, v1) @signature `Leb/i;.E:(Lgb/e;)V` @kind direct;
  #L2aacfe.  return @kind void;
}
procedure `void` `d`(`eb.i` v0 @kind object) @signature `Leb/i;.d:(Leb/i;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aad10.  call `L`(v0) @signature `Leb/i;.L:()V` @kind direct;
  #L2aad16.  return @kind void;
}
procedure `android.database.Cursor` `e`(`eb.t` v0 @kind object, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `android.database.sqlite.SQLiteCursorDriver` v2 @kind object, `java.lang.String` v3 @kind object, `android.database.sqlite.SQLiteQuery` v4 @kind object) @signature `Leb/i;.e:(Leb/t;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aa320.  call temp:= `B`(v0, v1, v2, v3, v4) @signature `Leb/i;.B:(Leb/t;Landroid/database/sqlite/SQLiteDatabase;Landroid/database/sqlite/SQLiteCursorDriver;Ljava/lang/String;Landroid/database/sqlite/SQLiteQuery;)Landroid/database/Cursor;` @kind static;
  #L2aa326.  v0:= temp @kind object;
  #L2aa328.  return v0 @kind object;
}
procedure `void` `f`(`eb.i` v0 @kind object, `gb.e` v1 @kind object) @signature `Leb/i;.f:(Leb/i;Lgb/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aad28.  call `G`(v0, v1) @signature `Leb/i;.G:(Lgb/e;)V` @kind direct;
  #L2aad2e.  return @kind void;
}
procedure `void` `g`(`eb.i` v0 @kind object, `gb.e` v1 @kind object) @signature `Leb/i;.g:(Leb/i;Lgb/e;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2aad40.  call `C`(v0, v1) @signature `Leb/i;.C:(Lgb/e;)V` @kind direct;
  #L2aad46.  return @kind void;
}
procedure `boolean` `i`(`android.content.Context` v3 @kind object) @signature `Leb/i;.i:(Landroid/content/Context;)Z` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2aa390.  v0:= 0I;
  #L2aa392.  call temp:= `getPackageName`(v3) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L2aa398.  v1:= temp @kind object;
  #L2aa39a.  call temp:= `getPackageManager`(v3) @signature `Landroid/content/Context;.getPackageManager:()Landroid/content/pm/PackageManager;` @kind virtual;
  #L2aa3a0.  v3:= temp @kind object;
  #L2aa3a2.  v2:= 128I;
  #L2aa3a6.  call temp:= `getApplicationInfo`(v3, v1, v2) @signature `Landroid/content/pm/PackageManager;.getApplicationInfo:(Ljava/lang/String;I)Landroid/content/pm/ApplicationInfo;` @kind virtual;
  #L2aa3ac.  v3:= temp @kind object;
  #L2aa3ae.  v3:= v3.`android.content.pm.ApplicationInfo.metaData` @type ^`android.os.Bundle` @kind object;
  #L2aa3b2.  v1:= "com.tekartik.sqflite.wal_enabled" @kind object;
  #L2aa3b6.  call temp:= `getBoolean`(v3, v1, v0) @signature `Landroid/os/Bundle;.getBoolean:(Ljava/lang/String;Z)Z` @kind virtual;
  #L2aa3bc.  v3:= temp;
  #L2aa3be.  if v3 == 0 then goto L2aa3ce;
  #L2aa3c2.  v3:= 1I;
  #L2aa3c4.  return v3;
  #L2aa3c6.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa3c8.  call `printStackTrace`(v3) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L2aa3ce.  return v0;
  catch `java.lang.Exception` @[L2aa392..L2aa3be] goto L2aa3c6;
}
procedure `void` `k`(`eb.i` v1 @kind this, `int` v2 ) @signature `Leb/i;.k:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2ab0b8.  v0:= v1.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2ab0bc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ab0c2.  v2:= temp @kind object;
  #L2ab0c4.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ab0ca.  v2:= temp @kind object;
  #L2ab0cc.  v2:= (`eb.k`) v2 @kind object;
  #L2ab0d0.  if v2 == 0 then goto L2ab0da;
  #L2ab0d4.  call `l`(v1, v2) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2ab0da.  return @kind void;
}
procedure `void` `l`(`eb.i` v3 @kind this, `eb.k` v4 @kind object) @signature `Leb/i;.l:(Leb/k;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2ab03c.  v0:= v4.`eb.k.a` @type ^`int`;
  #L2ab040.  v1:= v3.`eb.i.d` @type ^`int`;
  #L2ab044.  call temp:= `c`(v1) @signature `Leb/j;.c:(I)Z` @kind static;
  #L2ab04a.  v1:= temp;
  #L2ab04c.  if v1 == 0 then goto L2ab078;
  #L2ab050.  v1:= new `java.lang.StringBuilder`;
  #L2ab054.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ab05a.  call temp:= `w`(v3) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2ab060.  v2:= temp @kind object;
  #L2ab062.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab068.  v2:= "closing cursor " @kind object;
  #L2ab06c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab072.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab078.  v1:= v3.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2ab07c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ab082.  v0:= temp @kind object;
  #L2ab084.  call temp:= `remove`(v1, v0) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2ab08a.  v4:= v4.`eb.k.c` @type ^`android.database.Cursor` @kind object;
  #L2ab08e.  call `close`(v4) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2ab094.  return @kind void;
  catch `java.lang.Exception` @[L2ab03c..L2ab094] goto L2ab094;
}
procedure `java.util.Map` `m`(`eb.i` v6 @kind this, `android.database.Cursor` v7 @kind object, `java.lang.Integer` v8 @kind object) @signature `Leb/i;.m:(Landroid/database/Cursor;Ljava/lang/Integer;)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2aac24.  v0:= 0I;
  #L2aac26.  v1:= 0I;
  #L2aac28.  v1:= v0 @kind object;
  #L2aac2a.  v2:= 0I;
  #L2aac2c.  call temp:= `moveToNext`(v7) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L2aac32.  v3:= temp;
  #L2aac34.  if v3 == 0 then goto L2aaca8;
  #L2aac38.  if v0 != 0 then goto L2aac82;
  #L2aac3c.  v0:= new `java.util.ArrayList`;
  #L2aac40.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2aac46.  v1:= new `java.util.HashMap`;
  #L2aac4a.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2aac50.  call temp:= `getColumnCount`(v7) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L2aac56.  v2:= temp;
  #L2aac58.  call temp:= `getColumnNames`(v7) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L2aac5e.  v3:= temp @kind object;
  #L2aac60.  call temp:= `asList`(v3) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2aac66.  v3:= temp @kind object;
  #L2aac68.  v4:= "columns" @kind object;
  #L2aac6c.  call temp:= `put`(v1, v4, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aac72.  v3:= "rows" @kind object;
  #L2aac76.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aac7c.  v5:= v1 @kind object;
  #L2aac7e.  v1:= v0 @kind object;
  #L2aac80.  v0:= v5 @kind object;
  #L2aac82.  call temp:= `a`(v7, v2) @signature `Leb/u;.a:(Landroid/database/Cursor;I)Ljava/util/List;` @kind static;
  #L2aac88.  v3:= temp @kind object;
  #L2aac8a.  call temp:= `add`(v1, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2aac90.  if v8 == 0 then goto L2aac2c;
  #L2aac94.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2aac9a.  v3:= temp;
  #L2aac9c.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2aaca2.  v4:= temp;
  #L2aaca4.  if v3 < v4 then goto L2aac2c;
  #L2aaca8.  if v0 != 0 then goto L2aacb6;
  #L2aacac.  v0:= new `java.util.HashMap`;
  #L2aacb0.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2aacb6.  return v0 @kind object;
}
procedure `void` `n`(`java.lang.String` v1 @kind object) @signature `Leb/i;.n:(Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2ab0ec.  v0:= new `java.io.File`;
  #L2ab0f0.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ab0f6.  call temp:= `deleteDatabase`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.deleteDatabase:(Ljava/io/File;)Z` @kind static;
  #L2ab0fc.  return @kind void;
}
procedure `boolean` `o`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.o:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2aa3f0.  call temp:= `u`(v1, v2) @signature `Leb/i;.u:(Lgb/e;)Z` @kind direct;
  #L2aa3f6.  v0:= temp;
  #L2aa3f8.  if v0 != 0 then goto L2aa400;
  #L2aa3fc.  v2:= 0I;
  #L2aa3fe.  return v2;
  #L2aa400.  v0:= 0I;
  #L2aa402.  call `success`(v2, v0) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa408.  v2:= 1I;
  #L2aa40a.  return v2;
}
procedure `boolean` `p`(`eb.i` v8 @kind this, `gb.e` v9 @kind object) @signature `Leb/i;.p:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2aa41c.  call temp:= `u`(v8, v9) @signature `Leb/i;.u:(Lgb/e;)Z` @kind direct;
  #L2aa422.  v0:= temp;
  #L2aa424.  v1:= 0I;
  #L2aa426.  if v0 != 0 then goto L2aa42c;
  #L2aa42a.  return v1;
  #L2aa42c.  call temp:= `c`(v9) @signature `Lgb/e;.c:()Z` @kind interface;
  #L2aa432.  v0:= temp;
  #L2aa434.  v2:= 0I;
  #L2aa436.  v3:= 1I;
  #L2aa438.  if v0 == 0 then goto L2aa444;
  #L2aa43c.  call `success`(v9, v2) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa442.  return v3;
  #L2aa444.  v0:= "SELECT changes(), last_insert_rowid()" @kind object;
  #L2aa448.  call temp:= `y`(v8) @signature `Leb/i;.y:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2aa44e.  v4:= temp @kind object;
  #L2aa450.  call temp:= `rawQuery`(v4, v0, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2aa456.  v0:= temp @kind object;
  #L2aa458.  if v0 == 0 then goto L2aa532;
  #L2aa45c.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L2aa462.  v4:= temp;
  #L2aa464.  if v4 <= 0 then goto L2aa532;
  #L2aa468.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2aa46e.  v4:= temp;
  #L2aa470.  if v4 == 0 then goto L2aa532;
  #L2aa474.  call temp:= `getInt`(v0, v1) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L2aa47a.  v4:= temp;
  #L2aa47c.  if v4 != 0 then goto L2aa4d8;
  #L2aa480.  v4:= v8.`eb.i.d` @type ^`int`;
  #L2aa484.  call temp:= `b`(v4) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aa48a.  v4:= temp;
  #L2aa48c.  if v4 == 0 then goto L2aa4ca;
  #L2aa490.  v4:= new `java.lang.StringBuilder`;
  #L2aa494.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa49a.  call temp:= `w`(v8) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa4a0.  v5:= temp @kind object;
  #L2aa4a2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa4a8.  v5:= "no changes (id was " @kind object;
  #L2aa4ac.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa4b2.  call temp:= `getLong`(v0, v3) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L2aa4b8.  v5:= temp @kind wide;
  #L2aa4ba.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa4c0.  v5:= ")" @kind object;
  #L2aa4c4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa4ca.  call `success`(v9, v2) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa4d0.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa4d6.  return v3;
  #L2aa4d8.  call temp:= `getLong`(v0, v3) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L2aa4de.  v4:= temp @kind wide;
  #L2aa4e0.  v2:= v8.`eb.i.d` @type ^`int`;
  #L2aa4e4.  call temp:= `b`(v2) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aa4ea.  v2:= temp;
  #L2aa4ec.  if v2 == 0 then goto L2aa518;
  #L2aa4f0.  v2:= new `java.lang.StringBuilder`;
  #L2aa4f4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa4fa.  call temp:= `w`(v8) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa500.  v6:= temp @kind object;
  #L2aa502.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa508.  v6:= "inserted " @kind object;
  #L2aa50c.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa512.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa518.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2aa51e.  v2:= temp @kind object;
  #L2aa520.  call `success`(v9, v2) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa526.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa52c.  return v3;
  #L2aa52e.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa530.  goto L2aa572;
  #L2aa532.  v4:= new `java.lang.StringBuilder`;
  #L2aa536.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa53c.  call temp:= `w`(v8) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa542.  v5:= temp @kind object;
  #L2aa544.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa54a.  v5:= "fail to read changes for Insert" @kind object;
  #L2aa54e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa554.  call `success`(v9, v2) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa55a.  if v0 == 0 then goto L2aa564;
  #L2aa55e.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa564.  return v3;
  #L2aa566.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa568.  goto L2aa588;
  #L2aa56a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa56c.  v7:= v2 @kind object;
  #L2aa56e.  v2:= v0 @kind object;
  #L2aa570.  v0:= v7 @kind object;
  #L2aa572.  call `z`(v8, v2, v9) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @kind virtual;
  #L2aa578.  if v0 == 0 then goto L2aa582;
  #L2aa57c.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa582.  return v1;
  #L2aa584.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa586.  v2:= v0 @kind object;
  #L2aa588.  if v2 == 0 then goto L2aa592;
  #L2aa58c.  call `close`(v2) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa592.  throw v9;
  catch `java.lang.Exception` @[L2aa448..L2aa458] goto L2aa56a;
  catch `java.lang.Throwable` @[L2aa448..L2aa458] goto L2aa566;
  catch `java.lang.Exception` @[L2aa45c..L2aa4d0] goto L2aa52e;
  catch `java.lang.Throwable` @[L2aa45c..L2aa4d0] goto L2aa584;
  catch `java.lang.Exception` @[L2aa4d8..L2aa526] goto L2aa52e;
  catch `java.lang.Throwable` @[L2aa4d8..L2aa526] goto L2aa584;
  catch `java.lang.Exception` @[L2aa532..L2aa55a] goto L2aa52e;
  catch `java.lang.Throwable` @[L2aa532..L2aa55a] goto L2aa584;
  catch `java.lang.Throwable` @[L2aa572..L2aa578] goto L2aa584;
}
procedure `boolean` `q`(`eb.i` v9 @kind this, `gb.e` v10 @kind object) @signature `Leb/i;.q:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2aa5e0.  v0:= "cursorPageSize" @kind object;
  #L2aa5e4.  call temp:= `a`(v10, v0) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2aa5ea.  v0:= temp @kind object;
  #L2aa5ec.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2aa5f0.  call temp:= `b`(v10) @signature `Lgb/e;.b:()Leb/t;` @kind interface;
  #L2aa5f6.  v1:= temp @kind object;
  #L2aa5f8.  v2:= v9.`eb.i.d` @type ^`int`;
  #L2aa5fc.  call temp:= `b`(v2) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aa602.  v2:= temp;
  #L2aa604.  if v2 == 0 then goto L2aa626;
  #L2aa608.  v2:= new `java.lang.StringBuilder`;
  #L2aa60c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa612.  call temp:= `w`(v9) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa618.  v3:= temp @kind object;
  #L2aa61a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa620.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa626.  v2:= 0I;
  #L2aa628.  v3:= 0I;
  #L2aa62a.  call temp:= `v`(v9) @signature `Leb/i;.v:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2aa630.  v4:= temp @kind object;
  #L2aa632.  v5:= new `eb.b`;
  #L2aa636.  call `<init>`(v5, v1) @signature `Leb/b;.<init>:(Leb/t;)V` @kind direct;
  #L2aa63c.  call temp:= `c`(v1) @signature `Leb/t;.c:()Ljava/lang/String;` @kind virtual;
  #L2aa642.  v1:= temp @kind object;
  #L2aa644.  v6:= `@@eb.a.a` @type ^`java.lang.String`[] @kind object;
  #L2aa648.  call temp:= `rawQueryWithFactory`(v4, v5, v1, v6, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQueryWithFactory:(Landroid/database/sqlite/SQLiteDatabase$CursorFactory;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2aa64e.  v1:= temp @kind object;
  #L2aa650.  call temp:= `m`(v9, v1, v0) @signature `Leb/i;.m:(Landroid/database/Cursor;Ljava/lang/Integer;)Ljava/util/Map;` @kind direct;
  #L2aa656.  v4:= temp @kind object;
  #L2aa658.  v5:= 1I;
  #L2aa65a.  if v0 == 0 then goto L2aa67a;
  #L2aa65e.  call temp:= `isLast`(v1) @signature `Landroid/database/Cursor;.isLast:()Z` @kind interface;
  #L2aa664.  v6:= temp;
  #L2aa666.  if v6 != 0 then goto L2aa67a;
  #L2aa66a.  call temp:= `isAfterLast`(v1) @signature `Landroid/database/Cursor;.isAfterLast:()Z` @kind interface;
  #L2aa670.  v6:= temp;
  #L2aa672.  if v6 != 0 then goto L2aa67a;
  #L2aa676.  v6:= 1I;
  #L2aa678.  goto L2aa67c;
  #L2aa67a.  v6:= 0I;
  #L2aa67c.  if v6 == 0 then goto L2aa6d0;
  #L2aa680.  v6:= v9.`eb.i.m` @type ^`int`;
  #L2aa684.  v6:= v6 + v5 @kind int;
  #L2aa686.  v9.`eb.i.m` @type ^`int` := v6;
  #L2aa68a.  v7:= "cursorId" @kind object;
  #L2aa68e.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa694.  v8:= temp @kind object;
  #L2aa696.  call temp:= `put`(v4, v7, v8) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aa69c.  v7:= new `eb.k`;
  #L2aa6a0.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2aa6a6.  v0:= temp;
  #L2aa6a8.  call `<init>`(v7, v6, v0, v1) @signature `Leb/k;.<init>:(IILandroid/database/Cursor;)V` @kind direct;
  #L2aa6ae.  v0:= v9.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2aa6b2.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa6b8.  v2:= temp @kind object;
  #L2aa6ba.  call temp:= `put`(v0, v2, v7) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aa6c0.  v2:= v7 @kind object;
  #L2aa6c2.  goto L2aa6d0;
  #L2aa6c4.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa6c6.  v2:= v7 @kind object;
  #L2aa6c8.  goto L2aa716;
  #L2aa6ca.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa6cc.  v2:= v7 @kind object;
  #L2aa6ce.  goto L2aa6f4;
  #L2aa6d0.  call `success`(v10, v4) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa6d6.  if v2 != 0 then goto L2aa6e4;
  #L2aa6da.  if v1 == 0 then goto L2aa6e4;
  #L2aa6de.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa6e4.  return v5;
  #L2aa6e6.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa6e8.  goto L2aa6f4;
  #L2aa6ea.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa6ec.  v1:= v2 @kind object;
  #L2aa6ee.  goto L2aa716;
  #L2aa6f0.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa6f2.  v1:= v2 @kind object;
  #L2aa6f4.  call `z`(v9, v0, v10) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @kind virtual;
  #L2aa6fa.  if v2 == 0 then goto L2aa704;
  #L2aa6fe.  call `l`(v9, v2) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2aa704.  if v2 != 0 then goto L2aa712;
  #L2aa708.  if v1 == 0 then goto L2aa712;
  #L2aa70c.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa712.  return v3;
  #L2aa714.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa716.  if v2 != 0 then goto L2aa724;
  #L2aa71a.  if v1 == 0 then goto L2aa724;
  #L2aa71e.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa724.  throw v10;
  catch `java.lang.Exception` @[L2aa62a..L2aa650] goto L2aa6f0;
  catch `java.lang.Throwable` @[L2aa62a..L2aa650] goto L2aa6ea;
  catch `java.lang.Exception` @[L2aa650..L2aa6ae] goto L2aa6e6;
  catch `java.lang.Throwable` @[L2aa650..L2aa6ae] goto L2aa714;
  catch `java.lang.Exception` @[L2aa6ae..L2aa6c0] goto L2aa6ca;
  catch `java.lang.Throwable` @[L2aa6ae..L2aa6c0] goto L2aa6c4;
  catch `java.lang.Exception` @[L2aa6d0..L2aa6d6] goto L2aa6e6;
  catch `java.lang.Throwable` @[L2aa6d0..L2aa6d6] goto L2aa714;
  catch `java.lang.Throwable` @[L2aa6f4..L2aa704] goto L2aa714;
}
procedure `boolean` `r`(`eb.i` v9 @kind this, `gb.e` v10 @kind object) @signature `Leb/i;.r:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2aa778.  v0:= "cursorId" @kind object;
  #L2aa77c.  call temp:= `a`(v10, v0) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2aa782.  v1:= temp @kind object;
  #L2aa784.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2aa788.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2aa78e.  v1:= temp;
  #L2aa790.  v2:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2aa794.  v3:= "cancel" @kind object;
  #L2aa798.  call temp:= `a`(v10, v3) @signature `Lgb/e;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind interface;
  #L2aa79e.  v3:= temp @kind object;
  #L2aa7a0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aa7a6.  v2:= temp;
  #L2aa7a8.  v3:= v9.`eb.i.d` @type ^`int`;
  #L2aa7ac.  call temp:= `c`(v3) @signature `Leb/j;.c:(I)Z` @kind static;
  #L2aa7b2.  v3:= temp;
  #L2aa7b4.  if v3 == 0 then goto L2aa7f4;
  #L2aa7b8.  v3:= new `java.lang.StringBuilder`;
  #L2aa7bc.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa7c2.  call temp:= `w`(v9) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa7c8.  v4:= temp @kind object;
  #L2aa7ca.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa7d0.  v4:= "cursor " @kind object;
  #L2aa7d4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa7da.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa7e0.  if v2 == 0 then goto L2aa7ea;
  #L2aa7e4.  v4:= " cancel" @kind object;
  #L2aa7e8.  goto L2aa7ee;
  #L2aa7ea.  v4:= " next" @kind object;
  #L2aa7ee.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa7f4.  v3:= 0I;
  #L2aa7f6.  v4:= 1I;
  #L2aa7f8.  if v2 == 0 then goto L2aa80a;
  #L2aa7fc.  call `k`(v9, v1) @signature `Leb/i;.k:(I)V` @kind direct;
  #L2aa802.  call `success`(v10, v3) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa808.  return v4;
  #L2aa80a.  v2:= v9.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2aa80e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa814.  v5:= temp @kind object;
  #L2aa816.  call temp:= `get`(v2, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aa81c.  v2:= temp @kind object;
  #L2aa81e.  v2:= (`eb.k`) v2 @kind object;
  #L2aa822.  v5:= 0I;
  #L2aa824.  if v2 == 0 then goto L2aa890;
  #L2aa828.  v6:= v2.`eb.k.c` @type ^`android.database.Cursor` @kind object;
  #L2aa82c.  v7:= v2.`eb.k.b` @type ^`int`;
  #L2aa830.  call temp:= `valueOf`(v7) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa836.  v7:= temp @kind object;
  #L2aa838.  call temp:= `m`(v9, v6, v7) @signature `Leb/i;.m:(Landroid/database/Cursor;Ljava/lang/Integer;)Ljava/util/Map;` @kind direct;
  #L2aa83e.  v7:= temp @kind object;
  #L2aa840.  call temp:= `isLast`(v6) @signature `Landroid/database/Cursor;.isLast:()Z` @kind interface;
  #L2aa846.  v8:= temp;
  #L2aa848.  if v8 != 0 then goto L2aa85c;
  #L2aa84c.  call temp:= `isAfterLast`(v6) @signature `Landroid/database/Cursor;.isAfterLast:()Z` @kind interface;
  #L2aa852.  v6:= temp;
  #L2aa854.  if v6 != 0 then goto L2aa85c;
  #L2aa858.  v6:= 1I;
  #L2aa85a.  goto L2aa85e;
  #L2aa85c.  v6:= 0I;
  #L2aa85e.  if v6 == 0 then goto L2aa870;
  #L2aa862.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa868.  v1:= temp @kind object;
  #L2aa86a.  call temp:= `put`(v7, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2aa870.  call `success`(v10, v7) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa876.  if v6 != 0 then goto L2aa880;
  #L2aa87a.  call `l`(v9, v2) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2aa880.  return v4;
  #L2aa882.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa884.  goto L2aa8c8;
  #L2aa886.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa888.  goto L2aa8f0;
  #L2aa88a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa88c.  v6:= 0I;
  #L2aa88e.  goto L2aa8c8;
  #L2aa890.  v0:= new `java.lang.IllegalStateException`;
  #L2aa894.  v4:= new `java.lang.StringBuilder`;
  #L2aa898.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa89e.  v6:= "Cursor " @kind object;
  #L2aa8a2.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa8a8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa8ae.  v1:= " not found" @kind object;
  #L2aa8b2.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa8b8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aa8be.  v1:= temp @kind object;
  #L2aa8c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2aa8c6.  throw v0;
  #L2aa8c8.  call `z`(v9, v0, v10) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @kind virtual;
  #L2aa8ce.  if v2 == 0 then goto L2aa8da;
  #L2aa8d2.  call `l`(v9, v2) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2aa8d8.  goto L2aa8dc;
  #L2aa8da.  v3:= v2 @kind object;
  #L2aa8dc.  if v6 != 0 then goto L2aa8ea;
  #L2aa8e0.  if v3 == 0 then goto L2aa8ea;
  #L2aa8e4.  call `l`(v9, v3) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2aa8ea.  return v5;
  #L2aa8ec.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa8ee.  v5:= v6;
  #L2aa8f0.  if v5 != 0 then goto L2aa8fe;
  #L2aa8f4.  if v2 == 0 then goto L2aa8fe;
  #L2aa8f8.  call `l`(v9, v2) @signature `Leb/i;.l:(Leb/k;)V` @kind direct;
  #L2aa8fe.  throw v10;
  catch `java.lang.Exception` @[L2aa828..L2aa854] goto L2aa88a;
  catch `java.lang.Throwable` @[L2aa828..L2aa854] goto L2aa886;
  catch `java.lang.Exception` @[L2aa862..L2aa876] goto L2aa882;
  catch `java.lang.Throwable` @[L2aa862..L2aa876] goto L2aa8ec;
  catch `java.lang.Exception` @[L2aa890..L2aa8c8] goto L2aa88a;
  catch `java.lang.Throwable` @[L2aa890..L2aa8c8] goto L2aa886;
  catch `java.lang.Throwable` @[L2aa8c8..L2aa8d8] goto L2aa8ec;
}
procedure `boolean` `s`(`eb.i` v6 @kind this, `gb.e` v7 @kind object) @signature `Leb/i;.s:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2aa944.  call temp:= `u`(v6, v7) @signature `Leb/i;.u:(Lgb/e;)Z` @kind direct;
  #L2aa94a.  v0:= temp;
  #L2aa94c.  v1:= 0I;
  #L2aa94e.  if v0 != 0 then goto L2aa954;
  #L2aa952.  return v1;
  #L2aa954.  call temp:= `c`(v7) @signature `Lgb/e;.c:()Z` @kind interface;
  #L2aa95a.  v0:= temp;
  #L2aa95c.  v2:= 1I;
  #L2aa95e.  v3:= 0I;
  #L2aa960.  if v0 == 0 then goto L2aa96c;
  #L2aa964.  call `success`(v7, v3) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa96a.  return v2;
  #L2aa96c.  call temp:= `y`(v6) @signature `Leb/i;.y:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2aa972.  v0:= temp @kind object;
  #L2aa974.  v4:= "SELECT changes()" @kind object;
  #L2aa978.  call temp:= `rawQuery`(v0, v4, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L2aa97e.  v0:= temp @kind object;
  #L2aa980.  if v0 == 0 then goto L2aa9fe;
  #L2aa984.  call temp:= `getCount`(v0) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L2aa98a.  v4:= temp;
  #L2aa98c.  if v4 <= 0 then goto L2aa9fe;
  #L2aa990.  call temp:= `moveToFirst`(v0) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L2aa996.  v4:= temp;
  #L2aa998.  if v4 == 0 then goto L2aa9fe;
  #L2aa99c.  call temp:= `getInt`(v0, v1) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L2aa9a2.  v3:= temp;
  #L2aa9a4.  v4:= v6.`eb.i.d` @type ^`int`;
  #L2aa9a8.  call temp:= `b`(v4) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aa9ae.  v4:= temp;
  #L2aa9b0.  if v4 == 0 then goto L2aa9dc;
  #L2aa9b4.  v4:= new `java.lang.StringBuilder`;
  #L2aa9b8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aa9be.  call temp:= `w`(v6) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aa9c4.  v5:= temp @kind object;
  #L2aa9c6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa9cc.  v5:= "changed " @kind object;
  #L2aa9d0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa9d6.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aa9dc.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2aa9e2.  v3:= temp @kind object;
  #L2aa9e4.  call `success`(v7, v3) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aa9ea.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aa9f0.  return v2;
  #L2aa9f2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aa9f4.  v3:= v0 @kind object;
  #L2aa9f6.  goto L2aaa4a;
  #L2aa9f8.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aa9fa.  v3:= v0 @kind object;
  #L2aa9fc.  goto L2aaa38;
  #L2aa9fe.  v4:= new `java.lang.StringBuilder`;
  #L2aaa02.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aaa08.  call temp:= `w`(v6) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aaa0e.  v5:= temp @kind object;
  #L2aaa10.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaa16.  v5:= "fail to read changes for Update/Delete" @kind object;
  #L2aaa1a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaa20.  call `success`(v7, v3) @signature `Lgb/f;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aaa26.  if v0 == 0 then goto L2aaa30;
  #L2aaa2a.  call `close`(v0) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aaa30.  return v2;
  #L2aaa32.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aaa34.  goto L2aaa4a;
  #L2aaa36.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aaa38.  call `z`(v6, v2, v7) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @kind virtual;
  #L2aaa3e.  if v3 == 0 then goto L2aaa48;
  #L2aaa42.  call `close`(v3) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aaa48.  return v1;
  #L2aaa4a.  if v3 == 0 then goto L2aaa54;
  #L2aaa4e.  call `close`(v3) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L2aaa54.  throw v7;
  catch `java.lang.Exception` @[L2aa96c..L2aa980] goto L2aaa36;
  catch `java.lang.Throwable` @[L2aa96c..L2aa980] goto L2aaa32;
  catch `java.lang.Exception` @[L2aa984..L2aa9ea] goto L2aa9f8;
  catch `java.lang.Throwable` @[L2aa984..L2aa9ea] goto L2aa9f2;
  catch `java.lang.Exception` @[L2aa9fe..L2aaa26] goto L2aa9f8;
  catch `java.lang.Throwable` @[L2aa9fe..L2aaa26] goto L2aa9f2;
  catch `java.lang.Throwable` @[L2aaa38..L2aaa3e] goto L2aaa32;
}
procedure `boolean` `u`(`eb.i` v5 @kind this, `gb.e` v6 @kind object) @signature `Leb/i;.u:(Lgb/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2aaa98.  call temp:= `b`(v6) @signature `Lgb/e;.b:()Leb/t;` @kind interface;
  #L2aaa9e.  v0:= temp @kind object;
  #L2aaaa0.  v1:= v5.`eb.i.d` @type ^`int`;
  #L2aaaa4.  call temp:= `b`(v1) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aaaaa.  v1:= temp;
  #L2aaaac.  if v1 == 0 then goto L2aaace;
  #L2aaab0.  v1:= new `java.lang.StringBuilder`;
  #L2aaab4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aaaba.  call temp:= `w`(v5) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aaac0.  v2:= temp @kind object;
  #L2aaac2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaac8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaace.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L2aaad2.  call temp:= `h`(v6) @signature `Lgb/e;.h:()Ljava/lang/Boolean;` @kind interface;
  #L2aaad8.  v2:= temp @kind object;
  #L2aaada.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/Boolean;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aaae0.  v1:= temp;
  #L2aaae2.  v2:= 0I;
  #L2aaae4.  call temp:= `y`(v5) @signature `Leb/i;.y:()Landroid/database/sqlite/SQLiteDatabase;` @kind virtual;
  #L2aaaea.  v3:= temp @kind object;
  #L2aaaec.  call temp:= `c`(v0) @signature `Leb/t;.c:()Ljava/lang/String;` @kind virtual;
  #L2aaaf2.  v4:= temp @kind object;
  #L2aaaf4.  call temp:= `d`(v0) @signature `Leb/t;.d:()[Ljava/lang/Object;` @kind virtual;
  #L2aaafa.  v0:= temp @kind object;
  #L2aaafc.  call `execSQL`(v3, v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L2aab02.  v0:= 1I;
  #L2aab04.  if v1 == 0 then goto L2aab0c;
  #L2aab08.  v5.`eb.i.j` @type ^`boolean` := v0 @kind boolean;
  #L2aab0c.  if v1 != 0 then goto L2aab14;
  #L2aab10.  v5.`eb.i.j` @type ^`boolean` := v2 @kind boolean;
  #L2aab14.  return v0;
  #L2aab16.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2aab18.  goto L2aab2c;
  #L2aab1a.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2aab1c.  call `z`(v5, v0, v6) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @kind virtual;
  #L2aab22.  if v1 != 0 then goto L2aab2a;
  #L2aab26.  v5.`eb.i.j` @type ^`boolean` := v2 @kind boolean;
  #L2aab2a.  return v2;
  #L2aab2c.  if v1 != 0 then goto L2aab34;
  #L2aab30.  v5.`eb.i.j` @type ^`boolean` := v2 @kind boolean;
  #L2aab34.  throw v6;
  catch `java.lang.Exception` @[L2aaae4..L2aab0c] goto L2aab1a;
  catch `java.lang.Throwable` @[L2aaae4..L2aab0c] goto L2aab16;
  catch `java.lang.Throwable` @[L2aab1c..L2aab22] goto L2aab16;
}
procedure `void` `A`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.A:(Lgb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab1b8.  v0:= new `eb.d`;
  #L2ab1bc.  call `<init>`(v0, v1, v2) @signature `Leb/d;.<init>:(Leb/i;Lgb/e;)V` @kind direct;
  #L2ab1c2.  call `N`(v1, v2, v0) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab1c8.  return @kind void;
}
procedure `void` `H`(`eb.i` v3 @kind this) @signature `Leb/i;.H:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ab2ec.  v0:= `@@eb.i.n` @type ^`java.lang.Boolean` @kind object;
  #L2ab2f0.  if v0 != 0 then goto L2ab34a;
  #L2ab2f4.  v0:= v3.`eb.i.e` @type ^`android.content.Context` @kind object;
  #L2ab2f8.  call temp:= `i`(v0) @signature `Leb/i;.i:(Landroid/content/Context;)Z` @kind static;
  #L2ab2fe.  v0:= temp;
  #L2ab300.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L2ab306.  v0:= temp @kind object;
  #L2ab308.  `@@eb.i.n` @type ^`java.lang.Boolean` := v0 @kind object;
  #L2ab30c.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2ab312.  v0:= temp;
  #L2ab314.  if v0 == 0 then goto L2ab34a;
  #L2ab318.  v0:= v3.`eb.i.d` @type ^`int`;
  #L2ab31c.  call temp:= `c`(v0) @signature `Leb/j;.c:(I)Z` @kind static;
  #L2ab322.  v0:= temp;
  #L2ab324.  if v0 == 0 then goto L2ab34a;
  #L2ab328.  v0:= new `java.lang.StringBuilder`;
  #L2ab32c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ab332.  call temp:= `w`(v3) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2ab338.  v1:= temp @kind object;
  #L2ab33a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab340.  v1:= "[sqflite] WAL enabled" @kind object;
  #L2ab344.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab34a.  v0:= `@@eb.i.n` @type ^`java.lang.Boolean` @kind object;
  #L2ab34e.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L2ab354.  v0:= temp;
  #L2ab356.  if v0 == 0 then goto L2ab360;
  #L2ab35a.  v0:= 805306368I;
  #L2ab35e.  goto L2ab364;
  #L2ab360.  v0:= 268435456I;
  #L2ab364.  v1:= v3.`eb.i.b` @type ^`java.lang.String` @kind object;
  #L2ab368.  v2:= 0I;
  #L2ab36a.  call temp:= `openDatabase`(v1, v2, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.openDatabase:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L2ab370.  v0:= temp @kind object;
  #L2ab372.  v3.`eb.i.i` @type ^`android.database.sqlite.SQLiteDatabase` := v0 @kind object;
  #L2ab376.  return @kind void;
}
procedure `void` `I`(`eb.i` v4 @kind this) @signature `Leb/i;.I:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ab388.  v0:= v4.`eb.i.b` @type ^`java.lang.String` @kind object;
  #L2ab38c.  v1:= new `eb.i$a`;
  #L2ab390.  call `<init>`(v1, v4) @signature `Leb/i$a;.<init>:(Leb/i;)V` @kind direct;
  #L2ab396.  v2:= 0I;
  #L2ab398.  v3:= 1I;
  #L2ab39a.  call temp:= `openDatabase`(v0, v2, v3, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.openDatabase:(Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;ILandroid/database/DatabaseErrorHandler;)Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L2ab3a0.  v0:= temp @kind object;
  #L2ab3a2.  v4.`eb.i.i` @type ^`android.database.sqlite.SQLiteDatabase` := v0 @kind object;
  #L2ab3a6.  return @kind void;
}
procedure `void` `J`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.J:(Lgb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab3b8.  v0:= new `eb.f`;
  #L2ab3bc.  call `<init>`(v0, v1, v2) @signature `Leb/f;.<init>:(Leb/i;Lgb/e;)V` @kind direct;
  #L2ab3c2.  call `N`(v1, v2, v0) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab3c8.  return @kind void;
}
procedure `void` `K`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.K:(Lgb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab3dc.  v0:= new `eb.e`;
  #L2ab3e0.  call `<init>`(v0, v1, v2) @signature `Leb/e;.<init>:(Leb/i;Lgb/e;)V` @kind direct;
  #L2ab3e6.  call `N`(v1, v2, v0) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab3ec.  return @kind void;
}
procedure `void` `M`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.M:(Lgb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab450.  v0:= new `eb.g`;
  #L2ab454.  call `<init>`(v0, v1, v2) @signature `Leb/g;.<init>:(Leb/i;Lgb/e;)V` @kind direct;
  #L2ab45a.  call `N`(v1, v2, v0) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab460.  return @kind void;
}
procedure `void` `h`(`eb.i` v8 @kind this, `io.flutter.plugin.common.k` v9 @kind object, `io.flutter.plugin.common.l$d` v10 @kind object) @signature `Leb/i;.h:(Lio/flutter/plugin/common/k;Lio/flutter/plugin/common/l$d;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2aadac.  v0:= new `gb.d`;
  #L2aadb0.  call `<init>`(v0, v9, v10) @signature `Lgb/d;.<init>:(Lio/flutter/plugin/common/k;Lio/flutter/plugin/common/l$d;)V` @kind direct;
  #L2aadb6.  call temp:= `c`(v0) @signature `Lgb/b;.c:()Z` @kind virtual;
  #L2aadbc.  v9:= temp;
  #L2aadbe.  call temp:= `j`(v0) @signature `Lgb/b;.j:()Z` @kind virtual;
  #L2aadc4.  v1:= temp;
  #L2aadc6.  v2:= "operations" @kind object;
  #L2aadca.  call temp:= `a`(v0, v2) @signature `Lgb/d;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2aadd0.  v0:= temp @kind object;
  #L2aadd2.  v0:= (`java.util.List`) v0 @kind object;
  #L2aadd6.  v2:= new `java.util.ArrayList`;
  #L2aadda.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2aade0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2aade6.  v0:= temp @kind object;
  #L2aade8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2aadee.  v3:= temp;
  #L2aadf0.  v4:= 0I;
  #L2aadf2.  if v3 == 0 then goto L2aaf6c;
  #L2aadf6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2aadfc.  v3:= temp @kind object;
  #L2aadfe.  v3:= (`java.util.Map`) v3 @kind object;
  #L2aae02.  v5:= new `gb.c`;
  #L2aae06.  call `<init>`(v5, v3, v9) @signature `Lgb/c;.<init>:(Ljava/util/Map;Z)V` @kind direct;
  #L2aae0c.  call temp:= `f`(v5) @signature `Lgb/c;.f:()Ljava/lang/String;` @kind virtual;
  #L2aae12.  v3:= temp @kind object;
  #L2aae14.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2aae1a.  v6:= -1I;
  #L2aae1c.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2aae22.  v7:= temp;
  #L2aae24.  goto L2aaf80;
  #L2aae2a.  goto L2aae82;
  #L2aae2c.  v7:= "query" @kind object;
  #L2aae30.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aae36.  v7:= temp;
  #L2aae38.  if v7 != 0 then goto L2aae3e;
  #L2aae3c.  goto L2aae82;
  #L2aae3e.  v6:= 3I;
  #L2aae40.  goto L2aae82;
  #L2aae42.  v7:= "update" @kind object;
  #L2aae46.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aae4c.  v7:= temp;
  #L2aae4e.  if v7 != 0 then goto L2aae54;
  #L2aae52.  goto L2aae82;
  #L2aae54.  v6:= 2I;
  #L2aae56.  goto L2aae82;
  #L2aae58.  v7:= "insert" @kind object;
  #L2aae5c.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aae62.  v7:= temp;
  #L2aae64.  if v7 != 0 then goto L2aae6a;
  #L2aae68.  goto L2aae82;
  #L2aae6a.  v6:= 1I;
  #L2aae6c.  goto L2aae82;
  #L2aae6e.  v7:= "execute" @kind object;
  #L2aae72.  call temp:= `equals`(v3, v7) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2aae78.  v7:= temp;
  #L2aae7a.  if v7 != 0 then goto L2aae80;
  #L2aae7e.  goto L2aae82;
  #L2aae80.  v6:= 0I;
  #L2aae82.  goto L2aafa4;
  #L2aae88.  v9:= new `java.lang.StringBuilder`;
  #L2aae8c.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aae92.  v0:= "Batch method '" @kind object;
  #L2aae96.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aae9c.  call temp:= `append`(v9, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaea2.  v0:= "' not supported" @kind object;
  #L2aaea6.  call temp:= `append`(v9, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aaeac.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aaeb2.  v9:= temp @kind object;
  #L2aaeb4.  v0:= "bad_param" @kind object;
  #L2aaeb8.  call `error`(v10, v0, v9, v4) @signature `Lio/flutter/plugin/common/l$d;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2aaebe.  return @kind void;
  #L2aaec0.  call temp:= `q`(v8, v5) @signature `Leb/i;.q:(Lgb/e;)Z` @kind direct;
  #L2aaec6.  v3:= temp;
  #L2aaec8.  if v3 == 0 then goto L2aaed4;
  #L2aaecc.  call `r`(v5, v2) @signature `Lgb/c;.r:(Ljava/util/List;)V` @kind virtual;
  #L2aaed2.  goto L2aade8;
  #L2aaed4.  if v1 == 0 then goto L2aaee0;
  #L2aaed8.  call `q`(v5, v2) @signature `Lgb/c;.q:(Ljava/util/List;)V` @kind virtual;
  #L2aaede.  goto L2aade8;
  #L2aaee0.  call `p`(v5, v10) @signature `Lgb/c;.p:(Lio/flutter/plugin/common/l$d;)V` @kind virtual;
  #L2aaee6.  return @kind void;
  #L2aaee8.  call temp:= `s`(v8, v5) @signature `Leb/i;.s:(Lgb/e;)Z` @kind direct;
  #L2aaeee.  v3:= temp;
  #L2aaef0.  if v3 == 0 then goto L2aaefe;
  #L2aaef4.  call `r`(v5, v2) @signature `Lgb/c;.r:(Ljava/util/List;)V` @kind virtual;
  #L2aaefa.  goto L2aade8;
  #L2aaefe.  if v1 == 0 then goto L2aaf0c;
  #L2aaf02.  call `q`(v5, v2) @signature `Lgb/c;.q:(Ljava/util/List;)V` @kind virtual;
  #L2aaf08.  goto L2aade8;
  #L2aaf0c.  call `p`(v5, v10) @signature `Lgb/c;.p:(Lio/flutter/plugin/common/l$d;)V` @kind virtual;
  #L2aaf12.  return @kind void;
  #L2aaf14.  call temp:= `p`(v8, v5) @signature `Leb/i;.p:(Lgb/e;)Z` @kind direct;
  #L2aaf1a.  v3:= temp;
  #L2aaf1c.  if v3 == 0 then goto L2aaf2a;
  #L2aaf20.  call `r`(v5, v2) @signature `Lgb/c;.r:(Ljava/util/List;)V` @kind virtual;
  #L2aaf26.  goto L2aade8;
  #L2aaf2a.  if v1 == 0 then goto L2aaf38;
  #L2aaf2e.  call `q`(v5, v2) @signature `Lgb/c;.q:(Ljava/util/List;)V` @kind virtual;
  #L2aaf34.  goto L2aade8;
  #L2aaf38.  call `p`(v5, v10) @signature `Lgb/c;.p:(Lio/flutter/plugin/common/l$d;)V` @kind virtual;
  #L2aaf3e.  return @kind void;
  #L2aaf40.  call temp:= `o`(v8, v5) @signature `Leb/i;.o:(Lgb/e;)Z` @kind direct;
  #L2aaf46.  v3:= temp;
  #L2aaf48.  if v3 == 0 then goto L2aaf56;
  #L2aaf4c.  call `r`(v5, v2) @signature `Lgb/c;.r:(Ljava/util/List;)V` @kind virtual;
  #L2aaf52.  goto L2aade8;
  #L2aaf56.  if v1 == 0 then goto L2aaf64;
  #L2aaf5a.  call `q`(v5, v2) @signature `Lgb/c;.q:(Ljava/util/List;)V` @kind virtual;
  #L2aaf60.  goto L2aade8;
  #L2aaf64.  call `p`(v5, v10) @signature `Lgb/c;.p:(Lio/flutter/plugin/common/l$d;)V` @kind virtual;
  #L2aaf6a.  return @kind void;
  #L2aaf6c.  if v9 == 0 then goto L2aaf78;
  #L2aaf70.  call `success`(v10, v4) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aaf76.  goto L2aaf7e;
  #L2aaf78.  call `success`(v10, v2) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2aaf7e.  return @kind void;
  #L2aaf80.  switch v7
                  | -1319569547 => goto L2aae6e
                  | -1183792455 => goto L2aae58
                  | -838846263 => goto L2aae42
                  | 107944136 => goto L2aae2c
                  | else => goto L2aae2a;
  #L2aafa4.  switch v6
                  | 0 => goto L2aaf40
                  | 1 => goto L2aaf14
                  | 2 => goto L2aaee8
                  | 3 => goto L2aaec0
                  | else => goto L2aae88;
}
procedure `void` `j`(`eb.i` v2 @kind this) @signature `Leb/i;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2aafcc.  v0:= v2.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2aafd0.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2aafd6.  v0:= temp;
  #L2aafd8.  if v0 != 0 then goto L2ab020;
  #L2aafdc.  v0:= v2.`eb.i.d` @type ^`int`;
  #L2aafe0.  call temp:= `b`(v0) @signature `Leb/j;.b:(I)Z` @kind static;
  #L2aafe6.  v0:= temp;
  #L2aafe8.  if v0 == 0 then goto L2ab020;
  #L2aafec.  v0:= new `java.lang.StringBuilder`;
  #L2aaff0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aaff6.  call temp:= `w`(v2) @signature `Leb/i;.w:()Ljava/lang/String;` @kind virtual;
  #L2aaffc.  v1:= temp @kind object;
  #L2aaffe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab004.  v1:= v2.`eb.i.g` @type ^`java.util.Map` @kind object;
  #L2ab008.  call temp:= `size`(v1) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2ab00e.  v1:= temp;
  #L2ab010.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab016.  v1:= " cursor(s) are left opened" @kind object;
  #L2ab01a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab020.  v0:= v2.`eb.i.i` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2ab024.  call `close`(v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.close:()V` @kind virtual;
  #L2ab02a.  return @kind void;
}
procedure `void` `t`(`eb.i` v1 @kind this, `gb.e` v2 @kind object) @signature `Leb/i;.t:(Lgb/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ab110.  v0:= new `eb.h`;
  #L2ab114.  call `<init>`(v0, v1, v2) @signature `Leb/h;.<init>:(Leb/i;Lgb/e;)V` @kind direct;
  #L2ab11a.  call `N`(v1, v2, v0) @signature `Leb/i;.N:(Lgb/e;Ljava/lang/Runnable;)V` @kind direct;
  #L2ab120.  return @kind void;
}
procedure `android.database.sqlite.SQLiteDatabase` `v`(`eb.i` v1 @kind this) @signature `Leb/i;.v:()Landroid/database/sqlite/SQLiteDatabase;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa360.  v0:= v1.`eb.i.i` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2aa364.  return v0 @kind object;
}
procedure `java.lang.String` `w`(`eb.i` v2 @kind this) @signature `Leb/i;.w:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2aab60.  v0:= new `java.lang.StringBuilder`;
  #L2aab64.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aab6a.  v1:= "[" @kind object;
  #L2aab6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab74.  call temp:= `x`(v2) @signature `Leb/i;.x:()Ljava/lang/String;` @kind virtual;
  #L2aab7a.  v1:= temp @kind object;
  #L2aab7c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab82.  v1:= "] " @kind object;
  #L2aab86.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aab8c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aab92.  v0:= temp @kind object;
  #L2aab94.  return v0 @kind object;
}
procedure `java.lang.String` `x`(`eb.i` v4 @kind this) @signature `Leb/i;.x:()Ljava/lang/String;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2aaba8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2aabae.  v0:= temp @kind object;
  #L2aabb0.  v1:= new `java.lang.StringBuilder`;
  #L2aabb4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2aabba.  v2:= "" @kind object;
  #L2aabbe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabc4.  v2:= v4.`eb.i.c` @type ^`int`;
  #L2aabc8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabce.  v2:= "," @kind object;
  #L2aabd2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabd8.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L2aabde.  v2:= temp @kind object;
  #L2aabe0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabe6.  v2:= "(" @kind object;
  #L2aabea.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabf0.  call temp:= `getId`(v0) @signature `Ljava/lang/Thread;.getId:()J` @kind virtual;
  #L2aabf6.  v2:= temp @kind wide;
  #L2aabf8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aabfe.  v0:= ")" @kind object;
  #L2aac02.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2aac08.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2aac0e.  v0:= temp @kind object;
  #L2aac10.  return v0 @kind object;
}
procedure `android.database.sqlite.SQLiteDatabase` `y`(`eb.i` v1 @kind this) @signature `Leb/i;.y:()Landroid/database/sqlite/SQLiteDatabase;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2aa378.  v0:= v1.`eb.i.i` @type ^`android.database.sqlite.SQLiteDatabase` @kind object;
  #L2aa37c.  return v0 @kind object;
}
procedure `void` `z`(`eb.i` v2 @kind this, `java.lang.Exception` v3 @kind object, `gb.e` v4 @kind object) @signature `Leb/i;.z:(Ljava/lang/Exception;Lgb/e;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L2ab134.  v0:= instanceof @variable v3 @type ^`android.database.sqlite.SQLiteCantOpenDatabaseException` @kind boolean;
  #L2ab138.  v1:= "sqlite_error" @kind object;
  #L2ab13c.  if v0 == 0 then goto L2ab170;
  #L2ab140.  v3:= new `java.lang.StringBuilder`;
  #L2ab144.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ab14a.  v0:= "open_failed " @kind object;
  #L2ab14e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab154.  v0:= v2.`eb.i.b` @type ^`java.lang.String` @kind object;
  #L2ab158.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab15e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ab164.  v3:= temp @kind object;
  #L2ab166.  v0:= 0I;
  #L2ab168.  call `error`(v4, v1, v3, v0) @signature `Lgb/f;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2ab16e.  return @kind void;
  #L2ab170.  v0:= instanceof @variable v3 @type ^`android.database.SQLException` @kind boolean;
  #L2ab174.  if v0 == 0 then goto L2ab190;
  #L2ab178.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2ab17e.  v3:= temp @kind object;
  #L2ab180.  call temp:= `a`(v4) @signature `Lgb/h;.a:(Lgb/e;)Ljava/util/Map;` @kind static;
  #L2ab186.  v0:= temp @kind object;
  #L2ab188.  call `error`(v4, v1, v3, v0) @signature `Lgb/f;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2ab18e.  return @kind void;
  #L2ab190.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2ab196.  v3:= temp @kind object;
  #L2ab198.  call temp:= `a`(v4) @signature `Lgb/h;.a:(Lgb/e;)Ljava/util/Map;` @kind static;
  #L2ab19e.  v0:= temp @kind object;
  #L2ab1a0.  call `error`(v4, v1, v3, v0) @signature `Lgb/f;.error:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind interface;
  #L2ab1a6.  return @kind void;
}
