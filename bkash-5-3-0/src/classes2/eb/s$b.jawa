record `eb.s$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `eb.i` `eb.s$b.g` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.String` `eb.s$b.h` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugin.common.l$d` `eb.s$b.i` @AccessFlag FINAL_SYNTHETIC;
  `eb.s` `eb.s$b.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`eb.s$b` v0 @kind this, `eb.s` v1 @kind object, `eb.i` v2 @kind object, `java.lang.String` v3 @kind object, `io.flutter.plugin.common.l$d` v4 @kind object) @signature `Leb/s$b;.<init>:(Leb/s;Leb/i;Ljava/lang/String;Lio/flutter/plugin/common/l$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ab820.  v0.`eb.s$b.j` @type ^`eb.s` := v1 @kind object;
  #L2ab824.  v0.`eb.s$b.g` @type ^`eb.i` := v2 @kind object;
  #L2ab828.  v0.`eb.s$b.h` @type ^`java.lang.String` := v3 @kind object;
  #L2ab82c.  v0.`eb.s$b.i` @type ^`io.flutter.plugin.common.l$d` := v4 @kind object;
  #L2ab830.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ab836.  return @kind void;
}
procedure `void` `run`(`eb.s$b` v4 @kind this) @signature `Leb/s$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ab848.  call temp:= `h`() @signature `Leb/s;.h:()Ljava/lang/Object;` @kind static;
  #L2ab84e.  v0:= temp @kind object;
  #L2ab850.  @monitorenter v0
  #L2ab852.  v1:= v4.`eb.s$b.g` @type ^`eb.i` @kind object;
  #L2ab856.  if v1 == 0 then goto L2ab864;
  #L2ab85a.  v2:= v4.`eb.s$b.j` @type ^`eb.s` @kind object;
  #L2ab85e.  call `i`(v2, v1) @signature `Leb/s;.i:(Leb/s;Leb/i;)V` @kind static;
  #L2ab864.  v1:= `@@eb.s.m` @type ^`int`;
  #L2ab868.  call temp:= `c`(v1) @signature `Leb/j;.c:(I)Z` @kind static;
  #L2ab86e.  v1:= temp;
  #L2ab870.  if v1 == 0 then goto L2ab892;
  #L2ab874.  v1:= new `java.lang.StringBuilder`;
  #L2ab878.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ab87e.  v2:= "delete database " @kind object;
  #L2ab882.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab888.  v2:= v4.`eb.s$b.h` @type ^`java.lang.String` @kind object;
  #L2ab88c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab892.  v1:= v4.`eb.s$b.h` @type ^`java.lang.String` @kind object;
  #L2ab896.  call `n`(v1) @signature `Leb/i;.n:(Ljava/lang/String;)V` @kind static;
  #L2ab89c.  goto L2ab8d2;
  #L2ab89e.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L2ab8a0.  v2:= new `java.lang.StringBuilder`;
  #L2ab8a4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ab8aa.  v3:= "error " @kind object;
  #L2ab8ae.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab8b4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab8ba.  v1:= " while closing database " @kind object;
  #L2ab8be.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab8c4.  call temp:= `j`() @signature `Leb/s;.j:()I` @kind static;
  #L2ab8ca.  v1:= temp;
  #L2ab8cc.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ab8d2.  @monitorexit v0
  #L2ab8d4.  v0:= v4.`eb.s$b.i` @type ^`io.flutter.plugin.common.l$d` @kind object;
  #L2ab8d8.  v1:= 0I;
  #L2ab8da.  call `success`(v0, v1) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2ab8e0.  return @kind void;
  #L2ab8e2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ab8e4.  @monitorexit v0
  #L2ab8e6.  throw v1;
  catch `java.lang.Throwable` @[L2ab852..L2ab864] goto L2ab8e2;
  catch `java.lang.Exception` @[L2ab864..L2ab89c] goto L2ab89e;
  catch `java.lang.Throwable` @[L2ab864..L2ab89c] goto L2ab8e2;
  catch `java.lang.Throwable` @[L2ab8a0..L2ab8d4] goto L2ab8e2;
  catch `java.lang.Throwable` @[L2ab8e4..L2ab8e6] goto L2ab8e2;
}
