record `eb.j` @kind class @AccessFlag PUBLIC {
}
procedure `java.lang.Integer` `a`(`io.flutter.plugin.common.k` v1 @kind object) @signature `Leb/j;.a:(Lio/flutter/plugin/common/k;)Ljava/lang/Integer;` @AccessFlag STATIC {
    temp;
    v0;

  #L2ab540.  v0:= "logLevel" @kind object;
  #L2ab544.  call temp:= `a`(v1, v0) @signature `Lio/flutter/plugin/common/k;.a:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L2ab54a.  v1:= temp @kind object;
  #L2ab54c.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L2ab550.  return v1 @kind object;
}
procedure `boolean` `b`(`int` v1 ) @signature `Leb/j;.b:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2ab504.  v0:= 1I;
  #L2ab506.  if v1 < v0 then goto L2ab50c;
  #L2ab50a.  goto L2ab50e;
  #L2ab50c.  v0:= 0I;
  #L2ab50e.  return v0;
}
procedure `boolean` `c`(`int` v1 ) @signature `Leb/j;.c:(I)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L2ab520.  v0:= 2I;
  #L2ab522.  if v1 < v0 then goto L2ab52a;
  #L2ab526.  v1:= 1I;
  #L2ab528.  goto L2ab52c;
  #L2ab52a.  v1:= 0I;
  #L2ab52c.  return v1;
}
