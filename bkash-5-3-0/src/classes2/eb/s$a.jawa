record `eb.s$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `eb.i` `eb.s$a.g` @AccessFlag FINAL_SYNTHETIC;
  `io.flutter.plugin.common.l$d` `eb.s$a.h` @AccessFlag FINAL_SYNTHETIC;
  `eb.s` `eb.s$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`eb.s$a` v0 @kind this, `eb.s` v1 @kind object, `eb.i` v2 @kind object, `io.flutter.plugin.common.l$d` v3 @kind object) @signature `Leb/s$a;.<init>:(Leb/s;Leb/i;Lio/flutter/plugin/common/l$d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2ab7a8.  v0.`eb.s$a.i` @type ^`eb.s` := v1 @kind object;
  #L2ab7ac.  v0.`eb.s$a.g` @type ^`eb.i` := v2 @kind object;
  #L2ab7b0.  v0.`eb.s$a.h` @type ^`io.flutter.plugin.common.l$d` := v3 @kind object;
  #L2ab7b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ab7ba.  return @kind void;
}
procedure `void` `run`(`eb.s$a` v3 @kind this) @signature `Leb/s$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ab7cc.  call temp:= `h`() @signature `Leb/s;.h:()Ljava/lang/Object;` @kind static;
  #L2ab7d2.  v0:= temp @kind object;
  #L2ab7d4.  @monitorenter v0
  #L2ab7d6.  v1:= v3.`eb.s$a.i` @type ^`eb.s` @kind object;
  #L2ab7da.  v2:= v3.`eb.s$a.g` @type ^`eb.i` @kind object;
  #L2ab7de.  call `i`(v1, v2) @signature `Leb/s;.i:(Leb/s;Leb/i;)V` @kind static;
  #L2ab7e4.  @monitorexit v0
  #L2ab7e6.  v0:= v3.`eb.s$a.h` @type ^`io.flutter.plugin.common.l$d` @kind object;
  #L2ab7ea.  v1:= 0I;
  #L2ab7ec.  call `success`(v0, v1) @signature `Lio/flutter/plugin/common/l$d;.success:(Ljava/lang/Object;)V` @kind interface;
  #L2ab7f2.  return @kind void;
  #L2ab7f4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ab7f6.  @monitorexit v0
  #L2ab7f8.  throw v1;
  catch `java.lang.Throwable` @[L2ab7d6..L2ab7e6] goto L2ab7f4;
  catch `java.lang.Throwable` @[L2ab7f6..L2ab7f8] goto L2ab7f4;
}
