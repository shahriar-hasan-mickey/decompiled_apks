record `l9.b` @kind class @AccessFlag FINAL extends `l9.f` @kind class {
  `java.lang.String` `l9.b.a` @AccessFlag PRIVATE_FINAL;
  `long` `l9.b.b` @AccessFlag PRIVATE_FINAL;
  `l9.f$b` `l9.b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`l9.b` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `l9.f$b` v4 @kind object) @signature `Ll9/b;.<init>:(Ljava/lang/String;JLl9/f$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L31bb24.  call `<init>`(v0) @signature `Ll9/f;.<init>:()V` @kind direct;
  #L31bb2a.  v0.`l9.b.a` @type ^`java.lang.String` := v1 @kind object;
  #L31bb2e.  v0.`l9.b.b` @type ^`long` := v2 @kind wide;
  #L31bb32.  v0.`l9.b.c` @type ^`l9.f$b` := v4 @kind object;
  #L31bb36.  return @kind void;
}
procedure `void` `<init>`(`l9.b` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `l9.f$b` v4 @kind object, `l9.b$a` v5 @kind object) @signature `Ll9/b;.<init>:(Ljava/lang/String;JLl9/f$b;Ll9/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L31bb48.  call `<init>`(v0, v1, v2, v4) @signature `Ll9/b;.<init>:(Ljava/lang/String;JLl9/f$b;)V` @kind direct;
  #L31bb4e.  return @kind void;
}
procedure `l9.f$b` `b`(`l9.b` v1 @kind this) @signature `Ll9/b;.b:()Ll9/f$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31baf4.  v0:= v1.`l9.b.c` @type ^`l9.f$b` @kind object;
  #L31baf8.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`l9.b` v1 @kind this) @signature `Ll9/b;.c:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31ba70.  v0:= v1.`l9.b.a` @type ^`java.lang.String` @kind object;
  #L31ba74.  return v0 @kind object;
}
procedure `long` `d`(`l9.b` v2 @kind this) @signature `Ll9/b;.d:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31bb0c.  v0:= v2.`l9.b.b` @type ^`long` @kind wide;
  #L31bb10.  return v0 @kind wide;
}
procedure `boolean` `equals`(`l9.b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ll9/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31b978.  v0:= 1I;
  #L31b97a.  if v8 != v7 then goto L31b980;
  #L31b97e.  return v0;
  #L31b980.  v1:= instanceof @variable v8 @type ^`l9.f` @kind boolean;
  #L31b984.  v2:= 0I;
  #L31b986.  if v1 == 0 then goto L31b9fc;
  #L31b98a.  v8:= (`l9.f`) v8 @kind object;
  #L31b98e.  v1:= v7.`l9.b.a` @type ^`java.lang.String` @kind object;
  #L31b992.  if v1 != 0 then goto L31b9a4;
  #L31b996.  call temp:= `c`(v8) @signature `Ll9/f;.c:()Ljava/lang/String;` @kind virtual;
  #L31b99c.  v1:= temp @kind object;
  #L31b99e.  if v1 != 0 then goto L31b9f8;
  #L31b9a2.  goto L31b9b8;
  #L31b9a4.  call temp:= `c`(v8) @signature `Ll9/f;.c:()Ljava/lang/String;` @kind virtual;
  #L31b9aa.  v3:= temp @kind object;
  #L31b9ac.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31b9b2.  v1:= temp;
  #L31b9b4.  if v1 == 0 then goto L31b9f8;
  #L31b9b8.  v3:= v7.`l9.b.b` @type ^`long` @kind wide;
  #L31b9bc.  call temp:= `d`(v8) @signature `Ll9/f;.d:()J` @kind virtual;
  #L31b9c2.  v5:= temp @kind wide;
  #L31b9c4.  v1:= lcmp(v3, v5);
  #L31b9c8.  if v1 != 0 then goto L31b9f8;
  #L31b9cc.  v1:= v7.`l9.b.c` @type ^`l9.f$b` @kind object;
  #L31b9d0.  if v1 != 0 then goto L31b9e2;
  #L31b9d4.  call temp:= `b`(v8) @signature `Ll9/f;.b:()Ll9/f$b;` @kind virtual;
  #L31b9da.  v8:= temp @kind object;
  #L31b9dc.  if v8 != 0 then goto L31b9f8;
  #L31b9e0.  goto L31b9fa;
  #L31b9e2.  call temp:= `b`(v8) @signature `Ll9/f;.b:()Ll9/f$b;` @kind virtual;
  #L31b9e8.  v8:= temp @kind object;
  #L31b9ea.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L31b9f0.  v8:= temp;
  #L31b9f2.  if v8 == 0 then goto L31b9f8;
  #L31b9f6.  goto L31b9fa;
  #L31b9f8.  v0:= 0I;
  #L31b9fa.  return v0;
  #L31b9fc.  return v2;
}
procedure `int` `hashCode`(`l9.b` v7 @kind this) @signature `Ll9/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L31ba10.  v0:= v7.`l9.b.a` @type ^`java.lang.String` @kind object;
  #L31ba14.  v1:= 0I;
  #L31ba16.  if v0 != 0 then goto L31ba1e;
  #L31ba1a.  v0:= 0I;
  #L31ba1c.  goto L31ba26;
  #L31ba1e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L31ba24.  v0:= temp;
  #L31ba26.  v2:= 1000003I;
  #L31ba2c.  v0:= v0 ^~ v2 @kind int;
  #L31ba2e.  v0:= v0 * v2 @kind int;
  #L31ba32.  v3:= v7.`l9.b.b` @type ^`long` @kind wide;
  #L31ba36.  v5:= 32I;
  #L31ba3a.  v5:= v3 ^>> v5 @kind long;
  #L31ba3e.  v3:= v3 ^~ v5 @kind long;
  #L31ba40.  v4:= (`int`) v3 @kind l2i;
  #L31ba42.  v0:= v0 ^~ v4 @kind int;
  #L31ba44.  v0:= v0 * v2 @kind int;
  #L31ba48.  v2:= v7.`l9.b.c` @type ^`l9.f$b` @kind object;
  #L31ba4c.  if v2 != 0 then goto L31ba52;
  #L31ba50.  goto L31ba5a;
  #L31ba52.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L31ba58.  v1:= temp;
  #L31ba5a.  v0:= v0 ^~ v1 @kind int;
  #L31ba5c.  return v0;
}
procedure `java.lang.String` `toString`(`l9.b` v3 @kind this) @signature `Ll9/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L31ba88.  v0:= new `java.lang.StringBuilder`;
  #L31ba8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L31ba92.  v1:= "TokenResult{token=" @kind object;
  #L31ba96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31ba9c.  v1:= v3.`l9.b.a` @type ^`java.lang.String` @kind object;
  #L31baa0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31baa6.  v1:= ", tokenExpirationTimestamp=" @kind object;
  #L31baaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31bab0.  v1:= v3.`l9.b.b` @type ^`long` @kind wide;
  #L31bab4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L31baba.  v1:= ", responseCode=" @kind object;
  #L31babe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31bac4.  v1:= v3.`l9.b.c` @type ^`l9.f$b` @kind object;
  #L31bac8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31bace.  v1:= "}" @kind object;
  #L31bad2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31bad8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L31bade.  v0:= temp @kind object;
  #L31bae0.  return v0 @kind object;
}
