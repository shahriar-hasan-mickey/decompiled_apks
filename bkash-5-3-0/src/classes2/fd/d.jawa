record `fd.d` @kind class @AccessFlag PUBLIC_ABSTRACT extends `fd.e` @kind interface {
}
procedure `void` `<init>`(`fd.d` v0 @kind this) @signature `Lfd/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b0244.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b024a.  return @kind void;
}
procedure `int` `b`() @signature `Lfd/d;.b:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b01bc.  call temp:= `a`() @signature `Lfd/b;.a:()I` @kind static;
  #L2b01c2.  v0:= temp;
  #L2b01c4.  return v0;
}
procedure `fd.d` `c`(`java.util.concurrent.Callable` v1 @kind object) @signature `Lfd/d;.c:(Ljava/util/concurrent/Callable;)Lfd/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2b0100.  v0:= "callable is null" @kind object;
  #L2b0104.  call temp:= `requireNonNull`(v1, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b010a.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.b`;
  #L2b010e.  call `<init>`(v0, v1) @signature `Lio/reactivex/rxjava3/internal/operators/observable/b;.<init>:(Ljava/util/concurrent/Callable;)V` @kind direct;
  #L2b0114.  call temp:= `j`(v0) @signature `Lld/a;.j:(Lfd/d;)Lfd/d;` @kind static;
  #L2b011a.  v1:= temp @kind object;
  #L2b011c.  return v1 @kind object;
}
procedure `void` `a`(`fd.d` v2 @kind this, `fd.f` v3 @kind object) @signature `Lfd/d;.a:(Lfd/f;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b025c.  v0:= "observer is null" @kind object;
  #L2b0260.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b0266.  call temp:= `n`(v2, v3) @signature `Lld/a;.n:(Lfd/d;Lfd/f;)Lfd/f;` @kind static;
  #L2b026c.  v3:= temp @kind object;
  #L2b026e.  v0:= "The RxJavaPlugins.onSubscribe hook returned a null Observer. Please change the handler provided to RxJavaPlugins.setOnObservableSubscribe for invalid null returns. Further reading: https://github.com/ReactiveX/RxJava/wiki/Plugins" @kind object;
  #L2b0272.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b0278.  call `h`(v2, v3) @signature `Lfd/d;.h:(Lfd/f;)V` @kind virtual;
  #L2b027e.  return @kind void;
  #L2b0280.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0282.  call `b`(v3) @signature `Lio/reactivex/rxjava3/exceptions/b;.b:(Ljava/lang/Throwable;)V` @kind static;
  #L2b0288.  call `k`(v3) @signature `Lld/a;.k:(Ljava/lang/Throwable;)V` @kind static;
  #L2b028e.  v0:= new `java.lang.NullPointerException`;
  #L2b0292.  v1:= "Actually not, but can't throw other exceptions due to RS" @kind object;
  #L2b0296.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2b029c.  call temp:= `initCause`(v0, v3) @signature `Ljava/lang/NullPointerException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L2b02a2.  throw v0;
  #L2b02a4.  v3:= Exception @type ^`java.lang.NullPointerException` @kind object;
  #L2b02a6.  throw v3;
  catch `java.lang.NullPointerException` @[L2b0266..L2b027e] goto L2b02a4;
  catch `java.lang.Throwable` @[L2b0266..L2b027e] goto L2b0280;
}
procedure `fd.d` `d`(`fd.d` v2 @kind this, `fd.g` v3 @kind object) @signature `Lfd/d;.d:(Lfd/g;)Lfd/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b0130.  call temp:= `b`() @signature `Lfd/d;.b:()I` @kind static;
  #L2b0136.  v0:= temp;
  #L2b0138.  v1:= 0I;
  #L2b013a.  call temp:= `e`(v2, v3, v1, v0) @signature `Lfd/d;.e:(Lfd/g;ZI)Lfd/d;` @kind virtual;
  #L2b0140.  v3:= temp @kind object;
  #L2b0142.  return v3 @kind object;
}
procedure `fd.d` `e`(`fd.d` v1 @kind this, `fd.g` v2 @kind object, `boolean` v3 , `int` v4 ) @signature `Lfd/d;.e:(Lfd/g;ZI)Lfd/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b0154.  v0:= "scheduler is null" @kind object;
  #L2b0158.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b015e.  v0:= "bufferSize" @kind object;
  #L2b0162.  call temp:= `a`(v4, v0) @signature `Lid/b;.a:(ILjava/lang/String;)I` @kind static;
  #L2b0168.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.c`;
  #L2b016c.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lio/reactivex/rxjava3/internal/operators/observable/c;.<init>:(Lfd/e;Lfd/g;ZI)V` @kind direct;
  #L2b0172.  call temp:= `j`(v0) @signature `Lld/a;.j:(Lfd/d;)Lfd/d;` @kind static;
  #L2b0178.  v2:= temp @kind object;
  #L2b017a.  return v2 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.c` `f`(`fd.d` v2 @kind this, `gd.c` v3 @kind object) @signature `Lfd/d;.f:(Lgd/c;)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b01d8.  v0:= `@@id.a.d` @type ^`gd.c` @kind object;
  #L2b01dc.  v1:= `@@id.a.b` @type ^`gd.a` @kind object;
  #L2b01e0.  call temp:= `g`(v2, v3, v0, v1) @signature `Lfd/d;.g:(Lgd/c;Lgd/c;Lgd/a;)Lio/reactivex/rxjava3/disposables/c;` @kind virtual;
  #L2b01e6.  v3:= temp @kind object;
  #L2b01e8.  return v3 @kind object;
}
procedure `io.reactivex.rxjava3.disposables.c` `g`(`fd.d` v2 @kind this, `gd.c` v3 @kind object, `gd.c` v4 @kind object, `gd.a` v5 @kind object) @signature `Lfd/d;.g:(Lgd/c;Lgd/c;Lgd/a;)Lio/reactivex/rxjava3/disposables/c;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L2b01fc.  v0:= "onNext is null" @kind object;
  #L2b0200.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b0206.  v0:= "onError is null" @kind object;
  #L2b020a.  call temp:= `requireNonNull`(v4, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b0210.  v0:= "onComplete is null" @kind object;
  #L2b0214.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b021a.  v0:= new `io.reactivex.rxjava3.internal.observers.c`;
  #L2b021e.  call temp:= `a`() @signature `Lid/a;.a:()Lgd/c;` @kind static;
  #L2b0224.  v1:= temp @kind object;
  #L2b0226.  call `<init>`(v0, v3, v4, v5, v1) @signature `Lio/reactivex/rxjava3/internal/observers/c;.<init>:(Lgd/c;Lgd/c;Lgd/a;Lgd/c;)V` @kind direct;
  #L2b022c.  call `a`(v2, v0) @signature `Lfd/d;.a:(Lfd/f;)V` @kind virtual;
  #L2b0232.  return v0 @kind object;
}
procedure `void` `h`(`fd.f` v0 @kind object) @signature `Lfd/d;.h:(Lfd/f;)V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `fd.d` `i`(`fd.d` v1 @kind this, `fd.g` v2 @kind object) @signature `Lfd/d;.i:(Lfd/g;)Lfd/d;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L2b018c.  v0:= "scheduler is null" @kind object;
  #L2b0190.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2b0196.  v0:= new `io.reactivex.rxjava3.internal.operators.observable.d`;
  #L2b019a.  call `<init>`(v0, v1, v2) @signature `Lio/reactivex/rxjava3/internal/operators/observable/d;.<init>:(Lfd/e;Lfd/g;)V` @kind direct;
  #L2b01a0.  call temp:= `j`(v0) @signature `Lld/a;.j:(Lfd/d;)Lfd/d;` @kind static;
  #L2b01a6.  v2:= temp @kind object;
  #L2b01a8.  return v2 @kind object;
}
