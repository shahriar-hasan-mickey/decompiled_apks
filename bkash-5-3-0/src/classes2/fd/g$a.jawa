record `fd.g$a` @kind class @AccessFlag FINAL extends `io.reactivex.rxjava3.disposables.c` @kind interface, `java.lang.Runnable` @kind interface {
  `java.lang.Runnable` `fd.g$a.g` @AccessFlag FINAL;
  `fd.g$b` `fd.g$a.h` @AccessFlag FINAL;
  `java.lang.Thread` `fd.g$a.i` @AccessFlag ;
}
procedure `void` `<init>`(`fd.g$a` v0 @kind this, `java.lang.Runnable` v1 @kind object, `fd.g$b` v2 @kind object) @signature `Lfd/g$a;.<init>:(Ljava/lang/Runnable;Lfd/g$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b02c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b02ce.  v0.`fd.g$a.g` @type ^`java.lang.Runnable` := v1 @kind object;
  #L2b02d2.  v0.`fd.g$a.h` @type ^`fd.g$b` := v2 @kind object;
  #L2b02d6.  return @kind void;
}
procedure `void` `dispose`(`fd.g$a` v2 @kind this) @signature `Lfd/g$a;.dispose:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b02e8.  v0:= v2.`fd.g$a.i` @type ^`java.lang.Thread` @kind object;
  #L2b02ec.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2b02f2.  v1:= temp @kind object;
  #L2b02f4.  if v0 != v1 then goto L2b0310;
  #L2b02f8.  v0:= v2.`fd.g$a.h` @type ^`fd.g$b` @kind object;
  #L2b02fc.  v1:= instanceof @variable v0 @type ^`io.reactivex.rxjava3.internal.schedulers.e` @kind boolean;
  #L2b0300.  if v1 == 0 then goto L2b0310;
  #L2b0304.  v0:= (`io.reactivex.rxjava3.internal.schedulers.e`) v0 @kind object;
  #L2b0308.  call `f`(v0) @signature `Lio/reactivex/rxjava3/internal/schedulers/e;.f:()V` @kind virtual;
  #L2b030e.  goto L2b031a;
  #L2b0310.  v0:= v2.`fd.g$a.h` @type ^`fd.g$b` @kind object;
  #L2b0314.  call `dispose`(v0) @signature `Lio/reactivex/rxjava3/disposables/c;.dispose:()V` @kind interface;
  #L2b031a.  return @kind void;
}
procedure `void` `run`(`fd.g$a` v2 @kind this) @signature `Lfd/g$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b032c.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2b0332.  v0:= temp @kind object;
  #L2b0334.  v2.`fd.g$a.i` @type ^`java.lang.Thread` := v0 @kind object;
  #L2b0338.  v0:= 0I;
  #L2b033a.  v1:= v2.`fd.g$a.g` @type ^`java.lang.Runnable` @kind object;
  #L2b033e.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L2b0344.  call `dispose`(v2) @signature `Lfd/g$a;.dispose:()V` @kind virtual;
  #L2b034a.  v2.`fd.g$a.i` @type ^`java.lang.Thread` := v0 @kind object;
  #L2b034e.  return @kind void;
  #L2b0350.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0352.  call `dispose`(v2) @signature `Lfd/g$a;.dispose:()V` @kind virtual;
  #L2b0358.  v2.`fd.g$a.i` @type ^`java.lang.Thread` := v0 @kind object;
  #L2b035c.  throw v1;
  catch `java.lang.Throwable` @[L2b033a..L2b0344] goto L2b0350;
}
