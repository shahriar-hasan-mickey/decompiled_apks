record `o7.a` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `o7.a.a` @AccessFlag PRIVATE_FINAL;
  `android.os.PowerManager$WakeLock` `o7.a.b` @AccessFlag PRIVATE_FINAL;
  `int` `o7.a.c` @AccessFlag PRIVATE;
  `java.util.concurrent.Future` `o7.a.d` @AccessFlag PRIVATE;
  `long` `o7.a.e` @AccessFlag PRIVATE;
  `java.util.Set` `o7.a.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `o7.a.g` @AccessFlag PRIVATE;
  `int` `o7.a.h` @AccessFlag PRIVATE;
  `i7.b` `o7.a.i` @AccessFlag ;
  `d7.e` `o7.a.j` @AccessFlag PRIVATE;
  `android.os.WorkSource` `o7.a.k` @AccessFlag PRIVATE;
  `java.lang.String` `o7.a.l` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `o7.a.m` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicInteger` `o7.a.n` @AccessFlag PRIVATE;
  `java.util.concurrent.ScheduledExecutorService` `o7.a.o` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@o7.a.p` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ScheduledExecutorService` `@@o7.a.q` @AccessFlag PRIVATE_STATIC_VOLATILE;
global `java.lang.Object` `@@o7.a.r` @AccessFlag PRIVATE_STATIC_FINAL;
global `o7.e` `@@o7.a.s` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lo7/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3238f0.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3238f4.  v1:= 366L;
  #L3238f8.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3238fe.  v0:= temp @kind wide;
  #L323900.  `@@o7.a.p` @type ^`long` := v0 @kind wide;
  #L323904.  v0:= 0I;
  #L323906.  `@@o7.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L32390a.  v0:= new `java.lang.Object`;
  #L32390e.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L323914.  `@@o7.a.r` @type ^`java.lang.Object` := v0 @kind object;
  #L323918.  v0:= new `o7.c`;
  #L32391c.  call `<init>`(v0) @signature `Lo7/c;.<init>:()V` @kind direct;
  #L323922.  `@@o7.a.s` @type ^`o7.e` := v0 @kind object;
  #L323926.  return @kind void;
}
procedure `void` `<init>`(`o7.a` v6 @kind this, `android.content.Context` v7 @kind object, `int` v8 , `java.lang.String` v9 @kind object) @signature `Lo7/a;.<init>:(Landroid/content/Context;ILjava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L323938.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L32393e.  v0:= temp @kind object;
  #L323940.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L323946.  v1:= new `java.lang.Object`;
  #L32394a.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L323950.  v6.`o7.a.a` @type ^`java.lang.Object` := v1 @kind object;
  #L323954.  v1:= 0I;
  #L323956.  v6.`o7.a.c` @type ^`int` := v1;
  #L32395a.  v2:= new `java.util.HashSet`;
  #L32395e.  call `<init>`(v2) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L323964.  v6.`o7.a.f` @type ^`java.util.Set` := v2 @kind object;
  #L323968.  v2:= 1I;
  #L32396a.  v6.`o7.a.g` @type ^`boolean` := v2 @kind boolean;
  #L32396e.  call temp:= `d`() @signature `Ld7/h;.d:()Ld7/e;` @kind static;
  #L323974.  v3:= temp @kind object;
  #L323976.  v6.`o7.a.j` @type ^`d7.e` := v3 @kind object;
  #L32397a.  v3:= new `java.util.HashMap`;
  #L32397e.  call `<init>`(v3) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L323984.  v6.`o7.a.m` @type ^`java.util.Map` := v3 @kind object;
  #L323988.  v3:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L32398c.  call `<init>`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L323992.  v6.`o7.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` := v3 @kind object;
  #L323996.  v3:= "WakeLock: context must not be null" @kind object;
  #L32399a.  call temp:= `k`(v7, v3) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3239a0.  v3:= "WakeLock: wakeLockName must not be empty" @kind object;
  #L3239a4.  call temp:= `g`(v9, v3) @signature `Lcom/google/android/gms/common/internal/k;.g:(Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3239aa.  call temp:= `getApplicationContext`(v7) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L3239b0.  v3:= 0I;
  #L3239b2.  v6.`o7.a.i` @type ^`i7.b` := v3 @kind object;
  #L3239b6.  v3:= "com.google.android.gms" @kind object;
  #L3239ba.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L3239c0.  v4:= temp @kind object;
  #L3239c2.  call temp:= `equals`(v3, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3239c8.  v3:= temp;
  #L3239ca.  if v3 != 0 then goto L323a00;
  #L3239ce.  call temp:= `valueOf`(v9) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3239d4.  v3:= temp @kind object;
  #L3239d6.  v4:= "*gcore*:" @kind object;
  #L3239da.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3239e0.  v5:= temp;
  #L3239e2.  if v5 == 0 then goto L3239f0;
  #L3239e6.  call temp:= `concat`(v4, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L3239ec.  v3:= temp @kind object;
  #L3239ee.  goto L3239fa;
  #L3239f0.  v3:= new `java.lang.String`;
  #L3239f4.  call `<init>`(v3, v4) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3239fa.  v6.`o7.a.l` @type ^`java.lang.String` := v3 @kind object;
  #L3239fe.  goto L323a04;
  #L323a00.  v6.`o7.a.l` @type ^`java.lang.String` := v9 @kind object;
  #L323a04.  v3:= "power" @kind object;
  #L323a08.  call temp:= `getSystemService`(v7, v3) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L323a0e.  v3:= temp @kind object;
  #L323a10.  v3:= (`android.os.PowerManager`) v3 @kind object;
  #L323a14.  if v3 == 0 then goto L323a9a;
  #L323a18.  call temp:= `newWakeLock`(v3, v8, v9) @signature `Landroid/os/PowerManager;.newWakeLock:(ILjava/lang/String;)Landroid/os/PowerManager$WakeLock;` @kind virtual;
  #L323a1e.  v8:= temp @kind object;
  #L323a20.  v6.`o7.a.b` @type ^`android.os.PowerManager$WakeLock` := v8 @kind object;
  #L323a24.  call temp:= `c`(v7) @signature `Ld7/t;.c:(Landroid/content/Context;)Z` @kind static;
  #L323a2a.  v9:= temp;
  #L323a2c.  if v9 == 0 then goto L323a5a;
  #L323a30.  call temp:= `a`(v0) @signature `Lcom/google/android/gms/common/util/a;.a:(Ljava/lang/String;)Z` @kind static;
  #L323a36.  v9:= temp;
  #L323a38.  if v9 == 0 then goto L323a44;
  #L323a3c.  call temp:= `getPackageName`(v7) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L323a42.  v0:= temp @kind object;
  #L323a44.  call temp:= `b`(v7, v0) @signature `Ld7/t;.b:(Landroid/content/Context;Ljava/lang/String;)Landroid/os/WorkSource;` @kind static;
  #L323a4a.  v7:= temp @kind object;
  #L323a4c.  v6.`o7.a.k` @type ^`android.os.WorkSource` := v7 @kind object;
  #L323a50.  if v7 == 0 then goto L323a5a;
  #L323a54.  call `i`(v8, v7) @signature `Lo7/a;.i:(Landroid/os/PowerManager$WakeLock;Landroid/os/WorkSource;)V` @kind static;
  #L323a5a.  v7:= `@@o7.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L323a5e.  if v7 != 0 then goto L323a94;
  #L323a62.  v8:= `@@o7.a.r` @type ^`java.lang.Object` @kind object;
  #L323a66.  @monitorenter v8
  #L323a68.  v7:= `@@o7.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L323a6c.  if v7 != 0 then goto L323a8a;
  #L323a70.  call temp:= `a`() @signature `Li7/h;.a:()Li7/e;` @kind static;
  #L323a76.  call temp:= `newScheduledThreadPool`(v2) @signature `Ljava/util/concurrent/Executors;.newScheduledThreadPool:(I)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L323a7c.  v7:= temp @kind object;
  #L323a7e.  call temp:= `unconfigurableScheduledExecutorService`(v7) @signature `Ljava/util/concurrent/Executors;.unconfigurableScheduledExecutorService:(Ljava/util/concurrent/ScheduledExecutorService;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L323a84.  v7:= temp @kind object;
  #L323a86.  `@@o7.a.q` @type ^`java.util.concurrent.ScheduledExecutorService` := v7 @kind object;
  #L323a8a.  @monitorexit v8
  #L323a8c.  goto L323a94;
  #L323a8e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323a90.  @monitorexit v8
  #L323a92.  throw v7;
  #L323a94.  v6.`o7.a.o` @type ^`java.util.concurrent.ScheduledExecutorService` := v7 @kind object;
  #L323a98.  return @kind void;
  #L323a9a.  v7:= new `i7.i`;
  #L323a9e.  v8:= new `java.lang.StringBuilder`;
  #L323aa2.  v9:= 29I;
  #L323aa6.  call `<init>`(v8, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L323aac.  v0:= "expected a non-null reference" @kind object;
  #L323ab0.  call temp:= `append`(v8, v0, v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;II)Ljava/lang/StringBuilder;` @kind virtual;
  #L323ab6.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L323abc.  v8:= temp @kind object;
  #L323abe.  call `<init>`(v7, v8) @signature `Li7/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L323ac4.  throw v7;
  catch `java.lang.Throwable` @[L323a68..L323a92] goto L323a8e;
}
procedure `void` `e`(`o7.a` v3 @kind object) @signature `Lo7/a;.e:(Lo7/a;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L323d14.  v0:= v3.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323d18.  @monitorenter v0
  #L323d1a.  call temp:= `b`(v3) @signature `Lo7/a;.b:()Z` @kind virtual;
  #L323d20.  v1:= temp;
  #L323d22.  if v1 != 0 then goto L323d2a;
  #L323d26.  @monitorexit v0
  #L323d28.  return @kind void;
  #L323d2a.  v1:= v3.`o7.a.l` @type ^`java.lang.String` @kind object;
  #L323d2e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L323d34.  v1:= temp @kind object;
  #L323d36.  v2:= " ** IS FORCE-RELEASED ON TIMEOUT **" @kind object;
  #L323d3a.  call temp:= `concat`(v1, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L323d40.  call `g`(v3) @signature `Lo7/a;.g:()V` @kind direct;
  #L323d46.  call temp:= `b`(v3) @signature `Lo7/a;.b:()Z` @kind virtual;
  #L323d4c.  v1:= temp;
  #L323d4e.  if v1 != 0 then goto L323d56;
  #L323d52.  @monitorexit v0
  #L323d54.  return @kind void;
  #L323d56.  v1:= 1I;
  #L323d58.  v3.`o7.a.c` @type ^`int` := v1;
  #L323d5c.  v1:= 0I;
  #L323d5e.  call `h`(v3, v1) @signature `Lo7/a;.h:(I)V` @kind direct;
  #L323d64.  @monitorexit v0
  #L323d66.  return @kind void;
  #L323d68.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323d6a.  @monitorexit v0
  #L323d6c.  throw v3;
  catch `java.lang.Throwable` @[L323d1a..L323d6c] goto L323d68;
}
procedure `java.lang.String` `f`(`o7.a` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lo7/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;

  #L3238cc.  v2:= v1.`o7.a.g` @type ^`boolean` @kind boolean;
  #L3238d0.  v0:= 0I;
  #L3238d2.  if v2 == 0 then goto L3238dc;
  #L3238d6.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3238dc.  return v0 @kind object;
}
procedure `void` `g`(`o7.a` v2 @kind this) @signature `Lo7/a;.g:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;

  #L323d8c.  v0:= v2.`o7.a.f` @type ^`java.util.Set` @kind object;
  #L323d90.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L323d96.  v0:= temp;
  #L323d98.  if v0 == 0 then goto L323d9e;
  #L323d9c.  return @kind void;
  #L323d9e.  v0:= new `java.util.ArrayList`;
  #L323da2.  v1:= v2.`o7.a.f` @type ^`java.util.Set` @kind object;
  #L323da6.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L323dac.  v1:= v2.`o7.a.f` @type ^`java.util.Set` @kind object;
  #L323db0.  call `clear`(v1) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L323db6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L323dbc.  v1:= temp;
  #L323dbe.  if v1 > 0 then goto L323dc4;
  #L323dc2.  return @kind void;
  #L323dc4.  v1:= 0I;
  #L323dc6.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L323dcc.  v0:= temp @kind object;
  #L323dce.  v0:= (`o7.f`) v0 @kind object;
  #L323dd2.  v0:= 0I;
  #L323dd4.  throw v0;
}
procedure `void` `h`(`o7.a` v5 @kind this, `int` v6 ) @signature `Lo7/a;.h:(I)V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L323de8.  v6:= v5.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323dec.  @monitorenter v6
  #L323dee.  call temp:= `b`(v5) @signature `Lo7/a;.b:()Z` @kind virtual;
  #L323df4.  v0:= temp;
  #L323df6.  if v0 != 0 then goto L323dfe;
  #L323dfa.  @monitorexit v6
  #L323dfc.  return @kind void;
  #L323dfe.  v0:= v5.`o7.a.g` @type ^`boolean` @kind boolean;
  #L323e02.  v1:= 0I;
  #L323e04.  if v0 == 0 then goto L323e1e;
  #L323e08.  v0:= v5.`o7.a.c` @type ^`int`;
  #L323e0c.  v0:= v0 + -1;
  #L323e10.  v5.`o7.a.c` @type ^`int` := v0;
  #L323e14.  if v0 > 0 then goto L323e1a;
  #L323e18.  goto L323e22;
  #L323e1a.  @monitorexit v6
  #L323e1c.  return @kind void;
  #L323e1e.  v5.`o7.a.c` @type ^`int` := v1;
  #L323e22.  call `g`(v5) @signature `Lo7/a;.g:()V` @kind direct;
  #L323e28.  v0:= v5.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323e2c.  call temp:= `values`(v0) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L323e32.  v0:= temp @kind object;
  #L323e34.  call temp:= `iterator`(v0) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L323e3a.  v0:= temp @kind object;
  #L323e3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L323e42.  v2:= temp;
  #L323e44.  if v2 == 0 then goto L323e5a;
  #L323e48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L323e4e.  v2:= temp @kind object;
  #L323e50.  v2:= (`o7.d`) v2 @kind object;
  #L323e54.  v2.`o7.d.a` @type ^`int` := v1;
  #L323e58.  goto L323e3c;
  #L323e5a.  v0:= v5.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323e5e.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L323e64.  v0:= v5.`o7.a.d` @type ^`java.util.concurrent.Future` @kind object;
  #L323e68.  v2:= 0I;
  #L323e6a.  if v0 == 0 then goto L323e80;
  #L323e6e.  call temp:= `cancel`(v0, v1) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L323e74.  v5.`o7.a.d` @type ^`java.util.concurrent.Future` := v2 @kind object;
  #L323e78.  v3:= 0L;
  #L323e7c.  v5.`o7.a.e` @type ^`long` := v3 @kind wide;
  #L323e80.  v5.`o7.a.h` @type ^`int` := v1;
  #L323e84.  v0:= v5.`o7.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L323e88.  call temp:= `isHeld`(v0) @signature `Landroid/os/PowerManager$WakeLock;.isHeld:()Z` @kind virtual;
  #L323e8e.  v0:= temp;
  #L323e90.  if v0 == 0 then goto L323efe;
  #L323e94.  v0:= v5.`o7.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L323e98.  call `release`(v0) @signature `Landroid/os/PowerManager$WakeLock;.release:()V` @kind virtual;
  #L323e9e.  v0:= v5.`o7.a.i` @type ^`i7.b` @kind object;
  #L323ea2.  if v0 == 0 then goto L323f14;
  #L323ea6.  v5.`o7.a.i` @type ^`i7.b` := v2 @kind object;
  #L323eaa.  goto L323f14;
  #L323eac.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323eae.  goto L323ef0;
  #L323eb0.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L323eb2.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L323eb8.  v1:= temp @kind object;
  #L323eba.  v3:= constclass @type ^`java.lang.RuntimeException` @kind object;
  #L323ebe.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L323ec4.  v1:= temp;
  #L323ec6.  if v1 == 0 then goto L323eee;
  #L323eca.  v0:= v5.`o7.a.l` @type ^`java.lang.String` @kind object;
  #L323ece.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L323ed4.  v0:= temp @kind object;
  #L323ed6.  v1:= " failed to release!" @kind object;
  #L323eda.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L323ee0.  v0:= v5.`o7.a.i` @type ^`i7.b` @kind object;
  #L323ee4.  if v0 == 0 then goto L323f14;
  #L323ee8.  v5.`o7.a.i` @type ^`i7.b` := v2 @kind object;
  #L323eec.  goto L323f14;
  #L323eee.  throw v0;
  #L323ef0.  v1:= v5.`o7.a.i` @type ^`i7.b` @kind object;
  #L323ef4.  if v1 == 0 then goto L323efc;
  #L323ef8.  v5.`o7.a.i` @type ^`i7.b` := v2 @kind object;
  #L323efc.  throw v0;
  #L323efe.  v0:= v5.`o7.a.l` @type ^`java.lang.String` @kind object;
  #L323f02.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L323f08.  v0:= temp @kind object;
  #L323f0a.  v1:= " should be held!" @kind object;
  #L323f0e.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L323f14.  @monitorexit v6
  #L323f16.  return @kind void;
  #L323f18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323f1a.  @monitorexit v6
  #L323f1c.  throw v0;
  catch `java.lang.Throwable` @[L323dee..L323e90] goto L323f18;
  catch `java.lang.RuntimeException` @[L323e94..L323e9e] goto L323eb0;
  catch `java.lang.Throwable` @[L323e94..L323e9e] goto L323eac;
  catch `java.lang.Throwable` @[L323e9e..L323eaa] goto L323f18;
  catch `java.lang.Throwable` @[L323eb2..L323ee0] goto L323eac;
  catch `java.lang.Throwable` @[L323ee0..L323eec] goto L323f18;
  catch `java.lang.Throwable` @[L323eee..L323ef0] goto L323eac;
  catch `java.lang.Throwable` @[L323ef0..L323f1c] goto L323f18;
}
procedure `void` `i`(`android.os.PowerManager$WakeLock` v0 @kind object, `android.os.WorkSource` v1 @kind object) @signature `Lo7/a;.i:(Landroid/os/PowerManager$WakeLock;Landroid/os/WorkSource;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L323f74.  call `setWorkSource`(v0, v1) @signature `Landroid/os/PowerManager$WakeLock;.setWorkSource:(Landroid/os/WorkSource;)V` @kind virtual;
  #L323f7a.  return @kind void;
  #L323f7c.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L323f7e.  goto L323f82;
  #L323f80.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L323f82.  call temp:= `toString`(v0) @signature `Ljava/lang/RuntimeException;.toString:()Ljava/lang/String;` @kind virtual;
  #L323f88.  return @kind void;
  catch `java.lang.IllegalArgumentException` @[L323f74..L323f7a] goto L323f80;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L323f74..L323f7a] goto L323f7c;
}
procedure `void` `a`(`o7.a` v9 @kind this, `long` v10 ) @signature `Lo7/a;.a:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L323ae4.  v0:= v9.`o7.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L323ae8.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.incrementAndGet:()I` @kind virtual;
  #L323aee.  v0:= `@@o7.a.p` @type ^`long` @kind wide;
  #L323af2.  v2:= 9223372036854775807L;
  #L323afc.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L323b02.  v0:= temp @kind wide;
  #L323b04.  v4:= 1L;
  #L323b08.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L323b0e.  v0:= temp @kind wide;
  #L323b10.  v4:= 0L;
  #L323b14.  v6:= lcmp(v10, v4);
  #L323b18.  if v6 <= 0 then goto L323b24;
  #L323b1c.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L323b22.  v0:= temp @kind wide;
  #L323b24.  v10:= v9.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323b28.  @monitorenter v10
  #L323b2a.  call temp:= `b`(v9) @signature `Lo7/a;.b:()Z` @kind virtual;
  #L323b30.  v11:= temp;
  #L323b32.  v4:= 0I;
  #L323b34.  v5:= 0I;
  #L323b36.  if v11 != 0 then goto L323b5a;
  #L323b3a.  call temp:= `e`(v4, v5) @signature `Li7/b;.e:(ZLi7/c;)Li7/b;` @kind static;
  #L323b40.  v11:= temp @kind object;
  #L323b42.  v9.`o7.a.i` @type ^`i7.b` := v11 @kind object;
  #L323b46.  v11:= v9.`o7.a.b` @type ^`android.os.PowerManager$WakeLock` @kind object;
  #L323b4a.  call `acquire`(v11) @signature `Landroid/os/PowerManager$WakeLock;.acquire:()V` @kind virtual;
  #L323b50.  v11:= v9.`o7.a.j` @type ^`d7.e` @kind object;
  #L323b54.  call temp:= `b`(v11) @signature `Ld7/e;.b:()J` @kind interface;
  #L323b5a.  v11:= v9.`o7.a.c` @type ^`int`;
  #L323b5e.  v11:= v11 + 1;
  #L323b62.  v9.`o7.a.c` @type ^`int` := v11;
  #L323b66.  v11:= v9.`o7.a.h` @type ^`int`;
  #L323b6a.  v11:= v11 + 1;
  #L323b6e.  v9.`o7.a.h` @type ^`int` := v11;
  #L323b72.  call temp:= `f`(v9, v5) @signature `Lo7/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L323b78.  v11:= v9.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323b7c.  call temp:= `get`(v11, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L323b82.  v11:= temp @kind object;
  #L323b84.  v11:= (`o7.d`) v11 @kind object;
  #L323b88.  if v11 != 0 then goto L323ba0;
  #L323b8c.  v11:= new `o7.d`;
  #L323b90.  call `<init>`(v11, v5) @signature `Lo7/d;.<init>:(Lo7/c;)V` @kind direct;
  #L323b96.  v6:= v9.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323b9a.  call temp:= `put`(v6, v5, v11) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L323ba0.  v5:= v11.`o7.d.a` @type ^`int`;
  #L323ba4.  v5:= v5 + 1;
  #L323ba8.  v11.`o7.d.a` @type ^`int` := v5;
  #L323bac.  v11:= v9.`o7.a.j` @type ^`d7.e` @kind object;
  #L323bb0.  call temp:= `b`(v11) @signature `Ld7/e;.b:()J` @kind interface;
  #L323bb6.  v5:= temp @kind wide;
  #L323bb8.  v7:= v2 - v5 @kind long;
  #L323bbc.  v11:= lcmp(v7, v0);
  #L323bc0.  if v11 <= 0 then goto L323bc8;
  #L323bc4.  v2:= v5 + v0 @kind long;
  #L323bc8.  v5:= v9.`o7.a.e` @type ^`long` @kind wide;
  #L323bcc.  v11:= lcmp(v2, v5);
  #L323bd0.  if v11 <= 0 then goto L323c04;
  #L323bd4.  v9.`o7.a.e` @type ^`long` := v2 @kind wide;
  #L323bd8.  v11:= v9.`o7.a.d` @type ^`java.util.concurrent.Future` @kind object;
  #L323bdc.  if v11 == 0 then goto L323be6;
  #L323be0.  call temp:= `cancel`(v11, v4) @signature `Ljava/util/concurrent/Future;.cancel:(Z)Z` @kind interface;
  #L323be6.  v11:= v9.`o7.a.o` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L323bea.  v2:= new `o7.b`;
  #L323bee.  call `<init>`(v2, v9) @signature `Lo7/b;.<init>:(Lo7/a;)V` @kind direct;
  #L323bf4.  v3:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L323bf8.  call temp:= `schedule`(v11, v2, v0, v3) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L323bfe.  v11:= temp @kind object;
  #L323c00.  v9.`o7.a.d` @type ^`java.util.concurrent.Future` := v11 @kind object;
  #L323c04.  @monitorexit v10
  #L323c06.  return @kind void;
  #L323c08.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323c0a.  @monitorexit v10
  #L323c0c.  throw v11;
  catch `java.lang.Throwable` @[L323b2a..L323c0c] goto L323c08;
}
procedure `boolean` `b`(`o7.a` v2 @kind this) @signature `Lo7/a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L323890.  v0:= v2.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323894.  @monitorenter v0
  #L323896.  v1:= v2.`o7.a.c` @type ^`int`;
  #L32389a.  if v1 <= 0 then goto L3238a2;
  #L32389e.  v1:= 1I;
  #L3238a0.  goto L3238a4;
  #L3238a2.  v1:= 0I;
  #L3238a4.  @monitorexit v0
  #L3238a6.  return v1;
  #L3238a8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3238aa.  @monitorexit v0
  #L3238ac.  throw v1;
  catch `java.lang.Throwable` @[L323896..L3238ac] goto L3238a8;
}
procedure `void` `c`(`o7.a` v4 @kind this) @signature `Lo7/a;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L323c2c.  v0:= v4.`o7.a.n` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L323c30.  call temp:= `decrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L323c36.  v0:= temp;
  #L323c38.  if v0 >= 0 then goto L323c52;
  #L323c3c.  v0:= v4.`o7.a.l` @type ^`java.lang.String` @kind object;
  #L323c40.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L323c46.  v0:= temp @kind object;
  #L323c48.  v1:= " release without a matched acquire!" @kind object;
  #L323c4c.  call temp:= `concat`(v0, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L323c52.  v0:= v4.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323c56.  @monitorenter v0
  #L323c58.  v1:= 0I;
  #L323c5a.  call temp:= `f`(v4, v1) @signature `Lo7/a;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L323c60.  v2:= v4.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323c64.  call temp:= `containsKey`(v2, v1) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L323c6a.  v2:= temp;
  #L323c6c.  if v2 == 0 then goto L323ca0;
  #L323c70.  v2:= v4.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323c74.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L323c7a.  v2:= temp @kind object;
  #L323c7c.  v2:= (`o7.d`) v2 @kind object;
  #L323c80.  if v2 == 0 then goto L323cb6;
  #L323c84.  v3:= v2.`o7.d.a` @type ^`int`;
  #L323c88.  v3:= v3 + -1;
  #L323c8c.  v2.`o7.d.a` @type ^`int` := v3;
  #L323c90.  if v3 != 0 then goto L323cb6;
  #L323c94.  v2:= v4.`o7.a.m` @type ^`java.util.Map` @kind object;
  #L323c98.  call temp:= `remove`(v2, v1) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L323c9e.  goto L323cb6;
  #L323ca0.  v1:= v4.`o7.a.l` @type ^`java.lang.String` @kind object;
  #L323ca4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L323caa.  v1:= temp @kind object;
  #L323cac.  v2:= " counter does not exist" @kind object;
  #L323cb0.  call temp:= `concat`(v1, v2) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L323cb6.  v1:= 0I;
  #L323cb8.  call `h`(v4, v1) @signature `Lo7/a;.h:(I)V` @kind direct;
  #L323cbe.  @monitorexit v0
  #L323cc0.  return @kind void;
  #L323cc2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323cc4.  @monitorexit v0
  #L323cc6.  throw v1;
  catch `java.lang.Throwable` @[L323c5a..L323cc6] goto L323cc2;
}
procedure `void` `d`(`o7.a` v1 @kind this, `boolean` v2 ) @signature `Lo7/a;.d:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L323ce4.  v0:= v1.`o7.a.a` @type ^`java.lang.Object` @kind object;
  #L323ce8.  @monitorenter v0
  #L323cea.  v1.`o7.a.g` @type ^`boolean` := v2 @kind boolean;
  #L323cee.  @monitorexit v0
  #L323cf0.  return @kind void;
  #L323cf2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L323cf4.  @monitorexit v0
  #L323cf6.  throw v2;
  catch `java.lang.Throwable` @[L323cea..L323cf6] goto L323cf2;
}
