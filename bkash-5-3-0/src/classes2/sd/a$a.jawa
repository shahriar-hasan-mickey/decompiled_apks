record `sd.a$a` @kind class @AccessFlag FINAL {
}
global `java.lang.Integer` `@@sd.a$a.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lsd/a$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L377c0c.  v0:= new `sd.a$a`;
  #L377c10.  call `<init>`(v0) @signature `Lsd/a$a;.<init>:()V` @kind direct;
  #L377c16.  v0:= 0I;
  #L377c18.  v1:= "android.os.Build$VERSION" @kind object;
  #L377c1c.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L377c22.  v1:= temp @kind object;
  #L377c24.  v2:= "SDK_INT" @kind object;
  #L377c28.  call temp:= `getField`(v1, v2) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L377c2e.  v1:= temp @kind object;
  #L377c30.  call temp:= `get`(v1, v0) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L377c36.  v1:= temp @kind object;
  #L377c38.  v2:= instanceof @variable v1 @type ^`java.lang.Integer` @kind boolean;
  #L377c3c.  if v2 == 0 then goto L377c46;
  #L377c40.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L377c44.  goto L377c48;
  #L377c46.  v1:= v0 @kind object;
  #L377c48.  if v1 == 0 then goto L377c64;
  #L377c4c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L377c52.  v2:= temp;
  #L377c54.  if v2 <= 0 then goto L377c5c;
  #L377c58.  v2:= 1I;
  #L377c5a.  goto L377c5e;
  #L377c5c.  v2:= 0I;
  #L377c5e.  if v2 == 0 then goto L377c64;
  #L377c62.  v0:= v1 @kind object;
  #L377c64.  `@@sd.a$a.a` @type ^`java.lang.Integer` := v0 @kind object;
  #L377c68.  return @kind void;
  catch `java.lang.Throwable` @[L377c18..L377c44] goto L377c46;
}
procedure `void` `<init>`(`sd.a$a` v0 @kind this) @signature `Lsd/a$a;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L377c88.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L377c8e.  return @kind void;
}
