record `id.a$j` @kind class @AccessFlag FINAL extends `gd.c` @kind interface {
}
procedure `void` `<init>`(`id.a$j` v0 @kind this) @signature `Lid/a$j;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b7414.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b741a.  return @kind void;
}
procedure `void` `a`(`id.a$j` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lid/a$j;.a:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7448.  v0:= new `io.reactivex.rxjava3.exceptions.d`;
  #L2b744c.  call `<init>`(v0, v2) @signature `Lio/reactivex/rxjava3/exceptions/d;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2b7452.  call `k`(v0) @signature `Lld/a;.k:(Ljava/lang/Throwable;)V` @kind static;
  #L2b7458.  return @kind void;
}
procedure `void` `accept`(`id.a$j` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lid/a$j;.accept:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b742c.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L2b7430.  call `a`(v0, v1) @signature `Lid/a$j;.a:(Ljava/lang/Throwable;)V` @kind virtual;
  #L2b7436.  return @kind void;
}
