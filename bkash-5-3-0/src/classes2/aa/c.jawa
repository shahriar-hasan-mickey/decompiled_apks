record `aa.c` @kind class @AccessFlag PUBLIC {
}
global `aa.c` `@@aa.c.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Laa/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L10cbf0.  v0:= new `aa.c`;
  #L10cbf4.  call `<init>`(v0) @signature `Laa/c;.<init>:()V` @kind direct;
  #L10cbfa.  `@@aa.c.a` @type ^`aa.c` := v0 @kind object;
  #L10cbfe.  return @kind void;
}
procedure `void` `<init>`(`aa.c` v0 @kind this) @signature `Laa/c;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L10cc10.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L10cc16.  return @kind void;
}
procedure `java.nio.ByteBuffer` `a`(`java.nio.ByteBuffer` v1 @kind object) @signature `Laa/c;.a:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L10c794.  call temp:= `hasArray`(v1) @signature `Ljava/nio/ByteBuffer;.hasArray:()Z` @kind virtual;
  #L10c79a.  v0:= temp;
  #L10c79c.  if v0 == 0 then goto L10c7a2;
  #L10c7a0.  return v1 @kind object;
  #L10c7a2.  call temp:= `rewind`(v1) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L10c7a8.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L10c7ae.  v0:= temp;
  #L10c7b0.  v0:= new `byte`[v0];
  #L10c7b4.  call temp:= `get`(v1, v0) @signature `Ljava/nio/ByteBuffer;.get:([B)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c7ba.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L10c7c0.  v1:= temp @kind object;
  #L10c7c2.  return v1 @kind object;
}
procedure `aa.c` `c`() @signature `Laa/c;.c:()Laa/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L10c77c.  v0:= `@@aa.c.a` @type ^`aa.c` @kind object;
  #L10c780.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `e`(`java.nio.ByteBuffer` v6 @kind object, `boolean` v7 ) @signature `Laa/c;.e:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L10cb64.  call temp:= `rewind`(v6) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L10cb6a.  call temp:= `limit`(v6) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L10cb70.  v0:= temp;
  #L10cb72.  v1:= v0 / 6;
  #L10cb76.  if v7 == 0 then goto L10cb84;
  #L10cb7a.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L10cb80.  v7:= temp @kind object;
  #L10cb82.  goto L10cb8c;
  #L10cb84.  call temp:= `allocateDirect`(v0) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L10cb8a.  v7:= temp @kind object;
  #L10cb8c.  v0:= 0I;
  #L10cb8e.  v2:= 0I;
  #L10cb90.  v3:= v1 * 4;
  #L10cb94.  if v2 >= v3 then goto L10cbac;
  #L10cb98.  call temp:= `get`(v6, v2) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L10cb9e.  v3:= temp;
  #L10cba0.  call temp:= `put`(v7, v2, v3) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cba6.  v2:= v2 + 1;
  #L10cbaa.  goto L10cb90;
  #L10cbac.  v2:= v1 + v1 @kind int;
  #L10cbb0.  if v0 >= v2 then goto L10cbdc;
  #L10cbb4.  v2:= v3 + v0 @kind int;
  #L10cbb8.  v4:= v0 %% 2;
  #L10cbbc.  v4:= v4 * v1 @kind int;
  #L10cbc0.  v4:= v4 + v3 @kind int;
  #L10cbc2.  v5:= v0 / 2;
  #L10cbc6.  v4:= v4 + v5 @kind int;
  #L10cbc8.  call temp:= `get`(v6, v4) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L10cbce.  v4:= temp;
  #L10cbd0.  call temp:= `put`(v7, v2, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cbd6.  v0:= v0 + 1;
  #L10cbda.  goto L10cbac;
  #L10cbdc.  return v7 @kind object;
}
procedure `void` `f`(`android.media.Image$Plane` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 , `int` v12 ) @signature `Laa/c;.f:(Landroid/media/Image$Plane;II[BII)V` @AccessFlag PRIVATE_STATIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L10cc28.  call temp:= `getBuffer`(v7) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cc2e.  v0:= temp @kind object;
  #L10cc30.  call temp:= `rewind`(v0) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L10cc36.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L10cc3c.  v1:= temp;
  #L10cc3e.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L10cc44.  v2:= temp;
  #L10cc46.  v1:= v1 + v2 @kind int;
  #L10cc48.  v1:= v1 + -1;
  #L10cc4c.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L10cc52.  v2:= temp;
  #L10cc54.  v1:= v1 / v2 @kind int;
  #L10cc56.  if v1 != 0 then goto L10cc5c;
  #L10cc5a.  return @kind void;
  #L10cc5c.  v9:= v9 / v1 @kind int;
  #L10cc5e.  v8:= v8 / v9 @kind int;
  #L10cc60.  v9:= 0I;
  #L10cc62.  v2:= 0I;
  #L10cc64.  v3:= 0I;
  #L10cc66.  if v2 >= v1 then goto L10cca0;
  #L10cc6a.  v5:= v3;
  #L10cc6c.  v4:= 0I;
  #L10cc6e.  if v4 >= v8 then goto L10cc90;
  #L10cc72.  call temp:= `get`(v0, v5) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L10cc78.  v6:= temp;
  #L10cc7a.  v10[v11]:= v6 @kind byte;
  #L10cc7e.  v11:= v11 + v12 @kind int;
  #L10cc80.  call temp:= `getPixelStride`(v7) @signature `Landroid/media/Image$Plane;.getPixelStride:()I` @kind virtual;
  #L10cc86.  v6:= temp;
  #L10cc88.  v5:= v5 + v6 @kind int;
  #L10cc8a.  v4:= v4 + 1;
  #L10cc8e.  goto L10cc6e;
  #L10cc90.  call temp:= `getRowStride`(v7) @signature `Landroid/media/Image$Plane;.getRowStride:()I` @kind virtual;
  #L10cc96.  v4:= temp;
  #L10cc98.  v3:= v3 + v4 @kind int;
  #L10cc9a.  v2:= v2 + 1;
  #L10cc9e.  goto L10cc66;
  #L10cca0.  return @kind void;
}
procedure `java.nio.ByteBuffer` `b`(`aa.c` v18 @kind this, `com.google.mlkit.vision.common.InputImage` v19 @kind object, `boolean` v20 ) @signature `Laa/c;.b:(Lcom/google/mlkit/vision/common/InputImage;Z)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L10c7d4.  v0:= v20;
  #L10c7d8.  call temp:= `g`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.g:()I` @kind virtual;
  #L10c7de.  v1:= temp;
  #L10c7e0.  v2:= -1I;
  #L10c7e2.  if v1 == v2 then goto L10c8a0;
  #L10c7e6.  v2:= 17I;
  #L10c7ea.  if v1 == v2 then goto L10c864;
  #L10c7ee.  v2:= 35I;
  #L10c7f2.  if v1 == v2 then goto L10c832;
  #L10c7f6.  v2:= 842094169I;
  #L10c7fc.  if v1 != v2 then goto L10c81e;
  #L10c800.  call temp:= `e`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.e:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c806.  v1:= temp @kind object;
  #L10c808.  call temp:= `j`(v1) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10c80e.  v1:= temp @kind object;
  #L10c810.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L10c814.  call temp:= `e`(v1, v0) @signature `Laa/c;.e:(Ljava/nio/ByteBuffer;Z)Ljava/nio/ByteBuffer;` @kind static;
  #L10c81a.  v0:= temp @kind object;
  #L10c81c.  return v0 @kind object;
  #L10c81e.  v0:= new `com.google.mlkit.common.MlKitException`;
  #L10c822.  v1:= 13I;
  #L10c826.  v2:= "Unsupported image format" @kind object;
  #L10c82a.  call `<init>`(v0, v2, v1) @signature `Lcom/google/mlkit/common/MlKitException;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L10c830.  throw v0;
  #L10c832.  call temp:= `j`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.j:()[Landroid/media/Image$Plane;` @kind virtual;
  #L10c838.  v0:= temp @kind object;
  #L10c83a.  call temp:= `j`(v0) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10c840.  v0:= temp @kind object;
  #L10c842.  v0:= (`android.media.Image$Plane`[]) v0 @kind object;
  #L10c846.  call temp:= `l`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.l:()I` @kind virtual;
  #L10c84c.  v1:= temp;
  #L10c84e.  call temp:= `h`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.h:()I` @kind virtual;
  #L10c854.  v2:= temp;
  #L10c856.  v3:= v18 @kind object;
  #L10c85a.  call temp:= `d`(v3, v0, v1, v2) @signature `Laa/c;.d:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c860.  v0:= temp @kind object;
  #L10c862.  return v0 @kind object;
  #L10c864.  v3:= v18 @kind object;
  #L10c868.  if v0 == 0 then goto L10c88a;
  #L10c86c.  call temp:= `e`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.e:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c872.  v0:= temp @kind object;
  #L10c874.  call temp:= `j`(v0) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10c87a.  v0:= temp @kind object;
  #L10c87c.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L10c880.  call temp:= `a`(v0) @signature `Laa/c;.a:(Ljava/nio/ByteBuffer;)Ljava/nio/ByteBuffer;` @kind static;
  #L10c886.  v0:= temp @kind object;
  #L10c888.  goto L10c89e;
  #L10c88a.  call temp:= `e`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.e:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c890.  v0:= temp @kind object;
  #L10c892.  call temp:= `j`(v0) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10c898.  v0:= temp @kind object;
  #L10c89a.  v0:= (`java.nio.ByteBuffer`) v0 @kind object;
  #L10c89e.  return v0 @kind object;
  #L10c8a0.  v3:= v18 @kind object;
  #L10c8a4.  call temp:= `d`(v19) @signature `Lcom/google/mlkit/vision/common/InputImage;.d:()Landroid/graphics/Bitmap;` @kind virtual;
  #L10c8aa.  v1:= temp @kind object;
  #L10c8ac.  call temp:= `j`(v1) @signature `Lcom/google/android/gms/common/internal/k;.j:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L10c8b2.  v1:= temp @kind object;
  #L10c8b4.  v1:= (`android.graphics.Bitmap`) v1 @kind object;
  #L10c8b8.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L10c8bc.  v4:= 26I;
  #L10c8c0.  if v2 < v4 then goto L10c8e8;
  #L10c8c4.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L10c8ca.  v2:= temp @kind object;
  #L10c8cc.  v4:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L10c8d0.  if v2 != v4 then goto L10c8e8;
  #L10c8d4.  v2:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L10c8d8.  call temp:= `isMutable`(v1) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L10c8de.  v4:= temp;
  #L10c8e0.  call temp:= `copy`(v1, v2, v4) @signature `Landroid/graphics/Bitmap;.copy:(Landroid/graphics/Bitmap$Config;Z)Landroid/graphics/Bitmap;` @kind virtual;
  #L10c8e6.  v1:= temp @kind object;
  #L10c8e8.  v4:= v1 @kind object;
  #L10c8ea.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L10c8f0.  v1:= temp;
  #L10c8f2.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L10c8f8.  v2:= temp;
  #L10c8fa.  v12:= v1 * v2 @kind int;
  #L10c8fe.  v13:= new `int`[v12];
  #L10c902.  v6:= 0I;
  #L10c904.  v8:= 0I;
  #L10c906.  v9:= 0I;
  #L10c908.  v5:= v13 @kind object;
  #L10c90a.  v7:= v1;
  #L10c90c.  v10:= v1;
  #L10c90e.  v11:= v2;
  #L10c910.  call `getPixels`(v4, v5, v6, v7, v8, v9, v10, v11) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L10c916.  v4:= (`double`) v2 @kind i2d;
  #L10c918.  v6:= 2.0D;
  #L10c91c.  v4:= v4 / v6 @kind double;
  #L10c91e.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L10c924.  v4:= temp @kind wide;
  #L10c926.  v4:= (`int`) v4 @kind d2i;
  #L10c928.  v4:= v4 + v4 @kind int;
  #L10c92a.  v8:= (`double`) v1 @kind i2d;
  #L10c92c.  v8:= v8 / v6 @kind double;
  #L10c92e.  call temp:= `ceil`(v8) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L10c934.  v5:= temp @kind wide;
  #L10c936.  v5:= (`int`) v5 @kind d2i;
  #L10c938.  v4:= v4 * v5 @kind int;
  #L10c93c.  v4:= v4 + v12 @kind int;
  #L10c93e.  if v0 == 0 then goto L10c94c;
  #L10c942.  call temp:= `allocate`(v4) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L10c948.  v0:= temp @kind object;
  #L10c94a.  goto L10c954;
  #L10c94c.  call temp:= `allocateDirect`(v4) @signature `Ljava/nio/ByteBuffer;.allocateDirect:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L10c952.  v0:= temp @kind object;
  #L10c954.  v5:= 0I;
  #L10c956.  v6:= 0I;
  #L10c958.  v7:= 0I;
  #L10c95a.  if v5 >= v2 then goto L10ca36;
  #L10c95e.  v8:= 0I;
  #L10c960.  if v8 >= v1 then goto L10ca30;
  #L10c964.  v9:= v13[v6];
  #L10c968.  v10:= v9 ^> 16;
  #L10c96c.  v11:= 255I;
  #L10c970.  v10:= v10 ^& v11 @kind int;
  #L10c972.  v14:= v9 ^> 8;
  #L10c976.  v14:= v14 ^& v11 @kind int;
  #L10c978.  v9:= v9 ^& v11 @kind int;
  #L10c97a.  v15:= v10 * -38;
  #L10c97e.  v16:= v14 * 74;
  #L10c982.  v15:= v15 - v16 @kind int;
  #L10c986.  v16:= v9 * 112;
  #L10c98a.  v15:= v15 + v16 @kind int;
  #L10c98e.  v15:= v15 + 128;
  #L10c992.  v15:= v15 ^> 8;
  #L10c996.  v15:= v15 + 128;
  #L10c99a.  v16:= v10 * 112;
  #L10c99e.  v17:= v14 * 94;
  #L10c9a2.  v16:= v16 - v17 @kind int;
  #L10c9a6.  v17:= v9 * 18;
  #L10c9aa.  v4:= v16 - v17 @kind int;
  #L10c9ae.  v4:= v4 + 128;
  #L10c9b2.  v4:= v4 ^> 8;
  #L10c9b6.  v4:= v4 + 128;
  #L10c9ba.  v16:= v7 + 1;
  #L10c9be.  v10:= v10 * 66;
  #L10c9c2.  v14:= v14 * 129;
  #L10c9c6.  v10:= v10 + v14 @kind int;
  #L10c9c8.  v9:= v9 * 25;
  #L10c9cc.  v10:= v10 + v9 @kind int;
  #L10c9ce.  v10:= v10 + 128;
  #L10c9d2.  v9:= v10 ^> 8;
  #L10c9d6.  v9:= v9 + 16;
  #L10c9da.  call temp:= `min`(v11, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L10c9e0.  v9:= temp;
  #L10c9e2.  v9:= (`byte`) v9 @kind i2b;
  #L10c9e4.  call temp:= `put`(v0, v7, v9) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10c9ea.  v7:= v5 %% 2;
  #L10c9ee.  if v7 != 0 then goto L10ca22;
  #L10c9f2.  v7:= v6 %% 2;
  #L10c9f6.  if v7 != 0 then goto L10ca22;
  #L10c9fa.  v7:= v12 + 1;
  #L10c9fe.  call temp:= `min`(v11, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L10ca04.  v4:= temp;
  #L10ca06.  v4:= (`byte`) v4 @kind i2b;
  #L10ca08.  call temp:= `put`(v0, v12, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10ca0e.  v12:= v7 + 1;
  #L10ca12.  call temp:= `min`(v11, v15) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L10ca18.  v4:= temp;
  #L10ca1a.  v4:= (`byte`) v4 @kind i2b;
  #L10ca1c.  call temp:= `put`(v0, v7, v4) @signature `Ljava/nio/ByteBuffer;.put:(IB)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10ca22.  v6:= v6 + 1;
  #L10ca26.  v8:= v8 + 1;
  #L10ca2a.  v7:= v16;
  #L10ca2e.  goto L10c960;
  #L10ca30.  v5:= v5 + 1;
  #L10ca34.  goto L10c95a;
  #L10ca36.  return v0 @kind object;
}
procedure `java.nio.ByteBuffer` `d`(`aa.c` v12 @kind this, `android.media.Image$Plane`[] v13 @kind object, `int` v14 , `int` v15 ) @signature `Laa/c;.d:([Landroid/media/Image$Plane;II)Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L10ca48.  v4:= v14 * v15 @kind int;
  #L10ca4c.  v0:= v4 / 4;
  #L10ca50.  v0:= v0 + v0 @kind int;
  #L10ca52.  v0:= v0 + v4 @kind int;
  #L10ca54.  v11:= new `byte`[v0];
  #L10ca58.  v0:= 1I;
  #L10ca5a.  v1:= v13[v0] @kind object;
  #L10ca5e.  call temp:= `getBuffer`(v1) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10ca64.  v1:= temp @kind object;
  #L10ca66.  v2:= 2I;
  #L10ca68.  v3:= v13[v2] @kind object;
  #L10ca6c.  call temp:= `getBuffer`(v3) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10ca72.  v3:= temp @kind object;
  #L10ca74.  call temp:= `position`(v3) @signature `Ljava/nio/ByteBuffer;.position:()I` @kind virtual;
  #L10ca7a.  v5:= temp;
  #L10ca7c.  call temp:= `limit`(v1) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L10ca82.  v6:= temp;
  #L10ca84.  v7:= v5 + 1;
  #L10ca88.  call temp:= `position`(v3, v7) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L10ca8e.  v7:= v6 + -1;
  #L10ca92.  call temp:= `limit`(v1, v7) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L10ca98.  v7:= v4 + v4 @kind int;
  #L10ca9c.  call temp:= `remaining`(v3) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L10caa2.  v8:= temp;
  #L10caa4.  v7:= v7 / 4;
  #L10caa8.  v9:= v7 + -2;
  #L10caac.  v10:= 0I;
  #L10caae.  if v8 != v9 then goto L10cac2;
  #L10cab2.  call temp:= `compareTo`(v3, v1) @signature `Ljava/nio/ByteBuffer;.compareTo:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L10cab8.  v8:= temp;
  #L10caba.  if v8 != 0 then goto L10cac2;
  #L10cabe.  v8:= 1I;
  #L10cac0.  goto L10cac4;
  #L10cac2.  v8:= 0I;
  #L10cac4.  call temp:= `position`(v3, v5) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L10caca.  call temp:= `limit`(v1, v6) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L10cad0.  if v8 == 0 then goto L10cb12;
  #L10cad4.  v14:= v13[v10] @kind object;
  #L10cad8.  call temp:= `getBuffer`(v14) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cade.  v14:= temp @kind object;
  #L10cae0.  call temp:= `get`(v14, v11, v10, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cae6.  v14:= v13[v0] @kind object;
  #L10caea.  call temp:= `getBuffer`(v14) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10caf0.  v14:= temp @kind object;
  #L10caf2.  v13:= v13[v2] @kind object;
  #L10caf6.  call temp:= `getBuffer`(v13) @signature `Landroid/media/Image$Plane;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cafc.  v13:= temp @kind object;
  #L10cafe.  call temp:= `get`(v13, v11, v4, v0) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cb04.  v4:= v4 + v0 @kind int;
  #L10cb06.  v7:= v7 + -1;
  #L10cb0a.  call temp:= `get`(v14, v11, v4, v7) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L10cb10.  goto L10cb48;
  #L10cb12.  v5:= v13[v10] @kind object;
  #L10cb16.  v9:= 0I;
  #L10cb18.  v10:= 1I;
  #L10cb1a.  v6:= v14;
  #L10cb1c.  v7:= v15;
  #L10cb1e.  v8:= v11 @kind object;
  #L10cb20.  call `f`(v5, v6, v7, v8, v9, v10) @signature `Laa/c;.f:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L10cb26.  v5:= v13[v0] @kind object;
  #L10cb2a.  v9:= v4 + 1;
  #L10cb2e.  v10:= 2I;
  #L10cb30.  call `f`(v5, v6, v7, v8, v9, v10) @signature `Laa/c;.f:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L10cb36.  v0:= v13[v2] @kind object;
  #L10cb3a.  v5:= 2I;
  #L10cb3c.  v1:= v14;
  #L10cb3e.  v2:= v15;
  #L10cb40.  v3:= v11 @kind object;
  #L10cb42.  call `f`(v0, v1, v2, v3, v4, v5) @signature `Laa/c;.f:(Landroid/media/Image$Plane;II[BII)V` @kind static;
  #L10cb48.  call temp:= `wrap`(v11) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L10cb4e.  v13:= temp @kind object;
  #L10cb50.  return v13 @kind object;
}
