record `u8.a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `u8.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u8.a.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `u8.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`u8.a` v0 @kind this, `java.lang.String` v1 @kind object, `java.util.Map` v2 @kind object) @signature `Lu8/a;.<init>:(Ljava/lang/String;Ljava/util/Map;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L37c434.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L37c43a.  v0.`u8.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L37c43e.  v0.`u8.a.b` @type ^`java.util.Map` := v2 @kind object;
  #L37c442.  v1:= new `java.util.HashMap`;
  #L37c446.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L37c44c.  v0.`u8.a.c` @type ^`java.util.Map` := v1 @kind object;
  #L37c450.  return @kind void;
}
procedure `java.lang.String` `a`(`u8.a` v6 @kind this, `java.util.Map` v7 @kind object) @signature `Lu8/a;.a:(Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L37c0a8.  v0:= new `java.lang.StringBuilder`;
  #L37c0ac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c0b2.  call temp:= `entrySet`(v7) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L37c0b8.  v7:= temp @kind object;
  #L37c0ba.  call temp:= `iterator`(v7) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L37c0c0.  v7:= temp @kind object;
  #L37c0c2.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L37c0c8.  v1:= temp @kind object;
  #L37c0ca.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L37c0ce.  v2:= new `java.lang.StringBuilder`;
  #L37c0d2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c0d8.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L37c0de.  v3:= temp @kind object;
  #L37c0e0.  v3:= (`java.lang.String`) v3 @kind object;
  #L37c0e4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c0ea.  v3:= "=" @kind object;
  #L37c0ee.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c0f4.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L37c0fa.  v4:= temp @kind object;
  #L37c0fc.  v5:= "" @kind object;
  #L37c100.  if v4 == 0 then goto L37c112;
  #L37c104.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L37c10a.  v1:= temp @kind object;
  #L37c10c.  v1:= (`java.lang.String`) v1 @kind object;
  #L37c110.  goto L37c114;
  #L37c112.  v1:= v5 @kind object;
  #L37c114.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c11a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c120.  v1:= temp @kind object;
  #L37c122.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c128.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L37c12e.  v1:= temp;
  #L37c130.  if v1 == 0 then goto L37c19e;
  #L37c134.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L37c13a.  v1:= temp @kind object;
  #L37c13c.  v1:= (`java.util.Map$Entry`) v1 @kind object;
  #L37c140.  v2:= new `java.lang.StringBuilder`;
  #L37c144.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c14a.  v4:= "&" @kind object;
  #L37c14e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c154.  call temp:= `getKey`(v1) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L37c15a.  v4:= temp @kind object;
  #L37c15c.  v4:= (`java.lang.String`) v4 @kind object;
  #L37c160.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c166.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c16c.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L37c172.  v4:= temp @kind object;
  #L37c174.  if v4 == 0 then goto L37c186;
  #L37c178.  call temp:= `getValue`(v1) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L37c17e.  v1:= temp @kind object;
  #L37c180.  v1:= (`java.lang.String`) v1 @kind object;
  #L37c184.  goto L37c188;
  #L37c186.  v1:= v5 @kind object;
  #L37c188.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c18e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c194.  v1:= temp @kind object;
  #L37c196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c19c.  goto L37c128;
  #L37c19e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c1a4.  v7:= temp @kind object;
  #L37c1a6.  return v7 @kind object;
}
procedure `java.lang.String` `b`(`u8.a` v2 @kind this, `java.lang.String` v3 @kind object, `java.util.Map` v4 @kind object) @signature `Lu8/a;.b:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L37c1b8.  call temp:= `a`(v2, v4) @signature `Lu8/a;.a:(Ljava/util/Map;)Ljava/lang/String;` @kind direct;
  #L37c1be.  v4:= temp @kind object;
  #L37c1c0.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L37c1c6.  v0:= temp;
  #L37c1c8.  if v0 == 0 then goto L37c1ce;
  #L37c1cc.  return v3 @kind object;
  #L37c1ce.  v0:= "?" @kind object;
  #L37c1d2.  call temp:= `contains`(v3, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L37c1d8.  v1:= temp;
  #L37c1da.  if v1 == 0 then goto L37c22c;
  #L37c1de.  v0:= "&" @kind object;
  #L37c1e2.  call temp:= `endsWith`(v3, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L37c1e8.  v1:= temp;
  #L37c1ea.  if v1 != 0 then goto L37c20c;
  #L37c1ee.  v1:= new `java.lang.StringBuilder`;
  #L37c1f2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c1f8.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c1fe.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c204.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c20a.  v4:= temp @kind object;
  #L37c20c.  v0:= new `java.lang.StringBuilder`;
  #L37c210.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c216.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c21c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c222.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c228.  v3:= temp @kind object;
  #L37c22a.  return v3 @kind object;
  #L37c22c.  v1:= new `java.lang.StringBuilder`;
  #L37c230.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c236.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c23c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c242.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c248.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c24e.  v3:= temp @kind object;
  #L37c250.  return v3 @kind object;
}
procedure `java.lang.String` `e`(`u8.a` v4 @kind this, `java.io.InputStream` v5 @kind object) @signature `Lu8/a;.e:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37c264.  v0:= new `java.io.BufferedReader`;
  #L37c268.  v1:= new `java.io.InputStreamReader`;
  #L37c26c.  v2:= "UTF-8" @kind object;
  #L37c270.  call `<init>`(v1, v5, v2) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/lang/String;)V` @kind direct;
  #L37c276.  call `<init>`(v0, v1) @signature `Ljava/io/BufferedReader;.<init>:(Ljava/io/Reader;)V` @kind direct;
  #L37c27c.  v5:= 8192I;
  #L37c280.  v5:= new `char`[v5];
  #L37c284.  v1:= new `java.lang.StringBuilder`;
  #L37c288.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c28e.  call temp:= `read`(v0, v5) @signature `Ljava/io/BufferedReader;.read:([C)I` @kind virtual;
  #L37c294.  v2:= temp;
  #L37c296.  v3:= -1I;
  #L37c298.  if v2 == v3 then goto L37c2a6;
  #L37c29c.  v3:= 0I;
  #L37c29e.  call temp:= `append`(v1, v5, v3, v2) @signature `Ljava/lang/StringBuilder;.append:([CII)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c2a4.  goto L37c28e;
  #L37c2a6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c2ac.  v5:= temp @kind object;
  #L37c2ae.  return v5 @kind object;
}
procedure `u8.c` `c`(`u8.a` v5 @kind this) @signature `Lu8/a;.c:()Lu8/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L37c2dc.  v0:= 0I;
  #L37c2de.  v1:= v5.`u8.a.a` @type ^`java.lang.String` @kind object;
  #L37c2e2.  v2:= v5.`u8.a.b` @type ^`java.util.Map` @kind object;
  #L37c2e6.  call temp:= `b`(v5, v1, v2) @signature `Lu8/a;.b:(Ljava/lang/String;Ljava/util/Map;)Ljava/lang/String;` @kind direct;
  #L37c2ec.  v1:= temp @kind object;
  #L37c2ee.  call temp:= `f`() @signature `Lo8/f;.f:()Lo8/f;` @kind static;
  #L37c2f4.  v2:= temp @kind object;
  #L37c2f6.  v3:= new `java.lang.StringBuilder`;
  #L37c2fa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37c300.  v4:= "GET Request URL: " @kind object;
  #L37c304.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c30a.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37c310.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37c316.  v3:= temp @kind object;
  #L37c318.  call `i`(v2, v3) @signature `Lo8/f;.i:(Ljava/lang/String;)V` @kind virtual;
  #L37c31e.  v2:= new `java.net.URL`;
  #L37c322.  call `<init>`(v2, v1) @signature `Ljava/net/URL;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L37c328.  call temp:= `openConnection`(v2) @signature `Ljava/net/URL;.openConnection:()Ljava/net/URLConnection;` @kind virtual;
  #L37c32e.  v1:= temp @kind object;
  #L37c330.  v1:= (`javax.net.ssl.HttpsURLConnection`) v1 @kind object;
  #L37c334.  v2:= 10000I;
  #L37c338.  call `setReadTimeout`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setReadTimeout:(I)V` @kind virtual;
  #L37c33e.  call `setConnectTimeout`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setConnectTimeout:(I)V` @kind virtual;
  #L37c344.  v2:= "GET" @kind object;
  #L37c348.  call `setRequestMethod`(v1, v2) @signature `Ljavax/net/ssl/HttpsURLConnection;.setRequestMethod:(Ljava/lang/String;)V` @kind virtual;
  #L37c34e.  v2:= v5.`u8.a.c` @type ^`java.util.Map` @kind object;
  #L37c352.  call temp:= `entrySet`(v2) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L37c358.  v2:= temp @kind object;
  #L37c35a.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L37c360.  v2:= temp @kind object;
  #L37c362.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L37c368.  v3:= temp;
  #L37c36a.  if v3 == 0 then goto L37c39a;
  #L37c36e.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L37c374.  v3:= temp @kind object;
  #L37c376.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L37c37a.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L37c380.  v4:= temp @kind object;
  #L37c382.  v4:= (`java.lang.String`) v4 @kind object;
  #L37c386.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L37c38c.  v3:= temp @kind object;
  #L37c38e.  v3:= (`java.lang.String`) v3 @kind object;
  #L37c392.  call `addRequestProperty`(v1, v4, v3) @signature `Ljavax/net/ssl/HttpsURLConnection;.addRequestProperty:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L37c398.  goto L37c362;
  #L37c39a.  call `connect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.connect:()V` @kind virtual;
  #L37c3a0.  call temp:= `getResponseCode`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.getResponseCode:()I` @kind virtual;
  #L37c3a6.  v2:= temp;
  #L37c3a8.  call temp:= `getInputStream`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L37c3ae.  v3:= temp @kind object;
  #L37c3b0.  if v3 == 0 then goto L37c3c4;
  #L37c3b4.  call temp:= `e`(v5, v3) @signature `Lu8/a;.e:(Ljava/io/InputStream;)Ljava/lang/String;` @kind direct;
  #L37c3ba.  v0:= temp @kind object;
  #L37c3bc.  goto L37c3c4;
  #L37c3be.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37c3c0.  v0:= v3 @kind object;
  #L37c3c2.  goto L37c3e8;
  #L37c3c4.  if v3 == 0 then goto L37c3ce;
  #L37c3c8.  call `close`(v3) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L37c3ce.  call `disconnect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.disconnect:()V` @kind virtual;
  #L37c3d4.  v1:= new `u8.c`;
  #L37c3d8.  call `<init>`(v1, v2, v0) @signature `Lu8/c;.<init>:(ILjava/lang/String;)V` @kind direct;
  #L37c3de.  return v1 @kind object;
  #L37c3e0.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37c3e2.  goto L37c3e8;
  #L37c3e4.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L37c3e6.  v1:= v0 @kind object;
  #L37c3e8.  if v0 == 0 then goto L37c3f2;
  #L37c3ec.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L37c3f2.  if v1 == 0 then goto L37c3fc;
  #L37c3f6.  call `disconnect`(v1) @signature `Ljavax/net/ssl/HttpsURLConnection;.disconnect:()V` @kind virtual;
  #L37c3fc.  throw v2;
  catch `java.lang.Throwable` @[L37c2de..L37c334] goto L37c3e4;
  catch `java.lang.Throwable` @[L37c338..L37c3b0] goto L37c3e0;
  catch `java.lang.Throwable` @[L37c3b4..L37c3bc] goto L37c3be;
}
procedure `u8.a` `d`(`u8.a` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lu8/a;.d:(Ljava/lang/String;Ljava/lang/String;)Lu8/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L37c2c0.  v0:= v1.`u8.a.c` @type ^`java.util.Map` @kind object;
  #L37c2c4.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L37c2ca.  return v1 @kind object;
}
