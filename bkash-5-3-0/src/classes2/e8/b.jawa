record `e8.b` @kind class @AccessFlag PUBLIC_FINAL extends `e8.c` @kind interface {
  `e8.c` `e8.b.a` @AccessFlag PRIVATE_FINAL;
  `float` `e8.b.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e8.b` v1 @kind this, `float` v2 , `e8.c` v3 @kind object) @signature `Le8/b;.<init>:(FLe8/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a9640.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a9646.  v0:= instanceof @variable v3 @type ^`e8.b` @kind boolean;
  #L2a964a.  if v0 == 0 then goto L2a9664;
  #L2a964e.  v3:= (`e8.b`) v3 @kind object;
  #L2a9652.  v3:= v3.`e8.b.a` @type ^`e8.c` @kind object;
  #L2a9656.  v0:= v3 @kind object;
  #L2a9658.  v0:= (`e8.b`) v0 @kind object;
  #L2a965c.  v0:= v0.`e8.b.b` @type ^`float`;
  #L2a9660.  v2:= v2 + v0 @kind float;
  #L2a9662.  goto L2a9646;
  #L2a9664.  v1.`e8.b.a` @type ^`e8.c` := v3 @kind object;
  #L2a9668.  v1.`e8.b.b` @type ^`float` := v2;
  #L2a966c.  return @kind void;
}
procedure `float` `a`(`e8.b` v1 @kind this, `android.graphics.RectF` v2 @kind object) @signature `Le8/b;.a:(Landroid/graphics/RectF;)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a95d4.  v0:= v1.`e8.b.a` @type ^`e8.c` @kind object;
  #L2a95d8.  call temp:= `a`(v0, v2) @signature `Le8/c;.a:(Landroid/graphics/RectF;)F` @kind interface;
  #L2a95de.  v2:= temp;
  #L2a95e0.  v0:= v1.`e8.b.b` @type ^`float`;
  #L2a95e4.  v2:= v2 + v0 @kind float;
  #L2a95e6.  v0:= 0I;
  #L2a95e8.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L2a95ee.  v2:= temp;
  #L2a95f0.  return v2;
}
procedure `boolean` `equals`(`e8.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Le8/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a9580.  v0:= 1I;
  #L2a9582.  if v4 != v5 then goto L2a9588;
  #L2a9586.  return v0;
  #L2a9588.  v1:= instanceof @variable v5 @type ^`e8.b` @kind boolean;
  #L2a958c.  v2:= 0I;
  #L2a958e.  if v1 != 0 then goto L2a9594;
  #L2a9592.  return v2;
  #L2a9594.  v5:= (`e8.b`) v5 @kind object;
  #L2a9598.  v1:= v4.`e8.b.a` @type ^`e8.c` @kind object;
  #L2a959c.  v3:= v5.`e8.b.a` @type ^`e8.c` @kind object;
  #L2a95a0.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2a95a6.  v1:= temp;
  #L2a95a8.  if v1 == 0 then goto L2a95be;
  #L2a95ac.  v1:= v4.`e8.b.b` @type ^`float`;
  #L2a95b0.  v5:= v5.`e8.b.b` @type ^`float`;
  #L2a95b4.  v5:= fcmpl(v1, v5);
  #L2a95b8.  if v5 != 0 then goto L2a95be;
  #L2a95bc.  goto L2a95c0;
  #L2a95be.  v0:= 0I;
  #L2a95c0.  return v0;
}
procedure `int` `hashCode`(`e8.b` v3 @kind this) @signature `Le8/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a9604.  v0:= 2I;
  #L2a9606.  v0:= new `java.lang.Object`[v0];
  #L2a960a.  v1:= v3.`e8.b.a` @type ^`e8.c` @kind object;
  #L2a960e.  v2:= 0I;
  #L2a9610.  v0[v2]:= v1 @kind object;
  #L2a9614.  v1:= v3.`e8.b.b` @type ^`float`;
  #L2a9618.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2a961e.  v1:= temp @kind object;
  #L2a9620.  v2:= 1I;
  #L2a9622.  v0[v2]:= v1 @kind object;
  #L2a9626.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L2a962c.  v0:= temp;
  #L2a962e.  return v0;
}
