record `od.n$b` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `java.lang.Throwable` `od.n$b.exception` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`od.n$b` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lod/n$b;.<init>:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3268e4.  v0:= "exception" @kind object;
  #L3268e8.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3268ee.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3268f4.  v1.`od.n$b.exception` @type ^`java.lang.Throwable` := v2 @kind object;
  #L3268f8.  return @kind void;
}
procedure `boolean` `equals`(`od.n$b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lod/n$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326848.  v0:= instanceof @variable v2 @type ^`od.n$b` @kind boolean;
  #L32684c.  if v0 == 0 then goto L32686c;
  #L326850.  v0:= v1.`od.n$b.exception` @type ^`java.lang.Throwable` @kind object;
  #L326854.  v2:= (`od.n$b`) v2 @kind object;
  #L326858.  v2:= v2.`od.n$b.exception` @type ^`java.lang.Throwable` @kind object;
  #L32685c.  call temp:= `a`(v0, v2) @signature `Lkotlin/jvm/internal/k;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L326862.  v2:= temp;
  #L326864.  if v2 == 0 then goto L32686c;
  #L326868.  v2:= 1I;
  #L32686a.  goto L32686e;
  #L32686c.  v2:= 0I;
  #L32686e.  return v2;
}
procedure `int` `hashCode`(`od.n$b` v1 @kind this) @signature `Lod/n$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L326880.  v0:= v1.`od.n$b.exception` @type ^`java.lang.Throwable` @kind object;
  #L326884.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Throwable;.hashCode:()I` @kind virtual;
  #L32688a.  v0:= temp;
  #L32688c.  return v0;
}
procedure `java.lang.String` `toString`(`od.n$b` v2 @kind this) @signature `Lod/n$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3268a0.  v0:= new `java.lang.StringBuilder`;
  #L3268a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3268aa.  v1:= "Failure(" @kind object;
  #L3268ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3268b4.  v1:= v2.`od.n$b.exception` @type ^`java.lang.Throwable` @kind object;
  #L3268b8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3268be.  v1:= 41I;
  #L3268c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3268c8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3268ce.  v0:= temp @kind object;
  #L3268d0.  return v0 @kind object;
}
