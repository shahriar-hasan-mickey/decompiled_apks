record `kotlin.ranges.h` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.f` @kind class {
}
global `kotlin.ranges.h$a` `@@kotlin.ranges.h.k` @AccessFlag PUBLIC_STATIC_FINAL;
global `kotlin.ranges.h` `@@kotlin.ranges.h.l` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/h;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L309c64.  v0:= new `kotlin.ranges.h$a`;
  #L309c68.  v1:= 0I;
  #L309c6a.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/h$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L309c70.  `@@kotlin.ranges.h.k` @type ^`kotlin.ranges.h$a` := v0 @kind object;
  #L309c74.  v0:= new `kotlin.ranges.h`;
  #L309c78.  v1:= 1I;
  #L309c7a.  v2:= 0I;
  #L309c7c.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/h;.<init>:(II)V` @kind direct;
  #L309c82.  `@@kotlin.ranges.h.l` @type ^`kotlin.ranges.h` := v0 @kind object;
  #L309c86.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.h` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lkotlin/ranges/h;.<init>:(II)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L309c98.  v0:= 1I;
  #L309c9a.  call `<init>`(v1, v2, v3, v0) @signature `Lkotlin/ranges/f;.<init>:(III)V` @kind direct;
  #L309ca0.  return @kind void;
}
procedure `kotlin.ranges.h` `k`() @signature `Lkotlin/ranges/h;.k:()Lkotlin/ranges/h;` @AccessFlag PUBLIC_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;

  #L309c4c.  v0:= `@@kotlin.ranges.h.l` @type ^`kotlin.ranges.h` @kind object;
  #L309c50.  return v0 @kind object;
}
procedure `boolean` `equals`(`kotlin.ranges.h` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309ae8.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.h` @kind boolean;
  #L309aec.  if v0 == 0 then goto L309b3e;
  #L309af0.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/h;.isEmpty:()Z` @kind virtual;
  #L309af6.  v0:= temp;
  #L309af8.  if v0 == 0 then goto L309b0e;
  #L309afc.  v0:= v3 @kind object;
  #L309afe.  v0:= (`kotlin.ranges.h`) v0 @kind object;
  #L309b02.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/h;.isEmpty:()Z` @kind virtual;
  #L309b08.  v0:= temp;
  #L309b0a.  if v0 != 0 then goto L309b3a;
  #L309b0e.  call temp:= `g`(v2) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309b14.  v0:= temp;
  #L309b16.  v3:= (`kotlin.ranges.h`) v3 @kind object;
  #L309b1a.  call temp:= `g`(v3) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309b20.  v1:= temp;
  #L309b22.  if v0 != v1 then goto L309b3e;
  #L309b26.  call temp:= `h`(v2) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309b2c.  v0:= temp;
  #L309b2e.  call temp:= `h`(v3) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309b34.  v3:= temp;
  #L309b36.  if v0 != v3 then goto L309b3e;
  #L309b3a.  v3:= 1I;
  #L309b3c.  goto L309b40;
  #L309b3e.  v3:= 0I;
  #L309b40.  return v3;
}
procedure `int` `hashCode`(`kotlin.ranges.h` v2 @kind this) @signature `Lkotlin/ranges/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309b80.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/h;.isEmpty:()Z` @kind virtual;
  #L309b86.  v0:= temp;
  #L309b88.  if v0 == 0 then goto L309b90;
  #L309b8c.  v0:= -1I;
  #L309b8e.  goto L309ba6;
  #L309b90.  call temp:= `g`(v2) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309b96.  v0:= temp;
  #L309b98.  v0:= v0 * 31;
  #L309b9c.  call temp:= `h`(v2) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309ba2.  v1:= temp;
  #L309ba4.  v0:= v0 + v1 @kind int;
  #L309ba6.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.h` v2 @kind this) @signature `Lkotlin/ranges/h;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309b54.  call temp:= `g`(v2) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309b5a.  v0:= temp;
  #L309b5c.  call temp:= `h`(v2) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309b62.  v1:= temp;
  #L309b64.  if v0 <= v1 then goto L309b6c;
  #L309b68.  v0:= 1I;
  #L309b6a.  goto L309b6e;
  #L309b6c.  v0:= 0I;
  #L309b6e.  return v0;
}
procedure `boolean` `l`(`kotlin.ranges.h` v1 @kind this, `int` v2 ) @signature `Lkotlin/ranges/h;.l:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309ab8.  call temp:= `g`(v1) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309abe.  v0:= temp;
  #L309ac0.  if v0 > v2 then goto L309ad4;
  #L309ac4.  call temp:= `h`(v1) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309aca.  v0:= temp;
  #L309acc.  if v2 > v0 then goto L309ad4;
  #L309ad0.  v2:= 1I;
  #L309ad2.  goto L309ad6;
  #L309ad4.  v2:= 0I;
  #L309ad6.  return v2;
}
procedure `java.lang.Integer` `m`(`kotlin.ranges.h` v1 @kind this) @signature `Lkotlin/ranges/h;.m:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309bb8.  call temp:= `h`(v1) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309bbe.  v0:= temp;
  #L309bc0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L309bc6.  v0:= temp @kind object;
  #L309bc8.  return v0 @kind object;
}
procedure `java.lang.Integer` `n`(`kotlin.ranges.h` v1 @kind this) @signature `Lkotlin/ranges/h;.n:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309bdc.  call temp:= `g`(v1) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309be2.  v0:= temp;
  #L309be4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L309bea.  v0:= temp @kind object;
  #L309bec.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.h` v2 @kind this) @signature `Lkotlin/ranges/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309c00.  v0:= new `java.lang.StringBuilder`;
  #L309c04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309c0a.  call temp:= `g`(v2) @signature `Lkotlin/ranges/f;.g:()I` @kind virtual;
  #L309c10.  v1:= temp;
  #L309c12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L309c18.  v1:= ".." @kind object;
  #L309c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309c22.  call temp:= `h`(v2) @signature `Lkotlin/ranges/f;.h:()I` @kind virtual;
  #L309c28.  v1:= temp;
  #L309c2a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L309c30.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L309c36.  v0:= temp @kind object;
  #L309c38.  return v0 @kind object;
}
