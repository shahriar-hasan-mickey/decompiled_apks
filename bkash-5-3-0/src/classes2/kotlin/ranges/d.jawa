record `kotlin.ranges.d` @kind class @AccessFlag FINAL {
  `double` `kotlin.ranges.d.a` @AccessFlag PRIVATE_FINAL;
  `double` `kotlin.ranges.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `boolean` `a`(`kotlin.ranges.d` v5 @kind this) @signature `Lkotlin/ranges/d;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L309510.  v0:= v5.`kotlin.ranges.d.a` @type ^`double` @kind wide;
  #L309514.  v2:= v5.`kotlin.ranges.d.b` @type ^`double` @kind wide;
  #L309518.  v4:= dcmpg(v0, v2);
  #L30951c.  if v4 <= 0 then goto L309524;
  #L309520.  v0:= 1I;
  #L309522.  goto L309526;
  #L309524.  v0:= 0I;
  #L309526.  return v0;
}
procedure `boolean` `equals`(`kotlin.ranges.d` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lkotlin/ranges/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L309498.  v0:= instanceof @variable v8 @type ^`kotlin.ranges.d` @kind boolean;
  #L30949c.  v1:= 1I;
  #L30949e.  v2:= 0I;
  #L3094a0.  if v0 == 0 then goto L3094fc;
  #L3094a4.  call temp:= `a`(v7) @signature `Lkotlin/ranges/d;.a:()Z` @kind virtual;
  #L3094aa.  v0:= temp;
  #L3094ac.  if v0 == 0 then goto L3094c2;
  #L3094b0.  v0:= v8 @kind object;
  #L3094b2.  v0:= (`kotlin.ranges.d`) v0 @kind object;
  #L3094b6.  call temp:= `a`(v0) @signature `Lkotlin/ranges/d;.a:()Z` @kind virtual;
  #L3094bc.  v0:= temp;
  #L3094be.  if v0 != 0 then goto L3094fe;
  #L3094c2.  v3:= v7.`kotlin.ranges.d.a` @type ^`double` @kind wide;
  #L3094c6.  v8:= (`kotlin.ranges.d`) v8 @kind object;
  #L3094ca.  v5:= v8.`kotlin.ranges.d.a` @type ^`double` @kind wide;
  #L3094ce.  v0:= dcmpg(v3, v5);
  #L3094d2.  if v0 != 0 then goto L3094da;
  #L3094d6.  v0:= 1I;
  #L3094d8.  goto L3094dc;
  #L3094da.  v0:= 0I;
  #L3094dc.  if v0 == 0 then goto L3094fc;
  #L3094e0.  v3:= v7.`kotlin.ranges.d.b` @type ^`double` @kind wide;
  #L3094e4.  v5:= v8.`kotlin.ranges.d.b` @type ^`double` @kind wide;
  #L3094e8.  v8:= dcmpg(v3, v5);
  #L3094ec.  if v8 != 0 then goto L3094f4;
  #L3094f0.  v8:= 1I;
  #L3094f2.  goto L3094f6;
  #L3094f4.  v8:= 0I;
  #L3094f6.  if v8 == 0 then goto L3094fc;
  #L3094fa.  goto L3094fe;
  #L3094fc.  v1:= 0I;
  #L3094fe.  return v1;
}
procedure `int` `hashCode`(`kotlin.ranges.d` v3 @kind this) @signature `Lkotlin/ranges/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L309538.  call temp:= `a`(v3) @signature `Lkotlin/ranges/d;.a:()Z` @kind virtual;
  #L30953e.  v0:= temp;
  #L309540.  if v0 == 0 then goto L309548;
  #L309544.  v0:= -1I;
  #L309546.  goto L309576;
  #L309548.  v0:= v3.`kotlin.ranges.d.a` @type ^`double` @kind wide;
  #L30954c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L309552.  v0:= temp @kind object;
  #L309554.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30955a.  v0:= temp;
  #L30955c.  v0:= v0 * 31;
  #L309560.  v1:= v3.`kotlin.ranges.d.b` @type ^`double` @kind wide;
  #L309564.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L30956a.  v1:= temp @kind object;
  #L30956c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L309572.  v1:= temp;
  #L309574.  v0:= v0 + v1 @kind int;
  #L309576.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.d` v3 @kind this) @signature `Lkotlin/ranges/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L309588.  v0:= new `java.lang.StringBuilder`;
  #L30958c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309592.  v1:= v3.`kotlin.ranges.d.a` @type ^`double` @kind wide;
  #L309596.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L30959c.  v1:= ".." @kind object;
  #L3095a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3095a6.  v1:= v3.`kotlin.ranges.d.b` @type ^`double` @kind wide;
  #L3095aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3095b0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3095b6.  v0:= temp @kind object;
  #L3095b8.  return v0 @kind object;
}
