record `kotlin.ranges.a` @kind class @AccessFlag PUBLIC extends `java.lang.Iterable` @kind interface {
  `char` `kotlin.ranges.a.g` @AccessFlag PRIVATE_FINAL;
  `char` `kotlin.ranges.a.h` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.ranges.a.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L309280.  v0:= new `kotlin.ranges.a$a`;
  #L309284.  v1:= 0I;
  #L309286.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/a$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L30928c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.a` v1 @kind this, `char` v2 , `char` v3 , `int` v4 ) @signature `Lkotlin/ranges/a;.<init>:(CCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3092a0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3092a6.  if v4 == 0 then goto L3092da;
  #L3092aa.  v0:= -2147483648I;
  #L3092ae.  if v4 == v0 then goto L3092ca;
  #L3092b2.  v1.`kotlin.ranges.a.g` @type ^`char` := v2 @kind char;
  #L3092b6.  call temp:= `c`(v2, v3, v4) @signature `Lrd/c;.c:(III)I` @kind static;
  #L3092bc.  v2:= temp;
  #L3092be.  v2:= (`char`) v2 @kind i2c;
  #L3092c0.  v1.`kotlin.ranges.a.h` @type ^`char` := v2 @kind char;
  #L3092c4.  v1.`kotlin.ranges.a.i` @type ^`int` := v4;
  #L3092c8.  return @kind void;
  #L3092ca.  v2:= new `java.lang.IllegalArgumentException`;
  #L3092ce.  v3:= "Step must be greater than Int.MIN_VALUE to avoid overflow on negation." @kind object;
  #L3092d2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3092d8.  throw v2;
  #L3092da.  v2:= new `java.lang.IllegalArgumentException`;
  #L3092de.  v3:= "Step must be non-zero." @kind object;
  #L3092e2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3092e8.  throw v2;
}
procedure `char` `g`(`kotlin.ranges.a` v1 @kind this) @signature `Lkotlin/ranges/a;.g:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L30920c.  v0:= v1.`kotlin.ranges.a.g` @type ^`char` @kind char;
  #L309210.  return v0;
}
procedure `char` `h`(`kotlin.ranges.a` v1 @kind this) @signature `Lkotlin/ranges/a;.h:()C` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L309224.  v0:= v1.`kotlin.ranges.a.h` @type ^`char` @kind char;
  #L309228.  return v0;
}
procedure `pd.h` `i`(`kotlin.ranges.a` v4 @kind this) @signature `Lkotlin/ranges/a;.i:()Lpd/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L309258.  v0:= new `kotlin.ranges.b`;
  #L30925c.  v1:= v4.`kotlin.ranges.a.g` @type ^`char` @kind char;
  #L309260.  v2:= v4.`kotlin.ranges.a.h` @type ^`char` @kind char;
  #L309264.  v3:= v4.`kotlin.ranges.a.i` @type ^`int`;
  #L309268.  call `<init>`(v0, v1, v2, v3) @signature `Lkotlin/ranges/b;.<init>:(CCI)V` @kind direct;
  #L30926e.  return v0 @kind object;
}
procedure `java.util.Iterator` `iterator`(`kotlin.ranges.a` v1 @kind this) @signature `Lkotlin/ranges/a;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L30923c.  call temp:= `i`(v1) @signature `Lkotlin/ranges/a;.i:()Lpd/h;` @kind virtual;
  #L309242.  v0:= temp @kind object;
  #L309244.  return v0 @kind object;
}
