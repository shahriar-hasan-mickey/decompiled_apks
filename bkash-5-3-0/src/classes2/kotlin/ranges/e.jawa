record `kotlin.ranges.e` @kind class @AccessFlag FINAL {
  `float` `kotlin.ranges.e.a` @AccessFlag PRIVATE_FINAL;
  `float` `kotlin.ranges.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `boolean` `a`(`kotlin.ranges.e` v2 @kind this) @signature `Lkotlin/ranges/e;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309644.  v0:= v2.`kotlin.ranges.e.a` @type ^`float`;
  #L309648.  v1:= v2.`kotlin.ranges.e.b` @type ^`float`;
  #L30964c.  v0:= fcmpg(v0, v1);
  #L309650.  if v0 <= 0 then goto L309658;
  #L309654.  v0:= 1I;
  #L309656.  goto L30965a;
  #L309658.  v0:= 0I;
  #L30965a.  return v0;
}
procedure `boolean` `equals`(`kotlin.ranges.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lkotlin/ranges/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3095cc.  v0:= instanceof @variable v5 @type ^`kotlin.ranges.e` @kind boolean;
  #L3095d0.  v1:= 1I;
  #L3095d2.  v2:= 0I;
  #L3095d4.  if v0 == 0 then goto L309630;
  #L3095d8.  call temp:= `a`(v4) @signature `Lkotlin/ranges/e;.a:()Z` @kind virtual;
  #L3095de.  v0:= temp;
  #L3095e0.  if v0 == 0 then goto L3095f6;
  #L3095e4.  v0:= v5 @kind object;
  #L3095e6.  v0:= (`kotlin.ranges.e`) v0 @kind object;
  #L3095ea.  call temp:= `a`(v0) @signature `Lkotlin/ranges/e;.a:()Z` @kind virtual;
  #L3095f0.  v0:= temp;
  #L3095f2.  if v0 != 0 then goto L309632;
  #L3095f6.  v0:= v4.`kotlin.ranges.e.a` @type ^`float`;
  #L3095fa.  v5:= (`kotlin.ranges.e`) v5 @kind object;
  #L3095fe.  v3:= v5.`kotlin.ranges.e.a` @type ^`float`;
  #L309602.  v0:= fcmpg(v0, v3);
  #L309606.  if v0 != 0 then goto L30960e;
  #L30960a.  v0:= 1I;
  #L30960c.  goto L309610;
  #L30960e.  v0:= 0I;
  #L309610.  if v0 == 0 then goto L309630;
  #L309614.  v0:= v4.`kotlin.ranges.e.b` @type ^`float`;
  #L309618.  v5:= v5.`kotlin.ranges.e.b` @type ^`float`;
  #L30961c.  v5:= fcmpg(v0, v5);
  #L309620.  if v5 != 0 then goto L309628;
  #L309624.  v5:= 1I;
  #L309626.  goto L30962a;
  #L309628.  v5:= 0I;
  #L30962a.  if v5 == 0 then goto L309630;
  #L30962e.  goto L309632;
  #L309630.  v1:= 0I;
  #L309632.  return v1;
}
procedure `int` `hashCode`(`kotlin.ranges.e` v2 @kind this) @signature `Lkotlin/ranges/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30966c.  call temp:= `a`(v2) @signature `Lkotlin/ranges/e;.a:()Z` @kind virtual;
  #L309672.  v0:= temp;
  #L309674.  if v0 == 0 then goto L30967c;
  #L309678.  v0:= -1I;
  #L30967a.  goto L3096aa;
  #L30967c.  v0:= v2.`kotlin.ranges.e.a` @type ^`float`;
  #L309680.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L309686.  v0:= temp @kind object;
  #L309688.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L30968e.  v0:= temp;
  #L309690.  v0:= v0 * 31;
  #L309694.  v1:= v2.`kotlin.ranges.e.b` @type ^`float`;
  #L309698.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L30969e.  v1:= temp @kind object;
  #L3096a0.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3096a6.  v1:= temp;
  #L3096a8.  v0:= v0 + v1 @kind int;
  #L3096aa.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.e` v2 @kind this) @signature `Lkotlin/ranges/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3096bc.  v0:= new `java.lang.StringBuilder`;
  #L3096c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3096c6.  v1:= v2.`kotlin.ranges.e.a` @type ^`float`;
  #L3096ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3096d0.  v1:= ".." @kind object;
  #L3096d4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3096da.  v1:= v2.`kotlin.ranges.e.b` @type ^`float`;
  #L3096de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3096e4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3096ea.  v0:= temp @kind object;
  #L3096ec.  return v0 @kind object;
}
