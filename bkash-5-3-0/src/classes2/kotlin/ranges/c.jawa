record `kotlin.ranges.c` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.ranges.a` @kind class {
}
procedure `void` `<clinit>`() @signature `Lkotlin/ranges/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L309450.  v0:= new `kotlin.ranges.c$a`;
  #L309454.  v1:= 0I;
  #L309456.  call `<init>`(v0, v1) @signature `Lkotlin/ranges/c$a;.<init>:(Lkotlin/jvm/internal/g;)V` @kind direct;
  #L30945c.  v0:= new `kotlin.ranges.c`;
  #L309460.  v1:= 1I;
  #L309462.  v2:= 0I;
  #L309464.  call `<init>`(v0, v1, v2) @signature `Lkotlin/ranges/c;.<init>:(CC)V` @kind direct;
  #L30946a.  return @kind void;
}
procedure `void` `<init>`(`kotlin.ranges.c` v1 @kind this, `char` v2 , `char` v3 ) @signature `Lkotlin/ranges/c;.<init>:(CC)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L30947c.  v0:= 1I;
  #L30947e.  call `<init>`(v1, v2, v3, v0) @signature `Lkotlin/ranges/a;.<init>:(CCI)V` @kind direct;
  #L309484.  return @kind void;
}
procedure `boolean` `equals`(`kotlin.ranges.c` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lkotlin/ranges/c;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30932c.  v0:= instanceof @variable v3 @type ^`kotlin.ranges.c` @kind boolean;
  #L309330.  if v0 == 0 then goto L309382;
  #L309334.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/c;.isEmpty:()Z` @kind virtual;
  #L30933a.  v0:= temp;
  #L30933c.  if v0 == 0 then goto L309352;
  #L309340.  v0:= v3 @kind object;
  #L309342.  v0:= (`kotlin.ranges.c`) v0 @kind object;
  #L309346.  call temp:= `isEmpty`(v0) @signature `Lkotlin/ranges/c;.isEmpty:()Z` @kind virtual;
  #L30934c.  v0:= temp;
  #L30934e.  if v0 != 0 then goto L30937e;
  #L309352.  call temp:= `g`(v2) @signature `Lkotlin/ranges/a;.g:()C` @kind virtual;
  #L309358.  v0:= temp;
  #L30935a.  v3:= (`kotlin.ranges.c`) v3 @kind object;
  #L30935e.  call temp:= `g`(v3) @signature `Lkotlin/ranges/a;.g:()C` @kind virtual;
  #L309364.  v1:= temp;
  #L309366.  if v0 != v1 then goto L309382;
  #L30936a.  call temp:= `h`(v2) @signature `Lkotlin/ranges/a;.h:()C` @kind virtual;
  #L309370.  v0:= temp;
  #L309372.  call temp:= `h`(v3) @signature `Lkotlin/ranges/a;.h:()C` @kind virtual;
  #L309378.  v3:= temp;
  #L30937a.  if v0 != v3 then goto L309382;
  #L30937e.  v3:= 1I;
  #L309380.  goto L309384;
  #L309382.  v3:= 0I;
  #L309384.  return v3;
}
procedure `int` `hashCode`(`kotlin.ranges.c` v2 @kind this) @signature `Lkotlin/ranges/c;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3093cc.  call temp:= `isEmpty`(v2) @signature `Lkotlin/ranges/c;.isEmpty:()Z` @kind virtual;
  #L3093d2.  v0:= temp;
  #L3093d4.  if v0 == 0 then goto L3093dc;
  #L3093d8.  v0:= -1I;
  #L3093da.  goto L3093f2;
  #L3093dc.  call temp:= `g`(v2) @signature `Lkotlin/ranges/a;.g:()C` @kind virtual;
  #L3093e2.  v0:= temp;
  #L3093e4.  v0:= v0 * 31;
  #L3093e8.  call temp:= `h`(v2) @signature `Lkotlin/ranges/a;.h:()C` @kind virtual;
  #L3093ee.  v1:= temp;
  #L3093f0.  v0:= v0 + v1 @kind int;
  #L3093f2.  return v0;
}
procedure `boolean` `isEmpty`(`kotlin.ranges.c` v2 @kind this) @signature `Lkotlin/ranges/c;.isEmpty:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309398.  call temp:= `g`(v2) @signature `Lkotlin/ranges/a;.g:()C` @kind virtual;
  #L30939e.  v0:= temp;
  #L3093a0.  call temp:= `h`(v2) @signature `Lkotlin/ranges/a;.h:()C` @kind virtual;
  #L3093a6.  v1:= temp;
  #L3093a8.  call temp:= `h`(v0, v1) @signature `Lkotlin/jvm/internal/k;.h:(II)I` @kind static;
  #L3093ae.  v0:= temp;
  #L3093b0.  if v0 <= 0 then goto L3093b8;
  #L3093b4.  v0:= 1I;
  #L3093b6.  goto L3093ba;
  #L3093b8.  v0:= 0I;
  #L3093ba.  return v0;
}
procedure `java.lang.String` `toString`(`kotlin.ranges.c` v2 @kind this) @signature `Lkotlin/ranges/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L309404.  v0:= new `java.lang.StringBuilder`;
  #L309408.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30940e.  call temp:= `g`(v2) @signature `Lkotlin/ranges/a;.g:()C` @kind virtual;
  #L309414.  v1:= temp;
  #L309416.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30941c.  v1:= ".." @kind object;
  #L309420.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309426.  call temp:= `h`(v2) @signature `Lkotlin/ranges/a;.h:()C` @kind virtual;
  #L30942c.  v1:= temp;
  #L30942e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L309434.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30943a.  v0:= temp @kind object;
  #L30943c.  return v0 @kind object;
}
