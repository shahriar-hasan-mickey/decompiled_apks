record `kotlin.ranges.b` @kind class @AccessFlag PUBLIC_FINAL extends `pd.h` @kind class {
  `int` `kotlin.ranges.b.g` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.ranges.b.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.ranges.b.i` @AccessFlag PRIVATE;
  `int` `kotlin.ranges.b.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.ranges.b` v2 @kind this, `char` v3 , `char` v4 , `int` v5 ) @signature `Lkotlin/ranges/b;.<init>:(CCI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3091b4.  call `<init>`(v2) @signature `Lpd/h;.<init>:()V` @kind direct;
  #L3091ba.  v2.`kotlin.ranges.b.g` @type ^`int` := v5;
  #L3091be.  v2.`kotlin.ranges.b.h` @type ^`int` := v4;
  #L3091c2.  v0:= 1I;
  #L3091c4.  v1:= 0I;
  #L3091c6.  if v5 <= 0 then goto L3091d8;
  #L3091ca.  call temp:= `h`(v3, v4) @signature `Lkotlin/jvm/internal/k;.h:(II)I` @kind static;
  #L3091d0.  v5:= temp;
  #L3091d2.  if v5 > 0 then goto L3091e6;
  #L3091d6.  goto L3091e8;
  #L3091d8.  call temp:= `h`(v3, v4) @signature `Lkotlin/jvm/internal/k;.h:(II)I` @kind static;
  #L3091de.  v5:= temp;
  #L3091e0.  if v5 < 0 then goto L3091e6;
  #L3091e4.  goto L3091e8;
  #L3091e6.  v0:= 0I;
  #L3091e8.  v2.`kotlin.ranges.b.i` @type ^`boolean` := v0 @kind boolean;
  #L3091ec.  if v0 == 0 then goto L3091f2;
  #L3091f0.  goto L3091f4;
  #L3091f2.  v3:= v4;
  #L3091f4.  v2.`kotlin.ranges.b.j` @type ^`int` := v3;
  #L3091f8.  return @kind void;
}
procedure `char` `a`(`kotlin.ranges.b` v2 @kind this) @signature `Lkotlin/ranges/b;.a:()C` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30916c.  v0:= v2.`kotlin.ranges.b.j` @type ^`int`;
  #L309170.  v1:= v2.`kotlin.ranges.b.h` @type ^`int`;
  #L309174.  if v0 != v1 then goto L309194;
  #L309178.  v1:= v2.`kotlin.ranges.b.i` @type ^`boolean` @kind boolean;
  #L30917c.  if v1 == 0 then goto L309188;
  #L309180.  v1:= 0I;
  #L309182.  v2.`kotlin.ranges.b.i` @type ^`boolean` := v1 @kind boolean;
  #L309186.  goto L30919e;
  #L309188.  v0:= new `java.util.NoSuchElementException`;
  #L30918c.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L309192.  throw v0;
  #L309194.  v1:= v2.`kotlin.ranges.b.g` @type ^`int`;
  #L309198.  v1:= v1 + v0 @kind int;
  #L30919a.  v2.`kotlin.ranges.b.j` @type ^`int` := v1;
  #L30919e.  v0:= (`char`) v0 @kind i2c;
  #L3091a0.  return v0;
}
procedure `boolean` `hasNext`(`kotlin.ranges.b` v1 @kind this) @signature `Lkotlin/ranges/b;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309154.  v0:= v1.`kotlin.ranges.b.i` @type ^`boolean` @kind boolean;
  #L309158.  return v0;
}
