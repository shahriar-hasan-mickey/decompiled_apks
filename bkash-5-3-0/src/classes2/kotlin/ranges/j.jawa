record `kotlin.ranges.j` @kind class @AccessFlag PUBLIC_FINAL extends `pd.y` @kind class {
  `long` `kotlin.ranges.j.g` @AccessFlag PRIVATE_FINAL;
  `long` `kotlin.ranges.j.h` @AccessFlag PRIVATE_FINAL;
  `boolean` `kotlin.ranges.j.i` @AccessFlag PRIVATE;
  `long` `kotlin.ranges.j.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.ranges.j` v5 @kind this, `long` v6 , `long` v8 , `long` v10 ) @signature `Lkotlin/ranges/j;.<init>:(JJJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L309d44.  call `<init>`(v5) @signature `Lpd/y;.<init>:()V` @kind direct;
  #L309d4a.  v5.`kotlin.ranges.j.g` @type ^`long` := v10 @kind wide;
  #L309d4e.  v5.`kotlin.ranges.j.h` @type ^`long` := v8 @kind wide;
  #L309d52.  v0:= 1I;
  #L309d54.  v1:= 0I;
  #L309d56.  v2:= 0L;
  #L309d5a.  v4:= lcmp(v10, v2);
  #L309d5e.  v10:= lcmp(v6, v8);
  #L309d62.  if v4 <= 0 then goto L309d6c;
  #L309d66.  if v10 > 0 then goto L309d72;
  #L309d6a.  goto L309d74;
  #L309d6c.  if v10 < 0 then goto L309d72;
  #L309d70.  goto L309d74;
  #L309d72.  v0:= 0I;
  #L309d74.  v5.`kotlin.ranges.j.i` @type ^`boolean` := v0 @kind boolean;
  #L309d78.  if v0 == 0 then goto L309d7e;
  #L309d7c.  goto L309d80;
  #L309d7e.  v6:= v8 @kind wide;
  #L309d80.  v5.`kotlin.ranges.j.j` @type ^`long` := v6 @kind wide;
  #L309d84.  return @kind void;
}
procedure `long` `a`(`kotlin.ranges.j` v5 @kind this) @signature `Lkotlin/ranges/j;.a:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L309cfc.  v0:= v5.`kotlin.ranges.j.j` @type ^`long` @kind wide;
  #L309d00.  v2:= v5.`kotlin.ranges.j.h` @type ^`long` @kind wide;
  #L309d04.  v4:= lcmp(v0, v2);
  #L309d08.  if v4 != 0 then goto L309d28;
  #L309d0c.  v2:= v5.`kotlin.ranges.j.i` @type ^`boolean` @kind boolean;
  #L309d10.  if v2 == 0 then goto L309d1c;
  #L309d14.  v2:= 0I;
  #L309d16.  v5.`kotlin.ranges.j.i` @type ^`boolean` := v2 @kind boolean;
  #L309d1a.  goto L309d32;
  #L309d1c.  v0:= new `java.util.NoSuchElementException`;
  #L309d20.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L309d26.  throw v0;
  #L309d28.  v2:= v5.`kotlin.ranges.j.g` @type ^`long` @kind wide;
  #L309d2c.  v2:= v2 + v0 @kind long;
  #L309d2e.  v5.`kotlin.ranges.j.j` @type ^`long` := v2 @kind wide;
  #L309d32.  return v0 @kind wide;
}
procedure `boolean` `hasNext`(`kotlin.ranges.j` v1 @kind this) @signature `Lkotlin/ranges/j;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309ce4.  v0:= v1.`kotlin.ranges.j.i` @type ^`boolean` @kind boolean;
  #L309ce8.  return v0;
}
