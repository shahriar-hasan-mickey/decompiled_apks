record `kotlin.coroutines.g` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
procedure `java.lang.Object` `fold`(`java.lang.Object` v0 @kind object, `wd.p` v1 @kind object) @signature `Lkotlin/coroutines/g;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.g$b` `get`(`kotlin.coroutines.g$c` v0 @kind object) @signature `Lkotlin/coroutines/g;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.g` `minusKey`(`kotlin.coroutines.g$c` v0 @kind object) @signature `Lkotlin/coroutines/g;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.g` `plus`(`kotlin.coroutines.g` v0 @kind object) @signature `Lkotlin/coroutines/g;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
