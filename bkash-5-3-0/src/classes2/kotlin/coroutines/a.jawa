record `kotlin.coroutines.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `kotlin.coroutines.g$b` @kind interface {
  `kotlin.coroutines.g$c` `kotlin.coroutines.a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`kotlin.coroutines.a` v1 @kind this, `kotlin.coroutines.g$c` v2 @kind object) @signature `Lkotlin/coroutines/a;.<init>:(Lkotlin/coroutines/g$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3057e8.  v0:= "key" @kind object;
  #L3057ec.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L3057f2.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3057f8.  v1.`kotlin.coroutines.a.g` @type ^`kotlin.coroutines.g$c` := v2 @kind object;
  #L3057fc.  return @kind void;
}
procedure `java.lang.Object` `fold`(`kotlin.coroutines.a` v0 @kind this, `java.lang.Object` v1 @kind object, `wd.p` v2 @kind object) @signature `Lkotlin/coroutines/a;.fold:(Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;

  #L305760.  call temp:= `a`(v0, v1, v2) @signature `Lkotlin/coroutines/g$b$a;.a:(Lkotlin/coroutines/g$b;Ljava/lang/Object;Lwd/p;)Ljava/lang/Object;` @kind static;
  #L305766.  v1:= temp @kind object;
  #L305768.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$b` `get`(`kotlin.coroutines.a` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlin/coroutines/a;.get:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC {
    temp;

  #L3057b4.  call temp:= `b`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.b:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @kind static;
  #L3057ba.  v1:= temp @kind object;
  #L3057bc.  return v1 @kind object;
}
procedure `kotlin.coroutines.g$c` `getKey`(`kotlin.coroutines.a` v1 @kind this) @signature `Lkotlin/coroutines/a;.getKey:()Lkotlin/coroutines/g$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3057d0.  v0:= v1.`kotlin.coroutines.a.g` @type ^`kotlin.coroutines.g$c` @kind object;
  #L3057d4.  return v0 @kind object;
}
procedure `kotlin.coroutines.g` `minusKey`(`kotlin.coroutines.a` v0 @kind this, `kotlin.coroutines.g$c` v1 @kind object) @signature `Lkotlin/coroutines/a;.minusKey:(Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L30577c.  call temp:= `c`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.c:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @kind static;
  #L305782.  v1:= temp @kind object;
  #L305784.  return v1 @kind object;
}
procedure `kotlin.coroutines.g` `plus`(`kotlin.coroutines.a` v0 @kind this, `kotlin.coroutines.g` v1 @kind object) @signature `Lkotlin/coroutines/a;.plus:(Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC {
    temp;

  #L305798.  call temp:= `d`(v0, v1) @signature `Lkotlin/coroutines/g$b$a;.d:(Lkotlin/coroutines/g$b;Lkotlin/coroutines/g;)Lkotlin/coroutines/g;` @kind static;
  #L30579e.  v1:= temp @kind object;
  #L3057a0.  return v1 @kind object;
}
