record `kotlin.coroutines.e$a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `kotlin.coroutines.g$b` `a`(`kotlin.coroutines.e` v2 @kind object, `kotlin.coroutines.g$c` v3 @kind object) @signature `Lkotlin/coroutines/e$a;.a:(Lkotlin/coroutines/e;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g$b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L305e50.  v0:= "key" @kind object;
  #L305e54.  call `f`(v3, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L305e5a.  v0:= instanceof @variable v3 @type ^`kotlin.coroutines.b` @kind boolean;
  #L305e5e.  v1:= 0I;
  #L305e60.  if v0 == 0 then goto L305e90;
  #L305e64.  v3:= (`kotlin.coroutines.b`) v3 @kind object;
  #L305e68.  call temp:= `getKey`(v2) @signature `Lkotlin/coroutines/g$b;.getKey:()Lkotlin/coroutines/g$c;` @kind interface;
  #L305e6e.  v0:= temp @kind object;
  #L305e70.  call temp:= `a`(v3, v0) @signature `Lkotlin/coroutines/b;.a:(Lkotlin/coroutines/g$c;)Z` @kind virtual;
  #L305e76.  v0:= temp;
  #L305e78.  if v0 == 0 then goto L305e8e;
  #L305e7c.  call temp:= `b`(v3, v2) @signature `Lkotlin/coroutines/b;.b:(Lkotlin/coroutines/g$b;)Lkotlin/coroutines/g$b;` @kind virtual;
  #L305e82.  v2:= temp @kind object;
  #L305e84.  v3:= instanceof @variable v2 @type ^`kotlin.coroutines.g$b` @kind boolean;
  #L305e88.  if v3 == 0 then goto L305e8e;
  #L305e8c.  v1:= v2 @kind object;
  #L305e8e.  return v1 @kind object;
  #L305e90.  v0:= `@@kotlin.coroutines.e.d` @type ^`kotlin.coroutines.e$b` @kind object;
  #L305e94.  if v0 != v3 then goto L305ea4;
  #L305e98.  v3:= "null cannot be cast to non-null type E of kotlin.coroutines.ContinuationInterceptor.get" @kind object;
  #L305e9c.  call `d`(v2, v3) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L305ea2.  goto L305ea6;
  #L305ea4.  v2:= v1 @kind object;
  #L305ea6.  return v2 @kind object;
}
procedure `kotlin.coroutines.g` `b`(`kotlin.coroutines.e` v1 @kind object, `kotlin.coroutines.g$c` v2 @kind object) @signature `Lkotlin/coroutines/e$a;.b:(Lkotlin/coroutines/e;Lkotlin/coroutines/g$c;)Lkotlin/coroutines/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L305df4.  v0:= "key" @kind object;
  #L305df8.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L305dfe.  v0:= instanceof @variable v2 @type ^`kotlin.coroutines.b` @kind boolean;
  #L305e02.  if v0 == 0 then goto L305e30;
  #L305e06.  v2:= (`kotlin.coroutines.b`) v2 @kind object;
  #L305e0a.  call temp:= `getKey`(v1) @signature `Lkotlin/coroutines/g$b;.getKey:()Lkotlin/coroutines/g$c;` @kind interface;
  #L305e10.  v0:= temp @kind object;
  #L305e12.  call temp:= `a`(v2, v0) @signature `Lkotlin/coroutines/b;.a:(Lkotlin/coroutines/g$c;)Z` @kind virtual;
  #L305e18.  v0:= temp;
  #L305e1a.  if v0 == 0 then goto L305e2e;
  #L305e1e.  call temp:= `b`(v2, v1) @signature `Lkotlin/coroutines/b;.b:(Lkotlin/coroutines/g$b;)Lkotlin/coroutines/g$b;` @kind virtual;
  #L305e24.  v2:= temp @kind object;
  #L305e26.  if v2 == 0 then goto L305e2e;
  #L305e2a.  v1:= `@@kotlin.coroutines.h.INSTANCE` @type ^`kotlin.coroutines.h` @kind object;
  #L305e2e.  return v1 @kind object;
  #L305e30.  v0:= `@@kotlin.coroutines.e.d` @type ^`kotlin.coroutines.e$b` @kind object;
  #L305e34.  if v0 != v2 then goto L305e3c;
  #L305e38.  v1:= `@@kotlin.coroutines.h.INSTANCE` @type ^`kotlin.coroutines.h` @kind object;
  #L305e3c.  return v1 @kind object;
}
