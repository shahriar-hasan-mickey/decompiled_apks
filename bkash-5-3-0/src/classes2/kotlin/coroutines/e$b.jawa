record `kotlin.coroutines.e$b` @kind class @AccessFlag PUBLIC_FINAL extends `kotlin.coroutines.g$c` @kind interface {
}
global `kotlin.coroutines.e$b` `@@kotlin.coroutines.e$b.g` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/e$b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L305eb8.  v0:= new `kotlin.coroutines.e$b`;
  #L305ebc.  call `<init>`(v0) @signature `Lkotlin/coroutines/e$b;.<init>:()V` @kind direct;
  #L305ec2.  `@@kotlin.coroutines.e$b.g` @type ^`kotlin.coroutines.e$b` := v0 @kind object;
  #L305ec6.  return @kind void;
}
procedure `void` `<init>`(`kotlin.coroutines.e$b` v0 @kind this) @signature `Lkotlin/coroutines/e$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L305ed8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L305ede.  return @kind void;
}
