record `kotlin.coroutines.e` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE extends `kotlin.coroutines.g$b` @kind interface {
}
global `kotlin.coroutines.e$b` `@@kotlin.coroutines.e.d` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/coroutines/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L305ef0.  v0:= `@@kotlin.coroutines.e$b.g` @type ^`kotlin.coroutines.e$b` @kind object;
  #L305ef4.  `@@kotlin.coroutines.e.d` @type ^`kotlin.coroutines.e$b` := v0 @kind object;
  #L305ef8.  return @kind void;
}
procedure `void` `i`(`kotlin.coroutines.d` v0 @kind object) @signature `Lkotlin/coroutines/e;.i:(Lkotlin/coroutines/d;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `kotlin.coroutines.d` `k`(`kotlin.coroutines.d` v0 @kind object) @signature `Lkotlin/coroutines/e;.k:(Lkotlin/coroutines/d;)Lkotlin/coroutines/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
