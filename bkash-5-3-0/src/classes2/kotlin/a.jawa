record `kotlin.a` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `kotlin.a` `@@kotlin.a.ERROR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.a` `@@kotlin.a.HIDDEN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.a` `@@kotlin.a.WARNING` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `kotlin.a`[] `@@kotlin.a.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lkotlin/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L305114.  v0:= new `kotlin.a`;
  #L305118.  v1:= "WARNING" @kind object;
  #L30511c.  v2:= 0I;
  #L30511e.  call `<init>`(v0, v1, v2) @signature `Lkotlin/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L305124.  `@@kotlin.a.WARNING` @type ^`kotlin.a` := v0 @kind object;
  #L305128.  v0:= new `kotlin.a`;
  #L30512c.  v1:= "ERROR" @kind object;
  #L305130.  v2:= 1I;
  #L305132.  call `<init>`(v0, v1, v2) @signature `Lkotlin/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L305138.  `@@kotlin.a.ERROR` @type ^`kotlin.a` := v0 @kind object;
  #L30513c.  v0:= new `kotlin.a`;
  #L305140.  v1:= "HIDDEN" @kind object;
  #L305144.  v2:= 2I;
  #L305146.  call `<init>`(v0, v1, v2) @signature `Lkotlin/a;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L30514c.  `@@kotlin.a.HIDDEN` @type ^`kotlin.a` := v0 @kind object;
  #L305150.  call temp:= `a`() @signature `Lkotlin/a;.a:()[Lkotlin/a;` @kind static;
  #L305156.  v0:= temp @kind object;
  #L305158.  `@@kotlin.a.g` @type ^`kotlin.a`[] := v0 @kind object;
  #L30515c.  return @kind void;
}
procedure `void` `<init>`(`kotlin.a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/a;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L305170.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L305176.  return @kind void;
}
procedure `kotlin.a`[] `a`() @signature `Lkotlin/a;.a:()[Lkotlin/a;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;

  #L3050b8.  v0:= 3I;
  #L3050ba.  v0:= new `kotlin.a`[v0];
  #L3050be.  v1:= `@@kotlin.a.WARNING` @type ^`kotlin.a` @kind object;
  #L3050c2.  v2:= 0I;
  #L3050c4.  v0[v2]:= v1 @kind object;
  #L3050c8.  v1:= `@@kotlin.a.ERROR` @type ^`kotlin.a` @kind object;
  #L3050cc.  v2:= 1I;
  #L3050ce.  v0[v2]:= v1 @kind object;
  #L3050d2.  v1:= `@@kotlin.a.HIDDEN` @type ^`kotlin.a` @kind object;
  #L3050d6.  v2:= 2I;
  #L3050d8.  v0[v2]:= v1 @kind object;
  #L3050dc.  return v0 @kind object;
}
procedure `kotlin.a` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lkotlin/a;.valueOf:(Ljava/lang/String;)Lkotlin/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L305094.  v0:= constclass @type ^`kotlin.a` @kind object;
  #L305098.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L30509e.  v1:= temp @kind object;
  #L3050a0.  v1:= (`kotlin.a`) v1 @kind object;
  #L3050a4.  return v1 @kind object;
}
procedure `kotlin.a`[] `values`() @signature `Lkotlin/a;.values:()[Lkotlin/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3050f0.  v0:= `@@kotlin.a.g` @type ^`kotlin.a`[] @kind object;
  #L3050f4.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3050fa.  v0:= temp @kind object;
  #L3050fc.  v0:= (`kotlin.a`[]) v0 @kind object;
  #L305100.  return v0 @kind object;
}
