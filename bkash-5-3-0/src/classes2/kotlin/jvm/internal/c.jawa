record `kotlin.jvm.internal.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `zd.b` @kind interface, `java.io.Serializable` @kind interface {
  `boolean` `kotlin.jvm.internal.c.isTopLevel` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `kotlin.jvm.internal.c.name` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `kotlin.jvm.internal.c.owner` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `kotlin.jvm.internal.c.receiver` @AccessFlag PROTECTED_FINAL;
  `zd.b` `kotlin.jvm.internal.c.reflected` @AccessFlag PRIVATE_TRANSIENT;
  `java.lang.String` `kotlin.jvm.internal.c.signature` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Object` `@@kotlin.jvm.internal.c.NO_RECEIVER` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lkotlin/jvm/internal/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3073b0.  call temp:= `access$000`() @signature `Lkotlin/jvm/internal/c$a;.access$000:()Lkotlin/jvm/internal/c$a;` @kind static;
  #L3073b6.  v0:= temp @kind object;
  #L3073b8.  `@@kotlin.jvm.internal.c.NO_RECEIVER` @type ^`java.lang.Object` := v0 @kind object;
  #L3073bc.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3073d0.  v0:= `@@kotlin.jvm.internal.c.NO_RECEIVER` @type ^`java.lang.Object` @kind object;
  #L3073d4.  call `<init>`(v1, v0) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3073da.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.c` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3073ec.  v2:= 0I;
  #L3073ee.  v3:= 0I;
  #L3073f0.  v4:= 0I;
  #L3073f2.  v5:= 0I;
  #L3073f4.  v0:= v6 @kind object;
  #L3073f6.  v1:= v7 @kind object;
  #L3073f8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L3073fe.  return @kind void;
}
procedure `void` `<init>`(`kotlin.jvm.internal.c` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object, `boolean` v5 ) @signature `Lkotlin/jvm/internal/c;.<init>:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L307410.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307416.  v0.`kotlin.jvm.internal.c.receiver` @type ^`java.lang.Object` := v1 @kind object;
  #L30741a.  v0.`kotlin.jvm.internal.c.owner` @type ^`java.lang.Class` := v2 @kind object;
  #L30741e.  v0.`kotlin.jvm.internal.c.name` @type ^`java.lang.String` := v3 @kind object;
  #L307422.  v0.`kotlin.jvm.internal.c.signature` @type ^`java.lang.String` := v4 @kind object;
  #L307426.  v0.`kotlin.jvm.internal.c.isTopLevel` @type ^`boolean` := v5 @kind boolean;
  #L30742a.  return @kind void;
}
procedure `java.lang.Object` `call`(`kotlin.jvm.internal.c` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/jvm/internal/c;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3072b4.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L3072ba.  v0:= temp @kind object;
  #L3072bc.  call temp:= `call`(v0, v2) @signature `Lzd/b;.call:([Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3072c2.  v2:= temp @kind object;
  #L3072c4.  return v2 @kind object;
}
procedure `java.lang.Object` `callBy`(`kotlin.jvm.internal.c` v1 @kind this, `java.util.Map` v2 @kind object) @signature `Lkotlin/jvm/internal/c;.callBy:(Ljava/util/Map;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3072d8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L3072de.  v0:= temp @kind object;
  #L3072e0.  call temp:= `callBy`(v0, v2) @signature `Lzd/b;.callBy:(Ljava/util/Map;)Ljava/lang/Object;` @kind interface;
  #L3072e6.  v2:= temp @kind object;
  #L3072e8.  return v2 @kind object;
}
procedure `zd.b` `compute`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.compute:()Lzd/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30743c.  v0:= v1.`kotlin.jvm.internal.c.reflected` @type ^`zd.b` @kind object;
  #L307440.  if v0 != 0 then goto L307450;
  #L307444.  call temp:= `computeReflected`(v1) @signature `Lkotlin/jvm/internal/c;.computeReflected:()Lzd/b;` @kind virtual;
  #L30744a.  v0:= temp @kind object;
  #L30744c.  v1.`kotlin.jvm.internal.c.reflected` @type ^`zd.b` := v0 @kind object;
  #L307450.  return v0 @kind object;
}
procedure `zd.b` `computeReflected`() @signature `Lkotlin/jvm/internal/c;.computeReflected:()Lzd/b;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `java.util.List` `getAnnotations`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getAnnotations:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307344.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L30734a.  v0:= temp @kind object;
  #L30734c.  call temp:= `getAnnotations`(v0) @signature `Lzd/a;.getAnnotations:()Ljava/util/List;` @kind interface;
  #L307352.  v0:= temp @kind object;
  #L307354.  return v0 @kind object;
}
procedure `java.lang.Object` `getBoundReceiver`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getBoundReceiver:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3072fc.  v0:= v1.`kotlin.jvm.internal.c.receiver` @type ^`java.lang.Object` @kind object;
  #L307300.  return v0 @kind object;
}
procedure `java.lang.String` `getName`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307314.  v0:= v1.`kotlin.jvm.internal.c.name` @type ^`java.lang.String` @kind object;
  #L307318.  return v0 @kind object;
}
procedure `zd.d` `getOwner`(`kotlin.jvm.internal.c` v2 @kind this) @signature `Lkotlin/jvm/internal/c;.getOwner:()Lzd/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307490.  v0:= v2.`kotlin.jvm.internal.c.owner` @type ^`java.lang.Class` @kind object;
  #L307494.  if v0 != 0 then goto L30749c;
  #L307498.  v0:= 0I;
  #L30749a.  goto L3074b6;
  #L30749c.  v1:= v2.`kotlin.jvm.internal.c.isTopLevel` @type ^`boolean` @kind boolean;
  #L3074a0.  if v1 == 0 then goto L3074ae;
  #L3074a4.  call temp:= `c`(v0) @signature `Lkotlin/jvm/internal/s;.c:(Ljava/lang/Class;)Lzd/d;` @kind static;
  #L3074aa.  v0:= temp @kind object;
  #L3074ac.  goto L3074b6;
  #L3074ae.  call temp:= `b`(v0) @signature `Lkotlin/jvm/internal/s;.b:(Ljava/lang/Class;)Lzd/c;` @kind static;
  #L3074b4.  v0:= temp @kind object;
  #L3074b6.  return v0 @kind object;
}
procedure `java.util.List` `getParameters`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getParameters:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307368.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L30736e.  v0:= temp @kind object;
  #L307370.  call temp:= `getParameters`(v0) @signature `Lzd/b;.getParameters:()Ljava/util/List;` @kind interface;
  #L307376.  v0:= temp @kind object;
  #L307378.  return v0 @kind object;
}
procedure `zd.b` `getReflected`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L307464.  call temp:= `compute`(v1) @signature `Lkotlin/jvm/internal/c;.compute:()Lzd/b;` @kind virtual;
  #L30746a.  v0:= temp @kind object;
  #L30746c.  if v0 == v1 then goto L307472;
  #L307470.  return v0 @kind object;
  #L307472.  v0:= new `vd.b`;
  #L307476.  call `<init>`(v0) @signature `Lvd/b;.<init>:()V` @kind direct;
  #L30747c.  throw v0;
}
procedure `zd.i` `getReturnType`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getReturnType:()Lzd/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3074c8.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L3074ce.  v0:= temp @kind object;
  #L3074d0.  call temp:= `getReturnType`(v0) @signature `Lzd/b;.getReturnType:()Lzd/i;` @kind interface;
  #L3074d6.  v0:= temp @kind object;
  #L3074d8.  return v0 @kind object;
}
procedure `java.lang.String` `getSignature`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getSignature:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30732c.  v0:= v1.`kotlin.jvm.internal.c.signature` @type ^`java.lang.String` @kind object;
  #L307330.  return v0 @kind object;
}
procedure `java.util.List` `getTypeParameters`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getTypeParameters:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30738c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L307392.  v0:= temp @kind object;
  #L307394.  call temp:= `getTypeParameters`(v0) @signature `Lzd/b;.getTypeParameters:()Ljava/util/List;` @kind interface;
  #L30739a.  v0:= temp @kind object;
  #L30739c.  return v0 @kind object;
}
procedure `zd.j` `getVisibility`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.getVisibility:()Lzd/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3074ec.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L3074f2.  v0:= temp @kind object;
  #L3074f4.  call temp:= `getVisibility`(v0) @signature `Lzd/b;.getVisibility:()Lzd/j;` @kind interface;
  #L3074fa.  v0:= temp @kind object;
  #L3074fc.  return v0 @kind object;
}
procedure `boolean` `isAbstract`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.isAbstract:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307224.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L30722a.  v0:= temp @kind object;
  #L30722c.  call temp:= `isAbstract`(v0) @signature `Lzd/b;.isAbstract:()Z` @kind interface;
  #L307232.  v0:= temp;
  #L307234.  return v0;
}
procedure `boolean` `isFinal`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.isFinal:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307248.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L30724e.  v0:= temp @kind object;
  #L307250.  call temp:= `isFinal`(v0) @signature `Lzd/b;.isFinal:()Z` @kind interface;
  #L307256.  v0:= temp;
  #L307258.  return v0;
}
procedure `boolean` `isOpen`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.isOpen:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30726c.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L307272.  v0:= temp @kind object;
  #L307274.  call temp:= `isOpen`(v0) @signature `Lzd/b;.isOpen:()Z` @kind interface;
  #L30727a.  v0:= temp;
  #L30727c.  return v0;
}
procedure `boolean` `isSuspend`(`kotlin.jvm.internal.c` v1 @kind this) @signature `Lkotlin/jvm/internal/c;.isSuspend:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307290.  call temp:= `getReflected`(v1) @signature `Lkotlin/jvm/internal/c;.getReflected:()Lzd/b;` @kind virtual;
  #L307296.  v0:= temp @kind object;
  #L307298.  call temp:= `isSuspend`(v0) @signature `Lzd/b;.isSuspend:()Z` @kind interface;
  #L30729e.  v0:= temp;
  #L3072a0.  return v0;
}
