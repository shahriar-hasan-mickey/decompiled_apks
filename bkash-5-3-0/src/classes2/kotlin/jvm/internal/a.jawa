record `kotlin.jvm.internal.a` @kind class @AccessFlag FINAL extends `java.util.Iterator` @kind interface {
  `java.lang.Object`[] `kotlin.jvm.internal.a.g` @AccessFlag PRIVATE_FINAL;
  `int` `kotlin.jvm.internal.a.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`kotlin.jvm.internal.a` v1 @kind this, `java.lang.Object`[] v2 @kind object) @signature `Lkotlin/jvm/internal/a;.<init>:([Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L307174.  v0:= "array" @kind object;
  #L307178.  call `f`(v2, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30717e.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L307184.  v1.`kotlin.jvm.internal.a.g` @type ^`java.lang.Object`[] := v2 @kind object;
  #L307188.  return @kind void;
}
procedure `boolean` `hasNext`(`kotlin.jvm.internal.a` v2 @kind this) @signature `Lkotlin/jvm/internal/a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3070f4.  v0:= v2.`kotlin.jvm.internal.a.h` @type ^`int`;
  #L3070f8.  v1:= v2.`kotlin.jvm.internal.a.g` @type ^`java.lang.Object`[] @kind object;
  #L3070fc.  v1:= length @variable v1;
  #L3070fe.  if v0 >= v1 then goto L307106;
  #L307102.  v0:= 1I;
  #L307104.  goto L307108;
  #L307106.  v0:= 0I;
  #L307108.  return v0;
}
procedure `java.lang.Object` `next`(`kotlin.jvm.internal.a` v3 @kind this) @signature `Lkotlin/jvm/internal/a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30711c.  v0:= v3.`kotlin.jvm.internal.a.g` @type ^`java.lang.Object`[] @kind object;
  #L307120.  v1:= v3.`kotlin.jvm.internal.a.h` @type ^`int`;
  #L307124.  v2:= v1 + 1;
  #L307128.  v3.`kotlin.jvm.internal.a.h` @type ^`int` := v2;
  #L30712c.  v0:= v0[v1] @kind object;
  #L307130.  return v0 @kind object;
  #L307132.  v0:= Exception @type ^`java.lang.ArrayIndexOutOfBoundsException` @kind object;
  #L307134.  v1:= v3.`kotlin.jvm.internal.a.h` @type ^`int`;
  #L307138.  v1:= v1 + -1;
  #L30713c.  v3.`kotlin.jvm.internal.a.h` @type ^`int` := v1;
  #L307140.  v1:= new `java.util.NoSuchElementException`;
  #L307144.  call temp:= `getMessage`(v0) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L30714a.  v0:= temp @kind object;
  #L30714c.  call `<init>`(v1, v0) @signature `Ljava/util/NoSuchElementException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L307152.  throw v1;
  catch `java.lang.ArrayIndexOutOfBoundsException` @[L30711c..L307130] goto L307132;
}
procedure `void` `remove`(`kotlin.jvm.internal.a` v2 @kind this) @signature `Lkotlin/jvm/internal/a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30719c.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3071a0.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L3071a4.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3071aa.  throw v0;
}
