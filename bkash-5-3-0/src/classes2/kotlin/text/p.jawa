record `kotlin.text.p` @kind class @AccessFlag  extends `kotlin.text.o` @kind class {
}
procedure `java.lang.String` `Z`(`java.lang.String` v1 @kind object, `int` v2 ) @signature `Lkotlin/text/p;.Z:(Ljava/lang/String;I)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC_FINAL {
    temp;
    v0;

  #L30bbdc.  v0:= "<this>" @kind object;
  #L30bbe0.  call `f`(v1, v0) @signature `Lkotlin/jvm/internal/k;.f:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30bbe6.  if v2 < 0 then goto L30bbee;
  #L30bbea.  v0:= 1I;
  #L30bbec.  goto L30bbf0;
  #L30bbee.  v0:= 0I;
  #L30bbf0.  if v0 == 0 then goto L30bc18;
  #L30bbf4.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30bbfa.  v0:= temp;
  #L30bbfc.  call temp:= `c`(v2, v0) @signature `Lkotlin/ranges/l;.c:(II)I` @kind static;
  #L30bc02.  v2:= temp;
  #L30bc04.  call temp:= `substring`(v1, v2) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L30bc0a.  v1:= temp @kind object;
  #L30bc0c.  v2:= "this as java.lang.String).substring(startIndex)" @kind object;
  #L30bc10.  call `e`(v1, v2) @signature `Lkotlin/jvm/internal/k;.e:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30bc16.  return v1 @kind object;
  #L30bc18.  v1:= new `java.lang.StringBuilder`;
  #L30bc1c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30bc22.  v0:= "Requested character count " @kind object;
  #L30bc26.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30bc2c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30bc32.  v2:= " is less than zero." @kind object;
  #L30bc36.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30bc3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30bc42.  v1:= temp @kind object;
  #L30bc44.  v2:= new `java.lang.IllegalArgumentException`;
  #L30bc48.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L30bc4e.  v1:= temp @kind object;
  #L30bc50.  call `<init>`(v2, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30bc56.  throw v2;
}
