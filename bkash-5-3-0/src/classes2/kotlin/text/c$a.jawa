record `kotlin.text.c$a` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.Iterator` @kind interface {
  `int` `kotlin.text.c$a.g` @AccessFlag PRIVATE;
  `int` `kotlin.text.c$a.h` @AccessFlag PRIVATE;
  `int` `kotlin.text.c$a.i` @AccessFlag PRIVATE;
  `kotlin.ranges.h` `kotlin.text.c$a.j` @AccessFlag PRIVATE;
  `int` `kotlin.text.c$a.k` @AccessFlag PRIVATE;
  `kotlin.text.c` `kotlin.text.c$a.l` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`kotlin.text.c$a` v2 @kind this, `kotlin.text.c` v3 @kind object) @signature `Lkotlin/text/c$a;.<init>:(Lkotlin/text/c;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30a408.  v2.`kotlin.text.c$a.l` @type ^`kotlin.text.c` := v3 @kind object;
  #L30a40c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30a412.  v0:= -1I;
  #L30a414.  v2.`kotlin.text.c$a.g` @type ^`int` := v0;
  #L30a418.  call temp:= `d`(v3) @signature `Lkotlin/text/c;.d:(Lkotlin/text/c;)I` @kind static;
  #L30a41e.  v0:= temp;
  #L30a420.  call temp:= `b`(v3) @signature `Lkotlin/text/c;.b:(Lkotlin/text/c;)Ljava/lang/CharSequence;` @kind static;
  #L30a426.  v3:= temp @kind object;
  #L30a428.  call temp:= `length`(v3) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L30a42e.  v3:= temp;
  #L30a430.  v1:= 0I;
  #L30a432.  call temp:= `e`(v0, v1, v3) @signature `Lkotlin/ranges/l;.e:(III)I` @kind static;
  #L30a438.  v3:= temp;
  #L30a43a.  v2.`kotlin.text.c$a.h` @type ^`int` := v3;
  #L30a43e.  v2.`kotlin.text.c$a.i` @type ^`int` := v3;
  #L30a442.  return @kind void;
}
procedure `void` `a`(`kotlin.text.c$a` v6 @kind this) @signature `Lkotlin/text/c$a;.a:()V` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30a454.  v0:= v6.`kotlin.text.c$a.i` @type ^`int`;
  #L30a458.  v1:= 0I;
  #L30a45a.  if v0 >= 0 then goto L30a46c;
  #L30a45e.  v6.`kotlin.text.c$a.g` @type ^`int` := v1;
  #L30a462.  v0:= 0I;
  #L30a464.  v6.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` := v0 @kind object;
  #L30a468.  goto L30a590;
  #L30a46c.  v0:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a470.  call temp:= `c`(v0) @signature `Lkotlin/text/c;.c:(Lkotlin/text/c;)I` @kind static;
  #L30a476.  v0:= temp;
  #L30a478.  v2:= -1I;
  #L30a47a.  v3:= 1I;
  #L30a47c.  if v0 <= 0 then goto L30a49a;
  #L30a480.  v0:= v6.`kotlin.text.c$a.k` @type ^`int`;
  #L30a484.  v0:= v0 + v3 @kind int;
  #L30a486.  v6.`kotlin.text.c$a.k` @type ^`int` := v0;
  #L30a48a.  v4:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a48e.  call temp:= `c`(v4) @signature `Lkotlin/text/c;.c:(Lkotlin/text/c;)I` @kind static;
  #L30a494.  v4:= temp;
  #L30a496.  if v0 >= v4 then goto L30a4b6;
  #L30a49a.  v0:= v6.`kotlin.text.c$a.i` @type ^`int`;
  #L30a49e.  v4:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a4a2.  call temp:= `b`(v4) @signature `Lkotlin/text/c;.b:(Lkotlin/text/c;)Ljava/lang/CharSequence;` @kind static;
  #L30a4a8.  v4:= temp @kind object;
  #L30a4aa.  call temp:= `length`(v4) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L30a4b0.  v4:= temp;
  #L30a4b2.  if v0 <= v4 then goto L30a4e2;
  #L30a4b6.  v0:= new `kotlin.ranges.h`;
  #L30a4ba.  v1:= v6.`kotlin.text.c$a.h` @type ^`int`;
  #L30a4be.  v4:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a4c2.  call temp:= `b`(v4) @signature `Lkotlin/text/c;.b:(Lkotlin/text/c;)Ljava/lang/CharSequence;` @kind static;
  #L30a4c8.  v4:= temp @kind object;
  #L30a4ca.  call temp:= `s`(v4) @signature `Lkotlin/text/n;.s:(Ljava/lang/CharSequence;)I` @kind static;
  #L30a4d0.  v4:= temp;
  #L30a4d2.  call `<init>`(v0, v1, v4) @signature `Lkotlin/ranges/h;.<init>:(II)V` @kind direct;
  #L30a4d8.  v6.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` := v0 @kind object;
  #L30a4dc.  v6.`kotlin.text.c$a.i` @type ^`int` := v2;
  #L30a4e0.  goto L30a58c;
  #L30a4e2.  v0:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a4e6.  call temp:= `a`(v0) @signature `Lkotlin/text/c;.a:(Lkotlin/text/c;)Lwd/p;` @kind static;
  #L30a4ec.  v0:= temp @kind object;
  #L30a4ee.  v4:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a4f2.  call temp:= `b`(v4) @signature `Lkotlin/text/c;.b:(Lkotlin/text/c;)Ljava/lang/CharSequence;` @kind static;
  #L30a4f8.  v4:= temp @kind object;
  #L30a4fa.  v5:= v6.`kotlin.text.c$a.i` @type ^`int`;
  #L30a4fe.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30a504.  v5:= temp @kind object;
  #L30a506.  call temp:= `invoke`(v0, v4, v5) @signature `Lwd/p;.invoke:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30a50c.  v0:= temp @kind object;
  #L30a50e.  v0:= (`od.m`) v0 @kind object;
  #L30a512.  if v0 != 0 then goto L30a542;
  #L30a516.  v0:= new `kotlin.ranges.h`;
  #L30a51a.  v1:= v6.`kotlin.text.c$a.h` @type ^`int`;
  #L30a51e.  v4:= v6.`kotlin.text.c$a.l` @type ^`kotlin.text.c` @kind object;
  #L30a522.  call temp:= `b`(v4) @signature `Lkotlin/text/c;.b:(Lkotlin/text/c;)Ljava/lang/CharSequence;` @kind static;
  #L30a528.  v4:= temp @kind object;
  #L30a52a.  call temp:= `s`(v4) @signature `Lkotlin/text/n;.s:(Ljava/lang/CharSequence;)I` @kind static;
  #L30a530.  v4:= temp;
  #L30a532.  call `<init>`(v0, v1, v4) @signature `Lkotlin/ranges/h;.<init>:(II)V` @kind direct;
  #L30a538.  v6.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` := v0 @kind object;
  #L30a53c.  v6.`kotlin.text.c$a.i` @type ^`int` := v2;
  #L30a540.  goto L30a58c;
  #L30a542.  call temp:= `component1`(v0) @signature `Lod/m;.component1:()Ljava/lang/Object;` @kind virtual;
  #L30a548.  v2:= temp @kind object;
  #L30a54a.  v2:= (`java.lang.Number`) v2 @kind object;
  #L30a54e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L30a554.  v2:= temp;
  #L30a556.  call temp:= `component2`(v0) @signature `Lod/m;.component2:()Ljava/lang/Object;` @kind virtual;
  #L30a55c.  v0:= temp @kind object;
  #L30a55e.  v0:= (`java.lang.Number`) v0 @kind object;
  #L30a562.  call temp:= `intValue`(v0) @signature `Ljava/lang/Number;.intValue:()I` @kind virtual;
  #L30a568.  v0:= temp;
  #L30a56a.  v4:= v6.`kotlin.text.c$a.h` @type ^`int`;
  #L30a56e.  call temp:= `g`(v4, v2) @signature `Lkotlin/ranges/l;.g:(II)Lkotlin/ranges/h;` @kind static;
  #L30a574.  v4:= temp @kind object;
  #L30a576.  v6.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` := v4 @kind object;
  #L30a57a.  v2:= v2 + v0 @kind int;
  #L30a57c.  v6.`kotlin.text.c$a.h` @type ^`int` := v2;
  #L30a580.  if v0 != 0 then goto L30a586;
  #L30a584.  v1:= 1I;
  #L30a586.  v2:= v2 + v1 @kind int;
  #L30a588.  v6.`kotlin.text.c$a.i` @type ^`int` := v2;
  #L30a58c.  v6.`kotlin.text.c$a.g` @type ^`int` := v3;
  #L30a590.  return @kind void;
}
procedure `kotlin.ranges.h` `b`(`kotlin.text.c$a` v3 @kind this) @signature `Lkotlin/text/c$a;.b:()Lkotlin/ranges/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30a3b8.  v0:= v3.`kotlin.text.c$a.g` @type ^`int`;
  #L30a3bc.  v1:= -1I;
  #L30a3be.  if v0 != v1 then goto L30a3c8;
  #L30a3c2.  call `a`(v3) @signature `Lkotlin/text/c$a;.a:()V` @kind direct;
  #L30a3c8.  v0:= v3.`kotlin.text.c$a.g` @type ^`int`;
  #L30a3cc.  if v0 == 0 then goto L30a3ea;
  #L30a3d0.  v0:= v3.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` @kind object;
  #L30a3d4.  v2:= "null cannot be cast to non-null type kotlin.ranges.IntRange" @kind object;
  #L30a3d8.  call `d`(v0, v2) @signature `Lkotlin/jvm/internal/k;.d:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L30a3de.  v2:= 0I;
  #L30a3e0.  v3.`kotlin.text.c$a.j` @type ^`kotlin.ranges.h` := v2 @kind object;
  #L30a3e4.  v3.`kotlin.text.c$a.g` @type ^`int` := v1;
  #L30a3e8.  return v0 @kind object;
  #L30a3ea.  v0:= new `java.util.NoSuchElementException`;
  #L30a3ee.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L30a3f4.  throw v0;
}
procedure `boolean` `hasNext`(`kotlin.text.c$a` v2 @kind this) @signature `Lkotlin/text/c$a;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30a36c.  v0:= v2.`kotlin.text.c$a.g` @type ^`int`;
  #L30a370.  v1:= -1I;
  #L30a372.  if v0 != v1 then goto L30a37c;
  #L30a376.  call `a`(v2) @signature `Lkotlin/text/c$a;.a:()V` @kind direct;
  #L30a37c.  v0:= v2.`kotlin.text.c$a.g` @type ^`int`;
  #L30a380.  v1:= 1I;
  #L30a382.  if v0 != v1 then goto L30a388;
  #L30a386.  goto L30a38a;
  #L30a388.  v1:= 0I;
  #L30a38a.  return v1;
}
procedure `java.lang.Object` `next`(`kotlin.text.c$a` v1 @kind this) @signature `Lkotlin/text/c$a;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L30a39c.  call temp:= `b`(v1) @signature `Lkotlin/text/c$a;.b:()Lkotlin/ranges/h;` @kind virtual;
  #L30a3a2.  v0:= temp @kind object;
  #L30a3a4.  return v0 @kind object;
}
procedure `void` `remove`(`kotlin.text.c$a` v2 @kind this) @signature `Lkotlin/text/c$a;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30a5a4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L30a5a8.  v1:= "Operation is not supported for read-only collection" @kind object;
  #L30a5ac.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30a5b2.  throw v0;
}
