record `x8.e` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `x8.e` `@@x8.e.IGNORE_CACHE_EXPIRATION` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `x8.e` `@@x8.e.SKIP_CACHE_LOOKUP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `x8.e` `@@x8.e.USE_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `x8.e`[] `@@x8.e.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lx8/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L38532c.  v0:= new `x8.e`;
  #L385330.  v1:= "USE_CACHE" @kind object;
  #L385334.  v2:= 0I;
  #L385336.  call `<init>`(v0, v1, v2) @signature `Lx8/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L38533c.  `@@x8.e.USE_CACHE` @type ^`x8.e` := v0 @kind object;
  #L385340.  v1:= new `x8.e`;
  #L385344.  v3:= "SKIP_CACHE_LOOKUP" @kind object;
  #L385348.  v4:= 1I;
  #L38534a.  call `<init>`(v1, v3, v4) @signature `Lx8/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L385350.  `@@x8.e.SKIP_CACHE_LOOKUP` @type ^`x8.e` := v1 @kind object;
  #L385354.  v3:= new `x8.e`;
  #L385358.  v5:= "IGNORE_CACHE_EXPIRATION" @kind object;
  #L38535c.  v6:= 2I;
  #L38535e.  call `<init>`(v3, v5, v6) @signature `Lx8/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L385364.  `@@x8.e.IGNORE_CACHE_EXPIRATION` @type ^`x8.e` := v3 @kind object;
  #L385368.  v5:= 3I;
  #L38536a.  v5:= new `x8.e`[v5];
  #L38536e.  v5[v2]:= v0 @kind object;
  #L385372.  v5[v4]:= v1 @kind object;
  #L385376.  v5[v6]:= v3 @kind object;
  #L38537a.  `@@x8.e.g` @type ^`x8.e`[] := v5 @kind object;
  #L38537e.  return @kind void;
}
procedure `void` `<init>`(`x8.e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lx8/e;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L385390.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L385396.  return @kind void;
}
procedure `x8.e` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lx8/e;.valueOf:(Ljava/lang/String;)Lx8/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3853a8.  v0:= constclass @type ^`x8.e` @kind object;
  #L3853ac.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3853b2.  v1:= temp @kind object;
  #L3853b4.  v1:= (`x8.e`) v1 @kind object;
  #L3853b8.  return v1 @kind object;
}
procedure `x8.e`[] `values`() @signature `Lx8/e;.values:()[Lx8/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3853cc.  v0:= `@@x8.e.g` @type ^`x8.e`[] @kind object;
  #L3853d0.  call temp:= `clone`(v0) @signature `[Lx8/e;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3853d6.  v0:= temp @kind object;
  #L3853d8.  v0:= (`x8.e`[]) v0 @kind object;
  #L3853dc.  return v0 @kind object;
}
