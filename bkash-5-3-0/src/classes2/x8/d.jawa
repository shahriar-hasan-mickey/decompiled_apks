record `x8.d` @kind class @AccessFlag PUBLIC {
  `x8.d$b` `x8.d.a` @AccessFlag PUBLIC_FINAL;
  `x8.d$a` `x8.d.b` @AccessFlag PUBLIC_FINAL;
  `long` `x8.d.c` @AccessFlag PUBLIC_FINAL;
  `double` `x8.d.d` @AccessFlag PUBLIC_FINAL;
  `double` `x8.d.e` @AccessFlag PUBLIC_FINAL;
  `int` `x8.d.f` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`x8.d` v0 @kind this, `long` v1 , `x8.d$b` v3 @kind object, `x8.d$a` v4 @kind object, `int` v5 , `int` v6 , `double` v7 , `double` v9 , `int` v11 ) @signature `Lx8/d;.<init>:(JLx8/d$b;Lx8/d$a;IIDDI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L385cb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L385cba.  v0.`x8.d.c` @type ^`long` := v1 @kind wide;
  #L385cbe.  v0.`x8.d.a` @type ^`x8.d$b` := v3 @kind object;
  #L385cc2.  v0.`x8.d.b` @type ^`x8.d$a` := v4 @kind object;
  #L385cc6.  v0.`x8.d.d` @type ^`double` := v7 @kind wide;
  #L385cca.  v0.`x8.d.e` @type ^`double` := v9 @kind wide;
  #L385cce.  v0.`x8.d.f` @type ^`int` := v11;
  #L385cd2.  return @kind void;
}
procedure `boolean` `a`(`x8.d` v3 @kind this, `long` v4 ) @signature `Lx8/d;.a:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L385c90.  v0:= v3.`x8.d.c` @type ^`long` @kind wide;
  #L385c94.  v2:= lcmp(v0, v4);
  #L385c98.  if v2 >= 0 then goto L385ca0;
  #L385c9c.  v4:= 1I;
  #L385c9e.  goto L385ca2;
  #L385ca0.  v4:= 0I;
  #L385ca2.  return v4;
}
