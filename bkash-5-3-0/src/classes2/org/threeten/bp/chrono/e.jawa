record `org.threeten.bp.chrono.e` @kind class @AccessFlag PUBLIC_ABSTRACT extends `org.threeten.bp.temporal.h` @kind interface {
}
procedure `void` `<init>`(`org.threeten.bp.chrono.e` v0 @kind this) @signature `Lorg/threeten/bp/chrono/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L34fd64.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34fd6a.  return @kind void;
}
procedure `org.threeten.bp.chrono.e` `between`(`org.threeten.bp.chrono.b` v1 @kind object, `org.threeten.bp.chrono.b` v2 @kind object) @signature `Lorg/threeten/bp/chrono/e;.between:(Lorg/threeten/bp/chrono/b;Lorg/threeten/bp/chrono/b;)Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L34fd18.  v0:= "startDateInclusive" @kind object;
  #L34fd1c.  call temp:= `i`(v1, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L34fd22.  v0:= "endDateExclusive" @kind object;
  #L34fd26.  call temp:= `i`(v2, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L34fd2c.  call temp:= `until`(v1, v2) @signature `Lorg/threeten/bp/chrono/b;.until:(Lorg/threeten/bp/chrono/b;)Lorg/threeten/bp/chrono/e;` @kind virtual;
  #L34fd32.  v1:= temp @kind object;
  #L34fd34.  return v1 @kind object;
}
procedure `org.threeten.bp.temporal.d` `addTo`(`org.threeten.bp.temporal.d` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.addTo:(Lorg/threeten/bp/temporal/d;)Lorg/threeten/bp/temporal/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `equals`(`java.lang.Object` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `long` `get`(`org.threeten.bp.temporal.l` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.get:(Lorg/threeten/bp/temporal/l;)J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.threeten.bp.chrono.i` `getChronology`() @signature `Lorg/threeten/bp/chrono/e;.getChronology:()Lorg/threeten/bp/chrono/i;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getUnits`() @signature `Lorg/threeten/bp/chrono/e;.getUnits:()Ljava/util/List;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `hashCode`() @signature `Lorg/threeten/bp/chrono/e;.hashCode:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `isNegative`(`org.threeten.bp.chrono.e` v6 @kind this) @signature `Lorg/threeten/bp/chrono/e;.isNegative:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34fc70.  call temp:= `getUnits`(v6) @signature `Lorg/threeten/bp/chrono/e;.getUnits:()Ljava/util/List;` @kind virtual;
  #L34fc76.  v0:= temp @kind object;
  #L34fc78.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L34fc7e.  v0:= temp @kind object;
  #L34fc80.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L34fc86.  v1:= temp;
  #L34fc88.  if v1 == 0 then goto L34fcb0;
  #L34fc8c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L34fc92.  v1:= temp @kind object;
  #L34fc94.  v1:= (`org.threeten.bp.temporal.l`) v1 @kind object;
  #L34fc98.  call temp:= `get`(v6, v1) @signature `Lorg/threeten/bp/chrono/e;.get:(Lorg/threeten/bp/temporal/l;)J` @kind virtual;
  #L34fc9e.  v1:= temp @kind wide;
  #L34fca0.  v3:= 0L;
  #L34fca4.  v5:= lcmp(v1, v3);
  #L34fca8.  if v5 >= 0 then goto L34fc80;
  #L34fcac.  v0:= 1I;
  #L34fcae.  return v0;
  #L34fcb0.  v0:= 0I;
  #L34fcb2.  return v0;
}
procedure `boolean` `isZero`(`org.threeten.bp.chrono.e` v6 @kind this) @signature `Lorg/threeten/bp/chrono/e;.isZero:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34fcc4.  call temp:= `getUnits`(v6) @signature `Lorg/threeten/bp/chrono/e;.getUnits:()Ljava/util/List;` @kind virtual;
  #L34fcca.  v0:= temp @kind object;
  #L34fccc.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L34fcd2.  v0:= temp @kind object;
  #L34fcd4.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L34fcda.  v1:= temp;
  #L34fcdc.  if v1 == 0 then goto L34fd04;
  #L34fce0.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L34fce6.  v1:= temp @kind object;
  #L34fce8.  v1:= (`org.threeten.bp.temporal.l`) v1 @kind object;
  #L34fcec.  call temp:= `get`(v6, v1) @signature `Lorg/threeten/bp/chrono/e;.get:(Lorg/threeten/bp/temporal/l;)J` @kind virtual;
  #L34fcf2.  v1:= temp @kind wide;
  #L34fcf4.  v3:= 0L;
  #L34fcf8.  v5:= lcmp(v1, v3);
  #L34fcfc.  if v5 == 0 then goto L34fcd4;
  #L34fd00.  v0:= 0I;
  #L34fd02.  return v0;
  #L34fd04.  v0:= 1I;
  #L34fd06.  return v0;
}
procedure `org.threeten.bp.chrono.e` `minus`(`org.threeten.bp.temporal.h` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.minus:(Lorg/threeten/bp/temporal/h;)Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.threeten.bp.chrono.e` `multipliedBy`(`int` v0 ) @signature `Lorg/threeten/bp/chrono/e;.multipliedBy:(I)Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.threeten.bp.chrono.e` `negated`(`org.threeten.bp.chrono.e` v1 @kind this) @signature `Lorg/threeten/bp/chrono/e;.negated:()Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34fd48.  v0:= -1I;
  #L34fd4a.  call temp:= `multipliedBy`(v1, v0) @signature `Lorg/threeten/bp/chrono/e;.multipliedBy:(I)Lorg/threeten/bp/chrono/e;` @kind virtual;
  #L34fd50.  v0:= temp @kind object;
  #L34fd52.  return v0 @kind object;
}
procedure `org.threeten.bp.chrono.e` `normalized`() @signature `Lorg/threeten/bp/chrono/e;.normalized:()Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.threeten.bp.chrono.e` `plus`(`org.threeten.bp.temporal.h` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.plus:(Lorg/threeten/bp/temporal/h;)Lorg/threeten/bp/chrono/e;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `org.threeten.bp.temporal.d` `subtractFrom`(`org.threeten.bp.temporal.d` v0 @kind object) @signature `Lorg/threeten/bp/chrono/e;.subtractFrom:(Lorg/threeten/bp/temporal/d;)Lorg/threeten/bp/temporal/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `toString`() @signature `Lorg/threeten/bp/chrono/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
