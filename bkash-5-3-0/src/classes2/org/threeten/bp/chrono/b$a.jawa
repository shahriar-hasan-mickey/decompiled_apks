record `org.threeten.bp.chrono.b$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`org.threeten.bp.chrono.b$a` v0 @kind this) @signature `Lorg/threeten/bp/chrono/b$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L34de1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L34de22.  return @kind void;
}
procedure `int` `a`(`org.threeten.bp.chrono.b$a` v2 @kind this, `org.threeten.bp.chrono.b` v3 @kind object, `org.threeten.bp.chrono.b` v4 @kind object) @signature `Lorg/threeten/bp/chrono/b$a;.a:(Lorg/threeten/bp/chrono/b;Lorg/threeten/bp/chrono/b;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L34ddf0.  call temp:= `toEpochDay`(v3) @signature `Lorg/threeten/bp/chrono/b;.toEpochDay:()J` @kind virtual;
  #L34ddf6.  v0:= temp @kind wide;
  #L34ddf8.  call temp:= `toEpochDay`(v4) @signature `Lorg/threeten/bp/chrono/b;.toEpochDay:()J` @kind virtual;
  #L34ddfe.  v3:= temp @kind wide;
  #L34de00.  call temp:= `b`(v0, v3) @signature `Lte/d;.b:(JJ)I` @kind static;
  #L34de06.  v3:= temp;
  #L34de08.  return v3;
}
procedure `int` `compare`(`org.threeten.bp.chrono.b$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/threeten/bp/chrono/b$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L34ddcc.  v1:= (`org.threeten.bp.chrono.b`) v1 @kind object;
  #L34ddd0.  v2:= (`org.threeten.bp.chrono.b`) v2 @kind object;
  #L34ddd4.  call temp:= `a`(v0, v1, v2) @signature `Lorg/threeten/bp/chrono/b$a;.a:(Lorg/threeten/bp/chrono/b;Lorg/threeten/bp/chrono/b;)I` @kind virtual;
  #L34ddda.  v1:= temp;
  #L34dddc.  return v1;
}
