record `org.threeten.bp.chrono.h` @kind class @AccessFlag FINAL extends `org.threeten.bp.chrono.g` @kind class, `java.io.Serializable` @kind interface {
  `org.threeten.bp.chrono.d` `org.threeten.bp.chrono.h.dateTime` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.r` `org.threeten.bp.chrono.h.offset` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.q` `org.threeten.bp.chrono.h.zone` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.chrono.h.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.chrono.h` v1 @kind this, `org.threeten.bp.chrono.d` v2 @kind object, `org.threeten.bp.r` v3 @kind object, `org.threeten.bp.q` v4 @kind object) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L3505b4.  call `<init>`(v1) @signature `Lorg/threeten/bp/chrono/g;.<init>:()V` @kind direct;
  #L3505ba.  v0:= "dateTime" @kind object;
  #L3505be.  call temp:= `i`(v2, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3505c4.  v2:= temp @kind object;
  #L3505c6.  v2:= (`org.threeten.bp.chrono.d`) v2 @kind object;
  #L3505ca.  v1.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` := v2 @kind object;
  #L3505ce.  v2:= "offset" @kind object;
  #L3505d2.  call temp:= `i`(v3, v2) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3505d8.  v2:= temp @kind object;
  #L3505da.  v2:= (`org.threeten.bp.r`) v2 @kind object;
  #L3505de.  v1.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` := v2 @kind object;
  #L3505e2.  v2:= "zone" @kind object;
  #L3505e6.  call temp:= `i`(v4, v2) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3505ec.  v2:= temp @kind object;
  #L3505ee.  v2:= (`org.threeten.bp.q`) v2 @kind object;
  #L3505f2.  v1.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` := v2 @kind object;
  #L3505f6.  return @kind void;
}
procedure `org.threeten.bp.chrono.h` `a`(`org.threeten.bp.chrono.h` v1 @kind this, `org.threeten.bp.e` v2 @kind object, `org.threeten.bp.q` v3 @kind object) @signature `Lorg/threeten/bp/chrono/h;.a:(Lorg/threeten/bp/e;Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/h;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3504f4.  call temp:= `toLocalDate`(v1) @signature `Lorg/threeten/bp/chrono/g;.toLocalDate:()Lorg/threeten/bp/chrono/b;` @kind virtual;
  #L3504fa.  v0:= temp @kind object;
  #L3504fc.  call temp:= `getChronology`(v0) @signature `Lorg/threeten/bp/chrono/b;.getChronology:()Lorg/threeten/bp/chrono/i;` @kind virtual;
  #L350502.  v0:= temp @kind object;
  #L350504.  call temp:= `ofInstant`(v0, v2, v3) @signature `Lorg/threeten/bp/chrono/h;.ofInstant:(Lorg/threeten/bp/chrono/i;Lorg/threeten/bp/e;Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/h;` @kind static;
  #L35050a.  v2:= temp @kind object;
  #L35050c.  return v2 @kind object;
}
procedure `org.threeten.bp.chrono.g` `ofBest`(`org.threeten.bp.chrono.d` v6 @kind object, `org.threeten.bp.q` v7 @kind object, `org.threeten.bp.r` v8 @kind object) @signature `Lorg/threeten/bp/chrono/h;.ofBest:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/q;Lorg/threeten/bp/r;)Lorg/threeten/bp/chrono/g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35017c.  v0:= "localDateTime" @kind object;
  #L350180.  call temp:= `i`(v6, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L350186.  v0:= "zone" @kind object;
  #L35018a.  call temp:= `i`(v7, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L350190.  v0:= instanceof @variable v7 @type ^`org.threeten.bp.r` @kind boolean;
  #L350194.  if v0 == 0 then goto L3501aa;
  #L350198.  v8:= new `org.threeten.bp.chrono.h`;
  #L35019c.  v0:= v7 @kind object;
  #L35019e.  v0:= (`org.threeten.bp.r`) v0 @kind object;
  #L3501a2.  call `<init>`(v8, v6, v0, v7) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @kind direct;
  #L3501a8.  return v8 @kind object;
  #L3501aa.  call temp:= `getRules`(v7) @signature `Lorg/threeten/bp/q;.getRules:()Lorg/threeten/bp/zone/f;` @kind virtual;
  #L3501b0.  v0:= temp @kind object;
  #L3501b2.  call temp:= `from`(v6) @signature `Lorg/threeten/bp/g;.from:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/g;` @kind static;
  #L3501b8.  v1:= temp @kind object;
  #L3501ba.  call temp:= `getValidOffsets`(v0, v1) @signature `Lorg/threeten/bp/zone/f;.getValidOffsets:(Lorg/threeten/bp/g;)Ljava/util/List;` @kind virtual;
  #L3501c0.  v2:= temp @kind object;
  #L3501c2.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3501c8.  v3:= temp;
  #L3501ca.  v4:= 1I;
  #L3501cc.  v5:= 0I;
  #L3501ce.  if v3 != v4 then goto L3501e0;
  #L3501d2.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3501d8.  v8:= temp @kind object;
  #L3501da.  v8:= (`org.threeten.bp.r`) v8 @kind object;
  #L3501de.  goto L350234;
  #L3501e0.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3501e6.  v3:= temp;
  #L3501e8.  if v3 != 0 then goto L350216;
  #L3501ec.  call temp:= `getTransition`(v0, v1) @signature `Lorg/threeten/bp/zone/f;.getTransition:(Lorg/threeten/bp/g;)Lorg/threeten/bp/zone/d;` @kind virtual;
  #L3501f2.  v8:= temp @kind object;
  #L3501f4.  call temp:= `getDuration`(v8) @signature `Lorg/threeten/bp/zone/d;.getDuration:()Lorg/threeten/bp/d;` @kind virtual;
  #L3501fa.  v0:= temp @kind object;
  #L3501fc.  call temp:= `getSeconds`(v0) @signature `Lorg/threeten/bp/d;.getSeconds:()J` @kind virtual;
  #L350202.  v0:= temp @kind wide;
  #L350204.  call temp:= `plusSeconds`(v6, v0) @signature `Lorg/threeten/bp/chrono/d;.plusSeconds:(J)Lorg/threeten/bp/chrono/d;` @kind virtual;
  #L35020a.  v6:= temp @kind object;
  #L35020c.  call temp:= `getOffsetAfter`(v8) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L350212.  v8:= temp @kind object;
  #L350214.  goto L350234;
  #L350216.  if v8 == 0 then goto L350228;
  #L35021a.  call temp:= `contains`(v2, v8) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L350220.  v0:= temp;
  #L350222.  if v0 == 0 then goto L350228;
  #L350226.  goto L350234;
  #L350228.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35022e.  v8:= temp @kind object;
  #L350230.  v8:= (`org.threeten.bp.r`) v8 @kind object;
  #L350234.  v0:= "offset" @kind object;
  #L350238.  call temp:= `i`(v8, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35023e.  v0:= new `org.threeten.bp.chrono.h`;
  #L350242.  call `<init>`(v0, v6, v8, v7) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @kind direct;
  #L350248.  return v0 @kind object;
}
procedure `org.threeten.bp.chrono.h` `ofInstant`(`org.threeten.bp.chrono.i` v3 @kind object, `org.threeten.bp.e` v4 @kind object, `org.threeten.bp.q` v5 @kind object) @signature `Lorg/threeten/bp/chrono/h;.ofInstant:(Lorg/threeten/bp/chrono/i;Lorg/threeten/bp/e;Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/h;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L350520.  call temp:= `getRules`(v5) @signature `Lorg/threeten/bp/q;.getRules:()Lorg/threeten/bp/zone/f;` @kind virtual;
  #L350526.  v0:= temp @kind object;
  #L350528.  call temp:= `getOffset`(v0, v4) @signature `Lorg/threeten/bp/zone/f;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L35052e.  v0:= temp @kind object;
  #L350530.  v1:= "offset" @kind object;
  #L350534.  call temp:= `i`(v0, v1) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35053a.  call temp:= `getEpochSecond`(v4) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L350540.  v1:= temp @kind wide;
  #L350542.  call temp:= `getNano`(v4) @signature `Lorg/threeten/bp/e;.getNano:()I` @kind virtual;
  #L350548.  v4:= temp;
  #L35054a.  call temp:= `ofEpochSecond`(v1, v4, v0) @signature `Lorg/threeten/bp/g;.ofEpochSecond:(JILorg/threeten/bp/r;)Lorg/threeten/bp/g;` @kind static;
  #L350550.  v4:= temp @kind object;
  #L350552.  call temp:= `localDateTime`(v3, v4) @signature `Lorg/threeten/bp/chrono/i;.localDateTime:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/chrono/c;` @kind virtual;
  #L350558.  v3:= temp @kind object;
  #L35055a.  v3:= (`org.threeten.bp.chrono.d`) v3 @kind object;
  #L35055e.  v4:= new `org.threeten.bp.chrono.h`;
  #L350562.  call `<init>`(v4, v3, v0, v5) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @kind direct;
  #L350568.  return v4 @kind object;
}
procedure `org.threeten.bp.chrono.g` `readExternal`(`java.io.ObjectInput` v2 @kind object) @signature `Lorg/threeten/bp/chrono/h;.readExternal:(Ljava/io/ObjectInput;)Lorg/threeten/bp/chrono/g;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3502ac.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L3502b2.  v0:= temp @kind object;
  #L3502b4.  v0:= (`org.threeten.bp.chrono.c`) v0 @kind object;
  #L3502b8.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L3502be.  v1:= temp @kind object;
  #L3502c0.  v1:= (`org.threeten.bp.r`) v1 @kind object;
  #L3502c4.  call temp:= `readObject`(v2) @signature `Ljava/io/ObjectInput;.readObject:()Ljava/lang/Object;` @kind interface;
  #L3502ca.  v2:= temp @kind object;
  #L3502cc.  v2:= (`org.threeten.bp.q`) v2 @kind object;
  #L3502d0.  call temp:= `atZone`(v0, v1) @signature `Lorg/threeten/bp/chrono/c;.atZone:(Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L3502d6.  v0:= temp @kind object;
  #L3502d8.  call temp:= `withZoneSameLocal`(v0, v2) @signature `Lorg/threeten/bp/chrono/g;.withZoneSameLocal:(Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L3502de.  v2:= temp @kind object;
  #L3502e0.  return v2 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.threeten.bp.chrono.h` v2 @kind this) @signature `Lorg/threeten/bp/chrono/h;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L34fff0.  v0:= new `java.io.InvalidObjectException`;
  #L34fff4.  v1:= "Deserialization via serialization delegate" @kind object;
  #L34fff8.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34fffe.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`org.threeten.bp.chrono.h` v2 @kind this) @signature `Lorg/threeten/bp/chrono/h;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L350010.  v0:= new `org.threeten.bp.chrono.v`;
  #L350014.  v1:= 13I;
  #L350018.  call `<init>`(v0, v1, v2) @signature `Lorg/threeten/bp/chrono/v;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L35001e.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.threeten.bp.chrono.h` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/threeten/bp/chrono/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34fee0.  v0:= 1I;
  #L34fee2.  if v3 != v4 then goto L34fee8;
  #L34fee6.  return v0;
  #L34fee8.  v1:= instanceof @variable v4 @type ^`org.threeten.bp.chrono.g` @kind boolean;
  #L34feec.  v2:= 0I;
  #L34feee.  if v1 == 0 then goto L34ff08;
  #L34fef2.  v4:= (`org.threeten.bp.chrono.g`) v4 @kind object;
  #L34fef6.  call temp:= `compareTo`(v3, v4) @signature `Lorg/threeten/bp/chrono/g;.compareTo:(Lorg/threeten/bp/chrono/g;)I` @kind virtual;
  #L34fefc.  v4:= temp;
  #L34fefe.  if v4 != 0 then goto L34ff04;
  #L34ff02.  goto L34ff06;
  #L34ff04.  v0:= 0I;
  #L34ff06.  return v0;
  #L34ff08.  return v2;
}
procedure `org.threeten.bp.r` `getOffset`(`org.threeten.bp.chrono.h` v1 @kind this) @signature `Lorg/threeten/bp/chrono/h;.getOffset:()Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35014c.  v0:= v1.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L350150.  return v0 @kind object;
}
procedure `org.threeten.bp.q` `getZone`(`org.threeten.bp.chrono.h` v1 @kind this) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350134.  v0:= v1.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L350138.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.threeten.bp.chrono.h` v3 @kind this) @signature `Lorg/threeten/bp/chrono/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34ffa0.  call temp:= `toLocalDateTime`(v3) @signature `Lorg/threeten/bp/chrono/h;.toLocalDateTime:()Lorg/threeten/bp/chrono/c;` @kind virtual;
  #L34ffa6.  v0:= temp @kind object;
  #L34ffa8.  call temp:= `hashCode`(v0) @signature `Lorg/threeten/bp/chrono/c;.hashCode:()I` @kind virtual;
  #L34ffae.  v0:= temp;
  #L34ffb0.  call temp:= `getOffset`(v3) @signature `Lorg/threeten/bp/chrono/h;.getOffset:()Lorg/threeten/bp/r;` @kind virtual;
  #L34ffb6.  v1:= temp @kind object;
  #L34ffb8.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/r;.hashCode:()I` @kind virtual;
  #L34ffbe.  v1:= temp;
  #L34ffc0.  v0:= v0 ^~ v1 @kind int;
  #L34ffc2.  call temp:= `getZone`(v3) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L34ffc8.  v1:= temp @kind object;
  #L34ffca.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/q;.hashCode:()I` @kind virtual;
  #L34ffd0.  v1:= temp;
  #L34ffd2.  v2:= 3I;
  #L34ffd4.  call temp:= `rotateLeft`(v1, v2) @signature `Ljava/lang/Integer;.rotateLeft:(II)I` @kind static;
  #L34ffda.  v1:= temp;
  #L34ffdc.  v0:= v0 ^~ v1 @kind int;
  #L34ffde.  return v0;
}
procedure `boolean` `isSupported`(`org.threeten.bp.chrono.h` v1 @kind this, `org.threeten.bp.temporal.i` v2 @kind object) @signature `Lorg/threeten/bp/chrono/h;.isSupported:(Lorg/threeten/bp/temporal/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34ff1c.  v0:= instanceof @variable v2 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L34ff20.  if v0 != 0 then goto L34ff3a;
  #L34ff24.  if v2 == 0 then goto L34ff36;
  #L34ff28.  call temp:= `isSupportedBy`(v2, v1) @signature `Lorg/threeten/bp/temporal/i;.isSupportedBy:(Lorg/threeten/bp/temporal/e;)Z` @kind interface;
  #L34ff2e.  v2:= temp;
  #L34ff30.  if v2 == 0 then goto L34ff36;
  #L34ff34.  goto L34ff3a;
  #L34ff36.  v2:= 0I;
  #L34ff38.  goto L34ff3c;
  #L34ff3a.  v2:= 1I;
  #L34ff3c.  return v2;
}
procedure `boolean` `isSupported`(`org.threeten.bp.chrono.h` v3 @kind this, `org.threeten.bp.temporal.l` v4 @kind object) @signature `Lorg/threeten/bp/chrono/h;.isSupported:(Lorg/threeten/bp/temporal/l;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34ff50.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.b` @kind boolean;
  #L34ff54.  v1:= 1I;
  #L34ff56.  v2:= 0I;
  #L34ff58.  if v0 == 0 then goto L34ff7a;
  #L34ff5c.  call temp:= `isDateBased`(v4) @signature `Lorg/threeten/bp/temporal/l;.isDateBased:()Z` @kind interface;
  #L34ff62.  v0:= temp;
  #L34ff64.  if v0 != 0 then goto L34ff78;
  #L34ff68.  call temp:= `isTimeBased`(v4) @signature `Lorg/threeten/bp/temporal/l;.isTimeBased:()Z` @kind interface;
  #L34ff6e.  v4:= temp;
  #L34ff70.  if v4 == 0 then goto L34ff76;
  #L34ff74.  goto L34ff78;
  #L34ff76.  v1:= 0I;
  #L34ff78.  return v1;
  #L34ff7a.  if v4 == 0 then goto L34ff8c;
  #L34ff7e.  call temp:= `isSupportedBy`(v4, v3) @signature `Lorg/threeten/bp/temporal/l;.isSupportedBy:(Lorg/threeten/bp/temporal/d;)Z` @kind interface;
  #L34ff84.  v4:= temp;
  #L34ff86.  if v4 == 0 then goto L34ff8c;
  #L34ff8a.  goto L34ff8e;
  #L34ff8c.  v1:= 0I;
  #L34ff8e.  return v1;
}
procedure `org.threeten.bp.chrono.g` `plus`(`org.threeten.bp.chrono.h` v1 @kind this, `long` v2 , `org.threeten.bp.temporal.l` v4 @kind object) @signature `Lorg/threeten/bp/chrono/h;.plus:(JLorg/threeten/bp/temporal/l;)Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35025c.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.b` @kind boolean;
  #L350260.  if v0 == 0 then goto L35027a;
  #L350264.  v0:= v1.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350268.  call temp:= `plus`(v0, v2, v4) @signature `Lorg/threeten/bp/chrono/d;.plus:(JLorg/threeten/bp/temporal/l;)Lorg/threeten/bp/chrono/d;` @kind virtual;
  #L35026e.  v2:= temp @kind object;
  #L350270.  call temp:= `with`(v1, v2) @signature `Lorg/threeten/bp/chrono/g;.with:(Lorg/threeten/bp/temporal/f;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L350276.  v2:= temp @kind object;
  #L350278.  return v2 @kind object;
  #L35027a.  call temp:= `toLocalDate`(v1) @signature `Lorg/threeten/bp/chrono/g;.toLocalDate:()Lorg/threeten/bp/chrono/b;` @kind virtual;
  #L350280.  v0:= temp @kind object;
  #L350282.  call temp:= `getChronology`(v0) @signature `Lorg/threeten/bp/chrono/b;.getChronology:()Lorg/threeten/bp/chrono/i;` @kind virtual;
  #L350288.  v0:= temp @kind object;
  #L35028a.  call temp:= `addTo`(v4, v1, v2) @signature `Lorg/threeten/bp/temporal/l;.addTo:(Lorg/threeten/bp/temporal/d;J)Lorg/threeten/bp/temporal/d;` @kind interface;
  #L350290.  v2:= temp @kind object;
  #L350292.  call temp:= `ensureChronoZonedDateTime`(v0, v2) @signature `Lorg/threeten/bp/chrono/i;.ensureChronoZonedDateTime:(Lorg/threeten/bp/temporal/d;)Lorg/threeten/bp/chrono/h;` @kind virtual;
  #L350298.  v2:= temp @kind object;
  #L35029a.  return v2 @kind object;
}
procedure `org.threeten.bp.temporal.d` `plus`(`org.threeten.bp.chrono.h` v0 @kind this, `long` v1 , `org.threeten.bp.temporal.l` v3 @kind object) @signature `Lorg/threeten/bp/chrono/h;.plus:(JLorg/threeten/bp/temporal/l;)Lorg/threeten/bp/temporal/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L35057c.  call temp:= `plus`(v0, v1, v3) @signature `Lorg/threeten/bp/chrono/h;.plus:(JLorg/threeten/bp/temporal/l;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L350582.  v1:= temp @kind object;
  #L350584.  return v1 @kind object;
}
procedure `org.threeten.bp.chrono.c` `toLocalDateTime`(`org.threeten.bp.chrono.h` v1 @kind this) @signature `Lorg/threeten/bp/chrono/h;.toLocalDateTime:()Lorg/threeten/bp/chrono/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L350164.  v0:= v1.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350168.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.chrono.h` v3 @kind this) @signature `Lorg/threeten/bp/chrono/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L350030.  v0:= new `java.lang.StringBuilder`;
  #L350034.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35003a.  call temp:= `toLocalDateTime`(v3) @signature `Lorg/threeten/bp/chrono/h;.toLocalDateTime:()Lorg/threeten/bp/chrono/c;` @kind virtual;
  #L350040.  v1:= temp @kind object;
  #L350042.  call temp:= `toString`(v1) @signature `Lorg/threeten/bp/chrono/c;.toString:()Ljava/lang/String;` @kind virtual;
  #L350048.  v1:= temp @kind object;
  #L35004a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L350050.  call temp:= `getOffset`(v3) @signature `Lorg/threeten/bp/chrono/h;.getOffset:()Lorg/threeten/bp/r;` @kind virtual;
  #L350056.  v1:= temp @kind object;
  #L350058.  call temp:= `toString`(v1) @signature `Lorg/threeten/bp/r;.toString:()Ljava/lang/String;` @kind virtual;
  #L35005e.  v1:= temp @kind object;
  #L350060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L350066.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35006c.  v0:= temp @kind object;
  #L35006e.  call temp:= `getOffset`(v3) @signature `Lorg/threeten/bp/chrono/h;.getOffset:()Lorg/threeten/bp/r;` @kind virtual;
  #L350074.  v1:= temp @kind object;
  #L350076.  call temp:= `getZone`(v3) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L35007c.  v2:= temp @kind object;
  #L35007e.  if v1 == v2 then goto L3500c4;
  #L350082.  v1:= new `java.lang.StringBuilder`;
  #L350086.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35008c.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L350092.  v0:= 91I;
  #L350096.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35009c.  call temp:= `getZone`(v3) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L3500a2.  v0:= temp @kind object;
  #L3500a4.  call temp:= `toString`(v0) @signature `Lorg/threeten/bp/q;.toString:()Ljava/lang/String;` @kind virtual;
  #L3500aa.  v0:= temp @kind object;
  #L3500ac.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3500b2.  v0:= 93I;
  #L3500b6.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3500bc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3500c2.  v0:= temp @kind object;
  #L3500c4.  return v0 @kind object;
}
procedure `long` `until`(`org.threeten.bp.chrono.h` v1 @kind this, `org.threeten.bp.temporal.d` v2 @kind object, `org.threeten.bp.temporal.l` v3 @kind object) @signature `Lorg/threeten/bp/chrono/h;.until:(Lorg/threeten/bp/temporal/d;Lorg/threeten/bp/temporal/l;)J` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3500d8.  call temp:= `toLocalDate`(v1) @signature `Lorg/threeten/bp/chrono/g;.toLocalDate:()Lorg/threeten/bp/chrono/b;` @kind virtual;
  #L3500de.  v0:= temp @kind object;
  #L3500e0.  call temp:= `getChronology`(v0) @signature `Lorg/threeten/bp/chrono/b;.getChronology:()Lorg/threeten/bp/chrono/i;` @kind virtual;
  #L3500e6.  v0:= temp @kind object;
  #L3500e8.  call temp:= `zonedDateTime`(v0, v2) @signature `Lorg/threeten/bp/chrono/i;.zonedDateTime:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L3500ee.  v2:= temp @kind object;
  #L3500f0.  v0:= instanceof @variable v3 @type ^`org.threeten.bp.temporal.b` @kind boolean;
  #L3500f4.  if v0 == 0 then goto L35011a;
  #L3500f8.  v0:= v1.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L3500fc.  call temp:= `withZoneSameInstant`(v2, v0) @signature `Lorg/threeten/bp/chrono/g;.withZoneSameInstant:(Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L350102.  v2:= temp @kind object;
  #L350104.  v0:= v1.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350108.  call temp:= `toLocalDateTime`(v2) @signature `Lorg/threeten/bp/chrono/g;.toLocalDateTime:()Lorg/threeten/bp/chrono/c;` @kind virtual;
  #L35010e.  v2:= temp @kind object;
  #L350110.  call temp:= `until`(v0, v2, v3) @signature `Lorg/threeten/bp/chrono/d;.until:(Lorg/threeten/bp/temporal/d;Lorg/threeten/bp/temporal/l;)J` @kind virtual;
  #L350116.  v2:= temp @kind wide;
  #L350118.  return v2 @kind wide;
  #L35011a.  call temp:= `between`(v3, v1, v2) @signature `Lorg/threeten/bp/temporal/l;.between:(Lorg/threeten/bp/temporal/d;Lorg/threeten/bp/temporal/d;)J` @kind interface;
  #L350120.  v2:= temp @kind wide;
  #L350122.  return v2 @kind wide;
}
procedure `org.threeten.bp.chrono.g` `with`(`org.threeten.bp.chrono.h` v3 @kind this, `org.threeten.bp.temporal.i` v4 @kind object, `long` v5 ) @signature `Lorg/threeten/bp/chrono/h;.with:(Lorg/threeten/bp/temporal/i;J)Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3502f4.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L3502f8.  if v0 == 0 then goto L35037e;
  #L3502fc.  v0:= v4 @kind object;
  #L3502fe.  v0:= (`org.threeten.bp.temporal.a`) v0 @kind object;
  #L350302.  v1:= `@@org.threeten.bp.chrono.h$a.a` @type ^`int`[] @kind object;
  #L350306.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L35030c.  v2:= temp;
  #L35030e.  v1:= v1[v2];
  #L350312.  v2:= 1I;
  #L350314.  if v1 == v2 then goto L350366;
  #L350318.  v2:= 2I;
  #L35031a.  if v1 == v2 then goto L35033c;
  #L35031e.  v0:= v3.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350322.  call temp:= `with`(v0, v4, v5) @signature `Lorg/threeten/bp/chrono/d;.with:(Lorg/threeten/bp/temporal/i;J)Lorg/threeten/bp/chrono/d;` @kind virtual;
  #L350328.  v4:= temp @kind object;
  #L35032a.  v5:= v3.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L35032e.  v6:= v3.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L350332.  call temp:= `ofBest`(v4, v5, v6) @signature `Lorg/threeten/bp/chrono/h;.ofBest:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/q;Lorg/threeten/bp/r;)Lorg/threeten/bp/chrono/g;` @kind static;
  #L350338.  v4:= temp @kind object;
  #L35033a.  return v4 @kind object;
  #L35033c.  call temp:= `checkValidIntValue`(v0, v5) @signature `Lorg/threeten/bp/temporal/a;.checkValidIntValue:(J)I` @kind virtual;
  #L350342.  v4:= temp;
  #L350344.  call temp:= `ofTotalSeconds`(v4) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L35034a.  v4:= temp @kind object;
  #L35034c.  v5:= v3.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350350.  call temp:= `toInstant`(v5, v4) @signature `Lorg/threeten/bp/chrono/c;.toInstant:(Lorg/threeten/bp/r;)Lorg/threeten/bp/e;` @kind virtual;
  #L350356.  v4:= temp @kind object;
  #L350358.  v5:= v3.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L35035c.  call temp:= `a`(v3, v4, v5) @signature `Lorg/threeten/bp/chrono/h;.a:(Lorg/threeten/bp/e;Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/h;` @kind direct;
  #L350362.  v4:= temp @kind object;
  #L350364.  return v4 @kind object;
  #L350366.  call temp:= `toEpochSecond`(v3) @signature `Lorg/threeten/bp/chrono/g;.toEpochSecond:()J` @kind virtual;
  #L35036c.  v0:= temp @kind wide;
  #L35036e.  v5:= v5 - v0 @kind long;
  #L350370.  v4:= `@@org.threeten.bp.temporal.b.SECONDS` @type ^`org.threeten.bp.temporal.b` @kind object;
  #L350374.  call temp:= `plus`(v3, v5, v4) @signature `Lorg/threeten/bp/chrono/h;.plus:(JLorg/threeten/bp/temporal/l;)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L35037a.  v4:= temp @kind object;
  #L35037c.  return v4 @kind object;
  #L35037e.  call temp:= `toLocalDate`(v3) @signature `Lorg/threeten/bp/chrono/g;.toLocalDate:()Lorg/threeten/bp/chrono/b;` @kind virtual;
  #L350384.  v0:= temp @kind object;
  #L350386.  call temp:= `getChronology`(v0) @signature `Lorg/threeten/bp/chrono/b;.getChronology:()Lorg/threeten/bp/chrono/i;` @kind virtual;
  #L35038c.  v0:= temp @kind object;
  #L35038e.  call temp:= `adjustInto`(v4, v3, v5) @signature `Lorg/threeten/bp/temporal/i;.adjustInto:(Lorg/threeten/bp/temporal/d;J)Lorg/threeten/bp/temporal/d;` @kind interface;
  #L350394.  v4:= temp @kind object;
  #L350396.  call temp:= `ensureChronoZonedDateTime`(v0, v4) @signature `Lorg/threeten/bp/chrono/i;.ensureChronoZonedDateTime:(Lorg/threeten/bp/temporal/d;)Lorg/threeten/bp/chrono/h;` @kind virtual;
  #L35039c.  v4:= temp @kind object;
  #L35039e.  return v4 @kind object;
}
procedure `org.threeten.bp.temporal.d` `with`(`org.threeten.bp.chrono.h` v0 @kind this, `org.threeten.bp.temporal.i` v1 @kind object, `long` v2 ) @signature `Lorg/threeten/bp/chrono/h;.with:(Lorg/threeten/bp/temporal/i;J)Lorg/threeten/bp/temporal/d;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L350598.  call temp:= `with`(v0, v1, v2) @signature `Lorg/threeten/bp/chrono/h;.with:(Lorg/threeten/bp/temporal/i;J)Lorg/threeten/bp/chrono/g;` @kind virtual;
  #L35059e.  v1:= temp @kind object;
  #L3505a0.  return v1 @kind object;
}
procedure `org.threeten.bp.chrono.g` `withEarlierOffsetAtOverlap`(`org.threeten.bp.chrono.h` v4 @kind this) @signature `Lorg/threeten/bp/chrono/h;.withEarlierOffsetAtOverlap:()Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3503b0.  call temp:= `getZone`(v4) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L3503b6.  v0:= temp @kind object;
  #L3503b8.  call temp:= `getRules`(v0) @signature `Lorg/threeten/bp/q;.getRules:()Lorg/threeten/bp/zone/f;` @kind virtual;
  #L3503be.  v0:= temp @kind object;
  #L3503c0.  call temp:= `from`(v4) @signature `Lorg/threeten/bp/g;.from:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/g;` @kind static;
  #L3503c6.  v1:= temp @kind object;
  #L3503c8.  call temp:= `getTransition`(v0, v1) @signature `Lorg/threeten/bp/zone/f;.getTransition:(Lorg/threeten/bp/g;)Lorg/threeten/bp/zone/d;` @kind virtual;
  #L3503ce.  v0:= temp @kind object;
  #L3503d0.  if v0 == 0 then goto L35040c;
  #L3503d4.  call temp:= `isOverlap`(v0) @signature `Lorg/threeten/bp/zone/d;.isOverlap:()Z` @kind virtual;
  #L3503da.  v1:= temp;
  #L3503dc.  if v1 == 0 then goto L35040c;
  #L3503e0.  call temp:= `getOffsetBefore`(v0) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L3503e6.  v0:= temp @kind object;
  #L3503e8.  v1:= v4.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L3503ec.  call temp:= `equals`(v0, v1) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3503f2.  v1:= temp;
  #L3503f4.  if v1 != 0 then goto L35040c;
  #L3503f8.  v1:= new `org.threeten.bp.chrono.h`;
  #L3503fc.  v2:= v4.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350400.  v3:= v4.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L350404.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @kind direct;
  #L35040a.  return v1 @kind object;
  #L35040c.  return v4 @kind object;
}
procedure `org.threeten.bp.chrono.g` `withLaterOffsetAtOverlap`(`org.threeten.bp.chrono.h` v4 @kind this) @signature `Lorg/threeten/bp/chrono/h;.withLaterOffsetAtOverlap:()Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L350420.  call temp:= `getZone`(v4) @signature `Lorg/threeten/bp/chrono/h;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L350426.  v0:= temp @kind object;
  #L350428.  call temp:= `getRules`(v0) @signature `Lorg/threeten/bp/q;.getRules:()Lorg/threeten/bp/zone/f;` @kind virtual;
  #L35042e.  v0:= temp @kind object;
  #L350430.  call temp:= `from`(v4) @signature `Lorg/threeten/bp/g;.from:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/g;` @kind static;
  #L350436.  v1:= temp @kind object;
  #L350438.  call temp:= `getTransition`(v0, v1) @signature `Lorg/threeten/bp/zone/f;.getTransition:(Lorg/threeten/bp/g;)Lorg/threeten/bp/zone/d;` @kind virtual;
  #L35043e.  v0:= temp @kind object;
  #L350440.  if v0 == 0 then goto L350474;
  #L350444.  call temp:= `getOffsetAfter`(v0) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L35044a.  v0:= temp @kind object;
  #L35044c.  call temp:= `getOffset`(v4) @signature `Lorg/threeten/bp/chrono/h;.getOffset:()Lorg/threeten/bp/r;` @kind virtual;
  #L350452.  v1:= temp @kind object;
  #L350454.  call temp:= `equals`(v0, v1) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35045a.  v1:= temp;
  #L35045c.  if v1 != 0 then goto L350474;
  #L350460.  v1:= new `org.threeten.bp.chrono.h`;
  #L350464.  v2:= v4.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L350468.  v3:= v4.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L35046c.  call `<init>`(v1, v2, v0, v3) @signature `Lorg/threeten/bp/chrono/h;.<init>:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/r;Lorg/threeten/bp/q;)V` @kind direct;
  #L350472.  return v1 @kind object;
  #L350474.  return v4 @kind object;
}
procedure `org.threeten.bp.chrono.g` `withZoneSameInstant`(`org.threeten.bp.chrono.h` v2 @kind this, `org.threeten.bp.q` v3 @kind object) @signature `Lorg/threeten/bp/chrono/h;.withZoneSameInstant:(Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L350488.  v0:= "zone" @kind object;
  #L35048c.  call temp:= `i`(v3, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L350492.  v0:= v2.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L350496.  call temp:= `equals`(v0, v3) @signature `Lorg/threeten/bp/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35049c.  v0:= temp;
  #L35049e.  if v0 == 0 then goto L3504a6;
  #L3504a2.  v3:= v2 @kind object;
  #L3504a4.  goto L3504be;
  #L3504a6.  v0:= v2.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L3504aa.  v1:= v2.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L3504ae.  call temp:= `toInstant`(v0, v1) @signature `Lorg/threeten/bp/chrono/c;.toInstant:(Lorg/threeten/bp/r;)Lorg/threeten/bp/e;` @kind virtual;
  #L3504b4.  v0:= temp @kind object;
  #L3504b6.  call temp:= `a`(v2, v0, v3) @signature `Lorg/threeten/bp/chrono/h;.a:(Lorg/threeten/bp/e;Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/h;` @kind direct;
  #L3504bc.  v3:= temp @kind object;
  #L3504be.  return v3 @kind object;
}
procedure `org.threeten.bp.chrono.g` `withZoneSameLocal`(`org.threeten.bp.chrono.h` v2 @kind this, `org.threeten.bp.q` v3 @kind object) @signature `Lorg/threeten/bp/chrono/h;.withZoneSameLocal:(Lorg/threeten/bp/q;)Lorg/threeten/bp/chrono/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3504d0.  v0:= v2.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L3504d4.  v1:= v2.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L3504d8.  call temp:= `ofBest`(v0, v3, v1) @signature `Lorg/threeten/bp/chrono/h;.ofBest:(Lorg/threeten/bp/chrono/d;Lorg/threeten/bp/q;Lorg/threeten/bp/r;)Lorg/threeten/bp/chrono/g;` @kind static;
  #L3504de.  v3:= temp @kind object;
  #L3504e0.  return v3 @kind object;
}
procedure `void` `writeExternal`(`org.threeten.bp.chrono.h` v1 @kind this, `java.io.ObjectOutput` v2 @kind object) @signature `Lorg/threeten/bp/chrono/h;.writeExternal:(Ljava/io/ObjectOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L350608.  v0:= v1.`org.threeten.bp.chrono.h.dateTime` @type ^`org.threeten.bp.chrono.d` @kind object;
  #L35060c.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L350612.  v0:= v1.`org.threeten.bp.chrono.h.offset` @type ^`org.threeten.bp.r` @kind object;
  #L350616.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L35061c.  v0:= v1.`org.threeten.bp.chrono.h.zone` @type ^`org.threeten.bp.q` @kind object;
  #L350620.  call `writeObject`(v2, v0) @signature `Ljava/io/ObjectOutput;.writeObject:(Ljava/lang/Object;)V` @kind interface;
  #L350626.  return @kind void;
}
