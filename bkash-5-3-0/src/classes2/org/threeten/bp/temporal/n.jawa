record `org.threeten.bp.temporal.n` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Serializable` @kind interface {
  `long` `org.threeten.bp.temporal.n.maxLargest` @AccessFlag PRIVATE_FINAL;
  `long` `org.threeten.bp.temporal.n.maxSmallest` @AccessFlag PRIVATE_FINAL;
  `long` `org.threeten.bp.temporal.n.minLargest` @AccessFlag PRIVATE_FINAL;
  `long` `org.threeten.bp.temporal.n.minSmallest` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.temporal.n.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.temporal.n` v0 @kind this, `long` v1 , `long` v3 , `long` v5 , `long` v7 ) @signature `Lorg/threeten/bp/temporal/n;.<init>:(JJJJ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L366864.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L36686a.  v0.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` := v1 @kind wide;
  #L36686e.  v0.`org.threeten.bp.temporal.n.minLargest` @type ^`long` := v3 @kind wide;
  #L366872.  v0.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` := v5 @kind wide;
  #L366876.  v0.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` := v7 @kind wide;
  #L36687a.  return @kind void;
}
procedure `org.threeten.bp.temporal.n` `of`(`long` v10 , `long` v12 ) @signature `Lorg/threeten/bp/temporal/n;.of:(JJ)Lorg/threeten/bp/temporal/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L366790.  v0:= lcmp(v10, v12);
  #L366794.  if v0 > 0 then goto L3667ae;
  #L366798.  v0:= new `org.threeten.bp.temporal.n`;
  #L36679c.  v1:= v0 @kind object;
  #L36679e.  v2:= v10 @kind wide;
  #L3667a0.  v4:= v10 @kind wide;
  #L3667a2.  v6:= v12 @kind wide;
  #L3667a4.  v8:= v12 @kind wide;
  #L3667a6.  call `<init>`(v1, v2, v4, v6, v8) @signature `Lorg/threeten/bp/temporal/n;.<init>:(JJJJ)V` @kind direct;
  #L3667ac.  return v0 @kind object;
  #L3667ae.  v10:= new `java.lang.IllegalArgumentException`;
  #L3667b2.  v11:= "Minimum value must be less than maximum value" @kind object;
  #L3667b6.  call `<init>`(v10, v11) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3667bc.  throw v10;
}
procedure `org.threeten.bp.temporal.n` `of`(`long` v8 , `long` v10 , `long` v12 ) @signature `Lorg/threeten/bp/temporal/n;.of:(JJJ)Lorg/threeten/bp/temporal/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3667d0.  v0:= v8 @kind wide;
  #L3667d2.  v2:= v8 @kind wide;
  #L3667d4.  v4:= v10 @kind wide;
  #L3667d6.  v6:= v12 @kind wide;
  #L3667d8.  call temp:= `of`(v0, v2, v4, v6) @signature `Lorg/threeten/bp/temporal/n;.of:(JJJJ)Lorg/threeten/bp/temporal/n;` @kind static;
  #L3667de.  v8:= temp @kind object;
  #L3667e0.  return v8 @kind object;
}
procedure `org.threeten.bp.temporal.n` `of`(`long` v10 , `long` v12 , `long` v14 , `long` v16 ) @signature `Lorg/threeten/bp/temporal/n;.of:(JJJJ)Lorg/threeten/bp/temporal/n;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3667f4.  v0:= lcmp(v10, v12);
  #L3667f8.  if v0 > 0 then goto L366844;
  #L3667fc.  v0:= lcmp(v14, v16);
  #L366800.  if v0 > 0 then goto L366834;
  #L366804.  v0:= lcmp(v12, v16);
  #L366808.  if v0 > 0 then goto L366824;
  #L36680c.  v9:= new `org.threeten.bp.temporal.n`;
  #L366810.  v0:= v9 @kind object;
  #L366812.  v1:= v10 @kind wide;
  #L366814.  v3:= v12 @kind wide;
  #L366816.  v5:= v14 @kind wide;
  #L366818.  v7:= v16 @kind wide;
  #L36681c.  call `<init>`(v0, v1, v3, v5, v7) @signature `Lorg/threeten/bp/temporal/n;.<init>:(JJJJ)V` @kind direct;
  #L366822.  return v9 @kind object;
  #L366824.  v0:= new `java.lang.IllegalArgumentException`;
  #L366828.  v1:= "Minimum value must be less than maximum value" @kind object;
  #L36682c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366832.  throw v0;
  #L366834.  v0:= new `java.lang.IllegalArgumentException`;
  #L366838.  v1:= "Smallest maximum value must be less than largest maximum value" @kind object;
  #L36683c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366842.  throw v0;
  #L366844.  v0:= new `java.lang.IllegalArgumentException`;
  #L366848.  v1:= "Smallest minimum value must be less than largest minimum value" @kind object;
  #L36684c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366852.  throw v0;
}
procedure `int` `checkValidIntValue`(`org.threeten.bp.temporal.n` v3 @kind this, `long` v4 , `org.threeten.bp.temporal.i` v6 @kind object) @signature `Lorg/threeten/bp/temporal/n;.checkValidIntValue:(JLorg/threeten/bp/temporal/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L366538.  call temp:= `isValidIntValue`(v3, v4) @signature `Lorg/threeten/bp/temporal/n;.isValidIntValue:(J)Z` @kind virtual;
  #L36653e.  v0:= temp;
  #L366540.  if v0 == 0 then goto L366548;
  #L366544.  v5:= (`int`) v4 @kind l2i;
  #L366546.  return v5;
  #L366548.  v0:= new `org.threeten.bp.b`;
  #L36654c.  v1:= new `java.lang.StringBuilder`;
  #L366550.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366556.  v2:= "Invalid int value for " @kind object;
  #L36655a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366560.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366566.  v6:= ": " @kind object;
  #L36656a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366570.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L366576.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36657c.  v4:= temp @kind object;
  #L36657e.  call `<init>`(v0, v4) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L366584.  throw v0;
}
procedure `long` `checkValidValue`(`org.threeten.bp.temporal.n` v4 @kind this, `long` v5 , `org.threeten.bp.temporal.i` v7 @kind object) @signature `Lorg/threeten/bp/temporal/n;.checkValidValue:(JLorg/threeten/bp/temporal/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366684.  call temp:= `isValidValue`(v4, v5) @signature `Lorg/threeten/bp/temporal/n;.isValidValue:(J)Z` @kind virtual;
  #L36668a.  v0:= temp;
  #L36668c.  if v0 != 0 then goto L36671c;
  #L366690.  v0:= "): " @kind object;
  #L366694.  if v7 == 0 then goto L3666e2;
  #L366698.  v1:= new `org.threeten.bp.b`;
  #L36669c.  v2:= new `java.lang.StringBuilder`;
  #L3666a0.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3666a6.  v3:= "Invalid value for " @kind object;
  #L3666aa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666b0.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666b6.  v7:= " (valid values " @kind object;
  #L3666ba.  call temp:= `append`(v2, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666c0.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666c6.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666cc.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666d2.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3666d8.  v5:= temp @kind object;
  #L3666da.  call `<init>`(v1, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3666e0.  throw v1;
  #L3666e2.  v7:= new `org.threeten.bp.b`;
  #L3666e6.  v1:= new `java.lang.StringBuilder`;
  #L3666ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3666f0.  v2:= "Invalid value (valid values " @kind object;
  #L3666f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3666fa.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366700.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366706.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L36670c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366712.  v5:= temp @kind object;
  #L366714.  call `<init>`(v7, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L36671a.  throw v7;
  #L36671c.  return v5 @kind wide;
}
procedure `boolean` `equals`(`org.threeten.bp.temporal.n` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lorg/threeten/bp/temporal/n;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3663e4.  v0:= 1I;
  #L3663e6.  if v8 != v7 then goto L3663ec;
  #L3663ea.  return v0;
  #L3663ec.  v1:= instanceof @variable v8 @type ^`org.threeten.bp.temporal.n` @kind boolean;
  #L3663f0.  v2:= 0I;
  #L3663f2.  if v1 == 0 then goto L366440;
  #L3663f6.  v8:= (`org.threeten.bp.temporal.n`) v8 @kind object;
  #L3663fa.  v3:= v7.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L3663fe.  v5:= v8.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L366402.  v1:= lcmp(v3, v5);
  #L366406.  if v1 != 0 then goto L36643c;
  #L36640a.  v3:= v7.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L36640e.  v5:= v8.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L366412.  v1:= lcmp(v3, v5);
  #L366416.  if v1 != 0 then goto L36643c;
  #L36641a.  v3:= v7.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L36641e.  v5:= v8.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L366422.  v1:= lcmp(v3, v5);
  #L366426.  if v1 != 0 then goto L36643c;
  #L36642a.  v3:= v7.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L36642e.  v5:= v8.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L366432.  v8:= lcmp(v3, v5);
  #L366436.  if v8 != 0 then goto L36643c;
  #L36643a.  goto L36643e;
  #L36643c.  v0:= 0I;
  #L36643e.  return v0;
  #L366440.  return v2;
}
procedure `long` `getLargestMinimum`(`org.threeten.bp.temporal.n` v2 @kind this) @signature `Lorg/threeten/bp/temporal/n;.getLargestMinimum:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366730.  v0:= v2.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L366734.  return v0 @kind wide;
}
procedure `long` `getMaximum`(`org.threeten.bp.temporal.n` v2 @kind this) @signature `Lorg/threeten/bp/temporal/n;.getMaximum:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366748.  v0:= v2.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L36674c.  return v0 @kind wide;
}
procedure `long` `getMinimum`(`org.threeten.bp.temporal.n` v2 @kind this) @signature `Lorg/threeten/bp/temporal/n;.getMinimum:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366760.  v0:= v2.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L366764.  return v0 @kind wide;
}
procedure `long` `getSmallestMaximum`(`org.threeten.bp.temporal.n` v2 @kind this) @signature `Lorg/threeten/bp/temporal/n;.getSmallestMaximum:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366778.  v0:= v2.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L36677c.  return v0 @kind wide;
}
procedure `int` `hashCode`(`org.threeten.bp.temporal.n` v8 @kind this) @signature `Lorg/threeten/bp/temporal/n;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L366598.  v0:= v8.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L36659c.  v2:= v8.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L3665a0.  v0:= v0 + v2 @kind long;
  #L3665a2.  v4:= 16L;
  #L3665a6.  v2:= v2 + v4 @kind long;
  #L3665a8.  v3:= (`int`) v2 @kind l2i;
  #L3665aa.  v0:= v0 ^< v3 @kind long;
  #L3665ac.  v2:= v8.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L3665b0.  v4:= 48L;
  #L3665b4.  v6:= v2 + v4 @kind long;
  #L3665b8.  v7:= (`int`) v6 @kind l2i;
  #L3665ba.  v0:= v0 ^> v7 @kind long;
  #L3665bc.  v6:= 32L;
  #L3665c0.  v2:= v2 + v6 @kind long;
  #L3665c2.  v3:= (`int`) v2 @kind l2i;
  #L3665c4.  v0:= v0 ^< v3 @kind long;
  #L3665c6.  v2:= v8.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L3665ca.  v6:= v6 + v2 @kind long;
  #L3665cc.  v7:= (`int`) v6 @kind l2i;
  #L3665ce.  v0:= v0 ^> v7 @kind long;
  #L3665d0.  v2:= v2 + v4 @kind long;
  #L3665d2.  v3:= (`int`) v2 @kind l2i;
  #L3665d4.  v0:= v0 ^< v3 @kind long;
  #L3665d6.  v2:= 16I;
  #L3665da.  v0:= v0 ^> v2 @kind long;
  #L3665dc.  v2:= 32I;
  #L3665e0.  v2:= v0 ^>> v2 @kind long;
  #L3665e4.  v0:= v0 ^~ v2 @kind long;
  #L3665e6.  v1:= (`int`) v0 @kind l2i;
  #L3665e8.  return v1;
}
procedure `boolean` `isFixed`(`org.threeten.bp.temporal.n` v5 @kind this) @signature `Lorg/threeten/bp/temporal/n;.isFixed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L366454.  v0:= v5.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L366458.  v2:= v5.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L36645c.  v4:= lcmp(v0, v2);
  #L366460.  if v4 != 0 then goto L366478;
  #L366464.  v0:= v5.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L366468.  v2:= v5.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L36646c.  v4:= lcmp(v0, v2);
  #L366470.  if v4 != 0 then goto L366478;
  #L366474.  v0:= 1I;
  #L366476.  goto L36647a;
  #L366478.  v0:= 0I;
  #L36647a.  return v0;
}
procedure `boolean` `isIntValue`(`org.threeten.bp.temporal.n` v5 @kind this) @signature `Lorg/threeten/bp/temporal/n;.isIntValue:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36648c.  call temp:= `getMinimum`(v5) @signature `Lorg/threeten/bp/temporal/n;.getMinimum:()J` @kind virtual;
  #L366492.  v0:= temp @kind wide;
  #L366494.  v2:= -2147483648L;
  #L36649a.  v4:= lcmp(v0, v2);
  #L36649e.  if v4 < 0 then goto L3664bc;
  #L3664a2.  call temp:= `getMaximum`(v5) @signature `Lorg/threeten/bp/temporal/n;.getMaximum:()J` @kind virtual;
  #L3664a8.  v0:= temp @kind wide;
  #L3664aa.  v2:= 2147483647L;
  #L3664b0.  v4:= lcmp(v0, v2);
  #L3664b4.  if v4 > 0 then goto L3664bc;
  #L3664b8.  v0:= 1I;
  #L3664ba.  goto L3664be;
  #L3664bc.  v0:= 0I;
  #L3664be.  return v0;
}
procedure `boolean` `isValidIntValue`(`org.threeten.bp.temporal.n` v1 @kind this, `long` v2 ) @signature `Lorg/threeten/bp/temporal/n;.isValidIntValue:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3664d0.  call temp:= `isIntValue`(v1) @signature `Lorg/threeten/bp/temporal/n;.isIntValue:()Z` @kind virtual;
  #L3664d6.  v0:= temp;
  #L3664d8.  if v0 == 0 then goto L3664ec;
  #L3664dc.  call temp:= `isValidValue`(v1, v2) @signature `Lorg/threeten/bp/temporal/n;.isValidValue:(J)Z` @kind virtual;
  #L3664e2.  v2:= temp;
  #L3664e4.  if v2 == 0 then goto L3664ec;
  #L3664e8.  v2:= 1I;
  #L3664ea.  goto L3664ee;
  #L3664ec.  v2:= 0I;
  #L3664ee.  return v2;
}
procedure `boolean` `isValidValue`(`org.threeten.bp.temporal.n` v3 @kind this, `long` v4 ) @signature `Lorg/threeten/bp/temporal/n;.isValidValue:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L366500.  call temp:= `getMinimum`(v3) @signature `Lorg/threeten/bp/temporal/n;.getMinimum:()J` @kind virtual;
  #L366506.  v0:= temp @kind wide;
  #L366508.  v2:= lcmp(v4, v0);
  #L36650c.  if v2 < 0 then goto L366524;
  #L366510.  call temp:= `getMaximum`(v3) @signature `Lorg/threeten/bp/temporal/n;.getMaximum:()J` @kind virtual;
  #L366516.  v0:= temp @kind wide;
  #L366518.  v2:= lcmp(v4, v0);
  #L36651c.  if v2 > 0 then goto L366524;
  #L366520.  v4:= 1I;
  #L366522.  goto L366526;
  #L366524.  v4:= 0I;
  #L366526.  return v4;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.temporal.n` v7 @kind this) @signature `Lorg/threeten/bp/temporal/n;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3665fc.  v0:= new `java.lang.StringBuilder`;
  #L366600.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366606.  v1:= v7.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L36660a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L366610.  v1:= v7.`org.threeten.bp.temporal.n.minSmallest` @type ^`long` @kind wide;
  #L366614.  v3:= v7.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L366618.  v5:= 47I;
  #L36661c.  v6:= lcmp(v1, v3);
  #L366620.  if v6 == 0 then goto L366634;
  #L366624.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36662a.  v1:= v7.`org.threeten.bp.temporal.n.minLargest` @type ^`long` @kind wide;
  #L36662e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L366634.  v1:= " - " @kind object;
  #L366638.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36663e.  v1:= v7.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L366642.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L366648.  v1:= v7.`org.threeten.bp.temporal.n.maxSmallest` @type ^`long` @kind wide;
  #L36664c.  v3:= v7.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L366650.  v6:= lcmp(v1, v3);
  #L366654.  if v6 == 0 then goto L366668;
  #L366658.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L36665e.  v1:= v7.`org.threeten.bp.temporal.n.maxLargest` @type ^`long` @kind wide;
  #L366662.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L366668.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L36666e.  v0:= temp @kind object;
  #L366670.  return v0 @kind object;
}
