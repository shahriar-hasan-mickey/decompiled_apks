record `org.threeten.bp.zone.f$a` @kind class @AccessFlag FINAL extends `org.threeten.bp.zone.f` @kind class, `java.io.Serializable` @kind interface {
  `org.threeten.bp.r` `org.threeten.bp.zone.f$a.offset` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.zone.f$a.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.r` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.<init>:(Lorg/threeten/bp/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L368ef8.  call `<init>`(v0) @signature `Lorg/threeten/bp/zone/f;.<init>:()V` @kind direct;
  #L368efe.  v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` := v1 @kind object;
  #L368f02.  return @kind void;
}
procedure `boolean` `equals`(`org.threeten.bp.zone.f$a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L368cd0.  v0:= 1I;
  #L368cd2.  if v4 != v5 then goto L368cd8;
  #L368cd6.  return v0;
  #L368cd8.  v1:= instanceof @variable v5 @type ^`org.threeten.bp.zone.f$a` @kind boolean;
  #L368cdc.  if v1 == 0 then goto L368cf6;
  #L368ce0.  v0:= v4.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368ce4.  v5:= (`org.threeten.bp.zone.f$a`) v5 @kind object;
  #L368ce8.  v5:= v5.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368cec.  call temp:= `equals`(v0, v5) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368cf2.  v5:= temp;
  #L368cf4.  return v5;
  #L368cf6.  v1:= instanceof @variable v5 @type ^`org.threeten.bp.zone.b` @kind boolean;
  #L368cfa.  v2:= 0I;
  #L368cfc.  if v1 == 0 then goto L368d32;
  #L368d00.  v5:= (`org.threeten.bp.zone.b`) v5 @kind object;
  #L368d04.  call temp:= `isFixedOffset`(v5) @signature `Lorg/threeten/bp/zone/b;.isFixedOffset:()Z` @kind virtual;
  #L368d0a.  v1:= temp;
  #L368d0c.  if v1 == 0 then goto L368d2e;
  #L368d10.  v1:= v4.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368d14.  v3:= `@@org.threeten.bp.e.EPOCH` @type ^`org.threeten.bp.e` @kind object;
  #L368d18.  call temp:= `getOffset`(v5, v3) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L368d1e.  v5:= temp @kind object;
  #L368d20.  call temp:= `equals`(v1, v5) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368d26.  v5:= temp;
  #L368d28.  if v5 == 0 then goto L368d2e;
  #L368d2c.  goto L368d30;
  #L368d2e.  v0:= 0I;
  #L368d30.  return v0;
  #L368d32.  return v2;
}
procedure `org.threeten.bp.d` `getDaylightSavings`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getDaylightSavings:(Lorg/threeten/bp/e;)Lorg/threeten/bp/d;` @AccessFlag PUBLIC {
    temp;

  #L368e5c.  v1:= `@@org.threeten.bp.d.ZERO` @type ^`org.threeten.bp.d` @kind object;
  #L368e60.  return v1 @kind object;
}
procedure `org.threeten.bp.r` `getOffset`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;

  #L368e74.  v1:= v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368e78.  return v1 @kind object;
}
procedure `org.threeten.bp.r` `getOffset`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.g` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getOffset:(Lorg/threeten/bp/g;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;

  #L368e8c.  v1:= v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368e90.  return v1 @kind object;
}
procedure `org.threeten.bp.r` `getStandardOffset`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getStandardOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;

  #L368ea4.  v1:= v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368ea8.  return v1 @kind object;
}
procedure `org.threeten.bp.zone.d` `getTransition`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.g` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getTransition:(Lorg/threeten/bp/g;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;

  #L368ebc.  v1:= 0I;
  #L368ebe.  return v1 @kind object;
}
procedure `java.util.List` `getTransitionRules`(`org.threeten.bp.zone.f$a` v1 @kind this) @signature `Lorg/threeten/bp/zone/f$a;.getTransitionRules:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368e04.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L368e0a.  v0:= temp @kind object;
  #L368e0c.  return v0 @kind object;
}
procedure `java.util.List` `getTransitions`(`org.threeten.bp.zone.f$a` v1 @kind this) @signature `Lorg/threeten/bp/zone/f$a;.getTransitions:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368e20.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L368e26.  v0:= temp @kind object;
  #L368e28.  return v0 @kind object;
}
procedure `java.util.List` `getValidOffsets`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.g` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.getValidOffsets:(Lorg/threeten/bp/g;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;

  #L368e3c.  v1:= v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368e40.  call temp:= `singletonList`(v1) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L368e46.  v1:= temp @kind object;
  #L368e48.  return v1 @kind object;
}
procedure `int` `hashCode`(`org.threeten.bp.zone.f$a` v2 @kind this) @signature `Lorg/threeten/bp/zone/f$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368d8c.  v0:= v2.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368d90.  call temp:= `hashCode`(v0) @signature `Lorg/threeten/bp/r;.hashCode:()I` @kind virtual;
  #L368d96.  v0:= temp;
  #L368d98.  v0:= v0 + 31;
  #L368d9c.  v0:= v0 ^~ 1;
  #L368da0.  v0:= v0 ^~ 1;
  #L368da4.  v1:= v2.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368da8.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/r;.hashCode:()I` @kind virtual;
  #L368dae.  v1:= temp;
  #L368db0.  v1:= v1 + 31;
  #L368db4.  v0:= v0 ^~ v1 @kind int;
  #L368db6.  v0:= v0 ^~ 1;
  #L368dba.  return v0;
}
procedure `boolean` `isDaylightSavings`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.isDaylightSavings:(Lorg/threeten/bp/e;)Z` @AccessFlag PUBLIC {
    temp;

  #L368d44.  v1:= 0I;
  #L368d46.  return v1;
}
procedure `boolean` `isFixedOffset`(`org.threeten.bp.zone.f$a` v1 @kind this) @signature `Lorg/threeten/bp/zone/f$a;.isFixedOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368d58.  v0:= 1I;
  #L368d5a.  return v0;
}
procedure `boolean` `isValidOffset`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.g` v1 @kind object, `org.threeten.bp.r` v2 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.isValidOffset:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;)Z` @AccessFlag PUBLIC {
    temp;

  #L368d6c.  v1:= v0.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368d70.  call temp:= `equals`(v1, v2) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368d76.  v1:= temp;
  #L368d78.  return v1;
}
procedure `org.threeten.bp.zone.d` `nextTransition`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.nextTransition:(Lorg/threeten/bp/e;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;

  #L368ed0.  v1:= 0I;
  #L368ed2.  return v1 @kind object;
}
procedure `org.threeten.bp.zone.d` `previousTransition`(`org.threeten.bp.zone.f$a` v0 @kind this, `org.threeten.bp.e` v1 @kind object) @signature `Lorg/threeten/bp/zone/f$a;.previousTransition:(Lorg/threeten/bp/e;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;

  #L368ee4.  v1:= 0I;
  #L368ee6.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.zone.f$a` v2 @kind this) @signature `Lorg/threeten/bp/zone/f$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368dcc.  v0:= new `java.lang.StringBuilder`;
  #L368dd0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L368dd6.  v1:= "FixedRules:" @kind object;
  #L368dda.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368de0.  v1:= v2.`org.threeten.bp.zone.f$a.offset` @type ^`org.threeten.bp.r` @kind object;
  #L368de4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368dea.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L368df0.  v0:= temp @kind object;
  #L368df2.  return v0 @kind object;
}
