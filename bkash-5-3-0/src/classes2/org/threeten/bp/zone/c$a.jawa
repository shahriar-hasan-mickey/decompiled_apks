record `org.threeten.bp.zone.c$a` @kind class @AccessFlag  {
  `java.lang.String` `org.threeten.bp.zone.c$a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.String`[] `org.threeten.bp.zone.c$a.b` @AccessFlag PRIVATE_FINAL;
  `short`[] `org.threeten.bp.zone.c$a.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `org.threeten.bp.zone.c$a.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.threeten.bp.zone.c$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object, `short`[] v3 @kind object, `java.util.concurrent.atomic.AtomicReferenceArray` v4 @kind object) @signature `Lorg/threeten/bp/zone/c$a;.<init>:(Ljava/lang/String;[Ljava/lang/String;[SLjava/util/concurrent/atomic/AtomicReferenceArray;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3679ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3679b2.  v0.`org.threeten.bp.zone.c$a.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` := v4 @kind object;
  #L3679b6.  v0.`org.threeten.bp.zone.c$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L3679ba.  v0.`org.threeten.bp.zone.c$a.b` @type ^`java.lang.String`[] := v2 @kind object;
  #L3679be.  v0.`org.threeten.bp.zone.c$a.c` @type ^`short`[] := v3 @kind object;
  #L3679c2.  return @kind void;
}
procedure `java.lang.String` `a`(`org.threeten.bp.zone.c$a` v0 @kind object) @signature `Lorg/threeten/bp/zone/c$a;.a:(Lorg/threeten/bp/zone/c$a;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L36789c.  v0:= v0.`org.threeten.bp.zone.c$a.a` @type ^`java.lang.String` @kind object;
  #L3678a0.  return v0 @kind object;
}
procedure `org.threeten.bp.zone.f` `b`(`org.threeten.bp.zone.c$a` v3 @kind this, `short` v4 ) @signature `Lorg/threeten/bp/zone/c$a;.b:(S)Lorg/threeten/bp/zone/f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3678cc.  v0:= v3.`org.threeten.bp.zone.c$a.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L3678d0.  call temp:= `get`(v0, v4) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L3678d6.  v0:= temp @kind object;
  #L3678d8.  v1:= instanceof @variable v0 @type ^`byte`[] @kind boolean;
  #L3678dc.  if v1 == 0 then goto L36790a;
  #L3678e0.  v0:= (`byte`[]) v0 @kind object;
  #L3678e4.  v1:= new `java.io.DataInputStream`;
  #L3678e8.  v2:= new `java.io.ByteArrayInputStream`;
  #L3678ec.  call `<init>`(v2, v0) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L3678f2.  call `<init>`(v1, v2) @signature `Ljava/io/DataInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3678f8.  call temp:= `read`(v1) @signature `Lorg/threeten/bp/zone/a;.read:(Ljava/io/DataInput;)Ljava/lang/Object;` @kind static;
  #L3678fe.  v0:= temp @kind object;
  #L367900.  v1:= v3.`org.threeten.bp.zone.c$a.d` @type ^`java.util.concurrent.atomic.AtomicReferenceArray` @kind object;
  #L367904.  call `set`(v1, v4, v0) @signature `Ljava/util/concurrent/atomic/AtomicReferenceArray;.set:(ILjava/lang/Object;)V` @kind virtual;
  #L36790a.  v0:= (`org.threeten.bp.zone.f`) v0 @kind object;
  #L36790e.  return v0 @kind object;
}
procedure `org.threeten.bp.zone.f` `c`(`org.threeten.bp.zone.c$a` v4 @kind this, `java.lang.String` v5 @kind object) @signature `Lorg/threeten/bp/zone/c$a;.c:(Ljava/lang/String;)Lorg/threeten/bp/zone/f;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L367920.  v0:= v4.`org.threeten.bp.zone.c$a.b` @type ^`java.lang.String`[] @kind object;
  #L367924.  call temp:= `binarySearch`(v0, v5) @signature `Ljava/util/Arrays;.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L36792a.  v0:= temp;
  #L36792c.  if v0 >= 0 then goto L367934;
  #L367930.  v5:= 0I;
  #L367932.  return v5 @kind object;
  #L367934.  v1:= v4.`org.threeten.bp.zone.c$a.c` @type ^`short`[] @kind object;
  #L367938.  v0:= v1[v0] @kind short;
  #L36793c.  call temp:= `b`(v4, v0) @signature `Lorg/threeten/bp/zone/c$a;.b:(S)Lorg/threeten/bp/zone/f;` @kind virtual;
  #L367942.  v5:= temp @kind object;
  #L367944.  return v5 @kind object;
  #L367946.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L367948.  v1:= new `org.threeten.bp.zone.g`;
  #L36794c.  v2:= new `java.lang.StringBuilder`;
  #L367950.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L367956.  v3:= "Invalid binary time-zone data: TZDB:" @kind object;
  #L36795a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367960.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367966.  v5:= ", version: " @kind object;
  #L36796a.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L367970.  v5:= v4.`org.threeten.bp.zone.c$a.a` @type ^`java.lang.String` @kind object;
  #L367974.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L36797a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L367980.  v5:= temp @kind object;
  #L367982.  call `<init>`(v1, v5, v0) @signature `Lorg/threeten/bp/zone/g;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L367988.  throw v1;
  catch `java.lang.Exception` @[L367934..L367944] goto L367946;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.zone.c$a` v1 @kind this) @signature `Lorg/threeten/bp/zone/c$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3678b4.  v0:= v1.`org.threeten.bp.zone.c$a.a` @type ^`java.lang.String` @kind object;
  #L3678b8.  return v0 @kind object;
}
