record `org.threeten.bp.zone.d` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Comparable` @kind interface, `java.io.Serializable` @kind interface {
  `org.threeten.bp.r` `org.threeten.bp.zone.d.offsetAfter` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.r` `org.threeten.bp.zone.d.offsetBefore` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.g` `org.threeten.bp.zone.d.transition` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.zone.d.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.zone.d` v1 @kind this, `long` v2 , `org.threeten.bp.r` v4 @kind object, `org.threeten.bp.r` v5 @kind object) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L368c48.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L368c4e.  v0:= 0I;
  #L368c50.  call temp:= `ofEpochSecond`(v2, v0, v4) @signature `Lorg/threeten/bp/g;.ofEpochSecond:(JILorg/threeten/bp/r;)Lorg/threeten/bp/g;` @kind static;
  #L368c56.  v2:= temp @kind object;
  #L368c58.  v1.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` := v2 @kind object;
  #L368c5c.  v1.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` := v4 @kind object;
  #L368c60.  v1.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` := v5 @kind object;
  #L368c64.  return @kind void;
}
procedure `void` `<init>`(`org.threeten.bp.zone.d` v0 @kind this, `org.threeten.bp.g` v1 @kind object, `org.threeten.bp.r` v2 @kind object, `org.threeten.bp.r` v3 @kind object) @signature `Lorg/threeten/bp/zone/d;.<init>:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L368c78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L368c7e.  v0.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` := v1 @kind object;
  #L368c82.  v0.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` := v2 @kind object;
  #L368c86.  v0.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` := v3 @kind object;
  #L368c8a.  return @kind void;
}
procedure `int` `a`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.a:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L368930.  call temp:= `getOffsetAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L368936.  v0:= temp @kind object;
  #L368938.  call temp:= `getTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36893e.  v0:= temp;
  #L368940.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L368946.  v1:= temp @kind object;
  #L368948.  call temp:= `getTotalSeconds`(v1) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36894e.  v1:= temp;
  #L368950.  v0:= v0 - v1 @kind int;
  #L368952.  return v0;
}
procedure `org.threeten.bp.zone.d` `of`(`org.threeten.bp.g` v1 @kind object, `org.threeten.bp.r` v2 @kind object, `org.threeten.bp.r` v3 @kind object) @signature `Lorg/threeten/bp/zone/d;.of:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;Lorg/threeten/bp/r;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L368b84.  v0:= "transition" @kind object;
  #L368b88.  call temp:= `i`(v1, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L368b8e.  v0:= "offsetBefore" @kind object;
  #L368b92.  call temp:= `i`(v2, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L368b98.  v0:= "offsetAfter" @kind object;
  #L368b9c.  call temp:= `i`(v3, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L368ba2.  call temp:= `equals`(v2, v3) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368ba8.  v0:= temp;
  #L368baa.  if v0 != 0 then goto L368bd6;
  #L368bae.  call temp:= `getNano`(v1) @signature `Lorg/threeten/bp/g;.getNano:()I` @kind virtual;
  #L368bb4.  v0:= temp;
  #L368bb6.  if v0 != 0 then goto L368bc6;
  #L368bba.  v0:= new `org.threeten.bp.zone.d`;
  #L368bbe.  call `<init>`(v0, v1, v2, v3) @signature `Lorg/threeten/bp/zone/d;.<init>:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L368bc4.  return v0 @kind object;
  #L368bc6.  v1:= new `java.lang.IllegalArgumentException`;
  #L368bca.  v2:= "Nano-of-second must be zero" @kind object;
  #L368bce.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L368bd4.  throw v1;
  #L368bd6.  v1:= new `java.lang.IllegalArgumentException`;
  #L368bda.  v2:= "Offsets must not be equal" @kind object;
  #L368bde.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L368be4.  throw v1;
}
procedure `org.threeten.bp.zone.d` `readExternal`(`java.io.DataInput` v4 @kind object) @signature `Lorg/threeten/bp/zone/d;.readExternal:(Ljava/io/DataInput;)Lorg/threeten/bp/zone/d;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L368bf8.  call temp:= `readEpochSec`(v4) @signature `Lorg/threeten/bp/zone/a;.readEpochSec:(Ljava/io/DataInput;)J` @kind static;
  #L368bfe.  v0:= temp @kind wide;
  #L368c00.  call temp:= `readOffset`(v4) @signature `Lorg/threeten/bp/zone/a;.readOffset:(Ljava/io/DataInput;)Lorg/threeten/bp/r;` @kind static;
  #L368c06.  v2:= temp @kind object;
  #L368c08.  call temp:= `readOffset`(v4) @signature `Lorg/threeten/bp/zone/a;.readOffset:(Ljava/io/DataInput;)Lorg/threeten/bp/r;` @kind static;
  #L368c0e.  v4:= temp @kind object;
  #L368c10.  call temp:= `equals`(v2, v4) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368c16.  v3:= temp;
  #L368c18.  if v3 != 0 then goto L368c28;
  #L368c1c.  v3:= new `org.threeten.bp.zone.d`;
  #L368c20.  call `<init>`(v3, v0, v2, v4) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L368c26.  return v3 @kind object;
  #L368c28.  v4:= new `java.lang.IllegalArgumentException`;
  #L368c2c.  v0:= "Offsets must not be equal" @kind object;
  #L368c30.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L368c36.  throw v4;
}
procedure `java.lang.Object` `writeReplace`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3689ac.  v0:= new `org.threeten.bp.zone.a`;
  #L3689b0.  v1:= 2I;
  #L3689b2.  call `<init>`(v0, v1, v2) @signature `Lorg/threeten/bp/zone/a;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L3689b8.  return v0 @kind object;
}
procedure `int` `compareTo`(`org.threeten.bp.zone.d` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/threeten/bp/zone/d;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3688e4.  v1:= (`org.threeten.bp.zone.d`) v1 @kind object;
  #L3688e8.  call temp:= `compareTo`(v0, v1) @signature `Lorg/threeten/bp/zone/d;.compareTo:(Lorg/threeten/bp/zone/d;)I` @kind virtual;
  #L3688ee.  v1:= temp;
  #L3688f0.  return v1;
}
procedure `int` `compareTo`(`org.threeten.bp.zone.d` v1 @kind this, `org.threeten.bp.zone.d` v2 @kind object) @signature `Lorg/threeten/bp/zone/d;.compareTo:(Lorg/threeten/bp/zone/d;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368904.  call temp:= `getInstant`(v1) @signature `Lorg/threeten/bp/zone/d;.getInstant:()Lorg/threeten/bp/e;` @kind virtual;
  #L36890a.  v0:= temp @kind object;
  #L36890c.  call temp:= `getInstant`(v2) @signature `Lorg/threeten/bp/zone/d;.getInstant:()Lorg/threeten/bp/e;` @kind virtual;
  #L368912.  v2:= temp @kind object;
  #L368914.  call temp:= `compareTo`(v0, v2) @signature `Lorg/threeten/bp/e;.compareTo:(Lorg/threeten/bp/e;)I` @kind virtual;
  #L36891a.  v2:= temp;
  #L36891c.  return v2;
}
procedure `boolean` `equals`(`org.threeten.bp.zone.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/threeten/bp/zone/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3687b4.  v0:= 1I;
  #L3687b6.  if v5 != v4 then goto L3687bc;
  #L3687ba.  return v0;
  #L3687bc.  v1:= instanceof @variable v5 @type ^`org.threeten.bp.zone.d` @kind boolean;
  #L3687c0.  v2:= 0I;
  #L3687c2.  if v1 == 0 then goto L36880c;
  #L3687c6.  v5:= (`org.threeten.bp.zone.d`) v5 @kind object;
  #L3687ca.  v1:= v4.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L3687ce.  v3:= v5.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L3687d2.  call temp:= `equals`(v1, v3) @signature `Lorg/threeten/bp/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3687d8.  v1:= temp;
  #L3687da.  if v1 == 0 then goto L368808;
  #L3687de.  v1:= v4.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L3687e2.  v3:= v5.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L3687e6.  call temp:= `equals`(v1, v3) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3687ec.  v1:= temp;
  #L3687ee.  if v1 == 0 then goto L368808;
  #L3687f2.  v1:= v4.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L3687f6.  v5:= v5.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L3687fa.  call temp:= `equals`(v1, v5) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L368800.  v5:= temp;
  #L368802.  if v5 == 0 then goto L368808;
  #L368806.  goto L36880a;
  #L368808.  v0:= 0I;
  #L36880a.  return v0;
  #L36880c.  return v2;
}
procedure `org.threeten.bp.g` `getDateTimeAfter`(`org.threeten.bp.zone.d` v3 @kind this) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L368b14.  v0:= v3.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368b18.  call temp:= `a`(v3) @signature `Lorg/threeten/bp/zone/d;.a:()I` @kind direct;
  #L368b1e.  v1:= temp;
  #L368b20.  v1:= (`long`) v1 @kind i2l;
  #L368b22.  call temp:= `plusSeconds`(v0, v1) @signature `Lorg/threeten/bp/g;.plusSeconds:(J)Lorg/threeten/bp/g;` @kind virtual;
  #L368b28.  v0:= temp @kind object;
  #L368b2a.  return v0 @kind object;
}
procedure `org.threeten.bp.g` `getDateTimeBefore`(`org.threeten.bp.zone.d` v1 @kind this) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368b3c.  v0:= v1.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368b40.  return v0 @kind object;
}
procedure `org.threeten.bp.d` `getDuration`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.getDuration:()Lorg/threeten/bp/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368acc.  call temp:= `a`(v2) @signature `Lorg/threeten/bp/zone/d;.a:()I` @kind direct;
  #L368ad2.  v0:= temp;
  #L368ad4.  v0:= (`long`) v0 @kind i2l;
  #L368ad6.  call temp:= `ofSeconds`(v0) @signature `Lorg/threeten/bp/d;.ofSeconds:(J)Lorg/threeten/bp/d;` @kind static;
  #L368adc.  v0:= temp @kind object;
  #L368ade.  return v0 @kind object;
}
procedure `org.threeten.bp.e` `getInstant`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.getInstant:()Lorg/threeten/bp/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368af0.  v0:= v2.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368af4.  v1:= v2.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368af8.  call temp:= `toInstant`(v0, v1) @signature `Lorg/threeten/bp/chrono/c;.toInstant:(Lorg/threeten/bp/r;)Lorg/threeten/bp/e;` @kind virtual;
  #L368afe.  v0:= temp @kind object;
  #L368b00.  return v0 @kind object;
}
procedure `org.threeten.bp.r` `getOffsetAfter`(`org.threeten.bp.zone.d` v1 @kind this) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368b54.  v0:= v1.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L368b58.  return v0 @kind object;
}
procedure `org.threeten.bp.r` `getOffsetBefore`(`org.threeten.bp.zone.d` v1 @kind this) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L368b6c.  v0:= v1.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368b70.  return v0 @kind object;
}
procedure `java.util.List` `getValidOffsets`(`org.threeten.bp.zone.d` v3 @kind this) @signature `Lorg/threeten/bp/zone/d;.getValidOffsets:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L368a54.  call temp:= `isGap`(v3) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L368a5a.  v0:= temp;
  #L368a5c.  if v0 == 0 then goto L368a6a;
  #L368a60.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L368a66.  v0:= temp @kind object;
  #L368a68.  return v0 @kind object;
  #L368a6a.  v0:= 2I;
  #L368a6c.  v0:= new `org.threeten.bp.r`[v0];
  #L368a70.  v1:= 0I;
  #L368a72.  call temp:= `getOffsetBefore`(v3) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L368a78.  v2:= temp @kind object;
  #L368a7a.  v0[v1]:= v2 @kind object;
  #L368a7e.  v1:= 1I;
  #L368a80.  call temp:= `getOffsetAfter`(v3) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L368a86.  v2:= temp @kind object;
  #L368a88.  v0[v1]:= v2 @kind object;
  #L368a8c.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L368a92.  v0:= temp @kind object;
  #L368a94.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.threeten.bp.zone.d` v3 @kind this) @signature `Lorg/threeten/bp/zone/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L368964.  v0:= v3.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368968.  call temp:= `hashCode`(v0) @signature `Lorg/threeten/bp/g;.hashCode:()I` @kind virtual;
  #L36896e.  v0:= temp;
  #L368970.  v1:= v3.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368974.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/r;.hashCode:()I` @kind virtual;
  #L36897a.  v1:= temp;
  #L36897c.  v0:= v0 ^~ v1 @kind int;
  #L36897e.  v1:= v3.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L368982.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/r;.hashCode:()I` @kind virtual;
  #L368988.  v1:= temp;
  #L36898a.  v2:= 16I;
  #L36898e.  call temp:= `rotateLeft`(v1, v2) @signature `Ljava/lang/Integer;.rotateLeft:(II)I` @kind static;
  #L368994.  v1:= temp;
  #L368996.  v0:= v0 ^~ v1 @kind int;
  #L368998.  return v0;
}
procedure `boolean` `isGap`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368820.  call temp:= `getOffsetAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L368826.  v0:= temp @kind object;
  #L368828.  call temp:= `getTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36882e.  v0:= temp;
  #L368830.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L368836.  v1:= temp @kind object;
  #L368838.  call temp:= `getTotalSeconds`(v1) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36883e.  v1:= temp;
  #L368840.  if v0 <= v1 then goto L368848;
  #L368844.  v0:= 1I;
  #L368846.  goto L36884a;
  #L368848.  v0:= 0I;
  #L36884a.  return v0;
}
procedure `boolean` `isOverlap`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.isOverlap:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36885c.  call temp:= `getOffsetAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L368862.  v0:= temp @kind object;
  #L368864.  call temp:= `getTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36886a.  v0:= temp;
  #L36886c.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L368872.  v1:= temp @kind object;
  #L368874.  call temp:= `getTotalSeconds`(v1) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36887a.  v1:= temp;
  #L36887c.  if v0 >= v1 then goto L368884;
  #L368880.  v0:= 1I;
  #L368882.  goto L368886;
  #L368884.  v0:= 0I;
  #L368886.  return v0;
}
procedure `boolean` `isValidOffset`(`org.threeten.bp.zone.d` v2 @kind this, `org.threeten.bp.r` v3 @kind object) @signature `Lorg/threeten/bp/zone/d;.isValidOffset:(Lorg/threeten/bp/r;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368898.  call temp:= `isGap`(v2) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L36889e.  v0:= temp;
  #L3688a0.  v1:= 0I;
  #L3688a2.  if v0 == 0 then goto L3688a8;
  #L3688a6.  goto L3688d2;
  #L3688a8.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L3688ae.  v0:= temp @kind object;
  #L3688b0.  call temp:= `equals`(v0, v3) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3688b6.  v0:= temp;
  #L3688b8.  if v0 != 0 then goto L3688d0;
  #L3688bc.  call temp:= `getOffsetAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L3688c2.  v0:= temp @kind object;
  #L3688c4.  call temp:= `equals`(v0, v3) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3688ca.  v3:= temp;
  #L3688cc.  if v3 == 0 then goto L3688d2;
  #L3688d0.  v1:= 1I;
  #L3688d2.  return v1;
}
procedure `long` `toEpochSecond`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L368aa8.  v0:= v2.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368aac.  v1:= v2.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368ab0.  call temp:= `toEpochSecond`(v0, v1) @signature `Lorg/threeten/bp/chrono/c;.toEpochSecond:(Lorg/threeten/bp/r;)J` @kind virtual;
  #L368ab6.  v0:= temp @kind wide;
  #L368ab8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.zone.d` v2 @kind this) @signature `Lorg/threeten/bp/zone/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3689cc.  v0:= new `java.lang.StringBuilder`;
  #L3689d0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3689d6.  v1:= "Transition[" @kind object;
  #L3689da.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3689e0.  call temp:= `isGap`(v2) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L3689e6.  v1:= temp;
  #L3689e8.  if v1 == 0 then goto L3689f2;
  #L3689ec.  v1:= "Gap" @kind object;
  #L3689f0.  goto L3689f6;
  #L3689f2.  v1:= "Overlap" @kind object;
  #L3689f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3689fc.  v1:= " at " @kind object;
  #L368a00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a06.  v1:= v2.`org.threeten.bp.zone.d.transition` @type ^`org.threeten.bp.g` @kind object;
  #L368a0a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a10.  v1:= v2.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368a14.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a1a.  v1:= " to " @kind object;
  #L368a1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a24.  v1:= v2.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L368a28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a2e.  v1:= 93I;
  #L368a32.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L368a38.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L368a3e.  v0:= temp @kind object;
  #L368a40.  return v0 @kind object;
}
procedure `void` `writeExternal`(`org.threeten.bp.zone.d` v2 @kind this, `java.io.DataOutput` v3 @kind object) @signature `Lorg/threeten/bp/zone/d;.writeExternal:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L368c9c.  call temp:= `toEpochSecond`(v2) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @kind virtual;
  #L368ca2.  v0:= temp @kind wide;
  #L368ca4.  call `writeEpochSec`(v0, v3) @signature `Lorg/threeten/bp/zone/a;.writeEpochSec:(JLjava/io/DataOutput;)V` @kind static;
  #L368caa.  v0:= v2.`org.threeten.bp.zone.d.offsetBefore` @type ^`org.threeten.bp.r` @kind object;
  #L368cae.  call `writeOffset`(v0, v3) @signature `Lorg/threeten/bp/zone/a;.writeOffset:(Lorg/threeten/bp/r;Ljava/io/DataOutput;)V` @kind static;
  #L368cb4.  v0:= v2.`org.threeten.bp.zone.d.offsetAfter` @type ^`org.threeten.bp.r` @kind object;
  #L368cb8.  call `writeOffset`(v0, v3) @signature `Lorg/threeten/bp/zone/a;.writeOffset:(Lorg/threeten/bp/r;Ljava/io/DataOutput;)V` @kind static;
  #L368cbe.  return @kind void;
}
