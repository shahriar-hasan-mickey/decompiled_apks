record `org.threeten.bp.zone.b` @kind class @AccessFlag FINAL extends `org.threeten.bp.zone.f` @kind class, `java.io.Serializable` @kind interface {
  `org.threeten.bp.zone.e`[] `org.threeten.bp.zone.b.lastRules` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `org.threeten.bp.zone.b.lastRulesCache` @AccessFlag PRIVATE_FINAL;
  `long`[] `org.threeten.bp.zone.b.savingsInstantTransitions` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.g`[] `org.threeten.bp.zone.b.savingsLocalTransitions` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.r`[] `org.threeten.bp.zone.b.standardOffsets` @AccessFlag PRIVATE_FINAL;
  `long`[] `org.threeten.bp.zone.b.standardTransitions` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.r`[] `org.threeten.bp.zone.b.wallOffsets` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.zone.b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.zone.b` v4 @kind this, `org.threeten.bp.r` v5 @kind object, `org.threeten.bp.r` v6 @kind object, `java.util.List` v7 @kind object, `java.util.List` v8 @kind object, `java.util.List` v9 @kind object) @signature `Lorg/threeten/bp/zone/b;.<init>:(Lorg/threeten/bp/r;Lorg/threeten/bp/r;Ljava/util/List;Ljava/util/List;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3675f0.  call `<init>`(v4) @signature `Lorg/threeten/bp/zone/f;.<init>:()V` @kind direct;
  #L3675f6.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L3675fa.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L367600.  v4.`org.threeten.bp.zone.b.lastRulesCache` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L367604.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36760a.  v0:= temp;
  #L36760c.  v0:= new `long`[v0];
  #L367610.  v4.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] := v0 @kind object;
  #L367614.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36761a.  v0:= temp;
  #L36761c.  v0:= v0 + 1;
  #L367620.  v0:= new `org.threeten.bp.r`[v0];
  #L367624.  v4.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] := v0 @kind object;
  #L367628.  v1:= 0I;
  #L36762a.  v0[v1]:= v5 @kind object;
  #L36762e.  v5:= 0I;
  #L367630.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L367636.  v0:= temp;
  #L367638.  if v5 >= v0 then goto L36767c;
  #L36763c.  v0:= v4.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L367640.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L367646.  v2:= temp @kind object;
  #L367648.  v2:= (`org.threeten.bp.zone.d`) v2 @kind object;
  #L36764c.  call temp:= `toEpochSecond`(v2) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @kind virtual;
  #L367652.  v2:= temp @kind wide;
  #L367654.  v0[v5]:= v2 @kind wide;
  #L367658.  v0:= v4.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L36765c.  v2:= v5 + 1;
  #L367660.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L367666.  v5:= temp @kind object;
  #L367668.  v5:= (`org.threeten.bp.zone.d`) v5 @kind object;
  #L36766c.  call temp:= `getOffsetAfter`(v5) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L367672.  v5:= temp @kind object;
  #L367674.  v0[v2]:= v5 @kind object;
  #L367678.  v5:= v2;
  #L36767a.  goto L367630;
  #L36767c.  v5:= new `java.util.ArrayList`;
  #L367680.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L367686.  v7:= new `java.util.ArrayList`;
  #L36768a.  call `<init>`(v7) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L367690.  call temp:= `add`(v7, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L367696.  call temp:= `iterator`(v8) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L36769c.  v6:= temp @kind object;
  #L36769e.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3676a4.  v0:= temp;
  #L3676a6.  if v0 == 0 then goto L36770c;
  #L3676aa.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3676b0.  v0:= temp @kind object;
  #L3676b2.  v0:= (`org.threeten.bp.zone.d`) v0 @kind object;
  #L3676b6.  call temp:= `isGap`(v0) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L3676bc.  v2:= temp;
  #L3676be.  if v2 == 0 then goto L3676e0;
  #L3676c2.  call temp:= `getDateTimeBefore`(v0) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @kind virtual;
  #L3676c8.  v2:= temp @kind object;
  #L3676ca.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3676d0.  call temp:= `getDateTimeAfter`(v0) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L3676d6.  v2:= temp @kind object;
  #L3676d8.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3676de.  goto L3676fc;
  #L3676e0.  call temp:= `getDateTimeAfter`(v0) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L3676e6.  v2:= temp @kind object;
  #L3676e8.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3676ee.  call temp:= `getDateTimeBefore`(v0) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @kind virtual;
  #L3676f4.  v2:= temp @kind object;
  #L3676f6.  call temp:= `add`(v5, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3676fc.  call temp:= `getOffsetAfter`(v0) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L367702.  v0:= temp @kind object;
  #L367704.  call temp:= `add`(v7, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36770a.  goto L36769e;
  #L36770c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L367712.  v6:= temp;
  #L367714.  v6:= new `org.threeten.bp.g`[v6];
  #L367718.  call temp:= `toArray`(v5, v6) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L36771e.  v5:= temp @kind object;
  #L367720.  v5:= (`org.threeten.bp.g`[]) v5 @kind object;
  #L367724.  v4.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] := v5 @kind object;
  #L367728.  call temp:= `size`(v7) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36772e.  v5:= temp;
  #L367730.  v5:= new `org.threeten.bp.r`[v5];
  #L367734.  call temp:= `toArray`(v7, v5) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L36773a.  v5:= temp @kind object;
  #L36773c.  v5:= (`org.threeten.bp.r`[]) v5 @kind object;
  #L367740.  v4.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] := v5 @kind object;
  #L367744.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36774a.  v5:= temp;
  #L36774c.  v5:= new `long`[v5];
  #L367750.  v4.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] := v5 @kind object;
  #L367754.  call temp:= `size`(v8) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36775a.  v5:= temp;
  #L36775c.  if v1 >= v5 then goto L36778a;
  #L367760.  v5:= v4.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L367764.  call temp:= `get`(v8, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36776a.  v6:= temp @kind object;
  #L36776c.  v6:= (`org.threeten.bp.zone.d`) v6 @kind object;
  #L367770.  call temp:= `getInstant`(v6) @signature `Lorg/threeten/bp/zone/d;.getInstant:()Lorg/threeten/bp/e;` @kind virtual;
  #L367776.  v6:= temp @kind object;
  #L367778.  call temp:= `getEpochSecond`(v6) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L36777e.  v6:= temp @kind wide;
  #L367780.  v5[v1]:= v6 @kind wide;
  #L367784.  v1:= v1 + 1;
  #L367788.  goto L367754;
  #L36778a.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L367790.  v5:= temp;
  #L367792.  v6:= 15I;
  #L367796.  if v5 > v6 then goto L3677b8;
  #L36779a.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3677a0.  v5:= temp;
  #L3677a2.  v5:= new `org.threeten.bp.zone.e`[v5];
  #L3677a6.  call temp:= `toArray`(v9, v5) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3677ac.  v5:= temp @kind object;
  #L3677ae.  v5:= (`org.threeten.bp.zone.e`[]) v5 @kind object;
  #L3677b2.  v4.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] := v5 @kind object;
  #L3677b6.  return @kind void;
  #L3677b8.  v5:= new `java.lang.IllegalArgumentException`;
  #L3677bc.  v6:= "Too many transition rules" @kind object;
  #L3677c0.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3677c6.  throw v5;
}
procedure `void` `<init>`(`org.threeten.bp.zone.b` v5 @kind this, `long`[] v6 @kind object, `org.threeten.bp.r`[] v7 @kind object, `long`[] v8 @kind object, `org.threeten.bp.r`[] v9 @kind object, `org.threeten.bp.zone.e`[] v10 @kind object) @signature `Lorg/threeten/bp/zone/b;.<init>:([J[Lorg/threeten/bp/r;[J[Lorg/threeten/bp/r;[Lorg/threeten/bp/zone/e;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L367524.  call `<init>`(v5) @signature `Lorg/threeten/bp/zone/f;.<init>:()V` @kind direct;
  #L36752a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L36752e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L367534.  v5.`org.threeten.bp.zone.b.lastRulesCache` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L367538.  v5.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] := v6 @kind object;
  #L36753c.  v5.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] := v7 @kind object;
  #L367540.  v5.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] := v8 @kind object;
  #L367544.  v5.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] := v9 @kind object;
  #L367548.  v5.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] := v10 @kind object;
  #L36754c.  v6:= new `java.util.ArrayList`;
  #L367550.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L367556.  v7:= 0I;
  #L367558.  v10:= length @variable v8;
  #L36755a.  if v7 >= v10 then goto L3675c2;
  #L36755e.  v10:= v9[v7] @kind object;
  #L367562.  v0:= v7 + 1;
  #L367566.  v1:= v9[v0] @kind object;
  #L36756a.  v2:= new `org.threeten.bp.zone.d`;
  #L36756e.  v3:= v8[v7] @kind wide;
  #L367572.  call `<init>`(v2, v3, v10, v1) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L367578.  call temp:= `isGap`(v2) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L36757e.  v7:= temp;
  #L367580.  if v7 == 0 then goto L3675a2;
  #L367584.  call temp:= `getDateTimeBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @kind virtual;
  #L36758a.  v7:= temp @kind object;
  #L36758c.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L367592.  call temp:= `getDateTimeAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L367598.  v7:= temp @kind object;
  #L36759a.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3675a0.  goto L3675be;
  #L3675a2.  call temp:= `getDateTimeAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L3675a8.  v7:= temp @kind object;
  #L3675aa.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3675b0.  call temp:= `getDateTimeBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @kind virtual;
  #L3675b6.  v7:= temp @kind object;
  #L3675b8.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3675be.  v7:= v0;
  #L3675c0.  goto L367558;
  #L3675c2.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3675c8.  v7:= temp;
  #L3675ca.  v7:= new `org.threeten.bp.g`[v7];
  #L3675ce.  call temp:= `toArray`(v6, v7) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L3675d4.  v6:= temp @kind object;
  #L3675d6.  v6:= (`org.threeten.bp.g`[]) v6 @kind object;
  #L3675da.  v5.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] := v6 @kind object;
  #L3675de.  return @kind void;
}
procedure `java.lang.Object` `a`(`org.threeten.bp.zone.b` v2 @kind this, `org.threeten.bp.g` v3 @kind object, `org.threeten.bp.zone.d` v4 @kind object) @signature `Lorg/threeten/bp/zone/b;.a:(Lorg/threeten/bp/g;Lorg/threeten/bp/zone/d;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L366d64.  call temp:= `getDateTimeBefore`(v4) @signature `Lorg/threeten/bp/zone/d;.getDateTimeBefore:()Lorg/threeten/bp/g;` @kind virtual;
  #L366d6a.  v0:= temp @kind object;
  #L366d6c.  call temp:= `isGap`(v4) @signature `Lorg/threeten/bp/zone/d;.isGap:()Z` @kind virtual;
  #L366d72.  v1:= temp;
  #L366d74.  if v1 == 0 then goto L366dae;
  #L366d78.  call temp:= `isBefore`(v3, v0) @signature `Lorg/threeten/bp/g;.isBefore:(Lorg/threeten/bp/chrono/c;)Z` @kind virtual;
  #L366d7e.  v0:= temp;
  #L366d80.  if v0 == 0 then goto L366d8e;
  #L366d84.  call temp:= `getOffsetBefore`(v4) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L366d8a.  v3:= temp @kind object;
  #L366d8c.  return v3 @kind object;
  #L366d8e.  call temp:= `getDateTimeAfter`(v4) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L366d94.  v0:= temp @kind object;
  #L366d96.  call temp:= `isBefore`(v3, v0) @signature `Lorg/threeten/bp/g;.isBefore:(Lorg/threeten/bp/chrono/c;)Z` @kind virtual;
  #L366d9c.  v3:= temp;
  #L366d9e.  if v3 == 0 then goto L366da4;
  #L366da2.  return v4 @kind object;
  #L366da4.  call temp:= `getOffsetAfter`(v4) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L366daa.  v3:= temp @kind object;
  #L366dac.  return v3 @kind object;
  #L366dae.  call temp:= `isBefore`(v3, v0) @signature `Lorg/threeten/bp/g;.isBefore:(Lorg/threeten/bp/chrono/c;)Z` @kind virtual;
  #L366db4.  v0:= temp;
  #L366db6.  if v0 != 0 then goto L366dc4;
  #L366dba.  call temp:= `getOffsetAfter`(v4) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L366dc0.  v3:= temp @kind object;
  #L366dc2.  return v3 @kind object;
  #L366dc4.  call temp:= `getDateTimeAfter`(v4) @signature `Lorg/threeten/bp/zone/d;.getDateTimeAfter:()Lorg/threeten/bp/g;` @kind virtual;
  #L366dca.  v0:= temp @kind object;
  #L366dcc.  call temp:= `isBefore`(v3, v0) @signature `Lorg/threeten/bp/g;.isBefore:(Lorg/threeten/bp/chrono/c;)Z` @kind virtual;
  #L366dd2.  v3:= temp;
  #L366dd4.  if v3 == 0 then goto L366de2;
  #L366dd8.  call temp:= `getOffsetBefore`(v4) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L366dde.  v3:= temp @kind object;
  #L366de0.  return v3 @kind object;
  #L366de2.  return v4 @kind object;
}
procedure `org.threeten.bp.zone.d`[] `b`(`org.threeten.bp.zone.b` v5 @kind this, `int` v6 ) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3674b8.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3674be.  v0:= temp @kind object;
  #L3674c0.  v1:= v5.`org.threeten.bp.zone.b.lastRulesCache` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L3674c4.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3674ca.  v1:= temp @kind object;
  #L3674cc.  v1:= (`org.threeten.bp.zone.d`[]) v1 @kind object;
  #L3674d0.  if v1 == 0 then goto L3674d6;
  #L3674d4.  return v1 @kind object;
  #L3674d6.  v1:= v5.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L3674da.  v2:= length @variable v1;
  #L3674dc.  v2:= new `org.threeten.bp.zone.d`[v2];
  #L3674e0.  v3:= 0I;
  #L3674e2.  v4:= length @variable v1;
  #L3674e4.  if v3 >= v4 then goto L3674fe;
  #L3674e8.  v4:= v1[v3] @kind object;
  #L3674ec.  call temp:= `createTransition`(v4, v6) @signature `Lorg/threeten/bp/zone/e;.createTransition:(I)Lorg/threeten/bp/zone/d;` @kind virtual;
  #L3674f2.  v4:= temp @kind object;
  #L3674f4.  v2[v3]:= v4 @kind object;
  #L3674f8.  v3:= v3 + 1;
  #L3674fc.  goto L3674e2;
  #L3674fe.  v1:= 2100I;
  #L367502.  if v6 >= v1 then goto L367510;
  #L367506.  v6:= v5.`org.threeten.bp.zone.b.lastRulesCache` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L36750a.  call temp:= `putIfAbsent`(v6, v0, v2) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L367510.  return v2 @kind object;
}
procedure `int` `c`(`org.threeten.bp.zone.b` v2 @kind this, `long` v3 , `org.threeten.bp.r` v5 @kind object) @signature `Lorg/threeten/bp/zone/b;.c:(JLorg/threeten/bp/r;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L366cd0.  call temp:= `getTotalSeconds`(v5) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L366cd6.  v5:= temp;
  #L366cd8.  v0:= (`long`) v5 @kind i2l;
  #L366cda.  v3:= v3 + v0 @kind long;
  #L366cdc.  v0:= 86400L;
  #L366ce2.  call temp:= `e`(v3, v0) @signature `Lte/d;.e:(JJ)J` @kind static;
  #L366ce8.  v3:= temp @kind wide;
  #L366cea.  call temp:= `ofEpochDay`(v3) @signature `Lorg/threeten/bp/f;.ofEpochDay:(J)Lorg/threeten/bp/f;` @kind static;
  #L366cf0.  v3:= temp @kind object;
  #L366cf2.  call temp:= `getYear`(v3) @signature `Lorg/threeten/bp/f;.getYear:()I` @kind virtual;
  #L366cf8.  v3:= temp;
  #L366cfa.  return v3;
}
procedure `java.lang.Object` `d`(`org.threeten.bp.zone.b` v6 @kind this, `org.threeten.bp.g` v7 @kind object) @signature `Lorg/threeten/bp/zone/b;.d:(Lorg/threeten/bp/g;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L366df4.  v0:= v6.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L366df8.  v0:= length @variable v0;
  #L366dfa.  v1:= 0I;
  #L366dfc.  if v0 <= 0 then goto L366e68;
  #L366e00.  v0:= v6.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] @kind object;
  #L366e04.  v2:= length @variable v0;
  #L366e06.  v2:= v2 + -1;
  #L366e0a.  v0:= v0[v2] @kind object;
  #L366e0e.  call temp:= `isAfter`(v7, v0) @signature `Lorg/threeten/bp/g;.isAfter:(Lorg/threeten/bp/chrono/c;)Z` @kind virtual;
  #L366e14.  v0:= temp;
  #L366e16.  if v0 == 0 then goto L366e68;
  #L366e1a.  call temp:= `getYear`(v7) @signature `Lorg/threeten/bp/g;.getYear:()I` @kind virtual;
  #L366e20.  v0:= temp;
  #L366e22.  call temp:= `b`(v6, v0) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L366e28.  v0:= temp @kind object;
  #L366e2a.  v2:= 0I;
  #L366e2c.  v3:= length @variable v0;
  #L366e2e.  if v1 >= v3 then goto L366e66;
  #L366e32.  v2:= v0[v1] @kind object;
  #L366e36.  call temp:= `a`(v6, v7, v2) @signature `Lorg/threeten/bp/zone/b;.a:(Lorg/threeten/bp/g;Lorg/threeten/bp/zone/d;)Ljava/lang/Object;` @kind direct;
  #L366e3c.  v4:= temp @kind object;
  #L366e3e.  v5:= instanceof @variable v4 @type ^`org.threeten.bp.zone.d` @kind boolean;
  #L366e42.  if v5 != 0 then goto L366e64;
  #L366e46.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L366e4c.  v2:= temp @kind object;
  #L366e4e.  call temp:= `equals`(v4, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L366e54.  v2:= temp;
  #L366e56.  if v2 == 0 then goto L366e5c;
  #L366e5a.  goto L366e64;
  #L366e5c.  v1:= v1 + 1;
  #L366e60.  v2:= v4 @kind object;
  #L366e62.  goto L366e2e;
  #L366e64.  return v4 @kind object;
  #L366e66.  return v2 @kind object;
  #L366e68.  v0:= v6.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] @kind object;
  #L366e6c.  call temp:= `binarySearch`(v0, v7) @signature `Ljava/util/Arrays;.binarySearch:([Ljava/lang/Object;Ljava/lang/Object;)I` @kind static;
  #L366e72.  v7:= temp;
  #L366e74.  v0:= -1I;
  #L366e76.  if v7 != v0 then goto L366e84;
  #L366e7a.  v7:= v6.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366e7e.  v7:= v7[v1] @kind object;
  #L366e82.  return v7 @kind object;
  #L366e84.  if v7 >= 0 then goto L366e90;
  #L366e88.  v7:= -v7 @kind int;
  #L366e8a.  v7:= v7 + -2;
  #L366e8e.  goto L366eb8;
  #L366e90.  v0:= v6.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] @kind object;
  #L366e94.  v1:= length @variable v0;
  #L366e96.  v1:= v1 + -1;
  #L366e9a.  if v7 >= v1 then goto L366eb8;
  #L366e9e.  v1:= v0[v7] @kind object;
  #L366ea2.  v2:= v7 + 1;
  #L366ea6.  v0:= v0[v2] @kind object;
  #L366eaa.  call temp:= `equals`(v1, v0) @signature `Lorg/threeten/bp/g;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L366eb0.  v0:= temp;
  #L366eb2.  if v0 == 0 then goto L366eb8;
  #L366eb6.  v7:= v2;
  #L366eb8.  v0:= v7 ^& 1;
  #L366ebc.  if v0 != 0 then goto L366f10;
  #L366ec0.  v0:= v6.`org.threeten.bp.zone.b.savingsLocalTransitions` @type ^`org.threeten.bp.g`[] @kind object;
  #L366ec4.  v1:= v0[v7] @kind object;
  #L366ec8.  v2:= v7 + 1;
  #L366ecc.  v0:= v0[v2] @kind object;
  #L366ed0.  v2:= v6.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366ed4.  v7:= v7 / 2;
  #L366ed8.  v3:= v2[v7] @kind object;
  #L366edc.  v7:= v7 + 1;
  #L366ee0.  v7:= v2[v7] @kind object;
  #L366ee4.  call temp:= `getTotalSeconds`(v7) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L366eea.  v2:= temp;
  #L366eec.  call temp:= `getTotalSeconds`(v3) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L366ef2.  v4:= temp;
  #L366ef4.  if v2 <= v4 then goto L366f04;
  #L366ef8.  v0:= new `org.threeten.bp.zone.d`;
  #L366efc.  call `<init>`(v0, v1, v3, v7) @signature `Lorg/threeten/bp/zone/d;.<init>:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L366f02.  return v0 @kind object;
  #L366f04.  v1:= new `org.threeten.bp.zone.d`;
  #L366f08.  call `<init>`(v1, v0, v3, v7) @signature `Lorg/threeten/bp/zone/d;.<init>:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L366f0e.  return v1 @kind object;
  #L366f10.  v0:= v6.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366f14.  v7:= v7 / 2;
  #L366f18.  v7:= v7 + 1;
  #L366f1c.  v7:= v0[v7] @kind object;
  #L366f20.  return v7 @kind object;
}
procedure `org.threeten.bp.zone.b` `readExternal`(`java.io.DataInput` v8 @kind object) @signature `Lorg/threeten/bp/zone/b;.readExternal:(Ljava/io/DataInput;)Lorg/threeten/bp/zone/b;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3671c0.  call temp:= `readInt`(v8) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L3671c6.  v0:= temp;
  #L3671c8.  v2:= new `long`[v0];
  #L3671cc.  v1:= 0I;
  #L3671ce.  v3:= 0I;
  #L3671d0.  if v3 >= v0 then goto L3671e6;
  #L3671d4.  call temp:= `readEpochSec`(v8) @signature `Lorg/threeten/bp/zone/a;.readEpochSec:(Ljava/io/DataInput;)J` @kind static;
  #L3671da.  v4:= temp @kind wide;
  #L3671dc.  v2[v3]:= v4 @kind wide;
  #L3671e0.  v3:= v3 + 1;
  #L3671e4.  goto L3671d0;
  #L3671e6.  v0:= v0 + 1;
  #L3671ea.  v3:= new `org.threeten.bp.r`[v0];
  #L3671ee.  v4:= 0I;
  #L3671f0.  if v4 >= v0 then goto L367206;
  #L3671f4.  call temp:= `readOffset`(v8) @signature `Lorg/threeten/bp/zone/a;.readOffset:(Ljava/io/DataInput;)Lorg/threeten/bp/r;` @kind static;
  #L3671fa.  v5:= temp @kind object;
  #L3671fc.  v3[v4]:= v5 @kind object;
  #L367200.  v4:= v4 + 1;
  #L367204.  goto L3671f0;
  #L367206.  call temp:= `readInt`(v8) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L36720c.  v0:= temp;
  #L36720e.  v4:= new `long`[v0];
  #L367212.  v5:= 0I;
  #L367214.  if v5 >= v0 then goto L36722a;
  #L367218.  call temp:= `readEpochSec`(v8) @signature `Lorg/threeten/bp/zone/a;.readEpochSec:(Ljava/io/DataInput;)J` @kind static;
  #L36721e.  v6:= temp @kind wide;
  #L367220.  v4[v5]:= v6 @kind wide;
  #L367224.  v5:= v5 + 1;
  #L367228.  goto L367214;
  #L36722a.  v0:= v0 + 1;
  #L36722e.  v5:= new `org.threeten.bp.r`[v0];
  #L367232.  v6:= 0I;
  #L367234.  if v6 >= v0 then goto L36724a;
  #L367238.  call temp:= `readOffset`(v8) @signature `Lorg/threeten/bp/zone/a;.readOffset:(Ljava/io/DataInput;)Lorg/threeten/bp/r;` @kind static;
  #L36723e.  v7:= temp @kind object;
  #L367240.  v5[v6]:= v7 @kind object;
  #L367244.  v6:= v6 + 1;
  #L367248.  goto L367234;
  #L36724a.  call temp:= `readByte`(v8) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L367250.  v0:= temp;
  #L367252.  v6:= new `org.threeten.bp.zone.e`[v0];
  #L367256.  if v1 >= v0 then goto L36726c;
  #L36725a.  call temp:= `readExternal`(v8) @signature `Lorg/threeten/bp/zone/e;.readExternal:(Ljava/io/DataInput;)Lorg/threeten/bp/zone/e;` @kind static;
  #L367260.  v7:= temp @kind object;
  #L367262.  v6[v1]:= v7 @kind object;
  #L367266.  v1:= v1 + 1;
  #L36726a.  goto L367256;
  #L36726c.  v8:= new `org.threeten.bp.zone.b`;
  #L367270.  v1:= v8 @kind object;
  #L367272.  call `<init>`(v1, v2, v3, v4, v5, v6) @signature `Lorg/threeten/bp/zone/b;.<init>:([J[Lorg/threeten/bp/r;[J[Lorg/threeten/bp/r;[Lorg/threeten/bp/zone/e;)V` @kind direct;
  #L367278.  return v8 @kind object;
}
procedure `java.lang.Object` `writeReplace`(`org.threeten.bp.zone.b` v2 @kind this) @signature `Lorg/threeten/bp/zone/b;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L366f34.  v0:= new `org.threeten.bp.zone.a`;
  #L366f38.  v1:= 1I;
  #L366f3a.  call `<init>`(v0, v1, v2) @signature `Lorg/threeten/bp/zone/a;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L366f40.  return v0 @kind object;
}
procedure `boolean` `equals`(`org.threeten.bp.zone.b` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lorg/threeten/bp/zone/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L366b88.  v0:= 1I;
  #L366b8a.  if v4 != v5 then goto L366b90;
  #L366b8e.  return v0;
  #L366b90.  v1:= instanceof @variable v5 @type ^`org.threeten.bp.zone.b` @kind boolean;
  #L366b94.  v2:= 0I;
  #L366b96.  if v1 == 0 then goto L366c08;
  #L366b9a.  v5:= (`org.threeten.bp.zone.b`) v5 @kind object;
  #L366b9e.  v1:= v4.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L366ba2.  v3:= v5.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L366ba6.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L366bac.  v1:= temp;
  #L366bae.  if v1 == 0 then goto L366c04;
  #L366bb2.  v1:= v4.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366bb6.  v3:= v5.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366bba.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L366bc0.  v1:= temp;
  #L366bc2.  if v1 == 0 then goto L366c04;
  #L366bc6.  v1:= v4.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L366bca.  v3:= v5.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L366bce.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([J[J)Z` @kind static;
  #L366bd4.  v1:= temp;
  #L366bd6.  if v1 == 0 then goto L366c04;
  #L366bda.  v1:= v4.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366bde.  v3:= v5.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366be2.  call temp:= `equals`(v1, v3) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L366be8.  v1:= temp;
  #L366bea.  if v1 == 0 then goto L366c04;
  #L366bee.  v1:= v4.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L366bf2.  v5:= v5.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L366bf6.  call temp:= `equals`(v1, v5) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L366bfc.  v5:= temp;
  #L366bfe.  if v5 == 0 then goto L366c04;
  #L366c02.  goto L366c06;
  #L366c04.  v0:= 0I;
  #L366c06.  return v0;
  #L366c08.  v1:= instanceof @variable v5 @type ^`org.threeten.bp.zone.f$a` @kind boolean;
  #L366c0c.  if v1 == 0 then goto L366c46;
  #L366c10.  call temp:= `isFixedOffset`(v4) @signature `Lorg/threeten/bp/zone/b;.isFixedOffset:()Z` @kind virtual;
  #L366c16.  v1:= temp;
  #L366c18.  if v1 == 0 then goto L366c42;
  #L366c1c.  v1:= `@@org.threeten.bp.e.EPOCH` @type ^`org.threeten.bp.e` @kind object;
  #L366c20.  call temp:= `getOffset`(v4, v1) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L366c26.  v3:= temp @kind object;
  #L366c28.  v5:= (`org.threeten.bp.zone.f$a`) v5 @kind object;
  #L366c2c.  call temp:= `getOffset`(v5, v1) @signature `Lorg/threeten/bp/zone/f$a;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L366c32.  v5:= temp @kind object;
  #L366c34.  call temp:= `equals`(v3, v5) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L366c3a.  v5:= temp;
  #L366c3c.  if v5 == 0 then goto L366c42;
  #L366c40.  goto L366c44;
  #L366c42.  v0:= 0I;
  #L366c44.  return v0;
  #L366c46.  return v2;
}
procedure `org.threeten.bp.d` `getDaylightSavings`(`org.threeten.bp.zone.b` v2 @kind this, `org.threeten.bp.e` v3 @kind object) @signature `Lorg/threeten/bp/zone/b;.getDaylightSavings:(Lorg/threeten/bp/e;)Lorg/threeten/bp/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36705c.  call temp:= `getStandardOffset`(v2, v3) @signature `Lorg/threeten/bp/zone/b;.getStandardOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L367062.  v0:= temp @kind object;
  #L367064.  call temp:= `getOffset`(v2, v3) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L36706a.  v3:= temp @kind object;
  #L36706c.  call temp:= `getTotalSeconds`(v3) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L367072.  v3:= temp;
  #L367074.  call temp:= `getTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @kind virtual;
  #L36707a.  v0:= temp;
  #L36707c.  v3:= v3 - v0 @kind int;
  #L36707e.  v0:= (`long`) v3 @kind i2l;
  #L367080.  call temp:= `ofSeconds`(v0) @signature `Lorg/threeten/bp/d;.ofSeconds:(J)Lorg/threeten/bp/d;` @kind static;
  #L367086.  v3:= temp @kind object;
  #L367088.  return v3 @kind object;
}
procedure `org.threeten.bp.r` `getOffset`(`org.threeten.bp.zone.b` v7 @kind this, `org.threeten.bp.e` v8 @kind object) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L36709c.  call temp:= `getEpochSecond`(v8) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L3670a2.  v0:= temp @kind wide;
  #L3670a4.  v8:= v7.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L3670a8.  v8:= length @variable v8;
  #L3670aa.  if v8 <= 0 then goto L36711a;
  #L3670ae.  v8:= v7.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L3670b2.  v2:= length @variable v8;
  #L3670b4.  v2:= v2 + -1;
  #L3670b8.  v2:= v8[v2] @kind wide;
  #L3670bc.  v8:= lcmp(v0, v2);
  #L3670c0.  if v8 <= 0 then goto L36711a;
  #L3670c4.  v8:= v7.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L3670c8.  v2:= length @variable v8;
  #L3670ca.  v2:= v2 + -1;
  #L3670ce.  v8:= v8[v2] @kind object;
  #L3670d2.  call temp:= `c`(v7, v0, v8) @signature `Lorg/threeten/bp/zone/b;.c:(JLorg/threeten/bp/r;)I` @kind direct;
  #L3670d8.  v8:= temp;
  #L3670da.  call temp:= `b`(v7, v8) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L3670e0.  v8:= temp @kind object;
  #L3670e2.  v2:= 0I;
  #L3670e4.  v3:= 0I;
  #L3670e6.  v4:= length @variable v8;
  #L3670e8.  if v3 >= v4 then goto L367110;
  #L3670ec.  v2:= v8[v3] @kind object;
  #L3670f0.  call temp:= `toEpochSecond`(v2) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @kind virtual;
  #L3670f6.  v4:= temp @kind wide;
  #L3670f8.  v6:= lcmp(v0, v4);
  #L3670fc.  if v6 >= 0 then goto L36710a;
  #L367100.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L367106.  v8:= temp @kind object;
  #L367108.  return v8 @kind object;
  #L36710a.  v3:= v3 + 1;
  #L36710e.  goto L3670e6;
  #L367110.  call temp:= `getOffsetAfter`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetAfter:()Lorg/threeten/bp/r;` @kind virtual;
  #L367116.  v8:= temp @kind object;
  #L367118.  return v8 @kind object;
  #L36711a.  v8:= v7.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L36711e.  call temp:= `binarySearch`(v8, v0) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L367124.  v8:= temp;
  #L367126.  if v8 >= 0 then goto L367130;
  #L36712a.  v8:= -v8 @kind int;
  #L36712c.  v8:= v8 + -2;
  #L367130.  v0:= v7.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L367134.  v8:= v8 + 1;
  #L367138.  v8:= v0[v8] @kind object;
  #L36713c.  return v8 @kind object;
}
procedure `org.threeten.bp.r` `getOffset`(`org.threeten.bp.zone.b` v1 @kind this, `org.threeten.bp.g` v2 @kind object) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/g;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L367150.  call temp:= `d`(v1, v2) @signature `Lorg/threeten/bp/zone/b;.d:(Lorg/threeten/bp/g;)Ljava/lang/Object;` @kind direct;
  #L367156.  v2:= temp @kind object;
  #L367158.  v0:= instanceof @variable v2 @type ^`org.threeten.bp.zone.d` @kind boolean;
  #L36715c.  if v0 == 0 then goto L36716e;
  #L367160.  v2:= (`org.threeten.bp.zone.d`) v2 @kind object;
  #L367164.  call temp:= `getOffsetBefore`(v2) @signature `Lorg/threeten/bp/zone/d;.getOffsetBefore:()Lorg/threeten/bp/r;` @kind virtual;
  #L36716a.  v2:= temp @kind object;
  #L36716c.  return v2 @kind object;
  #L36716e.  v2:= (`org.threeten.bp.r`) v2 @kind object;
  #L367172.  return v2 @kind object;
}
procedure `org.threeten.bp.r` `getStandardOffset`(`org.threeten.bp.zone.b` v2 @kind this, `org.threeten.bp.e` v3 @kind object) @signature `Lorg/threeten/bp/zone/b;.getStandardOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L367184.  call temp:= `getEpochSecond`(v3) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L36718a.  v0:= temp @kind wide;
  #L36718c.  v3:= v2.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L367190.  call temp:= `binarySearch`(v3, v0) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L367196.  v3:= temp;
  #L367198.  if v3 >= 0 then goto L3671a2;
  #L36719c.  v3:= -v3 @kind int;
  #L36719e.  v3:= v3 + -2;
  #L3671a2.  v0:= v2.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L3671a6.  v3:= v3 + 1;
  #L3671aa.  v3:= v0[v3] @kind object;
  #L3671ae.  return v3 @kind object;
}
procedure `org.threeten.bp.zone.d` `getTransition`(`org.threeten.bp.zone.b` v1 @kind this, `org.threeten.bp.g` v2 @kind object) @signature `Lorg/threeten/bp/zone/b;.getTransition:(Lorg/threeten/bp/g;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36728c.  call temp:= `d`(v1, v2) @signature `Lorg/threeten/bp/zone/b;.d:(Lorg/threeten/bp/g;)Ljava/lang/Object;` @kind direct;
  #L367292.  v2:= temp @kind object;
  #L367294.  v0:= instanceof @variable v2 @type ^`org.threeten.bp.zone.d` @kind boolean;
  #L367298.  if v0 == 0 then goto L3672a2;
  #L36729c.  v2:= (`org.threeten.bp.zone.d`) v2 @kind object;
  #L3672a0.  goto L3672a4;
  #L3672a2.  v2:= 0I;
  #L3672a4.  return v2 @kind object;
}
procedure `java.util.List` `getTransitionRules`(`org.threeten.bp.zone.b` v1 @kind this) @signature `Lorg/threeten/bp/zone/b;.getTransitionRules:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L366fa0.  v0:= v1.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L366fa4.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L366faa.  v0:= temp @kind object;
  #L366fac.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L366fb2.  v0:= temp @kind object;
  #L366fb4.  return v0 @kind object;
}
procedure `java.util.List` `getTransitions`(`org.threeten.bp.zone.b` v7 @kind this) @signature `Lorg/threeten/bp/zone/b;.getTransitions:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L366fc8.  v0:= new `java.util.ArrayList`;
  #L366fcc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L366fd2.  v1:= 0I;
  #L366fd4.  v2:= v7.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L366fd8.  v3:= length @variable v2;
  #L366fda.  if v1 >= v3 then goto L367004;
  #L366fde.  v3:= new `org.threeten.bp.zone.d`;
  #L366fe2.  v4:= v2[v1] @kind wide;
  #L366fe6.  v2:= v7.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366fea.  v6:= v2[v1] @kind object;
  #L366fee.  v1:= v1 + 1;
  #L366ff2.  v2:= v2[v1] @kind object;
  #L366ff6.  call `<init>`(v3, v4, v6, v2) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L366ffc.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L367002.  goto L366fd4;
  #L367004.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L36700a.  v0:= temp @kind object;
  #L36700c.  return v0 @kind object;
}
procedure `java.util.List` `getValidOffsets`(`org.threeten.bp.zone.b` v1 @kind this, `org.threeten.bp.g` v2 @kind object) @signature `Lorg/threeten/bp/zone/b;.getValidOffsets:(Lorg/threeten/bp/g;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L367020.  call temp:= `d`(v1, v2) @signature `Lorg/threeten/bp/zone/b;.d:(Lorg/threeten/bp/g;)Ljava/lang/Object;` @kind direct;
  #L367026.  v2:= temp @kind object;
  #L367028.  v0:= instanceof @variable v2 @type ^`org.threeten.bp.zone.d` @kind boolean;
  #L36702c.  if v0 == 0 then goto L36703e;
  #L367030.  v2:= (`org.threeten.bp.zone.d`) v2 @kind object;
  #L367034.  call temp:= `getValidOffsets`(v2) @signature `Lorg/threeten/bp/zone/d;.getValidOffsets:()Ljava/util/List;` @kind virtual;
  #L36703a.  v2:= temp @kind object;
  #L36703c.  return v2 @kind object;
  #L36703e.  v2:= (`org.threeten.bp.r`) v2 @kind object;
  #L367042.  call temp:= `singletonList`(v2) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L367048.  v2:= temp @kind object;
  #L36704a.  return v2 @kind object;
}
procedure `int` `hashCode`(`org.threeten.bp.zone.b` v2 @kind this) @signature `Lorg/threeten/bp/zone/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L366d0c.  v0:= v2.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L366d10.  call temp:= `hashCode`(v0) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L366d16.  v0:= temp;
  #L366d18.  v1:= v2.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366d1c.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L366d22.  v1:= temp;
  #L366d24.  v0:= v0 ^~ v1 @kind int;
  #L366d26.  v1:= v2.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L366d2a.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([J)I` @kind static;
  #L366d30.  v1:= temp;
  #L366d32.  v0:= v0 ^~ v1 @kind int;
  #L366d34.  v1:= v2.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366d38.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L366d3e.  v1:= temp;
  #L366d40.  v0:= v0 ^~ v1 @kind int;
  #L366d42.  v1:= v2.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L366d46.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([Ljava/lang/Object;)I` @kind static;
  #L366d4c.  v1:= temp;
  #L366d4e.  v0:= v0 ^~ v1 @kind int;
  #L366d50.  return v0;
}
procedure `boolean` `isDaylightSavings`(`org.threeten.bp.zone.b` v1 @kind this, `org.threeten.bp.e` v2 @kind object) @signature `Lorg/threeten/bp/zone/b;.isDaylightSavings:(Lorg/threeten/bp/e;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L366c58.  call temp:= `getStandardOffset`(v1, v2) @signature `Lorg/threeten/bp/zone/b;.getStandardOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L366c5e.  v0:= temp @kind object;
  #L366c60.  call temp:= `getOffset`(v1, v2) @signature `Lorg/threeten/bp/zone/b;.getOffset:(Lorg/threeten/bp/e;)Lorg/threeten/bp/r;` @kind virtual;
  #L366c66.  v2:= temp @kind object;
  #L366c68.  call temp:= `equals`(v0, v2) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L366c6e.  v2:= temp;
  #L366c70.  v2:= v2 ^~ 1;
  #L366c74.  return v2;
}
procedure `boolean` `isFixedOffset`(`org.threeten.bp.zone.b` v1 @kind this) @signature `Lorg/threeten/bp/zone/b;.isFixedOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L366c88.  v0:= v1.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L366c8c.  v0:= length @variable v0;
  #L366c8e.  if v0 != 0 then goto L366c96;
  #L366c92.  v0:= 1I;
  #L366c94.  goto L366c98;
  #L366c96.  v0:= 0I;
  #L366c98.  return v0;
}
procedure `boolean` `isValidOffset`(`org.threeten.bp.zone.b` v0 @kind this, `org.threeten.bp.g` v1 @kind object, `org.threeten.bp.r` v2 @kind object) @signature `Lorg/threeten/bp/zone/b;.isValidOffset:(Lorg/threeten/bp/g;Lorg/threeten/bp/r;)Z` @AccessFlag PUBLIC {
    temp;

  #L366cac.  call temp:= `getValidOffsets`(v0, v1) @signature `Lorg/threeten/bp/zone/b;.getValidOffsets:(Lorg/threeten/bp/g;)Ljava/util/List;` @kind virtual;
  #L366cb2.  v1:= temp @kind object;
  #L366cb4.  call temp:= `contains`(v1, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L366cba.  v1:= temp;
  #L366cbc.  return v1;
}
procedure `org.threeten.bp.zone.d` `nextTransition`(`org.threeten.bp.zone.b` v11 @kind this, `org.threeten.bp.e` v12 @kind object) @signature `Lorg/threeten/bp/zone/b;.nextTransition:(Lorg/threeten/bp/e;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3672b8.  v0:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L3672bc.  v0:= length @variable v0;
  #L3672be.  v1:= 0I;
  #L3672c0.  if v0 != 0 then goto L3672c6;
  #L3672c4.  return v1 @kind object;
  #L3672c6.  call temp:= `getEpochSecond`(v12) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L3672cc.  v2:= temp @kind wide;
  #L3672ce.  v12:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L3672d2.  v0:= length @variable v12;
  #L3672d4.  v0:= v0 + -1;
  #L3672d8.  v4:= v12[v0] @kind wide;
  #L3672dc.  v0:= lcmp(v2, v4);
  #L3672e0.  if v0 < 0 then goto L367352;
  #L3672e4.  v12:= v11.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L3672e8.  v12:= length @variable v12;
  #L3672ea.  if v12 != 0 then goto L3672f0;
  #L3672ee.  return v1 @kind object;
  #L3672f0.  v12:= v11.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L3672f4.  v0:= length @variable v12;
  #L3672f6.  v0:= v0 + -1;
  #L3672fa.  v12:= v12[v0] @kind object;
  #L3672fe.  call temp:= `c`(v11, v2, v12) @signature `Lorg/threeten/bp/zone/b;.c:(JLorg/threeten/bp/r;)I` @kind direct;
  #L367304.  v12:= temp;
  #L367306.  call temp:= `b`(v11, v12) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L36730c.  v0:= temp @kind object;
  #L36730e.  v4:= length @variable v0;
  #L367310.  v5:= 0I;
  #L367312.  v6:= 0I;
  #L367314.  if v6 >= v4 then goto L367334;
  #L367318.  v7:= v0[v6] @kind object;
  #L36731c.  call temp:= `toEpochSecond`(v7) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @kind virtual;
  #L367322.  v8:= temp @kind wide;
  #L367324.  v10:= lcmp(v2, v8);
  #L367328.  if v10 >= 0 then goto L36732e;
  #L36732c.  return v7 @kind object;
  #L36732e.  v6:= v6 + 1;
  #L367332.  goto L367314;
  #L367334.  v0:= 999999999I;
  #L36733a.  if v12 >= v0 then goto L367350;
  #L36733e.  v12:= v12 + 1;
  #L367342.  call temp:= `b`(v11, v12) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L367348.  v12:= temp @kind object;
  #L36734a.  v12:= v12[v5] @kind object;
  #L36734e.  return v12 @kind object;
  #L367350.  return v1 @kind object;
  #L367352.  call temp:= `binarySearch`(v12, v2) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L367358.  v12:= temp;
  #L36735a.  if v12 >= 0 then goto L367366;
  #L36735e.  v12:= -v12 @kind int;
  #L367360.  v12:= v12 + -1;
  #L367364.  goto L36736a;
  #L367366.  v12:= v12 + 1;
  #L36736a.  v0:= new `org.threeten.bp.zone.d`;
  #L36736e.  v1:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L367372.  v2:= v1[v12] @kind wide;
  #L367376.  v1:= v11.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L36737a.  v4:= v1[v12] @kind object;
  #L36737e.  v12:= v12 + 1;
  #L367382.  v12:= v1[v12] @kind object;
  #L367386.  call `<init>`(v0, v2, v4, v12) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L36738c.  return v0 @kind object;
}
procedure `org.threeten.bp.zone.d` `previousTransition`(`org.threeten.bp.zone.b` v11 @kind this, `org.threeten.bp.e` v12 @kind object) @signature `Lorg/threeten/bp/zone/b;.previousTransition:(Lorg/threeten/bp/e;)Lorg/threeten/bp/zone/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3673a0.  v0:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L3673a4.  v0:= length @variable v0;
  #L3673a6.  v1:= 0I;
  #L3673a8.  if v0 != 0 then goto L3673ae;
  #L3673ac.  return v1 @kind object;
  #L3673ae.  call temp:= `getEpochSecond`(v12) @signature `Lorg/threeten/bp/e;.getEpochSecond:()J` @kind virtual;
  #L3673b4.  v2:= temp @kind wide;
  #L3673b6.  call temp:= `getNano`(v12) @signature `Lorg/threeten/bp/e;.getNano:()I` @kind virtual;
  #L3673bc.  v12:= temp;
  #L3673be.  if v12 <= 0 then goto L3673da;
  #L3673c2.  v4:= 9223372036854775807L;
  #L3673cc.  v12:= lcmp(v2, v4);
  #L3673d0.  if v12 >= 0 then goto L3673da;
  #L3673d4.  v4:= 1L;
  #L3673d8.  v2:= v2 + v4 @kind long;
  #L3673da.  v12:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L3673de.  v0:= length @variable v12;
  #L3673e0.  v0:= v0 + -1;
  #L3673e4.  v4:= v12[v0] @kind wide;
  #L3673e8.  v12:= v11.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L3673ec.  v12:= length @variable v12;
  #L3673ee.  if v12 <= 0 then goto L367466;
  #L3673f2.  v12:= lcmp(v2, v4);
  #L3673f6.  if v12 <= 0 then goto L367466;
  #L3673fa.  v12:= v11.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L3673fe.  v0:= length @variable v12;
  #L367400.  v0:= v0 + -1;
  #L367404.  v12:= v12[v0] @kind object;
  #L367408.  call temp:= `c`(v11, v2, v12) @signature `Lorg/threeten/bp/zone/b;.c:(JLorg/threeten/bp/r;)I` @kind direct;
  #L36740e.  v0:= temp;
  #L367410.  call temp:= `b`(v11, v0) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L367416.  v6:= temp @kind object;
  #L367418.  v7:= length @variable v6;
  #L36741a.  v7:= v7 + -1;
  #L36741e.  if v7 < 0 then goto L367442;
  #L367422.  v8:= v6[v7] @kind object;
  #L367426.  call temp:= `toEpochSecond`(v8) @signature `Lorg/threeten/bp/zone/d;.toEpochSecond:()J` @kind virtual;
  #L36742c.  v8:= temp @kind wide;
  #L36742e.  v10:= lcmp(v2, v8);
  #L367432.  if v10 <= 0 then goto L36743c;
  #L367436.  v12:= v6[v7] @kind object;
  #L36743a.  return v12 @kind object;
  #L36743c.  v7:= v7 + -1;
  #L367440.  goto L36741e;
  #L367442.  call temp:= `c`(v11, v4, v12) @signature `Lorg/threeten/bp/zone/b;.c:(JLorg/threeten/bp/r;)I` @kind direct;
  #L367448.  v12:= temp;
  #L36744a.  v0:= v0 + -1;
  #L36744e.  if v0 <= v12 then goto L367466;
  #L367452.  call temp:= `b`(v11, v0) @signature `Lorg/threeten/bp/zone/b;.b:(I)[Lorg/threeten/bp/zone/d;` @kind direct;
  #L367458.  v12:= temp @kind object;
  #L36745a.  v0:= length @variable v12;
  #L36745c.  v0:= v0 + -1;
  #L367460.  v12:= v12[v0] @kind object;
  #L367464.  return v12 @kind object;
  #L367466.  v12:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L36746a.  call temp:= `binarySearch`(v12, v2) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L367470.  v12:= temp;
  #L367472.  if v12 >= 0 then goto L36747c;
  #L367476.  v12:= -v12 @kind int;
  #L367478.  v12:= v12 + -1;
  #L36747c.  if v12 > 0 then goto L367482;
  #L367480.  return v1 @kind object;
  #L367482.  v0:= new `org.threeten.bp.zone.d`;
  #L367486.  v1:= v11.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L36748a.  v2:= v12 + -1;
  #L36748e.  v3:= v1[v2] @kind wide;
  #L367492.  v1:= v11.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L367496.  v2:= v1[v2] @kind object;
  #L36749a.  v12:= v1[v12] @kind object;
  #L36749e.  call `<init>`(v0, v3, v2, v12) @signature `Lorg/threeten/bp/zone/d;.<init>:(JLorg/threeten/bp/r;Lorg/threeten/bp/r;)V` @kind direct;
  #L3674a4.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.zone.b` v3 @kind this) @signature `Lorg/threeten/bp/zone/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L366f54.  v0:= new `java.lang.StringBuilder`;
  #L366f58.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L366f5e.  v1:= "StandardZoneRules[currentStandardOffset=" @kind object;
  #L366f62.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366f68.  v1:= v3.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L366f6c.  v2:= length @variable v1;
  #L366f6e.  v2:= v2 + -1;
  #L366f72.  v1:= v1[v2] @kind object;
  #L366f76.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366f7c.  v1:= "]" @kind object;
  #L366f80.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L366f86.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L366f8c.  v0:= temp @kind object;
  #L366f8e.  return v0 @kind object;
}
procedure `void` `writeExternal`(`org.threeten.bp.zone.b` v6 @kind this, `java.io.DataOutput` v7 @kind object) @signature `Lorg/threeten/bp/zone/b;.writeExternal:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3677d8.  v0:= v6.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L3677dc.  v0:= length @variable v0;
  #L3677de.  call `writeInt`(v7, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L3677e4.  v0:= v6.`org.threeten.bp.zone.b.standardTransitions` @type ^`long`[] @kind object;
  #L3677e8.  v1:= length @variable v0;
  #L3677ea.  v2:= 0I;
  #L3677ec.  v3:= 0I;
  #L3677ee.  if v3 >= v1 then goto L367802;
  #L3677f2.  v4:= v0[v3] @kind wide;
  #L3677f6.  call `writeEpochSec`(v4, v7) @signature `Lorg/threeten/bp/zone/a;.writeEpochSec:(JLjava/io/DataOutput;)V` @kind static;
  #L3677fc.  v3:= v3 + 1;
  #L367800.  goto L3677ee;
  #L367802.  v0:= v6.`org.threeten.bp.zone.b.standardOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L367806.  v1:= length @variable v0;
  #L367808.  v3:= 0I;
  #L36780a.  if v3 >= v1 then goto L36781e;
  #L36780e.  v4:= v0[v3] @kind object;
  #L367812.  call `writeOffset`(v4, v7) @signature `Lorg/threeten/bp/zone/a;.writeOffset:(Lorg/threeten/bp/r;Ljava/io/DataOutput;)V` @kind static;
  #L367818.  v3:= v3 + 1;
  #L36781c.  goto L36780a;
  #L36781e.  v0:= v6.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L367822.  v0:= length @variable v0;
  #L367824.  call `writeInt`(v7, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L36782a.  v0:= v6.`org.threeten.bp.zone.b.savingsInstantTransitions` @type ^`long`[] @kind object;
  #L36782e.  v1:= length @variable v0;
  #L367830.  v3:= 0I;
  #L367832.  if v3 >= v1 then goto L367846;
  #L367836.  v4:= v0[v3] @kind wide;
  #L36783a.  call `writeEpochSec`(v4, v7) @signature `Lorg/threeten/bp/zone/a;.writeEpochSec:(JLjava/io/DataOutput;)V` @kind static;
  #L367840.  v3:= v3 + 1;
  #L367844.  goto L367832;
  #L367846.  v0:= v6.`org.threeten.bp.zone.b.wallOffsets` @type ^`org.threeten.bp.r`[] @kind object;
  #L36784a.  v1:= length @variable v0;
  #L36784c.  v3:= 0I;
  #L36784e.  if v3 >= v1 then goto L367862;
  #L367852.  v4:= v0[v3] @kind object;
  #L367856.  call `writeOffset`(v4, v7) @signature `Lorg/threeten/bp/zone/a;.writeOffset:(Lorg/threeten/bp/r;Ljava/io/DataOutput;)V` @kind static;
  #L36785c.  v3:= v3 + 1;
  #L367860.  goto L36784e;
  #L367862.  v0:= v6.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L367866.  v0:= length @variable v0;
  #L367868.  call `writeByte`(v7, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L36786e.  v0:= v6.`org.threeten.bp.zone.b.lastRules` @type ^`org.threeten.bp.zone.e`[] @kind object;
  #L367872.  v1:= length @variable v0;
  #L367874.  if v2 >= v1 then goto L367888;
  #L367878.  v3:= v0[v2] @kind object;
  #L36787c.  call `writeExternal`(v3, v7) @signature `Lorg/threeten/bp/zone/e;.writeExternal:(Ljava/io/DataOutput;)V` @kind virtual;
  #L367882.  v2:= v2 + 1;
  #L367886.  goto L367874;
  #L367888.  return @kind void;
}
