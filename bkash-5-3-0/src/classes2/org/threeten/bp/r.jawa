record `org.threeten.bp.r` @kind class @AccessFlag PUBLIC_FINAL extends `org.threeten.bp.q` @kind class, `org.threeten.bp.temporal.e` @kind interface, `org.threeten.bp.temporal.f` @kind interface, `java.lang.Comparable` @kind interface {
  `java.lang.String` `org.threeten.bp.r.g` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `int` `org.threeten.bp.r.totalSeconds` @AccessFlag PRIVATE_FINAL;
}
global `org.threeten.bp.temporal.k` `@@org.threeten.bp.r.FROM` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.threeten.bp.r` `@@org.threeten.bp.r.MAX` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.threeten.bp.r` `@@org.threeten.bp.r.MIN` @AccessFlag PUBLIC_STATIC_FINAL;
global `org.threeten.bp.r` `@@org.threeten.bp.r.UTC` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@org.threeten.bp.r.h` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.ConcurrentMap` `@@org.threeten.bp.r.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@org.threeten.bp.r.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/threeten/bp/r;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34bb24.  v0:= new `org.threeten.bp.r$a`;
  #L34bb28.  call `<init>`(v0) @signature `Lorg/threeten/bp/r$a;.<init>:()V` @kind direct;
  #L34bb2e.  `@@org.threeten.bp.r.FROM` @type ^`org.threeten.bp.temporal.k` := v0 @kind object;
  #L34bb32.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L34bb36.  v1:= 16I;
  #L34bb3a.  v2:= 0.75F;
  #L34bb3e.  v3:= 4I;
  #L34bb40.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L34bb46.  `@@org.threeten.bp.r.h` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L34bb4a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L34bb4e.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:(IFI)V` @kind direct;
  #L34bb54.  `@@org.threeten.bp.r.i` @type ^`java.util.concurrent.ConcurrentMap` := v0 @kind object;
  #L34bb58.  v0:= 0I;
  #L34bb5a.  call temp:= `ofTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34bb60.  v0:= temp @kind object;
  #L34bb62.  `@@org.threeten.bp.r.UTC` @type ^`org.threeten.bp.r` := v0 @kind object;
  #L34bb66.  v0:= -64800I;
  #L34bb6c.  call temp:= `ofTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34bb72.  v0:= temp @kind object;
  #L34bb74.  `@@org.threeten.bp.r.MIN` @type ^`org.threeten.bp.r` := v0 @kind object;
  #L34bb78.  v0:= 64800I;
  #L34bb7e.  call temp:= `ofTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34bb84.  v0:= temp @kind object;
  #L34bb86.  `@@org.threeten.bp.r.MAX` @type ^`org.threeten.bp.r` := v0 @kind object;
  #L34bb8a.  return @kind void;
}
procedure `void` `<init>`(`org.threeten.bp.r` v0 @kind this, `int` v1 ) @signature `Lorg/threeten/bp/r;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L34bb9c.  call `<init>`(v0) @signature `Lorg/threeten/bp/q;.<init>:()V` @kind direct;
  #L34bba2.  v0.`org.threeten.bp.r.totalSeconds` @type ^`int` := v1;
  #L34bba6.  call temp:= `a`(v1) @signature `Lorg/threeten/bp/r;.a:(I)Ljava/lang/String;` @kind static;
  #L34bbac.  v1:= temp @kind object;
  #L34bbae.  v0.`org.threeten.bp.r.g` @type ^`java.lang.String` := v1 @kind object;
  #L34bbb2.  return @kind void;
}
procedure `java.lang.String` `a`(`int` v6 ) @signature `Lorg/threeten/bp/r;.a:(I)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L34b600.  if v6 != 0 then goto L34b60a;
  #L34b604.  v6:= "Z" @kind object;
  #L34b608.  return v6 @kind object;
  #L34b60a.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34b610.  v0:= temp;
  #L34b612.  v1:= new `java.lang.StringBuilder`;
  #L34b616.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b61c.  v2:= v0 / 3600;
  #L34b620.  v3:= v0 / 60;
  #L34b624.  v3:= v3 %% 60;
  #L34b628.  if v6 >= 0 then goto L34b632;
  #L34b62c.  v6:= "-" @kind object;
  #L34b630.  goto L34b636;
  #L34b632.  v6:= "+" @kind object;
  #L34b636.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b63c.  v6:= 10I;
  #L34b640.  if v2 >= v6 then goto L34b64a;
  #L34b644.  v4:= "0" @kind object;
  #L34b648.  goto L34b64e;
  #L34b64a.  v4:= "" @kind object;
  #L34b64e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b654.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b65a.  v2:= ":0" @kind object;
  #L34b65e.  v4:= ":" @kind object;
  #L34b662.  if v3 >= v6 then goto L34b66a;
  #L34b666.  v5:= v2 @kind object;
  #L34b668.  goto L34b66c;
  #L34b66a.  v5:= v4 @kind object;
  #L34b66c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b672.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b678.  v0:= v0 %% 60;
  #L34b67c.  if v0 == 0 then goto L34b694;
  #L34b680.  if v0 >= v6 then goto L34b686;
  #L34b684.  goto L34b688;
  #L34b686.  v2:= v4 @kind object;
  #L34b688.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b68e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b694.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b69a.  v6:= temp @kind object;
  #L34b69c.  return v6 @kind object;
}
procedure `int` `b`(`java.lang.CharSequence` v2 @kind object, `int` v3 , `boolean` v4 ) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L34b468.  if v4 == 0 then goto L34b4b0;
  #L34b46c.  v4:= v3 + -1;
  #L34b470.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L34b476.  v4:= temp;
  #L34b478.  v0:= 58I;
  #L34b47c.  if v4 != v0 then goto L34b482;
  #L34b480.  goto L34b4b0;
  #L34b482.  v3:= new `org.threeten.bp.b`;
  #L34b486.  v4:= new `java.lang.StringBuilder`;
  #L34b48a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b490.  v0:= "Invalid ID for ZoneOffset, colon not found when expected: " @kind object;
  #L34b494.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b49a.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b4a0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b4a6.  v2:= temp @kind object;
  #L34b4a8.  call `<init>`(v3, v2) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b4ae.  throw v3;
  #L34b4b0.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L34b4b6.  v4:= temp;
  #L34b4b8.  v3:= v3 + 1;
  #L34b4bc.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L34b4c2.  v3:= temp;
  #L34b4c4.  v0:= 48I;
  #L34b4c8.  if v4 < v0 then goto L34b4e8;
  #L34b4cc.  v1:= 57I;
  #L34b4d0.  if v4 > v1 then goto L34b4e8;
  #L34b4d4.  if v3 < v0 then goto L34b4e8;
  #L34b4d8.  if v3 > v1 then goto L34b4e8;
  #L34b4dc.  v4:= v4 - v0 @kind int;
  #L34b4de.  v4:= v4 * 10;
  #L34b4e2.  v3:= v3 - v0 @kind int;
  #L34b4e4.  v4:= v4 + v3 @kind int;
  #L34b4e6.  return v4;
  #L34b4e8.  v3:= new `org.threeten.bp.b`;
  #L34b4ec.  v4:= new `java.lang.StringBuilder`;
  #L34b4f0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b4f6.  v0:= "Invalid ID for ZoneOffset, non numeric characters found: " @kind object;
  #L34b4fa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b500.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b506.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b50c.  v2:= temp @kind object;
  #L34b50e.  call `<init>`(v3, v2) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b514.  throw v3;
}
procedure `int` `c`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/threeten/bp/r;.c:(III)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L34b528.  v0:= v0 * 3600;
  #L34b52c.  v1:= v1 * 60;
  #L34b530.  v0:= v0 + v1 @kind int;
  #L34b532.  v0:= v0 + v2 @kind int;
  #L34b534.  return v0;
}
procedure `void` `d`(`int` v4 , `int` v5 , `int` v6 ) @signature `Lorg/threeten/bp/r;.d:(III)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L34bbc4.  v0:= -18I;
  #L34bbc8.  if v4 < v0 then goto L34bd02;
  #L34bbcc.  v0:= 18I;
  #L34bbd0.  if v4 > v0 then goto L34bd02;
  #L34bbd4.  if v4 <= 0 then goto L34bbf2;
  #L34bbd8.  if v5 < 0 then goto L34bbe2;
  #L34bbdc.  if v6 < 0 then goto L34bbe2;
  #L34bbe0.  goto L34bc32;
  #L34bbe2.  v4:= new `org.threeten.bp.b`;
  #L34bbe6.  v5:= "Zone offset minutes and seconds must be positive because hours is positive" @kind object;
  #L34bbea.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bbf0.  throw v4;
  #L34bbf2.  if v4 >= 0 then goto L34bc10;
  #L34bbf6.  if v5 > 0 then goto L34bc00;
  #L34bbfa.  if v6 > 0 then goto L34bc00;
  #L34bbfe.  goto L34bc32;
  #L34bc00.  v4:= new `org.threeten.bp.b`;
  #L34bc04.  v5:= "Zone offset minutes and seconds must be negative because hours is negative" @kind object;
  #L34bc08.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bc0e.  throw v4;
  #L34bc10.  if v5 <= 0 then goto L34bc18;
  #L34bc14.  if v6 < 0 then goto L34bc22;
  #L34bc18.  if v5 >= 0 then goto L34bc32;
  #L34bc1c.  if v6 > 0 then goto L34bc22;
  #L34bc20.  goto L34bc32;
  #L34bc22.  v4:= new `org.threeten.bp.b`;
  #L34bc26.  v5:= "Zone offset minutes and seconds must have the same sign" @kind object;
  #L34bc2a.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bc30.  throw v4;
  #L34bc32.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bc38.  v1:= temp;
  #L34bc3a.  v2:= " is not in the range 0 to 59" @kind object;
  #L34bc3e.  v3:= 59I;
  #L34bc42.  if v1 > v3 then goto L34bcc6;
  #L34bc46.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bc4c.  v1:= temp;
  #L34bc4e.  if v1 > v3 then goto L34bc8a;
  #L34bc52.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bc58.  v4:= temp;
  #L34bc5a.  if v4 != v0 then goto L34bc88;
  #L34bc5e.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bc64.  v4:= temp;
  #L34bc66.  if v4 > 0 then goto L34bc78;
  #L34bc6a.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bc70.  v4:= temp;
  #L34bc72.  if v4 > 0 then goto L34bc78;
  #L34bc76.  goto L34bc88;
  #L34bc78.  v4:= new `org.threeten.bp.b`;
  #L34bc7c.  v5:= "Zone offset not in valid range: -18:00 to +18:00" @kind object;
  #L34bc80.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bc86.  throw v4;
  #L34bc88.  return @kind void;
  #L34bc8a.  v4:= new `org.threeten.bp.b`;
  #L34bc8e.  v5:= new `java.lang.StringBuilder`;
  #L34bc92.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34bc98.  v0:= "Zone offset seconds not in valid range: abs(value) " @kind object;
  #L34bc9c.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bca2.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bca8.  v6:= temp;
  #L34bcaa.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bcb0.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bcb6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34bcbc.  v5:= temp @kind object;
  #L34bcbe.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bcc4.  throw v4;
  #L34bcc6.  v4:= new `org.threeten.bp.b`;
  #L34bcca.  v6:= new `java.lang.StringBuilder`;
  #L34bcce.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34bcd4.  v0:= "Zone offset minutes not in valid range: abs(value) " @kind object;
  #L34bcd8.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bcde.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34bce4.  v5:= temp;
  #L34bce6.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bcec.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bcf2.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34bcf8.  v5:= temp @kind object;
  #L34bcfa.  call `<init>`(v4, v5) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bd00.  throw v4;
  #L34bd02.  v5:= new `org.threeten.bp.b`;
  #L34bd06.  v6:= new `java.lang.StringBuilder`;
  #L34bd0a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34bd10.  v0:= "Zone offset hours not in valid range: value " @kind object;
  #L34bd14.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bd1a.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bd20.  v4:= " is not in the range -18 to 18" @kind object;
  #L34bd24.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bd2a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34bd30.  v4:= temp @kind object;
  #L34bd32.  call `<init>`(v5, v4) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34bd38.  throw v5;
}
procedure `org.threeten.bp.r` `from`(`org.threeten.bp.temporal.e` v3 @kind object) @signature `Lorg/threeten/bp/r;.from:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L34b740.  call temp:= `d`() @signature `Lorg/threeten/bp/temporal/j;.d:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b746.  v0:= temp @kind object;
  #L34b748.  call temp:= `query`(v3, v0) @signature `Lorg/threeten/bp/temporal/e;.query:(Lorg/threeten/bp/temporal/k;)Ljava/lang/Object;` @kind interface;
  #L34b74e.  v0:= temp @kind object;
  #L34b750.  v0:= (`org.threeten.bp.r`) v0 @kind object;
  #L34b754.  if v0 == 0 then goto L34b75a;
  #L34b758.  return v0 @kind object;
  #L34b75a.  v0:= new `org.threeten.bp.b`;
  #L34b75e.  v1:= new `java.lang.StringBuilder`;
  #L34b762.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b768.  v2:= "Unable to obtain ZoneOffset from TemporalAccessor: " @kind object;
  #L34b76c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b772.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b778.  v2:= ", type " @kind object;
  #L34b77c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b782.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L34b788.  v3:= temp @kind object;
  #L34b78a.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L34b790.  v3:= temp @kind object;
  #L34b792.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b798.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b79e.  v3:= temp @kind object;
  #L34b7a0.  call `<init>`(v0, v3) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b7a6.  throw v0;
}
procedure `org.threeten.bp.r` `of`(`java.lang.String` v7 @kind object) @signature `Lorg/threeten/bp/r;.of:(Ljava/lang/String;)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L34b7b8.  v0:= "offsetId" @kind object;
  #L34b7bc.  call temp:= `i`(v7, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L34b7c2.  v0:= `@@org.threeten.bp.r.i` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L34b7c6.  call temp:= `get`(v0, v7) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L34b7cc.  v0:= temp @kind object;
  #L34b7ce.  v0:= (`org.threeten.bp.r`) v0 @kind object;
  #L34b7d2.  if v0 == 0 then goto L34b7d8;
  #L34b7d6.  return v0 @kind object;
  #L34b7d8.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L34b7de.  v0:= temp;
  #L34b7e0.  v1:= 2I;
  #L34b7e2.  v2:= 1I;
  #L34b7e4.  v3:= 0I;
  #L34b7e6.  if v0 == v1 then goto L34b892;
  #L34b7ea.  v1:= 3I;
  #L34b7ec.  if v0 == v1 then goto L34b8ca;
  #L34b7f0.  v4:= 5I;
  #L34b7f2.  if v0 == v4 then goto L34b880;
  #L34b7f6.  v5:= 6I;
  #L34b7f8.  v6:= 4I;
  #L34b7fa.  if v0 == v5 then goto L34b86e;
  #L34b7fe.  v5:= 7I;
  #L34b800.  if v0 == v5 then goto L34b854;
  #L34b804.  v1:= 9I;
  #L34b808.  if v0 != v1 then goto L34b826;
  #L34b80c.  call temp:= `b`(v7, v2, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b812.  v0:= temp;
  #L34b814.  call temp:= `b`(v7, v6, v2) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b81a.  v1:= temp;
  #L34b81c.  call temp:= `b`(v7, v5, v2) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b822.  v2:= temp;
  #L34b824.  goto L34b8d6;
  #L34b826.  v0:= new `org.threeten.bp.b`;
  #L34b82a.  v1:= new `java.lang.StringBuilder`;
  #L34b82e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b834.  v2:= "Invalid ID for ZoneOffset, invalid format: " @kind object;
  #L34b838.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b83e.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b844.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b84a.  v7:= temp @kind object;
  #L34b84c.  call `<init>`(v0, v7) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b852.  throw v0;
  #L34b854.  call temp:= `b`(v7, v2, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b85a.  v0:= temp;
  #L34b85c.  call temp:= `b`(v7, v1, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b862.  v1:= temp;
  #L34b864.  call temp:= `b`(v7, v4, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b86a.  v2:= temp;
  #L34b86c.  goto L34b8d6;
  #L34b86e.  call temp:= `b`(v7, v2, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b874.  v0:= temp;
  #L34b876.  call temp:= `b`(v7, v6, v2) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b87c.  v1:= temp;
  #L34b87e.  goto L34b8d4;
  #L34b880.  call temp:= `b`(v7, v2, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b886.  v0:= temp;
  #L34b888.  call temp:= `b`(v7, v1, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b88e.  v1:= temp;
  #L34b890.  goto L34b8d4;
  #L34b892.  v0:= new `java.lang.StringBuilder`;
  #L34b896.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b89c.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L34b8a2.  v1:= temp;
  #L34b8a4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b8aa.  v1:= "0" @kind object;
  #L34b8ae.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b8b4.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L34b8ba.  v7:= temp;
  #L34b8bc.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b8c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b8c8.  v7:= temp @kind object;
  #L34b8ca.  call temp:= `b`(v7, v2, v3) @signature `Lorg/threeten/bp/r;.b:(Ljava/lang/CharSequence;IZ)I` @kind static;
  #L34b8d0.  v0:= temp;
  #L34b8d2.  v1:= 0I;
  #L34b8d4.  v2:= 0I;
  #L34b8d6.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L34b8dc.  v3:= temp;
  #L34b8de.  v4:= 43I;
  #L34b8e2.  v5:= 45I;
  #L34b8e6.  if v3 == v4 then goto L34b91e;
  #L34b8ea.  if v3 != v5 then goto L34b8f0;
  #L34b8ee.  goto L34b91e;
  #L34b8f0.  v0:= new `org.threeten.bp.b`;
  #L34b8f4.  v1:= new `java.lang.StringBuilder`;
  #L34b8f8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b8fe.  v2:= "Invalid ID for ZoneOffset, plus/minus not found when expected: " @kind object;
  #L34b902.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b908.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b90e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b914.  v7:= temp @kind object;
  #L34b916.  call `<init>`(v0, v7) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b91c.  throw v0;
  #L34b91e.  if v3 != v5 then goto L34b932;
  #L34b922.  v7:= -v0 @kind int;
  #L34b924.  v0:= -v1 @kind int;
  #L34b926.  v1:= -v2 @kind int;
  #L34b928.  call temp:= `ofHoursMinutesSeconds`(v7, v0, v1) @signature `Lorg/threeten/bp/r;.ofHoursMinutesSeconds:(III)Lorg/threeten/bp/r;` @kind static;
  #L34b92e.  v7:= temp @kind object;
  #L34b930.  return v7 @kind object;
  #L34b932.  call temp:= `ofHoursMinutesSeconds`(v0, v1, v2) @signature `Lorg/threeten/bp/r;.ofHoursMinutesSeconds:(III)Lorg/threeten/bp/r;` @kind static;
  #L34b938.  v7:= temp @kind object;
  #L34b93a.  return v7 @kind object;
}
procedure `org.threeten.bp.r` `ofHours`(`int` v1 ) @signature `Lorg/threeten/bp/r;.ofHours:(I)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L34b94c.  v0:= 0I;
  #L34b94e.  call temp:= `ofHoursMinutesSeconds`(v1, v0, v0) @signature `Lorg/threeten/bp/r;.ofHoursMinutesSeconds:(III)Lorg/threeten/bp/r;` @kind static;
  #L34b954.  v1:= temp @kind object;
  #L34b956.  return v1 @kind object;
}
procedure `org.threeten.bp.r` `ofHoursMinutes`(`int` v1 , `int` v2 ) @signature `Lorg/threeten/bp/r;.ofHoursMinutes:(II)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L34b968.  v0:= 0I;
  #L34b96a.  call temp:= `ofHoursMinutesSeconds`(v1, v2, v0) @signature `Lorg/threeten/bp/r;.ofHoursMinutesSeconds:(III)Lorg/threeten/bp/r;` @kind static;
  #L34b970.  v1:= temp @kind object;
  #L34b972.  return v1 @kind object;
}
procedure `org.threeten.bp.r` `ofHoursMinutesSeconds`(`int` v0 , `int` v1 , `int` v2 ) @signature `Lorg/threeten/bp/r;.ofHoursMinutesSeconds:(III)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L34b984.  call `d`(v0, v1, v2) @signature `Lorg/threeten/bp/r;.d:(III)V` @kind static;
  #L34b98a.  call temp:= `c`(v0, v1, v2) @signature `Lorg/threeten/bp/r;.c:(III)I` @kind static;
  #L34b990.  v0:= temp;
  #L34b992.  call temp:= `ofTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34b998.  v0:= temp @kind object;
  #L34b99a.  return v0 @kind object;
}
procedure `org.threeten.bp.r` `ofTotalSeconds`(`int` v3 ) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L34b9ac.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L34b9b2.  v0:= temp;
  #L34b9b4.  v1:= 64800I;
  #L34b9ba.  if v0 > v1 then goto L34ba20;
  #L34b9be.  v0:= v3 %% 900;
  #L34b9c2.  if v0 != 0 then goto L34ba14;
  #L34b9c6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L34b9cc.  v0:= temp @kind object;
  #L34b9ce.  v1:= `@@org.threeten.bp.r.h` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L34b9d2.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L34b9d8.  v2:= temp @kind object;
  #L34b9da.  v2:= (`org.threeten.bp.r`) v2 @kind object;
  #L34b9de.  if v2 != 0 then goto L34ba12;
  #L34b9e2.  v2:= new `org.threeten.bp.r`;
  #L34b9e6.  call `<init>`(v2, v3) @signature `Lorg/threeten/bp/r;.<init>:(I)V` @kind direct;
  #L34b9ec.  call temp:= `putIfAbsent`(v1, v0, v2) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L34b9f2.  call temp:= `get`(v1, v0) @signature `Ljava/util/concurrent/ConcurrentMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L34b9f8.  v3:= temp @kind object;
  #L34b9fa.  v2:= v3 @kind object;
  #L34b9fc.  v2:= (`org.threeten.bp.r`) v2 @kind object;
  #L34ba00.  v3:= `@@org.threeten.bp.r.i` @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L34ba04.  call temp:= `getId`(v2) @signature `Lorg/threeten/bp/r;.getId:()Ljava/lang/String;` @kind virtual;
  #L34ba0a.  v0:= temp @kind object;
  #L34ba0c.  call temp:= `putIfAbsent`(v3, v0, v2) @signature `Ljava/util/concurrent/ConcurrentMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L34ba12.  return v2 @kind object;
  #L34ba14.  v0:= new `org.threeten.bp.r`;
  #L34ba18.  call `<init>`(v0, v3) @signature `Lorg/threeten/bp/r;.<init>:(I)V` @kind direct;
  #L34ba1e.  return v0 @kind object;
  #L34ba20.  v3:= new `org.threeten.bp.b`;
  #L34ba24.  v0:= "Zone offset not in valid range: -18:00 to +18:00" @kind object;
  #L34ba28.  call `<init>`(v3, v0) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34ba2e.  throw v3;
}
procedure `org.threeten.bp.r` `readExternal`(`java.io.DataInput` v2 @kind object) @signature `Lorg/threeten/bp/r;.readExternal:(Ljava/io/DataInput;)Lorg/threeten/bp/r;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L34ba40.  call temp:= `readByte`(v2) @signature `Ljava/io/DataInput;.readByte:()B` @kind interface;
  #L34ba46.  v0:= temp;
  #L34ba48.  v1:= 127I;
  #L34ba4c.  if v0 != v1 then goto L34ba62;
  #L34ba50.  call temp:= `readInt`(v2) @signature `Ljava/io/DataInput;.readInt:()I` @kind interface;
  #L34ba56.  v2:= temp;
  #L34ba58.  call temp:= `ofTotalSeconds`(v2) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34ba5e.  v2:= temp @kind object;
  #L34ba60.  goto L34ba6e;
  #L34ba62.  v0:= v0 * 900;
  #L34ba66.  call temp:= `ofTotalSeconds`(v0) @signature `Lorg/threeten/bp/r;.ofTotalSeconds:(I)Lorg/threeten/bp/r;` @kind static;
  #L34ba6c.  v2:= temp @kind object;
  #L34ba6e.  return v2 @kind object;
}
procedure `java.lang.Object` `readResolve`(`org.threeten.bp.r` v2 @kind this) @signature `Lorg/threeten/bp/r;.readResolve:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L34b5c0.  v0:= new `java.io.InvalidObjectException`;
  #L34b5c4.  v1:= "Deserialization via serialization delegate" @kind object;
  #L34b5c8.  call `<init>`(v0, v1) @signature `Ljava/io/InvalidObjectException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b5ce.  throw v0;
}
procedure `java.lang.Object` `writeReplace`(`org.threeten.bp.r` v2 @kind this) @signature `Lorg/threeten/bp/r;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L34b5e0.  v0:= new `org.threeten.bp.n`;
  #L34b5e4.  v1:= 8I;
  #L34b5e8.  call `<init>`(v0, v1, v2) @signature `Lorg/threeten/bp/n;.<init>:(BLjava/lang/Object;)V` @kind direct;
  #L34b5ee.  return v0 @kind object;
}
procedure `org.threeten.bp.temporal.d` `adjustInto`(`org.threeten.bp.r` v3 @kind this, `org.threeten.bp.temporal.d` v4 @kind object) @signature `Lorg/threeten/bp/r;.adjustInto:(Lorg/threeten/bp/temporal/d;)Lorg/threeten/bp/temporal/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34ba80.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L34ba84.  v1:= v3.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34ba88.  v1:= (`long`) v1 @kind i2l;
  #L34ba8a.  call temp:= `with`(v4, v0, v1) @signature `Lorg/threeten/bp/temporal/d;.with:(Lorg/threeten/bp/temporal/i;J)Lorg/threeten/bp/temporal/d;` @kind interface;
  #L34ba90.  v4:= temp @kind object;
  #L34ba92.  return v4 @kind object;
}
procedure `int` `compareTo`(`org.threeten.bp.r` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lorg/threeten/bp/r;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L34b38c.  v1:= (`org.threeten.bp.r`) v1 @kind object;
  #L34b390.  call temp:= `compareTo`(v0, v1) @signature `Lorg/threeten/bp/r;.compareTo:(Lorg/threeten/bp/r;)I` @kind virtual;
  #L34b396.  v1:= temp;
  #L34b398.  return v1;
}
procedure `int` `compareTo`(`org.threeten.bp.r` v1 @kind this, `org.threeten.bp.r` v2 @kind object) @signature `Lorg/threeten/bp/r;.compareTo:(Lorg/threeten/bp/r;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b3ac.  v2:= v2.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b3b0.  v0:= v1.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b3b4.  v2:= v2 - v0 @kind int;
  #L34b3b6.  return v2;
}
procedure `boolean` `equals`(`org.threeten.bp.r` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/threeten/bp/r;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34b310.  v0:= 1I;
  #L34b312.  if v3 != v4 then goto L34b318;
  #L34b316.  return v0;
  #L34b318.  v1:= instanceof @variable v4 @type ^`org.threeten.bp.r` @kind boolean;
  #L34b31c.  v2:= 0I;
  #L34b31e.  if v1 == 0 then goto L34b338;
  #L34b322.  v1:= v3.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b326.  v4:= (`org.threeten.bp.r`) v4 @kind object;
  #L34b32a.  v4:= v4.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b32e.  if v1 != v4 then goto L34b334;
  #L34b332.  goto L34b336;
  #L34b334.  v0:= 0I;
  #L34b336.  return v0;
  #L34b338.  return v2;
}
procedure `int` `get`(`org.threeten.bp.r` v3 @kind this, `org.threeten.bp.temporal.i` v4 @kind object) @signature `Lorg/threeten/bp/r;.get:(Lorg/threeten/bp/temporal/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34b3c8.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L34b3cc.  if v4 != v0 then goto L34b3d6;
  #L34b3d0.  v4:= v3.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b3d4.  return v4;
  #L34b3d6.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L34b3da.  if v0 != 0 then goto L34b3f8;
  #L34b3de.  call temp:= `range`(v3, v4) @signature `Lorg/threeten/bp/r;.range:(Lorg/threeten/bp/temporal/i;)Lorg/threeten/bp/temporal/n;` @kind virtual;
  #L34b3e4.  v0:= temp @kind object;
  #L34b3e6.  call temp:= `getLong`(v3, v4) @signature `Lorg/threeten/bp/r;.getLong:(Lorg/threeten/bp/temporal/i;)J` @kind virtual;
  #L34b3ec.  v1:= temp @kind wide;
  #L34b3ee.  call temp:= `checkValidIntValue`(v0, v1, v4) @signature `Lorg/threeten/bp/temporal/n;.checkValidIntValue:(JLorg/threeten/bp/temporal/i;)I` @kind virtual;
  #L34b3f4.  v4:= temp;
  #L34b3f6.  return v4;
  #L34b3f8.  v0:= new `org.threeten.bp.temporal.m`;
  #L34b3fc.  v1:= new `java.lang.StringBuilder`;
  #L34b400.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b406.  v2:= "Unsupported field: " @kind object;
  #L34b40a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b410.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b416.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b41c.  v4:= temp @kind object;
  #L34b41e.  call `<init>`(v0, v4) @signature `Lorg/threeten/bp/temporal/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b424.  throw v0;
}
procedure `java.lang.String` `getId`(`org.threeten.bp.r` v1 @kind this) @signature `Lorg/threeten/bp/r;.getId:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b6b0.  v0:= v1.`org.threeten.bp.r.g` @type ^`java.lang.String` @kind object;
  #L34b6b4.  return v0 @kind object;
}
procedure `long` `getLong`(`org.threeten.bp.r` v3 @kind this, `org.threeten.bp.temporal.i` v4 @kind object) @signature `Lorg/threeten/bp/r;.getLong:(Lorg/threeten/bp/temporal/i;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34b6e0.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L34b6e4.  if v4 != v0 then goto L34b6f0;
  #L34b6e8.  v4:= v3.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b6ec.  v0:= (`long`) v4 @kind i2l;
  #L34b6ee.  return v0 @kind wide;
  #L34b6f0.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L34b6f4.  if v0 != 0 then goto L34b702;
  #L34b6f8.  call temp:= `getFrom`(v4, v3) @signature `Lorg/threeten/bp/temporal/i;.getFrom:(Lorg/threeten/bp/temporal/e;)J` @kind interface;
  #L34b6fe.  v0:= temp @kind wide;
  #L34b700.  return v0 @kind wide;
  #L34b702.  v0:= new `org.threeten.bp.b`;
  #L34b706.  v1:= new `java.lang.StringBuilder`;
  #L34b70a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34b710.  v2:= "Unsupported field: " @kind object;
  #L34b714.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b71a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34b720.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34b726.  v4:= temp @kind object;
  #L34b728.  call `<init>`(v0, v4) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34b72e.  throw v0;
}
procedure `org.threeten.bp.zone.f` `getRules`(`org.threeten.bp.r` v1 @kind this) @signature `Lorg/threeten/bp/r;.getRules:()Lorg/threeten/bp/zone/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34bb08.  call temp:= `of`(v1) @signature `Lorg/threeten/bp/zone/f;.of:(Lorg/threeten/bp/r;)Lorg/threeten/bp/zone/f;` @kind static;
  #L34bb0e.  v0:= temp @kind object;
  #L34bb10.  return v0 @kind object;
}
procedure `int` `getTotalSeconds`(`org.threeten.bp.r` v1 @kind this) @signature `Lorg/threeten/bp/r;.getTotalSeconds:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b438.  v0:= v1.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b43c.  return v0;
}
procedure `int` `hashCode`(`org.threeten.bp.r` v1 @kind this) @signature `Lorg/threeten/bp/r;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b450.  v0:= v1.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34b454.  return v0;
}
procedure `boolean` `isSupported`(`org.threeten.bp.r` v3 @kind this, `org.threeten.bp.temporal.i` v4 @kind object) @signature `Lorg/threeten/bp/r;.isSupported:(Lorg/threeten/bp/temporal/i;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34b34c.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L34b350.  v1:= 1I;
  #L34b352.  v2:= 0I;
  #L34b354.  if v0 == 0 then goto L34b366;
  #L34b358.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L34b35c.  if v4 != v0 then goto L34b362;
  #L34b360.  goto L34b364;
  #L34b362.  v1:= 0I;
  #L34b364.  return v1;
  #L34b366.  if v4 == 0 then goto L34b378;
  #L34b36a.  call temp:= `isSupportedBy`(v4, v3) @signature `Lorg/threeten/bp/temporal/i;.isSupportedBy:(Lorg/threeten/bp/temporal/e;)Z` @kind interface;
  #L34b370.  v4:= temp;
  #L34b372.  if v4 == 0 then goto L34b378;
  #L34b376.  goto L34b37a;
  #L34b378.  v1:= 0I;
  #L34b37a.  return v1;
}
procedure `java.lang.Object` `query`(`org.threeten.bp.r` v1 @kind this, `org.threeten.bp.temporal.k` v2 @kind object) @signature `Lorg/threeten/bp/r;.query:(Lorg/threeten/bp/temporal/k;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b548.  call temp:= `d`() @signature `Lorg/threeten/bp/temporal/j;.d:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b54e.  v0:= temp @kind object;
  #L34b550.  if v2 == v0 then goto L34b5ae;
  #L34b554.  call temp:= `f`() @signature `Lorg/threeten/bp/temporal/j;.f:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b55a.  v0:= temp @kind object;
  #L34b55c.  if v2 != v0 then goto L34b562;
  #L34b560.  goto L34b5ae;
  #L34b562.  call temp:= `b`() @signature `Lorg/threeten/bp/temporal/j;.b:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b568.  v0:= temp @kind object;
  #L34b56a.  if v2 == v0 then goto L34b5aa;
  #L34b56e.  call temp:= `c`() @signature `Lorg/threeten/bp/temporal/j;.c:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b574.  v0:= temp @kind object;
  #L34b576.  if v2 == v0 then goto L34b5aa;
  #L34b57a.  call temp:= `e`() @signature `Lorg/threeten/bp/temporal/j;.e:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b580.  v0:= temp @kind object;
  #L34b582.  if v2 == v0 then goto L34b5aa;
  #L34b586.  call temp:= `a`() @signature `Lorg/threeten/bp/temporal/j;.a:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b58c.  v0:= temp @kind object;
  #L34b58e.  if v2 == v0 then goto L34b5aa;
  #L34b592.  call temp:= `g`() @signature `Lorg/threeten/bp/temporal/j;.g:()Lorg/threeten/bp/temporal/k;` @kind static;
  #L34b598.  v0:= temp @kind object;
  #L34b59a.  if v2 != v0 then goto L34b5a0;
  #L34b59e.  goto L34b5aa;
  #L34b5a0.  call temp:= `a`(v2, v1) @signature `Lorg/threeten/bp/temporal/k;.a:(Lorg/threeten/bp/temporal/e;)Ljava/lang/Object;` @kind interface;
  #L34b5a6.  v2:= temp @kind object;
  #L34b5a8.  return v2 @kind object;
  #L34b5aa.  v2:= 0I;
  #L34b5ac.  return v2 @kind object;
  #L34b5ae.  return v1 @kind object;
}
procedure `org.threeten.bp.temporal.n` `range`(`org.threeten.bp.r` v3 @kind this, `org.threeten.bp.temporal.i` v4 @kind object) @signature `Lorg/threeten/bp/r;.range:(Lorg/threeten/bp/temporal/i;)Lorg/threeten/bp/temporal/n;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L34baa4.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L34baa8.  if v4 != v0 then goto L34bab6;
  #L34baac.  call temp:= `range`(v4) @signature `Lorg/threeten/bp/temporal/i;.range:()Lorg/threeten/bp/temporal/n;` @kind interface;
  #L34bab2.  v4:= temp @kind object;
  #L34bab4.  return v4 @kind object;
  #L34bab6.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.temporal.a` @kind boolean;
  #L34baba.  if v0 != 0 then goto L34bac8;
  #L34babe.  call temp:= `rangeRefinedBy`(v4, v3) @signature `Lorg/threeten/bp/temporal/i;.rangeRefinedBy:(Lorg/threeten/bp/temporal/e;)Lorg/threeten/bp/temporal/n;` @kind interface;
  #L34bac4.  v4:= temp @kind object;
  #L34bac6.  return v4 @kind object;
  #L34bac8.  v0:= new `org.threeten.bp.temporal.m`;
  #L34bacc.  v1:= new `java.lang.StringBuilder`;
  #L34bad0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L34bad6.  v2:= "Unsupported field: " @kind object;
  #L34bada.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bae0.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L34bae6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L34baec.  v4:= temp @kind object;
  #L34baee.  call `<init>`(v0, v4) @signature `Lorg/threeten/bp/temporal/m;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L34baf4.  throw v0;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.r` v1 @kind this) @signature `Lorg/threeten/bp/r;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L34b6c8.  v0:= v1.`org.threeten.bp.r.g` @type ^`java.lang.String` @kind object;
  #L34b6cc.  return v0 @kind object;
}
procedure `void` `write`(`org.threeten.bp.r` v1 @kind this, `java.io.DataOutput` v2 @kind object) @signature `Lorg/threeten/bp/r;.write:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;

  #L34bd4c.  v0:= 8I;
  #L34bd50.  call `writeByte`(v2, v0) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L34bd56.  call `writeExternal`(v1, v2) @signature `Lorg/threeten/bp/r;.writeExternal:(Ljava/io/DataOutput;)V` @kind virtual;
  #L34bd5c.  return @kind void;
}
procedure `void` `writeExternal`(`org.threeten.bp.r` v3 @kind this, `java.io.DataOutput` v4 @kind object) @signature `Lorg/threeten/bp/r;.writeExternal:(Ljava/io/DataOutput;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L34bd70.  v0:= v3.`org.threeten.bp.r.totalSeconds` @type ^`int`;
  #L34bd74.  v1:= v0 %% 900;
  #L34bd78.  v2:= 127I;
  #L34bd7c.  if v1 != 0 then goto L34bd86;
  #L34bd80.  v1:= v0 / 900;
  #L34bd84.  goto L34bd8a;
  #L34bd86.  v1:= 127I;
  #L34bd8a.  call `writeByte`(v4, v1) @signature `Ljava/io/DataOutput;.writeByte:(I)V` @kind interface;
  #L34bd90.  if v1 != v2 then goto L34bd9a;
  #L34bd94.  call `writeInt`(v4, v0) @signature `Ljava/io/DataOutput;.writeInt:(I)V` @kind interface;
  #L34bd9a.  return @kind void;
}
