record `org.threeten.bp.a$b` @kind class @AccessFlag FINAL extends `org.threeten.bp.a` @kind class, `java.io.Serializable` @kind interface {
  `org.threeten.bp.a` `org.threeten.bp.a$b.baseClock` @AccessFlag PRIVATE_FINAL;
  `org.threeten.bp.d` `org.threeten.bp.a$b.offset` @AccessFlag PRIVATE_FINAL;
}
global `long` `@@org.threeten.bp.a$b.serialVersionUID` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`org.threeten.bp.a$b` v0 @kind this, `org.threeten.bp.a` v1 @kind object, `org.threeten.bp.d` v2 @kind object) @signature `Lorg/threeten/bp/a$b;.<init>:(Lorg/threeten/bp/a;Lorg/threeten/bp/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L33c718.  call `<init>`(v0) @signature `Lorg/threeten/bp/a;.<init>:()V` @kind direct;
  #L33c71e.  v0.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` := v1 @kind object;
  #L33c722.  v0.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` := v2 @kind object;
  #L33c726.  return @kind void;
}
procedure `boolean` `equals`(`org.threeten.bp.a$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lorg/threeten/bp/a$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L33c580.  v0:= instanceof @variable v4 @type ^`org.threeten.bp.a$b` @kind boolean;
  #L33c584.  v1:= 0I;
  #L33c586.  if v0 == 0 then goto L33c5b8;
  #L33c58a.  v4:= (`org.threeten.bp.a$b`) v4 @kind object;
  #L33c58e.  v0:= v3.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c592.  v2:= v4.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c596.  call temp:= `equals`(v0, v2) @signature `Lorg/threeten/bp/a;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33c59c.  v0:= temp;
  #L33c59e.  if v0 == 0 then goto L33c5b8;
  #L33c5a2.  v0:= v3.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c5a6.  v4:= v4.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c5aa.  call temp:= `equals`(v0, v4) @signature `Lorg/threeten/bp/d;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33c5b0.  v4:= temp;
  #L33c5b2.  if v4 == 0 then goto L33c5b8;
  #L33c5b6.  v1:= 1I;
  #L33c5b8.  return v1;
}
procedure `org.threeten.bp.q` `getZone`(`org.threeten.bp.a$b` v1 @kind this) @signature `Lorg/threeten/bp/a$b;.getZone:()Lorg/threeten/bp/q;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L33c6f8.  v0:= v1.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c6fc.  call temp:= `getZone`(v0) @signature `Lorg/threeten/bp/a;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L33c702.  v0:= temp @kind object;
  #L33c704.  return v0 @kind object;
}
procedure `int` `hashCode`(`org.threeten.bp.a$b` v2 @kind this) @signature `Lorg/threeten/bp/a$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33c5cc.  v0:= v2.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c5d0.  call temp:= `hashCode`(v0) @signature `Lorg/threeten/bp/a;.hashCode:()I` @kind virtual;
  #L33c5d6.  v0:= temp;
  #L33c5d8.  v1:= v2.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c5dc.  call temp:= `hashCode`(v1) @signature `Lorg/threeten/bp/d;.hashCode:()I` @kind virtual;
  #L33c5e2.  v1:= temp;
  #L33c5e4.  v0:= v0 ^~ v1 @kind int;
  #L33c5e6.  return v0;
}
procedure `org.threeten.bp.e` `instant`(`org.threeten.bp.a$b` v2 @kind this) @signature `Lorg/threeten/bp/a$b;.instant:()Lorg/threeten/bp/e;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33c6cc.  v0:= v2.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c6d0.  call temp:= `instant`(v0) @signature `Lorg/threeten/bp/a;.instant:()Lorg/threeten/bp/e;` @kind virtual;
  #L33c6d6.  v0:= temp @kind object;
  #L33c6d8.  v1:= v2.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c6dc.  call temp:= `plus`(v0, v1) @signature `Lorg/threeten/bp/e;.plus:(Lorg/threeten/bp/temporal/h;)Lorg/threeten/bp/e;` @kind virtual;
  #L33c6e2.  v0:= temp @kind object;
  #L33c6e4.  return v0 @kind object;
}
procedure `long` `millis`(`org.threeten.bp.a$b` v4 @kind this) @signature `Lorg/threeten/bp/a$b;.millis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L33c650.  v0:= v4.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c654.  call temp:= `millis`(v0) @signature `Lorg/threeten/bp/a;.millis:()J` @kind virtual;
  #L33c65a.  v0:= temp @kind wide;
  #L33c65c.  v2:= v4.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c660.  call temp:= `toMillis`(v2) @signature `Lorg/threeten/bp/d;.toMillis:()J` @kind virtual;
  #L33c666.  v2:= temp @kind wide;
  #L33c668.  call temp:= `k`(v0, v2) @signature `Lte/d;.k:(JJ)J` @kind static;
  #L33c66e.  v0:= temp @kind wide;
  #L33c670.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.a$b` v2 @kind this) @signature `Lorg/threeten/bp/a$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33c5f8.  v0:= new `java.lang.StringBuilder`;
  #L33c5fc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L33c602.  v1:= "OffsetClock[" @kind object;
  #L33c606.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c60c.  v1:= v2.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c610.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c616.  v1:= "," @kind object;
  #L33c61a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c620.  v1:= v2.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c62a.  v1:= "]" @kind object;
  #L33c62e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L33c634.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L33c63a.  v0:= temp @kind object;
  #L33c63c.  return v0 @kind object;
}
procedure `org.threeten.bp.a` `withZone`(`org.threeten.bp.a$b` v2 @kind this, `org.threeten.bp.q` v3 @kind object) @signature `Lorg/threeten/bp/a$b;.withZone:(Lorg/threeten/bp/q;)Lorg/threeten/bp/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L33c684.  v0:= v2.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c688.  call temp:= `getZone`(v0) @signature `Lorg/threeten/bp/a;.getZone:()Lorg/threeten/bp/q;` @kind virtual;
  #L33c68e.  v0:= temp @kind object;
  #L33c690.  call temp:= `equals`(v3, v0) @signature `Lorg/threeten/bp/q;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L33c696.  v0:= temp;
  #L33c698.  if v0 == 0 then goto L33c69e;
  #L33c69c.  return v2 @kind object;
  #L33c69e.  v0:= new `org.threeten.bp.a$b`;
  #L33c6a2.  v1:= v2.`org.threeten.bp.a$b.baseClock` @type ^`org.threeten.bp.a` @kind object;
  #L33c6a6.  call temp:= `withZone`(v1, v3) @signature `Lorg/threeten/bp/a;.withZone:(Lorg/threeten/bp/q;)Lorg/threeten/bp/a;` @kind virtual;
  #L33c6ac.  v3:= temp @kind object;
  #L33c6ae.  v1:= v2.`org.threeten.bp.a$b.offset` @type ^`org.threeten.bp.d` @kind object;
  #L33c6b2.  call `<init>`(v0, v3, v1) @signature `Lorg/threeten/bp/a$b;.<init>:(Lorg/threeten/bp/a;Lorg/threeten/bp/d;)V` @kind direct;
  #L33c6b8.  return v0 @kind object;
}
