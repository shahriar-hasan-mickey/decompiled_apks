record `org.threeten.bp.format.c$m` @kind class @AccessFlag FINAL extends `org.threeten.bp.format.c$h` @kind interface {
  `org.threeten.bp.format.c$h` `org.threeten.bp.format.c$m.g` @AccessFlag PRIVATE_FINAL;
  `int` `org.threeten.bp.format.c$m.h` @AccessFlag PRIVATE_FINAL;
  `char` `org.threeten.bp.format.c$m.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.threeten.bp.format.c$m` v0 @kind this, `org.threeten.bp.format.c$h` v1 @kind object, `int` v2 , `char` v3 ) @signature `Lorg/threeten/bp/format/c$m;.<init>:(Lorg/threeten/bp/format/c$h;IC)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35faec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35faf2.  v0.`org.threeten.bp.format.c$m.g` @type ^`org.threeten.bp.format.c$h` := v1 @kind object;
  #L35faf6.  v0.`org.threeten.bp.format.c$m.h` @type ^`int` := v2;
  #L35fafa.  v0.`org.threeten.bp.format.c$m.i` @type ^`char` := v3 @kind char;
  #L35fafe.  return @kind void;
}
procedure `int` `parse`(`org.threeten.bp.format.c$m` v6 @kind this, `org.threeten.bp.format.d` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `int` v9 ) @signature `Lorg/threeten/bp/format/c$m;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35f990.  call temp:= `m`(v7) @signature `Lorg/threeten/bp/format/d;.m:()Z` @kind virtual;
  #L35f996.  v0:= temp;
  #L35f998.  call temp:= `l`(v7) @signature `Lorg/threeten/bp/format/d;.l:()Z` @kind virtual;
  #L35f99e.  v1:= temp;
  #L35f9a0.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f9a6.  v2:= temp;
  #L35f9a8.  if v9 > v2 then goto L35fa3c;
  #L35f9ac.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f9b2.  v2:= temp;
  #L35f9b4.  if v9 != v2 then goto L35f9bc;
  #L35f9b8.  v7:= ~v9 @kind int;
  #L35f9ba.  return v7;
  #L35f9bc.  v2:= v6.`org.threeten.bp.format.c$m.h` @type ^`int`;
  #L35f9c0.  v2:= v2 + v9 @kind int;
  #L35f9c2.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f9c8.  v3:= temp;
  #L35f9ca.  if v2 <= v3 then goto L35f9de;
  #L35f9ce.  if v0 == 0 then goto L35f9d6;
  #L35f9d2.  v7:= ~v9 @kind int;
  #L35f9d4.  return v7;
  #L35f9d6.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f9dc.  v2:= temp;
  #L35f9de.  v3:= v9;
  #L35f9e0.  if v3 >= v2 then goto L35fa18;
  #L35f9e4.  if v1 == 0 then goto L35f9fa;
  #L35f9e8.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35f9ee.  v4:= temp;
  #L35f9f0.  v5:= v6.`org.threeten.bp.format.c$m.i` @type ^`char` @kind char;
  #L35f9f4.  if v4 != v5 then goto L35fa18;
  #L35f9f8.  goto L35fa12;
  #L35f9fa.  call temp:= `charAt`(v8, v3) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35fa00.  v4:= temp;
  #L35fa02.  v5:= v6.`org.threeten.bp.format.c$m.i` @type ^`char` @kind char;
  #L35fa06.  call temp:= `c`(v7, v4, v5) @signature `Lorg/threeten/bp/format/d;.c:(CC)Z` @kind virtual;
  #L35fa0c.  v4:= temp;
  #L35fa0e.  if v4 == 0 then goto L35fa18;
  #L35fa12.  v3:= v3 + 1;
  #L35fa16.  goto L35f9e0;
  #L35fa18.  v1:= 0I;
  #L35fa1a.  call temp:= `subSequence`(v8, v1, v2) @signature `Ljava/lang/CharSequence;.subSequence:(II)Ljava/lang/CharSequence;` @kind interface;
  #L35fa20.  v8:= temp @kind object;
  #L35fa22.  v1:= v6.`org.threeten.bp.format.c$m.g` @type ^`org.threeten.bp.format.c$h` @kind object;
  #L35fa26.  call temp:= `parse`(v1, v7, v8, v3) @signature `Lorg/threeten/bp/format/c$h;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @kind interface;
  #L35fa2c.  v7:= temp;
  #L35fa2e.  if v7 == v2 then goto L35fa3a;
  #L35fa32.  if v0 == 0 then goto L35fa3a;
  #L35fa36.  v9:= v9 + v3 @kind int;
  #L35fa38.  v7:= ~v9 @kind int;
  #L35fa3a.  return v7;
  #L35fa3c.  v7:= new `java.lang.IndexOutOfBoundsException`;
  #L35fa40.  call `<init>`(v7) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L35fa46.  throw v7;
}
procedure `boolean` `print`(`org.threeten.bp.format.c$m` v3 @kind this, `org.threeten.bp.format.f` v4 @kind object, `java.lang.StringBuilder` v5 @kind object) @signature `Lorg/threeten/bp/format/c$m;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35f8f0.  call temp:= `length`(v5) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L35f8f6.  v0:= temp;
  #L35f8f8.  v1:= v3.`org.threeten.bp.format.c$m.g` @type ^`org.threeten.bp.format.c$h` @kind object;
  #L35f8fc.  call temp:= `print`(v1, v4, v5) @signature `Lorg/threeten/bp/format/c$h;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @kind interface;
  #L35f902.  v4:= temp;
  #L35f904.  v1:= 0I;
  #L35f906.  if v4 != 0 then goto L35f90c;
  #L35f90a.  return v1;
  #L35f90c.  call temp:= `length`(v5) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L35f912.  v4:= temp;
  #L35f914.  v4:= v4 - v0 @kind int;
  #L35f916.  v2:= v3.`org.threeten.bp.format.c$m.h` @type ^`int`;
  #L35f91a.  if v4 > v2 then goto L35f93c;
  #L35f91e.  v2:= v3.`org.threeten.bp.format.c$m.h` @type ^`int`;
  #L35f922.  v2:= v2 - v4 @kind int;
  #L35f924.  if v1 >= v2 then goto L35f938;
  #L35f928.  v2:= v3.`org.threeten.bp.format.c$m.i` @type ^`char` @kind char;
  #L35f92c.  call temp:= `insert`(v5, v0, v2) @signature `Ljava/lang/StringBuilder;.insert:(IC)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f932.  v1:= v1 + 1;
  #L35f936.  goto L35f91e;
  #L35f938.  v4:= 1I;
  #L35f93a.  return v4;
  #L35f93c.  v5:= new `org.threeten.bp.b`;
  #L35f940.  v0:= new `java.lang.StringBuilder`;
  #L35f944.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35f94a.  v1:= "Cannot print as output of " @kind object;
  #L35f94e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f954.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f95a.  v4:= " characters exceeds pad width of " @kind object;
  #L35f95e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f964.  v4:= v3.`org.threeten.bp.format.c$m.h` @type ^`int`;
  #L35f968.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f96e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35f974.  v4:= temp @kind object;
  #L35f976.  call `<init>`(v5, v4) @signature `Lorg/threeten/bp/b;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35f97c.  throw v5;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.format.c$m` v3 @kind this) @signature `Lorg/threeten/bp/format/c$m;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L35fa58.  v0:= new `java.lang.StringBuilder`;
  #L35fa5c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35fa62.  v1:= "Pad(" @kind object;
  #L35fa66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fa6c.  v1:= v3.`org.threeten.bp.format.c$m.g` @type ^`org.threeten.bp.format.c$h` @kind object;
  #L35fa70.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fa76.  v1:= "," @kind object;
  #L35fa7a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fa80.  v1:= v3.`org.threeten.bp.format.c$m.h` @type ^`int`;
  #L35fa84.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fa8a.  v1:= v3.`org.threeten.bp.format.c$m.i` @type ^`char` @kind char;
  #L35fa8e.  v2:= 32I;
  #L35fa92.  if v1 != v2 then goto L35fa9c;
  #L35fa96.  v1:= ")" @kind object;
  #L35fa9a.  goto L35facc;
  #L35fa9c.  v1:= new `java.lang.StringBuilder`;
  #L35faa0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35faa6.  v2:= ",'" @kind object;
  #L35faaa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fab0.  v2:= v3.`org.threeten.bp.format.c$m.i` @type ^`char` @kind char;
  #L35fab4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35faba.  v2:= "')" @kind object;
  #L35fabe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fac4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35faca.  v1:= temp @kind object;
  #L35facc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35fad2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35fad8.  v0:= temp @kind object;
  #L35fada.  return v0 @kind object;
}
