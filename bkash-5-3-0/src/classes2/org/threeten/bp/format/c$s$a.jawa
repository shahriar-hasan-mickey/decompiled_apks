record `org.threeten.bp.format.c$s$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`org.threeten.bp.format.c$s$a` v0 @kind this) @signature `Lorg/threeten/bp/format/c$s$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3608ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3608f2.  return @kind void;
}
procedure `int` `a`(`org.threeten.bp.format.c$s$a` v2 @kind this, `java.lang.String` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lorg/threeten/bp/format/c$s$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3608bc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3608c2.  v0:= temp;
  #L3608c4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3608ca.  v1:= temp;
  #L3608cc.  v0:= v0 - v1 @kind int;
  #L3608ce.  if v0 != 0 then goto L3608da;
  #L3608d2.  call temp:= `compareTo`(v3, v4) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L3608d8.  v0:= temp;
  #L3608da.  return v0;
}
procedure `int` `compare`(`org.threeten.bp.format.c$s$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lorg/threeten/bp/format/c$s$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L360898.  v1:= (`java.lang.String`) v1 @kind object;
  #L36089c.  v2:= (`java.lang.String`) v2 @kind object;
  #L3608a0.  call temp:= `a`(v0, v1, v2) @signature `Lorg/threeten/bp/format/c$s$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L3608a6.  v1:= temp;
  #L3608a8.  return v1;
}
