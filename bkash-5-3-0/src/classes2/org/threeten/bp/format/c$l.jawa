record `org.threeten.bp.format.c$l` @kind class @AccessFlag FINAL extends `org.threeten.bp.format.c$h` @kind interface {
  `java.lang.String` `org.threeten.bp.format.c$l.g` @AccessFlag PRIVATE_FINAL;
  `int` `org.threeten.bp.format.c$l.h` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String`[] `@@org.threeten.bp.format.c$l.i` @AccessFlag STATIC_FINAL;
global `org.threeten.bp.format.c$l` `@@org.threeten.bp.format.c$l.j` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lorg/threeten/bp/format/c$l;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L35f85c.  v0:= "+HH" @kind object;
  #L35f860.  v1:= "+HHmm" @kind object;
  #L35f864.  v2:= "+HH:mm" @kind object;
  #L35f868.  v3:= "+HHMM" @kind object;
  #L35f86c.  v4:= "+HH:MM" @kind object;
  #L35f870.  v5:= "+HHMMss" @kind object;
  #L35f874.  v6:= "+HH:MM:ss" @kind object;
  #L35f878.  v7:= "+HHMMSS" @kind object;
  #L35f87c.  v8:= "+HH:MM:SS" @kind object;
  #L35f880.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5, v6, v7, v8];
  #L35f886.  v0:= temp @kind object;
  #L35f888.  `@@org.threeten.bp.format.c$l.i` @type ^`java.lang.String`[] := v0 @kind object;
  #L35f88c.  v0:= new `org.threeten.bp.format.c$l`;
  #L35f890.  v1:= "Z" @kind object;
  #L35f894.  v2:= "+HH:MM:ss" @kind object;
  #L35f898.  call `<init>`(v0, v1, v2) @signature `Lorg/threeten/bp/format/c$l;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L35f89e.  `@@org.threeten.bp.format.c$l.j` @type ^`org.threeten.bp.format.c$l` := v0 @kind object;
  #L35f8a2.  return @kind void;
}
procedure `void` `<init>`(`org.threeten.bp.format.c$l` v1 @kind this, `java.lang.String` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lorg/threeten/bp/format/c$l;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L35f8b4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35f8ba.  v0:= "noOffsetText" @kind object;
  #L35f8be.  call temp:= `i`(v2, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35f8c4.  v0:= "pattern" @kind object;
  #L35f8c8.  call temp:= `i`(v3, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35f8ce.  v1.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` := v2 @kind object;
  #L35f8d2.  call temp:= `a`(v1, v3) @signature `Lorg/threeten/bp/format/c$l;.a:(Ljava/lang/String;)I` @kind direct;
  #L35f8d8.  v2:= temp;
  #L35f8da.  v1.`org.threeten.bp.format.c$l.h` @type ^`int` := v2;
  #L35f8de.  return @kind void;
}
procedure `int` `a`(`org.threeten.bp.format.c$l` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lorg/threeten/bp/format/c$l;.a:(Ljava/lang/String;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L35f608.  v0:= 0I;
  #L35f60a.  v1:= `@@org.threeten.bp.format.c$l.i` @type ^`java.lang.String`[] @kind object;
  #L35f60e.  v2:= length @variable v1;
  #L35f610.  if v0 >= v2 then goto L35f62c;
  #L35f614.  v1:= v1[v0] @kind object;
  #L35f618.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L35f61e.  v1:= temp;
  #L35f620.  if v1 == 0 then goto L35f626;
  #L35f624.  return v0;
  #L35f626.  v0:= v0 + 1;
  #L35f62a.  goto L35f60a;
  #L35f62c.  v0:= new `java.lang.IllegalArgumentException`;
  #L35f630.  v1:= new `java.lang.StringBuilder`;
  #L35f634.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35f63a.  v2:= "Invalid zone offset pattern: " @kind object;
  #L35f63e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f644.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f64a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35f650.  v4:= temp @kind object;
  #L35f652.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35f658.  throw v0;
}
procedure `boolean` `b`(`org.threeten.bp.format.c$l` v5 @kind this, `int`[] v6 @kind object, `int` v7 , `java.lang.CharSequence` v8 @kind object, `boolean` v9 ) @signature `Lorg/threeten/bp/format/c$l;.b:([IILjava/lang/CharSequence;Z)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35f3e0.  v0:= v5.`org.threeten.bp.format.c$l.h` @type ^`int`;
  #L35f3e4.  v1:= v0 + 3;
  #L35f3e8.  v1:= v1 / 2;
  #L35f3ec.  v2:= 0I;
  #L35f3ee.  if v1 >= v7 then goto L35f3f4;
  #L35f3f2.  return v2;
  #L35f3f4.  v1:= v6[v2];
  #L35f3f8.  v0:= v0 %% 2;
  #L35f3fc.  if v0 != 0 then goto L35f42e;
  #L35f400.  v0:= 1I;
  #L35f402.  if v7 <= v0 then goto L35f42e;
  #L35f406.  v0:= v1 + 1;
  #L35f40a.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f410.  v3:= temp;
  #L35f412.  if v0 > v3 then goto L35f42c;
  #L35f416.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35f41c.  v1:= temp;
  #L35f41e.  v3:= 58I;
  #L35f422.  if v1 == v3 then goto L35f428;
  #L35f426.  goto L35f42c;
  #L35f428.  v1:= v0;
  #L35f42a.  goto L35f42e;
  #L35f42c.  return v9;
  #L35f42e.  v0:= v1 + 2;
  #L35f432.  call temp:= `length`(v8) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f438.  v3:= temp;
  #L35f43a.  if v0 <= v3 then goto L35f440;
  #L35f43e.  return v9;
  #L35f440.  v0:= v1 + 1;
  #L35f444.  call temp:= `charAt`(v8, v1) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35f44a.  v1:= temp;
  #L35f44c.  v3:= v0 + 1;
  #L35f450.  call temp:= `charAt`(v8, v0) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35f456.  v8:= temp;
  #L35f458.  v0:= 48I;
  #L35f45c.  if v1 < v0 then goto L35f494;
  #L35f460.  v4:= 57I;
  #L35f464.  if v1 > v4 then goto L35f494;
  #L35f468.  if v8 < v0 then goto L35f494;
  #L35f46c.  if v8 <= v4 then goto L35f472;
  #L35f470.  goto L35f494;
  #L35f472.  v1:= v1 - v0 @kind int;
  #L35f474.  v1:= v1 * 10;
  #L35f478.  v8:= v8 - v0 @kind int;
  #L35f47a.  v1:= v1 + v8 @kind int;
  #L35f47c.  if v1 < 0 then goto L35f494;
  #L35f480.  v8:= 59I;
  #L35f484.  if v1 <= v8 then goto L35f48a;
  #L35f488.  goto L35f494;
  #L35f48a.  v6[v7]:= v1;
  #L35f48e.  v6[v2]:= v3;
  #L35f492.  return v2;
  #L35f494.  return v9;
}
procedure `int` `parse`(`org.threeten.bp.format.c$l` v15 @kind this, `org.threeten.bp.format.d` v16 @kind object, `java.lang.CharSequence` v17 @kind object, `int` v18 ) @signature `Lorg/threeten/bp/format/c$l;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L35f66c.  v0:= v15 @kind object;
  #L35f66e.  v7:= v17 @kind object;
  #L35f672.  v8:= v18;
  #L35f676.  call temp:= `length`(v17) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35f67c.  v1:= temp;
  #L35f67e.  v2:= v0.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` @kind object;
  #L35f682.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L35f688.  v9:= temp;
  #L35f68a.  if v9 != 0 then goto L35f6b0;
  #L35f68e.  if v8 != v1 then goto L35f6f6;
  #L35f692.  v2:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L35f696.  v3:= 0L;
  #L35f69a.  v1:= v16 @kind object;
  #L35f69e.  v5:= v18;
  #L35f6a2.  v6:= v18;
  #L35f6a6.  call temp:= `q`(v1, v2, v3, v5, v6) @signature `Lorg/threeten/bp/format/d;.q:(Lorg/threeten/bp/temporal/i;JII)I` @kind virtual;
  #L35f6ac.  v1:= temp;
  #L35f6ae.  return v1;
  #L35f6b0.  if v8 != v1 then goto L35f6b8;
  #L35f6b4.  v1:= ~v8 @kind int;
  #L35f6b6.  return v1;
  #L35f6b8.  v4:= v0.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` @kind object;
  #L35f6bc.  v5:= 0I;
  #L35f6be.  v1:= v16 @kind object;
  #L35f6c2.  v2:= v17 @kind object;
  #L35f6c6.  v3:= v18;
  #L35f6ca.  v6:= v9;
  #L35f6cc.  call temp:= `u`(v1, v2, v3, v4, v5, v6) @signature `Lorg/threeten/bp/format/d;.u:(Ljava/lang/CharSequence;ILjava/lang/CharSequence;II)Z` @kind virtual;
  #L35f6d2.  v1:= temp;
  #L35f6d4.  if v1 == 0 then goto L35f6f6;
  #L35f6d8.  v2:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L35f6dc.  v3:= 0L;
  #L35f6e0.  v6:= v8 + v9 @kind int;
  #L35f6e4.  v1:= v16 @kind object;
  #L35f6e8.  v5:= v18;
  #L35f6ec.  call temp:= `q`(v1, v2, v3, v5, v6) @signature `Lorg/threeten/bp/format/d;.q:(Lorg/threeten/bp/temporal/i;JII)I` @kind virtual;
  #L35f6f2.  v1:= temp;
  #L35f6f4.  return v1;
  #L35f6f6.  call temp:= `charAt`(v17, v18) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35f6fc.  v1:= temp;
  #L35f6fe.  v2:= 43I;
  #L35f702.  v3:= 45I;
  #L35f706.  if v1 == v2 then goto L35f70e;
  #L35f70a.  if v1 != v3 then goto L35f7b6;
  #L35f70e.  v2:= 1I;
  #L35f710.  if v1 != v3 then goto L35f718;
  #L35f714.  v1:= -1I;
  #L35f716.  goto L35f71a;
  #L35f718.  v1:= 1I;
  #L35f71a.  v3:= 4I;
  #L35f71c.  v3:= new `int`[v3];
  #L35f720.  v4:= v8 + 1;
  #L35f724.  v5:= 0I;
  #L35f726.  v3[v5]:= v4;
  #L35f72a.  call temp:= `b`(v15, v3, v2, v7, v2) @signature `Lorg/threeten/bp/format/c$l;.b:([IILjava/lang/CharSequence;Z)Z` @kind direct;
  #L35f730.  v4:= temp;
  #L35f732.  v6:= 2I;
  #L35f734.  v10:= 3I;
  #L35f736.  if v4 != 0 then goto L35f766;
  #L35f73a.  v4:= v0.`org.threeten.bp.format.c$l.h` @type ^`int`;
  #L35f73e.  if v4 < v10 then goto L35f746;
  #L35f742.  v4:= 1I;
  #L35f744.  goto L35f748;
  #L35f746.  v4:= 0I;
  #L35f748.  call temp:= `b`(v15, v3, v6, v7, v4) @signature `Lorg/threeten/bp/format/c$l;.b:([IILjava/lang/CharSequence;Z)Z` @kind direct;
  #L35f74e.  v4:= temp;
  #L35f750.  if v4 != 0 then goto L35f766;
  #L35f754.  call temp:= `b`(v15, v3, v10, v7, v5) @signature `Lorg/threeten/bp/format/c$l;.b:([IILjava/lang/CharSequence;Z)Z` @kind direct;
  #L35f75a.  v4:= temp;
  #L35f75c.  if v4 == 0 then goto L35f762;
  #L35f760.  goto L35f766;
  #L35f762.  v4:= 0I;
  #L35f764.  goto L35f768;
  #L35f766.  v4:= 1I;
  #L35f768.  if v4 != 0 then goto L35f7b6;
  #L35f76c.  v11:= (`long`) v1 @kind i2l;
  #L35f76e.  v1:= v3[v2];
  #L35f772.  v1:= (`long`) v1 @kind i2l;
  #L35f774.  v13:= 3600L;
  #L35f778.  v1:= v1 * v13 @kind long;
  #L35f77c.  v4:= v3[v6];
  #L35f780.  v6:= (`long`) v4 @kind i2l;
  #L35f782.  v13:= 60L;
  #L35f786.  v6:= v6 * v13 @kind long;
  #L35f78a.  v1:= v1 + v6 @kind long;
  #L35f78c.  v4:= v3[v10];
  #L35f790.  v6:= (`long`) v4 @kind i2l;
  #L35f792.  v1:= v1 + v6 @kind long;
  #L35f794.  v6:= v11 * v1 @kind long;
  #L35f798.  v2:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L35f79c.  v9:= v3[v5];
  #L35f7a0.  v1:= v16 @kind object;
  #L35f7a4.  v3:= v6 @kind wide;
  #L35f7a6.  v5:= v18;
  #L35f7aa.  v6:= v9;
  #L35f7ac.  call temp:= `q`(v1, v2, v3, v5, v6) @signature `Lorg/threeten/bp/format/d;.q:(Lorg/threeten/bp/temporal/i;JII)I` @kind virtual;
  #L35f7b2.  v1:= temp;
  #L35f7b4.  return v1;
  #L35f7b6.  if v9 != 0 then goto L35f7d8;
  #L35f7ba.  v2:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L35f7be.  v3:= 0L;
  #L35f7c2.  v6:= v8 + v9 @kind int;
  #L35f7c6.  v1:= v16 @kind object;
  #L35f7ca.  v5:= v18;
  #L35f7ce.  call temp:= `q`(v1, v2, v3, v5, v6) @signature `Lorg/threeten/bp/format/d;.q:(Lorg/threeten/bp/temporal/i;JII)I` @kind virtual;
  #L35f7d4.  v1:= temp;
  #L35f7d6.  return v1;
  #L35f7d8.  v1:= ~v8 @kind int;
  #L35f7da.  return v1;
}
procedure `boolean` `print`(`org.threeten.bp.format.c$l` v7 @kind this, `org.threeten.bp.format.f` v8 @kind object, `java.lang.StringBuilder` v9 @kind object) @signature `Lorg/threeten/bp/format/c$l;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L35f4a8.  v0:= `@@org.threeten.bp.temporal.a.OFFSET_SECONDS` @type ^`org.threeten.bp.temporal.a` @kind object;
  #L35f4ac.  call temp:= `f`(v8, v0) @signature `Lorg/threeten/bp/format/f;.f:(Lorg/threeten/bp/temporal/i;)Ljava/lang/Long;` @kind virtual;
  #L35f4b2.  v8:= temp @kind object;
  #L35f4b4.  if v8 != 0 then goto L35f4bc;
  #L35f4b8.  v8:= 0I;
  #L35f4ba.  return v8;
  #L35f4bc.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L35f4c2.  v0:= temp @kind wide;
  #L35f4c4.  call temp:= `q`(v0) @signature `Lte/d;.q:(J)I` @kind static;
  #L35f4ca.  v8:= temp;
  #L35f4cc.  v0:= 1I;
  #L35f4ce.  if v8 != 0 then goto L35f4e0;
  #L35f4d2.  v8:= v7.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` @kind object;
  #L35f4d6.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f4dc.  goto L35f5f4;
  #L35f4e0.  v1:= v8 / 3600;
  #L35f4e4.  v1:= v1 %% 100;
  #L35f4e8.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L35f4ee.  v1:= temp;
  #L35f4f0.  v2:= v8 / 60;
  #L35f4f4.  v2:= v2 %% 60;
  #L35f4f8.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L35f4fe.  v2:= temp;
  #L35f500.  v3:= v8 %% 60;
  #L35f504.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L35f50a.  v3:= temp;
  #L35f50c.  call temp:= `length`(v9) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L35f512.  v4:= temp;
  #L35f514.  if v8 >= 0 then goto L35f51e;
  #L35f518.  v8:= "-" @kind object;
  #L35f51c.  goto L35f522;
  #L35f51e.  v8:= "+" @kind object;
  #L35f522.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f528.  v8:= v1 / 10;
  #L35f52c.  v8:= v8 + 48;
  #L35f530.  v8:= (`char`) v8 @kind i2c;
  #L35f532.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f538.  v8:= v1 %% 10;
  #L35f53c.  v8:= v8 + 48;
  #L35f540.  v8:= (`char`) v8 @kind i2c;
  #L35f542.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f548.  v8:= v7.`org.threeten.bp.format.c$l.h` @type ^`int`;
  #L35f54c.  v5:= 3I;
  #L35f54e.  if v8 >= v5 then goto L35f55a;
  #L35f552.  if v8 < v0 then goto L35f5e0;
  #L35f556.  if v2 <= 0 then goto L35f5e0;
  #L35f55a.  v8:= v8 %% 2;
  #L35f55e.  v5:= ":" @kind object;
  #L35f562.  v6:= "" @kind object;
  #L35f566.  if v8 != 0 then goto L35f56e;
  #L35f56a.  v8:= v5 @kind object;
  #L35f56c.  goto L35f570;
  #L35f56e.  v8:= v6 @kind object;
  #L35f570.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f576.  v8:= v2 / 10;
  #L35f57a.  v8:= v8 + 48;
  #L35f57e.  v8:= (`char`) v8 @kind i2c;
  #L35f580.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f586.  v8:= v2 %% 10;
  #L35f58a.  v8:= v8 + 48;
  #L35f58e.  v8:= (`char`) v8 @kind i2c;
  #L35f590.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f596.  v1:= v1 + v2 @kind int;
  #L35f598.  v8:= v7.`org.threeten.bp.format.c$l.h` @type ^`int`;
  #L35f59c.  v2:= 7I;
  #L35f59e.  if v8 >= v2 then goto L35f5ac;
  #L35f5a2.  v2:= 5I;
  #L35f5a4.  if v8 < v2 then goto L35f5e0;
  #L35f5a8.  if v3 <= 0 then goto L35f5e0;
  #L35f5ac.  v8:= v8 %% 2;
  #L35f5b0.  if v8 != 0 then goto L35f5b6;
  #L35f5b4.  goto L35f5b8;
  #L35f5b6.  v5:= v6 @kind object;
  #L35f5b8.  call temp:= `append`(v9, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f5be.  v8:= v3 / 10;
  #L35f5c2.  v8:= v8 + 48;
  #L35f5c6.  v8:= (`char`) v8 @kind i2c;
  #L35f5c8.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f5ce.  v8:= v3 %% 10;
  #L35f5d2.  v8:= v8 + 48;
  #L35f5d6.  v8:= (`char`) v8 @kind i2c;
  #L35f5d8.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f5de.  v1:= v1 + v3 @kind int;
  #L35f5e0.  if v1 != 0 then goto L35f5f4;
  #L35f5e4.  call `setLength`(v9, v4) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L35f5ea.  v8:= v7.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` @kind object;
  #L35f5ee.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f5f4.  return v0;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.format.c$l` v4 @kind this) @signature `Lorg/threeten/bp/format/c$l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35f7ec.  v0:= v4.`org.threeten.bp.format.c$l.g` @type ^`java.lang.String` @kind object;
  #L35f7f0.  v1:= "'" @kind object;
  #L35f7f4.  v2:= "''" @kind object;
  #L35f7f8.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L35f7fe.  v0:= temp @kind object;
  #L35f800.  v1:= new `java.lang.StringBuilder`;
  #L35f804.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35f80a.  v2:= "Offset(" @kind object;
  #L35f80e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f814.  v2:= `@@org.threeten.bp.format.c$l.i` @type ^`java.lang.String`[] @kind object;
  #L35f818.  v3:= v4.`org.threeten.bp.format.c$l.h` @type ^`int`;
  #L35f81c.  v2:= v2[v3] @kind object;
  #L35f820.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f826.  v2:= ",'" @kind object;
  #L35f82a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f830.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f836.  v0:= "')" @kind object;
  #L35f83a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35f840.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35f846.  v0:= temp @kind object;
  #L35f848.  return v0 @kind object;
}
