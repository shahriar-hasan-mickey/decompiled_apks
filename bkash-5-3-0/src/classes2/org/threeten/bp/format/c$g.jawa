record `org.threeten.bp.format.c$g` @kind class @AccessFlag FINAL extends `org.threeten.bp.format.c$h` @kind interface {
  `org.threeten.bp.format.c$h`[] `org.threeten.bp.format.c$g.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.threeten.bp.format.c$g.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.threeten.bp.format.c$g` v1 @kind this, `java.util.List` v2 @kind object, `boolean` v3 ) @signature `Lorg/threeten/bp/format/c$g;.<init>:(Ljava/util/List;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L35e240.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35e246.  v0:= temp;
  #L35e248.  v0:= new `org.threeten.bp.format.c$h`[v0];
  #L35e24c.  call temp:= `toArray`(v2, v0) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L35e252.  v2:= temp @kind object;
  #L35e254.  v2:= (`org.threeten.bp.format.c$h`[]) v2 @kind object;
  #L35e258.  call `<init>`(v1, v2, v3) @signature `Lorg/threeten/bp/format/c$g;.<init>:([Lorg/threeten/bp/format/c$h;Z)V` @kind direct;
  #L35e25e.  return @kind void;
}
procedure `void` `<init>`(`org.threeten.bp.format.c$g` v0 @kind this, `org.threeten.bp.format.c$h`[] v1 @kind object, `boolean` v2 ) @signature `Lorg/threeten/bp/format/c$g;.<init>:([Lorg/threeten/bp/format/c$h;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L35e270.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e276.  v0.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] := v1 @kind object;
  #L35e27a.  v0.`org.threeten.bp.format.c$g.h` @type ^`boolean` := v2 @kind boolean;
  #L35e27e.  return @kind void;
}
procedure `org.threeten.bp.format.c$g` `a`(`org.threeten.bp.format.c$g` v2 @kind this, `boolean` v3 ) @signature `Lorg/threeten/bp/format/c$g;.a:(Z)Lorg/threeten/bp/format/c$g;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35e214.  v0:= v2.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e218.  if v3 != v0 then goto L35e21e;
  #L35e21c.  return v2 @kind object;
  #L35e21e.  v0:= new `org.threeten.bp.format.c$g`;
  #L35e222.  v1:= v2.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e226.  call `<init>`(v0, v1, v3) @signature `Lorg/threeten/bp/format/c$g;.<init>:([Lorg/threeten/bp/format/c$h;Z)V` @kind direct;
  #L35e22c.  return v0 @kind object;
}
procedure `int` `parse`(`org.threeten.bp.format.c$g` v6 @kind this, `org.threeten.bp.format.d` v7 @kind object, `java.lang.CharSequence` v8 @kind object, `int` v9 ) @signature `Lorg/threeten/bp/format/c$g;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35e120.  v0:= v6.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e124.  v1:= 0I;
  #L35e126.  if v0 == 0 then goto L35e166;
  #L35e12a.  call `t`(v7) @signature `Lorg/threeten/bp/format/d;.t:()V` @kind virtual;
  #L35e130.  v0:= v6.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e134.  v2:= length @variable v0;
  #L35e136.  v4:= v9;
  #L35e138.  v3:= 0I;
  #L35e13a.  if v3 >= v2 then goto L35e15c;
  #L35e13e.  v5:= v0[v3] @kind object;
  #L35e142.  call temp:= `parse`(v5, v7, v8, v4) @signature `Lorg/threeten/bp/format/c$h;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @kind interface;
  #L35e148.  v4:= temp;
  #L35e14a.  if v4 >= 0 then goto L35e156;
  #L35e14e.  call `g`(v7, v1) @signature `Lorg/threeten/bp/format/d;.g:(Z)V` @kind virtual;
  #L35e154.  return v9;
  #L35e156.  v3:= v3 + 1;
  #L35e15a.  goto L35e13a;
  #L35e15c.  v8:= 1I;
  #L35e15e.  call `g`(v7, v8) @signature `Lorg/threeten/bp/format/d;.g:(Z)V` @kind virtual;
  #L35e164.  return v4;
  #L35e166.  v0:= v6.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e16a.  v2:= length @variable v0;
  #L35e16c.  if v1 >= v2 then goto L35e188;
  #L35e170.  v3:= v0[v1] @kind object;
  #L35e174.  call temp:= `parse`(v3, v7, v8, v9) @signature `Lorg/threeten/bp/format/c$h;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @kind interface;
  #L35e17a.  v9:= temp;
  #L35e17c.  if v9 >= 0 then goto L35e182;
  #L35e180.  goto L35e188;
  #L35e182.  v1:= v1 + 1;
  #L35e186.  goto L35e16c;
  #L35e188.  return v9;
}
procedure `boolean` `print`(`org.threeten.bp.format.c$g` v6 @kind this, `org.threeten.bp.format.f` v7 @kind object, `java.lang.StringBuilder` v8 @kind object) @signature `Lorg/threeten/bp/format/c$g;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L35e090.  call temp:= `length`(v8) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L35e096.  v0:= temp;
  #L35e098.  v1:= v6.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e09c.  if v1 == 0 then goto L35e0a6;
  #L35e0a0.  call `h`(v7) @signature `Lorg/threeten/bp/format/f;.h:()V` @kind virtual;
  #L35e0a6.  v1:= v6.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e0aa.  v2:= length @variable v1;
  #L35e0ac.  v3:= 0I;
  #L35e0ae.  v4:= 1I;
  #L35e0b0.  if v3 >= v2 then goto L35e0e0;
  #L35e0b4.  v5:= v1[v3] @kind object;
  #L35e0b8.  call temp:= `print`(v5, v7, v8) @signature `Lorg/threeten/bp/format/c$h;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @kind interface;
  #L35e0be.  v5:= temp;
  #L35e0c0.  if v5 != 0 then goto L35e0da;
  #L35e0c4.  call `setLength`(v8, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L35e0ca.  v8:= v6.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e0ce.  if v8 == 0 then goto L35e0d8;
  #L35e0d2.  call `b`(v7) @signature `Lorg/threeten/bp/format/f;.b:()V` @kind virtual;
  #L35e0d8.  return v4;
  #L35e0da.  v3:= v3 + 1;
  #L35e0de.  goto L35e0ae;
  #L35e0e0.  v8:= v6.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e0e4.  if v8 == 0 then goto L35e0ee;
  #L35e0e8.  call `b`(v7) @signature `Lorg/threeten/bp/format/f;.b:()V` @kind virtual;
  #L35e0ee.  return v4;
  #L35e0f0.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L35e0f2.  v0:= v6.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e0f6.  if v0 == 0 then goto L35e100;
  #L35e0fa.  call `b`(v7) @signature `Lorg/threeten/bp/format/f;.b:()V` @kind virtual;
  #L35e100.  throw v8;
  catch `java.lang.Throwable` @[L35e0a6..L35e0ca] goto L35e0f0;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.format.c$g` v5 @kind this) @signature `Lorg/threeten/bp/format/c$g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35e19c.  v0:= new `java.lang.StringBuilder`;
  #L35e1a0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e1a6.  v1:= v5.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e1aa.  if v1 == 0 then goto L35e1fa;
  #L35e1ae.  v1:= v5.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e1b2.  if v1 == 0 then goto L35e1bc;
  #L35e1b6.  v1:= "[" @kind object;
  #L35e1ba.  goto L35e1c0;
  #L35e1bc.  v1:= "(" @kind object;
  #L35e1c0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e1c6.  v1:= v5.`org.threeten.bp.format.c$g.g` @type ^`org.threeten.bp.format.c$h`[] @kind object;
  #L35e1ca.  v2:= length @variable v1;
  #L35e1cc.  v3:= 0I;
  #L35e1ce.  if v3 >= v2 then goto L35e1e2;
  #L35e1d2.  v4:= v1[v3] @kind object;
  #L35e1d6.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e1dc.  v3:= v3 + 1;
  #L35e1e0.  goto L35e1ce;
  #L35e1e2.  v1:= v5.`org.threeten.bp.format.c$g.h` @type ^`boolean` @kind boolean;
  #L35e1e6.  if v1 == 0 then goto L35e1f0;
  #L35e1ea.  v1:= "]" @kind object;
  #L35e1ee.  goto L35e1f4;
  #L35e1f0.  v1:= ")" @kind object;
  #L35e1f4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e1fa.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e200.  v0:= temp @kind object;
  #L35e202.  return v0 @kind object;
}
