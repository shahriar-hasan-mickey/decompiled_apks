record `org.threeten.bp.format.c$i` @kind class @AccessFlag FINAL extends `org.threeten.bp.format.c$h` @kind interface {
  `org.threeten.bp.temporal.i` `org.threeten.bp.format.c$i.g` @AccessFlag PRIVATE_FINAL;
  `int` `org.threeten.bp.format.c$i.h` @AccessFlag PRIVATE_FINAL;
  `int` `org.threeten.bp.format.c$i.i` @AccessFlag PRIVATE_FINAL;
  `boolean` `org.threeten.bp.format.c$i.j` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`org.threeten.bp.format.c$i` v2 @kind this, `org.threeten.bp.temporal.i` v3 @kind object, `int` v4 , `int` v5 , `boolean` v6 ) @signature `Lorg/threeten/bp/format/c$i;.<init>:(Lorg/threeten/bp/temporal/i;IIZ)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L35e614.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L35e61a.  v0:= "field" @kind object;
  #L35e61e.  call temp:= `i`(v3, v0) @signature `Lte/d;.i:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L35e624.  call temp:= `range`(v3) @signature `Lorg/threeten/bp/temporal/i;.range:()Lorg/threeten/bp/temporal/n;` @kind interface;
  #L35e62a.  v0:= temp @kind object;
  #L35e62c.  call temp:= `isFixed`(v0) @signature `Lorg/threeten/bp/temporal/n;.isFixed:()Z` @kind virtual;
  #L35e632.  v0:= temp;
  #L35e634.  if v0 == 0 then goto L35e6fe;
  #L35e638.  if v4 < 0 then goto L35e6d0;
  #L35e63c.  v0:= 9I;
  #L35e640.  if v4 > v0 then goto L35e6d0;
  #L35e644.  v1:= 1I;
  #L35e646.  if v5 < v1 then goto L35e6a2;
  #L35e64a.  if v5 > v0 then goto L35e6a2;
  #L35e64e.  if v5 < v4 then goto L35e664;
  #L35e652.  v2.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` := v3 @kind object;
  #L35e656.  v2.`org.threeten.bp.format.c$i.h` @type ^`int` := v4;
  #L35e65a.  v2.`org.threeten.bp.format.c$i.i` @type ^`int` := v5;
  #L35e65e.  v2.`org.threeten.bp.format.c$i.j` @type ^`boolean` := v6 @kind boolean;
  #L35e662.  return @kind void;
  #L35e664.  v3:= new `java.lang.IllegalArgumentException`;
  #L35e668.  v6:= new `java.lang.StringBuilder`;
  #L35e66c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e672.  v0:= "Maximum width must exceed or equal the minimum width but " @kind object;
  #L35e676.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e67c.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e682.  v5:= " < " @kind object;
  #L35e686.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e68c.  call temp:= `append`(v6, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e692.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e698.  v4:= temp @kind object;
  #L35e69a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e6a0.  throw v3;
  #L35e6a2.  v3:= new `java.lang.IllegalArgumentException`;
  #L35e6a6.  v4:= new `java.lang.StringBuilder`;
  #L35e6aa.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e6b0.  v6:= "Maximum width must be from 1 to 9 inclusive but was " @kind object;
  #L35e6b4.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e6ba.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e6c0.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e6c6.  v4:= temp @kind object;
  #L35e6c8.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e6ce.  throw v3;
  #L35e6d0.  v3:= new `java.lang.IllegalArgumentException`;
  #L35e6d4.  v5:= new `java.lang.StringBuilder`;
  #L35e6d8.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e6de.  v6:= "Minimum width must be from 0 to 9 inclusive but was " @kind object;
  #L35e6e2.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e6e8.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e6ee.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e6f4.  v4:= temp @kind object;
  #L35e6f6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e6fc.  throw v3;
  #L35e6fe.  v4:= new `java.lang.IllegalArgumentException`;
  #L35e702.  v5:= new `java.lang.StringBuilder`;
  #L35e706.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e70c.  v6:= "Field must have a fixed set of values: " @kind object;
  #L35e710.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e716.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e71c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e722.  v3:= temp @kind object;
  #L35e724.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35e72a.  throw v4;
}
procedure `long` `a`(`org.threeten.bp.format.c$i` v4 @kind this, `java.math.BigDecimal` v5 @kind object) @signature `Lorg/threeten/bp/format/c$i;.a:(Ljava/math/BigDecimal;)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e59c.  v0:= v4.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e5a0.  call temp:= `range`(v0) @signature `Lorg/threeten/bp/temporal/i;.range:()Lorg/threeten/bp/temporal/n;` @kind interface;
  #L35e5a6.  v0:= temp @kind object;
  #L35e5a8.  call temp:= `getMinimum`(v0) @signature `Lorg/threeten/bp/temporal/n;.getMinimum:()J` @kind virtual;
  #L35e5ae.  v1:= temp @kind wide;
  #L35e5b0.  call temp:= `valueOf`(v1) @signature `Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;` @kind static;
  #L35e5b6.  v1:= temp @kind object;
  #L35e5b8.  call temp:= `getMaximum`(v0) @signature `Lorg/threeten/bp/temporal/n;.getMaximum:()J` @kind virtual;
  #L35e5be.  v2:= temp @kind wide;
  #L35e5c0.  call temp:= `valueOf`(v2) @signature `Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;` @kind static;
  #L35e5c6.  v0:= temp @kind object;
  #L35e5c8.  call temp:= `subtract`(v0, v1) @signature `Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e5ce.  v0:= temp @kind object;
  #L35e5d0.  v2:= `@@java.math.BigDecimal.ONE` @type ^`java.math.BigDecimal` @kind object;
  #L35e5d4.  call temp:= `add`(v0, v2) @signature `Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e5da.  v0:= temp @kind object;
  #L35e5dc.  call temp:= `multiply`(v5, v0) @signature `Ljava/math/BigDecimal;.multiply:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e5e2.  v5:= temp @kind object;
  #L35e5e4.  v0:= `@@java.math.RoundingMode.FLOOR` @type ^`java.math.RoundingMode` @kind object;
  #L35e5e8.  v2:= 0I;
  #L35e5ea.  call temp:= `setScale`(v5, v2, v0) @signature `Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e5f0.  v5:= temp @kind object;
  #L35e5f2.  call temp:= `add`(v5, v1) @signature `Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e5f8.  v5:= temp @kind object;
  #L35e5fa.  call temp:= `longValueExact`(v5) @signature `Ljava/math/BigDecimal;.longValueExact:()J` @kind virtual;
  #L35e600.  v0:= temp @kind wide;
  #L35e602.  return v0 @kind wide;
}
procedure `java.math.BigDecimal` `b`(`org.threeten.bp.format.c$i` v4 @kind this, `long` v5 ) @signature `Lorg/threeten/bp/format/c$i;.b:(J)Ljava/math/BigDecimal;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e500.  v0:= v4.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e504.  call temp:= `range`(v0) @signature `Lorg/threeten/bp/temporal/i;.range:()Lorg/threeten/bp/temporal/n;` @kind interface;
  #L35e50a.  v0:= temp @kind object;
  #L35e50c.  v1:= v4.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e510.  call temp:= `checkValidValue`(v0, v5, v1) @signature `Lorg/threeten/bp/temporal/n;.checkValidValue:(JLorg/threeten/bp/temporal/i;)J` @kind virtual;
  #L35e516.  call temp:= `getMinimum`(v0) @signature `Lorg/threeten/bp/temporal/n;.getMinimum:()J` @kind virtual;
  #L35e51c.  v1:= temp @kind wide;
  #L35e51e.  call temp:= `valueOf`(v1) @signature `Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;` @kind static;
  #L35e524.  v1:= temp @kind object;
  #L35e526.  call temp:= `getMaximum`(v0) @signature `Lorg/threeten/bp/temporal/n;.getMaximum:()J` @kind virtual;
  #L35e52c.  v2:= temp @kind wide;
  #L35e52e.  call temp:= `valueOf`(v2) @signature `Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;` @kind static;
  #L35e534.  v0:= temp @kind object;
  #L35e536.  call temp:= `subtract`(v0, v1) @signature `Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e53c.  v0:= temp @kind object;
  #L35e53e.  v2:= `@@java.math.BigDecimal.ONE` @type ^`java.math.BigDecimal` @kind object;
  #L35e542.  call temp:= `add`(v0, v2) @signature `Ljava/math/BigDecimal;.add:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e548.  v0:= temp @kind object;
  #L35e54a.  call temp:= `valueOf`(v5) @signature `Ljava/math/BigDecimal;.valueOf:(J)Ljava/math/BigDecimal;` @kind static;
  #L35e550.  v5:= temp @kind object;
  #L35e552.  call temp:= `subtract`(v5, v1) @signature `Ljava/math/BigDecimal;.subtract:(Ljava/math/BigDecimal;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e558.  v5:= temp @kind object;
  #L35e55a.  v6:= `@@java.math.RoundingMode.FLOOR` @type ^`java.math.RoundingMode` @kind object;
  #L35e55e.  v1:= 9I;
  #L35e562.  call temp:= `divide`(v5, v0, v1, v6) @signature `Ljava/math/BigDecimal;.divide:(Ljava/math/BigDecimal;ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e568.  v5:= temp @kind object;
  #L35e56a.  v6:= `@@java.math.BigDecimal.ZERO` @type ^`java.math.BigDecimal` @kind object;
  #L35e56e.  call temp:= `compareTo`(v5, v6) @signature `Ljava/math/BigDecimal;.compareTo:(Ljava/math/BigDecimal;)I` @kind virtual;
  #L35e574.  v6:= temp;
  #L35e576.  if v6 != 0 then goto L35e580;
  #L35e57a.  v5:= `@@java.math.BigDecimal.ZERO` @type ^`java.math.BigDecimal` @kind object;
  #L35e57e.  goto L35e588;
  #L35e580.  call temp:= `stripTrailingZeros`(v5) @signature `Ljava/math/BigDecimal;.stripTrailingZeros:()Ljava/math/BigDecimal;` @kind virtual;
  #L35e586.  v5:= temp @kind object;
  #L35e588.  return v5 @kind object;
}
procedure `int` `parse`(`org.threeten.bp.format.c$i` v10 @kind this, `org.threeten.bp.format.d` v11 @kind object, `java.lang.CharSequence` v12 @kind object, `int` v13 ) @signature `Lorg/threeten/bp/format/c$i;.parse:(Lorg/threeten/bp/format/d;Ljava/lang/CharSequence;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35e378.  call temp:= `m`(v11) @signature `Lorg/threeten/bp/format/d;.m:()Z` @kind virtual;
  #L35e37e.  v0:= temp;
  #L35e380.  v1:= 0I;
  #L35e382.  if v0 == 0 then goto L35e38c;
  #L35e386.  v0:= v10.`org.threeten.bp.format.c$i.h` @type ^`int`;
  #L35e38a.  goto L35e38e;
  #L35e38c.  v0:= 0I;
  #L35e38e.  call temp:= `m`(v11) @signature `Lorg/threeten/bp/format/d;.m:()Z` @kind virtual;
  #L35e394.  v2:= temp;
  #L35e396.  if v2 == 0 then goto L35e3a0;
  #L35e39a.  v2:= v10.`org.threeten.bp.format.c$i.i` @type ^`int`;
  #L35e39e.  goto L35e3a4;
  #L35e3a0.  v2:= 9I;
  #L35e3a4.  call temp:= `length`(v12) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L35e3aa.  v3:= temp;
  #L35e3ac.  if v13 != v3 then goto L35e3b8;
  #L35e3b0.  if v0 <= 0 then goto L35e3b6;
  #L35e3b4.  v13:= ~v13 @kind int;
  #L35e3b6.  return v13;
  #L35e3b8.  v4:= v10.`org.threeten.bp.format.c$i.j` @type ^`boolean` @kind boolean;
  #L35e3bc.  if v4 == 0 then goto L35e3e8;
  #L35e3c0.  call temp:= `charAt`(v12, v13) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35e3c6.  v4:= temp;
  #L35e3c8.  call temp:= `k`(v11) @signature `Lorg/threeten/bp/format/d;.k:()Lorg/threeten/bp/format/h;` @kind virtual;
  #L35e3ce.  v5:= temp @kind object;
  #L35e3d0.  call temp:= `c`(v5) @signature `Lorg/threeten/bp/format/h;.c:()C` @kind virtual;
  #L35e3d6.  v5:= temp;
  #L35e3d8.  if v4 == v5 then goto L35e3e4;
  #L35e3dc.  if v0 <= 0 then goto L35e3e2;
  #L35e3e0.  v13:= ~v13 @kind int;
  #L35e3e2.  return v13;
  #L35e3e4.  v13:= v13 + 1;
  #L35e3e8.  v8:= v13;
  #L35e3ea.  v0:= v0 + v8 @kind int;
  #L35e3ec.  if v0 <= v3 then goto L35e3f4;
  #L35e3f0.  v11:= ~v8 @kind int;
  #L35e3f2.  return v11;
  #L35e3f4.  v2:= v2 + v8 @kind int;
  #L35e3f6.  call temp:= `min`(v2, v3) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L35e3fc.  v13:= temp;
  #L35e3fe.  v2:= v8;
  #L35e400.  if v2 >= v13 then goto L35e43e;
  #L35e404.  v3:= v2 + 1;
  #L35e408.  call temp:= `charAt`(v12, v2) @signature `Ljava/lang/CharSequence;.charAt:(I)C` @kind interface;
  #L35e40e.  v2:= temp;
  #L35e410.  call temp:= `k`(v11) @signature `Lorg/threeten/bp/format/d;.k:()Lorg/threeten/bp/format/h;` @kind virtual;
  #L35e416.  v4:= temp @kind object;
  #L35e418.  call temp:= `b`(v4, v2) @signature `Lorg/threeten/bp/format/h;.b:(C)I` @kind virtual;
  #L35e41e.  v2:= temp;
  #L35e420.  if v2 >= 0 then goto L35e434;
  #L35e424.  if v3 >= v0 then goto L35e42c;
  #L35e428.  v11:= ~v8 @kind int;
  #L35e42a.  return v11;
  #L35e42c.  v3:= v3 + -1;
  #L35e430.  v9:= v3;
  #L35e432.  goto L35e440;
  #L35e434.  v1:= v1 * 10;
  #L35e438.  v1:= v1 + v2 @kind int;
  #L35e43a.  v2:= v3;
  #L35e43c.  goto L35e400;
  #L35e43e.  v9:= v2;
  #L35e440.  v12:= new `java.math.BigDecimal`;
  #L35e444.  call `<init>`(v12, v1) @signature `Ljava/math/BigDecimal;.<init>:(I)V` @kind direct;
  #L35e44a.  v13:= v9 - v8 @kind int;
  #L35e44e.  call temp:= `movePointLeft`(v12, v13) @signature `Ljava/math/BigDecimal;.movePointLeft:(I)Ljava/math/BigDecimal;` @kind virtual;
  #L35e454.  v12:= temp @kind object;
  #L35e456.  call temp:= `a`(v10, v12) @signature `Lorg/threeten/bp/format/c$i;.a:(Ljava/math/BigDecimal;)J` @kind direct;
  #L35e45c.  v6:= temp @kind wide;
  #L35e45e.  v5:= v10.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e462.  v4:= v11 @kind object;
  #L35e464.  call temp:= `q`(v4, v5, v6, v8, v9) @signature `Lorg/threeten/bp/format/d;.q:(Lorg/threeten/bp/temporal/i;JII)I` @kind virtual;
  #L35e46a.  v11:= temp;
  #L35e46c.  return v11;
}
procedure `boolean` `print`(`org.threeten.bp.format.c$i` v4 @kind this, `org.threeten.bp.format.f` v5 @kind object, `java.lang.StringBuilder` v6 @kind object) @signature `Lorg/threeten/bp/format/c$i;.print:(Lorg/threeten/bp/format/f;Ljava/lang/StringBuilder;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e290.  v0:= v4.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e294.  call temp:= `f`(v5, v0) @signature `Lorg/threeten/bp/format/f;.f:(Lorg/threeten/bp/temporal/i;)Ljava/lang/Long;` @kind virtual;
  #L35e29a.  v0:= temp @kind object;
  #L35e29c.  v1:= 0I;
  #L35e29e.  if v0 != 0 then goto L35e2a4;
  #L35e2a2.  return v1;
  #L35e2a4.  call temp:= `d`(v5) @signature `Lorg/threeten/bp/format/f;.d:()Lorg/threeten/bp/format/h;` @kind virtual;
  #L35e2aa.  v5:= temp @kind object;
  #L35e2ac.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L35e2b2.  v2:= temp @kind wide;
  #L35e2b4.  call temp:= `b`(v4, v2) @signature `Lorg/threeten/bp/format/c$i;.b:(J)Ljava/math/BigDecimal;` @kind direct;
  #L35e2ba.  v0:= temp @kind object;
  #L35e2bc.  call temp:= `scale`(v0) @signature `Ljava/math/BigDecimal;.scale:()I` @kind virtual;
  #L35e2c2.  v2:= temp;
  #L35e2c4.  if v2 != 0 then goto L35e302;
  #L35e2c8.  v0:= v4.`org.threeten.bp.format.c$i.h` @type ^`int`;
  #L35e2cc.  if v0 <= 0 then goto L35e364;
  #L35e2d0.  v0:= v4.`org.threeten.bp.format.c$i.j` @type ^`boolean` @kind boolean;
  #L35e2d4.  if v0 == 0 then goto L35e2e6;
  #L35e2d8.  call temp:= `c`(v5) @signature `Lorg/threeten/bp/format/h;.c:()C` @kind virtual;
  #L35e2de.  v0:= temp;
  #L35e2e0.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e2e6.  v0:= v4.`org.threeten.bp.format.c$i.h` @type ^`int`;
  #L35e2ea.  if v1 >= v0 then goto L35e364;
  #L35e2ee.  call temp:= `f`(v5) @signature `Lorg/threeten/bp/format/h;.f:()C` @kind virtual;
  #L35e2f4.  v0:= temp;
  #L35e2f6.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e2fc.  v1:= v1 + 1;
  #L35e300.  goto L35e2e6;
  #L35e302.  call temp:= `scale`(v0) @signature `Ljava/math/BigDecimal;.scale:()I` @kind virtual;
  #L35e308.  v1:= temp;
  #L35e30a.  v2:= v4.`org.threeten.bp.format.c$i.h` @type ^`int`;
  #L35e30e.  call temp:= `max`(v1, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L35e314.  v1:= temp;
  #L35e316.  v2:= v4.`org.threeten.bp.format.c$i.i` @type ^`int`;
  #L35e31a.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L35e320.  v1:= temp;
  #L35e322.  v2:= `@@java.math.RoundingMode.FLOOR` @type ^`java.math.RoundingMode` @kind object;
  #L35e326.  call temp:= `setScale`(v0, v1, v2) @signature `Ljava/math/BigDecimal;.setScale:(ILjava/math/RoundingMode;)Ljava/math/BigDecimal;` @kind virtual;
  #L35e32c.  v0:= temp @kind object;
  #L35e32e.  call temp:= `toPlainString`(v0) @signature `Ljava/math/BigDecimal;.toPlainString:()Ljava/lang/String;` @kind virtual;
  #L35e334.  v0:= temp @kind object;
  #L35e336.  v1:= 2I;
  #L35e338.  call temp:= `substring`(v0, v1) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L35e33e.  v0:= temp @kind object;
  #L35e340.  call temp:= `a`(v5, v0) @signature `Lorg/threeten/bp/format/h;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L35e346.  v0:= temp @kind object;
  #L35e348.  v1:= v4.`org.threeten.bp.format.c$i.j` @type ^`boolean` @kind boolean;
  #L35e34c.  if v1 == 0 then goto L35e35e;
  #L35e350.  call temp:= `c`(v5) @signature `Lorg/threeten/bp/format/h;.c:()C` @kind virtual;
  #L35e356.  v5:= temp;
  #L35e358.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e35e.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e364.  v5:= 1I;
  #L35e366.  return v5;
}
procedure `java.lang.String` `toString`(`org.threeten.bp.format.c$i` v4 @kind this) @signature `Lorg/threeten/bp/format/c$i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35e480.  v0:= v4.`org.threeten.bp.format.c$i.j` @type ^`boolean` @kind boolean;
  #L35e484.  if v0 == 0 then goto L35e48e;
  #L35e488.  v0:= ",DecimalPoint" @kind object;
  #L35e48c.  goto L35e492;
  #L35e48e.  v0:= "" @kind object;
  #L35e492.  v1:= new `java.lang.StringBuilder`;
  #L35e496.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35e49c.  v2:= "Fraction(" @kind object;
  #L35e4a0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4a6.  v2:= v4.`org.threeten.bp.format.c$i.g` @type ^`org.threeten.bp.temporal.i` @kind object;
  #L35e4aa.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4b0.  v2:= "," @kind object;
  #L35e4b4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4ba.  v3:= v4.`org.threeten.bp.format.c$i.h` @type ^`int`;
  #L35e4be.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4c4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4ca.  v2:= v4.`org.threeten.bp.format.c$i.i` @type ^`int`;
  #L35e4ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4d4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4da.  v0:= ")" @kind object;
  #L35e4de.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35e4e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35e4ea.  v0:= temp @kind object;
  #L35e4ec.  return v0 @kind object;
}
