record `org.intellij.lang.annotations.Flow` @kind interface @AccessFlag PUBLIC_ABSTRACT_ANNOTATION_INTERFACE extends `java.lang.annotation.Annotation` @kind interface {
}
global `java.lang.String` `@@org.intellij.lang.annotations.Flow.DEFAULT_SOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.intellij.lang.annotations.Flow.DEFAULT_TARGET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.intellij.lang.annotations.Flow.RETURN_METHOD_TARGET` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.intellij.lang.annotations.Flow.THIS_SOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@org.intellij.lang.annotations.Flow.THIS_TARGET` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `java.lang.String` `source`() @signature `Lorg/intellij/lang/annotations/Flow;.source:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `sourceIsContainer`() @signature `Lorg/intellij/lang/annotations/Flow;.sourceIsContainer:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `target`() @signature `Lorg/intellij/lang/annotations/Flow;.target:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `targetIsContainer`() @signature `Lorg/intellij/lang/annotations/Flow;.targetIsContainer:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
