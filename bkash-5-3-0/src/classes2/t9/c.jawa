record `t9.c` @kind class @AccessFlag FINAL extends `t9.b` @kind class {
  `java.lang.Object` `t9.c.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.reflect.Field` `t9.c.c` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Class` `@@t9.c.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`t9.c` v1 @kind this) @signature `Lt9/c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L37ae34.  call `<init>`(v1) @signature `Lt9/b;.<init>:()V` @kind direct;
  #L37ae3a.  call temp:= `d`() @signature `Lt9/c;.d:()Ljava/lang/Object;` @kind static;
  #L37ae40.  v0:= temp @kind object;
  #L37ae42.  v1.`t9.c.b` @type ^`java.lang.Object` := v0 @kind object;
  #L37ae46.  call temp:= `c`() @signature `Lt9/c;.c:()Ljava/lang/reflect/Field;` @kind static;
  #L37ae4c.  v0:= temp @kind object;
  #L37ae4e.  v1.`t9.c.c` @type ^`java.lang.reflect.Field` := v0 @kind object;
  #L37ae52.  return @kind void;
}
procedure `java.lang.reflect.Field` `c`() @signature `Lt9/c;.c:()Ljava/lang/reflect/Field;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L37adfc.  v0:= constclass @type ^`java.lang.reflect.AccessibleObject` @kind object;
  #L37ae00.  v1:= "override" @kind object;
  #L37ae04.  call temp:= `getDeclaredField`(v0, v1) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L37ae0a.  v0:= temp @kind object;
  #L37ae0c.  return v0 @kind object;
  #L37ae0e.  v0:= 0I;
  #L37ae10.  return v0 @kind object;
  catch `java.lang.Exception` @[L37adfc..L37ae0c] goto L37ae0e;
}
procedure `java.lang.Object` `d`() @signature `Lt9/c;.d:()Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L37adac.  v0:= 0I;
  #L37adae.  v1:= "sun.misc.Unsafe" @kind object;
  #L37adb2.  call temp:= `forName`(v1) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L37adb8.  v1:= temp @kind object;
  #L37adba.  `@@t9.c.d` @type ^`java.lang.Class` := v1 @kind object;
  #L37adbe.  v2:= "theUnsafe" @kind object;
  #L37adc2.  call temp:= `getDeclaredField`(v1, v2) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L37adc8.  v1:= temp @kind object;
  #L37adca.  v2:= 1I;
  #L37adcc.  call `setAccessible`(v1, v2) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L37add2.  call temp:= `get`(v1, v0) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37add8.  v0:= temp @kind object;
  #L37adda.  return v0 @kind object;
  catch `java.lang.Exception` @[L37adae..L37adda] goto L37adda;
}
procedure `void` `b`(`t9.c` v4 @kind this, `java.lang.reflect.AccessibleObject` v5 @kind object) @signature `Lt9/c;.b:(Ljava/lang/reflect/AccessibleObject;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L37ae64.  call temp:= `e`(v4, v5) @signature `Lt9/c;.e:(Ljava/lang/reflect/AccessibleObject;)Z` @kind virtual;
  #L37ae6a.  v0:= temp;
  #L37ae6c.  if v0 != 0 then goto L37aeb4;
  #L37ae70.  v0:= 1I;
  #L37ae72.  call `setAccessible`(v5, v0) @signature `Ljava/lang/reflect/AccessibleObject;.setAccessible:(Z)V` @kind virtual;
  #L37ae78.  goto L37aeb4;
  #L37ae7a.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L37ae7c.  v1:= new `com.google.gson.i`;
  #L37ae80.  v2:= new `java.lang.StringBuilder`;
  #L37ae84.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L37ae8a.  v3:= "Gson couldn't modify fields for " @kind object;
  #L37ae8e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ae94.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37ae9a.  v5:= "\nand sun.misc.Unsafe not found.\nEither write a custom type adapter, or make fields accessible, or include sun.misc.Unsafe." @kind object;
  #L37ae9e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L37aea4.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L37aeaa.  v5:= temp @kind object;
  #L37aeac.  call `<init>`(v1, v5, v0) @signature `Lcom/google/gson/i;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L37aeb2.  throw v1;
  #L37aeb4.  return @kind void;
  catch `java.lang.SecurityException` @[L37ae72..L37ae78] goto L37ae7a;
}
procedure `boolean` `e`(`t9.c` v10 @kind this, `java.lang.reflect.AccessibleObject` v11 @kind object) @signature `Lt9/c;.e:(Ljava/lang/reflect/AccessibleObject;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L37acdc.  v0:= v10.`t9.c.b` @type ^`java.lang.Object` @kind object;
  #L37ace0.  v1:= 0I;
  #L37ace2.  if v0 == 0 then goto L37ad88;
  #L37ace6.  v0:= v10.`t9.c.c` @type ^`java.lang.reflect.Field` @kind object;
  #L37acea.  if v0 == 0 then goto L37ad88;
  #L37acee.  v0:= `@@t9.c.d` @type ^`java.lang.Class` @kind object;
  #L37acf2.  v2:= "objectFieldOffset" @kind object;
  #L37acf6.  v3:= 1I;
  #L37acf8.  v4:= new `java.lang.Class`[v3];
  #L37acfc.  v5:= constclass @type ^`java.lang.reflect.Field` @kind object;
  #L37ad00.  v4[v1]:= v5 @kind object;
  #L37ad04.  call temp:= `getMethod`(v0, v2, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L37ad0a.  v0:= temp @kind object;
  #L37ad0c.  v2:= v10.`t9.c.b` @type ^`java.lang.Object` @kind object;
  #L37ad10.  v4:= new `java.lang.Object`[v3];
  #L37ad14.  v5:= v10.`t9.c.c` @type ^`java.lang.reflect.Field` @kind object;
  #L37ad18.  v4[v1]:= v5 @kind object;
  #L37ad1c.  call temp:= `invoke`(v0, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37ad22.  v0:= temp @kind object;
  #L37ad24.  v0:= (`java.lang.Long`) v0 @kind object;
  #L37ad28.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L37ad2e.  v4:= temp @kind wide;
  #L37ad30.  v0:= `@@t9.c.d` @type ^`java.lang.Class` @kind object;
  #L37ad34.  v2:= "putBoolean" @kind object;
  #L37ad38.  v6:= 3I;
  #L37ad3a.  v7:= new `java.lang.Class`[v6];
  #L37ad3e.  v8:= constclass @type ^`java.lang.Object` @kind object;
  #L37ad42.  v7[v1]:= v8 @kind object;
  #L37ad46.  v8:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L37ad4a.  v7[v3]:= v8 @kind object;
  #L37ad4e.  v8:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L37ad52.  v9:= 2I;
  #L37ad54.  v7[v9]:= v8 @kind object;
  #L37ad58.  call temp:= `getMethod`(v0, v2, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L37ad5e.  v0:= temp @kind object;
  #L37ad60.  v2:= v10.`t9.c.b` @type ^`java.lang.Object` @kind object;
  #L37ad64.  v6:= new `java.lang.Object`[v6];
  #L37ad68.  v6[v1]:= v11 @kind object;
  #L37ad6c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L37ad72.  v11:= temp @kind object;
  #L37ad74.  v6[v3]:= v11 @kind object;
  #L37ad78.  v11:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L37ad7c.  v6[v9]:= v11 @kind object;
  #L37ad80.  call temp:= `invoke`(v0, v2, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L37ad86.  return v3;
  #L37ad88.  return v1;
  catch `java.lang.Exception` @[L37acee..L37ad86] goto L37ad88;
}
