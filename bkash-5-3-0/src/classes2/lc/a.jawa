record `lc.a` @kind class @AccessFlag PUBLIC extends `ic.a` @kind class {
  `double` `lc.a.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`lc.a` v2 @kind this, `io.flutter.plugins.camera.a0` v3 @kind object) @signature `Llc/a;.<init>:(Lio/flutter/plugins/camera/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31dcd0.  call `<init>`(v2, v3) @signature `Lic/a;.<init>:(Lio/flutter/plugins/camera/a0;)V` @kind direct;
  #L31dcd6.  v0:= 0L;
  #L31dcda.  v2.`lc.a.b` @type ^`double` := v0 @kind wide;
  #L31dcde.  return @kind void;
}
procedure `java.lang.String` `a`(`lc.a` v1 @kind this) @signature `Llc/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dcb8.  v0:= "ExposureOffsetFeature" @kind object;
  #L31dcbc.  return v0 @kind object;
}
procedure `void` `b`(`lc.a` v3 @kind this, `android.hardware.camera2.CaptureRequest$Builder` v4 @kind object) @signature `Llc/a;.b:(Landroid/hardware/camera2/CaptureRequest$Builder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L31dd18.  call temp:= `c`(v3) @signature `Llc/a;.c:()Z` @kind virtual;
  #L31dd1e.  v0:= temp;
  #L31dd20.  if v0 != 0 then goto L31dd26;
  #L31dd24.  return @kind void;
  #L31dd26.  v0:= `@@android.hardware.camera2.CaptureRequest.CONTROL_AE_EXPOSURE_COMPENSATION` @type ^`android.hardware.camera2.CaptureRequest$Key` @kind object;
  #L31dd2a.  v1:= v3.`lc.a.b` @type ^`double` @kind wide;
  #L31dd2e.  v1:= (`int`) v1 @kind d2i;
  #L31dd30.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L31dd36.  v1:= temp @kind object;
  #L31dd38.  call `set`(v4, v0, v1) @signature `Landroid/hardware/camera2/CaptureRequest$Builder;.set:(Landroid/hardware/camera2/CaptureRequest$Key;Ljava/lang/Object;)V` @kind virtual;
  #L31dd3e.  return @kind void;
}
procedure `boolean` `c`(`lc.a` v1 @kind this) @signature `Llc/a;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31dbcc.  v0:= 1I;
  #L31dbce.  return v0;
}
procedure `double` `d`(`lc.a` v2 @kind this) @signature `Llc/a;.d:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31dbe0.  v0:= v2.`ic.a.a` @type ^`io.flutter.plugins.camera.a0` @kind object;
  #L31dbe4.  call temp:= `b`(v0) @signature `Lio/flutter/plugins/camera/a0;.b:()D` @kind interface;
  #L31dbea.  v0:= temp @kind wide;
  #L31dbec.  return v0 @kind wide;
}
procedure `double` `e`(`lc.a` v4 @kind this) @signature `Llc/a;.e:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31dc00.  v0:= v4.`ic.a.a` @type ^`io.flutter.plugins.camera.a0` @kind object;
  #L31dc04.  call temp:= `i`(v0) @signature `Lio/flutter/plugins/camera/a0;.i:()Landroid/util/Range;` @kind interface;
  #L31dc0a.  v0:= temp @kind object;
  #L31dc0c.  if v0 != 0 then goto L31dc16;
  #L31dc10.  v0:= 0L;
  #L31dc14.  goto L31dc2c;
  #L31dc16.  call temp:= `getUpper`(v0) @signature `Landroid/util/Range;.getUpper:()Ljava/lang/Comparable;` @kind virtual;
  #L31dc1c.  v0:= temp @kind object;
  #L31dc1e.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L31dc22.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L31dc28.  v0:= temp;
  #L31dc2a.  v0:= (`double`) v0 @kind i2d;
  #L31dc2c.  call temp:= `d`(v4) @signature `Llc/a;.d:()D` @kind virtual;
  #L31dc32.  v2:= temp @kind wide;
  #L31dc34.  v0:= v0 * v2 @kind double;
  #L31dc38.  return v0 @kind wide;
}
procedure `double` `f`(`lc.a` v4 @kind this) @signature `Llc/a;.f:()D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31dc4c.  v0:= v4.`ic.a.a` @type ^`io.flutter.plugins.camera.a0` @kind object;
  #L31dc50.  call temp:= `i`(v0) @signature `Lio/flutter/plugins/camera/a0;.i:()Landroid/util/Range;` @kind interface;
  #L31dc56.  v0:= temp @kind object;
  #L31dc58.  if v0 != 0 then goto L31dc62;
  #L31dc5c.  v0:= 0L;
  #L31dc60.  goto L31dc78;
  #L31dc62.  call temp:= `getLower`(v0) @signature `Landroid/util/Range;.getLower:()Ljava/lang/Comparable;` @kind virtual;
  #L31dc68.  v0:= temp @kind object;
  #L31dc6a.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L31dc6e.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L31dc74.  v0:= temp;
  #L31dc76.  v0:= (`double`) v0 @kind i2d;
  #L31dc78.  call temp:= `d`(v4) @signature `Llc/a;.d:()D` @kind virtual;
  #L31dc7e.  v2:= temp @kind wide;
  #L31dc80.  v0:= v0 * v2 @kind double;
  #L31dc84.  return v0 @kind wide;
}
procedure `java.lang.Double` `g`(`lc.a` v2 @kind this) @signature `Llc/a;.g:()Ljava/lang/Double;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31dc98.  v0:= v2.`lc.a.b` @type ^`double` @kind wide;
  #L31dc9c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L31dca2.  v0:= temp @kind object;
  #L31dca4.  return v0 @kind object;
}
procedure `void` `h`(`lc.a` v4 @kind this, `java.lang.Double` v5 @kind object) @signature `Llc/a;.h:(Ljava/lang/Double;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L31dcf0.  call temp:= `d`(v4) @signature `Llc/a;.d:()D` @kind virtual;
  #L31dcf6.  v0:= temp @kind wide;
  #L31dcf8.  call temp:= `doubleValue`(v5) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L31dcfe.  v2:= temp @kind wide;
  #L31dd00.  v2:= v2 / v0 @kind double;
  #L31dd02.  v4.`lc.a.b` @type ^`double` := v2 @kind wide;
  #L31dd06.  return @kind void;
}
