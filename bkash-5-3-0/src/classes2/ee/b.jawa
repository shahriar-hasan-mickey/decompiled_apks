record `ee.b` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `ee.b.g` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`ee.b` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lee/b;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ad434.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ad43a.  call temp:= `q`(v1, v2) @signature `Lee/e;.q:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ad440.  v1:= temp @kind object;
  #L2ad442.  v0.`ee.b.g` @type ^`java.lang.String` := v1 @kind object;
  #L2ad446.  return @kind void;
}
procedure `void` `k`() @signature `Lee/b;.k:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`ee.b` v3 @kind this) @signature `Lee/b;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L2ad458.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ad45e.  v0:= temp @kind object;
  #L2ad460.  call temp:= `getName`(v0) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L2ad466.  v0:= temp @kind object;
  #L2ad468.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ad46e.  v1:= temp @kind object;
  #L2ad470.  v2:= v3.`ee.b.g` @type ^`java.lang.String` @kind object;
  #L2ad474.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L2ad47a.  call `k`(v3) @signature `Lee/b;.k:()V` @kind virtual;
  #L2ad480.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ad486.  v1:= temp @kind object;
  #L2ad488.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L2ad48e.  return @kind void;
  #L2ad490.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ad492.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L2ad498.  v2:= temp @kind object;
  #L2ad49a.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L2ad4a0.  throw v1;
  catch `java.lang.Throwable` @[L2ad47a..L2ad480] goto L2ad490;
}
