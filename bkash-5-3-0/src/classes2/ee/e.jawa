record `ee.e` @kind class @AccessFlag PUBLIC_FINAL {
}
global `byte`[] `@@ee.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String`[] `@@ee.e.b` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.w` `@@ee.e.c` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.h0` `@@ee.e.d` @AccessFlag PUBLIC_STATIC_FINAL;
global `okio.o` `@@ee.e.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@ee.e.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.nio.charset.Charset` `@@ee.e.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.TimeZone` `@@ee.e.h` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.Comparator` `@@ee.e.i` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.reflect.Method` `@@ee.e.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@ee.e.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lee/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ae358.  v0:= 0I;
  #L2ae35a.  v1:= new `byte`[v0];
  #L2ae35e.  `@@ee.e.a` @type ^`byte`[] := v1 @kind object;
  #L2ae362.  v2:= new `java.lang.String`[v0];
  #L2ae366.  `@@ee.e.b` @type ^`java.lang.String`[] := v2 @kind object;
  #L2ae36a.  v2:= new `java.lang.String`[v0];
  #L2ae36e.  call temp:= `g`(v2) @signature `Lokhttp3/w;.g:([Ljava/lang/String;)Lokhttp3/w;` @kind static;
  #L2ae374.  v2:= temp @kind object;
  #L2ae376.  `@@ee.e.c` @type ^`okhttp3.w` := v2 @kind object;
  #L2ae37a.  v2:= 0I;
  #L2ae37c.  call temp:= `w`(v2, v1) @signature `Lokhttp3/h0;.w:(Lokhttp3/z;[B)Lokhttp3/h0;` @kind static;
  #L2ae382.  v3:= temp @kind object;
  #L2ae384.  `@@ee.e.d` @type ^`okhttp3.h0` := v3 @kind object;
  #L2ae388.  call temp:= `d`(v2, v1) @signature `Lokhttp3/f0;.d:(Lokhttp3/z;[B)Lokhttp3/f0;` @kind static;
  #L2ae38e.  v1:= 5I;
  #L2ae390.  v1:= new `okio.f`[v1];
  #L2ae394.  v3:= "efbbbf" @kind object;
  #L2ae398.  call temp:= `decodeHex`(v3) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2ae39e.  v3:= temp @kind object;
  #L2ae3a0.  v1[v0]:= v3 @kind object;
  #L2ae3a4.  v3:= "feff" @kind object;
  #L2ae3a8.  call temp:= `decodeHex`(v3) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2ae3ae.  v3:= temp @kind object;
  #L2ae3b0.  v4:= 1I;
  #L2ae3b2.  v1[v4]:= v3 @kind object;
  #L2ae3b6.  v3:= "fffe" @kind object;
  #L2ae3ba.  call temp:= `decodeHex`(v3) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2ae3c0.  v3:= temp @kind object;
  #L2ae3c2.  v5:= 2I;
  #L2ae3c4.  v1[v5]:= v3 @kind object;
  #L2ae3c8.  v3:= "0000ffff" @kind object;
  #L2ae3cc.  call temp:= `decodeHex`(v3) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2ae3d2.  v3:= temp @kind object;
  #L2ae3d4.  v5:= 3I;
  #L2ae3d6.  v1[v5]:= v3 @kind object;
  #L2ae3da.  v3:= "ffff0000" @kind object;
  #L2ae3de.  call temp:= `decodeHex`(v3) @signature `Lokio/f;.decodeHex:(Ljava/lang/String;)Lokio/f;` @kind static;
  #L2ae3e4.  v3:= temp @kind object;
  #L2ae3e6.  v5:= 4I;
  #L2ae3e8.  v1[v5]:= v3 @kind object;
  #L2ae3ec.  call temp:= `j`(v1) @signature `Lokio/o;.j:([Lokio/f;)Lokio/o;` @kind static;
  #L2ae3f2.  v1:= temp @kind object;
  #L2ae3f4.  `@@ee.e.e` @type ^`okio.o` := v1 @kind object;
  #L2ae3f8.  v1:= "UTF-32BE" @kind object;
  #L2ae3fc.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2ae402.  v1:= temp @kind object;
  #L2ae404.  `@@ee.e.f` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L2ae408.  v1:= "UTF-32LE" @kind object;
  #L2ae40c.  call temp:= `forName`(v1) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L2ae412.  v1:= temp @kind object;
  #L2ae414.  `@@ee.e.g` @type ^`java.nio.charset.Charset` := v1 @kind object;
  #L2ae418.  v1:= "GMT" @kind object;
  #L2ae41c.  call temp:= `getTimeZone`(v1) @signature `Ljava/util/TimeZone;.getTimeZone:(Ljava/lang/String;)Ljava/util/TimeZone;` @kind static;
  #L2ae422.  v1:= temp @kind object;
  #L2ae424.  `@@ee.e.h` @type ^`java.util.TimeZone` := v1 @kind object;
  #L2ae428.  v1:= `@@ee.c.g` @type ^`ee.c` @kind object;
  #L2ae42c.  `@@ee.e.i` @type ^`java.util.Comparator` := v1 @kind object;
  #L2ae430.  v1:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2ae434.  v3:= "addSuppressed" @kind object;
  #L2ae438.  v4:= new `java.lang.Class`[v4];
  #L2ae43c.  v5:= constclass @type ^`java.lang.Throwable` @kind object;
  #L2ae440.  v4[v0]:= v5 @kind object;
  #L2ae444.  call temp:= `getDeclaredMethod`(v1, v3, v4) @signature `Ljava/lang/Class;.getDeclaredMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L2ae44a.  v2:= temp @kind object;
  #L2ae44c.  `@@ee.e.j` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L2ae450.  v0:= "([0-9a-fA-F]*:[0-9a-fA-F:.]*)|([\\d.]+)" @kind object;
  #L2ae454.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L2ae45a.  v0:= temp @kind object;
  #L2ae45c.  `@@ee.e.k` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L2ae460.  return @kind void;
  catch `java.lang.Exception` @[L2ae430..L2ae44c] goto L2ae44c;
}
procedure `boolean` `A`(`java.lang.AssertionError` v1 @kind object) @signature `Lee/e;.A:(Ljava/lang/AssertionError;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad694.  call temp:= `getCause`(v1) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L2ad69a.  v0:= temp @kind object;
  #L2ad69c.  if v0 == 0 then goto L2ad6c8;
  #L2ad6a0.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2ad6a6.  v0:= temp @kind object;
  #L2ad6a8.  if v0 == 0 then goto L2ad6c8;
  #L2ad6ac.  call temp:= `getMessage`(v1) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2ad6b2.  v1:= temp @kind object;
  #L2ad6b4.  v0:= "getsockname failed" @kind object;
  #L2ad6b8.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2ad6be.  v1:= temp;
  #L2ad6c0.  if v1 == 0 then goto L2ad6c8;
  #L2ad6c4.  v1:= 1I;
  #L2ad6c6.  goto L2ad6ca;
  #L2ad6c8.  v1:= 0I;
  #L2ad6ca.  return v1;
}
procedure `java.lang.Thread` `B`(`java.lang.String` v1 @kind object, `boolean` v2 , `java.lang.Runnable` v3 @kind object) @signature `Lee/e;.B:(Ljava/lang/String;ZLjava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L2adf70.  v0:= new `java.lang.Thread`;
  #L2adf74.  call `<init>`(v0, v3, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L2adf7a.  call `setDaemon`(v0, v2) @signature `Ljava/lang/Thread;.setDaemon:(Z)V` @kind virtual;
  #L2adf80.  return v0 @kind object;
}
procedure `boolean` `C`(`java.util.Comparator` v7 @kind object, `java.lang.String`[] v8 @kind object, `java.lang.String`[] v9 @kind object) @signature `Lee/e;.C:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ad6dc.  v0:= 0I;
  #L2ad6de.  if v8 == 0 then goto L2ad728;
  #L2ad6e2.  if v9 == 0 then goto L2ad728;
  #L2ad6e6.  v1:= length @variable v8;
  #L2ad6e8.  if v1 == 0 then goto L2ad728;
  #L2ad6ec.  v1:= length @variable v9;
  #L2ad6ee.  if v1 != 0 then goto L2ad6f4;
  #L2ad6f2.  goto L2ad728;
  #L2ad6f4.  v1:= length @variable v8;
  #L2ad6f6.  v2:= 0I;
  #L2ad6f8.  if v2 >= v1 then goto L2ad728;
  #L2ad6fc.  v3:= v8[v2] @kind object;
  #L2ad700.  v4:= length @variable v9;
  #L2ad702.  v5:= 0I;
  #L2ad704.  if v5 >= v4 then goto L2ad722;
  #L2ad708.  v6:= v9[v5] @kind object;
  #L2ad70c.  call temp:= `compare`(v7, v3, v6) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2ad712.  v6:= temp;
  #L2ad714.  if v6 != 0 then goto L2ad71c;
  #L2ad718.  v7:= 1I;
  #L2ad71a.  return v7;
  #L2ad71c.  v5:= v5 + 1;
  #L2ad720.  goto L2ad704;
  #L2ad722.  v2:= v2 + 1;
  #L2ad726.  goto L2ad6f8;
  #L2ad728.  return v0;
}
procedure `javax.net.ssl.X509TrustManager` `D`() @signature `Lee/e;.D:()Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ae248.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L2ae24e.  v0:= temp @kind object;
  #L2ae250.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L2ae256.  v0:= temp @kind object;
  #L2ae258.  v1:= 0I;
  #L2ae25a.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L2ae260.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L2ae266.  v0:= temp @kind object;
  #L2ae268.  v1:= length @variable v0;
  #L2ae26a.  v2:= 1I;
  #L2ae26c.  if v1 != v2 then goto L2ae288;
  #L2ae270.  v1:= 0I;
  #L2ae272.  v2:= v0[v1] @kind object;
  #L2ae276.  v2:= instanceof @variable v2 @type ^`javax.net.ssl.X509TrustManager` @kind boolean;
  #L2ae27a.  if v2 == 0 then goto L2ae288;
  #L2ae27e.  v0:= v0[v1] @kind object;
  #L2ae282.  v0:= (`javax.net.ssl.X509TrustManager`) v0 @kind object;
  #L2ae286.  return v0 @kind object;
  #L2ae288.  v1:= new `java.lang.IllegalStateException`;
  #L2ae28c.  v2:= new `java.lang.StringBuilder`;
  #L2ae290.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ae296.  v3:= "Unexpected default trust managers:" @kind object;
  #L2ae29a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ae2a0.  call temp:= `toString`(v0) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2ae2a6.  v0:= temp @kind object;
  #L2ae2a8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ae2ae.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ae2b4.  v0:= temp @kind object;
  #L2ae2b6.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ae2bc.  throw v1;
  #L2ae2be.  v0:= Exception @type ^`java.security.GeneralSecurityException` @kind object;
  #L2ae2c0.  v1:= new `java.lang.AssertionError`;
  #L2ae2c4.  v2:= "No System TLS" @kind object;
  #L2ae2c8.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L2ae2ce.  throw v1;
  catch `java.security.GeneralSecurityException` @[L2ae248..L2ae2be] goto L2ae2be;
}
procedure `boolean` `E`(`okhttp3.x` v2 @kind object, `okhttp3.x` v3 @kind object) @signature `Lee/e;.E:(Lokhttp3/x;Lokhttp3/x;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2ad73c.  call temp:= `l`(v2) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L2ad742.  v0:= temp @kind object;
  #L2ad744.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L2ad74a.  v1:= temp @kind object;
  #L2ad74c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ad752.  v0:= temp;
  #L2ad754.  if v0 == 0 then goto L2ad78c;
  #L2ad758.  call temp:= `x`(v2) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L2ad75e.  v0:= temp;
  #L2ad760.  call temp:= `x`(v3) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L2ad766.  v1:= temp;
  #L2ad768.  if v0 != v1 then goto L2ad78c;
  #L2ad76c.  call temp:= `D`(v2) @signature `Lokhttp3/x;.D:()Ljava/lang/String;` @kind virtual;
  #L2ad772.  v2:= temp @kind object;
  #L2ad774.  call temp:= `D`(v3) @signature `Lokhttp3/x;.D:()Ljava/lang/String;` @kind virtual;
  #L2ad77a.  v3:= temp @kind object;
  #L2ad77c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ad782.  v2:= temp;
  #L2ad784.  if v2 == 0 then goto L2ad78c;
  #L2ad788.  v2:= 1I;
  #L2ad78a.  goto L2ad78e;
  #L2ad78c.  v2:= 0I;
  #L2ad78e.  return v2;
}
procedure `boolean` `F`(`okio.v` v11 @kind object, `int` v12 , `java.util.concurrent.TimeUnit` v13 @kind object) @signature `Lee/e;.F:(Lokio/v;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2ad7a0.  call temp:= `nanoTime`() @signature `Ljava/lang/System;.nanoTime:()J` @kind static;
  #L2ad7a6.  v0:= temp @kind wide;
  #L2ad7a8.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad7ae.  v2:= temp @kind object;
  #L2ad7b0.  call temp:= `e`(v2) @signature `Lokio/w;.e:()Z` @kind virtual;
  #L2ad7b6.  v2:= temp;
  #L2ad7b8.  v3:= 9223372036854775807L;
  #L2ad7c2.  if v2 == 0 then goto L2ad7da;
  #L2ad7c6.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad7cc.  v2:= temp @kind object;
  #L2ad7ce.  call temp:= `c`(v2) @signature `Lokio/w;.c:()J` @kind virtual;
  #L2ad7d4.  v5:= temp @kind wide;
  #L2ad7d6.  v5:= v5 - v0 @kind long;
  #L2ad7d8.  goto L2ad7dc;
  #L2ad7da.  v5:= v3 @kind wide;
  #L2ad7dc.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad7e2.  v2:= temp @kind object;
  #L2ad7e4.  v7:= (`long`) v12 @kind i2l;
  #L2ad7e6.  call temp:= `toNanos`(v13, v7) @signature `Ljava/util/concurrent/TimeUnit;.toNanos:(J)J` @kind virtual;
  #L2ad7ec.  v12:= temp @kind wide;
  #L2ad7ee.  call temp:= `min`(v5, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L2ad7f4.  v12:= temp @kind wide;
  #L2ad7f6.  v12:= v12 + v0 @kind long;
  #L2ad7f8.  call temp:= `d`(v2, v12) @signature `Lokio/w;.d:(J)Lokio/w;` @kind virtual;
  #L2ad7fe.  v12:= new `okio.c`;
  #L2ad802.  call `<init>`(v12) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L2ad808.  v7:= 8192L;
  #L2ad80c.  call temp:= `z0`(v11, v12, v7) @signature `Lokio/v;.z0:(Lokio/c;J)J` @kind interface;
  #L2ad812.  v7:= temp @kind wide;
  #L2ad814.  v9:= -1L;
  #L2ad818.  v13:= lcmp(v7, v9);
  #L2ad81c.  if v13 == 0 then goto L2ad828;
  #L2ad820.  call `e`(v12) @signature `Lokio/c;.e:()V` @kind virtual;
  #L2ad826.  goto L2ad808;
  #L2ad828.  v12:= 1I;
  #L2ad82a.  v13:= lcmp(v5, v3);
  #L2ad82e.  if v13 != 0 then goto L2ad842;
  #L2ad832.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad838.  v11:= temp @kind object;
  #L2ad83a.  call temp:= `a`(v11) @signature `Lokio/w;.a:()Lokio/w;` @kind virtual;
  #L2ad840.  goto L2ad852;
  #L2ad842.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad848.  v11:= temp @kind object;
  #L2ad84a.  v0:= v0 + v5 @kind long;
  #L2ad84c.  call temp:= `d`(v11, v0) @signature `Lokio/w;.d:(J)Lokio/w;` @kind virtual;
  #L2ad852.  return v12;
  #L2ad854.  v12:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2ad856.  v13:= lcmp(v5, v3);
  #L2ad85a.  if v13 != 0 then goto L2ad86e;
  #L2ad85e.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad864.  v11:= temp @kind object;
  #L2ad866.  call temp:= `a`(v11) @signature `Lokio/w;.a:()Lokio/w;` @kind virtual;
  #L2ad86c.  goto L2ad87e;
  #L2ad86e.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad874.  v11:= temp @kind object;
  #L2ad876.  v0:= v0 + v5 @kind long;
  #L2ad878.  call temp:= `d`(v11, v0) @signature `Lokio/w;.d:(J)Lokio/w;` @kind virtual;
  #L2ad87e.  throw v12;
  #L2ad880.  
  #L2ad882.  v12:= 0I;
  #L2ad884.  v13:= lcmp(v5, v3);
  #L2ad888.  if v13 != 0 then goto L2ad89c;
  #L2ad88c.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad892.  v11:= temp @kind object;
  #L2ad894.  call temp:= `a`(v11) @signature `Lokio/w;.a:()Lokio/w;` @kind virtual;
  #L2ad89a.  goto L2ad8ac;
  #L2ad89c.  call temp:= `timeout`(v11) @signature `Lokio/v;.timeout:()Lokio/w;` @kind interface;
  #L2ad8a2.  v11:= temp @kind object;
  #L2ad8a4.  v0:= v0 + v5 @kind long;
  #L2ad8a6.  call temp:= `d`(v11, v0) @signature `Lokio/w;.d:(J)Lokio/w;` @kind virtual;
  #L2ad8ac.  return v12;
  catch `java.io.InterruptedIOException` @[L2ad7fe..L2ad826] goto L2ad880;
  catch `java.lang.Throwable` @[L2ad7fe..L2ad826] goto L2ad854;
}
procedure `int` `G`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lee/e;.G:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2adafc.  if v3 >= v4 then goto L2adb38;
  #L2adb00.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2adb06.  v0:= temp;
  #L2adb08.  v1:= 9I;
  #L2adb0c.  if v0 == v1 then goto L2adb32;
  #L2adb10.  v1:= 10I;
  #L2adb14.  if v0 == v1 then goto L2adb32;
  #L2adb18.  v1:= 12I;
  #L2adb1c.  if v0 == v1 then goto L2adb32;
  #L2adb20.  v1:= 13I;
  #L2adb24.  if v0 == v1 then goto L2adb32;
  #L2adb28.  v1:= 32I;
  #L2adb2c.  if v0 == v1 then goto L2adb32;
  #L2adb30.  return v3;
  #L2adb32.  v3:= v3 + 1;
  #L2adb36.  goto L2adafc;
  #L2adb38.  return v4;
}
procedure `int` `H`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lee/e;.H:(Ljava/lang/String;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2adb4c.  v4:= v4 + -1;
  #L2adb50.  if v4 < v3 then goto L2adb90;
  #L2adb54.  call temp:= `charAt`(v2, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2adb5a.  v0:= temp;
  #L2adb5c.  v1:= 9I;
  #L2adb60.  if v0 == v1 then goto L2adb8a;
  #L2adb64.  v1:= 10I;
  #L2adb68.  if v0 == v1 then goto L2adb8a;
  #L2adb6c.  v1:= 12I;
  #L2adb70.  if v0 == v1 then goto L2adb8a;
  #L2adb74.  v1:= 13I;
  #L2adb78.  if v0 == v1 then goto L2adb8a;
  #L2adb7c.  v1:= 32I;
  #L2adb80.  if v0 == v1 then goto L2adb8a;
  #L2adb84.  v4:= v4 + 1;
  #L2adb88.  return v4;
  #L2adb8a.  v4:= v4 + -1;
  #L2adb8e.  goto L2adb50;
  #L2adb90.  return v3;
}
procedure `java.util.concurrent.ThreadFactory` `I`(`java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lee/e;.I:(Ljava/lang/String;Z)Ljava/util/concurrent/ThreadFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ae22c.  v0:= new `ee.d`;
  #L2ae230.  call `<init>`(v0, v1, v2) @signature `Lee/d;.<init>:(Ljava/lang/String;Z)V` @kind direct;
  #L2ae236.  return v0 @kind object;
}
procedure `java.util.List` `J`(`okhttp3.w` v5 @kind object) @signature `Lee/e;.J:(Lokhttp3/w;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ae1a0.  v0:= new `java.util.ArrayList`;
  #L2ae1a4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2ae1aa.  v1:= 0I;
  #L2ae1ac.  call temp:= `h`(v5) @signature `Lokhttp3/w;.h:()I` @kind virtual;
  #L2ae1b2.  v2:= temp;
  #L2ae1b4.  if v1 >= v2 then goto L2ae1de;
  #L2ae1b8.  v2:= new `ie.c`;
  #L2ae1bc.  call temp:= `e`(v5, v1) @signature `Lokhttp3/w;.e:(I)Ljava/lang/String;` @kind virtual;
  #L2ae1c2.  v3:= temp @kind object;
  #L2ae1c4.  call temp:= `i`(v5, v1) @signature `Lokhttp3/w;.i:(I)Ljava/lang/String;` @kind virtual;
  #L2ae1ca.  v4:= temp @kind object;
  #L2ae1cc.  call `<init>`(v2, v3, v4) @signature `Lie/c;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L2ae1d2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2ae1d8.  v1:= v1 + 1;
  #L2ae1dc.  goto L2ae1ac;
  #L2ae1de.  return v0 @kind object;
}
procedure `okhttp3.w` `K`(`java.util.List` v4 @kind object) @signature `Lee/e;.K:(Ljava/util/List;)Lokhttp3/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2ae2f0.  v0:= new `okhttp3.w$a`;
  #L2ae2f4.  call `<init>`(v0) @signature `Lokhttp3/w$a;.<init>:()V` @kind direct;
  #L2ae2fa.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2ae300.  v4:= temp @kind object;
  #L2ae302.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2ae308.  v1:= temp;
  #L2ae30a.  if v1 == 0 then goto L2ae33e;
  #L2ae30e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2ae314.  v1:= temp @kind object;
  #L2ae316.  v1:= (`ie.c`) v1 @kind object;
  #L2ae31a.  v2:= `@@ee.a.a` @type ^`ee.a` @kind object;
  #L2ae31e.  v3:= v1.`ie.c.a` @type ^`okio.f` @kind object;
  #L2ae322.  call temp:= `utf8`(v3) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2ae328.  v3:= temp @kind object;
  #L2ae32a.  v1:= v1.`ie.c.b` @type ^`okio.f` @kind object;
  #L2ae32e.  call temp:= `utf8`(v1) @signature `Lokio/f;.utf8:()Ljava/lang/String;` @kind virtual;
  #L2ae334.  v1:= temp @kind object;
  #L2ae336.  call `b`(v2, v0, v3, v1) @signature `Lee/a;.b:(Lokhttp3/w$a;Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L2ae33c.  goto L2ae302;
  #L2ae33e.  call temp:= `e`(v0) @signature `Lokhttp3/w$a;.e:()Lokhttp3/w;` @kind virtual;
  #L2ae344.  v4:= temp @kind object;
  #L2ae346.  return v4 @kind object;
}
procedure `java.lang.String` `L`(`java.lang.String` v0 @kind object, `int` v1 , `int` v2 ) @signature `Lee/e;.L:(Ljava/lang/String;II)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ade88.  call temp:= `G`(v0, v1, v2) @signature `Lee/e;.G:(Ljava/lang/String;II)I` @kind static;
  #L2ade8e.  v1:= temp;
  #L2ade90.  call temp:= `H`(v0, v1, v2) @signature `Lee/e;.H:(Ljava/lang/String;II)I` @kind static;
  #L2ade96.  v2:= temp;
  #L2ade98.  call temp:= `substring`(v0, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2ade9e.  v0:= temp @kind object;
  #L2adea0.  return v0 @kind object;
}
procedure `boolean` `M`(`java.lang.String` v1 @kind object) @signature `Lee/e;.M:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ad8d0.  v0:= `@@ee.e.k` @type ^`java.util.regex.Pattern` @kind object;
  #L2ad8d4.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2ad8da.  v1:= temp @kind object;
  #L2ad8dc.  call temp:= `matches`(v1) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L2ad8e2.  v1:= temp;
  #L2ad8e4.  return v1;
}
procedure `java.lang.Thread` `a`(`java.lang.String` v0 @kind object, `boolean` v1 , `java.lang.Runnable` v2 @kind object) @signature `Lee/e;.a:(Ljava/lang/String;ZLjava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L2adf54.  call temp:= `B`(v0, v1, v2) @signature `Lee/e;.B:(Ljava/lang/String;ZLjava/lang/Runnable;)Ljava/lang/Thread;` @kind static;
  #L2adf5a.  v0:= temp @kind object;
  #L2adf5c.  return v0 @kind object;
}
procedure `void` `b`(`java.lang.Throwable` v3 @kind object, `java.lang.Throwable` v4 @kind object) @signature `Lee/e;.b:(Ljava/lang/Throwable;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2ae484.  v0:= `@@ee.e.j` @type ^`java.lang.reflect.Method` @kind object;
  #L2ae488.  if v0 == 0 then goto L2ae49e;
  #L2ae48c.  v1:= 1I;
  #L2ae48e.  v1:= new `java.lang.Object`[v1];
  #L2ae492.  v2:= 0I;
  #L2ae494.  v1[v2]:= v4 @kind object;
  #L2ae498.  call temp:= `invoke`(v0, v3, v1) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ae49e.  return @kind void;
  catch `java.lang.reflect.InvocationTargetException` @[L2ae48e..L2ae49e] goto L2ae49e;
  catch `java.lang.IllegalAccessException` @[L2ae48e..L2ae49e] goto L2ae49e;
}
procedure `java.nio.charset.Charset` `c`(`okio.e` v1 @kind object, `java.nio.charset.Charset` v2 @kind object) @signature `Lee/e;.c:(Lokio/e;Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ae0e0.  v0:= `@@ee.e.e` @type ^`okio.o` @kind object;
  #L2ae0e4.  call temp:= `P0`(v1, v0) @signature `Lokio/e;.P0:(Lokio/o;)I` @kind interface;
  #L2ae0ea.  v1:= temp;
  #L2ae0ec.  v0:= -1I;
  #L2ae0ee.  if v1 == v0 then goto L2ae138;
  #L2ae0f2.  if v1 == 0 then goto L2ae132;
  #L2ae0f6.  v2:= 1I;
  #L2ae0f8.  if v1 == v2 then goto L2ae12c;
  #L2ae0fc.  v2:= 2I;
  #L2ae0fe.  if v1 == v2 then goto L2ae126;
  #L2ae102.  v2:= 3I;
  #L2ae104.  if v1 == v2 then goto L2ae120;
  #L2ae108.  v2:= 4I;
  #L2ae10a.  if v1 != v2 then goto L2ae114;
  #L2ae10e.  v1:= `@@ee.e.g` @type ^`java.nio.charset.Charset` @kind object;
  #L2ae112.  return v1 @kind object;
  #L2ae114.  v1:= new `java.lang.AssertionError`;
  #L2ae118.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ae11e.  throw v1;
  #L2ae120.  v1:= `@@ee.e.f` @type ^`java.nio.charset.Charset` @kind object;
  #L2ae124.  return v1 @kind object;
  #L2ae126.  v1:= `@@java.nio.charset.StandardCharsets.UTF_16LE` @type ^`java.nio.charset.Charset` @kind object;
  #L2ae12a.  return v1 @kind object;
  #L2ae12c.  v1:= `@@java.nio.charset.StandardCharsets.UTF_16BE` @type ^`java.nio.charset.Charset` @kind object;
  #L2ae130.  return v1 @kind object;
  #L2ae132.  v1:= `@@java.nio.charset.StandardCharsets.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L2ae136.  return v1 @kind object;
  #L2ae138.  return v2 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.String` v4 @kind object) @signature `Lee/e;.d:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2adba4.  v0:= ":" @kind object;
  #L2adba8.  call temp:= `contains`(v4, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2adbae.  v0:= temp;
  #L2adbb0.  v1:= 0I;
  #L2adbb2.  if v0 == 0 then goto L2adc6a;
  #L2adbb6.  v0:= "[" @kind object;
  #L2adbba.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2adbc0.  v0:= temp;
  #L2adbc2.  if v0 == 0 then goto L2adbec;
  #L2adbc6.  v0:= "]" @kind object;
  #L2adbca.  call temp:= `endsWith`(v4, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L2adbd0.  v0:= temp;
  #L2adbd2.  if v0 == 0 then goto L2adbec;
  #L2adbd6.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2adbdc.  v0:= temp;
  #L2adbde.  v2:= 1I;
  #L2adbe0.  v0:= v0 - v2 @kind int;
  #L2adbe2.  call temp:= `m`(v4, v2, v0) @signature `Lee/e;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L2adbe8.  v0:= temp @kind object;
  #L2adbea.  goto L2adbfe;
  #L2adbec.  v0:= 0I;
  #L2adbee.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2adbf4.  v2:= temp;
  #L2adbf6.  call temp:= `m`(v4, v0, v2) @signature `Lee/e;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @kind static;
  #L2adbfc.  v0:= temp @kind object;
  #L2adbfe.  if v0 != 0 then goto L2adc04;
  #L2adc02.  return v1 @kind object;
  #L2adc04.  call temp:= `getAddress`(v0) @signature `Ljava/net/InetAddress;.getAddress:()[B` @kind virtual;
  #L2adc0a.  v1:= temp @kind object;
  #L2adc0c.  v2:= length @variable v1;
  #L2adc0e.  v3:= 16I;
  #L2adc12.  if v2 != v3 then goto L2adc20;
  #L2adc16.  call temp:= `y`(v1) @signature `Lee/e;.y:([B)Ljava/lang/String;` @kind static;
  #L2adc1c.  v4:= temp @kind object;
  #L2adc1e.  return v4 @kind object;
  #L2adc20.  v1:= length @variable v1;
  #L2adc22.  v2:= 4I;
  #L2adc24.  if v1 != v2 then goto L2adc32;
  #L2adc28.  call temp:= `getHostAddress`(v0) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L2adc2e.  v4:= temp @kind object;
  #L2adc30.  return v4 @kind object;
  #L2adc32.  v0:= new `java.lang.AssertionError`;
  #L2adc36.  v1:= new `java.lang.StringBuilder`;
  #L2adc3a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2adc40.  v2:= "Invalid IPv6 address: '" @kind object;
  #L2adc44.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2adc4a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2adc50.  v4:= "'" @kind object;
  #L2adc54.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2adc5a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2adc60.  v4:= temp @kind object;
  #L2adc62.  call `<init>`(v0, v4) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L2adc68.  throw v0;
  #L2adc6a.  call temp:= `toASCII`(v4) @signature `Ljava/net/IDN;.toASCII:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2adc70.  v4:= temp @kind object;
  #L2adc72.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2adc76.  call temp:= `toLowerCase`(v4, v0) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L2adc7c.  v4:= temp @kind object;
  #L2adc7e.  call temp:= `isEmpty`(v4) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L2adc84.  v0:= temp;
  #L2adc86.  if v0 == 0 then goto L2adc8c;
  #L2adc8a.  return v1 @kind object;
  #L2adc8c.  call temp:= `j`(v4) @signature `Lee/e;.j:(Ljava/lang/String;)Z` @kind static;
  #L2adc92.  v0:= temp;
  #L2adc94.  if v0 == 0 then goto L2adc9a;
  #L2adc98.  return v1 @kind object;
  #L2adc9a.  return v4 @kind object;
  #L2adc9c.  return v1 @kind object;
  catch `java.lang.IllegalArgumentException` @[L2adc6a..L2adc94] goto L2adc9c;
}
procedure `int` `e`(`java.lang.String` v5 @kind object, `long` v6 , `java.util.concurrent.TimeUnit` v8 @kind object) @signature `Lee/e;.e:(Ljava/lang/String;JLjava/util/concurrent/TimeUnit;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ad8f8.  v0:= 0L;
  #L2ad8fc.  v2:= lcmp(v6, v0);
  #L2ad900.  if v2 < 0 then goto L2ad992;
  #L2ad904.  v3:= "unit == null" @kind object;
  #L2ad908.  call temp:= `requireNonNull`(v8, v3) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L2ad90e.  call temp:= `toMillis`(v8, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L2ad914.  v6:= temp @kind wide;
  #L2ad916.  v3:= 2147483647L;
  #L2ad91c.  v8:= lcmp(v6, v3);
  #L2ad920.  if v8 > 0 then goto L2ad964;
  #L2ad924.  v8:= lcmp(v6, v0);
  #L2ad928.  if v8 != 0 then goto L2ad960;
  #L2ad92c.  if v2 > 0 then goto L2ad932;
  #L2ad930.  goto L2ad960;
  #L2ad932.  v6:= new `java.lang.IllegalArgumentException`;
  #L2ad936.  v7:= new `java.lang.StringBuilder`;
  #L2ad93a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ad940.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad946.  v5:= " too small." @kind object;
  #L2ad94a.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad950.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ad956.  v5:= temp @kind object;
  #L2ad958.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ad95e.  throw v6;
  #L2ad960.  v5:= (`int`) v6 @kind l2i;
  #L2ad962.  return v5;
  #L2ad964.  v6:= new `java.lang.IllegalArgumentException`;
  #L2ad968.  v7:= new `java.lang.StringBuilder`;
  #L2ad96c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ad972.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad978.  v5:= " too large." @kind object;
  #L2ad97c.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad982.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ad988.  v5:= temp @kind object;
  #L2ad98a.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ad990.  throw v6;
  #L2ad992.  v6:= new `java.lang.IllegalArgumentException`;
  #L2ad996.  v7:= new `java.lang.StringBuilder`;
  #L2ad99a.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ad9a0.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad9a6.  v5:= " < 0" @kind object;
  #L2ad9aa.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ad9b0.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ad9b6.  v5:= temp @kind object;
  #L2ad9b8.  call `<init>`(v6, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ad9be.  throw v6;
}
procedure `void` `f`(`long` v5 , `long` v7 , `long` v9 ) @signature `Lee/e;.f:(JJJ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ae4c0.  v0:= v7 ^| v9 @kind long;
  #L2ae4c4.  v2:= 0L;
  #L2ae4c8.  v4:= lcmp(v0, v2);
  #L2ae4cc.  if v4 < 0 then goto L2ae4e4;
  #L2ae4d0.  v0:= lcmp(v7, v5);
  #L2ae4d4.  if v0 > 0 then goto L2ae4e4;
  #L2ae4d8.  v5:= v5 - v7 @kind long;
  #L2ae4da.  v7:= lcmp(v5, v9);
  #L2ae4de.  if v7 < 0 then goto L2ae4e4;
  #L2ae4e2.  return @kind void;
  #L2ae4e4.  v5:= new `java.lang.ArrayIndexOutOfBoundsException`;
  #L2ae4e8.  call `<init>`(v5) @signature `Ljava/lang/ArrayIndexOutOfBoundsException;.<init>:()V` @kind direct;
  #L2ae4ee.  throw v5;
}
procedure `void` `g`(`java.io.Closeable` v0 @kind object) @signature `Lee/e;.g:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ae500.  if v0 == 0 then goto L2ae510;
  #L2ae504.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L2ae50a.  goto L2ae510;
  #L2ae50c.  v0:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2ae50e.  throw v0;
  #L2ae510.  return @kind void;
  catch `java.lang.RuntimeException` @[L2ae504..L2ae50a] goto L2ae50c;
  catch `java.lang.Exception` @[L2ae504..L2ae50a] goto L2ae510;
}
procedure `void` `h`(`java.net.Socket` v1 @kind object) @signature `Lee/e;.h:(Ljava/net/Socket;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ae534.  if v1 == 0 then goto L2ae556;
  #L2ae538.  call `close`(v1) @signature `Ljava/net/Socket;.close:()V` @kind virtual;
  #L2ae53e.  goto L2ae556;
  #L2ae540.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L2ae542.  throw v1;
  #L2ae544.  v1:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L2ae546.  call temp:= `A`(v1) @signature `Lee/e;.A:(Ljava/lang/AssertionError;)Z` @kind static;
  #L2ae54c.  v0:= temp;
  #L2ae54e.  if v0 == 0 then goto L2ae554;
  #L2ae552.  goto L2ae556;
  #L2ae554.  throw v1;
  #L2ae556.  return @kind void;
  catch `java.lang.AssertionError` @[L2ae538..L2ae53e] goto L2ae544;
  catch `java.lang.RuntimeException` @[L2ae538..L2ae53e] goto L2ae540;
  catch `java.lang.Exception` @[L2ae538..L2ae53e] goto L2ae556;
}
procedure `java.lang.String`[] `i`(`java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lee/e;.i:([Ljava/lang/String;Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2adeb4.  v0:= length @variable v4;
  #L2adeb6.  v0:= v0 + 1;
  #L2adeba.  v1:= new `java.lang.String`[v0];
  #L2adebe.  v2:= length @variable v4;
  #L2adec0.  v3:= 0I;
  #L2adec2.  call `arraycopy`(v4, v3, v1, v3, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2adec8.  v0:= v0 + -1;
  #L2adecc.  v1[v0]:= v5 @kind object;
  #L2aded0.  return v1 @kind object;
}
procedure `boolean` `j`(`java.lang.String` v5 @kind object) @signature `Lee/e;.j:(Ljava/lang/String;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2ad560.  v0:= 0I;
  #L2ad562.  v1:= 0I;
  #L2ad564.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2ad56a.  v2:= temp;
  #L2ad56c.  if v1 >= v2 then goto L2ad5a8;
  #L2ad570.  call temp:= `charAt`(v5, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ad576.  v2:= temp;
  #L2ad578.  v3:= 31I;
  #L2ad57c.  v4:= 1I;
  #L2ad57e.  if v2 <= v3 then goto L2ad5a6;
  #L2ad582.  v3:= 127I;
  #L2ad586.  if v2 < v3 then goto L2ad58c;
  #L2ad58a.  goto L2ad5a6;
  #L2ad58c.  v3:= " #%/:?@[\\]" @kind object;
  #L2ad590.  call temp:= `indexOf`(v3, v2) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2ad596.  v2:= temp;
  #L2ad598.  v3:= -1I;
  #L2ad59a.  if v2 == v3 then goto L2ad5a0;
  #L2ad59e.  return v4;
  #L2ad5a0.  v1:= v1 + 1;
  #L2ad5a4.  goto L2ad564;
  #L2ad5a6.  return v4;
  #L2ad5a8.  return v0;
}
procedure `int` `k`(`char` v2 ) @signature `Lee/e;.k:(C)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2ad9d0.  v0:= 48I;
  #L2ad9d4.  if v2 < v0 then goto L2ad9e4;
  #L2ad9d8.  v1:= 57I;
  #L2ad9dc.  if v2 > v1 then goto L2ad9e4;
  #L2ad9e0.  v2:= v2 - v0 @kind int;
  #L2ad9e2.  return v2;
  #L2ad9e4.  v0:= 97I;
  #L2ad9e8.  if v2 < v0 then goto L2ad9fc;
  #L2ad9ec.  v1:= 102I;
  #L2ad9f0.  if v2 > v1 then goto L2ad9fc;
  #L2ad9f4.  v2:= v2 - v0 @kind int;
  #L2ad9f6.  v2:= v2 + 10;
  #L2ad9fa.  return v2;
  #L2ad9fc.  v0:= 65I;
  #L2ada00.  if v2 < v0 then goto L2ada0e;
  #L2ada04.  v1:= 70I;
  #L2ada08.  if v2 > v1 then goto L2ada0e;
  #L2ada0c.  goto L2ad9f4;
  #L2ada0e.  v2:= -1I;
  #L2ada10.  return v2;
}
procedure `boolean` `l`(`java.lang.String` v7 @kind object, `int` v8 , `int` v9 , `byte`[] v10 @kind object, `int` v11 ) @signature `Lee/e;.l:(Ljava/lang/String;II[BI)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2ad5bc.  v0:= v11;
  #L2ad5be.  v1:= 0I;
  #L2ad5c0.  if v8 >= v9 then goto L2ad644;
  #L2ad5c4.  v2:= length @variable v10;
  #L2ad5c6.  if v0 != v2 then goto L2ad5cc;
  #L2ad5ca.  return v1;
  #L2ad5cc.  if v0 == v11 then goto L2ad5e6;
  #L2ad5d0.  call temp:= `charAt`(v7, v8) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ad5d6.  v2:= temp;
  #L2ad5d8.  v3:= 46I;
  #L2ad5dc.  if v2 == v3 then goto L2ad5e2;
  #L2ad5e0.  return v1;
  #L2ad5e2.  v8:= v8 + 1;
  #L2ad5e6.  v2:= v8;
  #L2ad5e8.  v3:= 0I;
  #L2ad5ea.  if v2 >= v9 then goto L2ad62a;
  #L2ad5ee.  call temp:= `charAt`(v7, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ad5f4.  v4:= temp;
  #L2ad5f6.  v5:= 48I;
  #L2ad5fa.  if v4 < v5 then goto L2ad62a;
  #L2ad5fe.  v6:= 57I;
  #L2ad602.  if v4 <= v6 then goto L2ad608;
  #L2ad606.  goto L2ad62a;
  #L2ad608.  if v3 != 0 then goto L2ad612;
  #L2ad60c.  if v8 == v2 then goto L2ad612;
  #L2ad610.  return v1;
  #L2ad612.  v3:= v3 * 10;
  #L2ad616.  v3:= v3 + v4 @kind int;
  #L2ad618.  v3:= v3 - v5 @kind int;
  #L2ad61a.  v4:= 255I;
  #L2ad61e.  if v3 <= v4 then goto L2ad624;
  #L2ad622.  return v1;
  #L2ad624.  v2:= v2 + 1;
  #L2ad628.  goto L2ad5ea;
  #L2ad62a.  v8:= v2 - v8 @kind int;
  #L2ad62e.  if v8 != 0 then goto L2ad634;
  #L2ad632.  return v1;
  #L2ad634.  v8:= v0 + 1;
  #L2ad638.  v1:= (`byte`) v3 @kind i2b;
  #L2ad63a.  v10[v0]:= v1 @kind byte;
  #L2ad63e.  v0:= v8;
  #L2ad640.  v8:= v2;
  #L2ad642.  goto L2ad5be;
  #L2ad644.  v11:= v11 + 4;
  #L2ad648.  if v0 == v11 then goto L2ad64e;
  #L2ad64c.  return v1;
  #L2ad64e.  v7:= 1I;
  #L2ad650.  return v7;
}
procedure `java.net.InetAddress` `m`(`java.lang.String` v11 @kind object, `int` v12 , `int` v13 ) @signature `Lee/e;.m:(Ljava/lang/String;II)Ljava/net/InetAddress;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2adf94.  v0:= 16I;
  #L2adf98.  v1:= new `byte`[v0];
  #L2adf9c.  v2:= -1I;
  #L2adf9e.  v3:= 0I;
  #L2adfa0.  v4:= 0I;
  #L2adfa2.  v5:= -1I;
  #L2adfa4.  v6:= -1I;
  #L2adfa6.  v7:= 0I;
  #L2adfa8.  if v12 >= v13 then goto L2ae088;
  #L2adfac.  if v4 != v0 then goto L2adfb2;
  #L2adfb0.  return v7 @kind object;
  #L2adfb2.  v8:= v12 + 2;
  #L2adfb6.  if v8 > v13 then goto L2adfe2;
  #L2adfba.  v9:= "::" @kind object;
  #L2adfbe.  v10:= 2I;
  #L2adfc0.  call temp:= `regionMatches`(v11, v12, v9, v3, v10) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L2adfc6.  v9:= temp;
  #L2adfc8.  if v9 == 0 then goto L2adfe2;
  #L2adfcc.  if v5 == v2 then goto L2adfd2;
  #L2adfd0.  return v7 @kind object;
  #L2adfd2.  v4:= v4 + 2;
  #L2adfd6.  v5:= v4;
  #L2adfd8.  if v8 != v13 then goto L2adfde;
  #L2adfdc.  goto L2ae088;
  #L2adfde.  v6:= v8;
  #L2adfe0.  goto L2ae02a;
  #L2adfe2.  if v4 == 0 then goto L2ae028;
  #L2adfe6.  v8:= ":" @kind object;
  #L2adfea.  v9:= 1I;
  #L2adfec.  call temp:= `regionMatches`(v11, v12, v8, v3, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L2adff2.  v8:= temp;
  #L2adff4.  if v8 == 0 then goto L2adffe;
  #L2adff8.  v12:= v12 + 1;
  #L2adffc.  goto L2ae028;
  #L2adffe.  v8:= "." @kind object;
  #L2ae002.  call temp:= `regionMatches`(v11, v12, v8, v3, v9) @signature `Ljava/lang/String;.regionMatches:(ILjava/lang/String;II)Z` @kind virtual;
  #L2ae008.  v12:= temp;
  #L2ae00a.  if v12 == 0 then goto L2ae026;
  #L2ae00e.  v12:= v4 + -2;
  #L2ae012.  call temp:= `l`(v11, v6, v13, v1, v12) @signature `Lee/e;.l:(Ljava/lang/String;II[BI)Z` @kind static;
  #L2ae018.  v11:= temp;
  #L2ae01a.  if v11 != 0 then goto L2ae020;
  #L2ae01e.  return v7 @kind object;
  #L2ae020.  v4:= v4 + 2;
  #L2ae024.  goto L2ae088;
  #L2ae026.  return v7 @kind object;
  #L2ae028.  v6:= v12;
  #L2ae02a.  v12:= v6;
  #L2ae02c.  v8:= 0I;
  #L2ae02e.  if v12 >= v13 then goto L2ae054;
  #L2ae032.  call temp:= `charAt`(v11, v12) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ae038.  v9:= temp;
  #L2ae03a.  call temp:= `k`(v9) @signature `Lee/e;.k:(C)I` @kind static;
  #L2ae040.  v9:= temp;
  #L2ae042.  if v9 != v2 then goto L2ae048;
  #L2ae046.  goto L2ae054;
  #L2ae048.  v8:= v8 ^< 4;
  #L2ae04c.  v8:= v8 + v9 @kind int;
  #L2ae04e.  v12:= v12 + 1;
  #L2ae052.  goto L2ae02e;
  #L2ae054.  v9:= v12 - v6 @kind int;
  #L2ae058.  if v9 == 0 then goto L2ae086;
  #L2ae05c.  v10:= 4I;
  #L2ae05e.  if v9 <= v10 then goto L2ae064;
  #L2ae062.  goto L2ae086;
  #L2ae064.  v7:= v4 + 1;
  #L2ae068.  v9:= v8 ^>> 8;
  #L2ae06c.  v9:= v9 ^& 255;
  #L2ae070.  v9:= (`byte`) v9 @kind i2b;
  #L2ae072.  v1[v4]:= v9 @kind byte;
  #L2ae076.  v4:= v7 + 1;
  #L2ae07a.  v8:= v8 ^& 255;
  #L2ae07e.  v8:= (`byte`) v8 @kind i2b;
  #L2ae080.  v1[v7]:= v8 @kind byte;
  #L2ae084.  goto L2adfa6;
  #L2ae086.  return v7 @kind object;
  #L2ae088.  if v4 == v0 then goto L2ae0aa;
  #L2ae08c.  if v5 != v2 then goto L2ae092;
  #L2ae090.  return v7 @kind object;
  #L2ae092.  v11:= v4 - v5 @kind int;
  #L2ae096.  v12:= v11 - 16;
  #L2ae09a.  call `arraycopy`(v1, v5, v1, v12, v11) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2ae0a0.  v0:= v0 - v4 @kind int;
  #L2ae0a2.  v0:= v0 + v5 @kind int;
  #L2ae0a4.  call `fill`(v1, v5, v0, v3) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L2ae0aa.  call temp:= `getByAddress`(v1) @signature `Ljava/net/InetAddress;.getByAddress:([B)Ljava/net/InetAddress;` @kind static;
  #L2ae0b0.  v11:= temp @kind object;
  #L2ae0b2.  return v11 @kind object;
  #L2ae0b4.  v11:= new `java.lang.AssertionError`;
  #L2ae0b8.  call `<init>`(v11) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2ae0be.  throw v11;
  catch `java.net.UnknownHostException` @[L2ae0aa..L2ae0b2] goto L2ae0b4;
}
procedure `int` `n`(`java.lang.String` v1 @kind object, `int` v2 , `int` v3 , `char` v4 ) @signature `Lee/e;.n:(Ljava/lang/String;IIC)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ada24.  if v2 >= v3 then goto L2ada3c;
  #L2ada28.  call temp:= `charAt`(v1, v2) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ada2e.  v0:= temp;
  #L2ada30.  if v0 != v4 then goto L2ada36;
  #L2ada34.  return v2;
  #L2ada36.  v2:= v2 + 1;
  #L2ada3a.  goto L2ada24;
  #L2ada3c.  return v3;
}
procedure `int` `o`(`java.lang.String` v2 @kind object, `int` v3 , `int` v4 , `java.lang.String` v5 @kind object) @signature `Lee/e;.o:(Ljava/lang/String;IILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2ada50.  if v3 >= v4 then goto L2ada72;
  #L2ada54.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2ada5a.  v0:= temp;
  #L2ada5c.  call temp:= `indexOf`(v5, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2ada62.  v0:= temp;
  #L2ada64.  v1:= -1I;
  #L2ada66.  if v0 == v1 then goto L2ada6c;
  #L2ada6a.  return v3;
  #L2ada6c.  v3:= v3 + 1;
  #L2ada70.  goto L2ada50;
  #L2ada72.  return v4;
}
procedure `boolean` `p`(`okio.v` v0 @kind object, `int` v1 , `java.util.concurrent.TimeUnit` v2 @kind object) @signature `Lee/e;.p:(Lokio/v;ILjava/util/concurrent/TimeUnit;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ad664.  call temp:= `F`(v0, v1, v2) @signature `Lee/e;.F:(Lokio/v;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L2ad66a.  v0:= temp;
  #L2ad66c.  return v0;
  #L2ad66e.  v0:= 0I;
  #L2ad670.  return v0;
  catch `java.io.IOException` @[L2ad664..L2ad66c] goto L2ad66e;
}
procedure `java.lang.String` `q`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lee/e;.q:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2adcc0.  v0:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L2adcc4.  call temp:= `format`(v0, v1, v2) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2adcca.  v1:= temp @kind object;
  #L2adccc.  return v1 @kind object;
}
procedure `java.lang.String` `r`(`java.lang.String` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lee/e;.r:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2adce0.  call temp:= `getProperty`(v0) @signature `Ljava/lang/System;.getProperty:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2adce6.  v0:= temp @kind object;
  #L2adce8.  if v0 == 0 then goto L2adcee;
  #L2adcec.  v1:= v0 @kind object;
  #L2adcee.  return v1 @kind object;
  catch `java.security.AccessControlException` @[L2adce0..L2adce8] goto L2adcee;
}
procedure `java.lang.String` `s`(`okhttp3.x` v3 @kind object, `boolean` v4 ) @signature `Lee/e;.s:(Lokhttp3/x;Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2add10.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L2add16.  v0:= temp @kind object;
  #L2add18.  v1:= ":" @kind object;
  #L2add1c.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L2add22.  v0:= temp;
  #L2add24.  if v0 == 0 then goto L2add5e;
  #L2add28.  v0:= new `java.lang.StringBuilder`;
  #L2add2c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2add32.  v2:= "[" @kind object;
  #L2add36.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2add3c.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L2add42.  v2:= temp @kind object;
  #L2add44.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2add4a.  v2:= "]" @kind object;
  #L2add4e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2add54.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2add5a.  v0:= temp @kind object;
  #L2add5c.  goto L2add66;
  #L2add5e.  call temp:= `l`(v3) @signature `Lokhttp3/x;.l:()Ljava/lang/String;` @kind virtual;
  #L2add64.  v0:= temp @kind object;
  #L2add66.  if v4 != 0 then goto L2add86;
  #L2add6a.  call temp:= `x`(v3) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L2add70.  v4:= temp;
  #L2add72.  call temp:= `D`(v3) @signature `Lokhttp3/x;.D:()Ljava/lang/String;` @kind virtual;
  #L2add78.  v2:= temp @kind object;
  #L2add7a.  call temp:= `d`(v2) @signature `Lokhttp3/x;.d:(Ljava/lang/String;)I` @kind static;
  #L2add80.  v2:= temp;
  #L2add82.  if v4 == v2 then goto L2addb2;
  #L2add86.  v4:= new `java.lang.StringBuilder`;
  #L2add8a.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2add90.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2add96.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2add9c.  call temp:= `x`(v3) @signature `Lokhttp3/x;.x:()I` @kind virtual;
  #L2adda2.  v3:= temp;
  #L2adda4.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2addaa.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2addb0.  v0:= temp @kind object;
  #L2addb2.  return v0 @kind object;
}
procedure `java.util.List` `t`(`java.util.List` v1 @kind object) @signature `Lee/e;.t:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ae17c.  v0:= new `java.util.ArrayList`;
  #L2ae180.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L2ae186.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2ae18c.  v1:= temp @kind object;
  #L2ae18e.  return v1 @kind object;
}
procedure `java.util.List` `u`(`java.lang.Object`[] v0 @kind object) @signature `Lee/e;.u:([Ljava/lang/Object;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L2ae14c.  call temp:= `clone`(v0) @signature `[Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind virtual;
  #L2ae152.  v0:= temp @kind object;
  #L2ae154.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L2ae158.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L2ae15e.  v0:= temp @kind object;
  #L2ae160.  call temp:= `unmodifiableList`(v0) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2ae166.  v0:= temp @kind object;
  #L2ae168.  return v0 @kind object;
}
procedure `java.util.Map` `v`(`java.util.Map` v1 @kind object) @signature `Lee/e;.v:(Ljava/util/Map;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2ae1f0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L2ae1f6.  v0:= temp;
  #L2ae1f8.  if v0 == 0 then goto L2ae206;
  #L2ae1fc.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L2ae202.  v1:= temp @kind object;
  #L2ae204.  goto L2ae218;
  #L2ae206.  v0:= new `java.util.LinkedHashMap`;
  #L2ae20a.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L2ae210.  call temp:= `unmodifiableMap`(v0) @signature `Ljava/util/Collections;.unmodifiableMap:(Ljava/util/Map;)Ljava/util/Map;` @kind static;
  #L2ae216.  v1:= temp @kind object;
  #L2ae218.  return v1 @kind object;
}
procedure `int` `w`(`java.util.Comparator` v3 @kind object, `java.lang.String`[] v4 @kind object, `java.lang.String` v5 @kind object) @signature `Lee/e;.w:(Ljava/util/Comparator;[Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2ada84.  v0:= length @variable v4;
  #L2ada86.  v1:= 0I;
  #L2ada88.  if v1 >= v0 then goto L2adaa4;
  #L2ada8c.  v2:= v4[v1] @kind object;
  #L2ada90.  call temp:= `compare`(v3, v2, v5) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2ada96.  v2:= temp;
  #L2ada98.  if v2 != 0 then goto L2ada9e;
  #L2ada9c.  return v1;
  #L2ada9e.  v1:= v1 + 1;
  #L2adaa2.  goto L2ada88;
  #L2adaa4.  v3:= -1I;
  #L2adaa6.  return v3;
}
procedure `int` `x`(`java.lang.String` v4 @kind object) @signature `Lee/e;.x:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2adab8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2adabe.  v0:= temp;
  #L2adac0.  v1:= 0I;
  #L2adac2.  if v1 >= v0 then goto L2adae8;
  #L2adac6.  call temp:= `charAt`(v4, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2adacc.  v2:= temp;
  #L2adace.  v3:= 31I;
  #L2adad2.  if v2 <= v3 then goto L2adae6;
  #L2adad6.  v3:= 127I;
  #L2adada.  if v2 < v3 then goto L2adae0;
  #L2adade.  goto L2adae6;
  #L2adae0.  v1:= v1 + 1;
  #L2adae4.  goto L2adac2;
  #L2adae6.  return v1;
  #L2adae8.  v4:= -1I;
  #L2adaea.  return v4;
}
procedure `java.lang.String` `y`(`byte`[] v8 @kind object) @signature `Lee/e;.y:([B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2addc4.  v0:= 0I;
  #L2addc6.  v1:= -1I;
  #L2addc8.  v2:= 0I;
  #L2addca.  v3:= 0I;
  #L2addcc.  v4:= length @variable v8;
  #L2addce.  v5:= 16I;
  #L2addd2.  if v2 >= v4 then goto L2ade0e;
  #L2addd6.  v4:= v2;
  #L2addd8.  if v4 >= v5 then goto L2addf6;
  #L2adddc.  v6:= v8[v4] @kind byte;
  #L2adde0.  if v6 != 0 then goto L2addf6;
  #L2adde4.  v6:= v4 + 1;
  #L2adde8.  v6:= v8[v6] @kind byte;
  #L2addec.  if v6 != 0 then goto L2addf6;
  #L2addf0.  v4:= v4 + 2;
  #L2addf4.  goto L2addd8;
  #L2addf6.  v5:= v4 - v2 @kind int;
  #L2addfa.  if v5 <= v3 then goto L2ade08;
  #L2addfe.  v6:= 4I;
  #L2ade00.  if v5 < v6 then goto L2ade08;
  #L2ade04.  v1:= v2;
  #L2ade06.  v3:= v5;
  #L2ade08.  v2:= v4 + 2;
  #L2ade0c.  goto L2addcc;
  #L2ade0e.  v2:= new `okio.c`;
  #L2ade12.  call `<init>`(v2) @signature `Lokio/c;.<init>:()V` @kind direct;
  #L2ade18.  v4:= length @variable v8;
  #L2ade1a.  if v0 >= v4 then goto L2ade6c;
  #L2ade1e.  v4:= 58I;
  #L2ade22.  if v0 != v1 then goto L2ade3a;
  #L2ade26.  call temp:= `U0`(v2, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L2ade2c.  v0:= v0 + v3 @kind int;
  #L2ade2e.  if v0 != v5 then goto L2ade18;
  #L2ade32.  call temp:= `U0`(v2, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L2ade38.  goto L2ade18;
  #L2ade3a.  if v0 <= 0 then goto L2ade44;
  #L2ade3e.  call temp:= `U0`(v2, v4) @signature `Lokio/c;.U0:(I)Lokio/c;` @kind virtual;
  #L2ade44.  v4:= v8[v0] @kind byte;
  #L2ade48.  v4:= v4 ^& 255;
  #L2ade4c.  v4:= v4 ^< 8;
  #L2ade50.  v6:= v0 + 1;
  #L2ade54.  v6:= v8[v6] @kind byte;
  #L2ade58.  v6:= v6 ^& 255;
  #L2ade5c.  v4:= v4 ^| v6 @kind int;
  #L2ade5e.  v6:= (`long`) v4 @kind i2l;
  #L2ade60.  call temp:= `W0`(v2, v6) @signature `Lokio/c;.W0:(J)Lokio/c;` @kind virtual;
  #L2ade66.  v0:= v0 + 2;
  #L2ade6a.  goto L2ade18;
  #L2ade6c.  call temp:= `i0`(v2) @signature `Lokio/c;.i0:()Ljava/lang/String;` @kind virtual;
  #L2ade72.  v8:= temp @kind object;
  #L2ade74.  return v8 @kind object;
}
procedure `java.lang.String`[] `z`(`java.util.Comparator` v8 @kind object, `java.lang.String`[] v9 @kind object, `java.lang.String`[] v10 @kind object) @signature `Lee/e;.z:(Ljava/util/Comparator;[Ljava/lang/String;[Ljava/lang/String;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2adee4.  v0:= new `java.util.ArrayList`;
  #L2adee8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2adeee.  v1:= length @variable v9;
  #L2adef0.  v2:= 0I;
  #L2adef2.  v3:= 0I;
  #L2adef4.  if v3 >= v1 then goto L2adf28;
  #L2adef8.  v4:= v9[v3] @kind object;
  #L2adefc.  v5:= length @variable v10;
  #L2adefe.  v6:= 0I;
  #L2adf00.  if v6 >= v5 then goto L2adf22;
  #L2adf04.  v7:= v10[v6] @kind object;
  #L2adf08.  call temp:= `compare`(v8, v4, v7) @signature `Ljava/util/Comparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind interface;
  #L2adf0e.  v7:= temp;
  #L2adf10.  if v7 != 0 then goto L2adf1c;
  #L2adf14.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2adf1a.  goto L2adf22;
  #L2adf1c.  v6:= v6 + 1;
  #L2adf20.  goto L2adf00;
  #L2adf22.  v3:= v3 + 1;
  #L2adf26.  goto L2adef4;
  #L2adf28.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2adf2e.  v8:= temp;
  #L2adf30.  v8:= new `java.lang.String`[v8];
  #L2adf34.  call temp:= `toArray`(v0, v8) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L2adf3a.  v8:= temp @kind object;
  #L2adf3c.  v8:= (`java.lang.String`[]) v8 @kind object;
  #L2adf40.  return v8 @kind object;
}
