record `o5.e` @kind class @AccessFlag FINAL extends `o5.k` @kind class {
  `o5.k$b` `o5.e.a` @AccessFlag PRIVATE_FINAL;
  `o5.a` `o5.e.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o5.e` v0 @kind this, `o5.k$b` v1 @kind object, `o5.a` v2 @kind object) @signature `Lo5/e;.<init>:(Lo5/k$b;Lo5/a;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5450d0.  call `<init>`(v0) @signature `Lo5/k;.<init>:()V` @kind direct;
  #L5450d6.  v0.`o5.e.a` @type ^`o5.k$b` := v1 @kind object;
  #L5450da.  v0.`o5.e.b` @type ^`o5.a` := v2 @kind object;
  #L5450de.  return @kind void;
}
procedure `void` `<init>`(`o5.e` v0 @kind this, `o5.k$b` v1 @kind object, `o5.a` v2 @kind object, `o5.e$a` v3 @kind object) @signature `Lo5/e;.<init>:(Lo5/k$b;Lo5/a;Lo5/e$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L5450f0.  call `<init>`(v0, v1, v2) @signature `Lo5/e;.<init>:(Lo5/k$b;Lo5/a;)V` @kind direct;
  #L5450f6.  return @kind void;
}
procedure `o5.a` `b`(`o5.e` v1 @kind this) @signature `Lo5/e;.b:()Lo5/a;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5450a0.  v0:= v1.`o5.e.b` @type ^`o5.a` @kind object;
  #L5450a4.  return v0 @kind object;
}
procedure `o5.k$b` `c`(`o5.e` v1 @kind this) @signature `Lo5/e;.c:()Lo5/k$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5450b8.  v0:= v1.`o5.e.a` @type ^`o5.k$b` @kind object;
  #L5450bc.  return v0 @kind object;
}
procedure `boolean` `equals`(`o5.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lo5/e;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L544f7c.  v0:= 1I;
  #L544f7e.  if v5 != v4 then goto L544f84;
  #L544f82.  return v0;
  #L544f84.  v1:= instanceof @variable v5 @type ^`o5.k` @kind boolean;
  #L544f88.  v2:= 0I;
  #L544f8a.  if v1 == 0 then goto L544fec;
  #L544f8e.  v5:= (`o5.k`) v5 @kind object;
  #L544f92.  v1:= v4.`o5.e.a` @type ^`o5.k$b` @kind object;
  #L544f96.  if v1 != 0 then goto L544fa8;
  #L544f9a.  call temp:= `c`(v5) @signature `Lo5/k;.c:()Lo5/k$b;` @kind virtual;
  #L544fa0.  v1:= temp @kind object;
  #L544fa2.  if v1 != 0 then goto L544fe8;
  #L544fa6.  goto L544fbc;
  #L544fa8.  call temp:= `c`(v5) @signature `Lo5/k;.c:()Lo5/k$b;` @kind virtual;
  #L544fae.  v3:= temp @kind object;
  #L544fb0.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L544fb6.  v1:= temp;
  #L544fb8.  if v1 == 0 then goto L544fe8;
  #L544fbc.  v1:= v4.`o5.e.b` @type ^`o5.a` @kind object;
  #L544fc0.  if v1 != 0 then goto L544fd2;
  #L544fc4.  call temp:= `b`(v5) @signature `Lo5/k;.b:()Lo5/a;` @kind virtual;
  #L544fca.  v5:= temp @kind object;
  #L544fcc.  if v5 != 0 then goto L544fe8;
  #L544fd0.  goto L544fea;
  #L544fd2.  call temp:= `b`(v5) @signature `Lo5/k;.b:()Lo5/a;` @kind virtual;
  #L544fd8.  v5:= temp @kind object;
  #L544fda.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L544fe0.  v5:= temp;
  #L544fe2.  if v5 == 0 then goto L544fe8;
  #L544fe6.  goto L544fea;
  #L544fe8.  v0:= 0I;
  #L544fea.  return v0;
  #L544fec.  return v2;
}
procedure `int` `hashCode`(`o5.e` v3 @kind this) @signature `Lo5/e;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L545000.  v0:= v3.`o5.e.a` @type ^`o5.k$b` @kind object;
  #L545004.  v1:= 0I;
  #L545006.  if v0 != 0 then goto L54500e;
  #L54500a.  v0:= 0I;
  #L54500c.  goto L545016;
  #L54500e.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L545014.  v0:= temp;
  #L545016.  v2:= 1000003I;
  #L54501c.  v0:= v0 ^~ v2 @kind int;
  #L54501e.  v0:= v0 * v2 @kind int;
  #L545022.  v2:= v3.`o5.e.b` @type ^`o5.a` @kind object;
  #L545026.  if v2 != 0 then goto L54502c;
  #L54502a.  goto L545034;
  #L54502c.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L545032.  v1:= temp;
  #L545034.  v0:= v0 ^~ v1 @kind int;
  #L545036.  return v0;
}
procedure `java.lang.String` `toString`(`o5.e` v2 @kind this) @signature `Lo5/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L545048.  v0:= new `java.lang.StringBuilder`;
  #L54504c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L545052.  v1:= "ClientInfo{clientType=" @kind object;
  #L545056.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54505c.  v1:= v2.`o5.e.a` @type ^`o5.k$b` @kind object;
  #L545060.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545066.  v1:= ", androidClientInfo=" @kind object;
  #L54506a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545070.  v1:= v2.`o5.e.b` @type ^`o5.a` @kind object;
  #L545074.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54507a.  v1:= "}" @kind object;
  #L54507e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545084.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54508a.  v0:= temp @kind object;
  #L54508c.  return v0 @kind object;
}
