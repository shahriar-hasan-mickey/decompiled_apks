record `o5.i` @kind class @AccessFlag FINAL extends `o5.o` @kind class {
  `o5.o$c` `o5.i.a` @AccessFlag PRIVATE_FINAL;
  `o5.o$b` `o5.i.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o5.i` v0 @kind this, `o5.o$c` v1 @kind object, `o5.o$b` v2 @kind object) @signature `Lo5/i;.<init>:(Lo5/o$c;Lo5/o$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L545e64.  call `<init>`(v0) @signature `Lo5/o;.<init>:()V` @kind direct;
  #L545e6a.  v0.`o5.i.a` @type ^`o5.o$c` := v1 @kind object;
  #L545e6e.  v0.`o5.i.b` @type ^`o5.o$b` := v2 @kind object;
  #L545e72.  return @kind void;
}
procedure `void` `<init>`(`o5.i` v0 @kind this, `o5.o$c` v1 @kind object, `o5.o$b` v2 @kind object, `o5.i$a` v3 @kind object) @signature `Lo5/i;.<init>:(Lo5/o$c;Lo5/o$b;Lo5/i$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L545e84.  call `<init>`(v0, v1, v2) @signature `Lo5/i;.<init>:(Lo5/o$c;Lo5/o$b;)V` @kind direct;
  #L545e8a.  return @kind void;
}
procedure `o5.o$b` `b`(`o5.i` v1 @kind this) @signature `Lo5/i;.b:()Lo5/o$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L545e34.  v0:= v1.`o5.i.b` @type ^`o5.o$b` @kind object;
  #L545e38.  return v0 @kind object;
}
procedure `o5.o$c` `c`(`o5.i` v1 @kind this) @signature `Lo5/i;.c:()Lo5/o$c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L545e4c.  v0:= v1.`o5.i.a` @type ^`o5.o$c` @kind object;
  #L545e50.  return v0 @kind object;
}
procedure `boolean` `equals`(`o5.i` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lo5/i;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L545d10.  v0:= 1I;
  #L545d12.  if v5 != v4 then goto L545d18;
  #L545d16.  return v0;
  #L545d18.  v1:= instanceof @variable v5 @type ^`o5.o` @kind boolean;
  #L545d1c.  v2:= 0I;
  #L545d1e.  if v1 == 0 then goto L545d80;
  #L545d22.  v5:= (`o5.o`) v5 @kind object;
  #L545d26.  v1:= v4.`o5.i.a` @type ^`o5.o$c` @kind object;
  #L545d2a.  if v1 != 0 then goto L545d3c;
  #L545d2e.  call temp:= `c`(v5) @signature `Lo5/o;.c:()Lo5/o$c;` @kind virtual;
  #L545d34.  v1:= temp @kind object;
  #L545d36.  if v1 != 0 then goto L545d7c;
  #L545d3a.  goto L545d50;
  #L545d3c.  call temp:= `c`(v5) @signature `Lo5/o;.c:()Lo5/o$c;` @kind virtual;
  #L545d42.  v3:= temp @kind object;
  #L545d44.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L545d4a.  v1:= temp;
  #L545d4c.  if v1 == 0 then goto L545d7c;
  #L545d50.  v1:= v4.`o5.i.b` @type ^`o5.o$b` @kind object;
  #L545d54.  if v1 != 0 then goto L545d66;
  #L545d58.  call temp:= `b`(v5) @signature `Lo5/o;.b:()Lo5/o$b;` @kind virtual;
  #L545d5e.  v5:= temp @kind object;
  #L545d60.  if v5 != 0 then goto L545d7c;
  #L545d64.  goto L545d7e;
  #L545d66.  call temp:= `b`(v5) @signature `Lo5/o;.b:()Lo5/o$b;` @kind virtual;
  #L545d6c.  v5:= temp @kind object;
  #L545d6e.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L545d74.  v5:= temp;
  #L545d76.  if v5 == 0 then goto L545d7c;
  #L545d7a.  goto L545d7e;
  #L545d7c.  v0:= 0I;
  #L545d7e.  return v0;
  #L545d80.  return v2;
}
procedure `int` `hashCode`(`o5.i` v3 @kind this) @signature `Lo5/i;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L545d94.  v0:= v3.`o5.i.a` @type ^`o5.o$c` @kind object;
  #L545d98.  v1:= 0I;
  #L545d9a.  if v0 != 0 then goto L545da2;
  #L545d9e.  v0:= 0I;
  #L545da0.  goto L545daa;
  #L545da2.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L545da8.  v0:= temp;
  #L545daa.  v2:= 1000003I;
  #L545db0.  v0:= v0 ^~ v2 @kind int;
  #L545db2.  v0:= v0 * v2 @kind int;
  #L545db6.  v2:= v3.`o5.i.b` @type ^`o5.o$b` @kind object;
  #L545dba.  if v2 != 0 then goto L545dc0;
  #L545dbe.  goto L545dc8;
  #L545dc0.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L545dc6.  v1:= temp;
  #L545dc8.  v0:= v0 ^~ v1 @kind int;
  #L545dca.  return v0;
}
procedure `java.lang.String` `toString`(`o5.i` v2 @kind this) @signature `Lo5/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L545ddc.  v0:= new `java.lang.StringBuilder`;
  #L545de0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L545de6.  v1:= "NetworkConnectionInfo{networkType=" @kind object;
  #L545dea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545df0.  v1:= v2.`o5.i.a` @type ^`o5.o$c` @kind object;
  #L545df4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545dfa.  v1:= ", mobileSubtype=" @kind object;
  #L545dfe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545e04.  v1:= v2.`o5.i.b` @type ^`o5.o$b` @kind object;
  #L545e08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545e0e.  v1:= "}" @kind object;
  #L545e12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L545e18.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L545e1e.  v0:= temp @kind object;
  #L545e20.  return v0 @kind object;
}
