record `m1.e` @kind class @AccessFlag PUBLIC_FINAL extends `l1.f` @kind interface, `m1.w` @kind interface {
}
global `m1.e` `@@m1.e.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm1/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L52b278.  v0:= new `m1.e`;
  #L52b27c.  call `<init>`(v0) @signature `Lm1/e;.<init>:()V` @kind direct;
  #L52b282.  `@@m1.e.a` @type ^`m1.e` := v0 @kind object;
  #L52b286.  return @kind void;
}
procedure `void` `<init>`(`m1.e` v0 @kind this) @signature `Lm1/e;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L52b298.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52b29e.  return @kind void;
}
procedure `java.lang.Object` `c`(`m1.e` v5 @kind this, `k1.b` v6 @kind object, `java.lang.Class` v7 @kind object, `com.alibaba.fastjson.a` v8 @kind object) @signature `Lm1/e;.c:(Lk1/b;Ljava/lang/Class;Lcom/alibaba/fastjson/a;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L52b114.  if v8 != 0 then goto L52b11c;
  #L52b118.  v6:= 0I;
  #L52b11a.  return v6 @kind object;
  #L52b11c.  call temp:= `size`(v8) @signature `Lcom/alibaba/fastjson/a;.size:()I` @kind virtual;
  #L52b122.  v0:= temp;
  #L52b124.  call temp:= `newInstance`(v7, v0) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;I)Ljava/lang/Object;` @kind static;
  #L52b12a.  v1:= temp @kind object;
  #L52b12c.  v2:= 0I;
  #L52b12e.  if v2 >= v0 then goto L52b186;
  #L52b132.  call temp:= `get`(v8, v2) @signature `Lcom/alibaba/fastjson/a;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L52b138.  v3:= temp @kind object;
  #L52b13a.  if v3 != v8 then goto L52b146;
  #L52b13e.  call `set`(v1, v2, v1) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L52b144.  goto L52b180;
  #L52b146.  call temp:= `isArray`(v7) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L52b14c.  v4:= temp;
  #L52b14e.  if v4 == 0 then goto L52b16e;
  #L52b152.  call temp:= `isInstance`(v7, v3) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L52b158.  v4:= temp;
  #L52b15a.  if v4 == 0 then goto L52b160;
  #L52b15e.  goto L52b17a;
  #L52b160.  v3:= (`com.alibaba.fastjson.a`) v3 @kind object;
  #L52b164.  call temp:= `c`(v5, v6, v7, v3) @signature `Lm1/e;.c:(Lk1/b;Ljava/lang/Class;Lcom/alibaba/fastjson/a;)Ljava/lang/Object;` @kind direct;
  #L52b16a.  v3:= temp @kind object;
  #L52b16c.  goto L52b17a;
  #L52b16e.  v4:= v6.`k1.b.h` @type ^`k1.m` @kind object;
  #L52b172.  call temp:= `f`(v3, v7, v4) @signature `Ln1/d;.f:(Ljava/lang/Object;Ljava/lang/Class;Lk1/m;)Ljava/lang/Object;` @kind static;
  #L52b178.  v3:= temp @kind object;
  #L52b17a.  call `set`(v1, v2, v3) @signature `Ljava/lang/reflect/Array;.set:(Ljava/lang/Object;ILjava/lang/Object;)V` @kind static;
  #L52b180.  v2:= v2 + 1;
  #L52b184.  goto L52b12e;
  #L52b186.  call `setRelatedArray`(v8, v1) @signature `Lcom/alibaba/fastjson/a;.setRelatedArray:(Ljava/lang/Object;)V` @kind virtual;
  #L52b18c.  call `setComponentType`(v8, v7) @signature `Lcom/alibaba/fastjson/a;.setComponentType:(Ljava/lang/reflect/Type;)V` @kind virtual;
  #L52b192.  return v1 @kind object;
}
procedure `java.lang.Object` `a`(`m1.e` v5 @kind this, `k1.b` v6 @kind object, `java.lang.reflect.Type` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lm1/e;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L52b1a4.  v0:= v6.`k1.b.k` @type ^`k1.e` @kind object;
  #L52b1a8.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52b1ae.  v1:= temp;
  #L52b1b0.  v2:= 16I;
  #L52b1b4.  v3:= 8I;
  #L52b1b8.  if v1 != v3 then goto L52b1c6;
  #L52b1bc.  call `v`(v0, v2) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52b1c2.  v6:= 0I;
  #L52b1c4.  return v6 @kind object;
  #L52b1c6.  v3:= constclass @type ^`char`[] @kind object;
  #L52b1ca.  v4:= 4I;
  #L52b1cc.  if v7 != v3 then goto L52b22c;
  #L52b1d0.  if v1 != v4 then goto L52b1ec;
  #L52b1d4.  call temp:= `S`(v0) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L52b1da.  v6:= temp @kind object;
  #L52b1dc.  call `v`(v0, v2) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52b1e2.  call temp:= `toCharArray`(v6) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52b1e8.  v6:= temp @kind object;
  #L52b1ea.  return v6 @kind object;
  #L52b1ec.  v7:= 2I;
  #L52b1ee.  if v1 != v7 then goto L52b212;
  #L52b1f2.  call temp:= `G`(v0) @signature `Lk1/e;.G:()Ljava/lang/Number;` @kind virtual;
  #L52b1f8.  v6:= temp @kind object;
  #L52b1fa.  call `v`(v0, v2) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52b200.  call temp:= `toString`(v6) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L52b206.  v6:= temp @kind object;
  #L52b208.  call temp:= `toCharArray`(v6) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52b20e.  v6:= temp @kind object;
  #L52b210.  return v6 @kind object;
  #L52b212.  call temp:= `E0`(v6) @signature `Lk1/b;.E0:()Ljava/lang/Object;` @kind virtual;
  #L52b218.  v6:= temp @kind object;
  #L52b21a.  call temp:= `toJSONString`(v6) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52b220.  v6:= temp @kind object;
  #L52b222.  call temp:= `toCharArray`(v6) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52b228.  v6:= temp @kind object;
  #L52b22a.  return v6 @kind object;
  #L52b22c.  if v1 != v4 then goto L52b240;
  #L52b230.  call temp:= `Q`(v0) @signature `Lk1/e;.Q:()[B` @kind virtual;
  #L52b236.  v6:= temp @kind object;
  #L52b238.  call `v`(v0, v2) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52b23e.  return v6 @kind object;
  #L52b240.  v7:= (`java.lang.Class`) v7 @kind object;
  #L52b244.  call temp:= `getComponentType`(v7) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L52b24a.  v7:= temp @kind object;
  #L52b24c.  v0:= new `com.alibaba.fastjson.a`;
  #L52b250.  call `<init>`(v0) @signature `Lcom/alibaba/fastjson/a;.<init>:()V` @kind direct;
  #L52b256.  call `Q`(v6, v7, v0, v8) @signature `Lk1/b;.Q:(Ljava/lang/reflect/Type;Ljava/util/Collection;Ljava/lang/Object;)V` @kind virtual;
  #L52b25c.  call temp:= `c`(v5, v6, v7, v0) @signature `Lm1/e;.c:(Lk1/b;Ljava/lang/Class;Lcom/alibaba/fastjson/a;)Ljava/lang/Object;` @kind direct;
  #L52b262.  v6:= temp @kind object;
  #L52b264.  return v6 @kind object;
}
procedure `void` `b`(`m1.e` v9 @kind this, `m1.p` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.reflect.Type` v13 @kind object) @signature `Lm1/e;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L52b2b0.  v13:= v10.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52b2b4.  v0:= v11 @kind object;
  #L52b2b6.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L52b2ba.  v1:= "[]" @kind object;
  #L52b2be.  if v11 != 0 then goto L52b2e4;
  #L52b2c2.  v10:= v13.`m1.c0.i` @type ^`int`;
  #L52b2c6.  v11:= `@@m1.b.WriteNullListAsEmpty` @type ^`m1.b` @kind object;
  #L52b2ca.  v11:= v11.`m1.b.mask` @type ^`int`;
  #L52b2ce.  v10:= v10 ^& v11 @kind int;
  #L52b2d0.  if v10 == 0 then goto L52b2dc;
  #L52b2d4.  call `write`(v13, v1) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52b2da.  goto L52b2e2;
  #L52b2dc.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b2e2.  return @kind void;
  #L52b2e4.  v2:= length @variable v0;
  #L52b2e6.  v3:= v2 + -1;
  #L52b2ea.  v4:= -1I;
  #L52b2ec.  if v3 != v4 then goto L52b2f8;
  #L52b2f0.  call temp:= `i`(v13, v1) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b2f6.  return @kind void;
  #L52b2f8.  v1:= v10.`m1.p.m` @type ^`m1.z` @kind object;
  #L52b2fc.  v4:= 0I;
  #L52b2fe.  call `j`(v10, v1, v11, v12, v4) @signature `Lm1/p;.j:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind virtual;
  #L52b304.  v11:= 91I;
  #L52b308.  call `write`(v13, v11) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b30e.  v11:= v13.`m1.c0.i` @type ^`int`;
  #L52b312.  v12:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52b316.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52b31a.  v11:= v11 ^& v12 @kind int;
  #L52b31c.  v12:= 93I;
  #L52b320.  v5:= 44I;
  #L52b324.  if v11 == 0 then goto L52b370;
  #L52b328.  call `p`(v10) @signature `Lm1/p;.p:()V` @kind virtual;
  #L52b32e.  call `r`(v10) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52b334.  if v4 >= v2 then goto L52b358;
  #L52b338.  if v4 == 0 then goto L52b348;
  #L52b33c.  call `write`(v13, v5) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b342.  call `r`(v10) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52b348.  v11:= v0[v4] @kind object;
  #L52b34c.  call `l`(v10, v11) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L52b352.  v4:= v4 + 1;
  #L52b356.  goto L52b334;
  #L52b358.  call `q`(v10) @signature `Lm1/p;.q:()V` @kind virtual;
  #L52b35e.  call `r`(v10) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52b364.  call `write`(v13, v12) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b36a.  v10.`m1.p.m` @type ^`m1.z` := v1 @kind object;
  #L52b36e.  return @kind void;
  #L52b370.  v11:= 0I;
  #L52b372.  v2:= v11 @kind object;
  #L52b374.  v6:= v2 @kind object;
  #L52b376.  if v4 >= v3 then goto L52b3de;
  #L52b37a.  v7:= v0[v4] @kind object;
  #L52b37e.  if v7 != 0 then goto L52b38e;
  #L52b382.  v7:= "null," @kind object;
  #L52b386.  call temp:= `i`(v13, v7) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b38c.  goto L52b3d8;
  #L52b38e.  v8:= v10.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52b392.  if v8 == 0 then goto L52b3aa;
  #L52b396.  call temp:= `containsKey`(v8, v7) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52b39c.  v8:= temp;
  #L52b39e.  if v8 == 0 then goto L52b3aa;
  #L52b3a2.  call `d`(v10, v7) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52b3a8.  goto L52b3d2;
  #L52b3aa.  call temp:= `getClass`(v7) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52b3b0.  v8:= temp @kind object;
  #L52b3b2.  if v8 != v2 then goto L52b3be;
  #L52b3b6.  call `b`(v6, v10, v7, v11, v11) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52b3bc.  goto L52b3d2;
  #L52b3be.  v2:= v10.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52b3c2.  call temp:= `a`(v2, v8) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52b3c8.  v6:= temp @kind object;
  #L52b3ca.  call `b`(v6, v10, v7, v11, v11) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52b3d0.  v2:= v8 @kind object;
  #L52b3d2.  call `write`(v13, v5) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b3d8.  v4:= v4 + 1;
  #L52b3dc.  goto L52b376;
  #L52b3de.  v11:= v0[v3] @kind object;
  #L52b3e2.  if v11 != 0 then goto L52b3f2;
  #L52b3e6.  v11:= "null]" @kind object;
  #L52b3ea.  call temp:= `i`(v13, v11) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b3f0.  goto L52b422;
  #L52b3f2.  v0:= v10.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52b3f6.  if v0 == 0 then goto L52b40e;
  #L52b3fa.  call temp:= `containsKey`(v0, v11) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52b400.  v0:= temp;
  #L52b402.  if v0 == 0 then goto L52b40e;
  #L52b406.  call `d`(v10, v11) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52b40c.  goto L52b41c;
  #L52b40e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52b414.  v0:= temp @kind object;
  #L52b416.  call `e`(v10, v11, v0) @signature `Lm1/p;.e:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L52b41c.  call `write`(v13, v12) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b422.  v10.`m1.p.m` @type ^`m1.z` := v1 @kind object;
  #L52b426.  return @kind void;
  #L52b428.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b42a.  v10.`m1.p.m` @type ^`m1.z` := v1 @kind object;
  #L52b42e.  throw v11;
  catch `java.lang.Throwable` @[L52b308..L52b36a] goto L52b428;
  catch `java.lang.Throwable` @[L52b37a..L52b422] goto L52b428;
}
