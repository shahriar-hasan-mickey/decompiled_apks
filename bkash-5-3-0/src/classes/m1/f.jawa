record `m1.f` @kind class @AccessFlag FINAL extends `m1.w` @kind interface {
  `java.lang.Class` `m1.f.a` @AccessFlag PRIVATE_FINAL;
  `m1.w` `m1.f.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`m1.f` v0 @kind this, `java.lang.Class` v1 @kind object, `m1.w` v2 @kind object) @signature `Lm1/f;.<init>:(Ljava/lang/Class;Lm1/w;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L52b454.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52b45a.  v0.`m1.f.a` @type ^`java.lang.Class` := v1 @kind object;
  #L52b45e.  v0.`m1.f.b` @type ^`m1.w` := v2 @kind object;
  #L52b462.  return @kind void;
}
procedure `void` `b`(`m1.f` v9 @kind this, `m1.p` v10 @kind object, `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object, `java.lang.reflect.Type` v13 @kind object) @signature `Lm1/f;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L52b474.  v13:= v10.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52b478.  v0:= "[]" @kind object;
  #L52b47c.  if v11 != 0 then goto L52b4a2;
  #L52b480.  v10:= v13.`m1.c0.i` @type ^`int`;
  #L52b484.  v11:= `@@m1.b.WriteNullListAsEmpty` @type ^`m1.b` @kind object;
  #L52b488.  v11:= v11.`m1.b.mask` @type ^`int`;
  #L52b48c.  v10:= v10 ^& v11 @kind int;
  #L52b48e.  if v10 == 0 then goto L52b49a;
  #L52b492.  call `write`(v13, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52b498.  goto L52b4a0;
  #L52b49a.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b4a0.  return @kind void;
  #L52b4a2.  v1:= instanceof @variable v11 @type ^`boolean`[] @kind boolean;
  #L52b4a6.  v2:= 44I;
  #L52b4aa.  v3:= 93I;
  #L52b4ae.  v4:= 91I;
  #L52b4b2.  v5:= 0I;
  #L52b4b4.  if v1 == 0 then goto L52b4ea;
  #L52b4b8.  v11:= (`boolean`[]) v11 @kind object;
  #L52b4bc.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b4c2.  v10:= length @variable v11;
  #L52b4c4.  if v5 >= v10 then goto L52b4e2;
  #L52b4c8.  if v5 == 0 then goto L52b4d2;
  #L52b4cc.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b4d2.  v10:= v11[v5] @kind boolean;
  #L52b4d6.  call `Q`(v13, v10) @signature `Lm1/c0;.Q:(Z)V` @kind virtual;
  #L52b4dc.  v5:= v5 + 1;
  #L52b4e0.  goto L52b4c2;
  #L52b4e2.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b4e8.  return @kind void;
  #L52b4ea.  v1:= instanceof @variable v11 @type ^`byte`[] @kind boolean;
  #L52b4ee.  if v1 == 0 then goto L52b4fe;
  #L52b4f2.  v11:= (`byte`[]) v11 @kind object;
  #L52b4f6.  call `V`(v13, v11) @signature `Lm1/c0;.V:([B)V` @kind virtual;
  #L52b4fc.  return @kind void;
  #L52b4fe.  v1:= instanceof @variable v11 @type ^`char`[] @kind boolean;
  #L52b502.  if v1 == 0 then goto L52b51c;
  #L52b506.  v11:= (`char`[]) v11 @kind object;
  #L52b50a.  v10:= new `java.lang.String`;
  #L52b50e.  call `<init>`(v10, v11) @signature `Ljava/lang/String;.<init>:([C)V` @kind direct;
  #L52b514.  call `d0`(v13, v10) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52b51a.  return @kind void;
  #L52b51c.  v1:= instanceof @variable v11 @type ^`double`[] @kind boolean;
  #L52b520.  v6:= -1I;
  #L52b522.  if v1 == 0 then goto L52b5a6;
  #L52b526.  v11:= (`double`[]) v11 @kind object;
  #L52b52a.  v10:= length @variable v11;
  #L52b52c.  v10:= v10 + -1;
  #L52b530.  if v10 != v6 then goto L52b53c;
  #L52b534.  call temp:= `i`(v13, v0) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b53a.  return @kind void;
  #L52b53c.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b542.  if v5 >= v10 then goto L52b578;
  #L52b546.  v0:= v11[v5] @kind wide;
  #L52b54a.  call temp:= `isNaN`(v0) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L52b550.  v12:= temp;
  #L52b552.  if v12 == 0 then goto L52b55e;
  #L52b556.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b55c.  goto L52b56c;
  #L52b55e.  call temp:= `toString`(v0) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L52b564.  v12:= temp @kind object;
  #L52b566.  call temp:= `i`(v13, v12) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b56c.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b572.  v5:= v5 + 1;
  #L52b576.  goto L52b542;
  #L52b578.  v10:= v11[v10] @kind wide;
  #L52b57c.  call temp:= `isNaN`(v10) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L52b582.  v12:= temp;
  #L52b584.  if v12 == 0 then goto L52b590;
  #L52b588.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b58e.  goto L52b59e;
  #L52b590.  call temp:= `toString`(v10) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L52b596.  v10:= temp @kind object;
  #L52b598.  call temp:= `i`(v13, v10) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b59e.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b5a4.  return @kind void;
  #L52b5a6.  v1:= instanceof @variable v11 @type ^`float`[] @kind boolean;
  #L52b5aa.  if v1 == 0 then goto L52b62e;
  #L52b5ae.  v11:= (`float`[]) v11 @kind object;
  #L52b5b2.  v10:= length @variable v11;
  #L52b5b4.  v10:= v10 + -1;
  #L52b5b8.  if v10 != v6 then goto L52b5c4;
  #L52b5bc.  call temp:= `i`(v13, v0) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b5c2.  return @kind void;
  #L52b5c4.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b5ca.  if v5 >= v10 then goto L52b600;
  #L52b5ce.  v12:= v11[v5];
  #L52b5d2.  call temp:= `isNaN`(v12) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L52b5d8.  v0:= temp;
  #L52b5da.  if v0 == 0 then goto L52b5e6;
  #L52b5de.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b5e4.  goto L52b5f4;
  #L52b5e6.  call temp:= `toString`(v12) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L52b5ec.  v12:= temp @kind object;
  #L52b5ee.  call temp:= `i`(v13, v12) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b5f4.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b5fa.  v5:= v5 + 1;
  #L52b5fe.  goto L52b5ca;
  #L52b600.  v10:= v11[v10];
  #L52b604.  call temp:= `isNaN`(v10) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L52b60a.  v11:= temp;
  #L52b60c.  if v11 == 0 then goto L52b618;
  #L52b610.  call `r`(v13) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52b616.  goto L52b626;
  #L52b618.  call temp:= `toString`(v10) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L52b61e.  v10:= temp @kind object;
  #L52b620.  call temp:= `i`(v13, v10) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b626.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b62c.  return @kind void;
  #L52b62e.  v0:= instanceof @variable v11 @type ^`int`[] @kind boolean;
  #L52b632.  if v0 == 0 then goto L52b668;
  #L52b636.  v11:= (`int`[]) v11 @kind object;
  #L52b63a.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b640.  v10:= length @variable v11;
  #L52b642.  if v5 >= v10 then goto L52b660;
  #L52b646.  if v5 == 0 then goto L52b650;
  #L52b64a.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b650.  v10:= v11[v5];
  #L52b654.  call `a0`(v13, v10) @signature `Lm1/c0;.a0:(I)V` @kind virtual;
  #L52b65a.  v5:= v5 + 1;
  #L52b65e.  goto L52b640;
  #L52b660.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b666.  return @kind void;
  #L52b668.  v0:= instanceof @variable v11 @type ^`long`[] @kind boolean;
  #L52b66c.  if v0 == 0 then goto L52b6a2;
  #L52b670.  v11:= (`long`[]) v11 @kind object;
  #L52b674.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b67a.  v10:= length @variable v11;
  #L52b67c.  if v5 >= v10 then goto L52b69a;
  #L52b680.  if v5 == 0 then goto L52b68a;
  #L52b684.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b68a.  v0:= v11[v5] @kind wide;
  #L52b68e.  call `v`(v13, v0) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52b694.  v5:= v5 + 1;
  #L52b698.  goto L52b67a;
  #L52b69a.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b6a0.  return @kind void;
  #L52b6a2.  v0:= instanceof @variable v11 @type ^`short`[] @kind boolean;
  #L52b6a6.  if v0 == 0 then goto L52b6dc;
  #L52b6aa.  v11:= (`short`[]) v11 @kind object;
  #L52b6ae.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b6b4.  v10:= length @variable v11;
  #L52b6b6.  if v5 >= v10 then goto L52b6d4;
  #L52b6ba.  if v5 == 0 then goto L52b6c4;
  #L52b6be.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b6c4.  v10:= v11[v5] @kind short;
  #L52b6c8.  call `a0`(v13, v10) @signature `Lm1/c0;.a0:(I)V` @kind virtual;
  #L52b6ce.  v5:= v5 + 1;
  #L52b6d2.  goto L52b6b4;
  #L52b6d4.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b6da.  return @kind void;
  #L52b6dc.  v0:= v11 @kind object;
  #L52b6de.  v0:= (`java.lang.Object`[]) v0 @kind object;
  #L52b6e2.  v1:= length @variable v0;
  #L52b6e4.  v6:= v10.`m1.p.m` @type ^`m1.z` @kind object;
  #L52b6e8.  call `j`(v10, v6, v11, v12, v5) @signature `Lm1/p;.j:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind virtual;
  #L52b6ee.  call `write`(v13, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b6f4.  if v5 >= v1 then goto L52b788;
  #L52b6f8.  if v5 == 0 then goto L52b702;
  #L52b6fc.  call `write`(v13, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b702.  v12:= v0[v5] @kind object;
  #L52b706.  if v12 != 0 then goto L52b73a;
  #L52b70a.  v12:= `@@m1.b.WriteNullStringAsEmpty` @type ^`m1.b` @kind object;
  #L52b70e.  call temp:= `Y`(v13, v12) @signature `Lm1/c0;.Y:(Lm1/b;)Z` @kind virtual;
  #L52b714.  v12:= temp;
  #L52b716.  if v12 == 0 then goto L52b72e;
  #L52b71a.  v12:= instanceof @variable v11 @type ^`java.lang.String`[] @kind boolean;
  #L52b71e.  if v12 == 0 then goto L52b72e;
  #L52b722.  v12:= "" @kind object;
  #L52b726.  call `d0`(v13, v12) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52b72c.  goto L52b782;
  #L52b72e.  v12:= "null" @kind object;
  #L52b732.  call temp:= `i`(v13, v12) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52b738.  goto L52b782;
  #L52b73a.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52b740.  v4:= temp @kind object;
  #L52b742.  v7:= v9.`m1.f.a` @type ^`java.lang.Class` @kind object;
  #L52b746.  v8:= 0I;
  #L52b748.  if v4 != v7 then goto L52b760;
  #L52b74c.  v4:= v9.`m1.f.b` @type ^`m1.w` @kind object;
  #L52b750.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52b756.  v7:= temp @kind object;
  #L52b758.  call `b`(v4, v10, v12, v7, v8) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52b75e.  goto L52b782;
  #L52b760.  v4:= v10.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52b764.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52b76a.  v7:= temp @kind object;
  #L52b76c.  call temp:= `a`(v4, v7) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52b772.  v4:= temp @kind object;
  #L52b774.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52b77a.  v7:= temp @kind object;
  #L52b77c.  call `b`(v4, v10, v12, v7, v8) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52b782.  v5:= v5 + 1;
  #L52b786.  goto L52b6f4;
  #L52b788.  call `write`(v13, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52b78e.  v10.`m1.p.m` @type ^`m1.z` := v6 @kind object;
  #L52b792.  return @kind void;
  #L52b794.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52b796.  v10.`m1.p.m` @type ^`m1.z` := v6 @kind object;
  #L52b79a.  throw v11;
  catch `java.lang.Throwable` @[L52b6ee..L52b78e] goto L52b794;
}
