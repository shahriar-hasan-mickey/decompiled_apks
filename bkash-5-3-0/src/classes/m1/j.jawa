record `m1.j` @kind class @AccessFlag PUBLIC extends `l1.f` @kind interface, `m1.w` @kind interface {
}
global `m1.j` `@@m1.j.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm1/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L52bcb4.  v0:= new `m1.j`;
  #L52bcb8.  call `<init>`(v0) @signature `Lm1/j;.<init>:()V` @kind direct;
  #L52bcbe.  `@@m1.j.a` @type ^`m1.j` := v0 @kind object;
  #L52bcc2.  return @kind void;
}
procedure `void` `<init>`(`m1.j` v0 @kind this) @signature `Lm1/j;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L52bcd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52bcda.  return @kind void;
}
procedure `java.lang.Object` `a`(`m1.j` v2 @kind this, `k1.b` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm1/j;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52baf8.  v0:= v3.`k1.b.k` @type ^`k1.e` @kind object;
  #L52bafc.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52bb02.  v0:= temp;
  #L52bb04.  v1:= 8I;
  #L52bb08.  if v0 != v1 then goto L52bb1e;
  #L52bb0c.  v3:= v3.`k1.b.k` @type ^`k1.e` @kind object;
  #L52bb10.  v4:= 16I;
  #L52bb14.  call `v`(v3, v4) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52bb1a.  v3:= 0I;
  #L52bb1c.  return v3 @kind object;
  #L52bb1e.  v0:= constclass @type ^`com.alibaba.fastjson.a` @kind object;
  #L52bb22.  if v4 != v0 then goto L52bb38;
  #L52bb26.  v4:= new `com.alibaba.fastjson.a`;
  #L52bb2a.  call `<init>`(v4) @signature `Lcom/alibaba/fastjson/a;.<init>:()V` @kind direct;
  #L52bb30.  call `k0`(v3, v4) @signature `Lk1/b;.k0:(Ljava/util/Collection;)V` @kind virtual;
  #L52bb36.  return v4 @kind object;
  #L52bb38.  v0:= v4 @kind object;
  #L52bb3a.  v1:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L52bb3e.  if v1 == 0 then goto L52bc6c;
  #L52bb42.  v0:= (`java.lang.Class`) v0 @kind object;
  #L52bb46.  v1:= constclass @type ^`java.util.AbstractCollection` @kind object;
  #L52bb4a.  if v0 == v1 then goto L52bc52;
  #L52bb4e.  v1:= constclass @type ^`java.util.Collection` @kind object;
  #L52bb52.  if v0 != v1 then goto L52bb5a;
  #L52bb56.  goto L52bc52;
  #L52bb5a.  v1:= constclass @type ^`java.util.HashSet` @kind object;
  #L52bb5e.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52bb64.  v1:= temp;
  #L52bb66.  if v1 == 0 then goto L52bb78;
  #L52bb6a.  v0:= new `java.util.HashSet`;
  #L52bb6e.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L52bb74.  goto L52bc5c;
  #L52bb78.  v1:= constclass @type ^`java.util.LinkedHashSet` @kind object;
  #L52bb7c.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52bb82.  v1:= temp;
  #L52bb84.  if v1 == 0 then goto L52bb94;
  #L52bb88.  v0:= new `java.util.LinkedHashSet`;
  #L52bb8c.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L52bb92.  goto L52bc5c;
  #L52bb94.  v1:= constclass @type ^`java.util.TreeSet` @kind object;
  #L52bb98.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52bb9e.  v1:= temp;
  #L52bba0.  if v1 == 0 then goto L52bbb0;
  #L52bba4.  v0:= new `java.util.TreeSet`;
  #L52bba8.  call `<init>`(v0) @signature `Ljava/util/TreeSet;.<init>:()V` @kind direct;
  #L52bbae.  goto L52bc5c;
  #L52bbb0.  v1:= constclass @type ^`java.util.ArrayList` @kind object;
  #L52bbb4.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52bbba.  v1:= temp;
  #L52bbbc.  if v1 == 0 then goto L52bbcc;
  #L52bbc0.  v0:= new `java.util.ArrayList`;
  #L52bbc4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52bbca.  goto L52bc5c;
  #L52bbcc.  v1:= constclass @type ^`java.util.EnumSet` @kind object;
  #L52bbd0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52bbd6.  v1:= temp;
  #L52bbd8.  if v1 == 0 then goto L52bc0c;
  #L52bbdc.  v0:= instanceof @variable v4 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L52bbe0.  if v0 == 0 then goto L52bbfa;
  #L52bbe4.  v0:= v4 @kind object;
  #L52bbe6.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L52bbea.  call temp:= `getActualTypeArguments`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L52bbf0.  v0:= temp @kind object;
  #L52bbf2.  v1:= 0I;
  #L52bbf4.  v0:= v0[v1] @kind object;
  #L52bbf8.  goto L52bbfe;
  #L52bbfa.  v0:= constclass @type ^`java.lang.Object` @kind object;
  #L52bbfe.  v0:= (`java.lang.Class`) v0 @kind object;
  #L52bc02.  call temp:= `noneOf`(v0) @signature `Ljava/util/EnumSet;.noneOf:(Ljava/lang/Class;)Ljava/util/EnumSet;` @kind static;
  #L52bc08.  v0:= temp @kind object;
  #L52bc0a.  goto L52bc5c;
  #L52bc0c.  call temp:= `newInstance`(v0) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L52bc12.  v1:= temp @kind object;
  #L52bc14.  v1:= (`java.util.Collection`) v1 @kind object;
  #L52bc18.  v0:= v1 @kind object;
  #L52bc1a.  goto L52bc5c;
  #L52bc1c.  v3:= new `com.alibaba.fastjson.c`;
  #L52bc20.  v4:= new `java.lang.StringBuilder`;
  #L52bc24.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L52bc2a.  v5:= "create instane error, class " @kind object;
  #L52bc2e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52bc34.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L52bc3a.  v5:= temp @kind object;
  #L52bc3c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52bc42.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L52bc48.  v4:= temp @kind object;
  #L52bc4a.  call `<init>`(v3, v4) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52bc50.  throw v3;
  #L52bc52.  v0:= new `java.util.ArrayList`;
  #L52bc56.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52bc5c.  call temp:= `E`(v4) @signature `Ln1/d;.E:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L52bc62.  v4:= temp @kind object;
  #L52bc64.  call `Q`(v3, v4, v0, v5) @signature `Lk1/b;.Q:(Ljava/lang/reflect/Type;Ljava/util/Collection;Ljava/lang/Object;)V` @kind virtual;
  #L52bc6a.  return v0 @kind object;
  #L52bc6c.  v1:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L52bc70.  if v1 == 0 then goto L52bc84;
  #L52bc74.  v0:= (`java.lang.reflect.ParameterizedType`) v0 @kind object;
  #L52bc78.  call temp:= `getRawType`(v0) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L52bc7e.  v0:= temp @kind object;
  #L52bc80.  goto L52bb3a;
  #L52bc84.  v3:= new `com.alibaba.fastjson.c`;
  #L52bc88.  v4:= "TODO" @kind object;
  #L52bc8c.  call `<init>`(v3, v4) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52bc92.  throw v3;
  catch `java.lang.Exception` @[L52bc0c..L52bc18] goto L52bc1c;
}
procedure `void` `b`(`m1.j` v5 @kind this, `m1.p` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Object` v8 @kind object, `java.lang.reflect.Type` v9 @kind object) @signature `Lm1/j;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L52bcec.  v0:= v6.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52bcf0.  if v7 != 0 then goto L52bd1a;
  #L52bcf4.  v6:= v0.`m1.c0.i` @type ^`int`;
  #L52bcf8.  v7:= `@@m1.b.WriteNullListAsEmpty` @type ^`m1.b` @kind object;
  #L52bcfc.  v7:= v7.`m1.b.mask` @type ^`int`;
  #L52bd00.  v6:= v6 ^& v7 @kind int;
  #L52bd02.  if v6 == 0 then goto L52bd12;
  #L52bd06.  v6:= "[]" @kind object;
  #L52bd0a.  call `write`(v0, v6) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52bd10.  goto L52bd18;
  #L52bd12.  call `r`(v0) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52bd18.  return @kind void;
  #L52bd1a.  v1:= 0I;
  #L52bd1c.  v2:= v0.`m1.c0.i` @type ^`int`;
  #L52bd20.  v3:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52bd24.  v4:= v3.`m1.b.mask` @type ^`int`;
  #L52bd28.  v2:= v2 ^& v4 @kind int;
  #L52bd2a.  if v2 == 0 then goto L52bd36;
  #L52bd2e.  call temp:= `E`(v9) @signature `Ln1/d;.E:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L52bd34.  v1:= temp @kind object;
  #L52bd36.  v9:= v7 @kind object;
  #L52bd38.  v9:= (`java.util.Collection`) v9 @kind object;
  #L52bd3c.  v2:= v6.`m1.p.m` @type ^`m1.z` @kind object;
  #L52bd40.  v4:= 0I;
  #L52bd42.  call `j`(v6, v2, v7, v8, v4) @signature `Lm1/p;.j:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind virtual;
  #L52bd48.  v7:= v0.`m1.c0.i` @type ^`int`;
  #L52bd4c.  v8:= v3.`m1.b.mask` @type ^`int`;
  #L52bd50.  v7:= v7 ^& v8 @kind int;
  #L52bd52.  if v7 == 0 then goto L52bd8c;
  #L52bd56.  v7:= constclass @type ^`java.util.HashSet` @kind object;
  #L52bd5a.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52bd60.  v8:= temp @kind object;
  #L52bd62.  if v7 != v8 then goto L52bd72;
  #L52bd66.  v7:= "Set" @kind object;
  #L52bd6a.  call temp:= `i`(v0, v7) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52bd70.  goto L52bd8c;
  #L52bd72.  v7:= constclass @type ^`java.util.TreeSet` @kind object;
  #L52bd76.  call temp:= `getClass`(v9) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52bd7c.  v8:= temp @kind object;
  #L52bd7e.  if v7 != v8 then goto L52bd8c;
  #L52bd82.  v7:= "TreeSet" @kind object;
  #L52bd86.  call temp:= `i`(v0, v7) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52bd8c.  v7:= 91I;
  #L52bd90.  call `write`(v0, v7) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52bd96.  call temp:= `iterator`(v9) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52bd9c.  v7:= temp @kind object;
  #L52bd9e.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52bda4.  v8:= temp;
  #L52bda6.  if v8 == 0 then goto L52be4e;
  #L52bdaa.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52bdb0.  v8:= temp @kind object;
  #L52bdb2.  v9:= v4 + 1;
  #L52bdb6.  if v4 == 0 then goto L52bdc4;
  #L52bdba.  v3:= 44I;
  #L52bdbe.  call `write`(v0, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52bdc4.  if v8 != 0 then goto L52bdd0;
  #L52bdc8.  call `r`(v0) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52bdce.  goto L52be4a;
  #L52bdd0.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52bdd6.  v3:= temp @kind object;
  #L52bdd8.  v4:= constclass @type ^`java.lang.Integer` @kind object;
  #L52bddc.  if v3 != v4 then goto L52bdf4;
  #L52bde0.  v8:= (`java.lang.Integer`) v8 @kind object;
  #L52bde4.  call temp:= `intValue`(v8) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L52bdea.  v8:= temp;
  #L52bdec.  call `a0`(v0, v8) @signature `Lm1/c0;.a0:(I)V` @kind virtual;
  #L52bdf2.  goto L52be4a;
  #L52bdf4.  v4:= constclass @type ^`java.lang.Long` @kind object;
  #L52bdf8.  if v3 != v4 then goto L52be2c;
  #L52bdfc.  v8:= (`java.lang.Long`) v8 @kind object;
  #L52be00.  call temp:= `longValue`(v8) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L52be06.  v3:= temp @kind wide;
  #L52be08.  call `v`(v0, v3) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52be0e.  v8:= v0.`m1.c0.i` @type ^`int`;
  #L52be12.  v3:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52be16.  v3:= v3.`m1.b.mask` @type ^`int`;
  #L52be1a.  v8:= v8 ^& v3 @kind int;
  #L52be1c.  if v8 == 0 then goto L52be4a;
  #L52be20.  v8:= 76I;
  #L52be24.  call `write`(v0, v8) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52be2a.  goto L52be4a;
  #L52be2c.  v4:= v6.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52be30.  call temp:= `a`(v4, v3) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52be36.  v3:= temp @kind object;
  #L52be38.  v4:= v9 + -1;
  #L52be3c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52be42.  v4:= temp @kind object;
  #L52be44.  call `b`(v3, v6, v8, v4, v1) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52be4a.  v4:= v9;
  #L52be4c.  goto L52bd9e;
  #L52be4e.  v7:= 93I;
  #L52be52.  call `write`(v0, v7) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52be58.  v6.`m1.p.m` @type ^`m1.z` := v2 @kind object;
  #L52be5c.  return @kind void;
  #L52be5e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52be60.  v6.`m1.p.m` @type ^`m1.z` := v2 @kind object;
  #L52be64.  throw v7;
  catch `java.lang.Throwable` @[L52bd90..L52be58] goto L52be5e;
}
