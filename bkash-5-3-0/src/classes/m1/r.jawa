record `m1.r` @kind class @AccessFlag PUBLIC_FINAL extends `m1.w` @kind interface {
}
procedure `void` `<init>`(`m1.r` v0 @kind this) @signature `Lm1/r;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52e3d8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52e3de.  return @kind void;
}
procedure `void` `b`(`m1.r` v16 @kind this, `m1.p` v17 @kind object, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.reflect.Type` v20 @kind object) @signature `Lm1/r;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L52e3f0.  v1:= v17 @kind object;
  #L52e3f4.  v0:= v18 @kind object;
  #L52e3f8.  v2:= v19 @kind object;
  #L52e3fc.  v3:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e400.  v4:= v3.`m1.c0.i` @type ^`int`;
  #L52e404.  v5:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52e408.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52e40c.  v4:= v4 ^& v5 @kind int;
  #L52e40e.  v5:= 0I;
  #L52e410.  v6:= 1I;
  #L52e412.  if v4 == 0 then goto L52e41a;
  #L52e416.  v4:= 1I;
  #L52e418.  goto L52e41c;
  #L52e41a.  v4:= 0I;
  #L52e41c.  v7:= 0I;
  #L52e41e.  if v4 == 0 then goto L52e42a;
  #L52e422.  call temp:= `E`(v20) @signature `Ln1/d;.E:(Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L52e428.  v7:= temp @kind object;
  #L52e42a.  v8:= "[]" @kind object;
  #L52e42e.  if v0 != 0 then goto L52e454;
  #L52e432.  v0:= v3.`m1.c0.i` @type ^`int`;
  #L52e436.  v1:= `@@m1.b.WriteNullListAsEmpty` @type ^`m1.b` @kind object;
  #L52e43a.  v1:= v1.`m1.b.mask` @type ^`int`;
  #L52e43e.  v0:= v0 ^& v1 @kind int;
  #L52e440.  if v0 == 0 then goto L52e44c;
  #L52e444.  call `write`(v3, v8) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52e44a.  goto L52e452;
  #L52e44c.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e452.  return @kind void;
  #L52e454.  v9:= v0 @kind object;
  #L52e456.  v9:= (`java.util.List`) v9 @kind object;
  #L52e45a.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L52e460.  v10:= temp;
  #L52e462.  if v10 != 0 then goto L52e46e;
  #L52e466.  call temp:= `i`(v3, v8) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52e46c.  return @kind void;
  #L52e46e.  v8:= v1.`m1.p.m` @type ^`m1.z` @kind object;
  #L52e472.  v11:= v3.`m1.c0.i` @type ^`int`;
  #L52e476.  v12:= `@@m1.b.DisableCircularReferenceDetect` @type ^`m1.b` @kind object;
  #L52e47a.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52e47e.  v11:= v11 ^& v12 @kind int;
  #L52e480.  if v11 != 0 then goto L52e4b6;
  #L52e484.  v11:= new `m1.z`;
  #L52e488.  call `<init>`(v11, v8, v0, v2, v5) @signature `Lm1/z;.<init>:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind direct;
  #L52e48e.  v1.`m1.p.m` @type ^`m1.z` := v11 @kind object;
  #L52e492.  v11:= v1.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52e496.  if v11 != 0 then goto L52e4a8;
  #L52e49a.  v11:= new `java.util.IdentityHashMap`;
  #L52e49e.  call `<init>`(v11) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L52e4a4.  v1.`m1.p.l` @type ^`java.util.IdentityHashMap` := v11 @kind object;
  #L52e4a8.  v11:= v1.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52e4ac.  v12:= v1.`m1.p.m` @type ^`m1.z` @kind object;
  #L52e4b0.  call temp:= `put`(v11, v0, v12) @signature `Ljava/util/IdentityHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52e4b6.  v11:= v3.`m1.c0.i` @type ^`int`;
  #L52e4ba.  v12:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52e4be.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52e4c2.  v11:= v11 ^& v12 @kind int;
  #L52e4c4.  v12:= 44I;
  #L52e4c8.  v13:= 93I;
  #L52e4cc.  v14:= 91I;
  #L52e4d0.  if v11 == 0 then goto L52e578;
  #L52e4d4.  call `write`(v3, v14) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e4da.  call `p`(v17) @signature `Lm1/p;.p:()V` @kind virtual;
  #L52e4e0.  v4:= 0I;
  #L52e4e2.  if v4 >= v10 then goto L52e560;
  #L52e4e6.  call temp:= `get`(v9, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L52e4ec.  v6:= temp @kind object;
  #L52e4ee.  if v4 == 0 then goto L52e4f8;
  #L52e4f2.  call `write`(v3, v12) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e4f8.  call `r`(v17) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52e4fe.  if v6 == 0 then goto L52e550;
  #L52e502.  v11:= v1.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52e506.  if v11 == 0 then goto L52e51e;
  #L52e50a.  call temp:= `containsKey`(v11, v6) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52e510.  v11:= temp;
  #L52e512.  if v11 == 0 then goto L52e51e;
  #L52e516.  call `d`(v1, v6) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52e51c.  goto L52e55a;
  #L52e51e.  v11:= v1.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52e522.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e528.  v14:= temp @kind object;
  #L52e52a.  call temp:= `a`(v11, v14) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52e530.  v11:= temp @kind object;
  #L52e532.  v14:= new `m1.z`;
  #L52e536.  call `<init>`(v14, v8, v0, v2, v5) @signature `Lm1/z;.<init>:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind direct;
  #L52e53c.  v1.`m1.p.m` @type ^`m1.z` := v14 @kind object;
  #L52e540.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52e546.  v14:= temp @kind object;
  #L52e548.  call `b`(v11, v1, v6, v14, v7) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52e54e.  goto L52e55a;
  #L52e550.  v6:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e554.  call `r`(v6) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e55a.  v4:= v4 + 1;
  #L52e55e.  goto L52e4e2;
  #L52e560.  call `q`(v17) @signature `Lm1/p;.q:()V` @kind virtual;
  #L52e566.  call `r`(v17) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52e56c.  call `write`(v3, v13) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e572.  v1.`m1.p.m` @type ^`m1.z` := v8 @kind object;
  #L52e576.  return @kind void;
  #L52e578.  v10:= v3.`m1.c0.h` @type ^`int`;
  #L52e57c.  v10:= v10 + v6 @kind int;
  #L52e57e.  v11:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e582.  v11:= length @variable v11;
  #L52e584.  if v10 <= v11 then goto L52e5a0;
  #L52e588.  v11:= v3.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52e58c.  if v11 != 0 then goto L52e598;
  #L52e590.  call `s`(v3, v10) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52e596.  goto L52e5a0;
  #L52e598.  call `flush`(v3) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52e59e.  v10:= 1I;
  #L52e5a0.  v11:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e5a4.  v15:= v3.`m1.c0.h` @type ^`int`;
  #L52e5a8.  v11[v15]:= v14 @kind char;
  #L52e5ac.  v3.`m1.c0.h` @type ^`int` := v10;
  #L52e5b0.  v10:= 0I;
  #L52e5b2.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L52e5b8.  v11:= temp;
  #L52e5ba.  if v10 >= v11 then goto L52e702;
  #L52e5be.  call temp:= `get`(v9, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L52e5c4.  v11:= temp @kind object;
  #L52e5c6.  if v10 == 0 then goto L52e602;
  #L52e5ca.  v14:= v3.`m1.c0.h` @type ^`int`;
  #L52e5ce.  v14:= v14 + v6 @kind int;
  #L52e5d0.  v15:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e5d4.  v15:= length @variable v15;
  #L52e5d6.  if v14 <= v15 then goto L52e5f2;
  #L52e5da.  v15:= v3.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52e5de.  if v15 != 0 then goto L52e5ea;
  #L52e5e2.  call `s`(v3, v14) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52e5e8.  goto L52e5f2;
  #L52e5ea.  call `flush`(v3) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52e5f0.  v14:= 1I;
  #L52e5f2.  v15:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e5f6.  v13:= v3.`m1.c0.h` @type ^`int`;
  #L52e5fa.  v15[v13]:= v12 @kind char;
  #L52e5fe.  v3.`m1.c0.h` @type ^`int` := v14;
  #L52e602.  if v11 != 0 then goto L52e614;
  #L52e606.  v11:= "null" @kind object;
  #L52e60a.  call temp:= `i`(v3, v11) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52e610.  goto L52e6f6;
  #L52e614.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e61a.  v13:= temp @kind object;
  #L52e61c.  v14:= constclass @type ^`java.lang.Integer` @kind object;
  #L52e620.  if v13 != v14 then goto L52e638;
  #L52e624.  v11:= (`java.lang.Integer`) v11 @kind object;
  #L52e628.  call temp:= `intValue`(v11) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L52e62e.  v11:= temp;
  #L52e630.  call `a0`(v3, v11) @signature `Lm1/c0;.a0:(I)V` @kind virtual;
  #L52e636.  goto L52e6f6;
  #L52e638.  v14:= constclass @type ^`java.lang.Long` @kind object;
  #L52e63c.  if v13 != v14 then goto L52e66a;
  #L52e640.  v11:= (`java.lang.Long`) v11 @kind object;
  #L52e644.  call temp:= `longValue`(v11) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L52e64a.  v13:= temp @kind wide;
  #L52e64c.  if v4 == 0 then goto L52e662;
  #L52e650.  call `v`(v3, v13) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52e656.  v11:= 76I;
  #L52e65a.  call `write`(v3, v11) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e660.  goto L52e6f6;
  #L52e662.  call `v`(v3, v13) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52e668.  goto L52e6f6;
  #L52e66a.  v14:= constclass @type ^`java.lang.String` @kind object;
  #L52e66e.  if v13 != v14 then goto L52e698;
  #L52e672.  v11:= (`java.lang.String`) v11 @kind object;
  #L52e676.  v13:= v3.`m1.c0.i` @type ^`int`;
  #L52e67a.  v14:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52e67e.  v14:= v14.`m1.b.mask` @type ^`int`;
  #L52e682.  v13:= v13 ^& v14 @kind int;
  #L52e684.  if v13 == 0 then goto L52e690;
  #L52e688.  call `i0`(v3, v11) @signature `Lm1/c0;.i0:(Ljava/lang/String;)V` @kind virtual;
  #L52e68e.  goto L52e6f6;
  #L52e690.  call `y`(v3, v11, v5, v6) @signature `Lm1/c0;.y:(Ljava/lang/String;CZ)V` @kind virtual;
  #L52e696.  goto L52e6f6;
  #L52e698.  v13:= v3.`m1.c0.i` @type ^`int`;
  #L52e69c.  v14:= `@@m1.b.DisableCircularReferenceDetect` @type ^`m1.b` @kind object;
  #L52e6a0.  v14:= v14.`m1.b.mask` @type ^`int`;
  #L52e6a4.  v13:= v13 ^& v14 @kind int;
  #L52e6a6.  if v13 != 0 then goto L52e6b8;
  #L52e6aa.  v13:= new `m1.z`;
  #L52e6ae.  call `<init>`(v13, v8, v0, v2, v5) @signature `Lm1/z;.<init>:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind direct;
  #L52e6b4.  v1.`m1.p.m` @type ^`m1.z` := v13 @kind object;
  #L52e6b8.  v13:= v1.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52e6bc.  if v13 == 0 then goto L52e6d4;
  #L52e6c0.  call temp:= `containsKey`(v13, v11) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52e6c6.  v13:= temp;
  #L52e6c8.  if v13 == 0 then goto L52e6d4;
  #L52e6cc.  call `d`(v1, v11) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52e6d2.  goto L52e6f6;
  #L52e6d4.  v13:= v1.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52e6d8.  call temp:= `getClass`(v11) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e6de.  v14:= temp @kind object;
  #L52e6e0.  call temp:= `a`(v13, v14) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52e6e6.  v13:= temp @kind object;
  #L52e6e8.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52e6ee.  v14:= temp @kind object;
  #L52e6f0.  call `b`(v13, v1, v11, v14, v7) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52e6f6.  v10:= v10 + 1;
  #L52e6fa.  v13:= 93I;
  #L52e6fe.  goto L52e5b2;
  #L52e702.  v0:= v3.`m1.c0.h` @type ^`int`;
  #L52e706.  v0:= v0 + v6 @kind int;
  #L52e708.  v2:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e70c.  v2:= length @variable v2;
  #L52e70e.  if v0 <= v2 then goto L52e72a;
  #L52e712.  v2:= v3.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52e716.  if v2 != 0 then goto L52e722;
  #L52e71a.  call `s`(v3, v0) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52e720.  goto L52e72a;
  #L52e722.  call `flush`(v3) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52e728.  goto L52e72c;
  #L52e72a.  v6:= v0;
  #L52e72c.  v0:= v3.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e730.  v2:= v3.`m1.c0.h` @type ^`int`;
  #L52e734.  v4:= 93I;
  #L52e738.  v0[v2]:= v4 @kind char;
  #L52e73c.  v3.`m1.c0.h` @type ^`int` := v6;
  #L52e740.  v1.`m1.p.m` @type ^`m1.z` := v8 @kind object;
  #L52e744.  return @kind void;
  #L52e746.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52e748.  v1.`m1.p.m` @type ^`m1.z` := v8 @kind object;
  #L52e74c.  throw v0;
  catch `java.lang.Throwable` @[L52e4b6..L52e572] goto L52e746;
  catch `java.lang.Throwable` @[L52e578..L52e740] goto L52e746;
}
