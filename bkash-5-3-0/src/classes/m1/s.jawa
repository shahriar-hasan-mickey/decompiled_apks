record `m1.s` @kind class @AccessFlag PUBLIC_FINAL extends `m1.w` @kind interface {
}
procedure `void` `<init>`(`m1.s` v0 @kind this) @signature `Lm1/s;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L52e774.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52e77a.  return @kind void;
}
procedure `void` `b`(`m1.s` v16 @kind this, `m1.p` v17 @kind object, `java.lang.Object` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.reflect.Type` v20 @kind object) @signature `Lm1/s;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L52e78c.  v1:= v17 @kind object;
  #L52e790.  v0:= v18 @kind object;
  #L52e794.  v2:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e798.  if v0 != 0 then goto L52e7a4;
  #L52e79c.  call `r`(v2) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e7a2.  return @kind void;
  #L52e7a4.  v3:= v0 @kind object;
  #L52e7a6.  v3:= (`java.util.Map`) v3 @kind object;
  #L52e7aa.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e7b0.  v4:= temp @kind object;
  #L52e7b2.  v5:= constclass @type ^`com.alibaba.fastjson.JSONObject` @kind object;
  #L52e7b6.  v6:= 1I;
  #L52e7b8.  v7:= 0I;
  #L52e7ba.  if v4 == v5 then goto L52e7ce;
  #L52e7be.  v5:= constclass @type ^`java.util.HashMap` @kind object;
  #L52e7c2.  if v4 == v5 then goto L52e7ce;
  #L52e7c6.  v5:= constclass @type ^`java.util.LinkedHashMap` @kind object;
  #L52e7ca.  if v4 != v5 then goto L52e7e2;
  #L52e7ce.  v4:= "@type" @kind object;
  #L52e7d2.  call temp:= `containsKey`(v3, v4) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L52e7d8.  v4:= temp;
  #L52e7da.  if v4 == 0 then goto L52e7e2;
  #L52e7de.  v4:= 1I;
  #L52e7e0.  goto L52e7e4;
  #L52e7e2.  v4:= 0I;
  #L52e7e4.  v5:= v2.`m1.c0.i` @type ^`int`;
  #L52e7e8.  v8:= `@@m1.b.SortField` @type ^`m1.b` @kind object;
  #L52e7ec.  v8:= v8.`m1.b.mask` @type ^`int`;
  #L52e7f0.  v5:= v5 ^& v8 @kind int;
  #L52e7f2.  if v5 == 0 then goto L52e82a;
  #L52e7f6.  v5:= instanceof @variable v3 @type ^`com.alibaba.fastjson.JSONObject` @kind boolean;
  #L52e7fa.  if v5 == 0 then goto L52e80a;
  #L52e7fe.  v3:= (`com.alibaba.fastjson.JSONObject`) v3 @kind object;
  #L52e802.  call temp:= `getInnerMap`(v3) @signature `Lcom/alibaba/fastjson/JSONObject;.getInnerMap:()Ljava/util/Map;` @kind virtual;
  #L52e808.  v3:= temp @kind object;
  #L52e80a.  v5:= instanceof @variable v3 @type ^`java.util.SortedMap` @kind boolean;
  #L52e80e.  if v5 != 0 then goto L52e82a;
  #L52e812.  v5:= instanceof @variable v3 @type ^`java.util.LinkedHashMap` @kind boolean;
  #L52e816.  if v5 != 0 then goto L52e82a;
  #L52e81a.  v5:= new `java.util.TreeMap`;
  #L52e81e.  call `<init>`(v5, v3) @signature `Ljava/util/TreeMap;.<init>:(Ljava/util/Map;)V` @kind direct;
  #L52e824.  v3:= v5 @kind object;
  #L52e826.  goto L52e82a;
  #L52e828.  
  #L52e82a.  v5:= v1.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52e82e.  if v5 == 0 then goto L52e846;
  #L52e832.  call temp:= `containsKey`(v5, v0) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52e838.  v5:= temp;
  #L52e83a.  if v5 == 0 then goto L52e846;
  #L52e83e.  call `d`(v17, v18) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52e844.  return @kind void;
  #L52e846.  v5:= v1.`m1.p.m` @type ^`m1.z` @kind object;
  #L52e84a.  v8:= v19 @kind object;
  #L52e84e.  call `j`(v1, v5, v0, v8, v7) @signature `Lm1/p;.j:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind virtual;
  #L52e854.  v8:= 123I;
  #L52e858.  call `write`(v2, v8) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e85e.  call `p`(v17) @signature `Lm1/p;.p:()V` @kind virtual;
  #L52e864.  v8:= v2.`m1.c0.i` @type ^`int`;
  #L52e868.  v9:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52e86c.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52e870.  v8:= v8 ^& v9 @kind int;
  #L52e872.  if v8 == 0 then goto L52e8a2;
  #L52e876.  if v4 != 0 then goto L52e8a2;
  #L52e87a.  v4:= v1.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52e87e.  v4:= v4.`m1.a0.b` @type ^`java.lang.String` @kind object;
  #L52e882.  call `C`(v2, v4, v7) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52e888.  call temp:= `getClass`(v18) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e88e.  v4:= temp @kind object;
  #L52e890.  call temp:= `getName`(v4) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L52e896.  v4:= temp @kind object;
  #L52e898.  call `d0`(v2, v4) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52e89e.  v4:= 0I;
  #L52e8a0.  goto L52e8a4;
  #L52e8a2.  v4:= 1I;
  #L52e8a4.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L52e8aa.  v8:= temp @kind object;
  #L52e8ac.  call temp:= `iterator`(v8) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52e8b2.  v8:= temp @kind object;
  #L52e8b4.  v9:= 0I;
  #L52e8b6.  v10:= v9 @kind object;
  #L52e8b8.  v11:= v10 @kind object;
  #L52e8ba.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52e8c0.  v12:= temp;
  #L52e8c2.  if v12 == 0 then goto L52e9e0;
  #L52e8c6.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52e8cc.  v12:= temp @kind object;
  #L52e8ce.  v12:= (`java.util.Map$Entry`) v12 @kind object;
  #L52e8d2.  call temp:= `getValue`(v12) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L52e8d8.  v13:= temp @kind object;
  #L52e8da.  call temp:= `getKey`(v12) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L52e8e0.  v12:= temp @kind object;
  #L52e8e2.  call temp:= `n`(v1, v0, v12) @signature `Lm1/p;.n:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L52e8e8.  v14:= temp;
  #L52e8ea.  if v14 != 0 then goto L52e8f0;
  #L52e8ee.  goto L52e8ba;
  #L52e8f0.  call temp:= `o`(v1, v0, v12, v13) @signature `Lm1/p;.o:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @kind virtual;
  #L52e8f6.  v14:= temp;
  #L52e8f8.  if v14 != 0 then goto L52e8fe;
  #L52e8fc.  goto L52e8ba;
  #L52e8fe.  call temp:= `a`(v1, v0, v12, v13) @signature `Lm1/p;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52e904.  v12:= temp @kind object;
  #L52e906.  call temp:= `b`(v1, v0, v12, v13) @signature `Lm1/p;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L52e90c.  v13:= temp @kind object;
  #L52e90e.  if v13 != 0 then goto L52e926;
  #L52e912.  v14:= v2.`m1.c0.i` @type ^`int`;
  #L52e916.  v15:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52e91a.  v15:= v15.`m1.b.mask` @type ^`int`;
  #L52e91e.  v14:= v14 ^& v15 @kind int;
  #L52e920.  if v14 != 0 then goto L52e926;
  #L52e924.  goto L52e8ba;
  #L52e926.  v14:= instanceof @variable v12 @type ^`java.lang.String` @kind boolean;
  #L52e92a.  v15:= 44I;
  #L52e92e.  if v14 == 0 then goto L52e962;
  #L52e932.  v14:= v12 @kind object;
  #L52e934.  v14:= (`java.lang.String`) v14 @kind object;
  #L52e938.  if v4 != 0 then goto L52e942;
  #L52e93c.  call `write`(v2, v15) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e942.  v4:= v2.`m1.c0.i` @type ^`int`;
  #L52e946.  v15:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52e94a.  v15:= v15.`m1.b.mask` @type ^`int`;
  #L52e94e.  v4:= v4 ^& v15 @kind int;
  #L52e950.  if v4 == 0 then goto L52e95a;
  #L52e954.  call `r`(v17) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52e95a.  call `C`(v2, v14, v6) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52e960.  goto L52e9a6;
  #L52e962.  if v4 != 0 then goto L52e96c;
  #L52e966.  call `write`(v2, v15) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e96c.  v4:= v2.`m1.c0.i` @type ^`int`;
  #L52e970.  v14:= `@@m1.b.WriteNonStringKeyAsString` @type ^`m1.b` @kind object;
  #L52e974.  v14:= v14.`m1.b.mask` @type ^`int`;
  #L52e978.  v4:= v4 ^& v14 @kind int;
  #L52e97a.  if v4 == 0 then goto L52e996;
  #L52e97e.  v4:= instanceof @variable v12 @type ^`java.lang.Enum` @kind boolean;
  #L52e982.  if v4 != 0 then goto L52e996;
  #L52e986.  call temp:= `toJSONString`(v12) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52e98c.  v4:= temp @kind object;
  #L52e98e.  call `m`(v1, v4) @signature `Lm1/p;.m:(Ljava/lang/String;)V` @kind virtual;
  #L52e994.  goto L52e99c;
  #L52e996.  call `l`(v1, v12) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L52e99c.  v4:= 58I;
  #L52e9a0.  call `write`(v2, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52e9a6.  if v13 != 0 then goto L52e9b4;
  #L52e9aa.  call `r`(v2) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e9b0.  v4:= 0I;
  #L52e9b2.  goto L52e8ba;
  #L52e9b4.  call temp:= `getClass`(v13) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52e9ba.  v4:= temp @kind object;
  #L52e9bc.  if v4 != v10 then goto L52e9c8;
  #L52e9c0.  call `b`(v11, v1, v13, v12, v9) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52e9c6.  goto L52e9b0;
  #L52e9c8.  v10:= v1.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52e9cc.  call temp:= `a`(v10, v4) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52e9d2.  v10:= temp @kind object;
  #L52e9d4.  call `b`(v10, v1, v13, v12, v9) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52e9da.  v11:= v10 @kind object;
  #L52e9dc.  v10:= v4 @kind object;
  #L52e9de.  goto L52e9b0;
  #L52e9e0.  v1.`m1.p.m` @type ^`m1.z` := v5 @kind object;
  #L52e9e4.  call `q`(v17) @signature `Lm1/p;.q:()V` @kind virtual;
  #L52e9ea.  v0:= v2.`m1.c0.i` @type ^`int`;
  #L52e9ee.  v4:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52e9f2.  v4:= v4.`m1.b.mask` @type ^`int`;
  #L52e9f6.  v0:= v0 ^& v4 @kind int;
  #L52e9f8.  if v0 == 0 then goto L52ea0e;
  #L52e9fc.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L52ea02.  v0:= temp;
  #L52ea04.  if v0 <= 0 then goto L52ea0e;
  #L52ea08.  call `r`(v17) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52ea0e.  v0:= 125I;
  #L52ea12.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52ea18.  return @kind void;
  #L52ea1a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52ea1c.  v1.`m1.p.m` @type ^`m1.z` := v5 @kind object;
  #L52ea20.  throw v0;
  catch `java.lang.Exception` @[L52e81a..L52e824] goto L52e828;
  catch `java.lang.Throwable` @[L52e858..L52e9da] goto L52ea1a;
}
