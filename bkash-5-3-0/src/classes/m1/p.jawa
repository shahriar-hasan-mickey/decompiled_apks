record `m1.p` @kind class @AccessFlag PUBLIC {
  `m1.a0` `m1.p.a` @AccessFlag PUBLIC_FINAL;
  `m1.c0` `m1.p.b` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `m1.p.c` @AccessFlag PROTECTED;
  `java.util.List` `m1.p.d` @AccessFlag PROTECTED;
  `java.util.List` `m1.p.e` @AccessFlag PROTECTED;
  `java.util.List` `m1.p.f` @AccessFlag PROTECTED;
  `java.util.List` `m1.p.g` @AccessFlag PROTECTED;
  `java.util.List` `m1.p.h` @AccessFlag PROTECTED;
  `int` `m1.p.i` @AccessFlag PRIVATE;
  `java.lang.String` `m1.p.j` @AccessFlag PRIVATE;
  `java.text.DateFormat` `m1.p.k` @AccessFlag PRIVATE;
  `java.util.IdentityHashMap` `m1.p.l` @AccessFlag PROTECTED;
  `m1.z` `m1.p.m` @AccessFlag PROTECTED;
  `java.util.TimeZone` `m1.p.n` @AccessFlag PUBLIC;
  `java.util.Locale` `m1.p.o` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`m1.p` v2 @kind this, `m1.c0` v3 @kind object, `m1.a0` v4 @kind object) @signature `Lm1/p;.<init>:(Lm1/c0;Lm1/a0;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L52cf44.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52cf4a.  v0:= 0I;
  #L52cf4c.  v2.`m1.p.c` @type ^`java.util.List` := v0 @kind object;
  #L52cf50.  v2.`m1.p.d` @type ^`java.util.List` := v0 @kind object;
  #L52cf54.  v2.`m1.p.e` @type ^`java.util.List` := v0 @kind object;
  #L52cf58.  v2.`m1.p.f` @type ^`java.util.List` := v0 @kind object;
  #L52cf5c.  v2.`m1.p.g` @type ^`java.util.List` := v0 @kind object;
  #L52cf60.  v2.`m1.p.h` @type ^`java.util.List` := v0 @kind object;
  #L52cf64.  v1:= 0I;
  #L52cf66.  v2.`m1.p.i` @type ^`int` := v1;
  #L52cf6a.  v2.`m1.p.l` @type ^`java.util.IdentityHashMap` := v0 @kind object;
  #L52cf6e.  v0:= `@@com.alibaba.fastjson.JSON.defaultTimeZone` @type ^`java.util.TimeZone` @kind object;
  #L52cf72.  v2.`m1.p.n` @type ^`java.util.TimeZone` := v0 @kind object;
  #L52cf76.  v0:= `@@com.alibaba.fastjson.JSON.defaultLocale` @type ^`java.util.Locale` @kind object;
  #L52cf7a.  v2.`m1.p.o` @type ^`java.util.Locale` := v0 @kind object;
  #L52cf7e.  v2.`m1.p.b` @type ^`m1.c0` := v3 @kind object;
  #L52cf82.  v2.`m1.p.a` @type ^`m1.a0` := v4 @kind object;
  #L52cf86.  v3:= `@@com.alibaba.fastjson.JSON.defaultTimeZone` @type ^`java.util.TimeZone` @kind object;
  #L52cf8a.  v2.`m1.p.n` @type ^`java.util.TimeZone` := v3 @kind object;
  #L52cf8e.  return @kind void;
}
procedure `java.lang.Object` `b`(`m1.p` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm1/p;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L52cd74.  v2:= v2.`m1.p.f` @type ^`java.util.List` @kind object;
  #L52cd78.  if v2 == 0 then goto L52cdc0;
  #L52cd7c.  if v4 == 0 then goto L52cd90;
  #L52cd80.  v0:= instanceof @variable v4 @type ^`java.lang.String` @kind boolean;
  #L52cd84.  if v0 != 0 then goto L52cd90;
  #L52cd88.  call temp:= `toJSONString`(v4) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52cd8e.  v4:= temp @kind object;
  #L52cd90.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52cd96.  v2:= temp @kind object;
  #L52cd98.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52cd9e.  v0:= temp;
  #L52cda0.  if v0 == 0 then goto L52cdc0;
  #L52cda4.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52cdaa.  v0:= temp @kind object;
  #L52cdac.  v0:= (`m1.d`) v0 @kind object;
  #L52cdb0.  v1:= v4 @kind object;
  #L52cdb2.  v1:= (`java.lang.String`) v1 @kind object;
  #L52cdb6.  call temp:= `a`(v0, v3, v1, v5) @signature `Lm1/d;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L52cdbc.  v5:= temp @kind object;
  #L52cdbe.  goto L52cd98;
  #L52cdc0.  return v5 @kind object;
}
procedure `java.lang.Object` `a`(`m1.p` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm1/p;.a:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52cd18.  v0:= v2.`m1.p.g` @type ^`java.util.List` @kind object;
  #L52cd1c.  if v0 == 0 then goto L52cd62;
  #L52cd20.  if v4 == 0 then goto L52cd34;
  #L52cd24.  v1:= instanceof @variable v4 @type ^`java.lang.String` @kind boolean;
  #L52cd28.  if v1 != 0 then goto L52cd34;
  #L52cd2c.  call temp:= `toJSONString`(v4) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52cd32.  v4:= temp @kind object;
  #L52cd34.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52cd3a.  v0:= temp @kind object;
  #L52cd3c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52cd42.  v1:= temp;
  #L52cd44.  if v1 == 0 then goto L52cd62;
  #L52cd48.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52cd4e.  v1:= temp @kind object;
  #L52cd50.  v1:= (`m1.u`) v1 @kind object;
  #L52cd54.  v4:= (`java.lang.String`) v4 @kind object;
  #L52cd58.  call temp:= `a`(v1, v3, v4, v5) @signature `Lm1/u;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L52cd5e.  v4:= temp @kind object;
  #L52cd60.  goto L52cd3c;
  #L52cd62.  return v4 @kind object;
}
procedure `java.text.DateFormat` `c`(`m1.p` v3 @kind this) @signature `Lm1/p;.c:()Ljava/text/DateFormat;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52cdf4.  v0:= v3.`m1.p.k` @type ^`java.text.DateFormat` @kind object;
  #L52cdf8.  if v0 != 0 then goto L52ce24;
  #L52cdfc.  v0:= v3.`m1.p.j` @type ^`java.lang.String` @kind object;
  #L52ce00.  if v0 == 0 then goto L52ce24;
  #L52ce04.  v0:= new `java.text.SimpleDateFormat`;
  #L52ce08.  v1:= v3.`m1.p.j` @type ^`java.lang.String` @kind object;
  #L52ce0c.  v2:= v3.`m1.p.o` @type ^`java.util.Locale` @kind object;
  #L52ce10.  call `<init>`(v0, v1, v2) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L52ce16.  v3.`m1.p.k` @type ^`java.text.DateFormat` := v0 @kind object;
  #L52ce1a.  v1:= v3.`m1.p.n` @type ^`java.util.TimeZone` @kind object;
  #L52ce1e.  call `setTimeZone`(v0, v1) @signature `Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L52ce24.  v0:= v3.`m1.p.k` @type ^`java.text.DateFormat` @kind object;
  #L52ce28.  return v0 @kind object;
}
procedure `void` `d`(`m1.p` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52cfa0.  v0:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52cfa4.  v1:= v0.`m1.z.b` @type ^`java.lang.Object` @kind object;
  #L52cfa8.  if v3 != v1 then goto L52cfbc;
  #L52cfac.  v3:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52cfb0.  v0:= "{\"$ref\":\"@\"}" @kind object;
  #L52cfb4.  call `write`(v3, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52cfba.  return @kind void;
  #L52cfbc.  v1:= v0.`m1.z.a` @type ^`m1.z` @kind object;
  #L52cfc0.  if v1 == 0 then goto L52cfdc;
  #L52cfc4.  v1:= v1.`m1.z.b` @type ^`java.lang.Object` @kind object;
  #L52cfc8.  if v3 != v1 then goto L52cfdc;
  #L52cfcc.  v3:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52cfd0.  v0:= "{\"$ref\":\"..\"}" @kind object;
  #L52cfd4.  call `write`(v3, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52cfda.  return @kind void;
  #L52cfdc.  v1:= v0.`m1.z.a` @type ^`m1.z` @kind object;
  #L52cfe0.  if v1 != 0 then goto L52d03c;
  #L52cfe4.  v0:= v0.`m1.z.b` @type ^`java.lang.Object` @kind object;
  #L52cfe8.  if v3 != v0 then goto L52cffc;
  #L52cfec.  v3:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52cff0.  v0:= "{\"$ref\":\"$\"}" @kind object;
  #L52cff4.  call `write`(v3, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52cffa.  return @kind void;
  #L52cffc.  v0:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d000.  call temp:= `get`(v0, v3) @signature `Ljava/util/IdentityHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52d006.  v3:= temp @kind object;
  #L52d008.  v3:= (`m1.z`) v3 @kind object;
  #L52d00c.  call temp:= `toString`(v3) @signature `Lm1/z;.toString:()Ljava/lang/String;` @kind virtual;
  #L52d012.  v3:= temp @kind object;
  #L52d014.  v0:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d018.  v1:= "{\"$ref\":\"" @kind object;
  #L52d01c.  call `write`(v0, v1) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52d022.  v0:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d026.  call `write`(v0, v3) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52d02c.  v3:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d030.  v0:= "\"}" @kind object;
  #L52d034.  call `write`(v3, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52d03a.  return @kind void;
  #L52d03c.  v0:= v1 @kind object;
  #L52d03e.  goto L52cfdc;
}
procedure `void` `e`(`m1.p` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lm1/p;.e:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L52d050.  v0:= 0I;
  #L52d052.  v1:= 0I;
  #L52d054.  call `f`(v2, v3, v4, v0, v1) @signature `Lm1/p;.f:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V` @kind virtual;
  #L52d05a.  return @kind void;
}
procedure `void` `f`(`m1.p` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `int` v5 ) @signature `Lm1/p;.f:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;I)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L52d06c.  if v2 != 0 then goto L52d07c;
  #L52d070.  v2:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d074.  call `r`(v2) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52d07a.  return @kind void;
  #L52d07c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52d082.  v5:= temp @kind object;
  #L52d084.  v0:= v1.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52d088.  call temp:= `a`(v0, v5) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52d08e.  v5:= temp @kind object;
  #L52d090.  call `b`(v5, v1, v2, v3, v4) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52d096.  return @kind void;
  #L52d098.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L52d09a.  v3:= new `com.alibaba.fastjson.c`;
  #L52d09e.  call temp:= `getMessage`(v2) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L52d0a4.  v4:= temp @kind object;
  #L52d0a6.  call `<init>`(v3, v4, v2) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L52d0ac.  throw v3;
  catch `java.io.IOException` @[L52d070..L52d096] goto L52d098;
}
procedure `void` `g`(`m1.p` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lm1/p;.g:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L52d0d0.  v0:= instanceof @variable v3 @type ^`java.util.Date` @kind boolean;
  #L52d0d4.  if v0 == 0 then goto L52d114;
  #L52d0d8.  call temp:= `c`(v2) @signature `Lm1/p;.c:()Ljava/text/DateFormat;` @kind virtual;
  #L52d0de.  v0:= temp @kind object;
  #L52d0e0.  if v0 != 0 then goto L52d0fc;
  #L52d0e4.  v0:= new `java.text.SimpleDateFormat`;
  #L52d0e8.  v1:= v2.`m1.p.o` @type ^`java.util.Locale` @kind object;
  #L52d0ec.  call `<init>`(v0, v4, v1) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L52d0f2.  v4:= v2.`m1.p.n` @type ^`java.util.TimeZone` @kind object;
  #L52d0f6.  call `setTimeZone`(v0, v4) @signature `Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L52d0fc.  v3:= (`java.util.Date`) v3 @kind object;
  #L52d100.  call temp:= `format`(v0, v3) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L52d106.  v3:= temp @kind object;
  #L52d108.  v4:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d10c.  call `d0`(v4, v3) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52d112.  return @kind void;
  #L52d114.  call `l`(v2, v3) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L52d11a.  return @kind void;
}
procedure `void` `h`(`m1.p` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lm1/p;.h:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L52d12c.  v0.`m1.p.j` @type ^`java.lang.String` := v1 @kind object;
  #L52d130.  v1:= v0.`m1.p.k` @type ^`java.text.DateFormat` @kind object;
  #L52d134.  if v1 == 0 then goto L52d13e;
  #L52d138.  v1:= 0I;
  #L52d13a.  v0.`m1.p.k` @type ^`java.text.DateFormat` := v1 @kind object;
  #L52d13e.  return @kind void;
}
procedure `void` `i`(`m1.p` v1 @kind this, `m1.b` v2 @kind object, `boolean` v3 ) @signature `Lm1/p;.i:(Lm1/b;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52d150.  v0:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d154.  call `J`(v0, v2, v3) @signature `Lm1/c0;.J:(Lm1/b;Z)V` @kind virtual;
  #L52d15a.  return @kind void;
}
procedure `void` `j`(`m1.p` v2 @kind this, `m1.z` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `int` v6 ) @signature `Lm1/p;.j:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52d16c.  v0:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d170.  v0:= v0.`m1.c0.i` @type ^`int`;
  #L52d174.  v1:= `@@m1.b.DisableCircularReferenceDetect` @type ^`m1.b` @kind object;
  #L52d178.  v1:= v1.`m1.b.mask` @type ^`int`;
  #L52d17c.  v0:= v0 ^& v1 @kind int;
  #L52d17e.  if v0 != 0 then goto L52d1b4;
  #L52d182.  v0:= new `m1.z`;
  #L52d186.  call `<init>`(v0, v3, v4, v5, v6) @signature `Lm1/z;.<init>:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind direct;
  #L52d18c.  v2.`m1.p.m` @type ^`m1.z` := v0 @kind object;
  #L52d190.  v3:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d194.  if v3 != 0 then goto L52d1a6;
  #L52d198.  v3:= new `java.util.IdentityHashMap`;
  #L52d19c.  call `<init>`(v3) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L52d1a2.  v2.`m1.p.l` @type ^`java.util.IdentityHashMap` := v3 @kind object;
  #L52d1a6.  v3:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d1aa.  v5:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52d1ae.  call temp:= `put`(v3, v4, v5) @signature `Ljava/util/IdentityHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52d1b4.  return @kind void;
}
procedure `java.util.List` `k`(`m1.p` v1 @kind this) @signature `Lm1/p;.k:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ce3c.  v0:= v1.`m1.p.f` @type ^`java.util.List` @kind object;
  #L52ce40.  if v0 != 0 then goto L52ce52;
  #L52ce44.  v0:= new `java.util.ArrayList`;
  #L52ce48.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52ce4e.  v1.`m1.p.f` @type ^`java.util.List` := v0 @kind object;
  #L52ce52.  v0:= v1.`m1.p.f` @type ^`java.util.List` @kind object;
  #L52ce56.  return v0 @kind object;
}
procedure `void` `l`(`m1.p` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L52d1c8.  if v3 != 0 then goto L52d1d8;
  #L52d1cc.  v3:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d1d0.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52d1d6.  return @kind void;
  #L52d1d8.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52d1de.  v0:= temp @kind object;
  #L52d1e0.  v1:= v2.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52d1e4.  call temp:= `a`(v1, v0) @signature `Lm1/a0;.a:(Ljava/lang/Class;)Lm1/w;` @kind virtual;
  #L52d1ea.  v0:= temp @kind object;
  #L52d1ec.  v1:= 0I;
  #L52d1ee.  call `b`(v0, v2, v3, v1, v1) @signature `Lm1/w;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @kind interface;
  #L52d1f4.  return @kind void;
  #L52d1f6.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L52d1f8.  v0:= new `com.alibaba.fastjson.c`;
  #L52d1fc.  call temp:= `getMessage`(v3) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L52d202.  v1:= temp @kind object;
  #L52d204.  call `<init>`(v0, v1, v3) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L52d20a.  throw v0;
  catch `java.io.IOException` @[L52d1ee..L52d1f4] goto L52d1f6;
}
procedure `void` `m`(`m1.p` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lm1/p;.m:(Ljava/lang/String;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L52d22c.  if v4 != 0 then goto L52d25a;
  #L52d230.  v4:= v3.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d234.  v0:= v4.`m1.c0.i` @type ^`int`;
  #L52d238.  v1:= `@@m1.b.WriteNullStringAsEmpty` @type ^`m1.b` @kind object;
  #L52d23c.  v1:= v1.`m1.b.mask` @type ^`int`;
  #L52d240.  v0:= v0 ^& v1 @kind int;
  #L52d242.  if v0 == 0 then goto L52d252;
  #L52d246.  v0:= "" @kind object;
  #L52d24a.  call `d0`(v4, v0) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52d250.  goto L52d258;
  #L52d252.  call `r`(v4) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52d258.  return @kind void;
  #L52d25a.  v0:= v3.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d25e.  v1:= v0.`m1.c0.i` @type ^`int`;
  #L52d262.  v2:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52d266.  v2:= v2.`m1.b.mask` @type ^`int`;
  #L52d26a.  v1:= v1 ^& v2 @kind int;
  #L52d26c.  if v1 == 0 then goto L52d278;
  #L52d270.  call `i0`(v0, v4) @signature `Lm1/c0;.i0:(Ljava/lang/String;)V` @kind virtual;
  #L52d276.  goto L52d282;
  #L52d278.  v1:= 0I;
  #L52d27a.  v2:= 1I;
  #L52d27c.  call `y`(v0, v4, v1, v2) @signature `Lm1/c0;.y:(Ljava/lang/String;CZ)V` @kind virtual;
  #L52d282.  return @kind void;
}
procedure `boolean` `n`(`m1.p` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lm1/p;.n:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L52cc48.  v0:= v4.`m1.p.h` @type ^`java.util.List` @kind object;
  #L52cc4c.  v1:= 1I;
  #L52cc4e.  if v0 != 0 then goto L52cc54;
  #L52cc52.  return v1;
  #L52cc54.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52cc5a.  v0:= temp @kind object;
  #L52cc5c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52cc62.  v2:= temp;
  #L52cc64.  if v2 == 0 then goto L52cc9e;
  #L52cc68.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52cc6e.  v2:= temp @kind object;
  #L52cc70.  v2:= (`m1.y`) v2 @kind object;
  #L52cc74.  if v6 == 0 then goto L52cc88;
  #L52cc78.  v3:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L52cc7c.  if v3 != 0 then goto L52cc88;
  #L52cc80.  call temp:= `toJSONString`(v6) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52cc86.  v6:= temp @kind object;
  #L52cc88.  v3:= v6 @kind object;
  #L52cc8a.  v3:= (`java.lang.String`) v3 @kind object;
  #L52cc8e.  call temp:= `b`(v2, v4, v5, v3) @signature `Lm1/y;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/String;)Z` @kind interface;
  #L52cc94.  v2:= temp;
  #L52cc96.  if v2 != 0 then goto L52cc5c;
  #L52cc9a.  v5:= 0I;
  #L52cc9c.  return v5;
  #L52cc9e.  return v1;
}
procedure `boolean` `o`(`m1.p` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lm1/p;.o:(Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L52ccb0.  v0:= v4.`m1.p.e` @type ^`java.util.List` @kind object;
  #L52ccb4.  v1:= 1I;
  #L52ccb6.  if v0 != 0 then goto L52ccbc;
  #L52ccba.  return v1;
  #L52ccbc.  if v6 == 0 then goto L52ccd0;
  #L52ccc0.  v2:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L52ccc4.  if v2 != 0 then goto L52ccd0;
  #L52ccc8.  call temp:= `toJSONString`(v6) @signature `Lcom/alibaba/fastjson/JSON;.toJSONString:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L52ccce.  v6:= temp @kind object;
  #L52ccd0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52ccd6.  v0:= temp @kind object;
  #L52ccd8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52ccde.  v2:= temp;
  #L52cce0.  if v2 == 0 then goto L52cd06;
  #L52cce4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52ccea.  v2:= temp @kind object;
  #L52ccec.  v2:= (`m1.x`) v2 @kind object;
  #L52ccf0.  v3:= v6 @kind object;
  #L52ccf2.  v3:= (`java.lang.String`) v3 @kind object;
  #L52ccf6.  call temp:= `a`(v2, v5, v3, v7) @signature `Lm1/x;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z` @kind interface;
  #L52ccfc.  v2:= temp;
  #L52ccfe.  if v2 != 0 then goto L52ccd8;
  #L52cd02.  v5:= 0I;
  #L52cd04.  return v5;
  #L52cd06.  return v1;
}
procedure `void` `p`(`m1.p` v1 @kind this) @signature `Lm1/p;.p:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52d294.  v0:= v1.`m1.p.i` @type ^`int`;
  #L52d298.  v0:= v0 + 1;
  #L52d29c.  v1.`m1.p.i` @type ^`int` := v0;
  #L52d2a0.  return @kind void;
}
procedure `void` `q`(`m1.p` v1 @kind this) @signature `Lm1/p;.q:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52d2b4.  v0:= v1.`m1.p.i` @type ^`int`;
  #L52d2b8.  v0:= v0 + -1;
  #L52d2bc.  v1.`m1.p.i` @type ^`int` := v0;
  #L52d2c0.  return @kind void;
}
procedure `void` `r`(`m1.p` v3 @kind this) @signature `Lm1/p;.r:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L52d2d4.  v0:= v3.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d2d8.  v1:= 10I;
  #L52d2dc.  call `write`(v0, v1) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52d2e2.  v0:= 0I;
  #L52d2e4.  v1:= v3.`m1.p.i` @type ^`int`;
  #L52d2e8.  if v0 >= v1 then goto L52d300;
  #L52d2ec.  v1:= v3.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d2f0.  v2:= 9I;
  #L52d2f4.  call `write`(v1, v2) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52d2fa.  v0:= v0 + 1;
  #L52d2fe.  goto L52d2e4;
  #L52d300.  return @kind void;
}
procedure `java.util.List` `s`(`m1.p` v1 @kind this) @signature `Lm1/p;.s:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ce68.  v0:= v1.`m1.p.c` @type ^`java.util.List` @kind object;
  #L52ce6c.  if v0 != 0 then goto L52ce7e;
  #L52ce70.  v0:= new `java.util.ArrayList`;
  #L52ce74.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52ce7a.  v1.`m1.p.c` @type ^`java.util.List` := v0 @kind object;
  #L52ce7e.  v0:= v1.`m1.p.c` @type ^`java.util.List` @kind object;
  #L52ce82.  return v0 @kind object;
}
procedure `java.util.List` `t`(`m1.p` v1 @kind this) @signature `Lm1/p;.t:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ce94.  v0:= v1.`m1.p.d` @type ^`java.util.List` @kind object;
  #L52ce98.  if v0 != 0 then goto L52ceaa;
  #L52ce9c.  v0:= new `java.util.ArrayList`;
  #L52cea0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52cea6.  v1.`m1.p.d` @type ^`java.util.List` := v0 @kind object;
  #L52ceaa.  v0:= v1.`m1.p.d` @type ^`java.util.List` @kind object;
  #L52ceae.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`m1.p` v1 @kind this) @signature `Lm1/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52cdd4.  v0:= v1.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52cdd8.  call temp:= `toString`(v0) @signature `Lm1/c0;.toString:()Ljava/lang/String;` @kind virtual;
  #L52cdde.  v0:= temp @kind object;
  #L52cde0.  return v0 @kind object;
}
procedure `java.util.List` `u`(`m1.p` v1 @kind this) @signature `Lm1/p;.u:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52cec0.  v0:= v1.`m1.p.g` @type ^`java.util.List` @kind object;
  #L52cec4.  if v0 != 0 then goto L52ced6;
  #L52cec8.  v0:= new `java.util.ArrayList`;
  #L52cecc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52ced2.  v1.`m1.p.g` @type ^`java.util.List` := v0 @kind object;
  #L52ced6.  v0:= v1.`m1.p.g` @type ^`java.util.List` @kind object;
  #L52ceda.  return v0 @kind object;
}
procedure `java.util.List` `v`(`m1.p` v1 @kind this) @signature `Lm1/p;.v:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52ceec.  v0:= v1.`m1.p.h` @type ^`java.util.List` @kind object;
  #L52cef0.  if v0 != 0 then goto L52cf02;
  #L52cef4.  v0:= new `java.util.ArrayList`;
  #L52cef8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52cefe.  v1.`m1.p.h` @type ^`java.util.List` := v0 @kind object;
  #L52cf02.  v0:= v1.`m1.p.h` @type ^`java.util.List` @kind object;
  #L52cf06.  return v0 @kind object;
}
procedure `java.util.List` `w`(`m1.p` v1 @kind this) @signature `Lm1/p;.w:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52cf18.  v0:= v1.`m1.p.e` @type ^`java.util.List` @kind object;
  #L52cf1c.  if v0 != 0 then goto L52cf2e;
  #L52cf20.  v0:= new `java.util.ArrayList`;
  #L52cf24.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52cf2a.  v1.`m1.p.e` @type ^`java.util.List` := v0 @kind object;
  #L52cf2e.  v0:= v1.`m1.p.e` @type ^`java.util.List` @kind object;
  #L52cf32.  return v0 @kind object;
}
