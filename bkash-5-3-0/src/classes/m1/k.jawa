record `m1.k` @kind class @AccessFlag PUBLIC_FINAL extends `l1.f` @kind interface, `m1.w` @kind interface {
}
global `m1.k` `@@m1.k.a` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm1/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L52c248.  v0:= new `m1.k`;
  #L52c24c.  call `<init>`(v0) @signature `Lm1/k;.<init>:()V` @kind direct;
  #L52c252.  `@@m1.k.a` @type ^`m1.k` := v0 @kind object;
  #L52c256.  return @kind void;
}
procedure `void` `<init>`(`m1.k` v0 @kind this) @signature `Lm1/k;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L52c268.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52c26e.  return @kind void;
}
procedure `java.lang.Object` `a`(`m1.k` v1 @kind this, `k1.b` v2 @kind object, `java.lang.reflect.Type` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lm1/k;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L52be84.  v0:= 0I;
  #L52be86.  call temp:= `d`(v1, v2, v3, v4, v0) @signature `Lm1/k;.d:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L52be8c.  v2:= temp @kind object;
  #L52be8e.  return v2 @kind object;
}
procedure `void` `b`(`m1.k` v17 @kind this, `m1.p` v18 @kind object, `java.lang.Object` v19 @kind object, `java.lang.Object` v20 @kind object, `java.lang.reflect.Type` v21 @kind object) @signature `Lm1/k;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L52c280.  v0:= v18 @kind object;
  #L52c284.  v1:= v19 @kind object;
  #L52c288.  v2:= v0.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52c28c.  if v1 != 0 then goto L52c298;
  #L52c290.  call `r`(v2) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52c296.  return @kind void;
  #L52c298.  v3:= v2.`m1.c0.i` @type ^`int`;
  #L52c29c.  v4:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52c2a0.  v4:= v4.`m1.b.mask` @type ^`int`;
  #L52c2a4.  v3:= v3 ^& v4 @kind int;
  #L52c2a6.  if v3 == 0 then goto L52c354;
  #L52c2aa.  call temp:= `getClass`(v19) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52c2b0.  v3:= temp @kind object;
  #L52c2b2.  v4:= v21 @kind object;
  #L52c2b6.  if v3 == v4 then goto L52c354;
  #L52c2ba.  call temp:= `getClass`(v19) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52c2c0.  v3:= temp @kind object;
  #L52c2c2.  v4:= constclass @type ^`java.util.Date` @kind object;
  #L52c2c6.  if v3 != v4 then goto L52c2f4;
  #L52c2ca.  v0:= "new Date(" @kind object;
  #L52c2ce.  call `write`(v2, v0) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52c2d4.  v0:= v1 @kind object;
  #L52c2d6.  v0:= (`java.util.Date`) v0 @kind object;
  #L52c2da.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L52c2e0.  v0:= temp @kind wide;
  #L52c2e2.  call `v`(v2, v0) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52c2e8.  v0:= 41I;
  #L52c2ec.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c2f2.  goto L52c352;
  #L52c2f4.  v3:= 123I;
  #L52c2f8.  call `write`(v2, v3) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c2fe.  v3:= "@type" @kind object;
  #L52c302.  v4:= 0I;
  #L52c304.  call `C`(v2, v3, v4) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52c30a.  call temp:= `getClass`(v19) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52c310.  v3:= temp @kind object;
  #L52c312.  call temp:= `getName`(v3) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L52c318.  v3:= temp @kind object;
  #L52c31a.  call `m`(v0, v3) @signature `Lm1/p;.m:(Ljava/lang/String;)V` @kind virtual;
  #L52c320.  v0:= 44I;
  #L52c324.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c32a.  v0:= "val" @kind object;
  #L52c32e.  call `C`(v2, v0, v4) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52c334.  v0:= v1 @kind object;
  #L52c336.  v0:= (`java.util.Date`) v0 @kind object;
  #L52c33a.  call temp:= `getTime`(v0) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L52c340.  v0:= temp @kind wide;
  #L52c342.  call `v`(v2, v0) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52c348.  v0:= 125I;
  #L52c34c.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c352.  return @kind void;
  #L52c354.  v3:= instanceof @variable v1 @type ^`java.util.Calendar` @kind boolean;
  #L52c358.  if v3 == 0 then goto L52c36a;
  #L52c35c.  v1:= (`java.util.Calendar`) v1 @kind object;
  #L52c360.  call temp:= `getTime`(v1) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L52c366.  v1:= temp @kind object;
  #L52c368.  goto L52c36e;
  #L52c36a.  v1:= (`java.util.Date`) v1 @kind object;
  #L52c36e.  v3:= v2.`m1.c0.i` @type ^`int`;
  #L52c372.  v4:= `@@m1.b.WriteDateUseDateFormat` @type ^`m1.b` @kind object;
  #L52c376.  v4:= v4.`m1.b.mask` @type ^`int`;
  #L52c37a.  v3:= v3 ^& v4 @kind int;
  #L52c37c.  if v3 == 0 then goto L52c3b8;
  #L52c380.  call temp:= `c`(v18) @signature `Lm1/p;.c:()Ljava/text/DateFormat;` @kind virtual;
  #L52c386.  v3:= temp @kind object;
  #L52c388.  if v3 != 0 then goto L52c3a8;
  #L52c38c.  v3:= new `java.text.SimpleDateFormat`;
  #L52c390.  v4:= `@@com.alibaba.fastjson.JSON.DEFFAULT_DATE_FORMAT` @type ^`java.lang.String` @kind object;
  #L52c394.  v5:= v0.`m1.p.o` @type ^`java.util.Locale` @kind object;
  #L52c398.  call `<init>`(v3, v4, v5) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;Ljava/util/Locale;)V` @kind direct;
  #L52c39e.  v0:= v0.`m1.p.n` @type ^`java.util.TimeZone` @kind object;
  #L52c3a2.  call `setTimeZone`(v3, v0) @signature `Ljava/text/DateFormat;.setTimeZone:(Ljava/util/TimeZone;)V` @kind virtual;
  #L52c3a8.  call temp:= `format`(v3, v1) @signature `Ljava/text/DateFormat;.format:(Ljava/util/Date;)Ljava/lang/String;` @kind virtual;
  #L52c3ae.  v0:= temp @kind object;
  #L52c3b0.  call `d0`(v2, v0) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52c3b6.  return @kind void;
  #L52c3b8.  call temp:= `getTime`(v1) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L52c3be.  v3:= temp @kind wide;
  #L52c3c0.  v1:= v2.`m1.c0.i` @type ^`int`;
  #L52c3c4.  v5:= `@@m1.b.UseISO8601DateFormat` @type ^`m1.b` @kind object;
  #L52c3c8.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52c3cc.  v5:= v5 ^& v1 @kind int;
  #L52c3ce.  if v5 == 0 then goto L52c55c;
  #L52c3d2.  v5:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52c3d6.  v6:= v5.`m1.b.mask` @type ^`int`;
  #L52c3da.  v1:= v1 ^& v6 @kind int;
  #L52c3dc.  v6:= 39I;
  #L52c3e0.  v7:= 34I;
  #L52c3e4.  if v1 == 0 then goto L52c3f0;
  #L52c3e8.  call `write`(v2, v6) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c3ee.  goto L52c3f6;
  #L52c3f0.  call `write`(v2, v7) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c3f6.  v1:= v0.`m1.p.n` @type ^`java.util.TimeZone` @kind object;
  #L52c3fa.  v0:= v0.`m1.p.o` @type ^`java.util.Locale` @kind object;
  #L52c3fe.  call temp:= `getInstance`(v1, v0) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;` @kind static;
  #L52c404.  v0:= temp @kind object;
  #L52c406.  call `setTimeInMillis`(v0, v3) @signature `Ljava/util/Calendar;.setTimeInMillis:(J)V` @kind virtual;
  #L52c40c.  v1:= 1I;
  #L52c40e.  call temp:= `get`(v0, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c414.  v3:= temp;
  #L52c416.  v4:= 2I;
  #L52c418.  call temp:= `get`(v0, v4) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c41e.  v4:= temp;
  #L52c420.  v4:= v4 + v1 @kind int;
  #L52c422.  v1:= 5I;
  #L52c424.  call temp:= `get`(v0, v1) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c42a.  v1:= temp;
  #L52c42c.  v8:= 11I;
  #L52c430.  call temp:= `get`(v0, v8) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c436.  v8:= temp;
  #L52c438.  v9:= 12I;
  #L52c43c.  call temp:= `get`(v0, v9) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c442.  v9:= temp;
  #L52c444.  v10:= 13I;
  #L52c448.  call temp:= `get`(v0, v10) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c44e.  v11:= temp;
  #L52c450.  v12:= 14I;
  #L52c454.  call temp:= `get`(v0, v12) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L52c45a.  v0:= temp;
  #L52c45c.  v12:= 16I;
  #L52c460.  v13:= 19I;
  #L52c464.  v7:= 10I;
  #L52c468.  if v0 == 0 then goto L52c4ba;
  #L52c46c.  v16:= "0000-00-00T00:00:00.000" @kind object;
  #L52c470.  call temp:= `toCharArray`(v16) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52c476.  v6:= temp @kind object;
  #L52c478.  v14:= (`long`) v0 @kind i2l;
  #L52c47a.  v0:= 23I;
  #L52c47e.  call `w`(v14, v0, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c484.  v14:= (`long`) v11 @kind i2l;
  #L52c486.  call `w`(v14, v13, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c48c.  v13:= (`long`) v9 @kind i2l;
  #L52c48e.  call `w`(v13, v12, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c494.  v8:= (`long`) v8 @kind i2l;
  #L52c496.  call `w`(v8, v10, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c49c.  v0:= (`long`) v1 @kind i2l;
  #L52c49e.  call `w`(v0, v7, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4a4.  v0:= (`long`) v4 @kind i2l;
  #L52c4a6.  v4:= 7I;
  #L52c4a8.  call `w`(v0, v4, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4ae.  v0:= (`long`) v3 @kind i2l;
  #L52c4b0.  v3:= 4I;
  #L52c4b2.  call `w`(v0, v3, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4b8.  goto L52c530;
  #L52c4ba.  if v11 != 0 then goto L52c4f0;
  #L52c4be.  if v9 != 0 then goto L52c4f0;
  #L52c4c2.  if v8 != 0 then goto L52c4f0;
  #L52c4c6.  v0:= "0000-00-00" @kind object;
  #L52c4ca.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52c4d0.  v6:= temp @kind object;
  #L52c4d2.  v0:= (`long`) v1 @kind i2l;
  #L52c4d4.  call `w`(v0, v7, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4da.  v0:= (`long`) v4 @kind i2l;
  #L52c4dc.  v4:= 7I;
  #L52c4de.  call `w`(v0, v4, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4e4.  v0:= (`long`) v3 @kind i2l;
  #L52c4e6.  v3:= 4I;
  #L52c4e8.  call `w`(v0, v3, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c4ee.  goto L52c530;
  #L52c4f0.  v0:= "0000-00-00T00:00:00" @kind object;
  #L52c4f4.  call temp:= `toCharArray`(v0) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L52c4fa.  v6:= temp @kind object;
  #L52c4fc.  v14:= (`long`) v11 @kind i2l;
  #L52c4fe.  call `w`(v14, v13, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c504.  v13:= (`long`) v9 @kind i2l;
  #L52c506.  call `w`(v13, v12, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c50c.  v8:= (`long`) v8 @kind i2l;
  #L52c50e.  call `w`(v8, v10, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c514.  v0:= (`long`) v1 @kind i2l;
  #L52c516.  call `w`(v0, v7, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c51c.  v0:= (`long`) v4 @kind i2l;
  #L52c51e.  v4:= 7I;
  #L52c520.  call `w`(v0, v4, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c526.  v0:= (`long`) v3 @kind i2l;
  #L52c528.  v3:= 4I;
  #L52c52a.  call `w`(v0, v3, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52c530.  call `write`(v2, v6) @signature `Ljava/io/Writer;.write:([C)V` @kind virtual;
  #L52c536.  v0:= v2.`m1.c0.i` @type ^`int`;
  #L52c53a.  v1:= v5.`m1.b.mask` @type ^`int`;
  #L52c53e.  v0:= v0 ^& v1 @kind int;
  #L52c540.  if v0 == 0 then goto L52c550;
  #L52c544.  v0:= 39I;
  #L52c548.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c54e.  goto L52c562;
  #L52c550.  v0:= 34I;
  #L52c554.  call `write`(v2, v0) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52c55a.  goto L52c562;
  #L52c55c.  call `v`(v2, v3) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52c562.  return @kind void;
}
procedure `java.lang.Object` `c`(`m1.k` v2 @kind this, `k1.b` v3 @kind object, `java.lang.reflect.Type` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.String` v7 @kind object) @signature `Lm1/k;.c:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L52bea0.  v5:= 0I;
  #L52bea2.  if v6 != 0 then goto L52bea8;
  #L52bea6.  return v5 @kind object;
  #L52bea8.  v0:= instanceof @variable v6 @type ^`java.util.Date` @kind boolean;
  #L52beac.  if v0 == 0 then goto L52beb2;
  #L52beb0.  return v6 @kind object;
  #L52beb2.  v0:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L52beb6.  if v0 == 0 then goto L52bed2;
  #L52beba.  v3:= new `java.util.Date`;
  #L52bebe.  v6:= (`java.lang.Number`) v6 @kind object;
  #L52bec2.  call temp:= `longValue`(v6) @signature `Ljava/lang/Number;.longValue:()J` @kind virtual;
  #L52bec8.  v4:= temp @kind wide;
  #L52beca.  call `<init>`(v3, v4) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L52bed0.  return v3 @kind object;
  #L52bed2.  v0:= instanceof @variable v6 @type ^`java.lang.String` @kind boolean;
  #L52bed6.  if v0 == 0 then goto L52bfa0;
  #L52beda.  v6:= (`java.lang.String`) v6 @kind object;
  #L52bede.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52bee4.  v0:= temp;
  #L52bee6.  if v0 != 0 then goto L52beec;
  #L52beea.  return v5 @kind object;
  #L52beec.  v0:= new `k1.e`;
  #L52bef0.  call `<init>`(v0, v6) @signature `Lk1/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52bef6.  v1:= 0I;
  #L52bef8.  call temp:= `x`(v0, v1) @signature `Lk1/e;.x:(Z)Z` @kind virtual;
  #L52befe.  v1:= temp;
  #L52bf00.  if v1 == 0 then goto L52bf28;
  #L52bf04.  v3:= v0.`k1.e.o` @type ^`java.util.Calendar` @kind object;
  #L52bf08.  v5:= constclass @type ^`java.util.Calendar` @kind object;
  #L52bf0c.  if v4 != v5 then goto L52bf18;
  #L52bf10.  call `u`(v0) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52bf16.  return v3 @kind object;
  #L52bf18.  call temp:= `getTime`(v3) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L52bf1e.  v3:= temp @kind object;
  #L52bf20.  call `u`(v0) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52bf26.  return v3 @kind object;
  #L52bf28.  call `u`(v0) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52bf2e.  v4:= "0000-00-00" @kind object;
  #L52bf32.  call temp:= `equals`(v4, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L52bf38.  v4:= temp;
  #L52bf3a.  if v4 != 0 then goto L52bf94;
  #L52bf3e.  v4:= "0000-00-00T00:00:00" @kind object;
  #L52bf42.  call temp:= `equalsIgnoreCase`(v4, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L52bf48.  v4:= temp;
  #L52bf4a.  if v4 != 0 then goto L52bf94;
  #L52bf4e.  v4:= "0001-01-01T00:00:00+08:00" @kind object;
  #L52bf52.  call temp:= `equalsIgnoreCase`(v4, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L52bf58.  v4:= temp;
  #L52bf5a.  if v4 == 0 then goto L52bf60;
  #L52bf5e.  goto L52bf94;
  #L52bf60.  if v7 == 0 then goto L52bf70;
  #L52bf64.  v3:= new `java.text.SimpleDateFormat`;
  #L52bf68.  call `<init>`(v3, v7) @signature `Ljava/text/SimpleDateFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52bf6e.  goto L52bf78;
  #L52bf70.  call temp:= `s`(v3) @signature `Lk1/b;.s:()Ljava/text/DateFormat;` @kind virtual;
  #L52bf76.  v3:= temp @kind object;
  #L52bf78.  call temp:= `parse`(v3, v6) @signature `Ljava/text/DateFormat;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind virtual;
  #L52bf7e.  v3:= temp @kind object;
  #L52bf80.  return v3 @kind object;
  #L52bf82.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L52bf88.  v3:= temp @kind wide;
  #L52bf8a.  v5:= new `java.util.Date`;
  #L52bf8e.  call `<init>`(v5, v3) @signature `Ljava/util/Date;.<init>:(J)V` @kind direct;
  #L52bf94.  return v5 @kind object;
  #L52bf96.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52bf98.  call `u`(v0) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52bf9e.  throw v3;
  #L52bfa0.  v3:= new `com.alibaba.fastjson.c`;
  #L52bfa4.  v4:= "parse error" @kind object;
  #L52bfa8.  call `<init>`(v3, v4) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52bfae.  throw v3;
  catch `java.lang.Throwable` @[L52bef8..L52bf0c] goto L52bf96;
  catch `java.lang.Throwable` @[L52bf18..L52bf20] goto L52bf96;
  catch `java.text.ParseException` @[L52bf78..L52bf80] goto L52bf82;
}
procedure `java.lang.Object` `d`(`m1.k` v10 @kind this, `k1.b` v11 @kind object, `java.lang.reflect.Type` v12 @kind object, `java.lang.Object` v13 @kind object, `java.lang.String` v14 @kind object) @signature `Lm1/k;.d:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L52bfe0.  v0:= v11.`k1.b.k` @type ^`k1.e` @kind object;
  #L52bfe4.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52bfea.  v1:= temp;
  #L52bfec.  v2:= 0I;
  #L52bfee.  v3:= 2I;
  #L52bff0.  v4:= 16I;
  #L52bff4.  if v1 != v3 then goto L52c014;
  #L52bff8.  call temp:= `c0`(v0) @signature `Lk1/e;.c0:()J` @kind virtual;
  #L52bffe.  v5:= temp @kind wide;
  #L52c000.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52c006.  v1:= temp @kind object;
  #L52c008.  call `v`(v0, v4) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52c00e.  v7:= v1 @kind object;
  #L52c010.  goto L52c1f0;
  #L52c014.  v5:= 4I;
  #L52c016.  if v1 != v5 then goto L52c076;
  #L52c01a.  call temp:= `S`(v0) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L52c020.  v1:= temp @kind object;
  #L52c022.  call `v`(v0, v4) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52c028.  v3:= v0.`k1.e.c` @type ^`int`;
  #L52c02c.  v4:= `@@k1.d.AllowISO8601DateFormat` @type ^`k1.d` @kind object;
  #L52c030.  v4:= v4.`k1.d.mask` @type ^`int`;
  #L52c034.  v3:= v3 ^& v4 @kind int;
  #L52c036.  if v3 == 0 then goto L52c00e;
  #L52c03a.  v3:= new `k1.e`;
  #L52c03e.  call `<init>`(v3, v1) @signature `Lk1/e;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52c044.  v4:= 1I;
  #L52c046.  call temp:= `x`(v3, v4) @signature `Lk1/e;.x:(Z)Z` @kind virtual;
  #L52c04c.  v4:= temp;
  #L52c04e.  if v4 == 0 then goto L52c06e;
  #L52c052.  v1:= v3.`k1.e.o` @type ^`java.util.Calendar` @kind object;
  #L52c056.  v4:= constclass @type ^`java.util.Calendar` @kind object;
  #L52c05a.  if v12 != v4 then goto L52c066;
  #L52c05e.  call `u`(v3) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52c064.  return v1 @kind object;
  #L52c066.  call temp:= `getTime`(v1) @signature `Ljava/util/Calendar;.getTime:()Ljava/util/Date;` @kind virtual;
  #L52c06c.  v1:= temp @kind object;
  #L52c06e.  call `u`(v3) @signature `Lk1/e;.u:()V` @kind virtual;
  #L52c074.  goto L52c00e;
  #L52c076.  v6:= 8I;
  #L52c07a.  if v1 != v6 then goto L52c08a;
  #L52c07e.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52c084.  v7:= v2 @kind object;
  #L52c086.  goto L52c1f0;
  #L52c08a.  v6:= 12I;
  #L52c08e.  v7:= 13I;
  #L52c092.  v8:= 17I;
  #L52c096.  v9:= "syntax error" @kind object;
  #L52c09a.  if v1 != v6 then goto L52c176;
  #L52c09e.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52c0a4.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52c0aa.  v1:= temp;
  #L52c0ac.  if v1 != v5 then goto L52c16a;
  #L52c0b0.  call temp:= `S`(v0) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L52c0b6.  v1:= temp @kind object;
  #L52c0b8.  v6:= "@type" @kind object;
  #L52c0bc.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L52c0c2.  v1:= temp;
  #L52c0c4.  if v1 == 0 then goto L52c0fe;
  #L52c0c8.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52c0ce.  call `w`(v11, v8) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c0d4.  call temp:= `S`(v0) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L52c0da.  v1:= temp @kind object;
  #L52c0dc.  v6:= v11.`k1.b.h` @type ^`k1.m` @kind object;
  #L52c0e0.  v8:= v0.`k1.e.c` @type ^`int`;
  #L52c0e4.  call temp:= `a`(v6, v1, v2, v8) @signature `Lk1/m;.a:(Ljava/lang/String;Ljava/lang/Class;I)Ljava/lang/Class;` @kind virtual;
  #L52c0ea.  v1:= temp @kind object;
  #L52c0ec.  if v1 == 0 then goto L52c0f2;
  #L52c0f0.  v12:= v1 @kind object;
  #L52c0f2.  call `w`(v11, v5) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c0f8.  call `w`(v11, v4) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c0fe.  v1:= 58I;
  #L52c102.  call `g`(v0, v1) @signature `Lk1/e;.g:(C)V` @kind virtual;
  #L52c108.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52c10e.  v1:= temp;
  #L52c110.  if v1 != v3 then goto L52c134;
  #L52c114.  call temp:= `c0`(v0) @signature `Lk1/e;.c0:()J` @kind virtual;
  #L52c11a.  v3:= temp @kind wide;
  #L52c11c.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52c122.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52c128.  v1:= temp @kind object;
  #L52c12a.  call `w`(v11, v7) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c130.  goto L52c00e;
  #L52c134.  v11:= new `com.alibaba.fastjson.c`;
  #L52c138.  v12:= new `java.lang.StringBuilder`;
  #L52c13c.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L52c142.  v13:= "syntax error : " @kind object;
  #L52c146.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52c14c.  call temp:= `a`(v1) @signature `Lk1/f;.a:(I)Ljava/lang/String;` @kind static;
  #L52c152.  v13:= temp @kind object;
  #L52c154.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52c15a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L52c160.  v12:= temp @kind object;
  #L52c162.  call `<init>`(v11, v12) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52c168.  throw v11;
  #L52c16a.  v11:= new `com.alibaba.fastjson.c`;
  #L52c16e.  call `<init>`(v11, v9) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52c174.  throw v11;
  #L52c176.  v1:= v11.`k1.b.p` @type ^`int`;
  #L52c17a.  if v1 != v3 then goto L52c1e4;
  #L52c17e.  v1:= 0I;
  #L52c180.  v11.`k1.b.p` @type ^`int` := v1;
  #L52c184.  call `w`(v11, v4) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c18a.  call temp:= `b`(v0) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52c190.  v1:= temp;
  #L52c192.  if v1 != v5 then goto L52c1d8;
  #L52c196.  call temp:= `S`(v0) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L52c19c.  v1:= temp @kind object;
  #L52c19e.  v3:= "val" @kind object;
  #L52c1a2.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L52c1a8.  v1:= temp;
  #L52c1aa.  if v1 == 0 then goto L52c1cc;
  #L52c1ae.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52c1b4.  call `w`(v11, v8) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c1ba.  call temp:= `E0`(v11) @signature `Lk1/b;.E0:()Ljava/lang/Object;` @kind virtual;
  #L52c1c0.  v1:= temp @kind object;
  #L52c1c2.  call `w`(v11, v7) @signature `Lk1/b;.w:(I)V` @kind virtual;
  #L52c1c8.  goto L52c00e;
  #L52c1cc.  v11:= new `com.alibaba.fastjson.c`;
  #L52c1d0.  call `<init>`(v11, v9) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52c1d6.  throw v11;
  #L52c1d8.  v11:= new `com.alibaba.fastjson.c`;
  #L52c1dc.  call `<init>`(v11, v9) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52c1e2.  throw v11;
  #L52c1e4.  call temp:= `E0`(v11) @signature `Lk1/b;.E0:()Ljava/lang/Object;` @kind virtual;
  #L52c1ea.  v1:= temp @kind object;
  #L52c1ec.  goto L52c00e;
  #L52c1f0.  v3:= v10 @kind object;
  #L52c1f2.  v4:= v11 @kind object;
  #L52c1f4.  v5:= v12 @kind object;
  #L52c1f6.  v6:= v13 @kind object;
  #L52c1f8.  v8:= v14 @kind object;
  #L52c1fa.  call temp:= `c`(v3, v4, v5, v6, v7, v8) @signature `Lm1/k;.c:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L52c200.  v11:= temp @kind object;
  #L52c202.  v13:= constclass @type ^`java.util.Calendar` @kind object;
  #L52c206.  if v12 != v13 then goto L52c236;
  #L52c20a.  v12:= instanceof @variable v11 @type ^`java.util.Calendar` @kind boolean;
  #L52c20e.  if v12 == 0 then goto L52c214;
  #L52c212.  return v11 @kind object;
  #L52c214.  v11:= (`java.util.Date`) v11 @kind object;
  #L52c218.  if v11 != 0 then goto L52c21e;
  #L52c21c.  return v2 @kind object;
  #L52c21e.  v12:= v0.`k1.e.m` @type ^`java.util.TimeZone` @kind object;
  #L52c222.  v13:= v0.`k1.e.n` @type ^`java.util.Locale` @kind object;
  #L52c226.  call temp:= `getInstance`(v12, v13) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;Ljava/util/Locale;)Ljava/util/Calendar;` @kind static;
  #L52c22c.  v12:= temp @kind object;
  #L52c22e.  call `setTime`(v12, v11) @signature `Ljava/util/Calendar;.setTime:(Ljava/util/Date;)V` @kind virtual;
  #L52c234.  return v12 @kind object;
  #L52c236.  return v11 @kind object;
}
