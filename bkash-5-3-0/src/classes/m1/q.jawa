record `m1.q` @kind class @AccessFlag PUBLIC extends `m1.w` @kind interface {
  `m1.m`[] `m1.q.a` @AccessFlag PRIVATE_FINAL;
  `m1.m`[] `m1.q.b` @AccessFlag PRIVATE_FINAL;
  `int` `m1.q.c` @AccessFlag PROTECTED;
  `java.lang.String` `m1.q.d` @AccessFlag PROTECTED_FINAL;
  `java.lang.String` `m1.q.e` @AccessFlag PROTECTED_FINAL;
}
global `char`[] `@@m1.q.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `char`[] `@@m1.q.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm1/q;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L52d364.  v0:= 4I;
  #L52d366.  v0:= new `char`[v0];
  #L52d36a.  goto L52d388;
  #L52d370.  `@@m1.q.f` @type ^`char`[] := v0 @kind object;
  #L52d374.  v0:= 5I;
  #L52d376.  v0:= new `char`[v0];
  #L52d37a.  goto L52d398;
  #L52d380.  `@@m1.q.g` @type ^`char`[] := v0 @kind object;
  #L52d384.  return @kind void;
  #L52d386.  
  #L52d388.  v0:= (116I, 114I, 117I, 101I) @kind object;
  #L52d397.  goto L52d370;
  #L52d398.  v0:= (102I, 97I, 108I, 115I, 101I) @kind object;
  #L52d3a9.  goto L52d380;
}
procedure `void` `<init>`(`m1.q` v15 @kind this, `java.lang.Class` v16 @kind object, `int` v17 , `java.util.Map` v18 @kind object, `boolean` v19 , `boolean` v20 , `boolean` v21 , `boolean` v22 , `com.alibaba.fastjson.e` v23 @kind object) @signature `Lm1/q;.<init>:(Ljava/lang/Class;ILjava/util/Map;ZZZZLcom/alibaba/fastjson/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L52d3ec.  v0:= v15 @kind object;
  #L52d3ee.  call `<init>`(v15) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52d3f4.  v1:= 0I;
  #L52d3f6.  v0.`m1.q.c` @type ^`int` := v1;
  #L52d3fa.  v2:= 0I;
  #L52d3fc.  if v20 == 0 then goto L52d416;
  #L52d400.  v3:= constclass @type ^`com.alibaba.fastjson.annotation.JSONType` @kind object;
  #L52d404.  v13:= v16 @kind object;
  #L52d408.  call temp:= `getAnnotation`(v13, v3) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L52d40e.  v3:= temp @kind object;
  #L52d410.  v3:= (`com.alibaba.fastjson.annotation.JSONType`) v3 @kind object;
  #L52d414.  goto L52d41c;
  #L52d416.  v13:= v16 @kind object;
  #L52d41a.  v3:= v2 @kind object;
  #L52d41c.  if v3 == 0 then goto L52d50e;
  #L52d420.  call temp:= `serialzeFeatures`(v3) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.serialzeFeatures:()[Lm1/b;` @kind interface;
  #L52d426.  v4:= temp @kind object;
  #L52d428.  call temp:= `of`(v4) @signature `Lm1/b;.of:([Lm1/b;)I` @kind static;
  #L52d42e.  v4:= temp;
  #L52d430.  v0.`m1.q.c` @type ^`int` := v4;
  #L52d434.  call temp:= `typeName`(v3) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.typeName:()Ljava/lang/String;` @kind interface;
  #L52d43a.  v4:= temp @kind object;
  #L52d43c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52d442.  v5:= temp;
  #L52d444.  if v5 != 0 then goto L52d44e;
  #L52d448.  v4:= v2 @kind object;
  #L52d44a.  v6:= v4 @kind object;
  #L52d44c.  goto L52d4f0;
  #L52d44e.  call temp:= `getSuperclass`(v16) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L52d454.  v5:= temp @kind object;
  #L52d456.  v6:= v2 @kind object;
  #L52d458.  if v5 == 0 then goto L52d49a;
  #L52d45c.  v7:= constclass @type ^`java.lang.Object` @kind object;
  #L52d460.  if v5 == v7 then goto L52d49a;
  #L52d464.  v7:= constclass @type ^`com.alibaba.fastjson.annotation.JSONType` @kind object;
  #L52d468.  call temp:= `getAnnotation`(v5, v7) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L52d46e.  v7:= temp @kind object;
  #L52d470.  v7:= (`com.alibaba.fastjson.annotation.JSONType`) v7 @kind object;
  #L52d474.  if v7 != 0 then goto L52d47a;
  #L52d478.  goto L52d49a;
  #L52d47a.  call temp:= `typeKey`(v7) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.typeKey:()Ljava/lang/String;` @kind interface;
  #L52d480.  v6:= temp @kind object;
  #L52d482.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52d488.  v7:= temp;
  #L52d48a.  if v7 == 0 then goto L52d490;
  #L52d48e.  goto L52d49a;
  #L52d490.  call temp:= `getSuperclass`(v5) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L52d496.  v5:= temp @kind object;
  #L52d498.  goto L52d458;
  #L52d49a.  call temp:= `getInterfaces`(v16) @signature `Ljava/lang/Class;.getInterfaces:()[Ljava/lang/Class;` @kind virtual;
  #L52d4a0.  v5:= temp @kind object;
  #L52d4a2.  v7:= length @variable v5;
  #L52d4a4.  v8:= 0I;
  #L52d4a6.  if v8 >= v7 then goto L52d4de;
  #L52d4aa.  v9:= v5[v8] @kind object;
  #L52d4ae.  v10:= constclass @type ^`com.alibaba.fastjson.annotation.JSONType` @kind object;
  #L52d4b2.  call temp:= `getAnnotation`(v9, v10) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L52d4b8.  v9:= temp @kind object;
  #L52d4ba.  v9:= (`com.alibaba.fastjson.annotation.JSONType`) v9 @kind object;
  #L52d4be.  if v9 == 0 then goto L52d4d8;
  #L52d4c2.  call temp:= `typeKey`(v9) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.typeKey:()Ljava/lang/String;` @kind interface;
  #L52d4c8.  v6:= temp @kind object;
  #L52d4ca.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52d4d0.  v9:= temp;
  #L52d4d2.  if v9 == 0 then goto L52d4d8;
  #L52d4d6.  goto L52d4de;
  #L52d4d8.  v8:= v8 + 1;
  #L52d4dc.  goto L52d4a6;
  #L52d4de.  if v6 == 0 then goto L52d4f0;
  #L52d4e2.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52d4e8.  v5:= temp;
  #L52d4ea.  if v5 != 0 then goto L52d4f0;
  #L52d4ee.  v6:= v2 @kind object;
  #L52d4f0.  if v23 != 0 then goto L52d508;
  #L52d4f4.  call temp:= `naming`(v3) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.naming:()Lcom/alibaba/fastjson/e;` @kind interface;
  #L52d4fa.  v5:= temp @kind object;
  #L52d4fc.  v7:= `@@com.alibaba.fastjson.e.CamelCase` @type ^`com.alibaba.fastjson.e` @kind object;
  #L52d500.  if v5 == v7 then goto L52d508;
  #L52d504.  v14:= v5 @kind object;
  #L52d506.  goto L52d516;
  #L52d508.  v14:= v23 @kind object;
  #L52d50c.  goto L52d516;
  #L52d50e.  v14:= v23 @kind object;
  #L52d512.  v4:= v2 @kind object;
  #L52d514.  v6:= v4 @kind object;
  #L52d516.  v0.`m1.q.d` @type ^`java.lang.String` := v4 @kind object;
  #L52d51a.  v0.`m1.q.e` @type ^`java.lang.String` := v6 @kind object;
  #L52d51e.  v9:= 0I;
  #L52d520.  v4:= v16 @kind object;
  #L52d524.  v5:= v17;
  #L52d528.  v6:= v19;
  #L52d52c.  v7:= v3 @kind object;
  #L52d52e.  v8:= v18 @kind object;
  #L52d532.  v10:= v21;
  #L52d536.  v11:= v22;
  #L52d53a.  v12:= v14 @kind object;
  #L52d53c.  call temp:= `m`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Ln1/d;.m:(Ljava/lang/Class;IZLcom/alibaba/fastjson/annotation/JSONType;Ljava/util/Map;ZZZLcom/alibaba/fastjson/e;)Ljava/util/List;` @kind static;
  #L52d542.  v4:= temp @kind object;
  #L52d544.  v5:= new `java.util.ArrayList`;
  #L52d548.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52d54e.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52d554.  v4:= temp @kind object;
  #L52d556.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52d55c.  v6:= temp;
  #L52d55e.  if v6 == 0 then goto L52d580;
  #L52d562.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52d568.  v6:= temp @kind object;
  #L52d56a.  v6:= (`n1.a`) v6 @kind object;
  #L52d56e.  v7:= new `m1.m`;
  #L52d572.  call `<init>`(v7, v6) @signature `Lm1/m;.<init>:(Ln1/a;)V` @kind direct;
  #L52d578.  call temp:= `add`(v5, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L52d57e.  goto L52d556;
  #L52d580.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L52d586.  v4:= temp;
  #L52d588.  v4:= new `m1.m`[v4];
  #L52d58c.  call temp:= `toArray`(v5, v4) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L52d592.  v4:= temp @kind object;
  #L52d594.  v4:= (`m1.m`[]) v4 @kind object;
  #L52d598.  v0.`m1.q.a` @type ^`m1.m`[] := v4 @kind object;
  #L52d59c.  if v3 == 0 then goto L52d5a8;
  #L52d5a0.  call temp:= `orders`(v3) @signature `Lcom/alibaba/fastjson/annotation/JSONType;.orders:()[Ljava/lang/String;` @kind interface;
  #L52d5a6.  v2:= temp @kind object;
  #L52d5a8.  if v2 == 0 then goto L52d632;
  #L52d5ac.  v2:= length @variable v2;
  #L52d5ae.  if v2 == 0 then goto L52d632;
  #L52d5b2.  v9:= 1I;
  #L52d5b4.  v4:= v16 @kind object;
  #L52d5b8.  v5:= v17;
  #L52d5bc.  v6:= v19;
  #L52d5c0.  v7:= v3 @kind object;
  #L52d5c2.  v8:= v18 @kind object;
  #L52d5c6.  v10:= v21;
  #L52d5ca.  v11:= v22;
  #L52d5ce.  v12:= v14 @kind object;
  #L52d5d0.  call temp:= `m`(v4, v5, v6, v7, v8, v9, v10, v11, v12) @signature `Ln1/d;.m:(Ljava/lang/Class;IZLcom/alibaba/fastjson/annotation/JSONType;Ljava/util/Map;ZZZLcom/alibaba/fastjson/e;)Ljava/util/List;` @kind static;
  #L52d5d6.  v1:= temp @kind object;
  #L52d5d8.  v2:= new `java.util.ArrayList`;
  #L52d5dc.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L52d5e2.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52d5e8.  v1:= temp @kind object;
  #L52d5ea.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52d5f0.  v3:= temp;
  #L52d5f2.  if v3 == 0 then goto L52d614;
  #L52d5f6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52d5fc.  v3:= temp @kind object;
  #L52d5fe.  v3:= (`n1.a`) v3 @kind object;
  #L52d602.  v4:= new `m1.m`;
  #L52d606.  call `<init>`(v4, v3) @signature `Lm1/m;.<init>:(Ln1/a;)V` @kind direct;
  #L52d60c.  call temp:= `add`(v2, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L52d612.  goto L52d5ea;
  #L52d614.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L52d61a.  v1:= temp;
  #L52d61c.  v1:= new `m1.m`[v1];
  #L52d620.  call temp:= `toArray`(v2, v1) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L52d626.  v1:= temp @kind object;
  #L52d628.  v1:= (`m1.m`[]) v1 @kind object;
  #L52d62c.  v0.`m1.q.b` @type ^`m1.m`[] := v1 @kind object;
  #L52d630.  goto L52d65c;
  #L52d632.  v2:= length @variable v4;
  #L52d634.  v2:= new `m1.m`[v2];
  #L52d638.  v3:= length @variable v4;
  #L52d63a.  call `arraycopy`(v4, v1, v2, v1, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L52d640.  call `sort`(v2) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;)V` @kind static;
  #L52d646.  call temp:= `equals`(v2, v4) @signature `Ljava/util/Arrays;.equals:([Ljava/lang/Object;[Ljava/lang/Object;)Z` @kind static;
  #L52d64c.  v1:= temp;
  #L52d64e.  if v1 == 0 then goto L52d658;
  #L52d652.  v0.`m1.q.b` @type ^`m1.m`[] := v4 @kind object;
  #L52d656.  goto L52d65c;
  #L52d658.  v0.`m1.q.b` @type ^`m1.m`[] := v2 @kind object;
  #L52d65c.  return @kind void;
}
procedure `void` `<init>`(`m1.q` v9 @kind this, `java.lang.Class` v10 @kind object, `com.alibaba.fastjson.e` v11 @kind object) @signature `Lm1/q;.<init>:(Ljava/lang/Class;Lcom/alibaba/fastjson/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L52d3bc.  call temp:= `getModifiers`(v10) @signature `Ljava/lang/Class;.getModifiers:()I` @kind virtual;
  #L52d3c2.  v2:= temp;
  #L52d3c4.  v3:= 0I;
  #L52d3c6.  v4:= 0I;
  #L52d3c8.  v5:= 1I;
  #L52d3ca.  v6:= 1I;
  #L52d3cc.  v7:= 1I;
  #L52d3ce.  v0:= v9 @kind object;
  #L52d3d0.  v1:= v10 @kind object;
  #L52d3d2.  v8:= v11 @kind object;
  #L52d3d4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lm1/q;.<init>:(Ljava/lang/Class;ILjava/util/Map;ZZZZLcom/alibaba/fastjson/e;)V` @kind direct;
  #L52d3da.  return @kind void;
}
procedure `java.util.Map` `a`(`m1.q` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lm1/q;.a:(Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L52d314.  v0:= new `java.util.LinkedHashMap`;
  #L52d318.  v1:= v6.`m1.q.b` @type ^`m1.m`[] @kind object;
  #L52d31c.  v1:= length @variable v1;
  #L52d31e.  call `<init>`(v0, v1) @signature `Ljava/util/LinkedHashMap;.<init>:(I)V` @kind direct;
  #L52d324.  v1:= v6.`m1.q.b` @type ^`m1.m`[] @kind object;
  #L52d328.  v2:= length @variable v1;
  #L52d32a.  v3:= 0I;
  #L52d32c.  if v3 >= v2 then goto L52d350;
  #L52d330.  v4:= v1[v3] @kind object;
  #L52d334.  v5:= v4.`m1.m.g` @type ^`n1.a` @kind object;
  #L52d338.  v5:= v5.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L52d33c.  call temp:= `b`(v4, v7) @signature `Lm1/m;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52d342.  v4:= temp @kind object;
  #L52d344.  call temp:= `put`(v0, v5, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L52d34a.  v3:= v3 + 1;
  #L52d34e.  goto L52d32c;
  #L52d350.  return v0 @kind object;
}
procedure `void` `b`(`m1.q` v37 @kind this, `m1.p` v38 @kind object, `java.lang.Object` v39 @kind object, `java.lang.Object` v40 @kind object, `java.lang.reflect.Type` v41 @kind object) @signature `Lm1/q;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;
    v32;
    v33;
    v34;
    v35;
    v36;

  #L52d670.  v1:= v37 @kind object;
  #L52d674.  v2:= v38 @kind object;
  #L52d678.  v3:= v39 @kind object;
  #L52d67c.  v4:= v40 @kind object;
  #L52d680.  v5:= v41 @kind object;
  #L52d684.  v6:= constclass @type ^`java.lang.String` @kind object;
  #L52d688.  v7:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52d68c.  if v3 != 0 then goto L52d698;
  #L52d690.  call `r`(v7) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52d696.  return @kind void;
  #L52d698.  v8:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52d69c.  if v8 == 0 then goto L52d6b2;
  #L52d6a0.  v8:= v8.`m1.z.d` @type ^`int`;
  #L52d6a4.  v9:= `@@m1.b.DisableCircularReferenceDetect` @type ^`m1.b` @kind object;
  #L52d6a8.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52d6ac.  v8:= v8 ^& v9 @kind int;
  #L52d6ae.  if v8 != 0 then goto L52d6ce;
  #L52d6b2.  v8:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d6b6.  if v8 == 0 then goto L52d6ce;
  #L52d6ba.  call temp:= `containsKey`(v8, v3) @signature `Ljava/util/IdentityHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L52d6c0.  v8:= temp;
  #L52d6c2.  if v8 == 0 then goto L52d6ce;
  #L52d6c6.  call `d`(v38, v39) @signature `Lm1/p;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L52d6cc.  return @kind void;
  #L52d6ce.  v8:= v7.`m1.c0.i` @type ^`int`;
  #L52d6d2.  v9:= `@@m1.b.SortField` @type ^`m1.b` @kind object;
  #L52d6d6.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52d6da.  v9:= v9 ^& v8 @kind int;
  #L52d6dc.  if v9 == 0 then goto L52d6e6;
  #L52d6e0.  v9:= v1.`m1.q.b` @type ^`m1.m`[] @kind object;
  #L52d6e4.  goto L52d6ea;
  #L52d6e6.  v9:= v1.`m1.q.a` @type ^`m1.m`[] @kind object;
  #L52d6ea.  v10:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52d6ee.  v11:= `@@m1.b.DisableCircularReferenceDetect` @type ^`m1.b` @kind object;
  #L52d6f2.  v11:= v11.`m1.b.mask` @type ^`int`;
  #L52d6f6.  v8:= v8 ^& v11 @kind int;
  #L52d6f8.  if v8 != 0 then goto L52d732;
  #L52d6fc.  v8:= new `m1.z`;
  #L52d700.  v11:= v1.`m1.q.c` @type ^`int`;
  #L52d704.  call `<init>`(v8, v10, v3, v4, v11) @signature `Lm1/z;.<init>:(Lm1/z;Ljava/lang/Object;Ljava/lang/Object;I)V` @kind direct;
  #L52d70a.  v2.`m1.p.m` @type ^`m1.z` := v8 @kind object;
  #L52d70e.  v8:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d712.  if v8 != 0 then goto L52d724;
  #L52d716.  v8:= new `java.util.IdentityHashMap`;
  #L52d71a.  call `<init>`(v8) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L52d720.  v2.`m1.p.l` @type ^`java.util.IdentityHashMap` := v8 @kind object;
  #L52d724.  v8:= v2.`m1.p.l` @type ^`java.util.IdentityHashMap` @kind object;
  #L52d728.  v11:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52d72c.  call temp:= `put`(v8, v3, v11) @signature `Ljava/util/IdentityHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52d732.  v8:= v1.`m1.q.c` @type ^`int`;
  #L52d736.  v11:= `@@m1.b.BeanToArray` @type ^`m1.b` @kind object;
  #L52d73a.  v11:= v11.`m1.b.mask` @type ^`int`;
  #L52d73e.  v8:= v8 ^& v11 @kind int;
  #L52d740.  v13:= 1I;
  #L52d742.  if v8 != 0 then goto L52d756;
  #L52d746.  v8:= v7.`m1.c0.i` @type ^`int`;
  #L52d74a.  v8:= v8 ^& v11 @kind int;
  #L52d74c.  if v8 == 0 then goto L52d752;
  #L52d750.  goto L52d756;
  #L52d752.  v8:= 0I;
  #L52d754.  goto L52d758;
  #L52d756.  v8:= 1I;
  #L52d758.  if v8 == 0 then goto L52d762;
  #L52d75c.  v11:= 91I;
  #L52d760.  goto L52d766;
  #L52d762.  v11:= 123I;
  #L52d766.  if v8 == 0 then goto L52d770;
  #L52d76a.  v14:= 93I;
  #L52d76e.  goto L52d774;
  #L52d770.  v14:= 125I;
  #L52d774.  v15:= v7.`m1.c0.h` @type ^`int`;
  #L52d778.  v15:= v15 + v13 @kind int;
  #L52d77a.  v13:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52d77e.  v13:= length @variable v13;
  #L52d780.  if v15 <= v13 then goto L52d7b2;
  #L52d784.  v13:= v7.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52d788.  if v13 != 0 then goto L52d794;
  #L52d78c.  call `s`(v7, v15) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52d792.  goto L52d7b2;
  #L52d794.  call `flush`(v7) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52d79a.  v15:= 1I;
  #L52d79c.  goto L52d7b2;
  #L52d79e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52d7a0.  v4:= v0 @kind object;
  #L52d7a2.  v3:= v10 @kind object;
  #L52d7a4.  goto L52e2f2;
  #L52d7a8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L52d7aa.  v4:= v0 @kind object;
  #L52d7ac.  v3:= v10 @kind object;
  #L52d7ae.  goto L52e2ae;
  #L52d7b2.  v13:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52d7b6.  v12:= v7.`m1.c0.h` @type ^`int`;
  #L52d7ba.  v13[v12]:= v11 @kind char;
  #L52d7be.  v7.`m1.c0.h` @type ^`int` := v15;
  #L52d7c2.  v11:= length @variable v9;
  #L52d7c4.  if v11 <= 0 then goto L52d7e6;
  #L52d7c8.  v11:= v7.`m1.c0.i` @type ^`int`;
  #L52d7cc.  v12:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52d7d0.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52d7d4.  v11:= v11 ^& v12 @kind int;
  #L52d7d6.  if v11 == 0 then goto L52d7e6;
  #L52d7da.  call `p`(v38) @signature `Lm1/p;.p:()V` @kind virtual;
  #L52d7e0.  call `r`(v38) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52d7e6.  v11:= v1.`m1.q.c` @type ^`int`;
  #L52d7ea.  v12:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52d7ee.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52d7f2.  v11:= v11 ^& v12 @kind int;
  #L52d7f4.  if v11 != 0 then goto L52d82a;
  #L52d7f8.  v11:= v7.`m1.c0.i` @type ^`int`;
  #L52d7fc.  v12:= v12 ^& v11 @kind int;
  #L52d7fe.  if v12 == 0 then goto L52d826;
  #L52d802.  if v5 != 0 then goto L52d82a;
  #L52d806.  v12:= `@@m1.b.NotWriteRootClassName` @type ^`m1.b` @kind object;
  #L52d80a.  v12:= v12.`m1.b.mask` @type ^`int`;
  #L52d80e.  v11:= v11 ^& v12 @kind int;
  #L52d810.  if v11 == 0 then goto L52d82a;
  #L52d814.  v11:= v2.`m1.p.m` @type ^`m1.z` @kind object;
  #L52d818.  if v11 == 0 then goto L52d826;
  #L52d81c.  v11:= v11.`m1.z.a` @type ^`m1.z` @kind object;
  #L52d820.  if v11 == 0 then goto L52d826;
  #L52d824.  goto L52d82a;
  #L52d826.  v11:= 0I;
  #L52d828.  goto L52d82c;
  #L52d82a.  v11:= 1I;
  #L52d82c.  if v11 == 0 then goto L52d878;
  #L52d830.  call temp:= `getClass`(v39) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52d836.  v11:= temp @kind object;
  #L52d838.  if v11 == v5 then goto L52d878;
  #L52d83c.  v5:= v1.`m1.q.e` @type ^`java.lang.String` @kind object;
  #L52d840.  if v5 == 0 then goto L52d846;
  #L52d844.  goto L52d84e;
  #L52d846.  v5:= v2.`m1.p.a` @type ^`m1.a0` @kind object;
  #L52d84a.  v5:= v5.`m1.a0.b` @type ^`java.lang.String` @kind object;
  #L52d84e.  v11:= 0I;
  #L52d850.  call `C`(v7, v5, v11) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52d856.  v5:= v1.`m1.q.d` @type ^`java.lang.String` @kind object;
  #L52d85a.  if v5 != 0 then goto L52d86e;
  #L52d85e.  call temp:= `getClass`(v39) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52d864.  v5:= temp @kind object;
  #L52d866.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L52d86c.  v5:= temp @kind object;
  #L52d86e.  call `m`(v2, v5) @signature `Lm1/p;.m:(Ljava/lang/String;)V` @kind virtual;
  #L52d874.  v5:= 1I;
  #L52d876.  goto L52d87a;
  #L52d878.  v5:= 0I;
  #L52d87a.  v11:= 44I;
  #L52d87e.  if v5 == 0 then goto L52d888;
  #L52d882.  v5:= 44I;
  #L52d886.  goto L52d88a;
  #L52d888.  v5:= 0I;
  #L52d88a.  v12:= v2.`m1.p.c` @type ^`java.util.List` @kind object;
  #L52d88e.  if v12 == 0 then goto L52d8bc;
  #L52d892.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52d898.  v12:= temp @kind object;
  #L52d89a.  call temp:= `hasNext`(v12) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52d8a0.  v13:= temp;
  #L52d8a2.  if v13 == 0 then goto L52d8bc;
  #L52d8a6.  call temp:= `next`(v12) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52d8ac.  v13:= temp @kind object;
  #L52d8ae.  v13:= (`m1.g`) v13 @kind object;
  #L52d8b2.  call temp:= `c`(v13, v2, v3, v5) @signature `Lm1/g;.c:(Lm1/p;Ljava/lang/Object;C)C` @kind virtual;
  #L52d8b8.  v5:= temp;
  #L52d8ba.  goto L52d89a;
  #L52d8bc.  if v5 != v11 then goto L52d8c4;
  #L52d8c0.  v5:= 1I;
  #L52d8c2.  goto L52d8c6;
  #L52d8c4.  v5:= 0I;
  #L52d8c6.  v12:= v7.`m1.c0.i` @type ^`int`;
  #L52d8ca.  v13:= `@@m1.b.QuoteFieldNames` @type ^`m1.b` @kind object;
  #L52d8ce.  v13:= v13.`m1.b.mask` @type ^`int`;
  #L52d8d2.  v13:= v13 ^& v12 @kind int;
  #L52d8d4.  if v13 == 0 then goto L52d8ea;
  #L52d8d8.  v13:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52d8dc.  v13:= v13.`m1.b.mask` @type ^`int`;
  #L52d8e0.  v13:= v13 ^& v12 @kind int;
  #L52d8e2.  if v13 != 0 then goto L52d8ea;
  #L52d8e6.  v13:= 1I;
  #L52d8e8.  goto L52d8ec;
  #L52d8ea.  v13:= 0I;
  #L52d8ec.  v15:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52d8f0.  v15:= v15.`m1.b.mask` @type ^`int`;
  #L52d8f4.  v15:= v15 ^& v12 @kind int;
  #L52d8f6.  if v15 == 0 then goto L52d8fe;
  #L52d8fa.  v15:= 1I;
  #L52d8fc.  goto L52d900;
  #L52d8fe.  v15:= 0I;
  #L52d900.  v11:= `@@m1.b.NotWriteDefaultValue` @type ^`m1.b` @kind object;
  #L52d904.  v11:= v11.`m1.b.mask` @type ^`int`;
  #L52d908.  v11:= v11 ^& v12 @kind int;
  #L52d90a.  if v11 == 0 then goto L52d912;
  #L52d90e.  v11:= 1I;
  #L52d910.  goto L52d914;
  #L52d912.  v11:= 0I;
  #L52d914.  v12:= v2.`m1.p.e` @type ^`java.util.List` @kind object;
  #L52d918.  v16:= v5;
  #L52d91c.  v5:= v2.`m1.p.g` @type ^`java.util.List` @kind object;
  #L52d920.  v4:= v2.`m1.p.f` @type ^`java.util.List` @kind object;
  #L52d924.  v17:= v10 @kind object;
  #L52d928.  v10:= v2.`m1.p.h` @type ^`java.util.List` @kind object;
  #L52d92c.  v18:= v14;
  #L52d930.  v19:= v15;
  #L52d934.  v14:= 0I;
  #L52d936.  v15:= length @variable v9;
  #L52d938.  if v14 >= v15 then goto L52e1d4;
  #L52d93c.  v15:= v9[v14] @kind object;
  #L52d940.  v20:= v9 @kind object;
  #L52d944.  v9:= v15.`m1.m.g` @type ^`n1.a` @kind object;
  #L52d948.  v21:= v14;
  #L52d94c.  v14:= v9.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L52d950.  v22:= v13;
  #L52d954.  v13:= v9.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L52d958.  v23:= v11;
  #L52d95c.  v11:= v7.`m1.c0.i` @type ^`int`;
  #L52d960.  v24:= v6 @kind object;
  #L52d964.  v6:= `@@m1.b.SkipTransientField` @type ^`m1.b` @kind object;
  #L52d968.  v6:= v6.`m1.b.mask` @type ^`int`;
  #L52d96c.  v6:= v6 ^& v11 @kind int;
  #L52d96e.  if v6 == 0 then goto L52d984;
  #L52d972.  v6:= v9.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52d976.  if v6 == 0 then goto L52d984;
  #L52d97a.  v6:= v9.`n1.a.k` @type ^`boolean` @kind boolean;
  #L52d97e.  if v6 == 0 then goto L52d984;
  #L52d982.  goto L52d9d4;
  #L52d984.  v6:= v1.`m1.q.e` @type ^`java.lang.String` @kind object;
  #L52d988.  if v6 == 0 then goto L52d99a;
  #L52d98c.  call temp:= `equals`(v6, v13) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L52d992.  v6:= temp;
  #L52d994.  if v6 == 0 then goto L52d99a;
  #L52d998.  goto L52d9d4;
  #L52d99a.  if v10 == 0 then goto L52d9ce;
  #L52d99e.  call temp:= `iterator`(v10) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52d9a4.  v6:= temp @kind object;
  #L52d9a6.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52d9ac.  v11:= temp;
  #L52d9ae.  if v11 == 0 then goto L52d9ce;
  #L52d9b2.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52d9b8.  v11:= temp @kind object;
  #L52d9ba.  v11:= (`m1.y`) v11 @kind object;
  #L52d9be.  call temp:= `b`(v11, v2, v3, v13) @signature `Lm1/y;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/String;)Z` @kind interface;
  #L52d9c4.  v11:= temp;
  #L52d9c6.  if v11 != 0 then goto L52d9a6;
  #L52d9ca.  v6:= 0I;
  #L52d9cc.  goto L52d9d0;
  #L52d9ce.  v6:= 1I;
  #L52d9d0.  if v6 != 0 then goto L52d9ec;
  #L52d9d4.  v31:= v4 @kind object;
  #L52d9d8.  v30:= v5 @kind object;
  #L52d9dc.  v32:= v10 @kind object;
  #L52d9e0.  v34:= v12 @kind object;
  #L52d9e4.  v3:= v24 @kind object;
  #L52d9e8.  goto L52de82;
  #L52d9ec.  v6:= 0I;
  #L52d9ee.  v25:= 0L;
  #L52d9f2.  v11:= v9.`n1.a.j` @type ^`boolean` @kind boolean;
  #L52d9f6.  if v11 == 0 then goto L52da78;
  #L52d9fa.  v11:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52d9fe.  if v14 != v11 then goto L52da22;
  #L52da02.  v11:= v9.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52da06.  call temp:= `getInt`(v11, v3) @signature `Ljava/lang/reflect/Field;.getInt:(Ljava/lang/Object;)I` @kind virtual;
  #L52da0c.  v11:= temp;
  #L52da0e.  v28:= v25 @kind wide;
  #L52da12.  v25:= 0I;
  #L52da16.  v27:= 0I;
  #L52da1a.  v26:= v11;
  #L52da1e.  v11:= 1I;
  #L52da20.  goto L52da92;
  #L52da22.  v11:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52da26.  if v14 != v11 then goto L52da42;
  #L52da2a.  v11:= v9.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52da2e.  call temp:= `getLong`(v11, v3) @signature `Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J` @kind virtual;
  #L52da34.  v25:= temp @kind wide;
  #L52da36.  v28:= v25 @kind wide;
  #L52da3a.  v11:= 1I;
  #L52da3c.  v25:= 0I;
  #L52da40.  goto L52da8a;
  #L52da42.  v11:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52da46.  if v14 != v11 then goto L52da6a;
  #L52da4a.  v11:= v9.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52da4e.  call temp:= `getBoolean`(v11, v3) @signature `Ljava/lang/reflect/Field;.getBoolean:(Ljava/lang/Object;)Z` @kind virtual;
  #L52da54.  v11:= temp;
  #L52da56.  v27:= v11;
  #L52da5a.  v28:= v25 @kind wide;
  #L52da5e.  v11:= 1I;
  #L52da60.  v25:= 0I;
  #L52da64.  v26:= 0I;
  #L52da68.  goto L52da92;
  #L52da6a.  v6:= v9.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52da6e.  call temp:= `get`(v6, v3) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52da74.  v6:= temp @kind object;
  #L52da76.  goto L52da80;
  #L52da78.  call temp:= `b`(v15, v3) @signature `Lm1/m;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52da7e.  v6:= temp @kind object;
  #L52da80.  v28:= v25 @kind wide;
  #L52da84.  v11:= 0I;
  #L52da86.  v25:= 1I;
  #L52da8a.  v26:= 0I;
  #L52da8e.  v27:= 0I;
  #L52da92.  if v12 == 0 then goto L52db1e;
  #L52da96.  if v11 == 0 then goto L52dad8;
  #L52da9a.  v30:= v6 @kind object;
  #L52da9e.  v6:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52daa2.  if v14 != v6 then goto L52dab4;
  #L52daa6.  call temp:= `valueOf`(v26) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52daac.  v6:= temp @kind object;
  #L52daae.  v25:= 1I;
  #L52dab2.  goto L52dae0;
  #L52dab4.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52dab8.  if v14 != v6 then goto L52dac6;
  #L52dabc.  call temp:= `valueOf`(v28) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52dac2.  v6:= temp @kind object;
  #L52dac4.  goto L52daae;
  #L52dac6.  v6:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52daca.  if v14 != v6 then goto L52dadc;
  #L52dace.  call temp:= `valueOf`(v27) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L52dad4.  v6:= temp @kind object;
  #L52dad6.  goto L52daae;
  #L52dad8.  v30:= v6 @kind object;
  #L52dadc.  v6:= v30 @kind object;
  #L52dae0.  call temp:= `iterator`(v12) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52dae6.  v30:= temp @kind object;
  #L52dae8.  call temp:= `hasNext`(v30) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52daee.  v31:= temp;
  #L52daf0.  if v31 == 0 then goto L52db22;
  #L52daf4.  call temp:= `next`(v30) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52dafa.  v31:= temp @kind object;
  #L52dafc.  v32:= v10 @kind object;
  #L52db00.  v10:= v31 @kind object;
  #L52db04.  v10:= (`m1.x`) v10 @kind object;
  #L52db08.  call temp:= `a`(v10, v3, v13, v6) @signature `Lm1/x;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Z` @kind interface;
  #L52db0e.  v10:= temp;
  #L52db10.  if v10 != 0 then goto L52db18;
  #L52db14.  v10:= 0I;
  #L52db16.  goto L52db28;
  #L52db18.  v10:= v32 @kind object;
  #L52db1c.  goto L52dae8;
  #L52db1e.  v30:= v6 @kind object;
  #L52db22.  v32:= v10 @kind object;
  #L52db26.  v10:= 1I;
  #L52db28.  if v10 != 0 then goto L52db38;
  #L52db2c.  v31:= v4 @kind object;
  #L52db30.  v30:= v5 @kind object;
  #L52db34.  goto L52d9e0;
  #L52db38.  if v5 == 0 then goto L52dbba;
  #L52db3c.  if v11 == 0 then goto L52db7e;
  #L52db40.  if v25 != 0 then goto L52db7e;
  #L52db44.  v10:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52db48.  if v14 != v10 then goto L52db5a;
  #L52db4c.  call temp:= `valueOf`(v26) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52db52.  v6:= temp @kind object;
  #L52db54.  v25:= 1I;
  #L52db58.  goto L52db7e;
  #L52db5a.  v10:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52db5e.  if v14 != v10 then goto L52db6c;
  #L52db62.  call temp:= `valueOf`(v28) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52db68.  v6:= temp @kind object;
  #L52db6a.  goto L52db54;
  #L52db6c.  v10:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52db70.  if v14 != v10 then goto L52db7e;
  #L52db74.  call temp:= `valueOf`(v27) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L52db7a.  v6:= temp @kind object;
  #L52db7c.  goto L52db54;
  #L52db7e.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52db84.  v10:= temp @kind object;
  #L52db86.  v30:= v5 @kind object;
  #L52db8a.  v5:= v13 @kind object;
  #L52db8c.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52db92.  v31:= temp;
  #L52db94.  if v31 == 0 then goto L52dbc0;
  #L52db98.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52db9e.  v31:= temp @kind object;
  #L52dba0.  v33:= v10 @kind object;
  #L52dba4.  v10:= v31 @kind object;
  #L52dba8.  v10:= (`m1.u`) v10 @kind object;
  #L52dbac.  call temp:= `a`(v10, v3, v5, v6) @signature `Lm1/u;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/String;` @kind interface;
  #L52dbb2.  v5:= temp @kind object;
  #L52dbb4.  v10:= v33 @kind object;
  #L52dbb8.  goto L52db8c;
  #L52dbba.  v30:= v5 @kind object;
  #L52dbbe.  v5:= v13 @kind object;
  #L52dbc0.  if v4 == 0 then goto L52dc4e;
  #L52dbc4.  if v11 == 0 then goto L52dc06;
  #L52dbc8.  if v25 != 0 then goto L52dc06;
  #L52dbcc.  v10:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52dbd0.  if v14 != v10 then goto L52dbe2;
  #L52dbd4.  call temp:= `valueOf`(v26) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52dbda.  v6:= temp @kind object;
  #L52dbdc.  v25:= 1I;
  #L52dbe0.  goto L52dc06;
  #L52dbe2.  v10:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52dbe6.  if v14 != v10 then goto L52dbf4;
  #L52dbea.  call temp:= `valueOf`(v28) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52dbf0.  v6:= temp @kind object;
  #L52dbf2.  goto L52dbdc;
  #L52dbf4.  v10:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52dbf8.  if v14 != v10 then goto L52dc06;
  #L52dbfc.  call temp:= `valueOf`(v27) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L52dc02.  v6:= temp @kind object;
  #L52dc04.  goto L52dbdc;
  #L52dc06.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52dc0c.  v10:= temp @kind object;
  #L52dc0e.  v31:= v4 @kind object;
  #L52dc12.  v4:= v6 @kind object;
  #L52dc14.  call temp:= `hasNext`(v10) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52dc1a.  v33:= temp;
  #L52dc1c.  if v33 == 0 then goto L52dc42;
  #L52dc20.  call temp:= `next`(v10) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52dc26.  v33:= temp @kind object;
  #L52dc28.  v34:= v6 @kind object;
  #L52dc2c.  v6:= v33 @kind object;
  #L52dc30.  v6:= (`m1.d`) v6 @kind object;
  #L52dc34.  call temp:= `a`(v6, v3, v13, v4) @signature `Lm1/d;.a:(Ljava/lang/Object;Ljava/lang/String;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L52dc3a.  v4:= temp @kind object;
  #L52dc3c.  v6:= v34 @kind object;
  #L52dc40.  goto L52dc14;
  #L52dc42.  v34:= v6 @kind object;
  #L52dc46.  v6:= v4 @kind object;
  #L52dc48.  v4:= v34 @kind object;
  #L52dc4c.  goto L52dc54;
  #L52dc4e.  v31:= v4 @kind object;
  #L52dc52.  v4:= v6 @kind object;
  #L52dc54.  v10:= "" @kind object;
  #L52dc58.  if v25 == 0 then goto L52ddf0;
  #L52dc5c.  if v6 != 0 then goto L52ddf0;
  #L52dc60.  v33:= v6 @kind object;
  #L52dc64.  v6:= v9.`n1.a.w` @type ^`int`;
  #L52dc68.  v34:= v12 @kind object;
  #L52dc6c.  v12:= v1.`m1.q.c` @type ^`int`;
  #L52dc70.  v6:= v6 ^| v12 @kind int;
  #L52dc72.  v12:= v7.`m1.c0.i` @type ^`int`;
  #L52dc76.  v6:= v6 ^| v12 @kind int;
  #L52dc78.  v3:= constclass @type ^`java.lang.Boolean` @kind object;
  #L52dc7c.  if v14 != v3 then goto L52dcd0;
  #L52dc80.  v3:= `@@m1.b.WriteNullBooleanAsFalse` @type ^`m1.b` @kind object;
  #L52dc84.  v3:= v3.`m1.b.mask` @type ^`int`;
  #L52dc88.  v35:= v9 @kind object;
  #L52dc8c.  v9:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52dc90.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52dc94.  v9:= v9 ^| v3 @kind int;
  #L52dc96.  if v8 != 0 then goto L52dcac;
  #L52dc9a.  v36:= v6 ^& v9 @kind int;
  #L52dc9e.  if v36 != 0 then goto L52dcac;
  #L52dca2.  v9:= v9 ^& v12 @kind int;
  #L52dca4.  if v9 != 0 then goto L52dcac;
  #L52dca8.  goto L52d9e4;
  #L52dcac.  v6:= v6 ^& v3 @kind int;
  #L52dcae.  if v6 != 0 then goto L52dcc0;
  #L52dcb2.  v3:= v3 ^& v12 @kind int;
  #L52dcb4.  if v3 == 0 then goto L52dcba;
  #L52dcb8.  goto L52dcc0;
  #L52dcba.  v6:= v33 @kind object;
  #L52dcbe.  goto L52dcc4;
  #L52dcc0.  v6:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L52dcc4.  v3:= v24 @kind object;
  #L52dcc8.  v24:= v10 @kind object;
  #L52dccc.  goto L52de08;
  #L52dcd0.  v35:= v9 @kind object;
  #L52dcd4.  v3:= v24 @kind object;
  #L52dcd8.  if v14 != v3 then goto L52dd1e;
  #L52dcdc.  v9:= `@@m1.b.WriteNullStringAsEmpty` @type ^`m1.b` @kind object;
  #L52dce0.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52dce4.  v24:= v10 @kind object;
  #L52dce8.  v10:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52dcec.  v10:= v10.`m1.b.mask` @type ^`int`;
  #L52dcf0.  v10:= v10 ^| v9 @kind int;
  #L52dcf2.  if v8 != 0 then goto L52dd08;
  #L52dcf6.  v36:= v6 ^& v10 @kind int;
  #L52dcfa.  if v36 != 0 then goto L52dd08;
  #L52dcfe.  v10:= v10 ^& v12 @kind int;
  #L52dd00.  if v10 != 0 then goto L52dd08;
  #L52dd04.  goto L52de82;
  #L52dd08.  v6:= v6 ^& v9 @kind int;
  #L52dd0a.  if v6 != 0 then goto L52dd16;
  #L52dd0e.  v6:= v12 ^& v9 @kind int;
  #L52dd12.  if v6 == 0 then goto L52de04;
  #L52dd16.  v6:= v24 @kind object;
  #L52dd1a.  goto L52de08;
  #L52dd1e.  v24:= v10 @kind object;
  #L52dd22.  v9:= constclass @type ^`java.lang.Number` @kind object;
  #L52dd26.  call temp:= `isAssignableFrom`(v9, v14) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52dd2c.  v9:= temp;
  #L52dd2e.  if v9 == 0 then goto L52dd7c;
  #L52dd32.  v9:= `@@m1.b.WriteNullNumberAsZero` @type ^`m1.b` @kind object;
  #L52dd36.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52dd3a.  v10:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52dd3e.  v10:= v10.`m1.b.mask` @type ^`int`;
  #L52dd42.  v10:= v10 ^| v9 @kind int;
  #L52dd44.  if v8 != 0 then goto L52dd5e;
  #L52dd48.  v12:= v6 ^& v10 @kind int;
  #L52dd4c.  if v12 != 0 then goto L52dd5e;
  #L52dd50.  v12:= v7.`m1.c0.i` @type ^`int`;
  #L52dd54.  v10:= v10 ^& v12 @kind int;
  #L52dd56.  if v10 != 0 then goto L52dd5e;
  #L52dd5a.  goto L52de82;
  #L52dd5e.  v6:= v6 ^& v9 @kind int;
  #L52dd60.  if v6 != 0 then goto L52dd6e;
  #L52dd64.  v6:= v7.`m1.c0.i` @type ^`int`;
  #L52dd68.  v6:= v6 ^& v9 @kind int;
  #L52dd6a.  if v6 == 0 then goto L52de04;
  #L52dd6e.  v6:= 0I;
  #L52dd70.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52dd76.  v9:= temp @kind object;
  #L52dd78.  v6:= v9 @kind object;
  #L52dd7a.  goto L52de08;
  #L52dd7c.  v9:= constclass @type ^`java.util.Collection` @kind object;
  #L52dd80.  call temp:= `isAssignableFrom`(v9, v14) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L52dd86.  v9:= temp;
  #L52dd88.  if v9 == 0 then goto L52ddd2;
  #L52dd8c.  v9:= `@@m1.b.WriteNullListAsEmpty` @type ^`m1.b` @kind object;
  #L52dd90.  v9:= v9.`m1.b.mask` @type ^`int`;
  #L52dd94.  v10:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52dd98.  v10:= v10.`m1.b.mask` @type ^`int`;
  #L52dd9c.  v10:= v10 ^| v9 @kind int;
  #L52dd9e.  if v8 != 0 then goto L52ddb8;
  #L52dda2.  v12:= v6 ^& v10 @kind int;
  #L52dda6.  if v12 != 0 then goto L52ddb8;
  #L52ddaa.  v12:= v7.`m1.c0.i` @type ^`int`;
  #L52ddae.  v10:= v10 ^& v12 @kind int;
  #L52ddb0.  if v10 != 0 then goto L52ddb8;
  #L52ddb4.  goto L52de82;
  #L52ddb8.  v6:= v6 ^& v9 @kind int;
  #L52ddba.  if v6 != 0 then goto L52ddc8;
  #L52ddbe.  v6:= v7.`m1.c0.i` @type ^`int`;
  #L52ddc2.  v6:= v6 ^& v9 @kind int;
  #L52ddc4.  if v6 == 0 then goto L52de04;
  #L52ddc8.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L52ddce.  v6:= temp @kind object;
  #L52ddd0.  goto L52de08;
  #L52ddd2.  if v8 != 0 then goto L52de04;
  #L52ddd6.  v6:= v15.`m1.m.h` @type ^`boolean` @kind boolean;
  #L52ddda.  if v6 != 0 then goto L52de04;
  #L52ddde.  v6:= `@@m1.b.WriteMapNullValue` @type ^`m1.b` @kind object;
  #L52dde2.  call temp:= `Y`(v7, v6) @signature `Lm1/c0;.Y:(Lm1/b;)Z` @kind virtual;
  #L52dde8.  v6:= temp;
  #L52ddea.  if v6 != 0 then goto L52de04;
  #L52ddee.  goto L52de82;
  #L52ddf0.  v33:= v6 @kind object;
  #L52ddf4.  v35:= v9 @kind object;
  #L52ddf8.  v34:= v12 @kind object;
  #L52ddfc.  v3:= v24 @kind object;
  #L52de00.  v24:= v10 @kind object;
  #L52de04.  v6:= v33 @kind object;
  #L52de08.  if v25 == 0 then goto L52de8c;
  #L52de0c.  if v6 == 0 then goto L52de8c;
  #L52de10.  if v23 == 0 then goto L52de8c;
  #L52de14.  v9:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de18.  if v14 == v9 then goto L52de44;
  #L52de1c.  v9:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de20.  if v14 == v9 then goto L52de44;
  #L52de24.  v9:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de28.  if v14 == v9 then goto L52de44;
  #L52de2c.  v9:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de30.  if v14 == v9 then goto L52de44;
  #L52de34.  v9:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de38.  if v14 == v9 then goto L52de44;
  #L52de3c.  v9:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de40.  if v14 != v9 then goto L52de60;
  #L52de44.  v9:= instanceof @variable v6 @type ^`java.lang.Number` @kind boolean;
  #L52de48.  if v9 == 0 then goto L52de60;
  #L52de4c.  v9:= v6 @kind object;
  #L52de4e.  v9:= (`java.lang.Number`) v9 @kind object;
  #L52de52.  call temp:= `byteValue`(v9) @signature `Ljava/lang/Number;.byteValue:()B` @kind virtual;
  #L52de58.  v9:= temp;
  #L52de5a.  if v9 != 0 then goto L52de60;
  #L52de5e.  goto L52de82;
  #L52de60.  v9:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52de64.  if v14 != v9 then goto L52de8c;
  #L52de68.  v9:= instanceof @variable v6 @type ^`java.lang.Boolean` @kind boolean;
  #L52de6c.  if v9 == 0 then goto L52de8c;
  #L52de70.  v9:= v6 @kind object;
  #L52de72.  v9:= (`java.lang.Boolean`) v9 @kind object;
  #L52de76.  call temp:= `booleanValue`(v9) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L52de7c.  v9:= temp;
  #L52de7e.  if v9 != 0 then goto L52de8c;
  #L52de82.  v5:= 0I;
  #L52de84.  v33:= 44I;
  #L52de88.  goto L52e192;
  #L52de8c.  if v16 == 0 then goto L52dee8;
  #L52de90.  v9:= v7.`m1.c0.h` @type ^`int`;
  #L52de94.  v10:= 1I;
  #L52de96.  v9:= v9 + v10 @kind int;
  #L52de98.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52de9c.  v10:= length @variable v10;
  #L52de9e.  if v9 <= v10 then goto L52deba;
  #L52dea2.  v10:= v7.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52dea6.  if v10 != 0 then goto L52deb2;
  #L52deaa.  call `s`(v7, v9) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52deb0.  goto L52deba;
  #L52deb2.  call `flush`(v7) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52deb8.  v9:= 1I;
  #L52deba.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52debe.  v12:= v7.`m1.c0.h` @type ^`int`;
  #L52dec2.  v33:= 44I;
  #L52dec6.  v10[v12]:= v33 @kind char;
  #L52deca.  v7.`m1.c0.h` @type ^`int` := v9;
  #L52dece.  v9:= v7.`m1.c0.i` @type ^`int`;
  #L52ded2.  v10:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52ded6.  v10:= v10.`m1.b.mask` @type ^`int`;
  #L52deda.  v9:= v9 ^& v10 @kind int;
  #L52dedc.  if v9 == 0 then goto L52deec;
  #L52dee0.  call `r`(v38) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52dee6.  goto L52deec;
  #L52dee8.  v33:= 44I;
  #L52deec.  if v5 == v13 then goto L52df08;
  #L52def0.  if v8 != 0 then goto L52defc;
  #L52def4.  v4:= 1I;
  #L52def6.  call `C`(v7, v5, v4) @signature `Lm1/c0;.C:(Ljava/lang/String;Z)V` @kind virtual;
  #L52defc.  call `l`(v2, v6) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L52df02.  v5:= 0I;
  #L52df04.  goto L52e18e;
  #L52df08.  if v4 == v6 then goto L52df1e;
  #L52df0c.  if v8 != 0 then goto L52df16;
  #L52df10.  call `c`(v15, v2) @signature `Lm1/m;.c:(Lm1/p;)V` @kind virtual;
  #L52df16.  call `l`(v2, v6) @signature `Lm1/p;.l:(Ljava/lang/Object;)V` @kind virtual;
  #L52df1c.  goto L52df02;
  #L52df1e.  if v8 != 0 then goto L52dfa0;
  #L52df22.  if v22 == 0 then goto L52df9a;
  #L52df26.  v4:= v15.`m1.m.k` @type ^`char`[] @kind object;
  #L52df2a.  v5:= length @variable v4;
  #L52df2c.  v9:= v7.`m1.c0.h` @type ^`int`;
  #L52df30.  v9:= v9 + v5 @kind int;
  #L52df32.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52df36.  v10:= length @variable v10;
  #L52df38.  if v9 <= v10 then goto L52df84;
  #L52df3c.  v10:= v7.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52df40.  if v10 != 0 then goto L52df4c;
  #L52df44.  call `s`(v7, v9) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52df4a.  goto L52df84;
  #L52df4c.  v9:= 0I;
  #L52df4e.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52df52.  v12:= length @variable v10;
  #L52df54.  v13:= v7.`m1.c0.h` @type ^`int`;
  #L52df58.  v12:= v12 - v13 @kind int;
  #L52df5a.  call `arraycopy`(v4, v9, v10, v13, v12) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L52df60.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52df64.  v10:= length @variable v10;
  #L52df66.  v7.`m1.c0.h` @type ^`int` := v10;
  #L52df6a.  call `flush`(v7) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52df70.  v5:= v5 - v12 @kind int;
  #L52df72.  v9:= v9 + v12 @kind int;
  #L52df74.  v10:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52df78.  v10:= length @variable v10;
  #L52df7a.  if v5 > v10 then goto L52df4e;
  #L52df7e.  v10:= v9;
  #L52df80.  v9:= v5;
  #L52df82.  goto L52df86;
  #L52df84.  v10:= 0I;
  #L52df86.  v12:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52df8a.  v13:= v7.`m1.c0.h` @type ^`int`;
  #L52df8e.  call `arraycopy`(v4, v10, v12, v13, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L52df94.  v7.`m1.c0.h` @type ^`int` := v9;
  #L52df98.  goto L52dfa0;
  #L52df9a.  call `c`(v15, v2) @signature `Lm1/m;.c:(Lm1/p;)V` @kind virtual;
  #L52dfa0.  if v11 == 0 then goto L52e096;
  #L52dfa4.  if v25 != 0 then goto L52e096;
  #L52dfa8.  v4:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L52dfac.  if v14 != v4 then goto L52e044;
  #L52dfb0.  v4:= -2147483648I;
  #L52dfb4.  v11:= v26;
  #L52dfb8.  if v11 != v4 then goto L52dfc8;
  #L52dfbc.  v4:= "-2147483648" @kind object;
  #L52dfc0.  call `write`(v7, v4) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52dfc6.  goto L52df02;
  #L52dfc8.  if v11 >= 0 then goto L52dfd0;
  #L52dfcc.  v4:= -v11 @kind int;
  #L52dfce.  goto L52dfd2;
  #L52dfd0.  v4:= v11;
  #L52dfd2.  v5:= 0I;
  #L52dfd4.  v6:= `@@m1.c0.l` @type ^`int`[] @kind object;
  #L52dfd8.  v6:= v6[v5];
  #L52dfdc.  if v4 > v6 then goto L52e03e;
  #L52dfe0.  v5:= v5 + 1;
  #L52dfe4.  if v11 >= 0 then goto L52dfec;
  #L52dfe8.  v5:= v5 + 1;
  #L52dfec.  v4:= v7.`m1.c0.h` @type ^`int`;
  #L52dff0.  v4:= v4 + v5 @kind int;
  #L52dff2.  v6:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52dff6.  v6:= length @variable v6;
  #L52dff8.  if v4 <= v6 then goto L52e024;
  #L52dffc.  v6:= v7.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52e000.  if v6 != 0 then goto L52e00c;
  #L52e004.  call `s`(v7, v4) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52e00a.  goto L52e024;
  #L52e00c.  v6:= new `char`[v5];
  #L52e010.  v9:= (`long`) v11 @kind i2l;
  #L52e012.  call `w`(v9, v5, v6) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52e018.  v9:= 0I;
  #L52e01a.  call `write`(v7, v6, v9, v5) @signature `Lm1/c0;.write:([CII)V` @kind virtual;
  #L52e020.  v5:= 1I;
  #L52e022.  goto L52e026;
  #L52e024.  v5:= 0I;
  #L52e026.  if v5 != 0 then goto L52df02;
  #L52e02a.  v5:= (`long`) v11 @kind i2l;
  #L52e02c.  v9:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e030.  call `w`(v5, v4, v9) @signature `Lm1/c0;.w:(JI[C)V` @kind static;
  #L52e036.  v7.`m1.c0.h` @type ^`int` := v4;
  #L52e03a.  goto L52df02;
  #L52e03e.  v5:= v5 + 1;
  #L52e042.  goto L52dfd4;
  #L52e044.  v4:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L52e048.  if v14 != v4 then goto L52e05e;
  #L52e04c.  v4:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e050.  v5:= v28 @kind wide;
  #L52e054.  call `v`(v4, v5) @signature `Lm1/c0;.v:(J)V` @kind virtual;
  #L52e05a.  goto L52df02;
  #L52e05e.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L52e062.  if v14 != v4 then goto L52df02;
  #L52e066.  if v27 == 0 then goto L52e080;
  #L52e06a.  v4:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e06e.  v5:= `@@m1.q.f` @type ^`char`[] @kind object;
  #L52e072.  v6:= length @variable v5;
  #L52e074.  v9:= 0I;
  #L52e076.  call `write`(v4, v5, v9, v6) @signature `Lm1/c0;.write:([CII)V` @kind virtual;
  #L52e07c.  goto L52df02;
  #L52e080.  v4:= v2.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52e084.  v5:= `@@m1.q.g` @type ^`char`[] @kind object;
  #L52e088.  v6:= length @variable v5;
  #L52e08a.  v9:= 0I;
  #L52e08c.  call `write`(v4, v5, v9, v6) @signature `Lm1/c0;.write:([CII)V` @kind virtual;
  #L52e092.  goto L52df02;
  #L52e096.  if v8 != 0 then goto L52e186;
  #L52e09a.  if v14 != v3 then goto L52e0fe;
  #L52e09e.  v4:= v15.`m1.m.i` @type ^`int`;
  #L52e0a2.  v5:= v1.`m1.q.c` @type ^`int`;
  #L52e0a6.  v4:= v4 ^| v5 @kind int;
  #L52e0a8.  if v6 != 0 then goto L52e0de;
  #L52e0ac.  v5:= v7.`m1.c0.i` @type ^`int`;
  #L52e0b0.  v6:= `@@m1.b.WriteNullStringAsEmpty` @type ^`m1.b` @kind object;
  #L52e0b4.  v6:= v6.`m1.b.mask` @type ^`int`;
  #L52e0b8.  v5:= v5 ^& v6 @kind int;
  #L52e0ba.  if v5 != 0 then goto L52e0d0;
  #L52e0be.  v4:= v4 ^& v6 @kind int;
  #L52e0c0.  if v4 == 0 then goto L52e0c6;
  #L52e0c4.  goto L52e0d0;
  #L52e0c6.  call `r`(v7) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e0cc.  goto L52df02;
  #L52e0d0.  v4:= v24 @kind object;
  #L52e0d4.  call `d0`(v7, v4) @signature `Lm1/c0;.d0:(Ljava/lang/String;)V` @kind virtual;
  #L52e0da.  goto L52df02;
  #L52e0de.  v6:= (`java.lang.String`) v6 @kind object;
  #L52e0e2.  if v19 == 0 then goto L52e0f0;
  #L52e0e6.  call `i0`(v7, v6) @signature `Lm1/c0;.i0:(Ljava/lang/String;)V` @kind virtual;
  #L52e0ec.  goto L52df02;
  #L52e0f0.  v4:= 0I;
  #L52e0f2.  v5:= 1I;
  #L52e0f4.  call `y`(v7, v6, v4, v5) @signature `Lm1/c0;.y:(Ljava/lang/String;CZ)V` @kind virtual;
  #L52e0fa.  goto L52df02;
  #L52e0fe.  v4:= v35 @kind object;
  #L52e102.  v4:= v4.`n1.a.s` @type ^`boolean` @kind boolean;
  #L52e106.  if v4 == 0 then goto L52e17c;
  #L52e10a.  if v6 == 0 then goto L52e172;
  #L52e10e.  v4:= v7.`m1.c0.i` @type ^`int`;
  #L52e112.  v5:= `@@m1.b.WriteEnumUsingToString` @type ^`m1.b` @kind object;
  #L52e116.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52e11a.  v4:= v4 ^& v5 @kind int;
  #L52e11c.  if v4 == 0 then goto L52e15c;
  #L52e120.  v6:= (`java.lang.Enum`) v6 @kind object;
  #L52e124.  call temp:= `toString`(v6) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L52e12a.  v4:= temp @kind object;
  #L52e12c.  v5:= v7.`m1.c0.i` @type ^`int`;
  #L52e130.  v6:= `@@m1.b.UseSingleQuotes` @type ^`m1.b` @kind object;
  #L52e134.  v6:= v6.`m1.b.mask` @type ^`int`;
  #L52e138.  v5:= v5 ^& v6 @kind int;
  #L52e13a.  if v5 == 0 then goto L52e142;
  #L52e13e.  v11:= 1I;
  #L52e140.  goto L52e144;
  #L52e142.  v11:= 0I;
  #L52e144.  if v11 == 0 then goto L52e152;
  #L52e148.  call `i0`(v7, v4) @signature `Lm1/c0;.i0:(Ljava/lang/String;)V` @kind virtual;
  #L52e14e.  goto L52df02;
  #L52e152.  v5:= 0I;
  #L52e154.  call `y`(v7, v4, v5, v5) @signature `Lm1/c0;.y:(Ljava/lang/String;CZ)V` @kind virtual;
  #L52e15a.  goto L52e18e;
  #L52e15c.  v5:= 0I;
  #L52e15e.  v6:= (`java.lang.Enum`) v6 @kind object;
  #L52e162.  call temp:= `ordinal`(v6) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L52e168.  v4:= temp;
  #L52e16a.  call `a0`(v7, v4) @signature `Lm1/c0;.a0:(I)V` @kind virtual;
  #L52e170.  goto L52e18e;
  #L52e172.  v5:= 0I;
  #L52e174.  call `r`(v7) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52e17a.  goto L52e18e;
  #L52e17c.  v5:= 0I;
  #L52e17e.  call `d`(v15, v2, v6) @signature `Lm1/m;.d:(Lm1/p;Ljava/lang/Object;)V` @kind virtual;
  #L52e184.  goto L52e18e;
  #L52e186.  v5:= 0I;
  #L52e188.  call `d`(v15, v2, v6) @signature `Lm1/m;.d:(Lm1/p;Ljava/lang/Object;)V` @kind virtual;
  #L52e18e.  v16:= 1I;
  #L52e192.  v14:= v21 + 1;
  #L52e196.  v6:= v3 @kind object;
  #L52e198.  v9:= v20 @kind object;
  #L52e19c.  v13:= v22;
  #L52e1a0.  v11:= v23;
  #L52e1a4.  v5:= v30 @kind object;
  #L52e1a8.  v4:= v31 @kind object;
  #L52e1ac.  v10:= v32 @kind object;
  #L52e1b0.  v12:= v34 @kind object;
  #L52e1b4.  v3:= v39 @kind object;
  #L52e1b8.  goto L52d936;
  #L52e1bc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52e1be.  v4:= v0 @kind object;
  #L52e1c0.  v3:= v17 @kind object;
  #L52e1c4.  goto L52e2f2;
  #L52e1c8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L52e1ca.  v4:= v0 @kind object;
  #L52e1cc.  v3:= v17 @kind object;
  #L52e1d0.  goto L52e2ae;
  #L52e1d4.  v20:= v9 @kind object;
  #L52e1d8.  v5:= 0I;
  #L52e1da.  v33:= 44I;
  #L52e1de.  v3:= v2.`m1.p.d` @type ^`java.util.List` @kind object;
  #L52e1e2.  if v3 == 0 then goto L52e220;
  #L52e1e6.  if v16 == 0 then goto L52e1f0;
  #L52e1ea.  v12:= 44I;
  #L52e1ee.  goto L52e1f2;
  #L52e1f0.  v12:= 0I;
  #L52e1f2.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L52e1f8.  v3:= temp @kind object;
  #L52e1fa.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52e200.  v4:= temp;
  #L52e202.  if v4 == 0 then goto L52e220;
  #L52e206.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L52e20c.  v4:= temp @kind object;
  #L52e20e.  v4:= (`m1.a`) v4 @kind object;
  #L52e212.  v5:= v39 @kind object;
  #L52e216.  call temp:= `c`(v4, v2, v5, v12) @signature `Lm1/a;.c:(Lm1/p;Ljava/lang/Object;C)C` @kind virtual;
  #L52e21c.  v12:= temp;
  #L52e21e.  goto L52e1fa;
  #L52e220.  v9:= v20 @kind object;
  #L52e224.  v3:= length @variable v9;
  #L52e226.  if v3 <= 0 then goto L52e248;
  #L52e22a.  v3:= v7.`m1.c0.i` @type ^`int`;
  #L52e22e.  v4:= `@@m1.b.PrettyFormat` @type ^`m1.b` @kind object;
  #L52e232.  v4:= v4.`m1.b.mask` @type ^`int`;
  #L52e236.  v3:= v3 ^& v4 @kind int;
  #L52e238.  if v3 == 0 then goto L52e248;
  #L52e23c.  call `q`(v38) @signature `Lm1/p;.q:()V` @kind virtual;
  #L52e242.  call `r`(v38) @signature `Lm1/p;.r:()V` @kind virtual;
  #L52e248.  v3:= v7.`m1.c0.h` @type ^`int`;
  #L52e24c.  v4:= 1I;
  #L52e24e.  v3:= v3 + v4 @kind int;
  #L52e250.  v5:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e254.  v5:= length @variable v5;
  #L52e256.  if v3 <= v5 then goto L52e274;
  #L52e25a.  v5:= v7.`m1.c0.j` @type ^`java.io.Writer` @kind object;
  #L52e25e.  if v5 != 0 then goto L52e26a;
  #L52e262.  call `s`(v7, v3) @signature `Lm1/c0;.s:(I)V` @kind virtual;
  #L52e268.  goto L52e274;
  #L52e26a.  call `flush`(v7) @signature `Lm1/c0;.flush:()V` @kind virtual;
  #L52e270.  v13:= 1I;
  #L52e272.  goto L52e276;
  #L52e274.  v13:= v3;
  #L52e276.  v3:= v7.`m1.c0.g` @type ^`char`[] @kind object;
  #L52e27a.  v4:= v7.`m1.c0.h` @type ^`int`;
  #L52e27e.  v3[v4]:= v18 @kind char;
  #L52e282.  v7.`m1.c0.h` @type ^`int` := v13;
  #L52e286.  v3:= v17 @kind object;
  #L52e28a.  v2.`m1.p.m` @type ^`m1.z` := v3 @kind object;
  #L52e28e.  return @kind void;
  #L52e290.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52e292.  v3:= v17 @kind object;
  #L52e296.  goto L52e2a4;
  #L52e298.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L52e29a.  v3:= v17 @kind object;
  #L52e29e.  goto L52e2ac;
  #L52e2a0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52e2a2.  v3:= v10 @kind object;
  #L52e2a4.  v4:= v0 @kind object;
  #L52e2a6.  goto L52e2f2;
  #L52e2a8.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L52e2aa.  v3:= v10 @kind object;
  #L52e2ac.  v4:= v0 @kind object;
  #L52e2ae.  v5:= "write javaBean error, fastjson version 1.1.68" @kind object;
  #L52e2b2.  v6:= v40 @kind object;
  #L52e2b6.  if v6 == 0 then goto L52e2e2;
  #L52e2ba.  v7:= new `java.lang.StringBuilder`;
  #L52e2be.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L52e2c4.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52e2ca.  v5:= ", fieldName : " @kind object;
  #L52e2ce.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52e2d4.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52e2da.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L52e2e0.  v5:= temp @kind object;
  #L52e2e2.  v6:= new `com.alibaba.fastjson.c`;
  #L52e2e6.  call `<init>`(v6, v5, v4) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L52e2ec.  throw v6;
  #L52e2ee.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L52e2f0.  goto L52e2a4;
  #L52e2f2.  v2.`m1.p.m` @type ^`m1.z` := v3 @kind object;
  #L52e2f6.  throw v4;
  catch `java.lang.Exception` @[L52d774..L52d780] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d774..L52d780] goto L52e2a0;
  catch `java.lang.Exception` @[L52d784..L52d79a] goto L52d7a8;
  catch `java.lang.Throwable` @[L52d784..L52d79a] goto L52d79e;
  catch `java.lang.Exception` @[L52d7b2..L52d7c4] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d7b2..L52d7c4] goto L52e2a0;
  catch `java.lang.Exception` @[L52d7c8..L52d7e6] goto L52d7a8;
  catch `java.lang.Throwable` @[L52d7c8..L52d7e6] goto L52d79e;
  catch `java.lang.Exception` @[L52d7e6..L52d7f2] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d7e6..L52d7f2] goto L52e2a0;
  catch `java.lang.Exception` @[L52d7f8..L52d874] goto L52d7a8;
  catch `java.lang.Throwable` @[L52d7f8..L52d874] goto L52d79e;
  catch `java.lang.Exception` @[L52d88a..L52d88e] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d88a..L52d88e] goto L52e2a0;
  catch `java.lang.Exception` @[L52d892..L52d8ba] goto L52d7a8;
  catch `java.lang.Throwable` @[L52d892..L52d8ba] goto L52d79e;
  catch `java.lang.Exception` @[L52d8c6..L52d8d2] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d8c6..L52d8d2] goto L52e2a0;
  catch `java.lang.Exception` @[L52d8d8..L52d8e0] goto L52d7a8;
  catch `java.lang.Throwable` @[L52d8d8..L52d8e0] goto L52d79e;
  catch `java.lang.Exception` @[L52d8ec..L52d924] goto L52e2a8;
  catch `java.lang.Throwable` @[L52d8ec..L52d924] goto L52e2a0;
  catch `java.lang.Exception` @[L52d928..L52d938] goto L52e298;
  catch `java.lang.Throwable` @[L52d928..L52d938] goto L52e290;
  catch `java.lang.Exception` @[L52d93c..L52dc3c] goto L52e1c8;
  catch `java.lang.Throwable` @[L52d93c..L52dc3c] goto L52e1bc;
  catch `java.lang.Exception` @[L52dc64..L52e18e] goto L52e1c8;
  catch `java.lang.Throwable` @[L52dc64..L52e18e] goto L52e1bc;
  catch `java.lang.Exception` @[L52e1de..L52e1e2] goto L52e298;
  catch `java.lang.Throwable` @[L52e1de..L52e1e2] goto L52e290;
  catch `java.lang.Exception` @[L52e1f2..L52e21e] goto L52e1c8;
  catch `java.lang.Throwable` @[L52e1f2..L52e21e] goto L52e1bc;
  catch `java.lang.Exception` @[L52e224..L52e226] goto L52e298;
  catch `java.lang.Throwable` @[L52e224..L52e226] goto L52e290;
  catch `java.lang.Exception` @[L52e22a..L52e248] goto L52e1c8;
  catch `java.lang.Throwable` @[L52e22a..L52e248] goto L52e1bc;
  catch `java.lang.Exception` @[L52e248..L52e256] goto L52e298;
  catch `java.lang.Throwable` @[L52e248..L52e256] goto L52e290;
  catch `java.lang.Exception` @[L52e25a..L52e270] goto L52e1c8;
  catch `java.lang.Throwable` @[L52e25a..L52e270] goto L52e1bc;
  catch `java.lang.Exception` @[L52e276..L52e286] goto L52e298;
  catch `java.lang.Throwable` @[L52e276..L52e286] goto L52e290;
  catch `java.lang.Throwable` @[L52e2ae..L52e2ee] goto L52e2ee;
}
