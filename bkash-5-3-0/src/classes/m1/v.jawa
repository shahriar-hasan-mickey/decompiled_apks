record `m1.v` @kind class @AccessFlag PUBLIC extends `l1.f` @kind interface, `m1.w` @kind interface {
  `java.text.DecimalFormat` `m1.v.a` @AccessFlag PRIVATE;
}
global `m1.v` `@@m1.v.b` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm1/v;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L52f5c0.  v0:= new `m1.v`;
  #L52f5c4.  call `<init>`(v0) @signature `Lm1/v;.<init>:()V` @kind direct;
  #L52f5ca.  `@@m1.v.b` @type ^`m1.v` := v0 @kind object;
  #L52f5ce.  return @kind void;
}
procedure `void` `<init>`(`m1.v` v1 @kind this) @signature `Lm1/v;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L52f5e0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52f5e6.  v0:= 0I;
  #L52f5e8.  v1.`m1.v.a` @type ^`java.text.DecimalFormat` := v0 @kind object;
  #L52f5ec.  return @kind void;
}
procedure `java.lang.Object` `a`(`m1.v` v7 @kind this, `k1.b` v8 @kind object, `java.lang.reflect.Type` v9 @kind object, `java.lang.Object` v10 @kind object) @signature `Lm1/v;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L52f388.  v10:= constclass @type ^`java.lang.Byte` @kind object;
  #L52f38c.  v0:= constclass @type ^`java.lang.Short` @kind object;
  #L52f390.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L52f394.  v2:= constclass @type ^`java.lang.Double` @kind object;
  #L52f398.  v3:= v8.`k1.b.k` @type ^`k1.e` @kind object;
  #L52f39c.  call temp:= `b`(v3) @signature `Lk1/e;.b:()I` @kind virtual;
  #L52f3a2.  v4:= temp;
  #L52f3a4.  v5:= 16I;
  #L52f3a8.  v6:= 2I;
  #L52f3aa.  if v4 != v6 then goto L52f482;
  #L52f3ae.  v8:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f3b2.  if v9 == v8 then goto L52f462;
  #L52f3b6.  if v9 != v2 then goto L52f3bc;
  #L52f3ba.  goto L52f462;
  #L52f3bc.  v8:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f3c0.  if v9 == v8 then goto L52f442;
  #L52f3c4.  if v9 != v1 then goto L52f3ca;
  #L52f3c8.  goto L52f442;
  #L52f3ca.  call temp:= `c0`(v3) @signature `Lk1/e;.c0:()J` @kind virtual;
  #L52f3d0.  v1:= temp @kind wide;
  #L52f3d2.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f3d8.  v8:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f3dc.  if v9 == v8 then goto L52f434;
  #L52f3e0.  if v9 != v0 then goto L52f3e6;
  #L52f3e4.  goto L52f434;
  #L52f3e6.  v8:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f3ea.  if v9 == v8 then goto L52f426;
  #L52f3ee.  if v9 != v10 then goto L52f3f4;
  #L52f3f2.  goto L52f426;
  #L52f3f4.  v8:= -2147483648L;
  #L52f3fa.  v10:= lcmp(v1, v8);
  #L52f3fe.  if v10 < 0 then goto L52f41c;
  #L52f402.  v8:= 2147483647L;
  #L52f408.  v10:= lcmp(v1, v8);
  #L52f40c.  if v10 > 0 then goto L52f41c;
  #L52f410.  v8:= (`int`) v1 @kind l2i;
  #L52f412.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L52f418.  v8:= temp @kind object;
  #L52f41a.  return v8 @kind object;
  #L52f41c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L52f422.  v8:= temp @kind object;
  #L52f424.  return v8 @kind object;
  #L52f426.  v8:= (`int`) v1 @kind l2i;
  #L52f428.  v8:= (`byte`) v8 @kind i2b;
  #L52f42a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L52f430.  v8:= temp @kind object;
  #L52f432.  return v8 @kind object;
  #L52f434.  v8:= (`int`) v1 @kind l2i;
  #L52f436.  v8:= (`short`) v8 @kind i2s;
  #L52f438.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L52f43e.  v8:= temp @kind object;
  #L52f440.  return v8 @kind object;
  #L52f442.  call temp:= `B`(v3) @signature `Lk1/e;.B:()Ljava/lang/String;` @kind virtual;
  #L52f448.  v8:= temp @kind object;
  #L52f44a.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f450.  call temp:= `parseFloat`(v8) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L52f456.  v8:= temp;
  #L52f458.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L52f45e.  v8:= temp @kind object;
  #L52f460.  return v8 @kind object;
  #L52f462.  call temp:= `B`(v3) @signature `Lk1/e;.B:()Ljava/lang/String;` @kind virtual;
  #L52f468.  v8:= temp @kind object;
  #L52f46a.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f470.  call temp:= `parseDouble`(v8) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L52f476.  v8:= temp @kind wide;
  #L52f478.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L52f47e.  v8:= temp @kind object;
  #L52f480.  return v8 @kind object;
  #L52f482.  v6:= 3I;
  #L52f484.  if v4 != v6 then goto L52f534;
  #L52f488.  v8:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f48c.  if v9 == v8 then goto L52f514;
  #L52f490.  if v9 != v2 then goto L52f496;
  #L52f494.  goto L52f514;
  #L52f496.  v8:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f49a.  if v9 == v8 then goto L52f4f4;
  #L52f49e.  if v9 != v1 then goto L52f4a4;
  #L52f4a2.  goto L52f4f4;
  #L52f4a4.  call temp:= `d0`(v3) @signature `Lk1/e;.d0:()Ljava/math/BigDecimal;` @kind virtual;
  #L52f4aa.  v8:= temp @kind object;
  #L52f4ac.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f4b2.  v1:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f4b6.  if v9 == v1 then goto L52f4e2;
  #L52f4ba.  if v9 != v0 then goto L52f4c0;
  #L52f4be.  goto L52f4e2;
  #L52f4c0.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f4c4.  if v9 == v0 then goto L52f4d0;
  #L52f4c8.  if v9 != v10 then goto L52f4ce;
  #L52f4cc.  goto L52f4d0;
  #L52f4ce.  return v8 @kind object;
  #L52f4d0.  call temp:= `byteValue`(v8) @signature `Ljava/math/BigDecimal;.byteValue:()B` @kind virtual;
  #L52f4d6.  v8:= temp;
  #L52f4d8.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L52f4de.  v8:= temp @kind object;
  #L52f4e0.  return v8 @kind object;
  #L52f4e2.  call temp:= `shortValue`(v8) @signature `Ljava/math/BigDecimal;.shortValue:()S` @kind virtual;
  #L52f4e8.  v8:= temp;
  #L52f4ea.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L52f4f0.  v8:= temp @kind object;
  #L52f4f2.  return v8 @kind object;
  #L52f4f4.  call temp:= `B`(v3) @signature `Lk1/e;.B:()Ljava/lang/String;` @kind virtual;
  #L52f4fa.  v8:= temp @kind object;
  #L52f4fc.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f502.  call temp:= `parseFloat`(v8) @signature `Ljava/lang/Float;.parseFloat:(Ljava/lang/String;)F` @kind static;
  #L52f508.  v8:= temp;
  #L52f50a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L52f510.  v8:= temp @kind object;
  #L52f512.  return v8 @kind object;
  #L52f514.  call temp:= `B`(v3) @signature `Lk1/e;.B:()Ljava/lang/String;` @kind virtual;
  #L52f51a.  v8:= temp @kind object;
  #L52f51c.  call `v`(v3, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L52f522.  call temp:= `parseDouble`(v8) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L52f528.  v8:= temp @kind wide;
  #L52f52a.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L52f530.  v8:= temp @kind object;
  #L52f532.  return v8 @kind object;
  #L52f534.  call temp:= `E0`(v8) @signature `Lk1/b;.E0:()Ljava/lang/Object;` @kind virtual;
  #L52f53a.  v8:= temp @kind object;
  #L52f53c.  if v8 != 0 then goto L52f544;
  #L52f540.  v8:= 0I;
  #L52f542.  return v8 @kind object;
  #L52f544.  v3:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f548.  if v9 == v3 then goto L52f5a4;
  #L52f54c.  if v9 != v2 then goto L52f552;
  #L52f550.  goto L52f5a4;
  #L52f552.  v2:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f556.  if v9 == v2 then goto L52f59a;
  #L52f55a.  if v9 != v1 then goto L52f560;
  #L52f55e.  goto L52f59a;
  #L52f560.  v1:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f564.  if v9 == v1 then goto L52f590;
  #L52f568.  if v9 != v0 then goto L52f56e;
  #L52f56c.  goto L52f590;
  #L52f56e.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L52f572.  if v9 == v0 then goto L52f586;
  #L52f576.  if v9 != v10 then goto L52f57c;
  #L52f57a.  goto L52f586;
  #L52f57c.  call temp:= `F`(v8) @signature `Ln1/d;.F:(Ljava/lang/Object;)Ljava/math/BigDecimal;` @kind static;
  #L52f582.  v8:= temp @kind object;
  #L52f584.  return v8 @kind object;
  #L52f586.  call temp:= `t`(v8) @signature `Ln1/d;.t:(Ljava/lang/Object;)Ljava/lang/Byte;` @kind static;
  #L52f58c.  v8:= temp @kind object;
  #L52f58e.  return v8 @kind object;
  #L52f590.  call temp:= `D`(v8) @signature `Ln1/d;.D:(Ljava/lang/Object;)Ljava/lang/Short;` @kind static;
  #L52f596.  v8:= temp @kind object;
  #L52f598.  return v8 @kind object;
  #L52f59a.  call temp:= `H`(v8) @signature `Ln1/d;.H:(Ljava/lang/Object;)Ljava/lang/Float;` @kind static;
  #L52f5a0.  v8:= temp @kind object;
  #L52f5a2.  return v8 @kind object;
  #L52f5a4.  call temp:= `I`(v8) @signature `Ln1/d;.I:(Ljava/lang/Object;)Ljava/lang/Double;` @kind static;
  #L52f5aa.  v8:= temp @kind object;
  #L52f5ac.  return v8 @kind object;
}
procedure `void` `b`(`m1.v` v2 @kind this, `m1.p` v3 @kind object, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object, `java.lang.reflect.Type` v6 @kind object) @signature `Lm1/v;.b:(Lm1/p;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L52f600.  v3:= v3.`m1.p.b` @type ^`m1.c0` @kind object;
  #L52f604.  if v4 != 0 then goto L52f62e;
  #L52f608.  v4:= v3.`m1.c0.i` @type ^`int`;
  #L52f60c.  v5:= `@@m1.b.WriteNullNumberAsZero` @type ^`m1.b` @kind object;
  #L52f610.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52f614.  v4:= v4 ^& v5 @kind int;
  #L52f616.  if v4 == 0 then goto L52f626;
  #L52f61a.  v4:= 48I;
  #L52f61e.  call `write`(v3, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52f624.  goto L52f62c;
  #L52f626.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52f62c.  return @kind void;
  #L52f62e.  v5:= instanceof @variable v4 @type ^`java.lang.Float` @kind boolean;
  #L52f632.  v6:= 0I;
  #L52f634.  v0:= ".0" @kind object;
  #L52f638.  if v5 == 0 then goto L52f6bc;
  #L52f63c.  v4:= (`java.lang.Float`) v4 @kind object;
  #L52f640.  call temp:= `floatValue`(v4) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L52f646.  v4:= temp;
  #L52f648.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Float;.isNaN:(F)Z` @kind static;
  #L52f64e.  v5:= temp;
  #L52f650.  if v5 == 0 then goto L52f65c;
  #L52f654.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52f65a.  goto L52f6ba;
  #L52f65c.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Float;.isInfinite:(F)Z` @kind static;
  #L52f662.  v5:= temp;
  #L52f664.  if v5 == 0 then goto L52f670;
  #L52f668.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52f66e.  goto L52f6ba;
  #L52f670.  call temp:= `toString`(v4) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L52f676.  v4:= temp @kind object;
  #L52f678.  call temp:= `endsWith`(v4, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L52f67e.  v5:= temp;
  #L52f680.  if v5 == 0 then goto L52f698;
  #L52f684.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52f68a.  v5:= temp;
  #L52f68c.  v5:= v5 + -2;
  #L52f690.  call temp:= `substring`(v4, v6, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L52f696.  v4:= temp @kind object;
  #L52f698.  call `write`(v3, v4) @signature `Lm1/c0;.write:(Ljava/lang/String;)V` @kind virtual;
  #L52f69e.  v4:= v3.`m1.c0.i` @type ^`int`;
  #L52f6a2.  v5:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52f6a6.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52f6aa.  v4:= v4 ^& v5 @kind int;
  #L52f6ac.  if v4 == 0 then goto L52f6ba;
  #L52f6b0.  v4:= 70I;
  #L52f6b4.  call `write`(v3, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52f6ba.  return @kind void;
  #L52f6bc.  v4:= (`java.lang.Double`) v4 @kind object;
  #L52f6c0.  call temp:= `doubleValue`(v4) @signature `Ljava/lang/Double;.doubleValue:()D` @kind virtual;
  #L52f6c6.  v4:= temp @kind wide;
  #L52f6c8.  call temp:= `isNaN`(v4) @signature `Ljava/lang/Double;.isNaN:(D)Z` @kind static;
  #L52f6ce.  v1:= temp;
  #L52f6d0.  if v1 == 0 then goto L52f6dc;
  #L52f6d4.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52f6da.  goto L52f74c;
  #L52f6dc.  call temp:= `isInfinite`(v4) @signature `Ljava/lang/Double;.isInfinite:(D)Z` @kind static;
  #L52f6e2.  v1:= temp;
  #L52f6e4.  if v1 == 0 then goto L52f6f0;
  #L52f6e8.  call `r`(v3) @signature `Lm1/c0;.r:()V` @kind virtual;
  #L52f6ee.  goto L52f74c;
  #L52f6f0.  v1:= v2.`m1.v.a` @type ^`java.text.DecimalFormat` @kind object;
  #L52f6f4.  if v1 != 0 then goto L52f722;
  #L52f6f8.  call temp:= `toString`(v4) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L52f6fe.  v4:= temp @kind object;
  #L52f700.  call temp:= `endsWith`(v4, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L52f706.  v5:= temp;
  #L52f708.  if v5 == 0 then goto L52f72a;
  #L52f70c.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L52f712.  v5:= temp;
  #L52f714.  v5:= v5 + -2;
  #L52f718.  call temp:= `substring`(v4, v6, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L52f71e.  v4:= temp @kind object;
  #L52f720.  goto L52f72a;
  #L52f722.  call temp:= `format`(v1, v4) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L52f728.  v4:= temp @kind object;
  #L52f72a.  call temp:= `i`(v3, v4) @signature `Lm1/c0;.i:(Ljava/lang/CharSequence;)Lm1/c0;` @kind virtual;
  #L52f730.  v4:= v3.`m1.c0.i` @type ^`int`;
  #L52f734.  v5:= `@@m1.b.WriteClassName` @type ^`m1.b` @kind object;
  #L52f738.  v5:= v5.`m1.b.mask` @type ^`int`;
  #L52f73c.  v4:= v4 ^& v5 @kind int;
  #L52f73e.  if v4 == 0 then goto L52f74c;
  #L52f742.  v4:= 68I;
  #L52f746.  call `write`(v3, v4) @signature `Lm1/c0;.write:(I)V` @kind virtual;
  #L52f74c.  return @kind void;
}
