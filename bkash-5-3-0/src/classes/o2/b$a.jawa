record `o2.b$a` @kind class @AccessFlag PUBLIC extends `o2.b` @kind interface {
}
procedure `void` `<init>`(`o2.b$a` v0 @kind this) @signature `Lo2/b$a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L543dd0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L543dd6.  return @kind void;
}
procedure `void` `d`() @signature `Lo2/b$a;.d:()V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L543de8.  v0:= "MockProvider" @kind object;
  #L543dec.  v1:= "**WARNING** ConfigProxy configProvider is mocked! you need invoke ConfigProxy.getInstance().setConfigProvider(...) before use it!" @kind object;
  #L543df0.  call `c`(v0, v1) @signature `Lp2/c;.c:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L543df6.  return @kind void;
}
procedure `java.lang.String` `a`(`o2.b$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lo2/b$a;.a:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L543d98.  call `d`() @signature `Lo2/b$a;.d:()V` @kind static;
  #L543d9e.  v1:= 0I;
  #L543da0.  return v1 @kind object;
}
procedure `java.lang.String` `b`(`o2.b$a` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lo2/b$a;.b:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L543db4.  call `d`() @signature `Lo2/b$a;.d:()V` @kind static;
  #L543dba.  v1:= 0I;
  #L543dbc.  return v1 @kind object;
}
procedure `void` `c`(`o2.b$a` v0 @kind this, `java.lang.String` v1 @kind object, `o2.c` v2 @kind object) @signature `Lo2/b$a;.c:(Ljava/lang/String;Lo2/c;)V` @AccessFlag PUBLIC {
    temp;

  #L543e08.  call `d`() @signature `Lo2/b$a;.d:()V` @kind static;
  #L543e0e.  return @kind void;
}
