record `q1.d` @kind class @AccessFlag PUBLIC extends `q1.a` @kind class {
  `q1.a` `q1.d.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`q1.d` v0 @kind this, `q1.a` v1 @kind object) @signature `Lq1/d;.<init>:(Lq1/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L555584.  call `<init>`(v0) @signature `Lq1/a;.<init>:()V` @kind direct;
  #L55558a.  v0.`q1.d.d` @type ^`q1.a` := v1 @kind object;
  #L55558e.  v1:= constclass @type ^`q1.d` @kind object;
  #L555592.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L555598.  v1:= temp @kind object;
  #L55559a.  v0.`q1.a.a` @type ^`java.lang.String` := v1 @kind object;
  #L55559e.  return @kind void;
}
procedure `boolean` `i`(`java.lang.Object` v0 @kind object) @signature `Lq1/d;.i:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L555544.  v0:= instanceof @variable v0 @type ^`q1.d` @kind boolean;
  #L555548.  return v0;
}
procedure `java.lang.Object` `h`(`q1.d` v1 @kind this) @signature `Lq1/d;.h:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55555c.  v0:= v1.`q1.d.d` @type ^`q1.a` @kind object;
  #L555560.  if v0 == 0 then goto L55556e;
  #L555564.  call temp:= `h`(v0) @signature `Lq1/a;.h:()Ljava/lang/Object;` @kind virtual;
  #L55556a.  v0:= temp @kind object;
  #L55556c.  return v0 @kind object;
  #L55556e.  v0:= 0I;
  #L555570.  return v0 @kind object;
}
