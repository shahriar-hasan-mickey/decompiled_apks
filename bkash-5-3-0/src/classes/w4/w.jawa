record `w4.w` @kind class @AccessFlag PUBLIC extends `w4.o` @kind interface {
}
global `w4.w` `@@w4.w.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lw4/w;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L56c974.  return @kind void;
}
procedure `void` `<init>`(`w4.w` v0 @kind this) @signature `Lw4/w;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L56c988.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56c98e.  return @kind void;
}
procedure `w4.w` `o`() @signature `Lw4/w;.o:()Lw4/w;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L56cab8.  v0:= constclass @type ^`w4.w` @kind object;
  #L56cabc.  @monitorenter v0
  #L56cabe.  v1:= `@@w4.w.a` @type ^`w4.w` @kind object;
  #L56cac2.  if v1 != 0 then goto L56cad4;
  #L56cac6.  v1:= new `w4.w`;
  #L56caca.  call `<init>`(v1) @signature `Lw4/w;.<init>:()V` @kind direct;
  #L56cad0.  `@@w4.w.a` @type ^`w4.w` := v1 @kind object;
  #L56cad4.  v1:= `@@w4.w.a` @type ^`w4.w` @kind object;
  #L56cad8.  @monitorexit v0
  #L56cada.  return v1 @kind object;
  #L56cadc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56cade.  @monitorexit v0
  #L56cae0.  throw v1;
  catch `java.lang.Throwable` @[L56cabe..L56cad8] goto L56cadc;
}
procedure `void` `a`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.a:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56c9a0.  return @kind void;
}
procedure `void` `b`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.b:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56c9f0.  return @kind void;
}
procedure `void` `c`(`w4.w` v0 @kind this, `w4.s` v1 @kind object) @signature `Lw4/w;.c:(Lw4/s;)V` @AccessFlag PUBLIC {
    temp;

  #L56caa4.  return @kind void;
}
procedure `void` `d`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.d:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56c9dc.  return @kind void;
}
procedure `void` `e`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.e:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca40.  return @kind void;
}
procedure `void` `f`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.f:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca68.  return @kind void;
}
procedure `void` `g`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.g:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca54.  return @kind void;
}
procedure `void` `h`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.h:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56c9c8.  return @kind void;
}
procedure `void` `i`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.i:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca7c.  return @kind void;
}
procedure `void` `j`(`w4.w` v0 @kind this, `w4.s` v1 @kind object) @signature `Lw4/w;.j:(Lw4/s;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca90.  return @kind void;
}
procedure `void` `k`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.k:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca04.  return @kind void;
}
procedure `void` `l`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.l:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca18.  return @kind void;
}
procedure `void` `m`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.m:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56c9b4.  return @kind void;
}
procedure `void` `n`(`w4.w` v0 @kind this, `b3.d` v1 @kind object) @signature `Lw4/w;.n:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;

  #L56ca2c.  return @kind void;
}
