record `w4.e` @kind class @AccessFlag PUBLIC {
  `c3.c` `w4.e.a` @AccessFlag PRIVATE_FINAL;
  `k3.h` `w4.e.b` @AccessFlag PRIVATE_FINAL;
  `k3.k` `w4.e.c` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `w4.e.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `w4.e.e` @AccessFlag PRIVATE_FINAL;
  `w4.x` `w4.e.f` @AccessFlag PRIVATE_FINAL;
  `w4.o` `w4.e.g` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.Class` `@@w4.e.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw4/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L56b2d0.  v0:= constclass @type ^`w4.e` @kind object;
  #L56b2d4.  `@@w4.e.h` @type ^`java.lang.Class` := v0 @kind object;
  #L56b2d8.  return @kind void;
}
procedure `void` `<init>`(`w4.e` v0 @kind this, `c3.c` v1 @kind object, `k3.h` v2 @kind object, `k3.k` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object, `w4.o` v6 @kind object) @signature `Lw4/e;.<init>:(Lc3/c;Lk3/h;Lk3/k;Ljava/util/concurrent/Executor;Ljava/util/concurrent/Executor;Lw4/o;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56b2ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56b2f2.  v0.`w4.e.a` @type ^`c3.c` := v1 @kind object;
  #L56b2f6.  v0.`w4.e.b` @type ^`k3.h` := v2 @kind object;
  #L56b2fa.  v0.`w4.e.c` @type ^`k3.k` := v3 @kind object;
  #L56b2fe.  v0.`w4.e.d` @type ^`java.util.concurrent.Executor` := v4 @kind object;
  #L56b302.  v0.`w4.e.e` @type ^`java.util.concurrent.Executor` := v5 @kind object;
  #L56b306.  v0.`w4.e.g` @type ^`w4.o` := v6 @kind object;
  #L56b30a.  call temp:= `b`() @signature `Lw4/x;.b:()Lw4/x;` @kind static;
  #L56b310.  v1:= temp @kind object;
  #L56b312.  v0.`w4.e.f` @type ^`w4.x` := v1 @kind object;
  #L56b316.  return @kind void;
}
procedure `c3.c` `a`(`w4.e` v0 @kind object) @signature `Lw4/e;.a:(Lw4/e;)Lc3/c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56af9c.  v0:= v0.`w4.e.a` @type ^`c3.c` @kind object;
  #L56afa0.  return v0 @kind object;
}
procedure `w4.x` `b`(`w4.e` v0 @kind object) @signature `Lw4/e;.b:(Lw4/e;)Lw4/x;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56b500.  v0:= v0.`w4.e.f` @type ^`w4.x` @kind object;
  #L56b504.  return v0 @kind object;
}
procedure `java.lang.Class` `c`() @signature `Lw4/e;.c:()Ljava/lang/Class;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L56b180.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b184.  return v0 @kind object;
}
procedure `w4.o` `d`(`w4.e` v0 @kind object) @signature `Lw4/e;.d:(Lw4/e;)Lw4/o;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56b4e8.  v0:= v0.`w4.e.g` @type ^`w4.o` @kind object;
  #L56b4ec.  return v0 @kind object;
}
procedure `k3.g` `e`(`w4.e` v0 @kind object, `b3.d` v1 @kind object) @signature `Lw4/e;.e:(Lw4/e;Lb3/d;)Lk3/g;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56b198.  call temp:= `m`(v0, v1) @signature `Lw4/e;.m:(Lb3/d;)Lk3/g;` @kind direct;
  #L56b19e.  v0:= temp @kind object;
  #L56b1a0.  return v0 @kind object;
}
procedure `void` `f`(`w4.e` v0 @kind object, `b3.d` v1 @kind object, `d5.e` v2 @kind object) @signature `Lw4/e;.f:(Lw4/e;Lb3/d;Ld5/e;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56b328.  call `o`(v0, v1, v2) @signature `Lw4/e;.o:(Lb3/d;Ld5/e;)V` @kind direct;
  #L56b32e.  return @kind void;
}
procedure `k3.k` `g`(`w4.e` v0 @kind object) @signature `Lw4/e;.g:(Lw4/e;)Lk3/k;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56b2b8.  v0:= v0.`w4.e.c` @type ^`k3.k` @kind object;
  #L56b2bc.  return v0 @kind object;
}
procedure `j1.f` `i`(`w4.e` v3 @kind this, `b3.d` v4 @kind object, `d5.e` v5 @kind object) @signature `Lw4/e;.i:(Lb3/d;Ld5/e;)Lj1/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L56afb4.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56afb8.  call temp:= `b`(v4) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56afbe.  v1:= temp @kind object;
  #L56afc0.  v2:= "Found image for %s in staging area" @kind object;
  #L56afc4.  call `o`(v0, v2, v1) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56afca.  v0:= v3.`w4.e.g` @type ^`w4.o` @kind object;
  #L56afce.  call `f`(v0, v4) @signature `Lw4/o;.f:(Lb3/d;)V` @kind interface;
  #L56afd4.  call temp:= `h`(v5) @signature `Lj1/f;.h:(Ljava/lang/Object;)Lj1/f;` @kind static;
  #L56afda.  v4:= temp @kind object;
  #L56afdc.  return v4 @kind object;
}
procedure `j1.f` `k`(`w4.e` v3 @kind this, `b3.d` v4 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v5 @kind object) @signature `Lw4/e;.k:(Lb3/d;Ljava/util/concurrent/atomic/AtomicBoolean;)Lj1/f;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L56b088.  v0:= "BufferedDiskCache_getAsync" @kind object;
  #L56b08c.  call temp:= `d`(v0) @signature `Le5/a;.d:(Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L56b092.  v0:= temp @kind object;
  #L56b094.  v1:= new `w4.e$a`;
  #L56b098.  call `<init>`(v1, v3, v0, v5, v4) @signature `Lw4/e$a;.<init>:(Lw4/e;Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicBoolean;Lb3/d;)V` @kind direct;
  #L56b09e.  v5:= v3.`w4.e.d` @type ^`java.util.concurrent.Executor` @kind object;
  #L56b0a2.  call temp:= `b`(v1, v5) @signature `Lj1/f;.b:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Executor;)Lj1/f;` @kind static;
  #L56b0a8.  v4:= temp @kind object;
  #L56b0aa.  return v4 @kind object;
  #L56b0ac.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L56b0ae.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b0b2.  v1:= 1I;
  #L56b0b4.  v1:= new `java.lang.Object`[v1];
  #L56b0b8.  v2:= 0I;
  #L56b0ba.  call temp:= `b`(v4) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b0c0.  v4:= temp @kind object;
  #L56b0c2.  v1[v2]:= v4 @kind object;
  #L56b0c6.  v4:= "Failed to schedule disk-cache read for %s" @kind object;
  #L56b0ca.  call `w`(v0, v5, v4, v1) @signature `Li3/a;.w:(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56b0d0.  call temp:= `g`(v5) @signature `Lj1/f;.g:(Ljava/lang/Exception;)Lj1/f;` @kind static;
  #L56b0d6.  v4:= temp @kind object;
  #L56b0d8.  return v4 @kind object;
  catch `java.lang.Exception` @[L56b088..L56b0aa] goto L56b0ac;
}
procedure `k3.g` `m`(`w4.e` v6 @kind this, `b3.d` v7 @kind object) @signature `Lw4/e;.m:(Lb3/d;)Lk3/g;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L56b1b4.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b1b8.  v1:= "Disk cache read for %s" @kind object;
  #L56b1bc.  call temp:= `b`(v7) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b1c2.  v2:= temp @kind object;
  #L56b1c4.  call `o`(v0, v1, v2) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b1ca.  v1:= v6.`w4.e.a` @type ^`c3.c` @kind object;
  #L56b1ce.  call temp:= `c`(v1, v7) @signature `Lc3/c;.c:(Lb3/d;)La3/a;` @kind interface;
  #L56b1d4.  v1:= temp @kind object;
  #L56b1d6.  if v1 != 0 then goto L56b1fa;
  #L56b1da.  v1:= "Disk cache miss for %s" @kind object;
  #L56b1de.  call temp:= `b`(v7) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b1e4.  v2:= temp @kind object;
  #L56b1e6.  call `o`(v0, v1, v2) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b1ec.  v0:= v6.`w4.e.g` @type ^`w4.o` @kind object;
  #L56b1f0.  call `k`(v0, v7) @signature `Lw4/o;.k:(Lb3/d;)V` @kind interface;
  #L56b1f6.  v7:= 0I;
  #L56b1f8.  return v7 @kind object;
  #L56b1fa.  v2:= "Found entry in disk cache for %s" @kind object;
  #L56b1fe.  call temp:= `b`(v7) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b204.  v3:= temp @kind object;
  #L56b206.  call `o`(v0, v2, v3) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b20c.  v2:= v6.`w4.e.g` @type ^`w4.o` @kind object;
  #L56b210.  call `b`(v2, v7) @signature `Lw4/o;.b:(Lb3/d;)V` @kind interface;
  #L56b216.  call temp:= `a`(v1) @signature `La3/a;.a:()Ljava/io/InputStream;` @kind interface;
  #L56b21c.  v2:= temp @kind object;
  #L56b21e.  v3:= v6.`w4.e.b` @type ^`k3.h` @kind object;
  #L56b222.  call temp:= `size`(v1) @signature `La3/a;.size:()J` @kind interface;
  #L56b228.  v4:= temp @kind wide;
  #L56b22a.  v1:= (`int`) v4 @kind l2i;
  #L56b22c.  call temp:= `d`(v3, v2, v1) @signature `Lk3/h;.d:(Ljava/io/InputStream;I)Lk3/g;` @kind interface;
  #L56b232.  v1:= temp @kind object;
  #L56b234.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L56b23a.  v2:= "Successful read from disk cache for %s" @kind object;
  #L56b23e.  call temp:= `b`(v7) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b244.  v3:= temp @kind object;
  #L56b246.  call `o`(v0, v2, v3) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b24c.  return v1 @kind object;
  #L56b24e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b250.  call `close`(v2) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L56b256.  throw v0;
  #L56b258.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L56b25a.  v1:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b25e.  v2:= 1I;
  #L56b260.  v2:= new `java.lang.Object`[v2];
  #L56b264.  v3:= 0I;
  #L56b266.  call temp:= `b`(v7) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b26c.  v4:= temp @kind object;
  #L56b26e.  v2[v3]:= v4 @kind object;
  #L56b272.  v3:= "Exception reading from cache for %s" @kind object;
  #L56b276.  call `w`(v1, v0, v3, v2) @signature `Li3/a;.w:(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56b27c.  v1:= v6.`w4.e.g` @type ^`w4.o` @kind object;
  #L56b280.  call `d`(v1, v7) @signature `Lw4/o;.d:(Lb3/d;)V` @kind interface;
  #L56b286.  throw v0;
  catch `java.io.IOException` @[L56b1b4..L56b21e] goto L56b258;
  catch `java.lang.Throwable` @[L56b21e..L56b234] goto L56b24e;
  catch `java.io.IOException` @[L56b234..L56b258] goto L56b258;
}
procedure `void` `o`(`w4.e` v3 @kind this, `b3.d` v4 @kind object, `d5.e` v5 @kind object) @signature `Lw4/e;.o:(Lb3/d;Ld5/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L56b458.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b45c.  call temp:= `b`(v4) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b462.  v1:= temp @kind object;
  #L56b464.  v2:= "About to write to disk-cache for key %s" @kind object;
  #L56b468.  call `o`(v0, v2, v1) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b46e.  v1:= v3.`w4.e.a` @type ^`c3.c` @kind object;
  #L56b472.  v2:= new `w4.e$d`;
  #L56b476.  call `<init>`(v2, v3, v5) @signature `Lw4/e$d;.<init>:(Lw4/e;Ld5/e;)V` @kind direct;
  #L56b47c.  call temp:= `b`(v1, v4, v2) @signature `Lc3/c;.b:(Lb3/d;Lb3/j;)La3/a;` @kind interface;
  #L56b482.  v5:= v3.`w4.e.g` @type ^`w4.o` @kind object;
  #L56b486.  call `l`(v5, v4) @signature `Lw4/o;.l:(Lb3/d;)V` @kind interface;
  #L56b48c.  v5:= "Successful disk-cache write for key %s" @kind object;
  #L56b490.  call temp:= `b`(v4) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b496.  v1:= temp @kind object;
  #L56b498.  call `o`(v0, v5, v1) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56b49e.  goto L56b4c4;
  #L56b4a0.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L56b4a2.  v0:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b4a6.  v1:= 1I;
  #L56b4a8.  v1:= new `java.lang.Object`[v1];
  #L56b4ac.  v2:= 0I;
  #L56b4ae.  call temp:= `b`(v4) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b4b4.  v4:= temp @kind object;
  #L56b4b6.  v1[v2]:= v4 @kind object;
  #L56b4ba.  v4:= "Failed to write to disk-cache for key %s" @kind object;
  #L56b4be.  call `w`(v0, v5, v4, v1) @signature `Li3/a;.w:(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56b4c4.  return @kind void;
  catch `java.io.IOException` @[L56b46e..L56b49e] goto L56b4a0;
}
procedure `void` `h`(`w4.e` v1 @kind this, `b3.d` v2 @kind object) @signature `Lw4/e;.h:(Lb3/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b340.  call temp:= `g`(v2) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56b346.  v0:= v1.`w4.e.a` @type ^`c3.c` @kind object;
  #L56b34a.  call temp:= `d`(v0, v2) @signature `Lc3/c;.d:(Lb3/d;)Z` @kind interface;
  #L56b350.  return @kind void;
}
procedure `j1.f` `j`(`w4.e` v1 @kind this, `b3.d` v2 @kind object, `java.util.concurrent.atomic.AtomicBoolean` v3 @kind object) @signature `Lw4/e;.j:(Lb3/d;Ljava/util/concurrent/atomic/AtomicBoolean;)Lj1/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56aff0.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56aff6.  v0:= temp;
  #L56aff8.  if v0 == 0 then goto L56b006;
  #L56affc.  v0:= "BufferedDiskCache#get" @kind object;
  #L56b000.  call `a`(v0) @signature `Li5/b;.a:(Ljava/lang/String;)V` @kind static;
  #L56b006.  v0:= v1.`w4.e.f` @type ^`w4.x` @kind object;
  #L56b00a.  call temp:= `a`(v0, v2) @signature `Lw4/x;.a:(Lb3/d;)Ld5/e;` @kind virtual;
  #L56b010.  v0:= temp @kind object;
  #L56b012.  if v0 == 0 then goto L56b032;
  #L56b016.  call temp:= `i`(v1, v2, v0) @signature `Lw4/e;.i:(Lb3/d;Ld5/e;)Lj1/f;` @kind direct;
  #L56b01c.  v2:= temp @kind object;
  #L56b01e.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b024.  v3:= temp;
  #L56b026.  if v3 == 0 then goto L56b030;
  #L56b02a.  call `b`() @signature `Li5/b;.b:()V` @kind static;
  #L56b030.  return v2 @kind object;
  #L56b032.  call temp:= `k`(v1, v2, v3) @signature `Lw4/e;.k:(Lb3/d;Ljava/util/concurrent/atomic/AtomicBoolean;)Lj1/f;` @kind direct;
  #L56b038.  v2:= temp @kind object;
  #L56b03a.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b040.  v3:= temp;
  #L56b042.  if v3 == 0 then goto L56b04c;
  #L56b046.  call `b`() @signature `Li5/b;.b:()V` @kind static;
  #L56b04c.  return v2 @kind object;
  #L56b04e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b050.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b056.  v3:= temp;
  #L56b058.  if v3 == 0 then goto L56b062;
  #L56b05c.  call `b`() @signature `Li5/b;.b:()V` @kind static;
  #L56b062.  throw v2;
  catch `java.lang.Throwable` @[L56aff0..L56b01e] goto L56b04e;
  catch `java.lang.Throwable` @[L56b032..L56b03a] goto L56b04e;
}
procedure `void` `l`(`w4.e` v7 @kind this, `b3.d` v8 @kind object, `d5.e` v9 @kind object) @signature `Lw4/e;.l:(Lb3/d;Ld5/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L56b364.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b36a.  v0:= temp;
  #L56b36c.  if v0 == 0 then goto L56b37a;
  #L56b370.  v0:= "BufferedDiskCache#put" @kind object;
  #L56b374.  call `a`(v0) @signature `Li5/b;.a:(Ljava/lang/String;)V` @kind static;
  #L56b37a.  call temp:= `g`(v8) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56b380.  call temp:= `q0`(v9) @signature `Ld5/e;.q0:(Ld5/e;)Z` @kind static;
  #L56b386.  v0:= temp;
  #L56b388.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L56b38e.  v0:= temp @kind object;
  #L56b390.  call `b`(v0) @signature `Lh3/j;.b:(Ljava/lang/Boolean;)V` @kind static;
  #L56b396.  v0:= v7.`w4.e.f` @type ^`w4.x` @kind object;
  #L56b39a.  call `d`(v0, v8, v9) @signature `Lw4/x;.d:(Lb3/d;Ld5/e;)V` @kind virtual;
  #L56b3a0.  call temp:= `i`(v9) @signature `Ld5/e;.i:(Ld5/e;)Ld5/e;` @kind static;
  #L56b3a6.  v0:= temp @kind object;
  #L56b3a8.  v1:= "BufferedDiskCache_putAsync" @kind object;
  #L56b3ac.  call temp:= `d`(v1) @signature `Le5/a;.d:(Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L56b3b2.  v1:= temp @kind object;
  #L56b3b4.  v2:= v7.`w4.e.e` @type ^`java.util.concurrent.Executor` @kind object;
  #L56b3b8.  v3:= new `w4.e$b`;
  #L56b3bc.  call `<init>`(v3, v7, v1, v8, v0) @signature `Lw4/e$b;.<init>:(Lw4/e;Ljava/lang/Object;Lb3/d;Ld5/e;)V` @kind direct;
  #L56b3c2.  call `execute`(v2, v3) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L56b3c8.  goto L56b3fe;
  #L56b3ca.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L56b3cc.  v2:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b3d0.  v3:= "Failed to schedule disk-cache write for %s" @kind object;
  #L56b3d4.  v4:= 1I;
  #L56b3d6.  v4:= new `java.lang.Object`[v4];
  #L56b3da.  v5:= 0I;
  #L56b3dc.  call temp:= `b`(v8) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b3e2.  v6:= temp @kind object;
  #L56b3e4.  v4[v5]:= v6 @kind object;
  #L56b3e8.  call `w`(v2, v1, v3, v4) @signature `Li3/a;.w:(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56b3ee.  v1:= v7.`w4.e.f` @type ^`w4.x` @kind object;
  #L56b3f2.  call temp:= `f`(v1, v8, v9) @signature `Lw4/x;.f:(Lb3/d;Ld5/e;)Z` @kind virtual;
  #L56b3f8.  call `k`(v0) @signature `Ld5/e;.k:(Ld5/e;)V` @kind static;
  #L56b3fe.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b404.  v8:= temp;
  #L56b406.  if v8 == 0 then goto L56b410;
  #L56b40a.  call `b`() @signature `Li5/b;.b:()V` @kind static;
  #L56b410.  return @kind void;
  #L56b412.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b414.  call temp:= `d`() @signature `Li5/b;.d:()Z` @kind static;
  #L56b41a.  v9:= temp;
  #L56b41c.  if v9 == 0 then goto L56b426;
  #L56b420.  call `b`() @signature `Li5/b;.b:()V` @kind static;
  #L56b426.  throw v8;
  catch `java.lang.Throwable` @[L56b364..L56b3a8] goto L56b412;
  catch `java.lang.Exception` @[L56b3a8..L56b3c8] goto L56b3ca;
  catch `java.lang.Throwable` @[L56b3a8..L56b3c8] goto L56b412;
  catch `java.lang.Throwable` @[L56b3cc..L56b3fe] goto L56b412;
}
procedure `j1.f` `n`(`w4.e` v4 @kind this, `b3.d` v5 @kind object) @signature `Lw4/e;.n:(Lb3/d;)Lj1/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56b0fc.  call temp:= `g`(v5) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L56b102.  v0:= v4.`w4.e.f` @type ^`w4.x` @kind object;
  #L56b106.  call temp:= `e`(v0, v5) @signature `Lw4/x;.e:(Lb3/d;)Z` @kind virtual;
  #L56b10c.  v0:= "BufferedDiskCache_remove" @kind object;
  #L56b110.  call temp:= `d`(v0) @signature `Le5/a;.d:(Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L56b116.  v0:= temp @kind object;
  #L56b118.  v1:= new `w4.e$c`;
  #L56b11c.  call `<init>`(v1, v4, v0, v5) @signature `Lw4/e$c;.<init>:(Lw4/e;Ljava/lang/Object;Lb3/d;)V` @kind direct;
  #L56b122.  v0:= v4.`w4.e.e` @type ^`java.util.concurrent.Executor` @kind object;
  #L56b126.  call temp:= `b`(v1, v0) @signature `Lj1/f;.b:(Ljava/util/concurrent/Callable;Ljava/util/concurrent/Executor;)Lj1/f;` @kind static;
  #L56b12c.  v5:= temp @kind object;
  #L56b12e.  return v5 @kind object;
  #L56b130.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L56b132.  v1:= `@@w4.e.h` @type ^`java.lang.Class` @kind object;
  #L56b136.  v2:= 1I;
  #L56b138.  v2:= new `java.lang.Object`[v2];
  #L56b13c.  v3:= 0I;
  #L56b13e.  call temp:= `b`(v5) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L56b144.  v5:= temp @kind object;
  #L56b146.  v2[v3]:= v5 @kind object;
  #L56b14a.  v5:= "Failed to schedule disk-cache remove for %s" @kind object;
  #L56b14e.  call `w`(v1, v0, v5, v2) @signature `Li3/a;.w:(Ljava/lang/Class;Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56b154.  call temp:= `g`(v0) @signature `Lj1/f;.g:(Ljava/lang/Exception;)Lj1/f;` @kind static;
  #L56b15a.  v5:= temp @kind object;
  #L56b15c.  return v5 @kind object;
  catch `java.lang.Exception` @[L56b10c..L56b12e] goto L56b130;
}
