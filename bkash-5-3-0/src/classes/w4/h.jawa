record `w4.h` @kind class @AccessFlag PUBLIC {
  `w4.y` `w4.h.a` @AccessFlag PRIVATE_FINAL;
  `java.util.LinkedHashMap` `w4.h.b` @AccessFlag PRIVATE_FINAL;
  `int` `w4.h.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`w4.h` v1 @kind this, `w4.y` v2 @kind object) @signature `Lw4/h;.<init>:(Lw4/y;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L56b7a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56b7aa.  v0:= new `java.util.LinkedHashMap`;
  #L56b7ae.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L56b7b4.  v1.`w4.h.b` @type ^`java.util.LinkedHashMap` := v0 @kind object;
  #L56b7b8.  v0:= 0I;
  #L56b7ba.  v1.`w4.h.c` @type ^`int` := v0;
  #L56b7be.  v1.`w4.h.a` @type ^`w4.y` := v2 @kind object;
  #L56b7c2.  return @kind void;
}
procedure `int` `f`(`w4.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw4/h;.f:(Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L56b644.  if v2 != 0 then goto L56b64c;
  #L56b648.  v2:= 0I;
  #L56b64a.  goto L56b658;
  #L56b64c.  v0:= v1.`w4.h.a` @type ^`w4.y` @kind object;
  #L56b650.  call temp:= `a`(v0, v2) @signature `Lw4/y;.a:(Ljava/lang/Object;)I` @kind interface;
  #L56b656.  v2:= temp;
  #L56b658.  return v2;
}
procedure `boolean` `a`(`w4.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw4/h;.a:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b5b0.  @monitorenter v1
  #L56b5b2.  v0:= v1.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b5b6.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/LinkedHashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L56b5bc.  v2:= temp;
  #L56b5be.  @monitorexit v1
  #L56b5c0.  return v2;
  #L56b5c2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b5c4.  @monitorexit v1
  #L56b5c6.  throw v2;
  catch `java.lang.Throwable` @[L56b5b2..L56b5be] goto L56b5c2;
}
procedure `java.lang.Object` `b`(`w4.h` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lw4/h;.b:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b66c.  @monitorenter v1
  #L56b66e.  v0:= v1.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b672.  call temp:= `get`(v0, v2) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56b678.  v2:= temp @kind object;
  #L56b67a.  @monitorexit v1
  #L56b67c.  return v2 @kind object;
  #L56b67e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b680.  @monitorexit v1
  #L56b682.  throw v2;
  catch `java.lang.Throwable` @[L56b66e..L56b67a] goto L56b67e;
}
procedure `int` `c`(`w4.h` v1 @kind this) @signature `Lw4/h;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b5e4.  @monitorenter v1
  #L56b5e6.  v0:= v1.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b5ea.  call temp:= `size`(v0) @signature `Ljava/util/LinkedHashMap;.size:()I` @kind virtual;
  #L56b5f0.  v0:= temp;
  #L56b5f2.  @monitorexit v1
  #L56b5f4.  return v0;
  #L56b5f6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b5f8.  @monitorexit v1
  #L56b5fa.  throw v0;
  catch `java.lang.Throwable` @[L56b5e6..L56b5f2] goto L56b5f6;
}
procedure `java.lang.Object` `d`(`w4.h` v1 @kind this) @signature `Lw4/h;.d:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b6a0.  @monitorenter v1
  #L56b6a2.  v0:= v1.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b6a6.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L56b6ac.  v0:= temp;
  #L56b6ae.  if v0 == 0 then goto L56b6b6;
  #L56b6b2.  v0:= 0I;
  #L56b6b4.  goto L56b6d2;
  #L56b6b6.  v0:= v1.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b6ba.  call temp:= `keySet`(v0) @signature `Ljava/util/LinkedHashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L56b6c0.  v0:= temp @kind object;
  #L56b6c2.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56b6c8.  v0:= temp @kind object;
  #L56b6ca.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56b6d0.  v0:= temp @kind object;
  #L56b6d2.  @monitorexit v1
  #L56b6d4.  return v0 @kind object;
  #L56b6d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b6d8.  @monitorexit v1
  #L56b6da.  throw v0;
  catch `java.lang.Throwable` @[L56b6a2..L56b6d2] goto L56b6d6;
}
procedure `int` `e`(`w4.h` v1 @kind this) @signature `Lw4/h;.e:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56b618.  @monitorenter v1
  #L56b61a.  v0:= v1.`w4.h.c` @type ^`int`;
  #L56b61e.  @monitorexit v1
  #L56b620.  return v0;
  #L56b622.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b624.  @monitorexit v1
  #L56b626.  throw v0;
  catch `java.lang.Throwable` @[L56b61a..L56b61e] goto L56b622;
}
procedure `java.lang.Object` `g`(`w4.h` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lw4/h;.g:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L56b6f8.  @monitorenter v3
  #L56b6fa.  v0:= v3.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b6fe.  call temp:= `remove`(v0, v4) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56b704.  v0:= temp @kind object;
  #L56b706.  v1:= v3.`w4.h.c` @type ^`int`;
  #L56b70a.  call temp:= `f`(v3, v0) @signature `Lw4/h;.f:(Ljava/lang/Object;)I` @kind direct;
  #L56b710.  v2:= temp;
  #L56b712.  v1:= v1 - v2 @kind int;
  #L56b714.  v3.`w4.h.c` @type ^`int` := v1;
  #L56b718.  v1:= v3.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b71c.  call temp:= `put`(v1, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56b722.  v4:= v3.`w4.h.c` @type ^`int`;
  #L56b726.  call temp:= `f`(v3, v5) @signature `Lw4/h;.f:(Ljava/lang/Object;)I` @kind direct;
  #L56b72c.  v5:= temp;
  #L56b72e.  v4:= v4 + v5 @kind int;
  #L56b730.  v3.`w4.h.c` @type ^`int` := v4;
  #L56b734.  @monitorexit v3
  #L56b736.  return v0 @kind object;
  #L56b738.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b73a.  @monitorexit v3
  #L56b73c.  throw v4;
  catch `java.lang.Throwable` @[L56b6fa..L56b734] goto L56b738;
}
procedure `java.lang.Object` `h`(`w4.h` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lw4/h;.h:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56b75c.  @monitorenter v2
  #L56b75e.  v0:= v2.`w4.h.b` @type ^`java.util.LinkedHashMap` @kind object;
  #L56b762.  call temp:= `remove`(v0, v3) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L56b768.  v3:= temp @kind object;
  #L56b76a.  v0:= v2.`w4.h.c` @type ^`int`;
  #L56b76e.  call temp:= `f`(v2, v3) @signature `Lw4/h;.f:(Ljava/lang/Object;)I` @kind direct;
  #L56b774.  v1:= temp;
  #L56b776.  v0:= v0 - v1 @kind int;
  #L56b778.  v2.`w4.h.c` @type ^`int` := v0;
  #L56b77c.  @monitorexit v2
  #L56b77e.  return v3 @kind object;
  #L56b780.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L56b782.  @monitorexit v2
  #L56b784.  throw v3;
  catch `java.lang.Throwable` @[L56b75e..L56b77c] goto L56b780;
}
