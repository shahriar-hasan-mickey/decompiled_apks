record `s.c$d` @kind class @AccessFlag PUBLIC extends `s.c` @kind class {
}
procedure `void` `<init>`(`s.c$d` v0 @kind this) @signature `Ls/c$d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L561a14.  call `<init>`(v0) @signature `Ls/c;.<init>:()V` @kind direct;
  #L561a1a.  return @kind void;
}
procedure `void` `h`(`s.c$d` v0 @kind this, `android.view.View` v1 @kind object, `float` v2 ) @signature `Ls/c$d;.h:(Landroid/view/View;F)V` @AccessFlag PUBLIC {
    temp;

  #L561a60.  return @kind void;
}
procedure `void` `i`(`s.c$d` v0 @kind this, `android.view.View` v1 @kind object, `float` v2 , `double` v3 , `double` v5 ) @signature `Ls/c$d;.i:(Landroid/view/View;FDD)V` @AccessFlag PUBLIC {
    temp;

  #L561a2c.  call temp:= `a`(v0, v2) @signature `Lo/j;.a:(F)F` @kind virtual;
  #L561a32.  v2:= temp;
  #L561a34.  call temp:= `atan2`(v5, v3) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L561a3a.  v3:= temp @kind wide;
  #L561a3c.  call temp:= `toDegrees`(v3) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L561a42.  v3:= temp @kind wide;
  #L561a44.  v3:= (`float`) v3 @kind d2f;
  #L561a46.  v2:= v2 + v3 @kind float;
  #L561a48.  call `setRotation`(v1, v2) @signature `Landroid/view/View;.setRotation:(F)V` @kind virtual;
  #L561a4e.  return @kind void;
}
