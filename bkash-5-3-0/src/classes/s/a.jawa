record `s.a` @kind class @AccessFlag PUBLIC extends `androidx.constraintlayout.motion.widget.n` @kind class {
  `o.n` `s.a.a` @AccessFlag PRIVATE;
  `o.k` `s.a.b` @AccessFlag PRIVATE;
  `o.m` `s.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`s.a` v1 @kind this) @signature `Ls/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L561078.  call `<init>`(v1) @signature `Landroidx/constraintlayout/motion/widget/n;.<init>:()V` @kind direct;
  #L56107e.  v0:= new `o.n`;
  #L561082.  call `<init>`(v0) @signature `Lo/n;.<init>:()V` @kind direct;
  #L561088.  v1.`s.a.a` @type ^`o.n` := v0 @kind object;
  #L56108c.  v1.`s.a.c` @type ^`o.m` := v0 @kind object;
  #L561090.  return @kind void;
}
procedure `float` `a`(`s.a` v1 @kind this) @signature `Ls/a;.a:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L561058.  v0:= v1.`s.a.c` @type ^`o.m` @kind object;
  #L56105c.  call temp:= `b`(v0) @signature `Lo/m;.b:()F` @kind interface;
  #L561062.  v0:= temp;
  #L561064.  return v0;
}
procedure `void` `b`(`s.a` v7 @kind this, `float` v8 , `float` v9 , `float` v10 , `float` v11 , `float` v12 , `float` v13 ) @signature `Ls/a;.b:(FFFFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5610a4.  v0:= v7.`s.a.a` @type ^`o.n` @kind object;
  #L5610a8.  v7.`s.a.c` @type ^`o.m` := v0 @kind object;
  #L5610ac.  v1:= v8;
  #L5610ae.  v2:= v9;
  #L5610b0.  v3:= v10;
  #L5610b2.  v4:= v11;
  #L5610b4.  v5:= v12;
  #L5610b6.  v6:= v13;
  #L5610b8.  call `d`(v0, v1, v2, v3, v4, v5, v6) @signature `Lo/n;.d:(FFFFFF)V` @kind virtual;
  #L5610be.  return @kind void;
}
procedure `boolean` `c`(`s.a` v1 @kind this) @signature `Ls/a;.c:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L561018.  v0:= v1.`s.a.c` @type ^`o.m` @kind object;
  #L56101c.  call temp:= `a`(v0) @signature `Lo/m;.a:()Z` @kind interface;
  #L561022.  v0:= temp;
  #L561024.  return v0;
}
procedure `void` `d`(`s.a` v11 @kind this, `float` v12 , `float` v13 , `float` v14 , `float` v15 , `float` v16 , `float` v17 , `float` v18 , `int` v19 ) @signature `Ls/a;.d:(FFFFFFFI)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L5610d0.  v0:= v11 @kind object;
  #L5610d2.  v1:= v0.`s.a.b` @type ^`o.k` @kind object;
  #L5610d6.  if v1 != 0 then goto L5610e8;
  #L5610da.  v1:= new `o.k`;
  #L5610de.  call `<init>`(v1) @signature `Lo/k;.<init>:()V` @kind direct;
  #L5610e4.  v0.`s.a.b` @type ^`o.k` := v1 @kind object;
  #L5610e8.  v2:= v0.`s.a.b` @type ^`o.k` @kind object;
  #L5610ec.  v0.`s.a.c` @type ^`o.m` := v2 @kind object;
  #L5610f0.  v3:= v12;
  #L5610f2.  v4:= v13;
  #L5610f4.  v5:= v14;
  #L5610f6.  v6:= v15;
  #L5610f8.  v7:= v16;
  #L5610fc.  v8:= v17;
  #L561100.  v9:= v18;
  #L561104.  v10:= v19;
  #L561108.  call `d`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lo/k;.d:(FFFFFFFI)V` @kind virtual;
  #L56110e.  return @kind void;
}
procedure `float` `getInterpolation`(`s.a` v1 @kind this, `float` v2 ) @signature `Ls/a;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L561038.  v0:= v1.`s.a.c` @type ^`o.m` @kind object;
  #L56103c.  call temp:= `getInterpolation`(v0, v2) @signature `Lo/m;.getInterpolation:(F)F` @kind interface;
  #L561042.  v2:= temp;
  #L561044.  return v2;
}
