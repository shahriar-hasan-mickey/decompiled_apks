record `s.d` @kind class @AccessFlag PUBLIC {
  `float` `s.d.a` @AccessFlag PUBLIC;
  `int` `s.d.b` @AccessFlag PUBLIC;
  `int` `s.d.c` @AccessFlag PUBLIC;
  `int` `s.d.d` @AccessFlag PUBLIC;
  `int` `s.d.e` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`s.d` v0 @kind this) @signature `Ls/d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L562130.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L562136.  return @kind void;
}
procedure `void` `a`(`s.d` v1 @kind this, `android.view.View` v2 @kind object) @signature `Ls/d;.a:(Landroid/view/View;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L562148.  call temp:= `getLeft`(v2) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L56214e.  v0:= temp;
  #L562150.  v1.`s.d.b` @type ^`int` := v0;
  #L562154.  call temp:= `getTop`(v2) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L56215a.  v0:= temp;
  #L56215c.  v1.`s.d.c` @type ^`int` := v0;
  #L562160.  call temp:= `getRight`(v2) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L562166.  v0:= temp;
  #L562168.  v1.`s.d.d` @type ^`int` := v0;
  #L56216c.  call temp:= `getBottom`(v2) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L562172.  v0:= temp;
  #L562174.  v1.`s.d.e` @type ^`int` := v0;
  #L562178.  call temp:= `getRotation`(v2) @signature `Landroid/view/View;.getRotation:()F` @kind virtual;
  #L56217e.  v2:= temp;
  #L562180.  v1.`s.d.a` @type ^`float` := v2;
  #L562184.  return @kind void;
}
procedure `int` `b`(`s.d` v2 @kind this) @signature `Ls/d;.b:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5620f8.  v0:= v2.`s.d.e` @type ^`int`;
  #L5620fc.  v1:= v2.`s.d.c` @type ^`int`;
  #L562100.  v0:= v0 - v1 @kind int;
  #L562102.  return v0;
}
procedure `int` `c`(`s.d` v2 @kind this) @signature `Ls/d;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L562114.  v0:= v2.`s.d.d` @type ^`int`;
  #L562118.  v1:= v2.`s.d.b` @type ^`int`;
  #L56211c.  v0:= v0 - v1 @kind int;
  #L56211e.  return v0;
}
