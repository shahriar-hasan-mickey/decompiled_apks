record `s.b$d` @kind class @AccessFlag PUBLIC extends `s.b` @kind class {
}
procedure `void` `<init>`(`s.b$d` v0 @kind this) @signature `Ls/b$d;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L561210.  call `<init>`(v0) @signature `Ls/b;.<init>:()V` @kind direct;
  #L561216.  return @kind void;
}
procedure `void` `j`(`s.b$d` v0 @kind this, `android.view.View` v1 @kind object, `float` v2 ) @signature `Ls/b$d;.j:(Landroid/view/View;F)V` @AccessFlag PUBLIC {
    temp;

  #L56125c.  return @kind void;
}
procedure `void` `k`(`s.b$d` v0 @kind this, `android.view.View` v1 @kind object, `float` v2 , `double` v3 , `double` v5 ) @signature `Ls/b$d;.k:(Landroid/view/View;FDD)V` @AccessFlag PUBLIC {
    temp;

  #L561228.  call temp:= `a`(v0, v2) @signature `Lo/e;.a:(F)F` @kind virtual;
  #L56122e.  v2:= temp;
  #L561230.  call temp:= `atan2`(v5, v3) @signature `Ljava/lang/Math;.atan2:(DD)D` @kind static;
  #L561236.  v3:= temp @kind wide;
  #L561238.  call temp:= `toDegrees`(v3) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L56123e.  v3:= temp @kind wide;
  #L561240.  v3:= (`float`) v3 @kind d2f;
  #L561242.  v2:= v2 + v3 @kind float;
  #L561244.  call `setRotation`(v1, v2) @signature `Landroid/view/View;.setRotation:(F)V` @kind virtual;
  #L56124a.  return @kind void;
}
