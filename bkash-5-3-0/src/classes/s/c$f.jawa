record `s.c$f` @kind class @AccessFlag  extends `s.c` @kind class {
}
procedure `void` `<init>`(`s.c$f` v0 @kind this) @signature `Ls/c$f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L561aac.  call `<init>`(v0) @signature `Ls/c;.<init>:()V` @kind direct;
  #L561ab2.  return @kind void;
}
procedure `void` `h`(`s.c$f` v0 @kind this, `android.view.View` v1 @kind object, `float` v2 ) @signature `Ls/c$f;.h:(Landroid/view/View;F)V` @AccessFlag PUBLIC {
    temp;

  #L561ac4.  call temp:= `a`(v0, v2) @signature `Lo/j;.a:(F)F` @kind virtual;
  #L561aca.  v2:= temp;
  #L561acc.  call `setPivotY`(v1, v2) @signature `Landroid/view/View;.setPivotY:(F)V` @kind virtual;
  #L561ad2.  return @kind void;
}
