record `e7.b` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.lang.String` `e7.b.g` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ThreadFactory` `e7.b.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`e7.b` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Le7/b;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4fb4dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fb4e2.  call temp:= `defaultThreadFactory`() @signature `Ljava/util/concurrent/Executors;.defaultThreadFactory:()Ljava/util/concurrent/ThreadFactory;` @kind static;
  #L4fb4e8.  v0:= temp @kind object;
  #L4fb4ea.  v1.`e7.b.h` @type ^`java.util.concurrent.ThreadFactory` := v0 @kind object;
  #L4fb4ee.  v0:= "Name must not be null" @kind object;
  #L4fb4f2.  call temp:= `k`(v2, v0) @signature `Lcom/google/android/gms/common/internal/k;.k:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L4fb4f8.  v1.`e7.b.g` @type ^`java.lang.String` := v2 @kind object;
  #L4fb4fc.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`e7.b` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Le7/b;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L4fb4a8.  v0:= v3.`e7.b.h` @type ^`java.util.concurrent.ThreadFactory` @kind object;
  #L4fb4ac.  v1:= new `e7.c`;
  #L4fb4b0.  v2:= 0I;
  #L4fb4b2.  call `<init>`(v1, v4, v2) @signature `Le7/c;.<init>:(Ljava/lang/Runnable;I)V` @kind direct;
  #L4fb4b8.  call temp:= `newThread`(v0, v1) @signature `Ljava/util/concurrent/ThreadFactory;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @kind interface;
  #L4fb4be.  v4:= temp @kind object;
  #L4fb4c0.  v0:= v3.`e7.b.g` @type ^`java.lang.String` @kind object;
  #L4fb4c4.  call `setName`(v4, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L4fb4ca.  return v4 @kind object;
}
