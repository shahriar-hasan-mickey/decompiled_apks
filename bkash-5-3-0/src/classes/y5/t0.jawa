record `y5.t0` @kind class @AccessFlag FINAL extends `android.database.sqlite.SQLiteOpenHelper` @kind class {
  `int` `y5.t0.g` @AccessFlag PRIVATE_FINAL;
  `boolean` `y5.t0.h` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@y5.t0.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@y5.t0.j` @AccessFlag STATIC;
global `y5.t0$a` `@@y5.t0.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `y5.t0$a` `@@y5.t0.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `y5.t0$a` `@@y5.t0.m` @AccessFlag PRIVATE_STATIC_FINAL;
global `y5.t0$a` `@@y5.t0.n` @AccessFlag PRIVATE_STATIC_FINAL;
global `y5.t0$a` `@@y5.t0.o` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@y5.t0.p` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ly5/t0;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L57a444.  v0:= new `java.lang.StringBuilder`;
  #L57a448.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L57a44e.  v1:= "INSERT INTO global_log_event_state VALUES (" @kind object;
  #L57a452.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a458.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L57a45e.  v1:= temp @kind wide;
  #L57a460.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a466.  v1:= ")" @kind object;
  #L57a46a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a470.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L57a476.  v0:= temp @kind object;
  #L57a478.  `@@y5.t0.i` @type ^`java.lang.String` := v0 @kind object;
  #L57a47c.  v0:= 5I;
  #L57a47e.  `@@y5.t0.j` @type ^`int` := v0;
  #L57a482.  v1:= `@@y5.r0.a` @type ^`y5.r0` @kind object;
  #L57a486.  `@@y5.t0.k` @type ^`y5.t0$a` := v1 @kind object;
  #L57a48a.  v2:= `@@y5.o0.a` @type ^`y5.o0` @kind object;
  #L57a48e.  `@@y5.t0.l` @type ^`y5.t0$a` := v2 @kind object;
  #L57a492.  v3:= `@@y5.p0.a` @type ^`y5.p0` @kind object;
  #L57a496.  `@@y5.t0.m` @type ^`y5.t0$a` := v3 @kind object;
  #L57a49a.  v4:= `@@y5.q0.a` @type ^`y5.q0` @kind object;
  #L57a49e.  `@@y5.t0.n` @type ^`y5.t0$a` := v4 @kind object;
  #L57a4a2.  v5:= `@@y5.s0.a` @type ^`y5.s0` @kind object;
  #L57a4a6.  `@@y5.t0.o` @type ^`y5.t0$a` := v5 @kind object;
  #L57a4aa.  v0:= new `y5.t0$a`[v0];
  #L57a4ae.  v6:= 0I;
  #L57a4b0.  v0[v6]:= v1 @kind object;
  #L57a4b4.  v1:= 1I;
  #L57a4b6.  v0[v1]:= v2 @kind object;
  #L57a4ba.  v1:= 2I;
  #L57a4bc.  v0[v1]:= v3 @kind object;
  #L57a4c0.  v1:= 3I;
  #L57a4c2.  v0[v1]:= v4 @kind object;
  #L57a4c6.  v1:= 4I;
  #L57a4c8.  v0[v1]:= v5 @kind object;
  #L57a4cc.  call temp:= `asList`(v0) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L57a4d2.  v0:= temp @kind object;
  #L57a4d4.  `@@y5.t0.p` @type ^`java.util.List` := v0 @kind object;
  #L57a4d8.  return @kind void;
}
procedure `void` `<init>`(`y5.t0` v1 @kind this, `android.content.Context` v2 @kind object, `java.lang.String` v3 @kind object, `int` v4 ) @signature `Ly5/t0;.<init>:(Landroid/content/Context;Ljava/lang/String;I)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L57a4ec.  v0:= 0I;
  #L57a4ee.  call `<init>`(v1, v2, v3, v0, v4) @signature `Landroid/database/sqlite/SQLiteOpenHelper;.<init>:(Landroid/content/Context;Ljava/lang/String;Landroid/database/sqlite/SQLiteDatabase$CursorFactory;I)V` @kind direct;
  #L57a4f4.  v2:= 0I;
  #L57a4f6.  v1.`y5.t0.h` @type ^`boolean` := v2 @kind boolean;
  #L57a4fa.  v1.`y5.t0.g` @type ^`int` := v4;
  #L57a4fe.  return @kind void;
}
procedure `void` `C`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.C:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L57a5a4.  v0:= "ALTER TABLE events ADD COLUMN payload_encoding TEXT" @kind object;
  #L57a5a8.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a5ae.  return @kind void;
}
procedure `void` `J`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.J:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L57a5c0.  v0:= "ALTER TABLE events ADD COLUMN inline BOOLEAN NOT NULL DEFAULT 1" @kind object;
  #L57a5c4.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a5ca.  v0:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L57a5ce.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a5d4.  v0:= "CREATE TABLE event_payloads (sequence_num INTEGER NOT NULL, event_id INTEGER NOT NULL, bytes BLOB NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE,PRIMARY KEY (sequence_num, event_id))" @kind object;
  #L57a5d8.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a5de.  return @kind void;
}
procedure `void` `Q`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.Q:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L57a5f0.  v0:= "DROP TABLE IF EXISTS log_event_dropped" @kind object;
  #L57a5f4.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a5fa.  v0:= "DROP TABLE IF EXISTS global_log_event_state" @kind object;
  #L57a5fe.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a604.  v0:= "CREATE TABLE log_event_dropped (log_source VARCHAR(45) NOT NULL,reason INTEGER NOT NULL,events_dropped_count BIGINT NOT NULL,PRIMARY KEY(log_source, reason))" @kind object;
  #L57a608.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a60e.  v0:= "CREATE TABLE global_log_event_state (last_metrics_upload_ms BIGINT PRIMARY KEY)" @kind object;
  #L57a612.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a618.  v0:= `@@y5.t0.i` @type ^`java.lang.String` @kind object;
  #L57a61c.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a622.  return @kind void;
}
procedure `void` `V`(`y5.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object, `int` v3 ) @signature `Ly5/t0;.V:(Landroid/database/sqlite/SQLiteDatabase;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L57a694.  call `v`(v1, v2) @signature `Ly5/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L57a69a.  v0:= 0I;
  #L57a69c.  call `Y`(v1, v2, v0, v3) @signature `Ly5/t0;.Y:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L57a6a2.  return @kind void;
}
procedure `void` `Y`(`y5.t0` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object, `int` v5 , `int` v6 ) @signature `Ly5/t0;.Y:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L57a740.  v0:= `@@y5.t0.p` @type ^`java.util.List` @kind object;
  #L57a744.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L57a74a.  v1:= temp;
  #L57a74c.  if v6 > v1 then goto L57a772;
  #L57a750.  if v5 >= v6 then goto L57a770;
  #L57a754.  v0:= `@@y5.t0.p` @type ^`java.util.List` @kind object;
  #L57a758.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L57a75e.  v0:= temp @kind object;
  #L57a760.  v0:= (`y5.t0$a`) v0 @kind object;
  #L57a764.  call `a`(v0, v4) @signature `Ly5/t0$a;.a:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind interface;
  #L57a76a.  v5:= v5 + 1;
  #L57a76e.  goto L57a750;
  #L57a770.  return @kind void;
  #L57a772.  v4:= new `java.lang.IllegalArgumentException`;
  #L57a776.  v1:= new `java.lang.StringBuilder`;
  #L57a77a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L57a780.  v2:= "Migration from " @kind object;
  #L57a784.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a78a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a790.  v5:= " to " @kind object;
  #L57a794.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a79a.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a7a0.  v5:= " was requested, but cannot be performed. Only " @kind object;
  #L57a7a4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a7aa.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L57a7b0.  v5:= temp;
  #L57a7b2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a7b8.  v5:= " migrations are provided" @kind object;
  #L57a7bc.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57a7c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L57a7c8.  v5:= temp @kind object;
  #L57a7ca.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L57a7d0.  throw v4;
}
procedure `void` `e`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Ly5/t0;.e:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L57a3cc.  call `y`(v0) @signature `Ly5/t0;.y:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L57a3d2.  return @kind void;
}
procedure `void` `i`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Ly5/t0;.i:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L57a3e4.  call `C`(v0) @signature `Ly5/t0;.C:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L57a3ea.  return @kind void;
}
procedure `void` `k`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Ly5/t0;.k:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L57a3fc.  call `J`(v0) @signature `Ly5/t0;.J:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L57a402.  return @kind void;
}
procedure `void` `r`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Ly5/t0;.r:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L57a414.  call `w`(v0) @signature `Ly5/t0;.w:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L57a41a.  return @kind void;
}
procedure `void` `s`(`android.database.sqlite.SQLiteDatabase` v0 @kind object) @signature `Ly5/t0;.s:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L57a42c.  call `Q`(v0) @signature `Ly5/t0;.Q:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind static;
  #L57a432.  return @kind void;
}
procedure `void` `v`(`y5.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Ly5/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L57a510.  v0:= v1.`y5.t0.h` @type ^`boolean` @kind boolean;
  #L57a514.  if v0 != 0 then goto L57a51e;
  #L57a518.  call `onConfigure`(v1, v2) @signature `Ly5/t0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind virtual;
  #L57a51e.  return @kind void;
}
procedure `void` `w`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.w:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L57a530.  v0:= "CREATE TABLE events (_id INTEGER PRIMARY KEY, context_id INTEGER NOT NULL, transport_name TEXT NOT NULL, timestamp_ms INTEGER NOT NULL, uptime_ms INTEGER NOT NULL, payload BLOB NOT NULL, code INTEGER, num_attempts INTEGER NOT NULL,FOREIGN KEY (context_id) REFERENCES transport_contexts(_id) ON DELETE CASCADE)" @kind object;
  #L57a534.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a53a.  v0:= "CREATE TABLE event_metadata (_id INTEGER PRIMARY KEY, event_id INTEGER NOT NULL, name TEXT NOT NULL, value TEXT NOT NULL,FOREIGN KEY (event_id) REFERENCES events(_id) ON DELETE CASCADE)" @kind object;
  #L57a53e.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a544.  v0:= "CREATE TABLE transport_contexts (_id INTEGER PRIMARY KEY, backend_name TEXT NOT NULL, priority INTEGER NOT NULL, next_request_ms INTEGER NOT NULL)" @kind object;
  #L57a548.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a54e.  v0:= "CREATE INDEX events_backend_id on events(context_id)" @kind object;
  #L57a552.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a558.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority on transport_contexts(backend_name, priority)" @kind object;
  #L57a55c.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a562.  return @kind void;
}
procedure `void` `y`(`android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.y:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PRIVATE_STATIC_SYNTHETIC {
    temp;
    v0;

  #L57a574.  v0:= "ALTER TABLE transport_contexts ADD COLUMN extras BLOB" @kind object;
  #L57a578.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a57e.  v0:= "CREATE UNIQUE INDEX contexts_backend_priority_extras on transport_contexts(backend_name, priority, extras)" @kind object;
  #L57a582.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a588.  v0:= "DROP INDEX contexts_backend_priority" @kind object;
  #L57a58c.  call `execSQL`(v1, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a592.  return @kind void;
}
procedure `void` `onConfigure`(`y5.t0` v3 @kind this, `android.database.sqlite.SQLiteDatabase` v4 @kind object) @signature `Ly5/t0;.onConfigure:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L57a634.  v0:= 1I;
  #L57a636.  v3.`y5.t0.h` @type ^`boolean` := v0 @kind boolean;
  #L57a63a.  v1:= 0I;
  #L57a63c.  v1:= new `java.lang.String`[v1];
  #L57a640.  v2:= "PRAGMA busy_timeout=0;" @kind object;
  #L57a644.  call temp:= `rawQuery`(v4, v2, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L57a64a.  v1:= temp @kind object;
  #L57a64c.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L57a652.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L57a656.  v2:= 16I;
  #L57a65a.  if v1 < v2 then goto L57a664;
  #L57a65e.  call `setForeignKeyConstraintsEnabled`(v4, v0) @signature `Landroid/database/sqlite/SQLiteDatabase;.setForeignKeyConstraintsEnabled:(Z)V` @kind virtual;
  #L57a664.  return @kind void;
}
procedure `void` `onCreate`(`y5.t0` v1 @kind this, `android.database.sqlite.SQLiteDatabase` v2 @kind object) @signature `Ly5/t0;.onCreate:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57a678.  v0:= v1.`y5.t0.g` @type ^`int`;
  #L57a67c.  call `V`(v1, v2, v0) @signature `Ly5/t0;.V:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L57a682.  return @kind void;
}
procedure `void` `onDowngrade`(`y5.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Ly5/t0;.onDowngrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L57a6b4.  v2:= "DROP TABLE events" @kind object;
  #L57a6b8.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6be.  v2:= "DROP TABLE event_metadata" @kind object;
  #L57a6c2.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6c8.  v2:= "DROP TABLE transport_contexts" @kind object;
  #L57a6cc.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6d2.  v2:= "DROP TABLE IF EXISTS event_payloads" @kind object;
  #L57a6d6.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6dc.  v2:= "DROP TABLE IF EXISTS log_event_dropped" @kind object;
  #L57a6e0.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6e6.  v2:= "DROP TABLE IF EXISTS global_log_event_state" @kind object;
  #L57a6ea.  call `execSQL`(v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L57a6f0.  call `V`(v0, v1, v3) @signature `Ly5/t0;.V:(Landroid/database/sqlite/SQLiteDatabase;I)V` @kind direct;
  #L57a6f6.  return @kind void;
}
procedure `void` `onOpen`(`y5.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object) @signature `Ly5/t0;.onOpen:(Landroid/database/sqlite/SQLiteDatabase;)V` @AccessFlag PUBLIC {
    temp;

  #L57a708.  call `v`(v0, v1) @signature `Ly5/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L57a70e.  return @kind void;
}
procedure `void` `onUpgrade`(`y5.t0` v0 @kind this, `android.database.sqlite.SQLiteDatabase` v1 @kind object, `int` v2 , `int` v3 ) @signature `Ly5/t0;.onUpgrade:(Landroid/database/sqlite/SQLiteDatabase;II)V` @AccessFlag PUBLIC {
    temp;

  #L57a720.  call `v`(v0, v1) @signature `Ly5/t0;.v:(Landroid/database/sqlite/SQLiteDatabase;)V` @kind direct;
  #L57a726.  call `Y`(v0, v1, v2, v3) @signature `Ly5/t0;.Y:(Landroid/database/sqlite/SQLiteDatabase;II)V` @kind direct;
  #L57a72c.  return @kind void;
}
