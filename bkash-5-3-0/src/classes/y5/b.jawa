record `y5.b` @kind class @AccessFlag FINAL extends `y5.k` @kind class {
  `long` `y5.b.a` @AccessFlag PRIVATE_FINAL;
  `p5.o` `y5.b.b` @AccessFlag PRIVATE_FINAL;
  `p5.i` `y5.b.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`y5.b` v0 @kind this, `long` v1 , `p5.o` v3 @kind object, `p5.i` v4 @kind object) @signature `Ly5/b;.<init>:(JLp5/o;Lp5/i;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L57823c.  call `<init>`(v0) @signature `Ly5/k;.<init>:()V` @kind direct;
  #L578242.  v0.`y5.b.a` @type ^`long` := v1 @kind wide;
  #L578246.  v1:= "Null transportContext" @kind object;
  #L57824a.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L578250.  v0.`y5.b.b` @type ^`p5.o` := v3 @kind object;
  #L578254.  v1:= "Null event" @kind object;
  #L578258.  call temp:= `requireNonNull`(v4, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L57825e.  v0.`y5.b.c` @type ^`p5.i` := v4 @kind object;
  #L578262.  return @kind void;
}
procedure `p5.i` `b`(`y5.b` v1 @kind this) @signature `Ly5/b;.b:()Lp5/i;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57820c.  v0:= v1.`y5.b.c` @type ^`p5.i` @kind object;
  #L578210.  return v0 @kind object;
}
procedure `long` `c`(`y5.b` v2 @kind this) @signature `Ly5/b;.c:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5781f4.  v0:= v2.`y5.b.a` @type ^`long` @kind wide;
  #L5781f8.  return v0 @kind wide;
}
procedure `p5.o` `d`(`y5.b` v1 @kind this) @signature `Ly5/b;.d:()Lp5/o;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L578224.  v0:= v1.`y5.b.b` @type ^`p5.o` @kind object;
  #L578228.  return v0 @kind object;
}
procedure `boolean` `equals`(`y5.b` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Ly5/b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5780c4.  v0:= 1I;
  #L5780c6.  if v8 != v7 then goto L5780cc;
  #L5780ca.  return v0;
  #L5780cc.  v1:= instanceof @variable v8 @type ^`y5.k` @kind boolean;
  #L5780d0.  v2:= 0I;
  #L5780d2.  if v1 == 0 then goto L578124;
  #L5780d6.  v8:= (`y5.k`) v8 @kind object;
  #L5780da.  v3:= v7.`y5.b.a` @type ^`long` @kind wide;
  #L5780de.  call temp:= `c`(v8) @signature `Ly5/k;.c:()J` @kind virtual;
  #L5780e4.  v5:= temp @kind wide;
  #L5780e6.  v1:= lcmp(v3, v5);
  #L5780ea.  if v1 != 0 then goto L578120;
  #L5780ee.  v1:= v7.`y5.b.b` @type ^`p5.o` @kind object;
  #L5780f2.  call temp:= `d`(v8) @signature `Ly5/k;.d:()Lp5/o;` @kind virtual;
  #L5780f8.  v3:= temp @kind object;
  #L5780fa.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L578100.  v1:= temp;
  #L578102.  if v1 == 0 then goto L578120;
  #L578106.  v1:= v7.`y5.b.c` @type ^`p5.i` @kind object;
  #L57810a.  call temp:= `b`(v8) @signature `Ly5/k;.b:()Lp5/i;` @kind virtual;
  #L578110.  v8:= temp @kind object;
  #L578112.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L578118.  v8:= temp;
  #L57811a.  if v8 == 0 then goto L578120;
  #L57811e.  goto L578122;
  #L578120.  v0:= 0I;
  #L578122.  return v0;
  #L578124.  return v2;
}
procedure `int` `hashCode`(`y5.b` v4 @kind this) @signature `Ly5/b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L578138.  v0:= v4.`y5.b.a` @type ^`long` @kind wide;
  #L57813c.  v2:= 32I;
  #L578140.  v2:= v0 ^>> v2 @kind long;
  #L578144.  v0:= v0 ^~ v2 @kind long;
  #L578146.  v1:= (`int`) v0 @kind l2i;
  #L578148.  v0:= 1000003I;
  #L57814e.  v1:= v1 ^~ v0 @kind int;
  #L578150.  v1:= v1 * v0 @kind int;
  #L578154.  v2:= v4.`y5.b.b` @type ^`p5.o` @kind object;
  #L578158.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L57815e.  v2:= temp;
  #L578160.  v1:= v1 ^~ v2 @kind int;
  #L578162.  v1:= v1 * v0 @kind int;
  #L578166.  v0:= v4.`y5.b.c` @type ^`p5.i` @kind object;
  #L57816a.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L578170.  v0:= temp;
  #L578172.  v0:= v0 ^~ v1 @kind int;
  #L578174.  return v0;
}
procedure `java.lang.String` `toString`(`y5.b` v3 @kind this) @signature `Ly5/b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L578188.  v0:= new `java.lang.StringBuilder`;
  #L57818c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L578192.  v1:= "PersistedEvent{id=" @kind object;
  #L578196.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57819c.  v1:= v3.`y5.b.a` @type ^`long` @kind wide;
  #L5781a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781a6.  v1:= ", transportContext=" @kind object;
  #L5781aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781b0.  v1:= v3.`y5.b.b` @type ^`p5.o` @kind object;
  #L5781b4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781ba.  v1:= ", event=" @kind object;
  #L5781be.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781c4.  v1:= v3.`y5.b.c` @type ^`p5.i` @kind object;
  #L5781c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781ce.  v1:= "}" @kind object;
  #L5781d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5781d8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5781de.  v0:= temp @kind object;
  #L5781e0.  return v0 @kind object;
}
