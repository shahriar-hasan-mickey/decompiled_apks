record `a.a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `a.a.a` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `a.a.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`a.a` v1 @kind this) @signature `La/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L17f5b8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L17f5be.  v0:= new `java.util.concurrent.CopyOnWriteArraySet`;
  #L17f5c2.  call `<init>`(v0) @signature `Ljava/util/concurrent/CopyOnWriteArraySet;.<init>:()V` @kind direct;
  #L17f5c8.  v1.`a.a.a` @type ^`java.util.Set` := v0 @kind object;
  #L17f5cc.  return @kind void;
}
procedure `void` `a`(`a.a` v1 @kind this, `a.b` v2 @kind object) @signature `La/a;.a:(La/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17f5e0.  v0:= v1.`a.a.b` @type ^`android.content.Context` @kind object;
  #L17f5e4.  if v0 == 0 then goto L17f5f2;
  #L17f5e8.  v0:= v1.`a.a.b` @type ^`android.content.Context` @kind object;
  #L17f5ec.  call `a`(v2, v0) @signature `La/b;.a:(Landroid/content/Context;)V` @kind interface;
  #L17f5f2.  v0:= v1.`a.a.a` @type ^`java.util.Set` @kind object;
  #L17f5f6.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L17f5fc.  return @kind void;
}
procedure `void` `b`(`a.a` v1 @kind this) @signature `La/a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17f610.  v0:= 0I;
  #L17f612.  v1.`a.a.b` @type ^`android.content.Context` := v0 @kind object;
  #L17f616.  return @kind void;
}
procedure `void` `c`(`a.a` v2 @kind this, `android.content.Context` v3 @kind object) @signature `La/a;.c:(Landroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L17f628.  v2.`a.a.b` @type ^`android.content.Context` := v3 @kind object;
  #L17f62c.  v0:= v2.`a.a.a` @type ^`java.util.Set` @kind object;
  #L17f630.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L17f636.  v0:= temp @kind object;
  #L17f638.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L17f63e.  v1:= temp;
  #L17f640.  if v1 == 0 then goto L17f658;
  #L17f644.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L17f64a.  v1:= temp @kind object;
  #L17f64c.  v1:= (`a.b`) v1 @kind object;
  #L17f650.  call `a`(v1, v3) @signature `La/b;.a:(Landroid/content/Context;)V` @kind interface;
  #L17f656.  goto L17f638;
  #L17f658.  return @kind void;
}
procedure `android.content.Context` `d`(`a.a` v1 @kind this) @signature `La/a;.d:()Landroid/content/Context;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17f5a0.  v0:= v1.`a.a.b` @type ^`android.content.Context` @kind object;
  #L17f5a4.  return v0 @kind object;
}
procedure `void` `e`(`a.a` v1 @kind this, `a.b` v2 @kind object) @signature `La/a;.e:(La/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L17f66c.  v0:= v1.`a.a.a` @type ^`java.util.Set` @kind object;
  #L17f670.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L17f676.  return @kind void;
}
