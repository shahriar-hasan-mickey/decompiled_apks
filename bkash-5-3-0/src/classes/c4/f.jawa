record `c4.f` @kind class @AccessFlag PUBLIC extends `c4.a` @kind class {
  `c4.f$a` `c4.f.A` @AccessFlag PRIVATE;
  `boolean` `c4.f.B` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable`[] `c4.f.o` @AccessFlag PRIVATE_FINAL;
  `boolean` `c4.f.p` @AccessFlag PRIVATE_FINAL;
  `int` `c4.f.q` @AccessFlag PRIVATE_FINAL;
  `int` `c4.f.r` @AccessFlag PRIVATE_FINAL;
  `int` `c4.f.s` @AccessFlag ;
  `int` `c4.f.t` @AccessFlag ;
  `long` `c4.f.u` @AccessFlag ;
  `int`[] `c4.f.v` @AccessFlag ;
  `int`[] `c4.f.w` @AccessFlag ;
  `int` `c4.f.x` @AccessFlag ;
  `boolean`[] `c4.f.y` @AccessFlag ;
  `int` `c4.f.z` @AccessFlag ;
}
procedure `void` `<init>`(`c4.f` v3 @kind this, `android.graphics.drawable.Drawable`[] v4 @kind object, `boolean` v5 , `int` v6 ) @signature `Lc4/f;.<init>:([Landroid/graphics/drawable/Drawable;ZI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2a60f0.  call `<init>`(v3, v4) @signature `Lc4/a;.<init>:([Landroid/graphics/drawable/Drawable;)V` @kind direct;
  #L2a60f6.  v0:= length @variable v4;
  #L2a60f8.  v1:= 1I;
  #L2a60fa.  v2:= 0I;
  #L2a60fc.  if v0 < v1 then goto L2a6102;
  #L2a6100.  goto L2a6104;
  #L2a6102.  v1:= 0I;
  #L2a6104.  v0:= "At least one layer required!" @kind object;
  #L2a6108.  call `j`(v1, v0) @signature `Lh3/j;.j:(ZLjava/lang/Object;)V` @kind static;
  #L2a610e.  v3.`c4.f.o` @type ^`android.graphics.drawable.Drawable`[] := v4 @kind object;
  #L2a6112.  v0:= length @variable v4;
  #L2a6114.  v0:= new `int`[v0];
  #L2a6118.  v3.`c4.f.v` @type ^`int`[] := v0 @kind object;
  #L2a611c.  v0:= length @variable v4;
  #L2a611e.  v0:= new `int`[v0];
  #L2a6122.  v3.`c4.f.w` @type ^`int`[] := v0 @kind object;
  #L2a6126.  v0:= 255I;
  #L2a612a.  v3.`c4.f.x` @type ^`int` := v0;
  #L2a612e.  v4:= length @variable v4;
  #L2a6130.  v4:= new `boolean`[v4];
  #L2a6134.  v3.`c4.f.y` @type ^`boolean`[] := v4 @kind object;
  #L2a6138.  v3.`c4.f.z` @type ^`int` := v2;
  #L2a613c.  v3.`c4.f.p` @type ^`boolean` := v5 @kind boolean;
  #L2a6140.  if v5 == 0 then goto L2a6148;
  #L2a6144.  v2:= 255I;
  #L2a6148.  v3.`c4.f.q` @type ^`int` := v2;
  #L2a614c.  v3.`c4.f.r` @type ^`int` := v6;
  #L2a6150.  call `s`(v3) @signature `Lc4/f;.s:()V` @kind direct;
  #L2a6156.  return @kind void;
}
procedure `void` `j`(`c4.f` v1 @kind this, `android.graphics.Canvas` v2 @kind object, `android.graphics.drawable.Drawable` v3 @kind object, `int` v4 ) @signature `Lc4/f;.j:(Landroid/graphics/Canvas;Landroid/graphics/drawable/Drawable;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a6290.  if v3 == 0 then goto L2a62c4;
  #L2a6294.  if v4 <= 0 then goto L2a62c4;
  #L2a6298.  v0:= v1.`c4.f.z` @type ^`int`;
  #L2a629c.  v0:= v0 + 1;
  #L2a62a0.  v1.`c4.f.z` @type ^`int` := v0;
  #L2a62a4.  call temp:= `mutate`(v3) @signature `Landroid/graphics/drawable/Drawable;.mutate:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L2a62aa.  v0:= temp @kind object;
  #L2a62ac.  call `setAlpha`(v0, v4) @signature `Landroid/graphics/drawable/Drawable;.setAlpha:(I)V` @kind virtual;
  #L2a62b2.  v4:= v1.`c4.f.z` @type ^`int`;
  #L2a62b6.  v4:= v4 + -1;
  #L2a62ba.  v1.`c4.f.z` @type ^`int` := v4;
  #L2a62be.  call `draw`(v3, v2) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L2a62c4.  return @kind void;
}
procedure `void` `q`(`c4.f` v1 @kind this) @signature `Lc4/f;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a63e8.  v0:= v1.`c4.f.B` @type ^`boolean` @kind boolean;
  #L2a63ec.  if v0 != 0 then goto L2a63f2;
  #L2a63f0.  return @kind void;
  #L2a63f2.  v0:= 0I;
  #L2a63f4.  v1.`c4.f.B` @type ^`boolean` := v0 @kind boolean;
  #L2a63f8.  v0:= v1.`c4.f.A` @type ^`c4.f$a` @kind object;
  #L2a63fc.  if v0 == 0 then goto L2a6406;
  #L2a6400.  call `b`(v0) @signature `Lc4/f$a;.b:()V` @kind interface;
  #L2a6406.  return @kind void;
}
procedure `void` `r`(`c4.f` v3 @kind this) @signature `Lc4/f;.r:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2a6418.  v0:= v3.`c4.f.B` @type ^`boolean` @kind boolean;
  #L2a641c.  if v0 == 0 then goto L2a6422;
  #L2a6420.  return @kind void;
  #L2a6422.  v0:= v3.`c4.f.r` @type ^`int`;
  #L2a6426.  if v0 < 0 then goto L2a6454;
  #L2a642a.  v1:= v3.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a642e.  v2:= length @variable v1;
  #L2a6430.  if v0 < v2 then goto L2a6436;
  #L2a6434.  goto L2a6454;
  #L2a6436.  v0:= v1[v0] @kind boolean;
  #L2a643a.  if v0 != 0 then goto L2a6440;
  #L2a643e.  return @kind void;
  #L2a6440.  v0:= 1I;
  #L2a6442.  v3.`c4.f.B` @type ^`boolean` := v0 @kind boolean;
  #L2a6446.  v0:= v3.`c4.f.A` @type ^`c4.f$a` @kind object;
  #L2a644a.  if v0 == 0 then goto L2a6454;
  #L2a644e.  call `a`(v0) @signature `Lc4/f$a;.a:()V` @kind interface;
  #L2a6454.  return @kind void;
}
procedure `void` `s`(`c4.f` v4 @kind this) @signature `Lc4/f;.s:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a6468.  v0:= 2I;
  #L2a646a.  v4.`c4.f.s` @type ^`int` := v0;
  #L2a646e.  v0:= v4.`c4.f.v` @type ^`int`[] @kind object;
  #L2a6472.  v1:= v4.`c4.f.q` @type ^`int`;
  #L2a6476.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L2a647c.  v0:= v4.`c4.f.v` @type ^`int`[] @kind object;
  #L2a6480.  v1:= 0I;
  #L2a6482.  v2:= 255I;
  #L2a6486.  v0[v1]:= v2;
  #L2a648a.  v0:= v4.`c4.f.w` @type ^`int`[] @kind object;
  #L2a648e.  v3:= v4.`c4.f.q` @type ^`int`;
  #L2a6492.  call `fill`(v0, v3) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L2a6498.  v0:= v4.`c4.f.w` @type ^`int`[] @kind object;
  #L2a649c.  v0[v1]:= v2;
  #L2a64a0.  v0:= v4.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a64a4.  v2:= v4.`c4.f.p` @type ^`boolean` @kind boolean;
  #L2a64a8.  call `fill`(v0, v2) @signature `Ljava/util/Arrays;.fill:([ZZ)V` @kind static;
  #L2a64ae.  v0:= v4.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a64b2.  v2:= 1I;
  #L2a64b4.  v0[v1]:= v2 @kind boolean;
  #L2a64b8.  return @kind void;
}
procedure `boolean` `v`(`c4.f` v9 @kind this, `float` v10 ) @signature `Lc4/f;.v:(F)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2a6020.  v0:= 1I;
  #L2a6022.  v1:= 0I;
  #L2a6024.  v2:= 0I;
  #L2a6026.  v3:= 1I;
  #L2a6028.  v4:= v9.`c4.f.o` @type ^`android.graphics.drawable.Drawable`[] @kind object;
  #L2a602c.  v4:= length @variable v4;
  #L2a602e.  if v2 >= v4 then goto L2a60aa;
  #L2a6032.  v4:= v9.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a6036.  v5:= v4[v2] @kind boolean;
  #L2a603a.  if v5 == 0 then goto L2a6042;
  #L2a603e.  v5:= 1I;
  #L2a6040.  goto L2a6044;
  #L2a6042.  v5:= -1I;
  #L2a6044.  v6:= v9.`c4.f.w` @type ^`int`[] @kind object;
  #L2a6048.  v7:= v9.`c4.f.v` @type ^`int`[] @kind object;
  #L2a604c.  v7:= v7[v2];
  #L2a6050.  v7:= (`float`) v7 @kind i2f;
  #L2a6052.  v8:= 255I;
  #L2a6056.  v5:= v5 * 255;
  #L2a605a.  v5:= (`float`) v5 @kind i2f;
  #L2a605c.  v5:= v5 * v10 @kind float;
  #L2a6060.  v7:= v7 + v5 @kind float;
  #L2a6062.  v5:= (`int`) v7 @kind f2i;
  #L2a6064.  v6[v2]:= v5;
  #L2a6068.  v5:= v6[v2];
  #L2a606c.  if v5 >= 0 then goto L2a6074;
  #L2a6070.  v6[v2]:= v1;
  #L2a6074.  v5:= v6[v2];
  #L2a6078.  if v5 <= v8 then goto L2a6080;
  #L2a607c.  v6[v2]:= v8;
  #L2a6080.  v5:= v4[v2] @kind boolean;
  #L2a6084.  if v5 == 0 then goto L2a6092;
  #L2a6088.  v5:= v6[v2];
  #L2a608c.  if v5 >= v8 then goto L2a6092;
  #L2a6090.  v3:= 0I;
  #L2a6092.  v4:= v4[v2] @kind boolean;
  #L2a6096.  if v4 != 0 then goto L2a60a4;
  #L2a609a.  v4:= v6[v2];
  #L2a609e.  if v4 <= 0 then goto L2a60a4;
  #L2a60a2.  v3:= 0I;
  #L2a60a4.  v2:= v2 + 1;
  #L2a60a8.  goto L2a6028;
  #L2a60aa.  return v3;
}
procedure `void` `draw`(`c4.f` v8 @kind this, `android.graphics.Canvas` v9 @kind object) @signature `Lc4/f;.draw:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a6188.  v0:= v8.`c4.f.s` @type ^`int`;
  #L2a618c.  v1:= 2I;
  #L2a618e.  v2:= 0I;
  #L2a6190.  v3:= 1I;
  #L2a6192.  if v0 == 0 then goto L2a61de;
  #L2a6196.  if v0 == v3 then goto L2a619c;
  #L2a619a.  goto L2a622a;
  #L2a619c.  v0:= v8.`c4.f.t` @type ^`int`;
  #L2a61a0.  if v0 <= 0 then goto L2a61a8;
  #L2a61a4.  v0:= 1I;
  #L2a61a6.  goto L2a61aa;
  #L2a61a8.  v0:= 0I;
  #L2a61aa.  call `i`(v0) @signature `Lh3/j;.i:(Z)V` @kind static;
  #L2a61b0.  call temp:= `p`(v8) @signature `Lc4/f;.p:()J` @kind virtual;
  #L2a61b6.  v4:= temp @kind wide;
  #L2a61b8.  v6:= v8.`c4.f.u` @type ^`long` @kind wide;
  #L2a61bc.  v4:= v4 - v6 @kind long;
  #L2a61be.  v0:= (`float`) v4 @kind l2f;
  #L2a61c0.  v4:= v8.`c4.f.t` @type ^`int`;
  #L2a61c4.  v4:= (`float`) v4 @kind i2f;
  #L2a61c6.  v0:= v0 / v4 @kind float;
  #L2a61c8.  call temp:= `v`(v8, v0) @signature `Lc4/f;.v:(F)Z` @kind direct;
  #L2a61ce.  v0:= temp;
  #L2a61d0.  if v0 == 0 then goto L2a61d6;
  #L2a61d4.  goto L2a61d8;
  #L2a61d6.  v1:= 1I;
  #L2a61d8.  v8.`c4.f.s` @type ^`int` := v1;
  #L2a61dc.  goto L2a6228;
  #L2a61de.  v0:= v8.`c4.f.w` @type ^`int`[] @kind object;
  #L2a61e2.  v4:= v8.`c4.f.v` @type ^`int`[] @kind object;
  #L2a61e6.  v5:= v8.`c4.f.o` @type ^`android.graphics.drawable.Drawable`[] @kind object;
  #L2a61ea.  v5:= length @variable v5;
  #L2a61ec.  call `arraycopy`(v0, v2, v4, v2, v5) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L2a61f2.  call temp:= `p`(v8) @signature `Lc4/f;.p:()J` @kind virtual;
  #L2a61f8.  v4:= temp @kind wide;
  #L2a61fa.  v8.`c4.f.u` @type ^`long` := v4 @kind wide;
  #L2a61fe.  v0:= v8.`c4.f.t` @type ^`int`;
  #L2a6202.  if v0 != 0 then goto L2a620c;
  #L2a6206.  v0:= 1.0F;
  #L2a620a.  goto L2a620e;
  #L2a620c.  v0:= 0I;
  #L2a620e.  call temp:= `v`(v8, v0) @signature `Lc4/f;.v:(F)Z` @kind direct;
  #L2a6214.  v0:= temp;
  #L2a6216.  call `r`(v8) @signature `Lc4/f;.r:()V` @kind direct;
  #L2a621c.  if v0 == 0 then goto L2a6222;
  #L2a6220.  goto L2a6224;
  #L2a6222.  v1:= 1I;
  #L2a6224.  v8.`c4.f.s` @type ^`int` := v1;
  #L2a6228.  v3:= v0;
  #L2a622a.  v0:= v8.`c4.f.o` @type ^`android.graphics.drawable.Drawable`[] @kind object;
  #L2a622e.  v1:= length @variable v0;
  #L2a6230.  if v2 >= v1 then goto L2a626c;
  #L2a6234.  v0:= v0[v2] @kind object;
  #L2a6238.  v1:= v8.`c4.f.w` @type ^`int`[] @kind object;
  #L2a623c.  v1:= v1[v2];
  #L2a6240.  v4:= v8.`c4.f.x` @type ^`int`;
  #L2a6244.  v1:= v1 * v4 @kind int;
  #L2a6248.  v4:= (`double`) v1 @kind i2d;
  #L2a624a.  v6:= 255.0D;
  #L2a6254.  v4:= v4 / v6 @kind double;
  #L2a6256.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L2a625c.  v4:= temp @kind wide;
  #L2a625e.  v1:= (`int`) v4 @kind d2i;
  #L2a6260.  call `j`(v8, v9, v0, v1) @signature `Lc4/f;.j:(Landroid/graphics/Canvas;Landroid/graphics/drawable/Drawable;I)V` @kind direct;
  #L2a6266.  v2:= v2 + 1;
  #L2a626a.  goto L2a622a;
  #L2a626c.  if v3 == 0 then goto L2a6278;
  #L2a6270.  call `q`(v8) @signature `Lc4/f;.q:()V` @kind direct;
  #L2a6276.  goto L2a627e;
  #L2a6278.  call `invalidateSelf`(v8) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a627e.  return @kind void;
}
procedure `int` `getAlpha`(`c4.f` v1 @kind this) @signature `Lc4/f;.getAlpha:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a60bc.  v0:= v1.`c4.f.x` @type ^`int`;
  #L2a60c0.  return v0;
}
procedure `void` `h`(`c4.f` v1 @kind this) @signature `Lc4/f;.h:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a6168.  v0:= v1.`c4.f.z` @type ^`int`;
  #L2a616c.  v0:= v0 + 1;
  #L2a6170.  v1.`c4.f.z` @type ^`int` := v0;
  #L2a6174.  return @kind void;
}
procedure `void` `invalidateSelf`(`c4.f` v1 @kind this) @signature `Lc4/f;.invalidateSelf:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a63c8.  v0:= v1.`c4.f.z` @type ^`int`;
  #L2a63cc.  if v0 != 0 then goto L2a63d6;
  #L2a63d0.  call `invalidateSelf`(v1) @signature `Landroid/graphics/drawable/Drawable;.invalidateSelf:()V` @kind super;
  #L2a63d6.  return @kind void;
}
procedure `void` `k`(`c4.f` v1 @kind this) @signature `Lc4/f;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a62d8.  v0:= v1.`c4.f.z` @type ^`int`;
  #L2a62dc.  v0:= v0 + -1;
  #L2a62e0.  v1.`c4.f.z` @type ^`int` := v0;
  #L2a62e4.  call `invalidateSelf`(v1) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a62ea.  return @kind void;
}
procedure `void` `l`(`c4.f` v2 @kind this) @signature `Lc4/f;.l:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a62fc.  v0:= 0I;
  #L2a62fe.  v2.`c4.f.s` @type ^`int` := v0;
  #L2a6302.  v0:= v2.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a6306.  v1:= 1I;
  #L2a6308.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([ZZ)V` @kind static;
  #L2a630e.  call `invalidateSelf`(v2) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a6314.  return @kind void;
}
procedure `void` `m`(`c4.f` v2 @kind this, `int` v3 ) @signature `Lc4/f;.m:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a6328.  v0:= 0I;
  #L2a632a.  v2.`c4.f.s` @type ^`int` := v0;
  #L2a632e.  v0:= v2.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a6332.  v1:= 1I;
  #L2a6334.  v0[v3]:= v1 @kind boolean;
  #L2a6338.  call `invalidateSelf`(v2) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a633e.  return @kind void;
}
procedure `void` `n`(`c4.f` v2 @kind this, `int` v3 ) @signature `Lc4/f;.n:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a6350.  v0:= 0I;
  #L2a6352.  v2.`c4.f.s` @type ^`int` := v0;
  #L2a6356.  v1:= v2.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a635a.  v1[v3]:= v0 @kind boolean;
  #L2a635e.  call `invalidateSelf`(v2) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a6364.  return @kind void;
}
procedure `void` `o`(`c4.f` v4 @kind this) @signature `Lc4/f;.o:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a6378.  v0:= 2I;
  #L2a637a.  v4.`c4.f.s` @type ^`int` := v0;
  #L2a637e.  v0:= 0I;
  #L2a6380.  v1:= 0I;
  #L2a6382.  v2:= v4.`c4.f.o` @type ^`android.graphics.drawable.Drawable`[] @kind object;
  #L2a6386.  v2:= length @variable v2;
  #L2a6388.  if v1 >= v2 then goto L2a63ae;
  #L2a638c.  v2:= v4.`c4.f.w` @type ^`int`[] @kind object;
  #L2a6390.  v3:= v4.`c4.f.y` @type ^`boolean`[] @kind object;
  #L2a6394.  v3:= v3[v1] @kind boolean;
  #L2a6398.  if v3 == 0 then goto L2a63a2;
  #L2a639c.  v3:= 255I;
  #L2a63a0.  goto L2a63a4;
  #L2a63a2.  v3:= 0I;
  #L2a63a4.  v2[v1]:= v3;
  #L2a63a8.  v1:= v1 + 1;
  #L2a63ac.  goto L2a6382;
  #L2a63ae.  call `invalidateSelf`(v4) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a63b4.  return @kind void;
}
procedure `long` `p`(`c4.f` v2 @kind this) @signature `Lc4/f;.p:()J` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L2a60d4.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L2a60da.  v0:= temp @kind wide;
  #L2a60dc.  return v0 @kind wide;
}
procedure `void` `setAlpha`(`c4.f` v1 @kind this, `int` v2 ) @signature `Lc4/f;.setAlpha:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a64cc.  v0:= v1.`c4.f.x` @type ^`int`;
  #L2a64d0.  if v0 == v2 then goto L2a64de;
  #L2a64d4.  v1.`c4.f.x` @type ^`int` := v2;
  #L2a64d8.  call `invalidateSelf`(v1) @signature `Lc4/f;.invalidateSelf:()V` @kind virtual;
  #L2a64de.  return @kind void;
}
procedure `void` `t`(`c4.f` v0 @kind this, `c4.f$a` v1 @kind object) @signature `Lc4/f;.t:(Lc4/f$a;)V` @AccessFlag PUBLIC {
    temp;

  #L2a64f0.  v0.`c4.f.A` @type ^`c4.f$a` := v1 @kind object;
  #L2a64f4.  return @kind void;
}
procedure `void` `u`(`c4.f` v1 @kind this, `int` v2 ) @signature `Lc4/f;.u:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a6508.  v1.`c4.f.t` @type ^`int` := v2;
  #L2a650c.  v2:= v1.`c4.f.s` @type ^`int`;
  #L2a6510.  v0:= 1I;
  #L2a6512.  if v2 != v0 then goto L2a651c;
  #L2a6516.  v2:= 0I;
  #L2a6518.  v1.`c4.f.s` @type ^`int` := v2;
  #L2a651c.  return @kind void;
}
