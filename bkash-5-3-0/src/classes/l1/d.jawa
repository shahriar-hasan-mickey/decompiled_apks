record `l1.d` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `n1.a` `l1.d.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.Class` `l1.d.b` @AccessFlag PUBLIC_FINAL;
  `java.lang.Enum`[] `l1.d.c` @AccessFlag PROTECTED;
  `long`[] `l1.d.d` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`l1.d` v8 @kind this, `java.lang.Class` v9 @kind object, `n1.a` v10 @kind object, `int` v11 ) @signature `Ll1/d;.<init>:(Ljava/lang/Class;Ln1/a;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L52538c.  call `<init>`(v8) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L525392.  v8.`l1.d.b` @type ^`java.lang.Class` := v9 @kind object;
  #L525396.  v8.`l1.d.a` @type ^`n1.a` := v10 @kind object;
  #L52539a.  if v10 != 0 then goto L5253a0;
  #L52539e.  return @kind void;
  #L5253a0.  v9:= v10.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L5253a4.  call temp:= `isEnum`(v9) @signature `Ljava/lang/Class;.isEnum:()Z` @kind virtual;
  #L5253aa.  v10:= temp;
  #L5253ac.  if v10 == 0 then goto L525480;
  #L5253b0.  call temp:= `getEnumConstants`(v9) @signature `Ljava/lang/Class;.getEnumConstants:()[Ljava/lang/Object;` @kind virtual;
  #L5253b6.  v9:= temp @kind object;
  #L5253b8.  v9:= (`java.lang.Enum`[]) v9 @kind object;
  #L5253bc.  v10:= length @variable v9;
  #L5253be.  v11:= new `long`[v10];
  #L5253c2.  v0:= length @variable v9;
  #L5253c4.  v0:= new `long`[v0];
  #L5253c8.  v8.`l1.d.d` @type ^`long`[] := v0 @kind object;
  #L5253cc.  v0:= 0I;
  #L5253ce.  v1:= 0I;
  #L5253d0.  v2:= length @variable v9;
  #L5253d2.  if v1 >= v2 then goto L52542c;
  #L5253d6.  v2:= v9[v1] @kind object;
  #L5253da.  call temp:= `name`(v2) @signature `Ljava/lang/Enum;.name:()Ljava/lang/String;` @kind virtual;
  #L5253e0.  v2:= temp @kind object;
  #L5253e2.  v3:= -7.302176725335867E57D;
  #L5253ec.  v5:= 0I;
  #L5253ee.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L5253f4.  v6:= temp;
  #L5253f6.  if v5 >= v6 then goto L52541a;
  #L5253fa.  call temp:= `charAt`(v2, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L525400.  v6:= temp;
  #L525402.  v6:= (`long`) v6 @kind i2l;
  #L525404.  v3:= v3 ^~ v6 @kind long;
  #L525406.  v6:= 1099511628211L;
  #L525410.  v3:= v3 * v6 @kind long;
  #L525414.  v5:= v5 + 1;
  #L525418.  goto L5253ee;
  #L52541a.  v11[v1]:= v3 @kind wide;
  #L52541e.  v2:= v8.`l1.d.d` @type ^`long`[] @kind object;
  #L525422.  v2[v1]:= v3 @kind wide;
  #L525426.  v1:= v1 + 1;
  #L52542a.  goto L5253d0;
  #L52542c.  v1:= v8.`l1.d.d` @type ^`long`[] @kind object;
  #L525430.  call `sort`(v1) @signature `Ljava/util/Arrays;.sort:([J)V` @kind static;
  #L525436.  v1:= length @variable v9;
  #L525438.  v1:= new `java.lang.Enum`[v1];
  #L52543c.  v8.`l1.d.c` @type ^`java.lang.Enum`[] := v1 @kind object;
  #L525440.  v1:= 0I;
  #L525442.  v2:= v8.`l1.d.d` @type ^`long`[] @kind object;
  #L525446.  v2:= length @variable v2;
  #L525448.  if v1 >= v2 then goto L525480;
  #L52544c.  v2:= 0I;
  #L52544e.  if v2 >= v10 then goto L52547a;
  #L525452.  v3:= v8.`l1.d.d` @type ^`long`[] @kind object;
  #L525456.  v4:= v3[v1] @kind wide;
  #L52545a.  v6:= v11[v2] @kind wide;
  #L52545e.  v3:= lcmp(v4, v6);
  #L525462.  if v3 != 0 then goto L525474;
  #L525466.  v3:= v8.`l1.d.c` @type ^`java.lang.Enum`[] @kind object;
  #L52546a.  v2:= v9[v2] @kind object;
  #L52546e.  v3[v1]:= v2 @kind object;
  #L525472.  goto L52547a;
  #L525474.  v2:= v2 + 1;
  #L525478.  goto L52544e;
  #L52547a.  v1:= v1 + 1;
  #L52547e.  goto L525442;
  #L525480.  return @kind void;
}
procedure `java.lang.Enum` `a`(`l1.d` v2 @kind this, `long` v3 ) @signature `Ll1/d;.a:(J)Ljava/lang/Enum;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L525354.  v0:= v2.`l1.d.c` @type ^`java.lang.Enum`[] @kind object;
  #L525358.  v1:= 0I;
  #L52535a.  if v0 != 0 then goto L525360;
  #L52535e.  return v1 @kind object;
  #L525360.  v0:= v2.`l1.d.d` @type ^`long`[] @kind object;
  #L525364.  call temp:= `binarySearch`(v0, v3) @signature `Ljava/util/Arrays;.binarySearch:([JJ)I` @kind static;
  #L52536a.  v3:= temp;
  #L52536c.  if v3 >= 0 then goto L525372;
  #L525370.  return v1 @kind object;
  #L525372.  v4:= v2.`l1.d.c` @type ^`java.lang.Enum`[] @kind object;
  #L525376.  v3:= v4[v3] @kind object;
  #L52537a.  return v3 @kind object;
}
procedure `void` `b`(`l1.d` v1 @kind this, `java.lang.Object` v2 @kind object, `double` v3 ) @signature `Ll1/d;.b:(Ljava/lang/Object;D)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L525494.  v0:= v1.`l1.d.a` @type ^`n1.a` @kind object;
  #L525498.  v0:= v0.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L52549c.  call `setDouble`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.setDouble:(Ljava/lang/Object;D)V` @kind virtual;
  #L5254a2.  return @kind void;
}
procedure `void` `c`(`l1.d` v1 @kind this, `java.lang.Object` v2 @kind object, `float` v3 ) @signature `Ll1/d;.c:(Ljava/lang/Object;F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5254b4.  v0:= v1.`l1.d.a` @type ^`n1.a` @kind object;
  #L5254b8.  v0:= v0.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L5254bc.  call `setFloat`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.setFloat:(Ljava/lang/Object;F)V` @kind virtual;
  #L5254c2.  return @kind void;
}
procedure `void` `d`(`l1.d` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 ) @signature `Ll1/d;.d:(Ljava/lang/Object;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5254d4.  v0:= v1.`l1.d.a` @type ^`n1.a` @kind object;
  #L5254d8.  v0:= v0.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L5254dc.  call `setInt`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.setInt:(Ljava/lang/Object;I)V` @kind virtual;
  #L5254e2.  return @kind void;
}
procedure `void` `e`(`l1.d` v1 @kind this, `java.lang.Object` v2 @kind object, `long` v3 ) @signature `Ll1/d;.e:(Ljava/lang/Object;J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L525648.  v0:= v1.`l1.d.a` @type ^`n1.a` @kind object;
  #L52564c.  v0:= v0.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L525650.  call `setLong`(v0, v2, v3) @signature `Ljava/lang/reflect/Field;.setLong:(Ljava/lang/Object;J)V` @kind virtual;
  #L525656.  return @kind void;
}
procedure `void` `f`(`l1.d` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Ll1/d;.f:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5254f4.  if v6 != 0 then goto L52550e;
  #L5254f8.  v0:= v4.`l1.d.a` @type ^`n1.a` @kind object;
  #L5254fc.  v0:= v0.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L525500.  call temp:= `isPrimitive`(v0) @signature `Ljava/lang/Class;.isPrimitive:()Z` @kind virtual;
  #L525506.  v0:= temp;
  #L525508.  if v0 == 0 then goto L52550e;
  #L52550c.  return @kind void;
  #L52550e.  v0:= v4.`l1.d.a` @type ^`n1.a` @kind object;
  #L525512.  v1:= v0.`n1.a.i` @type ^`java.lang.reflect.Field` @kind object;
  #L525516.  v2:= v0.`n1.a.h` @type ^`java.lang.reflect.Method` @kind object;
  #L52551a.  v3:= v0.`n1.a.j` @type ^`boolean` @kind boolean;
  #L52551e.  if v3 == 0 then goto L52557e;
  #L525522.  v2:= v0.`n1.a.p` @type ^`boolean` @kind boolean;
  #L525526.  if v2 == 0 then goto L525576;
  #L52552a.  v2:= constclass @type ^`java.util.Map` @kind object;
  #L52552e.  v0:= v0.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L525532.  call temp:= `isAssignableFrom`(v2, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L525538.  v0:= temp;
  #L52553a.  if v0 == 0 then goto L52555a;
  #L52553e.  call temp:= `get`(v1, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L525544.  v5:= temp @kind object;
  #L525546.  v5:= (`java.util.Map`) v5 @kind object;
  #L52554a.  if v5 == 0 then goto L5255ec;
  #L52554e.  v6:= (`java.util.Map`) v6 @kind object;
  #L525552.  call `putAll`(v5, v6) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L525558.  goto L5255ec;
  #L52555a.  call temp:= `get`(v1, v5) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L525560.  v5:= temp @kind object;
  #L525562.  v5:= (`java.util.Collection`) v5 @kind object;
  #L525566.  if v5 == 0 then goto L5255ec;
  #L52556a.  v6:= (`java.util.Collection`) v6 @kind object;
  #L52556e.  call temp:= `addAll`(v5, v6) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L525574.  goto L5255ec;
  #L525576.  call `set`(v1, v5, v6) @signature `Ljava/lang/reflect/Field;.set:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L52557c.  goto L5255ec;
  #L52557e.  v1:= v0.`n1.a.p` @type ^`boolean` @kind boolean;
  #L525582.  v3:= 0I;
  #L525584.  if v1 == 0 then goto L5255dc;
  #L525588.  v1:= constclass @type ^`java.util.Map` @kind object;
  #L52558c.  v0:= v0.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L525590.  call temp:= `isAssignableFrom`(v1, v0) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L525596.  v0:= temp;
  #L525598.  if v0 == 0 then goto L5255bc;
  #L52559c.  v0:= new `java.lang.Object`[v3];
  #L5255a0.  call temp:= `invoke`(v2, v5, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5255a6.  v5:= temp @kind object;
  #L5255a8.  v5:= (`java.util.Map`) v5 @kind object;
  #L5255ac.  if v5 == 0 then goto L5255ec;
  #L5255b0.  v6:= (`java.util.Map`) v6 @kind object;
  #L5255b4.  call `putAll`(v5, v6) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L5255ba.  goto L5255ec;
  #L5255bc.  v0:= new `java.lang.Object`[v3];
  #L5255c0.  call temp:= `invoke`(v2, v5, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5255c6.  v5:= temp @kind object;
  #L5255c8.  v5:= (`java.util.Collection`) v5 @kind object;
  #L5255cc.  if v5 == 0 then goto L5255ec;
  #L5255d0.  v6:= (`java.util.Collection`) v6 @kind object;
  #L5255d4.  call temp:= `addAll`(v5, v6) @signature `Ljava/util/Collection;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L5255da.  goto L5255ec;
  #L5255dc.  v0:= 1I;
  #L5255de.  v0:= new `java.lang.Object`[v0];
  #L5255e2.  v0[v3]:= v6 @kind object;
  #L5255e6.  call temp:= `invoke`(v2, v5, v0) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5255ec.  return @kind void;
  #L5255ee.  v5:= Exception @type ^`java.lang.Exception` @kind object;
  #L5255f0.  v6:= new `com.alibaba.fastjson.c`;
  #L5255f4.  v0:= new `java.lang.StringBuilder`;
  #L5255f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5255fe.  v1:= "set property error, " @kind object;
  #L525602.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L525608.  v1:= v4.`l1.d.a` @type ^`n1.a` @kind object;
  #L52560c.  v1:= v1.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L525610.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L525616.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L52561c.  v0:= temp @kind object;
  #L52561e.  call `<init>`(v6, v0, v5) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L525624.  throw v6;
  catch `java.lang.Exception` @[L52551a..L5255ec] goto L5255ee;
}
procedure `void` `g`(`k1.b` v0 @kind object, `java.lang.Object` v1 @kind object, `java.lang.reflect.Type` v2 @kind object, `java.util.Map` v3 @kind object) @signature `Ll1/d;.g:(Lk1/b;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
