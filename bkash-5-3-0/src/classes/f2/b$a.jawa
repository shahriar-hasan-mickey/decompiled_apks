record `f2.b$a` @kind class @AccessFlag PUBLIC extends `java.lang.Thread` @kind class {
  `f2.b` `f2.b$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f2.b$a` v0 @kind this, `f2.b` v1 @kind object) @signature `Lf2/b$a;.<init>:(Lf2/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L500c08.  v0.`f2.b$a.g` @type ^`f2.b` := v1 @kind object;
  #L500c0c.  call `<init>`(v0) @signature `Ljava/lang/Thread;.<init>:()V` @kind direct;
  #L500c12.  return @kind void;
}
procedure `void` `run`(`f2.b$a` v6 @kind this) @signature `Lf2/b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L500c24.  v0:= "AppendWorker finally: " @kind object;
  #L500c28.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L500c2e.  v1:= temp @kind object;
  #L500c30.  call temp:= `getThread`(v1) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L500c36.  v1:= temp @kind object;
  #L500c38.  call temp:= `getPriority`(v1) @signature `Ljava/lang/Thread;.getPriority:()I` @kind virtual;
  #L500c3e.  v1:= temp;
  #L500c40.  v1:= v1 + -2;
  #L500c44.  v2:= 5I;
  #L500c46.  if v1 >= v2 then goto L500c4c;
  #L500c4a.  v1:= 5I;
  #L500c4c.  call `setPriority`(v6, v1) @signature `Ljava/lang/Thread;.setPriority:(I)V` @kind virtual;
  #L500c52.  v1:= 0I;
  #L500c54.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500c58.  call temp:= `G`(v2) @signature `Lf2/b;.G:(Lf2/b;)Z` @kind static;
  #L500c5e.  v2:= temp;
  #L500c60.  if v2 == 0 then goto L500c78;
  #L500c64.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500c68.  call temp:= `H`(v2) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500c6e.  v3:= temp @kind object;
  #L500c70.  call `B`(v2, v3) @signature `Lf2/b;.B:(Lf2/b;Ljava/util/concurrent/ArrayBlockingQueue;)V` @kind static;
  #L500c76.  goto L500c52;
  #L500c78.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500c7c.  call `n`(v2, v1) @signature `Lf2/b;.n:(Lf2/b;Lf2/b$a;)V` @kind static;
  #L500c82.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500c86.  call temp:= `H`(v2) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500c8c.  v2:= temp @kind object;
  #L500c8e.  call temp:= `iterator`(v2) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L500c94.  v2:= temp @kind object;
  #L500c96.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L500c9c.  v3:= temp;
  #L500c9e.  if v3 == 0 then goto L500ccc;
  #L500ca2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L500ca8.  v3:= temp @kind object;
  #L500caa.  v3:= (`z1.a`) v3 @kind object;
  #L500cae.  v4:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500cb2.  call `C`(v4, v3) @signature `Lf2/b;.C:(Lf2/b;Lz1/a;)V` @kind static;
  #L500cb8.  v4:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500cbc.  call temp:= `H`(v4) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500cc2.  v4:= temp @kind object;
  #L500cc4.  call temp:= `remove`(v4, v3) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L500cca.  goto L500c96;
  #L500ccc.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500cd0.  call `B`(v2, v1) @signature `Lf2/b;.B:(Lf2/b;Ljava/util/concurrent/ArrayBlockingQueue;)V` @kind static;
  #L500cd6.  goto L500d7c;
  #L500cd8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500cda.  v2:= new `java.lang.StringBuilder`;
  #L500cde.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500ce4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500cea.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500cf0.  goto L500d7c;
  #L500cf2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500cf4.  v3:= new `java.lang.StringBuilder`;
  #L500cf8.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500cfe.  v4:= "AppendWorker take: " @kind object;
  #L500d02.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500d08.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500d0e.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d12.  call `n`(v2, v1) @signature `Lf2/b;.n:(Lf2/b;Lf2/b$a;)V` @kind static;
  #L500d18.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d1c.  call temp:= `H`(v2) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500d22.  v2:= temp @kind object;
  #L500d24.  call temp:= `iterator`(v2) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L500d2a.  v2:= temp @kind object;
  #L500d2c.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L500d32.  v3:= temp;
  #L500d34.  if v3 == 0 then goto L500d62;
  #L500d38.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L500d3e.  v3:= temp @kind object;
  #L500d40.  v3:= (`z1.a`) v3 @kind object;
  #L500d44.  v4:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d48.  call `C`(v4, v3) @signature `Lf2/b;.C:(Lf2/b;Lz1/a;)V` @kind static;
  #L500d4e.  v4:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d52.  call temp:= `H`(v4) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500d58.  v4:= temp @kind object;
  #L500d5a.  call temp:= `remove`(v4, v3) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L500d60.  goto L500d2c;
  #L500d62.  v2:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d66.  call `B`(v2, v1) @signature `Lf2/b;.B:(Lf2/b;Ljava/util/concurrent/ArrayBlockingQueue;)V` @kind static;
  #L500d6c.  goto L500d7c;
  #L500d6e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500d70.  v2:= new `java.lang.StringBuilder`;
  #L500d74.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500d7a.  goto L500ce4;
  #L500d7c.  return @kind void;
  #L500d7e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500d80.  v3:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d84.  call `n`(v3, v1) @signature `Lf2/b;.n:(Lf2/b;Lf2/b$a;)V` @kind static;
  #L500d8a.  v3:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500d8e.  call temp:= `H`(v3) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500d94.  v3:= temp @kind object;
  #L500d96.  call temp:= `iterator`(v3) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L500d9c.  v3:= temp @kind object;
  #L500d9e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L500da4.  v4:= temp;
  #L500da6.  if v4 == 0 then goto L500dd4;
  #L500daa.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L500db0.  v4:= temp @kind object;
  #L500db2.  v4:= (`z1.a`) v4 @kind object;
  #L500db6.  v5:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500dba.  call `C`(v5, v4) @signature `Lf2/b;.C:(Lf2/b;Lz1/a;)V` @kind static;
  #L500dc0.  v5:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500dc4.  call temp:= `H`(v5) @signature `Lf2/b;.H:(Lf2/b;)Ljava/util/concurrent/ArrayBlockingQueue;` @kind static;
  #L500dca.  v5:= temp @kind object;
  #L500dcc.  call temp:= `remove`(v5, v4) @signature `Ljava/util/concurrent/ArrayBlockingQueue;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L500dd2.  goto L500d9e;
  #L500dd4.  v3:= v6.`f2.b$a.g` @type ^`f2.b` @kind object;
  #L500dd8.  call `B`(v3, v1) @signature `Lf2/b;.B:(Lf2/b;Ljava/util/concurrent/ArrayBlockingQueue;)V` @kind static;
  #L500dde.  goto L500df8;
  #L500de0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L500de2.  v3:= new `java.lang.StringBuilder`;
  #L500de6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L500dec.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500df2.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L500df8.  throw v2;
  catch `java.lang.Throwable` @[L500c54..L500c76] goto L500cf2;
  catch `java.lang.Throwable` @[L500c78..L500cd6] goto L500cd8;
  catch `java.lang.Throwable` @[L500cf4..L500d0e] goto L500d7e;
  catch `java.lang.Throwable` @[L500d0e..L500d6c] goto L500d6e;
  catch `java.lang.Throwable` @[L500d80..L500dde] goto L500de0;
}
