record `f1.p$a` @kind class @AccessFlag  extends `j.a` @kind interface {
}
procedure `void` `<init>`(`f1.p$a` v0 @kind this) @signature `Lf1/p$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fcfd4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fcfda.  return @kind void;
}
procedure `java.util.List` `a`(`f1.p$a` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lf1/p$a;.a:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fcf78.  if v3 != 0 then goto L4fcf80;
  #L4fcf7c.  v3:= 0I;
  #L4fcf7e.  return v3 @kind object;
  #L4fcf80.  v0:= new `java.util.ArrayList`;
  #L4fcf84.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L4fcf8a.  v1:= temp;
  #L4fcf8c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L4fcf92.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4fcf98.  v3:= temp @kind object;
  #L4fcf9a.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fcfa0.  v1:= temp;
  #L4fcfa2.  if v1 == 0 then goto L4fcfc2;
  #L4fcfa6.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fcfac.  v1:= temp @kind object;
  #L4fcfae.  v1:= (`f1.p$c`) v1 @kind object;
  #L4fcfb2.  call temp:= `a`(v1) @signature `Lf1/p$c;.a:()Landroidx/work/v;` @kind virtual;
  #L4fcfb8.  v1:= temp @kind object;
  #L4fcfba.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L4fcfc0.  goto L4fcf9a;
  #L4fcfc2.  return v0 @kind object;
}
procedure `java.lang.Object` `apply`(`f1.p$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lf1/p$a;.apply:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fcf58.  v1:= (`java.util.List`) v1 @kind object;
  #L4fcf5c.  call temp:= `a`(v0, v1) @signature `Lf1/p$a;.a:(Ljava/util/List;)Ljava/util/List;` @kind virtual;
  #L4fcf62.  v1:= temp @kind object;
  #L4fcf64.  return v1 @kind object;
}
