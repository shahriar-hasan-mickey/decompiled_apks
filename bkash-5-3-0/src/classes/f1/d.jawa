record `f1.d` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `f1.d.a` @AccessFlag PUBLIC;
  `java.lang.Long` `f1.d.b` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`f1.d` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 ) @signature `Lf1/d;.<init>:(Ljava/lang/String;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4fc6d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fc6da.  v0.`f1.d.a` @type ^`java.lang.String` := v1 @kind object;
  #L4fc6de.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L4fc6e4.  v1:= temp @kind object;
  #L4fc6e6.  v0.`f1.d.b` @type ^`java.lang.Long` := v1 @kind object;
  #L4fc6ea.  return @kind void;
}
procedure `void` `<init>`(`f1.d` v2 @kind this, `java.lang.String` v3 @kind object, `boolean` v4 ) @signature `Lf1/d;.<init>:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L4fc6ac.  if v4 == 0 then goto L4fc6b6;
  #L4fc6b0.  v0:= 1L;
  #L4fc6b4.  goto L4fc6ba;
  #L4fc6b6.  v0:= 0L;
  #L4fc6ba.  call `<init>`(v2, v3, v0) @signature `Lf1/d;.<init>:(Ljava/lang/String;J)V` @kind direct;
  #L4fc6c0.  return @kind void;
}
procedure `boolean` `equals`(`f1.d` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lf1/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc614.  v0:= 1I;
  #L4fc616.  if v4 != v5 then goto L4fc61c;
  #L4fc61a.  return v0;
  #L4fc61c.  v1:= instanceof @variable v5 @type ^`f1.d` @kind boolean;
  #L4fc620.  v2:= 0I;
  #L4fc622.  if v1 != 0 then goto L4fc628;
  #L4fc626.  return v2;
  #L4fc628.  v5:= (`f1.d`) v5 @kind object;
  #L4fc62c.  v1:= v4.`f1.d.a` @type ^`java.lang.String` @kind object;
  #L4fc630.  v3:= v5.`f1.d.a` @type ^`java.lang.String` @kind object;
  #L4fc634.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fc63a.  v1:= temp;
  #L4fc63c.  if v1 != 0 then goto L4fc642;
  #L4fc640.  return v2;
  #L4fc642.  v1:= v4.`f1.d.b` @type ^`java.lang.Long` @kind object;
  #L4fc646.  v5:= v5.`f1.d.b` @type ^`java.lang.Long` @kind object;
  #L4fc64a.  if v1 == 0 then goto L4fc658;
  #L4fc64e.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Long;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fc654.  v0:= temp;
  #L4fc656.  goto L4fc660;
  #L4fc658.  if v5 != 0 then goto L4fc65e;
  #L4fc65c.  goto L4fc660;
  #L4fc65e.  v0:= 0I;
  #L4fc660.  return v0;
}
procedure `int` `hashCode`(`f1.d` v2 @kind this) @signature `Lf1/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fc674.  v0:= v2.`f1.d.a` @type ^`java.lang.String` @kind object;
  #L4fc678.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L4fc67e.  v0:= temp;
  #L4fc680.  v0:= v0 * 31;
  #L4fc684.  v1:= v2.`f1.d.b` @type ^`java.lang.Long` @kind object;
  #L4fc688.  if v1 == 0 then goto L4fc696;
  #L4fc68c.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Long;.hashCode:()I` @kind virtual;
  #L4fc692.  v1:= temp;
  #L4fc694.  goto L4fc698;
  #L4fc696.  v1:= 0I;
  #L4fc698.  v0:= v0 + v1 @kind int;
  #L4fc69a.  return v0;
}
