record `f1.l$a` @kind class @AccessFlag  extends `androidx.room.b` @kind class {
}
procedure `void` `<init>`(`f1.l$a` v0 @kind this, `f1.l` v1 @kind object, `androidx.room.h` v2 @kind object) @signature `Lf1/l$a;.<init>:(Lf1/l;Landroidx/room/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L4fcac4.  call `<init>`(v0, v2) @signature `Landroidx/room/b;.<init>:(Landroidx/room/h;)V` @kind direct;
  #L4fcaca.  return @kind void;
}
procedure `java.lang.String` `d`(`f1.l$a` v1 @kind this) @signature `Lf1/l$a;.d:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4fcaac.  v0:= "INSERT OR IGNORE INTO `WorkName` (`name`,`work_spec_id`) VALUES (?,?)" @kind object;
  #L4fcab0.  return v0 @kind object;
}
procedure `void` `g`(`f1.l$a` v0 @kind this, `p0.f` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lf1/l$a;.g:(Lp0/f;Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L4fcb20.  v2:= (`f1.j`) v2 @kind object;
  #L4fcb24.  call `i`(v0, v1, v2) @signature `Lf1/l$a;.i:(Lp0/f;Lf1/j;)V` @kind virtual;
  #L4fcb2a.  return @kind void;
}
procedure `void` `i`(`f1.l$a` v2 @kind this, `p0.f` v3 @kind object, `f1.j` v4 @kind object) @signature `Lf1/l$a;.i:(Lp0/f;Lf1/j;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4fcadc.  v0:= v4.`f1.j.a` @type ^`java.lang.String` @kind object;
  #L4fcae0.  v1:= 1I;
  #L4fcae2.  if v0 != 0 then goto L4fcaee;
  #L4fcae6.  call `m0`(v3, v1) @signature `Lp0/d;.m0:(I)V` @kind interface;
  #L4fcaec.  goto L4fcaf4;
  #L4fcaee.  call `q`(v3, v1, v0) @signature `Lp0/d;.q:(ILjava/lang/String;)V` @kind interface;
  #L4fcaf4.  v4:= v4.`f1.j.b` @type ^`java.lang.String` @kind object;
  #L4fcaf8.  v0:= 2I;
  #L4fcafa.  if v4 != 0 then goto L4fcb06;
  #L4fcafe.  call `m0`(v3, v0) @signature `Lp0/d;.m0:(I)V` @kind interface;
  #L4fcb04.  goto L4fcb0c;
  #L4fcb06.  call `q`(v3, v0, v4) @signature `Lp0/d;.q:(ILjava/lang/String;)V` @kind interface;
  #L4fcb0c.  return @kind void;
}
