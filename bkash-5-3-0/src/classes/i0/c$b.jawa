record `i0.c$b` @kind class @AccessFlag  extends `i0.c$h` @kind class {
  `i0.c` `i0.c$b.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`i0.c$b` v0 @kind this, `i0.c` v1 @kind object) @signature `Li0/c$b;.<init>:(Li0/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L50ebe8.  v0.`i0.c$b.h` @type ^`i0.c` := v1 @kind object;
  #L50ebec.  call `<init>`(v0) @signature `Li0/c$h;.<init>:()V` @kind direct;
  #L50ebf2.  return @kind void;
}
procedure `java.lang.Object` `call`(`i0.c$b` v4 @kind this) @signature `Li0/c$b;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L50eb60.  v0:= v4.`i0.c$b.h` @type ^`i0.c` @kind object;
  #L50eb64.  v0:= v0.`i0.c.k` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L50eb68.  v1:= 1I;
  #L50eb6a.  call `set`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L50eb70.  v0:= 10I;
  #L50eb74.  v2:= 0I;
  #L50eb76.  call `setThreadPriority`(v0) @signature `Landroid/os/Process;.setThreadPriority:(I)V` @kind static;
  #L50eb7c.  v0:= v4.`i0.c$b.h` @type ^`i0.c` @kind object;
  #L50eb80.  v3:= v4.`i0.c$h.g` @type ^`java.lang.Object`[] @kind object;
  #L50eb84.  call temp:= `b`(v0, v3) @signature `Li0/c;.b:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50eb8a.  v2:= temp @kind object;
  #L50eb8c.  call `flushPendingCommands`() @signature `Landroid/os/Binder;.flushPendingCommands:()V` @kind static;
  #L50eb92.  v0:= v4.`i0.c$b.h` @type ^`i0.c` @kind object;
  #L50eb96.  call temp:= `l`(v0, v2) @signature `Li0/c;.l:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50eb9c.  return v2 @kind object;
  #L50eb9e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50eba0.  v3:= v4.`i0.c$b.h` @type ^`i0.c` @kind object;
  #L50eba4.  v3:= v3.`i0.c.j` @type ^`java.util.concurrent.atomic.AtomicBoolean` @kind object;
  #L50eba8.  call `set`(v3, v1) @signature `Ljava/util/concurrent/atomic/AtomicBoolean;.set:(Z)V` @kind virtual;
  #L50ebae.  throw v0;
  #L50ebb0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50ebb2.  v1:= v4.`i0.c$b.h` @type ^`i0.c` @kind object;
  #L50ebb6.  call temp:= `l`(v1, v2) @signature `Li0/c;.l:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50ebbc.  throw v0;
  catch `java.lang.Throwable` @[L50eb76..L50eb92] goto L50eb9e;
  catch `java.lang.Throwable` @[L50eba0..L50ebb0] goto L50ebb0;
}
