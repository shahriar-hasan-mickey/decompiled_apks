record `i0.c$a` @kind class @AccessFlag FINAL extends `java.util.concurrent.ThreadFactory` @kind interface {
  `java.util.concurrent.atomic.AtomicInteger` `i0.c$a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`i0.c$a` v2 @kind this) @signature `Li0/c$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L50eb38.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50eb3e.  v0:= new `java.util.concurrent.atomic.AtomicInteger`;
  #L50eb42.  v1:= 1I;
  #L50eb44.  call `<init>`(v0, v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.<init>:(I)V` @kind direct;
  #L50eb4a.  v2.`i0.c$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` := v0 @kind object;
  #L50eb4e.  return @kind void;
}
procedure `java.lang.Thread` `newThread`(`i0.c$a` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Li0/c$a;.newThread:(Ljava/lang/Runnable;)Ljava/lang/Thread;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L50eaec.  v0:= new `java.lang.Thread`;
  #L50eaf0.  v1:= new `java.lang.StringBuilder`;
  #L50eaf4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50eafa.  v2:= "ModernAsyncTask #" @kind object;
  #L50eafe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50eb04.  v2:= v3.`i0.c$a.g` @type ^`java.util.concurrent.atomic.AtomicInteger` @kind object;
  #L50eb08.  call temp:= `getAndIncrement`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.getAndIncrement:()I` @kind virtual;
  #L50eb0e.  v2:= temp;
  #L50eb10.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L50eb16.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50eb1c.  v1:= temp @kind object;
  #L50eb1e.  call `<init>`(v0, v4, v1) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L50eb24.  return v0 @kind object;
}
