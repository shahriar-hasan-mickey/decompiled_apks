record `i0.c$d` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@i0.c$d.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Li0/c$d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L50ec90.  call temp:= `values`() @signature `Li0/c$g;.values:()[Li0/c$g;` @kind static;
  #L50ec96.  v0:= temp @kind object;
  #L50ec98.  v0:= length @variable v0;
  #L50ec9a.  v0:= new `int`[v0];
  #L50ec9e.  `@@i0.c$d.a` @type ^`int`[] := v0 @kind object;
  #L50eca2.  v1:= `@@i0.c$g.RUNNING` @type ^`i0.c$g` @kind object;
  #L50eca6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50ecac.  v1:= temp;
  #L50ecae.  v2:= 1I;
  #L50ecb0.  v0[v1]:= v2;
  #L50ecb4.  v0:= `@@i0.c$d.a` @type ^`int`[] @kind object;
  #L50ecb8.  v1:= `@@i0.c$g.FINISHED` @type ^`i0.c$g` @kind object;
  #L50ecbc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L50ecc2.  v1:= temp;
  #L50ecc4.  v2:= 2I;
  #L50ecc6.  v0[v1]:= v2;
  #L50ecca.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L50eca2..L50ecb4] goto L50ecb4;
  catch `java.lang.NoSuchFieldError` @[L50ecb4..L50ecca] goto L50ecca;
}
