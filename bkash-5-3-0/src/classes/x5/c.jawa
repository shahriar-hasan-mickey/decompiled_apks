record `x5.c` @kind class @AccessFlag PUBLIC extends `x5.v` @kind interface {
  `android.content.Context` `x5.c.a` @AccessFlag PRIVATE_FINAL;
  `y5.d` `x5.c.b` @AccessFlag PRIVATE_FINAL;
  `com.google.android.datatransport.runtime.scheduling.jobscheduling.c` `x5.c.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x5.c` v0 @kind this, `android.content.Context` v1 @kind object, `y5.d` v2 @kind object, `com.google.android.datatransport.runtime.scheduling.jobscheduling.c` v3 @kind object) @signature `Lx5/c;.<init>:(Landroid/content/Context;Ly5/d;Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56f948.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56f94e.  v0.`x5.c.a` @type ^`android.content.Context` := v1 @kind object;
  #L56f952.  v0.`x5.c.b` @type ^`y5.d` := v2 @kind object;
  #L56f956.  v0.`x5.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` := v3 @kind object;
  #L56f95a.  return @kind void;
}
procedure `boolean` `d`(`x5.c` v4 @kind this, `android.app.job.JobScheduler` v5 @kind object, `int` v6 , `int` v7 ) @signature `Lx5/c;.d:(Landroid/app/job/JobScheduler;II)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56f830.  call temp:= `getAllPendingJobs`(v5) @signature `Landroid/app/job/JobScheduler;.getAllPendingJobs:()Ljava/util/List;` @kind virtual;
  #L56f836.  v5:= temp @kind object;
  #L56f838.  call temp:= `iterator`(v5) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L56f83e.  v5:= temp @kind object;
  #L56f840.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L56f846.  v0:= temp;
  #L56f848.  v1:= 0I;
  #L56f84a.  if v0 == 0 then goto L56f880;
  #L56f84e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L56f854.  v0:= temp @kind object;
  #L56f856.  v0:= (`android.app.job.JobInfo`) v0 @kind object;
  #L56f85a.  call temp:= `getExtras`(v0) @signature `Landroid/app/job/JobInfo;.getExtras:()Landroid/os/PersistableBundle;` @kind virtual;
  #L56f860.  v2:= temp @kind object;
  #L56f862.  v3:= "attemptNumber" @kind object;
  #L56f866.  call temp:= `getInt`(v2, v3) @signature `Landroid/os/PersistableBundle;.getInt:(Ljava/lang/String;)I` @kind virtual;
  #L56f86c.  v2:= temp;
  #L56f86e.  call temp:= `getId`(v0) @signature `Landroid/app/job/JobInfo;.getId:()I` @kind virtual;
  #L56f874.  v0:= temp;
  #L56f876.  if v0 != v6 then goto L56f840;
  #L56f87a.  if v2 < v7 then goto L56f880;
  #L56f87e.  v1:= 1I;
  #L56f880.  return v1;
}
procedure `void` `a`(`x5.c` v1 @kind this, `p5.o` v2 @kind object, `int` v3 ) @signature `Lx5/c;.a:(Lp5/o;I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56f96c.  v0:= 0I;
  #L56f96e.  call `b`(v1, v2, v3, v0) @signature `Lx5/c;.b:(Lp5/o;IZ)V` @kind virtual;
  #L56f974.  return @kind void;
}
procedure `void` `b`(`x5.c` v12 @kind this, `p5.o` v13 @kind object, `int` v14 , `boolean` v15 ) @signature `Lx5/c;.b:(Lp5/o;IZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L56f988.  v0:= new `android.content.ComponentName`;
  #L56f98c.  v1:= v12.`x5.c.a` @type ^`android.content.Context` @kind object;
  #L56f990.  v2:= constclass @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.JobInfoSchedulerService` @kind object;
  #L56f994.  call `<init>`(v0, v1, v2) @signature `Landroid/content/ComponentName;.<init>:(Landroid/content/Context;Ljava/lang/Class;)V` @kind direct;
  #L56f99a.  v1:= v12.`x5.c.a` @type ^`android.content.Context` @kind object;
  #L56f99e.  v2:= "jobscheduler" @kind object;
  #L56f9a2.  call temp:= `getSystemService`(v1, v2) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L56f9a8.  v1:= temp @kind object;
  #L56f9aa.  v1:= (`android.app.job.JobScheduler`) v1 @kind object;
  #L56f9ae.  call temp:= `c`(v12, v13) @signature `Lx5/c;.c:(Lp5/o;)I` @kind virtual;
  #L56f9b4.  v2:= temp;
  #L56f9b6.  v3:= "JobInfoScheduler" @kind object;
  #L56f9ba.  if v15 != 0 then goto L56f9d6;
  #L56f9be.  call temp:= `d`(v12, v1, v2, v14) @signature `Lx5/c;.d:(Landroid/app/job/JobScheduler;II)Z` @kind direct;
  #L56f9c4.  v15:= temp;
  #L56f9c6.  if v15 == 0 then goto L56f9d6;
  #L56f9ca.  v14:= "Upload for context %s is already scheduled. Returning..." @kind object;
  #L56f9ce.  call `b`(v3, v14, v13) @signature `Lu5/a;.b:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L56f9d4.  return @kind void;
  #L56f9d6.  v15:= v12.`x5.c.b` @type ^`y5.d` @kind object;
  #L56f9da.  call temp:= `A`(v15, v13) @signature `Ly5/d;.A:(Lp5/o;)J` @kind interface;
  #L56f9e0.  v10:= temp @kind wide;
  #L56f9e2.  v4:= v12.`x5.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` @kind object;
  #L56f9e6.  v5:= new `android.app.job.JobInfo$Builder`;
  #L56f9ea.  call `<init>`(v5, v2, v0) @signature `Landroid/app/job/JobInfo$Builder;.<init>:(ILandroid/content/ComponentName;)V` @kind direct;
  #L56f9f0.  call temp:= `d`(v13) @signature `Lp5/o;.d:()Ln5/d;` @kind virtual;
  #L56f9f6.  v6:= temp @kind object;
  #L56f9f8.  v7:= v10 @kind wide;
  #L56f9fa.  v9:= v14;
  #L56f9fc.  call temp:= `c`(v4, v5, v6, v7, v9) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;.c:(Landroid/app/job/JobInfo$Builder;Ln5/d;JI)Landroid/app/job/JobInfo$Builder;` @kind virtual;
  #L56fa02.  v15:= temp @kind object;
  #L56fa04.  v0:= new `android.os.PersistableBundle`;
  #L56fa08.  call `<init>`(v0) @signature `Landroid/os/PersistableBundle;.<init>:()V` @kind direct;
  #L56fa0e.  v4:= "attemptNumber" @kind object;
  #L56fa12.  call `putInt`(v0, v4, v14) @signature `Landroid/os/PersistableBundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L56fa18.  call temp:= `b`(v13) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L56fa1e.  v4:= temp @kind object;
  #L56fa20.  v5:= "backendName" @kind object;
  #L56fa24.  call `putString`(v0, v5, v4) @signature `Landroid/os/PersistableBundle;.putString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L56fa2a.  call temp:= `d`(v13) @signature `Lp5/o;.d:()Ln5/d;` @kind virtual;
  #L56fa30.  v4:= temp @kind object;
  #L56fa32.  call temp:= `a`(v4) @signature `Lb6/a;.a:(Ln5/d;)I` @kind static;
  #L56fa38.  v4:= temp;
  #L56fa3a.  v5:= "priority" @kind object;
  #L56fa3e.  call `putInt`(v0, v5, v4) @signature `Landroid/os/PersistableBundle;.putInt:(Ljava/lang/String;I)V` @kind virtual;
  #L56fa44.  call temp:= `c`(v13) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L56fa4a.  v4:= temp @kind object;
  #L56fa4c.  v5:= 0I;
  #L56fa4e.  if v4 == 0 then goto L56fa6c;
  #L56fa52.  call temp:= `c`(v13) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L56fa58.  v4:= temp @kind object;
  #L56fa5a.  call temp:= `encodeToString`(v4, v5) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L56fa60.  v4:= temp @kind object;
  #L56fa62.  v6:= "extras" @kind object;
  #L56fa66.  call `putString`(v0, v6, v4) @signature `Landroid/os/PersistableBundle;.putString:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L56fa6c.  call temp:= `setExtras`(v15, v0) @signature `Landroid/app/job/JobInfo$Builder;.setExtras:(Landroid/os/PersistableBundle;)Landroid/app/job/JobInfo$Builder;` @kind virtual;
  #L56fa72.  v0:= 5I;
  #L56fa74.  v0:= new `java.lang.Object`[v0];
  #L56fa78.  v0[v5]:= v13 @kind object;
  #L56fa7c.  v4:= 1I;
  #L56fa7e.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L56fa84.  v2:= temp @kind object;
  #L56fa86.  v0[v4]:= v2 @kind object;
  #L56fa8a.  v2:= 2I;
  #L56fa8c.  v4:= v12.`x5.c.c` @type ^`com.google.android.datatransport.runtime.scheduling.jobscheduling.c` @kind object;
  #L56fa90.  call temp:= `d`(v13) @signature `Lp5/o;.d:()Ln5/d;` @kind virtual;
  #L56fa96.  v13:= temp @kind object;
  #L56fa98.  call temp:= `g`(v4, v13, v10, v14) @signature `Lcom/google/android/datatransport/runtime/scheduling/jobscheduling/c;.g:(Ln5/d;JI)J` @kind virtual;
  #L56fa9e.  v4:= temp @kind wide;
  #L56faa0.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L56faa6.  v13:= temp @kind object;
  #L56faa8.  v0[v2]:= v13 @kind object;
  #L56faac.  v13:= 3I;
  #L56faae.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L56fab4.  v2:= temp @kind object;
  #L56fab6.  v0[v13]:= v2 @kind object;
  #L56faba.  v13:= 4I;
  #L56fabc.  call temp:= `valueOf`(v14) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L56fac2.  v14:= temp @kind object;
  #L56fac4.  v0[v13]:= v14 @kind object;
  #L56fac8.  v13:= "Scheduling upload for context %s with jobId=%d in %dms(Backend next call timestamp %d). Attempt %d" @kind object;
  #L56facc.  call `c`(v3, v13, v0) @signature `Lu5/a;.c:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L56fad2.  call temp:= `build`(v15) @signature `Landroid/app/job/JobInfo$Builder;.build:()Landroid/app/job/JobInfo;` @kind virtual;
  #L56fad8.  v13:= temp @kind object;
  #L56fada.  call temp:= `schedule`(v1, v13) @signature `Landroid/app/job/JobScheduler;.schedule:(Landroid/app/job/JobInfo;)I` @kind virtual;
  #L56fae0.  return @kind void;
}
procedure `int` `c`(`x5.c` v4 @kind this, `p5.o` v5 @kind object) @signature `Lx5/c;.c:(Lp5/o;)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L56f894.  v0:= new `java.util.zip.Adler32`;
  #L56f898.  call `<init>`(v0) @signature `Ljava/util/zip/Adler32;.<init>:()V` @kind direct;
  #L56f89e.  v1:= v4.`x5.c.a` @type ^`android.content.Context` @kind object;
  #L56f8a2.  call temp:= `getPackageName`(v1) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L56f8a8.  v1:= temp @kind object;
  #L56f8aa.  v2:= "UTF-8" @kind object;
  #L56f8ae.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L56f8b4.  v3:= temp @kind object;
  #L56f8b6.  call temp:= `getBytes`(v1, v3) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L56f8bc.  v1:= temp @kind object;
  #L56f8be.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L56f8c4.  call temp:= `b`(v5) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L56f8ca.  v1:= temp @kind object;
  #L56f8cc.  call temp:= `forName`(v2) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L56f8d2.  v2:= temp @kind object;
  #L56f8d4.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L56f8da.  v1:= temp @kind object;
  #L56f8dc.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L56f8e2.  v1:= 4I;
  #L56f8e4.  call temp:= `allocate`(v1) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L56f8ea.  v1:= temp @kind object;
  #L56f8ec.  call temp:= `d`(v5) @signature `Lp5/o;.d:()Ln5/d;` @kind virtual;
  #L56f8f2.  v2:= temp @kind object;
  #L56f8f4.  call temp:= `a`(v2) @signature `Lb6/a;.a:(Ln5/d;)I` @kind static;
  #L56f8fa.  v2:= temp;
  #L56f8fc.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L56f902.  v1:= temp @kind object;
  #L56f904.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L56f90a.  v1:= temp @kind object;
  #L56f90c.  call `update`(v0, v1) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L56f912.  call temp:= `c`(v5) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L56f918.  v1:= temp @kind object;
  #L56f91a.  if v1 == 0 then goto L56f92c;
  #L56f91e.  call temp:= `c`(v5) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L56f924.  v5:= temp @kind object;
  #L56f926.  call `update`(v0, v5) @signature `Ljava/util/zip/Adler32;.update:([B)V` @kind virtual;
  #L56f92c.  call temp:= `getValue`(v0) @signature `Ljava/util/zip/Adler32;.getValue:()J` @kind virtual;
  #L56f932.  v0:= temp @kind wide;
  #L56f934.  v5:= (`int`) v0 @kind l2i;
  #L56f936.  return v5;
}
