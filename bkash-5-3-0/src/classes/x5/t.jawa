record `x5.t` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.Executor` `x5.t.a` @AccessFlag PRIVATE_FINAL;
  `y5.d` `x5.t.b` @AccessFlag PRIVATE_FINAL;
  `x5.v` `x5.t.c` @AccessFlag PRIVATE_FINAL;
  `z5.b` `x5.t.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`x5.t` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `y5.d` v2 @kind object, `x5.v` v3 @kind object, `z5.b` v4 @kind object) @signature `Lx5/t;.<init>:(Ljava/util/concurrent/Executor;Ly5/d;Lx5/v;Lz5/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5704ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5704b2.  v0.`x5.t.a` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L5704b6.  v0.`x5.t.b` @type ^`y5.d` := v2 @kind object;
  #L5704ba.  v0.`x5.t.c` @type ^`x5.v` := v3 @kind object;
  #L5704be.  v0.`x5.t.d` @type ^`z5.b` := v4 @kind object;
  #L5704c2.  return @kind void;
}
procedure `java.lang.Object` `a`(`x5.t` v0 @kind object) @signature `Lx5/t;.a:(Lx5/t;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L570428.  call temp:= `d`(v0) @signature `Lx5/t;.d:()Ljava/lang/Object;` @kind direct;
  #L57042e.  v0:= temp @kind object;
  #L570430.  return v0 @kind object;
}
procedure `void` `b`(`x5.t` v0 @kind object) @signature `Lx5/t;.b:(Lx5/t;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L570494.  call `e`(v0) @signature `Lx5/t;.e:()V` @kind direct;
  #L57049a.  return @kind void;
}
procedure `java.lang.Object` `d`(`x5.t` v4 @kind this) @signature `Lx5/t;.d:()Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L570444.  v0:= v4.`x5.t.b` @type ^`y5.d` @kind object;
  #L570448.  call temp:= `K`(v0) @signature `Ly5/d;.K:()Ljava/lang/Iterable;` @kind interface;
  #L57044e.  v0:= temp @kind object;
  #L570450.  call temp:= `iterator`(v0) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L570456.  v0:= temp @kind object;
  #L570458.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L57045e.  v1:= temp;
  #L570460.  if v1 == 0 then goto L57047e;
  #L570464.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L57046a.  v1:= temp @kind object;
  #L57046c.  v1:= (`p5.o`) v1 @kind object;
  #L570470.  v2:= v4.`x5.t.c` @type ^`x5.v` @kind object;
  #L570474.  v3:= 1I;
  #L570476.  call `a`(v2, v1, v3) @signature `Lx5/v;.a:(Lp5/o;I)V` @kind interface;
  #L57047c.  goto L570458;
  #L57047e.  v0:= 0I;
  #L570480.  return v0 @kind object;
}
procedure `void` `e`(`x5.t` v2 @kind this) @signature `Lx5/t;.e:()V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L5704fc.  v0:= v2.`x5.t.d` @type ^`z5.b` @kind object;
  #L570500.  v1:= new `x5.s`;
  #L570504.  call `<init>`(v1, v2) @signature `Lx5/s;.<init>:(Lx5/t;)V` @kind direct;
  #L57050a.  call temp:= `r`(v0, v1) @signature `Lz5/b;.r:(Lz5/b$a;)Ljava/lang/Object;` @kind interface;
  #L570510.  return @kind void;
}
procedure `void` `c`(`x5.t` v2 @kind this) @signature `Lx5/t;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5704d4.  v0:= v2.`x5.t.a` @type ^`java.util.concurrent.Executor` @kind object;
  #L5704d8.  v1:= new `x5.r`;
  #L5704dc.  call `<init>`(v1, v2) @signature `Lx5/r;.<init>:(Lx5/t;)V` @kind direct;
  #L5704e2.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L5704e8.  return @kind void;
}
