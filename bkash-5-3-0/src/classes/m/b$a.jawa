record `m.b$a` @kind class @AccessFlag  extends `m.f` @kind class {
  `m.b` `m.b$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m.b$a` v0 @kind this, `m.b` v1 @kind object) @signature `Lm/b$a;.<init>:(Lm/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L527744.  v0.`m.b$a.d` @type ^`m.b` := v1 @kind object;
  #L527748.  call `<init>`(v0) @signature `Lm/f;.<init>:()V` @kind direct;
  #L52774e.  return @kind void;
}
procedure `void` `a`(`m.b$a` v1 @kind this) @signature `Lm/b$a;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527760.  v0:= v1.`m.b$a.d` @type ^`m.b` @kind object;
  #L527764.  call `clear`(v0) @signature `Lm/b;.clear:()V` @kind virtual;
  #L52776a.  return @kind void;
}
procedure `java.lang.Object` `b`(`m.b$a` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lm/b$a;.b:(II)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L5276e4.  v2:= v0.`m.b$a.d` @type ^`m.b` @kind object;
  #L5276e8.  v2:= v2.`m.b.h` @type ^`java.lang.Object`[] @kind object;
  #L5276ec.  v1:= v2[v1] @kind object;
  #L5276f0.  return v1 @kind object;
}
procedure `java.util.Map` `c`(`m.b$a` v2 @kind this) @signature `Lm/b$a;.c:()Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L527724.  v0:= new `java.lang.UnsupportedOperationException`;
  #L527728.  v1:= "not a map" @kind object;
  #L52772c.  call `<init>`(v0, v1) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L527732.  throw v0;
}
procedure `int` `d`(`m.b$a` v1 @kind this) @signature `Lm/b$a;.d:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527688.  v0:= v1.`m.b$a.d` @type ^`m.b` @kind object;
  #L52768c.  v0:= v0.`m.b.i` @type ^`int`;
  #L527690.  return v0;
}
procedure `int` `e`(`m.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm/b$a;.e:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5276a4.  v0:= v1.`m.b$a.d` @type ^`m.b` @kind object;
  #L5276a8.  call temp:= `indexOf`(v0, v2) @signature `Lm/b;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L5276ae.  v2:= temp;
  #L5276b0.  return v2;
}
procedure `int` `f`(`m.b$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm/b$a;.f:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5276c4.  v0:= v1.`m.b$a.d` @type ^`m.b` @kind object;
  #L5276c8.  call temp:= `indexOf`(v0, v2) @signature `Lm/b;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L5276ce.  v2:= temp;
  #L5276d0.  return v2;
}
procedure `void` `g`(`m.b$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm/b$a;.g:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L52777c.  v2:= v0.`m.b$a.d` @type ^`m.b` @kind object;
  #L527780.  call temp:= `add`(v2, v1) @signature `Lm/b;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L527786.  return @kind void;
}
procedure `void` `h`(`m.b$a` v1 @kind this, `int` v2 ) @signature `Lm/b$a;.h:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527798.  v0:= v1.`m.b$a.d` @type ^`m.b` @kind object;
  #L52779c.  call temp:= `m`(v0, v2) @signature `Lm/b;.m:(I)Ljava/lang/Object;` @kind virtual;
  #L5277a2.  return @kind void;
}
procedure `java.lang.Object` `i`(`m.b$a` v0 @kind this, `int` v1 , `java.lang.Object` v2 @kind object) @signature `Lm/b$a;.i:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L527704.  v1:= new `java.lang.UnsupportedOperationException`;
  #L527708.  v2:= "not a map" @kind object;
  #L52770c.  call `<init>`(v1, v2) @signature `Ljava/lang/UnsupportedOperationException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L527712.  throw v1;
}
