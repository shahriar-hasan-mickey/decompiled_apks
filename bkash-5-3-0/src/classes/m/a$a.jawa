record `m.a$a` @kind class @AccessFlag  extends `m.f` @kind class {
  `m.a` `m.a$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`m.a$a` v0 @kind this, `m.a` v1 @kind object) @signature `Lm/a$a;.<init>:(Lm/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5274b4.  v0.`m.a$a.d` @type ^`m.a` := v1 @kind object;
  #L5274b8.  call `<init>`(v0) @signature `Lm/f;.<init>:()V` @kind direct;
  #L5274be.  return @kind void;
}
procedure `void` `a`(`m.a$a` v1 @kind this) @signature `Lm/a$a;.a:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5274d0.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L5274d4.  call `clear`(v0) @signature `Lm/g;.clear:()V` @kind virtual;
  #L5274da.  return @kind void;
}
procedure `java.lang.Object` `b`(`m.a$a` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lm/a$a;.b:(II)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527458.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L52745c.  v0:= v0.`m.g.h` @type ^`java.lang.Object`[] @kind object;
  #L527460.  v2:= v2 ^< 1;
  #L527464.  v2:= v2 + v3 @kind int;
  #L527466.  v2:= v0[v2] @kind object;
  #L52746a.  return v2 @kind object;
}
procedure `java.util.Map` `c`(`m.a$a` v1 @kind this) @signature `Lm/a$a;.c:()Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L52749c.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L5274a0.  return v0 @kind object;
}
procedure `int` `d`(`m.a$a` v1 @kind this) @signature `Lm/a$a;.d:()I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5273fc.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L527400.  v0:= v0.`m.g.i` @type ^`int`;
  #L527404.  return v0;
}
procedure `int` `e`(`m.a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm/a$a;.e:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527418.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L52741c.  call temp:= `f`(v0, v2) @signature `Lm/g;.f:(Ljava/lang/Object;)I` @kind virtual;
  #L527422.  v2:= temp;
  #L527424.  return v2;
}
procedure `int` `f`(`m.a$a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lm/a$a;.f:(Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527438.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L52743c.  call temp:= `h`(v0, v2) @signature `Lm/g;.h:(Ljava/lang/Object;)I` @kind virtual;
  #L527442.  v2:= temp;
  #L527444.  return v2;
}
procedure `void` `g`(`m.a$a` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lm/a$a;.g:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5274ec.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L5274f0.  call temp:= `put`(v0, v2, v3) @signature `Lm/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5274f6.  return @kind void;
}
procedure `void` `h`(`m.a$a` v1 @kind this, `int` v2 ) @signature `Lm/a$a;.h:(I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L527508.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L52750c.  call temp:= `k`(v0, v2) @signature `Lm/g;.k:(I)Ljava/lang/Object;` @kind virtual;
  #L527512.  return @kind void;
}
procedure `java.lang.Object` `i`(`m.a$a` v1 @kind this, `int` v2 , `java.lang.Object` v3 @kind object) @signature `Lm/a$a;.i:(ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;
    v0;

  #L52747c.  v0:= v1.`m.a$a.d` @type ^`m.a` @kind object;
  #L527480.  call temp:= `l`(v0, v2, v3) @signature `Lm/g;.l:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L527486.  v2:= temp @kind object;
  #L527488.  return v2 @kind object;
}
