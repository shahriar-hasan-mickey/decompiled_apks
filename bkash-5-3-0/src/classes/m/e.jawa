record `m.e` @kind class @AccessFlag PUBLIC {
  `java.util.LinkedHashMap` `m.e.a` @AccessFlag PRIVATE_FINAL;
  `int` `m.e.b` @AccessFlag PRIVATE;
  `int` `m.e.c` @AccessFlag PRIVATE;
  `int` `m.e.d` @AccessFlag PRIVATE;
  `int` `m.e.e` @AccessFlag PRIVATE;
  `int` `m.e.f` @AccessFlag PRIVATE;
  `int` `m.e.g` @AccessFlag PRIVATE;
  `int` `m.e.h` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`m.e` v3 @kind this, `int` v4 ) @signature `Lm/e;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L528b78.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L528b7e.  if v4 <= 0 then goto L528b9e;
  #L528b82.  v3.`m.e.c` @type ^`int` := v4;
  #L528b86.  v4:= new `java.util.LinkedHashMap`;
  #L528b8a.  v0:= 0I;
  #L528b8c.  v1:= 0.75F;
  #L528b90.  v2:= 1I;
  #L528b92.  call `<init>`(v4, v0, v1, v2) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L528b98.  v3.`m.e.a` @type ^`java.util.LinkedHashMap` := v4 @kind object;
  #L528b9c.  return @kind void;
  #L528b9e.  v4:= new `java.lang.IllegalArgumentException`;
  #L528ba2.  v0:= "maxSize <= 0" @kind object;
  #L528ba6.  call `<init>`(v4, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L528bac.  throw v4;
}
procedure `int` `e`(`m.e` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm/e;.e:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L5288d0.  call temp:= `f`(v3, v4, v5) @signature `Lm/e;.f:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind virtual;
  #L5288d6.  v0:= temp;
  #L5288d8.  if v0 < 0 then goto L5288de;
  #L5288dc.  return v0;
  #L5288de.  v0:= new `java.lang.IllegalStateException`;
  #L5288e2.  v1:= new `java.lang.StringBuilder`;
  #L5288e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5288ec.  v2:= "Negative size: " @kind object;
  #L5288f0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5288f6.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5288fc.  v4:= "=" @kind object;
  #L528900.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L528906.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52890c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L528912.  v4:= temp @kind object;
  #L528914.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L52891a.  throw v0;
}
procedure `java.lang.Object` `a`(`m.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lm/e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PROTECTED {
    temp;

  #L528940.  v1:= 0I;
  #L528942.  return v1 @kind object;
}
procedure `void` `b`(`m.e` v0 @kind this, `boolean` v1 , `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lm/e;.b:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L528bc0.  return @kind void;
}
procedure `java.lang.Object` `c`(`m.e` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lm/e;.c:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L528954.  v0:= "key == null" @kind object;
  #L528958.  call temp:= `requireNonNull`(v5, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L52895e.  @monitorenter v4
  #L528960.  v0:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528964.  call temp:= `get`(v0, v5) @signature `Ljava/util/LinkedHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L52896a.  v0:= temp @kind object;
  #L52896c.  if v0 == 0 then goto L528980;
  #L528970.  v5:= v4.`m.e.g` @type ^`int`;
  #L528974.  v5:= v5 + 1;
  #L528978.  v4.`m.e.g` @type ^`int` := v5;
  #L52897c.  @monitorexit v4
  #L52897e.  return v0 @kind object;
  #L528980.  v0:= v4.`m.e.h` @type ^`int`;
  #L528984.  v0:= v0 + 1;
  #L528988.  v4.`m.e.h` @type ^`int` := v0;
  #L52898c.  @monitorexit v4
  #L52898e.  call temp:= `a`(v4, v5) @signature `Lm/e;.a:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L528994.  v0:= temp @kind object;
  #L528996.  if v0 != 0 then goto L52899e;
  #L52899a.  v5:= 0I;
  #L52899c.  return v5 @kind object;
  #L52899e.  @monitorenter v4
  #L5289a0.  v1:= v4.`m.e.e` @type ^`int`;
  #L5289a4.  v1:= v1 + 1;
  #L5289a8.  v4.`m.e.e` @type ^`int` := v1;
  #L5289ac.  v1:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L5289b0.  call temp:= `put`(v1, v5, v0) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5289b6.  v1:= temp @kind object;
  #L5289b8.  if v1 == 0 then goto L5289c8;
  #L5289bc.  v2:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L5289c0.  call temp:= `put`(v2, v5, v1) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5289c6.  goto L5289da;
  #L5289c8.  v2:= v4.`m.e.b` @type ^`int`;
  #L5289cc.  call temp:= `e`(v4, v5, v0) @signature `Lm/e;.e:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L5289d2.  v3:= temp;
  #L5289d4.  v2:= v2 + v3 @kind int;
  #L5289d6.  v4.`m.e.b` @type ^`int` := v2;
  #L5289da.  @monitorexit v4
  #L5289dc.  if v1 == 0 then goto L5289ea;
  #L5289e0.  v2:= 0I;
  #L5289e2.  call `b`(v4, v2, v5, v0, v1) @signature `Lm/e;.b:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L5289e8.  return v1 @kind object;
  #L5289ea.  v5:= v4.`m.e.c` @type ^`int`;
  #L5289ee.  call `g`(v4, v5) @signature `Lm/e;.g:(I)V` @kind virtual;
  #L5289f4.  return v0 @kind object;
  #L5289f6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5289f8.  @monitorexit v4
  #L5289fa.  throw v5;
  #L5289fc.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5289fe.  @monitorexit v4
  #L528a00.  throw v5;
  catch `java.lang.Throwable` @[L528960..L52898e] goto L5289fc;
  catch `java.lang.Throwable` @[L5289a0..L5289dc] goto L5289f6;
  catch `java.lang.Throwable` @[L5289f8..L5289fa] goto L5289f6;
  catch `java.lang.Throwable` @[L5289fe..L528a00] goto L5289fc;
}
procedure `java.lang.Object` `d`(`m.e` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lm/e;.d:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L528a3c.  if v4 == 0 then goto L528aa6;
  #L528a40.  if v5 == 0 then goto L528aa6;
  #L528a44.  @monitorenter v3
  #L528a46.  v0:= v3.`m.e.d` @type ^`int`;
  #L528a4a.  v0:= v0 + 1;
  #L528a4e.  v3.`m.e.d` @type ^`int` := v0;
  #L528a52.  v0:= v3.`m.e.b` @type ^`int`;
  #L528a56.  call temp:= `e`(v3, v4, v5) @signature `Lm/e;.e:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L528a5c.  v1:= temp;
  #L528a5e.  v0:= v0 + v1 @kind int;
  #L528a60.  v3.`m.e.b` @type ^`int` := v0;
  #L528a64.  v0:= v3.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528a68.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/LinkedHashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L528a6e.  v0:= temp @kind object;
  #L528a70.  if v0 == 0 then goto L528a86;
  #L528a74.  v1:= v3.`m.e.b` @type ^`int`;
  #L528a78.  call temp:= `e`(v3, v4, v0) @signature `Lm/e;.e:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L528a7e.  v2:= temp;
  #L528a80.  v1:= v1 - v2 @kind int;
  #L528a82.  v3.`m.e.b` @type ^`int` := v1;
  #L528a86.  @monitorexit v3
  #L528a88.  if v0 == 0 then goto L528a94;
  #L528a8c.  v1:= 0I;
  #L528a8e.  call `b`(v3, v1, v4, v0, v5) @signature `Lm/e;.b:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L528a94.  v4:= v3.`m.e.c` @type ^`int`;
  #L528a98.  call `g`(v3, v4) @signature `Lm/e;.g:(I)V` @kind virtual;
  #L528a9e.  return v0 @kind object;
  #L528aa0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L528aa2.  @monitorexit v3
  #L528aa4.  throw v4;
  #L528aa6.  v4:= new `java.lang.NullPointerException`;
  #L528aaa.  v5:= "key == null || value == null" @kind object;
  #L528aae.  call `<init>`(v4, v5) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L528ab4.  throw v4;
  catch `java.lang.Throwable` @[L528a46..L528a88] goto L528aa0;
  catch `java.lang.Throwable` @[L528aa2..L528aa4] goto L528aa0;
}
procedure `int` `f`(`m.e` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lm/e;.f:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PROTECTED {
    temp;

  #L52892c.  v1:= 1I;
  #L52892e.  return v1;
}
procedure `void` `g`(`m.e` v4 @kind this, `int` v5 ) @signature `Lm/e;.g:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L528bd4.  @monitorenter v4
  #L528bd6.  v0:= v4.`m.e.b` @type ^`int`;
  #L528bda.  if v0 < 0 then goto L528c78;
  #L528bde.  v0:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528be2.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L528be8.  v0:= temp;
  #L528bea.  if v0 == 0 then goto L528bf6;
  #L528bee.  v0:= v4.`m.e.b` @type ^`int`;
  #L528bf2.  if v0 != 0 then goto L528c78;
  #L528bf6.  v0:= v4.`m.e.b` @type ^`int`;
  #L528bfa.  if v0 <= v5 then goto L528c74;
  #L528bfe.  v0:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528c02.  call temp:= `isEmpty`(v0) @signature `Ljava/util/LinkedHashMap;.isEmpty:()Z` @kind virtual;
  #L528c08.  v0:= temp;
  #L528c0a.  if v0 == 0 then goto L528c10;
  #L528c0e.  goto L528c74;
  #L528c10.  v0:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528c14.  call temp:= `entrySet`(v0) @signature `Ljava/util/LinkedHashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L528c1a.  v0:= temp @kind object;
  #L528c1c.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L528c22.  v0:= temp @kind object;
  #L528c24.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L528c2a.  v0:= temp @kind object;
  #L528c2c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L528c30.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L528c36.  v1:= temp @kind object;
  #L528c38.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L528c3e.  v0:= temp @kind object;
  #L528c40.  v2:= v4.`m.e.a` @type ^`java.util.LinkedHashMap` @kind object;
  #L528c44.  call temp:= `remove`(v2, v1) @signature `Ljava/util/LinkedHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L528c4a.  v2:= v4.`m.e.b` @type ^`int`;
  #L528c4e.  call temp:= `e`(v4, v1, v0) @signature `Lm/e;.e:(Ljava/lang/Object;Ljava/lang/Object;)I` @kind direct;
  #L528c54.  v3:= temp;
  #L528c56.  v2:= v2 - v3 @kind int;
  #L528c58.  v4.`m.e.b` @type ^`int` := v2;
  #L528c5c.  v2:= v4.`m.e.f` @type ^`int`;
  #L528c60.  v3:= 1I;
  #L528c62.  v2:= v2 + v3 @kind int;
  #L528c64.  v4.`m.e.f` @type ^`int` := v2;
  #L528c68.  @monitorexit v4
  #L528c6a.  v2:= 0I;
  #L528c6c.  call `b`(v4, v3, v1, v0, v2) @signature `Lm/e;.b:(ZLjava/lang/Object;Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L528c72.  goto L528bd4;
  #L528c74.  @monitorexit v4
  #L528c76.  return @kind void;
  #L528c78.  v5:= new `java.lang.IllegalStateException`;
  #L528c7c.  v0:= new `java.lang.StringBuilder`;
  #L528c80.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L528c86.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L528c8c.  v1:= temp @kind object;
  #L528c8e.  call temp:= `getName`(v1) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L528c94.  v1:= temp @kind object;
  #L528c96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L528c9c.  v1:= ".sizeOf() is reporting inconsistent results!" @kind object;
  #L528ca0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L528ca6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L528cac.  v0:= temp @kind object;
  #L528cae.  call `<init>`(v5, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L528cb4.  throw v5;
  #L528cb6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L528cb8.  @monitorexit v4
  #L528cba.  throw v5;
  catch `java.lang.Throwable` @[L528bd6..L528c6a] goto L528cb6;
  catch `java.lang.Throwable` @[L528c74..L528cba] goto L528cb6;
}
procedure `java.lang.String` `toString`(`m.e` v6 @kind this) @signature `Lm/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L528adc.  @monitorenter v6
  #L528ade.  v0:= v6.`m.e.g` @type ^`int`;
  #L528ae2.  v1:= v6.`m.e.h` @type ^`int`;
  #L528ae6.  v1:= v1 + v0 @kind int;
  #L528ae8.  v2:= 0I;
  #L528aea.  if v1 == 0 then goto L528af6;
  #L528aee.  v0:= v0 * 100;
  #L528af2.  v0:= v0 / v1 @kind int;
  #L528af4.  goto L528af8;
  #L528af6.  v0:= 0I;
  #L528af8.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L528afc.  v3:= "LruCache[maxSize=%d,hits=%d,misses=%d,hitRate=%d%%]" @kind object;
  #L528b00.  v4:= 4I;
  #L528b02.  v4:= new `java.lang.Object`[v4];
  #L528b06.  v5:= v6.`m.e.c` @type ^`int`;
  #L528b0a.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L528b10.  v5:= temp @kind object;
  #L528b12.  v4[v2]:= v5 @kind object;
  #L528b16.  v2:= 1I;
  #L528b18.  v5:= v6.`m.e.g` @type ^`int`;
  #L528b1c.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L528b22.  v5:= temp @kind object;
  #L528b24.  v4[v2]:= v5 @kind object;
  #L528b28.  v2:= 2I;
  #L528b2a.  v5:= v6.`m.e.h` @type ^`int`;
  #L528b2e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L528b34.  v5:= temp @kind object;
  #L528b36.  v4[v2]:= v5 @kind object;
  #L528b3a.  v2:= 3I;
  #L528b3c.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L528b42.  v0:= temp @kind object;
  #L528b44.  v4[v2]:= v0 @kind object;
  #L528b48.  call temp:= `format`(v1, v3, v4) @signature `Ljava/lang/String;.format:(Ljava/util/Locale;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L528b4e.  v0:= temp @kind object;
  #L528b50.  @monitorexit v6
  #L528b52.  return v0 @kind object;
  #L528b54.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L528b56.  @monitorexit v6
  #L528b58.  throw v0;
  catch `java.lang.Throwable` @[L528ade..L528b50] goto L528b54;
}
