record `m.a` @kind class @AccessFlag PUBLIC extends `m.g` @kind class, `java.util.Map` @kind interface {
  `m.f` `m.a.n` @AccessFlag ;
}
procedure `void` `<init>`(`m.a` v0 @kind this) @signature `Lm/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5275d8.  call `<init>`(v0) @signature `Lm/g;.<init>:()V` @kind direct;
  #L5275de.  return @kind void;
}
procedure `void` `<init>`(`m.a` v0 @kind this, `int` v1 ) @signature `Lm/a;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5275f0.  call `<init>`(v0, v1) @signature `Lm/g;.<init>:(I)V` @kind direct;
  #L5275f6.  return @kind void;
}
procedure `void` `<init>`(`m.a` v0 @kind this, `m.g` v1 @kind object) @signature `Lm/a;.<init>:(Lm/g;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L527608.  call `<init>`(v0, v1) @signature `Lm/g;.<init>:(Lm/g;)V` @kind direct;
  #L52760e.  return @kind void;
}
procedure `m.f` `n`(`m.a` v1 @kind this) @signature `Lm/a;.n:()Lm/f;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L5275ac.  v0:= v1.`m.a.n` @type ^`m.f` @kind object;
  #L5275b0.  if v0 != 0 then goto L5275c2;
  #L5275b4.  v0:= new `m.a$a`;
  #L5275b8.  call `<init>`(v0, v1) @signature `Lm/a$a;.<init>:(Lm/a;)V` @kind direct;
  #L5275be.  v1.`m.a.n` @type ^`m.f` := v0 @kind object;
  #L5275c2.  v0:= v1.`m.a.n` @type ^`m.f` @kind object;
  #L5275c6.  return v0 @kind object;
}
procedure `java.util.Set` `entrySet`(`m.a` v1 @kind this) @signature `Lm/a;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527564.  call temp:= `n`(v1) @signature `Lm/a;.n:()Lm/f;` @kind direct;
  #L52756a.  v0:= temp @kind object;
  #L52756c.  call temp:= `l`(v0) @signature `Lm/f;.l:()Ljava/util/Set;` @kind virtual;
  #L527572.  v0:= temp @kind object;
  #L527574.  return v0 @kind object;
}
procedure `java.util.Set` `keySet`(`m.a` v1 @kind this) @signature `Lm/a;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527588.  call temp:= `n`(v1) @signature `Lm/a;.n:()Lm/f;` @kind direct;
  #L52758e.  v0:= temp @kind object;
  #L527590.  call temp:= `m`(v0) @signature `Lm/f;.m:()Ljava/util/Set;` @kind virtual;
  #L527596.  v0:= temp @kind object;
  #L527598.  return v0 @kind object;
}
procedure `boolean` `o`(`m.a` v0 @kind this, `java.util.Collection` v1 @kind object) @signature `Lm/a;.o:(Ljava/util/Collection;)Z` @AccessFlag PUBLIC {
    temp;

  #L527524.  call temp:= `p`(v0, v1) @signature `Lm/f;.p:(Ljava/util/Map;Ljava/util/Collection;)Z` @kind static;
  #L52752a.  v1:= temp;
  #L52752c.  return v1;
}
procedure `void` `putAll`(`m.a` v2 @kind this, `java.util.Map` v3 @kind object) @signature `Lm/a;.putAll:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L527620.  v0:= v2.`m.g.i` @type ^`int`;
  #L527624.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L52762a.  v1:= temp;
  #L52762c.  v0:= v0 + v1 @kind int;
  #L52762e.  call `c`(v2, v0) @signature `Lm/g;.c:(I)V` @kind virtual;
  #L527634.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L52763a.  v3:= temp @kind object;
  #L52763c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L527642.  v3:= temp @kind object;
  #L527644.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L52764a.  v0:= temp;
  #L52764c.  if v0 == 0 then goto L527674;
  #L527650.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L527656.  v0:= temp @kind object;
  #L527658.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L52765c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L527662.  v1:= temp @kind object;
  #L527664.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L52766a.  v0:= temp @kind object;
  #L52766c.  call temp:= `put`(v2, v1, v0) @signature `Lm/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L527672.  goto L527644;
  #L527674.  return @kind void;
}
procedure `java.util.Collection` `values`(`m.a` v1 @kind this) @signature `Lm/a;.values:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L527540.  call temp:= `n`(v1) @signature `Lm/a;.n:()Lm/f;` @kind direct;
  #L527546.  v0:= temp @kind object;
  #L527548.  call temp:= `n`(v0) @signature `Lm/f;.n:()Ljava/util/Collection;` @kind virtual;
  #L52754e.  v0:= temp @kind object;
  #L527550.  return v0 @kind object;
}
