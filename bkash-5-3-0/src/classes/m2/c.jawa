record `m2.c` @kind class @AccessFlag PUBLIC {
  `boolean` `m2.c.a` @AccessFlag ;
  `boolean` `m2.c.b` @AccessFlag ;
  `boolean` `m2.c.c` @AccessFlag ;
  `int` `m2.c.d` @AccessFlag ;
  `java.util.List` `m2.c.e` @AccessFlag ;
  `java.util.List` `m2.c.f` @AccessFlag ;
}
procedure `void` `<clinit>`() @signature `Lm2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L531780.  return @kind void;
}
procedure `void` `<init>`(`m2.c` v1 @kind this) @signature `Lm2/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L531794.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53179a.  v0:= 0I;
  #L53179c.  v1.`m2.c.c` @type ^`boolean` := v0 @kind boolean;
  #L5317a0.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L5317a4.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L5317aa.  v0:= new `java.util.ArrayList`;
  #L5317ae.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5317b4.  v1.`m2.c.e` @type ^`java.util.List` := v0 @kind object;
  #L5317b8.  v0:= new `java.util.ArrayList`;
  #L5317bc.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5317c2.  v1.`m2.c.f` @type ^`java.util.List` := v0 @kind object;
  #L5317c6.  return @kind void;
}
