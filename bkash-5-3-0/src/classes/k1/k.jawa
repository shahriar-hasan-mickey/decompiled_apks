record `k1.k` @kind class @AccessFlag  extends `l1.f` @kind interface {
}
global `k1.k` `@@k1.k.a` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lk1/k;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L523234.  v0:= new `k1.k`;
  #L523238.  call `<init>`(v0) @signature `Lk1/k;.<init>:()V` @kind direct;
  #L52323e.  `@@k1.k.a` @type ^`k1.k` := v0 @kind object;
  #L523242.  return @kind void;
}
procedure `void` `<init>`(`k1.k` v0 @kind this) @signature `Lk1/k;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L523254.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L52325a.  return @kind void;
}
procedure `java.lang.Object` `b`(`k1.b` v16 @kind object, `java.util.Map` v17 @kind object, `java.lang.reflect.Type` v18 @kind object, `java.lang.reflect.Type` v19 @kind object, `java.lang.Object` v20 @kind object) @signature `Lk1/k;.b:(Lk1/b;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L522aa8.  v1:= v16 @kind object;
  #L522aac.  v0:= v17 @kind object;
  #L522ab0.  v2:= v18 @kind object;
  #L522ab4.  v3:= v19 @kind object;
  #L522ab8.  v4:= v1.`k1.b.k` @type ^`k1.e` @kind object;
  #L522abc.  v5:= v4.`k1.e.a` @type ^`int`;
  #L522ac0.  v6:= 16I;
  #L522ac4.  v7:= 12I;
  #L522ac8.  if v5 == v7 then goto L522b08;
  #L522acc.  if v5 != v6 then goto L522ad2;
  #L522ad0.  goto L522b08;
  #L522ad2.  v0:= new `com.alibaba.fastjson.c`;
  #L522ad6.  v1:= new `java.lang.StringBuilder`;
  #L522ada.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522ae0.  v2:= "syntax error, expect {, actual " @kind object;
  #L522ae4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522aea.  call temp:= `a`(v5) @signature `Lk1/f;.a:(I)Ljava/lang/String;` @kind static;
  #L522af0.  v2:= temp @kind object;
  #L522af2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522af8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522afe.  v1:= temp @kind object;
  #L522b00.  call `<init>`(v0, v1) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522b06.  throw v0;
  #L522b08.  v5:= v1.`k1.b.h` @type ^`k1.m` @kind object;
  #L522b0c.  call temp:= `e`(v5, v2) @signature `Lk1/m;.e:(Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L522b12.  v5:= temp @kind object;
  #L522b14.  v7:= v1.`k1.b.h` @type ^`k1.m` @kind object;
  #L522b18.  call temp:= `e`(v7, v3) @signature `Lk1/m;.e:(Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L522b1e.  v7:= temp @kind object;
  #L522b20.  call `D`(v4) @signature `Lk1/e;.D:()V` @kind virtual;
  #L522b26.  v8:= v1.`k1.b.l` @type ^`k1.l` @kind object;
  #L522b2a.  v9:= v4.`k1.e.a` @type ^`int`;
  #L522b2e.  v10:= 13I;
  #L522b32.  if v9 != v10 then goto L522b44;
  #L522b36.  call `v`(v4, v6) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L522b3c.  call `a0`(v1, v8) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522b42.  return v0 @kind object;
  #L522b44.  v11:= 58I;
  #L522b48.  v13:= 1I;
  #L522b4a.  v14:= 4I;
  #L522b4c.  if v9 != v14 then goto L522c52;
  #L522b50.  v15:= v4.`k1.e.h` @type ^`int`;
  #L522b54.  if v15 != v14 then goto L522c52;
  #L522b58.  v15:= v4.`k1.e.q` @type ^`java.lang.String` @kind object;
  #L522b5c.  v12:= "$ref" @kind object;
  #L522b60.  v6:= v4.`k1.e.k` @type ^`int`;
  #L522b64.  v6:= v6 + v13 @kind int;
  #L522b66.  call temp:= `startsWith`(v15, v12, v6) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;I)Z` @kind virtual;
  #L522b6c.  v6:= temp;
  #L522b6e.  if v6 == 0 then goto L522c52;
  #L522b72.  v6:= `@@k1.d.DisableSpecialKeyDetect` @type ^`k1.d` @kind object;
  #L522b76.  call temp:= `m`(v4, v6) @signature `Lk1/e;.m:(Lk1/d;)Z` @kind virtual;
  #L522b7c.  v6:= temp;
  #L522b7e.  if v6 != 0 then goto L522c52;
  #L522b82.  call `g`(v4, v11) @signature `Lk1/e;.g:(C)V` @kind virtual;
  #L522b88.  v0:= v4.`k1.e.a` @type ^`int`;
  #L522b8c.  if v0 != v14 then goto L522c1c;
  #L522b90.  call temp:= `S`(v4) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L522b96.  v0:= temp @kind object;
  #L522b98.  v2:= ".." @kind object;
  #L522b9c.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L522ba2.  v2:= temp;
  #L522ba4.  if v2 == 0 then goto L522bb2;
  #L522ba8.  v0:= v8.`k1.l.b` @type ^`k1.l` @kind object;
  #L522bac.  v12:= v0.`k1.l.a` @type ^`java.lang.Object` @kind object;
  #L522bb0.  goto L522bec;
  #L522bb2.  v2:= "$" @kind object;
  #L522bb6.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L522bbc.  v2:= temp;
  #L522bbe.  if v2 == 0 then goto L522bd6;
  #L522bc2.  v0:= v8 @kind object;
  #L522bc4.  v2:= v0.`k1.l.b` @type ^`k1.l` @kind object;
  #L522bc8.  if v2 == 0 then goto L522bd0;
  #L522bcc.  v0:= v2 @kind object;
  #L522bce.  goto L522bc4;
  #L522bd0.  v12:= v0.`k1.l.a` @type ^`java.lang.Object` @kind object;
  #L522bd4.  goto L522bec;
  #L522bd6.  v2:= new `k1.b$a`;
  #L522bda.  call `<init>`(v2, v8, v0) @signature `Lk1/b$a;.<init>:(Lk1/l;Ljava/lang/String;)V` @kind direct;
  #L522be0.  call `Z`(v1, v2) @signature `Lk1/b;.Z:(Lk1/b$a;)V` @kind virtual;
  #L522be6.  v1.`k1.b.p` @type ^`int` := v13;
  #L522bea.  v12:= 0I;
  #L522bec.  call `v`(v4, v10) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L522bf2.  v0:= v4.`k1.e.a` @type ^`int`;
  #L522bf6.  if v0 != v10 then goto L522c0c;
  #L522bfa.  v0:= 16I;
  #L522bfe.  call `v`(v4, v0) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L522c04.  call `a0`(v1, v8) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522c0a.  return v12 @kind object;
  #L522c0c.  v0:= new `com.alibaba.fastjson.c`;
  #L522c10.  v2:= "illegal ref" @kind object;
  #L522c14.  call `<init>`(v0, v2) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522c1a.  throw v0;
  #L522c1c.  v0:= new `com.alibaba.fastjson.c`;
  #L522c20.  v2:= new `java.lang.StringBuilder`;
  #L522c24.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522c2a.  v3:= "illegal ref, " @kind object;
  #L522c2e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522c34.  call temp:= `a`(v9) @signature `Lk1/f;.a:(I)Ljava/lang/String;` @kind static;
  #L522c3a.  v3:= temp @kind object;
  #L522c3c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522c42.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522c48.  v2:= temp @kind object;
  #L522c4a.  call `<init>`(v0, v2) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522c50.  throw v0;
  #L522c52.  call temp:= `size`(v17) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L522c58.  v6:= temp;
  #L522c5a.  if v6 != 0 then goto L522cb6;
  #L522c5e.  if v9 != v14 then goto L522cb6;
  #L522c62.  v6:= "@type" @kind object;
  #L522c66.  call temp:= `S`(v4) @signature `Lk1/e;.S:()Ljava/lang/String;` @kind virtual;
  #L522c6c.  v9:= temp @kind object;
  #L522c6e.  call temp:= `equals`(v6, v9) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L522c74.  v6:= temp;
  #L522c76.  if v6 == 0 then goto L522cb6;
  #L522c7a.  v6:= `@@k1.d.DisableSpecialKeyDetect` @type ^`k1.d` @kind object;
  #L522c7e.  call temp:= `m`(v4, v6) @signature `Lk1/e;.m:(Lk1/d;)Z` @kind virtual;
  #L522c84.  v6:= temp;
  #L522c86.  if v6 != 0 then goto L522cb6;
  #L522c8a.  call `g`(v4, v11) @signature `Lk1/e;.g:(C)V` @kind virtual;
  #L522c90.  v6:= 16I;
  #L522c94.  call `v`(v4, v6) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L522c9a.  v6:= v4.`k1.e.a` @type ^`int`;
  #L522c9e.  if v6 != v10 then goto L522cb0;
  #L522ca2.  call `D`(v4) @signature `Lk1/e;.D:()V` @kind virtual;
  #L522ca8.  call `a0`(v1, v8) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522cae.  return v0 @kind object;
  #L522cb0.  call `D`(v4) @signature `Lk1/e;.D:()V` @kind virtual;
  #L522cb6.  v6:= 0I;
  #L522cb8.  call temp:= `a`(v5, v1, v2, v6) @signature `Ll1/f;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L522cbe.  v6:= temp @kind object;
  #L522cc0.  v9:= v4.`k1.e.a` @type ^`int`;
  #L522cc4.  v10:= 17I;
  #L522cc8.  if v9 != v10 then goto L522d08;
  #L522ccc.  call `D`(v4) @signature `Lk1/e;.D:()V` @kind virtual;
  #L522cd2.  call temp:= `a`(v7, v1, v3, v6) @signature `Ll1/f;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L522cd8.  v9:= temp @kind object;
  #L522cda.  v10:= v1.`k1.b.p` @type ^`int`;
  #L522cde.  if v10 != v13 then goto L522ce8;
  #L522ce2.  call `l0`(v1, v0, v6) @signature `Lk1/b;.l0:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L522ce8.  call temp:= `put`(v0, v6, v9) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L522cee.  v6:= v4.`k1.e.a` @type ^`int`;
  #L522cf2.  v9:= 16I;
  #L522cf6.  if v6 != v9 then goto L522d00;
  #L522cfa.  call `D`(v4) @signature `Lk1/e;.D:()V` @kind virtual;
  #L522d00.  v6:= 16I;
  #L522d04.  goto L522b2a;
  #L522d08.  v0:= new `com.alibaba.fastjson.c`;
  #L522d0c.  v2:= new `java.lang.StringBuilder`;
  #L522d10.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522d16.  v3:= "syntax error, expect :, actual " @kind object;
  #L522d1a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522d20.  v3:= v4.`k1.e.a` @type ^`int`;
  #L522d24.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L522d2a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522d30.  v2:= temp @kind object;
  #L522d32.  call `<init>`(v0, v2) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522d38.  throw v0;
  #L522d3a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L522d3c.  call `a0`(v1, v8) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522d42.  throw v0;
  catch `java.lang.Throwable` @[L522b2a..L522b3c] goto L522d3a;
  catch `java.lang.Throwable` @[L522b50..L522c04] goto L522d3a;
  catch `java.lang.Throwable` @[L522c0c..L522ca8] goto L522d3a;
  catch `java.lang.Throwable` @[L522cb0..L522d3a] goto L522d3a;
}
procedure `java.util.Map` `d`(`k1.b` v9 @kind object, `java.util.Map` v10 @kind object, `java.lang.reflect.Type` v11 @kind object, `java.lang.Object` v12 @kind object) @signature `Lk1/k;.d:(Lk1/b;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/util/Map;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L522f20.  v0:= v9.`k1.b.k` @type ^`k1.e` @kind object;
  #L522f24.  v1:= v0.`k1.e.a` @type ^`int`;
  #L522f28.  v2:= 12I;
  #L522f2c.  if v1 != v2 then goto L5231bc;
  #L522f30.  v1:= v9.`k1.b.l` @type ^`k1.l` @kind object;
  #L522f34.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L522f3a.  v2:= v0.`k1.e.d` @type ^`char` @kind char;
  #L522f3e.  v3:= 44I;
  #L522f42.  if v2 != v3 then goto L522f58;
  #L522f46.  call temp:= `y`(v0) @signature `Lk1/e;.y:()C` @kind virtual;
  #L522f4c.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L522f52.  v2:= v0.`k1.e.d` @type ^`char` @kind char;
  #L522f56.  goto L522f3e;
  #L522f58.  v3:= "syntax error, " @kind object;
  #L522f5c.  v4:= 0I;
  #L522f5e.  v5:= 58I;
  #L522f62.  v6:= 34I;
  #L522f66.  v7:= 16I;
  #L522f6a.  if v2 != v6 then goto L522fbc;
  #L522f6e.  v2:= v9.`k1.b.g` @type ^`k1.o` @kind object;
  #L522f72.  call temp:= `e`(v0, v2, v6) @signature `Lk1/e;.e:(Lk1/o;C)Ljava/lang/String;` @kind virtual;
  #L522f78.  v2:= temp @kind object;
  #L522f7a.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L522f80.  v8:= v0.`k1.e.d` @type ^`char` @kind char;
  #L522f84.  if v8 != v5 then goto L522f8a;
  #L522f88.  goto L52304c;
  #L522f8a.  v10:= new `com.alibaba.fastjson.c`;
  #L522f8e.  v11:= new `java.lang.StringBuilder`;
  #L522f92.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522f98.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522f9e.  call temp:= `J`(v0) @signature `Lk1/e;.J:()Ljava/lang/String;` @kind virtual;
  #L522fa4.  v12:= temp @kind object;
  #L522fa6.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522fac.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522fb2.  v11:= temp @kind object;
  #L522fb4.  call `<init>`(v10, v11) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522fba.  throw v10;
  #L522fbc.  v8:= 125I;
  #L522fc0.  if v2 != v8 then goto L522fdc;
  #L522fc4.  call temp:= `y`(v0) @signature `Lk1/e;.y:()C` @kind virtual;
  #L522fca.  v0.`k1.e.h` @type ^`int` := v4;
  #L522fce.  call `v`(v0, v7) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L522fd4.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522fda.  return v10 @kind object;
  #L522fdc.  v8:= 39I;
  #L522fe0.  if v2 != v8 then goto L523032;
  #L522fe4.  v2:= v9.`k1.b.g` @type ^`k1.o` @kind object;
  #L522fe8.  call temp:= `e`(v0, v2, v8) @signature `Lk1/e;.e:(Lk1/o;C)Ljava/lang/String;` @kind virtual;
  #L522fee.  v2:= temp @kind object;
  #L522ff0.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L522ff6.  v8:= v0.`k1.e.d` @type ^`char` @kind char;
  #L522ffa.  if v8 != v5 then goto L523000;
  #L522ffe.  goto L52304c;
  #L523000.  v10:= new `com.alibaba.fastjson.c`;
  #L523004.  v11:= new `java.lang.StringBuilder`;
  #L523008.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L52300e.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L523014.  call temp:= `J`(v0) @signature `Lk1/e;.J:()Ljava/lang/String;` @kind virtual;
  #L52301a.  v12:= temp @kind object;
  #L52301c.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L523022.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L523028.  v11:= temp @kind object;
  #L52302a.  call `<init>`(v10, v11) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L523030.  throw v10;
  #L523032.  v2:= v9.`k1.b.g` @type ^`k1.o` @kind object;
  #L523036.  call temp:= `t`(v0, v2) @signature `Lk1/e;.t:(Lk1/o;)Ljava/lang/String;` @kind virtual;
  #L52303c.  v2:= temp @kind object;
  #L52303e.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L523044.  v3:= v0.`k1.e.d` @type ^`char` @kind char;
  #L523048.  if v3 != v5 then goto L523170;
  #L52304c.  call temp:= `y`(v0) @signature `Lk1/e;.y:()C` @kind virtual;
  #L523052.  call `X`(v0) @signature `Lk1/e;.X:()V` @kind virtual;
  #L523058.  v0.`k1.e.h` @type ^`int` := v4;
  #L52305c.  v3:= "@type" @kind object;
  #L523060.  v4:= 13I;
  #L523064.  v5:= 0I;
  #L523066.  if v2 != v3 then goto L5230fc;
  #L52306a.  v3:= `@@k1.d.DisableSpecialKeyDetect` @type ^`k1.d` @kind object;
  #L52306e.  call temp:= `m`(v0, v3) @signature `Lk1/e;.m:(Lk1/d;)Z` @kind virtual;
  #L523074.  v3:= temp;
  #L523076.  if v3 != 0 then goto L5230fc;
  #L52307a.  v2:= v9.`k1.b.g` @type ^`k1.o` @kind object;
  #L52307e.  call temp:= `e`(v0, v2, v6) @signature `Lk1/e;.e:(Lk1/o;C)Ljava/lang/String;` @kind virtual;
  #L523084.  v2:= temp @kind object;
  #L523086.  v3:= v9.`k1.b.h` @type ^`k1.m` @kind object;
  #L52308a.  v6:= v0.`k1.e.c` @type ^`int`;
  #L52308e.  call temp:= `a`(v3, v2, v5, v6) @signature `Lk1/m;.a:(Ljava/lang/String;Ljava/lang/Class;I)Ljava/lang/Class;` @kind virtual;
  #L523094.  v2:= temp @kind object;
  #L523096.  call temp:= `getClass`(v10) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L52309c.  v3:= temp @kind object;
  #L52309e.  if v2 != v3 then goto L5230be;
  #L5230a2.  call `v`(v0, v7) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L5230a8.  v2:= v0.`k1.e.a` @type ^`int`;
  #L5230ac.  if v2 != v4 then goto L522f34;
  #L5230b0.  call `v`(v0, v7) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L5230b6.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L5230bc.  return v10 @kind object;
  #L5230be.  v10:= v9.`k1.b.h` @type ^`k1.m` @kind object;
  #L5230c2.  call temp:= `e`(v10, v2) @signature `Lk1/m;.e:(Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L5230c8.  v10:= temp @kind object;
  #L5230ca.  call `v`(v0, v7) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L5230d0.  v11:= 2I;
  #L5230d2.  v9.`k1.b.p` @type ^`int` := v11;
  #L5230d6.  if v1 == 0 then goto L5230e8;
  #L5230da.  v11:= instanceof @variable v12 @type ^`java.lang.Integer` @kind boolean;
  #L5230de.  if v11 != 0 then goto L5230e8;
  #L5230e2.  call `B0`(v9) @signature `Lk1/b;.B0:()V` @kind virtual;
  #L5230e8.  call temp:= `a`(v10, v9, v2, v12) @signature `Ll1/f;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5230ee.  v10:= temp @kind object;
  #L5230f0.  v10:= (`java.util.Map`) v10 @kind object;
  #L5230f4.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L5230fa.  return v10 @kind object;
  #L5230fc.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L523102.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L523108.  v3:= v0.`k1.e.a` @type ^`int`;
  #L52310c.  v6:= 8I;
  #L523110.  if v3 != v6 then goto L52311c;
  #L523114.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L52311a.  goto L523124;
  #L52311c.  call temp:= `k`(v9, v11, v2) @signature `Lk1/b;.k:(Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L523122.  v5:= temp @kind object;
  #L523124.  call temp:= `put`(v10, v2, v5) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L52312a.  v3:= v9.`k1.b.p` @type ^`int`;
  #L52312e.  v6:= 1I;
  #L523130.  if v3 != v6 then goto L52313a;
  #L523134.  call `l0`(v9, v10, v2) @signature `Lk1/b;.l0:(Ljava/util/Map;Ljava/lang/Object;)V` @kind virtual;
  #L52313a.  call temp:= `v`(v9, v1, v5, v2) @signature `Lk1/b;.v:(Lk1/l;Ljava/lang/Object;Ljava/lang/Object;)Lk1/l;` @kind virtual;
  #L523140.  v2:= v0.`k1.e.a` @type ^`int`;
  #L523144.  v3:= 20I;
  #L523148.  if v2 == v3 then goto L523168;
  #L52314c.  v3:= 15I;
  #L523150.  if v2 != v3 then goto L523156;
  #L523154.  goto L523168;
  #L523156.  if v2 != v4 then goto L522f34;
  #L52315a.  call `D`(v0) @signature `Lk1/e;.D:()V` @kind virtual;
  #L523160.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L523166.  return v10 @kind object;
  #L523168.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L52316e.  return v10 @kind object;
  #L523170.  v10:= new `com.alibaba.fastjson.c`;
  #L523174.  v11:= new `java.lang.StringBuilder`;
  #L523178.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L52317e.  v12:= "expect ':' at " @kind object;
  #L523182.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L523188.  v12:= v0.`k1.e.b` @type ^`int`;
  #L52318c.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L523192.  v12:= ", actual " @kind object;
  #L523196.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L52319c.  call temp:= `append`(v11, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5231a2.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5231a8.  v11:= temp @kind object;
  #L5231aa.  call `<init>`(v10, v11) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5231b0.  throw v10;
  #L5231b2.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5231b4.  call `a0`(v9, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L5231ba.  throw v10;
  #L5231bc.  v9:= new `com.alibaba.fastjson.c`;
  #L5231c0.  v10:= new `java.lang.StringBuilder`;
  #L5231c4.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5231ca.  v11:= "syntax error, expect {, actual " @kind object;
  #L5231ce.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5231d4.  v11:= v0.`k1.e.a` @type ^`int`;
  #L5231d8.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5231de.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5231e4.  v10:= temp @kind object;
  #L5231e6.  call `<init>`(v9, v10) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5231ec.  throw v9;
  catch `java.lang.Throwable` @[L522f34..L522f56] goto L5231b2;
  catch `java.lang.Throwable` @[L522f6e..L522fd4] goto L5231b2;
  catch `java.lang.Throwable` @[L522fe4..L5230b6] goto L5231b2;
  catch `java.lang.Throwable` @[L5230be..L5230f4] goto L5231b2;
  catch `java.lang.Throwable` @[L5230fc..L523160] goto L5231b2;
  catch `java.lang.Throwable` @[L523170..L5231b2] goto L5231b2;
}
procedure `java.lang.Object` `a`(`k1.k` v4 @kind this, `k1.b` v5 @kind object, `java.lang.reflect.Type` v6 @kind object, `java.lang.Object` v7 @kind object) @signature `Lk1/k;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5229c8.  v0:= constclass @type ^`com.alibaba.fastjson.JSONObject` @kind object;
  #L5229cc.  if v6 != v0 then goto L5229e2;
  #L5229d0.  v0:= v5.`k1.b.s` @type ^`l1.e` @kind object;
  #L5229d4.  if v0 != 0 then goto L5229e2;
  #L5229d8.  call temp:= `i0`(v5) @signature `Lk1/b;.i0:()Lcom/alibaba/fastjson/JSONObject;` @kind virtual;
  #L5229de.  v5:= temp @kind object;
  #L5229e0.  return v5 @kind object;
  #L5229e2.  v0:= v5.`k1.b.k` @type ^`k1.e` @kind object;
  #L5229e6.  v1:= v0.`k1.e.a` @type ^`int`;
  #L5229ea.  v2:= 8I;
  #L5229ee.  if v1 != v2 then goto L522a00;
  #L5229f2.  v5:= 16I;
  #L5229f6.  call `v`(v0, v5) @signature `Lk1/e;.v:(I)V` @kind virtual;
  #L5229fc.  v5:= 0I;
  #L5229fe.  return v5 @kind object;
  #L522a00.  call temp:= `c`(v4, v6) @signature `Lk1/k;.c:(Ljava/lang/reflect/Type;)Ljava/util/Map;` @kind virtual;
  #L522a06.  v0:= temp @kind object;
  #L522a08.  v1:= v5.`k1.b.l` @type ^`k1.l` @kind object;
  #L522a0c.  call temp:= `v`(v5, v1, v0, v7) @signature `Lk1/b;.v:(Lk1/l;Ljava/lang/Object;Ljava/lang/Object;)Lk1/l;` @kind virtual;
  #L522a12.  v2:= instanceof @variable v6 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L522a16.  if v2 == 0 then goto L522a62;
  #L522a1a.  v6:= (`java.lang.reflect.ParameterizedType`) v6 @kind object;
  #L522a1e.  call temp:= `getActualTypeArguments`(v6) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L522a24.  v2:= temp @kind object;
  #L522a26.  v3:= 0I;
  #L522a28.  v2:= v2[v3] @kind object;
  #L522a2c.  call temp:= `getActualTypeArguments`(v6) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L522a32.  v6:= temp @kind object;
  #L522a34.  v3:= 1I;
  #L522a36.  v6:= v6[v3] @kind object;
  #L522a3a.  v3:= constclass @type ^`java.lang.String` @kind object;
  #L522a3e.  if v3 != v2 then goto L522a52;
  #L522a42.  call temp:= `d`(v5, v0, v6, v7) @signature `Lk1/k;.d:(Lk1/b;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/util/Map;` @kind static;
  #L522a48.  v6:= temp @kind object;
  #L522a4a.  call `a0`(v5, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522a50.  return v6 @kind object;
  #L522a52.  call temp:= `b`(v5, v0, v2, v6, v7) @signature `Lk1/k;.b:(Lk1/b;Ljava/util/Map;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L522a58.  v6:= temp @kind object;
  #L522a5a.  call `a0`(v5, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522a60.  return v6 @kind object;
  #L522a62.  call temp:= `r`(v5, v0, v7) @signature `Lk1/b;.r:(Ljava/util/Map;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L522a68.  v6:= temp @kind object;
  #L522a6a.  call `a0`(v5, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522a70.  return v6 @kind object;
  #L522a72.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L522a74.  call `a0`(v5, v1) @signature `Lk1/b;.a0:(Lk1/l;)V` @kind virtual;
  #L522a7a.  throw v6;
  catch `java.lang.Throwable` @[L522a0c..L522a4a] goto L522a72;
  catch `java.lang.Throwable` @[L522a52..L522a5a] goto L522a72;
  catch `java.lang.Throwable` @[L522a62..L522a6a] goto L522a72;
}
procedure `java.util.Map` `c`(`k1.k` v4 @kind this, `java.lang.reflect.Type` v5 @kind object) @signature `Lk1/k;.c:(Ljava/lang/reflect/Type;)Ljava/util/Map;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L522d78.  v0:= constclass @type ^`java.util.Properties` @kind object;
  #L522d7c.  if v5 != v0 then goto L522d8c;
  #L522d80.  v5:= new `java.util.Properties`;
  #L522d84.  call `<init>`(v5) @signature `Ljava/util/Properties;.<init>:()V` @kind direct;
  #L522d8a.  return v5 @kind object;
  #L522d8c.  v0:= constclass @type ^`java.util.Hashtable` @kind object;
  #L522d90.  if v5 != v0 then goto L522da0;
  #L522d94.  v5:= new `java.util.Hashtable`;
  #L522d98.  call `<init>`(v5) @signature `Ljava/util/Hashtable;.<init>:()V` @kind direct;
  #L522d9e.  return v5 @kind object;
  #L522da0.  v0:= constclass @type ^`java.util.IdentityHashMap` @kind object;
  #L522da4.  if v5 != v0 then goto L522db4;
  #L522da8.  v5:= new `java.util.IdentityHashMap`;
  #L522dac.  call `<init>`(v5) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L522db2.  return v5 @kind object;
  #L522db4.  v0:= constclass @type ^`java.util.SortedMap` @kind object;
  #L522db8.  if v5 == v0 then goto L522ef4;
  #L522dbc.  v0:= constclass @type ^`java.util.TreeMap` @kind object;
  #L522dc0.  if v5 != v0 then goto L522dc8;
  #L522dc4.  goto L522ef4;
  #L522dc8.  v0:= constclass @type ^`java.util.concurrent.ConcurrentMap` @kind object;
  #L522dcc.  if v5 == v0 then goto L522ee8;
  #L522dd0.  v0:= constclass @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L522dd4.  if v5 != v0 then goto L522ddc;
  #L522dd8.  goto L522ee8;
  #L522ddc.  v0:= constclass @type ^`java.util.Map` @kind object;
  #L522de0.  if v5 == v0 then goto L522edc;
  #L522de4.  v0:= constclass @type ^`java.util.HashMap` @kind object;
  #L522de8.  if v5 != v0 then goto L522dee;
  #L522dec.  goto L522edc;
  #L522dee.  v0:= constclass @type ^`java.util.LinkedHashMap` @kind object;
  #L522df2.  if v5 != v0 then goto L522e02;
  #L522df6.  v5:= new `java.util.LinkedHashMap`;
  #L522dfa.  call `<init>`(v5) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L522e00.  return v5 @kind object;
  #L522e02.  v0:= constclass @type ^`com.alibaba.fastjson.JSONObject` @kind object;
  #L522e06.  if v5 != v0 then goto L522e16;
  #L522e0a.  v5:= new `com.alibaba.fastjson.JSONObject`;
  #L522e0e.  call `<init>`(v5) @signature `Lcom/alibaba/fastjson/JSONObject;.<init>:()V` @kind direct;
  #L522e14.  return v5 @kind object;
  #L522e16.  v0:= instanceof @variable v5 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L522e1a.  if v0 == 0 then goto L522e62;
  #L522e1e.  v5:= (`java.lang.reflect.ParameterizedType`) v5 @kind object;
  #L522e22.  call temp:= `getRawType`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L522e28.  v0:= temp @kind object;
  #L522e2a.  v1:= constclass @type ^`java.util.EnumMap` @kind object;
  #L522e2e.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L522e34.  v1:= temp;
  #L522e36.  if v1 == 0 then goto L522e58;
  #L522e3a.  call temp:= `getActualTypeArguments`(v5) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L522e40.  v5:= temp @kind object;
  #L522e42.  v0:= new `java.util.EnumMap`;
  #L522e46.  v1:= 0I;
  #L522e48.  v5:= v5[v1] @kind object;
  #L522e4c.  v5:= (`java.lang.Class`) v5 @kind object;
  #L522e50.  call `<init>`(v0, v5) @signature `Ljava/util/EnumMap;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L522e56.  return v0 @kind object;
  #L522e58.  call temp:= `c`(v4, v0) @signature `Lk1/k;.c:(Ljava/lang/reflect/Type;)Ljava/util/Map;` @kind virtual;
  #L522e5e.  v5:= temp @kind object;
  #L522e60.  return v5 @kind object;
  #L522e62.  v0:= v5 @kind object;
  #L522e64.  v0:= (`java.lang.Class`) v0 @kind object;
  #L522e68.  call temp:= `isInterface`(v0) @signature `Ljava/lang/Class;.isInterface:()Z` @kind virtual;
  #L522e6e.  v1:= temp;
  #L522e70.  v2:= "unsupport type " @kind object;
  #L522e74.  if v1 != 0 then goto L522eb2;
  #L522e78.  call temp:= `newInstance`(v0) @signature `Ljava/lang/Class;.newInstance:()Ljava/lang/Object;` @kind virtual;
  #L522e7e.  v0:= temp @kind object;
  #L522e80.  v0:= (`java.util.Map`) v0 @kind object;
  #L522e84.  return v0 @kind object;
  #L522e86.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L522e88.  v1:= new `com.alibaba.fastjson.c`;
  #L522e8c.  v3:= new `java.lang.StringBuilder`;
  #L522e90.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522e96.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522e9c.  call temp:= `append`(v3, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522ea2.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522ea8.  v5:= temp @kind object;
  #L522eaa.  call `<init>`(v1, v5, v0) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L522eb0.  throw v1;
  #L522eb2.  v0:= new `com.alibaba.fastjson.c`;
  #L522eb6.  v1:= new `java.lang.StringBuilder`;
  #L522eba.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L522ec0.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522ec6.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L522ecc.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L522ed2.  v5:= temp @kind object;
  #L522ed4.  call `<init>`(v0, v5) @signature `Lcom/alibaba/fastjson/c;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L522eda.  throw v0;
  #L522edc.  v5:= new `java.util.HashMap`;
  #L522ee0.  call `<init>`(v5) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L522ee6.  return v5 @kind object;
  #L522ee8.  v5:= new `java.util.concurrent.ConcurrentHashMap`;
  #L522eec.  call `<init>`(v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L522ef2.  return v5 @kind object;
  #L522ef4.  v5:= new `java.util.TreeMap`;
  #L522ef8.  call `<init>`(v5) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L522efe.  return v5 @kind object;
  catch `java.lang.Exception` @[L522e78..L522e84] goto L522e86;
}
