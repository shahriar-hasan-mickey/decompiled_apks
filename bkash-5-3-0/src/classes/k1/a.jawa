record `k1.a` @kind class @AccessFlag PUBLIC extends `l1.d` @kind class {
  `l1.f` `k1.a.e` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`k1.a` v0 @kind this, `k1.m` v1 @kind object, `java.lang.Class` v2 @kind object, `n1.a` v3 @kind object) @signature `Lk1/a;.<init>:(Lk1/m;Ljava/lang/Class;Ln1/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L515790.  v1:= 2I;
  #L515792.  call `<init>`(v0, v2, v3, v1) @signature `Ll1/d;.<init>:(Ljava/lang/Class;Ln1/a;I)V` @kind direct;
  #L515798.  return @kind void;
}
procedure `void` `g`(`k1.a` v5 @kind this, `k1.b` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.reflect.Type` v8 @kind object, `java.util.Map` v9 @kind object) @signature `Lk1/a;.g:(Lk1/b;Ljava/lang/Object;Ljava/lang/reflect/Type;Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5157ac.  v0:= v5.`k1.a.e` @type ^`l1.f` @kind object;
  #L5157b0.  if v0 != 0 then goto L5157d0;
  #L5157b4.  v0:= v6.`k1.b.h` @type ^`k1.m` @kind object;
  #L5157b8.  v1:= v5.`l1.d.a` @type ^`n1.a` @kind object;
  #L5157bc.  v2:= v1.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L5157c0.  v1:= v1.`n1.a.n` @type ^`java.lang.reflect.Type` @kind object;
  #L5157c4.  call temp:= `d`(v0, v2, v1) @signature `Lk1/m;.d:(Ljava/lang/Class;Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L5157ca.  v0:= temp @kind object;
  #L5157cc.  v5.`k1.a.e` @type ^`l1.f` := v0 @kind object;
  #L5157d0.  v0:= v5.`l1.d.a` @type ^`n1.a` @kind object;
  #L5157d4.  v0:= v0.`n1.a.n` @type ^`java.lang.reflect.Type` @kind object;
  #L5157d8.  v1:= instanceof @variable v8 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L5157dc.  if v1 == 0 then goto L515800;
  #L5157e0.  v2:= v6.`k1.b.l` @type ^`k1.l` @kind object;
  #L5157e4.  v2:= v5.`l1.d.b` @type ^`java.lang.Class` @kind object;
  #L5157e8.  call temp:= `d`(v2, v8, v0) @signature `Ln1/a;.d:(Ljava/lang/Class;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)Ljava/lang/reflect/Type;` @kind static;
  #L5157ee.  v0:= temp @kind object;
  #L5157f0.  v2:= v6.`k1.b.h` @type ^`k1.m` @kind object;
  #L5157f4.  call temp:= `e`(v2, v0) @signature `Lk1/m;.e:(Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L5157fa.  v2:= temp @kind object;
  #L5157fc.  v5.`k1.a.e` @type ^`l1.f` := v2 @kind object;
  #L515800.  v2:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L515804.  if v2 == 0 then goto L515868;
  #L515808.  if v1 == 0 then goto L515868;
  #L51580c.  v1:= v0 @kind object;
  #L51580e.  v1:= (`java.lang.reflect.ParameterizedType`) v1 @kind object;
  #L515812.  v8:= (`java.lang.reflect.ParameterizedType`) v8 @kind object;
  #L515816.  call temp:= `getActualTypeArguments`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L51581c.  v2:= temp @kind object;
  #L51581e.  call temp:= `getRawType`(v8) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L515824.  v3:= temp @kind object;
  #L515826.  v4:= instanceof @variable v3 @type ^`java.lang.Class` @kind boolean;
  #L51582a.  if v4 == 0 then goto L515868;
  #L51582e.  v3:= (`java.lang.Class`) v3 @kind object;
  #L515832.  call temp:= `getTypeParameters`(v3) @signature `Ljava/lang/Class;.getTypeParameters:()[Ljava/lang/reflect/TypeVariable;` @kind virtual;
  #L515838.  v3:= temp @kind object;
  #L51583a.  call temp:= `getActualTypeArguments`(v8) @signature `Ljava/lang/reflect/ParameterizedType;.getActualTypeArguments:()[Ljava/lang/reflect/Type;` @kind interface;
  #L515840.  v8:= temp @kind object;
  #L515842.  call temp:= `s`(v2, v3, v8) @signature `Ln1/d;.s:([Ljava/lang/reflect/Type;[Ljava/lang/reflect/TypeVariable;[Ljava/lang/reflect/Type;)Z` @kind static;
  #L515848.  v8:= temp;
  #L51584a.  if v8 == 0 then goto L515868;
  #L51584e.  v0:= new `n1.c`;
  #L515852.  call temp:= `getOwnerType`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getOwnerType:()Ljava/lang/reflect/Type;` @kind interface;
  #L515858.  v8:= temp @kind object;
  #L51585a.  call temp:= `getRawType`(v1) @signature `Ljava/lang/reflect/ParameterizedType;.getRawType:()Ljava/lang/reflect/Type;` @kind interface;
  #L515860.  v1:= temp @kind object;
  #L515862.  call `<init>`(v0, v2, v8, v1) @signature `Ln1/c;.<init>:([Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;Ljava/lang/reflect/Type;)V` @kind direct;
  #L515868.  v8:= v5.`l1.d.a` @type ^`n1.a` @kind object;
  #L51586c.  v1:= v8.`n1.a.t` @type ^`java.lang.String` @kind object;
  #L515870.  if v1 == 0 then goto L515892;
  #L515874.  v2:= v5.`k1.a.e` @type ^`l1.f` @kind object;
  #L515878.  v3:= instanceof @variable v2 @type ^`m1.k` @kind boolean;
  #L51587c.  if v3 == 0 then goto L515892;
  #L515880.  v2:= (`m1.k`) v2 @kind object;
  #L515884.  v8:= v8.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L515888.  call temp:= `d`(v2, v6, v0, v8, v1) @signature `Lm1/k;.d:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L51588e.  v8:= temp @kind object;
  #L515890.  goto L5158a2;
  #L515892.  v1:= v5.`k1.a.e` @type ^`l1.f` @kind object;
  #L515896.  v8:= v8.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L51589a.  call temp:= `a`(v1, v6, v0, v8) @signature `Ll1/f;.a:(Lk1/b;Ljava/lang/reflect/Type;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5158a0.  v8:= temp @kind object;
  #L5158a2.  v0:= v6.`k1.b.p` @type ^`int`;
  #L5158a6.  v1:= 1I;
  #L5158a8.  if v0 != v1 then goto L5158c8;
  #L5158ac.  call temp:= `n0`(v6) @signature `Lk1/b;.n0:()Lk1/b$a;` @kind virtual;
  #L5158b2.  v7:= temp @kind object;
  #L5158b4.  v7.`k1.b$a.c` @type ^`l1.d` := v5 @kind object;
  #L5158b8.  v8:= v6.`k1.b.l` @type ^`k1.l` @kind object;
  #L5158bc.  v7.`k1.b$a.d` @type ^`k1.l` := v8 @kind object;
  #L5158c0.  v7:= 0I;
  #L5158c2.  v6.`k1.b.p` @type ^`int` := v7;
  #L5158c6.  goto L515910;
  #L5158c8.  if v7 != 0 then goto L5158dc;
  #L5158cc.  v6:= v5.`l1.d.a` @type ^`n1.a` @kind object;
  #L5158d0.  v6:= v6.`n1.a.g` @type ^`java.lang.String` @kind object;
  #L5158d4.  call temp:= `put`(v9, v6, v8) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5158da.  goto L515910;
  #L5158dc.  if v8 != 0 then goto L51590a;
  #L5158e0.  v6:= v5.`l1.d.a` @type ^`n1.a` @kind object;
  #L5158e4.  v6:= v6.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L5158e8.  v9:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L5158ec.  if v6 == v9 then goto L515908;
  #L5158f0.  v9:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L5158f4.  if v6 == v9 then goto L515908;
  #L5158f8.  v9:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L5158fc.  if v6 == v9 then goto L515908;
  #L515900.  v9:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L515904.  if v6 != v9 then goto L51590a;
  #L515908.  return @kind void;
  #L51590a.  call `f`(v5, v7, v8) @signature `Ll1/d;.f:(Ljava/lang/Object;Ljava/lang/Object;)V` @kind virtual;
  #L515910.  return @kind void;
}
procedure `l1.f` `h`(`k1.a` v2 @kind this, `k1.m` v3 @kind object) @signature `Lk1/a;.h:(Lk1/m;)Ll1/f;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L515758.  v0:= v2.`k1.a.e` @type ^`l1.f` @kind object;
  #L51575c.  if v0 != 0 then goto L515778;
  #L515760.  v0:= v2.`l1.d.a` @type ^`n1.a` @kind object;
  #L515764.  v1:= v0.`n1.a.m` @type ^`java.lang.Class` @kind object;
  #L515768.  v0:= v0.`n1.a.n` @type ^`java.lang.reflect.Type` @kind object;
  #L51576c.  call temp:= `d`(v3, v1, v0) @signature `Lk1/m;.d:(Ljava/lang/Class;Ljava/lang/reflect/Type;)Ll1/f;` @kind virtual;
  #L515772.  v3:= temp @kind object;
  #L515774.  v2.`k1.a.e` @type ^`l1.f` := v3 @kind object;
  #L515778.  v3:= v2.`k1.a.e` @type ^`l1.f` @kind object;
  #L51577c.  return v3 @kind object;
}
