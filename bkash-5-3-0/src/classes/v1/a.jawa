record `v1.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Lv1/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L5674cc.  v0:= new `v1.b`;
  #L5674d0.  call `<init>`(v0) @signature `Lv1/b;.<init>:()V` @kind direct;
  #L5674d6.  return @kind void;
}
procedure `boolean` `a`(`java.lang.CharSequence` v0 @kind object) @signature `Lv1/a;.a:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L567480.  if v0 == 0 then goto L567496;
  #L567484.  call temp:= `length`(v0) @signature `Ljava/lang/CharSequence;.length:()I` @kind interface;
  #L56748a.  v0:= temp;
  #L56748c.  if v0 != 0 then goto L567492;
  #L567490.  goto L567496;
  #L567492.  v0:= 0I;
  #L567494.  goto L567498;
  #L567496.  v0:= 1I;
  #L567498.  return v0;
}
procedure `boolean` `b`(`java.lang.CharSequence` v0 @kind object) @signature `Lv1/a;.b:(Ljava/lang/CharSequence;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5674ac.  call temp:= `a`(v0) @signature `Lv1/a;.a:(Ljava/lang/CharSequence;)Z` @kind static;
  #L5674b2.  v0:= temp;
  #L5674b4.  v0:= v0 ^~ 1;
  #L5674b8.  return v0;
}
