record `b5.f` @kind class @AccessFlag PUBLIC {
  `int` `b5.f.a` @AccessFlag PRIVATE;
  `int` `b5.f.b` @AccessFlag PRIVATE;
  `int` `b5.f.c` @AccessFlag PRIVATE;
  `int` `b5.f.d` @AccessFlag PRIVATE;
  `int` `b5.f.e` @AccessFlag PRIVATE;
  `int` `b5.f.f` @AccessFlag PRIVATE;
  `boolean` `b5.f.g` @AccessFlag PRIVATE;
  `k3.a` `b5.f.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b5.f` v0 @kind this, `k3.a` v1 @kind object) @signature `Lb5/f;.<init>:(Lk3/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a37f4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a37fa.  call temp:= `g`(v1) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a3800.  v1:= temp @kind object;
  #L2a3802.  v1:= (`k3.a`) v1 @kind object;
  #L2a3806.  v0.`b5.f.h` @type ^`k3.a` := v1 @kind object;
  #L2a380a.  v1:= 0I;
  #L2a380c.  v0.`b5.f.c` @type ^`int` := v1;
  #L2a3810.  v0.`b5.f.b` @type ^`int` := v1;
  #L2a3814.  v0.`b5.f.d` @type ^`int` := v1;
  #L2a3818.  v0.`b5.f.f` @type ^`int` := v1;
  #L2a381c.  v0.`b5.f.e` @type ^`int` := v1;
  #L2a3820.  v0.`b5.f.a` @type ^`int` := v1;
  #L2a3824.  return @kind void;
}
procedure `boolean` `a`(`b5.f` v11 @kind this, `java.io.InputStream` v12 @kind object) @signature `Lb5/f;.a:(Ljava/io/InputStream;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L2a355c.  v0:= v11.`b5.f.e` @type ^`int`;
  #L2a3560.  v1:= 0I;
  #L2a3562.  v2:= 1I;
  #L2a3564.  v3:= 6I;
  #L2a3566.  v4:= v11.`b5.f.a` @type ^`int`;
  #L2a356a.  if v4 == v3 then goto L2a3688;
  #L2a356e.  call temp:= `read`(v12) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2a3574.  v4:= temp;
  #L2a3576.  v5:= -1I;
  #L2a3578.  if v4 == v5 then goto L2a3688;
  #L2a357c.  v5:= v11.`b5.f.c` @type ^`int`;
  #L2a3580.  v5:= v5 + v2 @kind int;
  #L2a3582.  v11.`b5.f.c` @type ^`int` := v5;
  #L2a3586.  v6:= v11.`b5.f.g` @type ^`boolean` @kind boolean;
  #L2a358a.  if v6 == 0 then goto L2a3598;
  #L2a358e.  v11.`b5.f.a` @type ^`int` := v3;
  #L2a3592.  v11.`b5.f.g` @type ^`boolean` := v1 @kind boolean;
  #L2a3596.  return v1;
  #L2a3598.  v6:= v11.`b5.f.a` @type ^`int`;
  #L2a359c.  v7:= 255I;
  #L2a35a0.  if v6 == 0 then goto L2a366a;
  #L2a35a4.  v8:= 2I;
  #L2a35a6.  if v6 == v2 then goto L2a3656;
  #L2a35aa.  v9:= 3I;
  #L2a35ac.  if v6 == v8 then goto L2a364c;
  #L2a35b0.  v10:= 4I;
  #L2a35b2.  if v6 == v9 then goto L2a35f2;
  #L2a35b6.  v5:= 5I;
  #L2a35b8.  if v6 == v10 then goto L2a35ec;
  #L2a35bc.  if v6 == v5 then goto L2a35c8;
  #L2a35c0.  call `i`(v1) @signature `Lh3/j;.i:(Z)V` @kind static;
  #L2a35c6.  goto L2a3678;
  #L2a35c8.  v5:= v11.`b5.f.b` @type ^`int`;
  #L2a35cc.  v5:= v5 ^< 8;
  #L2a35d0.  v5:= v5 + v4 @kind int;
  #L2a35d2.  v5:= v5 - v8 @kind int;
  #L2a35d4.  v6:= (`long`) v5 @kind i2l;
  #L2a35d6.  call temp:= `a`(v12, v6) @signature `Lp3/d;.a:(Ljava/io/InputStream;J)J` @kind static;
  #L2a35dc.  v6:= v11.`b5.f.c` @type ^`int`;
  #L2a35e0.  v6:= v6 + v5 @kind int;
  #L2a35e2.  v11.`b5.f.c` @type ^`int` := v6;
  #L2a35e6.  v11.`b5.f.a` @type ^`int` := v8;
  #L2a35ea.  goto L2a3678;
  #L2a35ec.  v11.`b5.f.a` @type ^`int` := v5;
  #L2a35f0.  goto L2a3678;
  #L2a35f2.  if v4 != v7 then goto L2a35fc;
  #L2a35f6.  v11.`b5.f.a` @type ^`int` := v9;
  #L2a35fa.  goto L2a3678;
  #L2a35fc.  if v4 != 0 then goto L2a3606;
  #L2a3600.  v11.`b5.f.a` @type ^`int` := v8;
  #L2a3604.  goto L2a3678;
  #L2a3606.  v6:= 217I;
  #L2a360a.  if v4 != v6 then goto L2a3622;
  #L2a360e.  v11.`b5.f.g` @type ^`boolean` := v2 @kind boolean;
  #L2a3612.  v5:= v5 + -2;
  #L2a3616.  call `f`(v11, v5) @signature `Lb5/f;.f:(I)V` @kind direct;
  #L2a361c.  v11.`b5.f.a` @type ^`int` := v8;
  #L2a3620.  goto L2a3678;
  #L2a3622.  v6:= 218I;
  #L2a3626.  if v4 != v6 then goto L2a3634;
  #L2a362a.  v5:= v5 + -2;
  #L2a362e.  call `f`(v11, v5) @signature `Lb5/f;.f:(I)V` @kind direct;
  #L2a3634.  call temp:= `b`(v4) @signature `Lb5/f;.b:(I)Z` @kind static;
  #L2a363a.  v5:= temp;
  #L2a363c.  if v5 == 0 then goto L2a3646;
  #L2a3640.  v11.`b5.f.a` @type ^`int` := v10;
  #L2a3644.  goto L2a3678;
  #L2a3646.  v11.`b5.f.a` @type ^`int` := v8;
  #L2a364a.  goto L2a3678;
  #L2a364c.  if v4 != v7 then goto L2a3678;
  #L2a3650.  v11.`b5.f.a` @type ^`int` := v9;
  #L2a3654.  goto L2a3678;
  #L2a3656.  v5:= 216I;
  #L2a365a.  if v4 != v5 then goto L2a3664;
  #L2a365e.  v11.`b5.f.a` @type ^`int` := v8;
  #L2a3662.  goto L2a3678;
  #L2a3664.  v11.`b5.f.a` @type ^`int` := v3;
  #L2a3668.  goto L2a3678;
  #L2a366a.  if v4 != v7 then goto L2a3674;
  #L2a366e.  v11.`b5.f.a` @type ^`int` := v2;
  #L2a3672.  goto L2a3678;
  #L2a3674.  v11.`b5.f.a` @type ^`int` := v3;
  #L2a3678.  v11.`b5.f.b` @type ^`int` := v4;
  #L2a367c.  goto L2a3560;
  #L2a3680.  v12:= Exception @type ^`java.io.IOException` @kind object;
  #L2a3682.  call temp:= `a`(v12) @signature `Lh3/n;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L2a3688.  v12:= v11.`b5.f.a` @type ^`int`;
  #L2a368c.  if v12 == v3 then goto L2a369a;
  #L2a3690.  v12:= v11.`b5.f.e` @type ^`int`;
  #L2a3694.  if v12 == v0 then goto L2a369a;
  #L2a3698.  v1:= 1I;
  #L2a369a.  return v1;
  catch `java.io.IOException` @[L2a3566..L2a367c] goto L2a3680;
}
procedure `boolean` `b`(`int` v3 ) @signature `Lb5/f;.b:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2a36bc.  v0:= 1I;
  #L2a36be.  v1:= 0I;
  #L2a36c0.  if v3 != v0 then goto L2a36c6;
  #L2a36c4.  return v1;
  #L2a36c6.  v2:= 208I;
  #L2a36ca.  if v3 < v2 then goto L2a36d8;
  #L2a36ce.  v2:= 215I;
  #L2a36d2.  if v3 > v2 then goto L2a36d8;
  #L2a36d6.  return v1;
  #L2a36d8.  v2:= 217I;
  #L2a36dc.  if v3 == v2 then goto L2a36ea;
  #L2a36e0.  v2:= 216I;
  #L2a36e4.  if v3 == v2 then goto L2a36ea;
  #L2a36e8.  goto L2a36ec;
  #L2a36ea.  v0:= 0I;
  #L2a36ec.  return v0;
}
procedure `void` `f`(`b5.f` v1 @kind this, `int` v2 ) @signature `Lb5/f;.f:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2a3838.  v0:= v1.`b5.f.d` @type ^`int`;
  #L2a383c.  if v0 <= 0 then goto L2a3844;
  #L2a3840.  v1.`b5.f.f` @type ^`int` := v2;
  #L2a3844.  v2:= v0 + 1;
  #L2a3848.  v1.`b5.f.d` @type ^`int` := v2;
  #L2a384c.  v1.`b5.f.e` @type ^`int` := v0;
  #L2a3850.  return @kind void;
}
procedure `int` `c`(`b5.f` v1 @kind this) @signature `Lb5/f;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a37c4.  v0:= v1.`b5.f.f` @type ^`int`;
  #L2a37c8.  return v0;
}
procedure `int` `d`(`b5.f` v1 @kind this) @signature `Lb5/f;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a37dc.  v0:= v1.`b5.f.e` @type ^`int`;
  #L2a37e0.  return v0;
}
procedure `boolean` `e`(`b5.f` v1 @kind this) @signature `Lb5/f;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a3700.  v0:= v1.`b5.f.g` @type ^`boolean` @kind boolean;
  #L2a3704.  return v0;
}
procedure `boolean` `g`(`b5.f` v4 @kind this, `d5.e` v5 @kind object) @signature `Lb5/f;.g:(Ld5/e;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a3718.  v0:= v4.`b5.f.a` @type ^`int`;
  #L2a371c.  v1:= 0I;
  #L2a371e.  v2:= 6I;
  #L2a3720.  if v0 != v2 then goto L2a3726;
  #L2a3724.  return v1;
  #L2a3726.  call temp:= `a0`(v5) @signature `Ld5/e;.a0:()I` @kind virtual;
  #L2a372c.  v0:= temp;
  #L2a372e.  v2:= v4.`b5.f.c` @type ^`int`;
  #L2a3732.  if v0 > v2 then goto L2a3738;
  #L2a3736.  return v1;
  #L2a3738.  v0:= new `k3.f`;
  #L2a373c.  call temp:= `V`(v5) @signature `Ld5/e;.V:()Ljava/io/InputStream;` @kind virtual;
  #L2a3742.  v5:= temp @kind object;
  #L2a3744.  v2:= v4.`b5.f.h` @type ^`k3.a` @kind object;
  #L2a3748.  v3:= 16384I;
  #L2a374c.  call temp:= `get`(v2, v3) @signature `Lk3/e;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a3752.  v2:= temp @kind object;
  #L2a3754.  v2:= (`byte`[]) v2 @kind object;
  #L2a3758.  v3:= v4.`b5.f.h` @type ^`k3.a` @kind object;
  #L2a375c.  call `<init>`(v0, v5, v2, v3) @signature `Lk3/f;.<init>:(Ljava/io/InputStream;[BLl3/c;)V` @kind direct;
  #L2a3762.  v5:= v4.`b5.f.c` @type ^`int`;
  #L2a3766.  v2:= (`long`) v5 @kind i2l;
  #L2a3768.  call temp:= `a`(v0, v2) @signature `Lp3/d;.a:(Ljava/io/InputStream;J)J` @kind static;
  #L2a376e.  call temp:= `a`(v4, v0) @signature `Lb5/f;.a:(Ljava/io/InputStream;)Z` @kind direct;
  #L2a3774.  v5:= temp;
  #L2a3776.  call `b`(v0) @signature `Lh3/b;.b:(Ljava/io/InputStream;)V` @kind static;
  #L2a377c.  return v5;
  #L2a377e.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a3780.  goto L2a3792;
  #L2a3782.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2a3784.  call temp:= `a`(v5) @signature `Lh3/n;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L2a378a.  call `b`(v0) @signature `Lh3/b;.b:(Ljava/io/InputStream;)V` @kind static;
  #L2a3790.  return v1;
  #L2a3792.  call `b`(v0) @signature `Lh3/b;.b:(Ljava/io/InputStream;)V` @kind static;
  #L2a3798.  throw v5;
  catch `java.io.IOException` @[L2a3762..L2a3776] goto L2a3782;
  catch `java.lang.Throwable` @[L2a3762..L2a3776] goto L2a377e;
  catch `java.lang.Throwable` @[L2a3784..L2a378a] goto L2a377e;
}
