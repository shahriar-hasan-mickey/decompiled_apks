record `b5.g` @kind class @AccessFlag PUBLIC extends `b5.e` @kind interface {
  `b5.g$c` `b5.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`b5.g` v2 @kind this) @signature `Lb5/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a3974.  v0:= new `b5.g$b`;
  #L2a3978.  v1:= 0I;
  #L2a397a.  call `<init>`(v0, v1) @signature `Lb5/g$b;.<init>:(Lb5/g$a;)V` @kind direct;
  #L2a3980.  call `<init>`(v2, v0) @signature `Lb5/g;.<init>:(Lb5/g$c;)V` @kind direct;
  #L2a3986.  return @kind void;
}
procedure `void` `<init>`(`b5.g` v0 @kind this, `b5.g$c` v1 @kind object) @signature `Lb5/g;.<init>:(Lb5/g$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a3998.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a399e.  call temp:= `g`(v1) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L2a39a4.  v1:= temp @kind object;
  #L2a39a6.  v1:= (`b5.g$c`) v1 @kind object;
  #L2a39aa.  v0.`b5.g.a` @type ^`b5.g$c` := v1 @kind object;
  #L2a39ae.  return @kind void;
}
procedure `d5.j` `a`(`b5.g` v2 @kind this, `int` v3 ) @signature `Lb5/g;.a:(I)Ld5/j;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a38c0.  v0:= v2.`b5.g.a` @type ^`b5.g$c` @kind object;
  #L2a38c4.  call temp:= `b`(v0) @signature `Lb5/g$c;.b:()I` @kind interface;
  #L2a38ca.  v0:= temp;
  #L2a38cc.  v1:= 0I;
  #L2a38ce.  if v3 < v0 then goto L2a38d6;
  #L2a38d2.  v0:= 1I;
  #L2a38d4.  goto L2a38d8;
  #L2a38d6.  v0:= 0I;
  #L2a38d8.  call temp:= `d`(v3, v0, v1) @signature `Ld5/i;.d:(IZZ)Ld5/j;` @kind static;
  #L2a38de.  v3:= temp @kind object;
  #L2a38e0.  return v3 @kind object;
}
procedure `int` `b`(`b5.g` v3 @kind this, `int` v4 ) @signature `Lb5/g;.b:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a38f4.  v0:= v3.`b5.g.a` @type ^`b5.g$c` @kind object;
  #L2a38f8.  call temp:= `a`(v0) @signature `Lb5/g$c;.a:()Ljava/util/List;` @kind interface;
  #L2a38fe.  v0:= temp @kind object;
  #L2a3900.  if v0 == 0 then goto L2a395c;
  #L2a3904.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L2a390a.  v1:= temp;
  #L2a390c.  if v1 == 0 then goto L2a3912;
  #L2a3910.  goto L2a395c;
  #L2a3912.  v1:= 0I;
  #L2a3914.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2a391a.  v2:= temp;
  #L2a391c.  if v1 >= v2 then goto L2a3954;
  #L2a3920.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a3926.  v2:= temp @kind object;
  #L2a3928.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L2a392c.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2a3932.  v2:= temp;
  #L2a3934.  if v2 <= v4 then goto L2a394e;
  #L2a3938.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a393e.  v4:= temp @kind object;
  #L2a3940.  v4:= (`java.lang.Integer`) v4 @kind object;
  #L2a3944.  call temp:= `intValue`(v4) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2a394a.  v4:= temp;
  #L2a394c.  return v4;
  #L2a394e.  v1:= v1 + 1;
  #L2a3952.  goto L2a3914;
  #L2a3954.  v4:= 2147483647I;
  #L2a395a.  return v4;
  #L2a395c.  v4:= v4 + 1;
  #L2a3960.  return v4;
}
