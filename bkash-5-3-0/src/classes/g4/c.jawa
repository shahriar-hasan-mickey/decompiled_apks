record `g4.c` @kind class @AccessFlag PUBLIC extends `g4.b` @kind class {
  `o3.b` `g4.c.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ScheduledExecutorService` `g4.c.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `g4.c.d` @AccessFlag PRIVATE;
  `long` `g4.c.e` @AccessFlag PRIVATE;
  `long` `g4.c.f` @AccessFlag PRIVATE;
  `long` `g4.c.g` @AccessFlag PRIVATE;
  `g4.c$b` `g4.c.h` @AccessFlag PRIVATE;
  `java.lang.Runnable` `g4.c.i` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`g4.c` v2 @kind this, `g4.a` v3 @kind object, `g4.c$b` v4 @kind object, `o3.b` v5 @kind object, `java.util.concurrent.ScheduledExecutorService` v6 @kind object) @signature `Lg4/c;.<init>:(Lg4/a;Lg4/c$b;Lo3/b;Ljava/util/concurrent/ScheduledExecutorService;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L508ca0.  call `<init>`(v2, v3) @signature `Lg4/b;.<init>:(Lg4/a;)V` @kind direct;
  #L508ca6.  v3:= 0I;
  #L508ca8.  v2.`g4.c.d` @type ^`boolean` := v3 @kind boolean;
  #L508cac.  v0:= 2000L;
  #L508cb0.  v2.`g4.c.f` @type ^`long` := v0 @kind wide;
  #L508cb4.  v0:= 1000L;
  #L508cb8.  v2.`g4.c.g` @type ^`long` := v0 @kind wide;
  #L508cbc.  v3:= new `g4.c$a`;
  #L508cc0.  call `<init>`(v3, v2) @signature `Lg4/c$a;.<init>:(Lg4/c;)V` @kind direct;
  #L508cc6.  v2.`g4.c.i` @type ^`java.lang.Runnable` := v3 @kind object;
  #L508cca.  v2.`g4.c.h` @type ^`g4.c$b` := v4 @kind object;
  #L508cce.  v2.`g4.c.b` @type ^`o3.b` := v5 @kind object;
  #L508cd2.  v2.`g4.c.c` @type ^`java.util.concurrent.ScheduledExecutorService` := v6 @kind object;
  #L508cd6.  return @kind void;
}
procedure `boolean` `f`(`g4.c` v0 @kind object, `boolean` v1 ) @signature `Lg4/c;.f:(Lg4/c;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L508bb0.  v0.`g4.c.d` @type ^`boolean` := v1 @kind boolean;
  #L508bb4.  return v1;
}
procedure `boolean` `k`(`g4.c` v0 @kind object) @signature `Lg4/c;.k:(Lg4/c;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L508bc8.  call temp:= `p`(v0) @signature `Lg4/c;.p:()Z` @kind direct;
  #L508bce.  v0:= temp;
  #L508bd0.  return v0;
}
procedure `g4.c$b` `l`(`g4.c` v0 @kind object) @signature `Lg4/c;.l:(Lg4/c;)Lg4/c$b;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L508c88.  v0:= v0.`g4.c.h` @type ^`g4.c$b` @kind object;
  #L508c8c.  return v0 @kind object;
}
procedure `void` `m`(`g4.c` v0 @kind object) @signature `Lg4/c;.m:(Lg4/c;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L508ce8.  call `q`(v0) @signature `Lg4/c;.q:()V` @kind direct;
  #L508cee.  return @kind void;
}
procedure `g4.b` `n`(`g4.a` v1 @kind object, `g4.c$b` v2 @kind object, `o3.b` v3 @kind object, `java.util.concurrent.ScheduledExecutorService` v4 @kind object) @signature `Lg4/c;.n:(Lg4/a;Lg4/c$b;Lo3/b;Ljava/util/concurrent/ScheduledExecutorService;)Lg4/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L508c4c.  v0:= new `g4.c`;
  #L508c50.  call `<init>`(v0, v1, v2, v3, v4) @signature `Lg4/c;.<init>:(Lg4/a;Lg4/c$b;Lo3/b;Ljava/util/concurrent/ScheduledExecutorService;)V` @kind direct;
  #L508c56.  return v0 @kind object;
}
procedure `g4.b` `o`(`g4.a` v1 @kind object, `o3.b` v2 @kind object, `java.util.concurrent.ScheduledExecutorService` v3 @kind object) @signature `Lg4/c;.o:(Lg4/a;Lo3/b;Ljava/util/concurrent/ScheduledExecutorService;)Lg4/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L508c68.  v0:= v1 @kind object;
  #L508c6a.  v0:= (`g4.c$b`) v0 @kind object;
  #L508c6e.  call temp:= `n`(v1, v0, v2, v3) @signature `Lg4/c;.n:(Lg4/a;Lg4/c$b;Lo3/b;Ljava/util/concurrent/ScheduledExecutorService;)Lg4/b;` @kind static;
  #L508c74.  v1:= temp @kind object;
  #L508c76.  return v1 @kind object;
}
procedure `boolean` `p`(`g4.c` v5 @kind this) @signature `Lg4/c;.p:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L508c14.  v0:= v5.`g4.c.b` @type ^`o3.b` @kind object;
  #L508c18.  call temp:= `now`(v0) @signature `Lo3/b;.now:()J` @kind interface;
  #L508c1e.  v0:= temp @kind wide;
  #L508c20.  v2:= v5.`g4.c.e` @type ^`long` @kind wide;
  #L508c24.  v0:= v0 - v2 @kind long;
  #L508c26.  v2:= v5.`g4.c.f` @type ^`long` @kind wide;
  #L508c2a.  v4:= lcmp(v0, v2);
  #L508c2e.  if v4 <= 0 then goto L508c36;
  #L508c32.  v0:= 1I;
  #L508c34.  goto L508c38;
  #L508c36.  v0:= 0I;
  #L508c38.  return v0;
}
procedure `void` `q`(`g4.c` v5 @kind this) @signature `Lg4/c;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L508d00.  @monitorenter v5
  #L508d02.  v0:= v5.`g4.c.d` @type ^`boolean` @kind boolean;
  #L508d06.  if v0 != 0 then goto L508d26;
  #L508d0a.  v0:= 1I;
  #L508d0c.  v5.`g4.c.d` @type ^`boolean` := v0 @kind boolean;
  #L508d10.  v0:= v5.`g4.c.c` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L508d14.  v1:= v5.`g4.c.i` @type ^`java.lang.Runnable` @kind object;
  #L508d18.  v2:= v5.`g4.c.g` @type ^`long` @kind wide;
  #L508d1c.  v4:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L508d20.  call temp:= `schedule`(v0, v1, v2, v4) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L508d26.  @monitorexit v5
  #L508d28.  return @kind void;
  #L508d2a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L508d2c.  @monitorexit v5
  #L508d2e.  throw v0;
  catch `java.lang.Throwable` @[L508d02..L508d26] goto L508d2a;
}
procedure `boolean` `j`(`g4.c` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.Canvas` v4 @kind object, `int` v5 ) @signature `Lg4/c;.j:(Landroid/graphics/drawable/Drawable;Landroid/graphics/Canvas;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L508be4.  v0:= v2.`g4.c.b` @type ^`o3.b` @kind object;
  #L508be8.  call temp:= `now`(v0) @signature `Lo3/b;.now:()J` @kind interface;
  #L508bee.  v0:= temp @kind wide;
  #L508bf0.  v2.`g4.c.e` @type ^`long` := v0 @kind wide;
  #L508bf4.  call temp:= `j`(v2, v3, v4, v5) @signature `Lg4/b;.j:(Landroid/graphics/drawable/Drawable;Landroid/graphics/Canvas;I)Z` @kind super;
  #L508bfa.  v3:= temp;
  #L508bfc.  call `q`(v2) @signature `Lg4/c;.q:()V` @kind direct;
  #L508c02.  return v3;
}
