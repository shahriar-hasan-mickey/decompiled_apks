record `d1.f` @kind class @AccessFlag PUBLIC extends `d1.c` @kind class {
}
global `java.lang.String` `@@d1.f.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld1/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f53c4.  v0:= "NetworkNotRoamingCtrlr" @kind object;
  #L4f53c8.  call temp:= `f`(v0) @signature `Landroidx/work/m;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L4f53ce.  v0:= temp @kind object;
  #L4f53d0.  `@@d1.f.e` @type ^`java.lang.String` := v0 @kind object;
  #L4f53d4.  return @kind void;
}
procedure `void` `<init>`(`d1.f` v0 @kind this, `android.content.Context` v1 @kind object, `h1.a` v2 @kind object) @signature `Ld1/f;.<init>:(Landroid/content/Context;Lh1/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f53e8.  call temp:= `c`(v1, v2) @signature `Le1/g;.c:(Landroid/content/Context;Lh1/a;)Le1/g;` @kind static;
  #L4f53ee.  v1:= temp @kind object;
  #L4f53f0.  call temp:= `d`(v1) @signature `Le1/g;.d:()Le1/e;` @kind virtual;
  #L4f53f6.  v1:= temp @kind object;
  #L4f53f8.  call `<init>`(v0, v1) @signature `Ld1/c;.<init>:(Le1/d;)V` @kind direct;
  #L4f53fe.  return @kind void;
}
procedure `boolean` `b`(`d1.f` v1 @kind this, `f1.p` v2 @kind object) @signature `Ld1/f;.b:(Lf1/p;)Z` @AccessFlag  {
    temp;
    v0;

  #L4f5314.  v2:= v2.`f1.p.j` @type ^`androidx.work.c` @kind object;
  #L4f5318.  call temp:= `b`(v2) @signature `Landroidx/work/c;.b:()Landroidx/work/n;` @kind virtual;
  #L4f531e.  v2:= temp @kind object;
  #L4f5320.  v0:= `@@androidx.work.n.NOT_ROAMING` @type ^`androidx.work.n` @kind object;
  #L4f5324.  if v2 != v0 then goto L4f532c;
  #L4f5328.  v2:= 1I;
  #L4f532a.  goto L4f532e;
  #L4f532c.  v2:= 0I;
  #L4f532e.  return v2;
}
procedure `boolean` `c`(`d1.f` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ld1/f;.c:(Ljava/lang/Object;)Z` @AccessFlag SYNTHETIC {
    temp;

  #L4f53a4.  v1:= (`c1.b`) v1 @kind object;
  #L4f53a8.  call temp:= `i`(v0, v1) @signature `Ld1/f;.i:(Lc1/b;)Z` @kind virtual;
  #L4f53ae.  v1:= temp;
  #L4f53b0.  return v1;
}
procedure `boolean` `i`(`d1.f` v5 @kind this, `c1.b` v6 @kind object) @signature `Ld1/f;.i:(Lc1/b;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L4f5340.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L4f5344.  v1:= 1I;
  #L4f5346.  v2:= 0I;
  #L4f5348.  v3:= 24I;
  #L4f534c.  if v0 >= v3 then goto L4f5376;
  #L4f5350.  call temp:= `c`() @signature `Landroidx/work/m;.c:()Landroidx/work/m;` @kind static;
  #L4f5356.  v0:= temp @kind object;
  #L4f5358.  v3:= `@@d1.f.e` @type ^`java.lang.String` @kind object;
  #L4f535c.  v2:= new `java.lang.Throwable`[v2];
  #L4f5360.  v4:= "Not-roaming network constraint is not supported before API 24, only checking for connected state." @kind object;
  #L4f5364.  call `a`(v0, v3, v4, v2) @signature `Landroidx/work/m;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Throwable;)V` @kind virtual;
  #L4f536a.  call temp:= `a`(v6) @signature `Lc1/b;.a:()Z` @kind virtual;
  #L4f5370.  v6:= temp;
  #L4f5372.  v6:= v6 ^~ v1 @kind int;
  #L4f5374.  return v6;
  #L4f5376.  call temp:= `a`(v6) @signature `Lc1/b;.a:()Z` @kind virtual;
  #L4f537c.  v0:= temp;
  #L4f537e.  if v0 == 0 then goto L4f5392;
  #L4f5382.  call temp:= `c`(v6) @signature `Lc1/b;.c:()Z` @kind virtual;
  #L4f5388.  v6:= temp;
  #L4f538a.  if v6 != 0 then goto L4f5390;
  #L4f538e.  goto L4f5392;
  #L4f5390.  v1:= 0I;
  #L4f5392.  return v1;
}
