record `z4.a$a` @kind class @AccessFlag  extends `com.facebook.imagepipeline.producers.b` @kind class {
  `z4.a` `z4.a$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`z4.a$a` v0 @kind this, `z4.a` v1 @kind object) @signature `Lz4/a$a;.<init>:(Lz4/a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L5830f0.  v0.`z4.a$a.b` @type ^`z4.a` := v1 @kind object;
  #L5830f4.  call `<init>`(v0) @signature `Lcom/facebook/imagepipeline/producers/b;.<init>:()V` @kind direct;
  #L5830fa.  return @kind void;
}
procedure `void` `g`(`z4.a$a` v1 @kind this) @signature `Lz4/a$a;.g:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L58310c.  v0:= v1.`z4.a$a.b` @type ^`z4.a` @kind object;
  #L583110.  call `y`(v0) @signature `Lz4/a;.y:(Lz4/a;)V` @kind static;
  #L583116.  return @kind void;
}
procedure `void` `h`(`z4.a$a` v1 @kind this, `java.lang.Throwable` v2 @kind object) @signature `Lz4/a$a;.h:(Ljava/lang/Throwable;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L583128.  v0:= v1.`z4.a$a.b` @type ^`z4.a` @kind object;
  #L58312c.  call `x`(v0, v2) @signature `Lz4/a;.x:(Lz4/a;Ljava/lang/Throwable;)V` @kind static;
  #L583132.  return @kind void;
}
procedure `void` `i`(`z4.a$a` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 ) @signature `Lz4/a$a;.i:(Ljava/lang/Object;I)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L583144.  v0:= v2.`z4.a$a.b` @type ^`z4.a` @kind object;
  #L583148.  call temp:= `w`(v0) @signature `Lz4/a;.w:(Lz4/a;)Lcom/facebook/imagepipeline/producers/t0;` @kind static;
  #L58314e.  v1:= temp @kind object;
  #L583150.  call `E`(v0, v3, v4, v1) @signature `Lz4/a;.E:(Ljava/lang/Object;ILcom/facebook/imagepipeline/producers/ProducerContext;)V` @kind virtual;
  #L583156.  return @kind void;
}
procedure `void` `j`(`z4.a$a` v1 @kind this, `float` v2 ) @signature `Lz4/a$a;.j:(F)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L583168.  v0:= v1.`z4.a$a.b` @type ^`z4.a` @kind object;
  #L58316c.  call temp:= `z`(v0, v2) @signature `Lz4/a;.z:(Lz4/a;F)Z` @kind static;
  #L583172.  return @kind void;
}
