record `b3.f` @kind class @AccessFlag PUBLIC extends `b3.d` @kind interface {
  `java.util.List` `b3.f.a` @AccessFlag FINAL;
}
procedure `boolean` `a`(`b3.f` v1 @kind this) @signature `Lb3/f;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2e54.  v0:= 0I;
  #L2a2e56.  return v0;
}
procedure `java.lang.String` `b`(`b3.f` v2 @kind this) @signature `Lb3/f;.b:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a2e88.  v0:= v2.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2e8c.  v1:= 0I;
  #L2a2e8e.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2a2e94.  v0:= temp @kind object;
  #L2a2e96.  v0:= (`b3.d`) v0 @kind object;
  #L2a2e9a.  call temp:= `b`(v0) @signature `Lb3/d;.b:()Ljava/lang/String;` @kind interface;
  #L2a2ea0.  v0:= temp @kind object;
  #L2a2ea2.  return v0 @kind object;
}
procedure `java.util.List` `c`(`b3.f` v1 @kind this) @signature `Lb3/f;.c:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2ef4.  v0:= v1.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2ef8.  return v0 @kind object;
}
procedure `boolean` `equals`(`b3.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lb3/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2e18.  if v2 != v1 then goto L2a2e20;
  #L2a2e1c.  v2:= 1I;
  #L2a2e1e.  return v2;
  #L2a2e20.  v0:= instanceof @variable v2 @type ^`b3.f` @kind boolean;
  #L2a2e24.  if v0 == 0 then goto L2a2e3e;
  #L2a2e28.  v2:= (`b3.f`) v2 @kind object;
  #L2a2e2c.  v0:= v1.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2e30.  v2:= v2.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2e34.  call temp:= `equals`(v0, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L2a2e3a.  v2:= temp;
  #L2a2e3c.  return v2;
  #L2a2e3e.  v2:= 0I;
  #L2a2e40.  return v2;
}
procedure `int` `hashCode`(`b3.f` v1 @kind this) @signature `Lb3/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a2e68.  v0:= v1.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2e6c.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L2a2e72.  v0:= temp;
  #L2a2e74.  return v0;
}
procedure `java.lang.String` `toString`(`b3.f` v2 @kind this) @signature `Lb3/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a2eb4.  v0:= new `java.lang.StringBuilder`;
  #L2a2eb8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2a2ebe.  v1:= "MultiCacheKey:" @kind object;
  #L2a2ec2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2ec8.  v1:= v2.`b3.f.a` @type ^`java.util.List` @kind object;
  #L2a2ecc.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a2ed2.  v1:= temp @kind object;
  #L2a2ed4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2a2eda.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2a2ee0.  v0:= temp @kind object;
  #L2a2ee2.  return v0 @kind object;
}
