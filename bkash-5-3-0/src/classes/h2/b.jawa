record `h2.b` @kind class @AccessFlag PUBLIC {
  `h2.b$a` `h2.b.a` @AccessFlag PRIVATE;
  `java.util.Map` `h2.b.b` @AccessFlag PRIVATE;
}
global `h2.b` `@@h2.b.c` @AccessFlag STATIC;
procedure `void` `<init>`(`h2.b` v1 @kind this) @signature `Lh2/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L50bc0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50bc12.  v0:= new `h2.c`;
  #L50bc16.  call `<init>`(v0) @signature `Lh2/c;.<init>:()V` @kind direct;
  #L50bc1c.  v1.`h2.b.a` @type ^`h2.b$a` := v0 @kind object;
  #L50bc20.  v0:= new `java.util.HashMap`;
  #L50bc24.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L50bc2a.  v1.`h2.b.b` @type ^`java.util.Map` := v0 @kind object;
  #L50bc2e.  return @kind void;
}
procedure `h2.b` `b`() @signature `Lh2/b;.b:()Lh2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50bbb4.  v0:= `@@h2.b.c` @type ^`h2.b` @kind object;
  #L50bbb8.  if v0 != 0 then goto L50bbca;
  #L50bbbc.  v0:= new `h2.b`;
  #L50bbc0.  call `<init>`(v0) @signature `Lh2/b;.<init>:()V` @kind direct;
  #L50bbc6.  `@@h2.b.c` @type ^`h2.b` := v0 @kind object;
  #L50bbca.  v0:= `@@h2.b.c` @type ^`h2.b` @kind object;
  #L50bbce.  return v0 @kind object;
}
procedure `h2.b` `e`() @signature `Lh2/b;.e:()Lh2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L50bbe0.  v0:= `@@h2.b.c` @type ^`h2.b` @kind object;
  #L50bbe4.  if v0 == 0 then goto L50bbea;
  #L50bbe8.  return v0 @kind object;
  #L50bbea.  v0:= new `java.lang.IllegalStateException`;
  #L50bbee.  v1:= "need createInstance before use" @kind object;
  #L50bbf2.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50bbf8.  throw v0;
}
procedure `h2.a` `a`(`h2.b` v2 @kind this, `z1.a` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Lh2/b;.a:(Lz1/a;Ljava/lang/String;)Lh2/a;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L50bb20.  call temp:= `d`(v2, v3) @signature `Lh2/b;.d:(Lz1/a;)Z` @kind virtual;
  #L50bb26.  v0:= temp;
  #L50bb28.  if v0 != 0 then goto L50bb30;
  #L50bb2c.  v3:= 0I;
  #L50bb2e.  return v3 @kind object;
  #L50bb30.  v0:= v2.`h2.b.a` @type ^`h2.b$a` @kind object;
  #L50bb34.  if v0 == 0 then goto L50bb76;
  #L50bb38.  v0:= v2.`h2.b.b` @type ^`java.util.Map` @kind object;
  #L50bb3c.  call temp:= `a`(v3) @signature `Lz1/a;.a:()Ljava/lang/String;` @kind virtual;
  #L50bb42.  v1:= temp @kind object;
  #L50bb44.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L50bb4a.  v0:= temp @kind object;
  #L50bb4c.  if v0 == 0 then goto L50bb76;
  #L50bb50.  v4:= v2.`h2.b.a` @type ^`h2.b$a` @kind object;
  #L50bb54.  v0:= v2.`h2.b.b` @type ^`java.util.Map` @kind object;
  #L50bb58.  call temp:= `a`(v3) @signature `Lz1/a;.a:()Ljava/lang/String;` @kind virtual;
  #L50bb5e.  v1:= temp @kind object;
  #L50bb60.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L50bb66.  v0:= temp @kind object;
  #L50bb68.  v0:= (`i2.e`) v0 @kind object;
  #L50bb6c.  call temp:= `a`(v4, v3, v0) @signature `Lh2/b$a;.a:(Lz1/a;Li2/e;)Lh2/a;` @kind interface;
  #L50bb72.  v3:= temp @kind object;
  #L50bb74.  return v3 @kind object;
  #L50bb76.  v3:= new `java.lang.IllegalStateException`;
  #L50bb7a.  v0:= new `java.lang.StringBuilder`;
  #L50bb7e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50bb84.  v1:= "no layout type found: " @kind object;
  #L50bb88.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50bb8e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50bb94.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50bb9a.  v4:= temp @kind object;
  #L50bb9c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50bba2.  throw v3;
}
procedure `void` `c`(`h2.b` v1 @kind this, `java.lang.String` v2 @kind object, `i2.e` v3 @kind object) @signature `Lh2/b;.c:(Ljava/lang/String;Li2/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50bc40.  v0:= v1.`h2.b.b` @type ^`java.util.Map` @kind object;
  #L50bc44.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L50bc4a.  return @kind void;
}
procedure `boolean` `d`(`h2.b` v1 @kind this, `z1.a` v2 @kind object) @signature `Lh2/b;.d:(Lz1/a;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50baec.  call temp:= `a`() @signature `Lf2/e;.a:()Lx1/c;` @kind static;
  #L50baf2.  v0:= temp @kind object;
  #L50baf4.  call temp:= `w`(v0) @signature `Lx1/c;.w:()Lm2/a;` @kind interface;
  #L50bafa.  v0:= temp @kind object;
  #L50bafc.  call temp:= `a`(v2) @signature `Lz1/a;.a:()Ljava/lang/String;` @kind virtual;
  #L50bb02.  v2:= temp @kind object;
  #L50bb04.  call temp:= `a`(v0, v2) @signature `Lm2/a;.a:(Ljava/lang/String;)Z` @kind interface;
  #L50bb0a.  v2:= temp;
  #L50bb0c.  return v2;
}
