record `n0.e` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Ln0/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L5373e0.  return @kind void;
}
procedure `void` `a`(`java.lang.StringBuilder` v2 @kind object, `int` v3 ) @signature `Ln0/e;.a:(Ljava/lang/StringBuilder;I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5373f4.  v0:= 0I;
  #L5373f6.  if v0 >= v3 then goto L53741c;
  #L5373fa.  v1:= "?" @kind object;
  #L5373fe.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537404.  v1:= v3 + -1;
  #L537408.  if v0 >= v1 then goto L537416;
  #L53740c.  v1:= "," @kind object;
  #L537410.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537416.  v0:= v0 + 1;
  #L53741a.  goto L5373f6;
  #L53741c.  return @kind void;
}
procedure `java.lang.StringBuilder` `b`() @signature `Ln0/e;.b:()Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5373c4.  v0:= new `java.lang.StringBuilder`;
  #L5373c8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5373ce.  return v0 @kind object;
}
