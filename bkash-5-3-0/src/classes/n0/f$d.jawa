record `n0.f$d` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `n0.f$d.a` @AccessFlag PUBLIC_FINAL;
  `boolean` `n0.f$d.b` @AccessFlag PUBLIC_FINAL;
  `java.util.List` `n0.f$d.c` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`n0.f$d` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 , `java.util.List` v3 @kind object) @signature `Ln0/f$d;.<init>:(Ljava/lang/String;ZLjava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L537b3c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L537b42.  v0.`n0.f$d.a` @type ^`java.lang.String` := v1 @kind object;
  #L537b46.  v0.`n0.f$d.b` @type ^`boolean` := v2 @kind boolean;
  #L537b4a.  v0.`n0.f$d.c` @type ^`java.util.List` := v3 @kind object;
  #L537b4e.  return @kind void;
}
procedure `boolean` `equals`(`n0.f$d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Ln0/f$d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5379e0.  if v3 != v4 then goto L5379e8;
  #L5379e4.  v4:= 1I;
  #L5379e6.  return v4;
  #L5379e8.  v0:= 0I;
  #L5379ea.  if v4 == 0 then goto L537a5c;
  #L5379ee.  v1:= constclass @type ^`n0.f$d` @kind object;
  #L5379f2.  call temp:= `getClass`(v4) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L5379f8.  v2:= temp @kind object;
  #L5379fa.  if v1 == v2 then goto L537a00;
  #L5379fe.  goto L537a5c;
  #L537a00.  v4:= (`n0.f$d`) v4 @kind object;
  #L537a04.  v1:= v3.`n0.f$d.b` @type ^`boolean` @kind boolean;
  #L537a08.  v2:= v4.`n0.f$d.b` @type ^`boolean` @kind boolean;
  #L537a0c.  if v1 == v2 then goto L537a12;
  #L537a10.  return v0;
  #L537a12.  v1:= v3.`n0.f$d.c` @type ^`java.util.List` @kind object;
  #L537a16.  v2:= v4.`n0.f$d.c` @type ^`java.util.List` @kind object;
  #L537a1a.  call temp:= `equals`(v1, v2) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L537a20.  v1:= temp;
  #L537a22.  if v1 != 0 then goto L537a28;
  #L537a26.  return v0;
  #L537a28.  v0:= v3.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a2c.  v1:= "index_" @kind object;
  #L537a30.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L537a36.  v0:= temp;
  #L537a38.  if v0 == 0 then goto L537a4a;
  #L537a3c.  v4:= v4.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a40.  call temp:= `startsWith`(v4, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L537a46.  v4:= temp;
  #L537a48.  return v4;
  #L537a4a.  v0:= v3.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a4e.  v4:= v4.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a52.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L537a58.  v4:= temp;
  #L537a5a.  return v4;
  #L537a5c.  return v0;
}
procedure `int` `hashCode`(`n0.f$d` v2 @kind this) @signature `Ln0/f$d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L537a70.  v0:= v2.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a74.  v1:= "index_" @kind object;
  #L537a78.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L537a7e.  v0:= temp;
  #L537a80.  if v0 == 0 then goto L537a8c;
  #L537a84.  v0:= -1184239155I;
  #L537a8a.  goto L537a98;
  #L537a8c.  v0:= v2.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537a90.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L537a96.  v0:= temp;
  #L537a98.  v0:= v0 * 31;
  #L537a9c.  v1:= v2.`n0.f$d.b` @type ^`boolean` @kind boolean;
  #L537aa0.  v0:= v0 + v1 @kind int;
  #L537aa2.  v0:= v0 * 31;
  #L537aa6.  v1:= v2.`n0.f$d.c` @type ^`java.util.List` @kind object;
  #L537aaa.  call temp:= `hashCode`(v1) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L537ab0.  v1:= temp;
  #L537ab2.  v0:= v0 + v1 @kind int;
  #L537ab4.  return v0;
}
procedure `java.lang.String` `toString`(`n0.f$d` v2 @kind this) @signature `Ln0/f$d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L537ac8.  v0:= new `java.lang.StringBuilder`;
  #L537acc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L537ad2.  v1:= "Index{name='" @kind object;
  #L537ad6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537adc.  v1:= v2.`n0.f$d.a` @type ^`java.lang.String` @kind object;
  #L537ae0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537ae6.  v1:= 39I;
  #L537aea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L537af0.  v1:= ", unique=" @kind object;
  #L537af4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537afa.  v1:= v2.`n0.f$d.b` @type ^`boolean` @kind boolean;
  #L537afe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L537b04.  v1:= ", columns=" @kind object;
  #L537b08.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537b0e.  v1:= v2.`n0.f$d.c` @type ^`java.util.List` @kind object;
  #L537b12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537b18.  v1:= 125I;
  #L537b1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L537b22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L537b28.  v0:= temp @kind object;
  #L537b2a.  return v0 @kind object;
}
