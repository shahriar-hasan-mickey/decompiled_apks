record `n0.f$a` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `n0.f$a.a` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `n0.f$a.b` @AccessFlag PUBLIC_FINAL;
  `int` `n0.f$a.c` @AccessFlag PUBLIC_FINAL;
  `boolean` `n0.f$a.d` @AccessFlag PUBLIC_FINAL;
  `int` `n0.f$a.e` @AccessFlag PUBLIC_FINAL;
  `java.lang.String` `n0.f$a.f` @AccessFlag PUBLIC_FINAL;
  `int` `n0.f$a.g` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n0.f$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 , `int` v4 , `java.lang.String` v5 @kind object, `int` v6 ) @signature `Ln0/f$a;.<init>:(Ljava/lang/String;Ljava/lang/String;ZILjava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L537744.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53774a.  v0.`n0.f$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L53774e.  v0.`n0.f$a.b` @type ^`java.lang.String` := v2 @kind object;
  #L537752.  v0.`n0.f$a.d` @type ^`boolean` := v3 @kind boolean;
  #L537756.  v0.`n0.f$a.e` @type ^`int` := v4;
  #L53775a.  call temp:= `a`(v2) @signature `Ln0/f$a;.a:(Ljava/lang/String;)I` @kind static;
  #L537760.  v1:= temp;
  #L537762.  v0.`n0.f$a.c` @type ^`int` := v1;
  #L537766.  v0.`n0.f$a.f` @type ^`java.lang.String` := v5 @kind object;
  #L53776a.  v0.`n0.f$a.g` @type ^`int` := v6;
  #L53776e.  return @kind void;
}
procedure `int` `a`(`java.lang.String` v2 @kind object) @signature `Ln0/f$a;.a:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L537578.  v0:= 5I;
  #L53757a.  if v2 != 0 then goto L537580;
  #L53757e.  return v0;
  #L537580.  v1:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L537584.  call temp:= `toUpperCase`(v2, v1) @signature `Ljava/lang/String;.toUpperCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L53758a.  v2:= temp @kind object;
  #L53758c.  v1:= "INT" @kind object;
  #L537590.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L537596.  v1:= temp;
  #L537598.  if v1 == 0 then goto L5375a0;
  #L53759c.  v2:= 3I;
  #L53759e.  return v2;
  #L5375a0.  v1:= "CHAR" @kind object;
  #L5375a4.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375aa.  v1:= temp;
  #L5375ac.  if v1 != 0 then goto L53761e;
  #L5375b0.  v1:= "CLOB" @kind object;
  #L5375b4.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375ba.  v1:= temp;
  #L5375bc.  if v1 != 0 then goto L53761e;
  #L5375c0.  v1:= "TEXT" @kind object;
  #L5375c4.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375ca.  v1:= temp;
  #L5375cc.  if v1 == 0 then goto L5375d2;
  #L5375d0.  goto L53761e;
  #L5375d2.  v1:= "BLOB" @kind object;
  #L5375d6.  call temp:= `contains`(v2, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375dc.  v1:= temp;
  #L5375de.  if v1 == 0 then goto L5375e4;
  #L5375e2.  return v0;
  #L5375e4.  v0:= "REAL" @kind object;
  #L5375e8.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375ee.  v0:= temp;
  #L5375f0.  if v0 != 0 then goto L53761a;
  #L5375f4.  v0:= "FLOA" @kind object;
  #L5375f8.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L5375fe.  v0:= temp;
  #L537600.  if v0 != 0 then goto L53761a;
  #L537604.  v0:= "DOUB" @kind object;
  #L537608.  call temp:= `contains`(v2, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L53760e.  v2:= temp;
  #L537610.  if v2 == 0 then goto L537616;
  #L537614.  goto L53761a;
  #L537616.  v2:= 1I;
  #L537618.  return v2;
  #L53761a.  v2:= 4I;
  #L53761c.  return v2;
  #L53761e.  v2:= 2I;
  #L537620.  return v2;
}
procedure `boolean` `b`(`n0.f$a` v1 @kind this) @signature `Ln0/f$a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L537558.  v0:= v1.`n0.f$a.e` @type ^`int`;
  #L53755c.  if v0 <= 0 then goto L537564;
  #L537560.  v0:= 1I;
  #L537562.  goto L537566;
  #L537564.  v0:= 0I;
  #L537566.  return v0;
}
procedure `boolean` `equals`(`n0.f$a` v5 @kind this, `java.lang.Object` v6 @kind object) @signature `Ln0/f$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L537430.  v0:= 1I;
  #L537432.  if v5 != v6 then goto L537438;
  #L537436.  return v0;
  #L537438.  v1:= 0I;
  #L53743a.  if v6 == 0 then goto L537546;
  #L53743e.  v2:= constclass @type ^`n0.f$a` @kind object;
  #L537442.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L537448.  v3:= temp @kind object;
  #L53744a.  if v2 == v3 then goto L537452;
  #L53744e.  goto L537546;
  #L537452.  v6:= (`n0.f$a`) v6 @kind object;
  #L537456.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L53745a.  v3:= 20I;
  #L53745e.  if v2 < v3 then goto L537470;
  #L537462.  v2:= v5.`n0.f$a.e` @type ^`int`;
  #L537466.  v3:= v6.`n0.f$a.e` @type ^`int`;
  #L53746a.  if v2 == v3 then goto L537486;
  #L53746e.  return v1;
  #L537470.  call temp:= `b`(v5) @signature `Ln0/f$a;.b:()Z` @kind virtual;
  #L537476.  v2:= temp;
  #L537478.  call temp:= `b`(v6) @signature `Ln0/f$a;.b:()Z` @kind virtual;
  #L53747e.  v3:= temp;
  #L537480.  if v2 == v3 then goto L537486;
  #L537484.  return v1;
  #L537486.  v2:= v5.`n0.f$a.a` @type ^`java.lang.String` @kind object;
  #L53748a.  v3:= v6.`n0.f$a.a` @type ^`java.lang.String` @kind object;
  #L53748e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L537494.  v2:= temp;
  #L537496.  if v2 != 0 then goto L53749c;
  #L53749a.  return v1;
  #L53749c.  v2:= v5.`n0.f$a.d` @type ^`boolean` @kind boolean;
  #L5374a0.  v3:= v6.`n0.f$a.d` @type ^`boolean` @kind boolean;
  #L5374a4.  if v2 == v3 then goto L5374aa;
  #L5374a8.  return v1;
  #L5374aa.  v2:= v5.`n0.f$a.g` @type ^`int`;
  #L5374ae.  v3:= 2I;
  #L5374b0.  if v2 != v0 then goto L5374d6;
  #L5374b4.  v2:= v6.`n0.f$a.g` @type ^`int`;
  #L5374b8.  if v2 != v3 then goto L5374d6;
  #L5374bc.  v2:= v5.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L5374c0.  if v2 == 0 then goto L5374d6;
  #L5374c4.  v4:= v6.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L5374c8.  call temp:= `equals`(v2, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5374ce.  v2:= temp;
  #L5374d0.  if v2 != 0 then goto L5374d6;
  #L5374d4.  return v1;
  #L5374d6.  v2:= v5.`n0.f$a.g` @type ^`int`;
  #L5374da.  if v2 != v3 then goto L537500;
  #L5374de.  v2:= v6.`n0.f$a.g` @type ^`int`;
  #L5374e2.  if v2 != v0 then goto L537500;
  #L5374e6.  v2:= v6.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L5374ea.  if v2 == 0 then goto L537500;
  #L5374ee.  v3:= v5.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L5374f2.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L5374f8.  v2:= temp;
  #L5374fa.  if v2 != 0 then goto L537500;
  #L5374fe.  return v1;
  #L537500.  v2:= v5.`n0.f$a.g` @type ^`int`;
  #L537504.  if v2 == 0 then goto L537534;
  #L537508.  v3:= v6.`n0.f$a.g` @type ^`int`;
  #L53750c.  if v2 != v3 then goto L537534;
  #L537510.  v2:= v5.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L537514.  if v2 == 0 then goto L53752a;
  #L537518.  v3:= v6.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L53751c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L537522.  v2:= temp;
  #L537524.  if v2 != 0 then goto L537534;
  #L537528.  goto L537532;
  #L53752a.  v2:= v6.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L53752e.  if v2 == 0 then goto L537534;
  #L537532.  return v1;
  #L537534.  v2:= v5.`n0.f$a.c` @type ^`int`;
  #L537538.  v6:= v6.`n0.f$a.c` @type ^`int`;
  #L53753c.  if v2 != v6 then goto L537542;
  #L537540.  goto L537544;
  #L537542.  v0:= 0I;
  #L537544.  return v0;
  #L537546.  return v1;
}
procedure `int` `hashCode`(`n0.f$a` v2 @kind this) @signature `Ln0/f$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L537634.  v0:= v2.`n0.f$a.a` @type ^`java.lang.String` @kind object;
  #L537638.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L53763e.  v0:= temp;
  #L537640.  v0:= v0 * 31;
  #L537644.  v1:= v2.`n0.f$a.c` @type ^`int`;
  #L537648.  v0:= v0 + v1 @kind int;
  #L53764a.  v0:= v0 * 31;
  #L53764e.  v1:= v2.`n0.f$a.d` @type ^`boolean` @kind boolean;
  #L537652.  if v1 == 0 then goto L53765c;
  #L537656.  v1:= 1231I;
  #L53765a.  goto L537660;
  #L53765c.  v1:= 1237I;
  #L537660.  v0:= v0 + v1 @kind int;
  #L537662.  v0:= v0 * 31;
  #L537666.  v1:= v2.`n0.f$a.e` @type ^`int`;
  #L53766a.  v0:= v0 + v1 @kind int;
  #L53766c.  return v0;
}
procedure `java.lang.String` `toString`(`n0.f$a` v3 @kind this) @signature `Ln0/f$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L537680.  v0:= new `java.lang.StringBuilder`;
  #L537684.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53768a.  v1:= "Column{name='" @kind object;
  #L53768e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537694.  v1:= v3.`n0.f$a.a` @type ^`java.lang.String` @kind object;
  #L537698.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53769e.  v1:= 39I;
  #L5376a2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376a8.  v2:= ", type='" @kind object;
  #L5376ac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376b2.  v2:= v3.`n0.f$a.b` @type ^`java.lang.String` @kind object;
  #L5376b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376c2.  v2:= ", affinity='" @kind object;
  #L5376c6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376cc.  v2:= v3.`n0.f$a.c` @type ^`int`;
  #L5376d0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376d6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376dc.  v2:= ", notNull=" @kind object;
  #L5376e0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376e6.  v2:= v3.`n0.f$a.d` @type ^`boolean` @kind boolean;
  #L5376ea.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376f0.  v2:= ", primaryKeyPosition=" @kind object;
  #L5376f4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5376fa.  v2:= v3.`n0.f$a.e` @type ^`int`;
  #L5376fe.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L537704.  v2:= ", defaultValue='" @kind object;
  #L537708.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53770e.  v2:= v3.`n0.f$a.f` @type ^`java.lang.String` @kind object;
  #L537712.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537718.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53771e.  v1:= 125I;
  #L537722.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L537728.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53772e.  v0:= temp @kind object;
  #L537730.  return v0 @kind object;
}
