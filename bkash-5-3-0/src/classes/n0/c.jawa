record `n0.c` @kind class @AccessFlag PUBLIC {
}
procedure `void` `a`(`p0.b` v4 @kind object) @signature `Ln0/c;.a:(Lp0/b;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L537274.  v0:= new `java.util.ArrayList`;
  #L537278.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L53727e.  v1:= "SELECT name FROM sqlite_master WHERE type = 'trigger'" @kind object;
  #L537282.  call temp:= `W`(v4, v1) @signature `Lp0/b;.W:(Ljava/lang/String;)Landroid/database/Cursor;` @kind interface;
  #L537288.  v1:= temp @kind object;
  #L53728a.  call temp:= `moveToNext`(v1) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L537290.  v2:= temp;
  #L537292.  if v2 == 0 then goto L5372a8;
  #L537296.  v2:= 0I;
  #L537298.  call temp:= `getString`(v1, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L53729e.  v2:= temp @kind object;
  #L5372a0.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L5372a6.  goto L53728a;
  #L5372a8.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L5372ae.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5372b4.  v0:= temp @kind object;
  #L5372b6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5372bc.  v1:= temp;
  #L5372be.  if v1 == 0 then goto L537308;
  #L5372c2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5372c8.  v1:= temp @kind object;
  #L5372ca.  v1:= (`java.lang.String`) v1 @kind object;
  #L5372ce.  v2:= "room_fts_content_sync_" @kind object;
  #L5372d2.  call temp:= `startsWith`(v1, v2) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L5372d8.  v2:= temp;
  #L5372da.  if v2 == 0 then goto L5372b6;
  #L5372de.  v2:= new `java.lang.StringBuilder`;
  #L5372e2.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5372e8.  v3:= "DROP TRIGGER IF EXISTS " @kind object;
  #L5372ec.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5372f2.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5372f8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5372fe.  v1:= temp @kind object;
  #L537300.  call `p`(v4, v1) @signature `Lp0/b;.p:(Ljava/lang/String;)V` @kind interface;
  #L537306.  goto L5372b6;
  #L537308.  return @kind void;
  #L53730a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53730c.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L537312.  throw v4;
  catch `java.lang.Throwable` @[L53728a..L5372a6] goto L53730a;
}
procedure `android.database.Cursor` `b`(`androidx.room.h` v2 @kind object, `p0.e` v3 @kind object, `boolean` v4 , `android.os.CancellationSignal` v5 @kind object) @signature `Ln0/c;.b:(Landroidx/room/h;Lp0/e;ZLandroid/os/CancellationSignal;)Landroid/database/Cursor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L537168.  call temp:= `q`(v2, v3, v5) @signature `Landroidx/room/h;.q:(Lp0/e;Landroid/os/CancellationSignal;)Landroid/database/Cursor;` @kind virtual;
  #L53716e.  v2:= temp @kind object;
  #L537170.  if v4 == 0 then goto L5371c2;
  #L537174.  v3:= instanceof @variable v2 @type ^`android.database.AbstractWindowedCursor` @kind boolean;
  #L537178.  if v3 == 0 then goto L5371c2;
  #L53717c.  v3:= v2 @kind object;
  #L53717e.  v3:= (`android.database.AbstractWindowedCursor`) v3 @kind object;
  #L537182.  call temp:= `getCount`(v3) @signature `Landroid/database/AbstractWindowedCursor;.getCount:()I` @kind virtual;
  #L537188.  v4:= temp;
  #L53718a.  call temp:= `hasWindow`(v3) @signature `Landroid/database/AbstractWindowedCursor;.hasWindow:()Z` @kind virtual;
  #L537190.  v5:= temp;
  #L537192.  if v5 == 0 then goto L5371a8;
  #L537196.  call temp:= `getWindow`(v3) @signature `Landroid/database/AbstractWindowedCursor;.getWindow:()Landroid/database/CursorWindow;` @kind virtual;
  #L53719c.  v5:= temp @kind object;
  #L53719e.  call temp:= `getNumRows`(v5) @signature `Landroid/database/CursorWindow;.getNumRows:()I` @kind virtual;
  #L5371a4.  v5:= temp;
  #L5371a6.  goto L5371aa;
  #L5371a8.  v5:= v4;
  #L5371aa.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L5371ae.  v1:= 23I;
  #L5371b2.  if v0 < v1 then goto L5371ba;
  #L5371b6.  if v5 >= v4 then goto L5371c2;
  #L5371ba.  call temp:= `a`(v3) @signature `Ln0/b;.a:(Landroid/database/Cursor;)Landroid/database/Cursor;` @kind static;
  #L5371c0.  v2:= temp @kind object;
  #L5371c2.  return v2 @kind object;
}
procedure `int` `c`(`java.io.File` v10 @kind object) @signature `Ln0/c;.c:(Ljava/io/File;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L5371d4.  v0:= 4I;
  #L5371d6.  v1:= 0I;
  #L5371d8.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L5371de.  v2:= temp @kind object;
  #L5371e0.  v3:= new `java.io.FileInputStream`;
  #L5371e4.  call `<init>`(v3, v10) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L5371ea.  call temp:= `getChannel`(v3) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L5371f0.  v1:= temp @kind object;
  #L5371f2.  v5:= 60L;
  #L5371f6.  v7:= 4L;
  #L5371fa.  v9:= 1I;
  #L5371fc.  v4:= v1 @kind object;
  #L5371fe.  call temp:= `tryLock`(v4, v5, v7, v9) @signature `Ljava/nio/channels/FileChannel;.tryLock:(JJZ)Ljava/nio/channels/FileLock;` @kind virtual;
  #L537204.  v3:= 60L;
  #L537208.  call temp:= `position`(v1, v3) @signature `Ljava/nio/channels/FileChannel;.position:(J)Ljava/nio/channels/FileChannel;` @kind virtual;
  #L53720e.  call temp:= `read`(v1, v2) @signature `Ljava/nio/channels/FileChannel;.read:(Ljava/nio/ByteBuffer;)I` @kind virtual;
  #L537214.  v10:= temp;
  #L537216.  if v10 != v0 then goto L537230;
  #L53721a.  call temp:= `rewind`(v2) @signature `Ljava/nio/ByteBuffer;.rewind:()Ljava/nio/Buffer;` @kind virtual;
  #L537220.  call temp:= `getInt`(v2) @signature `Ljava/nio/ByteBuffer;.getInt:()I` @kind virtual;
  #L537226.  v10:= temp;
  #L537228.  call `close`(v1) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53722e.  return v10;
  #L537230.  v10:= new `java.io.IOException`;
  #L537234.  v0:= "Bad database header, unable to read 4 bytes at offset 60" @kind object;
  #L537238.  call `<init>`(v10, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53723e.  throw v10;
  #L537240.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L537242.  if v1 == 0 then goto L53724c;
  #L537246.  call `close`(v1) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53724c.  throw v10;
  catch `java.lang.Throwable` @[L5371d8..L537228] goto L537240;
  catch `java.lang.Throwable` @[L537230..L537240] goto L537240;
}
