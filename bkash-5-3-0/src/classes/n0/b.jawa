record `n0.b` @kind class @AccessFlag PUBLIC {
}
procedure `android.database.Cursor` `a`(`android.database.Cursor` v5 @kind object) @signature `Ln0/b;.a:(Landroid/database/Cursor;)Landroid/database/Cursor;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L53701c.  v0:= new `android.database.MatrixCursor`;
  #L537020.  call temp:= `getColumnNames`(v5) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L537026.  v1:= temp @kind object;
  #L537028.  call temp:= `getCount`(v5) @signature `Landroid/database/Cursor;.getCount:()I` @kind interface;
  #L53702e.  v2:= temp;
  #L537030.  call `<init>`(v0, v1, v2) @signature `Landroid/database/MatrixCursor;.<init>:([Ljava/lang/String;I)V` @kind direct;
  #L537036.  call temp:= `moveToNext`(v5) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L53703c.  v1:= temp;
  #L53703e.  if v1 == 0 then goto L5370e8;
  #L537042.  call temp:= `getColumnCount`(v5) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L537048.  v1:= temp;
  #L53704a.  v1:= new `java.lang.Object`[v1];
  #L53704e.  v2:= 0I;
  #L537050.  call temp:= `getColumnCount`(v5) @signature `Landroid/database/Cursor;.getColumnCount:()I` @kind interface;
  #L537056.  v3:= temp;
  #L537058.  if v2 >= v3 then goto L5370e0;
  #L53705c.  call temp:= `getType`(v5, v2) @signature `Landroid/database/Cursor;.getType:(I)I` @kind interface;
  #L537062.  v3:= temp;
  #L537064.  if v3 == 0 then goto L5370d4;
  #L537068.  v4:= 1I;
  #L53706a.  if v3 == v4 then goto L5370be;
  #L53706e.  v4:= 2I;
  #L537070.  if v3 == v4 then goto L5370a8;
  #L537074.  v4:= 3I;
  #L537076.  if v3 == v4 then goto L53709a;
  #L53707a.  v4:= 4I;
  #L53707c.  if v3 != v4 then goto L53708e;
  #L537080.  call temp:= `getBlob`(v5, v2) @signature `Landroid/database/Cursor;.getBlob:(I)[B` @kind interface;
  #L537086.  v3:= temp @kind object;
  #L537088.  v1[v2]:= v3 @kind object;
  #L53708c.  goto L5370da;
  #L53708e.  v0:= new `java.lang.IllegalStateException`;
  #L537092.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L537098.  throw v0;
  #L53709a.  call temp:= `getString`(v5, v2) @signature `Landroid/database/Cursor;.getString:(I)Ljava/lang/String;` @kind interface;
  #L5370a0.  v3:= temp @kind object;
  #L5370a2.  v1[v2]:= v3 @kind object;
  #L5370a6.  goto L5370da;
  #L5370a8.  call temp:= `getDouble`(v5, v2) @signature `Landroid/database/Cursor;.getDouble:(I)D` @kind interface;
  #L5370ae.  v3:= temp @kind wide;
  #L5370b0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Double;.valueOf:(D)Ljava/lang/Double;` @kind static;
  #L5370b6.  v3:= temp @kind object;
  #L5370b8.  v1[v2]:= v3 @kind object;
  #L5370bc.  goto L5370da;
  #L5370be.  call temp:= `getLong`(v5, v2) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L5370c4.  v3:= temp @kind wide;
  #L5370c6.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L5370cc.  v3:= temp @kind object;
  #L5370ce.  v1[v2]:= v3 @kind object;
  #L5370d2.  goto L5370da;
  #L5370d4.  v3:= 0I;
  #L5370d6.  v1[v2]:= v3 @kind object;
  #L5370da.  v2:= v2 + 1;
  #L5370de.  goto L537050;
  #L5370e0.  call `addRow`(v0, v1) @signature `Landroid/database/MatrixCursor;.addRow:([Ljava/lang/Object;)V` @kind virtual;
  #L5370e6.  goto L537036;
  #L5370e8.  call `close`(v5) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L5370ee.  return v0 @kind object;
  #L5370f0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5370f2.  call `close`(v5) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L5370f8.  throw v0;
  catch `java.lang.Throwable` @[L53701c..L5370e6] goto L5370f0;
}
procedure `int` `b`(`android.database.Cursor` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ln0/b;.b:(Landroid/database/Cursor;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L537118.  call temp:= `getColumnIndex`(v2, v3) @signature `Landroid/database/Cursor;.getColumnIndex:(Ljava/lang/String;)I` @kind interface;
  #L53711e.  v0:= temp;
  #L537120.  if v0 < 0 then goto L537126;
  #L537124.  return v0;
  #L537126.  v0:= new `java.lang.StringBuilder`;
  #L53712a.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L537130.  v1:= "`" @kind object;
  #L537134.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53713a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537140.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L537146.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53714c.  v3:= temp @kind object;
  #L53714e.  call temp:= `getColumnIndexOrThrow`(v2, v3) @signature `Landroid/database/Cursor;.getColumnIndexOrThrow:(Ljava/lang/String;)I` @kind interface;
  #L537154.  v2:= temp;
  #L537156.  return v2;
}
