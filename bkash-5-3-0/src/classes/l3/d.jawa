record `l3.d` @kind class @AccessFlag PUBLIC {
  `java.lang.Object` `l3.d.a` @AccessFlag PRIVATE;
  `int` `l3.d.b` @AccessFlag PRIVATE;
  `l3.c` `l3.d.c` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Map` `@@l3.d.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ll3/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L526b84.  v0:= new `java.util.IdentityHashMap`;
  #L526b88.  call `<init>`(v0) @signature `Ljava/util/IdentityHashMap;.<init>:()V` @kind direct;
  #L526b8e.  `@@l3.d.d` @type ^`java.util.Map` := v0 @kind object;
  #L526b92.  return @kind void;
}
procedure `void` `<init>`(`l3.d` v1 @kind this, `java.lang.Object` v2 @kind object, `l3.c` v3 @kind object) @signature `Ll3/d;.<init>:(Ljava/lang/Object;Ll3/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L526ba4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L526baa.  call temp:= `g`(v2) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L526bb0.  v0:= temp @kind object;
  #L526bb2.  v1.`l3.d.a` @type ^`java.lang.Object` := v0 @kind object;
  #L526bb6.  call temp:= `g`(v3) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L526bbc.  v3:= temp @kind object;
  #L526bbe.  v3:= (`l3.c`) v3 @kind object;
  #L526bc2.  v1.`l3.d.c` @type ^`l3.c` := v3 @kind object;
  #L526bc6.  v3:= 1I;
  #L526bc8.  v1.`l3.d.b` @type ^`int` := v3;
  #L526bcc.  call `a`(v2) @signature `Ll3/d;.a:(Ljava/lang/Object;)V` @kind static;
  #L526bd2.  return @kind void;
}
procedure `void` `a`(`java.lang.Object` v3 @kind object) @signature `Ll3/d;.a:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L526be4.  call temp:= `E0`() @signature `Lcom/facebook/common/references/CloseableReference;.E0:()Z` @kind static;
  #L526bea.  v0:= temp;
  #L526bec.  if v0 == 0 then goto L526c02;
  #L526bf0.  v0:= instanceof @variable v3 @type ^`android.graphics.Bitmap` @kind boolean;
  #L526bf4.  if v0 != 0 then goto L526c00;
  #L526bf8.  v0:= instanceof @variable v3 @type ^`l3.a` @kind boolean;
  #L526bfc.  if v0 == 0 then goto L526c02;
  #L526c00.  return @kind void;
  #L526c02.  v0:= `@@l3.d.d` @type ^`java.util.Map` @kind object;
  #L526c06.  @monitorenter v0
  #L526c08.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526c0e.  v1:= temp @kind object;
  #L526c10.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L526c14.  v2:= 1I;
  #L526c16.  if v1 != 0 then goto L526c2a;
  #L526c1a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L526c20.  v1:= temp @kind object;
  #L526c22.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526c28.  goto L526c42;
  #L526c2a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L526c30.  v1:= temp;
  #L526c32.  v1:= v1 + v2 @kind int;
  #L526c34.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L526c3a.  v1:= temp @kind object;
  #L526c3c.  call temp:= `put`(v0, v3, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526c42.  @monitorexit v0
  #L526c44.  return @kind void;
  #L526c46.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526c48.  @monitorexit v0
  #L526c4a.  throw v3;
  catch `java.lang.Throwable` @[L526c08..L526c4a] goto L526c46;
}
procedure `int` `c`(`l3.d` v2 @kind this) @signature `Ll3/d;.c:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L526b00.  @monitorenter v2
  #L526b02.  call `e`(v2) @signature `Ll3/d;.e:()V` @kind direct;
  #L526b08.  v0:= v2.`l3.d.b` @type ^`int`;
  #L526b0c.  v1:= 1I;
  #L526b0e.  if v0 <= 0 then goto L526b16;
  #L526b12.  v0:= 1I;
  #L526b14.  goto L526b18;
  #L526b16.  v0:= 0I;
  #L526b18.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L526b1e.  v0:= temp @kind object;
  #L526b20.  call `b`(v0) @signature `Lh3/j;.b:(Ljava/lang/Boolean;)V` @kind static;
  #L526b26.  v0:= v2.`l3.d.b` @type ^`int`;
  #L526b2a.  v0:= v0 - v1 @kind int;
  #L526b2c.  v2.`l3.d.b` @type ^`int` := v0;
  #L526b30.  @monitorexit v2
  #L526b32.  return v0;
  #L526b34.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526b36.  @monitorexit v2
  #L526b38.  throw v0;
  catch `java.lang.Throwable` @[L526b02..L526b30] goto L526b34;
}
procedure `void` `e`(`l3.d` v1 @kind this) @signature `Ll3/d;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L526d00.  call temp:= `h`(v1) @signature `Ll3/d;.h:(Ll3/d;)Z` @kind static;
  #L526d06.  v0:= temp;
  #L526d08.  if v0 == 0 then goto L526d0e;
  #L526d0c.  return @kind void;
  #L526d0e.  v0:= new `l3.d$a`;
  #L526d12.  call `<init>`(v0) @signature `Ll3/d$a;.<init>:()V` @kind direct;
  #L526d18.  throw v0;
}
procedure `boolean` `h`(`l3.d` v0 @kind object) @signature `Ll3/d;.h:(Ll3/d;)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L526ad8.  if v0 == 0 then goto L526aec;
  #L526adc.  call temp:= `g`(v0) @signature `Ll3/d;.g:()Z` @kind virtual;
  #L526ae2.  v0:= temp;
  #L526ae4.  if v0 == 0 then goto L526aec;
  #L526ae8.  v0:= 1I;
  #L526aea.  goto L526aee;
  #L526aec.  v0:= 0I;
  #L526aee.  return v0;
}
procedure `void` `i`(`java.lang.Object` v5 @kind object) @signature `Ll3/d;.i:(Ljava/lang/Object;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L526d2c.  v0:= `@@l3.d.d` @type ^`java.util.Map` @kind object;
  #L526d30.  @monitorenter v0
  #L526d32.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526d38.  v1:= temp @kind object;
  #L526d3a.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L526d3e.  v2:= 1I;
  #L526d40.  if v1 != 0 then goto L526d66;
  #L526d44.  v1:= "SharedReference" @kind object;
  #L526d48.  v3:= "No entry in sLiveObjects for value of type %s" @kind object;
  #L526d4c.  v2:= new `java.lang.Object`[v2];
  #L526d50.  v4:= 0I;
  #L526d52.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L526d58.  v5:= temp @kind object;
  #L526d5a.  v2[v4]:= v5 @kind object;
  #L526d5e.  call `A`(v1, v3, v2) @signature `Li3/a;.A:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L526d64.  goto L526d92;
  #L526d66.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L526d6c.  v3:= temp;
  #L526d6e.  if v3 != v2 then goto L526d7a;
  #L526d72.  call temp:= `remove`(v0, v5) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526d78.  goto L526d92;
  #L526d7a.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L526d80.  v1:= temp;
  #L526d82.  v1:= v1 - v2 @kind int;
  #L526d84.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L526d8a.  v1:= temp @kind object;
  #L526d8c.  call temp:= `put`(v0, v5, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L526d92.  @monitorexit v0
  #L526d94.  return @kind void;
  #L526d96.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526d98.  @monitorexit v0
  #L526d9a.  throw v5;
  catch `java.lang.Throwable` @[L526d32..L526d9a] goto L526d96;
}
procedure `void` `b`(`l3.d` v1 @kind this) @signature `Ll3/d;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L526c68.  @monitorenter v1
  #L526c6a.  call `e`(v1) @signature `Ll3/d;.e:()V` @kind direct;
  #L526c70.  v0:= v1.`l3.d.b` @type ^`int`;
  #L526c74.  v0:= v0 + 1;
  #L526c78.  v1.`l3.d.b` @type ^`int` := v0;
  #L526c7c.  @monitorexit v1
  #L526c7e.  return @kind void;
  #L526c80.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526c82.  @monitorexit v1
  #L526c84.  throw v0;
  catch `java.lang.Throwable` @[L526c6a..L526c7c] goto L526c80;
}
procedure `void` `d`(`l3.d` v2 @kind this) @signature `Ll3/d;.d:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L526ca4.  call temp:= `c`(v2) @signature `Ll3/d;.c:()I` @kind direct;
  #L526caa.  v0:= temp;
  #L526cac.  if v0 != 0 then goto L526cda;
  #L526cb0.  @monitorenter v2
  #L526cb2.  v0:= v2.`l3.d.a` @type ^`java.lang.Object` @kind object;
  #L526cb6.  v1:= 0I;
  #L526cb8.  v2.`l3.d.a` @type ^`java.lang.Object` := v1 @kind object;
  #L526cbc.  @monitorexit v2
  #L526cbe.  if v0 == 0 then goto L526cda;
  #L526cc2.  v1:= v2.`l3.d.c` @type ^`l3.c` @kind object;
  #L526cc6.  call `a`(v1, v0) @signature `Ll3/c;.a:(Ljava/lang/Object;)V` @kind interface;
  #L526ccc.  call `i`(v0) @signature `Ll3/d;.i:(Ljava/lang/Object;)V` @kind static;
  #L526cd2.  goto L526cda;
  #L526cd4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526cd6.  @monitorexit v2
  #L526cd8.  throw v0;
  #L526cda.  return @kind void;
  catch `java.lang.Throwable` @[L526cb2..L526cbe] goto L526cd4;
  catch `java.lang.Throwable` @[L526cd6..L526cd8] goto L526cd4;
}
procedure `java.lang.Object` `f`(`l3.d` v1 @kind this) @signature `Ll3/d;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L526b58.  @monitorenter v1
  #L526b5a.  v0:= v1.`l3.d.a` @type ^`java.lang.Object` @kind object;
  #L526b5e.  @monitorexit v1
  #L526b60.  return v0 @kind object;
  #L526b62.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526b64.  @monitorexit v1
  #L526b66.  throw v0;
  catch `java.lang.Throwable` @[L526b5a..L526b5e] goto L526b62;
}
procedure `boolean` `g`(`l3.d` v1 @kind this) @signature `Ll3/d;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L526aa0.  @monitorenter v1
  #L526aa2.  v0:= v1.`l3.d.b` @type ^`int`;
  #L526aa6.  if v0 <= 0 then goto L526aae;
  #L526aaa.  v0:= 1I;
  #L526aac.  goto L526ab0;
  #L526aae.  v0:= 0I;
  #L526ab0.  @monitorexit v1
  #L526ab2.  return v0;
  #L526ab4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L526ab6.  @monitorexit v1
  #L526ab8.  throw v0;
  catch `java.lang.Throwable` @[L526aa2..L526aa6] goto L526ab4;
}
