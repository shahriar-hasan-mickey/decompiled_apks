record `g1.g` @kind class @AccessFlag PUBLIC extends `java.util.concurrent.Executor` @kind interface {
  `java.util.ArrayDeque` `g1.g.g` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `g1.g.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `g1.g.i` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `g1.g.j` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`g1.g` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object) @signature `Lg1/g;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L505c7c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L505c82.  v0.`g1.g.h` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L505c86.  v1:= new `java.util.ArrayDeque`;
  #L505c8a.  call `<init>`(v1) @signature `Ljava/util/ArrayDeque;.<init>:()V` @kind direct;
  #L505c90.  v0.`g1.g.g` @type ^`java.util.ArrayDeque` := v1 @kind object;
  #L505c94.  v1:= new `java.lang.Object`;
  #L505c98.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L505c9e.  v0.`g1.g.i` @type ^`java.lang.Object` := v1 @kind object;
  #L505ca2.  return @kind void;
}
procedure `boolean` `a`(`g1.g` v2 @kind this) @signature `Lg1/g;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L505c38.  v0:= v2.`g1.g.i` @type ^`java.lang.Object` @kind object;
  #L505c3c.  @monitorenter v0
  #L505c3e.  v1:= v2.`g1.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L505c42.  call temp:= `isEmpty`(v1) @signature `Ljava/util/ArrayDeque;.isEmpty:()Z` @kind virtual;
  #L505c48.  v1:= temp;
  #L505c4a.  if v1 != 0 then goto L505c52;
  #L505c4e.  v1:= 1I;
  #L505c50.  goto L505c54;
  #L505c52.  v1:= 0I;
  #L505c54.  @monitorexit v0
  #L505c56.  return v1;
  #L505c58.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L505c5a.  @monitorexit v0
  #L505c5c.  throw v1;
  catch `java.lang.Throwable` @[L505c3e..L505c5c] goto L505c58;
}
procedure `void` `b`(`g1.g` v3 @kind this) @signature `Lg1/g;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L505d04.  v0:= v3.`g1.g.i` @type ^`java.lang.Object` @kind object;
  #L505d08.  @monitorenter v0
  #L505d0a.  v1:= v3.`g1.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L505d0e.  call temp:= `poll`(v1) @signature `Ljava/util/ArrayDeque;.poll:()Ljava/lang/Object;` @kind virtual;
  #L505d14.  v1:= temp @kind object;
  #L505d16.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L505d1a.  v3.`g1.g.j` @type ^`java.lang.Runnable` := v1 @kind object;
  #L505d1e.  if v1 == 0 then goto L505d30;
  #L505d22.  v1:= v3.`g1.g.h` @type ^`java.util.concurrent.Executor` @kind object;
  #L505d26.  v2:= v3.`g1.g.j` @type ^`java.lang.Runnable` @kind object;
  #L505d2a.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L505d30.  @monitorexit v0
  #L505d32.  return @kind void;
  #L505d34.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L505d36.  @monitorexit v0
  #L505d38.  throw v1;
  catch `java.lang.Throwable` @[L505d0a..L505d38] goto L505d34;
}
procedure `void` `execute`(`g1.g` v3 @kind this, `java.lang.Runnable` v4 @kind object) @signature `Lg1/g;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L505cb4.  v0:= v3.`g1.g.i` @type ^`java.lang.Object` @kind object;
  #L505cb8.  @monitorenter v0
  #L505cba.  v1:= v3.`g1.g.g` @type ^`java.util.ArrayDeque` @kind object;
  #L505cbe.  v2:= new `g1.g$a`;
  #L505cc2.  call `<init>`(v2, v3, v4) @signature `Lg1/g$a;.<init>:(Lg1/g;Ljava/lang/Runnable;)V` @kind direct;
  #L505cc8.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayDeque;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L505cce.  v4:= v3.`g1.g.j` @type ^`java.lang.Runnable` @kind object;
  #L505cd2.  if v4 != 0 then goto L505cdc;
  #L505cd6.  call `b`(v3) @signature `Lg1/g;.b:()V` @kind virtual;
  #L505cdc.  @monitorexit v0
  #L505cde.  return @kind void;
  #L505ce0.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L505ce2.  @monitorexit v0
  #L505ce4.  throw v4;
  catch `java.lang.Throwable` @[L505cba..L505ce4] goto L505ce0;
}
