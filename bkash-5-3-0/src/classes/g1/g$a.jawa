record `g1.g$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `g1.g` `g1.g$a.g` @AccessFlag FINAL;
  `java.lang.Runnable` `g1.g$a.h` @AccessFlag FINAL;
}
procedure `void` `<init>`(`g1.g$a` v0 @kind this, `g1.g` v1 @kind object, `java.lang.Runnable` v2 @kind object) @signature `Lg1/g$a;.<init>:(Lg1/g;Ljava/lang/Runnable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L505bd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L505bde.  v0.`g1.g$a.g` @type ^`g1.g` := v1 @kind object;
  #L505be2.  v0.`g1.g$a.h` @type ^`java.lang.Runnable` := v2 @kind object;
  #L505be6.  return @kind void;
}
procedure `void` `run`(`g1.g$a` v2 @kind this) @signature `Lg1/g$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L505bf8.  v0:= v2.`g1.g$a.h` @type ^`java.lang.Runnable` @kind object;
  #L505bfc.  call `run`(v0) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L505c02.  v0:= v2.`g1.g$a.g` @type ^`g1.g` @kind object;
  #L505c06.  call `b`(v0) @signature `Lg1/g;.b:()V` @kind virtual;
  #L505c0c.  return @kind void;
  #L505c0e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L505c10.  v1:= v2.`g1.g$a.g` @type ^`g1.g` @kind object;
  #L505c14.  call `b`(v1) @signature `Lg1/g;.b:()V` @kind virtual;
  #L505c1a.  throw v0;
  catch `java.lang.Throwable` @[L505bf8..L505c02] goto L505c0e;
}
