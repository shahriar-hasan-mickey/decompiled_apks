record `g1.n` @kind class @AccessFlag PUBLIC {
  `java.util.concurrent.ThreadFactory` `g1.n.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ScheduledExecutorService` `g1.n.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `g1.n.c` @AccessFlag FINAL;
  `java.util.Map` `g1.n.d` @AccessFlag FINAL;
  `java.lang.Object` `g1.n.e` @AccessFlag FINAL;
}
global `java.lang.String` `@@g1.n.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg1/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L50674c.  v0:= "WorkTimer" @kind object;
  #L506750.  call temp:= `f`(v0) @signature `Landroidx/work/m;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L506756.  v0:= temp @kind object;
  #L506758.  `@@g1.n.f` @type ^`java.lang.String` := v0 @kind object;
  #L50675c.  return @kind void;
}
procedure `void` `<init>`(`g1.n` v2 @kind this) @signature `Lg1/n;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L506770.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L506776.  v0:= new `g1.n$a`;
  #L50677a.  call `<init>`(v0, v2) @signature `Lg1/n$a;.<init>:(Lg1/n;)V` @kind direct;
  #L506780.  v2.`g1.n.a` @type ^`java.util.concurrent.ThreadFactory` := v0 @kind object;
  #L506784.  v1:= new `java.util.HashMap`;
  #L506788.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L50678e.  v2.`g1.n.c` @type ^`java.util.Map` := v1 @kind object;
  #L506792.  v1:= new `java.util.HashMap`;
  #L506796.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L50679c.  v2.`g1.n.d` @type ^`java.util.Map` := v1 @kind object;
  #L5067a0.  v1:= new `java.lang.Object`;
  #L5067a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5067aa.  v2.`g1.n.e` @type ^`java.lang.Object` := v1 @kind object;
  #L5067ae.  call temp:= `newSingleThreadScheduledExecutor`(v0) @signature `Ljava/util/concurrent/Executors;.newSingleThreadScheduledExecutor:(Ljava/util/concurrent/ThreadFactory;)Ljava/util/concurrent/ScheduledExecutorService;` @kind static;
  #L5067b4.  v0:= temp @kind object;
  #L5067b6.  v2.`g1.n.b` @type ^`java.util.concurrent.ScheduledExecutorService` := v0 @kind object;
  #L5067ba.  return @kind void;
}
procedure `void` `a`(`g1.n` v1 @kind this) @signature `Lg1/n;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5067cc.  v0:= v1.`g1.n.b` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L5067d0.  call temp:= `isShutdown`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.isShutdown:()Z` @kind interface;
  #L5067d6.  v0:= temp;
  #L5067d8.  if v0 != 0 then goto L5067e6;
  #L5067dc.  v0:= v1.`g1.n.b` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L5067e0.  call temp:= `shutdownNow`(v0) @signature `Ljava/util/concurrent/ScheduledExecutorService;.shutdownNow:()Ljava/util/List;` @kind interface;
  #L5067e6.  return @kind void;
}
procedure `void` `b`(`g1.n` v6 @kind this, `java.lang.String` v7 @kind object, `long` v8 , `g1.n$b` v10 @kind object) @signature `Lg1/n;.b:(Ljava/lang/String;JLg1/n$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L5067f8.  v0:= v6.`g1.n.e` @type ^`java.lang.Object` @kind object;
  #L5067fc.  @monitorenter v0
  #L5067fe.  call temp:= `c`() @signature `Landroidx/work/m;.c:()Landroidx/work/m;` @kind static;
  #L506804.  v1:= temp @kind object;
  #L506806.  v2:= `@@g1.n.f` @type ^`java.lang.String` @kind object;
  #L50680a.  v3:= "Starting timer for %s" @kind object;
  #L50680e.  v4:= 1I;
  #L506810.  v4:= new `java.lang.Object`[v4];
  #L506814.  v5:= 0I;
  #L506816.  v4[v5]:= v7 @kind object;
  #L50681a.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L506820.  v3:= temp @kind object;
  #L506822.  v4:= new `java.lang.Throwable`[v5];
  #L506826.  call `a`(v1, v2, v3, v4) @signature `Landroidx/work/m;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Throwable;)V` @kind virtual;
  #L50682c.  call `c`(v6, v7) @signature `Lg1/n;.c:(Ljava/lang/String;)V` @kind virtual;
  #L506832.  v1:= new `g1.n$c`;
  #L506836.  call `<init>`(v1, v6, v7) @signature `Lg1/n$c;.<init>:(Lg1/n;Ljava/lang/String;)V` @kind direct;
  #L50683c.  v2:= v6.`g1.n.c` @type ^`java.util.Map` @kind object;
  #L506840.  call temp:= `put`(v2, v7, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506846.  v2:= v6.`g1.n.d` @type ^`java.util.Map` @kind object;
  #L50684a.  call temp:= `put`(v2, v7, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506850.  v7:= v6.`g1.n.b` @type ^`java.util.concurrent.ScheduledExecutorService` @kind object;
  #L506854.  v10:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L506858.  call temp:= `schedule`(v7, v1, v8, v10) @signature `Ljava/util/concurrent/ScheduledExecutorService;.schedule:(Ljava/lang/Runnable;JLjava/util/concurrent/TimeUnit;)Ljava/util/concurrent/ScheduledFuture;` @kind interface;
  #L50685e.  @monitorexit v0
  #L506860.  return @kind void;
  #L506862.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L506864.  @monitorexit v0
  #L506866.  throw v7;
  catch `java.lang.Throwable` @[L5067fe..L506866] goto L506862;
}
procedure `void` `c`(`g1.n` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lg1/n;.c:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L506884.  v0:= v6.`g1.n.e` @type ^`java.lang.Object` @kind object;
  #L506888.  @monitorenter v0
  #L50688a.  v1:= v6.`g1.n.c` @type ^`java.util.Map` @kind object;
  #L50688e.  call temp:= `remove`(v1, v7) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506894.  v1:= temp @kind object;
  #L506896.  v1:= (`g1.n$c`) v1 @kind object;
  #L50689a.  if v1 == 0 then goto L5068d6;
  #L50689e.  call temp:= `c`() @signature `Landroidx/work/m;.c:()Landroidx/work/m;` @kind static;
  #L5068a4.  v1:= temp @kind object;
  #L5068a6.  v2:= `@@g1.n.f` @type ^`java.lang.String` @kind object;
  #L5068aa.  v3:= "Stopping timer for %s" @kind object;
  #L5068ae.  v4:= 1I;
  #L5068b0.  v4:= new `java.lang.Object`[v4];
  #L5068b4.  v5:= 0I;
  #L5068b6.  v4[v5]:= v7 @kind object;
  #L5068ba.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L5068c0.  v3:= temp @kind object;
  #L5068c2.  v4:= new `java.lang.Throwable`[v5];
  #L5068c6.  call `a`(v1, v2, v3, v4) @signature `Landroidx/work/m;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Throwable;)V` @kind virtual;
  #L5068cc.  v1:= v6.`g1.n.d` @type ^`java.util.Map` @kind object;
  #L5068d0.  call temp:= `remove`(v1, v7) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L5068d6.  @monitorexit v0
  #L5068d8.  return @kind void;
  #L5068da.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5068dc.  @monitorexit v0
  #L5068de.  throw v7;
  catch `java.lang.Throwable` @[L50688a..L5068de] goto L5068da;
}
