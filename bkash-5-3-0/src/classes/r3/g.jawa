record `r3.g` @kind class @AccessFlag PUBLIC extends `h3.l` @kind interface {
  `java.util.List` `r3.g.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `r3.g.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r3.g` v2 @kind this, `java.util.List` v3 @kind object, `boolean` v4 ) @signature `Lr3/g;.<init>:(Ljava/util/List;Z)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L560a90.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L560a96.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L560a9c.  v0:= temp;
  #L560a9e.  v0:= v0 ^~ 1;
  #L560aa2.  v1:= "List of suppliers is empty!" @kind object;
  #L560aa6.  call `c`(v0, v1) @signature `Lh3/j;.c:(ZLjava/lang/Object;)V` @kind static;
  #L560aac.  v2.`r3.g.a` @type ^`java.util.List` := v3 @kind object;
  #L560ab0.  v2.`r3.g.b` @type ^`boolean` := v4 @kind boolean;
  #L560ab4.  return @kind void;
}
procedure `boolean` `a`(`r3.g` v0 @kind object) @signature `Lr3/g;.a:(Lr3/g;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L56097c.  v0:= v0.`r3.g.b` @type ^`boolean` @kind boolean;
  #L560980.  return v0;
}
procedure `java.util.List` `b`(`r3.g` v0 @kind object) @signature `Lr3/g;.b:(Lr3/g;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L560a40.  v0:= v0.`r3.g.a` @type ^`java.util.List` @kind object;
  #L560a44.  return v0 @kind object;
}
procedure `r3.g` `c`(`java.util.List` v1 @kind object, `boolean` v2 ) @signature `Lr3/g;.c:(Ljava/util/List;Z)Lr3/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L560a74.  v0:= new `r3.g`;
  #L560a78.  call `<init>`(v0, v1, v2) @signature `Lr3/g;.<init>:(Ljava/util/List;Z)V` @kind direct;
  #L560a7e.  return v0 @kind object;
}
procedure `r3.c` `d`(`r3.g` v1 @kind this) @signature `Lr3/g;.d:()Lr3/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560a58.  v0:= new `r3.g$a`;
  #L560a5c.  call `<init>`(v0, v1) @signature `Lr3/g$a;.<init>:(Lr3/g;)V` @kind direct;
  #L560a62.  return v0 @kind object;
}
procedure `boolean` `equals`(`r3.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr3/g;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560994.  if v2 != v1 then goto L56099c;
  #L560998.  v2:= 1I;
  #L56099a.  return v2;
  #L56099c.  v0:= instanceof @variable v2 @type ^`r3.g` @kind boolean;
  #L5609a0.  if v0 != 0 then goto L5609a8;
  #L5609a4.  v2:= 0I;
  #L5609a6.  return v2;
  #L5609a8.  v2:= (`r3.g`) v2 @kind object;
  #L5609ac.  v0:= v1.`r3.g.a` @type ^`java.util.List` @kind object;
  #L5609b0.  v2:= v2.`r3.g.a` @type ^`java.util.List` @kind object;
  #L5609b4.  call temp:= `a`(v0, v2) @signature `Lh3/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L5609ba.  v2:= temp;
  #L5609bc.  return v2;
}
procedure `java.lang.Object` `get`(`r3.g` v1 @kind this) @signature `Lr3/g;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L5609f0.  call temp:= `d`(v1) @signature `Lr3/g;.d:()Lr3/c;` @kind virtual;
  #L5609f6.  v0:= temp @kind object;
  #L5609f8.  return v0 @kind object;
}
procedure `int` `hashCode`(`r3.g` v1 @kind this) @signature `Lr3/g;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5609d0.  v0:= v1.`r3.g.a` @type ^`java.util.List` @kind object;
  #L5609d4.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L5609da.  v0:= temp;
  #L5609dc.  return v0;
}
procedure `java.lang.String` `toString`(`r3.g` v3 @kind this) @signature `Lr3/g;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L560a0c.  call temp:= `c`(v3) @signature `Lh3/i;.c:(Ljava/lang/Object;)Lh3/i$b;` @kind static;
  #L560a12.  v0:= temp @kind object;
  #L560a14.  v1:= v3.`r3.g.a` @type ^`java.util.List` @kind object;
  #L560a18.  v2:= "list" @kind object;
  #L560a1c.  call temp:= `b`(v0, v2, v1) @signature `Lh3/i$b;.b:(Ljava/lang/String;Ljava/lang/Object;)Lh3/i$b;` @kind virtual;
  #L560a22.  v0:= temp @kind object;
  #L560a24.  call temp:= `toString`(v0) @signature `Lh3/i$b;.toString:()Ljava/lang/String;` @kind virtual;
  #L560a2a.  v0:= temp @kind object;
  #L560a2c.  return v0 @kind object;
}
