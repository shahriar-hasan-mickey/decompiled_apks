record `r3.f` @kind class @AccessFlag PUBLIC extends `h3.l` @kind interface {
  `java.util.List` `r3.f.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`r3.f` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lr3/f;.<init>:(Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L560364.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56036a.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L560370.  v0:= temp;
  #L560372.  v0:= v0 ^~ 1;
  #L560376.  v1:= "List of suppliers is empty!" @kind object;
  #L56037a.  call `c`(v0, v1) @signature `Lh3/j;.c:(ZLjava/lang/Object;)V` @kind static;
  #L560380.  v2.`r3.f.a` @type ^`java.util.List` := v3 @kind object;
  #L560384.  return @kind void;
}
procedure `java.util.List` `a`(`r3.f` v0 @kind object) @signature `Lr3/f;.a:(Lr3/f;)Ljava/util/List;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L560314.  v0:= v0.`r3.f.a` @type ^`java.util.List` @kind object;
  #L560318.  return v0 @kind object;
}
procedure `r3.f` `b`(`java.util.List` v1 @kind object) @signature `Lr3/f;.b:(Ljava/util/List;)Lr3/f;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L560348.  v0:= new `r3.f`;
  #L56034c.  call `<init>`(v0, v1) @signature `Lr3/f;.<init>:(Ljava/util/List;)V` @kind direct;
  #L560352.  return v0 @kind object;
}
procedure `r3.c` `c`(`r3.f` v1 @kind this) @signature `Lr3/f;.c:()Lr3/c;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L56032c.  v0:= new `r3.f$b`;
  #L560330.  call `<init>`(v0, v1) @signature `Lr3/f$b;.<init>:(Lr3/f;)V` @kind direct;
  #L560336.  return v0 @kind object;
}
procedure `boolean` `equals`(`r3.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lr3/f;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L560268.  if v2 != v1 then goto L560270;
  #L56026c.  v2:= 1I;
  #L56026e.  return v2;
  #L560270.  v0:= instanceof @variable v2 @type ^`r3.f` @kind boolean;
  #L560274.  if v0 != 0 then goto L56027c;
  #L560278.  v2:= 0I;
  #L56027a.  return v2;
  #L56027c.  v2:= (`r3.f`) v2 @kind object;
  #L560280.  v0:= v1.`r3.f.a` @type ^`java.util.List` @kind object;
  #L560284.  v2:= v2.`r3.f.a` @type ^`java.util.List` @kind object;
  #L560288.  call temp:= `a`(v0, v2) @signature `Lh3/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L56028e.  v2:= temp;
  #L560290.  return v2;
}
procedure `java.lang.Object` `get`(`r3.f` v1 @kind this) @signature `Lr3/f;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L5602c4.  call temp:= `c`(v1) @signature `Lr3/f;.c:()Lr3/c;` @kind virtual;
  #L5602ca.  v0:= temp @kind object;
  #L5602cc.  return v0 @kind object;
}
procedure `int` `hashCode`(`r3.f` v1 @kind this) @signature `Lr3/f;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5602a4.  v0:= v1.`r3.f.a` @type ^`java.util.List` @kind object;
  #L5602a8.  call temp:= `hashCode`(v0) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L5602ae.  v0:= temp;
  #L5602b0.  return v0;
}
procedure `java.lang.String` `toString`(`r3.f` v3 @kind this) @signature `Lr3/f;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5602e0.  call temp:= `c`(v3) @signature `Lh3/i;.c:(Ljava/lang/Object;)Lh3/i$b;` @kind static;
  #L5602e6.  v0:= temp @kind object;
  #L5602e8.  v1:= v3.`r3.f.a` @type ^`java.util.List` @kind object;
  #L5602ec.  v2:= "list" @kind object;
  #L5602f0.  call temp:= `b`(v0, v2, v1) @signature `Lh3/i$b;.b:(Ljava/lang/String;Ljava/lang/Object;)Lh3/i$b;` @kind virtual;
  #L5602f6.  v0:= temp @kind object;
  #L5602f8.  call temp:= `toString`(v0) @signature `Lh3/i$b;.toString:()Ljava/lang/String;` @kind virtual;
  #L5602fe.  v0:= temp @kind object;
  #L560300.  return v0 @kind object;
}
