record `r3.f$b$a` @kind class @AccessFlag  extends `r3.e` @kind interface {
  `r3.f$b` `r3.f$b$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r3.f$b$a` v0 @kind this, `r3.f$b` v1 @kind object) @signature `Lr3/f$b$a;.<init>:(Lr3/f$b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L55fd70.  v0.`r3.f$b$a.a` @type ^`r3.f$b` := v1 @kind object;
  #L55fd74.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55fd7a.  return @kind void;
}
procedure `void` `<init>`(`r3.f$b$a` v0 @kind this, `r3.f$b` v1 @kind object, `r3.f$a` v2 @kind object) @signature `Lr3/f$b$a;.<init>:(Lr3/f$b;Lr3/f$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L55fd8c.  call `<init>`(v0, v1) @signature `Lr3/f$b$a;.<init>:(Lr3/f$b;)V` @kind direct;
  #L55fd92.  return @kind void;
}
procedure `void` `a`(`r3.f$b$a` v1 @kind this, `r3.c` v2 @kind object) @signature `Lr3/f$b$a;.a:(Lr3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55fdb8.  v0:= v1.`r3.f$b$a.a` @type ^`r3.f$b` @kind object;
  #L55fdbc.  call `w`(v0, v2) @signature `Lr3/f$b;.w:(Lr3/f$b;Lr3/c;)V` @kind static;
  #L55fdc2.  return @kind void;
}
procedure `void` `b`(`r3.f$b$a` v0 @kind this, `r3.c` v1 @kind object) @signature `Lr3/f$b$a;.b:(Lr3/c;)V` @AccessFlag PUBLIC {
    temp;

  #L55fda4.  return @kind void;
}
procedure `void` `c`(`r3.f$b$a` v1 @kind this, `r3.c` v2 @kind object) @signature `Lr3/f$b$a;.c:(Lr3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55fdd4.  call temp:= `a`(v2) @signature `Lr3/c;.a:()Z` @kind interface;
  #L55fdda.  v0:= temp;
  #L55fddc.  if v0 == 0 then goto L55fdec;
  #L55fde0.  v0:= v1.`r3.f$b$a.a` @type ^`r3.f$b` @kind object;
  #L55fde4.  call `x`(v0, v2) @signature `Lr3/f$b;.x:(Lr3/f$b;Lr3/c;)V` @kind static;
  #L55fdea.  goto L55fe02;
  #L55fdec.  call temp:= `b`(v2) @signature `Lr3/c;.b:()Z` @kind interface;
  #L55fdf2.  v0:= temp;
  #L55fdf4.  if v0 == 0 then goto L55fe02;
  #L55fdf8.  v0:= v1.`r3.f$b$a.a` @type ^`r3.f$b` @kind object;
  #L55fdfc.  call `w`(v0, v2) @signature `Lr3/f$b;.w:(Lr3/f$b;Lr3/c;)V` @kind static;
  #L55fe02.  return @kind void;
}
procedure `void` `d`(`r3.f$b$a` v2 @kind this, `r3.c` v3 @kind object) @signature `Lr3/f$b$a;.d:(Lr3/c;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55fe14.  v0:= v2.`r3.f$b$a.a` @type ^`r3.f$b` @kind object;
  #L55fe18.  call temp:= `getProgress`(v0) @signature `Lr3/a;.getProgress:()F` @kind virtual;
  #L55fe1e.  v0:= temp;
  #L55fe20.  v1:= v2.`r3.f$b$a.a` @type ^`r3.f$b` @kind object;
  #L55fe24.  call temp:= `getProgress`(v3) @signature `Lr3/c;.getProgress:()F` @kind interface;
  #L55fe2a.  v3:= temp;
  #L55fe2c.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L55fe32.  v3:= temp;
  #L55fe34.  call temp:= `r`(v1, v3) @signature `Lr3/a;.r:(F)Z` @kind virtual;
  #L55fe3a.  return @kind void;
}
