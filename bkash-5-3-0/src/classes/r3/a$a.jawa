record `r3.a$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `boolean` `r3.a$a.g` @AccessFlag FINAL_SYNTHETIC;
  `r3.e` `r3.a$a.h` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `r3.a$a.i` @AccessFlag FINAL_SYNTHETIC;
  `r3.a` `r3.a$a.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`r3.a$a` v0 @kind this, `r3.a` v1 @kind object, `boolean` v2 , `r3.e` v3 @kind object, `boolean` v4 ) @signature `Lr3/a$a;.<init>:(Lr3/a;ZLr3/e;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L55f410.  v0.`r3.a$a.j` @type ^`r3.a` := v1 @kind object;
  #L55f414.  v0.`r3.a$a.g` @type ^`boolean` := v2 @kind boolean;
  #L55f418.  v0.`r3.a$a.h` @type ^`r3.e` := v3 @kind object;
  #L55f41c.  v0.`r3.a$a.i` @type ^`boolean` := v4 @kind boolean;
  #L55f420.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55f426.  return @kind void;
}
procedure `void` `run`(`r3.a$a` v2 @kind this) @signature `Lr3/a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55f438.  v0:= v2.`r3.a$a.g` @type ^`boolean` @kind boolean;
  #L55f43c.  if v0 == 0 then goto L55f450;
  #L55f440.  v0:= v2.`r3.a$a.h` @type ^`r3.e` @kind object;
  #L55f444.  v1:= v2.`r3.a$a.j` @type ^`r3.a` @kind object;
  #L55f448.  call `a`(v0, v1) @signature `Lr3/e;.a:(Lr3/c;)V` @kind interface;
  #L55f44e.  goto L55f476;
  #L55f450.  v0:= v2.`r3.a$a.i` @type ^`boolean` @kind boolean;
  #L55f454.  if v0 == 0 then goto L55f468;
  #L55f458.  v0:= v2.`r3.a$a.h` @type ^`r3.e` @kind object;
  #L55f45c.  v1:= v2.`r3.a$a.j` @type ^`r3.a` @kind object;
  #L55f460.  call `b`(v0, v1) @signature `Lr3/e;.b:(Lr3/c;)V` @kind interface;
  #L55f466.  goto L55f476;
  #L55f468.  v0:= v2.`r3.a$a.h` @type ^`r3.e` @kind object;
  #L55f46c.  v1:= v2.`r3.a$a.j` @type ^`r3.a` @kind object;
  #L55f470.  call `c`(v0, v1) @signature `Lr3/e;.c:(Lr3/c;)V` @kind interface;
  #L55f476.  return @kind void;
}
