record `t0.a` @kind class @AccessFlag PUBLIC_FINAL {
}
global `long` `@@t0.a.a` @AccessFlag PRIVATE_STATIC;
global `java.lang.reflect.Method` `@@t0.a.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `a`(`java.lang.String` v2 @kind object) @signature `Lt0/a;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L563b24.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L563b28.  v1:= 18I;
  #L563b2c.  if v0 < v1 then goto L563b36;
  #L563b30.  call `a`(v2) @signature `Lt0/b;.a:(Ljava/lang/String;)V` @kind static;
  #L563b36.  return @kind void;
}
procedure `void` `b`() @signature `Lt0/a;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L563b48.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L563b4c.  v1:= 18I;
  #L563b50.  if v0 < v1 then goto L563b5a;
  #L563b54.  call `b`() @signature `Lt0/b;.b:()V` @kind static;
  #L563b5a.  return @kind void;
}
procedure `void` `c`(`java.lang.String` v1 @kind object, `java.lang.Exception` v2 @kind object) @signature `Lt0/a;.c:(Ljava/lang/String;Ljava/lang/Exception;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L563b6c.  v0:= instanceof @variable v2 @type ^`java.lang.reflect.InvocationTargetException` @kind boolean;
  #L563b70.  if v0 == 0 then goto L563b96;
  #L563b74.  call temp:= `getCause`(v2) @signature `Ljava/lang/Exception;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L563b7a.  v1:= temp @kind object;
  #L563b7c.  v2:= instanceof @variable v1 @type ^`java.lang.RuntimeException` @kind boolean;
  #L563b80.  if v2 == 0 then goto L563b8a;
  #L563b84.  v1:= (`java.lang.RuntimeException`) v1 @kind object;
  #L563b88.  throw v1;
  #L563b8a.  v2:= new `java.lang.RuntimeException`;
  #L563b8e.  call `<init>`(v2, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L563b94.  throw v2;
  #L563b96.  v2:= new `java.lang.StringBuilder`;
  #L563b9a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L563ba0.  v0:= "Unable to call " @kind object;
  #L563ba4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563baa.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563bb0.  v1:= " via reflection" @kind object;
  #L563bb4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L563bba.  return @kind void;
}
procedure `boolean` `d`() @signature `Lt0/a;.d:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L563a38.  v0:= `@@t0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L563a3c.  if v0 != 0 then goto L563a4a;
  #L563a40.  call temp:= `isEnabled`() @signature `Landroid/os/Trace;.isEnabled:()Z` @kind static;
  #L563a46.  v0:= temp;
  #L563a48.  return v0;
  #L563a4a.  call temp:= `e`() @signature `Lt0/a;.e:()Z` @kind static;
  #L563a50.  v0:= temp;
  #L563a52.  return v0;
  catch `java.lang.NoSuchMethodError` @[L563a38..L563a48] goto L563a4a;
  catch `java.lang.NoClassDefFoundError` @[L563a38..L563a48] goto L563a4a;
}
procedure `boolean` `e`() @signature `Lt0/a;.e:()Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L563a74.  v0:= "isTagEnabled" @kind object;
  #L563a78.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L563a7c.  v2:= 0I;
  #L563a7e.  v3:= 18I;
  #L563a82.  if v1 < v3 then goto L563b00;
  #L563a86.  v1:= `@@t0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L563a8a.  v3:= 1I;
  #L563a8c.  v4:= 0I;
  #L563a8e.  if v1 != 0 then goto L563aca;
  #L563a92.  v1:= constclass @type ^`android.os.Trace` @kind object;
  #L563a96.  v5:= "TRACE_TAG_APP" @kind object;
  #L563a9a.  call temp:= `getField`(v1, v5) @signature `Ljava/lang/Class;.getField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L563aa0.  v1:= temp @kind object;
  #L563aa2.  call temp:= `getLong`(v1, v4) @signature `Ljava/lang/reflect/Field;.getLong:(Ljava/lang/Object;)J` @kind virtual;
  #L563aa8.  v5:= temp @kind wide;
  #L563aaa.  `@@t0.a.a` @type ^`long` := v5 @kind wide;
  #L563aae.  v1:= constclass @type ^`android.os.Trace` @kind object;
  #L563ab2.  v5:= new `java.lang.Class`[v3];
  #L563ab6.  v6:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L563aba.  v5[v2]:= v6 @kind object;
  #L563abe.  call temp:= `getMethod`(v1, v0, v5) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L563ac4.  v1:= temp @kind object;
  #L563ac6.  `@@t0.a.b` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L563aca.  v1:= `@@t0.a.b` @type ^`java.lang.reflect.Method` @kind object;
  #L563ace.  v3:= new `java.lang.Object`[v3];
  #L563ad2.  v5:= `@@t0.a.a` @type ^`long` @kind wide;
  #L563ad6.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L563adc.  v5:= temp @kind object;
  #L563ade.  v3[v2]:= v5 @kind object;
  #L563ae2.  call temp:= `invoke`(v1, v4, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L563ae8.  v1:= temp @kind object;
  #L563aea.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L563aee.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L563af4.  v0:= temp;
  #L563af6.  return v0;
  #L563af8.  v1:= Exception @type ^`java.lang.Exception` @kind object;
  #L563afa.  call `c`(v0, v1) @signature `Lt0/a;.c:(Ljava/lang/String;Ljava/lang/Exception;)V` @kind static;
  #L563b00.  return v2;
  catch `java.lang.Exception` @[L563a86..L563af6] goto L563af8;
}
