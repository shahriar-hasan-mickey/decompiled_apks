record `p3.d` @kind class @AccessFlag PUBLIC {
}
procedure `long` `a`(`java.io.InputStream` v7 @kind object, `long` v8 ) @signature `Lp3/d;.a:(Ljava/io/InputStream;J)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5479cc.  call temp:= `g`(v7) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L5479d2.  v0:= 0L;
  #L5479d6.  v2:= lcmp(v8, v0);
  #L5479da.  if v2 < 0 then goto L5479e2;
  #L5479de.  v2:= 1I;
  #L5479e0.  goto L5479e4;
  #L5479e2.  v2:= 0I;
  #L5479e4.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L5479ea.  v2:= temp @kind object;
  #L5479ec.  call `b`(v2) @signature `Lh3/j;.b:(Ljava/lang/Boolean;)V` @kind static;
  #L5479f2.  v2:= v8 @kind wide;
  #L5479f4.  v4:= lcmp(v2, v0);
  #L5479f8.  if v4 <= 0 then goto L547a26;
  #L5479fc.  call temp:= `skip`(v7, v2) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L547a02.  v4:= temp @kind wide;
  #L547a04.  v6:= lcmp(v4, v0);
  #L547a08.  if v6 <= 0 then goto L547a10;
  #L547a0c.  v2:= v2 - v4 @kind long;
  #L547a0e.  goto L5479f4;
  #L547a10.  call temp:= `read`(v7) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L547a16.  v4:= temp;
  #L547a18.  v5:= -1I;
  #L547a1a.  if v4 == v5 then goto L547a24;
  #L547a1e.  v4:= 1L;
  #L547a22.  goto L547a0c;
  #L547a24.  v8:= v8 - v2 @kind long;
  #L547a26.  return v8 @kind wide;
}
