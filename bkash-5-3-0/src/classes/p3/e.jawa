record `p3.e` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `p3.e` `@@p3.e.NO` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `p3.e` `@@p3.e.UNSET` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `p3.e` `@@p3.e.YES` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `p3.e`[] `@@p3.e.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lp3/e;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L547d2c.  v0:= new `p3.e`;
  #L547d30.  v1:= "YES" @kind object;
  #L547d34.  v2:= 0I;
  #L547d36.  call `<init>`(v0, v1, v2) @signature `Lp3/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L547d3c.  `@@p3.e.YES` @type ^`p3.e` := v0 @kind object;
  #L547d40.  v1:= new `p3.e`;
  #L547d44.  v3:= "NO" @kind object;
  #L547d48.  v4:= 1I;
  #L547d4a.  call `<init>`(v1, v3, v4) @signature `Lp3/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L547d50.  `@@p3.e.NO` @type ^`p3.e` := v1 @kind object;
  #L547d54.  v3:= new `p3.e`;
  #L547d58.  v5:= "UNSET" @kind object;
  #L547d5c.  v6:= 2I;
  #L547d5e.  call `<init>`(v3, v5, v6) @signature `Lp3/e;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L547d64.  `@@p3.e.UNSET` @type ^`p3.e` := v3 @kind object;
  #L547d68.  v5:= 3I;
  #L547d6a.  v5:= new `p3.e`[v5];
  #L547d6e.  v5[v2]:= v0 @kind object;
  #L547d72.  v5[v4]:= v1 @kind object;
  #L547d76.  v5[v6]:= v3 @kind object;
  #L547d7a.  `@@p3.e.g` @type ^`p3.e`[] := v5 @kind object;
  #L547d7e.  return @kind void;
}
procedure `void` `<init>`(`p3.e` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lp3/e;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L547d90.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L547d96.  return @kind void;
}
procedure `p3.e` `fromDbValue`(`int` v1 ) @signature `Lp3/e;.fromDbValue:(I)Lp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L547c68.  v0:= 1I;
  #L547c6a.  if v1 == v0 then goto L547c80;
  #L547c6e.  v0:= 2I;
  #L547c70.  if v1 == v0 then goto L547c7a;
  #L547c74.  v1:= `@@p3.e.UNSET` @type ^`p3.e` @kind object;
  #L547c78.  return v1 @kind object;
  #L547c7a.  v1:= `@@p3.e.NO` @type ^`p3.e` @kind object;
  #L547c7e.  return v1 @kind object;
  #L547c80.  v1:= `@@p3.e.YES` @type ^`p3.e` @kind object;
  #L547c84.  return v1 @kind object;
}
procedure `p3.e` `valueOf`(`java.lang.Boolean` v0 @kind object) @signature `Lp3/e;.valueOf:(Ljava/lang/Boolean;)Lp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L547cb8.  if v0 == 0 then goto L547cce;
  #L547cbc.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L547cc2.  v0:= temp;
  #L547cc4.  call temp:= `valueOf`(v0) @signature `Lp3/e;.valueOf:(Z)Lp3/e;` @kind static;
  #L547cca.  v0:= temp @kind object;
  #L547ccc.  goto L547cd2;
  #L547cce.  v0:= `@@p3.e.UNSET` @type ^`p3.e` @kind object;
  #L547cd2.  return v0 @kind object;
}
procedure `p3.e` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lp3/e;.valueOf:(Ljava/lang/String;)Lp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L547ce4.  v0:= constclass @type ^`p3.e` @kind object;
  #L547ce8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L547cee.  v1:= temp @kind object;
  #L547cf0.  v1:= (`p3.e`) v1 @kind object;
  #L547cf4.  return v1 @kind object;
}
procedure `p3.e` `valueOf`(`boolean` v0 ) @signature `Lp3/e;.valueOf:(Z)Lp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L547c98.  if v0 == 0 then goto L547ca2;
  #L547c9c.  v0:= `@@p3.e.YES` @type ^`p3.e` @kind object;
  #L547ca0.  goto L547ca6;
  #L547ca2.  v0:= `@@p3.e.NO` @type ^`p3.e` @kind object;
  #L547ca6.  return v0 @kind object;
}
procedure `p3.e`[] `values`() @signature `Lp3/e;.values:()[Lp3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L547d08.  v0:= `@@p3.e.g` @type ^`p3.e`[] @kind object;
  #L547d0c.  call temp:= `clone`(v0) @signature `[Lp3/e;.clone:()Ljava/lang/Object;` @kind virtual;
  #L547d12.  v0:= temp @kind object;
  #L547d14.  v0:= (`p3.e`[]) v0 @kind object;
  #L547d18.  return v0 @kind object;
}
procedure `boolean` `asBoolean`(`p3.e` v3 @kind this) @signature `Lp3/e;.asBoolean:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L547ac4.  v0:= `@@p3.e$a.a` @type ^`int`[] @kind object;
  #L547ac8.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L547ace.  v1:= temp;
  #L547ad0.  v0:= v0[v1];
  #L547ad4.  v1:= 1I;
  #L547ad6.  if v0 == v1 then goto L547b28;
  #L547ada.  v1:= 2I;
  #L547adc.  if v0 == v1 then goto L547b24;
  #L547ae0.  v1:= 3I;
  #L547ae2.  if v0 == v1 then goto L547b14;
  #L547ae6.  v0:= new `java.lang.IllegalStateException`;
  #L547aea.  v1:= new `java.lang.StringBuilder`;
  #L547aee.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L547af4.  v2:= "Unrecognized TriState value: " @kind object;
  #L547af8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547afe.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547b04.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L547b0a.  v1:= temp @kind object;
  #L547b0c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L547b12.  throw v0;
  #L547b14.  v0:= new `java.lang.IllegalStateException`;
  #L547b18.  v1:= "No boolean equivalent for UNSET" @kind object;
  #L547b1c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L547b22.  throw v0;
  #L547b24.  v0:= 0I;
  #L547b26.  return v0;
  #L547b28.  return v1;
}
procedure `boolean` `asBoolean`(`p3.e` v2 @kind this, `boolean` v3 ) @signature `Lp3/e;.asBoolean:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L547b3c.  v0:= `@@p3.e$a.a` @type ^`int`[] @kind object;
  #L547b40.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L547b46.  v1:= temp;
  #L547b48.  v0:= v0[v1];
  #L547b4c.  v1:= 1I;
  #L547b4e.  if v0 == v1 then goto L547b92;
  #L547b52.  v1:= 2I;
  #L547b54.  if v0 == v1 then goto L547b8e;
  #L547b58.  v1:= 3I;
  #L547b5a.  if v0 != v1 then goto L547b60;
  #L547b5e.  return v3;
  #L547b60.  v3:= new `java.lang.IllegalStateException`;
  #L547b64.  v0:= new `java.lang.StringBuilder`;
  #L547b68.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L547b6e.  v1:= "Unrecognized TriState value: " @kind object;
  #L547b72.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547b78.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547b7e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L547b84.  v0:= temp @kind object;
  #L547b86.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L547b8c.  throw v3;
  #L547b8e.  v3:= 0I;
  #L547b90.  return v3;
  #L547b92.  return v1;
}
procedure `java.lang.Boolean` `asBooleanObject`(`p3.e` v3 @kind this) @signature `Lp3/e;.asBooleanObject:()Ljava/lang/Boolean;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L547bf8.  v0:= `@@p3.e$a.a` @type ^`int`[] @kind object;
  #L547bfc.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L547c02.  v1:= temp;
  #L547c04.  v0:= v0[v1];
  #L547c08.  v1:= 1I;
  #L547c0a.  if v0 == v1 then goto L547c52;
  #L547c0e.  v1:= 2I;
  #L547c10.  if v0 == v1 then goto L547c4c;
  #L547c14.  v1:= 3I;
  #L547c16.  if v0 != v1 then goto L547c1e;
  #L547c1a.  v0:= 0I;
  #L547c1c.  return v0 @kind object;
  #L547c1e.  v0:= new `java.lang.IllegalStateException`;
  #L547c22.  v1:= new `java.lang.StringBuilder`;
  #L547c26.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L547c2c.  v2:= "Unrecognized TriState value: " @kind object;
  #L547c30.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547c36.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L547c3c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L547c42.  v1:= temp @kind object;
  #L547c44.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L547c4a.  throw v0;
  #L547c4c.  v0:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L547c50.  return v0 @kind object;
  #L547c52.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L547c56.  return v0 @kind object;
}
procedure `int` `getDbValue`(`p3.e` v2 @kind this) @signature `Lp3/e;.getDbValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L547bc4.  v0:= `@@p3.e$a.a` @type ^`int`[] @kind object;
  #L547bc8.  call temp:= `ordinal`(v2) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L547bce.  v1:= temp;
  #L547bd0.  v0:= v0[v1];
  #L547bd4.  v1:= 1I;
  #L547bd6.  if v0 == v1 then goto L547be4;
  #L547bda.  v1:= 2I;
  #L547bdc.  if v0 == v1 then goto L547be4;
  #L547be0.  v0:= 3I;
  #L547be2.  return v0;
  #L547be4.  return v1;
}
procedure `boolean` `isSet`(`p3.e` v1 @kind this) @signature `Lp3/e;.isSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L547ba4.  v0:= `@@p3.e.UNSET` @type ^`p3.e` @kind object;
  #L547ba8.  if v1 == v0 then goto L547bb0;
  #L547bac.  v0:= 1I;
  #L547bae.  goto L547bb2;
  #L547bb0.  v0:= 0I;
  #L547bb2.  return v0;
}
