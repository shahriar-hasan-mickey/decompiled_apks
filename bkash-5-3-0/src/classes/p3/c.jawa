record `p3.c` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<clinit>`() @signature `Lp3/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L5479b8.  return @kind void;
}
procedure `java.lang.String` `a`(`byte`[] v3 @kind object) @signature `Lp3/c;.a:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L54795c.  v0:= "SHA-1" @kind object;
  #L547960.  call temp:= `getInstance`(v0) @signature `Ljava/security/MessageDigest;.getInstance:(Ljava/lang/String;)Ljava/security/MessageDigest;` @kind static;
  #L547966.  v0:= temp @kind object;
  #L547968.  v1:= 0I;
  #L54796a.  v2:= length @variable v3;
  #L54796c.  call `update`(v0, v3, v1, v2) @signature `Ljava/security/MessageDigest;.update:([BII)V` @kind virtual;
  #L547972.  call temp:= `digest`(v0) @signature `Ljava/security/MessageDigest;.digest:()[B` @kind virtual;
  #L547978.  v3:= temp @kind object;
  #L54797a.  v0:= 11I;
  #L54797e.  call temp:= `encodeToString`(v3, v0) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L547984.  v3:= temp @kind object;
  #L547986.  return v3 @kind object;
  #L547988.  v3:= Exception @type ^`java.security.NoSuchAlgorithmException` @kind object;
  #L54798a.  v0:= new `java.lang.RuntimeException`;
  #L54798e.  call `<init>`(v0, v3) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L547994.  throw v0;
  catch `java.security.NoSuchAlgorithmException` @[L54795c..L547986] goto L547988;
}
