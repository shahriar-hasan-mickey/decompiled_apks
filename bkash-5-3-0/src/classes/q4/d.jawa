record `q4.d` @kind class @AccessFlag PUBLIC {
  `int` `q4.d.a` @AccessFlag PRIVATE;
  `java.util.List` `q4.d.b` @AccessFlag PRIVATE;
  `q4.c$a` `q4.d.c` @AccessFlag PRIVATE_FINAL;
}
global `q4.d` `@@q4.d.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`q4.d` v1 @kind this) @signature `Lq4/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L556254.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55625a.  v0:= new `q4.a`;
  #L55625e.  call `<init>`(v0) @signature `Lq4/a;.<init>:()V` @kind direct;
  #L556264.  v1.`q4.d.c` @type ^`q4.c$a` := v0 @kind object;
  #L556268.  call `f`(v1) @signature `Lq4/d;.f:()V` @kind direct;
  #L55626e.  return @kind void;
}
procedure `q4.c` `b`(`java.io.InputStream` v1 @kind object) @signature `Lq4/d;.b:(Ljava/io/InputStream;)Lq4/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5561b0.  call temp:= `d`() @signature `Lq4/d;.d:()Lq4/d;` @kind static;
  #L5561b6.  v0:= temp @kind object;
  #L5561b8.  call temp:= `a`(v0, v1) @signature `Lq4/d;.a:(Ljava/io/InputStream;)Lq4/c;` @kind virtual;
  #L5561be.  v1:= temp @kind object;
  #L5561c0.  return v1 @kind object;
}
procedure `q4.c` `c`(`java.io.InputStream` v0 @kind object) @signature `Lq4/d;.c:(Ljava/io/InputStream;)Lq4/c;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5561d4.  call temp:= `b`(v0) @signature `Lq4/d;.b:(Ljava/io/InputStream;)Lq4/c;` @kind static;
  #L5561da.  v0:= temp @kind object;
  #L5561dc.  return v0 @kind object;
  #L5561de.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L5561e0.  call temp:= `a`(v0) @signature `Lh3/n;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L5561e6.  v0:= temp @kind object;
  #L5561e8.  throw v0;
  catch `java.io.IOException` @[L5561d4..L5561dc] goto L5561de;
}
procedure `q4.d` `d`() @signature `Lq4/d;.d:()Lq4/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L55620c.  v0:= constclass @type ^`q4.d` @kind object;
  #L556210.  @monitorenter v0
  #L556212.  v1:= `@@q4.d.d` @type ^`q4.d` @kind object;
  #L556216.  if v1 != 0 then goto L556228;
  #L55621a.  v1:= new `q4.d`;
  #L55621e.  call `<init>`(v1) @signature `Lq4/d;.<init>:()V` @kind direct;
  #L556224.  `@@q4.d.d` @type ^`q4.d` := v1 @kind object;
  #L556228.  v1:= `@@q4.d.d` @type ^`q4.d` @kind object;
  #L55622c.  @monitorexit v0
  #L55622e.  return v1 @kind object;
  #L556230.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L556232.  @monitorexit v0
  #L556234.  throw v1;
  catch `java.lang.Throwable` @[L556212..L55622c] goto L556230;
}
procedure `int` `e`(`int` v2 , `java.io.InputStream` v3 @kind object, `byte`[] v4 @kind object) @signature `Lq4/d;.e:(ILjava/io/InputStream;[B)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L5560b0.  call temp:= `g`(v3) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L5560b6.  call temp:= `g`(v4) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L5560bc.  v0:= length @variable v4;
  #L5560be.  v1:= 0I;
  #L5560c0.  if v0 < v2 then goto L5560c8;
  #L5560c4.  v0:= 1I;
  #L5560c6.  goto L5560ca;
  #L5560c8.  v0:= 0I;
  #L5560ca.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L5560d0.  v0:= temp @kind object;
  #L5560d2.  call `b`(v0) @signature `Lh3/j;.b:(Ljava/lang/Boolean;)V` @kind static;
  #L5560d8.  call temp:= `markSupported`(v3) @signature `Ljava/io/InputStream;.markSupported:()Z` @kind virtual;
  #L5560de.  v0:= temp;
  #L5560e0.  if v0 == 0 then goto L556104;
  #L5560e4.  call `mark`(v3, v2) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L5560ea.  call temp:= `b`(v3, v4, v1, v2) @signature `Lh3/a;.b:(Ljava/io/InputStream;[BII)I` @kind static;
  #L5560f0.  v2:= temp;
  #L5560f2.  call `reset`(v3) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L5560f8.  return v2;
  #L5560fa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5560fc.  call `reset`(v3) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L556102.  throw v2;
  #L556104.  call temp:= `b`(v3, v4, v1, v2) @signature `Lh3/a;.b:(Ljava/io/InputStream;[BII)I` @kind static;
  #L55610a.  v2:= temp;
  #L55610c.  return v2;
  catch `java.lang.Throwable` @[L5560e4..L5560f2] goto L5560fa;
}
procedure `void` `f`(`q4.d` v3 @kind this) @signature `Lq4/d;.f:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L556280.  v0:= v3.`q4.d.c` @type ^`q4.c$a` @kind object;
  #L556284.  call temp:= `a`(v0) @signature `Lq4/c$a;.a:()I` @kind interface;
  #L55628a.  v0:= temp;
  #L55628c.  v3.`q4.d.a` @type ^`int` := v0;
  #L556290.  v0:= v3.`q4.d.b` @type ^`java.util.List` @kind object;
  #L556294.  if v0 == 0 then goto L5562d2;
  #L556298.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55629e.  v0:= temp @kind object;
  #L5562a0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5562a6.  v1:= temp;
  #L5562a8.  if v1 == 0 then goto L5562d2;
  #L5562ac.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5562b2.  v1:= temp @kind object;
  #L5562b4.  v1:= (`q4.c$a`) v1 @kind object;
  #L5562b8.  v2:= v3.`q4.d.a` @type ^`int`;
  #L5562bc.  call temp:= `a`(v1) @signature `Lq4/c$a;.a:()I` @kind interface;
  #L5562c2.  v1:= temp;
  #L5562c4.  call temp:= `max`(v2, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L5562ca.  v1:= temp;
  #L5562cc.  v3.`q4.d.a` @type ^`int` := v1;
  #L5562d0.  goto L5562a0;
  #L5562d2.  return @kind void;
}
procedure `q4.c` `a`(`q4.d` v4 @kind this, `java.io.InputStream` v5 @kind object) @signature `Lq4/d;.a:(Ljava/io/InputStream;)Lq4/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55612c.  call temp:= `g`(v5) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L556132.  v0:= v4.`q4.d.a` @type ^`int`;
  #L556136.  v1:= new `byte`[v0];
  #L55613a.  call temp:= `e`(v0, v5, v1) @signature `Lq4/d;.e:(ILjava/io/InputStream;[B)I` @kind static;
  #L556140.  v5:= temp;
  #L556142.  v0:= v4.`q4.d.c` @type ^`q4.c$a` @kind object;
  #L556146.  call temp:= `b`(v0, v1, v5) @signature `Lq4/c$a;.b:([BI)Lq4/c;` @kind interface;
  #L55614c.  v0:= temp @kind object;
  #L55614e.  if v0 == 0 then goto L55615c;
  #L556152.  v2:= `@@q4.c.b` @type ^`q4.c` @kind object;
  #L556156.  if v0 == v2 then goto L55615c;
  #L55615a.  return v0 @kind object;
  #L55615c.  v0:= v4.`q4.d.b` @type ^`java.util.List` @kind object;
  #L556160.  if v0 == 0 then goto L55619a;
  #L556164.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55616a.  v0:= temp @kind object;
  #L55616c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L556172.  v2:= temp;
  #L556174.  if v2 == 0 then goto L55619a;
  #L556178.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55617e.  v2:= temp @kind object;
  #L556180.  v2:= (`q4.c$a`) v2 @kind object;
  #L556184.  call temp:= `b`(v2, v1, v5) @signature `Lq4/c$a;.b:([BI)Lq4/c;` @kind interface;
  #L55618a.  v2:= temp @kind object;
  #L55618c.  if v2 == 0 then goto L55616c;
  #L556190.  v3:= `@@q4.c.b` @type ^`q4.c` @kind object;
  #L556194.  if v2 == v3 then goto L55616c;
  #L556198.  return v2 @kind object;
  #L55619a.  v5:= `@@q4.c.b` @type ^`q4.c` @kind object;
  #L55619e.  return v5 @kind object;
}
