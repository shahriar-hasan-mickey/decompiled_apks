record `p5.o` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`p5.o` v0 @kind this) @signature `Lp5/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L54a264.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L54a26a.  return @kind void;
}
procedure `p5.o$a` `a`() @signature `Lp5/o;.a:()Lp5/o$a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L54a23c.  v0:= new `p5.d$b`;
  #L54a240.  call `<init>`(v0) @signature `Lp5/d$b;.<init>:()V` @kind direct;
  #L54a246.  v1:= `@@n5.d.DEFAULT` @type ^`n5.d` @kind object;
  #L54a24a.  call temp:= `d`(v0, v1) @signature `Lp5/d$b;.d:(Ln5/d;)Lp5/o$a;` @kind virtual;
  #L54a250.  v0:= temp @kind object;
  #L54a252.  return v0 @kind object;
}
procedure `java.lang.String` `b`() @signature `Lp5/o;.b:()Ljava/lang/String;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `byte`[] `c`() @signature `Lp5/o;.c:()[B` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `n5.d` `d`() @signature `Lp5/o;.d:()Ln5/d;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `e`(`p5.o` v1 @kind this) @signature `Lp5/o;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54a164.  call temp:= `c`(v1) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L54a16a.  v0:= temp @kind object;
  #L54a16c.  if v0 == 0 then goto L54a174;
  #L54a170.  v0:= 1I;
  #L54a172.  goto L54a176;
  #L54a174.  v0:= 0I;
  #L54a176.  return v0;
}
procedure `p5.o` `f`(`p5.o` v2 @kind this, `n5.d` v3 @kind object) @signature `Lp5/o;.f:(Ln5/d;)Lp5/o;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L54a1f0.  call temp:= `a`() @signature `Lp5/o;.a:()Lp5/o$a;` @kind static;
  #L54a1f6.  v0:= temp @kind object;
  #L54a1f8.  call temp:= `b`(v2) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L54a1fe.  v1:= temp @kind object;
  #L54a200.  call temp:= `b`(v0, v1) @signature `Lp5/o$a;.b:(Ljava/lang/String;)Lp5/o$a;` @kind virtual;
  #L54a206.  v0:= temp @kind object;
  #L54a208.  call temp:= `d`(v0, v3) @signature `Lp5/o$a;.d:(Ln5/d;)Lp5/o$a;` @kind virtual;
  #L54a20e.  v3:= temp @kind object;
  #L54a210.  call temp:= `c`(v2) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L54a216.  v0:= temp @kind object;
  #L54a218.  call temp:= `c`(v3, v0) @signature `Lp5/o$a;.c:([B)Lp5/o$a;` @kind virtual;
  #L54a21e.  v3:= temp @kind object;
  #L54a220.  call temp:= `a`(v3) @signature `Lp5/o$a;.a:()Lp5/o;` @kind virtual;
  #L54a226.  v3:= temp @kind object;
  #L54a228.  return v3 @kind object;
}
procedure `java.lang.String` `toString`(`p5.o` v3 @kind this) @signature `Lp5/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L54a188.  v0:= 3I;
  #L54a18a.  v0:= new `java.lang.Object`[v0];
  #L54a18e.  call temp:= `b`(v3) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L54a194.  v1:= temp @kind object;
  #L54a196.  v2:= 0I;
  #L54a198.  v0[v2]:= v1 @kind object;
  #L54a19c.  call temp:= `d`(v3) @signature `Lp5/o;.d:()Ln5/d;` @kind virtual;
  #L54a1a2.  v1:= temp @kind object;
  #L54a1a4.  v2:= 1I;
  #L54a1a6.  v0[v2]:= v1 @kind object;
  #L54a1aa.  call temp:= `c`(v3) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L54a1b0.  v1:= temp @kind object;
  #L54a1b2.  v2:= 2I;
  #L54a1b4.  if v1 != 0 then goto L54a1be;
  #L54a1b8.  v1:= "" @kind object;
  #L54a1bc.  goto L54a1ce;
  #L54a1be.  call temp:= `c`(v3) @signature `Lp5/o;.c:()[B` @kind virtual;
  #L54a1c4.  v1:= temp @kind object;
  #L54a1c6.  call temp:= `encodeToString`(v1, v2) @signature `Landroid/util/Base64;.encodeToString:([BI)Ljava/lang/String;` @kind static;
  #L54a1cc.  v1:= temp @kind object;
  #L54a1ce.  v0[v2]:= v1 @kind object;
  #L54a1d2.  v1:= "TransportContext(%s, %s, %s)" @kind object;
  #L54a1d6.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L54a1dc.  v0:= temp @kind object;
  #L54a1de.  return v0 @kind object;
}
