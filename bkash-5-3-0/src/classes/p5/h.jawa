record `p5.h` @kind class @AccessFlag PUBLIC_FINAL {
  `n5.b` `p5.h.a` @AccessFlag PRIVATE_FINAL;
  `byte`[] `p5.h.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`p5.h` v1 @kind this, `n5.b` v2 @kind object, `byte`[] v3 @kind object) @signature `Lp5/h;.<init>:(Ln5/b;[B)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L549c68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L549c6e.  v0:= "encoding is null" @kind object;
  #L549c72.  call temp:= `requireNonNull`(v2, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L549c78.  v0:= "bytes is null" @kind object;
  #L549c7c.  call temp:= `requireNonNull`(v3, v0) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L549c82.  v1.`p5.h.a` @type ^`n5.b` := v2 @kind object;
  #L549c86.  v1.`p5.h.b` @type ^`byte`[] := v3 @kind object;
  #L549c8a.  return @kind void;
}
procedure `byte`[] `a`(`p5.h` v1 @kind this) @signature `Lp5/h;.a:()[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L549bbc.  v0:= v1.`p5.h.b` @type ^`byte`[] @kind object;
  #L549bc0.  return v0 @kind object;
}
procedure `n5.b` `b`(`p5.h` v1 @kind this) @signature `Lp5/h;.b:()Ln5/b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L549c50.  v0:= v1.`p5.h.a` @type ^`n5.b` @kind object;
  #L549c54.  return v0 @kind object;
}
procedure `boolean` `equals`(`p5.h` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lp5/h;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L549b6c.  if v3 != v4 then goto L549b74;
  #L549b70.  v4:= 1I;
  #L549b72.  return v4;
  #L549b74.  v0:= instanceof @variable v4 @type ^`p5.h` @kind boolean;
  #L549b78.  v1:= 0I;
  #L549b7a.  if v0 != 0 then goto L549b80;
  #L549b7e.  return v1;
  #L549b80.  v4:= (`p5.h`) v4 @kind object;
  #L549b84.  v0:= v3.`p5.h.a` @type ^`n5.b` @kind object;
  #L549b88.  v2:= v4.`p5.h.a` @type ^`n5.b` @kind object;
  #L549b8c.  call temp:= `equals`(v0, v2) @signature `Ln5/b;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L549b92.  v0:= temp;
  #L549b94.  if v0 != 0 then goto L549b9a;
  #L549b98.  return v1;
  #L549b9a.  v0:= v3.`p5.h.b` @type ^`byte`[] @kind object;
  #L549b9e.  v4:= v4.`p5.h.b` @type ^`byte`[] @kind object;
  #L549ba2.  call temp:= `equals`(v0, v4) @signature `Ljava/util/Arrays;.equals:([B[B)Z` @kind static;
  #L549ba8.  v4:= temp;
  #L549baa.  return v4;
}
procedure `int` `hashCode`(`p5.h` v2 @kind this) @signature `Lp5/h;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L549bd4.  v0:= v2.`p5.h.a` @type ^`n5.b` @kind object;
  #L549bd8.  call temp:= `hashCode`(v0) @signature `Ln5/b;.hashCode:()I` @kind virtual;
  #L549bde.  v0:= temp;
  #L549be0.  v1:= 1000003I;
  #L549be6.  v0:= v0 ^~ v1 @kind int;
  #L549be8.  v0:= v0 * v1 @kind int;
  #L549bec.  v1:= v2.`p5.h.b` @type ^`byte`[] @kind object;
  #L549bf0.  call temp:= `hashCode`(v1) @signature `Ljava/util/Arrays;.hashCode:([B)I` @kind static;
  #L549bf6.  v1:= temp;
  #L549bf8.  v0:= v0 ^~ v1 @kind int;
  #L549bfa.  return v0;
}
procedure `java.lang.String` `toString`(`p5.h` v2 @kind this) @signature `Lp5/h;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L549c0c.  v0:= new `java.lang.StringBuilder`;
  #L549c10.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L549c16.  v1:= "EncodedPayload{encoding=" @kind object;
  #L549c1a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c20.  v1:= v2.`p5.h.a` @type ^`n5.b` @kind object;
  #L549c24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c2a.  v1:= ", bytes=[...]}" @kind object;
  #L549c2e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L549c34.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L549c3a.  v0:= temp @kind object;
  #L549c3c.  return v0 @kind object;
}
