record `j5.a` @kind class @AccessFlag PUBLIC {
}
procedure `float` `a`(`com.facebook.imagepipeline.common.RotationOptions` v0 @kind object, `x4.d` v1 @kind object, `d5.e` v2 @kind object) @signature `Lj5/a;.a:(Lcom/facebook/imagepipeline/common/RotationOptions;Lx4/d;Ld5/e;)F` @AccessFlag PUBLIC_STATIC {
    temp;

  #L5144cc.  call temp:= `l0`(v2) @signature `Ld5/e;.l0:(Ld5/e;)Z` @kind static;
  #L5144d2.  v0:= temp;
  #L5144d4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L5144da.  v0:= temp @kind object;
  #L5144dc.  call `b`(v0) @signature `Lh3/j;.b:(Ljava/lang/Boolean;)V` @kind static;
  #L5144e2.  v0:= 1.0F;
  #L5144e6.  return v0;
}
procedure `int` `b`(`com.facebook.imagepipeline.common.RotationOptions` v2 @kind object, `x4.d` v3 @kind object, `d5.e` v4 @kind object, `int` v5 ) @signature `Lj5/a;.b:(Lcom/facebook/imagepipeline/common/RotationOptions;Lx4/d;Ld5/e;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5144f8.  call temp:= `l0`(v4) @signature `Ld5/e;.l0:(Ld5/e;)Z` @kind static;
  #L5144fe.  v0:= temp;
  #L514500.  if v0 != 0 then goto L514508;
  #L514504.  v2:= 1I;
  #L514506.  return v2;
  #L514508.  call temp:= `a`(v2, v3, v4) @signature `Lj5/a;.a:(Lcom/facebook/imagepipeline/common/RotationOptions;Lx4/d;Ld5/e;)F` @kind static;
  #L51450e.  v2:= temp;
  #L514510.  call temp:= `Q`(v4) @signature `Ld5/e;.Q:()Lq4/c;` @kind virtual;
  #L514516.  v3:= temp @kind object;
  #L514518.  v0:= `@@q4.b.a` @type ^`q4.c` @kind object;
  #L51451c.  if v3 != v0 then goto L51452a;
  #L514520.  call temp:= `e`(v2) @signature `Lj5/a;.e:(F)I` @kind static;
  #L514526.  v2:= temp;
  #L514528.  goto L514532;
  #L51452a.  call temp:= `d`(v2) @signature `Lj5/a;.d:(F)I` @kind static;
  #L514530.  v2:= temp;
  #L514532.  call temp:= `J`(v4) @signature `Ld5/e;.J:()I` @kind virtual;
  #L514538.  v3:= temp;
  #L51453a.  call temp:= `d0`(v4) @signature `Ld5/e;.d0:()I` @kind virtual;
  #L514540.  v0:= temp;
  #L514542.  call temp:= `max`(v3, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L514548.  v3:= temp;
  #L51454a.  v5:= (`float`) v5 @kind i2f;
  #L51454c.  v0:= v3 / v2 @kind int;
  #L514550.  v0:= (`float`) v0 @kind i2f;
  #L514552.  v0:= fcmpl(v0, v5);
  #L514556.  if v0 <= 0 then goto L514576;
  #L51455a.  call temp:= `Q`(v4) @signature `Ld5/e;.Q:()Lq4/c;` @kind virtual;
  #L514560.  v0:= temp @kind object;
  #L514562.  v1:= `@@q4.b.a` @type ^`q4.c` @kind object;
  #L514566.  if v0 != v1 then goto L514570;
  #L51456a.  v2:= v2 * 2;
  #L51456e.  goto L51454c;
  #L514570.  v2:= v2 + 1;
  #L514574.  goto L51454c;
  #L514576.  return v2;
}
procedure `int` `c`(`d5.e` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lj5/a;.c:(Ld5/e;II)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L514588.  call temp:= `Z`(v2) @signature `Ld5/e;.Z:()I` @kind virtual;
  #L51458e.  v0:= temp;
  #L514590.  call temp:= `d0`(v2) @signature `Ld5/e;.d0:()I` @kind virtual;
  #L514596.  v1:= temp;
  #L514598.  call temp:= `J`(v2) @signature `Ld5/e;.J:()I` @kind virtual;
  #L51459e.  v2:= temp;
  #L5145a0.  v1:= v1 * v2 @kind int;
  #L5145a4.  v1:= v1 * v3 @kind int;
  #L5145a8.  v2:= v1 / v0 @kind int;
  #L5145ac.  v2:= v2 / v0 @kind int;
  #L5145ae.  if v2 <= v4 then goto L5145b8;
  #L5145b2.  v0:= v0 * 2;
  #L5145b6.  goto L5145a8;
  #L5145b8.  return v0;
}
procedure `int` `d`(`float` v8 ) @signature `Lj5/a;.d:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5145cc.  v0:= 1I;
  #L5145ce.  v1:= 1059760811I;
  #L5145d4.  v1:= fcmpl(v8, v1);
  #L5145d8.  if v1 <= 0 then goto L5145de;
  #L5145dc.  return v0;
  #L5145de.  v1:= 2I;
  #L5145e0.  v2:= (`double`) v1 @kind i2d;
  #L5145e2.  v4:= 2.0D;
  #L5145e6.  call temp:= `pow`(v2, v4) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L5145ec.  v4:= temp @kind wide;
  #L5145ee.  v4:= v4 - v2 @kind double;
  #L5145f0.  v6:= 1.0D;
  #L5145f4.  v4:= v6 / v4 @kind double;
  #L5145f8.  v6:= v6 / v2 @kind double;
  #L5145fa.  v2:= 0.3333333432674408D;
  #L514604.  v4:= v4 * v2 @kind double;
  #L514608.  v6:= v6 + v4 @kind double;
  #L51460a.  v2:= (`double`) v8 @kind f2d;
  #L51460c.  v4:= dcmpg(v6, v2);
  #L514610.  if v4 > 0 then goto L514618;
  #L514614.  v1:= v1 - v0 @kind int;
  #L514616.  return v1;
  #L514618.  v1:= v1 + 1;
  #L51461c.  goto L5145e0;
}
procedure `int` `e`(`float` v7 ) @signature `Lj5/a;.e:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L514630.  v0:= 1059760811I;
  #L514636.  v0:= fcmpl(v7, v0);
  #L51463a.  if v0 <= 0 then goto L514642;
  #L51463e.  v7:= 1I;
  #L514640.  return v7;
  #L514642.  v0:= 2I;
  #L514644.  v1:= 1.0D;
  #L514648.  v3:= v0 * 2;
  #L51464c.  v4:= (`double`) v3 @kind i2d;
  #L51464e.  v1:= v1 / v4 @kind double;
  #L514650.  v4:= 0.3333333432674408D;
  #L51465a.  v4:= v4 * v1 @kind double;
  #L51465e.  v1:= v1 + v4 @kind double;
  #L514660.  v4:= (`double`) v7 @kind f2d;
  #L514662.  v6:= dcmpg(v1, v4);
  #L514666.  if v6 > 0 then goto L51466c;
  #L51466a.  return v0;
  #L51466c.  v0:= v3;
  #L51466e.  goto L514644;
}
