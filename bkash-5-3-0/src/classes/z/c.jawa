record `z.c` @kind class @AccessFlag PUBLIC {
  `int` `z.c.a` @AccessFlag PRIVATE;
  `int` `z.c.b` @AccessFlag PRIVATE;
  `int` `z.c.c` @AccessFlag PRIVATE;
  `float`[] `z.c.d` @AccessFlag PRIVATE;
  `float`[] `z.c.e` @AccessFlag PRIVATE;
  `float`[] `z.c.f` @AccessFlag PRIVATE;
  `float`[] `z.c.g` @AccessFlag PRIVATE;
  `int`[] `z.c.h` @AccessFlag PRIVATE;
  `int`[] `z.c.i` @AccessFlag PRIVATE;
  `int`[] `z.c.j` @AccessFlag PRIVATE;
  `int` `z.c.k` @AccessFlag PRIVATE;
  `android.view.VelocityTracker` `z.c.l` @AccessFlag PRIVATE;
  `float` `z.c.m` @AccessFlag PRIVATE;
  `float` `z.c.n` @AccessFlag PRIVATE;
  `int` `z.c.o` @AccessFlag PRIVATE;
  `int` `z.c.p` @AccessFlag PRIVATE;
  `android.widget.OverScroller` `z.c.q` @AccessFlag PRIVATE;
  `z.c$c` `z.c.r` @AccessFlag PRIVATE_FINAL;
  `android.view.View` `z.c.s` @AccessFlag PRIVATE;
  `boolean` `z.c.t` @AccessFlag PRIVATE;
  `android.view.ViewGroup` `z.c.u` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `z.c.v` @AccessFlag PRIVATE_FINAL;
}
global `android.view.animation.Interpolator` `@@z.c.w` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lz/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L57cbd4.  v0:= new `z.c$a`;
  #L57cbd8.  call `<init>`(v0) @signature `Lz/c$a;.<init>:()V` @kind direct;
  #L57cbde.  `@@z.c.w` @type ^`android.view.animation.Interpolator` := v0 @kind object;
  #L57cbe2.  return @kind void;
}
procedure `void` `<init>`(`z.c` v1 @kind this, `android.content.Context` v2 @kind object, `android.view.ViewGroup` v3 @kind object, `z.c$c` v4 @kind object) @signature `Lz/c;.<init>:(Landroid/content/Context;Landroid/view/ViewGroup;Lz/c$c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L57cbf4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L57cbfa.  v0:= -1I;
  #L57cbfc.  v1.`z.c.c` @type ^`int` := v0;
  #L57cc00.  v0:= new `z.c$b`;
  #L57cc04.  call `<init>`(v0, v1) @signature `Lz/c$b;.<init>:(Lz/c;)V` @kind direct;
  #L57cc0a.  v1.`z.c.v` @type ^`java.lang.Runnable` := v0 @kind object;
  #L57cc0e.  if v3 == 0 then goto L57cc9a;
  #L57cc12.  if v4 == 0 then goto L57cc8a;
  #L57cc16.  v1.`z.c.u` @type ^`android.view.ViewGroup` := v3 @kind object;
  #L57cc1a.  v1.`z.c.r` @type ^`z.c$c` := v4 @kind object;
  #L57cc1e.  call temp:= `get`(v2) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L57cc24.  v3:= temp @kind object;
  #L57cc26.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L57cc2c.  v4:= temp @kind object;
  #L57cc2e.  call temp:= `getDisplayMetrics`(v4) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L57cc34.  v4:= temp @kind object;
  #L57cc36.  v4:= v4.`android.util.DisplayMetrics.density` @type ^`float`;
  #L57cc3a.  v0:= 20.0F;
  #L57cc3e.  v4:= v4 * v0 @kind float;
  #L57cc42.  v0:= 0.5F;
  #L57cc46.  v4:= v4 + v0 @kind float;
  #L57cc48.  v4:= (`int`) v4 @kind f2i;
  #L57cc4a.  v1.`z.c.o` @type ^`int` := v4;
  #L57cc4e.  call temp:= `getScaledTouchSlop`(v3) @signature `Landroid/view/ViewConfiguration;.getScaledTouchSlop:()I` @kind virtual;
  #L57cc54.  v4:= temp;
  #L57cc56.  v1.`z.c.b` @type ^`int` := v4;
  #L57cc5a.  call temp:= `getScaledMaximumFlingVelocity`(v3) @signature `Landroid/view/ViewConfiguration;.getScaledMaximumFlingVelocity:()I` @kind virtual;
  #L57cc60.  v4:= temp;
  #L57cc62.  v4:= (`float`) v4 @kind i2f;
  #L57cc64.  v1.`z.c.m` @type ^`float` := v4;
  #L57cc68.  call temp:= `getScaledMinimumFlingVelocity`(v3) @signature `Landroid/view/ViewConfiguration;.getScaledMinimumFlingVelocity:()I` @kind virtual;
  #L57cc6e.  v3:= temp;
  #L57cc70.  v3:= (`float`) v3 @kind i2f;
  #L57cc72.  v1.`z.c.n` @type ^`float` := v3;
  #L57cc76.  v3:= new `android.widget.OverScroller`;
  #L57cc7a.  v4:= `@@z.c.w` @type ^`android.view.animation.Interpolator` @kind object;
  #L57cc7e.  call `<init>`(v3, v2, v4) @signature `Landroid/widget/OverScroller;.<init>:(Landroid/content/Context;Landroid/view/animation/Interpolator;)V` @kind direct;
  #L57cc84.  v1.`z.c.q` @type ^`android.widget.OverScroller` := v3 @kind object;
  #L57cc88.  return @kind void;
  #L57cc8a.  v2:= new `java.lang.IllegalArgumentException`;
  #L57cc8e.  v3:= "Callback may not be null" @kind object;
  #L57cc92.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L57cc98.  throw v2;
  #L57cc9a.  v2:= new `java.lang.IllegalArgumentException`;
  #L57cc9e.  v3:= "Parent view may not be null" @kind object;
  #L57cca2.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L57cca8.  throw v2;
}
procedure `boolean` `D`(`z.c` v2 @kind this, `int` v3 ) @signature `Lz/c;.D:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57c500.  call temp:= `C`(v2, v3) @signature `Lz/c;.C:(I)Z` @kind virtual;
  #L57c506.  v0:= temp;
  #L57c508.  if v0 != 0 then goto L57c548;
  #L57c50c.  v0:= new `java.lang.StringBuilder`;
  #L57c510.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L57c516.  v1:= "Ignoring pointerId=" @kind object;
  #L57c51a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57c520.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L57c526.  v3:= " because ACTION_DOWN was not received " @kind object;
  #L57c52a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57c530.  v3:= "for this pointer before ACTION_MOVE. It likely happened because " @kind object;
  #L57c534.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57c53a.  v3:= " ViewDragHelper did not receive all the events in the event stream." @kind object;
  #L57c53e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57c544.  v3:= 0I;
  #L57c546.  return v3;
  #L57c548.  v3:= 1I;
  #L57c54a.  return v3;
}
procedure `void` `G`(`z.c` v4 @kind this) @signature `Lz/c;.G:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L57d348.  v0:= v4.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57d34c.  v1:= v4.`z.c.m` @type ^`float`;
  #L57d350.  v2:= 1000I;
  #L57d354.  call `computeCurrentVelocity`(v0, v2, v1) @signature `Landroid/view/VelocityTracker;.computeCurrentVelocity:(IF)V` @kind virtual;
  #L57d35a.  v0:= v4.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57d35e.  v1:= v4.`z.c.c` @type ^`int`;
  #L57d362.  call temp:= `getXVelocity`(v0, v1) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L57d368.  v0:= temp;
  #L57d36a.  v1:= v4.`z.c.n` @type ^`float`;
  #L57d36e.  v2:= v4.`z.c.m` @type ^`float`;
  #L57d372.  call temp:= `h`(v4, v0, v1, v2) @signature `Lz/c;.h:(FFF)F` @kind direct;
  #L57d378.  v0:= temp;
  #L57d37a.  v1:= v4.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57d37e.  v2:= v4.`z.c.c` @type ^`int`;
  #L57d382.  call temp:= `getYVelocity`(v1, v2) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L57d388.  v1:= temp;
  #L57d38a.  v2:= v4.`z.c.n` @type ^`float`;
  #L57d38e.  v3:= v4.`z.c.m` @type ^`float`;
  #L57d392.  call temp:= `h`(v4, v1, v2, v3) @signature `Lz/c;.h:(FFF)F` @kind direct;
  #L57d398.  v1:= temp;
  #L57d39a.  call `q`(v4, v0, v1) @signature `Lz/c;.q:(FF)V` @kind direct;
  #L57d3a0.  return @kind void;
}
procedure `void` `H`(`z.c` v2 @kind this, `float` v3 , `float` v4 , `int` v5 ) @signature `Lz/c;.H:(FFI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57d3b4.  v0:= 1I;
  #L57d3b6.  call temp:= `d`(v2, v3, v4, v5, v0) @signature `Lz/c;.d:(FFII)Z` @kind direct;
  #L57d3bc.  v0:= temp;
  #L57d3be.  v1:= 4I;
  #L57d3c0.  call temp:= `d`(v2, v4, v3, v5, v1) @signature `Lz/c;.d:(FFII)Z` @kind direct;
  #L57d3c6.  v1:= temp;
  #L57d3c8.  if v1 == 0 then goto L57d3d0;
  #L57d3cc.  v0:= v0 ^| 4;
  #L57d3d0.  v1:= 2I;
  #L57d3d2.  call temp:= `d`(v2, v3, v4, v5, v1) @signature `Lz/c;.d:(FFII)Z` @kind direct;
  #L57d3d8.  v1:= temp;
  #L57d3da.  if v1 == 0 then goto L57d3e2;
  #L57d3de.  v0:= v0 ^| 2;
  #L57d3e2.  v1:= 8I;
  #L57d3e6.  call temp:= `d`(v2, v4, v3, v5, v1) @signature `Lz/c;.d:(FFII)Z` @kind direct;
  #L57d3ec.  v3:= temp;
  #L57d3ee.  if v3 == 0 then goto L57d3f6;
  #L57d3f2.  v0:= v0 ^| 8;
  #L57d3f6.  if v0 == 0 then goto L57d412;
  #L57d3fa.  v3:= v2.`z.c.i` @type ^`int`[] @kind object;
  #L57d3fe.  v4:= v3[v5];
  #L57d402.  v4:= v4 ^| v0 @kind int;
  #L57d404.  v3[v5]:= v4;
  #L57d408.  v3:= v2.`z.c.r` @type ^`z.c$c` @kind object;
  #L57d40c.  call `f`(v3, v0, v5) @signature `Lz/c$c;.f:(II)V` @kind virtual;
  #L57d412.  return @kind void;
}
procedure `void` `I`(`z.c` v2 @kind this, `float` v3 , `float` v4 , `int` v5 ) @signature `Lz/c;.I:(FFI)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57d424.  call `t`(v2, v5) @signature `Lz/c;.t:(I)V` @kind direct;
  #L57d42a.  v0:= v2.`z.c.d` @type ^`float`[] @kind object;
  #L57d42e.  v1:= v2.`z.c.f` @type ^`float`[] @kind object;
  #L57d432.  v1[v5]:= v3;
  #L57d436.  v0[v5]:= v3;
  #L57d43a.  v0:= v2.`z.c.e` @type ^`float`[] @kind object;
  #L57d43e.  v1:= v2.`z.c.g` @type ^`float`[] @kind object;
  #L57d442.  v1[v5]:= v4;
  #L57d446.  v0[v5]:= v4;
  #L57d44a.  v0:= v2.`z.c.h` @type ^`int`[] @kind object;
  #L57d44e.  v3:= (`int`) v3 @kind f2i;
  #L57d450.  v4:= (`int`) v4 @kind f2i;
  #L57d452.  call temp:= `y`(v2, v3, v4) @signature `Lz/c;.y:(II)I` @kind direct;
  #L57d458.  v3:= temp;
  #L57d45a.  v0[v5]:= v3;
  #L57d45e.  v3:= v2.`z.c.k` @type ^`int`;
  #L57d462.  v4:= 1I;
  #L57d464.  v4:= v4 ^< v5 @kind int;
  #L57d466.  v3:= v3 ^| v4 @kind int;
  #L57d468.  v2.`z.c.k` @type ^`int` := v3;
  #L57d46c.  return @kind void;
}
procedure `void` `J`(`z.c` v6 @kind this, `android.view.MotionEvent` v7 @kind object) @signature `Lz/c;.J:(Landroid/view/MotionEvent;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L57d480.  call temp:= `getPointerCount`(v7) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L57d486.  v0:= temp;
  #L57d488.  v1:= 0I;
  #L57d48a.  if v1 >= v0 then goto L57d4ca;
  #L57d48e.  call temp:= `getPointerId`(v7, v1) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d494.  v2:= temp;
  #L57d496.  call temp:= `D`(v6, v2) @signature `Lz/c;.D:(I)Z` @kind direct;
  #L57d49c.  v3:= temp;
  #L57d49e.  if v3 != 0 then goto L57d4a4;
  #L57d4a2.  goto L57d4c4;
  #L57d4a4.  call temp:= `getX`(v7, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57d4aa.  v3:= temp;
  #L57d4ac.  call temp:= `getY`(v7, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57d4b2.  v4:= temp;
  #L57d4b4.  v5:= v6.`z.c.f` @type ^`float`[] @kind object;
  #L57d4b8.  v5[v2]:= v3;
  #L57d4bc.  v3:= v6.`z.c.g` @type ^`float`[] @kind object;
  #L57d4c0.  v3[v2]:= v4;
  #L57d4c4.  v1:= v1 + 1;
  #L57d4c8.  goto L57d48a;
  #L57d4ca.  return @kind void;
}
procedure `boolean` `d`(`z.c` v3 @kind this, `float` v4 , `float` v5 , `int` v6 , `int` v7 ) @signature `Lz/c;.d:(FFII)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L57c0e4.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c0ea.  v4:= temp;
  #L57c0ec.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c0f2.  v5:= temp;
  #L57c0f4.  v0:= v3.`z.c.h` @type ^`int`[] @kind object;
  #L57c0f8.  v0:= v0[v6];
  #L57c0fc.  v0:= v0 ^& v7 @kind int;
  #L57c0fe.  v1:= 0I;
  #L57c100.  if v0 != v7 then goto L57c192;
  #L57c104.  v0:= v3.`z.c.p` @type ^`int`;
  #L57c108.  v0:= v0 ^& v7 @kind int;
  #L57c10a.  if v0 == 0 then goto L57c192;
  #L57c10e.  v0:= v3.`z.c.j` @type ^`int`[] @kind object;
  #L57c112.  v0:= v0[v6];
  #L57c116.  v0:= v0 ^& v7 @kind int;
  #L57c118.  if v0 == v7 then goto L57c192;
  #L57c11c.  v0:= v3.`z.c.i` @type ^`int`[] @kind object;
  #L57c120.  v0:= v0[v6];
  #L57c124.  v0:= v0 ^& v7 @kind int;
  #L57c126.  if v0 == v7 then goto L57c192;
  #L57c12a.  v0:= v3.`z.c.b` @type ^`int`;
  #L57c12e.  v2:= (`float`) v0 @kind i2f;
  #L57c130.  v2:= fcmpg(v4, v2);
  #L57c134.  if v2 > 0 then goto L57c144;
  #L57c138.  v0:= (`float`) v0 @kind i2f;
  #L57c13a.  v0:= fcmpg(v5, v0);
  #L57c13e.  if v0 > 0 then goto L57c144;
  #L57c142.  goto L57c192;
  #L57c144.  v0:= 0.5F;
  #L57c148.  v5:= v5 * v0 @kind float;
  #L57c14c.  v5:= fcmpg(v4, v5);
  #L57c150.  if v5 >= 0 then goto L57c174;
  #L57c154.  v5:= v3.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c158.  call temp:= `g`(v5, v7) @signature `Lz/c$c;.g:(I)Z` @kind virtual;
  #L57c15e.  v5:= temp;
  #L57c160.  if v5 == 0 then goto L57c174;
  #L57c164.  v4:= v3.`z.c.j` @type ^`int`[] @kind object;
  #L57c168.  v5:= v4[v6];
  #L57c16c.  v5:= v5 ^| v7 @kind int;
  #L57c16e.  v4[v6]:= v5;
  #L57c172.  return v1;
  #L57c174.  v5:= v3.`z.c.i` @type ^`int`[] @kind object;
  #L57c178.  v5:= v5[v6];
  #L57c17c.  v5:= v5 ^& v7 @kind int;
  #L57c17e.  if v5 != 0 then goto L57c192;
  #L57c182.  v5:= v3.`z.c.b` @type ^`int`;
  #L57c186.  v5:= (`float`) v5 @kind i2f;
  #L57c188.  v4:= fcmpl(v4, v5);
  #L57c18c.  if v4 <= 0 then goto L57c192;
  #L57c190.  v1:= 1I;
  #L57c192.  return v1;
}
procedure `boolean` `g`(`z.c` v4 @kind this, `android.view.View` v5 @kind object, `float` v6 , `float` v7 ) @signature `Lz/c;.g:(Landroid/view/View;FF)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L57c1a4.  v0:= 0I;
  #L57c1a6.  if v5 != 0 then goto L57c1ac;
  #L57c1aa.  return v0;
  #L57c1ac.  v1:= v4.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c1b0.  call temp:= `d`(v1, v5) @signature `Lz/c$c;.d:(Landroid/view/View;)I` @kind virtual;
  #L57c1b6.  v1:= temp;
  #L57c1b8.  v2:= 1I;
  #L57c1ba.  if v1 <= 0 then goto L57c1c2;
  #L57c1be.  v1:= 1I;
  #L57c1c0.  goto L57c1c4;
  #L57c1c2.  v1:= 0I;
  #L57c1c4.  v3:= v4.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c1c8.  call temp:= `e`(v3, v5) @signature `Lz/c$c;.e:(Landroid/view/View;)I` @kind virtual;
  #L57c1ce.  v5:= temp;
  #L57c1d0.  if v5 <= 0 then goto L57c1d8;
  #L57c1d4.  v5:= 1I;
  #L57c1d6.  goto L57c1da;
  #L57c1d8.  v5:= 0I;
  #L57c1da.  if v1 == 0 then goto L57c202;
  #L57c1de.  if v5 == 0 then goto L57c202;
  #L57c1e2.  v6:= v6 * v6 @kind float;
  #L57c1e6.  v7:= v7 * v7 @kind float;
  #L57c1ea.  v6:= v6 + v7 @kind float;
  #L57c1ec.  v5:= v4.`z.c.b` @type ^`int`;
  #L57c1f0.  v5:= v5 * v5 @kind int;
  #L57c1f4.  v5:= (`float`) v5 @kind i2f;
  #L57c1f6.  v5:= fcmpl(v6, v5);
  #L57c1fa.  if v5 <= 0 then goto L57c200;
  #L57c1fe.  v0:= 1I;
  #L57c200.  return v0;
  #L57c202.  if v1 == 0 then goto L57c220;
  #L57c206.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c20c.  v5:= temp;
  #L57c20e.  v6:= v4.`z.c.b` @type ^`int`;
  #L57c212.  v6:= (`float`) v6 @kind i2f;
  #L57c214.  v5:= fcmpl(v5, v6);
  #L57c218.  if v5 <= 0 then goto L57c21e;
  #L57c21c.  v0:= 1I;
  #L57c21e.  return v0;
  #L57c220.  if v5 == 0 then goto L57c23c;
  #L57c224.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c22a.  v5:= temp;
  #L57c22c.  v6:= v4.`z.c.b` @type ^`int`;
  #L57c230.  v6:= (`float`) v6 @kind i2f;
  #L57c232.  v5:= fcmpl(v5, v6);
  #L57c236.  if v5 <= 0 then goto L57c23c;
  #L57c23a.  v0:= 1I;
  #L57c23c.  return v0;
}
procedure `float` `h`(`z.c` v2 @kind this, `float` v3 , `float` v4 , `float` v5 ) @signature `Lz/c;.h:(FFF)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57c910.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c916.  v0:= temp;
  #L57c918.  v1:= 0I;
  #L57c91a.  v4:= fcmpg(v0, v4);
  #L57c91e.  if v4 >= 0 then goto L57c924;
  #L57c922.  return v1;
  #L57c924.  v4:= fcmpl(v0, v5);
  #L57c928.  if v4 <= 0 then goto L57c93a;
  #L57c92c.  v3:= fcmpl(v3, v1);
  #L57c930.  if v3 <= 0 then goto L57c936;
  #L57c934.  goto L57c938;
  #L57c936.  v5:= -v5 @kind float;
  #L57c938.  return v5;
  #L57c93a.  return v3;
}
procedure `int` `i`(`z.c` v1 @kind this, `int` v2 , `int` v3 , `int` v4 ) @signature `Lz/c;.i:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L57c97c.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57c982.  v0:= temp;
  #L57c984.  if v0 >= v3 then goto L57c98c;
  #L57c988.  v2:= 0I;
  #L57c98a.  return v2;
  #L57c98c.  if v0 <= v4 then goto L57c99a;
  #L57c990.  if v2 <= 0 then goto L57c996;
  #L57c994.  goto L57c998;
  #L57c996.  v4:= -v4 @kind int;
  #L57c998.  return v4;
  #L57c99a.  return v2;
}
procedure `void` `j`(`z.c` v2 @kind this) @signature `Lz/c;.j:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57cde4.  v0:= v2.`z.c.d` @type ^`float`[] @kind object;
  #L57cde8.  if v0 != 0 then goto L57cdee;
  #L57cdec.  return @kind void;
  #L57cdee.  v1:= 0I;
  #L57cdf0.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L57cdf6.  v0:= v2.`z.c.e` @type ^`float`[] @kind object;
  #L57cdfa.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L57ce00.  v0:= v2.`z.c.f` @type ^`float`[] @kind object;
  #L57ce04.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L57ce0a.  v0:= v2.`z.c.g` @type ^`float`[] @kind object;
  #L57ce0e.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L57ce14.  v0:= v2.`z.c.h` @type ^`int`[] @kind object;
  #L57ce18.  v1:= 0I;
  #L57ce1a.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L57ce20.  v0:= v2.`z.c.i` @type ^`int`[] @kind object;
  #L57ce24.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L57ce2a.  v0:= v2.`z.c.j` @type ^`int`[] @kind object;
  #L57ce2e.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L57ce34.  v2.`z.c.k` @type ^`int` := v1;
  #L57ce38.  return @kind void;
}
procedure `void` `k`(`z.c` v2 @kind this, `int` v3 ) @signature `Lz/c;.k:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57ce4c.  v0:= v2.`z.c.d` @type ^`float`[] @kind object;
  #L57ce50.  if v0 == 0 then goto L57ceb0;
  #L57ce54.  call temp:= `C`(v2, v3) @signature `Lz/c;.C:(I)Z` @kind virtual;
  #L57ce5a.  v0:= temp;
  #L57ce5c.  if v0 != 0 then goto L57ce62;
  #L57ce60.  goto L57ceb0;
  #L57ce62.  v0:= v2.`z.c.d` @type ^`float`[] @kind object;
  #L57ce66.  v1:= 0I;
  #L57ce68.  v0[v3]:= v1;
  #L57ce6c.  v0:= v2.`z.c.e` @type ^`float`[] @kind object;
  #L57ce70.  v0[v3]:= v1;
  #L57ce74.  v0:= v2.`z.c.f` @type ^`float`[] @kind object;
  #L57ce78.  v0[v3]:= v1;
  #L57ce7c.  v0:= v2.`z.c.g` @type ^`float`[] @kind object;
  #L57ce80.  v0[v3]:= v1;
  #L57ce84.  v0:= v2.`z.c.h` @type ^`int`[] @kind object;
  #L57ce88.  v1:= 0I;
  #L57ce8a.  v0[v3]:= v1;
  #L57ce8e.  v0:= v2.`z.c.i` @type ^`int`[] @kind object;
  #L57ce92.  v0[v3]:= v1;
  #L57ce96.  v0:= v2.`z.c.j` @type ^`int`[] @kind object;
  #L57ce9a.  v0[v3]:= v1;
  #L57ce9e.  v0:= v2.`z.c.k` @type ^`int`;
  #L57cea2.  v1:= 1I;
  #L57cea4.  v3:= v1 ^< v3 @kind int;
  #L57cea8.  v3:= ~v3 @kind int;
  #L57ceaa.  v3:= v3 ^& v0 @kind int;
  #L57ceac.  v2.`z.c.k` @type ^`int` := v3;
  #L57ceb0.  return @kind void;
}
procedure `int` `l`(`z.c` v3 @kind this, `int` v4 , `int` v5 , `int` v6 ) @signature `Lz/c;.l:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L57c9ac.  if v4 != 0 then goto L57c9b4;
  #L57c9b0.  v4:= 0I;
  #L57c9b2.  return v4;
  #L57c9b4.  v0:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57c9b8.  call temp:= `getWidth`(v0) @signature `Landroid/view/ViewGroup;.getWidth:()I` @kind virtual;
  #L57c9be.  v0:= temp;
  #L57c9c0.  v1:= v0 / 2;
  #L57c9c4.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57c9ca.  v2:= temp;
  #L57c9cc.  v2:= (`float`) v2 @kind i2f;
  #L57c9ce.  v0:= (`float`) v0 @kind i2f;
  #L57c9d0.  v2:= v2 / v0 @kind float;
  #L57c9d2.  v0:= 1.0F;
  #L57c9d6.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L57c9dc.  v2:= temp;
  #L57c9de.  v1:= (`float`) v1 @kind i2f;
  #L57c9e0.  call temp:= `r`(v3, v2) @signature `Lz/c;.r:(F)F` @kind direct;
  #L57c9e6.  v2:= temp;
  #L57c9e8.  v2:= v2 * v1 @kind float;
  #L57c9ec.  v1:= v1 + v2 @kind float;
  #L57c9ee.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57c9f4.  v5:= temp;
  #L57c9f6.  if v5 <= 0 then goto L57ca1c;
  #L57c9fa.  v4:= 1000.0F;
  #L57c9fe.  v5:= (`float`) v5 @kind i2f;
  #L57ca00.  v1:= v1 / v5 @kind float;
  #L57ca02.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57ca08.  v5:= temp;
  #L57ca0a.  v5:= v5 * v4 @kind float;
  #L57ca0e.  call temp:= `round`(v5) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L57ca14.  v4:= temp;
  #L57ca16.  v4:= v4 * 4;
  #L57ca1a.  goto L57ca36;
  #L57ca1c.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57ca22.  v4:= temp;
  #L57ca24.  v4:= (`float`) v4 @kind i2f;
  #L57ca26.  v5:= (`float`) v6 @kind i2f;
  #L57ca28.  v4:= v4 / v5 @kind float;
  #L57ca2a.  v4:= v4 + v0 @kind float;
  #L57ca2c.  v5:= 256.0F;
  #L57ca30.  v4:= v4 * v5 @kind float;
  #L57ca34.  v4:= (`int`) v4 @kind f2i;
  #L57ca36.  v5:= 600I;
  #L57ca3a.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L57ca40.  v4:= temp;
  #L57ca42.  return v4;
}
procedure `int` `m`(`z.c` v6 @kind this, `android.view.View` v7 @kind object, `int` v8 , `int` v9 , `int` v10 , `int` v11 ) @signature `Lz/c;.m:(Landroid/view/View;IIII)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L57ca54.  v0:= v6.`z.c.n` @type ^`float`;
  #L57ca58.  v0:= (`int`) v0 @kind f2i;
  #L57ca5a.  v1:= v6.`z.c.m` @type ^`float`;
  #L57ca5e.  v1:= (`int`) v1 @kind f2i;
  #L57ca60.  call temp:= `i`(v6, v10, v0, v1) @signature `Lz/c;.i:(III)I` @kind direct;
  #L57ca66.  v10:= temp;
  #L57ca68.  v0:= v6.`z.c.n` @type ^`float`;
  #L57ca6c.  v0:= (`int`) v0 @kind f2i;
  #L57ca6e.  v1:= v6.`z.c.m` @type ^`float`;
  #L57ca72.  v1:= (`int`) v1 @kind f2i;
  #L57ca74.  call temp:= `i`(v6, v11, v0, v1) @signature `Lz/c;.i:(III)I` @kind direct;
  #L57ca7a.  v11:= temp;
  #L57ca7c.  call temp:= `abs`(v8) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57ca82.  v0:= temp;
  #L57ca84.  call temp:= `abs`(v9) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57ca8a.  v1:= temp;
  #L57ca8c.  call temp:= `abs`(v10) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57ca92.  v2:= temp;
  #L57ca94.  call temp:= `abs`(v11) @signature `Ljava/lang/Math;.abs:(I)I` @kind static;
  #L57ca9a.  v3:= temp;
  #L57ca9c.  v4:= v2 + v3 @kind int;
  #L57caa0.  v5:= v0 + v1 @kind int;
  #L57caa4.  if v10 == 0 then goto L57caae;
  #L57caa8.  v0:= (`float`) v2 @kind i2f;
  #L57caaa.  v2:= (`float`) v4 @kind i2f;
  #L57caac.  goto L57cab2;
  #L57caae.  v0:= (`float`) v0 @kind i2f;
  #L57cab0.  v2:= (`float`) v5 @kind i2f;
  #L57cab2.  v0:= v0 / v2 @kind float;
  #L57cab4.  if v11 == 0 then goto L57cabe;
  #L57cab8.  v1:= (`float`) v3 @kind i2f;
  #L57caba.  v2:= (`float`) v4 @kind i2f;
  #L57cabc.  goto L57cac2;
  #L57cabe.  v1:= (`float`) v1 @kind i2f;
  #L57cac0.  v2:= (`float`) v5 @kind i2f;
  #L57cac2.  v1:= v1 / v2 @kind float;
  #L57cac4.  v2:= v6.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cac8.  call temp:= `d`(v2, v7) @signature `Lz/c$c;.d:(Landroid/view/View;)I` @kind virtual;
  #L57cace.  v2:= temp;
  #L57cad0.  call temp:= `l`(v6, v8, v10, v2) @signature `Lz/c;.l:(III)I` @kind direct;
  #L57cad6.  v8:= temp;
  #L57cad8.  v10:= v6.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cadc.  call temp:= `e`(v10, v7) @signature `Lz/c$c;.e:(Landroid/view/View;)I` @kind virtual;
  #L57cae2.  v7:= temp;
  #L57cae4.  call temp:= `l`(v6, v9, v11, v7) @signature `Lz/c;.l:(III)I` @kind direct;
  #L57caea.  v7:= temp;
  #L57caec.  v8:= (`float`) v8 @kind i2f;
  #L57caee.  v8:= v8 * v0 @kind float;
  #L57caf2.  v7:= (`float`) v7 @kind i2f;
  #L57caf4.  v7:= v7 * v1 @kind float;
  #L57caf8.  v8:= v8 + v7 @kind float;
  #L57cafa.  v7:= (`int`) v8 @kind f2i;
  #L57cafc.  return v7;
}
procedure `z.c` `o`(`android.view.ViewGroup` v1 @kind object, `float` v2 , `z.c$c` v3 @kind object) @signature `Lz/c;.o:(Landroid/view/ViewGroup;FLz/c$c;)Lz/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L57d550.  call temp:= `p`(v1, v3) @signature `Lz/c;.p:(Landroid/view/ViewGroup;Lz/c$c;)Lz/c;` @kind static;
  #L57d556.  v1:= temp @kind object;
  #L57d558.  v3:= v1.`z.c.b` @type ^`int`;
  #L57d55c.  v3:= (`float`) v3 @kind i2f;
  #L57d55e.  v0:= 1.0F;
  #L57d562.  v0:= v0 / v2 @kind float;
  #L57d564.  v3:= v3 * v0 @kind float;
  #L57d568.  v2:= (`int`) v3 @kind f2i;
  #L57d56a.  v1.`z.c.b` @type ^`int` := v2;
  #L57d56e.  return v1 @kind object;
}
procedure `z.c` `p`(`android.view.ViewGroup` v2 @kind object, `z.c$c` v3 @kind object) @signature `Lz/c;.p:(Landroid/view/ViewGroup;Lz/c$c;)Lz/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L57d580.  v0:= new `z.c`;
  #L57d584.  call temp:= `getContext`(v2) @signature `Landroid/view/ViewGroup;.getContext:()Landroid/content/Context;` @kind virtual;
  #L57d58a.  v1:= temp @kind object;
  #L57d58c.  call `<init>`(v0, v1, v2, v3) @signature `Lz/c;.<init>:(Landroid/content/Context;Landroid/view/ViewGroup;Lz/c$c;)V` @kind direct;
  #L57d592.  return v0 @kind object;
}
procedure `void` `q`(`z.c` v3 @kind this, `float` v4 , `float` v5 ) @signature `Lz/c;.q:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L57cec4.  v0:= 1I;
  #L57cec6.  v3.`z.c.t` @type ^`boolean` := v0 @kind boolean;
  #L57ceca.  v1:= v3.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cece.  v2:= v3.`z.c.s` @type ^`android.view.View` @kind object;
  #L57ced2.  call `l`(v1, v2, v4, v5) @signature `Lz/c$c;.l:(Landroid/view/View;FF)V` @kind virtual;
  #L57ced8.  v4:= 0I;
  #L57ceda.  v3.`z.c.t` @type ^`boolean` := v4 @kind boolean;
  #L57cede.  v5:= v3.`z.c.a` @type ^`int`;
  #L57cee2.  if v5 != v0 then goto L57ceec;
  #L57cee6.  call `K`(v3, v4) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57ceec.  return @kind void;
}
procedure `float` `r`(`z.c` v2 @kind this, `float` v3 ) @signature `Lz/c;.r:(F)F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L57c94c.  v0:= 0.5F;
  #L57c950.  v3:= v3 - v0 @kind float;
  #L57c952.  v0:= 1055999547I;
  #L57c958.  v3:= v3 * v0 @kind float;
  #L57c95c.  v0:= (`double`) v3 @kind f2d;
  #L57c95e.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L57c964.  v0:= temp @kind wide;
  #L57c966.  v3:= (`float`) v0 @kind d2f;
  #L57c968.  return v3;
}
procedure `void` `s`(`z.c` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lz/c;.s:(IIII)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L57cf00.  v0:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf04.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57cf0a.  v0:= temp;
  #L57cf0c.  v1:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf10.  call temp:= `getTop`(v1) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57cf16.  v1:= temp;
  #L57cf18.  if v13 == 0 then goto L57cf3a;
  #L57cf1c.  v2:= v10.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cf20.  v3:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf24.  call temp:= `a`(v2, v3, v11, v13) @signature `Lz/c$c;.a:(Landroid/view/View;II)I` @kind virtual;
  #L57cf2a.  v11:= temp;
  #L57cf2c.  v2:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf30.  v3:= v11 - v0 @kind int;
  #L57cf34.  call `c0`(v2, v3) @signature `Landroidx/core/view/ViewCompat;.c0:(Landroid/view/View;I)V` @kind static;
  #L57cf3a.  v6:= v11;
  #L57cf3c.  if v14 == 0 then goto L57cf5e;
  #L57cf40.  v11:= v10.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cf44.  v2:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf48.  call temp:= `b`(v11, v2, v12, v14) @signature `Lz/c$c;.b:(Landroid/view/View;II)I` @kind virtual;
  #L57cf4e.  v12:= temp;
  #L57cf50.  v11:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf54.  v2:= v12 - v1 @kind int;
  #L57cf58.  call `d0`(v11, v2) @signature `Landroidx/core/view/ViewCompat;.d0:(Landroid/view/View;I)V` @kind static;
  #L57cf5e.  v7:= v12;
  #L57cf60.  if v13 != 0 then goto L57cf68;
  #L57cf64.  if v14 == 0 then goto L57cf7e;
  #L57cf68.  v8:= v6 - v0 @kind int;
  #L57cf6c.  v9:= v7 - v1 @kind int;
  #L57cf70.  v4:= v10.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cf74.  v5:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cf78.  call `k`(v4, v5, v6, v7, v8, v9) @signature `Lz/c$c;.k:(Landroid/view/View;IIII)V` @kind virtual;
  #L57cf7e.  return @kind void;
}
procedure `void` `t`(`z.c` v9 @kind this, `int` v10 ) @signature `Lz/c;.t:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L57cf90.  v0:= v9.`z.c.d` @type ^`float`[] @kind object;
  #L57cf94.  if v0 == 0 then goto L57cf9e;
  #L57cf98.  v1:= length @variable v0;
  #L57cf9a.  if v1 > v10 then goto L57d030;
  #L57cf9e.  v10:= v10 + 1;
  #L57cfa2.  v1:= new `float`[v10];
  #L57cfa6.  v2:= new `float`[v10];
  #L57cfaa.  v3:= new `float`[v10];
  #L57cfae.  v4:= new `float`[v10];
  #L57cfb2.  v5:= new `int`[v10];
  #L57cfb6.  v6:= new `int`[v10];
  #L57cfba.  v10:= new `int`[v10];
  #L57cfbe.  if v0 == 0 then goto L57d014;
  #L57cfc2.  v7:= length @variable v0;
  #L57cfc4.  v8:= 0I;
  #L57cfc6.  call `arraycopy`(v0, v8, v1, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57cfcc.  v0:= v9.`z.c.e` @type ^`float`[] @kind object;
  #L57cfd0.  v7:= length @variable v0;
  #L57cfd2.  call `arraycopy`(v0, v8, v2, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57cfd8.  v0:= v9.`z.c.f` @type ^`float`[] @kind object;
  #L57cfdc.  v7:= length @variable v0;
  #L57cfde.  call `arraycopy`(v0, v8, v3, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57cfe4.  v0:= v9.`z.c.g` @type ^`float`[] @kind object;
  #L57cfe8.  v7:= length @variable v0;
  #L57cfea.  call `arraycopy`(v0, v8, v4, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57cff0.  v0:= v9.`z.c.h` @type ^`int`[] @kind object;
  #L57cff4.  v7:= length @variable v0;
  #L57cff6.  call `arraycopy`(v0, v8, v5, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57cffc.  v0:= v9.`z.c.i` @type ^`int`[] @kind object;
  #L57d000.  v7:= length @variable v0;
  #L57d002.  call `arraycopy`(v0, v8, v6, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57d008.  v0:= v9.`z.c.j` @type ^`int`[] @kind object;
  #L57d00c.  v7:= length @variable v0;
  #L57d00e.  call `arraycopy`(v0, v8, v10, v8, v7) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L57d014.  v9.`z.c.d` @type ^`float`[] := v1 @kind object;
  #L57d018.  v9.`z.c.e` @type ^`float`[] := v2 @kind object;
  #L57d01c.  v9.`z.c.f` @type ^`float`[] := v3 @kind object;
  #L57d020.  v9.`z.c.g` @type ^`float`[] := v4 @kind object;
  #L57d024.  v9.`z.c.h` @type ^`int`[] := v5 @kind object;
  #L57d028.  v9.`z.c.i` @type ^`int`[] := v6 @kind object;
  #L57d02c.  v9.`z.c.j` @type ^`int`[] := v10 @kind object;
  #L57d030.  return @kind void;
}
procedure `boolean` `v`(`z.c` v10 @kind this, `int` v11 , `int` v12 , `int` v13 , `int` v14 ) @signature `Lz/c;.v:(IIII)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L57c440.  v0:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c444.  call temp:= `getLeft`(v0) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57c44a.  v2:= temp;
  #L57c44c.  v0:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c450.  call temp:= `getTop`(v0) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57c456.  v3:= temp;
  #L57c458.  v11:= v11 - v2 @kind int;
  #L57c45a.  v12:= v12 - v3 @kind int;
  #L57c45c.  if v11 != 0 then goto L57c478;
  #L57c460.  if v12 != 0 then goto L57c478;
  #L57c464.  v11:= v10.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c468.  call `abortAnimation`(v11) @signature `Landroid/widget/OverScroller;.abortAnimation:()V` @kind virtual;
  #L57c46e.  v11:= 0I;
  #L57c470.  call `K`(v10, v11) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57c476.  return v11;
  #L57c478.  v5:= v10.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c47c.  v4:= v10 @kind object;
  #L57c47e.  v6:= v11;
  #L57c480.  v7:= v12;
  #L57c482.  v8:= v13;
  #L57c484.  v9:= v14;
  #L57c486.  call temp:= `m`(v4, v5, v6, v7, v8, v9) @signature `Lz/c;.m:(Landroid/view/View;IIII)I` @kind direct;
  #L57c48c.  v6:= temp;
  #L57c48e.  v1:= v10.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c492.  v4:= v11;
  #L57c494.  v5:= v12;
  #L57c496.  call `startScroll`(v1, v2, v3, v4, v5, v6) @signature `Landroid/widget/OverScroller;.startScroll:(IIIII)V` @kind virtual;
  #L57c49c.  v11:= 2I;
  #L57c49e.  call `K`(v10, v11) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57c4a4.  v11:= 1I;
  #L57c4a6.  return v11;
}
procedure `int` `y`(`z.c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lz/c;.y:(II)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L57cb28.  v0:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cb2c.  call temp:= `getLeft`(v0) @signature `Landroid/view/ViewGroup;.getLeft:()I` @kind virtual;
  #L57cb32.  v0:= temp;
  #L57cb34.  v1:= v3.`z.c.o` @type ^`int`;
  #L57cb38.  v0:= v0 + v1 @kind int;
  #L57cb3a.  if v4 >= v0 then goto L57cb42;
  #L57cb3e.  v0:= 1I;
  #L57cb40.  goto L57cb44;
  #L57cb42.  v0:= 0I;
  #L57cb44.  v1:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cb48.  call temp:= `getTop`(v1) @signature `Landroid/view/ViewGroup;.getTop:()I` @kind virtual;
  #L57cb4e.  v1:= temp;
  #L57cb50.  v2:= v3.`z.c.o` @type ^`int`;
  #L57cb54.  v1:= v1 + v2 @kind int;
  #L57cb56.  if v5 >= v1 then goto L57cb5e;
  #L57cb5a.  v0:= v0 ^| 4;
  #L57cb5e.  v1:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cb62.  call temp:= `getRight`(v1) @signature `Landroid/view/ViewGroup;.getRight:()I` @kind virtual;
  #L57cb68.  v1:= temp;
  #L57cb6a.  v2:= v3.`z.c.o` @type ^`int`;
  #L57cb6e.  v1:= v1 - v2 @kind int;
  #L57cb70.  if v4 <= v1 then goto L57cb78;
  #L57cb74.  v0:= v0 ^| 2;
  #L57cb78.  v4:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cb7c.  call temp:= `getBottom`(v4) @signature `Landroid/view/ViewGroup;.getBottom:()I` @kind virtual;
  #L57cb82.  v4:= temp;
  #L57cb84.  v1:= v3.`z.c.o` @type ^`int`;
  #L57cb88.  v4:= v4 - v1 @kind int;
  #L57cb8a.  if v5 <= v4 then goto L57cb92;
  #L57cb8e.  v0:= v0 ^| 8;
  #L57cb92.  return v0;
}
procedure `int` `A`(`z.c` v1 @kind this) @signature `Lz/c;.A:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57cbbc.  v0:= v1.`z.c.a` @type ^`int`;
  #L57cbc0.  return v0;
}
procedure `boolean` `B`(`z.c` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lz/c;.B:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57c4b8.  v0:= v1.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c4bc.  call temp:= `E`(v1, v0, v2, v3) @signature `Lz/c;.E:(Landroid/view/View;II)Z` @kind virtual;
  #L57c4c2.  v2:= temp;
  #L57c4c4.  return v2;
}
procedure `boolean` `C`(`z.c` v2 @kind this, `int` v3 ) @signature `Lz/c;.C:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L57c4d8.  v0:= v2.`z.c.k` @type ^`int`;
  #L57c4dc.  v1:= 1I;
  #L57c4de.  v3:= v1 ^< v3 @kind int;
  #L57c4e2.  v3:= v3 ^& v0 @kind int;
  #L57c4e4.  if v3 == 0 then goto L57c4ea;
  #L57c4e8.  goto L57c4ec;
  #L57c4ea.  v1:= 0I;
  #L57c4ec.  return v1;
}
procedure `boolean` `E`(`z.c` v2 @kind this, `android.view.View` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lz/c;.E:(Landroid/view/View;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L57c55c.  v0:= 0I;
  #L57c55e.  if v3 != 0 then goto L57c564;
  #L57c562.  return v0;
  #L57c564.  call temp:= `getLeft`(v3) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57c56a.  v1:= temp;
  #L57c56c.  if v4 < v1 then goto L57c596;
  #L57c570.  call temp:= `getRight`(v3) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L57c576.  v1:= temp;
  #L57c578.  if v4 >= v1 then goto L57c596;
  #L57c57c.  call temp:= `getTop`(v3) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57c582.  v4:= temp;
  #L57c584.  if v5 < v4 then goto L57c596;
  #L57c588.  call temp:= `getBottom`(v3) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L57c58e.  v3:= temp;
  #L57c590.  if v5 >= v3 then goto L57c596;
  #L57c594.  v0:= 1I;
  #L57c596.  return v0;
}
procedure `void` `F`(`z.c` v9 @kind this, `android.view.MotionEvent` v10 @kind object) @signature `Lz/c;.F:(Landroid/view/MotionEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L57d044.  call temp:= `getActionMasked`(v10) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L57d04a.  v0:= temp;
  #L57d04c.  call temp:= `getActionIndex`(v10) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L57d052.  v1:= temp;
  #L57d054.  if v0 != 0 then goto L57d05e;
  #L57d058.  call `b`(v9) @signature `Lz/c;.b:()V` @kind virtual;
  #L57d05e.  v2:= v9.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57d062.  if v2 != 0 then goto L57d072;
  #L57d066.  call temp:= `obtain`() @signature `Landroid/view/VelocityTracker;.obtain:()Landroid/view/VelocityTracker;` @kind static;
  #L57d06c.  v2:= temp @kind object;
  #L57d06e.  v9.`z.c.l` @type ^`android.view.VelocityTracker` := v2 @kind object;
  #L57d072.  v2:= v9.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57d076.  call `addMovement`(v2, v10) @signature `Landroid/view/VelocityTracker;.addMovement:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L57d07c.  v2:= 0I;
  #L57d07e.  if v0 == 0 then goto L57d2e6;
  #L57d082.  v3:= 1I;
  #L57d084.  if v0 == v3 then goto L57d2d0;
  #L57d088.  v4:= 2I;
  #L57d08a.  if v0 == v4 then goto L57d1c2;
  #L57d08e.  v4:= 3I;
  #L57d090.  if v0 == v4 then goto L57d1a8;
  #L57d094.  v4:= 5I;
  #L57d096.  if v0 == v4 then goto L57d12e;
  #L57d09a.  v4:= 6I;
  #L57d09c.  if v0 == v4 then goto L57d0a4;
  #L57d0a0.  goto L57d336;
  #L57d0a4.  call temp:= `getPointerId`(v10, v1) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d0aa.  v0:= temp;
  #L57d0ac.  v1:= v9.`z.c.a` @type ^`int`;
  #L57d0b0.  if v1 != v3 then goto L57d124;
  #L57d0b4.  v1:= v9.`z.c.c` @type ^`int`;
  #L57d0b8.  if v0 != v1 then goto L57d124;
  #L57d0bc.  call temp:= `getPointerCount`(v10) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L57d0c2.  v1:= temp;
  #L57d0c4.  v3:= -1I;
  #L57d0c6.  if v2 >= v1 then goto L57d118;
  #L57d0ca.  call temp:= `getPointerId`(v10, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d0d0.  v4:= temp;
  #L57d0d2.  v5:= v9.`z.c.c` @type ^`int`;
  #L57d0d6.  if v4 != v5 then goto L57d0dc;
  #L57d0da.  goto L57d112;
  #L57d0dc.  call temp:= `getX`(v10, v2) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57d0e2.  v5:= temp;
  #L57d0e4.  call temp:= `getY`(v10, v2) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57d0ea.  v6:= temp;
  #L57d0ec.  v5:= (`int`) v5 @kind f2i;
  #L57d0ee.  v6:= (`int`) v6 @kind f2i;
  #L57d0f0.  call temp:= `u`(v9, v5, v6) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57d0f6.  v5:= temp @kind object;
  #L57d0f8.  v6:= v9.`z.c.s` @type ^`android.view.View` @kind object;
  #L57d0fc.  if v5 != v6 then goto L57d112;
  #L57d100.  call temp:= `Q`(v9, v6, v4) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57d106.  v4:= temp;
  #L57d108.  if v4 == 0 then goto L57d112;
  #L57d10c.  v10:= v9.`z.c.c` @type ^`int`;
  #L57d110.  goto L57d11a;
  #L57d112.  v2:= v2 + 1;
  #L57d116.  goto L57d0c4;
  #L57d118.  v10:= -1I;
  #L57d11a.  if v10 != v3 then goto L57d124;
  #L57d11e.  call `G`(v9) @signature `Lz/c;.G:()V` @kind direct;
  #L57d124.  call `k`(v9, v0) @signature `Lz/c;.k:(I)V` @kind direct;
  #L57d12a.  goto L57d336;
  #L57d12e.  call temp:= `getPointerId`(v10, v1) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d134.  v0:= temp;
  #L57d136.  call temp:= `getX`(v10, v1) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57d13c.  v2:= temp;
  #L57d13e.  call temp:= `getY`(v10, v1) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57d144.  v10:= temp;
  #L57d146.  call `I`(v9, v2, v10, v0) @signature `Lz/c;.I:(FFI)V` @kind direct;
  #L57d14c.  v1:= v9.`z.c.a` @type ^`int`;
  #L57d150.  if v1 != 0 then goto L57d18a;
  #L57d154.  v1:= (`int`) v2 @kind f2i;
  #L57d156.  v10:= (`int`) v10 @kind f2i;
  #L57d158.  call temp:= `u`(v9, v1, v10) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57d15e.  v10:= temp @kind object;
  #L57d160.  call temp:= `Q`(v9, v10, v0) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57d166.  v10:= v9.`z.c.h` @type ^`int`[] @kind object;
  #L57d16a.  v10:= v10[v0];
  #L57d16e.  v1:= v9.`z.c.p` @type ^`int`;
  #L57d172.  v2:= v10 ^& v1 @kind int;
  #L57d176.  if v2 == 0 then goto L57d336;
  #L57d17a.  v2:= v9.`z.c.r` @type ^`z.c$c` @kind object;
  #L57d17e.  v10:= v10 ^& v1 @kind int;
  #L57d180.  call `h`(v2, v10, v0) @signature `Lz/c$c;.h:(II)V` @kind virtual;
  #L57d186.  goto L57d336;
  #L57d18a.  v1:= (`int`) v2 @kind f2i;
  #L57d18c.  v10:= (`int`) v10 @kind f2i;
  #L57d18e.  call temp:= `B`(v9, v1, v10) @signature `Lz/c;.B:(II)Z` @kind virtual;
  #L57d194.  v10:= temp;
  #L57d196.  if v10 == 0 then goto L57d336;
  #L57d19a.  v10:= v9.`z.c.s` @type ^`android.view.View` @kind object;
  #L57d19e.  call temp:= `Q`(v9, v10, v0) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57d1a4.  goto L57d336;
  #L57d1a8.  v10:= v9.`z.c.a` @type ^`int`;
  #L57d1ac.  if v10 != v3 then goto L57d1b8;
  #L57d1b0.  v10:= 0I;
  #L57d1b2.  call `q`(v9, v10, v10) @signature `Lz/c;.q:(FF)V` @kind direct;
  #L57d1b8.  call `b`(v9) @signature `Lz/c;.b:()V` @kind virtual;
  #L57d1be.  goto L57d336;
  #L57d1c2.  v0:= v9.`z.c.a` @type ^`int`;
  #L57d1c6.  if v0 != v3 then goto L57d242;
  #L57d1ca.  v0:= v9.`z.c.c` @type ^`int`;
  #L57d1ce.  call temp:= `D`(v9, v0) @signature `Lz/c;.D:(I)Z` @kind direct;
  #L57d1d4.  v0:= temp;
  #L57d1d6.  if v0 != 0 then goto L57d1de;
  #L57d1da.  goto L57d336;
  #L57d1de.  v0:= v9.`z.c.c` @type ^`int`;
  #L57d1e2.  call temp:= `findPointerIndex`(v10, v0) @signature `Landroid/view/MotionEvent;.findPointerIndex:(I)I` @kind virtual;
  #L57d1e8.  v0:= temp;
  #L57d1ea.  call temp:= `getX`(v10, v0) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57d1f0.  v1:= temp;
  #L57d1f2.  call temp:= `getY`(v10, v0) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57d1f8.  v0:= temp;
  #L57d1fa.  v2:= v9.`z.c.f` @type ^`float`[] @kind object;
  #L57d1fe.  v3:= v9.`z.c.c` @type ^`int`;
  #L57d202.  v2:= v2[v3];
  #L57d206.  v1:= v1 - v2 @kind float;
  #L57d208.  v1:= (`int`) v1 @kind f2i;
  #L57d20a.  v2:= v9.`z.c.g` @type ^`float`[] @kind object;
  #L57d20e.  v2:= v2[v3];
  #L57d212.  v0:= v0 - v2 @kind float;
  #L57d214.  v0:= (`int`) v0 @kind f2i;
  #L57d216.  v2:= v9.`z.c.s` @type ^`android.view.View` @kind object;
  #L57d21a.  call temp:= `getLeft`(v2) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57d220.  v2:= temp;
  #L57d222.  v2:= v2 + v1 @kind int;
  #L57d224.  v3:= v9.`z.c.s` @type ^`android.view.View` @kind object;
  #L57d228.  call temp:= `getTop`(v3) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57d22e.  v3:= temp;
  #L57d230.  v3:= v3 + v0 @kind int;
  #L57d232.  call `s`(v9, v2, v3, v1, v0) @signature `Lz/c;.s:(IIII)V` @kind direct;
  #L57d238.  call `J`(v9, v10) @signature `Lz/c;.J:(Landroid/view/MotionEvent;)V` @kind direct;
  #L57d23e.  goto L57d336;
  #L57d242.  call temp:= `getPointerCount`(v10) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L57d248.  v0:= temp;
  #L57d24a.  if v2 >= v0 then goto L57d2c8;
  #L57d24e.  call temp:= `getPointerId`(v10, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d254.  v1:= temp;
  #L57d256.  call temp:= `D`(v9, v1) @signature `Lz/c;.D:(I)Z` @kind direct;
  #L57d25c.  v4:= temp;
  #L57d25e.  if v4 != 0 then goto L57d264;
  #L57d262.  goto L57d2c2;
  #L57d264.  call temp:= `getX`(v10, v2) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57d26a.  v4:= temp;
  #L57d26c.  call temp:= `getY`(v10, v2) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57d272.  v5:= temp;
  #L57d274.  v6:= v9.`z.c.d` @type ^`float`[] @kind object;
  #L57d278.  v6:= v6[v1];
  #L57d27c.  v6:= v4 - v6 @kind float;
  #L57d280.  v7:= v9.`z.c.e` @type ^`float`[] @kind object;
  #L57d284.  v7:= v7[v1];
  #L57d288.  v7:= v5 - v7 @kind float;
  #L57d28c.  call `H`(v9, v6, v7, v1) @signature `Lz/c;.H:(FFI)V` @kind direct;
  #L57d292.  v8:= v9.`z.c.a` @type ^`int`;
  #L57d296.  if v8 != v3 then goto L57d29c;
  #L57d29a.  goto L57d2c8;
  #L57d29c.  v4:= (`int`) v4 @kind f2i;
  #L57d29e.  v5:= (`int`) v5 @kind f2i;
  #L57d2a0.  call temp:= `u`(v9, v4, v5) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57d2a6.  v4:= temp @kind object;
  #L57d2a8.  call temp:= `g`(v9, v4, v6, v7) @signature `Lz/c;.g:(Landroid/view/View;FF)Z` @kind direct;
  #L57d2ae.  v5:= temp;
  #L57d2b0.  if v5 == 0 then goto L57d2c2;
  #L57d2b4.  call temp:= `Q`(v9, v4, v1) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57d2ba.  v1:= temp;
  #L57d2bc.  if v1 == 0 then goto L57d2c2;
  #L57d2c0.  goto L57d2c8;
  #L57d2c2.  v2:= v2 + 1;
  #L57d2c6.  goto L57d24a;
  #L57d2c8.  call `J`(v9, v10) @signature `Lz/c;.J:(Landroid/view/MotionEvent;)V` @kind direct;
  #L57d2ce.  goto L57d336;
  #L57d2d0.  v10:= v9.`z.c.a` @type ^`int`;
  #L57d2d4.  if v10 != v3 then goto L57d2de;
  #L57d2d8.  call `G`(v9) @signature `Lz/c;.G:()V` @kind direct;
  #L57d2de.  call `b`(v9) @signature `Lz/c;.b:()V` @kind virtual;
  #L57d2e4.  goto L57d336;
  #L57d2e6.  call temp:= `getX`(v10) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L57d2ec.  v0:= temp;
  #L57d2ee.  call temp:= `getY`(v10) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L57d2f4.  v1:= temp;
  #L57d2f6.  call temp:= `getPointerId`(v10, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57d2fc.  v10:= temp;
  #L57d2fe.  v2:= (`int`) v0 @kind f2i;
  #L57d300.  v3:= (`int`) v1 @kind f2i;
  #L57d302.  call temp:= `u`(v9, v2, v3) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57d308.  v2:= temp @kind object;
  #L57d30a.  call `I`(v9, v0, v1, v10) @signature `Lz/c;.I:(FFI)V` @kind direct;
  #L57d310.  call temp:= `Q`(v9, v2, v10) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57d316.  v0:= v9.`z.c.h` @type ^`int`[] @kind object;
  #L57d31a.  v0:= v0[v10];
  #L57d31e.  v1:= v9.`z.c.p` @type ^`int`;
  #L57d322.  v2:= v0 ^& v1 @kind int;
  #L57d326.  if v2 == 0 then goto L57d336;
  #L57d32a.  v2:= v9.`z.c.r` @type ^`z.c$c` @kind object;
  #L57d32e.  v0:= v0 ^& v1 @kind int;
  #L57d330.  call `h`(v2, v0, v10) @signature `Lz/c$c;.h:(II)V` @kind virtual;
  #L57d336.  return @kind void;
}
procedure `void` `K`(`z.c` v2 @kind this, `int` v3 ) @signature `Lz/c;.K:(I)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L57d4dc.  v0:= v2.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57d4e0.  v1:= v2.`z.c.v` @type ^`java.lang.Runnable` @kind object;
  #L57d4e4.  call temp:= `removeCallbacks`(v0, v1) @signature `Landroid/view/ViewGroup;.removeCallbacks:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L57d4ea.  v0:= v2.`z.c.a` @type ^`int`;
  #L57d4ee.  if v0 == v3 then goto L57d50e;
  #L57d4f2.  v2.`z.c.a` @type ^`int` := v3;
  #L57d4f6.  v0:= v2.`z.c.r` @type ^`z.c$c` @kind object;
  #L57d4fa.  call `j`(v0, v3) @signature `Lz/c$c;.j:(I)V` @kind virtual;
  #L57d500.  v3:= v2.`z.c.a` @type ^`int`;
  #L57d504.  if v3 != 0 then goto L57d50e;
  #L57d508.  v3:= 0I;
  #L57d50a.  v2.`z.c.s` @type ^`android.view.View` := v3 @kind object;
  #L57d50e.  return @kind void;
}
procedure `void` `L`(`z.c` v0 @kind this, `int` v1 ) @signature `Lz/c;.L:(I)V` @AccessFlag PUBLIC {
    temp;

  #L57d520.  v0.`z.c.p` @type ^`int` := v1;
  #L57d524.  return @kind void;
}
procedure `void` `M`(`z.c` v0 @kind this, `float` v1 ) @signature `Lz/c;.M:(F)V` @AccessFlag PUBLIC {
    temp;

  #L57d538.  v0.`z.c.n` @type ^`float` := v1;
  #L57d53c.  return @kind void;
}
procedure `boolean` `N`(`z.c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lz/c;.N:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L57c5a8.  v0:= v3.`z.c.t` @type ^`boolean` @kind boolean;
  #L57c5ac.  if v0 == 0 then goto L57c5de;
  #L57c5b0.  v0:= v3.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57c5b4.  v1:= v3.`z.c.c` @type ^`int`;
  #L57c5b8.  call temp:= `getXVelocity`(v0, v1) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L57c5be.  v0:= temp;
  #L57c5c0.  v0:= (`int`) v0 @kind f2i;
  #L57c5c2.  v1:= v3.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57c5c6.  v2:= v3.`z.c.c` @type ^`int`;
  #L57c5ca.  call temp:= `getYVelocity`(v1, v2) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L57c5d0.  v1:= temp;
  #L57c5d2.  v1:= (`int`) v1 @kind f2i;
  #L57c5d4.  call temp:= `v`(v3, v4, v5, v0, v1) @signature `Lz/c;.v:(IIII)Z` @kind direct;
  #L57c5da.  v4:= temp;
  #L57c5dc.  return v4;
  #L57c5de.  v4:= new `java.lang.IllegalStateException`;
  #L57c5e2.  v5:= "Cannot settleCapturedViewAt outside of a call to Callback#onViewReleased" @kind object;
  #L57c5e6.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L57c5ec.  throw v4;
}
procedure `boolean` `O`(`z.c` v16 @kind this, `android.view.MotionEvent` v17 @kind object) @signature `Lz/c;.O:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L57c600.  v0:= v16 @kind object;
  #L57c604.  v1:= v17 @kind object;
  #L57c608.  call temp:= `getActionMasked`(v17) @signature `Landroid/view/MotionEvent;.getActionMasked:()I` @kind virtual;
  #L57c60e.  v2:= temp;
  #L57c610.  call temp:= `getActionIndex`(v17) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L57c616.  v3:= temp;
  #L57c618.  if v2 != 0 then goto L57c622;
  #L57c61c.  call `b`(v16) @signature `Lz/c;.b:()V` @kind virtual;
  #L57c622.  v4:= v0.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57c626.  if v4 != 0 then goto L57c636;
  #L57c62a.  call temp:= `obtain`() @signature `Landroid/view/VelocityTracker;.obtain:()Landroid/view/VelocityTracker;` @kind static;
  #L57c630.  v4:= temp @kind object;
  #L57c632.  v0.`z.c.l` @type ^`android.view.VelocityTracker` := v4 @kind object;
  #L57c636.  v4:= v0.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57c63a.  call `addMovement`(v4, v1) @signature `Landroid/view/VelocityTracker;.addMovement:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L57c640.  v4:= 2I;
  #L57c642.  v6:= 1I;
  #L57c644.  if v2 == 0 then goto L57c808;
  #L57c648.  if v2 == v6 then goto L57c7fe;
  #L57c64c.  if v2 == v4 then goto L57c6e0;
  #L57c650.  v7:= 3I;
  #L57c652.  if v2 == v7 then goto L57c7fe;
  #L57c656.  v7:= 5I;
  #L57c658.  if v2 == v7 then goto L57c678;
  #L57c65c.  v4:= 6I;
  #L57c65e.  if v2 == v4 then goto L57c668;
  #L57c662.  v5:= 0I;
  #L57c664.  goto L57c86a;
  #L57c668.  call temp:= `getPointerId`(v1, v3) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57c66e.  v1:= temp;
  #L57c670.  call `k`(v0, v1) @signature `Lz/c;.k:(I)V` @kind direct;
  #L57c676.  goto L57c662;
  #L57c678.  call temp:= `getPointerId`(v1, v3) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57c67e.  v2:= temp;
  #L57c680.  call temp:= `getX`(v1, v3) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57c686.  v7:= temp;
  #L57c688.  call temp:= `getY`(v1, v3) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57c68e.  v1:= temp;
  #L57c690.  call `I`(v0, v7, v1, v2) @signature `Lz/c;.I:(FFI)V` @kind direct;
  #L57c696.  v3:= v0.`z.c.a` @type ^`int`;
  #L57c69a.  if v3 != 0 then goto L57c6c0;
  #L57c69e.  v1:= v0.`z.c.h` @type ^`int`[] @kind object;
  #L57c6a2.  v1:= v1[v2];
  #L57c6a6.  v3:= v0.`z.c.p` @type ^`int`;
  #L57c6aa.  v4:= v1 ^& v3 @kind int;
  #L57c6ae.  if v4 == 0 then goto L57c662;
  #L57c6b2.  v4:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c6b6.  v1:= v1 ^& v3 @kind int;
  #L57c6b8.  call `h`(v4, v1, v2) @signature `Lz/c$c;.h:(II)V` @kind virtual;
  #L57c6be.  goto L57c662;
  #L57c6c0.  if v3 != v4 then goto L57c662;
  #L57c6c4.  v3:= (`int`) v7 @kind f2i;
  #L57c6c6.  v1:= (`int`) v1 @kind f2i;
  #L57c6c8.  call temp:= `u`(v0, v3, v1) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57c6ce.  v1:= temp @kind object;
  #L57c6d0.  v3:= v0.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c6d4.  if v1 != v3 then goto L57c662;
  #L57c6d8.  call temp:= `Q`(v0, v1, v2) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57c6de.  goto L57c662;
  #L57c6e0.  v2:= v0.`z.c.d` @type ^`float`[] @kind object;
  #L57c6e4.  if v2 == 0 then goto L57c662;
  #L57c6e8.  v2:= v0.`z.c.e` @type ^`float`[] @kind object;
  #L57c6ec.  if v2 != 0 then goto L57c6f2;
  #L57c6f0.  goto L57c662;
  #L57c6f2.  call temp:= `getPointerCount`(v17) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L57c6f8.  v2:= temp;
  #L57c6fa.  v3:= 0I;
  #L57c6fc.  if v3 >= v2 then goto L57c7f4;
  #L57c700.  call temp:= `getPointerId`(v1, v3) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57c706.  v4:= temp;
  #L57c708.  call temp:= `D`(v0, v4) @signature `Lz/c;.D:(I)Z` @kind direct;
  #L57c70e.  v7:= temp;
  #L57c710.  if v7 != 0 then goto L57c718;
  #L57c714.  goto L57c7ee;
  #L57c718.  call temp:= `getX`(v1, v3) @signature `Landroid/view/MotionEvent;.getX:(I)F` @kind virtual;
  #L57c71e.  v7:= temp;
  #L57c720.  call temp:= `getY`(v1, v3) @signature `Landroid/view/MotionEvent;.getY:(I)F` @kind virtual;
  #L57c726.  v8:= temp;
  #L57c728.  v9:= v0.`z.c.d` @type ^`float`[] @kind object;
  #L57c72c.  v9:= v9[v4];
  #L57c730.  v9:= v7 - v9 @kind float;
  #L57c734.  v10:= v0.`z.c.e` @type ^`float`[] @kind object;
  #L57c738.  v10:= v10[v4];
  #L57c73c.  v10:= v8 - v10 @kind float;
  #L57c740.  v7:= (`int`) v7 @kind f2i;
  #L57c742.  v8:= (`int`) v8 @kind f2i;
  #L57c744.  call temp:= `u`(v0, v7, v8) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57c74a.  v7:= temp @kind object;
  #L57c74c.  if v7 == 0 then goto L57c760;
  #L57c750.  call temp:= `g`(v0, v7, v9, v10) @signature `Lz/c;.g:(Landroid/view/View;FF)Z` @kind direct;
  #L57c756.  v8:= temp;
  #L57c758.  if v8 == 0 then goto L57c760;
  #L57c75c.  v8:= 1I;
  #L57c75e.  goto L57c762;
  #L57c760.  v8:= 0I;
  #L57c762.  if v8 == 0 then goto L57c7cc;
  #L57c766.  call temp:= `getLeft`(v7) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57c76c.  v11:= temp;
  #L57c76e.  v12:= (`int`) v9 @kind f2i;
  #L57c770.  v13:= v11 + v12 @kind int;
  #L57c774.  v14:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c778.  call temp:= `a`(v14, v7, v13, v12) @signature `Lz/c$c;.a:(Landroid/view/View;II)I` @kind virtual;
  #L57c77e.  v12:= temp;
  #L57c780.  call temp:= `getTop`(v7) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57c786.  v13:= temp;
  #L57c788.  v14:= (`int`) v10 @kind f2i;
  #L57c78a.  v15:= v13 + v14 @kind int;
  #L57c78e.  v5:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c792.  call temp:= `b`(v5, v7, v15, v14) @signature `Lz/c$c;.b:(Landroid/view/View;II)I` @kind virtual;
  #L57c798.  v5:= temp;
  #L57c79a.  v14:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c79e.  call temp:= `d`(v14, v7) @signature `Lz/c$c;.d:(Landroid/view/View;)I` @kind virtual;
  #L57c7a4.  v14:= temp;
  #L57c7a6.  v15:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c7aa.  call temp:= `e`(v15, v7) @signature `Lz/c$c;.e:(Landroid/view/View;)I` @kind virtual;
  #L57c7b0.  v15:= temp;
  #L57c7b2.  if v14 == 0 then goto L57c7be;
  #L57c7b6.  if v14 <= 0 then goto L57c7cc;
  #L57c7ba.  if v12 != v11 then goto L57c7cc;
  #L57c7be.  if v15 == 0 then goto L57c7f4;
  #L57c7c2.  if v15 <= 0 then goto L57c7cc;
  #L57c7c6.  if v5 != v13 then goto L57c7cc;
  #L57c7ca.  goto L57c7f4;
  #L57c7cc.  call `H`(v0, v9, v10, v4) @signature `Lz/c;.H:(FFI)V` @kind direct;
  #L57c7d2.  v5:= v0.`z.c.a` @type ^`int`;
  #L57c7d6.  if v5 != v6 then goto L57c7dc;
  #L57c7da.  goto L57c7f4;
  #L57c7dc.  if v8 == 0 then goto L57c7ee;
  #L57c7e0.  call temp:= `Q`(v0, v7, v4) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57c7e6.  v4:= temp;
  #L57c7e8.  if v4 == 0 then goto L57c7ee;
  #L57c7ec.  goto L57c7f4;
  #L57c7ee.  v3:= v3 + 1;
  #L57c7f2.  goto L57c6fc;
  #L57c7f4.  call `J`(v16, v17) @signature `Lz/c;.J:(Landroid/view/MotionEvent;)V` @kind direct;
  #L57c7fa.  goto L57c662;
  #L57c7fe.  call `b`(v16) @signature `Lz/c;.b:()V` @kind virtual;
  #L57c804.  goto L57c662;
  #L57c808.  call temp:= `getX`(v17) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L57c80e.  v2:= temp;
  #L57c810.  call temp:= `getY`(v17) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L57c816.  v3:= temp;
  #L57c818.  v5:= 0I;
  #L57c81a.  call temp:= `getPointerId`(v1, v5) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L57c820.  v1:= temp;
  #L57c822.  call `I`(v0, v2, v3, v1) @signature `Lz/c;.I:(FFI)V` @kind direct;
  #L57c828.  v2:= (`int`) v2 @kind f2i;
  #L57c82a.  v3:= (`int`) v3 @kind f2i;
  #L57c82c.  call temp:= `u`(v0, v2, v3) @signature `Lz/c;.u:(II)Landroid/view/View;` @kind virtual;
  #L57c832.  v2:= temp @kind object;
  #L57c834.  v3:= v0.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c838.  if v2 != v3 then goto L57c84a;
  #L57c83c.  v3:= v0.`z.c.a` @type ^`int`;
  #L57c840.  if v3 != v4 then goto L57c84a;
  #L57c844.  call temp:= `Q`(v0, v2, v1) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @kind virtual;
  #L57c84a.  v2:= v0.`z.c.h` @type ^`int`[] @kind object;
  #L57c84e.  v2:= v2[v1];
  #L57c852.  v3:= v0.`z.c.p` @type ^`int`;
  #L57c856.  v4:= v2 ^& v3 @kind int;
  #L57c85a.  if v4 == 0 then goto L57c86a;
  #L57c85e.  v4:= v0.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c862.  v2:= v2 ^& v3 @kind int;
  #L57c864.  call `h`(v4, v2, v1) @signature `Lz/c$c;.h:(II)V` @kind virtual;
  #L57c86a.  v1:= v0.`z.c.a` @type ^`int`;
  #L57c86e.  if v1 != v6 then goto L57c874;
  #L57c872.  v5:= 1I;
  #L57c874.  return v5;
}
procedure `boolean` `P`(`z.c` v0 @kind this, `android.view.View` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lz/c;.P:(Landroid/view/View;II)Z` @AccessFlag PUBLIC {
    temp;

  #L57c888.  v0.`z.c.s` @type ^`android.view.View` := v1 @kind object;
  #L57c88c.  v1:= -1I;
  #L57c88e.  v0.`z.c.c` @type ^`int` := v1;
  #L57c892.  v1:= 0I;
  #L57c894.  call temp:= `v`(v0, v2, v3, v1, v1) @signature `Lz/c;.v:(IIII)Z` @kind direct;
  #L57c89a.  v1:= temp;
  #L57c89c.  if v1 != 0 then goto L57c8b6;
  #L57c8a0.  v2:= v0.`z.c.a` @type ^`int`;
  #L57c8a4.  if v2 != 0 then goto L57c8b6;
  #L57c8a8.  v2:= v0.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c8ac.  if v2 == 0 then goto L57c8b6;
  #L57c8b0.  v2:= 0I;
  #L57c8b2.  v0.`z.c.s` @type ^`android.view.View` := v2 @kind object;
  #L57c8b6.  return v1;
}
procedure `boolean` `Q`(`z.c` v2 @kind this, `android.view.View` v3 @kind object, `int` v4 ) @signature `Lz/c;.Q:(Landroid/view/View;I)Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L57c8c8.  v0:= v2.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c8cc.  v1:= 1I;
  #L57c8ce.  if v3 != v0 then goto L57c8dc;
  #L57c8d2.  v0:= v2.`z.c.c` @type ^`int`;
  #L57c8d6.  if v0 != v4 then goto L57c8dc;
  #L57c8da.  return v1;
  #L57c8dc.  if v3 == 0 then goto L57c8fc;
  #L57c8e0.  v0:= v2.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c8e4.  call temp:= `m`(v0, v3, v4) @signature `Lz/c$c;.m:(Landroid/view/View;I)Z` @kind virtual;
  #L57c8ea.  v0:= temp;
  #L57c8ec.  if v0 == 0 then goto L57c8fc;
  #L57c8f0.  v2.`z.c.c` @type ^`int` := v4;
  #L57c8f4.  call `c`(v2, v3, v4) @signature `Lz/c;.c:(Landroid/view/View;I)V` @kind virtual;
  #L57c8fa.  return v1;
  #L57c8fc.  v3:= 0I;
  #L57c8fe.  return v3;
}
procedure `void` `a`(`z.c` v9 @kind this) @signature `Lz/c;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L57ccbc.  call `b`(v9) @signature `Lz/c;.b:()V` @kind virtual;
  #L57ccc2.  v0:= v9.`z.c.a` @type ^`int`;
  #L57ccc6.  v1:= 2I;
  #L57ccc8.  if v0 != v1 then goto L57cd1c;
  #L57cccc.  v0:= v9.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57ccd0.  call temp:= `getCurrX`(v0) @signature `Landroid/widget/OverScroller;.getCurrX:()I` @kind virtual;
  #L57ccd6.  v0:= temp;
  #L57ccd8.  v1:= v9.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57ccdc.  call temp:= `getCurrY`(v1) @signature `Landroid/widget/OverScroller;.getCurrY:()I` @kind virtual;
  #L57cce2.  v1:= temp;
  #L57cce4.  v2:= v9.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57cce8.  call `abortAnimation`(v2) @signature `Landroid/widget/OverScroller;.abortAnimation:()V` @kind virtual;
  #L57ccee.  v2:= v9.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57ccf2.  call temp:= `getCurrX`(v2) @signature `Landroid/widget/OverScroller;.getCurrX:()I` @kind virtual;
  #L57ccf8.  v5:= temp;
  #L57ccfa.  v2:= v9.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57ccfe.  call temp:= `getCurrY`(v2) @signature `Landroid/widget/OverScroller;.getCurrY:()I` @kind virtual;
  #L57cd04.  v6:= temp;
  #L57cd06.  v3:= v9.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cd0a.  v4:= v9.`z.c.s` @type ^`android.view.View` @kind object;
  #L57cd0e.  v7:= v5 - v0 @kind int;
  #L57cd12.  v8:= v6 - v1 @kind int;
  #L57cd16.  call `k`(v3, v4, v5, v6, v7, v8) @signature `Lz/c$c;.k:(Landroid/view/View;IIII)V` @kind virtual;
  #L57cd1c.  v0:= 0I;
  #L57cd1e.  call `K`(v9, v0) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57cd24.  return @kind void;
}
procedure `void` `b`(`z.c` v1 @kind this) @signature `Lz/c;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57cd38.  v0:= -1I;
  #L57cd3a.  v1.`z.c.c` @type ^`int` := v0;
  #L57cd3e.  call `j`(v1) @signature `Lz/c;.j:()V` @kind direct;
  #L57cd44.  v0:= v1.`z.c.l` @type ^`android.view.VelocityTracker` @kind object;
  #L57cd48.  if v0 == 0 then goto L57cd58;
  #L57cd4c.  call `recycle`(v0) @signature `Landroid/view/VelocityTracker;.recycle:()V` @kind virtual;
  #L57cd52.  v0:= 0I;
  #L57cd54.  v1.`z.c.l` @type ^`android.view.VelocityTracker` := v0 @kind object;
  #L57cd58.  return @kind void;
}
procedure `void` `c`(`z.c` v2 @kind this, `android.view.View` v3 @kind object, `int` v4 ) @signature `Lz/c;.c:(Landroid/view/View;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L57cd6c.  call temp:= `getParent`(v3) @signature `Landroid/view/View;.getParent:()Landroid/view/ViewParent;` @kind virtual;
  #L57cd72.  v0:= temp @kind object;
  #L57cd74.  v1:= v2.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cd78.  if v0 != v1 then goto L57cd98;
  #L57cd7c.  v2.`z.c.s` @type ^`android.view.View` := v3 @kind object;
  #L57cd80.  v2.`z.c.c` @type ^`int` := v4;
  #L57cd84.  v0:= v2.`z.c.r` @type ^`z.c$c` @kind object;
  #L57cd88.  call `i`(v0, v3, v4) @signature `Lz/c$c;.i:(Landroid/view/View;I)V` @kind virtual;
  #L57cd8e.  v3:= 1I;
  #L57cd90.  call `K`(v2, v3) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57cd96.  return @kind void;
  #L57cd98.  v3:= new `java.lang.IllegalArgumentException`;
  #L57cd9c.  v4:= new `java.lang.StringBuilder`;
  #L57cda0.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L57cda6.  v0:= "captureChildView: parameter must be a descendant of the ViewDragHelper's tracked parent view (" @kind object;
  #L57cdaa.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57cdb0.  v0:= v2.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57cdb4.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57cdba.  v0:= ")" @kind object;
  #L57cdbe.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L57cdc4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L57cdca.  v4:= temp @kind object;
  #L57cdcc.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L57cdd2.  throw v3;
}
procedure `boolean` `e`(`z.c` v4 @kind this, `int` v5 ) @signature `Lz/c;.e:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L57c250.  v0:= v4.`z.c.d` @type ^`float`[] @kind object;
  #L57c254.  v0:= length @variable v0;
  #L57c256.  v1:= 0I;
  #L57c258.  v2:= 0I;
  #L57c25a.  if v2 >= v0 then goto L57c274;
  #L57c25e.  call temp:= `f`(v4, v5, v2) @signature `Lz/c;.f:(II)Z` @kind virtual;
  #L57c264.  v3:= temp;
  #L57c266.  if v3 == 0 then goto L57c26e;
  #L57c26a.  v5:= 1I;
  #L57c26c.  return v5;
  #L57c26e.  v2:= v2 + 1;
  #L57c272.  goto L57c25a;
  #L57c274.  return v1;
}
procedure `boolean` `f`(`z.c` v6 @kind this, `int` v7 , `int` v8 ) @signature `Lz/c;.f:(II)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L57c288.  call temp:= `C`(v6, v8) @signature `Lz/c;.C:(I)Z` @kind virtual;
  #L57c28e.  v0:= temp;
  #L57c290.  v1:= 0I;
  #L57c292.  if v0 != 0 then goto L57c298;
  #L57c296.  return v1;
  #L57c298.  v0:= v7 ^& 1;
  #L57c29c.  v2:= 1I;
  #L57c29e.  if v0 != v2 then goto L57c2a6;
  #L57c2a2.  v0:= 1I;
  #L57c2a4.  goto L57c2a8;
  #L57c2a6.  v0:= 0I;
  #L57c2a8.  v3:= 2I;
  #L57c2aa.  v7:= v7 ^& v3 @kind int;
  #L57c2ac.  if v7 != v3 then goto L57c2b4;
  #L57c2b0.  v7:= 1I;
  #L57c2b2.  goto L57c2b6;
  #L57c2b4.  v7:= 0I;
  #L57c2b6.  v3:= v6.`z.c.f` @type ^`float`[] @kind object;
  #L57c2ba.  v3:= v3[v8];
  #L57c2be.  v4:= v6.`z.c.d` @type ^`float`[] @kind object;
  #L57c2c2.  v4:= v4[v8];
  #L57c2c6.  v3:= v3 - v4 @kind float;
  #L57c2c8.  v4:= v6.`z.c.g` @type ^`float`[] @kind object;
  #L57c2cc.  v4:= v4[v8];
  #L57c2d0.  v5:= v6.`z.c.e` @type ^`float`[] @kind object;
  #L57c2d4.  v8:= v5[v8];
  #L57c2d8.  v4:= v4 - v8 @kind float;
  #L57c2da.  if v0 == 0 then goto L57c302;
  #L57c2de.  if v7 == 0 then goto L57c302;
  #L57c2e2.  v3:= v3 * v3 @kind float;
  #L57c2e6.  v4:= v4 * v4 @kind float;
  #L57c2ea.  v3:= v3 + v4 @kind float;
  #L57c2ec.  v7:= v6.`z.c.b` @type ^`int`;
  #L57c2f0.  v7:= v7 * v7 @kind int;
  #L57c2f4.  v7:= (`float`) v7 @kind i2f;
  #L57c2f6.  v7:= fcmpl(v3, v7);
  #L57c2fa.  if v7 <= 0 then goto L57c300;
  #L57c2fe.  v1:= 1I;
  #L57c300.  return v1;
  #L57c302.  if v0 == 0 then goto L57c320;
  #L57c306.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c30c.  v7:= temp;
  #L57c30e.  v8:= v6.`z.c.b` @type ^`int`;
  #L57c312.  v8:= (`float`) v8 @kind i2f;
  #L57c314.  v7:= fcmpl(v7, v8);
  #L57c318.  if v7 <= 0 then goto L57c31e;
  #L57c31c.  v1:= 1I;
  #L57c31e.  return v1;
  #L57c320.  if v7 == 0 then goto L57c33c;
  #L57c324.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L57c32a.  v7:= temp;
  #L57c32c.  v8:= v6.`z.c.b` @type ^`int`;
  #L57c330.  v8:= (`float`) v8 @kind i2f;
  #L57c332.  v7:= fcmpl(v7, v8);
  #L57c336.  if v7 <= 0 then goto L57c33c;
  #L57c33a.  v1:= 1I;
  #L57c33c.  return v1;
}
procedure `boolean` `n`(`z.c` v11 @kind this, `boolean` v12 ) @signature `Lz/c;.n:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L57c350.  v0:= v11.`z.c.a` @type ^`int`;
  #L57c354.  v1:= 2I;
  #L57c356.  v2:= 0I;
  #L57c358.  if v0 != v1 then goto L57c424;
  #L57c35c.  v0:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c360.  call temp:= `computeScrollOffset`(v0) @signature `Landroid/widget/OverScroller;.computeScrollOffset:()Z` @kind virtual;
  #L57c366.  v0:= temp;
  #L57c368.  v3:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c36c.  call temp:= `getCurrX`(v3) @signature `Landroid/widget/OverScroller;.getCurrX:()I` @kind virtual;
  #L57c372.  v3:= temp;
  #L57c374.  v4:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c378.  call temp:= `getCurrY`(v4) @signature `Landroid/widget/OverScroller;.getCurrY:()I` @kind virtual;
  #L57c37e.  v10:= temp;
  #L57c380.  v4:= v11.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c384.  call temp:= `getLeft`(v4) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57c38a.  v4:= temp;
  #L57c38c.  v8:= v3 - v4 @kind int;
  #L57c390.  v4:= v11.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c394.  call temp:= `getTop`(v4) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57c39a.  v4:= temp;
  #L57c39c.  v9:= v10 - v4 @kind int;
  #L57c3a0.  if v8 == 0 then goto L57c3ae;
  #L57c3a4.  v4:= v11.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c3a8.  call `c0`(v4, v8) @signature `Landroidx/core/view/ViewCompat;.c0:(Landroid/view/View;I)V` @kind static;
  #L57c3ae.  if v9 == 0 then goto L57c3bc;
  #L57c3b2.  v4:= v11.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c3b6.  call `d0`(v4, v9) @signature `Landroidx/core/view/ViewCompat;.d0:(Landroid/view/View;I)V` @kind static;
  #L57c3bc.  if v8 != 0 then goto L57c3c4;
  #L57c3c0.  if v9 == 0 then goto L57c3d6;
  #L57c3c4.  v4:= v11.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c3c8.  v5:= v11.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c3cc.  v6:= v3;
  #L57c3ce.  v7:= v10;
  #L57c3d0.  call `k`(v4, v5, v6, v7, v8, v9) @signature `Lz/c$c;.k:(Landroid/view/View;IIII)V` @kind virtual;
  #L57c3d6.  if v0 == 0 then goto L57c406;
  #L57c3da.  v4:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c3de.  call temp:= `getFinalX`(v4) @signature `Landroid/widget/OverScroller;.getFinalX:()I` @kind virtual;
  #L57c3e4.  v4:= temp;
  #L57c3e6.  if v3 != v4 then goto L57c406;
  #L57c3ea.  v3:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c3ee.  call temp:= `getFinalY`(v3) @signature `Landroid/widget/OverScroller;.getFinalY:()I` @kind virtual;
  #L57c3f4.  v3:= temp;
  #L57c3f6.  if v10 != v3 then goto L57c406;
  #L57c3fa.  v0:= v11.`z.c.q` @type ^`android.widget.OverScroller` @kind object;
  #L57c3fe.  call `abortAnimation`(v0) @signature `Landroid/widget/OverScroller;.abortAnimation:()V` @kind virtual;
  #L57c404.  v0:= 0I;
  #L57c406.  if v0 != 0 then goto L57c424;
  #L57c40a.  if v12 == 0 then goto L57c41e;
  #L57c40e.  v12:= v11.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57c412.  v0:= v11.`z.c.v` @type ^`java.lang.Runnable` @kind object;
  #L57c416.  call temp:= `post`(v12, v0) @signature `Landroid/view/ViewGroup;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L57c41c.  goto L57c424;
  #L57c41e.  call `K`(v11, v2) @signature `Lz/c;.K:(I)V` @kind virtual;
  #L57c424.  v12:= v11.`z.c.a` @type ^`int`;
  #L57c428.  if v12 != v1 then goto L57c42e;
  #L57c42c.  v2:= 1I;
  #L57c42e.  return v2;
}
procedure `android.view.View` `u`(`z.c` v3 @kind this, `int` v4 , `int` v5 ) @signature `Lz/c;.u:(II)Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L57c054.  v0:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57c058.  call temp:= `getChildCount`(v0) @signature `Landroid/view/ViewGroup;.getChildCount:()I` @kind virtual;
  #L57c05e.  v0:= temp;
  #L57c060.  v0:= v0 + -1;
  #L57c064.  if v0 < 0 then goto L57c0b8;
  #L57c068.  v1:= v3.`z.c.u` @type ^`android.view.ViewGroup` @kind object;
  #L57c06c.  v2:= v3.`z.c.r` @type ^`z.c$c` @kind object;
  #L57c070.  call temp:= `c`(v2, v0) @signature `Lz/c$c;.c:(I)I` @kind virtual;
  #L57c076.  v2:= temp;
  #L57c078.  call temp:= `getChildAt`(v1, v2) @signature `Landroid/view/ViewGroup;.getChildAt:(I)Landroid/view/View;` @kind virtual;
  #L57c07e.  v1:= temp @kind object;
  #L57c080.  call temp:= `getLeft`(v1) @signature `Landroid/view/View;.getLeft:()I` @kind virtual;
  #L57c086.  v2:= temp;
  #L57c088.  if v4 < v2 then goto L57c0b2;
  #L57c08c.  call temp:= `getRight`(v1) @signature `Landroid/view/View;.getRight:()I` @kind virtual;
  #L57c092.  v2:= temp;
  #L57c094.  if v4 >= v2 then goto L57c0b2;
  #L57c098.  call temp:= `getTop`(v1) @signature `Landroid/view/View;.getTop:()I` @kind virtual;
  #L57c09e.  v2:= temp;
  #L57c0a0.  if v5 < v2 then goto L57c0b2;
  #L57c0a4.  call temp:= `getBottom`(v1) @signature `Landroid/view/View;.getBottom:()I` @kind virtual;
  #L57c0aa.  v2:= temp;
  #L57c0ac.  if v5 >= v2 then goto L57c0b2;
  #L57c0b0.  return v1 @kind object;
  #L57c0b2.  v0:= v0 + -1;
  #L57c0b6.  goto L57c064;
  #L57c0b8.  v4:= 0I;
  #L57c0ba.  return v4 @kind object;
}
procedure `android.view.View` `w`(`z.c` v1 @kind this) @signature `Lz/c;.w:()Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57c0cc.  v0:= v1.`z.c.s` @type ^`android.view.View` @kind object;
  #L57c0d0.  return v0 @kind object;
}
procedure `int` `x`(`z.c` v1 @kind this) @signature `Lz/c;.x:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57cb10.  v0:= v1.`z.c.o` @type ^`int`;
  #L57cb14.  return v0;
}
procedure `int` `z`(`z.c` v1 @kind this) @signature `Lz/c;.z:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L57cba4.  v0:= v1.`z.c.b` @type ^`int`;
  #L57cba8.  return v0;
}
