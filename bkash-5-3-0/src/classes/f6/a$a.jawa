record `f6.a$a` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `f6.a$a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `f6.a$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f6.a$a` v0 @kind this, `java.lang.String` v1 @kind object, `boolean` v2 ) @signature `Lf6/a$a;.<init>:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L503a98.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L503a9e.  v0.`f6.a$a.a` @type ^`java.lang.String` := v1 @kind object;
  #L503aa2.  v0.`f6.a$a.b` @type ^`boolean` := v2 @kind boolean;
  #L503aa6.  return @kind void;
}
procedure `java.lang.String` `a`(`f6.a$a` v1 @kind this) @signature `Lf6/a$a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503a20.  v0:= v1.`f6.a$a.a` @type ^`java.lang.String` @kind object;
  #L503a24.  return v0 @kind object;
}
procedure `boolean` `b`(`f6.a$a` v1 @kind this) @signature `Lf6/a$a;.b:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L503a08.  v0:= v1.`f6.a$a.b` @type ^`boolean` @kind boolean;
  #L503a0c.  return v0;
}
procedure `java.lang.String` `toString`(`f6.a$a` v4 @kind this) @signature `Lf6/a$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L503a38.  v0:= v4.`f6.a$a.a` @type ^`java.lang.String` @kind object;
  #L503a3c.  v1:= v4.`f6.a$a.b` @type ^`boolean` @kind boolean;
  #L503a40.  call temp:= `valueOf`(v0) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L503a46.  v2:= temp @kind object;
  #L503a48.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L503a4e.  v2:= temp;
  #L503a50.  v3:= new `java.lang.StringBuilder`;
  #L503a54.  v2:= v2 + 7;
  #L503a58.  call `<init>`(v3, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L503a5e.  v2:= "{" @kind object;
  #L503a62.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L503a68.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L503a6e.  v0:= "}" @kind object;
  #L503a72.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L503a78.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L503a7e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L503a84.  v0:= temp @kind object;
  #L503a86.  return v0 @kind object;
}
