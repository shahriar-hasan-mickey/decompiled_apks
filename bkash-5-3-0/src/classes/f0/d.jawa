record `f0.d` @kind class @AccessFlag ABSTRACT extends `android.view.animation.Interpolator` @kind interface {
  `float`[] `f0.d.a` @AccessFlag PRIVATE_FINAL;
  `float` `f0.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`f0.d` v1 @kind this, `float`[] v2 @kind object) @signature `Lf0/d;.<init>:([F)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L4fc118.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4fc11e.  v1.`f0.d.a` @type ^`float`[] := v2 @kind object;
  #L4fc122.  v2:= length @variable v2;
  #L4fc124.  v2:= v2 + -1;
  #L4fc128.  v2:= (`float`) v2 @kind i2f;
  #L4fc12a.  v0:= 1.0F;
  #L4fc12e.  v0:= v0 / v2 @kind float;
  #L4fc130.  v1.`f0.d.b` @type ^`float` := v0;
  #L4fc134.  return @kind void;
}
procedure `float` `getInterpolation`(`f0.d` v4 @kind this, `float` v5 ) @signature `Lf0/d;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4fc0a0.  v0:= 1.0F;
  #L4fc0a4.  v1:= fcmpl(v5, v0);
  #L4fc0a8.  if v1 < 0 then goto L4fc0ae;
  #L4fc0ac.  return v0;
  #L4fc0ae.  v0:= 0I;
  #L4fc0b0.  v1:= fcmpg(v5, v0);
  #L4fc0b4.  if v1 > 0 then goto L4fc0ba;
  #L4fc0b8.  return v0;
  #L4fc0ba.  v0:= v4.`f0.d.a` @type ^`float`[] @kind object;
  #L4fc0be.  v1:= length @variable v0;
  #L4fc0c0.  v1:= v1 + -1;
  #L4fc0c4.  v1:= (`float`) v1 @kind i2f;
  #L4fc0c6.  v1:= v1 * v5 @kind float;
  #L4fc0ca.  v1:= (`int`) v1 @kind f2i;
  #L4fc0cc.  v0:= length @variable v0;
  #L4fc0ce.  v0:= v0 + -2;
  #L4fc0d2.  call temp:= `min`(v1, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L4fc0d8.  v0:= temp;
  #L4fc0da.  v1:= (`float`) v0 @kind i2f;
  #L4fc0dc.  v2:= v4.`f0.d.b` @type ^`float`;
  #L4fc0e0.  v1:= v1 * v2 @kind float;
  #L4fc0e4.  v5:= v5 - v1 @kind float;
  #L4fc0e6.  v5:= v5 / v2 @kind float;
  #L4fc0e8.  v1:= v4.`f0.d.a` @type ^`float`[] @kind object;
  #L4fc0ec.  v2:= v1[v0];
  #L4fc0f0.  v3:= v0 + 1;
  #L4fc0f4.  v3:= v1[v3];
  #L4fc0f8.  v0:= v1[v0];
  #L4fc0fc.  v3:= v3 - v0 @kind float;
  #L4fc0fe.  v5:= v5 * v3 @kind float;
  #L4fc102.  v2:= v2 + v5 @kind float;
  #L4fc104.  return v2;
}
