record `d7.b` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `boolean` `a`(`int`[] v4 @kind object, `int` v5 ) @signature `Ld7/b;.a:([II)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f84bc.  v0:= 0I;
  #L4f84be.  if v4 != 0 then goto L4f84c4;
  #L4f84c2.  return v0;
  #L4f84c4.  v1:= length @variable v4;
  #L4f84c6.  v2:= 0I;
  #L4f84c8.  if v2 >= v1 then goto L4f84de;
  #L4f84cc.  v3:= v4[v2];
  #L4f84d0.  if v3 != v5 then goto L4f84d8;
  #L4f84d4.  v4:= 1I;
  #L4f84d6.  return v4;
  #L4f84d8.  v2:= v2 + 1;
  #L4f84dc.  goto L4f84c8;
  #L4f84de.  return v0;
}
procedure `boolean` `b`(`java.lang.Object`[] v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Ld7/b;.b:([Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f84f0.  v0:= 0I;
  #L4f84f2.  if v4 == 0 then goto L4f84fa;
  #L4f84f6.  v1:= length @variable v4;
  #L4f84f8.  goto L4f84fc;
  #L4f84fa.  v1:= 0I;
  #L4f84fc.  v2:= 0I;
  #L4f84fe.  if v2 >= v1 then goto L4f8520;
  #L4f8502.  v3:= v4[v2] @kind object;
  #L4f8506.  call temp:= `a`(v3, v5) @signature `Lcom/google/android/gms/common/internal/i;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L4f850c.  v3:= temp;
  #L4f850e.  if v3 == 0 then goto L4f851a;
  #L4f8512.  if v2 < 0 then goto L4f8520;
  #L4f8516.  v4:= 1I;
  #L4f8518.  return v4;
  #L4f851a.  v2:= v2 + 1;
  #L4f851e.  goto L4f84fe;
  #L4f8520.  return v0;
}
procedure `void` `c`(`java.lang.StringBuilder` v4 @kind object, `double`[] v5 @kind object) @signature `Ld7/b;.c:(Ljava/lang/StringBuilder;[D)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f8574.  v0:= length @variable v5;
  #L4f8576.  v1:= 0I;
  #L4f8578.  if v1 >= v0 then goto L4f85a2;
  #L4f857c.  if v1 == 0 then goto L4f858a;
  #L4f8580.  v2:= "," @kind object;
  #L4f8584.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f858a.  v2:= v5[v1] @kind wide;
  #L4f858e.  call temp:= `toString`(v2) @signature `Ljava/lang/Double;.toString:(D)Ljava/lang/String;` @kind static;
  #L4f8594.  v2:= temp @kind object;
  #L4f8596.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f859c.  v1:= v1 + 1;
  #L4f85a0.  goto L4f8578;
  #L4f85a2.  return @kind void;
}
procedure `void` `d`(`java.lang.StringBuilder` v3 @kind object, `float`[] v4 @kind object) @signature `Ld7/b;.d:(Ljava/lang/StringBuilder;[F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f85b4.  v0:= length @variable v4;
  #L4f85b6.  v1:= 0I;
  #L4f85b8.  if v1 >= v0 then goto L4f85e2;
  #L4f85bc.  if v1 == 0 then goto L4f85ca;
  #L4f85c0.  v2:= "," @kind object;
  #L4f85c4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f85ca.  v2:= v4[v1];
  #L4f85ce.  call temp:= `toString`(v2) @signature `Ljava/lang/Float;.toString:(F)Ljava/lang/String;` @kind static;
  #L4f85d4.  v2:= temp @kind object;
  #L4f85d6.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f85dc.  v1:= v1 + 1;
  #L4f85e0.  goto L4f85b8;
  #L4f85e2.  return @kind void;
}
procedure `void` `e`(`java.lang.StringBuilder` v3 @kind object, `int`[] v4 @kind object) @signature `Ld7/b;.e:(Ljava/lang/StringBuilder;[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f85f4.  v0:= length @variable v4;
  #L4f85f6.  v1:= 0I;
  #L4f85f8.  if v1 >= v0 then goto L4f8622;
  #L4f85fc.  if v1 == 0 then goto L4f860a;
  #L4f8600.  v2:= "," @kind object;
  #L4f8604.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f860a.  v2:= v4[v1];
  #L4f860e.  call temp:= `toString`(v2) @signature `Ljava/lang/Integer;.toString:(I)Ljava/lang/String;` @kind static;
  #L4f8614.  v2:= temp @kind object;
  #L4f8616.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f861c.  v1:= v1 + 1;
  #L4f8620.  goto L4f85f8;
  #L4f8622.  return @kind void;
}
procedure `void` `f`(`java.lang.StringBuilder` v4 @kind object, `long`[] v5 @kind object) @signature `Ld7/b;.f:(Ljava/lang/StringBuilder;[J)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f866c.  v0:= length @variable v5;
  #L4f866e.  v1:= 0I;
  #L4f8670.  if v1 >= v0 then goto L4f869a;
  #L4f8674.  if v1 == 0 then goto L4f8682;
  #L4f8678.  v2:= "," @kind object;
  #L4f867c.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8682.  v2:= v5[v1] @kind wide;
  #L4f8686.  call temp:= `toString`(v2) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L4f868c.  v2:= temp @kind object;
  #L4f868e.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8694.  v1:= v1 + 1;
  #L4f8698.  goto L4f8670;
  #L4f869a.  return @kind void;
}
procedure `void` `g`(`java.lang.StringBuilder` v3 @kind object, `java.lang.Object`[] v4 @kind object) @signature `Ld7/b;.g:(Ljava/lang/StringBuilder;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f8634.  v0:= length @variable v4;
  #L4f8636.  v1:= 0I;
  #L4f8638.  if v1 >= v0 then goto L4f865a;
  #L4f863c.  if v1 == 0 then goto L4f864a;
  #L4f8640.  v2:= "," @kind object;
  #L4f8644.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f864a.  v2:= v4[v1] @kind object;
  #L4f864e.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f8654.  v1:= v1 + 1;
  #L4f8658.  goto L4f8638;
  #L4f865a.  return @kind void;
}
procedure `void` `h`(`java.lang.StringBuilder` v3 @kind object, `boolean`[] v4 @kind object) @signature `Ld7/b;.h:(Ljava/lang/StringBuilder;[Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L4f8534.  v0:= length @variable v4;
  #L4f8536.  v1:= 0I;
  #L4f8538.  if v1 >= v0 then goto L4f8562;
  #L4f853c.  if v1 == 0 then goto L4f854a;
  #L4f8540.  v2:= "," @kind object;
  #L4f8544.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f854a.  v2:= v4[v1] @kind boolean;
  #L4f854e.  call temp:= `toString`(v2) @signature `Ljava/lang/Boolean;.toString:(Z)Ljava/lang/String;` @kind static;
  #L4f8554.  v2:= temp @kind object;
  #L4f8556.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f855c.  v1:= v1 + 1;
  #L4f8560.  goto L4f8538;
  #L4f8562.  return @kind void;
}
procedure `void` `i`(`java.lang.StringBuilder` v4 @kind object, `java.lang.String`[] v5 @kind object) @signature `Ld7/b;.i:(Ljava/lang/StringBuilder;[Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L4f86ac.  v0:= length @variable v5;
  #L4f86ae.  v1:= 0I;
  #L4f86b0.  if v1 >= v0 then goto L4f86e2;
  #L4f86b4.  if v1 == 0 then goto L4f86c2;
  #L4f86b8.  v2:= "," @kind object;
  #L4f86bc.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f86c2.  v2:= "\"" @kind object;
  #L4f86c6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f86cc.  v3:= v5[v1] @kind object;
  #L4f86d0.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f86d6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L4f86dc.  v1:= v1 + 1;
  #L4f86e0.  goto L4f86b0;
  #L4f86e2.  return @kind void;
}
