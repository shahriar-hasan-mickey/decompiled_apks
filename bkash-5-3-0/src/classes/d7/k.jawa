record `d7.k` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `a`(`java.io.Closeable` v0 @kind object) @signature `Ld7/k;.a:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L4f8fcc.  if v0 == 0 then goto L4f8fd6;
  #L4f8fd0.  call `close`(v0) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L4f8fd6.  return @kind void;
  catch `java.io.IOException` @[L4f8fd0..L4f8fd6] goto L4f8fd6;
}
procedure `long` `b`(`java.io.InputStream` v2 @kind object, `java.io.OutputStream` v3 @kind object) @signature `Ld7/k;.b:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f8f44.  v0:= 0I;
  #L4f8f46.  v1:= 1024I;
  #L4f8f4a.  call temp:= `c`(v2, v3, v0, v1) @signature `Ld7/k;.c:(Ljava/io/InputStream;Ljava/io/OutputStream;ZI)J` @kind static;
  #L4f8f50.  v2:= temp @kind wide;
  #L4f8f52.  return v2 @kind wide;
}
procedure `long` `c`(`java.io.InputStream` v7 @kind object, `java.io.OutputStream` v8 @kind object, `boolean` v9 , `int` v10 ) @signature `Ld7/k;.c:(Ljava/io/InputStream;Ljava/io/OutputStream;ZI)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L4f8f64.  v0:= new `byte`[v10];
  #L4f8f68.  v1:= 0L;
  #L4f8f6c.  v3:= 0I;
  #L4f8f6e.  call temp:= `read`(v7, v0, v3, v10) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L4f8f74.  v4:= temp;
  #L4f8f76.  v5:= -1I;
  #L4f8f78.  if v4 == v5 then goto L4f8f88;
  #L4f8f7c.  v5:= (`long`) v4 @kind i2l;
  #L4f8f7e.  v1:= v1 + v5 @kind long;
  #L4f8f80.  call `write`(v8, v0, v3, v4) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L4f8f86.  goto L4f8f6c;
  #L4f8f88.  if v9 == 0 then goto L4f8f98;
  #L4f8f8c.  call `a`(v7) @signature `Ld7/k;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f8f92.  call `a`(v8) @signature `Ld7/k;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f8f98.  return v1 @kind wide;
  #L4f8f9a.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f8f9c.  if v9 != 0 then goto L4f8fa2;
  #L4f8fa0.  goto L4f8fae;
  #L4f8fa2.  call `a`(v7) @signature `Ld7/k;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f8fa8.  call `a`(v8) @signature `Ld7/k;.a:(Ljava/io/Closeable;)V` @kind static;
  #L4f8fae.  throw v10;
  catch `java.lang.Throwable` @[L4f8f6e..L4f8f86] goto L4f8f9a;
}
procedure `byte`[] `d`(`java.io.InputStream` v2 @kind object, `boolean` v3 ) @signature `Ld7/k;.d:(Ljava/io/InputStream;Z)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L4f8f14.  v0:= new `java.io.ByteArrayOutputStream`;
  #L4f8f18.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L4f8f1e.  v1:= 1024I;
  #L4f8f22.  call temp:= `c`(v2, v0, v3, v1) @signature `Ld7/k;.c:(Ljava/io/InputStream;Ljava/io/OutputStream;ZI)J` @kind static;
  #L4f8f28.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L4f8f2e.  v2:= temp @kind object;
  #L4f8f30.  return v2 @kind object;
}
