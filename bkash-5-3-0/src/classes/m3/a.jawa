record `m3.a` @kind class @AccessFlag PUBLIC {
  `android.os.StatFs` `m3.a.a` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `m3.a.b` @AccessFlag PRIVATE_VOLATILE;
  `android.os.StatFs` `m3.a.c` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `m3.a.d` @AccessFlag PRIVATE_VOLATILE;
  `long` `m3.a.e` @AccessFlag PRIVATE;
  `java.util.concurrent.locks.Lock` `m3.a.f` @AccessFlag PRIVATE_FINAL;
  `boolean` `m3.a.g` @AccessFlag PRIVATE_VOLATILE;
}
global `m3.a` `@@m3.a.h` @AccessFlag PRIVATE_STATIC;
global `long` `@@m3.a.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lm3/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L5329f8.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5329fc.  v1:= 2L;
  #L532a00.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L532a06.  v0:= temp @kind wide;
  #L532a08.  `@@m3.a.i` @type ^`long` := v0 @kind wide;
  #L532a0c.  return @kind void;
}
procedure `void` `<init>`(`m3.a` v1 @kind this) @signature `Lm3/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L532a20.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L532a26.  v0:= 0I;
  #L532a28.  v1.`m3.a.a` @type ^`android.os.StatFs` := v0 @kind object;
  #L532a2c.  v1.`m3.a.c` @type ^`android.os.StatFs` := v0 @kind object;
  #L532a30.  v0:= 0I;
  #L532a32.  v1.`m3.a.g` @type ^`boolean` := v0 @kind boolean;
  #L532a36.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L532a3a.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L532a40.  v1.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` := v0 @kind object;
  #L532a44.  return @kind void;
}
procedure `android.os.StatFs` `a`(`java.lang.String` v1 @kind object) @signature `Lm3/a;.a:(Ljava/lang/String;)Landroid/os/StatFs;` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;

  #L53287c.  v0:= new `android.os.StatFs`;
  #L532880.  call `<init>`(v0, v1) @signature `Landroid/os/StatFs;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L532886.  return v0 @kind object;
}
procedure `void` `b`(`m3.a` v2 @kind this) @signature `Lm3/a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L532a58.  v0:= v2.`m3.a.g` @type ^`boolean` @kind boolean;
  #L532a5c.  if v0 != 0 then goto L532ab0;
  #L532a60.  v0:= v2.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532a64.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L532a6a.  v0:= v2.`m3.a.g` @type ^`boolean` @kind boolean;
  #L532a6e.  if v0 != 0 then goto L532a96;
  #L532a72.  call temp:= `getDataDirectory`() @signature `Landroid/os/Environment;.getDataDirectory:()Ljava/io/File;` @kind static;
  #L532a78.  v0:= temp @kind object;
  #L532a7a.  v2.`m3.a.b` @type ^`java.io.File` := v0 @kind object;
  #L532a7e.  call temp:= `getExternalStorageDirectory`() @signature `Landroid/os/Environment;.getExternalStorageDirectory:()Ljava/io/File;` @kind static;
  #L532a84.  v0:= temp @kind object;
  #L532a86.  v2.`m3.a.d` @type ^`java.io.File` := v0 @kind object;
  #L532a8a.  call `g`(v2) @signature `Lm3/a;.g:()V` @kind direct;
  #L532a90.  v0:= 1I;
  #L532a92.  v2.`m3.a.g` @type ^`boolean` := v0 @kind boolean;
  #L532a96.  v0:= v2.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532a9a.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L532aa0.  goto L532ab0;
  #L532aa2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L532aa4.  v1:= v2.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532aa8.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L532aae.  throw v0;
  #L532ab0.  return @kind void;
  catch `java.lang.Throwable` @[L532a6a..L532a96] goto L532aa2;
}
procedure `m3.a` `d`() @signature `Lm3/a;.d:()Lm3/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L5329b0.  v0:= constclass @type ^`m3.a` @kind object;
  #L5329b4.  @monitorenter v0
  #L5329b6.  v1:= `@@m3.a.h` @type ^`m3.a` @kind object;
  #L5329ba.  if v1 != 0 then goto L5329cc;
  #L5329be.  v1:= new `m3.a`;
  #L5329c2.  call `<init>`(v1) @signature `Lm3/a;.<init>:()V` @kind direct;
  #L5329c8.  `@@m3.a.h` @type ^`m3.a` := v1 @kind object;
  #L5329cc.  v1:= `@@m3.a.h` @type ^`m3.a` @kind object;
  #L5329d0.  @monitorexit v0
  #L5329d2.  return v1 @kind object;
  #L5329d4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5329d6.  @monitorexit v0
  #L5329d8.  throw v1;
  catch `java.lang.Throwable` @[L5329b6..L5329d0] goto L5329d4;
}
procedure `void` `e`(`m3.a` v5 @kind this) @signature `Lm3/a;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L532ad0.  v0:= v5.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532ad4.  call temp:= `tryLock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.tryLock:()Z` @kind interface;
  #L532ada.  v0:= temp;
  #L532adc.  if v0 == 0 then goto L532b1a;
  #L532ae0.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L532ae6.  v0:= temp @kind wide;
  #L532ae8.  v2:= v5.`m3.a.e` @type ^`long` @kind wide;
  #L532aec.  v0:= v0 - v2 @kind long;
  #L532aee.  v2:= `@@m3.a.i` @type ^`long` @kind wide;
  #L532af2.  v4:= lcmp(v0, v2);
  #L532af6.  if v4 <= 0 then goto L532b00;
  #L532afa.  call `g`(v5) @signature `Lm3/a;.g:()V` @kind direct;
  #L532b00.  v0:= v5.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532b04.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L532b0a.  goto L532b1a;
  #L532b0c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L532b0e.  v1:= v5.`m3.a.f` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L532b12.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L532b18.  throw v0;
  #L532b1a.  return @kind void;
  catch `java.lang.Throwable` @[L532ae0..L532b00] goto L532b0c;
}
procedure `void` `g`(`m3.a` v2 @kind this) @signature `Lm3/a;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L532b38.  v0:= v2.`m3.a.a` @type ^`android.os.StatFs` @kind object;
  #L532b3c.  v1:= v2.`m3.a.b` @type ^`java.io.File` @kind object;
  #L532b40.  call temp:= `h`(v2, v0, v1) @signature `Lm3/a;.h:(Landroid/os/StatFs;Ljava/io/File;)Landroid/os/StatFs;` @kind direct;
  #L532b46.  v0:= temp @kind object;
  #L532b48.  v2.`m3.a.a` @type ^`android.os.StatFs` := v0 @kind object;
  #L532b4c.  v0:= v2.`m3.a.c` @type ^`android.os.StatFs` @kind object;
  #L532b50.  v1:= v2.`m3.a.d` @type ^`java.io.File` @kind object;
  #L532b54.  call temp:= `h`(v2, v0, v1) @signature `Lm3/a;.h:(Landroid/os/StatFs;Ljava/io/File;)Landroid/os/StatFs;` @kind direct;
  #L532b5a.  v0:= temp @kind object;
  #L532b5c.  v2.`m3.a.c` @type ^`android.os.StatFs` := v0 @kind object;
  #L532b60.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L532b66.  v0:= temp @kind wide;
  #L532b68.  v2.`m3.a.e` @type ^`long` := v0 @kind wide;
  #L532b6c.  return @kind void;
}
procedure `android.os.StatFs` `h`(`m3.a` v2 @kind this, `android.os.StatFs` v3 @kind object, `java.io.File` v4 @kind object) @signature `Lm3/a;.h:(Landroid/os/StatFs;Ljava/io/File;)Landroid/os/StatFs;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L532898.  v0:= 0I;
  #L53289a.  if v4 == 0 then goto L5328e0;
  #L53289e.  call temp:= `exists`(v4) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L5328a4.  v1:= temp;
  #L5328a6.  if v1 != 0 then goto L5328ac;
  #L5328aa.  goto L5328e0;
  #L5328ac.  if v3 != 0 then goto L5328c2;
  #L5328b0.  call temp:= `getAbsolutePath`(v4) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L5328b6.  v3:= temp @kind object;
  #L5328b8.  call temp:= `a`(v3) @signature `Lm3/a;.a:(Ljava/lang/String;)Landroid/os/StatFs;` @kind static;
  #L5328be.  v3:= temp @kind object;
  #L5328c0.  goto L5328d0;
  #L5328c2.  call temp:= `getAbsolutePath`(v4) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L5328c8.  v4:= temp @kind object;
  #L5328ca.  call `restat`(v3, v4) @signature `Landroid/os/StatFs;.restat:(Ljava/lang/String;)V` @kind virtual;
  #L5328d0.  v0:= v3 @kind object;
  #L5328d2.  goto L5328e0;
  #L5328d4.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5328d6.  call temp:= `a`(v3) @signature `Lh3/n;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @kind static;
  #L5328dc.  v3:= temp @kind object;
  #L5328de.  throw v3;
  #L5328e0.  return v0 @kind object;
  catch `java.lang.IllegalArgumentException` @[L5328b0..L5328d0] goto L5328e0;
  catch `java.lang.Throwable` @[L5328b0..L5328d0] goto L5328d4;
}
procedure `long` `c`(`m3.a` v4 @kind this, `m3.a$a` v5 @kind object) @signature `Lm3/a;.c:(Lm3/a$a;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L532940.  call `b`(v4) @signature `Lm3/a;.b:()V` @kind direct;
  #L532946.  call `e`(v4) @signature `Lm3/a;.e:()V` @kind direct;
  #L53294c.  v0:= `@@m3.a$a.INTERNAL` @type ^`m3.a$a` @kind object;
  #L532950.  if v5 != v0 then goto L53295a;
  #L532954.  v5:= v4.`m3.a.a` @type ^`android.os.StatFs` @kind object;
  #L532958.  goto L53295e;
  #L53295a.  v5:= v4.`m3.a.c` @type ^`android.os.StatFs` @kind object;
  #L53295e.  if v5 == 0 then goto L53299a;
  #L532962.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L532966.  v1:= 18I;
  #L53296a.  if v0 < v1 then goto L532980;
  #L53296e.  call temp:= `getBlockSizeLong`(v5) @signature `Landroid/os/StatFs;.getBlockSizeLong:()J` @kind virtual;
  #L532974.  v0:= temp @kind wide;
  #L532976.  call temp:= `getAvailableBlocksLong`(v5) @signature `Landroid/os/StatFs;.getAvailableBlocksLong:()J` @kind virtual;
  #L53297c.  v2:= temp @kind wide;
  #L53297e.  goto L532994;
  #L532980.  call temp:= `getBlockSize`(v5) @signature `Landroid/os/StatFs;.getBlockSize:()I` @kind virtual;
  #L532986.  v0:= temp;
  #L532988.  v0:= (`long`) v0 @kind i2l;
  #L53298a.  call temp:= `getAvailableBlocks`(v5) @signature `Landroid/os/StatFs;.getAvailableBlocks:()I` @kind virtual;
  #L532990.  v5:= temp;
  #L532992.  v2:= (`long`) v5 @kind i2l;
  #L532994.  v0:= v0 * v2 @kind long;
  #L532998.  return v0 @kind wide;
  #L53299a.  v0:= 0L;
  #L53299e.  return v0 @kind wide;
}
procedure `boolean` `f`(`m3.a` v5 @kind this, `m3.a$a` v6 @kind object, `long` v7 ) @signature `Lm3/a;.f:(Lm3/a$a;J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L532904.  call `b`(v5) @signature `Lm3/a;.b:()V` @kind direct;
  #L53290a.  call temp:= `c`(v5, v6) @signature `Lm3/a;.c:(Lm3/a$a;)J` @kind virtual;
  #L532910.  v0:= temp @kind wide;
  #L532912.  v6:= 1I;
  #L532914.  v2:= 0L;
  #L532918.  v4:= lcmp(v0, v2);
  #L53291c.  if v4 <= 0 then goto L53292c;
  #L532920.  v2:= lcmp(v0, v7);
  #L532924.  if v2 >= 0 then goto L53292a;
  #L532928.  goto L53292c;
  #L53292a.  v6:= 0I;
  #L53292c.  return v6;
}
