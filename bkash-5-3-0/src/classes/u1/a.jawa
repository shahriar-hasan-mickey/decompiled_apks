record `u1.a` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `a`(`java.lang.Object` v1 @kind object) @signature `Lu1/a;.a:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L565808.  v0:= "[Assertion failed] - this argument is required; it must not be null" @kind object;
  #L56580c.  call `b`(v1, v0) @signature `Lu1/a;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @kind static;
  #L565812.  return @kind void;
}
procedure `void` `b`(`java.lang.Object` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lu1/a;.b:(Ljava/lang/Object;Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L565824.  if v0 == 0 then goto L56582a;
  #L565828.  return @kind void;
  #L56582a.  v0:= new `java.lang.IllegalArgumentException`;
  #L56582e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L565834.  throw v0;
}
