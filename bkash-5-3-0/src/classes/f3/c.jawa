record `f3.c` @kind class @AccessFlag PUBLIC extends `f3.b` @kind class {
}
procedure `void` `<init>`(`f3.c` v3 @kind this, `java.util.concurrent.Executor` v4 @kind object) @signature `Lf3/c;.<init>:(Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L5029c0.  v0:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L5029c4.  call `<init>`(v0) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L5029ca.  v1:= "SerialExecutor" @kind object;
  #L5029ce.  v2:= 1I;
  #L5029d0.  call `<init>`(v3, v1, v2, v4, v0) @signature `Lf3/b;.<init>:(Ljava/lang/String;ILjava/util/concurrent/Executor;Ljava/util/concurrent/BlockingQueue;)V` @kind direct;
  #L5029d6.  return @kind void;
}
procedure `void` `execute`(`f3.c` v0 @kind this, `java.lang.Runnable` v1 @kind object) @signature `Lf3/c;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;

  #L5029e8.  @monitorenter v0
  #L5029ea.  call `execute`(v0, v1) @signature `Lf3/b;.execute:(Ljava/lang/Runnable;)V` @kind super;
  #L5029f0.  @monitorexit v0
  #L5029f2.  return @kind void;
  #L5029f4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5029f6.  @monitorexit v0
  #L5029f8.  throw v1;
  catch `java.lang.Throwable` @[L5029ea..L5029f0] goto L5029f4;
}
