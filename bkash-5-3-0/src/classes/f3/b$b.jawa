record `f3.b$b` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `f3.b` `f3.b$b.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`f3.b$b` v0 @kind this, `f3.b` v1 @kind object) @signature `Lf3/b$b;.<init>:(Lf3/b;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5025a8.  v0.`f3.b$b.g` @type ^`f3.b` := v1 @kind object;
  #L5025ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5025b2.  return @kind void;
}
procedure `void` `<init>`(`f3.b$b` v0 @kind this, `f3.b` v1 @kind object, `f3.b$a` v2 @kind object) @signature `Lf3/b$b;.<init>:(Lf3/b;Lf3/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L5025c4.  call `<init>`(v0, v1) @signature `Lf3/b$b;.<init>:(Lf3/b;)V` @kind direct;
  #L5025ca.  return @kind void;
}
procedure `void` `run`(`f3.b$b` v5 @kind this) @signature `Lf3/b$b;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5025dc.  v0:= "%s: worker finished; %d workers left" @kind object;
  #L5025e0.  v1:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L5025e4.  call temp:= `a`(v1) @signature `Lf3/b;.a:(Lf3/b;)Ljava/util/concurrent/BlockingQueue;` @kind static;
  #L5025ea.  v1:= temp @kind object;
  #L5025ec.  call temp:= `poll`(v1) @signature `Ljava/util/concurrent/BlockingQueue;.poll:()Ljava/lang/Object;` @kind interface;
  #L5025f2.  v1:= temp @kind object;
  #L5025f4.  v1:= (`java.lang.Runnable`) v1 @kind object;
  #L5025f8.  if v1 == 0 then goto L502604;
  #L5025fc.  call `run`(v1) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L502602.  goto L502622;
  #L502604.  call temp:= `b`() @signature `Lf3/b;.b:()Ljava/lang/Class;` @kind static;
  #L50260a.  v1:= temp @kind object;
  #L50260c.  v2:= "%s: Worker has nothing to run" @kind object;
  #L502610.  v3:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502614.  call temp:= `c`(v3) @signature `Lf3/b;.c:(Lf3/b;)Ljava/lang/String;` @kind static;
  #L50261a.  v3:= temp @kind object;
  #L50261c.  call `o`(v1, v2, v3) @signature `Li3/a;.o:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L502622.  v1:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502626.  call temp:= `d`(v1) @signature `Lf3/b;.d:(Lf3/b;)Ljava/util/concurrent/atomic/AtomicInteger;` @kind static;
  #L50262c.  v1:= temp @kind object;
  #L50262e.  call temp:= `decrementAndGet`(v1) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L502634.  v1:= temp;
  #L502636.  v2:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L50263a.  call temp:= `a`(v2) @signature `Lf3/b;.a:(Lf3/b;)Ljava/util/concurrent/BlockingQueue;` @kind static;
  #L502640.  v2:= temp @kind object;
  #L502642.  call temp:= `isEmpty`(v2) @signature `Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z` @kind interface;
  #L502648.  v2:= temp;
  #L50264a.  if v2 != 0 then goto L50265a;
  #L50264e.  v0:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502652.  call `e`(v0) @signature `Lf3/b;.e:(Lf3/b;)V` @kind static;
  #L502658.  goto L50267c;
  #L50265a.  call temp:= `b`() @signature `Lf3/b;.b:()Ljava/lang/Class;` @kind static;
  #L502660.  v2:= temp @kind object;
  #L502662.  v3:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502666.  call temp:= `c`(v3) @signature `Lf3/b;.c:(Lf3/b;)Ljava/lang/String;` @kind static;
  #L50266c.  v3:= temp @kind object;
  #L50266e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L502674.  v1:= temp @kind object;
  #L502676.  call `p`(v2, v0, v3, v1) @signature `Li3/a;.p:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L50267c.  return @kind void;
  #L50267e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L502680.  v2:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502684.  call temp:= `d`(v2) @signature `Lf3/b;.d:(Lf3/b;)Ljava/util/concurrent/atomic/AtomicInteger;` @kind static;
  #L50268a.  v2:= temp @kind object;
  #L50268c.  call temp:= `decrementAndGet`(v2) @signature `Ljava/util/concurrent/atomic/AtomicInteger;.decrementAndGet:()I` @kind virtual;
  #L502692.  v2:= temp;
  #L502694.  v3:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L502698.  call temp:= `a`(v3) @signature `Lf3/b;.a:(Lf3/b;)Ljava/util/concurrent/BlockingQueue;` @kind static;
  #L50269e.  v3:= temp @kind object;
  #L5026a0.  call temp:= `isEmpty`(v3) @signature `Ljava/util/concurrent/BlockingQueue;.isEmpty:()Z` @kind interface;
  #L5026a6.  v3:= temp;
  #L5026a8.  if v3 != 0 then goto L5026b8;
  #L5026ac.  v0:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L5026b0.  call `e`(v0) @signature `Lf3/b;.e:(Lf3/b;)V` @kind static;
  #L5026b6.  goto L5026da;
  #L5026b8.  call temp:= `b`() @signature `Lf3/b;.b:()Ljava/lang/Class;` @kind static;
  #L5026be.  v3:= temp @kind object;
  #L5026c0.  v4:= v5.`f3.b$b.g` @type ^`f3.b` @kind object;
  #L5026c4.  call temp:= `c`(v4) @signature `Lf3/b;.c:(Lf3/b;)Ljava/lang/String;` @kind static;
  #L5026ca.  v4:= temp @kind object;
  #L5026cc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L5026d2.  v2:= temp @kind object;
  #L5026d4.  call `p`(v3, v0, v4, v2) @signature `Li3/a;.p:(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L5026da.  throw v1;
  catch `java.lang.Throwable` @[L5025e0..L502622] goto L50267e;
}
