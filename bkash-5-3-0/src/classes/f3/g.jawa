record `f3.g` @kind class @AccessFlag PUBLIC extends `f3.d` @kind class {
}
global `f3.g` `@@f3.g.h` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lf3/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L502f34.  return @kind void;
}
procedure `void` `<init>`(`f3.g` v2 @kind this) @signature `Lf3/g;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L502f48.  v0:= new `android.os.Handler`;
  #L502f4c.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L502f52.  v1:= temp @kind object;
  #L502f54.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L502f5a.  call `<init>`(v2, v0) @signature `Lf3/d;.<init>:(Landroid/os/Handler;)V` @kind direct;
  #L502f60.  return @kind void;
}
procedure `f3.g` `g`() @signature `Lf3/g;.g:()Lf3/g;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L502f08.  v0:= `@@f3.g.h` @type ^`f3.g` @kind object;
  #L502f0c.  if v0 != 0 then goto L502f1e;
  #L502f10.  v0:= new `f3.g`;
  #L502f14.  call `<init>`(v0) @signature `Lf3/g;.<init>:()V` @kind direct;
  #L502f1a.  `@@f3.g.h` @type ^`f3.g` := v0 @kind object;
  #L502f1e.  v0:= `@@f3.g.h` @type ^`f3.g` @kind object;
  #L502f22.  return v0 @kind object;
}
procedure `void` `execute`(`f3.g` v1 @kind this, `java.lang.Runnable` v2 @kind object) @signature `Lf3/g;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L502f74.  call temp:= `a`(v1) @signature `Lf3/d;.a:()Z` @kind virtual;
  #L502f7a.  v0:= temp;
  #L502f7c.  if v0 == 0 then goto L502f88;
  #L502f80.  call `run`(v2) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L502f86.  goto L502f8e;
  #L502f88.  call `execute`(v1, v2) @signature `Lf3/d;.execute:(Ljava/lang/Runnable;)V` @kind super;
  #L502f8e.  return @kind void;
}
