record `w3.a` @kind class @AccessFlag PUBLIC extends `w3.b` @kind interface {
  `java.util.List` `w3.a.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`w3.a` v2 @kind this, `w3.b`[] v3 @kind object) @signature `Lw3/a;.<init>:([Lw3/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L569c6c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L569c72.  v0:= new `java.util.ArrayList`;
  #L569c76.  v1:= length @variable v3;
  #L569c78.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L569c7e.  v2.`w3.a.a` @type ^`java.util.List` := v0 @kind object;
  #L569c82.  call temp:= `addAll`(v0, v3) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L569c88.  return @kind void;
}
procedure `void` `a`(`w3.a` v5 @kind this, `java.lang.String` v6 @kind object, `int` v7 , `boolean` v8 , `java.lang.String` v9 @kind object) @signature `Lw3/a;.a:(Ljava/lang/String;IZLjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L569cd0.  @monitorenter v5
  #L569cd2.  v0:= v5.`w3.a.a` @type ^`java.util.List` @kind object;
  #L569cd6.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L569cdc.  v0:= temp;
  #L569cde.  v1:= 0I;
  #L569ce0.  if v1 >= v0 then goto L569d16;
  #L569ce4.  v2:= v5.`w3.a.a` @type ^`java.util.List` @kind object;
  #L569ce8.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L569cee.  v2:= temp @kind object;
  #L569cf0.  v2:= (`w3.b`) v2 @kind object;
  #L569cf4.  if v2 == 0 then goto L569d10;
  #L569cf8.  call `a`(v2, v6, v7, v8, v9) @signature `Lw3/b;.a:(Ljava/lang/String;IZLjava/lang/String;)V` @kind interface;
  #L569cfe.  goto L569d10;
  #L569d00.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L569d02.  v3:= "ForwardingImageOriginListener" @kind object;
  #L569d06.  v4:= "InternalListener exception in onImageLoaded" @kind object;
  #L569d0a.  call `i`(v3, v4, v2) @signature `Li3/a;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind static;
  #L569d10.  v1:= v1 + 1;
  #L569d14.  goto L569ce0;
  #L569d16.  @monitorexit v5
  #L569d18.  return @kind void;
  #L569d1a.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L569d1c.  @monitorexit v5
  #L569d1e.  throw v6;
  catch `java.lang.Throwable` @[L569cd2..L569cf4] goto L569d1a;
  catch `java.lang.Exception` @[L569cf8..L569cfe] goto L569d00;
  catch `java.lang.Throwable` @[L569cf8..L569cfe] goto L569d1a;
  catch `java.lang.Throwable` @[L569d02..L569d10] goto L569d1a;
}
procedure `void` `b`(`w3.a` v1 @kind this, `w3.b` v2 @kind object) @signature `Lw3/a;.b:(Lw3/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L569c9c.  @monitorenter v1
  #L569c9e.  v0:= v1.`w3.a.a` @type ^`java.util.List` @kind object;
  #L569ca2.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L569ca8.  @monitorexit v1
  #L569caa.  return @kind void;
  #L569cac.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L569cae.  @monitorexit v1
  #L569cb0.  throw v2;
  catch `java.lang.Throwable` @[L569c9e..L569ca8] goto L569cac;
}
procedure `void` `c`(`w3.a` v1 @kind this, `w3.b` v2 @kind object) @signature `Lw3/a;.c:(Lw3/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L569d50.  @monitorenter v1
  #L569d52.  v0:= v1.`w3.a.a` @type ^`java.util.List` @kind object;
  #L569d56.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L569d5c.  @monitorexit v1
  #L569d5e.  return @kind void;
  #L569d60.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L569d62.  @monitorexit v1
  #L569d64.  throw v2;
  catch `java.lang.Throwable` @[L569d52..L569d5c] goto L569d60;
}
