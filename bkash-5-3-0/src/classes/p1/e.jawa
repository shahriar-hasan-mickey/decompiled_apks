record `p1.e` @kind class @AccessFlag PUBLIC extends `p1.a` @kind class {
  `java.util.concurrent.BlockingQueue` `p1.e.j` @AccessFlag PRIVATE;
  `android.os.Handler` `p1.e.k` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`p1.e` v1 @kind this, `p1.a` v2 @kind object) @signature `Lp1/e;.<init>:(Lp1/a;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L54761c.  call `<init>`(v1, v2) @signature `Lp1/a;.<init>:(Lp1/a;)V` @kind direct;
  #L547622.  v2:= new `java.util.concurrent.LinkedBlockingQueue`;
  #L547626.  call `<init>`(v2) @signature `Ljava/util/concurrent/LinkedBlockingQueue;.<init>:()V` @kind direct;
  #L54762c.  v1.`p1.e.j` @type ^`java.util.concurrent.BlockingQueue` := v2 @kind object;
  #L547630.  v2:= new `p1.e$a`;
  #L547634.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L54763a.  v0:= temp @kind object;
  #L54763c.  call `<init>`(v2, v1, v0) @signature `Lp1/e$a;.<init>:(Lp1/e;Landroid/os/Looper;)V` @kind direct;
  #L547642.  v1.`p1.e.k` @type ^`android.os.Handler` := v2 @kind object;
  #L547646.  return @kind void;
}
procedure `java.util.concurrent.BlockingQueue` `e`(`p1.e` v0 @kind object) @signature `Lp1/e;.e:(Lp1/e;)Ljava/util/concurrent/BlockingQueue;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L54758c.  v0:= v0.`p1.e.j` @type ^`java.util.concurrent.BlockingQueue` @kind object;
  #L547590.  return v0 @kind object;
}
procedure `boolean` `a`(`p1.e` v1 @kind this, `o1.d` v2 @kind object) @signature `Lp1/e;.a:(Lo1/d;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L547564.  call temp:= `d`(v2) @signature `Lo1/d;.d:()I` @kind virtual;
  #L54756a.  v2:= temp;
  #L54756c.  v0:= 2I;
  #L54756e.  if v2 != v0 then goto L547576;
  #L547572.  v2:= 1I;
  #L547574.  goto L547578;
  #L547576.  v2:= 0I;
  #L547578.  return v2;
}
procedure `o1.c` `c`(`p1.e` v2 @kind this, `q1.a` v3 @kind object, `o1.d` v4 @kind object) @signature `Lp1/e;.c:(Lq1/a;Lo1/d;)Lo1/c;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5475a4.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L5475aa.  v0:= temp @kind object;
  #L5475ac.  call temp:= `getThread`(v0) @signature `Landroid/os/Looper;.getThread:()Ljava/lang/Thread;` @kind virtual;
  #L5475b2.  v0:= temp @kind object;
  #L5475b4.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L5475ba.  v1:= temp @kind object;
  #L5475bc.  if v0 != v1 then goto L5475ca;
  #L5475c0.  call temp:= `d`(v2, v3, v4) @signature `Lp1/a;.d:(Lq1/a;Lo1/d;)Lo1/c;` @kind virtual;
  #L5475c6.  v3:= temp @kind object;
  #L5475c8.  return v3 @kind object;
  #L5475ca.  v0:= v2.`p1.e.j` @type ^`java.util.concurrent.BlockingQueue` @kind object;
  #L5475ce.  v1:= new `p1.g`;
  #L5475d2.  call `<init>`(v1, v3, v4) @signature `Lp1/g;.<init>:(Lq1/a;Lo1/d;)V` @kind direct;
  #L5475d8.  call temp:= `offer`(v0, v1) @signature `Ljava/util/concurrent/BlockingQueue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L5475de.  v3:= v2.`p1.e.k` @type ^`android.os.Handler` @kind object;
  #L5475e2.  call temp:= `obtainMessage`(v3) @signature `Landroid/os/Handler;.obtainMessage:()Landroid/os/Message;` @kind virtual;
  #L5475e8.  v4:= temp @kind object;
  #L5475ea.  call temp:= `sendMessage`(v3, v4) @signature `Landroid/os/Handler;.sendMessage:(Landroid/os/Message;)Z` @kind virtual;
  #L5475f0.  v3:= temp;
  #L5475f2.  if v3 == 0 then goto L5475fc;
  #L5475f6.  v3:= `@@o1.c.SUCCESS` @type ^`o1.c` @kind object;
  #L5475fa.  return v3 @kind object;
  #L5475fc.  v3:= new `r1.a`;
  #L547600.  v4:= "Dispatcher Event Fail" @kind object;
  #L547604.  call `<init>`(v3, v4) @signature `Lr1/a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L54760a.  throw v3;
}
