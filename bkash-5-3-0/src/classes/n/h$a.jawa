record `n.h$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`n.h$a` v0 @kind this, `n.h` v1 @kind object) @signature `Ln/h$a;.<init>:(Ln/h;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L535a70.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L535a76.  return @kind void;
}
procedure `int` `a`(`n.h$a` v0 @kind this, `n.i` v1 @kind object, `n.i` v2 @kind object) @signature `Ln/h$a;.a:(Ln/i;Ln/i;)I` @AccessFlag PUBLIC {
    temp;

  #L535a54.  v1:= v1.`n.i.i` @type ^`int`;
  #L535a58.  v2:= v2.`n.i.i` @type ^`int`;
  #L535a5c.  v1:= v1 - v2 @kind int;
  #L535a5e.  return v1;
}
procedure `int` `compare`(`n.h$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Ln/h$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L535a30.  v1:= (`n.i`) v1 @kind object;
  #L535a34.  v2:= (`n.i`) v2 @kind object;
  #L535a38.  call temp:= `a`(v0, v1, v2) @signature `Ln/h$a;.a:(Ln/i;Ln/i;)I` @kind virtual;
  #L535a3e.  v1:= temp;
  #L535a40.  return v1;
}
