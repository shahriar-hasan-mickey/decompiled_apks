record `n.c` @kind class @AccessFlag PUBLIC {
  `n.f` `n.c.a` @AccessFlag ;
  `n.f` `n.c.b` @AccessFlag ;
  `n.f` `n.c.c` @AccessFlag ;
  `n.i`[] `n.c.d` @AccessFlag ;
}
procedure `void` `<init>`(`n.c` v2 @kind this) @signature `Ln/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L534810.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L534816.  v0:= new `n.g`;
  #L53481a.  v1:= 256I;
  #L53481e.  call `<init>`(v0, v1) @signature `Ln/g;.<init>:(I)V` @kind direct;
  #L534824.  v2.`n.c.a` @type ^`n.f` := v0 @kind object;
  #L534828.  v0:= new `n.g`;
  #L53482c.  call `<init>`(v0, v1) @signature `Ln/g;.<init>:(I)V` @kind direct;
  #L534832.  v2.`n.c.b` @type ^`n.f` := v0 @kind object;
  #L534836.  v0:= new `n.g`;
  #L53483a.  call `<init>`(v0, v1) @signature `Ln/g;.<init>:(I)V` @kind direct;
  #L534840.  v2.`n.c.c` @type ^`n.f` := v0 @kind object;
  #L534844.  v0:= 32I;
  #L534848.  v0:= new `n.i`[v0];
  #L53484c.  v2.`n.c.d` @type ^`n.i`[] := v0 @kind object;
  #L534850.  return @kind void;
}
