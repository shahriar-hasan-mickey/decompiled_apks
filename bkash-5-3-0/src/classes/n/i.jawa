record `n.i` @kind class @AccessFlag PUBLIC extends `java.lang.Comparable` @kind interface {
  `boolean` `n.i.g` @AccessFlag PUBLIC;
  `java.lang.String` `n.i.h` @AccessFlag PRIVATE;
  `int` `n.i.i` @AccessFlag PUBLIC;
  `int` `n.i.j` @AccessFlag ;
  `int` `n.i.k` @AccessFlag PUBLIC;
  `float` `n.i.l` @AccessFlag PUBLIC;
  `boolean` `n.i.m` @AccessFlag PUBLIC;
  `float`[] `n.i.n` @AccessFlag ;
  `float`[] `n.i.o` @AccessFlag ;
  `n.i$a` `n.i.p` @AccessFlag ;
  `n.b`[] `n.i.q` @AccessFlag ;
  `int` `n.i.r` @AccessFlag ;
  `int` `n.i.s` @AccessFlag PUBLIC;
  `boolean` `n.i.t` @AccessFlag ;
  `int` `n.i.u` @AccessFlag ;
  `float` `n.i.v` @AccessFlag ;
}
global `int` `@@n.i.w` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ln/i;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L536c3c.  return @kind void;
}
procedure `void` `<init>`(`n.i` v3 @kind this, `n.i$a` v4 @kind object, `java.lang.String` v5 @kind object) @signature `Ln/i;.<init>:(Ln/i$a;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L536c50.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L536c56.  v5:= -1I;
  #L536c58.  v3.`n.i.i` @type ^`int` := v5;
  #L536c5c.  v3.`n.i.j` @type ^`int` := v5;
  #L536c60.  v0:= 0I;
  #L536c62.  v3.`n.i.k` @type ^`int` := v0;
  #L536c66.  v3.`n.i.m` @type ^`boolean` := v0 @kind boolean;
  #L536c6a.  v1:= 9I;
  #L536c6e.  v2:= new `float`[v1];
  #L536c72.  v3.`n.i.n` @type ^`float`[] := v2 @kind object;
  #L536c76.  v1:= new `float`[v1];
  #L536c7a.  v3.`n.i.o` @type ^`float`[] := v1 @kind object;
  #L536c7e.  v1:= 16I;
  #L536c82.  v1:= new `n.b`[v1];
  #L536c86.  v3.`n.i.q` @type ^`n.b`[] := v1 @kind object;
  #L536c8a.  v3.`n.i.r` @type ^`int` := v0;
  #L536c8e.  v3.`n.i.s` @type ^`int` := v0;
  #L536c92.  v3.`n.i.t` @type ^`boolean` := v0 @kind boolean;
  #L536c96.  v3.`n.i.u` @type ^`int` := v5;
  #L536c9a.  v5:= 0I;
  #L536c9c.  v3.`n.i.v` @type ^`float` := v5;
  #L536ca0.  v3.`n.i.p` @type ^`n.i$a` := v4 @kind object;
  #L536ca4.  return @kind void;
}
procedure `void` `c`() @signature `Ln/i;.c:()V` @AccessFlag STATIC {
    temp;
    v0;

  #L536d1c.  v0:= `@@n.i.w` @type ^`int`;
  #L536d20.  v0:= v0 + 1;
  #L536d24.  `@@n.i.w` @type ^`int` := v0;
  #L536d28.  return @kind void;
}
procedure `void` `a`(`n.i` v3 @kind this, `n.b` v4 @kind object) @signature `Ln/i;.a:(Ln/b;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L536cb8.  v0:= 0I;
  #L536cba.  v1:= v3.`n.i.r` @type ^`int`;
  #L536cbe.  if v0 >= v1 then goto L536cd6;
  #L536cc2.  v1:= v3.`n.i.q` @type ^`n.b`[] @kind object;
  #L536cc6.  v1:= v1[v0] @kind object;
  #L536cca.  if v1 != v4 then goto L536cd0;
  #L536cce.  return @kind void;
  #L536cd0.  v0:= v0 + 1;
  #L536cd4.  goto L536cba;
  #L536cd6.  v0:= v3.`n.i.q` @type ^`n.b`[] @kind object;
  #L536cda.  v2:= length @variable v0;
  #L536cdc.  if v1 < v2 then goto L536cf6;
  #L536ce0.  v1:= length @variable v0;
  #L536ce2.  v1:= v1 * 2;
  #L536ce6.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L536cec.  v0:= temp @kind object;
  #L536cee.  v0:= (`n.b`[]) v0 @kind object;
  #L536cf2.  v3.`n.i.q` @type ^`n.b`[] := v0 @kind object;
  #L536cf6.  v0:= v3.`n.i.q` @type ^`n.b`[] @kind object;
  #L536cfa.  v1:= v3.`n.i.r` @type ^`int`;
  #L536cfe.  v0[v1]:= v4 @kind object;
  #L536d02.  v1:= v1 + 1;
  #L536d06.  v3.`n.i.r` @type ^`int` := v1;
  #L536d0a.  return @kind void;
}
procedure `int` `b`(`n.i` v1 @kind this, `n.i` v2 @kind object) @signature `Ln/i;.b:(Ln/i;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L536bbc.  v0:= v1.`n.i.i` @type ^`int`;
  #L536bc0.  v2:= v2.`n.i.i` @type ^`int`;
  #L536bc4.  v0:= v0 - v2 @kind int;
  #L536bc6.  return v0;
}
procedure `int` `compareTo`(`n.i` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Ln/i;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L536b9c.  v1:= (`n.i`) v1 @kind object;
  #L536ba0.  call temp:= `b`(v0, v1) @signature `Ln/i;.b:(Ln/i;)I` @kind virtual;
  #L536ba6.  v1:= temp;
  #L536ba8.  return v1;
}
procedure `void` `d`(`n.i` v4 @kind this, `n.b` v5 @kind object) @signature `Ln/i;.d:(Ln/b;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L536d3c.  v0:= v4.`n.i.r` @type ^`int`;
  #L536d40.  v1:= 0I;
  #L536d42.  if v1 >= v0 then goto L536d82;
  #L536d46.  v2:= v4.`n.i.q` @type ^`n.b`[] @kind object;
  #L536d4a.  v2:= v2[v1] @kind object;
  #L536d4e.  if v2 != v5 then goto L536d7c;
  #L536d52.  v5:= v0 + -1;
  #L536d56.  if v1 >= v5 then goto L536d6e;
  #L536d5a.  v5:= v4.`n.i.q` @type ^`n.b`[] @kind object;
  #L536d5e.  v2:= v1 + 1;
  #L536d62.  v3:= v5[v2] @kind object;
  #L536d66.  v5[v1]:= v3 @kind object;
  #L536d6a.  v1:= v2;
  #L536d6c.  goto L536d52;
  #L536d6e.  v5:= v4.`n.i.r` @type ^`int`;
  #L536d72.  v5:= v5 + -1;
  #L536d76.  v4.`n.i.r` @type ^`int` := v5;
  #L536d7a.  return @kind void;
  #L536d7c.  v1:= v1 + 1;
  #L536d80.  goto L536d42;
  #L536d82.  return @kind void;
}
procedure `void` `f`(`n.i` v6 @kind this) @signature `Ln/i;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L536d94.  v0:= 0I;
  #L536d96.  v6.`n.i.h` @type ^`java.lang.String` := v0 @kind object;
  #L536d9a.  v1:= `@@n.i$a.UNKNOWN` @type ^`n.i$a` @kind object;
  #L536d9e.  v6.`n.i.p` @type ^`n.i$a` := v1 @kind object;
  #L536da2.  v1:= 0I;
  #L536da4.  v6.`n.i.k` @type ^`int` := v1;
  #L536da8.  v2:= -1I;
  #L536daa.  v6.`n.i.i` @type ^`int` := v2;
  #L536dae.  v6.`n.i.j` @type ^`int` := v2;
  #L536db2.  v3:= 0I;
  #L536db4.  v6.`n.i.l` @type ^`float` := v3;
  #L536db8.  v6.`n.i.m` @type ^`boolean` := v1 @kind boolean;
  #L536dbc.  v6.`n.i.t` @type ^`boolean` := v1 @kind boolean;
  #L536dc0.  v6.`n.i.u` @type ^`int` := v2;
  #L536dc4.  v6.`n.i.v` @type ^`float` := v3;
  #L536dc8.  v2:= v6.`n.i.r` @type ^`int`;
  #L536dcc.  v4:= 0I;
  #L536dce.  if v4 >= v2 then goto L536de0;
  #L536dd2.  v5:= v6.`n.i.q` @type ^`n.b`[] @kind object;
  #L536dd6.  v5[v4]:= v0 @kind object;
  #L536dda.  v4:= v4 + 1;
  #L536dde.  goto L536dce;
  #L536de0.  v6.`n.i.r` @type ^`int` := v1;
  #L536de4.  v6.`n.i.s` @type ^`int` := v1;
  #L536de8.  v6.`n.i.g` @type ^`boolean` := v1 @kind boolean;
  #L536dec.  v0:= v6.`n.i.o` @type ^`float`[] @kind object;
  #L536df0.  call `fill`(v0, v3) @signature `Ljava/util/Arrays;.fill:([FF)V` @kind static;
  #L536df6.  return @kind void;
}
procedure `void` `g`(`n.i` v3 @kind this, `n.d` v4 @kind object, `float` v5 ) @signature `Ln/i;.g:(Ln/d;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L536e08.  v3.`n.i.l` @type ^`float` := v5;
  #L536e0c.  v5:= 1I;
  #L536e0e.  v3.`n.i.m` @type ^`boolean` := v5 @kind boolean;
  #L536e12.  v5:= 0I;
  #L536e14.  v3.`n.i.t` @type ^`boolean` := v5 @kind boolean;
  #L536e18.  v0:= -1I;
  #L536e1a.  v3.`n.i.u` @type ^`int` := v0;
  #L536e1e.  v1:= 0I;
  #L536e20.  v3.`n.i.v` @type ^`float` := v1;
  #L536e24.  v1:= v3.`n.i.r` @type ^`int`;
  #L536e28.  v3.`n.i.j` @type ^`int` := v0;
  #L536e2c.  v0:= 0I;
  #L536e2e.  if v0 >= v1 then goto L536e46;
  #L536e32.  v2:= v3.`n.i.q` @type ^`n.b`[] @kind object;
  #L536e36.  v2:= v2[v0] @kind object;
  #L536e3a.  call `A`(v2, v4, v3, v5) @signature `Ln/b;.A:(Ln/d;Ln/i;Z)V` @kind virtual;
  #L536e40.  v0:= v0 + 1;
  #L536e44.  goto L536e2e;
  #L536e46.  v3.`n.i.r` @type ^`int` := v5;
  #L536e4a.  return @kind void;
}
procedure `void` `h`(`n.i` v0 @kind this, `n.i$a` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ln/i;.h:(Ln/i$a;Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L536e5c.  v0.`n.i.p` @type ^`n.i$a` := v1 @kind object;
  #L536e60.  return @kind void;
}
procedure `void` `j`(`n.i` v4 @kind this, `n.d` v5 @kind object, `n.b` v6 @kind object) @signature `Ln/i;.j:(Ln/d;Ln/b;)V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L536e74.  v0:= v4.`n.i.r` @type ^`int`;
  #L536e78.  v1:= 0I;
  #L536e7a.  v2:= 0I;
  #L536e7c.  if v2 >= v0 then goto L536e94;
  #L536e80.  v3:= v4.`n.i.q` @type ^`n.b`[] @kind object;
  #L536e84.  v3:= v3[v2] @kind object;
  #L536e88.  call `B`(v3, v5, v6, v1) @signature `Ln/b;.B:(Ln/d;Ln/b;Z)V` @kind virtual;
  #L536e8e.  v2:= v2 + 1;
  #L536e92.  goto L536e7c;
  #L536e94.  v4.`n.i.r` @type ^`int` := v1;
  #L536e98.  return @kind void;
}
procedure `java.lang.String` `toString`(`n.i` v2 @kind this) @signature `Ln/i;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L536bd8.  v0:= v2.`n.i.h` @type ^`java.lang.String` @kind object;
  #L536bdc.  v1:= "" @kind object;
  #L536be0.  if v0 == 0 then goto L536c08;
  #L536be4.  v0:= new `java.lang.StringBuilder`;
  #L536be8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L536bee.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L536bf4.  v1:= v2.`n.i.h` @type ^`java.lang.String` @kind object;
  #L536bf8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L536bfe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L536c04.  v0:= temp @kind object;
  #L536c06.  goto L536c2a;
  #L536c08.  v0:= new `java.lang.StringBuilder`;
  #L536c0c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L536c12.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L536c18.  v1:= v2.`n.i.i` @type ^`int`;
  #L536c1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L536c22.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L536c28.  v0:= temp @kind object;
  #L536c2a.  return v0 @kind object;
}
