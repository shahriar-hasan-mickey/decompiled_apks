record `d5.a` @kind class @AccessFlag PUBLIC extends `d5.c` @kind class {
  `r4.e` `d5.a.i` @AccessFlag PRIVATE;
  `boolean` `d5.a.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`d5.a` v1 @kind this, `r4.e` v2 @kind object) @signature `Ld5/a;.<init>:(Lr4/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f737c.  v0:= 1I;
  #L4f737e.  call `<init>`(v1, v2, v0) @signature `Ld5/a;.<init>:(Lr4/e;Z)V` @kind direct;
  #L4f7384.  return @kind void;
}
procedure `void` `<init>`(`d5.a` v0 @kind this, `r4.e` v1 @kind object, `boolean` v2 ) @signature `Ld5/a;.<init>:(Lr4/e;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L4f7398.  call `<init>`(v0) @signature `Ld5/c;.<init>:()V` @kind direct;
  #L4f739e.  v0.`d5.a.i` @type ^`r4.e` := v1 @kind object;
  #L4f73a2.  v0.`d5.a.j` @type ^`boolean` := v2 @kind boolean;
  #L4f73a6.  return @kind void;
}
procedure `void` `close`(`d5.a` v2 @kind this) @signature `Ld5/a;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L4f73b8.  @monitorenter v2
  #L4f73ba.  v0:= v2.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f73be.  if v0 != 0 then goto L4f73c6;
  #L4f73c2.  @monitorexit v2
  #L4f73c4.  return @kind void;
  #L4f73c6.  v1:= 0I;
  #L4f73c8.  v2.`d5.a.i` @type ^`r4.e` := v1 @kind object;
  #L4f73cc.  @monitorexit v2
  #L4f73ce.  call `a`(v0) @signature `Lr4/e;.a:()V` @kind virtual;
  #L4f73d4.  return @kind void;
  #L4f73d6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f73d8.  @monitorexit v2
  #L4f73da.  throw v0;
  catch `java.lang.Throwable` @[L4f73ba..L4f73ce] goto L4f73d6;
  catch `java.lang.Throwable` @[L4f73d8..L4f73da] goto L4f73d6;
}
procedure `boolean` `g`(`d5.a` v1 @kind this) @signature `Ld5/a;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f721c.  @monitorenter v1
  #L4f721e.  v0:= v1.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f7222.  if v0 != 0 then goto L4f722a;
  #L4f7226.  v0:= 1I;
  #L4f7228.  goto L4f722c;
  #L4f722a.  v0:= 0I;
  #L4f722c.  @monitorexit v1
  #L4f722e.  return v0;
  #L4f7230.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7232.  @monitorexit v1
  #L4f7234.  throw v0;
  catch `java.lang.Throwable` @[L4f721e..L4f7222] goto L4f7230;
}
procedure `int` `getHeight`(`d5.a` v1 @kind this) @signature `Ld5/a;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f726c.  @monitorenter v1
  #L4f726e.  call temp:= `g`(v1) @signature `Ld5/a;.g:()Z` @kind virtual;
  #L4f7274.  v0:= temp;
  #L4f7276.  if v0 == 0 then goto L4f727e;
  #L4f727a.  v0:= 0I;
  #L4f727c.  goto L4f7292;
  #L4f727e.  v0:= v1.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f7282.  call temp:= `d`(v0) @signature `Lr4/e;.d:()Lr4/c;` @kind virtual;
  #L4f7288.  v0:= temp @kind object;
  #L4f728a.  call temp:= `getHeight`(v0) @signature `Lr4/c;.getHeight:()I` @kind interface;
  #L4f7290.  v0:= temp;
  #L4f7292.  @monitorexit v1
  #L4f7294.  return v0;
  #L4f7296.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7298.  @monitorexit v1
  #L4f729a.  throw v0;
  catch `java.lang.Throwable` @[L4f726e..L4f7292] goto L4f7296;
}
procedure `int` `getWidth`(`d5.a` v1 @kind this) @signature `Ld5/a;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7304.  @monitorenter v1
  #L4f7306.  call temp:= `g`(v1) @signature `Ld5/a;.g:()Z` @kind virtual;
  #L4f730c.  v0:= temp;
  #L4f730e.  if v0 == 0 then goto L4f7316;
  #L4f7312.  v0:= 0I;
  #L4f7314.  goto L4f732a;
  #L4f7316.  v0:= v1.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f731a.  call temp:= `d`(v0) @signature `Lr4/e;.d:()Lr4/c;` @kind virtual;
  #L4f7320.  v0:= temp @kind object;
  #L4f7322.  call temp:= `getWidth`(v0) @signature `Lr4/c;.getWidth:()I` @kind interface;
  #L4f7328.  v0:= temp;
  #L4f732a.  @monitorexit v1
  #L4f732c.  return v0;
  #L4f732e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f7330.  @monitorexit v1
  #L4f7332.  throw v0;
  catch `java.lang.Throwable` @[L4f7306..L4f732a] goto L4f732e;
}
procedure `int` `i`(`d5.a` v1 @kind this) @signature `Ld5/a;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f72b8.  @monitorenter v1
  #L4f72ba.  call temp:= `g`(v1) @signature `Ld5/a;.g:()Z` @kind virtual;
  #L4f72c0.  v0:= temp;
  #L4f72c2.  if v0 == 0 then goto L4f72ca;
  #L4f72c6.  v0:= 0I;
  #L4f72c8.  goto L4f72de;
  #L4f72ca.  v0:= v1.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f72ce.  call temp:= `d`(v0) @signature `Lr4/e;.d:()Lr4/c;` @kind virtual;
  #L4f72d4.  v0:= temp @kind object;
  #L4f72d6.  call temp:= `i`(v0) @signature `Lr4/c;.i:()I` @kind interface;
  #L4f72dc.  v0:= temp;
  #L4f72de.  @monitorexit v1
  #L4f72e0.  return v0;
  #L4f72e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f72e4.  @monitorexit v1
  #L4f72e6.  throw v0;
  catch `java.lang.Throwable` @[L4f72ba..L4f72de] goto L4f72e2;
}
procedure `boolean` `k`(`d5.a` v1 @kind this) @signature `Ld5/a;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7254.  v0:= v1.`d5.a.j` @type ^`boolean` @kind boolean;
  #L4f7258.  return v0;
}
procedure `r4.e` `s`(`d5.a` v1 @kind this) @signature `Ld5/a;.s:()Lr4/e;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7350.  @monitorenter v1
  #L4f7352.  v0:= v1.`d5.a.i` @type ^`r4.e` @kind object;
  #L4f7356.  @monitorexit v1
  #L4f7358.  return v0 @kind object;
  #L4f735a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f735c.  @monitorexit v1
  #L4f735e.  throw v0;
  catch `java.lang.Throwable` @[L4f7352..L4f7356] goto L4f735a;
}
