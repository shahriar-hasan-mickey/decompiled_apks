record `d5.c` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface, `d5.h` @kind interface, `d5.g` @kind interface {
  `java.util.Map` `d5.c.g` @AccessFlag PRIVATE;
}
global `java.lang.String`[] `@@d5.c.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Ld5/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f745c.  v0:= "encoded_size" @kind object;
  #L4f7460.  v1:= "encoded_width" @kind object;
  #L4f7464.  v2:= "encoded_height" @kind object;
  #L4f7468.  v3:= "uri_source" @kind object;
  #L4f746c.  v4:= "image_format" @kind object;
  #L4f7470.  v5:= "bitmap_config" @kind object;
  #L4f7474.  temp:= new `java.lang.String`[v0, v1, v2, v3, v4, v5];
  #L4f747a.  v0:= temp @kind object;
  #L4f747c.  `@@d5.c.h` @type ^`java.lang.String`[] := v0 @kind object;
  #L4f7480.  return @kind void;
}
procedure `void` `<init>`(`d5.c` v1 @kind this) @signature `Ld5/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4f7494.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4f749a.  v0:= new `java.util.HashMap`;
  #L4f749e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L4f74a4.  v1.`d5.c.g` @type ^`java.util.Map` := v0 @kind object;
  #L4f74a8.  return @kind void;
}
procedure `void` `close`() @signature `Ld5/c;.close:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `d5.j` `e`(`d5.c` v1 @kind this) @signature `Ld5/c;.e:()Ld5/j;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f742c.  v0:= `@@d5.i.d` @type ^`d5.j` @kind object;
  #L4f7430.  return v0 @kind object;
}
procedure `void` `finalize`(`d5.c` v3 @kind this) @signature `Ld5/c;.finalize:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L4f74bc.  call temp:= `g`(v3) @signature `Ld5/c;.g:()Z` @kind virtual;
  #L4f74c2.  v0:= temp;
  #L4f74c4.  if v0 == 0 then goto L4f74ca;
  #L4f74c8.  return @kind void;
  #L4f74ca.  v0:= 2I;
  #L4f74cc.  v0:= new `java.lang.Object`[v0];
  #L4f74d0.  v1:= 0I;
  #L4f74d2.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L4f74d8.  v2:= temp @kind object;
  #L4f74da.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L4f74e0.  v2:= temp @kind object;
  #L4f74e2.  v0[v1]:= v2 @kind object;
  #L4f74e6.  v1:= 1I;
  #L4f74e8.  call temp:= `identityHashCode`(v3) @signature `Ljava/lang/System;.identityHashCode:(Ljava/lang/Object;)I` @kind static;
  #L4f74ee.  v2:= temp;
  #L4f74f0.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L4f74f6.  v2:= temp @kind object;
  #L4f74f8.  v0[v1]:= v2 @kind object;
  #L4f74fc.  v1:= "CloseableImage" @kind object;
  #L4f7500.  v2:= "finalize: %s %x still open." @kind object;
  #L4f7504.  call `x`(v1, v2, v0) @signature `Li3/a;.x:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L4f750a.  call `close`(v3) @signature `Ld5/c;.close:()V` @kind virtual;
  #L4f7510.  call `finalize`(v3) @signature `Ljava/lang/Object;.finalize:()V` @kind super;
  #L4f7516.  return @kind void;
  #L4f7518.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L4f751a.  call `finalize`(v3) @signature `Ljava/lang/Object;.finalize:()V` @kind super;
  #L4f7520.  throw v0;
  catch `java.lang.Throwable` @[L4f750a..L4f7510] goto L4f7518;
}
procedure `boolean` `g`() @signature `Ld5/c;.g:()Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.Map` `getExtras`(`d5.c` v1 @kind this) @signature `Ld5/c;.getExtras:()Ljava/util/Map;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7444.  v0:= v1.`d5.c.g` @type ^`java.util.Map` @kind object;
  #L4f7448.  return v0 @kind object;
}
procedure `int` `i`() @signature `Ld5/c;.i:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `k`(`d5.c` v1 @kind this) @signature `Ld5/c;.k:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L4f7418.  v0:= 0I;
  #L4f741a.  return v0;
}
procedure `void` `r`(`d5.c` v6 @kind this, `java.util.Map` v7 @kind object) @signature `Ld5/c;.r:(Ljava/util/Map;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4f7540.  if v7 != 0 then goto L4f7546;
  #L4f7544.  return @kind void;
  #L4f7546.  v0:= `@@d5.c.h` @type ^`java.lang.String`[] @kind object;
  #L4f754a.  v1:= length @variable v0;
  #L4f754c.  v2:= 0I;
  #L4f754e.  if v2 >= v1 then goto L4f7574;
  #L4f7552.  v3:= v0[v2] @kind object;
  #L4f7556.  call temp:= `get`(v7, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f755c.  v4:= temp @kind object;
  #L4f755e.  if v4 != 0 then goto L4f7564;
  #L4f7562.  goto L4f756e;
  #L4f7564.  v5:= v6.`d5.c.g` @type ^`java.util.Map` @kind object;
  #L4f7568.  call temp:= `put`(v5, v3, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L4f756e.  v2:= v2 + 1;
  #L4f7572.  goto L4f754e;
  #L4f7574.  return @kind void;
}
