record `u4.a` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`u4.a` v0 @kind this) @signature `Lu4/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L5671f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5671f6.  return @kind void;
}
procedure `void` `a`(`u4.a` v3 @kind this, `int`[] v4 @kind object) @signature `Lu4/a;.a:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L567208.  v0:= 0I;
  #L56720a.  v1:= length @variable v4;
  #L56720c.  if v0 >= v1 then goto L56722a;
  #L567210.  v1:= v4[v0];
  #L567214.  v2:= 11I;
  #L567218.  if v1 >= v2 then goto L567224;
  #L56721c.  v1:= 100I;
  #L567220.  v4[v0]:= v1;
  #L567224.  v0:= v0 + 1;
  #L567228.  goto L56720a;
  #L56722a.  return @kind void;
}
procedure `int`[] `b`(`u4.a` v4 @kind this, `int`[] v5 @kind object) @signature `Lu4/a;.b:([I)[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5671bc.  v0:= length @variable v5;
  #L5671be.  v0:= new `int`[v0];
  #L5671c2.  v1:= 0I;
  #L5671c4.  v2:= 0I;
  #L5671c6.  v3:= length @variable v5;
  #L5671c8.  if v1 >= v3 then goto L5671dc;
  #L5671cc.  v0[v1]:= v2;
  #L5671d0.  v3:= v5[v1];
  #L5671d4.  v2:= v2 + v3 @kind int;
  #L5671d6.  v1:= v1 + 1;
  #L5671da.  goto L5671c6;
  #L5671dc.  return v0 @kind object;
}
procedure `int` `c`(`u4.a` v3 @kind this, `int`[] v4 @kind object) @signature `Lu4/a;.c:([I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L567194.  v0:= 0I;
  #L567196.  v1:= 0I;
  #L567198.  v2:= length @variable v4;
  #L56719a.  if v0 >= v2 then goto L5671aa;
  #L56719e.  v2:= v4[v0];
  #L5671a2.  v1:= v1 + v2 @kind int;
  #L5671a4.  v0:= v0 + 1;
  #L5671a8.  goto L567198;
  #L5671aa.  return v1;
}
