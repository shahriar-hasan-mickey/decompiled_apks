record `b0.a` @kind class @AccessFlag  {
  `m.g` `b0.a.a` @AccessFlag PRIVATE_FINAL;
  `java.util.ArrayList` `b0.a.b` @AccessFlag FINAL;
  `b0.a$a` `b0.a.c` @AccessFlag PRIVATE_FINAL;
  `b0.a$c` `b0.a.d` @AccessFlag PRIVATE;
  `long` `b0.a.e` @AccessFlag ;
  `boolean` `b0.a.f` @AccessFlag PRIVATE;
}
global `java.lang.ThreadLocal` `@@b0.a.g` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lb0/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L29fc9c.  v0:= new `java.lang.ThreadLocal`;
  #L29fca0.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L29fca6.  `@@b0.a.g` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L29fcaa.  return @kind void;
}
procedure `void` `<init>`(`b0.a` v2 @kind this) @signature `Lb0/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L29fcbc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L29fcc2.  v0:= new `m.g`;
  #L29fcc6.  call `<init>`(v0) @signature `Lm/g;.<init>:()V` @kind direct;
  #L29fccc.  v2.`b0.a.a` @type ^`m.g` := v0 @kind object;
  #L29fcd0.  v0:= new `java.util.ArrayList`;
  #L29fcd4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L29fcda.  v2.`b0.a.b` @type ^`java.util.ArrayList` := v0 @kind object;
  #L29fcde.  v0:= new `b0.a$a`;
  #L29fce2.  call `<init>`(v0, v2) @signature `Lb0/a$a;.<init>:(Lb0/a;)V` @kind direct;
  #L29fce8.  v2.`b0.a.c` @type ^`b0.a$a` := v0 @kind object;
  #L29fcec.  v0:= 0L;
  #L29fcf0.  v2.`b0.a.e` @type ^`long` := v0 @kind wide;
  #L29fcf4.  v0:= 0I;
  #L29fcf6.  v2.`b0.a.f` @type ^`boolean` := v0 @kind boolean;
  #L29fcfa.  return @kind void;
}
procedure `void` `b`(`b0.a` v2 @kind this) @signature `Lb0/a;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L29fd80.  v0:= v2.`b0.a.f` @type ^`boolean` @kind boolean;
  #L29fd84.  if v0 == 0 then goto L29fdc2;
  #L29fd88.  v0:= v2.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fd8c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L29fd92.  v0:= temp;
  #L29fd94.  v0:= v0 + -1;
  #L29fd98.  if v0 < 0 then goto L29fdbc;
  #L29fd9c.  v1:= v2.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fda0.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L29fda6.  v1:= temp @kind object;
  #L29fda8.  if v1 != 0 then goto L29fdb6;
  #L29fdac.  v1:= v2.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fdb0.  call temp:= `remove`(v1, v0) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L29fdb6.  v0:= v0 + -1;
  #L29fdba.  goto L29fd98;
  #L29fdbc.  v0:= 0I;
  #L29fdbe.  v2.`b0.a.f` @type ^`boolean` := v0 @kind boolean;
  #L29fdc2.  return @kind void;
}
procedure `b0.a` `d`() @signature `Lb0/a;.d:()Lb0/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L29fbc4.  v0:= `@@b0.a.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L29fbc8.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L29fbce.  v1:= temp @kind object;
  #L29fbd0.  if v1 != 0 then goto L29fbe4;
  #L29fbd4.  v1:= new `b0.a`;
  #L29fbd8.  call `<init>`(v1) @signature `Lb0/a;.<init>:()V` @kind direct;
  #L29fbde.  call `set`(v0, v1) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L29fbe4.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L29fbea.  v0:= temp @kind object;
  #L29fbec.  v0:= (`b0.a`) v0 @kind object;
  #L29fbf0.  return v0 @kind object;
}
procedure `boolean` `f`(`b0.a` v4 @kind this, `b0.a$b` v5 @kind object, `long` v6 ) @signature `Lb0/a;.f:(Lb0/a$b;J)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L29fc54.  v0:= v4.`b0.a.a` @type ^`m.g` @kind object;
  #L29fc58.  call temp:= `get`(v0, v5) @signature `Lm/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29fc5e.  v0:= temp @kind object;
  #L29fc60.  v0:= (`java.lang.Long`) v0 @kind object;
  #L29fc64.  v1:= 1I;
  #L29fc66.  if v0 != 0 then goto L29fc6c;
  #L29fc6a.  return v1;
  #L29fc6c.  call temp:= `longValue`(v0) @signature `Ljava/lang/Long;.longValue:()J` @kind virtual;
  #L29fc72.  v2:= temp @kind wide;
  #L29fc74.  v0:= lcmp(v2, v6);
  #L29fc78.  if v0 >= 0 then goto L29fc88;
  #L29fc7c.  v6:= v4.`b0.a.a` @type ^`m.g` @kind object;
  #L29fc80.  call temp:= `remove`(v6, v5) @signature `Lm/g;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29fc86.  return v1;
  #L29fc88.  v5:= 0I;
  #L29fc8a.  return v5;
}
procedure `void` `a`(`b0.a` v3 @kind this, `b0.a$b` v4 @kind object, `long` v5 ) @signature `Lb0/a;.a:(Lb0/a$b;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L29fd0c.  v0:= v3.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fd10.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L29fd16.  v0:= temp;
  #L29fd18.  if v0 != 0 then goto L29fd2a;
  #L29fd1c.  call temp:= `e`(v3) @signature `Lb0/a;.e:()Lb0/a$c;` @kind virtual;
  #L29fd22.  v0:= temp @kind object;
  #L29fd24.  call `a`(v0) @signature `Lb0/a$c;.a:()V` @kind virtual;
  #L29fd2a.  v0:= v3.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fd2e.  call temp:= `contains`(v0, v4) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L29fd34.  v0:= temp;
  #L29fd36.  if v0 != 0 then goto L29fd44;
  #L29fd3a.  v0:= v3.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fd3e.  call temp:= `add`(v0, v4) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L29fd44.  v0:= 0L;
  #L29fd48.  v2:= lcmp(v5, v0);
  #L29fd4c.  if v2 <= 0 then goto L29fd6c;
  #L29fd50.  v0:= v3.`b0.a.a` @type ^`m.g` @kind object;
  #L29fd54.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L29fd5a.  v1:= temp @kind wide;
  #L29fd5c.  v1:= v1 + v5 @kind long;
  #L29fd5e.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L29fd64.  v5:= temp @kind object;
  #L29fd66.  call temp:= `put`(v0, v4, v5) @signature `Lm/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29fd6c.  return @kind void;
}
procedure `void` `c`(`b0.a` v5 @kind this, `long` v6 ) @signature `Lb0/a;.c:(J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L29fdd4.  call temp:= `uptimeMillis`() @signature `Landroid/os/SystemClock;.uptimeMillis:()J` @kind static;
  #L29fdda.  v0:= temp @kind wide;
  #L29fddc.  v2:= 0I;
  #L29fdde.  v3:= v5.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fde2.  call temp:= `size`(v3) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L29fde8.  v3:= temp;
  #L29fdea.  if v2 >= v3 then goto L29fe1c;
  #L29fdee.  v3:= v5.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fdf2.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L29fdf8.  v3:= temp @kind object;
  #L29fdfa.  v3:= (`b0.a$b`) v3 @kind object;
  #L29fdfe.  if v3 != 0 then goto L29fe04;
  #L29fe02.  goto L29fe16;
  #L29fe04.  call temp:= `f`(v5, v3, v0) @signature `Lb0/a;.f:(Lb0/a$b;J)Z` @kind direct;
  #L29fe0a.  v4:= temp;
  #L29fe0c.  if v4 == 0 then goto L29fe16;
  #L29fe10.  call temp:= `a`(v3, v6) @signature `Lb0/a$b;.a:(J)Z` @kind interface;
  #L29fe16.  v2:= v2 + 1;
  #L29fe1a.  goto L29fdde;
  #L29fe1c.  call `b`(v5) @signature `Lb0/a;.b:()V` @kind direct;
  #L29fe22.  return @kind void;
}
procedure `b0.a$c` `e`(`b0.a` v2 @kind this) @signature `Lb0/a;.e:()Lb0/a$c;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L29fc04.  v0:= v2.`b0.a.d` @type ^`b0.a$c` @kind object;
  #L29fc08.  if v0 != 0 then goto L29fc3e;
  #L29fc0c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L29fc10.  v1:= 16I;
  #L29fc14.  if v0 < v1 then goto L29fc2c;
  #L29fc18.  v0:= new `b0.a$e`;
  #L29fc1c.  v1:= v2.`b0.a.c` @type ^`b0.a$a` @kind object;
  #L29fc20.  call `<init>`(v0, v1) @signature `Lb0/a$e;.<init>:(Lb0/a$a;)V` @kind direct;
  #L29fc26.  v2.`b0.a.d` @type ^`b0.a$c` := v0 @kind object;
  #L29fc2a.  goto L29fc3e;
  #L29fc2c.  v0:= new `b0.a$d`;
  #L29fc30.  v1:= v2.`b0.a.c` @type ^`b0.a$a` @kind object;
  #L29fc34.  call `<init>`(v0, v1) @signature `Lb0/a$d;.<init>:(Lb0/a$a;)V` @kind direct;
  #L29fc3a.  v2.`b0.a.d` @type ^`b0.a$c` := v0 @kind object;
  #L29fc3e.  v0:= v2.`b0.a.d` @type ^`b0.a$c` @kind object;
  #L29fc42.  return v0 @kind object;
}
procedure `void` `g`(`b0.a` v2 @kind this, `b0.a$b` v3 @kind object) @signature `Lb0/a;.g:(Lb0/a$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L29fe34.  v0:= v2.`b0.a.a` @type ^`m.g` @kind object;
  #L29fe38.  call temp:= `remove`(v0, v3) @signature `Lm/g;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29fe3e.  v0:= v2.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fe42.  call temp:= `indexOf`(v0, v3) @signature `Ljava/util/ArrayList;.indexOf:(Ljava/lang/Object;)I` @kind virtual;
  #L29fe48.  v3:= temp;
  #L29fe4a.  if v3 < 0 then goto L29fe60;
  #L29fe4e.  v0:= v2.`b0.a.b` @type ^`java.util.ArrayList` @kind object;
  #L29fe52.  v1:= 0I;
  #L29fe54.  call temp:= `set`(v0, v3, v1) @signature `Ljava/util/ArrayList;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L29fe5a.  v3:= 1I;
  #L29fe5c.  v2.`b0.a.f` @type ^`boolean` := v3 @kind boolean;
  #L29fe60.  return @kind void;
}
