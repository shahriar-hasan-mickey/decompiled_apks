record `n5.a` @kind class @AccessFlag FINAL extends `n5.c` @kind class {
  `java.lang.Integer` `n5.a.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `n5.a.b` @AccessFlag PRIVATE_FINAL;
  `n5.d` `n5.a.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`n5.a` v0 @kind this, `java.lang.Integer` v1 @kind object, `java.lang.Object` v2 @kind object, `n5.d` v3 @kind object) @signature `Ln5/a;.<init>:(Ljava/lang/Integer;Ljava/lang/Object;Ln5/d;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L53e15c.  call `<init>`(v0) @signature `Ln5/c;.<init>:()V` @kind direct;
  #L53e162.  v0.`n5.a.a` @type ^`java.lang.Integer` := v1 @kind object;
  #L53e166.  v1:= "Null payload" @kind object;
  #L53e16a.  call temp:= `requireNonNull`(v2, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L53e170.  v0.`n5.a.b` @type ^`java.lang.Object` := v2 @kind object;
  #L53e174.  v1:= "Null priority" @kind object;
  #L53e178.  call temp:= `requireNonNull`(v3, v1) @signature `Ljava/util/Objects;.requireNonNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L53e17e.  v0.`n5.a.c` @type ^`n5.d` := v3 @kind object;
  #L53e182.  return @kind void;
}
procedure `java.lang.Integer` `a`(`n5.a` v1 @kind this) @signature `Ln5/a;.a:()Ljava/lang/Integer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53e0a8.  v0:= v1.`n5.a.a` @type ^`java.lang.Integer` @kind object;
  #L53e0ac.  return v0 @kind object;
}
procedure `java.lang.Object` `b`(`n5.a` v1 @kind this) @signature `Ln5/a;.b:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53e0c0.  v0:= v1.`n5.a.b` @type ^`java.lang.Object` @kind object;
  #L53e0c4.  return v0 @kind object;
}
procedure `n5.d` `c`(`n5.a` v1 @kind this) @signature `Ln5/a;.c:()Ln5/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53e144.  v0:= v1.`n5.a.c` @type ^`n5.d` @kind object;
  #L53e148.  return v0 @kind object;
}
procedure `boolean` `equals`(`n5.a` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Ln5/a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L53dfcc.  v0:= 1I;
  #L53dfce.  if v5 != v4 then goto L53dfd4;
  #L53dfd2.  return v0;
  #L53dfd4.  v1:= instanceof @variable v5 @type ^`n5.c` @kind boolean;
  #L53dfd8.  v2:= 0I;
  #L53dfda.  if v1 == 0 then goto L53e042;
  #L53dfde.  v5:= (`n5.c`) v5 @kind object;
  #L53dfe2.  v1:= v4.`n5.a.a` @type ^`java.lang.Integer` @kind object;
  #L53dfe6.  if v1 != 0 then goto L53dff8;
  #L53dfea.  call temp:= `a`(v5) @signature `Ln5/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L53dff0.  v1:= temp @kind object;
  #L53dff2.  if v1 != 0 then goto L53e03e;
  #L53dff6.  goto L53e00c;
  #L53dff8.  call temp:= `a`(v5) @signature `Ln5/c;.a:()Ljava/lang/Integer;` @kind virtual;
  #L53dffe.  v3:= temp @kind object;
  #L53e000.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Integer;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53e006.  v1:= temp;
  #L53e008.  if v1 == 0 then goto L53e03e;
  #L53e00c.  v1:= v4.`n5.a.b` @type ^`java.lang.Object` @kind object;
  #L53e010.  call temp:= `b`(v5) @signature `Ln5/c;.b:()Ljava/lang/Object;` @kind virtual;
  #L53e016.  v3:= temp @kind object;
  #L53e018.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53e01e.  v1:= temp;
  #L53e020.  if v1 == 0 then goto L53e03e;
  #L53e024.  v1:= v4.`n5.a.c` @type ^`n5.d` @kind object;
  #L53e028.  call temp:= `c`(v5) @signature `Ln5/c;.c:()Ln5/d;` @kind virtual;
  #L53e02e.  v5:= temp @kind object;
  #L53e030.  call temp:= `equals`(v1, v5) @signature `Ljava/lang/Enum;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53e036.  v5:= temp;
  #L53e038.  if v5 == 0 then goto L53e03e;
  #L53e03c.  goto L53e040;
  #L53e03e.  v0:= 0I;
  #L53e040.  return v0;
  #L53e042.  return v2;
}
procedure `int` `hashCode`(`n5.a` v3 @kind this) @signature `Ln5/a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L53e054.  v0:= v3.`n5.a.a` @type ^`java.lang.Integer` @kind object;
  #L53e058.  if v0 != 0 then goto L53e060;
  #L53e05c.  v0:= 0I;
  #L53e05e.  goto L53e068;
  #L53e060.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Integer;.hashCode:()I` @kind virtual;
  #L53e066.  v0:= temp;
  #L53e068.  v1:= 1000003I;
  #L53e06e.  v0:= v0 ^~ v1 @kind int;
  #L53e070.  v0:= v0 * v1 @kind int;
  #L53e074.  v2:= v3.`n5.a.b` @type ^`java.lang.Object` @kind object;
  #L53e078.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L53e07e.  v2:= temp;
  #L53e080.  v0:= v0 ^~ v2 @kind int;
  #L53e082.  v0:= v0 * v1 @kind int;
  #L53e086.  v1:= v3.`n5.a.c` @type ^`n5.d` @kind object;
  #L53e08a.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Enum;.hashCode:()I` @kind virtual;
  #L53e090.  v1:= temp;
  #L53e092.  v0:= v0 ^~ v1 @kind int;
  #L53e094.  return v0;
}
procedure `java.lang.String` `toString`(`n5.a` v2 @kind this) @signature `Ln5/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L53e0d8.  v0:= new `java.lang.StringBuilder`;
  #L53e0dc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53e0e2.  v1:= "Event{code=" @kind object;
  #L53e0e6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e0ec.  v1:= v2.`n5.a.a` @type ^`java.lang.Integer` @kind object;
  #L53e0f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e0f6.  v1:= ", payload=" @kind object;
  #L53e0fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e100.  v1:= v2.`n5.a.b` @type ^`java.lang.Object` @kind object;
  #L53e104.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e10a.  v1:= ", priority=" @kind object;
  #L53e10e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e114.  v1:= v2.`n5.a.c` @type ^`n5.d` @kind object;
  #L53e118.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e11e.  v1:= "}" @kind object;
  #L53e122.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53e128.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53e12e.  v0:= temp @kind object;
  #L53e130.  return v0 @kind object;
}
