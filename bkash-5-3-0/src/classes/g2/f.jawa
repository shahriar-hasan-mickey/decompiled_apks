record `g2.f` @kind class @AccessFlag PUBLIC_ABSTRACT extends `g2.b` @kind class {
}
procedure `void` `<init>`(`g2.f` v0 @kind this, `x1.c` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lg2/f;.<init>:(Lx1/c;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L507974.  call `<init>`(v0, v1, v2) @signature `Lg2/b;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L50797a.  return @kind void;
}
procedure `boolean` `e`(`g2.f` v6 @kind this, `java.lang.String` v7 @kind object, `boolean` v8 ) @signature `Lg2/f;.e:(Ljava/lang/String;Z)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L5078bc.  if v8 == 0 then goto L507958;
  #L5078c0.  call temp:= `a`() @signature `Lf2/e;.a:()Lx1/c;` @kind static;
  #L5078c6.  v8:= temp @kind object;
  #L5078c8.  call temp:= `i`(v8) @signature `Lx1/c;.i:()Lx1/d;` @kind interface;
  #L5078ce.  v8:= temp @kind object;
  #L5078d0.  if v8 == 0 then goto L50794e;
  #L5078d4.  v0:= "\\$\\$" @kind object;
  #L5078d8.  call temp:= `split`(v7, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L5078de.  v7:= temp @kind object;
  #L5078e0.  v0:= length @variable v7;
  #L5078e2.  v1:= new `java.lang.StringBuffer`;
  #L5078e6.  call `<init>`(v1) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L5078ec.  v2:= 0I;
  #L5078ee.  if v2 >= v0 then goto L50793c;
  #L5078f2.  v3:= v7[v2] @kind object;
  #L5078f6.  call temp:= `a`(v8, v3) @signature `Lx1/d;.a:(Ljava/lang/String;)Ljava/lang/String;` @kind interface;
  #L5078fc.  v3:= temp @kind object;
  #L5078fe.  call temp:= `isEmpty`(v3) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L507904.  v4:= temp;
  #L507906.  v5:= "$$" @kind object;
  #L50790a.  if v4 != 0 then goto L507926;
  #L50790e.  v4:= "1_" @kind object;
  #L507912.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L507918.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L50791e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L507924.  goto L507936;
  #L507926.  v3:= v7[v2] @kind object;
  #L50792a.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L507930.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L507936.  v2:= v2 + 1;
  #L50793a.  goto L5078ee;
  #L50793c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L507942.  v7:= temp @kind object;
  #L507944.  call temp:= `b`(v6, v7) @signature `Lg2/b;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L50794a.  v7:= temp;
  #L50794c.  return v7;
  #L50794e.  call temp:= `b`(v6, v7) @signature `Lg2/b;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L507954.  v7:= temp;
  #L507956.  return v7;
  #L507958.  call temp:= `b`(v6, v7) @signature `Lg2/b;.b:(Ljava/lang/String;)Z` @kind virtual;
  #L50795e.  v7:= temp;
  #L507960.  return v7;
}
