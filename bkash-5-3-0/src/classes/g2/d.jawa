record `g2.d` @kind class @AccessFlag PUBLIC extends `g2.f` @kind class {
  `java.io.File` `g2.d.h` @AccessFlag PRIVATE;
  `long` `g2.d.i` @AccessFlag PRIVATE;
  `long` `g2.d.j` @AccessFlag PRIVATE;
  `java.io.File` `g2.d.k` @AccessFlag PRIVATE;
  `long` `g2.d.l` @AccessFlag PRIVATE_VOLATILE;
  `long` `g2.d.m` @AccessFlag PRIVATE_VOLATILE;
  `double` `g2.d.n` @AccessFlag PRIVATE_VOLATILE;
  `java.lang.StringBuilder` `g2.d.o` @AccessFlag PRIVATE;
  `int` `g2.d.p` @AccessFlag PRIVATE;
  `boolean` `g2.d.q` @AccessFlag PRIVATE;
  `boolean` `g2.d.r` @AccessFlag PRIVATE;
}
global `int` `@@g2.d.s` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Comparator` `@@g2.d.t` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lg2/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L50731c.  v0:= new `g2.e`;
  #L507320.  call `<init>`(v0) @signature `Lg2/e;.<init>:()V` @kind direct;
  #L507326.  `@@g2.d.t` @type ^`java.util.Comparator` := v0 @kind object;
  #L50732a.  return @kind void;
}
procedure `void` `<init>`(`g2.d` v0 @kind this, `x1.c` v1 @kind object, `java.lang.String` v2 @kind object, `long` v3 , `long` v5 , `long` v7 , `int` v9 ) @signature `Lg2/d;.<init>:(Lx1/c;Ljava/lang/String;JJJI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50733c.  call `<init>`(v0, v1, v2) @signature `Lg2/f;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L507342.  v1:= 0.25D;
  #L507346.  v0.`g2.d.n` @type ^`double` := v1 @kind wide;
  #L50734a.  v0.`g2.d.j` @type ^`long` := v3 @kind wide;
  #L50734e.  v0.`g2.d.l` @type ^`long` := v5 @kind wide;
  #L507352.  v0.`g2.d.m` @type ^`long` := v7 @kind wide;
  #L507356.  v9:= v9 / 2;
  #L50735a.  v0.`g2.d.p` @type ^`int` := v9;
  #L50735e.  v1:= new `java.lang.StringBuilder`;
  #L507362.  call `<init>`(v1, v9) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L507368.  v0.`g2.d.o` @type ^`java.lang.StringBuilder` := v1 @kind object;
  #L50736c.  return @kind void;
}
procedure `void` `h`(`g2.d` v14 @kind this, `java.io.File` v15 @kind object, `long` v16 , `long` v18 ) @signature `Lg2/d;.h:(Ljava/io/File;JJ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L5073cc.  v1:= "cleanExpiresFile" @kind object;
  #L5073d0.  v2:= "Appender" @kind object;
  #L5073d4.  if v15 == 0 then goto L50751e;
  #L5073d8.  call temp:= `isDirectory`(v15) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L5073de.  v0:= temp;
  #L5073e0.  if v0 != 0 then goto L5073e8;
  #L5073e4.  goto L50751e;
  #L5073e8.  v3:= 0I;
  #L5073ea.  call temp:= `listFiles`(v15) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L5073f0.  v3:= temp @kind object;
  #L5073f2.  goto L507406;
  #L5073f4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5073f6.  v4:= v0 @kind object;
  #L5073f8.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5073fe.  v0:= temp @kind object;
  #L507400.  call `i`(v0, v2, v1, v4) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L507406.  if v3 == 0 then goto L50751a;
  #L50740a.  v0:= length @variable v3;
  #L50740c.  if v0 != 0 then goto L507414;
  #L507410.  goto L50751a;
  #L507414.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L50741a.  v4:= temp @kind wide;
  #L50741c.  v6:= v4 - v16 @kind long;
  #L507420.  v4:= v4 + v16 @kind long;
  #L507424.  v8:= length @variable v3;
  #L507426.  v9:= 0I;
  #L507428.  v10:= 0I;
  #L50742a.  if v10 >= v8 then goto L5074de;
  #L50742e.  v11:= v3[v10] @kind object;
  #L507432.  if v11 == 0 then goto L5074d8;
  #L507436.  call temp:= `exists`(v11) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L50743c.  v0:= temp;
  #L50743e.  if v0 == 0 then goto L5074d8;
  #L507442.  call temp:= `isFile`(v11) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L507448.  v0:= temp;
  #L50744a.  if v0 != 0 then goto L507450;
  #L50744e.  goto L5074d8;
  #L507450.  call temp:= `getName`(v11) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L507456.  v0:= temp @kind object;
  #L507458.  v12:= "_" @kind object;
  #L50745c.  call temp:= `split`(v0, v12) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L507462.  v0:= temp @kind object;
  #L507464.  v0:= v0[v9] @kind object;
  #L507468.  call temp:= `isDigitsOnly`(v0) @signature `Landroid/text/TextUtils;.isDigitsOnly:(Ljava/lang/CharSequence;)Z` @kind static;
  #L50746e.  v12:= temp;
  #L507470.  if v12 == 0 then goto L5074d8;
  #L507474.  call temp:= `parseLong`(v0) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L50747a.  v12:= temp @kind wide;
  #L50747c.  v0:= lcmp(v12, v6);
  #L507480.  if v0 < 0 then goto L50748c;
  #L507484.  v0:= lcmp(v12, v4);
  #L507488.  if v0 <= 0 then goto L5074d8;
  #L50748c.  call temp:= `delete`(v11) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L507492.  v0:= new `java.lang.StringBuilder`;
  #L507496.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L50749c.  v12:= "cleanExpiresFile: " @kind object;
  #L5074a0.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5074a6.  call temp:= `getName`(v11) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L5074ac.  v12:= temp @kind object;
  #L5074ae.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5074b4.  v12:= " is too old !" @kind object;
  #L5074b8.  call temp:= `append`(v0, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5074be.  goto L5074d8;
  #L5074c0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5074c2.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5074c8.  v12:= temp @kind object;
  #L5074ca.  call temp:= `getName`(v11) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L5074d0.  v11:= temp @kind object;
  #L5074d2.  call `i`(v12, v2, v11, v0) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L5074d8.  v10:= v10 + 1;
  #L5074dc.  goto L50742a;
  #L5074de.  call temp:= `j`(v15) @signature `Ln2/g;.j:(Ljava/io/File;)J` @kind static;
  #L5074e4.  v3:= temp @kind wide;
  #L5074e6.  v0:= lcmp(v3, v18);
  #L5074ea.  if v0 >= 0 then goto L5074f0;
  #L5074ee.  return @kind void;
  #L5074f0.  call temp:= `listFiles`(v15) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L5074f6.  v0:= temp @kind object;
  #L5074f8.  v3:= v14 @kind object;
  #L5074fa.  call `i`(v14, v0) @signature `Lg2/d;.i:([Ljava/io/File;)V` @kind virtual;
  #L507500.  goto L507518;
  #L507502.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507504.  goto L50750a;
  #L507506.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507508.  v3:= v14 @kind object;
  #L50750a.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L507510.  v4:= temp @kind object;
  #L507512.  call `e`(v4, v2, v1, v0) @signature `Lj2/b;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L507518.  return @kind void;
  #L50751a.  v3:= v14 @kind object;
  #L50751c.  return @kind void;
  #L50751e.  v3:= v14 @kind object;
  #L507520.  return @kind void;
  catch `java.lang.Throwable` @[L5073ea..L5073f2] goto L5073f4;
  catch `java.lang.Throwable` @[L507450..L5074be] goto L5074c0;
  catch `java.lang.Throwable` @[L5074f0..L5074f8] goto L507506;
  catch `java.lang.Throwable` @[L5074fa..L507500] goto L507502;
}
procedure `java.io.File` `n`(`g2.d` v4 @kind this) @signature `Lg2/d;.n:()Ljava/io/File;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L507288.  v0:= v4.`g2.d.k` @type ^`java.io.File` @kind object;
  #L50728c.  v1:= "getCurrentLogsDir" @kind object;
  #L507290.  v2:= "Appender" @kind object;
  #L507294.  if v0 != 0 then goto L5072be;
  #L507298.  v0:= v4.`g2.b.c` @type ^`android.content.Context` @kind object;
  #L50729c.  v3:= v4.`g2.b.b` @type ^`java.lang.String` @kind object;
  #L5072a0.  call temp:= `b`(v0, v3) @signature `Ln2/j;.b:(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;` @kind static;
  #L5072a6.  v0:= temp @kind object;
  #L5072a8.  v4.`g2.d.k` @type ^`java.io.File` := v0 @kind object;
  #L5072ac.  goto L5072be;
  #L5072ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5072b0.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5072b6.  v3:= temp @kind object;
  #L5072b8.  call `i`(v3, v2, v1, v0) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L5072be.  v0:= v4.`g2.d.k` @type ^`java.io.File` @kind object;
  #L5072c2.  if v0 == 0 then goto L5072ee;
  #L5072c6.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L5072cc.  v0:= temp;
  #L5072ce.  if v0 != 0 then goto L5072ee;
  #L5072d2.  v0:= v4.`g2.d.k` @type ^`java.io.File` @kind object;
  #L5072d6.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L5072dc.  goto L5072ee;
  #L5072de.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5072e0.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5072e6.  v3:= temp @kind object;
  #L5072e8.  call `i`(v3, v2, v1, v0) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L5072ee.  v0:= v4.`g2.d.k` @type ^`java.io.File` @kind object;
  #L5072f2.  return v0 @kind object;
  catch `java.lang.Throwable` @[L507298..L5072ac] goto L5072ae;
  catch `java.lang.Throwable` @[L5072be..L5072dc] goto L5072de;
}
procedure `java.io.File` `a`(`g2.d` v10 @kind this) @signature `Lg2/d;.a:()Ljava/io/File;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L507104.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L50710a.  v0:= temp @kind wide;
  #L50710c.  v2:= v10.`g2.d.j` @type ^`long` @kind wide;
  #L507110.  v0:= v0 / v2 @kind long;
  #L507112.  v0:= v0 * v2 @kind long;
  #L507116.  v10.`g2.d.i` @type ^`long` := v0 @kind wide;
  #L50711a.  v0:= new `java.lang.StringBuilder`;
  #L50711e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L507124.  v1:= v10.`g2.d.i` @type ^`long` @kind wide;
  #L507128.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L50712e.  v1:= "_" @kind object;
  #L507132.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507138.  v2:= v10.`g2.b.d` @type ^`java.lang.String` @kind object;
  #L50713c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507142.  call temp:= `h`() @signature `Ln2/j;.h:()Z` @kind static;
  #L507148.  v2:= temp;
  #L50714a.  if v2 == 0 then goto L507158;
  #L50714e.  v2:= "_dev" @kind object;
  #L507152.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507158.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50715e.  v1:= "applog" @kind object;
  #L507162.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507168.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L50716e.  v0:= temp @kind object;
  #L507170.  v1:= v10.`g2.d.h` @type ^`java.io.File` @kind object;
  #L507174.  if v1 == 0 then goto L50719c;
  #L507178.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L50717e.  v1:= temp;
  #L507180.  if v1 == 0 then goto L50719c;
  #L507184.  v1:= v10.`g2.d.h` @type ^`java.io.File` @kind object;
  #L507188.  call temp:= `getName`(v1) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L50718e.  v1:= temp @kind object;
  #L507190.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L507196.  v1:= temp;
  #L507198.  if v1 != 0 then goto L507264;
  #L50719c.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5071a2.  v1:= temp @kind object;
  #L5071a4.  v2:= new `java.lang.StringBuilder`;
  #L5071a8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5071ae.  v3:= "checkAndRollFile: " @kind object;
  #L5071b2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5071b8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5071be.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5071c4.  v2:= temp @kind object;
  #L5071c6.  v3:= "Appender" @kind object;
  #L5071ca.  call `g`(v1, v3, v2) @signature `Lj2/b;.g:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L5071d0.  v1:= v10.`g2.d.h` @type ^`java.io.File` @kind object;
  #L5071d4.  if v1 == 0 then goto L5071ea;
  #L5071d8.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L5071de.  v1:= temp;
  #L5071e0.  if v1 == 0 then goto L5071ea;
  #L5071e4.  call `c`(v10) @signature `Lg2/d;.c:()V` @kind virtual;
  #L5071ea.  call temp:= `n`(v10) @signature `Lg2/d;.n:()Ljava/io/File;` @kind direct;
  #L5071f0.  v1:= temp @kind object;
  #L5071f2.  if v1 != 0 then goto L50722e;
  #L5071f6.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5071fc.  v0:= temp @kind object;
  #L5071fe.  v1:= new `java.lang.StringBuilder`;
  #L507202.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L507208.  v2:= "currentLogDir is NULl with " @kind object;
  #L50720c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507212.  v2:= v10.`g2.b.b` @type ^`java.lang.String` @kind object;
  #L507216.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50721c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L507222.  v1:= temp @kind object;
  #L507224.  call `a`(v0, v3, v1) @signature `Lj2/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L50722a.  v0:= 0I;
  #L50722c.  return v0 @kind object;
  #L50722e.  v6:= v10.`g2.d.l` @type ^`long` @kind wide;
  #L507232.  v8:= v10.`g2.d.m` @type ^`long` @kind wide;
  #L507236.  v4:= v10 @kind object;
  #L507238.  v5:= v1 @kind object;
  #L50723a.  call `h`(v4, v5, v6, v8) @signature `Lg2/d;.h:(Ljava/io/File;JJ)V` @kind direct;
  #L507240.  goto L507256;
  #L507242.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507244.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L50724a.  v4:= temp @kind object;
  #L50724c.  v5:= "clean currentLogDir" @kind object;
  #L507250.  call `e`(v4, v3, v5, v2) @signature `Lj2/b;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L507256.  v2:= new `java.io.File`;
  #L50725a.  call `<init>`(v2, v1, v0) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L507260.  v10.`g2.d.h` @type ^`java.io.File` := v2 @kind object;
  #L507264.  v0:= v10.`g2.d.h` @type ^`java.io.File` @kind object;
  #L507268.  return v0 @kind object;
  catch `java.lang.Throwable` @[L50722e..L507240] goto L507242;
}
procedure `boolean` `b`(`g2.d` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lg2/d;.b:(Ljava/lang/String;)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L507010.  v0:= 1I;
  #L507012.  call temp:= `a`(v3) @signature `Lg2/d;.a:()Ljava/io/File;` @kind virtual;
  #L507018.  v1:= temp @kind object;
  #L50701a.  if v1 == 0 then goto L507024;
  #L50701e.  call `d`(v1, v4, v0) @signature `Ln2/g;.d:(Ljava/io/File;Ljava/lang/String;Z)V` @kind static;
  #L507024.  return v0;
  #L507026.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507028.  v1:= v3.`g2.b.e` @type ^`boolean` @kind boolean;
  #L50702c.  if v1 != 0 then goto L50704a;
  #L507030.  v3.`g2.b.e` @type ^`boolean` := v0 @kind boolean;
  #L507034.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L50703a.  v0:= temp @kind object;
  #L50703c.  v1:= v3.`g2.b.b` @type ^`java.lang.String` @kind object;
  #L507040.  v2:= "Appender" @kind object;
  #L507044.  call `i`(v0, v2, v1, v4) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L50704a.  v4:= 0I;
  #L50704c.  return v4;
  catch `java.lang.Throwable` @[L507012..L507024] goto L507026;
}
procedure `void` `c`(`g2.d` v4 @kind this) @signature `Lg2/d;.c:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L507664.  @monitorenter v4
  #L507666.  v0:= v4.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L50766a.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L507670.  v0:= temp;
  #L507672.  if v0 != 0 then goto L50767a;
  #L507676.  @monitorexit v4
  #L507678.  return @kind void;
  #L50767a.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L507680.  v0:= temp @kind object;
  #L507682.  v1:= "Appender" @kind object;
  #L507686.  v2:= new `java.lang.StringBuilder`;
  #L50768a.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L507690.  v3:= v4.`g2.b.b` @type ^`java.lang.String` @kind object;
  #L507694.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L50769a.  v3:= " appender flush: " @kind object;
  #L50769e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5076a4.  v3:= v4.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L5076a8.  call temp:= `length`(v3) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L5076ae.  v3:= temp;
  #L5076b0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5076b6.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5076bc.  v2:= temp @kind object;
  #L5076be.  call `d`(v0, v1, v2) @signature `Lj2/b;.d:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L5076c4.  call temp:= `m`(v4) @signature `Lg2/d;.m:()Z` @kind virtual;
  #L5076ca.  @monitorexit v4
  #L5076cc.  return @kind void;
  #L5076ce.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5076d0.  @monitorexit v4
  #L5076d2.  throw v0;
  catch `java.lang.Throwable` @[L507666..L507672] goto L5076ce;
  catch `java.lang.Throwable` @[L50767a..L5076ca] goto L5076ce;
}
procedure `void` `d`(`g2.d` v3 @kind this, `java.lang.String` v4 @kind object) @signature `Lg2/d;.d:(Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L50771c.  @monitorenter v3
  #L50771e.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L507724.  v0:= temp;
  #L507726.  if v0 == 0 then goto L50772e;
  #L50772a.  @monitorexit v3
  #L50772c.  return @kind void;
  #L50772e.  v0:= v3.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L507732.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L507738.  v0:= temp;
  #L50773a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L507740.  v1:= temp;
  #L507742.  v0:= v0 + v1 @kind int;
  #L507744.  v1:= `@@g2.d.s` @type ^`int`;
  #L507748.  v0:= v0 + v1 @kind int;
  #L50774a.  v2:= v3.`g2.d.p` @type ^`int`;
  #L50774e.  if v0 <= v2 then goto L5077e2;
  #L507752.  call temp:= `m`(v3) @signature `Lg2/d;.m:()Z` @kind virtual;
  #L507758.  v0:= v3.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L50775c.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L507762.  v0:= temp;
  #L507764.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L50776a.  v2:= temp;
  #L50776c.  v0:= v0 + v2 @kind int;
  #L50776e.  v0:= v0 + v1 @kind int;
  #L507770.  v1:= v3.`g2.d.p` @type ^`int`;
  #L507774.  if v0 <= v1 then goto L5077da;
  #L507778.  v0:= new `java.lang.StringBuilder`;
  #L50777c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L507782.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507788.  v4:= "$$" @kind object;
  #L50778c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507792.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L507798.  v4:= temp @kind object;
  #L50779a.  v0:= "UTF-8" @kind object;
  #L50779e.  call temp:= `getBytes`(v4, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L5077a4.  v4:= temp @kind object;
  #L5077a6.  v0:= 0I;
  #L5077a8.  v1:= length @variable v4;
  #L5077aa.  call temp:= `j`(v3, v4, v0, v1) @signature `Lg2/d;.j:([BII)Z` @kind virtual;
  #L5077b0.  goto L5077e8;
  #L5077b2.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5077b4.  v0:= v3.`g2.d.q` @type ^`boolean` @kind boolean;
  #L5077b8.  if v0 != 0 then goto L5077e8;
  #L5077bc.  v0:= 1I;
  #L5077be.  v3.`g2.d.q` @type ^`boolean` := v0 @kind boolean;
  #L5077c2.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5077c8.  v0:= temp @kind object;
  #L5077ca.  v1:= "Appender" @kind object;
  #L5077ce.  v2:= "appendLogEvent" @kind object;
  #L5077d2.  call `i`(v0, v1, v2, v4) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L5077d8.  goto L5077e8;
  #L5077da.  call `l`(v3, v4) @signature `Lg2/d;.l:(Ljava/lang/String;)V` @kind virtual;
  #L5077e0.  goto L5077e8;
  #L5077e2.  call `l`(v3, v4) @signature `Lg2/d;.l:(Ljava/lang/String;)V` @kind virtual;
  #L5077e8.  @monitorexit v3
  #L5077ea.  return @kind void;
  #L5077ec.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5077ee.  @monitorexit v3
  #L5077f0.  throw v4;
  catch `java.lang.Throwable` @[L50771e..L507726] goto L5077ec;
  catch `java.lang.Throwable` @[L50772e..L50779a] goto L5077ec;
  catch `java.lang.Throwable` @[L50779a..L5077b0] goto L5077b2;
  catch `java.lang.Throwable` @[L5077b4..L5077e8] goto L5077ec;
}
procedure `void` `f`(`g2.d` v3 @kind this, `double` v4 ) @signature `Lg2/d;.f:(D)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L507380.  v0:= 0L;
  #L507384.  v2:= dcmpl(v4, v0);
  #L507388.  if v2 <= 0 then goto L507390;
  #L50738c.  v3.`g2.d.n` @type ^`double` := v4 @kind wide;
  #L507390.  return @kind void;
}
procedure `void` `g`(`g2.d` v3 @kind this, `int` v4 ) @signature `Lg2/d;.g:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5073a4.  if v4 <= 0 then goto L5073ba;
  #L5073a8.  v0:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L5073ac.  v1:= (`long`) v4 @kind i2l;
  #L5073ae.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L5073b4.  v0:= temp @kind wide;
  #L5073b6.  v3.`g2.d.l` @type ^`long` := v0 @kind wide;
  #L5073ba.  return @kind void;
}
procedure `void` `i`(`g2.d` v7 @kind this, `java.io.File`[] v8 @kind object) @signature `Lg2/d;.i:([Ljava/io/File;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L507560.  v0:= "Appender" @kind object;
  #L507564.  if v8 == 0 then goto L507644;
  #L507568.  v1:= length @variable v8;
  #L50756a.  v2:= 1I;
  #L50756c.  if v1 >= v2 then goto L507572;
  #L507570.  goto L507644;
  #L507572.  v1:= `@@g2.d.t` @type ^`java.util.Comparator` @kind object;
  #L507576.  call `sort`(v8, v1) @signature `Ljava/util/Arrays;.sort:([Ljava/lang/Object;Ljava/util/Comparator;)V` @kind static;
  #L50757c.  v1:= length @variable v8;
  #L50757e.  v1:= (`double`) v1 @kind i2d;
  #L507580.  v3:= v7.`g2.d.n` @type ^`double` @kind wide;
  #L507584.  v1:= v1 * v3 @kind double;
  #L507588.  call temp:= `floor`(v1) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L50758e.  v1:= temp @kind wide;
  #L507590.  v1:= (`int`) v1 @kind d2i;
  #L507592.  v2:= 0I;
  #L507594.  if v2 >= v1 then goto L507644;
  #L507598.  v3:= v8[v2] @kind object;
  #L50759c.  if v3 == 0 then goto L50763e;
  #L5075a0.  call temp:= `exists`(v3) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L5075a6.  v4:= temp;
  #L5075a8.  if v4 == 0 then goto L50763e;
  #L5075ac.  call temp:= `isFile`(v3) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L5075b2.  v4:= temp;
  #L5075b4.  if v4 != 0 then goto L5075ba;
  #L5075b8.  goto L50763e;
  #L5075ba.  call temp:= `delete`(v3) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L5075c0.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5075c6.  v4:= temp @kind object;
  #L5075c8.  v5:= new `java.lang.StringBuilder`;
  #L5075cc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5075d2.  v6:= "cleanExpiresFile: " @kind object;
  #L5075d6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5075dc.  call temp:= `getName`(v3) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L5075e2.  v6:= temp @kind object;
  #L5075e4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5075ea.  v6:= " is too large !" @kind object;
  #L5075ee.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5075f4.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5075fa.  v5:= temp @kind object;
  #L5075fc.  call `a`(v4, v0, v5) @signature `Lj2/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L507602.  goto L50763e;
  #L507604.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L507606.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L50760c.  v5:= temp @kind object;
  #L50760e.  v6:= new `java.lang.StringBuilder`;
  #L507612.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L507618.  call temp:= `getName`(v3) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L50761e.  v3:= temp @kind object;
  #L507620.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507626.  v3:= " cleanExpiresFile" @kind object;
  #L50762a.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507630.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L507636.  v3:= temp @kind object;
  #L507638.  call `e`(v5, v0, v3, v4) @signature `Lj2/b;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L50763e.  v2:= v2 + 1;
  #L507642.  goto L507594;
  #L507644.  return @kind void;
  catch `java.lang.Throwable` @[L5075ba..L507602] goto L507604;
}
procedure `boolean` `j`(`g2.d` v3 @kind this, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lg2/d;.j:([BII)Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L506f1c.  v0:= "Appender" @kind object;
  #L506f20.  v1:= 1I;
  #L506f22.  call temp:= `g`(v4, v5, v6) @signature `Ln2/j;.g:([BII)[B` @kind static;
  #L506f28.  v4:= temp @kind object;
  #L506f2a.  goto L506f4e;
  #L506f2c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L506f2e.  v5:= v3.`g2.b.f` @type ^`boolean` @kind boolean;
  #L506f32.  if v5 != 0 then goto L506f4c;
  #L506f36.  v3.`g2.b.f` @type ^`boolean` := v1 @kind boolean;
  #L506f3a.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L506f40.  v5:= temp @kind object;
  #L506f42.  v6:= v3.`g2.b.b` @type ^`java.lang.String` @kind object;
  #L506f46.  call `i`(v5, v0, v6, v4) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L506f4c.  v4:= 0I;
  #L506f4e.  v5:= 0I;
  #L506f50.  if v4 != 0 then goto L506f56;
  #L506f54.  return v5;
  #L506f56.  call temp:= `a`() @signature `Ln2/h;.a:()Ln2/h;` @kind static;
  #L506f5c.  v6:= temp @kind object;
  #L506f5e.  v2:= length @variable v4;
  #L506f60.  call temp:= `c`(v6, v4, v5, v2) @signature `Ln2/h;.c:([BII)[B` @kind virtual;
  #L506f66.  v4:= temp @kind object;
  #L506f68.  call temp:= `a`() @signature `Ln2/h;.a:()Ln2/h;` @kind static;
  #L506f6e.  v6:= temp @kind object;
  #L506f70.  call temp:= `e`(v6) @signature `Ln2/h;.e:()[B` @kind virtual;
  #L506f76.  v6:= temp @kind object;
  #L506f78.  if v4 == 0 then goto L506fd2;
  #L506f7c.  if v6 != 0 then goto L506f82;
  #L506f80.  goto L506fd2;
  #L506f82.  v1:= length @variable v6;
  #L506f84.  v2:= 32767I;
  #L506f88.  if v1 <= v2 then goto L506fc0;
  #L506f8c.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L506f92.  v4:= temp @kind object;
  #L506f94.  v1:= new `java.lang.StringBuilder`;
  #L506f98.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L506f9e.  v2:= "the length of secure seed is too long: " @kind object;
  #L506fa2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L506fa8.  v6:= length @variable v6;
  #L506faa.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L506fb0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L506fb6.  v6:= temp @kind object;
  #L506fb8.  call `a`(v4, v0, v6) @signature `Lj2/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L506fbe.  return v5;
  #L506fc0.  call temp:= `a`(v3) @signature `Lg2/d;.a:()Ljava/io/File;` @kind virtual;
  #L506fc6.  v5:= temp @kind object;
  #L506fc8.  call temp:= `g`(v4, v6, v5) @signature `Ln2/g;.g:([B[BLjava/io/File;)Z` @kind static;
  #L506fce.  v4:= temp;
  #L506fd0.  return v4;
  #L506fd2.  v4:= v3.`g2.d.r` @type ^`boolean` @kind boolean;
  #L506fd6.  if v4 != 0 then goto L506ff0;
  #L506fda.  v3.`g2.d.r` @type ^`boolean` := v1 @kind boolean;
  #L506fde.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L506fe4.  v4:= temp @kind object;
  #L506fe6.  v6:= "HybridEncryption.encrypt occured error" @kind object;
  #L506fea.  call `a`(v4, v0, v6) @signature `Lj2/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L506ff0.  return v5;
  catch `java.lang.Throwable` @[L506f22..L506f2a] goto L506f2c;
}
procedure `void` `k`(`g2.d` v2 @kind this, `int` v3 ) @signature `Lg2/d;.k:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5076f8.  if v3 <= 0 then goto L50770a;
  #L5076fc.  v3:= v3 * 1024;
  #L507700.  v3:= v3 * 1024;
  #L507704.  v0:= (`long`) v3 @kind i2l;
  #L507706.  v2.`g2.d.m` @type ^`long` := v0 @kind wide;
  #L50770a.  return @kind void;
}
procedure `void` `l`(`g2.d` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lg2/d;.l:(Ljava/lang/String;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L50782c.  v0:= v1.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L507830.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507836.  v2:= "$$" @kind object;
  #L50783a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L507840.  return @kind void;
}
procedure `boolean` `m`(`g2.d` v5 @kind this) @signature `Lg2/d;.m:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50706c.  v0:= 0I;
  #L50706e.  v1:= v5.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L507072.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L507078.  v1:= temp @kind object;
  #L50707a.  v2:= "UTF-8" @kind object;
  #L50707e.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L507084.  v1:= temp @kind object;
  #L507086.  v2:= length @variable v1;
  #L507088.  call temp:= `j`(v5, v1, v0, v2) @signature `Lg2/d;.j:([BII)Z` @kind virtual;
  #L50708e.  v1:= temp;
  #L507090.  v2:= v5.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L507094.  call `setLength`(v2, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L50709a.  return v1;
  #L50709c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L50709e.  v2:= v5.`g2.d.q` @type ^`boolean` @kind boolean;
  #L5070a2.  if v2 != 0 then goto L5070c2;
  #L5070a6.  v2:= 1I;
  #L5070a8.  v5.`g2.d.q` @type ^`boolean` := v2 @kind boolean;
  #L5070ac.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L5070b2.  v2:= temp @kind object;
  #L5070b4.  v3:= "Appender" @kind object;
  #L5070b8.  v4:= "appendLogEvent" @kind object;
  #L5070bc.  call `i`(v2, v3, v4, v1) @signature `Lj2/b;.i:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind interface;
  #L5070c2.  v1:= v5.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L5070c6.  call `setLength`(v1, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L5070cc.  return v0;
  #L5070ce.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5070d0.  v2:= v5.`g2.d.o` @type ^`java.lang.StringBuilder` @kind object;
  #L5070d4.  call `setLength`(v2, v0) @signature `Ljava/lang/StringBuilder;.setLength:(I)V` @kind virtual;
  #L5070da.  throw v1;
  catch `java.lang.Throwable` @[L50706e..L507090] goto L50709c;
  catch `java.lang.Throwable` @[L50709e..L5070c2] goto L5070ce;
}
