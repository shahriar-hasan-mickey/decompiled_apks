record `g2.c` @kind class @AccessFlag PUBLIC {
  `x1.c` `g2.c.a` @AccessFlag PRIVATE;
  `java.util.List` `g2.c.b` @AccessFlag PRIVATE;
}
global `java.util.Map` `@@g2.c.c` @AccessFlag PRIVATE_STATIC;
global `g2.c` `@@g2.c.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lg2/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L506bd8.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L506bdc.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L506be2.  `@@g2.c.c` @type ^`java.util.Map` := v0 @kind object;
  #L506be6.  return @kind void;
}
procedure `void` `<init>`(`g2.c` v20 @kind this, `x1.c` v21 @kind object) @signature `Lg2/c;.<init>:(Lx1/c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L506bf8.  v0:= v20 @kind object;
  #L506bfc.  v11:= v21 @kind object;
  #L506c00.  call `<init>`(v20) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L506c06.  v1:= new `java.util.ArrayList`;
  #L506c0a.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L506c10.  v0.`g2.c.b` @type ^`java.util.List` := v1 @kind object;
  #L506c14.  v0.`g2.c.a` @type ^`x1.c` := v11 @kind object;
  #L506c18.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c1c.  v2:= new `g2.j`;
  #L506c20.  v3:= "autouserbehavor" @kind object;
  #L506c24.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506c2a.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506c30.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c34.  v2:= new `g2.j`;
  #L506c38.  v3:= "userbehavor" @kind object;
  #L506c3c.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506c42.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506c48.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c4c.  v2:= new `g2.j`;
  #L506c50.  v3:= "pageMonitor" @kind object;
  #L506c54.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506c5a.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506c60.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c64.  v2:= new `g2.j`;
  #L506c68.  v3:= "performance" @kind object;
  #L506c6c.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506c72.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506c78.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c7c.  v2:= new `g2.j`;
  #L506c80.  v3:= "alivereport" @kind object;
  #L506c84.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506c8a.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506c90.  v1:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506c94.  v2:= new `g2.j`;
  #L506c98.  v3:= "crash" @kind object;
  #L506c9c.  call `<init>`(v2, v11, v3) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506ca2.  call temp:= `put`(v1, v3, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506ca8.  v12:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506cac.  v13:= new `g2.d`;
  #L506cb0.  v14:= `@@java.util.concurrent.TimeUnit.HOURS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L506cb4.  v8:= 1L;
  #L506cb8.  call temp:= `toMillis`(v14, v8) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L506cbe.  v4:= temp @kind wide;
  #L506cc0.  v15:= `@@java.util.concurrent.TimeUnit.DAYS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L506cc4.  v6:= 7L;
  #L506cc8.  call temp:= `toMillis`(v15, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L506cce.  v16:= temp @kind wide;
  #L506cd0.  v3:= "applog" @kind object;
  #L506cd4.  v18:= 31457280L;
  #L506cda.  v10:= 65536I;
  #L506cde.  v1:= v13 @kind object;
  #L506ce0.  v2:= v21 @kind object;
  #L506ce4.  v6:= v16 @kind wide;
  #L506ce8.  v16:= v14 @kind object;
  #L506cec.  v17:= v15 @kind object;
  #L506cf0.  v14:= v8 @kind wide;
  #L506cf2.  v8:= v18 @kind wide;
  #L506cf6.  call `<init>`(v1, v2, v3, v4, v6, v8, v10) @signature `Lg2/d;.<init>:(Lx1/c;Ljava/lang/String;JJJI)V` @kind direct;
  #L506cfc.  v1:= "applog" @kind object;
  #L506d00.  call temp:= `put`(v12, v1, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506d06.  v12:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506d0a.  v13:= new `g2.g`;
  #L506d0e.  v1:= v16 @kind object;
  #L506d12.  call temp:= `toMillis`(v1, v14) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L506d18.  v4:= temp @kind wide;
  #L506d1a.  v1:= v17 @kind object;
  #L506d1e.  v2:= 7L;
  #L506d22.  call temp:= `toMillis`(v1, v2) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L506d28.  v6:= temp @kind wide;
  #L506d2a.  v3:= "unknown" @kind object;
  #L506d2e.  v8:= 20971520L;
  #L506d34.  v1:= v13 @kind object;
  #L506d36.  v2:= v21 @kind object;
  #L506d3a.  call `<init>`(v1, v2, v3, v4, v6, v8, v10) @signature `Lg2/g;.<init>:(Lx1/c;Ljava/lang/String;JJJI)V` @kind direct;
  #L506d40.  v1:= "unknown" @kind object;
  #L506d44.  call temp:= `put`(v12, v1, v13) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506d4a.  return @kind void;
}
procedure `g2.c` `a`() @signature `Lg2/c;.a:()Lg2/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L506b48.  v0:= `@@g2.c.d` @type ^`g2.c` @kind object;
  #L506b4c.  if v0 == 0 then goto L506b52;
  #L506b50.  return v0 @kind object;
  #L506b52.  v0:= new `java.lang.IllegalStateException`;
  #L506b56.  v1:= "need createInstance before use" @kind object;
  #L506b5a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L506b60.  throw v0;
}
procedure `g2.c` `b`(`x1.c` v1 @kind object) @signature `Lg2/c;.b:(Lx1/c;)Lg2/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L506b74.  v0:= `@@g2.c.d` @type ^`g2.c` @kind object;
  #L506b78.  if v0 != 0 then goto L506b8a;
  #L506b7c.  v0:= new `g2.c`;
  #L506b80.  call `<init>`(v0, v1) @signature `Lg2/c;.<init>:(Lx1/c;)V` @kind direct;
  #L506b86.  `@@g2.c.d` @type ^`g2.c` := v0 @kind object;
  #L506b8a.  v1:= `@@g2.c.d` @type ^`g2.c` @kind object;
  #L506b8e.  return v1 @kind object;
}
procedure `void` `c`(`g2.c` v5 @kind this, `h2.a` v6 @kind object) @signature `Lg2/c;.c:(Lh2/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L506d5c.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506d60.  if v0 == 0 then goto L506e0c;
  #L506d64.  call temp:= `a`(v6) @signature `Lh2/a;.a:()Ljava/lang/String;` @kind virtual;
  #L506d6a.  v1:= temp @kind object;
  #L506d6c.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506d72.  v0:= temp @kind object;
  #L506d74.  if v0 != 0 then goto L506da0;
  #L506d78.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506d7c.  call temp:= `a`(v6) @signature `Lh2/a;.a:()Ljava/lang/String;` @kind virtual;
  #L506d82.  v1:= temp @kind object;
  #L506d84.  v2:= new `g2.j`;
  #L506d88.  v3:= v5.`g2.c.a` @type ^`x1.c` @kind object;
  #L506d8c.  call temp:= `a`(v6) @signature `Lh2/a;.a:()Ljava/lang/String;` @kind virtual;
  #L506d92.  v4:= temp @kind object;
  #L506d94.  call `<init>`(v2, v3, v4) @signature `Lg2/j;.<init>:(Lx1/c;Ljava/lang/String;)V` @kind direct;
  #L506d9a.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506da0.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506da4.  call temp:= `a`(v6) @signature `Lh2/a;.a:()Ljava/lang/String;` @kind virtual;
  #L506daa.  v1:= temp @kind object;
  #L506dac.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506db2.  v0:= temp @kind object;
  #L506db4.  v0:= (`g2.b`) v0 @kind object;
  #L506db8.  call temp:= `c`(v6) @signature `Lh2/a;.c:()Ljava/lang/String;` @kind virtual;
  #L506dbe.  v1:= temp @kind object;
  #L506dc0.  call `d`(v0, v1) @signature `Lg2/b;.d:(Ljava/lang/String;)V` @kind virtual;
  #L506dc6.  v0:= v5.`g2.c.b` @type ^`java.util.List` @kind object;
  #L506dca.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L506dd0.  v0:= temp;
  #L506dd2.  if v0 != 0 then goto L506e0c;
  #L506dd6.  v0:= 0I;
  #L506dd8.  v1:= v5.`g2.c.b` @type ^`java.util.List` @kind object;
  #L506ddc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L506de2.  v1:= temp;
  #L506de4.  if v0 >= v1 then goto L506e0c;
  #L506de8.  v1:= v5.`g2.c.b` @type ^`java.util.List` @kind object;
  #L506dec.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L506df2.  v1:= temp @kind object;
  #L506df4.  v1:= (`g2.k`) v1 @kind object;
  #L506df8.  call temp:= `c`(v6) @signature `Lh2/a;.c:()Ljava/lang/String;` @kind virtual;
  #L506dfe.  v2:= temp @kind object;
  #L506e00.  call `a`(v1, v2) @signature `Lg2/k;.a:(Ljava/lang/String;)V` @kind interface;
  #L506e06.  v0:= v0 + 1;
  #L506e0a.  goto L506dd8;
  #L506e0c.  return @kind void;
}
procedure `void` `d`(`g2.c` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lg2/c;.d:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L506e20.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506e24.  call temp:= `containsKey`(v0, v2) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L506e2a.  v0:= temp;
  #L506e2c.  if v0 == 0 then goto L506e46;
  #L506e30.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506e34.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506e3a.  v2:= temp @kind object;
  #L506e3c.  v2:= (`g2.b`) v2 @kind object;
  #L506e40.  call `c`(v2) @signature `Lg2/b;.c:()V` @kind virtual;
  #L506e46.  return @kind void;
}
procedure `void` `e`(`g2.c` v2 @kind this, `z1.b` v3 @kind object) @signature `Lg2/c;.e:(Lz1/b;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L506e58.  if v3 == 0 then goto L506eb0;
  #L506e5c.  call temp:= `g`(v3) @signature `Lz1/b;.g:()Ljava/lang/String;` @kind virtual;
  #L506e62.  v0:= temp @kind object;
  #L506e64.  if v0 != 0 then goto L506e6a;
  #L506e68.  goto L506eb0;
  #L506e6a.  call temp:= `g`(v3) @signature `Lz1/b;.g:()Ljava/lang/String;` @kind virtual;
  #L506e70.  v0:= temp @kind object;
  #L506e72.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L506e78.  v1:= "flushByType" @kind object;
  #L506e7c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L506e82.  v1:= temp;
  #L506e84.  if v1 != 0 then goto L506ea2;
  #L506e88.  v3:= "flush" @kind object;
  #L506e8c.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L506e92.  v3:= temp;
  #L506e94.  if v3 != 0 then goto L506e9a;
  #L506e98.  goto L506eb0;
  #L506e9a.  call `f`(v2) @signature `Lg2/c;.f:()V` @kind virtual;
  #L506ea0.  goto L506eb0;
  #L506ea2.  call temp:= `a`(v3) @signature `Lz1/b;.a:()Ljava/lang/String;` @kind virtual;
  #L506ea8.  v3:= temp @kind object;
  #L506eaa.  call `d`(v2, v3) @signature `Lg2/c;.d:(Ljava/lang/String;)V` @kind virtual;
  #L506eb0.  return @kind void;
}
procedure `void` `f`(`g2.c` v3 @kind this) @signature `Lg2/c;.f:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L506ec4.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506ec8.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L506ece.  v0:= temp @kind object;
  #L506ed0.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L506ed6.  v0:= temp @kind object;
  #L506ed8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L506ede.  v1:= temp;
  #L506ee0.  if v1 == 0 then goto L506f08;
  #L506ee4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L506eea.  v1:= temp @kind object;
  #L506eec.  v1:= (`java.lang.String`) v1 @kind object;
  #L506ef0.  v2:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506ef4.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506efa.  v1:= temp @kind object;
  #L506efc.  v1:= (`g2.b`) v1 @kind object;
  #L506f00.  call `c`(v1) @signature `Lg2/b;.c:()V` @kind virtual;
  #L506f06.  goto L506ed8;
  #L506f08.  return @kind void;
}
procedure `g2.d` `g`(`g2.c` v2 @kind this) @signature `Lg2/c;.g:()Lg2/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L506ba0.  v0:= `@@g2.c.c` @type ^`java.util.Map` @kind object;
  #L506ba4.  v1:= "applog" @kind object;
  #L506ba8.  call temp:= `get`(v0, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L506bae.  v0:= temp @kind object;
  #L506bb0.  v0:= (`g2.b`) v0 @kind object;
  #L506bb4.  v1:= instanceof @variable v0 @type ^`g2.d` @kind boolean;
  #L506bb8.  if v1 == 0 then goto L506bc2;
  #L506bbc.  v0:= (`g2.d`) v0 @kind object;
  #L506bc0.  goto L506bc4;
  #L506bc2.  v0:= 0I;
  #L506bc4.  return v0 @kind object;
}
