record `w5.c` @kind class @AccessFlag PUBLIC extends `w5.e` @kind interface {
  `x5.v` `w5.c.a` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `w5.c.b` @AccessFlag PRIVATE_FINAL;
  `q5.b` `w5.c.c` @AccessFlag PRIVATE_FINAL;
  `y5.d` `w5.c.d` @AccessFlag PRIVATE_FINAL;
  `z5.b` `w5.c.e` @AccessFlag PRIVATE_FINAL;
}
global `java.util.logging.Logger` `@@w5.c.f` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lw5/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L56cfd4.  v0:= constclass @type ^`p5.t` @kind object;
  #L56cfd8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L56cfde.  v0:= temp @kind object;
  #L56cfe0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L56cfe6.  v0:= temp @kind object;
  #L56cfe8.  `@@w5.c.f` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L56cfec.  return @kind void;
}
procedure `void` `<init>`(`w5.c` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object, `q5.b` v2 @kind object, `x5.v` v3 @kind object, `y5.d` v4 @kind object, `z5.b` v5 @kind object) @signature `Lw5/c;.<init>:(Ljava/util/concurrent/Executor;Lq5/b;Lx5/v;Ly5/d;Lz5/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L56d000.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L56d006.  v0.`w5.c.b` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L56d00a.  v0.`w5.c.c` @type ^`q5.b` := v2 @kind object;
  #L56d00e.  v0.`w5.c.a` @type ^`x5.v` := v3 @kind object;
  #L56d012.  v0.`w5.c.d` @type ^`y5.d` := v4 @kind object;
  #L56d016.  v0.`w5.c.e` @type ^`z5.b` := v5 @kind object;
  #L56d01a.  return @kind void;
}
procedure `void` `b`(`w5.c` v0 @kind object, `p5.o` v1 @kind object, `n5.h` v2 @kind object, `p5.i` v3 @kind object) @signature `Lw5/c;.b:(Lw5/c;Lp5/o;Ln5/h;Lp5/i;)V` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56cfbc.  call `e`(v0, v1, v2, v3) @signature `Lw5/c;.e:(Lp5/o;Ln5/h;Lp5/i;)V` @kind direct;
  #L56cfc2.  return @kind void;
}
procedure `java.lang.Object` `c`(`w5.c` v0 @kind object, `p5.o` v1 @kind object, `p5.i` v2 @kind object) @signature `Lw5/c;.c:(Lw5/c;Lp5/o;Lp5/i;)Ljava/lang/Object;` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;

  #L56cf74.  call temp:= `d`(v0, v1, v2) @signature `Lw5/c;.d:(Lp5/o;Lp5/i;)Ljava/lang/Object;` @kind direct;
  #L56cf7a.  v0:= temp @kind object;
  #L56cf7c.  return v0 @kind object;
}
procedure `java.lang.Object` `d`(`w5.c` v1 @kind this, `p5.o` v2 @kind object, `p5.i` v3 @kind object) @signature `Lw5/c;.d:(Lp5/o;Lp5/i;)Ljava/lang/Object;` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;

  #L56cf90.  v0:= v1.`w5.c.d` @type ^`y5.d` @kind object;
  #L56cf94.  call temp:= `M0`(v0, v2, v3) @signature `Ly5/d;.M0:(Lp5/o;Lp5/i;)Ly5/k;` @kind interface;
  #L56cf9a.  v3:= v1.`w5.c.a` @type ^`x5.v` @kind object;
  #L56cf9e.  v0:= 1I;
  #L56cfa0.  call `a`(v3, v2, v0) @signature `Lx5/v;.a:(Lp5/o;I)V` @kind interface;
  #L56cfa6.  v2:= 0I;
  #L56cfa8.  return v2 @kind object;
}
procedure `void` `e`(`w5.c` v2 @kind this, `p5.o` v3 @kind object, `n5.h` v4 @kind object, `p5.i` v5 @kind object) @signature `Lw5/c;.e:(Lp5/o;Ln5/h;Lp5/i;)V` @AccessFlag PRIVATE_SYNTHETIC {
    temp;
    v0;
    v1;

  #L56d02c.  v0:= v2.`w5.c.c` @type ^`q5.b` @kind object;
  #L56d030.  call temp:= `b`(v3) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L56d036.  v1:= temp @kind object;
  #L56d038.  call temp:= `a`(v0, v1) @signature `Lq5/b;.a:(Ljava/lang/String;)Lq5/h;` @kind interface;
  #L56d03e.  v0:= temp @kind object;
  #L56d040.  if v0 != 0 then goto L56d080;
  #L56d044.  v5:= "Transport backend '%s' is not registered" @kind object;
  #L56d048.  v0:= 1I;
  #L56d04a.  v0:= new `java.lang.Object`[v0];
  #L56d04e.  v1:= 0I;
  #L56d050.  call temp:= `b`(v3) @signature `Lp5/o;.b:()Ljava/lang/String;` @kind virtual;
  #L56d056.  v3:= temp @kind object;
  #L56d058.  v0[v1]:= v3 @kind object;
  #L56d05c.  call temp:= `format`(v5, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L56d062.  v3:= temp @kind object;
  #L56d064.  v5:= `@@w5.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L56d068.  call `warning`(v5, v3) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L56d06e.  v5:= new `java.lang.IllegalArgumentException`;
  #L56d072.  call `<init>`(v5, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L56d078.  call `a`(v4, v5) @signature `Ln5/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L56d07e.  return @kind void;
  #L56d080.  call temp:= `b`(v0, v5) @signature `Lq5/h;.b:(Lp5/i;)Lp5/i;` @kind interface;
  #L56d086.  v5:= temp @kind object;
  #L56d088.  v0:= v2.`w5.c.e` @type ^`z5.b` @kind object;
  #L56d08c.  v1:= new `w5.b`;
  #L56d090.  call `<init>`(v1, v2, v3, v5) @signature `Lw5/b;.<init>:(Lw5/c;Lp5/o;Lp5/i;)V` @kind direct;
  #L56d096.  call temp:= `r`(v0, v1) @signature `Lz5/b;.r:(Lz5/b$a;)Ljava/lang/Object;` @kind interface;
  #L56d09c.  v3:= 0I;
  #L56d09e.  call `a`(v4, v3) @signature `Ln5/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L56d0a4.  goto L56d0e2;
  #L56d0a6.  v3:= Exception @type ^`java.lang.Exception` @kind object;
  #L56d0a8.  v5:= `@@w5.c.f` @type ^`java.util.logging.Logger` @kind object;
  #L56d0ac.  v0:= new `java.lang.StringBuilder`;
  #L56d0b0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L56d0b6.  v1:= "Error scheduling event " @kind object;
  #L56d0ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d0c0.  call temp:= `getMessage`(v3) @signature `Ljava/lang/Exception;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L56d0c6.  v1:= temp @kind object;
  #L56d0c8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L56d0ce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L56d0d4.  v0:= temp @kind object;
  #L56d0d6.  call `warning`(v5, v0) @signature `Ljava/util/logging/Logger;.warning:(Ljava/lang/String;)V` @kind virtual;
  #L56d0dc.  call `a`(v4, v3) @signature `Ln5/h;.a:(Ljava/lang/Exception;)V` @kind interface;
  #L56d0e2.  return @kind void;
  catch `java.lang.Exception` @[L56d02c..L56d0a4] goto L56d0a6;
}
procedure `void` `a`(`w5.c` v2 @kind this, `p5.o` v3 @kind object, `p5.i` v4 @kind object, `n5.h` v5 @kind object) @signature `Lw5/c;.a:(Lp5/o;Lp5/i;Ln5/h;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L56d104.  v0:= v2.`w5.c.b` @type ^`java.util.concurrent.Executor` @kind object;
  #L56d108.  v1:= new `w5.a`;
  #L56d10c.  call `<init>`(v1, v2, v3, v5, v4) @signature `Lw5/a;.<init>:(Lw5/c;Lp5/o;Ln5/h;Lp5/i;)V` @kind direct;
  #L56d112.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/Executor;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L56d118.  return @kind void;
}
