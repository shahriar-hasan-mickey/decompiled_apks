record `i5.b` @kind class @AccessFlag PUBLIC {
}
global `i5.b$c` `@@i5.b.a` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Li5/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L512320.  v0:= new `i5.b$b`;
  #L512324.  v1:= 0I;
  #L512326.  call `<init>`(v0, v1) @signature `Li5/b$b;.<init>:(Li5/b$a;)V` @kind direct;
  #L51232c.  `@@i5.b.a` @type ^`i5.b$c` := v1 @kind object;
  #L512330.  return @kind void;
}
procedure `void` `<init>`(`i5.b` v0 @kind this) @signature `Li5/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L512344.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L51234a.  return @kind void;
}
procedure `void` `a`(`java.lang.String` v1 @kind object) @signature `Li5/b;.a:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51235c.  call temp:= `c`() @signature `Li5/b;.c:()Li5/b$c;` @kind static;
  #L512362.  v0:= temp @kind object;
  #L512364.  call `a`(v0, v1) @signature `Li5/b$c;.a:(Ljava/lang/String;)V` @kind interface;
  #L51236a.  return @kind void;
}
procedure `void` `b`() @signature `Li5/b;.b:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L51237c.  call temp:= `c`() @signature `Li5/b;.c:()Li5/b$c;` @kind static;
  #L512382.  v0:= temp @kind object;
  #L512384.  call `b`(v0) @signature `Li5/b$c;.b:()V` @kind interface;
  #L51238a.  return @kind void;
}
procedure `i5.b$c` `c`() @signature `Li5/b;.c:()Li5/b$c;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L5122d0.  v0:= `@@i5.b.a` @type ^`i5.b$c` @kind object;
  #L5122d4.  if v0 != 0 then goto L5122fe;
  #L5122d8.  v0:= constclass @type ^`i5.b` @kind object;
  #L5122dc.  @monitorenter v0
  #L5122de.  v1:= `@@i5.b.a` @type ^`i5.b$c` @kind object;
  #L5122e2.  if v1 != 0 then goto L5122f4;
  #L5122e6.  v1:= new `i5.a`;
  #L5122ea.  call `<init>`(v1) @signature `Li5/a;.<init>:()V` @kind direct;
  #L5122f0.  `@@i5.b.a` @type ^`i5.b$c` := v1 @kind object;
  #L5122f4.  @monitorexit v0
  #L5122f6.  goto L5122fe;
  #L5122f8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L5122fa.  @monitorexit v0
  #L5122fc.  throw v1;
  #L5122fe.  v0:= `@@i5.b.a` @type ^`i5.b$c` @kind object;
  #L512302.  return v0 @kind object;
  catch `java.lang.Throwable` @[L5122de..L5122fc] goto L5122f8;
}
procedure `boolean` `d`() @signature `Li5/b;.d:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L5122ac.  call temp:= `c`() @signature `Li5/b;.c:()Li5/b$c;` @kind static;
  #L5122b2.  v0:= temp @kind object;
  #L5122b4.  call temp:= `isTracing`(v0) @signature `Li5/b$c;.isTracing:()Z` @kind interface;
  #L5122ba.  v0:= temp;
  #L5122bc.  return v0;
}
