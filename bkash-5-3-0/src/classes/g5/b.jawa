record `g5.b` @kind class @AccessFlag PUBLIC {
}
global `int` `@@g5.b.a` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@g5.b.b` @AccessFlag PRIVATE_STATIC;
global `g5.a` `@@g5.b.c` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<clinit>`() @signature `Lg5/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L508ff4.  call temp:= `b`() @signature `Lg5/b;.b:()I` @kind static;
  #L508ffa.  v0:= temp;
  #L508ffc.  `@@g5.b.a` @type ^`int` := v0;
  #L509000.  v0:= 384I;
  #L509004.  `@@g5.b.b` @type ^`int` := v0;
  #L509008.  return @kind void;
}
procedure `void` `<init>`(`g5.b` v0 @kind this) @signature `Lg5/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L50901c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L509022.  return @kind void;
}
procedure `g5.a` `a`() @signature `Lg5/b;.a:()Lg5/a;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L508f4c.  v0:= `@@g5.b.c` @type ^`g5.a` @kind object;
  #L508f50.  if v0 != 0 then goto L508f82;
  #L508f54.  v0:= constclass @type ^`g5.b` @kind object;
  #L508f58.  @monitorenter v0
  #L508f5a.  v1:= `@@g5.b.c` @type ^`g5.a` @kind object;
  #L508f5e.  if v1 != 0 then goto L508f78;
  #L508f62.  v1:= new `g5.a`;
  #L508f66.  v2:= `@@g5.b.b` @type ^`int`;
  #L508f6a.  v3:= `@@g5.b.a` @type ^`int`;
  #L508f6e.  call `<init>`(v1, v2, v3) @signature `Lg5/a;.<init>:(II)V` @kind direct;
  #L508f74.  `@@g5.b.c` @type ^`g5.a` := v1 @kind object;
  #L508f78.  @monitorexit v0
  #L508f7a.  goto L508f82;
  #L508f7c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L508f7e.  @monitorexit v0
  #L508f80.  throw v1;
  #L508f82.  v0:= `@@g5.b.c` @type ^`g5.a` @kind object;
  #L508f86.  return v0 @kind object;
  catch `java.lang.Throwable` @[L508f5a..L508f80] goto L508f7c;
}
procedure `int` `b`() @signature `Lg5/b;.b:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L508fa4.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L508faa.  v0:= temp @kind object;
  #L508fac.  call temp:= `maxMemory`(v0) @signature `Ljava/lang/Runtime;.maxMemory:()J` @kind virtual;
  #L508fb2.  v0:= temp @kind wide;
  #L508fb4.  v2:= 2147483647L;
  #L508fba.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L508fc0.  v0:= temp @kind wide;
  #L508fc2.  v1:= (`int`) v0 @kind l2i;
  #L508fc4.  v2:= (`long`) v1 @kind i2l;
  #L508fc6.  v4:= 16777216L;
  #L508fcc.  v0:= lcmp(v2, v4);
  #L508fd0.  if v0 <= 0 then goto L508fde;
  #L508fd4.  v1:= v1 / 4;
  #L508fd8.  v1:= v1 * 3;
  #L508fdc.  return v1;
  #L508fde.  v1:= v1 / 2;
  #L508fe2.  return v1;
}
