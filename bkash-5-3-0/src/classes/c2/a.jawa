record `c2.a` @kind class @AccessFlag PUBLIC extends `z1.a` @kind class {
  `java.lang.String` `c2.a.c` @AccessFlag PRIVATE;
  `java.lang.String` `c2.a.d` @AccessFlag PRIVATE;
  `java.lang.String` `c2.a.e` @AccessFlag PRIVATE;
  `java.lang.String` `c2.a.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`c2.a` v1 @kind this) @signature `Lc2/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a4e94.  call `<init>`(v1) @signature `Lz1/a;.<init>:()V` @kind direct;
  #L2a4e9a.  v0:= "exception" @kind object;
  #L2a4e9e.  v1.`c2.a.e` @type ^`java.lang.String` := v0 @kind object;
  #L2a4ea2.  call `d`(v1) @signature `Lz1/a;.d:()V` @kind virtual;
  #L2a4ea8.  return @kind void;
}
procedure `java.lang.String` `a`(`c2.a` v1 @kind this) @signature `Lc2/a;.a:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4e34.  v0:= v1.`c2.a.e` @type ^`java.lang.String` @kind object;
  #L2a4e38.  return v0 @kind object;
}
procedure `java.lang.String` `g`(`c2.a` v1 @kind this) @signature `Lc2/a;.g:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4e4c.  v0:= v1.`c2.a.c` @type ^`java.lang.String` @kind object;
  #L2a4e50.  return v0 @kind object;
}
procedure `java.lang.String` `h`(`c2.a` v1 @kind this) @signature `Lc2/a;.h:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4e64.  v0:= v1.`c2.a.d` @type ^`java.lang.String` @kind object;
  #L2a4e68.  return v0 @kind object;
}
procedure `java.lang.String` `i`(`c2.a` v1 @kind this) @signature `Lc2/a;.i:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a4e7c.  v0:= v1.`c2.a.f` @type ^`java.lang.String` @kind object;
  #L2a4e80.  return v0 @kind object;
}
