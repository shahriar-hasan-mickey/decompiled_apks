record `o1.f` @kind class @AccessFlag PUBLIC extends `t1.b` @kind interface {
  `java.util.concurrent.atomic.AtomicLong` `o1.f.a` @AccessFlag PRIVATE_FINAL;
  `o1.e` `o1.f.b` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ExecutorService` `o1.f.c` @AccessFlag PRIVATE_FINAL;
  `p1.d` `o1.f.d` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentHashMap` `o1.f.e` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentHashMap` `o1.f.f` @AccessFlag PRIVATE_FINAL;
  `t1.c` `o1.f.g` @AccessFlag PRIVATE;
  `boolean` `o1.f.h` @AccessFlag PRIVATE;
  `boolean` `o1.f.i` @AccessFlag PRIVATE;
  `boolean` `o1.f.j` @AccessFlag PRIVATE;
  `java.lang.ThreadLocal` `o1.f.k` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`o1.f` v6 @kind this) @signature `Lo1/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L5438f8.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5438fe.  v0:= new `java.util.concurrent.atomic.AtomicLong`;
  #L543902.  call `<init>`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.<init>:()V` @kind direct;
  #L543908.  v6.`o1.f.a` @type ^`java.util.concurrent.atomic.AtomicLong` := v0 @kind object;
  #L54390c.  v0:= new `o1.e`;
  #L543910.  call `<init>`(v0) @signature `Lo1/e;.<init>:()V` @kind direct;
  #L543916.  v6.`o1.f.b` @type ^`o1.e` := v0 @kind object;
  #L54391a.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L54391e.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L543924.  call temp:= `newCachedThreadPool`() @signature `Ljava/util/concurrent/Executors;.newCachedThreadPool:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L54392a.  v0:= temp @kind object;
  #L54392c.  v6.`o1.f.c` @type ^`java.util.concurrent.ExecutorService` := v0 @kind object;
  #L543930.  v1:= new `p1.e`;
  #L543934.  v2:= new `p1.c`;
  #L543938.  v3:= new `p1.b`;
  #L54393c.  v4:= new `p1.f`;
  #L543940.  v5:= 0I;
  #L543942.  call `<init>`(v4, v5, v6, v0) @signature `Lp1/f;.<init>:(Lp1/a;Lo1/f;Ljava/util/concurrent/ExecutorService;)V` @kind direct;
  #L543948.  call `<init>`(v3, v4) @signature `Lp1/b;.<init>:(Lp1/a;)V` @kind direct;
  #L54394e.  call `<init>`(v2, v3) @signature `Lp1/c;.<init>:(Lp1/a;)V` @kind direct;
  #L543954.  call `<init>`(v1, v2) @signature `Lp1/e;.<init>:(Lp1/a;)V` @kind direct;
  #L54395a.  v6.`o1.f.d` @type ^`p1.d` := v1 @kind object;
  #L54395e.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L543962.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L543968.  v6.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L54396c.  v0:= new `java.util.concurrent.ConcurrentHashMap`;
  #L543970.  call `<init>`(v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.<init>:()V` @kind direct;
  #L543976.  v6.`o1.f.f` @type ^`java.util.concurrent.ConcurrentHashMap` := v0 @kind object;
  #L54397a.  v0:= new `t1.a`;
  #L54397e.  call `<init>`(v0) @signature `Lt1/a;.<init>:()V` @kind direct;
  #L543984.  v6.`o1.f.g` @type ^`t1.c` := v0 @kind object;
  #L543988.  v0:= 1I;
  #L54398a.  v6.`o1.f.h` @type ^`boolean` := v0 @kind boolean;
  #L54398e.  v6.`o1.f.i` @type ^`boolean` := v0 @kind boolean;
  #L543992.  v6.`o1.f.j` @type ^`boolean` := v0 @kind boolean;
  #L543996.  v0:= new `o1.g`;
  #L54399a.  call `<init>`(v0, v6) @signature `Lo1/g;.<init>:(Lo1/f;)V` @kind direct;
  #L5439a0.  v6.`o1.f.k` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L5439a4.  return @kind void;
}
procedure `long` `h`(`o1.f` v2 @kind this) @signature `Lo1/f;.h:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L5438b8.  v0:= v2.`o1.f.a` @type ^`java.util.concurrent.atomic.AtomicLong` @kind object;
  #L5438bc.  call temp:= `incrementAndGet`(v0) @signature `Ljava/util/concurrent/atomic/AtomicLong;.incrementAndGet:()J` @kind virtual;
  #L5438c2.  v0:= temp @kind wide;
  #L5438c4.  return v0 @kind wide;
}
procedure `boolean` `j`(`o1.f` v7 @kind this, `q1.a` v8 @kind object, `o1.a` v9 @kind object) @signature `Lo1/f;.j:(Lq1/a;Lo1/a;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L5437c8.  v0:= v7.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L5437cc.  call temp:= `a`(v8) @signature `Lq1/a;.a:()Ljava/lang/String;` @kind virtual;
  #L5437d2.  v1:= temp @kind object;
  #L5437d4.  call temp:= `get`(v0, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5437da.  v0:= temp @kind object;
  #L5437dc.  v0:= (`java.util.Set`) v0 @kind object;
  #L5437e0.  v1:= 0I;
  #L5437e2.  if v0 == 0 then goto L543872;
  #L5437e6.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5437ec.  v0:= temp @kind object;
  #L5437ee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5437f4.  v2:= temp;
  #L5437f6.  if v2 == 0 then goto L543872;
  #L5437fa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L543800.  v2:= temp @kind object;
  #L543802.  v2:= (`o1.d`) v2 @kind object;
  #L543806.  call temp:= `g`(v2) @signature `Lo1/d;.g:()I` @kind virtual;
  #L54380c.  v3:= temp;
  #L54380e.  v4:= 1I;
  #L543810.  if v3 != v4 then goto L543816;
  #L543814.  goto L5437ee;
  #L543816.  call temp:= `e`(v8) @signature `Lq1/a;.e:()Ljava/lang/String;` @kind virtual;
  #L54381c.  v3:= temp @kind object;
  #L54381e.  call temp:= `b`(v3) @signature `Lv1/a;.b:(Ljava/lang/CharSequence;)Z` @kind static;
  #L543824.  v5:= temp;
  #L543826.  if v5 == 0 then goto L54384c;
  #L54382a.  call temp:= `a`(v2) @signature `Lo1/d;.a:()Ljava/lang/String;` @kind virtual;
  #L543830.  v5:= temp @kind object;
  #L543832.  call temp:= `a`(v5) @signature `Lv1/a;.a:(Ljava/lang/CharSequence;)Z` @kind static;
  #L543838.  v6:= temp;
  #L54383a.  if v6 != 0 then goto L5437ee;
  #L54383e.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L543844.  v3:= temp;
  #L543846.  if v3 != 0 then goto L54384c;
  #L54384a.  goto L5437ee;
  #L54384c.  v3:= v7.`o1.f.d` @type ^`p1.d` @kind object;
  #L543850.  call temp:= `b`(v3, v8, v2) @signature `Lp1/d;.b:(Lq1/a;Lo1/d;)Lo1/c;` @kind interface;
  #L543856.  v2:= temp @kind object;
  #L543858.  v3:= `@@o1.c.SUCCESS` @type ^`o1.c` @kind object;
  #L54385c.  if v2 != v3 then goto L543862;
  #L543860.  v1:= 1I;
  #L543862.  v3:= `@@o1.a.FIRST_ONE` @type ^`o1.a` @kind object;
  #L543866.  if v9 != v3 then goto L5437ee;
  #L54386a.  v3:= `@@o1.c.ABORT` @type ^`o1.c` @kind object;
  #L54386e.  if v2 == v3 then goto L5437ee;
  #L543872.  if v1 != 0 then goto L5438a6;
  #L543876.  v9:= v7.`o1.f.i` @type ^`boolean` @kind boolean;
  #L54387a.  if v9 == 0 then goto L5438a6;
  #L54387e.  call temp:= `i`(v8) @signature `Lq1/d;.i:(Ljava/lang/Object;)Z` @kind static;
  #L543884.  v9:= temp;
  #L543886.  if v9 != 0 then goto L5438a6;
  #L54388a.  call temp:= `i`(v8) @signature `Lq1/b;.i:(Ljava/lang/Object;)Z` @kind static;
  #L543890.  v9:= temp;
  #L543892.  if v9 != 0 then goto L5438a6;
  #L543896.  v9:= new `q1.d`;
  #L54389a.  call `<init>`(v9, v8) @signature `Lq1/d;.<init>:(Lq1/a;)V` @kind direct;
  #L5438a0.  call `e`(v7, v9) @signature `Lo1/f;.e:(Lq1/a;)V` @kind virtual;
  #L5438a6.  return v1;
}
procedure `o1.d` `a`(`o1.f` v2 @kind this, `o1.d` v3 @kind object) @signature `Lo1/f;.a:(Lo1/d;)Lo1/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5438d8.  call temp:= `h`(v2) @signature `Lo1/f;.h:()J` @kind direct;
  #L5438de.  v0:= temp @kind wide;
  #L5438e0.  call `b`(v3, v0) @signature `Lo1/d;.b:(J)V` @kind virtual;
  #L5438e6.  return v3 @kind object;
}
procedure `void` `b`(`o1.f` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lo1/f;.b:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5439b8.  v0:= v4.`o1.f.f` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L5439bc.  call temp:= `contains`(v0, v5) @signature `Ljava/util/concurrent/ConcurrentHashMap;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L5439c2.  v0:= temp;
  #L5439c4.  if v0 == 0 then goto L5439ca;
  #L5439c8.  return @kind void;
  #L5439ca.  v0:= v4.`o1.f.g` @type ^`t1.c` @kind object;
  #L5439ce.  call temp:= `a`(v0, v5, v4) @signature `Lt1/c;.a:(Ljava/lang/Object;Lt1/b;)Ljava/util/Map;` @kind interface;
  #L5439d4.  v0:= temp @kind object;
  #L5439d6.  v1:= v4.`o1.f.f` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L5439da.  call temp:= `putIfAbsent`(v1, v5, v0) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5439e0.  v5:= temp @kind object;
  #L5439e2.  if v5 == 0 then goto L5439e8;
  #L5439e6.  return @kind void;
  #L5439e8.  call temp:= `entrySet`(v0) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L5439ee.  v5:= temp @kind object;
  #L5439f0.  call temp:= `iterator`(v5) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5439f6.  v5:= temp @kind object;
  #L5439f8.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5439fe.  v0:= temp;
  #L543a00.  if v0 == 0 then goto L543a74;
  #L543a04.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L543a0a.  v0:= temp @kind object;
  #L543a0c.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L543a10.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L543a16.  v1:= temp @kind object;
  #L543a18.  v1:= (`java.lang.String`) v1 @kind object;
  #L543a1c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L543a22.  v0:= temp @kind object;
  #L543a24.  v0:= (`java.util.Collection`) v0 @kind object;
  #L543a28.  v2:= v4.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L543a2c.  call temp:= `get`(v2, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L543a32.  v2:= temp @kind object;
  #L543a34.  v2:= (`java.util.Set`) v2 @kind object;
  #L543a38.  if v2 != 0 then goto L543a6c;
  #L543a3c.  v2:= new `com.alibaba.taffy.core.a.c`;
  #L543a40.  v3:= v4.`o1.f.b` @type ^`o1.e` @kind object;
  #L543a44.  call `<init>`(v2, v3) @signature `Lcom/alibaba/taffy/core/a/c;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L543a4a.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L543a50.  v3:= v4.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L543a54.  call temp:= `putIfAbsent`(v3, v1, v2) @signature `Ljava/util/concurrent/ConcurrentHashMap;.putIfAbsent:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L543a5a.  v1:= temp @kind object;
  #L543a5c.  v1:= (`java.util.Set`) v1 @kind object;
  #L543a60.  if v1 == 0 then goto L5439f8;
  #L543a64.  call temp:= `addAll`(v1, v0) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L543a6a.  goto L5439f8;
  #L543a6c.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/Set;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L543a72.  goto L5439f8;
  #L543a74.  return @kind void;
}
procedure `void` `c`(`o1.f` v2 @kind this, `java.lang.Object` v3 @kind object, `java.lang.String` v4 @kind object, `o1.a` v5 @kind object) @signature `Lo1/f;.c:(Ljava/lang/Object;Ljava/lang/String;Lo1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L543a88.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L543a8e.  v0:= temp @kind object;
  #L543a90.  v1:= new `q1.a`;
  #L543a94.  call `<init>`(v1) @signature `Lq1/a;.<init>:()V` @kind direct;
  #L543a9a.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L543aa0.  v0:= temp @kind object;
  #L543aa2.  call `d`(v1, v0) @signature `Lq1/a;.d:(Ljava/lang/String;)V` @kind virtual;
  #L543aa8.  call `g`(v1, v4) @signature `Lq1/a;.g:(Ljava/lang/String;)V` @kind virtual;
  #L543aae.  call `c`(v1, v3) @signature `Lq1/a;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L543ab4.  call `f`(v2, v1, v5) @signature `Lo1/f;.f:(Lq1/a;Lo1/a;)V` @kind virtual;
  #L543aba.  return @kind void;
}
procedure `void` `d`(`o1.f` v1 @kind this, `java.lang.Object` v2 @kind object, `o1.a` v3 @kind object) @signature `Lo1/f;.d:(Ljava/lang/Object;Lo1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L543acc.  v0:= 0I;
  #L543ace.  call `c`(v1, v2, v0, v3) @signature `Lo1/f;.c:(Ljava/lang/Object;Ljava/lang/String;Lo1/a;)V` @kind virtual;
  #L543ad4.  return @kind void;
}
procedure `void` `e`(`o1.f` v1 @kind this, `q1.a` v2 @kind object) @signature `Lo1/f;.e:(Lq1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L543ae8.  v0:= `@@o1.a.BROADCAST` @type ^`o1.a` @kind object;
  #L543aec.  call `f`(v1, v2, v0) @signature `Lo1/f;.f:(Lq1/a;Lo1/a;)V` @kind virtual;
  #L543af2.  return @kind void;
}
procedure `void` `f`(`o1.f` v2 @kind this, `q1.a` v3 @kind object, `o1.a` v4 @kind object) @signature `Lo1/f;.f:(Lq1/a;Lo1/a;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L543b04.  call `a`(v3) @signature `Lu1/a;.a:(Ljava/lang/Object;)V` @kind static;
  #L543b0a.  v0:= v2.`o1.f.h` @type ^`boolean` @kind boolean;
  #L543b0e.  if v0 == 0 then goto L543b56;
  #L543b12.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L543b18.  v0:= temp @kind wide;
  #L543b1a.  call `b`(v3, v0) @signature `Lq1/a;.b:(J)V` @kind virtual;
  #L543b20.  v0:= v2.`o1.f.k` @type ^`java.lang.ThreadLocal` @kind object;
  #L543b24.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L543b2a.  v0:= temp @kind object;
  #L543b2c.  v0:= (`o1.b`) v0 @kind object;
  #L543b30.  call `b`(v0, v3) @signature `Lo1/b;.b:(Lq1/a;)V` @kind virtual;
  #L543b36.  call temp:= `c`(v0) @signature `Lo1/b;.c:()Z` @kind virtual;
  #L543b3c.  v3:= temp;
  #L543b3e.  if v3 != 0 then goto L543b56;
  #L543b42.  call temp:= `a`(v0) @signature `Lo1/b;.a:()Lq1/a;` @kind virtual;
  #L543b48.  v3:= temp @kind object;
  #L543b4a.  if v3 == 0 then goto L543b36;
  #L543b4e.  call temp:= `j`(v2, v3, v4) @signature `Lo1/f;.j:(Lq1/a;Lo1/a;)Z` @kind direct;
  #L543b54.  goto L543b36;
  #L543b56.  return @kind void;
}
procedure `boolean` `g`(`o1.f` v1 @kind this) @signature `Lo1/f;.g:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5437b0.  v0:= v1.`o1.f.j` @type ^`boolean` @kind boolean;
  #L5437b4.  return v0;
}
procedure `void` `i`(`o1.f` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lo1/f;.i:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L543b68.  v0:= v3.`o1.f.f` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L543b6c.  call temp:= `remove`(v0, v4) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L543b72.  v4:= temp @kind object;
  #L543b74.  v4:= (`java.util.Map`) v4 @kind object;
  #L543b78.  if v4 != 0 then goto L543b7e;
  #L543b7c.  return @kind void;
  #L543b7e.  call temp:= `entrySet`(v4) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L543b84.  v4:= temp @kind object;
  #L543b86.  call temp:= `iterator`(v4) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L543b8c.  v4:= temp @kind object;
  #L543b8e.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L543b94.  v0:= temp;
  #L543b96.  if v0 == 0 then goto L543bf4;
  #L543b9a.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L543ba0.  v0:= temp @kind object;
  #L543ba2.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L543ba6.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L543bac.  v1:= temp @kind object;
  #L543bae.  v1:= (`java.lang.String`) v1 @kind object;
  #L543bb2.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L543bb8.  v0:= temp @kind object;
  #L543bba.  v0:= (`java.util.Collection`) v0 @kind object;
  #L543bbe.  if v0 == 0 then goto L543b8e;
  #L543bc2.  v2:= v3.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L543bc6.  call temp:= `get`(v2, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L543bcc.  v2:= temp @kind object;
  #L543bce.  v2:= (`java.util.Set`) v2 @kind object;
  #L543bd2.  if v2 == 0 then goto L543b8e;
  #L543bd6.  call temp:= `removeAll`(v2, v0) @signature `Ljava/util/Set;.removeAll:(Ljava/util/Collection;)Z` @kind interface;
  #L543bdc.  call temp:= `isEmpty`(v2) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L543be2.  v0:= temp;
  #L543be4.  if v0 == 0 then goto L543b8e;
  #L543be8.  v0:= v3.`o1.f.e` @type ^`java.util.concurrent.ConcurrentHashMap` @kind object;
  #L543bec.  call temp:= `remove`(v0, v1) @signature `Ljava/util/concurrent/ConcurrentHashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L543bf2.  goto L543b8e;
  #L543bf4.  return @kind void;
}
procedure `void` `k`(`o1.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lo1/f;.k:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L543c08.  v0:= `@@o1.a.BROADCAST` @type ^`o1.a` @kind object;
  #L543c0c.  call `d`(v1, v2, v0) @signature `Lo1/f;.d:(Ljava/lang/Object;Lo1/a;)V` @kind virtual;
  #L543c12.  return @kind void;
}
