record `o1.e` @kind class @AccessFlag PUBLIC extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`o1.e` v0 @kind this) @signature `Lo1/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L543798.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L54379e.  return @kind void;
}
procedure `int` `a`(`o1.e` v8 @kind this, `o1.d` v9 @kind object, `o1.d` v10 @kind object) @signature `Lo1/e;.a:(Lo1/d;Lo1/d;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5436f0.  v0:= 0I;
  #L5436f2.  if v9 != v10 then goto L5436f8;
  #L5436f6.  return v0;
  #L5436f8.  v1:= -1I;
  #L5436fa.  if v9 != 0 then goto L543700;
  #L5436fe.  return v1;
  #L543700.  v2:= 1I;
  #L543702.  if v10 != 0 then goto L543708;
  #L543706.  return v2;
  #L543708.  call temp:= `c`(v9) @signature `Lo1/d;.c:()I` @kind virtual;
  #L54370e.  v3:= temp;
  #L543710.  if v3 >= 0 then goto L543716;
  #L543714.  v3:= 0I;
  #L543716.  call temp:= `c`(v10) @signature `Lo1/d;.c:()I` @kind virtual;
  #L54371c.  v4:= temp;
  #L54371e.  if v4 >= 0 then goto L543724;
  #L543722.  v4:= 0I;
  #L543724.  if v3 != v4 then goto L54375e;
  #L543728.  call temp:= `f`(v9) @signature `Lo1/d;.f:()J` @kind virtual;
  #L54372e.  v3:= temp @kind wide;
  #L543730.  call temp:= `f`(v10) @signature `Lo1/d;.f:()J` @kind virtual;
  #L543736.  v5:= temp @kind wide;
  #L543738.  v7:= lcmp(v3, v5);
  #L54373c.  if v7 <= 0 then goto L543742;
  #L543740.  return v2;
  #L543742.  call temp:= `f`(v9) @signature `Lo1/d;.f:()J` @kind virtual;
  #L543748.  v2:= temp @kind wide;
  #L54374a.  call temp:= `f`(v10) @signature `Lo1/d;.f:()J` @kind virtual;
  #L543750.  v9:= temp @kind wide;
  #L543752.  v4:= lcmp(v2, v9);
  #L543756.  if v4 >= 0 then goto L54375c;
  #L54375a.  return v1;
  #L54375c.  return v0;
  #L54375e.  v3:= v3 - v4 @kind int;
  #L543760.  return v3;
}
procedure `int` `compare`(`o1.e` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lo1/e;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L543774.  v1:= (`o1.d`) v1 @kind object;
  #L543778.  v2:= (`o1.d`) v2 @kind object;
  #L54377c.  call temp:= `a`(v0, v1, v2) @signature `Lo1/e;.a:(Lo1/d;Lo1/d;)I` @kind virtual;
  #L543782.  v1:= temp;
  #L543784.  return v1;
}
