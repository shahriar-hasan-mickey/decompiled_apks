record `r.o$a` @kind class @AccessFlag  {
}
procedure `void` `<init>`(`r.o$a` v0 @kind this, `r.o` v1 @kind object, `q.e` v2 @kind object, `n.d` v3 @kind object, `int` v4 ) @signature `Lr/o$a;.<init>:(Lr/o;Lq/e;Ln/d;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L55e750.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55e756.  v1:= new `java.lang.ref.WeakReference`;
  #L55e75a.  call `<init>`(v1, v2) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L55e760.  v1:= v2.`q.e.M` @type ^`q.d` @kind object;
  #L55e764.  call temp:= `y`(v3, v1) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e76a.  v1:= v2.`q.e.N` @type ^`q.d` @kind object;
  #L55e76e.  call temp:= `y`(v3, v1) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e774.  v1:= v2.`q.e.O` @type ^`q.d` @kind object;
  #L55e778.  call temp:= `y`(v3, v1) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e77e.  v1:= v2.`q.e.P` @type ^`q.d` @kind object;
  #L55e782.  call temp:= `y`(v3, v1) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e788.  v1:= v2.`q.e.Q` @type ^`q.d` @kind object;
  #L55e78c.  call temp:= `y`(v3, v1) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e792.  return @kind void;
}
