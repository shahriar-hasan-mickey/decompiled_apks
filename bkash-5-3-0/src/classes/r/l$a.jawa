record `r.l$a` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@r.l$a.a` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lr/l$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L55c1a4.  call temp:= `values`() @signature `Lr/p$b;.values:()[Lr/p$b;` @kind static;
  #L55c1aa.  v0:= temp @kind object;
  #L55c1ac.  v0:= length @variable v0;
  #L55c1ae.  v0:= new `int`[v0];
  #L55c1b2.  `@@r.l$a.a` @type ^`int`[] := v0 @kind object;
  #L55c1b6.  v1:= `@@r.p$b.START` @type ^`r.p$b` @kind object;
  #L55c1ba.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L55c1c0.  v1:= temp;
  #L55c1c2.  v2:= 1I;
  #L55c1c4.  v0[v1]:= v2;
  #L55c1c8.  v0:= `@@r.l$a.a` @type ^`int`[] @kind object;
  #L55c1cc.  v1:= `@@r.p$b.END` @type ^`r.p$b` @kind object;
  #L55c1d0.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L55c1d6.  v1:= temp;
  #L55c1d8.  v2:= 2I;
  #L55c1da.  v0[v1]:= v2;
  #L55c1de.  v0:= `@@r.l$a.a` @type ^`int`[] @kind object;
  #L55c1e2.  v1:= `@@r.p$b.CENTER` @type ^`r.p$b` @kind object;
  #L55c1e6.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L55c1ec.  v1:= temp;
  #L55c1ee.  v2:= 3I;
  #L55c1f0.  v0[v1]:= v2;
  #L55c1f4.  return @kind void;
  catch `java.lang.NoSuchFieldError` @[L55c1b6..L55c1c8] goto L55c1c8;
  catch `java.lang.NoSuchFieldError` @[L55c1c8..L55c1de] goto L55c1de;
  catch `java.lang.NoSuchFieldError` @[L55c1de..L55c1f4] goto L55c1f4;
}
