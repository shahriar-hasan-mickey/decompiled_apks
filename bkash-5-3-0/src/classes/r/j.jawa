record `r.j` @kind class @AccessFlag  extends `r.p` @kind class {
}
procedure `void` `<init>`(`r.j` v1 @kind this, `q.e` v2 @kind object) @signature `Lr/j;.<init>:(Lq/e;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L55ba60.  call `<init>`(v1, v2) @signature `Lr/p;.<init>:(Lq/e;)V` @kind direct;
  #L55ba66.  v0:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L55ba6a.  call `f`(v0) @signature `Lr/l;.f:()V` @kind virtual;
  #L55ba70.  v0:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L55ba74.  call `f`(v0) @signature `Lr/n;.f:()V` @kind virtual;
  #L55ba7a.  v2:= (`q.h`) v2 @kind object;
  #L55ba7e.  call temp:= `p1`(v2) @signature `Lq/h;.p1:()I` @kind virtual;
  #L55ba84.  v2:= temp;
  #L55ba86.  v1.`r.p.f` @type ^`int` := v2;
  #L55ba8a.  return @kind void;
}
procedure `void` `q`(`r.j` v1 @kind this, `r.f` v2 @kind object) @signature `Lr/j;.q:(Lr/f;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L55ba9c.  v0:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55baa0.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55baa4.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55baaa.  v2:= v2.`r.f.l` @type ^`java.util.List` @kind object;
  #L55baae.  v0:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55bab2.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bab8.  return @kind void;
}
procedure `void` `a`(`r.j` v2 @kind this, `r.d` v3 @kind object) @signature `Lr/j;.a:(Lr/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55bd70.  v3:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bd74.  v0:= v3.`r.f.c` @type ^`boolean` @kind boolean;
  #L55bd78.  if v0 != 0 then goto L55bd7e;
  #L55bd7c.  return @kind void;
  #L55bd7e.  v0:= v3.`r.f.j` @type ^`boolean` @kind boolean;
  #L55bd82.  if v0 == 0 then goto L55bd88;
  #L55bd86.  return @kind void;
  #L55bd88.  v3:= v3.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bd8c.  v0:= 0I;
  #L55bd8e.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L55bd94.  v3:= temp @kind object;
  #L55bd96.  v3:= (`r.f`) v3 @kind object;
  #L55bd9a.  v0:= v2.`r.p.b` @type ^`q.e` @kind object;
  #L55bd9e.  v0:= (`q.h`) v0 @kind object;
  #L55bda2.  v1:= 0.5F;
  #L55bda6.  v3:= v3.`r.f.g` @type ^`int`;
  #L55bdaa.  v3:= (`float`) v3 @kind i2f;
  #L55bdac.  call temp:= `s1`(v0) @signature `Lq/h;.s1:()F` @kind virtual;
  #L55bdb2.  v0:= temp;
  #L55bdb4.  v3:= v3 * v0 @kind float;
  #L55bdb8.  v3:= v3 + v1 @kind float;
  #L55bdba.  v3:= (`int`) v3 @kind f2i;
  #L55bdbc.  v0:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bdc0.  call `d`(v0, v3) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L55bdc6.  return @kind void;
}
procedure `void` `d`(`r.j` v5 @kind this) @signature `Lr/j;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L55bacc.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bad0.  v0:= (`q.h`) v0 @kind object;
  #L55bad4.  call temp:= `q1`(v0) @signature `Lq/h;.q1:()I` @kind virtual;
  #L55bada.  v1:= temp;
  #L55badc.  call temp:= `r1`(v0) @signature `Lq/h;.r1:()I` @kind virtual;
  #L55bae2.  v2:= temp;
  #L55bae4.  call temp:= `s1`(v0) @signature `Lq/h;.s1:()F` @kind virtual;
  #L55baea.  call temp:= `p1`(v0) @signature `Lq/h;.p1:()I` @kind virtual;
  #L55baf0.  v0:= temp;
  #L55baf2.  v3:= 1I;
  #L55baf4.  v4:= -1I;
  #L55baf6.  if v0 != v3 then goto L55bbf8;
  #L55bafa.  if v1 == v4 then goto L55bb44;
  #L55bafe.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb02.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bb06.  v2:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bb0a.  v2:= v2.`q.e.Y` @type ^`q.e` @kind object;
  #L55bb0e.  v2:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L55bb12.  v2:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bb16.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bb1c.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bb20.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bb24.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55bb28.  v0:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L55bb2c.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bb30.  v2:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb34.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bb3a.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb3e.  v0.`r.f.f` @type ^`int` := v1;
  #L55bb42.  goto L55bbd0;
  #L55bb44.  if v2 == v4 then goto L55bb90;
  #L55bb48.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb4c.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bb50.  v1:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bb54.  v1:= v1.`q.e.Y` @type ^`q.e` @kind object;
  #L55bb58.  v1:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L55bb5c.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L55bb60.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bb66.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bb6a.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bb6e.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55bb72.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bb76.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bb7a.  v1:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb7e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bb84.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb88.  v1:= -v2 @kind int;
  #L55bb8a.  v0.`r.f.f` @type ^`int` := v1;
  #L55bb8e.  goto L55bbd0;
  #L55bb90.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bb94.  v0.`r.f.b` @type ^`boolean` := v3 @kind boolean;
  #L55bb98.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bb9c.  v1:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bba0.  v1:= v1.`q.e.Y` @type ^`q.e` @kind object;
  #L55bba4.  v1:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L55bba8.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L55bbac.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bbb2.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bbb6.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bbba.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55bbbe.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bbc2.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bbc6.  v1:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bbca.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bbd0.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bbd4.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55bbd8.  v0:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L55bbdc.  call `q`(v5, v0) @signature `Lr/j;.q:(Lr/f;)V` @kind direct;
  #L55bbe2.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bbe6.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55bbea.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bbee.  call `q`(v5, v0) @signature `Lr/j;.q:(Lr/f;)V` @kind direct;
  #L55bbf4.  goto L55bcf2;
  #L55bbf8.  if v1 == v4 then goto L55bc42;
  #L55bbfc.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc00.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bc04.  v2:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bc08.  v2:= v2.`q.e.Y` @type ^`q.e` @kind object;
  #L55bc0c.  v2:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L55bc10.  v2:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bc14.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bc1a.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bc1e.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bc22.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55bc26.  v0:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L55bc2a.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bc2e.  v2:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc32.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bc38.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc3c.  v0.`r.f.f` @type ^`int` := v1;
  #L55bc40.  goto L55bcce;
  #L55bc42.  if v2 == v4 then goto L55bc8e;
  #L55bc46.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc4a.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bc4e.  v1:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bc52.  v1:= v1.`q.e.Y` @type ^`q.e` @kind object;
  #L55bc56.  v1:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L55bc5a.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L55bc5e.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bc64.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bc68.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bc6c.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55bc70.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bc74.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bc78.  v1:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc7c.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bc82.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc86.  v1:= -v2 @kind int;
  #L55bc88.  v0.`r.f.f` @type ^`int` := v1;
  #L55bc8c.  goto L55bcce;
  #L55bc8e.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bc92.  v0.`r.f.b` @type ^`boolean` := v3 @kind boolean;
  #L55bc96.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L55bc9a.  v1:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bc9e.  v1:= v1.`q.e.Y` @type ^`q.e` @kind object;
  #L55bca2.  v1:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L55bca6.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L55bcaa.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bcb0.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bcb4.  v0:= v0.`q.e.Y` @type ^`q.e` @kind object;
  #L55bcb8.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55bcbc.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bcc0.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L55bcc4.  v1:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55bcc8.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L55bcce.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bcd2.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55bcd6.  v0:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L55bcda.  call `q`(v5, v0) @signature `Lr/j;.q:(Lr/f;)V` @kind direct;
  #L55bce0.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55bce4.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55bce8.  v0:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L55bcec.  call `q`(v5, v0) @signature `Lr/j;.q:(Lr/f;)V` @kind direct;
  #L55bcf2.  return @kind void;
}
procedure `void` `e`(`r.j` v2 @kind this) @signature `Lr/j;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L55bd04.  v0:= v2.`r.p.b` @type ^`q.e` @kind object;
  #L55bd08.  v0:= (`q.h`) v0 @kind object;
  #L55bd0c.  call temp:= `p1`(v0) @signature `Lq/h;.p1:()I` @kind virtual;
  #L55bd12.  v0:= temp;
  #L55bd14.  v1:= 1I;
  #L55bd16.  if v0 != v1 then goto L55bd2e;
  #L55bd1a.  v0:= v2.`r.p.b` @type ^`q.e` @kind object;
  #L55bd1e.  v1:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bd22.  v1:= v1.`r.f.g` @type ^`int`;
  #L55bd26.  call `j1`(v0, v1) @signature `Lq/e;.j1:(I)V` @kind virtual;
  #L55bd2c.  goto L55bd40;
  #L55bd2e.  v0:= v2.`r.p.b` @type ^`q.e` @kind object;
  #L55bd32.  v1:= v2.`r.p.h` @type ^`r.f` @kind object;
  #L55bd36.  v1:= v1.`r.f.g` @type ^`int`;
  #L55bd3a.  call `k1`(v0, v1) @signature `Lq/e;.k1:(I)V` @kind virtual;
  #L55bd40.  return @kind void;
}
procedure `void` `f`(`r.j` v1 @kind this) @signature `Lr/j;.f:()V` @AccessFlag  {
    temp;
    v0;

  #L55bd54.  v0:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55bd58.  call `c`(v0) @signature `Lr/f;.c:()V` @kind virtual;
  #L55bd5e.  return @kind void;
}
procedure `boolean` `m`(`r.j` v1 @kind this) @signature `Lr/j;.m:()Z` @AccessFlag  {
    temp;
    v0;

  #L55ba4c.  v0:= 0I;
  #L55ba4e.  return v0;
}
