record `r.c` @kind class @AccessFlag PUBLIC extends `r.p` @kind class {
  `java.util.ArrayList` `r.c.k` @AccessFlag ;
  `int` `r.c.l` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`r.c` v0 @kind this, `q.e` v1 @kind object, `int` v2 ) @signature `Lr/c;.<init>:(Lq/e;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L557794.  call `<init>`(v0, v1) @signature `Lr/p;.<init>:(Lq/e;)V` @kind direct;
  #L55779a.  v1:= new `java.util.ArrayList`;
  #L55779e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5577a4.  v0.`r.c.k` @type ^`java.util.ArrayList` := v1 @kind object;
  #L5577a8.  v0.`r.p.f` @type ^`int` := v2;
  #L5577ac.  call `q`(v0) @signature `Lr/c;.q:()V` @kind direct;
  #L5577b2.  return @kind void;
}
procedure `void` `q`(`r.c` v5 @kind this) @signature `Lr/c;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L557988.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L55798c.  v1:= v5.`r.p.f` @type ^`int`;
  #L557990.  call temp:= `N`(v0, v1) @signature `Lq/e;.N:(I)Lq/e;` @kind virtual;
  #L557996.  v1:= temp @kind object;
  #L557998.  v4:= v1 @kind object;
  #L55799a.  v1:= v0 @kind object;
  #L55799c.  v0:= v4 @kind object;
  #L55799e.  if v0 == 0 then goto L5579b0;
  #L5579a2.  v1:= v5.`r.p.f` @type ^`int`;
  #L5579a6.  call temp:= `N`(v0, v1) @signature `Lq/e;.N:(I)Lq/e;` @kind virtual;
  #L5579ac.  v1:= temp @kind object;
  #L5579ae.  goto L557998;
  #L5579b0.  v5.`r.p.b` @type ^`q.e` := v1 @kind object;
  #L5579b4.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5579b8.  v2:= v5.`r.p.f` @type ^`int`;
  #L5579bc.  call temp:= `P`(v1, v2) @signature `Lq/e;.P:(I)Lr/p;` @kind virtual;
  #L5579c2.  v2:= temp @kind object;
  #L5579c4.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5579ca.  v0:= v5.`r.p.f` @type ^`int`;
  #L5579ce.  call temp:= `L`(v1, v0) @signature `Lq/e;.L:(I)Lq/e;` @kind virtual;
  #L5579d4.  v0:= temp @kind object;
  #L5579d6.  if v0 == 0 then goto L5579fe;
  #L5579da.  v1:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5579de.  v2:= v5.`r.p.f` @type ^`int`;
  #L5579e2.  call temp:= `P`(v0, v2) @signature `Lq/e;.P:(I)Lr/p;` @kind virtual;
  #L5579e8.  v2:= temp @kind object;
  #L5579ea.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5579f0.  v1:= v5.`r.p.f` @type ^`int`;
  #L5579f4.  call temp:= `L`(v0, v1) @signature `Lq/e;.L:(I)Lq/e;` @kind virtual;
  #L5579fa.  v0:= temp @kind object;
  #L5579fc.  goto L5579d6;
  #L5579fe.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557a02.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L557a08.  v0:= temp @kind object;
  #L557a0a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L557a10.  v1:= temp;
  #L557a12.  v2:= 1I;
  #L557a14.  if v1 == 0 then goto L557a44;
  #L557a18.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L557a1e.  v1:= temp @kind object;
  #L557a20.  v1:= (`r.p`) v1 @kind object;
  #L557a24.  v3:= v5.`r.p.f` @type ^`int`;
  #L557a28.  if v3 != 0 then goto L557a36;
  #L557a2c.  v1:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L557a30.  v1.`q.e.b` @type ^`r.c` := v5 @kind object;
  #L557a34.  goto L557a0a;
  #L557a36.  if v3 != v2 then goto L557a0a;
  #L557a3a.  v1:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L557a3e.  v1.`q.e.c` @type ^`r.c` := v5 @kind object;
  #L557a42.  goto L557a0a;
  #L557a44.  v0:= v5.`r.p.f` @type ^`int`;
  #L557a48.  if v0 != 0 then goto L557a6c;
  #L557a4c.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L557a50.  call temp:= `M`(v0) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L557a56.  v0:= temp @kind object;
  #L557a58.  v0:= (`q.f`) v0 @kind object;
  #L557a5c.  call temp:= `N1`(v0) @signature `Lq/f;.N1:()Z` @kind virtual;
  #L557a62.  v0:= temp;
  #L557a64.  if v0 == 0 then goto L557a6c;
  #L557a68.  v0:= 1I;
  #L557a6a.  goto L557a6e;
  #L557a6c.  v0:= 0I;
  #L557a6e.  if v0 == 0 then goto L557aa4;
  #L557a72.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557a76.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L557a7c.  v0:= temp;
  #L557a7e.  if v0 <= v2 then goto L557aa4;
  #L557a82.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557a86.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L557a8c.  v1:= temp;
  #L557a8e.  v1:= v1 - v2 @kind int;
  #L557a90.  call temp:= `get`(v0, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557a96.  v0:= temp @kind object;
  #L557a98.  v0:= (`r.p`) v0 @kind object;
  #L557a9c.  v0:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L557aa0.  v5.`r.p.b` @type ^`q.e` := v0 @kind object;
  #L557aa4.  v0:= v5.`r.p.f` @type ^`int`;
  #L557aa8.  if v0 != 0 then goto L557aba;
  #L557aac.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L557ab0.  call temp:= `B`(v0) @signature `Lq/e;.B:()I` @kind virtual;
  #L557ab6.  v0:= temp;
  #L557ab8.  goto L557ac6;
  #L557aba.  v0:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L557abe.  call temp:= `R`(v0) @signature `Lq/e;.R:()I` @kind virtual;
  #L557ac4.  v0:= temp;
  #L557ac6.  v5.`r.c.l` @type ^`int` := v0;
  #L557aca.  return @kind void;
}
procedure `q.e` `r`(`r.c` v4 @kind this) @signature `Lr/c;.r:()Lq/e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5576e4.  v0:= 0I;
  #L5576e6.  v1:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5576ea.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L5576f0.  v1:= temp;
  #L5576f2.  if v0 >= v1 then goto L557726;
  #L5576f6.  v1:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5576fa.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557700.  v1:= temp @kind object;
  #L557702.  v1:= (`r.p`) v1 @kind object;
  #L557706.  v2:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L55770a.  call temp:= `U`(v2) @signature `Lq/e;.U:()I` @kind virtual;
  #L557710.  v2:= temp;
  #L557712.  v3:= 8I;
  #L557716.  if v2 == v3 then goto L557720;
  #L55771a.  v0:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L55771e.  return v0 @kind object;
  #L557720.  v0:= v0 + 1;
  #L557724.  goto L5576e6;
  #L557726.  v0:= 0I;
  #L557728.  return v0 @kind object;
}
procedure `q.e` `s`(`r.c` v4 @kind this) @signature `Lr/c;.s:()Lq/e;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55773c.  v0:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557740.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L557746.  v0:= temp;
  #L557748.  v0:= v0 + -1;
  #L55774c.  if v0 < 0 then goto L557780;
  #L557750.  v1:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557754.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55775a.  v1:= temp @kind object;
  #L55775c.  v1:= (`r.p`) v1 @kind object;
  #L557760.  v2:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L557764.  call temp:= `U`(v2) @signature `Lq/e;.U:()I` @kind virtual;
  #L55776a.  v2:= temp;
  #L55776c.  v3:= 8I;
  #L557770.  if v2 == v3 then goto L55777a;
  #L557774.  v0:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L557778.  return v0 @kind object;
  #L55777a.  v0:= v0 + -1;
  #L55777e.  goto L55774c;
  #L557780.  v0:= 0I;
  #L557782.  return v0 @kind object;
}
procedure `void` `a`(`r.c` v26 @kind this, `r.d` v27 @kind object) @signature `Lr/c;.a:(Lr/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;

  #L557b20.  v0:= v26 @kind object;
  #L557b24.  v1:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L557b28.  v1:= v1.`r.f.j` @type ^`boolean` @kind boolean;
  #L557b2c.  if v1 == 0 then goto L558372;
  #L557b30.  v1:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L557b34.  v1:= v1.`r.f.j` @type ^`boolean` @kind boolean;
  #L557b38.  if v1 != 0 then goto L557b40;
  #L557b3c.  goto L558372;
  #L557b40.  v1:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L557b44.  call temp:= `M`(v1) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L557b4a.  v1:= temp @kind object;
  #L557b4c.  v2:= instanceof @variable v1 @type ^`q.f` @kind boolean;
  #L557b50.  if v2 == 0 then goto L557b62;
  #L557b54.  v1:= (`q.f`) v1 @kind object;
  #L557b58.  call temp:= `N1`(v1) @signature `Lq/f;.N1:()Z` @kind virtual;
  #L557b5e.  v1:= temp;
  #L557b60.  goto L557b64;
  #L557b62.  v1:= 0I;
  #L557b64.  v2:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L557b68.  v2:= v2.`r.f.g` @type ^`int`;
  #L557b6c.  v4:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L557b70.  v4:= v4.`r.f.g` @type ^`int`;
  #L557b74.  v2:= v2 - v4 @kind int;
  #L557b76.  v4:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557b7a.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L557b80.  v4:= temp;
  #L557b82.  v5:= 0I;
  #L557b84.  v6:= -1I;
  #L557b86.  v7:= 8I;
  #L557b8a.  if v5 >= v4 then goto L557bb4;
  #L557b8e.  v8:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557b92.  call temp:= `get`(v8, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557b98.  v8:= temp @kind object;
  #L557b9a.  v8:= (`r.p`) v8 @kind object;
  #L557b9e.  v8:= v8.`r.p.b` @type ^`q.e` @kind object;
  #L557ba2.  call temp:= `U`(v8) @signature `Lq/e;.U:()I` @kind virtual;
  #L557ba8.  v8:= temp;
  #L557baa.  if v8 != v7 then goto L557bb6;
  #L557bae.  v5:= v5 + 1;
  #L557bb2.  goto L557b84;
  #L557bb4.  v5:= -1I;
  #L557bb6.  v8:= v4 + -1;
  #L557bba.  v9:= v8;
  #L557bbc.  if v9 < 0 then goto L557be8;
  #L557bc0.  v10:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557bc4.  call temp:= `get`(v10, v9) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557bca.  v10:= temp @kind object;
  #L557bcc.  v10:= (`r.p`) v10 @kind object;
  #L557bd0.  v10:= v10.`r.p.b` @type ^`q.e` @kind object;
  #L557bd4.  call temp:= `U`(v10) @signature `Lq/e;.U:()I` @kind virtual;
  #L557bda.  v10:= temp;
  #L557bdc.  if v10 != v7 then goto L557be6;
  #L557be0.  v9:= v9 + -1;
  #L557be4.  goto L557bbc;
  #L557be6.  v6:= v9;
  #L557be8.  v9:= 0I;
  #L557bea.  v11:= 2I;
  #L557bec.  if v9 >= v11 then goto L557d32;
  #L557bf0.  v13:= 0I;
  #L557bf2.  v14:= 0I;
  #L557bf4.  v15:= 0I;
  #L557bf6.  v16:= 0I;
  #L557bfa.  v17:= 0I;
  #L557bfe.  if v13 >= v4 then goto L557d16;
  #L557c02.  v3:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557c06.  call temp:= `get`(v3, v13) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557c0c.  v3:= temp @kind object;
  #L557c0e.  v3:= (`r.p`) v3 @kind object;
  #L557c12.  v11:= v3.`r.p.b` @type ^`q.e` @kind object;
  #L557c16.  call temp:= `U`(v11) @signature `Lq/e;.U:()I` @kind virtual;
  #L557c1c.  v11:= temp;
  #L557c1e.  if v11 != v7 then goto L557c26;
  #L557c22.  goto L557d08;
  #L557c26.  v16:= v16 + 1;
  #L557c2a.  if v13 <= 0 then goto L557c3c;
  #L557c2e.  if v13 < v5 then goto L557c3c;
  #L557c32.  v11:= v3.`r.p.h` @type ^`r.f` @kind object;
  #L557c36.  v11:= v11.`r.f.f` @type ^`int`;
  #L557c3a.  v14:= v14 + v11 @kind int;
  #L557c3c.  v11:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L557c40.  v7:= v11.`r.f.g` @type ^`int`;
  #L557c44.  v10:= v3.`r.p.d` @type ^`q.e$b` @kind object;
  #L557c48.  v12:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L557c4c.  if v10 == v12 then goto L557c54;
  #L557c50.  v10:= 1I;
  #L557c52.  goto L557c56;
  #L557c54.  v10:= 0I;
  #L557c56.  if v10 == 0 then goto L557c9a;
  #L557c5a.  v11:= v0.`r.p.f` @type ^`int`;
  #L557c5e.  if v11 != 0 then goto L557c78;
  #L557c62.  v12:= v3.`r.p.b` @type ^`q.e` @kind object;
  #L557c66.  v12:= v12.`q.e.d` @type ^`r.l` @kind object;
  #L557c6a.  v12:= v12.`r.p.e` @type ^`r.g` @kind object;
  #L557c6e.  v12:= v12.`r.f.j` @type ^`boolean` @kind boolean;
  #L557c72.  if v12 != 0 then goto L557c78;
  #L557c76.  return @kind void;
  #L557c78.  v12:= 1I;
  #L557c7a.  if v11 != v12 then goto L557c94;
  #L557c7e.  v11:= v3.`r.p.b` @type ^`q.e` @kind object;
  #L557c82.  v11:= v11.`q.e.e` @type ^`r.n` @kind object;
  #L557c86.  v11:= v11.`r.p.e` @type ^`r.g` @kind object;
  #L557c8a.  v11:= v11.`r.f.j` @type ^`boolean` @kind boolean;
  #L557c8e.  if v11 != 0 then goto L557c94;
  #L557c92.  return @kind void;
  #L557c94.  v19:= v7;
  #L557c98.  goto L557cc6;
  #L557c9a.  v19:= v7;
  #L557c9e.  v12:= 1I;
  #L557ca0.  v7:= v3.`r.p.a` @type ^`int`;
  #L557ca4.  if v7 != v12 then goto L557cb6;
  #L557ca8.  if v9 != 0 then goto L557cb6;
  #L557cac.  v7:= v11.`r.g.m` @type ^`int`;
  #L557cb0.  v15:= v15 + 1;
  #L557cb4.  goto L557cc2;
  #L557cb6.  v7:= v11.`r.f.j` @type ^`boolean` @kind boolean;
  #L557cba.  if v7 == 0 then goto L557cc6;
  #L557cbe.  v7:= v19;
  #L557cc2.  v10:= 1I;
  #L557cc4.  goto L557cca;
  #L557cc6.  v7:= v19;
  #L557cca.  if v10 != 0 then goto L557cf2;
  #L557cce.  v15:= v15 + 1;
  #L557cd2.  v7:= v3.`r.p.b` @type ^`q.e` @kind object;
  #L557cd6.  v7:= v7.`q.e.H0` @type ^`float`[] @kind object;
  #L557cda.  v10:= v0.`r.p.f` @type ^`int`;
  #L557cde.  v7:= v7[v10];
  #L557ce2.  v10:= 0I;
  #L557ce4.  v11:= fcmpl(v7, v10);
  #L557ce8.  if v11 < 0 then goto L557cf4;
  #L557cec.  v17:= v17 + v7 @kind float;
  #L557cf0.  goto L557cf4;
  #L557cf2.  v14:= v14 + v7 @kind int;
  #L557cf4.  if v13 >= v8 then goto L557d08;
  #L557cf8.  if v13 >= v6 then goto L557d08;
  #L557cfc.  v3:= v3.`r.p.i` @type ^`r.f` @kind object;
  #L557d00.  v3:= v3.`r.f.f` @type ^`int`;
  #L557d04.  v3:= -v3 @kind int;
  #L557d06.  v14:= v14 + v3 @kind int;
  #L557d08.  v13:= v13 + 1;
  #L557d0c.  v7:= 8I;
  #L557d10.  v11:= 2I;
  #L557d12.  goto L557bfe;
  #L557d16.  if v14 < v2 then goto L557d2c;
  #L557d1a.  if v15 != 0 then goto L557d20;
  #L557d1e.  goto L557d2c;
  #L557d20.  v9:= v9 + 1;
  #L557d24.  v7:= 8I;
  #L557d28.  goto L557bea;
  #L557d2c.  v3:= v16;
  #L557d30.  goto L557d3c;
  #L557d32.  v3:= 0I;
  #L557d34.  v14:= 0I;
  #L557d36.  v15:= 0I;
  #L557d38.  v17:= 0I;
  #L557d3c.  v7:= v0.`r.p.h` @type ^`r.f` @kind object;
  #L557d40.  v7:= v7.`r.f.g` @type ^`int`;
  #L557d44.  if v1 == 0 then goto L557d50;
  #L557d48.  v7:= v0.`r.p.i` @type ^`r.f` @kind object;
  #L557d4c.  v7:= v7.`r.f.g` @type ^`int`;
  #L557d50.  v9:= 0.5F;
  #L557d54.  if v14 <= v2 then goto L557d7e;
  #L557d58.  v10:= 2.0F;
  #L557d5c.  if v1 == 0 then goto L557d70;
  #L557d60.  v11:= v14 - v2 @kind int;
  #L557d64.  v11:= (`float`) v11 @kind i2f;
  #L557d66.  v11:= v11 / v10 @kind float;
  #L557d68.  v11:= v11 + v9 @kind float;
  #L557d6a.  v10:= (`int`) v11 @kind f2i;
  #L557d6c.  v7:= v7 + v10 @kind int;
  #L557d6e.  goto L557d7e;
  #L557d70.  v11:= v14 - v2 @kind int;
  #L557d74.  v11:= (`float`) v11 @kind i2f;
  #L557d76.  v11:= v11 / v10 @kind float;
  #L557d78.  v11:= v11 + v9 @kind float;
  #L557d7a.  v10:= (`int`) v11 @kind f2i;
  #L557d7c.  v7:= v7 - v10 @kind int;
  #L557d7e.  if v15 <= 0 then goto L557f6e;
  #L557d82.  v10:= v2 - v14 @kind int;
  #L557d86.  v10:= (`float`) v10 @kind i2f;
  #L557d88.  v11:= (`float`) v15 @kind i2f;
  #L557d8a.  v11:= v10 / v11 @kind float;
  #L557d8e.  v11:= v11 + v9 @kind float;
  #L557d90.  v11:= (`int`) v11 @kind f2i;
  #L557d92.  v12:= 0I;
  #L557d94.  v13:= 0I;
  #L557d96.  if v12 >= v4 then goto L557ed2;
  #L557d9a.  v9:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557d9e.  call temp:= `get`(v9, v12) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557da4.  v9:= temp @kind object;
  #L557da6.  v9:= (`r.p`) v9 @kind object;
  #L557daa.  v19:= v11;
  #L557dae.  v11:= v9.`r.p.b` @type ^`q.e` @kind object;
  #L557db2.  call temp:= `U`(v11) @signature `Lq/e;.U:()I` @kind virtual;
  #L557db8.  v11:= temp;
  #L557dba.  v20:= v14;
  #L557dbe.  v14:= 8I;
  #L557dc2.  if v11 != v14 then goto L557dca;
  #L557dc6.  goto L557e9e;
  #L557dca.  v11:= v9.`r.p.d` @type ^`q.e$b` @kind object;
  #L557dce.  v14:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L557dd2.  if v11 != v14 then goto L557e9e;
  #L557dd6.  v11:= v9.`r.p.e` @type ^`r.g` @kind object;
  #L557dda.  v14:= v11.`r.f.j` @type ^`boolean` @kind boolean;
  #L557dde.  if v14 != 0 then goto L557e9e;
  #L557de2.  v14:= 0I;
  #L557de4.  v18:= fcmpl(v17, v14);
  #L557de8.  if v18 <= 0 then goto L557e12;
  #L557dec.  v14:= v9.`r.p.b` @type ^`q.e` @kind object;
  #L557df0.  v14:= v14.`q.e.H0` @type ^`float`[] @kind object;
  #L557df4.  v21:= v7;
  #L557df8.  v7:= v0.`r.p.f` @type ^`int`;
  #L557dfc.  v7:= v14[v7];
  #L557e00.  v7:= v7 * v10 @kind float;
  #L557e04.  v7:= v7 / v17 @kind float;
  #L557e08.  v14:= 0.5F;
  #L557e0c.  v7:= v7 + v14 @kind float;
  #L557e0e.  v7:= (`int`) v7 @kind f2i;
  #L557e10.  goto L557e1a;
  #L557e12.  v21:= v7;
  #L557e16.  v7:= v19;
  #L557e1a.  v14:= v0.`r.p.f` @type ^`int`;
  #L557e1e.  if v14 != 0 then goto L557e38;
  #L557e22.  v14:= v9.`r.p.b` @type ^`q.e` @kind object;
  #L557e26.  v22:= v10;
  #L557e2a.  v10:= v14.`q.e.w` @type ^`int`;
  #L557e2e.  v14:= v14.`q.e.v` @type ^`int`;
  #L557e32.  v23:= v1;
  #L557e36.  goto L557e56;
  #L557e38.  v22:= v10;
  #L557e3c.  v10:= v9.`r.p.b` @type ^`q.e` @kind object;
  #L557e40.  v14:= v10.`q.e.z` @type ^`int`;
  #L557e44.  v10:= v10.`q.e.y` @type ^`int`;
  #L557e48.  v23:= v1;
  #L557e4c.  v25:= v14;
  #L557e50.  v14:= v10;
  #L557e52.  v10:= v25;
  #L557e56.  v1:= v9.`r.p.a` @type ^`int`;
  #L557e5a.  v24:= v3;
  #L557e5e.  v3:= 1I;
  #L557e60.  if v1 != v3 then goto L557e72;
  #L557e64.  v1:= v11.`r.g.m` @type ^`int`;
  #L557e68.  call temp:= `min`(v7, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L557e6e.  v1:= temp;
  #L557e70.  goto L557e74;
  #L557e72.  v1:= v7;
  #L557e74.  call temp:= `max`(v14, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L557e7a.  v1:= temp;
  #L557e7c.  if v10 <= 0 then goto L557e88;
  #L557e80.  call temp:= `min`(v10, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L557e86.  v1:= temp;
  #L557e88.  if v1 == v7 then goto L557e92;
  #L557e8c.  v13:= v13 + 1;
  #L557e90.  v7:= v1;
  #L557e92.  v1:= v9.`r.p.e` @type ^`r.g` @kind object;
  #L557e96.  call `d`(v1, v7) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L557e9c.  goto L557eae;
  #L557e9e.  v23:= v1;
  #L557ea2.  v24:= v3;
  #L557ea6.  v21:= v7;
  #L557eaa.  v22:= v10;
  #L557eae.  v12:= v12 + 1;
  #L557eb2.  v11:= v19;
  #L557eb6.  v14:= v20;
  #L557eba.  v7:= v21;
  #L557ebe.  v10:= v22;
  #L557ec2.  v1:= v23;
  #L557ec6.  v3:= v24;
  #L557eca.  v9:= 0.5F;
  #L557ece.  goto L557d96;
  #L557ed2.  v23:= v1;
  #L557ed6.  v24:= v3;
  #L557eda.  v21:= v7;
  #L557ede.  v20:= v14;
  #L557ee2.  if v13 <= 0 then goto L557f50;
  #L557ee6.  v15:= v15 - v13 @kind int;
  #L557ee8.  v1:= 0I;
  #L557eea.  v3:= 0I;
  #L557eec.  if v1 >= v4 then goto L557f4c;
  #L557ef0.  v7:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557ef4.  call temp:= `get`(v7, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557efa.  v7:= temp @kind object;
  #L557efc.  v7:= (`r.p`) v7 @kind object;
  #L557f00.  v9:= v7.`r.p.b` @type ^`q.e` @kind object;
  #L557f04.  call temp:= `U`(v9) @signature `Lq/e;.U:()I` @kind virtual;
  #L557f0a.  v9:= temp;
  #L557f0c.  v10:= 8I;
  #L557f10.  if v9 != v10 then goto L557f16;
  #L557f14.  goto L557f46;
  #L557f16.  if v1 <= 0 then goto L557f28;
  #L557f1a.  if v1 < v5 then goto L557f28;
  #L557f1e.  v9:= v7.`r.p.h` @type ^`r.f` @kind object;
  #L557f22.  v9:= v9.`r.f.f` @type ^`int`;
  #L557f26.  v3:= v3 + v9 @kind int;
  #L557f28.  v9:= v7.`r.p.e` @type ^`r.g` @kind object;
  #L557f2c.  v9:= v9.`r.f.g` @type ^`int`;
  #L557f30.  v3:= v3 + v9 @kind int;
  #L557f32.  if v1 >= v8 then goto L557f46;
  #L557f36.  if v1 >= v6 then goto L557f46;
  #L557f3a.  v7:= v7.`r.p.i` @type ^`r.f` @kind object;
  #L557f3e.  v7:= v7.`r.f.f` @type ^`int`;
  #L557f42.  v7:= -v7 @kind int;
  #L557f44.  v3:= v3 + v7 @kind int;
  #L557f46.  v1:= v1 + 1;
  #L557f4a.  goto L557eec;
  #L557f4c.  v14:= v3;
  #L557f4e.  goto L557f54;
  #L557f50.  v14:= v20;
  #L557f54.  v1:= v0.`r.c.l` @type ^`int`;
  #L557f58.  v3:= 2I;
  #L557f5a.  if v1 != v3 then goto L557f6a;
  #L557f5e.  if v13 != 0 then goto L557f6a;
  #L557f62.  v1:= 0I;
  #L557f64.  v0.`r.c.l` @type ^`int` := v1;
  #L557f68.  goto L557f82;
  #L557f6a.  v1:= 0I;
  #L557f6c.  goto L557f82;
  #L557f6e.  v23:= v1;
  #L557f72.  v24:= v3;
  #L557f76.  v21:= v7;
  #L557f7a.  v20:= v14;
  #L557f7e.  v1:= 0I;
  #L557f80.  v3:= 2I;
  #L557f82.  if v14 <= v2 then goto L557f8a;
  #L557f86.  v0.`r.c.l` @type ^`int` := v3;
  #L557f8a.  if v24 <= 0 then goto L557f9a;
  #L557f8e.  if v15 != 0 then goto L557f9a;
  #L557f92.  if v5 != v6 then goto L557f9a;
  #L557f96.  v0.`r.c.l` @type ^`int` := v3;
  #L557f9a.  v3:= v0.`r.c.l` @type ^`int`;
  #L557f9e.  v7:= 1I;
  #L557fa0.  if v3 != v7 then goto L5580e2;
  #L557fa4.  v9:= v24;
  #L557fa8.  if v9 <= v7 then goto L557fb6;
  #L557fac.  v2:= v2 - v14 @kind int;
  #L557fae.  v3:= v9 + -1;
  #L557fb2.  v2:= v2 / v3 @kind int;
  #L557fb4.  goto L557fc4;
  #L557fb6.  if v9 != v7 then goto L557fc2;
  #L557fba.  v2:= v2 - v14 @kind int;
  #L557fbc.  v3:= 2I;
  #L557fbe.  v2:= v2 / v3 @kind int;
  #L557fc0.  goto L557fc4;
  #L557fc2.  v2:= 0I;
  #L557fc4.  if v15 <= 0 then goto L557fca;
  #L557fc8.  v2:= 0I;
  #L557fca.  v7:= v21;
  #L557fce.  v3:= 0I;
  #L557fd0.  if v3 >= v4 then goto L558372;
  #L557fd4.  if v23 == 0 then goto L557fe2;
  #L557fd8.  v1:= v3 + 1;
  #L557fdc.  v1:= v4 - v1 @kind int;
  #L557fe0.  goto L557fe4;
  #L557fe2.  v1:= v3;
  #L557fe4.  v9:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557fe8.  call temp:= `get`(v9, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557fee.  v1:= temp @kind object;
  #L557ff0.  v1:= (`r.p`) v1 @kind object;
  #L557ff4.  v9:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L557ff8.  call temp:= `U`(v9) @signature `Lq/e;.U:()I` @kind virtual;
  #L557ffe.  v9:= temp;
  #L558000.  v10:= 8I;
  #L558004.  if v9 != v10 then goto L55801e;
  #L558008.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55800c.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558012.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558016.  call `d`(v1, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L55801c.  goto L5580da;
  #L55801e.  if v3 <= 0 then goto L55802c;
  #L558022.  if v23 == 0 then goto L55802a;
  #L558026.  v7:= v7 - v2 @kind int;
  #L558028.  goto L55802c;
  #L55802a.  v7:= v7 + v2 @kind int;
  #L55802c.  if v3 <= 0 then goto L55804e;
  #L558030.  if v3 < v5 then goto L55804e;
  #L558034.  if v23 == 0 then goto L558044;
  #L558038.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55803c.  v9:= v9.`r.f.f` @type ^`int`;
  #L558040.  v7:= v7 - v9 @kind int;
  #L558042.  goto L55804e;
  #L558044.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L558048.  v9:= v9.`r.f.f` @type ^`int`;
  #L55804c.  v7:= v7 + v9 @kind int;
  #L55804e.  if v23 == 0 then goto L55805e;
  #L558052.  v9:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558056.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L55805c.  goto L558068;
  #L55805e.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L558062.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558068.  v9:= v1.`r.p.e` @type ^`r.g` @kind object;
  #L55806c.  v10:= v9.`r.f.g` @type ^`int`;
  #L558070.  v11:= v1.`r.p.d` @type ^`q.e$b` @kind object;
  #L558074.  v12:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L558078.  if v11 != v12 then goto L55808a;
  #L55807c.  v11:= v1.`r.p.a` @type ^`int`;
  #L558080.  v12:= 1I;
  #L558082.  if v11 != v12 then goto L55808a;
  #L558086.  v10:= v9.`r.g.m` @type ^`int`;
  #L55808a.  if v23 == 0 then goto L558092;
  #L55808e.  v7:= v7 - v10 @kind int;
  #L558090.  goto L558094;
  #L558092.  v7:= v7 + v10 @kind int;
  #L558094.  if v23 == 0 then goto L5580a4;
  #L558098.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55809c.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5580a2.  goto L5580ae;
  #L5580a4.  v9:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5580a8.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5580ae.  v9:= 1I;
  #L5580b0.  v1.`r.p.g` @type ^`boolean` := v9 @kind boolean;
  #L5580b4.  if v3 >= v8 then goto L5580da;
  #L5580b8.  if v3 >= v6 then goto L5580da;
  #L5580bc.  if v23 == 0 then goto L5580ce;
  #L5580c0.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5580c4.  v1:= v1.`r.f.f` @type ^`int`;
  #L5580c8.  v1:= -v1 @kind int;
  #L5580ca.  v7:= v7 - v1 @kind int;
  #L5580cc.  goto L5580da;
  #L5580ce.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5580d2.  v1:= v1.`r.f.f` @type ^`int`;
  #L5580d6.  v1:= -v1 @kind int;
  #L5580d8.  v7:= v7 + v1 @kind int;
  #L5580da.  v3:= v3 + 1;
  #L5580de.  goto L557fd0;
  #L5580e2.  v9:= v24;
  #L5580e6.  if v3 != 0 then goto L558210;
  #L5580ea.  v2:= v2 - v14 @kind int;
  #L5580ec.  v3:= 1I;
  #L5580ee.  v7:= v9 + 1;
  #L5580f2.  v2:= v2 / v7 @kind int;
  #L5580f4.  if v15 <= 0 then goto L5580fa;
  #L5580f8.  v2:= 0I;
  #L5580fa.  v7:= v21;
  #L5580fe.  v3:= 0I;
  #L558100.  if v3 >= v4 then goto L558372;
  #L558104.  if v23 == 0 then goto L558112;
  #L558108.  v1:= v3 + 1;
  #L55810c.  v1:= v4 - v1 @kind int;
  #L558110.  goto L558114;
  #L558112.  v1:= v3;
  #L558114.  v9:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L558118.  call temp:= `get`(v9, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55811e.  v1:= temp @kind object;
  #L558120.  v1:= (`r.p`) v1 @kind object;
  #L558124.  v9:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L558128.  call temp:= `U`(v9) @signature `Lq/e;.U:()I` @kind virtual;
  #L55812e.  v9:= temp;
  #L558130.  v10:= 8I;
  #L558134.  if v9 != v10 then goto L55814e;
  #L558138.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55813c.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558142.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558146.  call `d`(v1, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L55814c.  goto L558208;
  #L55814e.  if v23 == 0 then goto L558156;
  #L558152.  v7:= v7 - v2 @kind int;
  #L558154.  goto L558158;
  #L558156.  v7:= v7 + v2 @kind int;
  #L558158.  if v3 <= 0 then goto L55817a;
  #L55815c.  if v3 < v5 then goto L55817a;
  #L558160.  if v23 == 0 then goto L558170;
  #L558164.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L558168.  v9:= v9.`r.f.f` @type ^`int`;
  #L55816c.  v7:= v7 - v9 @kind int;
  #L55816e.  goto L55817a;
  #L558170.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L558174.  v9:= v9.`r.f.f` @type ^`int`;
  #L558178.  v7:= v7 + v9 @kind int;
  #L55817a.  if v23 == 0 then goto L55818a;
  #L55817e.  v9:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558182.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558188.  goto L558194;
  #L55818a.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L55818e.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558194.  v9:= v1.`r.p.e` @type ^`r.g` @kind object;
  #L558198.  v10:= v9.`r.f.g` @type ^`int`;
  #L55819c.  v11:= v1.`r.p.d` @type ^`q.e$b` @kind object;
  #L5581a0.  v12:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L5581a4.  if v11 != v12 then goto L5581be;
  #L5581a8.  v11:= v1.`r.p.a` @type ^`int`;
  #L5581ac.  v12:= 1I;
  #L5581ae.  if v11 != v12 then goto L5581be;
  #L5581b2.  v9:= v9.`r.g.m` @type ^`int`;
  #L5581b6.  call temp:= `min`(v10, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L5581bc.  v10:= temp;
  #L5581be.  if v23 == 0 then goto L5581c6;
  #L5581c2.  v7:= v7 - v10 @kind int;
  #L5581c4.  goto L5581c8;
  #L5581c6.  v7:= v7 + v10 @kind int;
  #L5581c8.  if v23 == 0 then goto L5581d8;
  #L5581cc.  v9:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L5581d0.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5581d6.  goto L5581e2;
  #L5581d8.  v9:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5581dc.  call `d`(v9, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5581e2.  if v3 >= v8 then goto L558208;
  #L5581e6.  if v3 >= v6 then goto L558208;
  #L5581ea.  if v23 == 0 then goto L5581fc;
  #L5581ee.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5581f2.  v1:= v1.`r.f.f` @type ^`int`;
  #L5581f6.  v1:= -v1 @kind int;
  #L5581f8.  v7:= v7 - v1 @kind int;
  #L5581fa.  goto L558208;
  #L5581fc.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558200.  v1:= v1.`r.f.f` @type ^`int`;
  #L558204.  v1:= -v1 @kind int;
  #L558206.  v7:= v7 + v1 @kind int;
  #L558208.  v3:= v3 + 1;
  #L55820c.  goto L558100;
  #L558210.  v7:= 2I;
  #L558212.  if v3 != v7 then goto L558372;
  #L558216.  v3:= v0.`r.p.f` @type ^`int`;
  #L55821a.  if v3 != 0 then goto L55822c;
  #L55821e.  v3:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L558222.  call temp:= `A`(v3) @signature `Lq/e;.A:()F` @kind virtual;
  #L558228.  v3:= temp;
  #L55822a.  goto L558238;
  #L55822c.  v3:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L558230.  call temp:= `Q`(v3) @signature `Lq/e;.Q:()F` @kind virtual;
  #L558236.  v3:= temp;
  #L558238.  if v23 == 0 then goto L558244;
  #L55823c.  v7:= 1.0F;
  #L558240.  v3:= v7 - v3 @kind float;
  #L558244.  v2:= v2 - v14 @kind int;
  #L558246.  v2:= (`float`) v2 @kind i2f;
  #L558248.  v2:= v2 * v3 @kind float;
  #L55824c.  v3:= 0.5F;
  #L558250.  v2:= v2 + v3 @kind float;
  #L558252.  v2:= (`int`) v2 @kind f2i;
  #L558254.  if v2 < 0 then goto L55825c;
  #L558258.  if v15 <= 0 then goto L55825e;
  #L55825c.  v2:= 0I;
  #L55825e.  if v23 == 0 then goto L558268;
  #L558262.  v7:= v21 - v2 @kind int;
  #L558266.  goto L55826c;
  #L558268.  v7:= v21 + v2 @kind int;
  #L55826c.  v3:= 0I;
  #L55826e.  if v3 >= v4 then goto L558372;
  #L558272.  if v23 == 0 then goto L558280;
  #L558276.  v1:= v3 + 1;
  #L55827a.  v1:= v4 - v1 @kind int;
  #L55827e.  goto L558282;
  #L558280.  v1:= v3;
  #L558282.  v2:= v0.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L558286.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55828c.  v1:= temp @kind object;
  #L55828e.  v1:= (`r.p`) v1 @kind object;
  #L558292.  v2:= v1.`r.p.b` @type ^`q.e` @kind object;
  #L558296.  call temp:= `U`(v2) @signature `Lq/e;.U:()I` @kind virtual;
  #L55829c.  v2:= temp;
  #L55829e.  v9:= 8I;
  #L5582a2.  if v2 != v9 then goto L5582be;
  #L5582a6.  v2:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L5582aa.  call `d`(v2, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5582b0.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5582b4.  call `d`(v1, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5582ba.  v12:= 1I;
  #L5582bc.  goto L55836a;
  #L5582be.  if v3 <= 0 then goto L5582e0;
  #L5582c2.  if v3 < v5 then goto L5582e0;
  #L5582c6.  if v23 == 0 then goto L5582d6;
  #L5582ca.  v2:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L5582ce.  v2:= v2.`r.f.f` @type ^`int`;
  #L5582d2.  v7:= v7 - v2 @kind int;
  #L5582d4.  goto L5582e0;
  #L5582d6.  v2:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L5582da.  v2:= v2.`r.f.f` @type ^`int`;
  #L5582de.  v7:= v7 + v2 @kind int;
  #L5582e0.  if v23 == 0 then goto L5582f0;
  #L5582e4.  v2:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5582e8.  call `d`(v2, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5582ee.  goto L5582fa;
  #L5582f0.  v2:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L5582f4.  call `d`(v2, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L5582fa.  v2:= v1.`r.p.e` @type ^`r.g` @kind object;
  #L5582fe.  v10:= v2.`r.f.g` @type ^`int`;
  #L558302.  v11:= v1.`r.p.d` @type ^`q.e$b` @kind object;
  #L558306.  v12:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L55830a.  if v11 != v12 then goto L55831e;
  #L55830e.  v11:= v1.`r.p.a` @type ^`int`;
  #L558312.  v12:= 1I;
  #L558314.  if v11 != v12 then goto L558320;
  #L558318.  v10:= v2.`r.g.m` @type ^`int`;
  #L55831c.  goto L558320;
  #L55831e.  v12:= 1I;
  #L558320.  if v23 == 0 then goto L558328;
  #L558324.  v7:= v7 - v10 @kind int;
  #L558326.  goto L55832a;
  #L558328.  v7:= v7 + v10 @kind int;
  #L55832a.  if v23 == 0 then goto L55833a;
  #L55832e.  v2:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L558332.  call `d`(v2, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558338.  goto L558344;
  #L55833a.  v2:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L55833e.  call `d`(v2, v7) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558344.  if v3 >= v8 then goto L55836a;
  #L558348.  if v3 >= v6 then goto L55836a;
  #L55834c.  if v23 == 0 then goto L55835e;
  #L558350.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558354.  v1:= v1.`r.f.f` @type ^`int`;
  #L558358.  v1:= -v1 @kind int;
  #L55835a.  v7:= v7 - v1 @kind int;
  #L55835c.  goto L55836a;
  #L55835e.  v1:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L558362.  v1:= v1.`r.f.f` @type ^`int`;
  #L558366.  v1:= -v1 @kind int;
  #L558368.  v7:= v7 + v1 @kind int;
  #L55836a.  v3:= v3 + 1;
  #L55836e.  goto L55826e;
  #L558372.  return @kind void;
}
procedure `void` `d`(`r.c` v5 @kind this) @signature `Lr/c;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L5577c4.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5577c8.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5577ce.  v0:= temp @kind object;
  #L5577d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5577d6.  v1:= temp;
  #L5577d8.  if v1 == 0 then goto L5577f0;
  #L5577dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5577e2.  v1:= temp @kind object;
  #L5577e4.  v1:= (`r.p`) v1 @kind object;
  #L5577e8.  call `d`(v1) @signature `Lr/p;.d:()V` @kind virtual;
  #L5577ee.  goto L5577d0;
  #L5577f0.  v0:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5577f4.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L5577fa.  v0:= temp;
  #L5577fc.  v1:= 1I;
  #L5577fe.  if v0 >= v1 then goto L557804;
  #L557802.  return @kind void;
  #L557804.  v2:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557808.  v3:= 0I;
  #L55780a.  call temp:= `get`(v2, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557810.  v2:= temp @kind object;
  #L557812.  v2:= (`r.p`) v2 @kind object;
  #L557816.  v2:= v2.`r.p.b` @type ^`q.e` @kind object;
  #L55781a.  v4:= v5.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L55781e.  v0:= v0 - v1 @kind int;
  #L557820.  call temp:= `get`(v4, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557826.  v0:= temp @kind object;
  #L557828.  v0:= (`r.p`) v0 @kind object;
  #L55782c.  v0:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L557830.  v4:= v5.`r.p.f` @type ^`int`;
  #L557834.  if v4 != 0 then goto L5578b0;
  #L557838.  v1:= v2.`q.e.M` @type ^`q.d` @kind object;
  #L55783c.  v0:= v0.`q.e.O` @type ^`q.d` @kind object;
  #L557840.  call temp:= `i`(v5, v1, v3) @signature `Lr/p;.i:(Lq/d;I)Lr/f;` @kind virtual;
  #L557846.  v2:= temp @kind object;
  #L557848.  call temp:= `f`(v1) @signature `Lq/d;.f:()I` @kind virtual;
  #L55784e.  v1:= temp;
  #L557850.  call temp:= `r`(v5) @signature `Lr/c;.r:()Lq/e;` @kind direct;
  #L557856.  v4:= temp @kind object;
  #L557858.  if v4 == 0 then goto L557868;
  #L55785c.  v1:= v4.`q.e.M` @type ^`q.d` @kind object;
  #L557860.  call temp:= `f`(v1) @signature `Lq/d;.f:()I` @kind virtual;
  #L557866.  v1:= temp;
  #L557868.  if v2 == 0 then goto L557876;
  #L55786c.  v4:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L557870.  call `b`(v5, v4, v2, v1) @signature `Lr/p;.b:(Lr/f;Lr/f;I)V` @kind virtual;
  #L557876.  call temp:= `i`(v5, v0, v3) @signature `Lr/p;.i:(Lq/d;I)Lr/f;` @kind virtual;
  #L55787c.  v1:= temp @kind object;
  #L55787e.  call temp:= `f`(v0) @signature `Lq/d;.f:()I` @kind virtual;
  #L557884.  v0:= temp;
  #L557886.  call temp:= `s`(v5) @signature `Lr/c;.s:()Lq/e;` @kind direct;
  #L55788c.  v2:= temp @kind object;
  #L55788e.  if v2 == 0 then goto L55789e;
  #L557892.  v0:= v2.`q.e.O` @type ^`q.d` @kind object;
  #L557896.  call temp:= `f`(v0) @signature `Lq/d;.f:()I` @kind virtual;
  #L55789c.  v0:= temp;
  #L55789e.  if v1 == 0 then goto L557926;
  #L5578a2.  v2:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L5578a6.  v0:= -v0 @kind int;
  #L5578a8.  call `b`(v5, v2, v1, v0) @signature `Lr/p;.b:(Lr/f;Lr/f;I)V` @kind virtual;
  #L5578ae.  goto L557926;
  #L5578b0.  v2:= v2.`q.e.N` @type ^`q.d` @kind object;
  #L5578b4.  v0:= v0.`q.e.P` @type ^`q.d` @kind object;
  #L5578b8.  call temp:= `i`(v5, v2, v1) @signature `Lr/p;.i:(Lq/d;I)Lr/f;` @kind virtual;
  #L5578be.  v3:= temp @kind object;
  #L5578c0.  call temp:= `f`(v2) @signature `Lq/d;.f:()I` @kind virtual;
  #L5578c6.  v2:= temp;
  #L5578c8.  call temp:= `r`(v5) @signature `Lr/c;.r:()Lq/e;` @kind direct;
  #L5578ce.  v4:= temp @kind object;
  #L5578d0.  if v4 == 0 then goto L5578e0;
  #L5578d4.  v2:= v4.`q.e.N` @type ^`q.d` @kind object;
  #L5578d8.  call temp:= `f`(v2) @signature `Lq/d;.f:()I` @kind virtual;
  #L5578de.  v2:= temp;
  #L5578e0.  if v3 == 0 then goto L5578ee;
  #L5578e4.  v4:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L5578e8.  call `b`(v5, v4, v3, v2) @signature `Lr/p;.b:(Lr/f;Lr/f;I)V` @kind virtual;
  #L5578ee.  call temp:= `i`(v5, v0, v1) @signature `Lr/p;.i:(Lq/d;I)Lr/f;` @kind virtual;
  #L5578f4.  v1:= temp @kind object;
  #L5578f6.  call temp:= `f`(v0) @signature `Lq/d;.f:()I` @kind virtual;
  #L5578fc.  v0:= temp;
  #L5578fe.  call temp:= `s`(v5) @signature `Lr/c;.s:()Lq/e;` @kind direct;
  #L557904.  v2:= temp @kind object;
  #L557906.  if v2 == 0 then goto L557916;
  #L55790a.  v0:= v2.`q.e.P` @type ^`q.d` @kind object;
  #L55790e.  call temp:= `f`(v0) @signature `Lq/d;.f:()I` @kind virtual;
  #L557914.  v0:= temp;
  #L557916.  if v1 == 0 then goto L557926;
  #L55791a.  v2:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L55791e.  v0:= -v0 @kind int;
  #L557920.  call `b`(v5, v2, v1, v0) @signature `Lr/p;.b:(Lr/f;Lr/f;I)V` @kind virtual;
  #L557926.  v0:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L55792a.  v0.`r.f.a` @type ^`r.d` := v5 @kind object;
  #L55792e.  v0:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L557932.  v0.`r.f.a` @type ^`r.d` := v5 @kind object;
  #L557936.  return @kind void;
}
procedure `void` `e`(`r.c` v2 @kind this) @signature `Lr/c;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L557948.  v0:= 0I;
  #L55794a.  v1:= v2.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L55794e.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L557954.  v1:= temp;
  #L557956.  if v0 >= v1 then goto L557976;
  #L55795a.  v1:= v2.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L55795e.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L557964.  v1:= temp @kind object;
  #L557966.  v1:= (`r.p`) v1 @kind object;
  #L55796a.  call `e`(v1) @signature `Lr/p;.e:()V` @kind virtual;
  #L557970.  v0:= v0 + 1;
  #L557974.  goto L55794a;
  #L557976.  return @kind void;
}
procedure `void` `f`(`r.c` v2 @kind this) @signature `Lr/c;.f:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L557adc.  v0:= 0I;
  #L557ade.  v2.`r.p.c` @type ^`r.m` := v0 @kind object;
  #L557ae2.  v0:= v2.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557ae6.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L557aec.  v0:= temp @kind object;
  #L557aee.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L557af4.  v1:= temp;
  #L557af6.  if v1 == 0 then goto L557b0e;
  #L557afa.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L557b00.  v1:= temp @kind object;
  #L557b02.  v1:= (`r.p`) v1 @kind object;
  #L557b06.  call `f`(v1) @signature `Lr/p;.f:()V` @kind virtual;
  #L557b0c.  goto L557aee;
  #L557b0e.  return @kind void;
}
procedure `long` `j`(`r.c` v7 @kind this) @signature `Lr/c;.j:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L557684.  v0:= v7.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L557688.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55768e.  v0:= temp;
  #L557690.  v1:= 0L;
  #L557694.  v3:= 0I;
  #L557696.  if v3 >= v0 then goto L5576d2;
  #L55769a.  v4:= v7.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L55769e.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5576a4.  v4:= temp @kind object;
  #L5576a6.  v4:= (`r.p`) v4 @kind object;
  #L5576aa.  v5:= v4.`r.p.h` @type ^`r.f` @kind object;
  #L5576ae.  v5:= v5.`r.f.f` @type ^`int`;
  #L5576b2.  v5:= (`long`) v5 @kind i2l;
  #L5576b4.  v1:= v1 + v5 @kind long;
  #L5576b6.  call temp:= `j`(v4) @signature `Lr/p;.j:()J` @kind virtual;
  #L5576bc.  v5:= temp @kind wide;
  #L5576be.  v1:= v1 + v5 @kind long;
  #L5576c0.  v4:= v4.`r.p.i` @type ^`r.f` @kind object;
  #L5576c4.  v4:= v4.`r.f.f` @type ^`int`;
  #L5576c8.  v4:= (`long`) v4 @kind i2l;
  #L5576ca.  v1:= v1 + v4 @kind long;
  #L5576cc.  v3:= v3 + 1;
  #L5576d0.  goto L557696;
  #L5576d2.  return v1 @kind wide;
}
procedure `boolean` `m`(`r.c` v4 @kind this) @signature `Lr/c;.m:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5575b8.  v0:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5575bc.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L5575c2.  v0:= temp;
  #L5575c4.  v1:= 0I;
  #L5575c6.  v2:= 0I;
  #L5575c8.  if v2 >= v0 then goto L5575f0;
  #L5575cc.  v3:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L5575d0.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5575d6.  v3:= temp @kind object;
  #L5575d8.  v3:= (`r.p`) v3 @kind object;
  #L5575dc.  call temp:= `m`(v3) @signature `Lr/p;.m:()Z` @kind virtual;
  #L5575e2.  v3:= temp;
  #L5575e4.  if v3 != 0 then goto L5575ea;
  #L5575e8.  return v1;
  #L5575ea.  v2:= v2 + 1;
  #L5575ee.  goto L5575c8;
  #L5575f0.  v0:= 1I;
  #L5575f2.  return v0;
}
procedure `java.lang.String` `toString`(`r.c` v4 @kind this) @signature `Lr/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L557604.  v0:= new `java.lang.StringBuilder`;
  #L557608.  v1:= "ChainRun " @kind object;
  #L55760c.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L557612.  v1:= v4.`r.p.f` @type ^`int`;
  #L557616.  if v1 != 0 then goto L557620;
  #L55761a.  v1:= "horizontal : " @kind object;
  #L55761e.  goto L557624;
  #L557620.  v1:= "vertical : " @kind object;
  #L557624.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55762a.  v1:= v4.`r.c.k` @type ^`java.util.ArrayList` @kind object;
  #L55762e.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L557634.  v1:= temp @kind object;
  #L557636.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55763c.  v2:= temp;
  #L55763e.  if v2 == 0 then goto L55766a;
  #L557642.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L557648.  v2:= temp @kind object;
  #L55764a.  v2:= (`r.p`) v2 @kind object;
  #L55764e.  v3:= "<" @kind object;
  #L557652.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L557658.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55765e.  v2:= "> " @kind object;
  #L557662.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L557668.  goto L557636;
  #L55766a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L557670.  v0:= temp @kind object;
  #L557672.  return v0 @kind object;
}
