record `r.e` @kind class @AccessFlag PUBLIC {
  `q.f` `r.e.a` @AccessFlag PRIVATE;
  `boolean` `r.e.b` @AccessFlag PRIVATE;
  `boolean` `r.e.c` @AccessFlag PRIVATE;
  `q.f` `r.e.d` @AccessFlag PRIVATE;
  `java.util.ArrayList` `r.e.e` @AccessFlag PRIVATE;
  `r.b$b` `r.e.f` @AccessFlag PRIVATE;
  `r.b$a` `r.e.g` @AccessFlag PRIVATE;
  `java.util.ArrayList` `r.e.h` @AccessFlag ;
}
procedure `void` `<init>`(`r.e` v1 @kind this, `q.f` v2 @kind object) @signature `Lr/e;.<init>:(Lq/f;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5591a4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L5591aa.  v0:= 1I;
  #L5591ac.  v1.`r.e.b` @type ^`boolean` := v0 @kind boolean;
  #L5591b0.  v1.`r.e.c` @type ^`boolean` := v0 @kind boolean;
  #L5591b4.  v0:= new `java.util.ArrayList`;
  #L5591b8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5591be.  v1.`r.e.e` @type ^`java.util.ArrayList` := v0 @kind object;
  #L5591c2.  v0:= new `java.util.ArrayList`;
  #L5591c6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5591cc.  v0:= 0I;
  #L5591ce.  v1.`r.e.f` @type ^`r.b$b` := v0 @kind object;
  #L5591d2.  v0:= new `r.b$a`;
  #L5591d6.  call `<init>`(v0) @signature `Lr/b$a;.<init>:()V` @kind direct;
  #L5591dc.  v1.`r.e.g` @type ^`r.b$a` := v0 @kind object;
  #L5591e0.  v0:= new `java.util.ArrayList`;
  #L5591e4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L5591ea.  v1.`r.e.h` @type ^`java.util.ArrayList` := v0 @kind object;
  #L5591ee.  v1.`r.e.a` @type ^`q.f` := v2 @kind object;
  #L5591f2.  v1.`r.e.d` @type ^`q.f` := v2 @kind object;
  #L5591f6.  return @kind void;
}
procedure `void` `a`(`r.e` v8 @kind this, `r.f` v9 @kind object, `int` v10 , `int` v11 , `r.f` v12 @kind object, `java.util.ArrayList` v13 @kind object, `r.m` v14 @kind object) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L559208.  v9:= v9.`r.f.d` @type ^`r.p` @kind object;
  #L55920c.  v0:= v9.`r.p.c` @type ^`r.m` @kind object;
  #L559210.  if v0 != 0 then goto L559406;
  #L559214.  v0:= v8.`r.e.a` @type ^`q.f` @kind object;
  #L559218.  v1:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55921c.  if v9 == v1 then goto L559406;
  #L559220.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L559224.  if v9 != v0 then goto L55922c;
  #L559228.  goto L559406;
  #L55922c.  if v14 != 0 then goto L559240;
  #L559230.  v14:= new `r.m`;
  #L559234.  call `<init>`(v14, v9, v11) @signature `Lr/m;.<init>:(Lr/p;I)V` @kind direct;
  #L55923a.  call temp:= `add`(v13, v14) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L559240.  v9.`r.p.c` @type ^`r.m` := v14 @kind object;
  #L559244.  call `a`(v14, v9) @signature `Lr/m;.a:(Lr/p;)V` @kind virtual;
  #L55924a.  v11:= v9.`r.p.h` @type ^`r.f` @kind object;
  #L55924e.  v11:= v11.`r.f.k` @type ^`java.util.List` @kind object;
  #L559252.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L559258.  v11:= temp @kind object;
  #L55925a.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559260.  v0:= temp;
  #L559262.  if v0 == 0 then goto L559294;
  #L559266.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55926c.  v0:= temp @kind object;
  #L55926e.  v0:= (`r.d`) v0 @kind object;
  #L559272.  v1:= instanceof @variable v0 @type ^`r.f` @kind boolean;
  #L559276.  if v1 == 0 then goto L55925a;
  #L55927a.  v1:= v0 @kind object;
  #L55927c.  v1:= (`r.f`) v1 @kind object;
  #L559280.  v3:= 0I;
  #L559282.  v0:= v8 @kind object;
  #L559284.  v2:= v10;
  #L559286.  v4:= v12 @kind object;
  #L559288.  v5:= v13 @kind object;
  #L55928a.  v6:= v14 @kind object;
  #L55928c.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L559292.  goto L55925a;
  #L559294.  v11:= v9.`r.p.i` @type ^`r.f` @kind object;
  #L559298.  v11:= v11.`r.f.k` @type ^`java.util.List` @kind object;
  #L55929c.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5592a2.  v11:= temp @kind object;
  #L5592a4.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5592aa.  v0:= temp;
  #L5592ac.  if v0 == 0 then goto L5592de;
  #L5592b0.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5592b6.  v0:= temp @kind object;
  #L5592b8.  v0:= (`r.d`) v0 @kind object;
  #L5592bc.  v1:= instanceof @variable v0 @type ^`r.f` @kind boolean;
  #L5592c0.  if v1 == 0 then goto L5592a4;
  #L5592c4.  v1:= v0 @kind object;
  #L5592c6.  v1:= (`r.f`) v1 @kind object;
  #L5592ca.  v3:= 1I;
  #L5592cc.  v0:= v8 @kind object;
  #L5592ce.  v2:= v10;
  #L5592d0.  v4:= v12 @kind object;
  #L5592d2.  v5:= v13 @kind object;
  #L5592d4.  v6:= v14 @kind object;
  #L5592d6.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L5592dc.  goto L5592a4;
  #L5592de.  v11:= 1I;
  #L5592e0.  if v10 != v11 then goto L55933c;
  #L5592e4.  v0:= instanceof @variable v9 @type ^`r.n` @kind boolean;
  #L5592e8.  if v0 == 0 then goto L55933c;
  #L5592ec.  v0:= v9 @kind object;
  #L5592ee.  v0:= (`r.n`) v0 @kind object;
  #L5592f2.  v0:= v0.`r.n.k` @type ^`r.f` @kind object;
  #L5592f6.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L5592fa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L559300.  v7:= temp @kind object;
  #L559302.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559308.  v0:= temp;
  #L55930a.  if v0 == 0 then goto L55933c;
  #L55930e.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L559314.  v0:= temp @kind object;
  #L559316.  v0:= (`r.d`) v0 @kind object;
  #L55931a.  v1:= instanceof @variable v0 @type ^`r.f` @kind boolean;
  #L55931e.  if v1 == 0 then goto L559302;
  #L559322.  v1:= v0 @kind object;
  #L559324.  v1:= (`r.f`) v1 @kind object;
  #L559328.  v3:= 2I;
  #L55932a.  v0:= v8 @kind object;
  #L55932c.  v2:= v10;
  #L55932e.  v4:= v12 @kind object;
  #L559330.  v5:= v13 @kind object;
  #L559332.  v6:= v14 @kind object;
  #L559334.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L55933a.  goto L559302;
  #L55933c.  v0:= v9.`r.p.h` @type ^`r.f` @kind object;
  #L559340.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L559344.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L55934a.  v7:= temp @kind object;
  #L55934c.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559352.  v0:= temp;
  #L559354.  if v0 == 0 then goto L55937a;
  #L559358.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55935e.  v0:= temp @kind object;
  #L559360.  v1:= v0 @kind object;
  #L559362.  v1:= (`r.f`) v1 @kind object;
  #L559366.  v3:= 0I;
  #L559368.  v0:= v8 @kind object;
  #L55936a.  v2:= v10;
  #L55936c.  v4:= v12 @kind object;
  #L55936e.  v5:= v13 @kind object;
  #L559370.  v6:= v14 @kind object;
  #L559372.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L559378.  goto L55934c;
  #L55937a.  v0:= v9.`r.p.i` @type ^`r.f` @kind object;
  #L55937e.  v0:= v0.`r.f.l` @type ^`java.util.List` @kind object;
  #L559382.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L559388.  v7:= temp @kind object;
  #L55938a.  call temp:= `hasNext`(v7) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559390.  v0:= temp;
  #L559392.  if v0 == 0 then goto L5593b8;
  #L559396.  call temp:= `next`(v7) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55939c.  v0:= temp @kind object;
  #L55939e.  v1:= v0 @kind object;
  #L5593a0.  v1:= (`r.f`) v1 @kind object;
  #L5593a4.  v3:= 1I;
  #L5593a6.  v0:= v8 @kind object;
  #L5593a8.  v2:= v10;
  #L5593aa.  v4:= v12 @kind object;
  #L5593ac.  v5:= v13 @kind object;
  #L5593ae.  v6:= v14 @kind object;
  #L5593b0.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L5593b6.  goto L55938a;
  #L5593b8.  if v10 != v11 then goto L559406;
  #L5593bc.  v11:= instanceof @variable v9 @type ^`r.n` @kind boolean;
  #L5593c0.  if v11 == 0 then goto L559406;
  #L5593c4.  v9:= (`r.n`) v9 @kind object;
  #L5593c8.  v9:= v9.`r.n.k` @type ^`r.f` @kind object;
  #L5593cc.  v9:= v9.`r.f.l` @type ^`java.util.List` @kind object;
  #L5593d0.  call temp:= `iterator`(v9) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5593d6.  v9:= temp @kind object;
  #L5593d8.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5593de.  v11:= temp;
  #L5593e0.  if v11 == 0 then goto L559406;
  #L5593e4.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5593ea.  v11:= temp @kind object;
  #L5593ec.  v1:= v11 @kind object;
  #L5593ee.  v1:= (`r.f`) v1 @kind object;
  #L5593f2.  v3:= 2I;
  #L5593f4.  v0:= v8 @kind object;
  #L5593f6.  v2:= v10;
  #L5593f8.  v4:= v12 @kind object;
  #L5593fa.  v5:= v13 @kind object;
  #L5593fc.  v6:= v14 @kind object;
  #L5593fe.  call `a`(v0, v1, v2, v3, v4, v5, v6) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L559404.  goto L5593d8;
  #L559406.  return @kind void;
  #L559408.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L55940a.  throw v9;
  catch `java.lang.Throwable` @[L5593fe..L559404] goto L559408;
}
procedure `boolean` `b`(`r.e` v16 @kind this, `q.f` v17 @kind object) @signature `Lr/e;.b:(Lq/f;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L558384.  v0:= v17 @kind object;
  #L558388.  v1:= v0.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L55838c.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558392.  v1:= temp @kind object;
  #L558394.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55839a.  v2:= temp;
  #L55839c.  v3:= 0I;
  #L55839e.  if v2 == 0 then goto L558a08;
  #L5583a2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5583a8.  v2:= temp @kind object;
  #L5583aa.  v2:= (`q.e`) v2 @kind object;
  #L5583ae.  v4:= v2.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L5583b2.  v5:= v4[v3] @kind object;
  #L5583b6.  v10:= 1I;
  #L5583b8.  v4:= v4[v10] @kind object;
  #L5583bc.  call temp:= `U`(v2) @signature `Lq/e;.U:()I` @kind virtual;
  #L5583c2.  v6:= temp;
  #L5583c4.  v7:= 8I;
  #L5583c8.  if v6 != v7 then goto L5583d2;
  #L5583cc.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L5583d0.  goto L558394;
  #L5583d2.  v6:= v2.`q.e.x` @type ^`float`;
  #L5583d6.  v11:= 1.0F;
  #L5583da.  v7:= 2I;
  #L5583dc.  v6:= fcmpg(v6, v11);
  #L5583e0.  if v6 >= 0 then goto L5583f0;
  #L5583e4.  v6:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L5583e8.  if v5 != v6 then goto L5583f0;
  #L5583ec.  v2.`q.e.s` @type ^`int` := v7;
  #L5583f0.  v6:= v2.`q.e.A` @type ^`float`;
  #L5583f4.  v6:= fcmpg(v6, v11);
  #L5583f8.  if v6 >= 0 then goto L558408;
  #L5583fc.  v6:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L558400.  if v4 != v6 then goto L558408;
  #L558404.  v2.`q.e.t` @type ^`int` := v7;
  #L558408.  call temp:= `x`(v2) @signature `Lq/e;.x:()F` @kind virtual;
  #L55840e.  v6:= temp;
  #L558410.  v8:= 0I;
  #L558412.  v9:= 3I;
  #L558414.  v6:= fcmpl(v6, v8);
  #L558418.  if v6 <= 0 then goto L558474;
  #L55841c.  v6:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L558420.  if v5 != v6 then goto L55843a;
  #L558424.  v8:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558428.  if v4 == v8 then goto L558434;
  #L55842c.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558430.  if v4 != v8 then goto L55843a;
  #L558434.  v2.`q.e.s` @type ^`int` := v9;
  #L558438.  goto L558474;
  #L55843a.  if v4 != v6 then goto L558454;
  #L55843e.  v8:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558442.  if v5 == v8 then goto L55844e;
  #L558446.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L55844a.  if v5 != v8 then goto L558454;
  #L55844e.  v2.`q.e.t` @type ^`int` := v9;
  #L558452.  goto L558474;
  #L558454.  if v5 != v6 then goto L558474;
  #L558458.  if v4 != v6 then goto L558474;
  #L55845c.  v6:= v2.`q.e.s` @type ^`int`;
  #L558460.  if v6 != 0 then goto L558468;
  #L558464.  v2.`q.e.s` @type ^`int` := v9;
  #L558468.  v6:= v2.`q.e.t` @type ^`int`;
  #L55846c.  if v6 != 0 then goto L558474;
  #L558470.  v2.`q.e.t` @type ^`int` := v9;
  #L558474.  v6:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L558478.  if v5 != v6 then goto L5584a0;
  #L55847c.  v8:= v2.`q.e.s` @type ^`int`;
  #L558480.  if v8 != v10 then goto L5584a0;
  #L558484.  v8:= v2.`q.e.M` @type ^`q.d` @kind object;
  #L558488.  v8:= v8.`q.d.f` @type ^`q.d` @kind object;
  #L55848c.  if v8 == 0 then goto L55849c;
  #L558490.  v8:= v2.`q.e.O` @type ^`q.d` @kind object;
  #L558494.  v8:= v8.`q.d.f` @type ^`q.d` @kind object;
  #L558498.  if v8 != 0 then goto L5584a0;
  #L55849c.  v5:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5584a0.  v8:= v5 @kind object;
  #L5584a2.  if v4 != v6 then goto L5584ca;
  #L5584a6.  v5:= v2.`q.e.t` @type ^`int`;
  #L5584aa.  if v5 != v10 then goto L5584ca;
  #L5584ae.  v5:= v2.`q.e.N` @type ^`q.d` @kind object;
  #L5584b2.  v5:= v5.`q.d.f` @type ^`q.d` @kind object;
  #L5584b6.  if v5 == 0 then goto L5584c6;
  #L5584ba.  v5:= v2.`q.e.P` @type ^`q.d` @kind object;
  #L5584be.  v5:= v5.`q.d.f` @type ^`q.d` @kind object;
  #L5584c2.  if v5 != 0 then goto L5584ca;
  #L5584c6.  v4:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5584ca.  v12:= v4 @kind object;
  #L5584cc.  v4:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L5584d0.  v4.`r.p.d` @type ^`q.e$b` := v8 @kind object;
  #L5584d4.  v5:= v2.`q.e.s` @type ^`int`;
  #L5584d8.  v4.`r.p.a` @type ^`int` := v5;
  #L5584dc.  v4:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L5584e0.  v4.`r.p.d` @type ^`q.e$b` := v12 @kind object;
  #L5584e4.  v13:= v2.`q.e.t` @type ^`int`;
  #L5584e8.  v4.`r.p.a` @type ^`int` := v13;
  #L5584ec.  v4:= `@@q.e$b.MATCH_PARENT` @type ^`q.e$b` @kind object;
  #L5584f0.  if v8 == v4 then goto L558504;
  #L5584f4.  v14:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5584f8.  if v8 == v14 then goto L558504;
  #L5584fc.  v14:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558500.  if v8 != v14 then goto L55851c;
  #L558504.  if v12 == v4 then goto L55895c;
  #L558508.  v14:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L55850c.  if v12 == v14 then goto L55895c;
  #L558510.  v14:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558514.  if v12 != v14 then goto L55851c;
  #L558518.  goto L55895c;
  #L55851c.  v14:= 0.5F;
  #L558520.  if v8 != v6 then goto L5586c0;
  #L558524.  v15:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558528.  if v12 == v15 then goto L558534;
  #L55852c.  v11:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558530.  if v12 != v11 then goto L5586c0;
  #L558534.  if v5 != v9 then goto L5585ac;
  #L558538.  if v12 != v15 then goto L558550;
  #L55853c.  v7:= 0I;
  #L55853e.  v9:= 0I;
  #L558540.  v4:= v16 @kind object;
  #L558544.  v5:= v2 @kind object;
  #L558546.  v6:= v15 @kind object;
  #L558548.  v8:= v15 @kind object;
  #L55854a.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L558550.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558556.  v9:= temp;
  #L558558.  v3:= (`float`) v9 @kind i2f;
  #L55855a.  v4:= v2.`q.e.b0` @type ^`float`;
  #L55855e.  v3:= v3 * v4 @kind float;
  #L558562.  v3:= v3 + v14 @kind float;
  #L558564.  v7:= (`int`) v3 @kind f2i;
  #L558566.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L55856a.  v4:= v16 @kind object;
  #L55856e.  v5:= v2 @kind object;
  #L558570.  v6:= v8 @kind object;
  #L558572.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L558578.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L55857c.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558580.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L558586.  v4:= temp;
  #L558588.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55858e.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L558592.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558596.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L55859c.  v4:= temp;
  #L55859e.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5585a4.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L5585a8.  goto L558394;
  #L5585ac.  if v5 != v10 then goto L5585dc;
  #L5585b0.  v7:= 0I;
  #L5585b2.  v9:= 0I;
  #L5585b4.  v4:= v16 @kind object;
  #L5585b8.  v5:= v2 @kind object;
  #L5585ba.  v6:= v15 @kind object;
  #L5585bc.  v8:= v12 @kind object;
  #L5585be.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5585c4.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L5585c8.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5585cc.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5585d2.  v2:= temp;
  #L5585d4.  v3.`r.g.m` @type ^`int` := v2;
  #L5585d8.  goto L558394;
  #L5585dc.  if v5 != v7 then goto L55865c;
  #L5585e0.  v11:= v0.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L5585e4.  v15:= v11[v3] @kind object;
  #L5585e8.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5585ec.  if v15 == v7 then goto L5585f8;
  #L5585f0.  v11:= v11[v3] @kind object;
  #L5585f4.  if v11 != v4 then goto L5586c0;
  #L5585f8.  v3:= v2.`q.e.x` @type ^`float`;
  #L5585fc.  call temp:= `V`(v17) @signature `Lq/e;.V:()I` @kind virtual;
  #L558602.  v4:= temp;
  #L558604.  v4:= (`float`) v4 @kind i2f;
  #L558606.  v3:= v3 * v4 @kind float;
  #L55860a.  v3:= v3 + v14 @kind float;
  #L55860c.  v3:= (`int`) v3 @kind f2i;
  #L55860e.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558614.  v9:= temp;
  #L558616.  v4:= v16 @kind object;
  #L55861a.  v5:= v2 @kind object;
  #L55861c.  v6:= v7 @kind object;
  #L55861e.  v7:= v3;
  #L558620.  v8:= v12 @kind object;
  #L558622.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L558628.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L55862c.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558630.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L558636.  v4:= temp;
  #L558638.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55863e.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L558642.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558646.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L55864c.  v4:= temp;
  #L55864e.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558654.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L558658.  goto L558394;
  #L55865c.  v7:= v2.`q.e.U` @type ^`q.d`[] @kind object;
  #L558660.  v11:= v7[v3] @kind object;
  #L558664.  v11:= v11.`q.d.f` @type ^`q.d` @kind object;
  #L558668.  if v11 == 0 then goto L558678;
  #L55866c.  v7:= v7[v10] @kind object;
  #L558670.  v7:= v7.`q.d.f` @type ^`q.d` @kind object;
  #L558674.  if v7 != 0 then goto L5586c0;
  #L558678.  v7:= 0I;
  #L55867a.  v9:= 0I;
  #L55867c.  v4:= v16 @kind object;
  #L558680.  v5:= v2 @kind object;
  #L558682.  v6:= v15 @kind object;
  #L558684.  v8:= v12 @kind object;
  #L558686.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L55868c.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L558690.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558694.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L55869a.  v4:= temp;
  #L55869c.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5586a2.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L5586a6.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5586aa.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L5586b0.  v4:= temp;
  #L5586b2.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5586b8.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L5586bc.  goto L558394;
  #L5586c0.  if v12 != v6 then goto L558878;
  #L5586c4.  v11:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5586c8.  if v8 == v11 then goto L5586d4;
  #L5586cc.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5586d0.  if v8 != v7 then goto L558878;
  #L5586d4.  if v13 != v9 then goto L558762;
  #L5586d8.  if v8 != v11 then goto L5586f0;
  #L5586dc.  v7:= 0I;
  #L5586de.  v9:= 0I;
  #L5586e0.  v4:= v16 @kind object;
  #L5586e4.  v5:= v2 @kind object;
  #L5586e6.  v6:= v11 @kind object;
  #L5586e8.  v8:= v11 @kind object;
  #L5586ea.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5586f0.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5586f6.  v7:= temp;
  #L5586f8.  v3:= v2.`q.e.b0` @type ^`float`;
  #L5586fc.  call temp:= `y`(v2) @signature `Lq/e;.y:()I` @kind virtual;
  #L558702.  v4:= temp;
  #L558704.  v5:= -1I;
  #L558706.  if v4 != v5 then goto L558712;
  #L55870a.  v4:= 1.0F;
  #L55870e.  v3:= v4 / v3 @kind float;
  #L558712.  v4:= (`float`) v7 @kind i2f;
  #L558714.  v4:= v4 * v3 @kind float;
  #L558718.  v4:= v4 + v14 @kind float;
  #L55871a.  v9:= (`int`) v4 @kind f2i;
  #L55871c.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558720.  v4:= v16 @kind object;
  #L558724.  v5:= v2 @kind object;
  #L558726.  v6:= v8 @kind object;
  #L558728.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L55872e.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L558732.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558736.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L55873c.  v4:= temp;
  #L55873e.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558744.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L558748.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L55874c.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558752.  v4:= temp;
  #L558754.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55875a.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L55875e.  goto L558394;
  #L558762.  if v13 != v10 then goto L558792;
  #L558766.  v7:= 0I;
  #L558768.  v9:= 0I;
  #L55876a.  v4:= v16 @kind object;
  #L55876e.  v5:= v2 @kind object;
  #L558770.  v6:= v8 @kind object;
  #L558772.  v8:= v11 @kind object;
  #L558774.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L55877a.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L55877e.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558782.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558788.  v2:= temp;
  #L55878a.  v3.`r.g.m` @type ^`int` := v2;
  #L55878e.  goto L558394;
  #L558792.  v7:= 2I;
  #L558794.  if v13 != v7 then goto L558812;
  #L558798.  v7:= v0.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L55879c.  v9:= v7[v10] @kind object;
  #L5587a0.  v11:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5587a4.  if v9 == v11 then goto L5587b0;
  #L5587a8.  v7:= v7[v10] @kind object;
  #L5587ac.  if v7 != v4 then goto L558878;
  #L5587b0.  v3:= v2.`q.e.A` @type ^`float`;
  #L5587b4.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5587ba.  v7:= temp;
  #L5587bc.  call temp:= `z`(v17) @signature `Lq/e;.z:()I` @kind virtual;
  #L5587c2.  v4:= temp;
  #L5587c4.  v4:= (`float`) v4 @kind i2f;
  #L5587c6.  v3:= v3 * v4 @kind float;
  #L5587ca.  v3:= v3 + v14 @kind float;
  #L5587cc.  v9:= (`int`) v3 @kind f2i;
  #L5587ce.  v4:= v16 @kind object;
  #L5587d2.  v5:= v2 @kind object;
  #L5587d4.  v6:= v8 @kind object;
  #L5587d6.  v8:= v11 @kind object;
  #L5587d8.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5587de.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L5587e2.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5587e6.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5587ec.  v4:= temp;
  #L5587ee.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5587f4.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L5587f8.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5587fc.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558802.  v4:= temp;
  #L558804.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55880a.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L55880e.  goto L558394;
  #L558812.  v4:= v2.`q.e.U` @type ^`q.d`[] @kind object;
  #L558816.  v7:= 2I;
  #L558818.  v15:= v4[v7] @kind object;
  #L55881c.  v7:= v15.`q.d.f` @type ^`q.d` @kind object;
  #L558820.  if v7 == 0 then goto L558830;
  #L558824.  v4:= v4[v9] @kind object;
  #L558828.  v4:= v4.`q.d.f` @type ^`q.d` @kind object;
  #L55882c.  if v4 != 0 then goto L558878;
  #L558830.  v7:= 0I;
  #L558832.  v9:= 0I;
  #L558834.  v4:= v16 @kind object;
  #L558838.  v5:= v2 @kind object;
  #L55883a.  v6:= v11 @kind object;
  #L55883c.  v8:= v12 @kind object;
  #L55883e.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L558844.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L558848.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L55884c.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L558852.  v4:= temp;
  #L558854.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55885a.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L55885e.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558862.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558868.  v4:= temp;
  #L55886a.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558870.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L558874.  goto L558394;
  #L558878.  if v8 != v6 then goto L558394;
  #L55887c.  if v12 != v6 then goto L558394;
  #L558880.  if v5 == v10 then goto L55891a;
  #L558884.  if v13 != v10 then goto L55888a;
  #L558888.  goto L55891a;
  #L55888a.  v4:= 2I;
  #L55888c.  if v13 != v4 then goto L558394;
  #L558890.  if v5 != v4 then goto L558394;
  #L558894.  v4:= v0.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L558898.  v3:= v4[v3] @kind object;
  #L55889c.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5588a0.  if v3 != v8 then goto L558394;
  #L5588a4.  v3:= v4[v10] @kind object;
  #L5588a8.  if v3 != v8 then goto L558394;
  #L5588ac.  v3:= v2.`q.e.x` @type ^`float`;
  #L5588b0.  v4:= v2.`q.e.A` @type ^`float`;
  #L5588b4.  call temp:= `V`(v17) @signature `Lq/e;.V:()I` @kind virtual;
  #L5588ba.  v5:= temp;
  #L5588bc.  v5:= (`float`) v5 @kind i2f;
  #L5588be.  v3:= v3 * v5 @kind float;
  #L5588c2.  v3:= v3 + v14 @kind float;
  #L5588c4.  v7:= (`int`) v3 @kind f2i;
  #L5588c6.  call temp:= `z`(v17) @signature `Lq/e;.z:()I` @kind virtual;
  #L5588cc.  v3:= temp;
  #L5588ce.  v3:= (`float`) v3 @kind i2f;
  #L5588d0.  v4:= v4 * v3 @kind float;
  #L5588d4.  v4:= v4 + v14 @kind float;
  #L5588d6.  v9:= (`int`) v4 @kind f2i;
  #L5588d8.  v4:= v16 @kind object;
  #L5588dc.  v5:= v2 @kind object;
  #L5588de.  v6:= v8 @kind object;
  #L5588e0.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5588e6.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L5588ea.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5588ee.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5588f4.  v4:= temp;
  #L5588f6.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5588fc.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L558900.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558904.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L55890a.  v4:= temp;
  #L55890c.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558912.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L558916.  goto L558394;
  #L55891a.  v8:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L55891e.  v7:= 0I;
  #L558920.  v9:= 0I;
  #L558922.  v4:= v16 @kind object;
  #L558926.  v5:= v2 @kind object;
  #L558928.  v6:= v8 @kind object;
  #L55892a.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L558930.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L558934.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L558938.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L55893e.  v4:= temp;
  #L558940.  v3.`r.g.m` @type ^`int` := v4;
  #L558944.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L558948.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L55894c.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558952.  v2:= temp;
  #L558954.  v3.`r.g.m` @type ^`int` := v2;
  #L558958.  goto L558394;
  #L55895c.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L558962.  v3:= temp;
  #L558964.  if v8 != v4 then goto L55898e;
  #L558968.  call temp:= `V`(v17) @signature `Lq/e;.V:()I` @kind virtual;
  #L55896e.  v3:= temp;
  #L558970.  v5:= v2.`q.e.M` @type ^`q.d` @kind object;
  #L558974.  v5:= v5.`q.d.g` @type ^`int`;
  #L558978.  v3:= v3 - v5 @kind int;
  #L55897a.  v5:= v2.`q.e.O` @type ^`q.d` @kind object;
  #L55897e.  v5:= v5.`q.d.g` @type ^`int`;
  #L558982.  v3:= v3 - v5 @kind int;
  #L558984.  v5:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558988.  v7:= v3;
  #L55898a.  v6:= v5 @kind object;
  #L55898c.  goto L558992;
  #L55898e.  v7:= v3;
  #L558990.  v6:= v8 @kind object;
  #L558992.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L558998.  v3:= temp;
  #L55899a.  if v12 != v4 then goto L5589c4;
  #L55899e.  call temp:= `z`(v17) @signature `Lq/e;.z:()I` @kind virtual;
  #L5589a4.  v3:= temp;
  #L5589a6.  v4:= v2.`q.e.N` @type ^`q.d` @kind object;
  #L5589aa.  v4:= v4.`q.d.g` @type ^`int`;
  #L5589ae.  v3:= v3 - v4 @kind int;
  #L5589b0.  v4:= v2.`q.e.P` @type ^`q.d` @kind object;
  #L5589b4.  v4:= v4.`q.d.g` @type ^`int`;
  #L5589b8.  v3:= v3 - v4 @kind int;
  #L5589ba.  v4:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5589be.  v9:= v3;
  #L5589c0.  v8:= v4 @kind object;
  #L5589c2.  goto L5589c8;
  #L5589c4.  v9:= v3;
  #L5589c6.  v8:= v12 @kind object;
  #L5589c8.  v4:= v16 @kind object;
  #L5589cc.  v5:= v2 @kind object;
  #L5589ce.  call `l`(v4, v5, v6, v7, v8, v9) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5589d4.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L5589d8.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5589dc.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L5589e2.  v4:= temp;
  #L5589e4.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L5589ea.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L5589ee.  v3:= v3.`r.p.e` @type ^`r.g` @kind object;
  #L5589f2.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L5589f8.  v4:= temp;
  #L5589fa.  call `d`(v3, v4) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558a00.  v2.`q.e.a` @type ^`boolean` := v10 @kind boolean;
  #L558a04.  goto L558394;
  #L558a08.  return v3;
}
procedure `int` `e`(`r.e` v6 @kind this, `q.f` v7 @kind object, `int` v8 ) @signature `Lr/e;.e:(Lq/f;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L559154.  v0:= v6.`r.e.h` @type ^`java.util.ArrayList` @kind object;
  #L559158.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55915e.  v0:= temp;
  #L559160.  v1:= 0L;
  #L559164.  v3:= 0I;
  #L559166.  if v3 >= v0 then goto L559190;
  #L55916a.  v4:= v6.`r.e.h` @type ^`java.util.ArrayList` @kind object;
  #L55916e.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L559174.  v4:= temp @kind object;
  #L559176.  v4:= (`r.m`) v4 @kind object;
  #L55917a.  call temp:= `b`(v4, v7, v8) @signature `Lr/m;.b:(Lq/f;I)J` @kind virtual;
  #L559180.  v4:= temp @kind wide;
  #L559182.  call temp:= `max`(v1, v4) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L559188.  v1:= temp @kind wide;
  #L55918a.  v3:= v3 + 1;
  #L55918e.  goto L559166;
  #L559190.  v7:= (`int`) v1 @kind l2i;
  #L559192.  return v7;
}
procedure `void` `i`(`r.e` v10 @kind this, `r.p` v11 @kind object, `int` v12 , `java.util.ArrayList` v13 @kind object) @signature `Lr/e;.i:(Lr/p;ILjava/util/ArrayList;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L559628.  v0:= v11.`r.p.h` @type ^`r.f` @kind object;
  #L55962c.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L559630.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L559636.  v0:= temp @kind object;
  #L559638.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55963e.  v1:= temp;
  #L559640.  if v1 == 0 then goto L55969a;
  #L559644.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55964a.  v1:= temp @kind object;
  #L55964c.  v1:= (`r.d`) v1 @kind object;
  #L559650.  v2:= instanceof @variable v1 @type ^`r.f` @kind boolean;
  #L559654.  if v2 == 0 then goto L559674;
  #L559658.  v4:= v1 @kind object;
  #L55965a.  v4:= (`r.f`) v4 @kind object;
  #L55965e.  v6:= 0I;
  #L559660.  v7:= v11.`r.p.i` @type ^`r.f` @kind object;
  #L559664.  v9:= 0I;
  #L559666.  v3:= v10 @kind object;
  #L559668.  v5:= v12;
  #L55966a.  v8:= v13 @kind object;
  #L55966c.  call `a`(v3, v4, v5, v6, v7, v8, v9) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L559672.  goto L559638;
  #L559674.  v2:= instanceof @variable v1 @type ^`r.p` @kind boolean;
  #L559678.  if v2 == 0 then goto L559638;
  #L55967c.  v1:= (`r.p`) v1 @kind object;
  #L559680.  v3:= v1.`r.p.h` @type ^`r.f` @kind object;
  #L559684.  v5:= 0I;
  #L559686.  v6:= v11.`r.p.i` @type ^`r.f` @kind object;
  #L55968a.  v8:= 0I;
  #L55968c.  v2:= v10 @kind object;
  #L55968e.  v4:= v12;
  #L559690.  v7:= v13 @kind object;
  #L559692.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L559698.  goto L559638;
  #L55969a.  v0:= v11.`r.p.i` @type ^`r.f` @kind object;
  #L55969e.  v0:= v0.`r.f.k` @type ^`java.util.List` @kind object;
  #L5596a2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L5596a8.  v0:= temp @kind object;
  #L5596aa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5596b0.  v1:= temp;
  #L5596b2.  if v1 == 0 then goto L55970c;
  #L5596b6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5596bc.  v1:= temp @kind object;
  #L5596be.  v1:= (`r.d`) v1 @kind object;
  #L5596c2.  v2:= instanceof @variable v1 @type ^`r.f` @kind boolean;
  #L5596c6.  if v2 == 0 then goto L5596e6;
  #L5596ca.  v4:= v1 @kind object;
  #L5596cc.  v4:= (`r.f`) v4 @kind object;
  #L5596d0.  v6:= 1I;
  #L5596d2.  v7:= v11.`r.p.h` @type ^`r.f` @kind object;
  #L5596d6.  v9:= 0I;
  #L5596d8.  v3:= v10 @kind object;
  #L5596da.  v5:= v12;
  #L5596dc.  v8:= v13 @kind object;
  #L5596de.  call `a`(v3, v4, v5, v6, v7, v8, v9) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L5596e4.  goto L5596aa;
  #L5596e6.  v2:= instanceof @variable v1 @type ^`r.p` @kind boolean;
  #L5596ea.  if v2 == 0 then goto L5596aa;
  #L5596ee.  v1:= (`r.p`) v1 @kind object;
  #L5596f2.  v3:= v1.`r.p.i` @type ^`r.f` @kind object;
  #L5596f6.  v5:= 1I;
  #L5596f8.  v6:= v11.`r.p.h` @type ^`r.f` @kind object;
  #L5596fc.  v8:= 0I;
  #L5596fe.  v2:= v10 @kind object;
  #L559700.  v4:= v12;
  #L559702.  v7:= v13 @kind object;
  #L559704.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L55970a.  goto L5596aa;
  #L55970c.  v0:= 1I;
  #L55970e.  if v12 != v0 then goto L559760;
  #L559712.  v11:= (`r.n`) v11 @kind object;
  #L559716.  v11:= v11.`r.n.k` @type ^`r.f` @kind object;
  #L55971a.  v11:= v11.`r.f.k` @type ^`java.util.List` @kind object;
  #L55971e.  call temp:= `iterator`(v11) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L559724.  v11:= temp @kind object;
  #L559726.  call temp:= `hasNext`(v11) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55972c.  v0:= temp;
  #L55972e.  if v0 == 0 then goto L559760;
  #L559732.  call temp:= `next`(v11) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L559738.  v0:= temp @kind object;
  #L55973a.  v0:= (`r.d`) v0 @kind object;
  #L55973e.  v1:= instanceof @variable v0 @type ^`r.f` @kind boolean;
  #L559742.  if v1 == 0 then goto L559726;
  #L559746.  v3:= v0 @kind object;
  #L559748.  v3:= (`r.f`) v3 @kind object;
  #L55974c.  v5:= 2I;
  #L55974e.  v6:= 0I;
  #L559750.  v8:= 0I;
  #L559752.  v2:= v10 @kind object;
  #L559754.  v4:= v12;
  #L559756.  v7:= v13 @kind object;
  #L559758.  call `a`(v2, v3, v4, v5, v6, v7, v8) @signature `Lr/e;.a:(Lr/f;IILr/f;Ljava/util/ArrayList;Lr/m;)V` @kind direct;
  #L55975e.  goto L559726;
  #L559760.  return @kind void;
}
procedure `void` `l`(`r.e` v1 @kind this, `q.e` v2 @kind object, `q.e$b` v3 @kind object, `int` v4 , `q.e$b` v5 @kind object, `int` v6 ) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L5597a4.  v0:= v1.`r.e.g` @type ^`r.b$a` @kind object;
  #L5597a8.  v0.`r.b$a.a` @type ^`q.e$b` := v3 @kind object;
  #L5597ac.  v0.`r.b$a.b` @type ^`q.e$b` := v5 @kind object;
  #L5597b0.  v0.`r.b$a.c` @type ^`int` := v4;
  #L5597b4.  v0.`r.b$a.d` @type ^`int` := v6;
  #L5597b8.  v3:= v1.`r.e.f` @type ^`r.b$b` @kind object;
  #L5597bc.  call `b`(v3, v2, v0) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L5597c2.  v3:= v1.`r.e.g` @type ^`r.b$a` @kind object;
  #L5597c6.  v3:= v3.`r.b$a.e` @type ^`int`;
  #L5597ca.  call `h1`(v2, v3) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L5597d0.  v3:= v1.`r.e.g` @type ^`r.b$a` @kind object;
  #L5597d4.  v3:= v3.`r.b$a.f` @type ^`int`;
  #L5597d8.  call `I0`(v2, v3) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L5597de.  v3:= v1.`r.e.g` @type ^`r.b$a` @kind object;
  #L5597e2.  v3:= v3.`r.b$a.h` @type ^`boolean` @kind boolean;
  #L5597e6.  call `H0`(v2, v3) @signature `Lq/e;.H0:(Z)V` @kind virtual;
  #L5597ec.  v3:= v1.`r.e.g` @type ^`r.b$a` @kind object;
  #L5597f0.  v3:= v3.`r.b$a.g` @type ^`int`;
  #L5597f4.  call `x0`(v2, v3) @signature `Lq/e;.x0:(I)V` @kind virtual;
  #L5597fa.  return @kind void;
}
procedure `void` `c`(`r.e` v4 @kind this) @signature `Lr/e;.c:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L559428.  v0:= v4.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L55942c.  call `d`(v4, v0) @signature `Lr/e;.d:(Ljava/util/ArrayList;)V` @kind virtual;
  #L559432.  v0:= v4.`r.e.h` @type ^`java.util.ArrayList` @kind object;
  #L559436.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L55943c.  v0:= 0I;
  #L55943e.  `@@r.m.c` @type ^`int` := v0;
  #L559442.  v1:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L559446.  v1:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L55944a.  v2:= v4.`r.e.h` @type ^`java.util.ArrayList` @kind object;
  #L55944e.  call `i`(v4, v1, v0, v2) @signature `Lr/e;.i:(Lr/p;ILjava/util/ArrayList;)V` @kind direct;
  #L559454.  v1:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L559458.  v1:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L55945c.  v2:= v4.`r.e.h` @type ^`java.util.ArrayList` @kind object;
  #L559460.  v3:= 1I;
  #L559462.  call `i`(v4, v1, v3, v2) @signature `Lr/e;.i:(Lr/p;ILjava/util/ArrayList;)V` @kind direct;
  #L559468.  v4.`r.e.b` @type ^`boolean` := v0 @kind boolean;
  #L55946c.  return @kind void;
}
procedure `void` `d`(`r.e` v5 @kind this, `java.util.ArrayList` v6 @kind object) @signature `Lr/e;.d:(Ljava/util/ArrayList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L559480.  call `clear`(v6) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L559486.  v0:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L55948a.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L55948e.  call `f`(v0) @signature `Lr/l;.f:()V` @kind virtual;
  #L559494.  v0:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L559498.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L55949c.  call `f`(v0) @signature `Lr/n;.f:()V` @kind virtual;
  #L5594a2.  v0:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L5594a6.  v0:= v0.`q.e.d` @type ^`r.l` @kind object;
  #L5594aa.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5594b0.  v0:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L5594b4.  v0:= v0.`q.e.e` @type ^`r.n` @kind object;
  #L5594b8.  call temp:= `add`(v6, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5594be.  v0:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L5594c2.  v0:= v0.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L5594c6.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5594cc.  v0:= temp @kind object;
  #L5594ce.  v1:= 0I;
  #L5594d0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5594d6.  v2:= temp;
  #L5594d8.  if v2 == 0 then goto L5595ac;
  #L5594dc.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5594e2.  v2:= temp @kind object;
  #L5594e4.  v2:= (`q.e`) v2 @kind object;
  #L5594e8.  v3:= instanceof @variable v2 @type ^`q.h` @kind boolean;
  #L5594ec.  if v3 == 0 then goto L559502;
  #L5594f0.  v3:= new `r.j`;
  #L5594f4.  call `<init>`(v3, v2) @signature `Lr/j;.<init>:(Lq/e;)V` @kind direct;
  #L5594fa.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L559500.  goto L5594d0;
  #L559502.  call temp:= `h0`(v2) @signature `Lq/e;.h0:()Z` @kind virtual;
  #L559508.  v3:= temp;
  #L55950a.  if v3 == 0 then goto L559540;
  #L55950e.  v3:= v2.`q.e.b` @type ^`r.c` @kind object;
  #L559512.  if v3 != 0 then goto L559526;
  #L559516.  v3:= new `r.c`;
  #L55951a.  v4:= 0I;
  #L55951c.  call `<init>`(v3, v2, v4) @signature `Lr/c;.<init>:(Lq/e;I)V` @kind direct;
  #L559522.  v2.`q.e.b` @type ^`r.c` := v3 @kind object;
  #L559526.  if v1 != 0 then goto L559534;
  #L55952a.  v1:= new `java.util.HashSet`;
  #L55952e.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L559534.  v3:= v2.`q.e.b` @type ^`r.c` @kind object;
  #L559538.  call temp:= `add`(v1, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L55953e.  goto L55954a;
  #L559540.  v3:= v2.`q.e.d` @type ^`r.l` @kind object;
  #L559544.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L55954a.  call temp:= `j0`(v2) @signature `Lq/e;.j0:()Z` @kind virtual;
  #L559550.  v3:= temp;
  #L559552.  if v3 == 0 then goto L559588;
  #L559556.  v3:= v2.`q.e.c` @type ^`r.c` @kind object;
  #L55955a.  if v3 != 0 then goto L55956e;
  #L55955e.  v3:= new `r.c`;
  #L559562.  v4:= 1I;
  #L559564.  call `<init>`(v3, v2, v4) @signature `Lr/c;.<init>:(Lq/e;I)V` @kind direct;
  #L55956a.  v2.`q.e.c` @type ^`r.c` := v3 @kind object;
  #L55956e.  if v1 != 0 then goto L55957c;
  #L559572.  v1:= new `java.util.HashSet`;
  #L559576.  call `<init>`(v1) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L55957c.  v3:= v2.`q.e.c` @type ^`r.c` @kind object;
  #L559580.  call temp:= `add`(v1, v3) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L559586.  goto L559592;
  #L559588.  v3:= v2.`q.e.e` @type ^`r.n` @kind object;
  #L55958c.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L559592.  v3:= instanceof @variable v2 @type ^`q.j` @kind boolean;
  #L559596.  if v3 == 0 then goto L5594d0;
  #L55959a.  v3:= new `r.k`;
  #L55959e.  call `<init>`(v3, v2) @signature `Lr/k;.<init>:(Lq/e;)V` @kind direct;
  #L5595a4.  call temp:= `add`(v6, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5595aa.  goto L5594d0;
  #L5595ac.  if v1 == 0 then goto L5595b6;
  #L5595b0.  call temp:= `addAll`(v6, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L5595b6.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5595bc.  v0:= temp @kind object;
  #L5595be.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5595c4.  v1:= temp;
  #L5595c6.  if v1 == 0 then goto L5595de;
  #L5595ca.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5595d0.  v1:= temp @kind object;
  #L5595d2.  v1:= (`r.p`) v1 @kind object;
  #L5595d6.  call `f`(v1) @signature `Lr/p;.f:()V` @kind virtual;
  #L5595dc.  goto L5595be;
  #L5595de.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5595e4.  v6:= temp @kind object;
  #L5595e6.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5595ec.  v0:= temp;
  #L5595ee.  if v0 == 0 then goto L559614;
  #L5595f2.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5595f8.  v0:= temp @kind object;
  #L5595fa.  v0:= (`r.p`) v0 @kind object;
  #L5595fe.  v1:= v0.`r.p.b` @type ^`q.e` @kind object;
  #L559602.  v2:= v5.`r.e.d` @type ^`q.f` @kind object;
  #L559606.  if v1 != v2 then goto L55960c;
  #L55960a.  goto L5595e6;
  #L55960c.  call `d`(v0) @signature `Lr/p;.d:()V` @kind virtual;
  #L559612.  goto L5595e6;
  #L559614.  return @kind void;
}
procedure `boolean` `f`(`r.e` v9 @kind this, `boolean` v10 ) @signature `Lr/e;.f:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L558a1c.  v0:= 1I;
  #L558a1e.  v10:= v10 ^& v0 @kind int;
  #L558a20.  v1:= v9.`r.e.b` @type ^`boolean` @kind boolean;
  #L558a24.  v2:= 0I;
  #L558a26.  if v1 != 0 then goto L558a32;
  #L558a2a.  v1:= v9.`r.e.c` @type ^`boolean` @kind boolean;
  #L558a2e.  if v1 == 0 then goto L558aa8;
  #L558a32.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558a36.  v1:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L558a3a.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558a40.  v1:= temp @kind object;
  #L558a42.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558a48.  v3:= temp;
  #L558a4a.  if v3 == 0 then goto L558a7a;
  #L558a4e.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558a54.  v3:= temp @kind object;
  #L558a56.  v3:= (`q.e`) v3 @kind object;
  #L558a5a.  call `p`(v3) @signature `Lq/e;.p:()V` @kind virtual;
  #L558a60.  v3.`q.e.a` @type ^`boolean` := v2 @kind boolean;
  #L558a64.  v4:= v3.`q.e.d` @type ^`r.l` @kind object;
  #L558a68.  call `r`(v4) @signature `Lr/l;.r:()V` @kind virtual;
  #L558a6e.  v3:= v3.`q.e.e` @type ^`r.n` @kind object;
  #L558a72.  call `q`(v3) @signature `Lr/n;.q:()V` @kind virtual;
  #L558a78.  goto L558a42;
  #L558a7a.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558a7e.  call `p`(v1) @signature `Lq/e;.p:()V` @kind virtual;
  #L558a84.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558a88.  v1.`q.e.a` @type ^`boolean` := v2 @kind boolean;
  #L558a8c.  v1:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L558a90.  call `r`(v1) @signature `Lr/l;.r:()V` @kind virtual;
  #L558a96.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558a9a.  v1:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L558a9e.  call `q`(v1) @signature `Lr/n;.q:()V` @kind virtual;
  #L558aa4.  v9.`r.e.c` @type ^`boolean` := v2 @kind boolean;
  #L558aa8.  v1:= v9.`r.e.d` @type ^`q.f` @kind object;
  #L558aac.  call temp:= `b`(v9, v1) @signature `Lr/e;.b:(Lq/f;)Z` @kind direct;
  #L558ab2.  v1:= temp;
  #L558ab4.  if v1 == 0 then goto L558aba;
  #L558ab8.  return v2;
  #L558aba.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558abe.  call `j1`(v1, v2) @signature `Lq/e;.j1:(I)V` @kind virtual;
  #L558ac4.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ac8.  call `k1`(v1, v2) @signature `Lq/e;.k1:(I)V` @kind virtual;
  #L558ace.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ad2.  call temp:= `w`(v1, v2) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L558ad8.  v1:= temp @kind object;
  #L558ada.  v3:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ade.  call temp:= `w`(v3, v0) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L558ae4.  v3:= temp @kind object;
  #L558ae6.  v4:= v9.`r.e.b` @type ^`boolean` @kind boolean;
  #L558aea.  if v4 == 0 then goto L558af4;
  #L558aee.  call `c`(v9) @signature `Lr/e;.c:()V` @kind virtual;
  #L558af4.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558af8.  call temp:= `W`(v4) @signature `Lq/e;.W:()I` @kind virtual;
  #L558afe.  v4:= temp;
  #L558b00.  v5:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558b04.  call temp:= `X`(v5) @signature `Lq/e;.X:()I` @kind virtual;
  #L558b0a.  v5:= temp;
  #L558b0c.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558b10.  v6:= v6.`q.e.d` @type ^`r.l` @kind object;
  #L558b14.  v6:= v6.`r.p.h` @type ^`r.f` @kind object;
  #L558b18.  call `d`(v6, v4) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558b1e.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558b22.  v6:= v6.`q.e.e` @type ^`r.n` @kind object;
  #L558b26.  v6:= v6.`r.p.h` @type ^`r.f` @kind object;
  #L558b2a.  call `d`(v6, v5) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558b30.  call `m`(v9) @signature `Lr/e;.m:()V` @kind virtual;
  #L558b36.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558b3a.  if v1 == v6 then goto L558b42;
  #L558b3e.  if v3 != v6 then goto L558c04;
  #L558b42.  if v10 == 0 then goto L558b78;
  #L558b46.  v6:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L558b4a.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558b50.  v6:= temp @kind object;
  #L558b52.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558b58.  v7:= temp;
  #L558b5a.  if v7 == 0 then goto L558b78;
  #L558b5e.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558b64.  v7:= temp @kind object;
  #L558b66.  v7:= (`r.p`) v7 @kind object;
  #L558b6a.  call temp:= `m`(v7) @signature `Lr/p;.m:()Z` @kind virtual;
  #L558b70.  v7:= temp;
  #L558b72.  if v7 != 0 then goto L558b52;
  #L558b76.  v10:= 0I;
  #L558b78.  if v10 == 0 then goto L558bbe;
  #L558b7c.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558b80.  if v1 != v6 then goto L558bbe;
  #L558b84.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558b88.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558b8c.  call `M0`(v6, v7) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L558b92.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558b96.  call temp:= `e`(v9, v6, v2) @signature `Lr/e;.e:(Lq/f;I)I` @kind direct;
  #L558b9c.  v7:= temp;
  #L558b9e.  call `h1`(v6, v7) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L558ba4.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ba8.  v7:= v6.`q.e.d` @type ^`r.l` @kind object;
  #L558bac.  v7:= v7.`r.p.e` @type ^`r.g` @kind object;
  #L558bb0.  call temp:= `V`(v6) @signature `Lq/e;.V:()I` @kind virtual;
  #L558bb6.  v6:= temp;
  #L558bb8.  call `d`(v7, v6) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558bbe.  if v10 == 0 then goto L558c04;
  #L558bc2.  v10:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558bc6.  if v3 != v10 then goto L558c04;
  #L558bca.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558bce.  v6:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558bd2.  call `d1`(v10, v6) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L558bd8.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558bdc.  call temp:= `e`(v9, v10, v0) @signature `Lr/e;.e:(Lq/f;I)I` @kind direct;
  #L558be2.  v6:= temp;
  #L558be4.  call `I0`(v10, v6) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L558bea.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558bee.  v6:= v10.`q.e.e` @type ^`r.n` @kind object;
  #L558bf2.  v6:= v6.`r.p.e` @type ^`r.g` @kind object;
  #L558bf6.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L558bfc.  v10:= temp;
  #L558bfe.  call `d`(v6, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558c04.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c08.  v6:= v10.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L558c0c.  v7:= v6[v2] @kind object;
  #L558c10.  v8:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558c14.  if v7 == v8 then goto L558c2a;
  #L558c18.  v6:= v6[v2] @kind object;
  #L558c1c.  v7:= `@@q.e$b.MATCH_PARENT` @type ^`q.e$b` @kind object;
  #L558c20.  if v6 != v7 then goto L558c26;
  #L558c24.  goto L558c2a;
  #L558c26.  v10:= 0I;
  #L558c28.  goto L558cb4;
  #L558c2a.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L558c30.  v10:= temp;
  #L558c32.  v10:= v10 + v4 @kind int;
  #L558c34.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c38.  v6:= v6.`q.e.d` @type ^`r.l` @kind object;
  #L558c3c.  v6:= v6.`r.p.i` @type ^`r.f` @kind object;
  #L558c40.  call `d`(v6, v10) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558c46.  v6:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c4a.  v6:= v6.`q.e.d` @type ^`r.l` @kind object;
  #L558c4e.  v6:= v6.`r.p.e` @type ^`r.g` @kind object;
  #L558c52.  v10:= v10 - v4 @kind int;
  #L558c54.  call `d`(v6, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558c5a.  call `m`(v9) @signature `Lr/e;.m:()V` @kind virtual;
  #L558c60.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c64.  v4:= v10.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L558c68.  v6:= v4[v0] @kind object;
  #L558c6c.  if v6 == v8 then goto L558c7c;
  #L558c70.  v4:= v4[v0] @kind object;
  #L558c74.  v6:= `@@q.e$b.MATCH_PARENT` @type ^`q.e$b` @kind object;
  #L558c78.  if v4 != v6 then goto L558cac;
  #L558c7c.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L558c82.  v10:= temp;
  #L558c84.  v10:= v10 + v5 @kind int;
  #L558c86.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c8a.  v4:= v4.`q.e.e` @type ^`r.n` @kind object;
  #L558c8e.  v4:= v4.`r.p.i` @type ^`r.f` @kind object;
  #L558c92.  call `d`(v4, v10) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558c98.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558c9c.  v4:= v4.`q.e.e` @type ^`r.n` @kind object;
  #L558ca0.  v4:= v4.`r.p.e` @type ^`r.g` @kind object;
  #L558ca4.  v10:= v10 - v5 @kind int;
  #L558ca6.  call `d`(v4, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558cac.  call `m`(v9) @signature `Lr/e;.m:()V` @kind virtual;
  #L558cb2.  v10:= 1I;
  #L558cb4.  v4:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L558cb8.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558cbe.  v4:= temp @kind object;
  #L558cc0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558cc6.  v5:= temp;
  #L558cc8.  if v5 == 0 then goto L558cf6;
  #L558ccc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558cd2.  v5:= temp @kind object;
  #L558cd4.  v5:= (`r.p`) v5 @kind object;
  #L558cd8.  v6:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L558cdc.  v7:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ce0.  if v6 != v7 then goto L558cee;
  #L558ce4.  v6:= v5.`r.p.g` @type ^`boolean` @kind boolean;
  #L558ce8.  if v6 != 0 then goto L558cee;
  #L558cec.  goto L558cc0;
  #L558cee.  call `e`(v5) @signature `Lr/p;.e:()V` @kind virtual;
  #L558cf4.  goto L558cc0;
  #L558cf6.  v4:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L558cfa.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558d00.  v4:= temp @kind object;
  #L558d02.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558d08.  v5:= temp;
  #L558d0a.  if v5 == 0 then goto L558d70;
  #L558d0e.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558d14.  v5:= temp @kind object;
  #L558d16.  v5:= (`r.p`) v5 @kind object;
  #L558d1a.  if v10 != 0 then goto L558d2c;
  #L558d1e.  v6:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L558d22.  v7:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558d26.  if v6 != v7 then goto L558d2c;
  #L558d2a.  goto L558d02;
  #L558d2c.  v6:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L558d30.  v6:= v6.`r.f.j` @type ^`boolean` @kind boolean;
  #L558d34.  if v6 != 0 then goto L558d3c;
  #L558d38.  v0:= 0I;
  #L558d3a.  goto L558d70;
  #L558d3c.  v6:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L558d40.  v6:= v6.`r.f.j` @type ^`boolean` @kind boolean;
  #L558d44.  if v6 != 0 then goto L558d52;
  #L558d48.  v6:= instanceof @variable v5 @type ^`r.j` @kind boolean;
  #L558d4c.  if v6 != 0 then goto L558d52;
  #L558d50.  goto L558d38;
  #L558d52.  v6:= v5.`r.p.e` @type ^`r.g` @kind object;
  #L558d56.  v6:= v6.`r.f.j` @type ^`boolean` @kind boolean;
  #L558d5a.  if v6 != 0 then goto L558d02;
  #L558d5e.  v6:= instanceof @variable v5 @type ^`r.c` @kind boolean;
  #L558d62.  if v6 != 0 then goto L558d02;
  #L558d66.  v5:= instanceof @variable v5 @type ^`r.j` @kind boolean;
  #L558d6a.  if v5 != 0 then goto L558d02;
  #L558d6e.  goto L558d38;
  #L558d70.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558d74.  call `M0`(v10, v1) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L558d7a.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558d7e.  call `d1`(v10, v3) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L558d84.  return v0;
}
procedure `boolean` `g`(`r.e` v4 @kind this, `boolean` v5 ) @signature `Lr/e;.g:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L558d98.  v5:= v4.`r.e.b` @type ^`boolean` @kind boolean;
  #L558d9c.  v0:= 0I;
  #L558d9e.  if v5 == 0 then goto L558e4a;
  #L558da2.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558da6.  v5:= v5.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L558daa.  call temp:= `iterator`(v5) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558db0.  v5:= temp @kind object;
  #L558db2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558db8.  v1:= temp;
  #L558dba.  if v1 == 0 then goto L558e02;
  #L558dbe.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558dc4.  v1:= temp @kind object;
  #L558dc6.  v1:= (`q.e`) v1 @kind object;
  #L558dca.  call `p`(v1) @signature `Lq/e;.p:()V` @kind virtual;
  #L558dd0.  v1.`q.e.a` @type ^`boolean` := v0 @kind boolean;
  #L558dd4.  v2:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L558dd8.  v3:= v2.`r.p.e` @type ^`r.g` @kind object;
  #L558ddc.  v3.`r.f.j` @type ^`boolean` := v0 @kind boolean;
  #L558de0.  v2.`r.p.g` @type ^`boolean` := v0 @kind boolean;
  #L558de4.  call `r`(v2) @signature `Lr/l;.r:()V` @kind virtual;
  #L558dea.  v1:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L558dee.  v2:= v1.`r.p.e` @type ^`r.g` @kind object;
  #L558df2.  v2.`r.f.j` @type ^`boolean` := v0 @kind boolean;
  #L558df6.  v1.`r.p.g` @type ^`boolean` := v0 @kind boolean;
  #L558dfa.  call `q`(v1) @signature `Lr/n;.q:()V` @kind virtual;
  #L558e00.  goto L558db2;
  #L558e02.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e06.  call `p`(v5) @signature `Lq/e;.p:()V` @kind virtual;
  #L558e0c.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e10.  v5.`q.e.a` @type ^`boolean` := v0 @kind boolean;
  #L558e14.  v5:= v5.`q.e.d` @type ^`r.l` @kind object;
  #L558e18.  v1:= v5.`r.p.e` @type ^`r.g` @kind object;
  #L558e1c.  v1.`r.f.j` @type ^`boolean` := v0 @kind boolean;
  #L558e20.  v5.`r.p.g` @type ^`boolean` := v0 @kind boolean;
  #L558e24.  call `r`(v5) @signature `Lr/l;.r:()V` @kind virtual;
  #L558e2a.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e2e.  v5:= v5.`q.e.e` @type ^`r.n` @kind object;
  #L558e32.  v1:= v5.`r.p.e` @type ^`r.g` @kind object;
  #L558e36.  v1.`r.f.j` @type ^`boolean` := v0 @kind boolean;
  #L558e3a.  v5.`r.p.g` @type ^`boolean` := v0 @kind boolean;
  #L558e3e.  call `q`(v5) @signature `Lr/n;.q:()V` @kind virtual;
  #L558e44.  call `c`(v4) @signature `Lr/e;.c:()V` @kind virtual;
  #L558e4a.  v5:= v4.`r.e.d` @type ^`q.f` @kind object;
  #L558e4e.  call temp:= `b`(v4, v5) @signature `Lr/e;.b:(Lq/f;)Z` @kind direct;
  #L558e54.  v5:= temp;
  #L558e56.  if v5 == 0 then goto L558e5c;
  #L558e5a.  return v0;
  #L558e5c.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e60.  call `j1`(v5, v0) @signature `Lq/e;.j1:(I)V` @kind virtual;
  #L558e66.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e6a.  call `k1`(v5, v0) @signature `Lq/e;.k1:(I)V` @kind virtual;
  #L558e70.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e74.  v5:= v5.`q.e.d` @type ^`r.l` @kind object;
  #L558e78.  v5:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L558e7c.  call `d`(v5, v0) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558e82.  v5:= v4.`r.e.a` @type ^`q.f` @kind object;
  #L558e86.  v5:= v5.`q.e.e` @type ^`r.n` @kind object;
  #L558e8a.  v5:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L558e8e.  call `d`(v5, v0) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558e94.  v5:= 1I;
  #L558e96.  return v5;
}
procedure `boolean` `h`(`r.e` v9 @kind this, `boolean` v10 , `int` v11 ) @signature `Lr/e;.h:(ZI)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L558ea8.  v0:= 1I;
  #L558eaa.  v10:= v10 ^& v0 @kind int;
  #L558eac.  v1:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558eb0.  v2:= 0I;
  #L558eb2.  call temp:= `w`(v1, v2) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L558eb8.  v1:= temp @kind object;
  #L558eba.  v3:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ebe.  call temp:= `w`(v3, v0) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L558ec4.  v3:= temp @kind object;
  #L558ec6.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558eca.  call temp:= `W`(v4) @signature `Lq/e;.W:()I` @kind virtual;
  #L558ed0.  v4:= temp;
  #L558ed2.  v5:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ed6.  call temp:= `X`(v5) @signature `Lq/e;.X:()I` @kind virtual;
  #L558edc.  v5:= temp;
  #L558ede.  if v10 == 0 then goto L558fba;
  #L558ee2.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558ee6.  if v1 == v6 then goto L558eee;
  #L558eea.  if v3 != v6 then goto L558fba;
  #L558eee.  v6:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L558ef2.  call temp:= `iterator`(v6) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L558ef8.  v6:= temp @kind object;
  #L558efa.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L558f00.  v7:= temp;
  #L558f02.  if v7 == 0 then goto L558f28;
  #L558f06.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L558f0c.  v7:= temp @kind object;
  #L558f0e.  v7:= (`r.p`) v7 @kind object;
  #L558f12.  v8:= v7.`r.p.f` @type ^`int`;
  #L558f16.  if v8 != v11 then goto L558efa;
  #L558f1a.  call temp:= `m`(v7) @signature `Lr/p;.m:()Z` @kind virtual;
  #L558f20.  v7:= temp;
  #L558f22.  if v7 != 0 then goto L558efa;
  #L558f26.  v10:= 0I;
  #L558f28.  if v11 != 0 then goto L558f74;
  #L558f2c.  if v10 == 0 then goto L558fba;
  #L558f30.  v10:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558f34.  if v1 != v10 then goto L558fba;
  #L558f38.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558f3c.  v6:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558f40.  call `M0`(v10, v6) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L558f46.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558f4a.  call temp:= `e`(v9, v10, v2) @signature `Lr/e;.e:(Lq/f;I)I` @kind direct;
  #L558f50.  v6:= temp;
  #L558f52.  call `h1`(v10, v6) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L558f58.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558f5c.  v6:= v10.`q.e.d` @type ^`r.l` @kind object;
  #L558f60.  v6:= v6.`r.p.e` @type ^`r.g` @kind object;
  #L558f64.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L558f6a.  v10:= temp;
  #L558f6c.  call `d`(v6, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558f72.  goto L558fba;
  #L558f74.  if v10 == 0 then goto L558fba;
  #L558f78.  v10:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L558f7c.  if v3 != v10 then goto L558fba;
  #L558f80.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558f84.  v6:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558f88.  call `d1`(v10, v6) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L558f8e.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558f92.  call temp:= `e`(v9, v10, v0) @signature `Lr/e;.e:(Lq/f;I)I` @kind direct;
  #L558f98.  v6:= temp;
  #L558f9a.  call `I0`(v10, v6) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L558fa0.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558fa4.  v6:= v10.`q.e.e` @type ^`r.n` @kind object;
  #L558fa8.  v6:= v6.`r.p.e` @type ^`r.g` @kind object;
  #L558fac.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L558fb2.  v10:= temp;
  #L558fb4.  call `d`(v6, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L558fba.  if v11 != 0 then goto L559010;
  #L558fbe.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558fc2.  v5:= v10.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L558fc6.  v6:= v5[v2] @kind object;
  #L558fca.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L558fce.  if v6 == v7 then goto L558fde;
  #L558fd2.  v5:= v5[v2] @kind object;
  #L558fd6.  v6:= `@@q.e$b.MATCH_PARENT` @type ^`q.e$b` @kind object;
  #L558fda.  if v5 != v6 then goto L559032;
  #L558fde.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L558fe4.  v10:= temp;
  #L558fe6.  v10:= v10 + v4 @kind int;
  #L558fe8.  v5:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558fec.  v5:= v5.`q.e.d` @type ^`r.l` @kind object;
  #L558ff0.  v5:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L558ff4.  call `d`(v5, v10) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L558ffa.  v5:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L558ffe.  v5:= v5.`q.e.d` @type ^`r.l` @kind object;
  #L559002.  v5:= v5.`r.p.e` @type ^`r.g` @kind object;
  #L559006.  v10:= v10 - v4 @kind int;
  #L559008.  call `d`(v5, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55900e.  goto L559066;
  #L559010.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L559014.  v4:= v10.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L559018.  v6:= v4[v0] @kind object;
  #L55901c.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L559020.  if v6 == v7 then goto L559036;
  #L559024.  v4:= v4[v0] @kind object;
  #L559028.  v6:= `@@q.e$b.MATCH_PARENT` @type ^`q.e$b` @kind object;
  #L55902c.  if v4 != v6 then goto L559032;
  #L559030.  goto L559036;
  #L559032.  v10:= 0I;
  #L559034.  goto L559068;
  #L559036.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L55903c.  v10:= temp;
  #L55903e.  v10:= v10 + v5 @kind int;
  #L559040.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L559044.  v4:= v4.`q.e.e` @type ^`r.n` @kind object;
  #L559048.  v4:= v4.`r.p.i` @type ^`r.f` @kind object;
  #L55904c.  call `d`(v4, v10) @signature `Lr/f;.d:(I)V` @kind virtual;
  #L559052.  v4:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L559056.  v4:= v4.`q.e.e` @type ^`r.n` @kind object;
  #L55905a.  v4:= v4.`r.p.e` @type ^`r.g` @kind object;
  #L55905e.  v10:= v10 - v5 @kind int;
  #L559060.  call `d`(v4, v10) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L559066.  v10:= 1I;
  #L559068.  call `m`(v9) @signature `Lr/e;.m:()V` @kind virtual;
  #L55906e.  v4:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L559072.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L559078.  v4:= temp @kind object;
  #L55907a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559080.  v5:= temp;
  #L559082.  if v5 == 0 then goto L5590ba;
  #L559086.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55908c.  v5:= temp @kind object;
  #L55908e.  v5:= (`r.p`) v5 @kind object;
  #L559092.  v6:= v5.`r.p.f` @type ^`int`;
  #L559096.  if v6 == v11 then goto L55909c;
  #L55909a.  goto L55907a;
  #L55909c.  v6:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L5590a0.  v7:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L5590a4.  if v6 != v7 then goto L5590b2;
  #L5590a8.  v6:= v5.`r.p.g` @type ^`boolean` @kind boolean;
  #L5590ac.  if v6 != 0 then goto L5590b2;
  #L5590b0.  goto L55907a;
  #L5590b2.  call `e`(v5) @signature `Lr/p;.e:()V` @kind virtual;
  #L5590b8.  goto L55907a;
  #L5590ba.  v4:= v9.`r.e.e` @type ^`java.util.ArrayList` @kind object;
  #L5590be.  call temp:= `iterator`(v4) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5590c4.  v4:= temp @kind object;
  #L5590c6.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5590cc.  v5:= temp;
  #L5590ce.  if v5 == 0 then goto L55912e;
  #L5590d2.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L5590d8.  v5:= temp @kind object;
  #L5590da.  v5:= (`r.p`) v5 @kind object;
  #L5590de.  v6:= v5.`r.p.f` @type ^`int`;
  #L5590e2.  if v6 == v11 then goto L5590e8;
  #L5590e6.  goto L5590c6;
  #L5590e8.  if v10 != 0 then goto L5590fa;
  #L5590ec.  v6:= v5.`r.p.b` @type ^`q.e` @kind object;
  #L5590f0.  v7:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L5590f4.  if v6 != v7 then goto L5590fa;
  #L5590f8.  goto L5590c6;
  #L5590fa.  v6:= v5.`r.p.h` @type ^`r.f` @kind object;
  #L5590fe.  v6:= v6.`r.f.j` @type ^`boolean` @kind boolean;
  #L559102.  if v6 != 0 then goto L55910a;
  #L559106.  v0:= 0I;
  #L559108.  goto L55912e;
  #L55910a.  v6:= v5.`r.p.i` @type ^`r.f` @kind object;
  #L55910e.  v6:= v6.`r.f.j` @type ^`boolean` @kind boolean;
  #L559112.  if v6 != 0 then goto L559118;
  #L559116.  goto L559106;
  #L559118.  v6:= instanceof @variable v5 @type ^`r.c` @kind boolean;
  #L55911c.  if v6 != 0 then goto L5590c6;
  #L559120.  v5:= v5.`r.p.e` @type ^`r.g` @kind object;
  #L559124.  v5:= v5.`r.f.j` @type ^`boolean` @kind boolean;
  #L559128.  if v5 != 0 then goto L5590c6;
  #L55912c.  goto L559106;
  #L55912e.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L559132.  call `M0`(v10, v1) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L559138.  v10:= v9.`r.e.a` @type ^`q.f` @kind object;
  #L55913c.  call `d1`(v10, v3) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L559142.  return v0;
}
procedure `void` `j`(`r.e` v1 @kind this) @signature `Lr/e;.j:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L559774.  v0:= 1I;
  #L559776.  v1.`r.e.b` @type ^`boolean` := v0 @kind boolean;
  #L55977a.  return @kind void;
}
procedure `void` `k`(`r.e` v1 @kind this) @signature `Lr/e;.k:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55978c.  v0:= 1I;
  #L55978e.  v1.`r.e.c` @type ^`boolean` := v0 @kind boolean;
  #L559792.  return @kind void;
}
procedure `void` `m`(`r.e` v12 @kind this) @signature `Lr/e;.m:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L55980c.  v0:= v12.`r.e.a` @type ^`q.f` @kind object;
  #L559810.  v0:= v0.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L559814.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L55981a.  v0:= temp @kind object;
  #L55981c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L559822.  v1:= temp;
  #L559824.  if v1 == 0 then goto L55999e;
  #L559828.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55982e.  v1:= temp @kind object;
  #L559830.  v1:= (`q.e`) v1 @kind object;
  #L559834.  v2:= v1.`q.e.a` @type ^`boolean` @kind boolean;
  #L559838.  if v2 == 0 then goto L55983e;
  #L55983c.  goto L55981c;
  #L55983e.  v2:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L559842.  v3:= 0I;
  #L559844.  v8:= v2[v3] @kind object;
  #L559848.  v9:= 1I;
  #L55984a.  v10:= v2[v9] @kind object;
  #L55984e.  v2:= v1.`q.e.s` @type ^`int`;
  #L559852.  v4:= v1.`q.e.t` @type ^`int`;
  #L559856.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L55985a.  if v8 == v6 then goto L559870;
  #L55985e.  v5:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L559862.  if v8 != v5 then goto L55986c;
  #L559866.  if v2 != v9 then goto L55986c;
  #L55986a.  goto L559870;
  #L55986c.  v2:= 0I;
  #L55986e.  goto L559872;
  #L559870.  v2:= 1I;
  #L559872.  if v10 == v6 then goto L559882;
  #L559876.  v5:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L55987a.  if v10 != v5 then goto L559884;
  #L55987e.  if v4 != v9 then goto L559884;
  #L559882.  v3:= 1I;
  #L559884.  v4:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L559888.  v4:= v4.`r.p.e` @type ^`r.g` @kind object;
  #L55988c.  v5:= v4.`r.f.j` @type ^`boolean` @kind boolean;
  #L559890.  v7:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L559894.  v7:= v7.`r.p.e` @type ^`r.g` @kind object;
  #L559898.  v11:= v7.`r.f.j` @type ^`boolean` @kind boolean;
  #L55989c.  if v5 == 0 then goto L5598c2;
  #L5598a0.  if v11 == 0 then goto L5598c2;
  #L5598a4.  v6:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5598a8.  v5:= v4.`r.f.g` @type ^`int`;
  #L5598ac.  v7:= v7.`r.f.g` @type ^`int`;
  #L5598b0.  v2:= v12 @kind object;
  #L5598b2.  v3:= v1 @kind object;
  #L5598b4.  v4:= v6 @kind object;
  #L5598b6.  call `l`(v2, v3, v4, v5, v6, v7) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5598bc.  v1.`q.e.a` @type ^`boolean` := v9 @kind boolean;
  #L5598c0.  goto L559978;
  #L5598c2.  if v5 == 0 then goto L55991e;
  #L5598c6.  if v3 == 0 then goto L55991e;
  #L5598ca.  v5:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L5598ce.  v8:= v4.`r.f.g` @type ^`int`;
  #L5598d2.  v7:= v7.`r.f.g` @type ^`int`;
  #L5598d6.  v2:= v12 @kind object;
  #L5598d8.  v3:= v1 @kind object;
  #L5598da.  v4:= v5 @kind object;
  #L5598dc.  v5:= v8;
  #L5598de.  call `l`(v2, v3, v4, v5, v6, v7) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L5598e4.  v2:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L5598e8.  if v10 != v2 then goto L559902;
  #L5598ec.  v2:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L5598f0.  v2:= v2.`r.p.e` @type ^`r.g` @kind object;
  #L5598f4.  call temp:= `z`(v1) @signature `Lq/e;.z:()I` @kind virtual;
  #L5598fa.  v3:= temp;
  #L5598fc.  v2.`r.g.m` @type ^`int` := v3;
  #L559900.  goto L559978;
  #L559902.  v2:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L559906.  v2:= v2.`r.p.e` @type ^`r.g` @kind object;
  #L55990a.  call temp:= `z`(v1) @signature `Lq/e;.z:()I` @kind virtual;
  #L559910.  v3:= temp;
  #L559912.  call `d`(v2, v3) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L559918.  v1.`q.e.a` @type ^`boolean` := v9 @kind boolean;
  #L55991c.  goto L559978;
  #L55991e.  if v11 == 0 then goto L559978;
  #L559922.  if v2 == 0 then goto L559978;
  #L559926.  v5:= v4.`r.f.g` @type ^`int`;
  #L55992a.  v10:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L55992e.  v7:= v7.`r.f.g` @type ^`int`;
  #L559932.  v2:= v12 @kind object;
  #L559934.  v3:= v1 @kind object;
  #L559936.  v4:= v6 @kind object;
  #L559938.  v6:= v10 @kind object;
  #L55993a.  call `l`(v2, v3, v4, v5, v6, v7) @signature `Lr/e;.l:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind direct;
  #L559940.  v2:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L559944.  if v8 != v2 then goto L55995e;
  #L559948.  v2:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L55994c.  v2:= v2.`r.p.e` @type ^`r.g` @kind object;
  #L559950.  call temp:= `V`(v1) @signature `Lq/e;.V:()I` @kind virtual;
  #L559956.  v3:= temp;
  #L559958.  v2.`r.g.m` @type ^`int` := v3;
  #L55995c.  goto L559978;
  #L55995e.  v2:= v1.`q.e.d` @type ^`r.l` @kind object;
  #L559962.  v2:= v2.`r.p.e` @type ^`r.g` @kind object;
  #L559966.  call temp:= `V`(v1) @signature `Lq/e;.V:()I` @kind virtual;
  #L55996c.  v3:= temp;
  #L55996e.  call `d`(v2, v3) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L559974.  v1.`q.e.a` @type ^`boolean` := v9 @kind boolean;
  #L559978.  v2:= v1.`q.e.a` @type ^`boolean` @kind boolean;
  #L55997c.  if v2 == 0 then goto L55981c;
  #L559980.  v2:= v1.`q.e.e` @type ^`r.n` @kind object;
  #L559984.  v2:= v2.`r.n.l` @type ^`r.g` @kind object;
  #L559988.  if v2 == 0 then goto L55981c;
  #L55998c.  call temp:= `r`(v1) @signature `Lq/e;.r:()I` @kind virtual;
  #L559992.  v1:= temp;
  #L559994.  call `d`(v2, v1) @signature `Lr/g;.d:(I)V` @kind virtual;
  #L55999a.  goto L55981c;
  #L55999e.  return @kind void;
}
procedure `void` `n`(`r.e` v0 @kind this, `r.b$b` v1 @kind object) @signature `Lr/e;.n:(Lr/b$b;)V` @AccessFlag PUBLIC {
    temp;

  #L5599b0.  v0.`r.e.f` @type ^`r.b$b` := v1 @kind object;
  #L5599b4.  return @kind void;
}
