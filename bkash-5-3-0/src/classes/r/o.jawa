record `r.o` @kind class @AccessFlag PUBLIC {
  `java.util.ArrayList` `r.o.a` @AccessFlag ;
  `int` `r.o.b` @AccessFlag ;
  `int` `r.o.c` @AccessFlag ;
  `java.util.ArrayList` `r.o.d` @AccessFlag ;
  `int` `r.o.e` @AccessFlag PRIVATE;
}
global `int` `@@r.o.f` @AccessFlag STATIC;
procedure `void` `<clinit>`() @signature `Lr/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L55ea68.  return @kind void;
}
procedure `void` `<init>`(`r.o` v2 @kind this, `int` v3 ) @signature `Lr/o;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L55ea7c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L55ea82.  v0:= new `java.util.ArrayList`;
  #L55ea86.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L55ea8c.  v2.`r.o.a` @type ^`java.util.ArrayList` := v0 @kind object;
  #L55ea90.  v0:= -1I;
  #L55ea92.  v2.`r.o.b` @type ^`int` := v0;
  #L55ea96.  v1:= 0I;
  #L55ea98.  v2.`r.o.c` @type ^`int` := v1;
  #L55ea9c.  v1:= 0I;
  #L55ea9e.  v2.`r.o.d` @type ^`java.util.ArrayList` := v1 @kind object;
  #L55eaa2.  v2.`r.o.e` @type ^`int` := v0;
  #L55eaa6.  v0:= `@@r.o.f` @type ^`int`;
  #L55eaaa.  v1:= v0 + 1;
  #L55eaae.  `@@r.o.f` @type ^`int` := v1;
  #L55eab2.  v2.`r.o.b` @type ^`int` := v0;
  #L55eab6.  v2.`r.o.c` @type ^`int` := v3;
  #L55eaba.  return @kind void;
}
procedure `java.lang.String` `e`(`r.o` v2 @kind this) @signature `Lr/o;.e:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L55e964.  v0:= v2.`r.o.c` @type ^`int`;
  #L55e968.  if v0 != 0 then goto L55e972;
  #L55e96c.  v0:= "Horizontal" @kind object;
  #L55e970.  return v0 @kind object;
  #L55e972.  v1:= 1I;
  #L55e974.  if v0 != v1 then goto L55e97e;
  #L55e978.  v0:= "Vertical" @kind object;
  #L55e97c.  return v0 @kind object;
  #L55e97e.  v1:= 2I;
  #L55e980.  if v0 != v1 then goto L55e98a;
  #L55e984.  v0:= "Both" @kind object;
  #L55e988.  return v0 @kind object;
  #L55e98a.  v0:= "Unknown" @kind object;
  #L55e98e.  return v0 @kind object;
}
procedure `int` `j`(`r.o` v4 @kind this, `n.d` v5 @kind object, `java.util.ArrayList` v6 @kind object, `int` v7 ) @signature `Lr/o;.j:(Ln/d;Ljava/util/ArrayList;I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55e83c.  v0:= 0I;
  #L55e83e.  call temp:= `get`(v6, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55e844.  v1:= temp @kind object;
  #L55e846.  v1:= (`q.e`) v1 @kind object;
  #L55e84a.  call temp:= `M`(v1) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L55e850.  v1:= temp @kind object;
  #L55e852.  v1:= (`q.f`) v1 @kind object;
  #L55e856.  call `E`(v5) @signature `Ln/d;.E:()V` @kind virtual;
  #L55e85c.  call `g`(v1, v5, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L55e862.  v2:= 0I;
  #L55e864.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55e86a.  v3:= temp;
  #L55e86c.  if v2 >= v3 then goto L55e888;
  #L55e870.  call temp:= `get`(v6, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55e876.  v3:= temp @kind object;
  #L55e878.  v3:= (`q.e`) v3 @kind object;
  #L55e87c.  call `g`(v3, v5, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L55e882.  v2:= v2 + 1;
  #L55e886.  goto L55e864;
  #L55e888.  if v7 != 0 then goto L55e89a;
  #L55e88c.  v2:= v1.`q.f.Y0` @type ^`int`;
  #L55e890.  if v2 <= 0 then goto L55e89a;
  #L55e894.  call `b`(v1, v5, v6, v0) @signature `Lq/b;.b:(Lq/f;Ln/d;Ljava/util/ArrayList;I)V` @kind static;
  #L55e89a.  v2:= 1I;
  #L55e89c.  if v7 != v2 then goto L55e8ae;
  #L55e8a0.  v3:= v1.`q.f.Z0` @type ^`int`;
  #L55e8a4.  if v3 <= 0 then goto L55e8ae;
  #L55e8a8.  call `b`(v1, v5, v6, v2) @signature `Lq/b;.b:(Lq/f;Ln/d;Ljava/util/ArrayList;I)V` @kind static;
  #L55e8ae.  call `A`(v5) @signature `Ln/d;.A:()V` @kind virtual;
  #L55e8b4.  goto L55e8be;
  #L55e8b6.  v2:= Exception @type ^`java.lang.Exception` @kind object;
  #L55e8b8.  call `printStackTrace`(v2) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L55e8be.  v2:= new `java.util.ArrayList`;
  #L55e8c2.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L55e8c8.  v4.`r.o.d` @type ^`java.util.ArrayList` := v2 @kind object;
  #L55e8cc.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55e8d2.  v2:= temp;
  #L55e8d4.  if v0 >= v2 then goto L55e8fe;
  #L55e8d8.  call temp:= `get`(v6, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55e8de.  v2:= temp @kind object;
  #L55e8e0.  v2:= (`q.e`) v2 @kind object;
  #L55e8e4.  v3:= new `r.o$a`;
  #L55e8e8.  call `<init>`(v3, v4, v2, v5, v7) @signature `Lr/o$a;.<init>:(Lr/o;Lq/e;Ln/d;I)V` @kind direct;
  #L55e8ee.  v2:= v4.`r.o.d` @type ^`java.util.ArrayList` @kind object;
  #L55e8f2.  call temp:= `add`(v2, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L55e8f8.  v0:= v0 + 1;
  #L55e8fc.  goto L55e8cc;
  #L55e8fe.  if v7 != 0 then goto L55e924;
  #L55e902.  v6:= v1.`q.e.M` @type ^`q.d` @kind object;
  #L55e906.  call temp:= `y`(v5, v6) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e90c.  v6:= temp;
  #L55e90e.  v7:= v1.`q.e.O` @type ^`q.d` @kind object;
  #L55e912.  call temp:= `y`(v5, v7) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e918.  v7:= temp;
  #L55e91a.  call `E`(v5) @signature `Ln/d;.E:()V` @kind virtual;
  #L55e920.  v7:= v7 - v6 @kind int;
  #L55e922.  return v7;
  #L55e924.  v6:= v1.`q.e.N` @type ^`q.d` @kind object;
  #L55e928.  call temp:= `y`(v5, v6) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e92e.  v6:= temp;
  #L55e930.  v7:= v1.`q.e.P` @type ^`q.d` @kind object;
  #L55e934.  call temp:= `y`(v5, v7) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L55e93a.  v7:= temp;
  #L55e93c.  call `E`(v5) @signature `Ln/d;.E:()V` @kind virtual;
  #L55e942.  goto L55e920;
  catch `java.lang.Exception` @[L55e8ae..L55e8b4] goto L55e8b6;
}
procedure `boolean` `a`(`r.o` v1 @kind this, `q.e` v2 @kind object) @signature `Lr/o;.a:(Lq/e;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55e7a4.  v0:= v1.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55e7a8.  call temp:= `contains`(v0, v2) @signature `Ljava/util/ArrayList;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L55e7ae.  v0:= temp;
  #L55e7b0.  if v0 == 0 then goto L55e7b8;
  #L55e7b4.  v2:= 0I;
  #L55e7b6.  return v2;
  #L55e7b8.  v0:= v1.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55e7bc.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L55e7c2.  v2:= 1I;
  #L55e7c4.  return v2;
}
procedure `void` `b`(`r.o` v5 @kind this, `java.util.ArrayList` v6 @kind object) @signature `Lr/o;.b:(Ljava/util/ArrayList;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L55eacc.  v0:= v5.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55ead0.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55ead6.  v0:= temp;
  #L55ead8.  v1:= v5.`r.o.e` @type ^`int`;
  #L55eadc.  v2:= -1I;
  #L55eade.  if v1 == v2 then goto L55eb1c;
  #L55eae2.  if v0 <= 0 then goto L55eb1c;
  #L55eae6.  v1:= 0I;
  #L55eae8.  call temp:= `size`(v6) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55eaee.  v2:= temp;
  #L55eaf0.  if v1 >= v2 then goto L55eb1c;
  #L55eaf4.  call temp:= `get`(v6, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55eafa.  v2:= temp @kind object;
  #L55eafc.  v2:= (`r.o`) v2 @kind object;
  #L55eb00.  v3:= v5.`r.o.e` @type ^`int`;
  #L55eb04.  v4:= v2.`r.o.b` @type ^`int`;
  #L55eb08.  if v3 != v4 then goto L55eb16;
  #L55eb0c.  v3:= v5.`r.o.c` @type ^`int`;
  #L55eb10.  call `g`(v5, v3, v2) @signature `Lr/o;.g:(ILr/o;)V` @kind virtual;
  #L55eb16.  v1:= v1 + 1;
  #L55eb1a.  goto L55eae8;
  #L55eb1c.  if v0 != 0 then goto L55eb26;
  #L55eb20.  call temp:= `remove`(v6, v5) @signature `Ljava/util/ArrayList;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L55eb26.  return @kind void;
}
procedure `int` `c`(`r.o` v1 @kind this) @signature `Lr/o;.c:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55e7d8.  v0:= v1.`r.o.b` @type ^`int`;
  #L55e7dc.  return v0;
}
procedure `int` `d`(`r.o` v1 @kind this) @signature `Lr/o;.d:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55e7f0.  v0:= v1.`r.o.c` @type ^`int`;
  #L55e7f4.  return v0;
}
procedure `int` `f`(`r.o` v1 @kind this, `n.d` v2 @kind object, `int` v3 ) @signature `Lr/o;.f:(Ln/d;I)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L55e808.  v0:= v1.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55e80c.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55e812.  v0:= temp;
  #L55e814.  if v0 != 0 then goto L55e81c;
  #L55e818.  v2:= 0I;
  #L55e81a.  return v2;
  #L55e81c.  v0:= v1.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55e820.  call temp:= `j`(v1, v2, v0, v3) @signature `Lr/o;.j:(Ln/d;Ljava/util/ArrayList;I)I` @kind direct;
  #L55e826.  v2:= temp;
  #L55e828.  return v2;
}
procedure `void` `g`(`r.o` v3 @kind this, `int` v4 , `r.o` v5 @kind object) @signature `Lr/o;.g:(ILr/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L55eb38.  v0:= v3.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55eb3c.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L55eb42.  v0:= temp @kind object;
  #L55eb44.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55eb4a.  v1:= temp;
  #L55eb4c.  if v1 == 0 then goto L55eb82;
  #L55eb50.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55eb56.  v1:= temp @kind object;
  #L55eb58.  v1:= (`q.e`) v1 @kind object;
  #L55eb5c.  call temp:= `a`(v5, v1) @signature `Lr/o;.a:(Lq/e;)Z` @kind virtual;
  #L55eb62.  if v4 != 0 then goto L55eb74;
  #L55eb66.  call temp:= `c`(v5) @signature `Lr/o;.c:()I` @kind virtual;
  #L55eb6c.  v2:= temp;
  #L55eb6e.  v1.`q.e.M0` @type ^`int` := v2;
  #L55eb72.  goto L55eb44;
  #L55eb74.  call temp:= `c`(v5) @signature `Lr/o;.c:()I` @kind virtual;
  #L55eb7a.  v2:= temp;
  #L55eb7c.  v1.`q.e.N0` @type ^`int` := v2;
  #L55eb80.  goto L55eb44;
  #L55eb82.  v4:= v5.`r.o.b` @type ^`int`;
  #L55eb86.  v3.`r.o.e` @type ^`int` := v4;
  #L55eb8a.  return @kind void;
}
procedure `void` `h`(`r.o` v0 @kind this, `boolean` v1 ) @signature `Lr/o;.h:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L55eb9c.  return @kind void;
}
procedure `void` `i`(`r.o` v0 @kind this, `int` v1 ) @signature `Lr/o;.i:(I)V` @AccessFlag PUBLIC {
    temp;

  #L55ebb0.  v0.`r.o.c` @type ^`int` := v1;
  #L55ebb4.  return @kind void;
}
procedure `java.lang.String` `toString`(`r.o` v4 @kind this) @signature `Lr/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L55e9a0.  v0:= new `java.lang.StringBuilder`;
  #L55e9a4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55e9aa.  call temp:= `e`(v4) @signature `Lr/o;.e:()Ljava/lang/String;` @kind direct;
  #L55e9b0.  v1:= temp @kind object;
  #L55e9b2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55e9b8.  v1:= " [" @kind object;
  #L55e9bc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55e9c2.  v1:= v4.`r.o.b` @type ^`int`;
  #L55e9c6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L55e9cc.  v1:= "] <" @kind object;
  #L55e9d0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55e9d6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55e9dc.  v0:= temp @kind object;
  #L55e9de.  v1:= v4.`r.o.a` @type ^`java.util.ArrayList` @kind object;
  #L55e9e2.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L55e9e8.  v1:= temp @kind object;
  #L55e9ea.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L55e9f0.  v2:= temp;
  #L55e9f2.  if v2 == 0 then goto L55ea34;
  #L55e9f6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L55e9fc.  v2:= temp @kind object;
  #L55e9fe.  v2:= (`q.e`) v2 @kind object;
  #L55ea02.  v3:= new `java.lang.StringBuilder`;
  #L55ea06.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55ea0c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ea12.  v0:= " " @kind object;
  #L55ea16.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ea1c.  call temp:= `v`(v2) @signature `Lq/e;.v:()Ljava/lang/String;` @kind virtual;
  #L55ea22.  v0:= temp @kind object;
  #L55ea24.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ea2a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55ea30.  v0:= temp @kind object;
  #L55ea32.  goto L55e9ea;
  #L55ea34.  v1:= new `java.lang.StringBuilder`;
  #L55ea38.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L55ea3e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ea44.  v0:= " >" @kind object;
  #L55ea48.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L55ea4e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L55ea54.  v0:= temp @kind object;
  #L55ea56.  return v0 @kind object;
}
