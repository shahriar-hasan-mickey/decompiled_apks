record `z2.b$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `z2.b` `z2.b$a.g` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`z2.b$a` v0 @kind this, `z2.b` v1 @kind object) @signature `Lz2/b$a;.<init>:(Lz2/b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L580190.  v0.`z2.b$a.g` @type ^`z2.b` := v1 @kind object;
  #L580194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L58019a.  return @kind void;
}
procedure `void` `run`(`z2.b$a` v2 @kind this) @signature `Lz2/b$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5801ac.  v0:= v2.`z2.b$a.g` @type ^`z2.b` @kind object;
  #L5801b0.  call temp:= `a`(v0) @signature `Lz2/b;.a:(Lz2/b;)Z` @kind static;
  #L5801b6.  v0:= temp;
  #L5801b8.  if v0 == 0 then goto L5801be;
  #L5801bc.  return @kind void;
  #L5801be.  v0:= v2.`z2.b$a.g` @type ^`z2.b` @kind object;
  #L5801c2.  call temp:= `b`(v0) @signature `Lz2/b;.b:(Lz2/b;)Lz2/d;` @kind static;
  #L5801c8.  v0:= temp @kind object;
  #L5801ca.  call `v`(v0) @signature `Lz2/d;.v:()V` @kind virtual;
  #L5801d0.  v0:= v2.`z2.b$a.g` @type ^`z2.b` @kind object;
  #L5801d4.  v1:= v0.`z2.b.b` @type ^`boolean` @kind boolean;
  #L5801d8.  if v1 != 0 then goto L5801e2;
  #L5801dc.  call `c`(v0) @signature `Lz2/b;.c:(Lz2/b;)V` @kind static;
  #L5801e2.  return @kind void;
}
