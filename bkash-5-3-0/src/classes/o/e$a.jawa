record `o.e$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`o.e$a` v0 @kind this, `o.e` v1 @kind object) @signature `Lo/e$a;.<init>:(Lo/e;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L53fb30.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53fb36.  return @kind void;
}
procedure `int` `a`(`o.e$a` v0 @kind this, `o.e$c` v1 @kind object, `o.e$c` v2 @kind object) @signature `Lo/e$a;.a:(Lo/e$c;Lo/e$c;)I` @AccessFlag PUBLIC {
    temp;

  #L53fb0c.  v1:= v1.`o.e$c.a` @type ^`int`;
  #L53fb10.  v2:= v2.`o.e$c.a` @type ^`int`;
  #L53fb14.  call temp:= `compare`(v1, v2) @signature `Ljava/lang/Integer;.compare:(II)I` @kind static;
  #L53fb1a.  v1:= temp;
  #L53fb1c.  return v1;
}
procedure `int` `compare`(`o.e$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lo/e$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L53fae8.  v1:= (`o.e$c`) v1 @kind object;
  #L53faec.  v2:= (`o.e$c`) v2 @kind object;
  #L53faf0.  call temp:= `a`(v0, v1, v2) @signature `Lo/e$a;.a:(Lo/e$c;Lo/e$c;)I` @kind virtual;
  #L53faf6.  v1:= temp;
  #L53faf8.  return v1;
}
