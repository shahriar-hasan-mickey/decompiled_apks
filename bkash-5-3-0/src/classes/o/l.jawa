record `o.l` @kind class @AccessFlag PUBLIC extends `o.c` @kind class {
  `o.g` `o.l.d` @AccessFlag ;
}
procedure `void` `<init>`(`o.l` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lo/l;.<init>:(Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L5420dc.  call `<init>`(v8) @signature `Lo/c;.<init>:()V` @kind direct;
  #L5420e2.  v8.`o.c.a` @type ^`java.lang.String` := v9 @kind object;
  #L5420e6.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L5420ec.  v0:= temp;
  #L5420ee.  v0:= v0 / 2;
  #L5420f2.  v0:= new `double`[v0];
  #L5420f6.  v1:= 40I;
  #L5420fa.  call temp:= `indexOf`(v9, v1) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L542100.  v1:= temp;
  #L542102.  v1:= v1 + 1;
  #L542106.  v2:= 44I;
  #L54210a.  call temp:= `indexOf`(v9, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L542110.  v3:= temp;
  #L542112.  v4:= 0I;
  #L542114.  v5:= -1I;
  #L542116.  if v3 == v5 then goto L54214a;
  #L54211a.  call temp:= `substring`(v9, v1, v3) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L542120.  v1:= temp @kind object;
  #L542122.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L542128.  v1:= temp @kind object;
  #L54212a.  v5:= v4 + 1;
  #L54212e.  call temp:= `parseDouble`(v1) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L542134.  v6:= temp @kind wide;
  #L542136.  v0[v4]:= v6 @kind wide;
  #L54213a.  v1:= v3 + 1;
  #L54213e.  call temp:= `indexOf`(v9, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L542144.  v3:= temp;
  #L542146.  v4:= v5;
  #L542148.  goto L542114;
  #L54214a.  v2:= 41I;
  #L54214e.  call temp:= `indexOf`(v9, v2, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L542154.  v2:= temp;
  #L542156.  call temp:= `substring`(v9, v1, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L54215c.  v9:= temp @kind object;
  #L54215e.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L542164.  v9:= temp @kind object;
  #L542166.  v1:= v4 + 1;
  #L54216a.  call temp:= `parseDouble`(v9) @signature `Ljava/lang/Double;.parseDouble:(Ljava/lang/String;)D` @kind static;
  #L542170.  v2:= temp @kind wide;
  #L542172.  v0[v4]:= v2 @kind wide;
  #L542176.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([DI)[D` @kind static;
  #L54217c.  v9:= temp @kind object;
  #L54217e.  call temp:= `d`(v9) @signature `Lo/l;.d:([D)Lo/g;` @kind static;
  #L542184.  v9:= temp @kind object;
  #L542186.  v8.`o.l.d` @type ^`o.g` := v9 @kind object;
  #L54218a.  return @kind void;
}
procedure `o.g` `d`(`double`[] v18 @kind object) @signature `Lo/l;.d:([D)Lo/g;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L541fb0.  v0:= v18 @kind object;
  #L541fb4.  v1:= length @variable v0;
  #L541fb6.  v1:= v1 * 3;
  #L541fba.  v2:= 2I;
  #L541fbc.  v1:= v1 - v2 @kind int;
  #L541fbe.  v3:= length @variable v0;
  #L541fc0.  v4:= 1I;
  #L541fc2.  v3:= v3 - v4 @kind int;
  #L541fc4.  v5:= (`double`) v3 @kind i2d;
  #L541fc6.  v7:= 1.0D;
  #L541fca.  v5:= v7 / v5 @kind double;
  #L541fce.  v2:= new `int`[v2];
  #L541fd2.  v2[v4]:= v4;
  #L541fd6.  v4:= 0I;
  #L541fd8.  v2[v4]:= v1;
  #L541fdc.  v9:= constclass @type ^`double` @kind object;
  #L541fe0.  call temp:= `newInstance`(v9, v2) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L541fe6.  v2:= temp @kind object;
  #L541fe8.  v2:= (`double`[][]) v2 @kind object;
  #L541fec.  v1:= new `double`[v1];
  #L541ff0.  v9:= 0I;
  #L541ff2.  v10:= length @variable v0;
  #L541ff4.  if v9 >= v10 then goto L542052;
  #L541ff8.  v10:= v0[v9] @kind wide;
  #L541ffc.  v12:= v9 + v3 @kind int;
  #L542000.  v13:= v2[v12] @kind object;
  #L542004.  v13[v4]:= v10 @kind wide;
  #L542008.  v13:= (`double`) v9 @kind i2d;
  #L54200a.  v13:= v13 * v5 @kind double;
  #L54200e.  v1[v12]:= v13 @kind wide;
  #L542012.  if v9 <= 0 then goto L54204c;
  #L542016.  v12:= v3 * 2;
  #L54201a.  v12:= v12 + v9 @kind int;
  #L54201c.  v15:= v2[v12] @kind object;
  #L542020.  v16:= v10 + v7 @kind double;
  #L542024.  v15[v4]:= v16 @kind wide;
  #L542028.  v15:= v13 + v7 @kind double;
  #L54202c.  v1[v12]:= v15 @kind wide;
  #L542030.  v12:= v9 + -1;
  #L542034.  v15:= v2[v12] @kind object;
  #L542038.  v10:= v10 - v7 @kind double;
  #L54203a.  v10:= v10 - v5 @kind double;
  #L54203c.  v15[v4]:= v10 @kind wide;
  #L542040.  v10:= -1.0D;
  #L542044.  v13:= v13 + v10 @kind double;
  #L542046.  v13:= v13 - v5 @kind double;
  #L542048.  v1[v12]:= v13 @kind wide;
  #L54204c.  v9:= v9 + 1;
  #L542050.  goto L541ff2;
  #L542052.  v0:= new `o.g`;
  #L542056.  call `<init>`(v0, v1, v2) @signature `Lo/g;.<init>:([D[[D)V` @kind direct;
  #L54205c.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L542060.  v2:= new `java.lang.StringBuilder`;
  #L542064.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54206a.  v3:= " 0 " @kind object;
  #L54206e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L542074.  v5:= 0L;
  #L542078.  call temp:= `c`(v0, v5, v4) @signature `Lo/g;.c:(DI)D` @kind virtual;
  #L54207e.  v5:= temp @kind wide;
  #L542080.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L542086.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54208c.  v2:= temp @kind object;
  #L54208e.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L542094.  v1:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L542098.  v2:= new `java.lang.StringBuilder`;
  #L54209c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5420a2.  v3:= " 1 " @kind object;
  #L5420a6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5420ac.  call temp:= `c`(v0, v7, v4) @signature `Lo/g;.c:(DI)D` @kind virtual;
  #L5420b2.  v3:= temp @kind wide;
  #L5420b4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L5420ba.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L5420c0.  v2:= temp @kind object;
  #L5420c2.  call `println`(v1, v2) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L5420c8.  return v0 @kind object;
}
procedure `double` `a`(`o.l` v2 @kind this, `double` v3 ) @signature `Lo/l;.a:(D)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L541f70.  v0:= v2.`o.l.d` @type ^`o.g` @kind object;
  #L541f74.  v1:= 0I;
  #L541f76.  call temp:= `c`(v0, v3, v1) @signature `Lo/g;.c:(DI)D` @kind virtual;
  #L541f7c.  v3:= temp @kind wide;
  #L541f7e.  return v3 @kind wide;
}
procedure `double` `b`(`o.l` v2 @kind this, `double` v3 ) @signature `Lo/l;.b:(D)D` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L541f90.  v0:= v2.`o.l.d` @type ^`o.g` @kind object;
  #L541f94.  v1:= 0I;
  #L541f96.  call temp:= `f`(v0, v3, v1) @signature `Lo/g;.f:(DI)D` @kind virtual;
  #L541f9c.  v3:= temp @kind wide;
  #L541f9e.  return v3 @kind wide;
}
