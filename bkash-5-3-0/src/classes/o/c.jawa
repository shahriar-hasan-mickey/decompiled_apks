record `o.c` @kind class @AccessFlag PUBLIC {
  `java.lang.String` `o.c.a` @AccessFlag ;
}
global `o.c` `@@o.c.b` @AccessFlag STATIC;
global `java.lang.String`[] `@@o.c.c` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lo/c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L53f938.  v0:= new `o.c`;
  #L53f93c.  call `<init>`(v0) @signature `Lo/c;.<init>:()V` @kind direct;
  #L53f942.  `@@o.c.b` @type ^`o.c` := v0 @kind object;
  #L53f946.  v0:= "standard" @kind object;
  #L53f94a.  v1:= "accelerate" @kind object;
  #L53f94e.  v2:= "decelerate" @kind object;
  #L53f952.  v3:= "linear" @kind object;
  #L53f956.  temp:= new `java.lang.String`[v0, v1, v2, v3];
  #L53f95c.  v0:= temp @kind object;
  #L53f95e.  `@@o.c.c` @type ^`java.lang.String`[] := v0 @kind object;
  #L53f962.  return @kind void;
}
procedure `void` `<init>`(`o.c` v1 @kind this) @signature `Lo/c;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L53f974.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53f97a.  v0:= "identity" @kind object;
  #L53f97e.  v1.`o.c.a` @type ^`java.lang.String` := v0 @kind object;
  #L53f982.  return @kind void;
}
procedure `o.c` `c`(`java.lang.String` v2 @kind object) @signature `Lo/c;.c:(Ljava/lang/String;)Lo/c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53f740.  if v2 != 0 then goto L53f748;
  #L53f744.  v2:= 0I;
  #L53f746.  return v2 @kind object;
  #L53f748.  v0:= "cubic" @kind object;
  #L53f74c.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L53f752.  v0:= temp;
  #L53f754.  if v0 == 0 then goto L53f764;
  #L53f758.  v0:= new `o.c$a`;
  #L53f75c.  call `<init>`(v0, v2) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f762.  return v0 @kind object;
  #L53f764.  v0:= "spline" @kind object;
  #L53f768.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L53f76e.  v0:= temp;
  #L53f770.  if v0 == 0 then goto L53f780;
  #L53f774.  v0:= new `o.l`;
  #L53f778.  call `<init>`(v0, v2) @signature `Lo/l;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f77e.  return v0 @kind object;
  #L53f780.  v0:= "Schlick" @kind object;
  #L53f784.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L53f78a.  v0:= temp;
  #L53f78c.  if v0 == 0 then goto L53f79c;
  #L53f790.  v0:= new `o.i`;
  #L53f794.  call `<init>`(v0, v2) @signature `Lo/i;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f79a.  return v0 @kind object;
  #L53f79c.  v0:= -1I;
  #L53f79e.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L53f7a4.  v1:= temp;
  #L53f7a6.  goto L53f8d4;
  #L53f7ac.  goto L53f830;
  #L53f7ae.  v1:= "standard" @kind object;
  #L53f7b2.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f7b8.  v2:= temp;
  #L53f7ba.  if v2 != 0 then goto L53f7c0;
  #L53f7be.  goto L53f830;
  #L53f7c0.  v0:= 5I;
  #L53f7c2.  goto L53f830;
  #L53f7c4.  v1:= "overshoot" @kind object;
  #L53f7c8.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f7ce.  v2:= temp;
  #L53f7d0.  if v2 != 0 then goto L53f7d6;
  #L53f7d4.  goto L53f830;
  #L53f7d6.  v0:= 4I;
  #L53f7d8.  goto L53f830;
  #L53f7da.  v1:= "linear" @kind object;
  #L53f7de.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f7e4.  v2:= temp;
  #L53f7e6.  if v2 != 0 then goto L53f7ec;
  #L53f7ea.  goto L53f830;
  #L53f7ec.  v0:= 3I;
  #L53f7ee.  goto L53f830;
  #L53f7f0.  v1:= "anticipate" @kind object;
  #L53f7f4.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f7fa.  v2:= temp;
  #L53f7fc.  if v2 != 0 then goto L53f802;
  #L53f800.  goto L53f830;
  #L53f802.  v0:= 2I;
  #L53f804.  goto L53f830;
  #L53f806.  v1:= "decelerate" @kind object;
  #L53f80a.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f810.  v2:= temp;
  #L53f812.  if v2 != 0 then goto L53f818;
  #L53f816.  goto L53f830;
  #L53f818.  v0:= 1I;
  #L53f81a.  goto L53f830;
  #L53f81c.  v1:= "accelerate" @kind object;
  #L53f820.  call temp:= `equals`(v2, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53f826.  v2:= temp;
  #L53f828.  if v2 != 0 then goto L53f82e;
  #L53f82c.  goto L53f830;
  #L53f82e.  v0:= 0I;
  #L53f830.  goto L53f908;
  #L53f836.  v2:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L53f83a.  v0:= new `java.lang.StringBuilder`;
  #L53f83e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53f844.  v1:= "transitionEasing syntax error syntax:transitionEasing=\"cubic(1.0,0.5,0.0,0.6)\" or " @kind object;
  #L53f848.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53f84e.  v1:= `@@o.c.c` @type ^`java.lang.String`[] @kind object;
  #L53f852.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L53f858.  v1:= temp @kind object;
  #L53f85a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53f860.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53f866.  v0:= temp @kind object;
  #L53f868.  call `println`(v2, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L53f86e.  v2:= `@@o.c.b` @type ^`o.c` @kind object;
  #L53f872.  return v2 @kind object;
  #L53f874.  v2:= new `o.c$a`;
  #L53f878.  v0:= "cubic(0.4, 0.0, 0.2, 1)" @kind object;
  #L53f87c.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f882.  return v2 @kind object;
  #L53f884.  v2:= new `o.c$a`;
  #L53f888.  v0:= "cubic(0.34, 1.56, 0.64, 1)" @kind object;
  #L53f88c.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f892.  return v2 @kind object;
  #L53f894.  v2:= new `o.c$a`;
  #L53f898.  v0:= "cubic(1, 1, 0, 0)" @kind object;
  #L53f89c.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f8a2.  return v2 @kind object;
  #L53f8a4.  v2:= new `o.c$a`;
  #L53f8a8.  v0:= "cubic(0.36, 0, 0.66, -0.56)" @kind object;
  #L53f8ac.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f8b2.  return v2 @kind object;
  #L53f8b4.  v2:= new `o.c$a`;
  #L53f8b8.  v0:= "cubic(0.0, 0.0, 0.2, 0.95)" @kind object;
  #L53f8bc.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f8c2.  return v2 @kind object;
  #L53f8c4.  v2:= new `o.c$a`;
  #L53f8c8.  v0:= "cubic(0.4, 0.05, 0.8, 0.7)" @kind object;
  #L53f8cc.  call `<init>`(v2, v0) @signature `Lo/c$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53f8d2.  return v2 @kind object;
  #L53f8d4.  switch v1
                  | -1354466595 => goto L53f81c
                  | -1263948740 => goto L53f806
                  | -1197605014 => goto L53f7f0
                  | -1102672091 => goto L53f7da
                  | -749065269 => goto L53f7c4
                  | 1312628413 => goto L53f7ae
                  | else => goto L53f7ac;
  #L53f908.  switch v0
                  | 0 => goto L53f8c4
                  | 1 => goto L53f8b4
                  | 2 => goto L53f8a4
                  | 3 => goto L53f894
                  | 4 => goto L53f884
                  | 5 => goto L53f874
                  | else => goto L53f836;
}
procedure `double` `a`(`o.c` v0 @kind this, `double` v1 ) @signature `Lo/c;.a:(D)D` @AccessFlag PUBLIC {
    temp;

  #L53f6fc.  return v1 @kind wide;
}
procedure `double` `b`(`o.c` v0 @kind this, `double` v1 ) @signature `Lo/c;.b:(D)D` @AccessFlag PUBLIC {
    temp;

  #L53f710.  v1:= 1.0D;
  #L53f714.  return v1 @kind wide;
}
procedure `java.lang.String` `toString`(`o.c` v1 @kind this) @signature `Lo/c;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L53f728.  v0:= v1.`o.c.a` @type ^`java.lang.String` @kind object;
  #L53f72c.  return v0 @kind object;
}
