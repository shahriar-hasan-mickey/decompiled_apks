record `o.e` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `o.e$b` `o.e.a` @AccessFlag PRIVATE;
  `java.lang.String` `o.e.b` @AccessFlag PRIVATE;
  `int` `o.e.c` @AccessFlag PRIVATE;
  `java.lang.String` `o.e.d` @AccessFlag PRIVATE;
  `int` `o.e.e` @AccessFlag PUBLIC;
  `java.util.ArrayList` `o.e.f` @AccessFlag ;
}
procedure `void` `<init>`(`o.e` v2 @kind this) @signature `Lo/e;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L53ff68.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53ff6e.  v0:= 0I;
  #L53ff70.  v2.`o.e.c` @type ^`int` := v0;
  #L53ff74.  v1:= 0I;
  #L53ff76.  v2.`o.e.d` @type ^`java.lang.String` := v1 @kind object;
  #L53ff7a.  v2.`o.e.e` @type ^`int` := v0;
  #L53ff7e.  v0:= new `java.util.ArrayList`;
  #L53ff82.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L53ff88.  v2.`o.e.f` @type ^`java.util.ArrayList` := v0 @kind object;
  #L53ff8c.  return @kind void;
}
procedure `float` `a`(`o.e` v2 @kind this, `float` v3 ) @signature `Lo/e;.a:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L53fe88.  v0:= v2.`o.e.a` @type ^`o.e$b` @kind object;
  #L53fe8c.  call temp:= `b`(v0, v3) @signature `Lo/e$b;.b:(F)D` @kind virtual;
  #L53fe92.  v0:= temp @kind wide;
  #L53fe94.  v3:= (`float`) v0 @kind d2f;
  #L53fe96.  return v3;
}
procedure `float` `b`(`o.e` v2 @kind this, `float` v3 ) @signature `Lo/e;.b:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L53fea8.  v0:= v2.`o.e.a` @type ^`o.e$b` @kind object;
  #L53feac.  call temp:= `a`(v0, v3) @signature `Lo/e$b;.a:(F)D` @kind virtual;
  #L53feb2.  v0:= temp @kind wide;
  #L53feb4.  v3:= (`float`) v0 @kind d2f;
  #L53feb6.  return v3;
}
procedure `void` `c`(`o.e` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lo/e;.c:(Ljava/lang/Object;)V` @AccessFlag PROTECTED {
    temp;

  #L53ffa0.  return @kind void;
}
procedure `void` `d`(`o.e` v10 @kind this, `int` v11 , `int` v12 , `java.lang.String` v13 @kind object, `int` v14 , `float` v15 , `float` v16 , `float` v17 , `float` v18 ) @signature `Lo/e;.d:(IILjava/lang/String;IFFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L53ffb4.  v0:= v10 @kind object;
  #L53ffb6.  v1:= v14;
  #L53ffb8.  v2:= v0.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L53ffbc.  v9:= new `o.e$c`;
  #L53ffc0.  v3:= v9 @kind object;
  #L53ffc2.  v4:= v11;
  #L53ffc4.  v5:= v15;
  #L53ffc6.  v6:= v16;
  #L53ffca.  v7:= v17;
  #L53ffce.  v8:= v18;
  #L53ffd2.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lo/e$c;.<init>:(IFFFF)V` @kind direct;
  #L53ffd8.  call temp:= `add`(v2, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L53ffde.  v2:= -1I;
  #L53ffe0.  if v1 == v2 then goto L53ffe8;
  #L53ffe4.  v0.`o.e.e` @type ^`int` := v1;
  #L53ffe8.  v1:= v12;
  #L53ffea.  v0.`o.e.c` @type ^`int` := v1;
  #L53ffee.  v1:= v13 @kind object;
  #L53fff0.  v0.`o.e.d` @type ^`java.lang.String` := v1 @kind object;
  #L53fff4.  return @kind void;
}
procedure `void` `e`(`o.e` v10 @kind this, `int` v11 , `int` v12 , `java.lang.String` v13 @kind object, `int` v14 , `float` v15 , `float` v16 , `float` v17 , `float` v18 , `java.lang.Object` v19 @kind object) @signature `Lo/e;.e:(IILjava/lang/String;IFFFFLjava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L540008.  v0:= v10 @kind object;
  #L54000a.  v1:= v14;
  #L54000c.  v2:= v0.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L540010.  v9:= new `o.e$c`;
  #L540014.  v3:= v9 @kind object;
  #L540016.  v4:= v11;
  #L540018.  v5:= v15;
  #L54001a.  v6:= v16;
  #L54001e.  v7:= v17;
  #L540022.  v8:= v18;
  #L540026.  call `<init>`(v3, v4, v5, v6, v7, v8) @signature `Lo/e$c;.<init>:(IFFFF)V` @kind direct;
  #L54002c.  call temp:= `add`(v2, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L540032.  v2:= -1I;
  #L540034.  if v1 == v2 then goto L54003c;
  #L540038.  v0.`o.e.e` @type ^`int` := v1;
  #L54003c.  v1:= v12;
  #L54003e.  v0.`o.e.c` @type ^`int` := v1;
  #L540042.  v1:= v19 @kind object;
  #L540046.  call `c`(v10, v1) @signature `Lo/e;.c:(Ljava/lang/Object;)V` @kind virtual;
  #L54004c.  v1:= v13 @kind object;
  #L54004e.  v0.`o.e.d` @type ^`java.lang.String` := v1 @kind object;
  #L540052.  return @kind void;
}
procedure `void` `f`(`o.e` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lo/e;.f:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L540064.  v0.`o.e.b` @type ^`java.lang.String` := v1 @kind object;
  #L540068.  return @kind void;
}
procedure `void` `g`(`o.e` v15 @kind this, `float` v16 ) @signature `Lo/e;.g:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L54007c.  v0:= v15 @kind object;
  #L54007e.  v1:= v0.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L540082.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L540088.  v1:= temp;
  #L54008a.  if v1 != 0 then goto L540090;
  #L54008e.  return @kind void;
  #L540090.  v2:= v0.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L540094.  v3:= new `o.e$a`;
  #L540098.  call `<init>`(v3, v15) @signature `Lo/e$a;.<init>:(Lo/e;)V` @kind direct;
  #L54009e.  call `sort`(v2, v3) @signature `Ljava/util/Collections;.sort:(Ljava/util/List;Ljava/util/Comparator;)V` @kind static;
  #L5400a4.  v2:= new `double`[v1];
  #L5400a8.  v3:= 3I;
  #L5400aa.  v4:= 2I;
  #L5400ac.  v5:= new `int`[v4];
  #L5400b0.  v6:= 1I;
  #L5400b2.  v5[v6]:= v3;
  #L5400b6.  v3:= 0I;
  #L5400b8.  v5[v3]:= v1;
  #L5400bc.  v7:= constclass @type ^`double` @kind object;
  #L5400c0.  call temp:= `newInstance`(v7, v5) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L5400c6.  v5:= temp @kind object;
  #L5400c8.  v5:= (`double`[][]) v5 @kind object;
  #L5400cc.  v7:= new `o.e$b`;
  #L5400d0.  v8:= v0.`o.e.c` @type ^`int`;
  #L5400d4.  v9:= v0.`o.e.d` @type ^`java.lang.String` @kind object;
  #L5400d8.  v10:= v0.`o.e.e` @type ^`int`;
  #L5400dc.  call `<init>`(v7, v8, v9, v10, v1) @signature `Lo/e$b;.<init>:(ILjava/lang/String;II)V` @kind direct;
  #L5400e2.  v0.`o.e.a` @type ^`o.e$b` := v7 @kind object;
  #L5400e6.  v1:= v0.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L5400ea.  call temp:= `iterator`(v1) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L5400f0.  v1:= temp @kind object;
  #L5400f2.  v14:= 0I;
  #L5400f4.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L5400fa.  v7:= temp;
  #L5400fc.  if v7 == 0 then goto L540168;
  #L540100.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L540106.  v7:= temp @kind object;
  #L540108.  v7:= (`o.e$c`) v7 @kind object;
  #L54010c.  v10:= v7.`o.e$c.d` @type ^`float`;
  #L540110.  v8:= (`double`) v10 @kind f2d;
  #L540112.  v11:= 0.01D;
  #L54011c.  v8:= v8 * v11 @kind double;
  #L540120.  v2[v14]:= v8 @kind wide;
  #L540124.  v8:= v5[v14] @kind object;
  #L540128.  v13:= v7.`o.e$c.b` @type ^`float`;
  #L54012c.  v11:= (`double`) v13 @kind f2d;
  #L54012e.  v8[v3]:= v11 @kind wide;
  #L540132.  v8:= v5[v14] @kind object;
  #L540136.  v11:= v7.`o.e$c.c` @type ^`float`;
  #L54013a.  v3:= (`double`) v11 @kind f2d;
  #L54013c.  v8[v6]:= v3 @kind wide;
  #L540140.  v3:= v5[v14] @kind object;
  #L540144.  v12:= v7.`o.e$c.e` @type ^`float`;
  #L540148.  v8:= (`double`) v12 @kind f2d;
  #L54014a.  v4:= 2I;
  #L54014c.  v3[v4]:= v8 @kind wide;
  #L540150.  v3:= v0.`o.e.a` @type ^`o.e$b` @kind object;
  #L540154.  v9:= v7.`o.e$c.a` @type ^`int`;
  #L540158.  v7:= v3 @kind object;
  #L54015a.  v8:= v14;
  #L54015c.  call `c`(v7, v8, v9, v10, v11, v12, v13) @signature `Lo/e$b;.c:(IIFFFF)V` @kind virtual;
  #L540162.  v14:= v14 + v6 @kind int;
  #L540164.  v3:= 0I;
  #L540166.  goto L5400f4;
  #L540168.  v1:= v0.`o.e.a` @type ^`o.e$b` @kind object;
  #L54016c.  v3:= v16;
  #L540170.  call `d`(v1, v3) @signature `Lo/e$b;.d:(F)V` @kind virtual;
  #L540176.  v1:= 0I;
  #L540178.  call temp:= `a`(v1, v2, v5) @signature `Lo/b;.a:(I[D[[D)Lo/b;` @kind static;
  #L54017e.  return @kind void;
}
procedure `boolean` `h`(`o.e` v2 @kind this) @signature `Lo/e;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L53fe68.  v0:= v2.`o.e.e` @type ^`int`;
  #L53fe6c.  v1:= 1I;
  #L53fe6e.  if v0 != v1 then goto L53fe74;
  #L53fe72.  goto L53fe76;
  #L53fe74.  v1:= 0I;
  #L53fe76.  return v1;
}
procedure `java.lang.String` `toString`(`o.e` v7 @kind this) @signature `Lo/e;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L53fec8.  v0:= v7.`o.e.b` @type ^`java.lang.String` @kind object;
  #L53fecc.  v1:= new `java.text.DecimalFormat`;
  #L53fed0.  v2:= "##.##" @kind object;
  #L53fed4.  call `<init>`(v1, v2) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53feda.  v2:= v7.`o.e.f` @type ^`java.util.ArrayList` @kind object;
  #L53fede.  call temp:= `iterator`(v2) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L53fee4.  v2:= temp @kind object;
  #L53fee6.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L53feec.  v3:= temp;
  #L53feee.  if v3 == 0 then goto L53ff54;
  #L53fef2.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L53fef8.  v3:= temp @kind object;
  #L53fefa.  v3:= (`o.e$c`) v3 @kind object;
  #L53fefe.  v4:= new `java.lang.StringBuilder`;
  #L53ff02.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53ff08.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff0e.  v0:= "[" @kind object;
  #L53ff12.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff18.  v0:= v3.`o.e$c.a` @type ^`int`;
  #L53ff1c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff22.  v0:= " , " @kind object;
  #L53ff26.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff2c.  v0:= v3.`o.e$c.b` @type ^`float`;
  #L53ff30.  v5:= (`double`) v0 @kind f2d;
  #L53ff32.  call temp:= `format`(v1, v5) @signature `Ljava/text/DecimalFormat;.format:(D)Ljava/lang/String;` @kind virtual;
  #L53ff38.  v0:= temp @kind object;
  #L53ff3a.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff40.  v0:= "] " @kind object;
  #L53ff44.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53ff4a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53ff50.  v0:= temp @kind object;
  #L53ff52.  goto L53fee6;
  #L53ff54.  return v0 @kind object;
}
