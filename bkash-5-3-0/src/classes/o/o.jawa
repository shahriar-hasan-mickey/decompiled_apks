record `o.o` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `o.b` `o.o.a` @AccessFlag PROTECTED;
  `int` `o.o.b` @AccessFlag PROTECTED;
  `int`[] `o.o.c` @AccessFlag PROTECTED;
  `float`[][] `o.o.d` @AccessFlag PROTECTED;
  `int` `o.o.e` @AccessFlag PROTECTED;
  `java.lang.String` `o.o.f` @AccessFlag PROTECTED;
  `float`[] `o.o.g` @AccessFlag PROTECTED;
  `boolean` `o.o.h` @AccessFlag PROTECTED;
  `long` `o.o.i` @AccessFlag PROTECTED;
  `float` `o.o.j` @AccessFlag PROTECTED;
}
global `float` `@@o.o.k` @AccessFlag PROTECTED_STATIC;
procedure `void` `<clinit>`() @signature `Lo/o;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L542840.  return @kind void;
}
procedure `void` `<init>`(`o.o` v3 @kind this) @signature `Lo/o;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L542854.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L54285a.  v0:= 0I;
  #L54285c.  v3.`o.o.b` @type ^`int` := v0;
  #L542860.  v1:= 10I;
  #L542864.  v1:= new `int`[v1];
  #L542868.  v3.`o.o.c` @type ^`int`[] := v1 @kind object;
  #L54286c.  v1:= 2I;
  #L54286e.  v1:= new `int`[v1];
  #L542872.  goto L5428a4;
  #L542878.  v2:= constclass @type ^`float` @kind object;
  #L54287c.  call temp:= `newInstance`(v2, v1) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L542882.  v1:= temp @kind object;
  #L542884.  v1:= (`float`[][]) v1 @kind object;
  #L542888.  v3.`o.o.d` @type ^`float`[][] := v1 @kind object;
  #L54288c.  v1:= 3I;
  #L54288e.  v1:= new `float`[v1];
  #L542892.  v3.`o.o.g` @type ^`float`[] := v1 @kind object;
  #L542896.  v3.`o.o.h` @type ^`boolean` := v0 @kind boolean;
  #L54289a.  v0:= NaNF;
  #L54289e.  v3.`o.o.j` @type ^`float` := v0;
  #L5428a2.  return @kind void;
  #L5428a4.  v1:= (10I, 3I) @kind object;
  #L5428b3.  goto L542878;
}
procedure `float` `a`(`o.o` v3 @kind this, `float` v4 ) @signature `Lo/o;.a:(F)F` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L5426f0.  v0:= v3.`o.o.b` @type ^`int`;
  #L5426f4.  v1:= 2.0F;
  #L5426f8.  v2:= 1.0F;
  #L5426fc.  goto L542780;
  #L542702.  v0:= `@@o.o.k` @type ^`float`;
  #L542706.  v4:= v4 * v0 @kind float;
  #L54270a.  v0:= (`double`) v4 @kind f2d;
  #L54270c.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L542712.  v0:= temp @kind wide;
  #L542714.  v4:= (`float`) v0 @kind d2f;
  #L542716.  return v4;
  #L542718.  v0:= 4.0F;
  #L54271c.  v4:= v4 * v0 @kind float;
  #L542720.  v4:= v4 %% v0 @kind float;
  #L542722.  v4:= v4 - v1 @kind float;
  #L542724.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L54272a.  v4:= temp;
  #L54272c.  v4:= v2 - v4 @kind float;
  #L542730.  v4:= v4 * v4 @kind float;
  #L542734.  v2:= v2 - v4 @kind float;
  #L542736.  return v2;
  #L542738.  v0:= `@@o.o.k` @type ^`float`;
  #L54273c.  v4:= v4 * v0 @kind float;
  #L542740.  v0:= (`double`) v4 @kind f2d;
  #L542742.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L542748.  v0:= temp @kind wide;
  #L54274a.  v4:= (`float`) v0 @kind d2f;
  #L54274c.  return v4;
  #L54274e.  v4:= v4 * v1 @kind float;
  #L542752.  v4:= v4 + v2 @kind float;
  #L542754.  v4:= v4 %% v1 @kind float;
  #L542756.  goto L542734;
  #L542758.  v4:= v4 * v1 @kind float;
  #L54275c.  v4:= v4 + v2 @kind float;
  #L54275e.  v4:= v4 %% v1 @kind float;
  #L542760.  v4:= v4 - v2 @kind float;
  #L542762.  return v4;
  #L542764.  call temp:= `abs`(v4) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L54276a.  v4:= temp;
  #L54276c.  goto L542734;
  #L54276e.  v0:= `@@o.o.k` @type ^`float`;
  #L542772.  v4:= v4 * v0 @kind float;
  #L542776.  call temp:= `signum`(v4) @signature `Ljava/lang/Math;.signum:(F)F` @kind static;
  #L54277c.  v4:= temp;
  #L54277e.  return v4;
  #L542780.  switch v0
                  | 1 => goto L54276e
                  | 2 => goto L542764
                  | 3 => goto L542758
                  | 4 => goto L54274e
                  | 5 => goto L542738
                  | 6 => goto L542718
                  | else => goto L542702;
}
procedure `void` `b`(`o.o` v3 @kind this, `int` v4 , `float` v5 , `float` v6 , `int` v7 , `float` v8 ) @signature `Lo/o;.b:(IFFIF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5428c4.  v0:= v3.`o.o.c` @type ^`int`[] @kind object;
  #L5428c8.  v1:= v3.`o.o.e` @type ^`int`;
  #L5428cc.  v0[v1]:= v4;
  #L5428d0.  v4:= v3.`o.o.d` @type ^`float`[][] @kind object;
  #L5428d4.  v0:= v4[v1] @kind object;
  #L5428d8.  v2:= 0I;
  #L5428da.  v0[v2]:= v5;
  #L5428de.  v5:= v4[v1] @kind object;
  #L5428e2.  v0:= 1I;
  #L5428e4.  v5[v0]:= v6;
  #L5428e8.  v4:= v4[v1] @kind object;
  #L5428ec.  v5:= 2I;
  #L5428ee.  v4[v5]:= v8;
  #L5428f2.  v4:= v3.`o.o.b` @type ^`int`;
  #L5428f6.  call temp:= `max`(v4, v7) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L5428fc.  v4:= temp;
  #L5428fe.  v3.`o.o.b` @type ^`int` := v4;
  #L542902.  v4:= v3.`o.o.e` @type ^`int`;
  #L542906.  v4:= v4 + v0 @kind int;
  #L542908.  v3.`o.o.e` @type ^`int` := v4;
  #L54290c.  return @kind void;
}
procedure `void` `c`(`o.o` v0 @kind this, `long` v1 ) @signature `Lo/o;.c:(J)V` @AccessFlag PROTECTED {
    temp;

  #L542920.  v0.`o.o.i` @type ^`long` := v1 @kind wide;
  #L542924.  return @kind void;
}
procedure `void` `d`(`o.o` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lo/o;.d:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L542938.  v0.`o.o.f` @type ^`java.lang.String` := v1 @kind object;
  #L54293c.  return @kind void;
}
procedure `void` `e`(`o.o` v11 @kind this, `int` v12 ) @signature `Lo/o;.e:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L542950.  v0:= v11.`o.o.e` @type ^`int`;
  #L542954.  if v0 != 0 then goto L54298a;
  #L542958.  v12:= `@@java.lang.System.err` @type ^`java.io.PrintStream` @kind object;
  #L54295c.  v0:= new `java.lang.StringBuilder`;
  #L542960.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L542966.  v1:= "Error no points added to " @kind object;
  #L54296a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L542970.  v1:= v11.`o.o.f` @type ^`java.lang.String` @kind object;
  #L542974.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54297a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L542980.  v0:= temp @kind object;
  #L542982.  call `println`(v12, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L542988.  return @kind void;
  #L54298a.  v1:= v11.`o.o.c` @type ^`int`[] @kind object;
  #L54298e.  v2:= v11.`o.o.d` @type ^`float`[][] @kind object;
  #L542992.  v3:= 1I;
  #L542994.  v0:= v0 - v3 @kind int;
  #L542996.  v4:= 0I;
  #L542998.  call `a`(v1, v2, v4, v0) @signature `Lo/o$a;.a:([I[[FII)V` @kind static;
  #L54299e.  v0:= 1I;
  #L5429a0.  v1:= 0I;
  #L5429a2.  v2:= v11.`o.o.c` @type ^`int`[] @kind object;
  #L5429a6.  v5:= length @variable v2;
  #L5429a8.  if v0 >= v5 then goto L5429c6;
  #L5429ac.  v5:= v2[v0];
  #L5429b0.  v6:= v0 + -1;
  #L5429b4.  v2:= v2[v6];
  #L5429b8.  if v5 == v2 then goto L5429c0;
  #L5429bc.  v1:= v1 + 1;
  #L5429c0.  v0:= v0 + 1;
  #L5429c4.  goto L5429a2;
  #L5429c6.  if v1 != 0 then goto L5429cc;
  #L5429ca.  v1:= 1I;
  #L5429cc.  v0:= new `double`[v1];
  #L5429d0.  v2:= 3I;
  #L5429d2.  v5:= 2I;
  #L5429d4.  v6:= new `int`[v5];
  #L5429d8.  v6[v3]:= v2;
  #L5429dc.  v6[v4]:= v1;
  #L5429e0.  v1:= constclass @type ^`double` @kind object;
  #L5429e4.  call temp:= `newInstance`(v1, v6) @signature `Ljava/lang/reflect/Array;.newInstance:(Ljava/lang/Class;[I)Ljava/lang/Object;` @kind static;
  #L5429ea.  v1:= temp @kind object;
  #L5429ec.  v1:= (`double`[][]) v1 @kind object;
  #L5429f0.  v2:= 0I;
  #L5429f2.  v6:= 0I;
  #L5429f4.  v7:= v11.`o.o.e` @type ^`int`;
  #L5429f8.  if v2 >= v7 then goto L542a76;
  #L5429fc.  if v2 <= 0 then goto L542a16;
  #L542a00.  v7:= v11.`o.o.c` @type ^`int`[] @kind object;
  #L542a04.  v8:= v7[v2];
  #L542a08.  v9:= v2 + -1;
  #L542a0c.  v7:= v7[v9];
  #L542a10.  if v8 != v7 then goto L542a16;
  #L542a14.  goto L542a70;
  #L542a16.  v7:= v11.`o.o.c` @type ^`int`[] @kind object;
  #L542a1a.  v7:= v7[v2];
  #L542a1e.  v7:= (`double`) v7 @kind i2d;
  #L542a20.  v9:= 0.01D;
  #L542a2a.  v7:= v7 * v9 @kind double;
  #L542a2e.  v0[v6]:= v7 @kind wide;
  #L542a32.  v7:= v1[v6] @kind object;
  #L542a36.  v8:= v11.`o.o.d` @type ^`float`[][] @kind object;
  #L542a3a.  v9:= v8[v2] @kind object;
  #L542a3e.  v9:= v9[v4];
  #L542a42.  v9:= (`double`) v9 @kind f2d;
  #L542a44.  v7[v4]:= v9 @kind wide;
  #L542a48.  v7:= v1[v6] @kind object;
  #L542a4c.  v9:= v8[v2] @kind object;
  #L542a50.  v9:= v9[v3];
  #L542a54.  v9:= (`double`) v9 @kind f2d;
  #L542a56.  v7[v3]:= v9 @kind wide;
  #L542a5a.  v7:= v1[v6] @kind object;
  #L542a5e.  v8:= v8[v2] @kind object;
  #L542a62.  v8:= v8[v5];
  #L542a66.  v8:= (`double`) v8 @kind f2d;
  #L542a68.  v7[v5]:= v8 @kind wide;
  #L542a6c.  v6:= v6 + 1;
  #L542a70.  v2:= v2 + 1;
  #L542a74.  goto L5429f4;
  #L542a76.  call temp:= `a`(v12, v0, v1) @signature `Lo/b;.a:(I[D[[D)Lo/b;` @kind static;
  #L542a7c.  v12:= temp @kind object;
  #L542a7e.  v11.`o.o.a` @type ^`o.b` := v12 @kind object;
  #L542a82.  return @kind void;
}
procedure `java.lang.String` `toString`(`o.o` v4 @kind this) @signature `Lo/o;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L5427b0.  v0:= v4.`o.o.f` @type ^`java.lang.String` @kind object;
  #L5427b4.  v1:= new `java.text.DecimalFormat`;
  #L5427b8.  v2:= "##.##" @kind object;
  #L5427bc.  call `<init>`(v1, v2) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5427c2.  v2:= 0I;
  #L5427c4.  v3:= v4.`o.o.e` @type ^`int`;
  #L5427c8.  if v2 >= v3 then goto L54282c;
  #L5427cc.  v3:= new `java.lang.StringBuilder`;
  #L5427d0.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L5427d6.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5427dc.  v0:= "[" @kind object;
  #L5427e0.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5427e6.  v0:= v4.`o.o.c` @type ^`int`[] @kind object;
  #L5427ea.  v0:= v0[v2];
  #L5427ee.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L5427f4.  v0:= " , " @kind object;
  #L5427f8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L5427fe.  v0:= v4.`o.o.d` @type ^`float`[][] @kind object;
  #L542802.  v0:= v0[v2] @kind object;
  #L542806.  call temp:= `format`(v1, v0) @signature `Ljava/text/DecimalFormat;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L54280c.  v0:= temp @kind object;
  #L54280e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L542814.  v0:= "] " @kind object;
  #L542818.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54281e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L542824.  v0:= temp @kind object;
  #L542826.  v2:= v2 + 1;
  #L54282a.  goto L5427c4;
  #L54282c.  return v0 @kind object;
}
