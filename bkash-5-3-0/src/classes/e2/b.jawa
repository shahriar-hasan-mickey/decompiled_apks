record `e2.b` @kind class @AccessFlag PUBLIC {
  `java.util.List` `e2.b.a` @AccessFlag PRIVATE;
}
global `boolean` `@@e2.b.b` @AccessFlag PRIVATE_STATIC;
global `e2.a` `@@e2.b.c` @AccessFlag PRIVATE_STATIC;
global `e2.b` `@@e2.b.d` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Le2/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L4faf20.  v0:= `@@java.util.concurrent.TimeUnit.MINUTES` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L4faf24.  v1:= 30L;
  #L4faf28.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L4faf2e.  v0:= new `e2.b`;
  #L4faf32.  call `<init>`(v0) @signature `Le2/b;.<init>:()V` @kind direct;
  #L4faf38.  `@@e2.b.d` @type ^`e2.b` := v0 @kind object;
  #L4faf3c.  return @kind void;
}
procedure `void` `<init>`(`e2.b` v1 @kind this) @signature `Le2/b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4faf50.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4faf56.  v0:= new `java.util.ArrayList`;
  #L4faf5a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4faf60.  v1.`e2.b.a` @type ^`java.util.List` := v0 @kind object;
  #L4faf64.  return @kind void;
}
procedure `e2.b` `a`() @signature `Le2/b;.a:()Le2/b;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L4faf08.  v0:= `@@e2.b.d` @type ^`e2.b` @kind object;
  #L4faf0c.  return v0 @kind object;
}
procedure `boolean` `c`(`e2.b` v0 @kind object, `m2.e` v1 @kind object) @signature `Le2/b;.c:(Le2/b;Lm2/e;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L4fae34.  call temp:= `d`(v0, v1) @signature `Le2/b;.d:(Lm2/e;)Z` @kind direct;
  #L4fae3a.  v0:= temp;
  #L4fae3c.  return v0;
}
procedure `boolean` `d`(`e2.b` v6 @kind this, `m2.e` v7 @kind object) @signature `Le2/b;.d:(Lm2/e;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L4fae50.  v0:= v6.`e2.b.a` @type ^`java.util.List` @kind object;
  #L4fae54.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L4fae5a.  v0:= temp @kind object;
  #L4fae5c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L4fae62.  v1:= temp;
  #L4fae64.  v2:= 0I;
  #L4fae66.  if v1 == 0 then goto L4faec6;
  #L4fae6a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L4fae70.  v1:= temp @kind object;
  #L4fae72.  v1:= (`java.lang.String`[]) v1 @kind object;
  #L4fae76.  v2:= v1[v2] @kind object;
  #L4fae7a.  v3:= v7.`m2.e.b` @type ^`java.lang.String` @kind object;
  #L4fae7e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4fae84.  v2:= temp;
  #L4fae86.  if v2 == 0 then goto L4fae5c;
  #L4fae8a.  v2:= v7.`m2.e.a` @type ^`java.lang.String` @kind object;
  #L4fae8e.  v3:= "\\," @kind object;
  #L4fae92.  call temp:= `split`(v2, v3) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L4fae98.  v2:= temp @kind object;
  #L4fae9a.  v3:= 1I;
  #L4fae9c.  v4:= v1[v3] @kind object;
  #L4faea0.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L4faea6.  v4:= temp;
  #L4faea8.  v5:= length @variable v2;
  #L4faeaa.  if v5 <= v4 then goto L4fae5c;
  #L4faeae.  v5:= 2I;
  #L4faeb0.  v1:= v1[v5] @kind object;
  #L4faeb4.  v2:= v2[v4] @kind object;
  #L4faeb8.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L4faebe.  v1:= temp;
  #L4faec0.  if v1 == 0 then goto L4fae5c;
  #L4faec4.  return v3;
  #L4faec6.  return v2;
}
procedure `boolean` `e`() @signature `Le2/b;.e:()Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4faed8.  v0:= `@@e2.b.b` @type ^`boolean` @kind boolean;
  #L4faedc.  return v0;
}
procedure `e2.a` `f`() @signature `Le2/b;.f:()Le2/a;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L4faef0.  v0:= `@@e2.b.c` @type ^`e2.a` @kind object;
  #L4faef4.  return v0 @kind object;
}
procedure `void` `g`(`e2.b` v2 @kind this) @signature `Le2/b;.g:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4faf98.  call temp:= `a`() @signature `Lf2/e;.a:()Lx1/c;` @kind static;
  #L4faf9e.  v0:= temp @kind object;
  #L4fafa0.  v1:= new `e2.c`;
  #L4fafa4.  call `<init>`(v1, v2) @signature `Le2/c;.<init>:(Le2/b;)V` @kind direct;
  #L4fafaa.  call `v`(v0, v1) @signature `Lx1/c;.v:(Lm2/b;)V` @kind interface;
  #L4fafb0.  return @kind void;
}
procedure `void` `h`(`e2.b` v2 @kind this) @signature `Le2/b;.h:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L4fafc4.  call temp:= `a`() @signature `Lq2/b;.a:()Lq2/b;` @kind static;
  #L4fafca.  v0:= temp @kind object;
  #L4fafcc.  v1:= new `e2.d`;
  #L4fafd0.  call `<init>`(v1, v2) @signature `Le2/d;.<init>:(Le2/b;)V` @kind direct;
  #L4fafd6.  call `b`(v0, v1) @signature `Lq2/b;.b:(Lq2/a;)V` @kind virtual;
  #L4fafdc.  return @kind void;
}
procedure `void` `b`(`e2.b` v0 @kind this, `android.app.Application` v1 @kind object) @signature `Le2/b;.b:(Landroid/app/Application;)V` @AccessFlag PUBLIC {
    temp;

  #L4faf78.  call `h`(v0) @signature `Le2/b;.h:()V` @kind direct;
  #L4faf7e.  call `g`(v0) @signature `Le2/b;.g:()V` @kind direct;
  #L4faf84.  return @kind void;
}
