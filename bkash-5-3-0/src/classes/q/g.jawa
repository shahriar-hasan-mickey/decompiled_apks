record `q.g` @kind class @AccessFlag PUBLIC extends `q.m` @kind class {
  `int` `q.g.A1` @AccessFlag PRIVATE;
  `int` `q.g.c1` @AccessFlag PRIVATE;
  `int` `q.g.d1` @AccessFlag PRIVATE;
  `int` `q.g.e1` @AccessFlag PRIVATE;
  `int` `q.g.f1` @AccessFlag PRIVATE;
  `int` `q.g.g1` @AccessFlag PRIVATE;
  `int` `q.g.h1` @AccessFlag PRIVATE;
  `float` `q.g.i1` @AccessFlag PRIVATE;
  `float` `q.g.j1` @AccessFlag PRIVATE;
  `float` `q.g.k1` @AccessFlag PRIVATE;
  `float` `q.g.l1` @AccessFlag PRIVATE;
  `float` `q.g.m1` @AccessFlag PRIVATE;
  `float` `q.g.n1` @AccessFlag PRIVATE;
  `int` `q.g.o1` @AccessFlag PRIVATE;
  `int` `q.g.p1` @AccessFlag PRIVATE;
  `int` `q.g.q1` @AccessFlag PRIVATE;
  `int` `q.g.r1` @AccessFlag PRIVATE;
  `int` `q.g.s1` @AccessFlag PRIVATE;
  `int` `q.g.t1` @AccessFlag PRIVATE;
  `int` `q.g.u1` @AccessFlag PRIVATE;
  `java.util.ArrayList` `q.g.v1` @AccessFlag PRIVATE;
  `q.e`[] `q.g.w1` @AccessFlag PRIVATE;
  `q.e`[] `q.g.x1` @AccessFlag PRIVATE;
  `int`[] `q.g.y1` @AccessFlag PRIVATE;
  `q.e`[] `q.g.z1` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q.g` v3 @kind this) @signature `Lq/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L552aac.  call `<init>`(v3) @signature `Lq/m;.<init>:()V` @kind direct;
  #L552ab2.  v0:= -1I;
  #L552ab4.  v3.`q.g.c1` @type ^`int` := v0;
  #L552ab8.  v3.`q.g.d1` @type ^`int` := v0;
  #L552abc.  v3.`q.g.e1` @type ^`int` := v0;
  #L552ac0.  v3.`q.g.f1` @type ^`int` := v0;
  #L552ac4.  v3.`q.g.g1` @type ^`int` := v0;
  #L552ac8.  v3.`q.g.h1` @type ^`int` := v0;
  #L552acc.  v1:= 0.5F;
  #L552ad0.  v3.`q.g.i1` @type ^`float` := v1;
  #L552ad4.  v3.`q.g.j1` @type ^`float` := v1;
  #L552ad8.  v3.`q.g.k1` @type ^`float` := v1;
  #L552adc.  v3.`q.g.l1` @type ^`float` := v1;
  #L552ae0.  v3.`q.g.m1` @type ^`float` := v1;
  #L552ae4.  v3.`q.g.n1` @type ^`float` := v1;
  #L552ae8.  v1:= 0I;
  #L552aea.  v3.`q.g.o1` @type ^`int` := v1;
  #L552aee.  v3.`q.g.p1` @type ^`int` := v1;
  #L552af2.  v2:= 2I;
  #L552af4.  v3.`q.g.q1` @type ^`int` := v2;
  #L552af8.  v3.`q.g.r1` @type ^`int` := v2;
  #L552afc.  v3.`q.g.s1` @type ^`int` := v1;
  #L552b00.  v3.`q.g.t1` @type ^`int` := v0;
  #L552b04.  v3.`q.g.u1` @type ^`int` := v1;
  #L552b08.  v0:= new `java.util.ArrayList`;
  #L552b0c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L552b12.  v3.`q.g.v1` @type ^`java.util.ArrayList` := v0 @kind object;
  #L552b16.  v0:= 0I;
  #L552b18.  v3.`q.g.w1` @type ^`q.e`[] := v0 @kind object;
  #L552b1c.  v3.`q.g.x1` @type ^`q.e`[] := v0 @kind object;
  #L552b20.  v3.`q.g.y1` @type ^`int`[] := v0 @kind object;
  #L552b24.  v3.`q.g.A1` @type ^`int` := v1;
  #L552b28.  return @kind void;
}
procedure `int` `M1`(`q.g` v0 @kind object) @signature `Lq/g;.M1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5527ec.  v0:= v0.`q.g.o1` @type ^`int`;
  #L5527f0.  return v0;
}
procedure `int` `N1`(`q.g` v0 @kind object) @signature `Lq/g;.N1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552804.  v0:= v0.`q.g.p1` @type ^`int`;
  #L552808.  return v0;
}
procedure `int` `O1`(`q.g` v0 @kind object) @signature `Lq/g;.O1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L55281c.  v0:= v0.`q.g.e1` @type ^`int`;
  #L552820.  return v0;
}
procedure `float` `P1`(`q.g` v0 @kind object) @signature `Lq/g;.P1:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L55275c.  v0:= v0.`q.g.k1` @type ^`float`;
  #L552760.  return v0;
}
procedure `int` `Q1`(`q.g` v0 @kind object) @signature `Lq/g;.Q1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552834.  v0:= v0.`q.g.g1` @type ^`int`;
  #L552838.  return v0;
}
procedure `float` `R1`(`q.g` v0 @kind object) @signature `Lq/g;.R1:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552774.  v0:= v0.`q.g.m1` @type ^`float`;
  #L552778.  return v0;
}
procedure `float` `S1`(`q.g` v0 @kind object) @signature `Lq/g;.S1:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L55278c.  v0:= v0.`q.g.j1` @type ^`float`;
  #L552790.  return v0;
}
procedure `int` `T1`(`q.g` v0 @kind object) @signature `Lq/g;.T1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L55284c.  v0:= v0.`q.g.f1` @type ^`int`;
  #L552850.  return v0;
}
procedure `float` `U1`(`q.g` v0 @kind object) @signature `Lq/g;.U1:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5527a4.  v0:= v0.`q.g.l1` @type ^`float`;
  #L5527a8.  return v0;
}
procedure `int` `V1`(`q.g` v0 @kind object) @signature `Lq/g;.V1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552864.  v0:= v0.`q.g.h1` @type ^`int`;
  #L552868.  return v0;
}
procedure `float` `W1`(`q.g` v0 @kind object) @signature `Lq/g;.W1:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5527bc.  v0:= v0.`q.g.n1` @type ^`float`;
  #L5527c0.  return v0;
}
procedure `int` `X1`(`q.g` v0 @kind object) @signature `Lq/g;.X1:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L55287c.  v0:= v0.`q.g.q1` @type ^`int`;
  #L552880.  return v0;
}
procedure `int` `Y1`(`q.g` v0 @kind object, `q.e` v1 @kind object, `int` v2 ) @signature `Lq/g;.Y1:(Lq/g;Lq/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552894.  call temp:= `i2`(v0, v1, v2) @signature `Lq/g;.i2:(Lq/e;I)I` @kind direct;
  #L55289a.  v0:= temp;
  #L55289c.  return v0;
}
procedure `int` `Z1`(`q.g` v0 @kind object, `q.e` v1 @kind object, `int` v2 ) @signature `Lq/g;.Z1:(Lq/g;Lq/e;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5528b0.  call temp:= `h2`(v0, v1, v2) @signature `Lq/g;.h2:(Lq/e;I)I` @kind direct;
  #L5528b6.  v0:= temp;
  #L5528b8.  return v0;
}
procedure `int` `a2`(`q.g` v0 @kind object) @signature `Lq/g;.a2:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5528cc.  v0:= v0.`q.g.A1` @type ^`int`;
  #L5528d0.  return v0;
}
procedure `q.e`[] `b2`(`q.g` v0 @kind object) @signature `Lq/g;.b2:(Lq/g;)[Lq/e;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552a94.  v0:= v0.`q.g.z1` @type ^`q.e`[] @kind object;
  #L552a98.  return v0 @kind object;
}
procedure `int` `c2`(`q.g` v0 @kind object) @signature `Lq/g;.c2:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5528e4.  v0:= v0.`q.g.d1` @type ^`int`;
  #L5528e8.  return v0;
}
procedure `int` `d2`(`q.g` v0 @kind object) @signature `Lq/g;.d2:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5528fc.  v0:= v0.`q.g.r1` @type ^`int`;
  #L552900.  return v0;
}
procedure `int` `e2`(`q.g` v0 @kind object) @signature `Lq/g;.e2:(Lq/g;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L552914.  v0:= v0.`q.g.c1` @type ^`int`;
  #L552918.  return v0;
}
procedure `float` `f2`(`q.g` v0 @kind object) @signature `Lq/g;.f2:(Lq/g;)F` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L5527d4.  v0:= v0.`q.g.i1` @type ^`float`;
  #L5527d8.  return v0;
}
procedure `void` `g2`(`q.g` v11 @kind this, `boolean` v12 ) @signature `Lq/g;.g2:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L552cbc.  v0:= v11.`q.g.y1` @type ^`int`[] @kind object;
  #L552cc0.  if v0 == 0 then goto L552efe;
  #L552cc4.  v0:= v11.`q.g.x1` @type ^`q.e`[] @kind object;
  #L552cc8.  if v0 == 0 then goto L552efe;
  #L552ccc.  v0:= v11.`q.g.w1` @type ^`q.e`[] @kind object;
  #L552cd0.  if v0 != 0 then goto L552cd8;
  #L552cd4.  goto L552efe;
  #L552cd8.  v0:= 0I;
  #L552cda.  v1:= 0I;
  #L552cdc.  v2:= v11.`q.g.A1` @type ^`int`;
  #L552ce0.  if v1 >= v2 then goto L552cf8;
  #L552ce4.  v2:= v11.`q.g.z1` @type ^`q.e`[] @kind object;
  #L552ce8.  v2:= v2[v1] @kind object;
  #L552cec.  call `u0`(v2) @signature `Lq/e;.u0:()V` @kind virtual;
  #L552cf2.  v1:= v1 + 1;
  #L552cf6.  goto L552cdc;
  #L552cf8.  v1:= v11.`q.g.y1` @type ^`int`[] @kind object;
  #L552cfc.  v2:= v1[v0];
  #L552d00.  v3:= 1I;
  #L552d02.  v1:= v1[v3];
  #L552d06.  v4:= 0I;
  #L552d08.  v5:= v11.`q.g.i1` @type ^`float`;
  #L552d0c.  v6:= 0I;
  #L552d0e.  v7:= 8I;
  #L552d12.  if v6 >= v2 then goto L552dc4;
  #L552d16.  if v12 == 0 then goto L552d2c;
  #L552d1a.  v5:= v2 - v6 @kind int;
  #L552d1e.  v5:= v5 - v3 @kind int;
  #L552d20.  v8:= 1.0F;
  #L552d24.  v9:= v11.`q.g.i1` @type ^`float`;
  #L552d28.  v8:= v8 - v9 @kind float;
  #L552d2a.  goto L552d30;
  #L552d2c.  v8:= v5;
  #L552d2e.  v5:= v6;
  #L552d30.  v9:= v11.`q.g.x1` @type ^`q.e`[] @kind object;
  #L552d34.  v5:= v9[v5] @kind object;
  #L552d38.  if v5 == 0 then goto L552dbc;
  #L552d3c.  call temp:= `U`(v5) @signature `Lq/e;.U:()I` @kind virtual;
  #L552d42.  v9:= temp;
  #L552d44.  if v9 != v7 then goto L552d4a;
  #L552d48.  goto L552dbc;
  #L552d4a.  if v6 != 0 then goto L552d74;
  #L552d4e.  v7:= v5.`q.e.M` @type ^`q.d` @kind object;
  #L552d52.  v9:= v11.`q.e.M` @type ^`q.d` @kind object;
  #L552d56.  call temp:= `w1`(v11) @signature `Lq/m;.w1:()I` @kind virtual;
  #L552d5c.  v10:= temp;
  #L552d5e.  call `l`(v5, v7, v9, v10) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552d64.  v7:= v11.`q.g.c1` @type ^`int`;
  #L552d68.  call `K0`(v5, v7) @signature `Lq/e;.K0:(I)V` @kind virtual;
  #L552d6e.  call `J0`(v5, v8) @signature `Lq/e;.J0:(F)V` @kind virtual;
  #L552d74.  v7:= v2 + -1;
  #L552d78.  if v6 != v7 then goto L552d92;
  #L552d7c.  v7:= v5.`q.e.O` @type ^`q.d` @kind object;
  #L552d80.  v9:= v11.`q.e.O` @type ^`q.d` @kind object;
  #L552d84.  call temp:= `x1`(v11) @signature `Lq/m;.x1:()I` @kind virtual;
  #L552d8a.  v10:= temp;
  #L552d8c.  call `l`(v5, v7, v9, v10) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552d92.  if v6 <= 0 then goto L552dba;
  #L552d96.  if v4 == 0 then goto L552dba;
  #L552d9a.  v7:= v5.`q.e.M` @type ^`q.d` @kind object;
  #L552d9e.  v9:= v4.`q.e.O` @type ^`q.d` @kind object;
  #L552da2.  v10:= v11.`q.g.o1` @type ^`int`;
  #L552da6.  call `l`(v5, v7, v9, v10) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552dac.  v7:= v4.`q.e.O` @type ^`q.d` @kind object;
  #L552db0.  v9:= v5.`q.e.M` @type ^`q.d` @kind object;
  #L552db4.  call `l`(v4, v7, v9, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552dba.  v4:= v5 @kind object;
  #L552dbc.  v6:= v6 + 1;
  #L552dc0.  v5:= v8;
  #L552dc2.  goto L552d0e;
  #L552dc4.  v12:= 0I;
  #L552dc6.  if v12 >= v1 then goto L552e60;
  #L552dca.  v5:= v11.`q.g.w1` @type ^`q.e`[] @kind object;
  #L552dce.  v5:= v5[v12] @kind object;
  #L552dd2.  if v5 == 0 then goto L552e5a;
  #L552dd6.  call temp:= `U`(v5) @signature `Lq/e;.U:()I` @kind virtual;
  #L552ddc.  v6:= temp;
  #L552dde.  if v6 != v7 then goto L552de4;
  #L552de2.  goto L552e5a;
  #L552de4.  if v12 != 0 then goto L552e12;
  #L552de8.  v6:= v5.`q.e.N` @type ^`q.d` @kind object;
  #L552dec.  v8:= v11.`q.e.N` @type ^`q.d` @kind object;
  #L552df0.  call temp:= `y1`(v11) @signature `Lq/m;.y1:()I` @kind virtual;
  #L552df6.  v9:= temp;
  #L552df8.  call `l`(v5, v6, v8, v9) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552dfe.  v6:= v11.`q.g.d1` @type ^`int`;
  #L552e02.  call `b1`(v5, v6) @signature `Lq/e;.b1:(I)V` @kind virtual;
  #L552e08.  v6:= v11.`q.g.j1` @type ^`float`;
  #L552e0c.  call `a1`(v5, v6) @signature `Lq/e;.a1:(F)V` @kind virtual;
  #L552e12.  v6:= v1 + -1;
  #L552e16.  if v12 != v6 then goto L552e30;
  #L552e1a.  v6:= v5.`q.e.P` @type ^`q.d` @kind object;
  #L552e1e.  v8:= v11.`q.e.P` @type ^`q.d` @kind object;
  #L552e22.  call temp:= `v1`(v11) @signature `Lq/m;.v1:()I` @kind virtual;
  #L552e28.  v9:= temp;
  #L552e2a.  call `l`(v5, v6, v8, v9) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552e30.  if v12 <= 0 then goto L552e58;
  #L552e34.  if v4 == 0 then goto L552e58;
  #L552e38.  v6:= v5.`q.e.N` @type ^`q.d` @kind object;
  #L552e3c.  v8:= v4.`q.e.P` @type ^`q.d` @kind object;
  #L552e40.  v9:= v11.`q.g.p1` @type ^`int`;
  #L552e44.  call `l`(v5, v6, v8, v9) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552e4a.  v6:= v4.`q.e.P` @type ^`q.d` @kind object;
  #L552e4e.  v8:= v5.`q.e.N` @type ^`q.d` @kind object;
  #L552e52.  call `l`(v4, v6, v8, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552e58.  v4:= v5 @kind object;
  #L552e5a.  v12:= v12 + 1;
  #L552e5e.  goto L552dc6;
  #L552e60.  v12:= 0I;
  #L552e62.  if v12 >= v2 then goto L552efe;
  #L552e66.  v4:= 0I;
  #L552e68.  if v4 >= v1 then goto L552ef8;
  #L552e6c.  v5:= v4 * v2 @kind int;
  #L552e70.  v5:= v5 + v12 @kind int;
  #L552e72.  v6:= v11.`q.g.u1` @type ^`int`;
  #L552e76.  if v6 != v3 then goto L552e80;
  #L552e7a.  v5:= v12 * v1 @kind int;
  #L552e7e.  v5:= v5 + v4 @kind int;
  #L552e80.  v6:= v11.`q.g.z1` @type ^`q.e`[] @kind object;
  #L552e84.  v8:= length @variable v6;
  #L552e86.  if v5 < v8 then goto L552e8c;
  #L552e8a.  goto L552ef2;
  #L552e8c.  v5:= v6[v5] @kind object;
  #L552e90.  if v5 == 0 then goto L552ef2;
  #L552e94.  call temp:= `U`(v5) @signature `Lq/e;.U:()I` @kind virtual;
  #L552e9a.  v6:= temp;
  #L552e9c.  if v6 != v7 then goto L552ea2;
  #L552ea0.  goto L552ef2;
  #L552ea2.  v6:= v11.`q.g.x1` @type ^`q.e`[] @kind object;
  #L552ea6.  v6:= v6[v12] @kind object;
  #L552eaa.  v8:= v11.`q.g.w1` @type ^`q.e`[] @kind object;
  #L552eae.  v8:= v8[v4] @kind object;
  #L552eb2.  if v5 == v6 then goto L552ed2;
  #L552eb6.  v9:= v5.`q.e.M` @type ^`q.d` @kind object;
  #L552eba.  v10:= v6.`q.e.M` @type ^`q.d` @kind object;
  #L552ebe.  call `l`(v5, v9, v10, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552ec4.  v9:= v5.`q.e.O` @type ^`q.d` @kind object;
  #L552ec8.  v6:= v6.`q.e.O` @type ^`q.d` @kind object;
  #L552ecc.  call `l`(v5, v9, v6, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552ed2.  if v5 == v8 then goto L552ef2;
  #L552ed6.  v6:= v5.`q.e.N` @type ^`q.d` @kind object;
  #L552eda.  v9:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L552ede.  call `l`(v5, v6, v9, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552ee4.  v6:= v5.`q.e.P` @type ^`q.d` @kind object;
  #L552ee8.  v8:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L552eec.  call `l`(v5, v6, v8, v0) @signature `Lq/e;.l:(Lq/d;Lq/d;I)V` @kind virtual;
  #L552ef2.  v4:= v4 + 1;
  #L552ef6.  goto L552e68;
  #L552ef8.  v12:= v12 + 1;
  #L552efc.  goto L552e62;
  #L552efe.  return @kind void;
}
procedure `int` `h2`(`q.g` v9 @kind this, `q.e` v10 @kind object, `int` v11 ) @signature `Lq/g;.h2:(Lq/e;I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L55292c.  v0:= 0I;
  #L55292e.  if v10 != 0 then goto L552934;
  #L552932.  return v0;
  #L552934.  call temp:= `S`(v10) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L55293a.  v1:= temp @kind object;
  #L55293c.  v2:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L552940.  if v1 != v2 then goto L5529c6;
  #L552944.  v1:= v10.`q.e.t` @type ^`int`;
  #L552948.  if v1 != 0 then goto L55294e;
  #L55294c.  return v0;
  #L55294e.  v0:= 2I;
  #L552950.  v2:= 1I;
  #L552952.  if v1 != v0 then goto L552996;
  #L552956.  v0:= v10.`q.e.A` @type ^`float`;
  #L55295a.  v11:= (`float`) v11 @kind i2f;
  #L55295c.  v0:= v0 * v11 @kind float;
  #L552960.  v11:= (`int`) v0 @kind f2i;
  #L552962.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L552968.  v0:= temp;
  #L55296a.  if v11 == v0 then goto L552994;
  #L55296e.  call `V0`(v10, v2) @signature `Lq/e;.V0:(Z)V` @kind virtual;
  #L552974.  call temp:= `C`(v10) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L55297a.  v5:= temp @kind object;
  #L55297c.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L552982.  v6:= temp;
  #L552984.  v7:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L552988.  v3:= v9 @kind object;
  #L55298a.  v4:= v10 @kind object;
  #L55298c.  v8:= v11;
  #L55298e.  call `A1`(v3, v4, v5, v6, v7, v8) @signature `Lq/m;.A1:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind virtual;
  #L552994.  return v11;
  #L552996.  if v1 != v2 then goto L5529a4;
  #L55299a.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L5529a0.  v10:= temp;
  #L5529a2.  return v10;
  #L5529a4.  v11:= 3I;
  #L5529a6.  if v1 != v11 then goto L5529c6;
  #L5529aa.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L5529b0.  v11:= temp;
  #L5529b2.  v11:= (`float`) v11 @kind i2f;
  #L5529b4.  v10:= v10.`q.e.b0` @type ^`float`;
  #L5529b8.  v11:= v11 * v10 @kind float;
  #L5529bc.  v10:= 0.5F;
  #L5529c0.  v11:= v11 + v10 @kind float;
  #L5529c2.  v10:= (`int`) v11 @kind f2i;
  #L5529c4.  return v10;
  #L5529c6.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L5529cc.  v10:= temp;
  #L5529ce.  return v10;
}
procedure `int` `i2`(`q.g` v9 @kind this, `q.e` v10 @kind object, `int` v11 ) @signature `Lq/g;.i2:(Lq/e;I)I` @AccessFlag PRIVATE_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L5529e0.  v0:= 0I;
  #L5529e2.  if v10 != 0 then goto L5529e8;
  #L5529e6.  return v0;
  #L5529e8.  call temp:= `C`(v10) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L5529ee.  v1:= temp @kind object;
  #L5529f0.  v2:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L5529f4.  if v1 != v2 then goto L552a7a;
  #L5529f8.  v1:= v10.`q.e.s` @type ^`int`;
  #L5529fc.  if v1 != 0 then goto L552a02;
  #L552a00.  return v0;
  #L552a02.  v0:= 2I;
  #L552a04.  v2:= 1I;
  #L552a06.  if v1 != v0 then goto L552a4a;
  #L552a0a.  v0:= v10.`q.e.x` @type ^`float`;
  #L552a0e.  v11:= (`float`) v11 @kind i2f;
  #L552a10.  v0:= v0 * v11 @kind float;
  #L552a14.  v11:= (`int`) v0 @kind f2i;
  #L552a16.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L552a1c.  v0:= temp;
  #L552a1e.  if v11 == v0 then goto L552a48;
  #L552a22.  call `V0`(v10, v2) @signature `Lq/e;.V0:(Z)V` @kind virtual;
  #L552a28.  v5:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L552a2c.  call temp:= `S`(v10) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L552a32.  v7:= temp @kind object;
  #L552a34.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L552a3a.  v8:= temp;
  #L552a3c.  v3:= v9 @kind object;
  #L552a3e.  v4:= v10 @kind object;
  #L552a40.  v6:= v11;
  #L552a42.  call `A1`(v3, v4, v5, v6, v7, v8) @signature `Lq/m;.A1:(Lq/e;Lq/e$b;ILq/e$b;I)V` @kind virtual;
  #L552a48.  return v11;
  #L552a4a.  if v1 != v2 then goto L552a58;
  #L552a4e.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L552a54.  v10:= temp;
  #L552a56.  return v10;
  #L552a58.  v11:= 3I;
  #L552a5a.  if v1 != v11 then goto L552a7a;
  #L552a5e.  call temp:= `z`(v10) @signature `Lq/e;.z:()I` @kind virtual;
  #L552a64.  v11:= temp;
  #L552a66.  v11:= (`float`) v11 @kind i2f;
  #L552a68.  v10:= v10.`q.e.b0` @type ^`float`;
  #L552a6c.  v11:= v11 * v10 @kind float;
  #L552a70.  v10:= 0.5F;
  #L552a74.  v11:= v11 + v10 @kind float;
  #L552a76.  v10:= (`int`) v11 @kind f2i;
  #L552a78.  return v10;
  #L552a7a.  call temp:= `V`(v10) @signature `Lq/e;.V:()I` @kind virtual;
  #L552a80.  v10:= temp;
  #L552a82.  return v10;
}
procedure `void` `j2`(`q.g` v16 @kind this, `q.e`[] v17 @kind object, `int` v18 , `int` v19 , `int` v20 , `int`[] v21 @kind object) @signature `Lq/g;.j2:([Lq/e;III[I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L553134.  v0:= v16 @kind object;
  #L553138.  v1:= v17 @kind object;
  #L55313c.  v2:= v18;
  #L553140.  v3:= v19;
  #L553144.  v4:= v20;
  #L553148.  v5:= 0I;
  #L55314a.  if v3 != 0 then goto L553194;
  #L55314e.  v6:= v0.`q.g.t1` @type ^`int`;
  #L553152.  if v6 > 0 then goto L55318e;
  #L553156.  v6:= 0I;
  #L553158.  v7:= 0I;
  #L55315a.  v8:= 0I;
  #L55315c.  if v7 >= v2 then goto L55318e;
  #L553160.  if v7 <= 0 then goto L55316a;
  #L553164.  v9:= v0.`q.g.o1` @type ^`int`;
  #L553168.  v8:= v8 + v9 @kind int;
  #L55316a.  v9:= v1[v7] @kind object;
  #L55316e.  if v9 != 0 then goto L553174;
  #L553172.  goto L553188;
  #L553174.  call temp:= `i2`(v0, v9, v4) @signature `Lq/g;.i2:(Lq/e;I)I` @kind direct;
  #L55317a.  v9:= temp;
  #L55317c.  v8:= v8 + v9 @kind int;
  #L55317e.  if v8 <= v4 then goto L553184;
  #L553182.  goto L55318e;
  #L553184.  v6:= v6 + 1;
  #L553188.  v7:= v7 + 1;
  #L55318c.  goto L55315c;
  #L55318e.  v7:= v6;
  #L553190.  v6:= 0I;
  #L553192.  goto L5531d6;
  #L553194.  v6:= v0.`q.g.t1` @type ^`int`;
  #L553198.  if v6 > 0 then goto L5531d4;
  #L55319c.  v6:= 0I;
  #L55319e.  v7:= 0I;
  #L5531a0.  v8:= 0I;
  #L5531a2.  if v7 >= v2 then goto L5531d4;
  #L5531a6.  if v7 <= 0 then goto L5531b0;
  #L5531aa.  v9:= v0.`q.g.p1` @type ^`int`;
  #L5531ae.  v8:= v8 + v9 @kind int;
  #L5531b0.  v9:= v1[v7] @kind object;
  #L5531b4.  if v9 != 0 then goto L5531ba;
  #L5531b8.  goto L5531ce;
  #L5531ba.  call temp:= `h2`(v0, v9, v4) @signature `Lq/g;.h2:(Lq/e;I)I` @kind direct;
  #L5531c0.  v9:= temp;
  #L5531c2.  v8:= v8 + v9 @kind int;
  #L5531c4.  if v8 <= v4 then goto L5531ca;
  #L5531c8.  goto L5531d4;
  #L5531ca.  v6:= v6 + 1;
  #L5531ce.  v7:= v7 + 1;
  #L5531d2.  goto L5531a2;
  #L5531d4.  v7:= 0I;
  #L5531d6.  v8:= v0.`q.g.y1` @type ^`int`[] @kind object;
  #L5531da.  if v8 != 0 then goto L5531e8;
  #L5531de.  v8:= 2I;
  #L5531e0.  v8:= new `int`[v8];
  #L5531e4.  v0.`q.g.y1` @type ^`int`[] := v8 @kind object;
  #L5531e8.  v8:= 1I;
  #L5531ea.  if v6 != 0 then goto L5531f2;
  #L5531ee.  if v3 == v8 then goto L5531fa;
  #L5531f2.  if v7 != 0 then goto L5531fe;
  #L5531f6.  if v3 != 0 then goto L5531fe;
  #L5531fa.  v9:= 1I;
  #L5531fc.  goto L553200;
  #L5531fe.  v9:= 0I;
  #L553200.  if v9 != 0 then goto L55338a;
  #L553204.  if v3 != 0 then goto L55321c;
  #L553208.  v6:= (`float`) v2 @kind i2f;
  #L55320a.  v10:= (`float`) v7 @kind i2f;
  #L55320c.  v6:= v6 / v10 @kind float;
  #L55320e.  v10:= (`double`) v6 @kind f2d;
  #L553210.  call temp:= `ceil`(v10) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L553216.  v10:= temp @kind wide;
  #L553218.  v6:= (`int`) v10 @kind d2i;
  #L55321a.  goto L55322e;
  #L55321c.  v7:= (`float`) v2 @kind i2f;
  #L55321e.  v10:= (`float`) v6 @kind i2f;
  #L553220.  v7:= v7 / v10 @kind float;
  #L553222.  v10:= (`double`) v7 @kind f2d;
  #L553224.  call temp:= `ceil`(v10) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L55322a.  v10:= temp @kind wide;
  #L55322c.  v7:= (`int`) v10 @kind d2i;
  #L55322e.  v10:= v0.`q.g.x1` @type ^`q.e`[] @kind object;
  #L553232.  v11:= 0I;
  #L553234.  if v10 == 0 then goto L553248;
  #L553238.  v12:= length @variable v10;
  #L55323a.  if v12 >= v7 then goto L553240;
  #L55323e.  goto L553248;
  #L553240.  call `fill`(v10, v11) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L553246.  goto L553250;
  #L553248.  v10:= new `q.e`[v7];
  #L55324c.  v0.`q.g.x1` @type ^`q.e`[] := v10 @kind object;
  #L553250.  v10:= v0.`q.g.w1` @type ^`q.e`[] @kind object;
  #L553254.  if v10 == 0 then goto L553268;
  #L553258.  v12:= length @variable v10;
  #L55325a.  if v12 >= v6 then goto L553260;
  #L55325e.  goto L553268;
  #L553260.  call `fill`(v10, v11) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L553266.  goto L553270;
  #L553268.  v10:= new `q.e`[v6];
  #L55326c.  v0.`q.g.w1` @type ^`q.e`[] := v10 @kind object;
  #L553270.  v10:= 0I;
  #L553272.  if v10 >= v7 then goto L553302;
  #L553276.  v11:= 0I;
  #L553278.  if v11 >= v6 then goto L5532fc;
  #L55327c.  v12:= v11 * v7 @kind int;
  #L553280.  v12:= v12 + v10 @kind int;
  #L553282.  if v3 != v8 then goto L55328c;
  #L553286.  v12:= v10 * v6 @kind int;
  #L55328a.  v12:= v12 + v11 @kind int;
  #L55328c.  v13:= length @variable v1;
  #L55328e.  if v12 < v13 then goto L553294;
  #L553292.  goto L5532f6;
  #L553294.  v12:= v1[v12] @kind object;
  #L553298.  if v12 != 0 then goto L55329e;
  #L55329c.  goto L5532f6;
  #L55329e.  call temp:= `i2`(v0, v12, v4) @signature `Lq/g;.i2:(Lq/e;I)I` @kind direct;
  #L5532a4.  v13:= temp;
  #L5532a6.  v14:= v0.`q.g.x1` @type ^`q.e`[] @kind object;
  #L5532aa.  v15:= v14[v10] @kind object;
  #L5532ae.  if v15 == 0 then goto L5532c2;
  #L5532b2.  v14:= v14[v10] @kind object;
  #L5532b6.  call temp:= `V`(v14) @signature `Lq/e;.V:()I` @kind virtual;
  #L5532bc.  v14:= temp;
  #L5532be.  if v14 >= v13 then goto L5532ca;
  #L5532c2.  v13:= v0.`q.g.x1` @type ^`q.e`[] @kind object;
  #L5532c6.  v13[v10]:= v12 @kind object;
  #L5532ca.  call temp:= `h2`(v0, v12, v4) @signature `Lq/g;.h2:(Lq/e;I)I` @kind direct;
  #L5532d0.  v13:= temp;
  #L5532d2.  v14:= v0.`q.g.w1` @type ^`q.e`[] @kind object;
  #L5532d6.  v15:= v14[v11] @kind object;
  #L5532da.  if v15 == 0 then goto L5532ee;
  #L5532de.  v14:= v14[v11] @kind object;
  #L5532e2.  call temp:= `z`(v14) @signature `Lq/e;.z:()I` @kind virtual;
  #L5532e8.  v14:= temp;
  #L5532ea.  if v14 >= v13 then goto L5532f6;
  #L5532ee.  v13:= v0.`q.g.w1` @type ^`q.e`[] @kind object;
  #L5532f2.  v13[v11]:= v12 @kind object;
  #L5532f6.  v11:= v11 + 1;
  #L5532fa.  goto L553278;
  #L5532fc.  v10:= v10 + 1;
  #L553300.  goto L553272;
  #L553302.  v10:= 0I;
  #L553304.  v11:= 0I;
  #L553306.  if v10 >= v7 then goto L553330;
  #L55330a.  v12:= v0.`q.g.x1` @type ^`q.e`[] @kind object;
  #L55330e.  v12:= v12[v10] @kind object;
  #L553312.  if v12 == 0 then goto L55332a;
  #L553316.  if v10 <= 0 then goto L553320;
  #L55331a.  v13:= v0.`q.g.o1` @type ^`int`;
  #L55331e.  v11:= v11 + v13 @kind int;
  #L553320.  call temp:= `i2`(v0, v12, v4) @signature `Lq/g;.i2:(Lq/e;I)I` @kind direct;
  #L553326.  v12:= temp;
  #L553328.  v11:= v11 + v12 @kind int;
  #L55332a.  v10:= v10 + 1;
  #L55332e.  goto L553306;
  #L553330.  v10:= 0I;
  #L553332.  v12:= 0I;
  #L553334.  if v10 >= v6 then goto L55335e;
  #L553338.  v13:= v0.`q.g.w1` @type ^`q.e`[] @kind object;
  #L55333c.  v13:= v13[v10] @kind object;
  #L553340.  if v13 == 0 then goto L553358;
  #L553344.  if v10 <= 0 then goto L55334e;
  #L553348.  v14:= v0.`q.g.p1` @type ^`int`;
  #L55334c.  v12:= v12 + v14 @kind int;
  #L55334e.  call temp:= `h2`(v0, v13, v4) @signature `Lq/g;.h2:(Lq/e;I)I` @kind direct;
  #L553354.  v13:= temp;
  #L553356.  v12:= v12 + v13 @kind int;
  #L553358.  v10:= v10 + 1;
  #L55335c.  goto L553334;
  #L55335e.  v21[v5]:= v11;
  #L553362.  v21[v8]:= v12;
  #L553366.  if v3 != 0 then goto L55337a;
  #L55336a.  if v11 <= v4 then goto L5531fa;
  #L55336e.  if v7 <= v8 then goto L5531fa;
  #L553372.  v7:= v7 + -1;
  #L553376.  goto L553200;
  #L55337a.  if v12 <= v4 then goto L5531fa;
  #L55337e.  if v6 <= v8 then goto L5531fa;
  #L553382.  v6:= v6 + -1;
  #L553386.  goto L553200;
  #L55338a.  v1:= v0.`q.g.y1` @type ^`int`[] @kind object;
  #L55338e.  v1[v5]:= v7;
  #L553392.  v1[v8]:= v6;
  #L553396.  return @kind void;
}
procedure `void` `k2`(`q.g` v28 @kind this, `q.e`[] v29 @kind object, `int` v30 , `int` v31 , `int` v32 , `int`[] v33 @kind object) @signature `Lq/g;.k2:([Lq/e;III[I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L5533a8.  v8:= v28 @kind object;
  #L5533ac.  v9:= v30;
  #L5533b0.  v15:= v32;
  #L5533b4.  if v9 != 0 then goto L5533ba;
  #L5533b8.  return @kind void;
  #L5533ba.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L5533be.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L5533c4.  v10:= new `q.g$a`;
  #L5533c8.  v3:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L5533cc.  v4:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L5533d0.  v5:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L5533d4.  v6:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L5533d8.  v0:= v10 @kind object;
  #L5533da.  v1:= v28 @kind object;
  #L5533de.  v2:= v31;
  #L5533e2.  v7:= v32;
  #L5533e6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lq/g$a;.<init>:(Lq/g;ILq/d;Lq/d;Lq/d;Lq/d;I)V` @kind direct;
  #L5533ec.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L5533f0.  call temp:= `add`(v0, v10) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5533f6.  v20:= 1I;
  #L5533fa.  v21:= 0I;
  #L5533fe.  if v31 != 0 then goto L5534c4;
  #L553402.  v0:= 0I;
  #L553404.  v1:= 0I;
  #L553406.  v11:= 0I;
  #L553408.  if v11 >= v9 then goto L553586;
  #L55340c.  v12:= v29[v11] @kind object;
  #L553410.  call temp:= `i2`(v8, v12, v15) @signature `Lq/g;.i2:(Lq/e;I)I` @kind direct;
  #L553416.  v13:= temp;
  #L553418.  call temp:= `C`(v12) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L55341e.  v2:= temp @kind object;
  #L553420.  v3:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L553424.  if v2 != v3 then goto L55342c;
  #L553428.  v0:= v0 + 1;
  #L55342c.  v14:= v0;
  #L55342e.  if v1 == v15 then goto L55343e;
  #L553432.  v0:= v8.`q.g.o1` @type ^`int`;
  #L553436.  v0:= v0 + v1 @kind int;
  #L553438.  v0:= v0 + v13 @kind int;
  #L55343a.  if v0 <= v15 then goto L55344e;
  #L55343e.  call temp:= `a`(v10) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L553444.  v0:= temp @kind object;
  #L553446.  if v0 == 0 then goto L55344e;
  #L55344a.  v0:= 1I;
  #L55344c.  goto L553450;
  #L55344e.  v0:= 0I;
  #L553450.  if v0 != 0 then goto L55346a;
  #L553454.  if v11 <= 0 then goto L55346a;
  #L553458.  v2:= v8.`q.g.t1` @type ^`int`;
  #L55345c.  if v2 <= 0 then goto L55346a;
  #L553460.  v2:= v11 %% v2 @kind int;
  #L553464.  if v2 != 0 then goto L55346a;
  #L553468.  v0:= 1I;
  #L55346a.  if v0 == 0 then goto L5534aa;
  #L55346e.  v10:= new `q.g$a`;
  #L553472.  v3:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L553476.  v4:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L55347a.  v5:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L55347e.  v6:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L553482.  v0:= v10 @kind object;
  #L553484.  v1:= v28 @kind object;
  #L553488.  v2:= v31;
  #L55348c.  v7:= v32;
  #L553490.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lq/g$a;.<init>:(Lq/g;ILq/d;Lq/d;Lq/d;Lq/d;I)V` @kind direct;
  #L553496.  call `i`(v10, v11) @signature `Lq/g$a;.i:(I)V` @kind virtual;
  #L55349c.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L5534a0.  call temp:= `add`(v0, v10) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5534a6.  v1:= v13;
  #L5534a8.  goto L5534b6;
  #L5534aa.  if v11 <= 0 then goto L5534a6;
  #L5534ae.  v0:= v8.`q.g.o1` @type ^`int`;
  #L5534b2.  v0:= v0 + v13 @kind int;
  #L5534b4.  v1:= v1 + v0 @kind int;
  #L5534b6.  call `b`(v10, v12) @signature `Lq/g$a;.b:(Lq/e;)V` @kind virtual;
  #L5534bc.  v11:= v11 + 1;
  #L5534c0.  v0:= v14;
  #L5534c2.  goto L553408;
  #L5534c4.  v0:= 0I;
  #L5534c6.  v1:= 0I;
  #L5534c8.  v11:= 0I;
  #L5534ca.  if v11 >= v9 then goto L553586;
  #L5534ce.  v12:= v29[v11] @kind object;
  #L5534d2.  call temp:= `h2`(v8, v12, v15) @signature `Lq/g;.h2:(Lq/e;I)I` @kind direct;
  #L5534d8.  v13:= temp;
  #L5534da.  call temp:= `S`(v12) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L5534e0.  v2:= temp @kind object;
  #L5534e2.  v3:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L5534e6.  if v2 != v3 then goto L5534ee;
  #L5534ea.  v0:= v0 + 1;
  #L5534ee.  v14:= v0;
  #L5534f0.  if v1 == v15 then goto L553500;
  #L5534f4.  v0:= v8.`q.g.p1` @type ^`int`;
  #L5534f8.  v0:= v0 + v1 @kind int;
  #L5534fa.  v0:= v0 + v13 @kind int;
  #L5534fc.  if v0 <= v15 then goto L553510;
  #L553500.  call temp:= `a`(v10) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L553506.  v0:= temp @kind object;
  #L553508.  if v0 == 0 then goto L553510;
  #L55350c.  v0:= 1I;
  #L55350e.  goto L553512;
  #L553510.  v0:= 0I;
  #L553512.  if v0 != 0 then goto L55352c;
  #L553516.  if v11 <= 0 then goto L55352c;
  #L55351a.  v2:= v8.`q.g.t1` @type ^`int`;
  #L55351e.  if v2 <= 0 then goto L55352c;
  #L553522.  v2:= v11 %% v2 @kind int;
  #L553526.  if v2 != 0 then goto L55352c;
  #L55352a.  v0:= 1I;
  #L55352c.  if v0 == 0 then goto L55356c;
  #L553530.  v10:= new `q.g$a`;
  #L553534.  v3:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L553538.  v4:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L55353c.  v5:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L553540.  v6:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L553544.  v0:= v10 @kind object;
  #L553546.  v1:= v28 @kind object;
  #L55354a.  v2:= v31;
  #L55354e.  v7:= v32;
  #L553552.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lq/g$a;.<init>:(Lq/g;ILq/d;Lq/d;Lq/d;Lq/d;I)V` @kind direct;
  #L553558.  call `i`(v10, v11) @signature `Lq/g$a;.i:(I)V` @kind virtual;
  #L55355e.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L553562.  call temp:= `add`(v0, v10) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L553568.  v1:= v13;
  #L55356a.  goto L553578;
  #L55356c.  if v11 <= 0 then goto L553568;
  #L553570.  v0:= v8.`q.g.p1` @type ^`int`;
  #L553574.  v0:= v0 + v13 @kind int;
  #L553576.  v1:= v1 + v0 @kind int;
  #L553578.  call `b`(v10, v12) @signature `Lq/g$a;.b:(Lq/e;)V` @kind virtual;
  #L55357e.  v11:= v11 + 1;
  #L553582.  v0:= v14;
  #L553584.  goto L5534ca;
  #L553586.  v1:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L55358a.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L553590.  v1:= temp;
  #L553592.  v2:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L553596.  v3:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L55359a.  v4:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L55359e.  v5:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L5535a2.  call temp:= `w1`(v28) @signature `Lq/m;.w1:()I` @kind virtual;
  #L5535a8.  v6:= temp;
  #L5535aa.  call temp:= `y1`(v28) @signature `Lq/m;.y1:()I` @kind virtual;
  #L5535b0.  v7:= temp;
  #L5535b2.  call temp:= `x1`(v28) @signature `Lq/m;.x1:()I` @kind virtual;
  #L5535b8.  v9:= temp;
  #L5535ba.  call temp:= `v1`(v28) @signature `Lq/m;.v1:()I` @kind virtual;
  #L5535c0.  v10:= temp;
  #L5535c2.  call temp:= `C`(v28) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L5535c8.  v11:= temp @kind object;
  #L5535ca.  v12:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5535ce.  if v11 == v12 then goto L5535e4;
  #L5535d2.  call temp:= `S`(v28) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L5535d8.  v11:= temp @kind object;
  #L5535da.  if v11 != v12 then goto L5535e0;
  #L5535de.  goto L5535e4;
  #L5535e0.  v11:= 0I;
  #L5535e2.  goto L5535e6;
  #L5535e4.  v11:= 1I;
  #L5535e6.  if v0 <= 0 then goto L553634;
  #L5535ea.  if v11 == 0 then goto L553634;
  #L5535ee.  v0:= 0I;
  #L5535f0.  if v0 >= v1 then goto L553634;
  #L5535f4.  v11:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L5535f8.  call temp:= `get`(v11, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L5535fe.  v11:= temp @kind object;
  #L553600.  v11:= (`q.g$a`) v11 @kind object;
  #L553604.  if v31 != 0 then goto L55361c;
  #L553608.  call temp:= `f`(v11) @signature `Lq/g$a;.f:()I` @kind virtual;
  #L55360e.  v12:= temp;
  #L553610.  v12:= v15 - v12 @kind int;
  #L553614.  call `g`(v11, v12) @signature `Lq/g$a;.g:(I)V` @kind virtual;
  #L55361a.  goto L55362e;
  #L55361c.  call temp:= `e`(v11) @signature `Lq/g$a;.e:()I` @kind virtual;
  #L553622.  v12:= temp;
  #L553624.  v12:= v15 - v12 @kind int;
  #L553628.  call `g`(v11, v12) @signature `Lq/g$a;.g:(I)V` @kind virtual;
  #L55362e.  v0:= v0 + 1;
  #L553632.  goto L5535f0;
  #L553634.  v22:= v7;
  #L553638.  v0:= v9;
  #L55363a.  v12:= 0I;
  #L55363c.  v13:= 0I;
  #L55363e.  v14:= 0I;
  #L553640.  v7:= v6;
  #L553642.  v6:= v3 @kind object;
  #L553644.  v3:= v2 @kind object;
  #L553646.  v2:= v10;
  #L553648.  if v14 >= v1 then goto L5537f6;
  #L55364c.  v9:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L553650.  call temp:= `get`(v9, v14) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L553656.  v9:= temp @kind object;
  #L553658.  v23:= v9 @kind object;
  #L55365c.  v23:= (`q.g$a`) v23 @kind object;
  #L553660.  if v31 != 0 then goto L553728;
  #L553664.  v2:= v1 + -1;
  #L553668.  if v14 >= v2 then goto L553690;
  #L55366c.  v2:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L553670.  v5:= v14 + 1;
  #L553674.  call temp:= `get`(v2, v5) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L55367a.  v2:= temp @kind object;
  #L55367c.  v2:= (`q.g$a`) v2 @kind object;
  #L553680.  call temp:= `a`(v2) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L553686.  v2:= temp @kind object;
  #L553688.  v2:= v2.`q.e.N` @type ^`q.d` @kind object;
  #L55368c.  v5:= 0I;
  #L55368e.  goto L55369c;
  #L553690.  v2:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L553694.  call temp:= `v1`(v28) @signature `Lq/m;.v1:()I` @kind virtual;
  #L55369a.  v5:= temp;
  #L55369c.  call temp:= `a`(v23) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L5536a2.  v9:= temp @kind object;
  #L5536a4.  v11:= v9.`q.e.P` @type ^`q.d` @kind object;
  #L5536a8.  v9:= v23 @kind object;
  #L5536ac.  v10:= v31;
  #L5536b0.  v24:= v11 @kind object;
  #L5536b4.  v11:= v3 @kind object;
  #L5536b6.  v29:= v3 @kind object;
  #L5536ba.  v3:= v12;
  #L5536bc.  v12:= v6 @kind object;
  #L5536be.  v6:= v13;
  #L5536c0.  v13:= v4 @kind object;
  #L5536c2.  v30:= v4 @kind object;
  #L5536c6.  v4:= v14;
  #L5536c8.  v14:= v2 @kind object;
  #L5536ca.  v15:= v7;
  #L5536cc.  v16:= v22;
  #L5536d0.  v17:= v0;
  #L5536d4.  v18:= v5;
  #L5536d8.  v19:= v32;
  #L5536dc.  call `j`(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19) @signature `Lq/g$a;.j:(ILq/d;Lq/d;Lq/d;Lq/d;IIIII)V` @kind virtual;
  #L5536e2.  call temp:= `f`(v23) @signature `Lq/g$a;.f:()I` @kind virtual;
  #L5536e8.  v9:= temp;
  #L5536ea.  call temp:= `max`(v6, v9) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L5536f0.  v6:= temp;
  #L5536f2.  call temp:= `e`(v23) @signature `Lq/g$a;.e:()I` @kind virtual;
  #L5536f8.  v9:= temp;
  #L5536fa.  v12:= v3 + v9 @kind int;
  #L5536fe.  if v4 <= 0 then goto L553708;
  #L553702.  v3:= v8.`q.g.p1` @type ^`int`;
  #L553706.  v12:= v12 + v3 @kind int;
  #L553708.  v3:= v29 @kind object;
  #L55370c.  v13:= v6;
  #L55370e.  v6:= v24 @kind object;
  #L553712.  v22:= 0I;
  #L553716.  v24:= v30 @kind object;
  #L55371a.  v27:= v5;
  #L55371e.  v5:= v2 @kind object;
  #L553720.  v2:= v27;
  #L553724.  goto L5537e6;
  #L553728.  v29:= v3 @kind object;
  #L55372c.  v3:= v12;
  #L55372e.  v0:= v13;
  #L553730.  v4:= v14;
  #L553732.  v9:= v1 + -1;
  #L553736.  if v4 >= v9 then goto L553764;
  #L55373a.  v9:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L55373e.  v14:= v4 + 1;
  #L553742.  call temp:= `get`(v9, v14) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L553748.  v9:= temp @kind object;
  #L55374a.  v9:= (`q.g$a`) v9 @kind object;
  #L55374e.  call temp:= `a`(v9) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L553754.  v9:= temp @kind object;
  #L553756.  v9:= v9.`q.e.M` @type ^`q.d` @kind object;
  #L55375a.  v24:= v9 @kind object;
  #L55375e.  v25:= 0I;
  #L553762.  goto L553778;
  #L553764.  v9:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L553768.  call temp:= `x1`(v28) @signature `Lq/m;.x1:()I` @kind virtual;
  #L55376e.  v10:= temp;
  #L553770.  v24:= v9 @kind object;
  #L553774.  v25:= v10;
  #L553778.  call temp:= `a`(v23) @signature `Lq/g$a;.a:(Lq/g$a;)Lq/e;` @kind static;
  #L55377e.  v9:= temp @kind object;
  #L553780.  v15:= v9.`q.e.O` @type ^`q.d` @kind object;
  #L553784.  v9:= v23 @kind object;
  #L553788.  v10:= v31;
  #L55378c.  v11:= v29 @kind object;
  #L553790.  v12:= v6 @kind object;
  #L553792.  v13:= v24 @kind object;
  #L553796.  v14:= v5 @kind object;
  #L553798.  v26:= v15 @kind object;
  #L55379c.  v15:= v7;
  #L55379e.  v16:= v22;
  #L5537a2.  v17:= v25;
  #L5537a6.  v18:= v2;
  #L5537aa.  v19:= v32;
  #L5537ae.  call `j`(v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19) @signature `Lq/g$a;.j:(ILq/d;Lq/d;Lq/d;Lq/d;IIIII)V` @kind virtual;
  #L5537b4.  call temp:= `f`(v23) @signature `Lq/g$a;.f:()I` @kind virtual;
  #L5537ba.  v7:= temp;
  #L5537bc.  v13:= v0 + v7 @kind int;
  #L5537c0.  call temp:= `e`(v23) @signature `Lq/g$a;.e:()I` @kind virtual;
  #L5537c6.  v0:= temp;
  #L5537c8.  call temp:= `max`(v3, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L5537ce.  v0:= temp;
  #L5537d0.  if v4 <= 0 then goto L5537da;
  #L5537d4.  v3:= v8.`q.g.o1` @type ^`int`;
  #L5537d8.  v13:= v13 + v3 @kind int;
  #L5537da.  v12:= v0;
  #L5537dc.  v0:= v25;
  #L5537e0.  v3:= v26 @kind object;
  #L5537e4.  v7:= 0I;
  #L5537e6.  v14:= v4 + 1;
  #L5537ea.  v15:= v32;
  #L5537ee.  v4:= v24 @kind object;
  #L5537f2.  goto L553648;
  #L5537f6.  v3:= v12;
  #L5537f8.  v0:= v13;
  #L5537fa.  v33[v21]:= v0;
  #L5537fe.  v33[v20]:= v3;
  #L553802.  return @kind void;
}
procedure `void` `l2`(`q.g` v22 @kind this, `q.e`[] v23 @kind object, `int` v24 , `int` v25 , `int` v26 , `int`[] v27 @kind object) @signature `Lq/g;.l2:([Lq/e;III[I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L553814.  v8:= v22 @kind object;
  #L553818.  v9:= v24;
  #L55381c.  if v9 != 0 then goto L553822;
  #L553820.  return @kind void;
  #L553822.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L553826.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L55382c.  v0:= temp;
  #L55382e.  v10:= 0I;
  #L553830.  if v0 != 0 then goto L553868;
  #L553834.  v11:= new `q.g$a`;
  #L553838.  v3:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L55383c.  v4:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L553840.  v5:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L553844.  v6:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L553848.  v0:= v11 @kind object;
  #L55384a.  v1:= v22 @kind object;
  #L55384e.  v2:= v25;
  #L553852.  v7:= v26;
  #L553856.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lq/g$a;.<init>:(Lq/g;ILq/d;Lq/d;Lq/d;Lq/d;I)V` @kind direct;
  #L55385c.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L553860.  call temp:= `add`(v0, v11) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L553866.  goto L5538c2;
  #L553868.  v0:= v8.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L55386c.  call temp:= `get`(v0, v10) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L553872.  v0:= temp @kind object;
  #L553874.  v0:= (`q.g$a`) v0 @kind object;
  #L553878.  call `c`(v0) @signature `Lq/g$a;.c:()V` @kind virtual;
  #L55387e.  v13:= v8.`q.e.M` @type ^`q.d` @kind object;
  #L553882.  v14:= v8.`q.e.N` @type ^`q.d` @kind object;
  #L553886.  v15:= v8.`q.e.O` @type ^`q.d` @kind object;
  #L55388a.  v1:= v8.`q.e.P` @type ^`q.d` @kind object;
  #L55388e.  call temp:= `w1`(v22) @signature `Lq/m;.w1:()I` @kind virtual;
  #L553894.  v17:= temp;
  #L553896.  call temp:= `y1`(v22) @signature `Lq/m;.y1:()I` @kind virtual;
  #L55389c.  v18:= temp;
  #L55389e.  call temp:= `x1`(v22) @signature `Lq/m;.x1:()I` @kind virtual;
  #L5538a4.  v19:= temp;
  #L5538a6.  call temp:= `v1`(v22) @signature `Lq/m;.v1:()I` @kind virtual;
  #L5538ac.  v20:= temp;
  #L5538ae.  v11:= v0 @kind object;
  #L5538b0.  v12:= v25;
  #L5538b4.  v16:= v1 @kind object;
  #L5538b8.  v21:= v26;
  #L5538bc.  call `j`(v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21) @signature `Lq/g$a;.j:(ILq/d;Lq/d;Lq/d;Lq/d;IIIII)V` @kind virtual;
  #L5538c2.  v0:= 0I;
  #L5538c4.  if v0 >= v9 then goto L5538d8;
  #L5538c8.  v1:= v23[v0] @kind object;
  #L5538cc.  call `b`(v11, v1) @signature `Lq/g$a;.b:(Lq/e;)V` @kind virtual;
  #L5538d2.  v0:= v0 + 1;
  #L5538d6.  goto L5538c4;
  #L5538d8.  call temp:= `f`(v11) @signature `Lq/g$a;.f:()I` @kind virtual;
  #L5538de.  v0:= temp;
  #L5538e0.  v27[v10]:= v0;
  #L5538e4.  call temp:= `e`(v11) @signature `Lq/g$a;.e:()I` @kind virtual;
  #L5538ea.  v0:= temp;
  #L5538ec.  v1:= 1I;
  #L5538ee.  v27[v1]:= v0;
  #L5538f2.  return @kind void;
}
procedure `void` `A2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.A2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a54.  v0.`q.g.r1` @type ^`int` := v1;
  #L553a58.  return @kind void;
}
procedure `void` `B2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.B2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L553a6c.  v0.`q.g.j1` @type ^`float` := v1;
  #L553a70.  return @kind void;
}
procedure `void` `C2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.C2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a84.  v0.`q.g.p1` @type ^`int` := v1;
  #L553a88.  return @kind void;
}
procedure `void` `D2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.D2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a9c.  v0.`q.g.d1` @type ^`int` := v1;
  #L553aa0.  return @kind void;
}
procedure `void` `E2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.E2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553ab4.  v0.`q.g.s1` @type ^`int` := v1;
  #L553ab8.  return @kind void;
}
procedure `void` `g`(`q.g` v5 @kind this, `n.d` v6 @kind object, `boolean` v7 ) @signature `Lq/g;.g:(Ln/d;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L552b3c.  call `g`(v5, v6, v7) @signature `Lq/e;.g:(Ln/d;Z)V` @kind super;
  #L552b42.  call temp:= `M`(v5) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L552b48.  v6:= temp @kind object;
  #L552b4a.  v7:= 1I;
  #L552b4c.  v0:= 0I;
  #L552b4e.  if v6 == 0 then goto L552b6e;
  #L552b52.  call temp:= `M`(v5) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L552b58.  v6:= temp @kind object;
  #L552b5a.  v6:= (`q.f`) v6 @kind object;
  #L552b5e.  call temp:= `N1`(v6) @signature `Lq/f;.N1:()Z` @kind virtual;
  #L552b64.  v6:= temp;
  #L552b66.  if v6 == 0 then goto L552b6e;
  #L552b6a.  v6:= 1I;
  #L552b6c.  goto L552b70;
  #L552b6e.  v6:= 0I;
  #L552b70.  v1:= v5.`q.g.s1` @type ^`int`;
  #L552b74.  if v1 == 0 then goto L552bc8;
  #L552b78.  if v1 == v7 then goto L552b8c;
  #L552b7c.  v7:= 2I;
  #L552b7e.  if v1 == v7 then goto L552b84;
  #L552b82.  goto L552bee;
  #L552b84.  call `g2`(v5, v6) @signature `Lq/g;.g2:(Z)V` @kind direct;
  #L552b8a.  goto L552bee;
  #L552b8c.  v1:= v5.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L552b90.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L552b96.  v1:= temp;
  #L552b98.  v2:= 0I;
  #L552b9a.  if v2 >= v1 then goto L552bee;
  #L552b9e.  v3:= v5.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L552ba2.  call temp:= `get`(v3, v2) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L552ba8.  v3:= temp @kind object;
  #L552baa.  v3:= (`q.g$a`) v3 @kind object;
  #L552bae.  v4:= v1 + -1;
  #L552bb2.  if v2 != v4 then goto L552bba;
  #L552bb6.  v4:= 1I;
  #L552bb8.  goto L552bbc;
  #L552bba.  v4:= 0I;
  #L552bbc.  call `d`(v3, v6, v2, v4) @signature `Lq/g$a;.d:(ZIZ)V` @kind virtual;
  #L552bc2.  v2:= v2 + 1;
  #L552bc6.  goto L552b9a;
  #L552bc8.  v1:= v5.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L552bcc.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L552bd2.  v1:= temp;
  #L552bd4.  if v1 <= 0 then goto L552bee;
  #L552bd8.  v1:= v5.`q.g.v1` @type ^`java.util.ArrayList` @kind object;
  #L552bdc.  call temp:= `get`(v1, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L552be2.  v1:= temp @kind object;
  #L552be4.  v1:= (`q.g$a`) v1 @kind object;
  #L552be8.  call `d`(v1, v6, v0, v7) @signature `Lq/g$a;.d:(ZIZ)V` @kind virtual;
  #L552bee.  call `D1`(v5, v0) @signature `Lq/m;.D1:(Z)V` @kind virtual;
  #L552bf4.  return @kind void;
}
procedure `void` `m2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.m2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L553904.  v0.`q.g.k1` @type ^`float` := v1;
  #L553908.  return @kind void;
}
procedure `void` `n`(`q.g` v0 @kind this, `q.e` v1 @kind object, `java.util.HashMap` v2 @kind object) @signature `Lq/g;.n:(Lq/e;Ljava/util/HashMap;)V` @AccessFlag PUBLIC {
    temp;

  #L552c08.  call `n`(v0, v1, v2) @signature `Lq/j;.n:(Lq/e;Ljava/util/HashMap;)V` @kind super;
  #L552c0e.  v1:= (`q.g`) v1 @kind object;
  #L552c12.  v2:= v1.`q.g.c1` @type ^`int`;
  #L552c16.  v0.`q.g.c1` @type ^`int` := v2;
  #L552c1a.  v2:= v1.`q.g.d1` @type ^`int`;
  #L552c1e.  v0.`q.g.d1` @type ^`int` := v2;
  #L552c22.  v2:= v1.`q.g.e1` @type ^`int`;
  #L552c26.  v0.`q.g.e1` @type ^`int` := v2;
  #L552c2a.  v2:= v1.`q.g.f1` @type ^`int`;
  #L552c2e.  v0.`q.g.f1` @type ^`int` := v2;
  #L552c32.  v2:= v1.`q.g.g1` @type ^`int`;
  #L552c36.  v0.`q.g.g1` @type ^`int` := v2;
  #L552c3a.  v2:= v1.`q.g.h1` @type ^`int`;
  #L552c3e.  v0.`q.g.h1` @type ^`int` := v2;
  #L552c42.  v2:= v1.`q.g.i1` @type ^`float`;
  #L552c46.  v0.`q.g.i1` @type ^`float` := v2;
  #L552c4a.  v2:= v1.`q.g.j1` @type ^`float`;
  #L552c4e.  v0.`q.g.j1` @type ^`float` := v2;
  #L552c52.  v2:= v1.`q.g.k1` @type ^`float`;
  #L552c56.  v0.`q.g.k1` @type ^`float` := v2;
  #L552c5a.  v2:= v1.`q.g.l1` @type ^`float`;
  #L552c5e.  v0.`q.g.l1` @type ^`float` := v2;
  #L552c62.  v2:= v1.`q.g.m1` @type ^`float`;
  #L552c66.  v0.`q.g.m1` @type ^`float` := v2;
  #L552c6a.  v2:= v1.`q.g.n1` @type ^`float`;
  #L552c6e.  v0.`q.g.n1` @type ^`float` := v2;
  #L552c72.  v2:= v1.`q.g.o1` @type ^`int`;
  #L552c76.  v0.`q.g.o1` @type ^`int` := v2;
  #L552c7a.  v2:= v1.`q.g.p1` @type ^`int`;
  #L552c7e.  v0.`q.g.p1` @type ^`int` := v2;
  #L552c82.  v2:= v1.`q.g.q1` @type ^`int`;
  #L552c86.  v0.`q.g.q1` @type ^`int` := v2;
  #L552c8a.  v2:= v1.`q.g.r1` @type ^`int`;
  #L552c8e.  v0.`q.g.r1` @type ^`int` := v2;
  #L552c92.  v2:= v1.`q.g.s1` @type ^`int`;
  #L552c96.  v0.`q.g.s1` @type ^`int` := v2;
  #L552c9a.  v2:= v1.`q.g.t1` @type ^`int`;
  #L552c9e.  v0.`q.g.t1` @type ^`int` := v2;
  #L552ca2.  v1:= v1.`q.g.u1` @type ^`int`;
  #L552ca6.  v0.`q.g.u1` @type ^`int` := v1;
  #L552caa.  return @kind void;
}
procedure `void` `n2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.n2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L55391c.  v0.`q.g.e1` @type ^`int` := v1;
  #L553920.  return @kind void;
}
procedure `void` `o2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.o2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L553934.  v0.`q.g.l1` @type ^`float` := v1;
  #L553938.  return @kind void;
}
procedure `void` `p2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.p2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L55394c.  v0.`q.g.f1` @type ^`int` := v1;
  #L553950.  return @kind void;
}
procedure `void` `q2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.q2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553964.  v0.`q.g.q1` @type ^`int` := v1;
  #L553968.  return @kind void;
}
procedure `void` `r2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.r2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L55397c.  v0.`q.g.i1` @type ^`float` := v1;
  #L553980.  return @kind void;
}
procedure `void` `s2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.s2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553994.  v0.`q.g.o1` @type ^`int` := v1;
  #L553998.  return @kind void;
}
procedure `void` `t2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.t2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5539ac.  v0.`q.g.c1` @type ^`int` := v1;
  #L5539b0.  return @kind void;
}
procedure `void` `u2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.u2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L5539c4.  v0.`q.g.m1` @type ^`float` := v1;
  #L5539c8.  return @kind void;
}
procedure `void` `v2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.v2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5539dc.  v0.`q.g.g1` @type ^`int` := v1;
  #L5539e0.  return @kind void;
}
procedure `void` `w2`(`q.g` v0 @kind this, `float` v1 ) @signature `Lq/g;.w2:(F)V` @AccessFlag PUBLIC {
    temp;

  #L5539f4.  v0.`q.g.n1` @type ^`float` := v1;
  #L5539f8.  return @kind void;
}
procedure `void` `x2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.x2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a0c.  v0.`q.g.h1` @type ^`int` := v1;
  #L553a10.  return @kind void;
}
procedure `void` `y2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.y2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a24.  v0.`q.g.t1` @type ^`int` := v1;
  #L553a28.  return @kind void;
}
procedure `void` `z1`(`q.g` v18 @kind this, `int` v19 , `int` v20 , `int` v21 , `int` v22 ) @signature `Lq/g;.z1:(IIII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L552f10.  v6:= v18 @kind object;
  #L552f14.  v7:= v19;
  #L552f18.  v8:= v20;
  #L552f1c.  v9:= v21;
  #L552f20.  v10:= v22;
  #L552f24.  v0:= v6.`q.j.Q0` @type ^`int`;
  #L552f28.  v11:= 0I;
  #L552f2a.  if v0 <= 0 then goto L552f48;
  #L552f2e.  call temp:= `B1`(v18) @signature `Lq/m;.B1:()Z` @kind virtual;
  #L552f34.  v0:= temp;
  #L552f36.  if v0 != 0 then goto L552f48;
  #L552f3a.  call `E1`(v6, v11, v11) @signature `Lq/m;.E1:(II)V` @kind virtual;
  #L552f40.  call `D1`(v6, v11) @signature `Lq/m;.D1:(Z)V` @kind virtual;
  #L552f46.  return @kind void;
  #L552f48.  call temp:= `w1`(v18) @signature `Lq/m;.w1:()I` @kind virtual;
  #L552f4e.  v12:= temp;
  #L552f50.  call temp:= `x1`(v18) @signature `Lq/m;.x1:()I` @kind virtual;
  #L552f56.  v13:= temp;
  #L552f58.  call temp:= `y1`(v18) @signature `Lq/m;.y1:()I` @kind virtual;
  #L552f5e.  v14:= temp;
  #L552f60.  call temp:= `v1`(v18) @signature `Lq/m;.v1:()I` @kind virtual;
  #L552f66.  v15:= temp;
  #L552f68.  v0:= 2I;
  #L552f6a.  v5:= new `int`[v0];
  #L552f6e.  v1:= v8 - v12 @kind int;
  #L552f72.  v1:= v1 - v13 @kind int;
  #L552f74.  v2:= v6.`q.g.u1` @type ^`int`;
  #L552f78.  v4:= 1I;
  #L552f7a.  if v2 != v4 then goto L552f84;
  #L552f7e.  v1:= v10 - v14 @kind int;
  #L552f82.  v1:= v1 - v15 @kind int;
  #L552f84.  v16:= v1;
  #L552f88.  v1:= -1I;
  #L552f8a.  if v2 != 0 then goto L552fa8;
  #L552f8e.  v2:= v6.`q.g.c1` @type ^`int`;
  #L552f92.  if v2 != v1 then goto L552f9a;
  #L552f96.  v6.`q.g.c1` @type ^`int` := v11;
  #L552f9a.  v2:= v6.`q.g.d1` @type ^`int`;
  #L552f9e.  if v2 != v1 then goto L552fc0;
  #L552fa2.  v6.`q.g.d1` @type ^`int` := v11;
  #L552fa6.  goto L552fc0;
  #L552fa8.  v2:= v6.`q.g.c1` @type ^`int`;
  #L552fac.  if v2 != v1 then goto L552fb4;
  #L552fb0.  v6.`q.g.c1` @type ^`int` := v11;
  #L552fb4.  v2:= v6.`q.g.d1` @type ^`int`;
  #L552fb8.  if v2 != v1 then goto L552fc0;
  #L552fbc.  v6.`q.g.d1` @type ^`int` := v11;
  #L552fc0.  v1:= v6.`q.j.P0` @type ^`q.e`[] @kind object;
  #L552fc4.  v2:= 0I;
  #L552fc6.  v3:= 0I;
  #L552fc8.  v11:= v6.`q.j.Q0` @type ^`int`;
  #L552fcc.  v0:= 8I;
  #L552fd0.  if v2 >= v11 then goto L552ff4;
  #L552fd4.  v11:= v6.`q.j.P0` @type ^`q.e`[] @kind object;
  #L552fd8.  v11:= v11[v2] @kind object;
  #L552fdc.  call temp:= `U`(v11) @signature `Lq/e;.U:()I` @kind virtual;
  #L552fe2.  v11:= temp;
  #L552fe4.  if v11 != v0 then goto L552fec;
  #L552fe8.  v3:= v3 + 1;
  #L552fec.  v2:= v2 + 1;
  #L552ff0.  v0:= 2I;
  #L552ff2.  goto L552fc8;
  #L552ff4.  if v3 <= 0 then goto L553032;
  #L552ff8.  v11:= v11 - v3 @kind int;
  #L552ffa.  v1:= new `q.e`[v11];
  #L552ffe.  v2:= 0I;
  #L553000.  v3:= 0I;
  #L553002.  v11:= v6.`q.j.Q0` @type ^`int`;
  #L553006.  if v2 >= v11 then goto L55302e;
  #L55300a.  v11:= v6.`q.j.P0` @type ^`q.e`[] @kind object;
  #L55300e.  v11:= v11[v2] @kind object;
  #L553012.  call temp:= `U`(v11) @signature `Lq/e;.U:()I` @kind virtual;
  #L553018.  v4:= temp;
  #L55301a.  if v4 == v0 then goto L553026;
  #L55301e.  v1[v3]:= v11 @kind object;
  #L553022.  v3:= v3 + 1;
  #L553026.  v2:= v2 + 1;
  #L55302a.  v4:= 1I;
  #L55302c.  goto L553002;
  #L55302e.  v2:= v3;
  #L553030.  goto L553034;
  #L553032.  v2:= v11;
  #L553034.  v6.`q.g.z1` @type ^`q.e`[] := v1 @kind object;
  #L553038.  v6.`q.g.A1` @type ^`int` := v2;
  #L55303c.  v0:= v6.`q.g.s1` @type ^`int`;
  #L553040.  if v0 == 0 then goto L55308e;
  #L553044.  v4:= 1I;
  #L553046.  if v0 == v4 then goto L553074;
  #L55304a.  v3:= 2I;
  #L55304c.  if v0 == v3 then goto L55305a;
  #L553050.  v17:= v5 @kind object;
  #L553054.  v0:= 0I;
  #L553056.  v11:= 1I;
  #L553058.  goto L5530a8;
  #L55305a.  v3:= v6.`q.g.u1` @type ^`int`;
  #L55305e.  v0:= v18 @kind object;
  #L553062.  v11:= 1I;
  #L553064.  v4:= v16;
  #L553068.  v17:= v5 @kind object;
  #L55306c.  call `j2`(v0, v1, v2, v3, v4, v5) @signature `Lq/g;.j2:([Lq/e;III[I)V` @kind direct;
  #L553072.  goto L5530a6;
  #L553074.  v17:= v5 @kind object;
  #L553078.  v11:= 1I;
  #L55307a.  v3:= v6.`q.g.u1` @type ^`int`;
  #L55307e.  v0:= v18 @kind object;
  #L553082.  v4:= v16;
  #L553086.  call `k2`(v0, v1, v2, v3, v4, v5) @signature `Lq/g;.k2:([Lq/e;III[I)V` @kind direct;
  #L55308c.  goto L5530a6;
  #L55308e.  v17:= v5 @kind object;
  #L553092.  v11:= 1I;
  #L553094.  v3:= v6.`q.g.u1` @type ^`int`;
  #L553098.  v0:= v18 @kind object;
  #L55309c.  v4:= v16;
  #L5530a0.  call `l2`(v0, v1, v2, v3, v4, v5) @signature `Lq/g;.l2:([Lq/e;III[I)V` @kind direct;
  #L5530a6.  v0:= 0I;
  #L5530a8.  v1:= v17[v0];
  #L5530ac.  v1:= v1 + v12 @kind int;
  #L5530ae.  v1:= v1 + v13 @kind int;
  #L5530b0.  v2:= v17[v11];
  #L5530b4.  v2:= v2 + v14 @kind int;
  #L5530b6.  v2:= v2 + v15 @kind int;
  #L5530b8.  v3:= -2147483648I;
  #L5530bc.  v4:= 2.0F;
  #L5530c0.  if v7 != v4 then goto L5530c8;
  #L5530c4.  v1:= v8;
  #L5530c6.  goto L5530de;
  #L5530c8.  if v7 != v3 then goto L5530d6;
  #L5530cc.  call temp:= `min`(v1, v8) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L5530d2.  v1:= temp;
  #L5530d4.  goto L5530de;
  #L5530d6.  if v7 != 0 then goto L5530dc;
  #L5530da.  goto L5530de;
  #L5530dc.  v1:= 0I;
  #L5530de.  if v9 != v4 then goto L5530e6;
  #L5530e2.  v2:= v10;
  #L5530e4.  goto L5530fc;
  #L5530e6.  if v9 != v3 then goto L5530f4;
  #L5530ea.  call temp:= `min`(v2, v10) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L5530f0.  v2:= temp;
  #L5530f2.  goto L5530fc;
  #L5530f4.  if v9 != 0 then goto L5530fa;
  #L5530f8.  goto L5530fc;
  #L5530fa.  v2:= 0I;
  #L5530fc.  call `E1`(v6, v1, v2) @signature `Lq/m;.E1:(II)V` @kind virtual;
  #L553102.  call `h1`(v6, v1) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L553108.  call `I0`(v6, v2) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L55310e.  v1:= v6.`q.j.Q0` @type ^`int`;
  #L553112.  if v1 <= 0 then goto L553118;
  #L553116.  goto L55311a;
  #L553118.  v11:= 0I;
  #L55311a.  call `D1`(v6, v11) @signature `Lq/m;.D1:(Z)V` @kind virtual;
  #L553120.  return @kind void;
}
procedure `void` `z2`(`q.g` v0 @kind this, `int` v1 ) @signature `Lq/g;.z2:(I)V` @AccessFlag PUBLIC {
    temp;

  #L553a3c.  v0.`q.g.u1` @type ^`int` := v1;
  #L553a40.  return @kind void;
}
