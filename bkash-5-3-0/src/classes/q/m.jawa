record `q.m` @kind class @AccessFlag PUBLIC extends `q.j` @kind class {
  `int` `q.m.R0` @AccessFlag PRIVATE;
  `int` `q.m.S0` @AccessFlag PRIVATE;
  `int` `q.m.T0` @AccessFlag PRIVATE;
  `int` `q.m.U0` @AccessFlag PRIVATE;
  `int` `q.m.V0` @AccessFlag PRIVATE;
  `int` `q.m.W0` @AccessFlag PRIVATE;
  `boolean` `q.m.X0` @AccessFlag PRIVATE;
  `int` `q.m.Y0` @AccessFlag PRIVATE;
  `int` `q.m.Z0` @AccessFlag PRIVATE;
  `r.b$a` `q.m.a1` @AccessFlag PROTECTED;
  `r.b$b` `q.m.b1` @AccessFlag ;
}
procedure `void` `<init>`(`q.m` v1 @kind this) @signature `Lq/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5547e0.  call `<init>`(v1) @signature `Lq/j;.<init>:()V` @kind direct;
  #L5547e6.  v0:= 0I;
  #L5547e8.  v1.`q.m.R0` @type ^`int` := v0;
  #L5547ec.  v1.`q.m.S0` @type ^`int` := v0;
  #L5547f0.  v1.`q.m.T0` @type ^`int` := v0;
  #L5547f4.  v1.`q.m.U0` @type ^`int` := v0;
  #L5547f8.  v1.`q.m.V0` @type ^`int` := v0;
  #L5547fc.  v1.`q.m.W0` @type ^`int` := v0;
  #L554800.  v1.`q.m.X0` @type ^`boolean` := v0 @kind boolean;
  #L554804.  v1.`q.m.Y0` @type ^`int` := v0;
  #L554808.  v1.`q.m.Z0` @type ^`int` := v0;
  #L55480c.  v0:= new `r.b$a`;
  #L554810.  call `<init>`(v0) @signature `Lr/b$a;.<init>:()V` @kind direct;
  #L554816.  v1.`q.m.a1` @type ^`r.b$a` := v0 @kind object;
  #L55481a.  v0:= 0I;
  #L55481c.  v1.`q.m.b1` @type ^`r.b$b` := v0 @kind object;
  #L554820.  return @kind void;
}
procedure `void` `A1`(`q.m` v1 @kind this, `q.e` v2 @kind object, `q.e$b` v3 @kind object, `int` v4 , `q.e$b` v5 @kind object, `int` v6 ) @signature `Lq/m;.A1:(Lq/e;Lq/e$b;ILq/e$b;I)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L5548c0.  v0:= v1.`q.m.b1` @type ^`r.b$b` @kind object;
  #L5548c4.  if v0 != 0 then goto L5548ee;
  #L5548c8.  call temp:= `M`(v1) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L5548ce.  v0:= temp @kind object;
  #L5548d0.  if v0 == 0 then goto L5548ee;
  #L5548d4.  call temp:= `M`(v1) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L5548da.  v0:= temp @kind object;
  #L5548dc.  v0:= (`q.f`) v0 @kind object;
  #L5548e0.  call temp:= `G1`(v0) @signature `Lq/f;.G1:()Lr/b$b;` @kind virtual;
  #L5548e6.  v0:= temp @kind object;
  #L5548e8.  v1.`q.m.b1` @type ^`r.b$b` := v0 @kind object;
  #L5548ec.  goto L5548c0;
  #L5548ee.  v0:= v1.`q.m.a1` @type ^`r.b$a` @kind object;
  #L5548f2.  v0.`r.b$a.a` @type ^`q.e$b` := v3 @kind object;
  #L5548f6.  v0.`r.b$a.b` @type ^`q.e$b` := v5 @kind object;
  #L5548fa.  v0.`r.b$a.c` @type ^`int` := v4;
  #L5548fe.  v0.`r.b$a.d` @type ^`int` := v6;
  #L554902.  v3:= v1.`q.m.b1` @type ^`r.b$b` @kind object;
  #L554906.  call `b`(v3, v2, v0) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L55490c.  v3:= v1.`q.m.a1` @type ^`r.b$a` @kind object;
  #L554910.  v3:= v3.`r.b$a.e` @type ^`int`;
  #L554914.  call `h1`(v2, v3) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L55491a.  v3:= v1.`q.m.a1` @type ^`r.b$a` @kind object;
  #L55491e.  v3:= v3.`r.b$a.f` @type ^`int`;
  #L554922.  call `I0`(v2, v3) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L554928.  v3:= v1.`q.m.a1` @type ^`r.b$a` @kind object;
  #L55492c.  v3:= v3.`r.b$a.h` @type ^`boolean` @kind boolean;
  #L554930.  call `H0`(v2, v3) @signature `Lq/e;.H0:(Z)V` @kind virtual;
  #L554936.  v3:= v1.`q.m.a1` @type ^`r.b$a` @kind object;
  #L55493a.  v3:= v3.`r.b$a.g` @type ^`int`;
  #L55493e.  call `x0`(v2, v3) @signature `Lq/e;.x0:(I)V` @kind virtual;
  #L554944.  return @kind void;
}
procedure `boolean` `B1`(`q.m` v9 @kind this) @signature `Lq/m;.B1:()Z` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L554638.  v0:= v9.`q.e.Y` @type ^`q.e` @kind object;
  #L55463c.  if v0 == 0 then goto L55464e;
  #L554640.  v0:= (`q.f`) v0 @kind object;
  #L554644.  call temp:= `G1`(v0) @signature `Lq/f;.G1:()Lr/b$b;` @kind virtual;
  #L55464a.  v0:= temp @kind object;
  #L55464c.  goto L554650;
  #L55464e.  v0:= 0I;
  #L554650.  v1:= 0I;
  #L554652.  if v0 != 0 then goto L554658;
  #L554656.  return v1;
  #L554658.  v2:= 0I;
  #L55465a.  v3:= v9.`q.j.Q0` @type ^`int`;
  #L55465e.  v4:= 1I;
  #L554660.  if v2 >= v3 then goto L554724;
  #L554664.  v3:= v9.`q.j.P0` @type ^`q.e`[] @kind object;
  #L554668.  v3:= v3[v2] @kind object;
  #L55466c.  if v3 != 0 then goto L554672;
  #L554670.  goto L55471e;
  #L554672.  v5:= instanceof @variable v3 @type ^`q.h` @kind boolean;
  #L554676.  if v5 == 0 then goto L55467c;
  #L55467a.  goto L55471e;
  #L55467c.  call temp:= `w`(v3, v1) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L554682.  v5:= temp @kind object;
  #L554684.  call temp:= `w`(v3, v4) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L55468a.  v6:= temp @kind object;
  #L55468c.  v7:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L554690.  if v5 != v7 then goto L5546aa;
  #L554694.  v8:= v3.`q.e.s` @type ^`int`;
  #L554698.  if v8 == v4 then goto L5546aa;
  #L55469c.  if v6 != v7 then goto L5546aa;
  #L5546a0.  v8:= v3.`q.e.t` @type ^`int`;
  #L5546a4.  if v8 == v4 then goto L5546aa;
  #L5546a8.  goto L5546ac;
  #L5546aa.  v4:= 0I;
  #L5546ac.  if v4 == 0 then goto L5546b2;
  #L5546b0.  goto L55471e;
  #L5546b2.  if v5 != v7 then goto L5546ba;
  #L5546b6.  v5:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5546ba.  if v6 != v7 then goto L5546c2;
  #L5546be.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L5546c2.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L5546c6.  v4.`r.b$a.a` @type ^`q.e$b` := v5 @kind object;
  #L5546ca.  v4.`r.b$a.b` @type ^`q.e$b` := v6 @kind object;
  #L5546ce.  call temp:= `V`(v3) @signature `Lq/e;.V:()I` @kind virtual;
  #L5546d4.  v5:= temp;
  #L5546d6.  v4.`r.b$a.c` @type ^`int` := v5;
  #L5546da.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L5546de.  call temp:= `z`(v3) @signature `Lq/e;.z:()I` @kind virtual;
  #L5546e4.  v5:= temp;
  #L5546e6.  v4.`r.b$a.d` @type ^`int` := v5;
  #L5546ea.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L5546ee.  call `b`(v0, v3, v4) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L5546f4.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L5546f8.  v4:= v4.`r.b$a.e` @type ^`int`;
  #L5546fc.  call `h1`(v3, v4) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L554702.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L554706.  v4:= v4.`r.b$a.f` @type ^`int`;
  #L55470a.  call `I0`(v3, v4) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L554710.  v4:= v9.`q.m.a1` @type ^`r.b$a` @kind object;
  #L554714.  v4:= v4.`r.b$a.g` @type ^`int`;
  #L554718.  call `x0`(v3, v4) @signature `Lq/e;.x0:(I)V` @kind virtual;
  #L55471e.  v2:= v2 + 1;
  #L554722.  goto L55465a;
  #L554724.  return v4;
}
procedure `boolean` `C1`(`q.m` v1 @kind this) @signature `Lq/m;.C1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554738.  v0:= v1.`q.m.X0` @type ^`boolean` @kind boolean;
  #L55473c.  return v0;
}
procedure `void` `D1`(`q.m` v0 @kind this, `boolean` v1 ) @signature `Lq/m;.D1:(Z)V` @AccessFlag PROTECTED {
    temp;

  #L554958.  v0.`q.m.X0` @type ^`boolean` := v1 @kind boolean;
  #L55495c.  return @kind void;
}
procedure `void` `E1`(`q.m` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lq/m;.E1:(II)V` @AccessFlag PUBLIC {
    temp;

  #L554970.  v0.`q.m.Y0` @type ^`int` := v1;
  #L554974.  v0.`q.m.Z0` @type ^`int` := v2;
  #L554978.  return @kind void;
}
procedure `void` `F1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.F1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L55498c.  v0.`q.m.R0` @type ^`int` := v1;
  #L554990.  v0.`q.m.S0` @type ^`int` := v1;
  #L554994.  v0.`q.m.T0` @type ^`int` := v1;
  #L554998.  v0.`q.m.U0` @type ^`int` := v1;
  #L55499c.  return @kind void;
}
procedure `void` `G1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.G1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5549b0.  v0.`q.m.S0` @type ^`int` := v1;
  #L5549b4.  return @kind void;
}
procedure `void` `H1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.H1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5549c8.  v0.`q.m.U0` @type ^`int` := v1;
  #L5549cc.  return @kind void;
}
procedure `void` `I1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.I1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5549e0.  v0.`q.m.V0` @type ^`int` := v1;
  #L5549e4.  return @kind void;
}
procedure `void` `J1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.J1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L5549f8.  v0.`q.m.W0` @type ^`int` := v1;
  #L5549fc.  return @kind void;
}
procedure `void` `K1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.K1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L554a10.  v0.`q.m.T0` @type ^`int` := v1;
  #L554a14.  v0.`q.m.V0` @type ^`int` := v1;
  #L554a18.  v0.`q.m.W0` @type ^`int` := v1;
  #L554a1c.  return @kind void;
}
procedure `void` `L1`(`q.m` v0 @kind this, `int` v1 ) @signature `Lq/m;.L1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L554a30.  v0.`q.m.R0` @type ^`int` := v1;
  #L554a34.  return @kind void;
}
procedure `void` `c`(`q.m` v0 @kind this, `q.f` v1 @kind object) @signature `Lq/m;.c:(Lq/f;)V` @AccessFlag PUBLIC {
    temp;

  #L554a48.  call `r1`(v0) @signature `Lq/m;.r1:()V` @kind virtual;
  #L554a4e.  return @kind void;
}
procedure `void` `q1`(`q.m` v2 @kind this, `boolean` v3 ) @signature `Lq/m;.q1:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L554834.  v0:= v2.`q.m.T0` @type ^`int`;
  #L554838.  if v0 > 0 then goto L554844;
  #L55483c.  v1:= v2.`q.m.U0` @type ^`int`;
  #L554840.  if v1 <= 0 then goto L554862;
  #L554844.  if v3 == 0 then goto L554856;
  #L554848.  v3:= v2.`q.m.U0` @type ^`int`;
  #L55484c.  v2.`q.m.V0` @type ^`int` := v3;
  #L554850.  v2.`q.m.W0` @type ^`int` := v0;
  #L554854.  goto L554862;
  #L554856.  v2.`q.m.V0` @type ^`int` := v0;
  #L55485a.  v3:= v2.`q.m.U0` @type ^`int`;
  #L55485e.  v2.`q.m.W0` @type ^`int` := v3;
  #L554862.  return @kind void;
}
procedure `void` `r1`(`q.m` v3 @kind this) @signature `Lq/m;.r1:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L554874.  v0:= 0I;
  #L554876.  v1:= v3.`q.j.Q0` @type ^`int`;
  #L55487a.  if v0 >= v1 then goto L554898;
  #L55487e.  v1:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L554882.  v1:= v1[v0] @kind object;
  #L554886.  if v1 == 0 then goto L554892;
  #L55488a.  v2:= 1I;
  #L55488c.  call `R0`(v1, v2) @signature `Lq/e;.R0:(Z)V` @kind virtual;
  #L554892.  v0:= v0 + 1;
  #L554896.  goto L554876;
  #L554898.  return @kind void;
}
procedure `boolean` `s1`(`q.m` v3 @kind this, `java.util.HashSet` v4 @kind object) @signature `Lq/m;.s1:(Ljava/util/HashSet;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5545fc.  v0:= 0I;
  #L5545fe.  v1:= 0I;
  #L554600.  v2:= v3.`q.j.Q0` @type ^`int`;
  #L554604.  if v1 >= v2 then goto L554626;
  #L554608.  v2:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L55460c.  v2:= v2[v1] @kind object;
  #L554610.  call temp:= `contains`(v4, v2) @signature `Ljava/util/HashSet;.contains:(Ljava/lang/Object;)Z` @kind virtual;
  #L554616.  v2:= temp;
  #L554618.  if v2 == 0 then goto L554620;
  #L55461c.  v4:= 1I;
  #L55461e.  return v4;
  #L554620.  v1:= v1 + 1;
  #L554624.  goto L554600;
  #L554626.  return v0;
}
procedure `int` `t1`(`q.m` v1 @kind this) @signature `Lq/m;.t1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554750.  v0:= v1.`q.m.Z0` @type ^`int`;
  #L554754.  return v0;
}
procedure `int` `u1`(`q.m` v1 @kind this) @signature `Lq/m;.u1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554768.  v0:= v1.`q.m.Y0` @type ^`int`;
  #L55476c.  return v0;
}
procedure `int` `v1`(`q.m` v1 @kind this) @signature `Lq/m;.v1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554780.  v0:= v1.`q.m.S0` @type ^`int`;
  #L554784.  return v0;
}
procedure `int` `w1`(`q.m` v1 @kind this) @signature `Lq/m;.w1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554798.  v0:= v1.`q.m.V0` @type ^`int`;
  #L55479c.  return v0;
}
procedure `int` `x1`(`q.m` v1 @kind this) @signature `Lq/m;.x1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5547b0.  v0:= v1.`q.m.W0` @type ^`int`;
  #L5547b4.  return v0;
}
procedure `int` `y1`(`q.m` v1 @kind this) @signature `Lq/m;.y1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5547c8.  v0:= v1.`q.m.R0` @type ^`int`;
  #L5547cc.  return v0;
}
procedure `void` `z1`(`q.m` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 ) @signature `Lq/m;.z1:(IIII)V` @AccessFlag PUBLIC {
    temp;

  #L5548ac.  return @kind void;
}
