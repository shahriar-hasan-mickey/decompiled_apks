record `q.j` @kind class @AccessFlag PUBLIC extends `q.e` @kind class, `q.i` @kind interface {
  `q.e`[] `q.j.P0` @AccessFlag PUBLIC;
  `int` `q.j.Q0` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`q.j` v1 @kind this) @signature `Lq/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L5541b0.  call `<init>`(v1) @signature `Lq/e;.<init>:()V` @kind direct;
  #L5541b6.  v0:= 4I;
  #L5541b8.  v0:= new `q.e`[v0];
  #L5541bc.  v1.`q.j.P0` @type ^`q.e`[] := v0 @kind object;
  #L5541c0.  v0:= 0I;
  #L5541c2.  v1.`q.j.Q0` @type ^`int` := v0;
  #L5541c6.  return @kind void;
}
procedure `void` `a`(`q.j` v3 @kind this, `q.e` v4 @kind object) @signature `Lq/j;.a:(Lq/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L5541d8.  if v4 == v3 then goto L55421e;
  #L5541dc.  if v4 != 0 then goto L5541e2;
  #L5541e0.  goto L55421e;
  #L5541e2.  v0:= v3.`q.j.Q0` @type ^`int`;
  #L5541e6.  v0:= v0 + 1;
  #L5541ea.  v1:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L5541ee.  v2:= length @variable v1;
  #L5541f0.  if v0 <= v2 then goto L55420a;
  #L5541f4.  v0:= length @variable v1;
  #L5541f6.  v0:= v0 * 2;
  #L5541fa.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L554200.  v0:= temp @kind object;
  #L554202.  v0:= (`q.e`[]) v0 @kind object;
  #L554206.  v3.`q.j.P0` @type ^`q.e`[] := v0 @kind object;
  #L55420a.  v0:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L55420e.  v1:= v3.`q.j.Q0` @type ^`int`;
  #L554212.  v0[v1]:= v4 @kind object;
  #L554216.  v1:= v1 + 1;
  #L55421a.  v3.`q.j.Q0` @type ^`int` := v1;
  #L55421e.  return @kind void;
}
procedure `void` `b`(`q.j` v2 @kind this) @signature `Lq/j;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5542cc.  v0:= 0I;
  #L5542ce.  v2.`q.j.Q0` @type ^`int` := v0;
  #L5542d2.  v0:= v2.`q.j.P0` @type ^`q.e`[] @kind object;
  #L5542d6.  v1:= 0I;
  #L5542d8.  call `fill`(v0, v1) @signature `Ljava/util/Arrays;.fill:([Ljava/lang/Object;Ljava/lang/Object;)V` @kind static;
  #L5542de.  return @kind void;
}
procedure `void` `c`(`q.j` v0 @kind this, `q.f` v1 @kind object) @signature `Lq/j;.c:(Lq/f;)V` @AccessFlag PUBLIC {
    temp;

  #L5542f0.  return @kind void;
}
procedure `void` `n`(`q.j` v3 @kind this, `q.e` v4 @kind object, `java.util.HashMap` v5 @kind object) @signature `Lq/j;.n:(Lq/e;Ljava/util/HashMap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L554280.  call `n`(v3, v4, v5) @signature `Lq/e;.n:(Lq/e;Ljava/util/HashMap;)V` @kind super;
  #L554286.  v4:= (`q.j`) v4 @kind object;
  #L55428a.  v0:= 0I;
  #L55428c.  v3.`q.j.Q0` @type ^`int` := v0;
  #L554290.  v1:= v4.`q.j.Q0` @type ^`int`;
  #L554294.  if v0 >= v1 then goto L5542b8;
  #L554298.  v2:= v4.`q.j.P0` @type ^`q.e`[] @kind object;
  #L55429c.  v2:= v2[v0] @kind object;
  #L5542a0.  call temp:= `get`(v5, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L5542a6.  v2:= temp @kind object;
  #L5542a8.  v2:= (`q.e`) v2 @kind object;
  #L5542ac.  call `a`(v3, v2) @signature `Lq/j;.a:(Lq/e;)V` @kind virtual;
  #L5542b2.  v0:= v0 + 1;
  #L5542b6.  goto L554294;
  #L5542b8.  return @kind void;
}
procedure `void` `o1`(`q.j` v3 @kind this, `java.util.ArrayList` v4 @kind object, `int` v5 , `r.o` v6 @kind object) @signature `Lq/j;.o1:(Ljava/util/ArrayList;ILr/o;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L554230.  v0:= 0I;
  #L554232.  v1:= 0I;
  #L554234.  v2:= v3.`q.j.Q0` @type ^`int`;
  #L554238.  if v1 >= v2 then goto L554250;
  #L55423c.  v2:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L554240.  v2:= v2[v1] @kind object;
  #L554244.  call temp:= `a`(v6, v2) @signature `Lr/o;.a:(Lq/e;)Z` @kind virtual;
  #L55424a.  v1:= v1 + 1;
  #L55424e.  goto L554234;
  #L554250.  v1:= v3.`q.j.Q0` @type ^`int`;
  #L554254.  if v0 >= v1 then goto L55426c;
  #L554258.  v1:= v3.`q.j.P0` @type ^`q.e`[] @kind object;
  #L55425c.  v1:= v1[v0] @kind object;
  #L554260.  call temp:= `a`(v1, v5, v4, v6) @signature `Lr/i;.a:(Lq/e;ILjava/util/ArrayList;Lr/o;)Lr/o;` @kind static;
  #L554266.  v0:= v0 + 1;
  #L55426a.  goto L554250;
  #L55426c.  return @kind void;
}
procedure `int` `p1`(`q.j` v4 @kind this, `int` v5 ) @signature `Lq/j;.p1:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L554164.  v0:= 0I;
  #L554166.  v1:= v4.`q.j.Q0` @type ^`int`;
  #L55416a.  v2:= -1I;
  #L55416c.  if v0 >= v1 then goto L55419c;
  #L554170.  v1:= v4.`q.j.P0` @type ^`q.e`[] @kind object;
  #L554174.  v1:= v1[v0] @kind object;
  #L554178.  if v5 != 0 then goto L554186;
  #L55417c.  v3:= v1.`q.e.M0` @type ^`int`;
  #L554180.  if v3 == v2 then goto L554186;
  #L554184.  return v3;
  #L554186.  v3:= 1I;
  #L554188.  if v5 != v3 then goto L554196;
  #L55418c.  v1:= v1.`q.e.N0` @type ^`int`;
  #L554190.  if v1 == v2 then goto L554196;
  #L554194.  return v1;
  #L554196.  v0:= v0 + 1;
  #L55419a.  goto L554166;
  #L55419c.  return v2;
}
