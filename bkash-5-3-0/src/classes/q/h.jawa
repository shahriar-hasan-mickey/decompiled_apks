record `q.h` @kind class @AccessFlag PUBLIC extends `q.e` @kind class {
  `float` `q.h.P0` @AccessFlag PROTECTED;
  `int` `q.h.Q0` @AccessFlag PROTECTED;
  `int` `q.h.R0` @AccessFlag PROTECTED;
  `q.d` `q.h.S0` @AccessFlag PRIVATE;
  `int` `q.h.T0` @AccessFlag PRIVATE;
  `boolean` `q.h.U0` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`q.h` v4 @kind this) @signature `Lq/h;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L553d40.  call `<init>`(v4) @signature `Lq/e;.<init>:()V` @kind direct;
  #L553d46.  v0:= -1.0F;
  #L553d4a.  v4.`q.h.P0` @type ^`float` := v0;
  #L553d4e.  v0:= -1I;
  #L553d50.  v4.`q.h.Q0` @type ^`int` := v0;
  #L553d54.  v4.`q.h.R0` @type ^`int` := v0;
  #L553d58.  v0:= v4.`q.e.N` @type ^`q.d` @kind object;
  #L553d5c.  v4.`q.h.S0` @type ^`q.d` := v0 @kind object;
  #L553d60.  v0:= 0I;
  #L553d62.  v4.`q.h.T0` @type ^`int` := v0;
  #L553d66.  v1:= v4.`q.e.V` @type ^`java.util.ArrayList` @kind object;
  #L553d6a.  call `clear`(v1) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L553d70.  v1:= v4.`q.e.V` @type ^`java.util.ArrayList` @kind object;
  #L553d74.  v2:= v4.`q.h.S0` @type ^`q.d` @kind object;
  #L553d78.  call temp:= `add`(v1, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L553d7e.  v1:= v4.`q.e.U` @type ^`q.d`[] @kind object;
  #L553d82.  v1:= length @variable v1;
  #L553d84.  if v0 >= v1 then goto L553d9a;
  #L553d88.  v2:= v4.`q.e.U` @type ^`q.d`[] @kind object;
  #L553d8c.  v3:= v4.`q.h.S0` @type ^`q.d` @kind object;
  #L553d90.  v2[v0]:= v3 @kind object;
  #L553d94.  v0:= v0 + 1;
  #L553d98.  goto L553d84;
  #L553d9a.  return @kind void;
}
procedure `void` `g`(`q.h` v7 @kind this, `n.d` v8 @kind object, `boolean` v9 ) @signature `Lq/h;.g:(Ln/d;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L553dac.  call temp:= `M`(v7) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L553db2.  v9:= temp @kind object;
  #L553db4.  v9:= (`q.f`) v9 @kind object;
  #L553db8.  if v9 != 0 then goto L553dbe;
  #L553dbc.  return @kind void;
  #L553dbe.  v0:= `@@q.d$b.LEFT` @type ^`q.d$b` @kind object;
  #L553dc2.  call temp:= `q`(v9, v0) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L553dc8.  v0:= temp @kind object;
  #L553dca.  v1:= `@@q.d$b.RIGHT` @type ^`q.d$b` @kind object;
  #L553dce.  call temp:= `q`(v9, v1) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L553dd4.  v1:= temp @kind object;
  #L553dd6.  v2:= v7.`q.e.Y` @type ^`q.e` @kind object;
  #L553dda.  v3:= 1I;
  #L553ddc.  v4:= 0I;
  #L553dde.  if v2 == 0 then goto L553df6;
  #L553de2.  v2:= v2.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L553de6.  v2:= v2[v4] @kind object;
  #L553dea.  v5:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L553dee.  if v2 != v5 then goto L553df6;
  #L553df2.  v2:= 1I;
  #L553df4.  goto L553df8;
  #L553df6.  v2:= 0I;
  #L553df8.  v5:= v7.`q.h.T0` @type ^`int`;
  #L553dfc.  if v5 != 0 then goto L553e36;
  #L553e00.  v0:= `@@q.d$b.TOP` @type ^`q.d$b` @kind object;
  #L553e04.  call temp:= `q`(v9, v0) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L553e0a.  v0:= temp @kind object;
  #L553e0c.  v1:= `@@q.d$b.BOTTOM` @type ^`q.d$b` @kind object;
  #L553e10.  call temp:= `q`(v9, v1) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L553e16.  v1:= temp @kind object;
  #L553e18.  v9:= v7.`q.e.Y` @type ^`q.e` @kind object;
  #L553e1c.  if v9 == 0 then goto L553e32;
  #L553e20.  v9:= v9.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L553e24.  v9:= v9[v3] @kind object;
  #L553e28.  v2:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L553e2c.  if v9 != v2 then goto L553e32;
  #L553e30.  goto L553e34;
  #L553e32.  v3:= 0I;
  #L553e34.  v2:= v3;
  #L553e36.  v9:= v7.`q.h.U0` @type ^`boolean` @kind boolean;
  #L553e3a.  v3:= -1I;
  #L553e3c.  v5:= 5I;
  #L553e3e.  if v9 == 0 then goto L553eba;
  #L553e42.  v9:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553e46.  call temp:= `n`(v9) @signature `Lq/d;.n:()Z` @kind virtual;
  #L553e4c.  v9:= temp;
  #L553e4e.  if v9 == 0 then goto L553eba;
  #L553e52.  v9:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553e56.  call temp:= `q`(v8, v9) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553e5c.  v9:= temp @kind object;
  #L553e5e.  v6:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553e62.  call temp:= `e`(v6) @signature `Lq/d;.e:()I` @kind virtual;
  #L553e68.  v6:= temp;
  #L553e6a.  call `f`(v8, v9, v6) @signature `Ln/d;.f:(Ln/i;I)V` @kind virtual;
  #L553e70.  v6:= v7.`q.h.Q0` @type ^`int`;
  #L553e74.  if v6 == v3 then goto L553e8c;
  #L553e78.  if v2 == 0 then goto L553eb4;
  #L553e7c.  call temp:= `q`(v8, v1) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553e82.  v0:= temp @kind object;
  #L553e84.  call `h`(v8, v0, v9, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553e8a.  goto L553eb4;
  #L553e8c.  v6:= v7.`q.h.R0` @type ^`int`;
  #L553e90.  if v6 == v3 then goto L553eb4;
  #L553e94.  if v2 == 0 then goto L553eb4;
  #L553e98.  call temp:= `q`(v8, v1) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553e9e.  v1:= temp @kind object;
  #L553ea0.  call temp:= `q`(v8, v0) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553ea6.  v0:= temp @kind object;
  #L553ea8.  call `h`(v8, v9, v0, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553eae.  call `h`(v8, v1, v9, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553eb4.  v7.`q.h.U0` @type ^`boolean` := v4 @kind boolean;
  #L553eb8.  return @kind void;
  #L553eba.  v9:= v7.`q.h.Q0` @type ^`int`;
  #L553ebe.  v6:= 8I;
  #L553ec2.  if v9 == v3 then goto L553ef8;
  #L553ec6.  v9:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553eca.  call temp:= `q`(v8, v9) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553ed0.  v9:= temp @kind object;
  #L553ed2.  call temp:= `q`(v8, v0) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553ed8.  v0:= temp @kind object;
  #L553eda.  v3:= v7.`q.h.Q0` @type ^`int`;
  #L553ede.  call temp:= `e`(v8, v9, v0, v3, v6) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L553ee4.  if v2 == 0 then goto L553f70;
  #L553ee8.  call temp:= `q`(v8, v1) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553eee.  v0:= temp @kind object;
  #L553ef0.  call `h`(v8, v0, v9, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553ef6.  goto L553f70;
  #L553ef8.  v9:= v7.`q.h.R0` @type ^`int`;
  #L553efc.  if v9 == v3 then goto L553f3a;
  #L553f00.  v9:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553f04.  call temp:= `q`(v8, v9) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553f0a.  v9:= temp @kind object;
  #L553f0c.  call temp:= `q`(v8, v1) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553f12.  v1:= temp @kind object;
  #L553f14.  v3:= v7.`q.h.R0` @type ^`int`;
  #L553f18.  v3:= -v3 @kind int;
  #L553f1a.  call temp:= `e`(v8, v9, v1, v3, v6) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L553f20.  if v2 == 0 then goto L553f70;
  #L553f24.  call temp:= `q`(v8, v0) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553f2a.  v0:= temp @kind object;
  #L553f2c.  call `h`(v8, v9, v0, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553f32.  call `h`(v8, v1, v9, v4, v5) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L553f38.  goto L553f70;
  #L553f3a.  v9:= v7.`q.h.P0` @type ^`float`;
  #L553f3e.  v0:= -1.0F;
  #L553f42.  v9:= fcmpl(v9, v0);
  #L553f46.  if v9 == 0 then goto L553f70;
  #L553f4a.  v9:= v7.`q.h.S0` @type ^`q.d` @kind object;
  #L553f4e.  call temp:= `q`(v8, v9) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553f54.  v9:= temp @kind object;
  #L553f56.  call temp:= `q`(v8, v1) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L553f5c.  v0:= temp @kind object;
  #L553f5e.  v1:= v7.`q.h.P0` @type ^`float`;
  #L553f62.  call temp:= `s`(v8, v9, v0, v1) @signature `Ln/d;.s:(Ln/d;Ln/i;Ln/i;F)Ln/b;` @kind static;
  #L553f68.  v9:= temp @kind object;
  #L553f6a.  call `d`(v8, v9) @signature `Ln/d;.d:(Ln/b;)V` @kind virtual;
  #L553f70.  return @kind void;
}
procedure `boolean` `h`(`q.h` v1 @kind this) @signature `Lq/h;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c28.  v0:= 1I;
  #L553c2a.  return v0;
}
procedure `boolean` `m0`(`q.h` v1 @kind this) @signature `Lq/h;.m0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c3c.  v0:= v1.`q.h.U0` @type ^`boolean` @kind boolean;
  #L553c40.  return v0;
}
procedure `void` `n`(`q.h` v0 @kind this, `q.e` v1 @kind object, `java.util.HashMap` v2 @kind object) @signature `Lq/h;.n:(Lq/e;Ljava/util/HashMap;)V` @AccessFlag PUBLIC {
    temp;

  #L553f84.  call `n`(v0, v1, v2) @signature `Lq/e;.n:(Lq/e;Ljava/util/HashMap;)V` @kind super;
  #L553f8a.  v1:= (`q.h`) v1 @kind object;
  #L553f8e.  v2:= v1.`q.h.P0` @type ^`float`;
  #L553f92.  v0.`q.h.P0` @type ^`float` := v2;
  #L553f96.  v2:= v1.`q.h.Q0` @type ^`int`;
  #L553f9a.  v0.`q.h.Q0` @type ^`int` := v2;
  #L553f9e.  v2:= v1.`q.h.R0` @type ^`int`;
  #L553fa2.  v0.`q.h.R0` @type ^`int` := v2;
  #L553fa6.  v1:= v1.`q.h.T0` @type ^`int`;
  #L553faa.  call `x1`(v0, v1) @signature `Lq/h;.x1:(I)V` @kind virtual;
  #L553fb0.  return @kind void;
}
procedure `boolean` `n0`(`q.h` v1 @kind this) @signature `Lq/h;.n0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c54.  v0:= v1.`q.h.U0` @type ^`boolean` @kind boolean;
  #L553c58.  return v0;
}
procedure `void` `n1`(`q.h` v2 @kind this, `n.d` v3 @kind object, `boolean` v4 ) @signature `Lq/h;.n1:(Ln/d;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L5540d8.  call temp:= `M`(v2) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L5540de.  v4:= temp @kind object;
  #L5540e0.  if v4 != 0 then goto L5540e6;
  #L5540e4.  return @kind void;
  #L5540e6.  v4:= v2.`q.h.S0` @type ^`q.d` @kind object;
  #L5540ea.  call temp:= `y`(v3, v4) @signature `Ln/d;.y:(Ljava/lang/Object;)I` @kind virtual;
  #L5540f0.  v3:= temp;
  #L5540f2.  v4:= v2.`q.h.T0` @type ^`int`;
  #L5540f6.  v0:= 1I;
  #L5540f8.  v1:= 0I;
  #L5540fa.  if v4 != v0 then goto L554128;
  #L5540fe.  call `j1`(v2, v3) @signature `Lq/e;.j1:(I)V` @kind virtual;
  #L554104.  call `k1`(v2, v1) @signature `Lq/e;.k1:(I)V` @kind virtual;
  #L55410a.  call temp:= `M`(v2) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L554110.  v3:= temp @kind object;
  #L554112.  call temp:= `z`(v3) @signature `Lq/e;.z:()I` @kind virtual;
  #L554118.  v3:= temp;
  #L55411a.  call `I0`(v2, v3) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L554120.  call `h1`(v2, v1) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L554126.  goto L554150;
  #L554128.  call `j1`(v2, v1) @signature `Lq/e;.j1:(I)V` @kind virtual;
  #L55412e.  call `k1`(v2, v3) @signature `Lq/e;.k1:(I)V` @kind virtual;
  #L554134.  call temp:= `M`(v2) @signature `Lq/e;.M:()Lq/e;` @kind virtual;
  #L55413a.  v3:= temp @kind object;
  #L55413c.  call temp:= `V`(v3) @signature `Lq/e;.V:()I` @kind virtual;
  #L554142.  v3:= temp;
  #L554144.  call `h1`(v2, v3) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L55414a.  call `I0`(v2, v1) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L554150.  return @kind void;
}
procedure `q.d` `o1`(`q.h` v1 @kind this) @signature `Lq/h;.o1:()Lq/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553ccc.  v0:= v1.`q.h.S0` @type ^`q.d` @kind object;
  #L553cd0.  return v0 @kind object;
}
procedure `int` `p1`(`q.h` v1 @kind this) @signature `Lq/h;.p1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c84.  v0:= v1.`q.h.T0` @type ^`int`;
  #L553c88.  return v0;
}
procedure `q.d` `q`(`q.h` v2 @kind this, `q.d$b` v3 @kind object) @signature `Lq/h;.q:(Lq/d$b;)Lq/d;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L553ce4.  v0:= `@@q.h$a.a` @type ^`int`[] @kind object;
  #L553ce8.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L553cee.  v3:= temp;
  #L553cf0.  v3:= v0[v3];
  #L553cf4.  v0:= 1I;
  #L553cf6.  if v3 == v0 then goto L553d1c;
  #L553cfa.  v1:= 2I;
  #L553cfc.  if v3 == v1 then goto L553d1c;
  #L553d00.  v0:= 3I;
  #L553d02.  if v3 == v0 then goto L553d0e;
  #L553d06.  v0:= 4I;
  #L553d08.  if v3 == v0 then goto L553d0e;
  #L553d0c.  goto L553d2a;
  #L553d0e.  v3:= v2.`q.h.T0` @type ^`int`;
  #L553d12.  if v3 != 0 then goto L553d2a;
  #L553d16.  v3:= v2.`q.h.S0` @type ^`q.d` @kind object;
  #L553d1a.  return v3 @kind object;
  #L553d1c.  v3:= v2.`q.h.T0` @type ^`int`;
  #L553d20.  if v3 != v0 then goto L553d2a;
  #L553d24.  v3:= v2.`q.h.S0` @type ^`q.d` @kind object;
  #L553d28.  return v3 @kind object;
  #L553d2a.  v3:= 0I;
  #L553d2c.  return v3 @kind object;
}
procedure `int` `q1`(`q.h` v1 @kind this) @signature `Lq/h;.q1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c9c.  v0:= v1.`q.h.Q0` @type ^`int`;
  #L553ca0.  return v0;
}
procedure `int` `r1`(`q.h` v1 @kind this) @signature `Lq/h;.r1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553cb4.  v0:= v1.`q.h.R0` @type ^`int`;
  #L553cb8.  return v0;
}
procedure `float` `s1`(`q.h` v1 @kind this) @signature `Lq/h;.s1:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553c6c.  v0:= v1.`q.h.P0` @type ^`float`;
  #L553c70.  return v0;
}
procedure `void` `t1`(`q.h` v1 @kind this, `int` v2 ) @signature `Lq/h;.t1:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L553fc4.  v0:= v1.`q.h.S0` @type ^`q.d` @kind object;
  #L553fc8.  call `t`(v0, v2) @signature `Lq/d;.t:(I)V` @kind virtual;
  #L553fce.  v2:= 1I;
  #L553fd0.  v1.`q.h.U0` @type ^`boolean` := v2 @kind boolean;
  #L553fd4.  return @kind void;
}
procedure `void` `u1`(`q.h` v2 @kind this, `int` v3 ) @signature `Lq/h;.u1:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L553fe8.  v0:= -1I;
  #L553fea.  if v3 <= v0 then goto L553ffe;
  #L553fee.  v1:= -1.0F;
  #L553ff2.  v2.`q.h.P0` @type ^`float` := v1;
  #L553ff6.  v2.`q.h.Q0` @type ^`int` := v3;
  #L553ffa.  v2.`q.h.R0` @type ^`int` := v0;
  #L553ffe.  return @kind void;
}
procedure `void` `v1`(`q.h` v2 @kind this, `int` v3 ) @signature `Lq/h;.v1:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L554010.  v0:= -1I;
  #L554012.  if v3 <= v0 then goto L554026;
  #L554016.  v1:= -1.0F;
  #L55401a.  v2.`q.h.P0` @type ^`float` := v1;
  #L55401e.  v2.`q.h.Q0` @type ^`int` := v0;
  #L554022.  v2.`q.h.R0` @type ^`int` := v3;
  #L554026.  return @kind void;
}
procedure `void` `w1`(`q.h` v1 @kind this, `float` v2 ) @signature `Lq/h;.w1:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L554038.  v0:= -1.0F;
  #L55403c.  v0:= fcmpl(v2, v0);
  #L554040.  if v0 <= 0 then goto L554052;
  #L554044.  v1.`q.h.P0` @type ^`float` := v2;
  #L554048.  v2:= -1I;
  #L55404a.  v1.`q.h.Q0` @type ^`int` := v2;
  #L55404e.  v1.`q.h.R0` @type ^`int` := v2;
  #L554052.  return @kind void;
}
procedure `void` `x1`(`q.h` v3 @kind this, `int` v4 ) @signature `Lq/h;.x1:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L554064.  v0:= v3.`q.h.T0` @type ^`int`;
  #L554068.  if v0 != v4 then goto L55406e;
  #L55406c.  return @kind void;
  #L55406e.  v3.`q.h.T0` @type ^`int` := v4;
  #L554072.  v4:= v3.`q.e.V` @type ^`java.util.ArrayList` @kind object;
  #L554076.  call `clear`(v4) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L55407c.  v4:= v3.`q.h.T0` @type ^`int`;
  #L554080.  v0:= 1I;
  #L554082.  if v4 != v0 then goto L554090;
  #L554086.  v4:= v3.`q.e.M` @type ^`q.d` @kind object;
  #L55408a.  v3.`q.h.S0` @type ^`q.d` := v4 @kind object;
  #L55408e.  goto L554098;
  #L554090.  v4:= v3.`q.e.N` @type ^`q.d` @kind object;
  #L554094.  v3.`q.h.S0` @type ^`q.d` := v4 @kind object;
  #L554098.  v4:= v3.`q.e.V` @type ^`java.util.ArrayList` @kind object;
  #L55409c.  v0:= v3.`q.h.S0` @type ^`q.d` @kind object;
  #L5540a0.  call temp:= `add`(v4, v0) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L5540a6.  v4:= v3.`q.e.U` @type ^`q.d`[] @kind object;
  #L5540aa.  v4:= length @variable v4;
  #L5540ac.  v0:= 0I;
  #L5540ae.  if v0 >= v4 then goto L5540c4;
  #L5540b2.  v1:= v3.`q.e.U` @type ^`q.d`[] @kind object;
  #L5540b6.  v2:= v3.`q.h.S0` @type ^`q.d` @kind object;
  #L5540ba.  v1[v0]:= v2 @kind object;
  #L5540be.  v0:= v0 + 1;
  #L5540c2.  goto L5540ae;
  #L5540c4.  return @kind void;
}
