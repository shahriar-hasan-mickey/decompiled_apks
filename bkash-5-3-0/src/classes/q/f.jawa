record `q.f` @kind class @AccessFlag PUBLIC extends `q.n` @kind class {
  `r.b` `q.f.Q0` @AccessFlag ;
  `r.e` `q.f.R0` @AccessFlag PUBLIC;
  `int` `q.f.S0` @AccessFlag PRIVATE;
  `r.b$b` `q.f.T0` @AccessFlag PROTECTED;
  `boolean` `q.f.U0` @AccessFlag PRIVATE;
  `n.d` `q.f.V0` @AccessFlag PROTECTED;
  `int` `q.f.W0` @AccessFlag ;
  `int` `q.f.X0` @AccessFlag ;
  `int` `q.f.Y0` @AccessFlag PUBLIC;
  `int` `q.f.Z0` @AccessFlag PUBLIC;
  `q.c`[] `q.f.a1` @AccessFlag ;
  `q.c`[] `q.f.b1` @AccessFlag ;
  `int` `q.f.c1` @AccessFlag PRIVATE;
  `boolean` `q.f.d1` @AccessFlag PRIVATE;
  `boolean` `q.f.e1` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `q.f.f1` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `q.f.g1` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `q.f.h1` @AccessFlag PRIVATE;
  `java.lang.ref.WeakReference` `q.f.i1` @AccessFlag PRIVATE;
  `java.util.HashSet` `q.f.j1` @AccessFlag ;
  `r.b$a` `q.f.k1` @AccessFlag PUBLIC;
}
procedure `void` `<clinit>`() @signature `Lq/f;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L54d2d8.  return @kind void;
}
procedure `void` `<init>`(`q.f` v4 @kind this) @signature `Lq/f;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d2ec.  call `<init>`(v4) @signature `Lq/n;.<init>:()V` @kind direct;
  #L54d2f2.  v0:= new `r.b`;
  #L54d2f6.  call `<init>`(v0, v4) @signature `Lr/b;.<init>:(Lq/f;)V` @kind direct;
  #L54d2fc.  v4.`q.f.Q0` @type ^`r.b` := v0 @kind object;
  #L54d300.  v0:= new `r.e`;
  #L54d304.  call `<init>`(v0, v4) @signature `Lr/e;.<init>:(Lq/f;)V` @kind direct;
  #L54d30a.  v4.`q.f.R0` @type ^`r.e` := v0 @kind object;
  #L54d30e.  v0:= 0I;
  #L54d310.  v4.`q.f.T0` @type ^`r.b$b` := v0 @kind object;
  #L54d314.  v1:= 0I;
  #L54d316.  v4.`q.f.U0` @type ^`boolean` := v1 @kind boolean;
  #L54d31a.  v2:= new `n.d`;
  #L54d31e.  call `<init>`(v2) @signature `Ln/d;.<init>:()V` @kind direct;
  #L54d324.  v4.`q.f.V0` @type ^`n.d` := v2 @kind object;
  #L54d328.  v4.`q.f.Y0` @type ^`int` := v1;
  #L54d32c.  v4.`q.f.Z0` @type ^`int` := v1;
  #L54d330.  v2:= 4I;
  #L54d332.  v3:= new `q.c`[v2];
  #L54d336.  v4.`q.f.a1` @type ^`q.c`[] := v3 @kind object;
  #L54d33a.  v2:= new `q.c`[v2];
  #L54d33e.  v4.`q.f.b1` @type ^`q.c`[] := v2 @kind object;
  #L54d342.  v2:= 257I;
  #L54d346.  v4.`q.f.c1` @type ^`int` := v2;
  #L54d34a.  v4.`q.f.d1` @type ^`boolean` := v1 @kind boolean;
  #L54d34e.  v4.`q.f.e1` @type ^`boolean` := v1 @kind boolean;
  #L54d352.  v4.`q.f.f1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d356.  v4.`q.f.g1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d35a.  v4.`q.f.h1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d35e.  v4.`q.f.i1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d362.  v0:= new `java.util.HashSet`;
  #L54d366.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L54d36c.  v4.`q.f.j1` @type ^`java.util.HashSet` := v0 @kind object;
  #L54d370.  v0:= new `r.b$a`;
  #L54d374.  call `<init>`(v0) @signature `Lr/b$a;.<init>:()V` @kind direct;
  #L54d37a.  v4.`q.f.k1` @type ^`r.b$a` := v0 @kind object;
  #L54d37e.  return @kind void;
}
procedure `boolean` `Q1`(`int` v5 , `q.e` v6 @kind object, `r.b$b` v7 @kind object, `r.b$a` v8 @kind object, `int` v9 ) @signature `Lq/f;.Q1:(ILq/e;Lr/b$b;Lr/b$a;I)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54cf38.  v5:= 0I;
  #L54cf3a.  if v7 != 0 then goto L54cf40;
  #L54cf3e.  return v5;
  #L54cf40.  call temp:= `U`(v6) @signature `Lq/e;.U:()I` @kind virtual;
  #L54cf46.  v0:= temp;
  #L54cf48.  v1:= 8I;
  #L54cf4c.  if v0 == v1 then goto L54d1a0;
  #L54cf50.  v0:= instanceof @variable v6 @type ^`q.h` @kind boolean;
  #L54cf54.  if v0 != 0 then goto L54d1a0;
  #L54cf58.  v0:= instanceof @variable v6 @type ^`q.a` @kind boolean;
  #L54cf5c.  if v0 == 0 then goto L54cf64;
  #L54cf60.  goto L54d1a0;
  #L54cf64.  call temp:= `C`(v6) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L54cf6a.  v0:= temp @kind object;
  #L54cf6c.  v8.`r.b$a.a` @type ^`q.e$b` := v0 @kind object;
  #L54cf70.  call temp:= `S`(v6) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L54cf76.  v0:= temp @kind object;
  #L54cf78.  v8.`r.b$a.b` @type ^`q.e$b` := v0 @kind object;
  #L54cf7c.  call temp:= `V`(v6) @signature `Lq/e;.V:()I` @kind virtual;
  #L54cf82.  v0:= temp;
  #L54cf84.  v8.`r.b$a.c` @type ^`int` := v0;
  #L54cf88.  call temp:= `z`(v6) @signature `Lq/e;.z:()I` @kind virtual;
  #L54cf8e.  v0:= temp;
  #L54cf90.  v8.`r.b$a.d` @type ^`int` := v0;
  #L54cf94.  v8.`r.b$a.i` @type ^`boolean` := v5 @kind boolean;
  #L54cf98.  v8.`r.b$a.j` @type ^`int` := v9;
  #L54cf9c.  v9:= v8.`r.b$a.a` @type ^`q.e$b` @kind object;
  #L54cfa0.  v0:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L54cfa4.  v1:= 1I;
  #L54cfa6.  if v9 != v0 then goto L54cfae;
  #L54cfaa.  v9:= 1I;
  #L54cfac.  goto L54cfb0;
  #L54cfae.  v9:= 0I;
  #L54cfb0.  v2:= v8.`r.b$a.b` @type ^`q.e$b` @kind object;
  #L54cfb4.  if v2 != v0 then goto L54cfbc;
  #L54cfb8.  v0:= 1I;
  #L54cfba.  goto L54cfbe;
  #L54cfbc.  v0:= 0I;
  #L54cfbe.  v2:= 0I;
  #L54cfc0.  if v9 == 0 then goto L54cfd4;
  #L54cfc4.  v3:= v6.`q.e.b0` @type ^`float`;
  #L54cfc8.  v3:= fcmpl(v3, v2);
  #L54cfcc.  if v3 <= 0 then goto L54cfd4;
  #L54cfd0.  v3:= 1I;
  #L54cfd2.  goto L54cfd6;
  #L54cfd4.  v3:= 0I;
  #L54cfd6.  if v0 == 0 then goto L54cfea;
  #L54cfda.  v4:= v6.`q.e.b0` @type ^`float`;
  #L54cfde.  v2:= fcmpl(v4, v2);
  #L54cfe2.  if v2 <= 0 then goto L54cfea;
  #L54cfe6.  v2:= 1I;
  #L54cfe8.  goto L54cfec;
  #L54cfea.  v2:= 0I;
  #L54cfec.  if v9 == 0 then goto L54d026;
  #L54cff0.  call temp:= `Z`(v6, v5) @signature `Lq/e;.Z:(I)Z` @kind virtual;
  #L54cff6.  v4:= temp;
  #L54cff8.  if v4 == 0 then goto L54d026;
  #L54cffc.  v4:= v6.`q.e.s` @type ^`int`;
  #L54d000.  if v4 != 0 then goto L54d026;
  #L54d004.  if v3 != 0 then goto L54d026;
  #L54d008.  v9:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d00c.  v8.`r.b$a.a` @type ^`q.e$b` := v9 @kind object;
  #L54d010.  if v0 == 0 then goto L54d024;
  #L54d014.  v9:= v6.`q.e.t` @type ^`int`;
  #L54d018.  if v9 != 0 then goto L54d024;
  #L54d01c.  v9:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d020.  v8.`r.b$a.a` @type ^`q.e$b` := v9 @kind object;
  #L54d024.  v9:= 0I;
  #L54d026.  if v0 == 0 then goto L54d060;
  #L54d02a.  call temp:= `Z`(v6, v1) @signature `Lq/e;.Z:(I)Z` @kind virtual;
  #L54d030.  v4:= temp;
  #L54d032.  if v4 == 0 then goto L54d060;
  #L54d036.  v4:= v6.`q.e.t` @type ^`int`;
  #L54d03a.  if v4 != 0 then goto L54d060;
  #L54d03e.  if v2 != 0 then goto L54d060;
  #L54d042.  v0:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d046.  v8.`r.b$a.b` @type ^`q.e$b` := v0 @kind object;
  #L54d04a.  if v9 == 0 then goto L54d05e;
  #L54d04e.  v0:= v6.`q.e.s` @type ^`int`;
  #L54d052.  if v0 != 0 then goto L54d05e;
  #L54d056.  v0:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d05a.  v8.`r.b$a.b` @type ^`q.e$b` := v0 @kind object;
  #L54d05e.  v0:= 0I;
  #L54d060.  call temp:= `m0`(v6) @signature `Lq/e;.m0:()Z` @kind virtual;
  #L54d066.  v4:= temp;
  #L54d068.  if v4 == 0 then goto L54d076;
  #L54d06c.  v9:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d070.  v8.`r.b$a.a` @type ^`q.e$b` := v9 @kind object;
  #L54d074.  v9:= 0I;
  #L54d076.  call temp:= `n0`(v6) @signature `Lq/e;.n0:()Z` @kind virtual;
  #L54d07c.  v4:= temp;
  #L54d07e.  if v4 == 0 then goto L54d08c;
  #L54d082.  v0:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d086.  v8.`r.b$a.b` @type ^`q.e$b` := v0 @kind object;
  #L54d08a.  v0:= 0I;
  #L54d08c.  v4:= 4I;
  #L54d08e.  if v3 == 0 then goto L54d0e8;
  #L54d092.  v3:= v6.`q.e.u` @type ^`int`[] @kind object;
  #L54d096.  v5:= v3[v5];
  #L54d09a.  if v5 != v4 then goto L54d0a8;
  #L54d09e.  v5:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d0a2.  v8.`r.b$a.a` @type ^`q.e$b` := v5 @kind object;
  #L54d0a6.  goto L54d0e8;
  #L54d0a8.  if v0 != 0 then goto L54d0e8;
  #L54d0ac.  v5:= v8.`r.b$a.b` @type ^`q.e$b` @kind object;
  #L54d0b0.  v0:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d0b4.  if v5 != v0 then goto L54d0be;
  #L54d0b8.  v5:= v8.`r.b$a.d` @type ^`int`;
  #L54d0bc.  goto L54d0d0;
  #L54d0be.  v5:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d0c2.  v8.`r.b$a.a` @type ^`q.e$b` := v5 @kind object;
  #L54d0c6.  call `b`(v7, v6, v8) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L54d0cc.  v5:= v8.`r.b$a.f` @type ^`int`;
  #L54d0d0.  v8.`r.b$a.a` @type ^`q.e$b` := v0 @kind object;
  #L54d0d4.  call temp:= `x`(v6) @signature `Lq/e;.x:()F` @kind virtual;
  #L54d0da.  v0:= temp;
  #L54d0dc.  v5:= (`float`) v5 @kind i2f;
  #L54d0de.  v0:= v0 * v5 @kind float;
  #L54d0e2.  v5:= (`int`) v0 @kind f2i;
  #L54d0e4.  v8.`r.b$a.c` @type ^`int` := v5;
  #L54d0e8.  if v2 == 0 then goto L54d164;
  #L54d0ec.  v5:= v6.`q.e.u` @type ^`int`[] @kind object;
  #L54d0f0.  v5:= v5[v1];
  #L54d0f4.  if v5 != v4 then goto L54d102;
  #L54d0f8.  v5:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d0fc.  v8.`r.b$a.b` @type ^`q.e$b` := v5 @kind object;
  #L54d100.  goto L54d164;
  #L54d102.  if v9 != 0 then goto L54d164;
  #L54d106.  v5:= v8.`r.b$a.a` @type ^`q.e$b` @kind object;
  #L54d10a.  v9:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54d10e.  if v5 != v9 then goto L54d118;
  #L54d112.  v5:= v8.`r.b$a.c` @type ^`int`;
  #L54d116.  goto L54d12a;
  #L54d118.  v5:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d11c.  v8.`r.b$a.b` @type ^`q.e$b` := v5 @kind object;
  #L54d120.  call `b`(v7, v6, v8) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L54d126.  v5:= v8.`r.b$a.e` @type ^`int`;
  #L54d12a.  v8.`r.b$a.b` @type ^`q.e$b` := v9 @kind object;
  #L54d12e.  call temp:= `y`(v6) @signature `Lq/e;.y:()I` @kind virtual;
  #L54d134.  v9:= temp;
  #L54d136.  v0:= -1I;
  #L54d138.  if v9 != v0 then goto L54d150;
  #L54d13c.  v5:= (`float`) v5 @kind i2f;
  #L54d13e.  call temp:= `x`(v6) @signature `Lq/e;.x:()F` @kind virtual;
  #L54d144.  v9:= temp;
  #L54d146.  v5:= v5 / v9 @kind float;
  #L54d148.  v5:= (`int`) v5 @kind f2i;
  #L54d14a.  v8.`r.b$a.d` @type ^`int` := v5;
  #L54d14e.  goto L54d164;
  #L54d150.  call temp:= `x`(v6) @signature `Lq/e;.x:()F` @kind virtual;
  #L54d156.  v9:= temp;
  #L54d158.  v5:= (`float`) v5 @kind i2f;
  #L54d15a.  v9:= v9 * v5 @kind float;
  #L54d15e.  v5:= (`int`) v9 @kind f2i;
  #L54d160.  v8.`r.b$a.d` @type ^`int` := v5;
  #L54d164.  call `b`(v7, v6, v8) @signature `Lr/b$b;.b:(Lq/e;Lr/b$a;)V` @kind interface;
  #L54d16a.  v5:= v8.`r.b$a.e` @type ^`int`;
  #L54d16e.  call `h1`(v6, v5) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L54d174.  v5:= v8.`r.b$a.f` @type ^`int`;
  #L54d178.  call `I0`(v6, v5) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L54d17e.  v5:= v8.`r.b$a.h` @type ^`boolean` @kind boolean;
  #L54d182.  call `H0`(v6, v5) @signature `Lq/e;.H0:(Z)V` @kind virtual;
  #L54d188.  v5:= v8.`r.b$a.g` @type ^`int`;
  #L54d18c.  call `x0`(v6, v5) @signature `Lq/e;.x0:(I)V` @kind virtual;
  #L54d192.  v5:= `@@r.b$a.k` @type ^`int`;
  #L54d196.  v8.`r.b$a.j` @type ^`int` := v5;
  #L54d19a.  v5:= v8.`r.b$a.i` @type ^`boolean` @kind boolean;
  #L54d19e.  return v5;
  #L54d1a0.  v8.`r.b$a.e` @type ^`int` := v5;
  #L54d1a4.  v8.`r.b$a.f` @type ^`int` := v5;
  #L54d1a8.  return v5;
}
procedure `void` `S1`(`q.f` v1 @kind this) @signature `Lq/f;.S1:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L54dd40.  v0:= 0I;
  #L54dd42.  v1.`q.f.Y0` @type ^`int` := v0;
  #L54dd46.  v1.`q.f.Z0` @type ^`int` := v0;
  #L54dd4a.  return @kind void;
}
procedure `void` `u1`(`q.f` v5 @kind this, `q.e` v6 @kind object) @signature `Lq/f;.u1:(Lq/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54d3bc.  v0:= v5.`q.f.Y0` @type ^`int`;
  #L54d3c0.  v0:= v0 + 1;
  #L54d3c4.  v1:= v5.`q.f.b1` @type ^`q.c`[] @kind object;
  #L54d3c8.  v2:= length @variable v1;
  #L54d3ca.  if v0 < v2 then goto L54d3e4;
  #L54d3ce.  v0:= length @variable v1;
  #L54d3d0.  v0:= v0 * 2;
  #L54d3d4.  call temp:= `copyOf`(v1, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L54d3da.  v0:= temp @kind object;
  #L54d3dc.  v0:= (`q.c`[]) v0 @kind object;
  #L54d3e0.  v5.`q.f.b1` @type ^`q.c`[] := v0 @kind object;
  #L54d3e4.  v0:= v5.`q.f.b1` @type ^`q.c`[] @kind object;
  #L54d3e8.  v1:= v5.`q.f.Y0` @type ^`int`;
  #L54d3ec.  v2:= new `q.c`;
  #L54d3f0.  v3:= 0I;
  #L54d3f2.  call temp:= `N1`(v5) @signature `Lq/f;.N1:()Z` @kind virtual;
  #L54d3f8.  v4:= temp;
  #L54d3fa.  call `<init>`(v2, v6, v3, v4) @signature `Lq/c;.<init>:(Lq/e;IZ)V` @kind direct;
  #L54d400.  v0[v1]:= v2 @kind object;
  #L54d404.  v6:= v5.`q.f.Y0` @type ^`int`;
  #L54d408.  v6:= v6 + 1;
  #L54d40c.  v5.`q.f.Y0` @type ^`int` := v6;
  #L54d410.  return @kind void;
}
procedure `void` `x1`(`q.f` v3 @kind this, `q.d` v4 @kind object, `n.i` v5 @kind object) @signature `Lq/f;.x1:(Lq/d;Ln/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L54d4d4.  v0:= v3.`q.f.V0` @type ^`n.d` @kind object;
  #L54d4d8.  call temp:= `q`(v0, v4) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54d4de.  v4:= temp @kind object;
  #L54d4e0.  v0:= v3.`q.f.V0` @type ^`n.d` @kind object;
  #L54d4e4.  v1:= 0I;
  #L54d4e6.  v2:= 5I;
  #L54d4e8.  call `h`(v0, v5, v4, v1, v2) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L54d4ee.  return @kind void;
}
procedure `void` `y1`(`q.f` v3 @kind this, `q.d` v4 @kind object, `n.i` v5 @kind object) @signature `Lq/f;.y1:(Lq/d;Ln/i;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L54d500.  v0:= v3.`q.f.V0` @type ^`n.d` @kind object;
  #L54d504.  call temp:= `q`(v0, v4) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54d50a.  v4:= temp @kind object;
  #L54d50c.  v0:= v3.`q.f.V0` @type ^`n.d` @kind object;
  #L54d510.  v1:= 0I;
  #L54d512.  v2:= 5I;
  #L54d514.  call `h`(v0, v4, v5, v1, v2) @signature `Ln/d;.h:(Ln/i;Ln/i;II)V` @kind virtual;
  #L54d51a.  return @kind void;
}
procedure `void` `z1`(`q.f` v5 @kind this, `q.e` v6 @kind object) @signature `Lq/f;.z1:(Lq/e;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L54d52c.  v0:= v5.`q.f.Z0` @type ^`int`;
  #L54d530.  v1:= 1I;
  #L54d532.  v0:= v0 + v1 @kind int;
  #L54d534.  v2:= v5.`q.f.a1` @type ^`q.c`[] @kind object;
  #L54d538.  v3:= length @variable v2;
  #L54d53a.  if v0 < v3 then goto L54d554;
  #L54d53e.  v0:= length @variable v2;
  #L54d540.  v0:= v0 * 2;
  #L54d544.  call temp:= `copyOf`(v2, v0) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L54d54a.  v0:= temp @kind object;
  #L54d54c.  v0:= (`q.c`[]) v0 @kind object;
  #L54d550.  v5.`q.f.a1` @type ^`q.c`[] := v0 @kind object;
  #L54d554.  v0:= v5.`q.f.a1` @type ^`q.c`[] @kind object;
  #L54d558.  v2:= v5.`q.f.Z0` @type ^`int`;
  #L54d55c.  v3:= new `q.c`;
  #L54d560.  call temp:= `N1`(v5) @signature `Lq/f;.N1:()Z` @kind virtual;
  #L54d566.  v4:= temp;
  #L54d568.  call `<init>`(v3, v6, v1, v4) @signature `Lq/c;.<init>:(Lq/e;IZ)V` @kind direct;
  #L54d56e.  v0[v2]:= v3 @kind object;
  #L54d572.  v6:= v5.`q.f.Z0` @type ^`int`;
  #L54d576.  v6:= v6 + v1 @kind int;
  #L54d578.  v5.`q.f.Z0` @type ^`int` := v6;
  #L54d57c.  return @kind void;
}
procedure `void` `A1`(`q.f` v2 @kind this, `q.d` v3 @kind object) @signature `Lq/f;.A1:(Lq/d;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L54d590.  v0:= v2.`q.f.h1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d594.  if v0 == 0 then goto L54d5c8;
  #L54d598.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d59e.  v0:= temp @kind object;
  #L54d5a0.  if v0 == 0 then goto L54d5c8;
  #L54d5a4.  call temp:= `e`(v3) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d5aa.  v0:= temp;
  #L54d5ac.  v1:= v2.`q.f.h1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d5b0.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d5b6.  v1:= temp @kind object;
  #L54d5b8.  v1:= (`q.d`) v1 @kind object;
  #L54d5bc.  call temp:= `e`(v1) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d5c2.  v1:= temp;
  #L54d5c4.  if v0 <= v1 then goto L54d5d6;
  #L54d5c8.  v0:= new `java.lang.ref.WeakReference`;
  #L54d5cc.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L54d5d2.  v2.`q.f.h1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d5d6.  return @kind void;
}
procedure `void` `B1`(`q.f` v2 @kind this, `q.d` v3 @kind object) @signature `Lq/f;.B1:(Lq/d;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L54d5e8.  v0:= v2.`q.f.f1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d5ec.  if v0 == 0 then goto L54d620;
  #L54d5f0.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d5f6.  v0:= temp @kind object;
  #L54d5f8.  if v0 == 0 then goto L54d620;
  #L54d5fc.  call temp:= `e`(v3) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d602.  v0:= temp;
  #L54d604.  v1:= v2.`q.f.f1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d608.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d60e.  v1:= temp @kind object;
  #L54d610.  v1:= (`q.d`) v1 @kind object;
  #L54d614.  call temp:= `e`(v1) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d61a.  v1:= temp;
  #L54d61c.  if v0 <= v1 then goto L54d62e;
  #L54d620.  v0:= new `java.lang.ref.WeakReference`;
  #L54d624.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L54d62a.  v2.`q.f.f1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d62e.  return @kind void;
}
procedure `boolean` `C1`(`q.f` v1 @kind this, `boolean` v2 ) @signature `Lq/f;.C1:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ce7c.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54ce80.  call temp:= `f`(v0, v2) @signature `Lr/e;.f:(Z)Z` @kind virtual;
  #L54ce86.  v2:= temp;
  #L54ce88.  return v2;
}
procedure `boolean` `D1`(`q.f` v1 @kind this, `boolean` v2 ) @signature `Lq/f;.D1:(Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ce9c.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54cea0.  call temp:= `g`(v0, v2) @signature `Lr/e;.g:(Z)Z` @kind virtual;
  #L54cea6.  v2:= temp;
  #L54cea8.  return v2;
}
procedure `boolean` `E1`(`q.f` v1 @kind this, `boolean` v2 , `int` v3 ) @signature `Lq/f;.E1:(ZI)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54cebc.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54cec0.  call temp:= `h`(v0, v2, v3) @signature `Lr/e;.h:(ZI)Z` @kind virtual;
  #L54cec6.  v2:= temp;
  #L54cec8.  return v2;
}
procedure `void` `F1`(`q.f` v1 @kind this, `n.e` v2 @kind object) @signature `Lq/f;.F1:(Ln/e;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d640.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d644.  call `v`(v0, v2) @signature `Ln/d;.v:(Ln/e;)V` @kind virtual;
  #L54d64a.  return @kind void;
}
procedure `r.b$b` `G1`(`q.f` v1 @kind this) @signature `Lq/f;.G1:()Lr/b$b;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d2c0.  v0:= v1.`q.f.T0` @type ^`r.b$b` @kind object;
  #L54d2c4.  return v0 @kind object;
}
procedure `int` `H1`(`q.f` v1 @kind this) @signature `Lq/f;.H1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d248.  v0:= v1.`q.f.c1` @type ^`int`;
  #L54d24c.  return v0;
}
procedure `n.d` `I1`(`q.f` v1 @kind this) @signature `Lq/f;.I1:()Ln/d;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d2a8.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d2ac.  return v0 @kind object;
}
procedure `boolean` `J1`(`q.f` v1 @kind this) @signature `Lq/f;.J1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54cedc.  v0:= 0I;
  #L54cede.  return v0;
}
procedure `void` `K1`(`q.f` v1 @kind this) @signature `Lq/f;.K1:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d65c.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54d660.  call `j`(v0) @signature `Lr/e;.j:()V` @kind virtual;
  #L54d666.  return @kind void;
}
procedure `void` `L1`(`q.f` v1 @kind this) @signature `Lq/f;.L1:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d678.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54d67c.  call `k`(v0) @signature `Lr/e;.k:()V` @kind virtual;
  #L54d682.  return @kind void;
}
procedure `boolean` `M1`(`q.f` v1 @kind this) @signature `Lq/f;.M1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54cef0.  v0:= v1.`q.f.e1` @type ^`boolean` @kind boolean;
  #L54cef4.  return v0;
}
procedure `boolean` `N1`(`q.f` v1 @kind this) @signature `Lq/f;.N1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54cf08.  v0:= v1.`q.f.U0` @type ^`boolean` @kind boolean;
  #L54cf0c.  return v0;
}
procedure `boolean` `O1`(`q.f` v1 @kind this) @signature `Lq/f;.O1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54cf20.  v0:= v1.`q.f.d1` @type ^`boolean` @kind boolean;
  #L54cf24.  return v0;
}
procedure `long` `P1`(`q.f` v12 @kind this, `int` v13 , `int` v14 , `int` v15 , `int` v16 , `int` v17 , `int` v18 , `int` v19 , `int` v20 , `int` v21 ) @signature `Lq/f;.P1:(IIIIIIIII)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L54d260.  v11:= v12 @kind object;
  #L54d262.  v3:= v20;
  #L54d266.  v11.`q.f.W0` @type ^`int` := v3;
  #L54d26a.  v4:= v21;
  #L54d26e.  v11.`q.f.X0` @type ^`int` := v4;
  #L54d272.  v0:= v11.`q.f.Q0` @type ^`r.b` @kind object;
  #L54d276.  v1:= v12 @kind object;
  #L54d278.  v2:= v13;
  #L54d27a.  v5:= v14;
  #L54d27c.  v6:= v15;
  #L54d27e.  v7:= v16;
  #L54d282.  v8:= v17;
  #L54d286.  v9:= v18;
  #L54d28a.  v10:= v19;
  #L54d28e.  call temp:= `d`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lr/b;.d:(Lq/f;IIIIIIIII)J` @kind virtual;
  #L54d294.  v0:= temp @kind wide;
  #L54d296.  return v0 @kind wide;
}
procedure `boolean` `R1`(`q.f` v1 @kind this, `int` v2 ) @signature `Lq/f;.R1:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54d1bc.  v0:= v1.`q.f.c1` @type ^`int`;
  #L54d1c0.  v0:= v0 ^& v2 @kind int;
  #L54d1c2.  if v0 != v2 then goto L54d1ca;
  #L54d1c6.  v2:= 1I;
  #L54d1c8.  goto L54d1cc;
  #L54d1ca.  v2:= 0I;
  #L54d1cc.  return v2;
}
procedure `void` `T1`(`q.f` v1 @kind this, `r.b$b` v2 @kind object) @signature `Lq/f;.T1:(Lr/b$b;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54dd5c.  v1.`q.f.T0` @type ^`r.b$b` := v2 @kind object;
  #L54dd60.  v0:= v1.`q.f.R0` @type ^`r.e` @kind object;
  #L54dd64.  call `n`(v0, v2) @signature `Lr/e;.n:(Lr/b$b;)V` @kind virtual;
  #L54dd6a.  return @kind void;
}
procedure `void` `U1`(`q.f` v0 @kind this, `int` v1 ) @signature `Lq/f;.U1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L54dd7c.  v0.`q.f.c1` @type ^`int` := v1;
  #L54dd80.  v1:= 512I;
  #L54dd84.  call temp:= `R1`(v0, v1) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54dd8a.  v1:= temp;
  #L54dd8c.  `@@n.d.r` @type ^`boolean` := v1 @kind boolean;
  #L54dd90.  return @kind void;
}
procedure `void` `V1`(`q.f` v0 @kind this, `int` v1 ) @signature `Lq/f;.V1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L54dda4.  v0.`q.f.S0` @type ^`int` := v1;
  #L54dda8.  return @kind void;
}
procedure `void` `W1`(`q.f` v0 @kind this, `boolean` v1 ) @signature `Lq/f;.W1:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L54ddbc.  v0.`q.f.U0` @type ^`boolean` := v1 @kind boolean;
  #L54ddc0.  return @kind void;
}
procedure `boolean` `X1`(`q.f` v4 @kind this, `n.d` v5 @kind object, `boolean`[] v6 @kind object) @signature `Lq/f;.X1:(Ln/d;[Z)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54d1e0.  v0:= 2I;
  #L54d1e2.  v1:= 0I;
  #L54d1e4.  v6[v0]:= v1 @kind boolean;
  #L54d1e8.  v6:= 64I;
  #L54d1ec.  call temp:= `R1`(v4, v6) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54d1f2.  v6:= temp;
  #L54d1f4.  call `n1`(v4, v5, v6) @signature `Lq/e;.n1:(Ln/d;Z)V` @kind virtual;
  #L54d1fa.  v0:= v4.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d1fe.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L54d204.  v0:= temp;
  #L54d206.  v2:= 0I;
  #L54d208.  if v1 >= v0 then goto L54d236;
  #L54d20c.  v3:= v4.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d210.  call temp:= `get`(v3, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54d216.  v3:= temp @kind object;
  #L54d218.  v3:= (`q.e`) v3 @kind object;
  #L54d21c.  call `n1`(v3, v5, v6) @signature `Lq/e;.n1:(Ln/d;Z)V` @kind virtual;
  #L54d222.  call temp:= `b0`(v3) @signature `Lq/e;.b0:()Z` @kind virtual;
  #L54d228.  v3:= temp;
  #L54d22a.  if v3 == 0 then goto L54d230;
  #L54d22e.  v2:= 1I;
  #L54d230.  v1:= v1 + 1;
  #L54d234.  goto L54d208;
  #L54d236.  return v2;
}
procedure `void` `Y1`(`q.f` v1 @kind this) @signature `Lq/f;.Y1:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54de1c.  v0:= v1.`q.f.Q0` @type ^`r.b` @kind object;
  #L54de20.  call `e`(v0, v1) @signature `Lr/b;.e:(Lq/f;)V` @kind virtual;
  #L54de26.  return @kind void;
}
procedure `void` `m1`(`q.f` v3 @kind this, `boolean` v4 , `boolean` v5 ) @signature `Lq/f;.m1:(ZZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L54ddd4.  call `m1`(v3, v4, v5) @signature `Lq/e;.m1:(ZZ)V` @kind super;
  #L54ddda.  v0:= v3.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54ddde.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L54dde4.  v0:= temp;
  #L54dde6.  v1:= 0I;
  #L54dde8.  if v1 >= v0 then goto L54de08;
  #L54ddec.  v2:= v3.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54ddf0.  call temp:= `get`(v2, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54ddf6.  v2:= temp @kind object;
  #L54ddf8.  v2:= (`q.e`) v2 @kind object;
  #L54ddfc.  call `m1`(v2, v4, v5) @signature `Lq/e;.m1:(ZZ)V` @kind virtual;
  #L54de02.  v1:= v1 + 1;
  #L54de06.  goto L54dde8;
  #L54de08.  return @kind void;
}
procedure `void` `p1`(`q.f` v18 @kind this) @signature `Lq/f;.p1:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L54d694.  v1:= v18 @kind object;
  #L54d698.  v2:= 0I;
  #L54d69a.  v1.`q.e.d0` @type ^`int` := v2;
  #L54d69e.  v1.`q.e.e0` @type ^`int` := v2;
  #L54d6a2.  v1.`q.f.d1` @type ^`boolean` := v2 @kind boolean;
  #L54d6a6.  v1.`q.f.e1` @type ^`boolean` := v2 @kind boolean;
  #L54d6aa.  v0:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d6ae.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L54d6b4.  v3:= temp;
  #L54d6b6.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54d6bc.  v0:= temp;
  #L54d6be.  call temp:= `max`(v2, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54d6c4.  v0:= temp;
  #L54d6c6.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54d6cc.  v4:= temp;
  #L54d6ce.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54d6d4.  v4:= temp;
  #L54d6d6.  v5:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54d6da.  v6:= 1I;
  #L54d6dc.  v7:= v5[v6] @kind object;
  #L54d6e0.  v5:= v5[v2] @kind object;
  #L54d6e4.  v8:= v1.`q.f.S0` @type ^`int`;
  #L54d6e8.  if v8 != 0 then goto L54d7a4;
  #L54d6ec.  v8:= v1.`q.f.c1` @type ^`int`;
  #L54d6f0.  call temp:= `b`(v8, v6) @signature `Lq/k;.b:(II)Z` @kind static;
  #L54d6f6.  v8:= temp;
  #L54d6f8.  if v8 == 0 then goto L54d7a4;
  #L54d6fc.  call temp:= `G1`(v18) @signature `Lq/f;.G1:()Lr/b$b;` @kind virtual;
  #L54d702.  v8:= temp @kind object;
  #L54d704.  call `h`(v1, v8) @signature `Lr/h;.h:(Lq/f;Lr/b$b;)V` @kind static;
  #L54d70a.  v8:= 0I;
  #L54d70c.  if v8 >= v3 then goto L54d7a4;
  #L54d710.  v9:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d714.  call temp:= `get`(v9, v8) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54d71a.  v9:= temp @kind object;
  #L54d71c.  v9:= (`q.e`) v9 @kind object;
  #L54d720.  call temp:= `l0`(v9) @signature `Lq/e;.l0:()Z` @kind virtual;
  #L54d726.  v10:= temp;
  #L54d728.  if v10 == 0 then goto L54d79e;
  #L54d72c.  v10:= instanceof @variable v9 @type ^`q.h` @kind boolean;
  #L54d730.  if v10 != 0 then goto L54d79e;
  #L54d734.  v10:= instanceof @variable v9 @type ^`q.a` @kind boolean;
  #L54d738.  if v10 != 0 then goto L54d79e;
  #L54d73c.  v10:= instanceof @variable v9 @type ^`q.m` @kind boolean;
  #L54d740.  if v10 != 0 then goto L54d79e;
  #L54d744.  call temp:= `k0`(v9) @signature `Lq/e;.k0:()Z` @kind virtual;
  #L54d74a.  v10:= temp;
  #L54d74c.  if v10 != 0 then goto L54d79e;
  #L54d750.  call temp:= `w`(v9, v2) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L54d756.  v10:= temp @kind object;
  #L54d758.  call temp:= `w`(v9, v6) @signature `Lq/e;.w:(I)Lq/e$b;` @kind virtual;
  #L54d75e.  v11:= temp @kind object;
  #L54d760.  v12:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L54d764.  if v10 != v12 then goto L54d780;
  #L54d768.  v10:= v9.`q.e.s` @type ^`int`;
  #L54d76c.  if v10 == v6 then goto L54d780;
  #L54d770.  if v11 != v12 then goto L54d780;
  #L54d774.  v10:= v9.`q.e.t` @type ^`int`;
  #L54d778.  if v10 == v6 then goto L54d780;
  #L54d77c.  v10:= 1I;
  #L54d77e.  goto L54d782;
  #L54d780.  v10:= 0I;
  #L54d782.  if v10 != 0 then goto L54d79e;
  #L54d786.  v10:= new `r.b$a`;
  #L54d78a.  call `<init>`(v10) @signature `Lr/b$a;.<init>:()V` @kind direct;
  #L54d790.  v11:= v1.`q.f.T0` @type ^`r.b$b` @kind object;
  #L54d794.  v12:= `@@r.b$a.k` @type ^`int`;
  #L54d798.  call temp:= `Q1`(v2, v9, v11, v10, v12) @signature `Lq/f;.Q1:(ILq/e;Lr/b$b;Lr/b$a;I)Z` @kind static;
  #L54d79e.  v8:= v8 + 1;
  #L54d7a2.  goto L54d70c;
  #L54d7a4.  v8:= 2I;
  #L54d7a6.  if v3 <= v8 then goto L54d836;
  #L54d7aa.  v9:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d7ae.  if v5 == v9 then goto L54d7b6;
  #L54d7b2.  if v7 != v9 then goto L54d836;
  #L54d7b6.  v10:= v1.`q.f.c1` @type ^`int`;
  #L54d7ba.  v11:= 1024I;
  #L54d7be.  call temp:= `b`(v10, v11) @signature `Lq/k;.b:(II)Z` @kind static;
  #L54d7c4.  v10:= temp;
  #L54d7c6.  if v10 == 0 then goto L54d836;
  #L54d7ca.  call temp:= `G1`(v18) @signature `Lq/f;.G1:()Lr/b$b;` @kind virtual;
  #L54d7d0.  v10:= temp @kind object;
  #L54d7d2.  call temp:= `c`(v1, v10) @signature `Lr/i;.c:(Lq/f;Lr/b$b;)Z` @kind static;
  #L54d7d8.  v10:= temp;
  #L54d7da.  if v10 == 0 then goto L54d836;
  #L54d7de.  if v5 != v9 then goto L54d806;
  #L54d7e2.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54d7e8.  v10:= temp;
  #L54d7ea.  if v0 >= v10 then goto L54d7fe;
  #L54d7ee.  if v0 <= 0 then goto L54d7fe;
  #L54d7f2.  call `h1`(v1, v0) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L54d7f8.  v1.`q.f.d1` @type ^`boolean` := v6 @kind boolean;
  #L54d7fc.  goto L54d806;
  #L54d7fe.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54d804.  v0:= temp;
  #L54d806.  if v7 != v9 then goto L54d82e;
  #L54d80a.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54d810.  v9:= temp;
  #L54d812.  if v4 >= v9 then goto L54d826;
  #L54d816.  if v4 <= 0 then goto L54d826;
  #L54d81a.  call `I0`(v1, v4) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L54d820.  v1.`q.f.e1` @type ^`boolean` := v6 @kind boolean;
  #L54d824.  goto L54d82e;
  #L54d826.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54d82c.  v4:= temp;
  #L54d82e.  v9:= v4;
  #L54d830.  v4:= v0;
  #L54d832.  v0:= 1I;
  #L54d834.  goto L54d83c;
  #L54d836.  v9:= v4;
  #L54d838.  v4:= v0;
  #L54d83a.  v0:= 0I;
  #L54d83c.  v10:= 64I;
  #L54d840.  call temp:= `R1`(v1, v10) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54d846.  v11:= temp;
  #L54d848.  if v11 != 0 then goto L54d862;
  #L54d84c.  v11:= 128I;
  #L54d850.  call temp:= `R1`(v1, v11) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54d856.  v11:= temp;
  #L54d858.  if v11 == 0 then goto L54d85e;
  #L54d85c.  goto L54d862;
  #L54d85e.  v11:= 0I;
  #L54d860.  goto L54d864;
  #L54d862.  v11:= 1I;
  #L54d864.  v12:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d868.  v12.`n.d.h` @type ^`boolean` := v2 @kind boolean;
  #L54d86c.  v12.`n.d.i` @type ^`boolean` := v2 @kind boolean;
  #L54d870.  v13:= v1.`q.f.c1` @type ^`int`;
  #L54d874.  if v13 == 0 then goto L54d880;
  #L54d878.  if v11 == 0 then goto L54d880;
  #L54d87c.  v12.`n.d.i` @type ^`boolean` := v6 @kind boolean;
  #L54d880.  v11:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d884.  call temp:= `C`(v18) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L54d88a.  v12:= temp @kind object;
  #L54d88c.  v13:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54d890.  if v12 == v13 then goto L54d8a6;
  #L54d894.  call temp:= `S`(v18) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L54d89a.  v12:= temp @kind object;
  #L54d89c.  if v12 != v13 then goto L54d8a2;
  #L54d8a0.  goto L54d8a6;
  #L54d8a2.  v12:= 0I;
  #L54d8a4.  goto L54d8a8;
  #L54d8a6.  v12:= 1I;
  #L54d8a8.  call `S1`(v18) @signature `Lq/f;.S1:()V` @kind direct;
  #L54d8ae.  v13:= 0I;
  #L54d8b0.  if v13 >= v3 then goto L54d8dc;
  #L54d8b4.  v14:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d8b8.  call temp:= `get`(v14, v13) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54d8be.  v14:= temp @kind object;
  #L54d8c0.  v14:= (`q.e`) v14 @kind object;
  #L54d8c4.  v15:= instanceof @variable v14 @type ^`q.n` @kind boolean;
  #L54d8c8.  if v15 == 0 then goto L54d8d6;
  #L54d8cc.  v14:= (`q.n`) v14 @kind object;
  #L54d8d0.  call `p1`(v14) @signature `Lq/n;.p1:()V` @kind virtual;
  #L54d8d6.  v13:= v13 + 1;
  #L54d8da.  goto L54d8b0;
  #L54d8dc.  call temp:= `R1`(v1, v10) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54d8e2.  v10:= temp;
  #L54d8e4.  v13:= v0;
  #L54d8e6.  v0:= 0I;
  #L54d8e8.  v14:= 1I;
  #L54d8ea.  if v14 == 0 then goto L54dcc6;
  #L54d8ee.  v15:= v0 + 1;
  #L54d8f2.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d8f6.  call `E`(v0) @signature `Ln/d;.E:()V` @kind virtual;
  #L54d8fc.  call `S1`(v18) @signature `Lq/f;.S1:()V` @kind direct;
  #L54d902.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d906.  call `o`(v1, v0) @signature `Lq/e;.o:(Ln/d;)V` @kind virtual;
  #L54d90c.  v0:= 0I;
  #L54d90e.  if v0 >= v3 then goto L54d936;
  #L54d912.  v6:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54d916.  call temp:= `get`(v6, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54d91c.  v6:= temp @kind object;
  #L54d91e.  v6:= (`q.e`) v6 @kind object;
  #L54d922.  v2:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d926.  call `o`(v6, v2) @signature `Lq/e;.o:(Ln/d;)V` @kind virtual;
  #L54d92c.  v0:= v0 + 1;
  #L54d930.  v2:= 0I;
  #L54d932.  v6:= 1I;
  #L54d934.  goto L54d90e;
  #L54d936.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d93a.  call temp:= `t1`(v1, v0) @signature `Lq/f;.t1:(Ln/d;)Z` @kind virtual;
  #L54d940.  v14:= temp;
  #L54d942.  v0:= v1.`q.f.f1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d946.  v2:= 0I;
  #L54d948.  if v0 == 0 then goto L54d982;
  #L54d94c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d952.  v0:= temp @kind object;
  #L54d954.  if v0 == 0 then goto L54d982;
  #L54d958.  v0:= v1.`q.f.f1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d95c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d962.  v0:= temp @kind object;
  #L54d964.  v0:= (`q.d`) v0 @kind object;
  #L54d968.  v6:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d96c.  v8:= v1.`q.e.N` @type ^`q.d` @kind object;
  #L54d970.  call temp:= `q`(v6, v8) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54d976.  v6:= temp @kind object;
  #L54d978.  call `y1`(v1, v0, v6) @signature `Lq/f;.y1:(Lq/d;Ln/i;)V` @kind direct;
  #L54d97e.  v1.`q.f.f1` @type ^`java.lang.ref.WeakReference` := v2 @kind object;
  #L54d982.  v0:= v1.`q.f.h1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d986.  if v0 == 0 then goto L54d9c0;
  #L54d98a.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d990.  v0:= temp @kind object;
  #L54d992.  if v0 == 0 then goto L54d9c0;
  #L54d996.  v0:= v1.`q.f.h1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d99a.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d9a0.  v0:= temp @kind object;
  #L54d9a2.  v0:= (`q.d`) v0 @kind object;
  #L54d9a6.  v6:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d9aa.  v8:= v1.`q.e.P` @type ^`q.d` @kind object;
  #L54d9ae.  call temp:= `q`(v6, v8) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54d9b4.  v6:= temp @kind object;
  #L54d9b6.  call `x1`(v1, v0, v6) @signature `Lq/f;.x1:(Lq/d;Ln/i;)V` @kind direct;
  #L54d9bc.  v1.`q.f.h1` @type ^`java.lang.ref.WeakReference` := v2 @kind object;
  #L54d9c0.  v0:= v1.`q.f.g1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d9c4.  if v0 == 0 then goto L54d9fe;
  #L54d9c8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d9ce.  v0:= temp @kind object;
  #L54d9d0.  if v0 == 0 then goto L54d9fe;
  #L54d9d4.  v0:= v1.`q.f.g1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d9d8.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d9de.  v0:= temp @kind object;
  #L54d9e0.  v0:= (`q.d`) v0 @kind object;
  #L54d9e4.  v6:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54d9e8.  v8:= v1.`q.e.M` @type ^`q.d` @kind object;
  #L54d9ec.  call temp:= `q`(v6, v8) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54d9f2.  v6:= temp @kind object;
  #L54d9f4.  call `y1`(v1, v0, v6) @signature `Lq/f;.y1:(Lq/d;Ln/i;)V` @kind direct;
  #L54d9fa.  v1.`q.f.g1` @type ^`java.lang.ref.WeakReference` := v2 @kind object;
  #L54d9fe.  v0:= v1.`q.f.i1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54da02.  if v0 == 0 then goto L54da3c;
  #L54da06.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54da0c.  v0:= temp @kind object;
  #L54da0e.  if v0 == 0 then goto L54da3c;
  #L54da12.  v0:= v1.`q.f.i1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54da16.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54da1c.  v0:= temp @kind object;
  #L54da1e.  v0:= (`q.d`) v0 @kind object;
  #L54da22.  v6:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54da26.  v8:= v1.`q.e.O` @type ^`q.d` @kind object;
  #L54da2a.  call temp:= `q`(v6, v8) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54da30.  v6:= temp @kind object;
  #L54da32.  call `x1`(v1, v0, v6) @signature `Lq/f;.x1:(Lq/d;Ln/i;)V` @kind direct;
  #L54da38.  v1.`q.f.i1` @type ^`java.lang.ref.WeakReference` := v2 @kind object;
  #L54da3c.  if v14 == 0 then goto L54da80;
  #L54da40.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54da44.  call `A`(v0) @signature `Ln/d;.A:()V` @kind virtual;
  #L54da4a.  goto L54da80;
  #L54da4c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L54da4e.  call `printStackTrace`(v0) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L54da54.  v2:= `@@java.lang.System.out` @type ^`java.io.PrintStream` @kind object;
  #L54da58.  v6:= new `java.lang.StringBuilder`;
  #L54da5c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54da62.  v8:= "EXCEPTION : " @kind object;
  #L54da66.  call temp:= `append`(v6, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54da6c.  call temp:= `append`(v6, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54da72.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54da78.  v0:= temp @kind object;
  #L54da7a.  call `println`(v2, v0) @signature `Ljava/io/PrintStream;.println:(Ljava/lang/String;)V` @kind virtual;
  #L54da80.  if v14 == 0 then goto L54da96;
  #L54da84.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54da88.  v2:= `@@q.k.a` @type ^`boolean`[] @kind object;
  #L54da8c.  call temp:= `X1`(v1, v0, v2) @signature `Lq/f;.X1:(Ln/d;[Z)Z` @kind virtual;
  #L54da92.  v0:= temp;
  #L54da94.  goto L54dac8;
  #L54da96.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54da9a.  call `n1`(v1, v0, v10) @signature `Lq/e;.n1:(Ln/d;Z)V` @kind virtual;
  #L54daa0.  v0:= 0I;
  #L54daa2.  if v0 >= v3 then goto L54dac6;
  #L54daa6.  v2:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54daaa.  call temp:= `get`(v2, v0) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54dab0.  v2:= temp @kind object;
  #L54dab2.  v2:= (`q.e`) v2 @kind object;
  #L54dab6.  v6:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54daba.  call `n1`(v2, v6, v10) @signature `Lq/e;.n1:(Ln/d;Z)V` @kind virtual;
  #L54dac0.  v0:= v0 + 1;
  #L54dac4.  goto L54daa2;
  #L54dac6.  v0:= 0I;
  #L54dac8.  v2:= 8I;
  #L54dacc.  if v12 == 0 then goto L54dbaa;
  #L54dad0.  if v15 >= v2 then goto L54dbaa;
  #L54dad4.  v6:= `@@q.k.a` @type ^`boolean`[] @kind object;
  #L54dad8.  v8:= 2I;
  #L54dada.  v6:= v6[v8] @kind boolean;
  #L54dade.  if v6 == 0 then goto L54dbaa;
  #L54dae2.  v6:= 0I;
  #L54dae4.  v8:= 0I;
  #L54dae6.  v14:= 0I;
  #L54dae8.  if v6 >= v3 then goto L54db3c;
  #L54daec.  v2:= v1.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54daf0.  call temp:= `get`(v2, v6) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54daf6.  v2:= temp @kind object;
  #L54daf8.  v2:= (`q.e`) v2 @kind object;
  #L54dafc.  v16:= v0;
  #L54db00.  v0:= v2.`q.e.d0` @type ^`int`;
  #L54db04.  call temp:= `V`(v2) @signature `Lq/e;.V:()I` @kind virtual;
  #L54db0a.  v17:= temp;
  #L54db0c.  v0:= v0 + v17 @kind int;
  #L54db10.  call temp:= `max`(v14, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54db16.  v14:= temp;
  #L54db18.  v0:= v2.`q.e.e0` @type ^`int`;
  #L54db1c.  call temp:= `z`(v2) @signature `Lq/e;.z:()I` @kind virtual;
  #L54db22.  v2:= temp;
  #L54db24.  v0:= v0 + v2 @kind int;
  #L54db26.  call temp:= `max`(v8, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54db2c.  v8:= temp;
  #L54db2e.  v6:= v6 + 1;
  #L54db32.  v0:= v16;
  #L54db36.  v2:= 8I;
  #L54db3a.  goto L54dae8;
  #L54db3c.  v16:= v0;
  #L54db40.  v0:= v1.`q.e.k0` @type ^`int`;
  #L54db44.  call temp:= `max`(v0, v14) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54db4a.  v0:= temp;
  #L54db4c.  v2:= v1.`q.e.l0` @type ^`int`;
  #L54db50.  call temp:= `max`(v2, v8) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54db56.  v2:= temp;
  #L54db58.  v6:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54db5c.  if v5 != v6 then goto L54db82;
  #L54db60.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54db66.  v8:= temp;
  #L54db68.  if v8 >= v0 then goto L54db82;
  #L54db6c.  call `h1`(v1, v0) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L54db72.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54db76.  v8:= 0I;
  #L54db78.  v0[v8]:= v6 @kind object;
  #L54db7c.  v13:= 1I;
  #L54db7e.  v16:= 1I;
  #L54db82.  if v7 != v6 then goto L54dbae;
  #L54db86.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54db8c.  v0:= temp;
  #L54db8e.  if v0 >= v2 then goto L54dbae;
  #L54db92.  call `I0`(v1, v2) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L54db98.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54db9c.  v2:= 1I;
  #L54db9e.  v0[v2]:= v6 @kind object;
  #L54dba2.  v13:= 1I;
  #L54dba4.  v16:= 1I;
  #L54dba8.  goto L54dbae;
  #L54dbaa.  v16:= v0;
  #L54dbae.  v0:= v1.`q.e.k0` @type ^`int`;
  #L54dbb2.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54dbb8.  v2:= temp;
  #L54dbba.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54dbc0.  v0:= temp;
  #L54dbc2.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54dbc8.  v2:= temp;
  #L54dbca.  if v0 <= v2 then goto L54dbe8;
  #L54dbce.  call `h1`(v1, v0) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L54dbd4.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dbd8.  v2:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54dbdc.  v6:= 0I;
  #L54dbde.  v0[v6]:= v2 @kind object;
  #L54dbe2.  v13:= 1I;
  #L54dbe4.  v16:= 1I;
  #L54dbe8.  v0:= v1.`q.e.l0` @type ^`int`;
  #L54dbec.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54dbf2.  v2:= temp;
  #L54dbf4.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54dbfa.  v0:= temp;
  #L54dbfc.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54dc02.  v2:= temp;
  #L54dc04.  if v0 <= v2 then goto L54dc24;
  #L54dc08.  call `I0`(v1, v0) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L54dc0e.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dc12.  v2:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54dc16.  v6:= 1I;
  #L54dc18.  v0[v6]:= v2 @kind object;
  #L54dc1c.  v2:= 1I;
  #L54dc1e.  v16:= 1I;
  #L54dc22.  goto L54dc28;
  #L54dc24.  v6:= 1I;
  #L54dc26.  v2:= v13;
  #L54dc28.  if v2 != 0 then goto L54dca6;
  #L54dc2c.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dc30.  v8:= 0I;
  #L54dc32.  v0:= v0[v8] @kind object;
  #L54dc36.  v13:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54dc3a.  if v0 != v13 then goto L54dc6a;
  #L54dc3e.  if v4 <= 0 then goto L54dc6a;
  #L54dc42.  call temp:= `V`(v18) @signature `Lq/e;.V:()I` @kind virtual;
  #L54dc48.  v0:= temp;
  #L54dc4a.  if v0 <= v4 then goto L54dc6a;
  #L54dc4e.  v1.`q.f.d1` @type ^`boolean` := v6 @kind boolean;
  #L54dc52.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dc56.  v2:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54dc5a.  v0[v8]:= v2 @kind object;
  #L54dc5e.  call `h1`(v1, v4) @signature `Lq/e;.h1:(I)V` @kind virtual;
  #L54dc64.  v2:= 1I;
  #L54dc66.  v16:= 1I;
  #L54dc6a.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dc6e.  v0:= v0[v6] @kind object;
  #L54dc72.  if v0 != v13 then goto L54dca6;
  #L54dc76.  if v9 <= 0 then goto L54dca6;
  #L54dc7a.  call temp:= `z`(v18) @signature `Lq/e;.z:()I` @kind virtual;
  #L54dc80.  v0:= temp;
  #L54dc82.  if v0 <= v9 then goto L54dca6;
  #L54dc86.  v1.`q.f.e1` @type ^`boolean` := v6 @kind boolean;
  #L54dc8a.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dc8e.  v2:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54dc92.  v0[v6]:= v2 @kind object;
  #L54dc96.  call `I0`(v1, v9) @signature `Lq/e;.I0:(I)V` @kind virtual;
  #L54dc9c.  v0:= 8I;
  #L54dca0.  v2:= 1I;
  #L54dca2.  v13:= 1I;
  #L54dca4.  goto L54dcb0;
  #L54dca6.  v13:= v2;
  #L54dca8.  v2:= v16;
  #L54dcac.  v0:= 8I;
  #L54dcb0.  if v15 <= v0 then goto L54dcb8;
  #L54dcb4.  v14:= 0I;
  #L54dcb6.  goto L54dcba;
  #L54dcb8.  v14:= v2;
  #L54dcba.  v0:= v15;
  #L54dcbc.  v2:= 0I;
  #L54dcbe.  v6:= 1I;
  #L54dcc0.  v8:= 2I;
  #L54dcc2.  goto L54d8ea;
  #L54dcc6.  v1.`q.n.P0` @type ^`java.util.ArrayList` := v11 @kind object;
  #L54dcca.  if v13 == 0 then goto L54dcde;
  #L54dcce.  v0:= v1.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54dcd2.  v2:= 0I;
  #L54dcd4.  v0[v2]:= v5 @kind object;
  #L54dcd8.  v2:= 1I;
  #L54dcda.  v0[v2]:= v7 @kind object;
  #L54dcde.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54dce2.  call temp:= `w`(v0) @signature `Ln/d;.w:()Ln/c;` @kind virtual;
  #L54dce8.  v0:= temp @kind object;
  #L54dcea.  call `w0`(v1, v0) @signature `Lq/n;.w0:(Ln/c;)V` @kind virtual;
  #L54dcf0.  return @kind void;
  catch `java.lang.Exception` @[L54d8f2..L54da4a] goto L54da4c;
}
procedure `void` `s0`(`q.f` v1 @kind this) @signature `Lq/f;.s0:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54dd14.  v0:= v1.`q.f.V0` @type ^`n.d` @kind object;
  #L54dd18.  call `E`(v0) @signature `Ln/d;.E:()V` @kind virtual;
  #L54dd1e.  v0:= 0I;
  #L54dd20.  v1.`q.f.W0` @type ^`int` := v0;
  #L54dd24.  v1.`q.f.X0` @type ^`int` := v0;
  #L54dd28.  call `s0`(v1) @signature `Lq/n;.s0:()V` @kind super;
  #L54dd2e.  return @kind void;
}
procedure `void` `s1`(`q.f` v1 @kind this, `q.e` v2 @kind object, `int` v3 ) @signature `Lq/f;.s1:(Lq/e;I)V` @AccessFlag  {
    temp;
    v0;

  #L54d390.  if v3 != 0 then goto L54d39c;
  #L54d394.  call `u1`(v1, v2) @signature `Lq/f;.u1:(Lq/e;)V` @kind direct;
  #L54d39a.  goto L54d3a8;
  #L54d39c.  v0:= 1I;
  #L54d39e.  if v3 != v0 then goto L54d3a8;
  #L54d3a2.  call `z1`(v1, v2) @signature `Lq/f;.z1:(Lq/e;)V` @kind direct;
  #L54d3a8.  return @kind void;
}
procedure `boolean` `t1`(`q.f` v12 @kind this, `n.d` v13 @kind object) @signature `Lq/f;.t1:(Ln/d;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L54cbb4.  v0:= 64I;
  #L54cbb8.  call temp:= `R1`(v12, v0) @signature `Lq/f;.R1:(I)Z` @kind virtual;
  #L54cbbe.  v0:= temp;
  #L54cbc0.  call `g`(v12, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54cbc6.  v1:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cbca.  call temp:= `size`(v1) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L54cbd0.  v1:= temp;
  #L54cbd2.  v2:= 0I;
  #L54cbd4.  v3:= 0I;
  #L54cbd6.  v4:= 0I;
  #L54cbd8.  v5:= 1I;
  #L54cbda.  if v3 >= v1 then goto L54cc0a;
  #L54cbde.  v6:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cbe2.  call temp:= `get`(v6, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54cbe8.  v6:= temp @kind object;
  #L54cbea.  v6:= (`q.e`) v6 @kind object;
  #L54cbee.  call `P0`(v6, v2, v2) @signature `Lq/e;.P0:(IZ)V` @kind virtual;
  #L54cbf4.  call `P0`(v6, v5, v2) @signature `Lq/e;.P0:(IZ)V` @kind virtual;
  #L54cbfa.  v6:= instanceof @variable v6 @type ^`q.a` @kind boolean;
  #L54cbfe.  if v6 == 0 then goto L54cc04;
  #L54cc02.  v4:= 1I;
  #L54cc04.  v3:= v3 + 1;
  #L54cc08.  goto L54cbd8;
  #L54cc0a.  if v4 == 0 then goto L54cc3c;
  #L54cc0e.  v3:= 0I;
  #L54cc10.  if v3 >= v1 then goto L54cc3c;
  #L54cc14.  v4:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cc18.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54cc1e.  v4:= temp @kind object;
  #L54cc20.  v4:= (`q.e`) v4 @kind object;
  #L54cc24.  v6:= instanceof @variable v4 @type ^`q.a` @kind boolean;
  #L54cc28.  if v6 == 0 then goto L54cc36;
  #L54cc2c.  v4:= (`q.a`) v4 @kind object;
  #L54cc30.  call `v1`(v4) @signature `Lq/a;.v1:()V` @kind virtual;
  #L54cc36.  v3:= v3 + 1;
  #L54cc3a.  goto L54cc10;
  #L54cc3c.  v3:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cc40.  call `clear`(v3) @signature `Ljava/util/HashSet;.clear:()V` @kind virtual;
  #L54cc46.  v3:= 0I;
  #L54cc48.  if v3 >= v1 then goto L54cc88;
  #L54cc4c.  v4:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cc50.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54cc56.  v4:= temp @kind object;
  #L54cc58.  v4:= (`q.e`) v4 @kind object;
  #L54cc5c.  call temp:= `f`(v4) @signature `Lq/e;.f:()Z` @kind virtual;
  #L54cc62.  v6:= temp;
  #L54cc64.  if v6 == 0 then goto L54cc82;
  #L54cc68.  v6:= instanceof @variable v4 @type ^`q.m` @kind boolean;
  #L54cc6c.  if v6 == 0 then goto L54cc7c;
  #L54cc70.  v6:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cc74.  call temp:= `add`(v6, v4) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54cc7a.  goto L54cc82;
  #L54cc7c.  call `g`(v4, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54cc82.  v3:= v3 + 1;
  #L54cc86.  goto L54cc48;
  #L54cc88.  v3:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cc8c.  call temp:= `size`(v3) @signature `Ljava/util/HashSet;.size:()I` @kind virtual;
  #L54cc92.  v3:= temp;
  #L54cc94.  if v3 <= 0 then goto L54cd34;
  #L54cc98.  v3:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cc9c.  call temp:= `size`(v3) @signature `Ljava/util/HashSet;.size:()I` @kind virtual;
  #L54cca2.  v3:= temp;
  #L54cca4.  v4:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cca8.  call temp:= `iterator`(v4) @signature `Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L54ccae.  v4:= temp @kind object;
  #L54ccb0.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54ccb6.  v6:= temp;
  #L54ccb8.  if v6 == 0 then goto L54ccec;
  #L54ccbc.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54ccc2.  v6:= temp @kind object;
  #L54ccc4.  v6:= (`q.e`) v6 @kind object;
  #L54ccc8.  v6:= (`q.m`) v6 @kind object;
  #L54cccc.  v7:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54ccd0.  call temp:= `s1`(v6, v7) @signature `Lq/m;.s1:(Ljava/util/HashSet;)Z` @kind virtual;
  #L54ccd6.  v7:= temp;
  #L54ccd8.  if v7 == 0 then goto L54ccb0;
  #L54ccdc.  call `g`(v6, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54cce2.  v4:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cce6.  call temp:= `remove`(v4, v6) @signature `Ljava/util/HashSet;.remove:(Ljava/lang/Object;)Z` @kind virtual;
  #L54ccec.  v4:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54ccf0.  call temp:= `size`(v4) @signature `Ljava/util/HashSet;.size:()I` @kind virtual;
  #L54ccf6.  v4:= temp;
  #L54ccf8.  if v3 != v4 then goto L54cc88;
  #L54ccfc.  v3:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cd00.  call temp:= `iterator`(v3) @signature `Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L54cd06.  v3:= temp @kind object;
  #L54cd08.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cd0e.  v4:= temp;
  #L54cd10.  if v4 == 0 then goto L54cd28;
  #L54cd14.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cd1a.  v4:= temp @kind object;
  #L54cd1c.  v4:= (`q.e`) v4 @kind object;
  #L54cd20.  call `g`(v4, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54cd26.  goto L54cd08;
  #L54cd28.  v3:= v12.`q.f.j1` @type ^`java.util.HashSet` @kind object;
  #L54cd2c.  call `clear`(v3) @signature `Ljava/util/HashSet;.clear:()V` @kind virtual;
  #L54cd32.  goto L54cc88;
  #L54cd34.  v3:= `@@n.d.r` @type ^`boolean` @kind boolean;
  #L54cd38.  if v3 == 0 then goto L54cdc8;
  #L54cd3c.  v3:= new `java.util.HashSet`;
  #L54cd40.  call `<init>`(v3) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L54cd46.  v4:= 0I;
  #L54cd48.  if v4 >= v1 then goto L54cd74;
  #L54cd4c.  v6:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cd50.  call temp:= `get`(v6, v4) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54cd56.  v6:= temp @kind object;
  #L54cd58.  v6:= (`q.e`) v6 @kind object;
  #L54cd5c.  call temp:= `f`(v6) @signature `Lq/e;.f:()Z` @kind virtual;
  #L54cd62.  v7:= temp;
  #L54cd64.  if v7 != 0 then goto L54cd6e;
  #L54cd68.  call temp:= `add`(v3, v6) @signature `Ljava/util/HashSet;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L54cd6e.  v4:= v4 + 1;
  #L54cd72.  goto L54cd48;
  #L54cd74.  call temp:= `C`(v12) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L54cd7a.  v1:= temp @kind object;
  #L54cd7c.  v4:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54cd80.  if v1 != v4 then goto L54cd88;
  #L54cd84.  v10:= 0I;
  #L54cd86.  goto L54cd8a;
  #L54cd88.  v10:= 1I;
  #L54cd8a.  v11:= 0I;
  #L54cd8c.  v6:= v12 @kind object;
  #L54cd8e.  v7:= v12 @kind object;
  #L54cd90.  v8:= v13 @kind object;
  #L54cd92.  v9:= v3 @kind object;
  #L54cd94.  call `e`(v6, v7, v8, v9, v10, v11) @signature `Lq/e;.e:(Lq/f;Ln/d;Ljava/util/HashSet;IZ)V` @kind virtual;
  #L54cd9a.  call temp:= `iterator`(v3) @signature `Ljava/util/HashSet;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L54cda0.  v1:= temp @kind object;
  #L54cda2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L54cda8.  v3:= temp;
  #L54cdaa.  if v3 == 0 then goto L54ce4c;
  #L54cdae.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L54cdb4.  v3:= temp @kind object;
  #L54cdb6.  v3:= (`q.e`) v3 @kind object;
  #L54cdba.  call `a`(v12, v13, v3) @signature `Lq/k;.a:(Lq/f;Ln/d;Lq/e;)V` @kind static;
  #L54cdc0.  call `g`(v3, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54cdc6.  goto L54cda2;
  #L54cdc8.  v3:= 0I;
  #L54cdca.  if v3 >= v1 then goto L54ce4c;
  #L54cdce.  v4:= v12.`q.n.P0` @type ^`java.util.ArrayList` @kind object;
  #L54cdd2.  call temp:= `get`(v4, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L54cdd8.  v4:= temp @kind object;
  #L54cdda.  v4:= (`q.e`) v4 @kind object;
  #L54cdde.  v6:= instanceof @variable v4 @type ^`q.f` @kind boolean;
  #L54cde2.  if v6 == 0 then goto L54ce2e;
  #L54cde6.  v6:= v4.`q.e.X` @type ^`q.e$b`[] @kind object;
  #L54cdea.  v7:= v6[v2] @kind object;
  #L54cdee.  v6:= v6[v5] @kind object;
  #L54cdf2.  v8:= `@@q.e$b.WRAP_CONTENT` @type ^`q.e$b` @kind object;
  #L54cdf6.  if v7 != v8 then goto L54ce04;
  #L54cdfa.  v9:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54cdfe.  call `M0`(v4, v9) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L54ce04.  if v6 != v8 then goto L54ce12;
  #L54ce08.  v9:= `@@q.e$b.FIXED` @type ^`q.e$b` @kind object;
  #L54ce0c.  call `d1`(v4, v9) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L54ce12.  call `g`(v4, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54ce18.  if v7 != v8 then goto L54ce22;
  #L54ce1c.  call `M0`(v4, v7) @signature `Lq/e;.M0:(Lq/e$b;)V` @kind virtual;
  #L54ce22.  if v6 != v8 then goto L54ce46;
  #L54ce26.  call `d1`(v4, v6) @signature `Lq/e;.d1:(Lq/e$b;)V` @kind virtual;
  #L54ce2c.  goto L54ce46;
  #L54ce2e.  call `a`(v12, v13, v4) @signature `Lq/k;.a:(Lq/f;Ln/d;Lq/e;)V` @kind static;
  #L54ce34.  call temp:= `f`(v4) @signature `Lq/e;.f:()Z` @kind virtual;
  #L54ce3a.  v6:= temp;
  #L54ce3c.  if v6 != 0 then goto L54ce46;
  #L54ce40.  call `g`(v4, v13, v0) @signature `Lq/e;.g:(Ln/d;Z)V` @kind virtual;
  #L54ce46.  v3:= v3 + 1;
  #L54ce4a.  goto L54cdca;
  #L54ce4c.  v0:= v12.`q.f.Y0` @type ^`int`;
  #L54ce50.  v1:= 0I;
  #L54ce52.  if v0 <= 0 then goto L54ce5c;
  #L54ce56.  call `b`(v12, v13, v1, v2) @signature `Lq/b;.b:(Lq/f;Ln/d;Ljava/util/ArrayList;I)V` @kind static;
  #L54ce5c.  v0:= v12.`q.f.Z0` @type ^`int`;
  #L54ce60.  if v0 <= 0 then goto L54ce6a;
  #L54ce64.  call `b`(v12, v13, v1, v5) @signature `Lq/b;.b:(Lq/f;Ln/d;Ljava/util/ArrayList;I)V` @kind static;
  #L54ce6a.  return v5;
}
procedure `void` `v1`(`q.f` v2 @kind this, `q.d` v3 @kind object) @signature `Lq/f;.v1:(Lq/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L54d424.  v0:= v2.`q.f.i1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d428.  if v0 == 0 then goto L54d45c;
  #L54d42c.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d432.  v0:= temp @kind object;
  #L54d434.  if v0 == 0 then goto L54d45c;
  #L54d438.  call temp:= `e`(v3) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d43e.  v0:= temp;
  #L54d440.  v1:= v2.`q.f.i1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d444.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d44a.  v1:= temp @kind object;
  #L54d44c.  v1:= (`q.d`) v1 @kind object;
  #L54d450.  call temp:= `e`(v1) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d456.  v1:= temp;
  #L54d458.  if v0 <= v1 then goto L54d46a;
  #L54d45c.  v0:= new `java.lang.ref.WeakReference`;
  #L54d460.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L54d466.  v2.`q.f.i1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d46a.  return @kind void;
}
procedure `void` `w1`(`q.f` v2 @kind this, `q.d` v3 @kind object) @signature `Lq/f;.w1:(Lq/d;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L54d47c.  v0:= v2.`q.f.g1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d480.  if v0 == 0 then goto L54d4b4;
  #L54d484.  call temp:= `get`(v0) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d48a.  v0:= temp @kind object;
  #L54d48c.  if v0 == 0 then goto L54d4b4;
  #L54d490.  call temp:= `e`(v3) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d496.  v0:= temp;
  #L54d498.  v1:= v2.`q.f.g1` @type ^`java.lang.ref.WeakReference` @kind object;
  #L54d49c.  call temp:= `get`(v1) @signature `Ljava/lang/ref/WeakReference;.get:()Ljava/lang/Object;` @kind virtual;
  #L54d4a2.  v1:= temp @kind object;
  #L54d4a4.  v1:= (`q.d`) v1 @kind object;
  #L54d4a8.  call temp:= `e`(v1) @signature `Lq/d;.e:()I` @kind virtual;
  #L54d4ae.  v1:= temp;
  #L54d4b0.  if v0 <= v1 then goto L54d4c2;
  #L54d4b4.  v0:= new `java.lang.ref.WeakReference`;
  #L54d4b8.  call `<init>`(v0, v3) @signature `Ljava/lang/ref/WeakReference;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L54d4be.  v2.`q.f.g1` @type ^`java.lang.ref.WeakReference` := v0 @kind object;
  #L54d4c2.  return @kind void;
}
