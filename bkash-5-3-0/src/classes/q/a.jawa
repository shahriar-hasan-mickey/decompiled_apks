record `q.a` @kind class @AccessFlag PUBLIC extends `q.j` @kind class {
  `int` `q.a.R0` @AccessFlag PRIVATE;
  `boolean` `q.a.S0` @AccessFlag PRIVATE;
  `int` `q.a.T0` @AccessFlag PRIVATE;
  `boolean` `q.a.U0` @AccessFlag ;
}
procedure `void` `<init>`(`q.a` v2 @kind this) @signature `Lq/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L54ac84.  call `<init>`(v2) @signature `Lq/j;.<init>:()V` @kind direct;
  #L54ac8a.  v0:= 0I;
  #L54ac8c.  v2.`q.a.R0` @type ^`int` := v0;
  #L54ac90.  v1:= 1I;
  #L54ac92.  v2.`q.a.S0` @type ^`boolean` := v1 @kind boolean;
  #L54ac96.  v2.`q.a.T0` @type ^`int` := v0;
  #L54ac9a.  v2.`q.a.U0` @type ^`boolean` := v0 @kind boolean;
  #L54ac9e.  return @kind void;
}
procedure `void` `g`(`q.a` v12 @kind this, `n.d` v13 @kind object, `boolean` v14 ) @signature `Lq/a;.g:(Ln/d;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L54acb0.  v14:= v12.`q.e.U` @type ^`q.d`[] @kind object;
  #L54acb4.  v0:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54acb8.  v1:= 0I;
  #L54acba.  v14[v1]:= v0 @kind object;
  #L54acbe.  v0:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54acc2.  v2:= 2I;
  #L54acc4.  v14[v2]:= v0 @kind object;
  #L54acc8.  v0:= v12.`q.e.O` @type ^`q.d` @kind object;
  #L54accc.  v3:= 1I;
  #L54acce.  v14[v3]:= v0 @kind object;
  #L54acd2.  v0:= v12.`q.e.P` @type ^`q.d` @kind object;
  #L54acd6.  v4:= 3I;
  #L54acd8.  v14[v4]:= v0 @kind object;
  #L54acdc.  v14:= 0I;
  #L54acde.  v0:= v12.`q.e.U` @type ^`q.d`[] @kind object;
  #L54ace2.  v5:= length @variable v0;
  #L54ace4.  if v14 >= v5 then goto L54ad02;
  #L54ace8.  v5:= v0[v14] @kind object;
  #L54acec.  v0:= v0[v14] @kind object;
  #L54acf0.  call temp:= `q`(v13, v0) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54acf6.  v0:= temp @kind object;
  #L54acf8.  v5.`q.d.i` @type ^`n.i` := v0 @kind object;
  #L54acfc.  v14:= v14 + 1;
  #L54ad00.  goto L54acde;
  #L54ad02.  v14:= v12.`q.a.R0` @type ^`int`;
  #L54ad06.  if v14 < 0 then goto L54b0b4;
  #L54ad0a.  v5:= 4I;
  #L54ad0c.  if v14 >= v5 then goto L54b0b4;
  #L54ad10.  v14:= v0[v14] @kind object;
  #L54ad14.  v0:= v12.`q.a.U0` @type ^`boolean` @kind boolean;
  #L54ad18.  if v0 != 0 then goto L54ad22;
  #L54ad1c.  call temp:= `q1`(v12) @signature `Lq/a;.q1:()Z` @kind virtual;
  #L54ad22.  v0:= v12.`q.a.U0` @type ^`boolean` @kind boolean;
  #L54ad26.  if v0 == 0 then goto L54ad90;
  #L54ad2a.  v12.`q.a.U0` @type ^`boolean` := v1 @kind boolean;
  #L54ad2e.  v14:= v12.`q.a.R0` @type ^`int`;
  #L54ad32.  if v14 == 0 then goto L54ad6a;
  #L54ad36.  if v14 != v3 then goto L54ad3c;
  #L54ad3a.  goto L54ad6a;
  #L54ad3c.  if v14 == v2 then goto L54ad44;
  #L54ad40.  if v14 != v4 then goto L54ad8e;
  #L54ad44.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54ad48.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54ad4c.  v0:= v12.`q.e.e0` @type ^`int`;
  #L54ad50.  call `f`(v13, v14, v0) @signature `Ln/d;.f:(Ln/i;I)V` @kind virtual;
  #L54ad56.  v14:= v12.`q.e.P` @type ^`q.d` @kind object;
  #L54ad5a.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54ad5e.  v0:= v12.`q.e.e0` @type ^`int`;
  #L54ad62.  call `f`(v13, v14, v0) @signature `Ln/d;.f:(Ln/i;I)V` @kind virtual;
  #L54ad68.  goto L54ad8e;
  #L54ad6a.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54ad6e.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54ad72.  v0:= v12.`q.e.d0` @type ^`int`;
  #L54ad76.  call `f`(v13, v14, v0) @signature `Ln/d;.f:(Ln/i;I)V` @kind virtual;
  #L54ad7c.  v14:= v12.`q.e.O` @type ^`q.d` @kind object;
  #L54ad80.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54ad84.  v0:= v12.`q.e.d0` @type ^`int`;
  #L54ad88.  call `f`(v13, v14, v0) @signature `Ln/d;.f:(Ln/i;I)V` @kind virtual;
  #L54ad8e.  return @kind void;
  #L54ad90.  v0:= 0I;
  #L54ad92.  v6:= v12.`q.j.Q0` @type ^`int`;
  #L54ad96.  if v0 >= v6 then goto L54ae2c;
  #L54ad9a.  v6:= v12.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54ad9e.  v6:= v6[v0] @kind object;
  #L54ada2.  v7:= v12.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54ada6.  if v7 != 0 then goto L54adb8;
  #L54adaa.  call temp:= `h`(v6) @signature `Lq/e;.h:()Z` @kind virtual;
  #L54adb0.  v7:= temp;
  #L54adb2.  if v7 != 0 then goto L54adb8;
  #L54adb6.  goto L54ae26;
  #L54adb8.  v7:= v12.`q.a.R0` @type ^`int`;
  #L54adbc.  if v7 == 0 then goto L54adc4;
  #L54adc0.  if v7 != v3 then goto L54adf0;
  #L54adc4.  call temp:= `C`(v6) @signature `Lq/e;.C:()Lq/e$b;` @kind virtual;
  #L54adca.  v7:= temp @kind object;
  #L54adcc.  v8:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L54add0.  if v7 != v8 then goto L54adf0;
  #L54add4.  v7:= v6.`q.e.M` @type ^`q.d` @kind object;
  #L54add8.  v7:= v7.`q.d.f` @type ^`q.d` @kind object;
  #L54addc.  if v7 == 0 then goto L54adf0;
  #L54ade0.  v7:= v6.`q.e.O` @type ^`q.d` @kind object;
  #L54ade4.  v7:= v7.`q.d.f` @type ^`q.d` @kind object;
  #L54ade8.  if v7 == 0 then goto L54adf0;
  #L54adec.  v0:= 1I;
  #L54adee.  goto L54ae2e;
  #L54adf0.  v7:= v12.`q.a.R0` @type ^`int`;
  #L54adf4.  if v7 == v2 then goto L54adfc;
  #L54adf8.  if v7 != v4 then goto L54ae26;
  #L54adfc.  call temp:= `S`(v6) @signature `Lq/e;.S:()Lq/e$b;` @kind virtual;
  #L54ae02.  v7:= temp @kind object;
  #L54ae04.  v8:= `@@q.e$b.MATCH_CONSTRAINT` @type ^`q.e$b` @kind object;
  #L54ae08.  if v7 != v8 then goto L54ae26;
  #L54ae0c.  v7:= v6.`q.e.N` @type ^`q.d` @kind object;
  #L54ae10.  v7:= v7.`q.d.f` @type ^`q.d` @kind object;
  #L54ae14.  if v7 == 0 then goto L54ae26;
  #L54ae18.  v6:= v6.`q.e.P` @type ^`q.d` @kind object;
  #L54ae1c.  v6:= v6.`q.d.f` @type ^`q.d` @kind object;
  #L54ae20.  if v6 == 0 then goto L54ae26;
  #L54ae24.  goto L54adec;
  #L54ae26.  v0:= v0 + 1;
  #L54ae2a.  goto L54ad92;
  #L54ae2c.  v0:= 0I;
  #L54ae2e.  v6:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54ae32.  call temp:= `l`(v6) @signature `Lq/d;.l:()Z` @kind virtual;
  #L54ae38.  v6:= temp;
  #L54ae3a.  if v6 != 0 then goto L54ae54;
  #L54ae3e.  v6:= v12.`q.e.O` @type ^`q.d` @kind object;
  #L54ae42.  call temp:= `l`(v6) @signature `Lq/d;.l:()Z` @kind virtual;
  #L54ae48.  v6:= temp;
  #L54ae4a.  if v6 == 0 then goto L54ae50;
  #L54ae4e.  goto L54ae54;
  #L54ae50.  v6:= 0I;
  #L54ae52.  goto L54ae56;
  #L54ae54.  v6:= 1I;
  #L54ae56.  v7:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54ae5a.  call temp:= `l`(v7) @signature `Lq/d;.l:()Z` @kind virtual;
  #L54ae60.  v7:= temp;
  #L54ae62.  if v7 != 0 then goto L54ae7c;
  #L54ae66.  v7:= v12.`q.e.P` @type ^`q.d` @kind object;
  #L54ae6a.  call temp:= `l`(v7) @signature `Lq/d;.l:()Z` @kind virtual;
  #L54ae70.  v7:= temp;
  #L54ae72.  if v7 == 0 then goto L54ae78;
  #L54ae76.  goto L54ae7c;
  #L54ae78.  v7:= 0I;
  #L54ae7a.  goto L54ae7e;
  #L54ae7c.  v7:= 1I;
  #L54ae7e.  if v0 != 0 then goto L54aeaa;
  #L54ae82.  v8:= v12.`q.a.R0` @type ^`int`;
  #L54ae86.  if v8 != 0 then goto L54ae8e;
  #L54ae8a.  if v6 != 0 then goto L54aea6;
  #L54ae8e.  if v8 != v2 then goto L54ae96;
  #L54ae92.  if v7 != 0 then goto L54aea6;
  #L54ae96.  if v8 != v3 then goto L54ae9e;
  #L54ae9a.  if v6 != 0 then goto L54aea6;
  #L54ae9e.  if v8 != v4 then goto L54aeaa;
  #L54aea2.  if v7 == 0 then goto L54aeaa;
  #L54aea6.  v6:= 1I;
  #L54aea8.  goto L54aeac;
  #L54aeaa.  v6:= 0I;
  #L54aeac.  v7:= 5I;
  #L54aeae.  if v6 != 0 then goto L54aeb4;
  #L54aeb2.  v7:= 4I;
  #L54aeb4.  v6:= 0I;
  #L54aeb6.  v8:= v12.`q.j.Q0` @type ^`int`;
  #L54aeba.  if v6 >= v8 then goto L54af6c;
  #L54aebe.  v8:= v12.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54aec2.  v8:= v8[v6] @kind object;
  #L54aec6.  v9:= v12.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54aeca.  if v9 != 0 then goto L54aedc;
  #L54aece.  call temp:= `h`(v8) @signature `Lq/e;.h:()Z` @kind virtual;
  #L54aed4.  v9:= temp;
  #L54aed6.  if v9 != 0 then goto L54aedc;
  #L54aeda.  goto L54af66;
  #L54aedc.  v9:= v8.`q.e.U` @type ^`q.d`[] @kind object;
  #L54aee0.  v10:= v12.`q.a.R0` @type ^`int`;
  #L54aee4.  v9:= v9[v10] @kind object;
  #L54aee8.  call temp:= `q`(v13, v9) @signature `Ln/d;.q:(Ljava/lang/Object;)Ln/i;` @kind virtual;
  #L54aeee.  v9:= temp @kind object;
  #L54aef0.  v8:= v8.`q.e.U` @type ^`q.d`[] @kind object;
  #L54aef4.  v10:= v12.`q.a.R0` @type ^`int`;
  #L54aef8.  v11:= v8[v10] @kind object;
  #L54aefc.  v11.`q.d.i` @type ^`n.i` := v9 @kind object;
  #L54af00.  v11:= v8[v10] @kind object;
  #L54af04.  v11:= v11.`q.d.f` @type ^`q.d` @kind object;
  #L54af08.  if v11 == 0 then goto L54af28;
  #L54af0c.  v11:= v8[v10] @kind object;
  #L54af10.  v11:= v11.`q.d.f` @type ^`q.d` @kind object;
  #L54af14.  v11:= v11.`q.d.d` @type ^`q.e` @kind object;
  #L54af18.  if v11 != v12 then goto L54af28;
  #L54af1c.  v8:= v8[v10] @kind object;
  #L54af20.  v8:= v8.`q.d.g` @type ^`int`;
  #L54af24.  v8:= v8 + v1 @kind int;
  #L54af26.  goto L54af2a;
  #L54af28.  v8:= 0I;
  #L54af2a.  if v10 == 0 then goto L54af46;
  #L54af2e.  if v10 != v2 then goto L54af34;
  #L54af32.  goto L54af46;
  #L54af34.  v10:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54af38.  v11:= v12.`q.a.T0` @type ^`int`;
  #L54af3c.  v11:= v11 + v8 @kind int;
  #L54af3e.  call `g`(v13, v10, v9, v11, v0) @signature `Ln/d;.g:(Ln/i;Ln/i;IZ)V` @kind virtual;
  #L54af44.  goto L54af56;
  #L54af46.  v10:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54af4a.  v11:= v12.`q.a.T0` @type ^`int`;
  #L54af4e.  v11:= v11 - v8 @kind int;
  #L54af50.  call `i`(v13, v10, v9, v11, v0) @signature `Ln/d;.i:(Ln/i;Ln/i;IZ)V` @kind virtual;
  #L54af56.  v10:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54af5a.  v11:= v12.`q.a.T0` @type ^`int`;
  #L54af5e.  v11:= v11 + v8 @kind int;
  #L54af60.  call temp:= `e`(v13, v10, v9, v11, v7) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54af66.  v6:= v6 + 1;
  #L54af6a.  goto L54aeb6;
  #L54af6c.  v14:= v12.`q.a.R0` @type ^`int`;
  #L54af70.  v0:= 8I;
  #L54af74.  if v14 != 0 then goto L54afc6;
  #L54af78.  v14:= v12.`q.e.O` @type ^`q.d` @kind object;
  #L54af7c.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54af80.  v2:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54af84.  v2:= v2.`q.d.i` @type ^`n.i` @kind object;
  #L54af88.  call temp:= `e`(v13, v14, v2, v1, v0) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54af8e.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54af92.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54af96.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54af9a.  v0:= v0.`q.e.O` @type ^`q.d` @kind object;
  #L54af9e.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54afa2.  call temp:= `e`(v13, v14, v0, v1, v5) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54afa8.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54afac.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54afb0.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54afb4.  v0:= v0.`q.e.M` @type ^`q.d` @kind object;
  #L54afb8.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54afbc.  call temp:= `e`(v13, v14, v0, v1, v1) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54afc2.  goto L54b0b4;
  #L54afc6.  if v14 != v3 then goto L54b016;
  #L54afca.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54afce.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54afd2.  v2:= v12.`q.e.O` @type ^`q.d` @kind object;
  #L54afd6.  v2:= v2.`q.d.i` @type ^`n.i` @kind object;
  #L54afda.  call temp:= `e`(v13, v14, v2, v1, v0) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54afe0.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54afe4.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54afe8.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54afec.  v0:= v0.`q.e.M` @type ^`q.d` @kind object;
  #L54aff0.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54aff4.  call temp:= `e`(v13, v14, v0, v1, v5) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54affa.  v14:= v12.`q.e.M` @type ^`q.d` @kind object;
  #L54affe.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b002.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54b006.  v0:= v0.`q.e.O` @type ^`q.d` @kind object;
  #L54b00a.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54b00e.  call temp:= `e`(v13, v14, v0, v1, v1) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b014.  goto L54b0b4;
  #L54b016.  if v14 != v2 then goto L54b066;
  #L54b01a.  v14:= v12.`q.e.P` @type ^`q.d` @kind object;
  #L54b01e.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b022.  v2:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b026.  v2:= v2.`q.d.i` @type ^`n.i` @kind object;
  #L54b02a.  call temp:= `e`(v13, v14, v2, v1, v0) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b030.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b034.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b038.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54b03c.  v0:= v0.`q.e.P` @type ^`q.d` @kind object;
  #L54b040.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54b044.  call temp:= `e`(v13, v14, v0, v1, v5) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b04a.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b04e.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b052.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54b056.  v0:= v0.`q.e.N` @type ^`q.d` @kind object;
  #L54b05a.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54b05e.  call temp:= `e`(v13, v14, v0, v1, v1) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b064.  goto L54b0b4;
  #L54b066.  if v14 != v4 then goto L54b0b4;
  #L54b06a.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b06e.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b072.  v2:= v12.`q.e.P` @type ^`q.d` @kind object;
  #L54b076.  v2:= v2.`q.d.i` @type ^`n.i` @kind object;
  #L54b07a.  call temp:= `e`(v13, v14, v2, v1, v0) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b080.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b084.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b088.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54b08c.  v0:= v0.`q.e.N` @type ^`q.d` @kind object;
  #L54b090.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54b094.  call temp:= `e`(v13, v14, v0, v1, v5) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b09a.  v14:= v12.`q.e.N` @type ^`q.d` @kind object;
  #L54b09e.  v14:= v14.`q.d.i` @type ^`n.i` @kind object;
  #L54b0a2.  v0:= v12.`q.e.Y` @type ^`q.e` @kind object;
  #L54b0a6.  v0:= v0.`q.e.P` @type ^`q.d` @kind object;
  #L54b0aa.  v0:= v0.`q.d.i` @type ^`n.i` @kind object;
  #L54b0ae.  call temp:= `e`(v13, v14, v0, v1, v1) @signature `Ln/d;.e:(Ln/i;Ln/i;II)Ln/b;` @kind virtual;
  #L54b0b4.  return @kind void;
}
procedure `boolean` `h`(`q.a` v1 @kind this) @signature `Lq/a;.h:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54aaf8.  v0:= 1I;
  #L54aafa.  return v0;
}
procedure `boolean` `m0`(`q.a` v1 @kind this) @signature `Lq/a;.m0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ab24.  v0:= v1.`q.a.U0` @type ^`boolean` @kind boolean;
  #L54ab28.  return v0;
}
procedure `void` `n`(`q.a` v0 @kind this, `q.e` v1 @kind object, `java.util.HashMap` v2 @kind object) @signature `Lq/a;.n:(Lq/e;Ljava/util/HashMap;)V` @AccessFlag PUBLIC {
    temp;

  #L54b0c8.  call `n`(v0, v1, v2) @signature `Lq/j;.n:(Lq/e;Ljava/util/HashMap;)V` @kind super;
  #L54b0ce.  v1:= (`q.a`) v1 @kind object;
  #L54b0d2.  v2:= v1.`q.a.R0` @type ^`int`;
  #L54b0d6.  v0.`q.a.R0` @type ^`int` := v2;
  #L54b0da.  v2:= v1.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54b0de.  v0.`q.a.S0` @type ^`boolean` := v2 @kind boolean;
  #L54b0e2.  v1:= v1.`q.a.T0` @type ^`int`;
  #L54b0e6.  v0.`q.a.T0` @type ^`int` := v1;
  #L54b0ea.  return @kind void;
}
procedure `boolean` `n0`(`q.a` v1 @kind this) @signature `Lq/a;.n0:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ab3c.  v0:= v1.`q.a.U0` @type ^`boolean` @kind boolean;
  #L54ab40.  return v0;
}
procedure `boolean` `q1`(`q.a` v8 @kind this) @signature `Lq/a;.q1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L54a918.  v0:= 0I;
  #L54a91a.  v1:= 1I;
  #L54a91c.  v2:= 0I;
  #L54a91e.  v3:= 1I;
  #L54a920.  v4:= v8.`q.j.Q0` @type ^`int`;
  #L54a924.  v5:= 3I;
  #L54a926.  v6:= 2I;
  #L54a928.  if v2 >= v4 then goto L54a986;
  #L54a92c.  v4:= v8.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54a930.  v4:= v4[v2] @kind object;
  #L54a934.  v7:= v8.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54a938.  if v7 != 0 then goto L54a94a;
  #L54a93c.  call temp:= `h`(v4) @signature `Lq/e;.h:()Z` @kind virtual;
  #L54a942.  v7:= temp;
  #L54a944.  if v7 != 0 then goto L54a94a;
  #L54a948.  goto L54a980;
  #L54a94a.  v7:= v8.`q.a.R0` @type ^`int`;
  #L54a94e.  if v7 == 0 then goto L54a956;
  #L54a952.  if v7 != v1 then goto L54a966;
  #L54a956.  call temp:= `m0`(v4) @signature `Lq/e;.m0:()Z` @kind virtual;
  #L54a95c.  v7:= temp;
  #L54a95e.  if v7 != 0 then goto L54a966;
  #L54a962.  v3:= 0I;
  #L54a964.  goto L54a980;
  #L54a966.  v7:= v8.`q.a.R0` @type ^`int`;
  #L54a96a.  if v7 == v6 then goto L54a972;
  #L54a96e.  if v7 != v5 then goto L54a980;
  #L54a972.  call temp:= `n0`(v4) @signature `Lq/e;.n0:()Z` @kind virtual;
  #L54a978.  v4:= temp;
  #L54a97a.  if v4 != 0 then goto L54a980;
  #L54a97e.  goto L54a962;
  #L54a980.  v2:= v2 + 1;
  #L54a984.  goto L54a920;
  #L54a986.  if v3 == 0 then goto L54aae4;
  #L54a98a.  if v4 <= 0 then goto L54aae4;
  #L54a98e.  v2:= 0I;
  #L54a990.  v3:= 0I;
  #L54a992.  v4:= v8.`q.j.Q0` @type ^`int`;
  #L54a996.  if v0 >= v4 then goto L54aabc;
  #L54a99a.  v4:= v8.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54a99e.  v4:= v4[v0] @kind object;
  #L54a9a2.  v7:= v8.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54a9a6.  if v7 != 0 then goto L54a9ba;
  #L54a9aa.  call temp:= `h`(v4) @signature `Lq/e;.h:()Z` @kind virtual;
  #L54a9b0.  v7:= temp;
  #L54a9b2.  if v7 != 0 then goto L54a9ba;
  #L54a9b6.  goto L54aab4;
  #L54a9ba.  if v3 != 0 then goto L54aa2a;
  #L54a9be.  v3:= v8.`q.a.R0` @type ^`int`;
  #L54a9c2.  if v3 != 0 then goto L54a9dc;
  #L54a9c6.  v2:= `@@q.d$b.LEFT` @type ^`q.d$b` @kind object;
  #L54a9ca.  call temp:= `q`(v4, v2) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54a9d0.  v2:= temp @kind object;
  #L54a9d2.  call temp:= `e`(v2) @signature `Lq/d;.e:()I` @kind virtual;
  #L54a9d8.  v2:= temp;
  #L54a9da.  goto L54aa28;
  #L54a9dc.  if v3 != v1 then goto L54a9f6;
  #L54a9e0.  v2:= `@@q.d$b.RIGHT` @type ^`q.d$b` @kind object;
  #L54a9e4.  call temp:= `q`(v4, v2) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54a9ea.  v2:= temp @kind object;
  #L54a9ec.  call temp:= `e`(v2) @signature `Lq/d;.e:()I` @kind virtual;
  #L54a9f2.  v2:= temp;
  #L54a9f4.  goto L54aa28;
  #L54a9f6.  if v3 != v6 then goto L54aa10;
  #L54a9fa.  v2:= `@@q.d$b.TOP` @type ^`q.d$b` @kind object;
  #L54a9fe.  call temp:= `q`(v4, v2) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aa04.  v2:= temp @kind object;
  #L54aa06.  call temp:= `e`(v2) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aa0c.  v2:= temp;
  #L54aa0e.  goto L54aa28;
  #L54aa10.  if v3 != v5 then goto L54aa28;
  #L54aa14.  v2:= `@@q.d$b.BOTTOM` @type ^`q.d$b` @kind object;
  #L54aa18.  call temp:= `q`(v4, v2) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aa1e.  v2:= temp @kind object;
  #L54aa20.  call temp:= `e`(v2) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aa26.  v2:= temp;
  #L54aa28.  v3:= 1I;
  #L54aa2a.  v7:= v8.`q.a.R0` @type ^`int`;
  #L54aa2e.  if v7 != 0 then goto L54aa50;
  #L54aa32.  v7:= `@@q.d$b.LEFT` @type ^`q.d$b` @kind object;
  #L54aa36.  call temp:= `q`(v4, v7) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aa3c.  v4:= temp @kind object;
  #L54aa3e.  call temp:= `e`(v4) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aa44.  v4:= temp;
  #L54aa46.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L54aa4c.  v2:= temp;
  #L54aa4e.  goto L54aab4;
  #L54aa50.  if v7 != v1 then goto L54aa72;
  #L54aa54.  v7:= `@@q.d$b.RIGHT` @type ^`q.d$b` @kind object;
  #L54aa58.  call temp:= `q`(v4, v7) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aa5e.  v4:= temp @kind object;
  #L54aa60.  call temp:= `e`(v4) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aa66.  v4:= temp;
  #L54aa68.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54aa6e.  v2:= temp;
  #L54aa70.  goto L54aab4;
  #L54aa72.  if v7 != v6 then goto L54aa94;
  #L54aa76.  v7:= `@@q.d$b.TOP` @type ^`q.d$b` @kind object;
  #L54aa7a.  call temp:= `q`(v4, v7) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aa80.  v4:= temp @kind object;
  #L54aa82.  call temp:= `e`(v4) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aa88.  v4:= temp;
  #L54aa8a.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L54aa90.  v2:= temp;
  #L54aa92.  goto L54aab4;
  #L54aa94.  if v7 != v5 then goto L54aab4;
  #L54aa98.  v7:= `@@q.d$b.BOTTOM` @type ^`q.d$b` @kind object;
  #L54aa9c.  call temp:= `q`(v4, v7) @signature `Lq/e;.q:(Lq/d$b;)Lq/d;` @kind virtual;
  #L54aaa2.  v4:= temp @kind object;
  #L54aaa4.  call temp:= `e`(v4) @signature `Lq/d;.e:()I` @kind virtual;
  #L54aaaa.  v4:= temp;
  #L54aaac.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L54aab2.  v2:= temp;
  #L54aab4.  v0:= v0 + 1;
  #L54aab8.  goto L54a992;
  #L54aabc.  v0:= v8.`q.a.T0` @type ^`int`;
  #L54aac0.  v2:= v2 + v0 @kind int;
  #L54aac2.  v0:= v8.`q.a.R0` @type ^`int`;
  #L54aac6.  if v0 == 0 then goto L54aad8;
  #L54aaca.  if v0 != v1 then goto L54aad0;
  #L54aace.  goto L54aad8;
  #L54aad0.  call `F0`(v8, v2, v2) @signature `Lq/e;.F0:(II)V` @kind virtual;
  #L54aad6.  goto L54aade;
  #L54aad8.  call `C0`(v8, v2, v2) @signature `Lq/e;.C0:(II)V` @kind virtual;
  #L54aade.  v8.`q.a.U0` @type ^`boolean` := v1 @kind boolean;
  #L54aae2.  return v1;
  #L54aae4.  return v0;
}
procedure `boolean` `r1`(`q.a` v1 @kind this) @signature `Lq/a;.r1:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ab0c.  v0:= v1.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54ab10.  return v0;
}
procedure `int` `s1`(`q.a` v1 @kind this) @signature `Lq/a;.s1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ab54.  v0:= v1.`q.a.R0` @type ^`int`;
  #L54ab58.  return v0;
}
procedure `int` `t1`(`q.a` v1 @kind this) @signature `Lq/a;.t1:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L54ab6c.  v0:= v1.`q.a.T0` @type ^`int`;
  #L54ab70.  return v0;
}
procedure `java.lang.String` `toString`(`q.a` v4 @kind this) @signature `Lq/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L54abb8.  v0:= new `java.lang.StringBuilder`;
  #L54abbc.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54abc2.  v1:= "[Barrier] " @kind object;
  #L54abc6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54abcc.  call temp:= `v`(v4) @signature `Lq/e;.v:()Ljava/lang/String;` @kind virtual;
  #L54abd2.  v1:= temp @kind object;
  #L54abd4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54abda.  v1:= " {" @kind object;
  #L54abde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54abe4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54abea.  v0:= temp @kind object;
  #L54abec.  v1:= 0I;
  #L54abee.  v2:= v4.`q.j.Q0` @type ^`int`;
  #L54abf2.  if v1 >= v2 then goto L54ac50;
  #L54abf6.  v2:= v4.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54abfa.  v2:= v2[v1] @kind object;
  #L54abfe.  if v1 <= 0 then goto L54ac24;
  #L54ac02.  v3:= new `java.lang.StringBuilder`;
  #L54ac06.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54ac0c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac12.  v0:= ", " @kind object;
  #L54ac16.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac1c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54ac22.  v0:= temp @kind object;
  #L54ac24.  v3:= new `java.lang.StringBuilder`;
  #L54ac28.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54ac2e.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac34.  call temp:= `v`(v2) @signature `Lq/e;.v:()Ljava/lang/String;` @kind virtual;
  #L54ac3a.  v0:= temp @kind object;
  #L54ac3c.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac42.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54ac48.  v0:= temp @kind object;
  #L54ac4a.  v1:= v1 + 1;
  #L54ac4e.  goto L54abee;
  #L54ac50.  v1:= new `java.lang.StringBuilder`;
  #L54ac54.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L54ac5a.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac60.  v0:= "}" @kind object;
  #L54ac64.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L54ac6a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L54ac70.  v0:= temp @kind object;
  #L54ac72.  return v0 @kind object;
}
procedure `int` `u1`(`q.a` v3 @kind this) @signature `Lq/a;.u1:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L54ab84.  v0:= v3.`q.a.R0` @type ^`int`;
  #L54ab88.  if v0 == 0 then goto L54aba4;
  #L54ab8c.  v1:= 1I;
  #L54ab8e.  if v0 == v1 then goto L54aba4;
  #L54ab92.  v2:= 2I;
  #L54ab94.  if v0 == v2 then goto L54aba2;
  #L54ab98.  v2:= 3I;
  #L54ab9a.  if v0 == v2 then goto L54aba2;
  #L54ab9e.  v0:= -1I;
  #L54aba0.  return v0;
  #L54aba2.  return v1;
  #L54aba4.  v0:= 0I;
  #L54aba6.  return v0;
}
procedure `void` `v1`(`q.a` v6 @kind this) @signature `Lq/a;.v1:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L54b0fc.  v0:= 0I;
  #L54b0fe.  v1:= 0I;
  #L54b100.  v2:= v6.`q.j.Q0` @type ^`int`;
  #L54b104.  if v1 >= v2 then goto L54b156;
  #L54b108.  v2:= v6.`q.j.P0` @type ^`q.e`[] @kind object;
  #L54b10c.  v2:= v2[v1] @kind object;
  #L54b110.  v3:= v6.`q.a.S0` @type ^`boolean` @kind boolean;
  #L54b114.  if v3 != 0 then goto L54b126;
  #L54b118.  call temp:= `h`(v2) @signature `Lq/e;.h:()Z` @kind virtual;
  #L54b11e.  v3:= temp;
  #L54b120.  if v3 != 0 then goto L54b126;
  #L54b124.  goto L54b150;
  #L54b126.  v3:= v6.`q.a.R0` @type ^`int`;
  #L54b12a.  v4:= 1I;
  #L54b12c.  if v3 == 0 then goto L54b14a;
  #L54b130.  if v3 != v4 then goto L54b136;
  #L54b134.  goto L54b14a;
  #L54b136.  v5:= 2I;
  #L54b138.  if v3 == v5 then goto L54b142;
  #L54b13c.  v5:= 3I;
  #L54b13e.  if v3 != v5 then goto L54b150;
  #L54b142.  call `P0`(v2, v4, v4) @signature `Lq/e;.P0:(IZ)V` @kind virtual;
  #L54b148.  goto L54b150;
  #L54b14a.  call `P0`(v2, v0, v4) @signature `Lq/e;.P0:(IZ)V` @kind virtual;
  #L54b150.  v1:= v1 + 1;
  #L54b154.  goto L54b100;
  #L54b156.  return @kind void;
}
procedure `void` `w1`(`q.a` v0 @kind this, `boolean` v1 ) @signature `Lq/a;.w1:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L54b168.  v0.`q.a.S0` @type ^`boolean` := v1 @kind boolean;
  #L54b16c.  return @kind void;
}
procedure `void` `x1`(`q.a` v0 @kind this, `int` v1 ) @signature `Lq/a;.x1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L54b180.  v0.`q.a.R0` @type ^`int` := v1;
  #L54b184.  return @kind void;
}
procedure `void` `y1`(`q.a` v0 @kind this, `int` v1 ) @signature `Lq/a;.y1:(I)V` @AccessFlag PUBLIC {
    temp;

  #L54b198.  v0.`q.a.T0` @type ^`int` := v1;
  #L54b19c.  return @kind void;
}
