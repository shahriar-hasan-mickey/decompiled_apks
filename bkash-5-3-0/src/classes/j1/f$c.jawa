record `j1.f$c` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `j1.g` `j1.f$c.g` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Callable` `j1.f$c.h` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`j1.f$c` v0 @kind this, `j1.c` v1 @kind object, `j1.g` v2 @kind object, `java.util.concurrent.Callable` v3 @kind object) @signature `Lj1/f$c;.<init>:(Lj1/c;Lj1/g;Ljava/util/concurrent/Callable;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L513044.  v0.`j1.f$c.g` @type ^`j1.g` := v2 @kind object;
  #L513048.  v0.`j1.f$c.h` @type ^`java.util.concurrent.Callable` := v3 @kind object;
  #L51304c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L513052.  return @kind void;
}
procedure `void` `run`(`j1.f$c` v2 @kind this) @signature `Lj1/f$c;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L513064.  v0:= v2.`j1.f$c.g` @type ^`j1.g` @kind object;
  #L513068.  v1:= v2.`j1.f$c.h` @type ^`java.util.concurrent.Callable` @kind object;
  #L51306c.  call temp:= `call`(v1) @signature `Ljava/util/concurrent/Callable;.call:()Ljava/lang/Object;` @kind interface;
  #L513072.  v1:= temp @kind object;
  #L513074.  call `d`(v0, v1) @signature `Lj1/g;.d:(Ljava/lang/Object;)V` @kind virtual;
  #L51307a.  goto L513094;
  #L51307c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L51307e.  v1:= v2.`j1.f$c.g` @type ^`j1.g` @kind object;
  #L513082.  call `c`(v1, v0) @signature `Lj1/g;.c:(Ljava/lang/Exception;)V` @kind virtual;
  #L513088.  goto L513094;
  #L51308a.  v0:= v2.`j1.f$c.g` @type ^`j1.g` @kind object;
  #L51308e.  call `b`(v0) @signature `Lj1/g;.b:()V` @kind virtual;
  #L513094.  return @kind void;
  catch `java.util.concurrent.CancellationException` @[L513064..L51307a] goto L51308a;
  catch `java.lang.Exception` @[L513064..L51307a] goto L51307c;
}
