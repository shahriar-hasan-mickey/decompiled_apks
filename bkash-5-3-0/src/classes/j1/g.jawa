record `j1.g` @kind class @AccessFlag PUBLIC {
  `j1.f` `j1.g.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`j1.g` v1 @kind this) @signature `Lj1/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L513130.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L513136.  v0:= new `j1.f`;
  #L51313a.  call `<init>`(v0) @signature `Lj1/f;.<init>:()V` @kind direct;
  #L513140.  v1.`j1.g.a` @type ^`j1.f` := v0 @kind object;
  #L513144.  return @kind void;
}
procedure `j1.f` `a`(`j1.g` v1 @kind this) @signature `Lj1/g;.a:()Lj1/f;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513118.  v0:= v1.`j1.g.a` @type ^`j1.f` @kind object;
  #L51311c.  return v0 @kind object;
}
procedure `void` `b`(`j1.g` v2 @kind this) @signature `Lj1/g;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L513158.  call temp:= `e`(v2) @signature `Lj1/g;.e:()Z` @kind virtual;
  #L51315e.  v0:= temp;
  #L513160.  if v0 == 0 then goto L513166;
  #L513164.  return @kind void;
  #L513166.  v0:= new `java.lang.IllegalStateException`;
  #L51316a.  v1:= "Cannot cancel a completed task." @kind object;
  #L51316e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L513174.  throw v0;
}
procedure `void` `c`(`j1.g` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lj1/g;.c:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L513188.  call temp:= `f`(v1, v2) @signature `Lj1/g;.f:(Ljava/lang/Exception;)Z` @kind virtual;
  #L51318e.  v2:= temp;
  #L513190.  if v2 == 0 then goto L513196;
  #L513194.  return @kind void;
  #L513196.  v2:= new `java.lang.IllegalStateException`;
  #L51319a.  v0:= "Cannot set the error on a completed task." @kind object;
  #L51319e.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5131a4.  throw v2;
}
procedure `void` `d`(`j1.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lj1/g;.d:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5131b8.  call temp:= `g`(v1, v2) @signature `Lj1/g;.g:(Ljava/lang/Object;)Z` @kind virtual;
  #L5131be.  v2:= temp;
  #L5131c0.  if v2 == 0 then goto L5131c6;
  #L5131c4.  return @kind void;
  #L5131c6.  v2:= new `java.lang.IllegalStateException`;
  #L5131ca.  v0:= "Cannot set the result of a completed task." @kind object;
  #L5131ce.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L5131d4.  throw v2;
}
procedure `boolean` `e`(`j1.g` v1 @kind this) @signature `Lj1/g;.e:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130b8.  v0:= v1.`j1.g.a` @type ^`j1.f` @kind object;
  #L5130bc.  call temp:= `p`(v0) @signature `Lj1/f;.p:()Z` @kind virtual;
  #L5130c2.  v0:= temp;
  #L5130c4.  return v0;
}
procedure `boolean` `f`(`j1.g` v1 @kind this, `java.lang.Exception` v2 @kind object) @signature `Lj1/g;.f:(Ljava/lang/Exception;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130d8.  v0:= v1.`j1.g.a` @type ^`j1.f` @kind object;
  #L5130dc.  call temp:= `q`(v0, v2) @signature `Lj1/f;.q:(Ljava/lang/Exception;)Z` @kind virtual;
  #L5130e2.  v2:= temp;
  #L5130e4.  return v2;
}
procedure `boolean` `g`(`j1.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lj1/g;.g:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L5130f8.  v0:= v1.`j1.g.a` @type ^`j1.f` @kind object;
  #L5130fc.  call temp:= `r`(v0, v2) @signature `Lj1/f;.r:(Ljava/lang/Object;)Z` @kind virtual;
  #L513102.  v2:= temp;
  #L513104.  return v2;
}
