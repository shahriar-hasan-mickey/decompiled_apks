record `j1.f$a` @kind class @AccessFlag  extends `j1.d` @kind interface {
  `j1.g` `j1.f$a.a` @AccessFlag FINAL_SYNTHETIC;
  `j1.d` `j1.f$a.b` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.Executor` `j1.f$a.c` @AccessFlag FINAL_SYNTHETIC;
  `j1.c` `j1.f$a.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`j1.f$a` v0 @kind this, `j1.f` v1 @kind object, `j1.g` v2 @kind object, `j1.d` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object, `j1.c` v5 @kind object) @signature `Lj1/f$a;.<init>:(Lj1/f;Lj1/g;Lj1/d;Ljava/util/concurrent/Executor;Lj1/c;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L512fa4.  v0.`j1.f$a.a` @type ^`j1.g` := v2 @kind object;
  #L512fa8.  v0.`j1.f$a.b` @type ^`j1.d` := v3 @kind object;
  #L512fac.  v0.`j1.f$a.c` @type ^`java.util.concurrent.Executor` := v4 @kind object;
  #L512fb0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L512fb6.  return @kind void;
}
procedure `java.lang.Object` `a`(`j1.f$a` v0 @kind this, `j1.f` v1 @kind object) @signature `Lj1/f$a;.a:(Lj1/f;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L512f5c.  call temp:= `b`(v0, v1) @signature `Lj1/f$a;.b:(Lj1/f;)Ljava/lang/Void;` @kind virtual;
  #L512f62.  v1:= temp @kind object;
  #L512f64.  return v1 @kind object;
}
procedure `java.lang.Void` `b`(`j1.f$a` v4 @kind this, `j1.f` v5 @kind object) @signature `Lj1/f$a;.b:(Lj1/f;)Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L512f78.  v0:= v4.`j1.f$a.a` @type ^`j1.g` @kind object;
  #L512f7c.  v1:= v4.`j1.f$a.b` @type ^`j1.d` @kind object;
  #L512f80.  v2:= v4.`j1.f$a.c` @type ^`java.util.concurrent.Executor` @kind object;
  #L512f84.  v3:= v4.`j1.f$a.d` @type ^`j1.c` @kind object;
  #L512f88.  call `a`(v0, v1, v5, v2, v3) @signature `Lj1/f;.a:(Lj1/g;Lj1/d;Lj1/f;Ljava/util/concurrent/Executor;Lj1/c;)V` @kind static;
  #L512f8e.  v5:= 0I;
  #L512f90.  return v5 @kind object;
}
