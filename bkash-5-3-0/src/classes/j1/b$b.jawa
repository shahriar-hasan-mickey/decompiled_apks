record `j1.b$b` @kind class @AccessFlag  extends `java.util.concurrent.Executor` @kind interface {
  `java.lang.ThreadLocal` `j1.b$b.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`j1.b$b` v1 @kind this) @signature `Lj1/b$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L512dc4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L512dca.  v0:= new `java.lang.ThreadLocal`;
  #L512dce.  call `<init>`(v0) @signature `Ljava/lang/ThreadLocal;.<init>:()V` @kind direct;
  #L512dd4.  v1.`j1.b$b.g` @type ^`java.lang.ThreadLocal` := v0 @kind object;
  #L512dd8.  return @kind void;
}
procedure `void` `<init>`(`j1.b$b` v0 @kind this, `j1.b$a` v1 @kind object) @signature `Lj1/b$b;.<init>:(Lj1/b$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L512dec.  call `<init>`(v0) @signature `Lj1/b$b;.<init>:()V` @kind direct;
  #L512df2.  return @kind void;
}
procedure `int` `a`(`j1.b$b` v3 @kind this) @signature `Lj1/b$b;.a:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L512d14.  v0:= v3.`j1.b$b.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L512d18.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L512d1e.  v0:= temp @kind object;
  #L512d20.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L512d24.  if v0 != 0 then goto L512d32;
  #L512d28.  v0:= 0I;
  #L512d2a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L512d30.  v0:= temp @kind object;
  #L512d32.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L512d38.  v0:= temp;
  #L512d3a.  v0:= v0 + -1;
  #L512d3e.  if v0 != 0 then goto L512d4e;
  #L512d42.  v1:= v3.`j1.b$b.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L512d46.  call `remove`(v1) @signature `Ljava/lang/ThreadLocal;.remove:()V` @kind virtual;
  #L512d4c.  goto L512d60;
  #L512d4e.  v1:= v3.`j1.b$b.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L512d52.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L512d58.  v2:= temp @kind object;
  #L512d5a.  call `set`(v1, v2) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L512d60.  return v0;
}
procedure `int` `b`(`j1.b$b` v3 @kind this) @signature `Lj1/b$b;.b:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L512d74.  v0:= v3.`j1.b$b.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L512d78.  call temp:= `get`(v0) @signature `Ljava/lang/ThreadLocal;.get:()Ljava/lang/Object;` @kind virtual;
  #L512d7e.  v0:= temp @kind object;
  #L512d80.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L512d84.  if v0 != 0 then goto L512d92;
  #L512d88.  v0:= 0I;
  #L512d8a.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L512d90.  v0:= temp @kind object;
  #L512d92.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L512d98.  v0:= temp;
  #L512d9a.  v0:= v0 + 1;
  #L512d9e.  v1:= v3.`j1.b$b.g` @type ^`java.lang.ThreadLocal` @kind object;
  #L512da2.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L512da8.  v2:= temp @kind object;
  #L512daa.  call `set`(v1, v2) @signature `Ljava/lang/ThreadLocal;.set:(Ljava/lang/Object;)V` @kind virtual;
  #L512db0.  return v0;
}
procedure `void` `execute`(`j1.b$b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lj1/b$b;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L512e04.  call temp:= `b`(v2) @signature `Lj1/b$b;.b:()I` @kind direct;
  #L512e0a.  v0:= temp;
  #L512e0c.  v1:= 15I;
  #L512e10.  if v0 > v1 then goto L512e1c;
  #L512e14.  call `run`(v3) @signature `Ljava/lang/Runnable;.run:()V` @kind interface;
  #L512e1a.  goto L512e2a;
  #L512e1c.  call temp:= `a`() @signature `Lj1/b;.a:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L512e22.  v0:= temp @kind object;
  #L512e24.  call `execute`(v0, v3) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L512e2a.  call temp:= `a`(v2) @signature `Lj1/b$b;.a:()I` @kind direct;
  #L512e30.  return @kind void;
  #L512e32.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L512e34.  call temp:= `a`(v2) @signature `Lj1/b$b;.a:()I` @kind direct;
  #L512e3a.  throw v3;
  catch `java.lang.Throwable` @[L512e14..L512e2a] goto L512e32;
}
