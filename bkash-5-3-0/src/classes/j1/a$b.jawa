record `j1.a$b` @kind class @AccessFlag  extends `java.util.concurrent.Executor` @kind interface {
}
procedure `void` `<init>`(`j1.a$b` v0 @kind this) @signature `Lj1/a$b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L512bc8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L512bce.  return @kind void;
}
procedure `void` `<init>`(`j1.a$b` v0 @kind this, `j1.a$a` v1 @kind object) @signature `Lj1/a$b;.<init>:(Lj1/a$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L512be0.  call `<init>`(v0) @signature `Lj1/a$b;.<init>:()V` @kind direct;
  #L512be6.  return @kind void;
}
procedure `void` `execute`(`j1.a$b` v2 @kind this, `java.lang.Runnable` v3 @kind object) @signature `Lj1/a$b;.execute:(Ljava/lang/Runnable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L512bf8.  v0:= new `android.os.Handler`;
  #L512bfc.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L512c02.  v1:= temp @kind object;
  #L512c04.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L512c0a.  call temp:= `post`(v0, v3) @signature `Landroid/os/Handler;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L512c10.  return @kind void;
}
