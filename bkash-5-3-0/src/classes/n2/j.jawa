record `n2.j` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@n2.j.a` @AccessFlag PUBLIC_STATIC;
global `boolean` `@@n2.j.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ln2/j;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L53d618.  return @kind void;
}
procedure `void` `<init>`(`n2.j` v0 @kind this) @signature `Ln2/j;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L53d62c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53d632.  return @kind void;
}
procedure `java.io.File` `a`() @signature `Ln2/j;.a:()Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d134.  v0:= new `java.io.File`;
  #L53d138.  call temp:= `getExternalStorageDirectory`() @signature `Landroid/os/Environment;.getExternalStorageDirectory:()Ljava/io/File;` @kind static;
  #L53d13e.  v1:= temp @kind object;
  #L53d140.  v2:= "iapLog" @kind object;
  #L53d144.  call `<init>`(v0, v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L53d14a.  goto L53d176;
  #L53d14c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d14e.  v1:= new `java.lang.StringBuilder`;
  #L53d152.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53d158.  v2:= "getCommonExternalStorageDir: " @kind object;
  #L53d15c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d162.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d168.  v0:= new `java.io.File`;
  #L53d16c.  v1:= "/sdcard/iapLog" @kind object;
  #L53d170.  call `<init>`(v0, v1) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53d176.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53d17c.  v1:= temp;
  #L53d17e.  if v1 == 0 then goto L53d19c;
  #L53d182.  call temp:= `isFile`(v0) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L53d188.  v1:= temp;
  #L53d18a.  if v1 == 0 then goto L53d1a2;
  #L53d18e.  call `h`(v0) @signature `Ln2/g;.h:(Ljava/io/File;)V` @kind static;
  #L53d194.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L53d19a.  goto L53d1a2;
  #L53d19c.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L53d1a2.  return v0 @kind object;
  catch `java.lang.Throwable` @[L53d134..L53d14a] goto L53d14c;
  catch `java.lang.Throwable` @[L53d176..L53d1a2] goto L53d1a2;
}
procedure `java.io.File` `b`(`android.content.Context` v3 @kind object, `java.lang.String` v4 @kind object) @signature `Ln2/j;.b:(Landroid/content/Context;Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d1cc.  v0:= `@@n2.j.b` @type ^`boolean` @kind boolean;
  #L53d1d0.  if v0 == 0 then goto L53d206;
  #L53d1d4.  call temp:= `f`() @signature `Ln2/g;.f:()Z` @kind static;
  #L53d1da.  v0:= temp;
  #L53d1dc.  if v0 == 0 then goto L53d206;
  #L53d1e0.  call temp:= `a`() @signature `Ln2/j;.a:()Ljava/io/File;` @kind static;
  #L53d1e6.  v0:= temp @kind object;
  #L53d1e8.  v1:= new `java.io.File`;
  #L53d1ec.  call temp:= `getPackageName`(v3) @signature `Landroid/content/Context;.getPackageName:()Ljava/lang/String;` @kind virtual;
  #L53d1f2.  v2:= temp @kind object;
  #L53d1f4.  call `<init>`(v1, v0, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L53d1fa.  v0:= new `java.io.File`;
  #L53d1fe.  call `<init>`(v0, v1, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L53d204.  goto L53d208;
  #L53d206.  v0:= 0I;
  #L53d208.  if v0 != 0 then goto L53d224;
  #L53d20c.  v1:= new `java.io.File`;
  #L53d210.  call temp:= `getFilesDir`(v3) @signature `Landroid/content/Context;.getFilesDir:()Ljava/io/File;` @kind virtual;
  #L53d216.  v3:= temp @kind object;
  #L53d218.  call `<init>`(v1, v3, v4) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L53d21e.  v0:= v1 @kind object;
  #L53d220.  goto L53d224;
  #L53d222.  
  #L53d224.  if v0 == 0 then goto L53d23a;
  #L53d228.  call temp:= `exists`(v0) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53d22e.  v3:= temp;
  #L53d230.  if v3 != 0 then goto L53d23a;
  #L53d234.  call temp:= `mkdirs`(v0) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L53d23a.  return v0 @kind object;
  catch `java.lang.Throwable` @[L53d1e0..L53d204] goto L53d206;
  catch `java.lang.Throwable` @[L53d20c..L53d21e] goto L53d222;
}
procedure `java.lang.String` `c`(`java.lang.String` v3 @kind object) @signature `Ln2/j;.c:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d264.  v0:= new `java.lang.StringBuilder`;
  #L53d268.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53d26e.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L53d274.  v1:= temp @kind wide;
  #L53d276.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d27c.  v1:= "_" @kind object;
  #L53d280.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d286.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d28c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53d292.  v3:= temp @kind object;
  #L53d294.  return v3 @kind object;
}
procedure `java.lang.String` `d`(`java.lang.Throwable` v2 @kind object) @signature `Ln2/j;.d:(Ljava/lang/Throwable;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53d2a8.  call temp:= `getStackTraceString`(v2) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L53d2ae.  v2:= temp @kind object;
  #L53d2b0.  if v2 == 0 then goto L53d2c6;
  #L53d2b4.  v0:= "$$" @kind object;
  #L53d2b8.  v1:= "<2$>" @kind object;
  #L53d2bc.  call temp:= `replace`(v2, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L53d2c2.  v2:= temp @kind object;
  #L53d2c4.  return v2 @kind object;
  #L53d2c6.  v2:= 0I;
  #L53d2c8.  return v2 @kind object;
}
procedure `java.lang.StringBuilder` `e`(`java.lang.StringBuilder` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Ln2/j;.e:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53d4f8.  if v2 != 0 then goto L53d500;
  #L53d4fc.  v2:= 0I;
  #L53d4fe.  return v2 @kind object;
  #L53d500.  v0:= 44I;
  #L53d504.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d50a.  if v3 == 0 then goto L53d520;
  #L53d50e.  v1:= 32I;
  #L53d512.  call temp:= `replace`(v3, v0, v1) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d518.  v3:= temp @kind object;
  #L53d51a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d520.  return v2 @kind object;
}
procedure `java.lang.StringBuilder` `f`(`java.lang.StringBuilder` v7 @kind object, `java.util.Map` v8 @kind object) @signature `Ln2/j;.f:(Ljava/lang/StringBuilder;Ljava/util/Map;)Ljava/lang/StringBuilder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L53d534.  if v7 != 0 then goto L53d53c;
  #L53d538.  v7:= 0I;
  #L53d53a.  return v7 @kind object;
  #L53d53c.  v0:= 44I;
  #L53d540.  call temp:= `append`(v7, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d546.  if v8 == 0 then goto L53d604;
  #L53d54a.  call temp:= `size`(v8) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L53d550.  v1:= temp;
  #L53d552.  if v1 != 0 then goto L53d558;
  #L53d556.  goto L53d604;
  #L53d558.  v1:= 1I;
  #L53d55a.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L53d560.  v8:= temp @kind object;
  #L53d562.  call temp:= `iterator`(v8) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L53d568.  v8:= temp @kind object;
  #L53d56a.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L53d570.  v2:= temp;
  #L53d572.  if v2 == 0 then goto L53d604;
  #L53d576.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L53d57c.  v2:= temp @kind object;
  #L53d57e.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L53d582.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L53d588.  v3:= temp @kind object;
  #L53d58a.  v3:= (`java.lang.String`) v3 @kind object;
  #L53d58e.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L53d594.  v2:= temp @kind object;
  #L53d596.  v2:= (`java.lang.String`) v2 @kind object;
  #L53d59a.  if v2 != 0 then goto L53d5a2;
  #L53d59e.  v2:= "" @kind object;
  #L53d5a2.  if v3 == 0 then goto L53d56a;
  #L53d5a6.  call temp:= `k`(v2) @signature `Ln2/j;.k:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L53d5ac.  v2:= temp @kind object;
  #L53d5ae.  v4:= 94I;
  #L53d5b2.  if v1 == 0 then goto L53d5ba;
  #L53d5b6.  v1:= 0I;
  #L53d5b8.  goto L53d5c0;
  #L53d5ba.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d5c0.  v5:= 32I;
  #L53d5c4.  call temp:= `replace`(v3, v0, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d5ca.  v3:= temp @kind object;
  #L53d5cc.  call temp:= `replace`(v3, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d5d2.  v3:= temp @kind object;
  #L53d5d4.  v6:= 61I;
  #L53d5d8.  call temp:= `replace`(v3, v6, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d5de.  v3:= temp @kind object;
  #L53d5e0.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d5e6.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d5ec.  call temp:= `replace`(v2, v0, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d5f2.  v2:= temp @kind object;
  #L53d5f4.  call temp:= `replace`(v2, v4, v5) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L53d5fa.  v2:= temp @kind object;
  #L53d5fc.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d602.  goto L53d56a;
  #L53d604.  return v7 @kind object;
}
procedure `byte`[] `g`(`byte`[] v3 @kind object, `int` v4 , `int` v5 ) @signature `Ln2/j;.g:([BII)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d038.  v0:= new `java.io.ByteArrayOutputStream`;
  #L53d03c.  call `<init>`(v0) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L53d042.  v1:= 0I;
  #L53d044.  v2:= new `java.util.zip.GZIPOutputStream`;
  #L53d048.  call `<init>`(v2, v0) @signature `Ljava/util/zip/GZIPOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L53d04e.  call `write`(v2, v3, v4, v5) @signature `Ljava/util/zip/GZIPOutputStream;.write:([BII)V` @kind virtual;
  #L53d054.  call `finish`(v2) @signature `Ljava/util/zip/GZIPOutputStream;.finish:()V` @kind virtual;
  #L53d05a.  call temp:= `toByteArray`(v0) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L53d060.  v3:= temp @kind object;
  #L53d062.  call `close`(v2) @signature `Ljava/util/zip/GZIPOutputStream;.close:()V` @kind virtual;
  #L53d068.  call `close`(v0) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L53d06e.  return v3 @kind object;
  #L53d070.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d072.  v1:= v2 @kind object;
  #L53d074.  goto L53d078;
  #L53d076.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d078.  v4:= new `java.lang.IllegalStateException`;
  #L53d07c.  call `<init>`(v4, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53d082.  throw v4;
  #L53d084.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d086.  if v1 == 0 then goto L53d090;
  #L53d08a.  call `close`(v1) @signature `Ljava/util/zip/GZIPOutputStream;.close:()V` @kind virtual;
  #L53d090.  call `close`(v0) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L53d096.  throw v3;
  catch `java.lang.Throwable` @[L53d044..L53d04e] goto L53d076;
  catch `java.lang.Throwable` @[L53d04e..L53d062] goto L53d070;
  catch `java.lang.Throwable` @[L53d062..L53d068] goto L53d068;
  catch `java.lang.Throwable` @[L53d068..L53d06e] goto L53d06e;
  catch `java.lang.Throwable` @[L53d078..L53d084] goto L53d084;
  catch `java.lang.Throwable` @[L53d08a..L53d090] goto L53d090;
  catch `java.lang.Throwable` @[L53d090..L53d096] goto L53d096;
}
procedure `boolean` `h`() @signature `Ln2/j;.h:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L53d020.  v0:= `@@n2.j.b` @type ^`boolean` @kind boolean;
  #L53d024.  return v0;
}
procedure `byte`[] `i`(`java.lang.String` v2 @kind object) @signature `Ln2/j;.i:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53d0f0.  v0:= "UTF-8" @kind object;
  #L53d0f4.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L53d0fa.  v2:= temp @kind object;
  #L53d0fc.  v0:= 0I;
  #L53d0fe.  v1:= length @variable v2;
  #L53d100.  call temp:= `g`(v2, v0, v1) @signature `Ln2/j;.g:([BII)[B` @kind static;
  #L53d106.  v2:= temp @kind object;
  #L53d108.  return v2 @kind object;
  #L53d10a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d10c.  v0:= new `java.lang.IllegalStateException`;
  #L53d110.  call `<init>`(v0, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53d116.  throw v0;
  catch `java.lang.Throwable` @[L53d0f0..L53d0fc] goto L53d10a;
}
procedure `java.lang.String` `j`() @signature `Ln2/j;.j:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L53d2dc.  call temp:= `getDefault`() @signature `Ljava/util/TimeZone;.getDefault:()Ljava/util/TimeZone;` @kind static;
  #L53d2e2.  v0:= temp @kind object;
  #L53d2e4.  call temp:= `getInstance`(v0) @signature `Ljava/util/Calendar;.getInstance:(Ljava/util/TimeZone;)Ljava/util/Calendar;` @kind static;
  #L53d2ea.  v0:= temp @kind object;
  #L53d2ec.  v1:= new `java.lang.StringBuilder`;
  #L53d2f0.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53d2f6.  v2:= 1I;
  #L53d2f8.  call temp:= `get`(v0, v2) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d2fe.  v3:= temp;
  #L53d300.  v4:= 2I;
  #L53d302.  call temp:= `get`(v0, v4) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d308.  v4:= temp;
  #L53d30a.  v4:= v4 + v2 @kind int;
  #L53d30c.  v2:= 5I;
  #L53d30e.  call temp:= `get`(v0, v2) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d314.  v2:= temp;
  #L53d316.  v5:= 11I;
  #L53d31a.  call temp:= `get`(v0, v5) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d320.  v5:= temp;
  #L53d322.  v6:= 12I;
  #L53d326.  call temp:= `get`(v0, v6) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d32c.  v6:= temp;
  #L53d32e.  v7:= 13I;
  #L53d332.  call temp:= `get`(v0, v7) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d338.  v7:= temp;
  #L53d33a.  v8:= 14I;
  #L53d33e.  call temp:= `get`(v0, v8) @signature `Ljava/util/Calendar;.get:(I)I` @kind virtual;
  #L53d344.  v0:= temp;
  #L53d346.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d34c.  v3:= 45I;
  #L53d350.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d356.  v8:= 10I;
  #L53d35a.  v9:= 48I;
  #L53d35e.  if v4 >= v8 then goto L53d368;
  #L53d362.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d368.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d36e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d374.  if v2 >= v8 then goto L53d37e;
  #L53d378.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d37e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d384.  v2:= 32I;
  #L53d388.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d38e.  if v5 >= v8 then goto L53d398;
  #L53d392.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d398.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d39e.  v2:= 58I;
  #L53d3a2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3a8.  if v6 >= v8 then goto L53d3b2;
  #L53d3ac.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3b2.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3b8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3be.  if v7 >= v8 then goto L53d3c8;
  #L53d3c2.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3c8.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3d4.  v2:= 100I;
  #L53d3d8.  if v0 >= v2 then goto L53d3e2;
  #L53d3dc.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3e2.  if v0 >= v8 then goto L53d3ec;
  #L53d3e6.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3ec.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d3f2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53d3f8.  v0:= temp @kind object;
  #L53d3fa.  return v0 @kind object;
}
procedure `java.lang.String` `k`(`java.lang.String` v2 @kind object) @signature `Ln2/j;.k:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53d40c.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L53d412.  v0:= temp;
  #L53d414.  if v0 != 0 then goto L53d440;
  #L53d418.  v0:= "\r\n" @kind object;
  #L53d41c.  v1:= "###" @kind object;
  #L53d420.  call temp:= `replace`(v2, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L53d426.  v2:= temp @kind object;
  #L53d428.  v0:= "\n" @kind object;
  #L53d42c.  call temp:= `replace`(v2, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L53d432.  v2:= temp @kind object;
  #L53d434.  v0:= "\r" @kind object;
  #L53d438.  call temp:= `replace`(v2, v0, v1) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L53d43e.  v2:= temp @kind object;
  #L53d440.  return v2 @kind object;
}
procedure `java.lang.String` `l`() @signature `Ln2/j;.l:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d454.  call temp:= `a`() @signature `Lf2/e;.a:()Lx1/c;` @kind static;
  #L53d45a.  v0:= temp @kind object;
  #L53d45c.  call temp:= `d`(v0) @signature `Lx1/c;.d:()Landroid/content/Context;` @kind interface;
  #L53d462.  v0:= temp @kind object;
  #L53d464.  call temp:= `getResources`(v0) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L53d46a.  v0:= temp @kind object;
  #L53d46c.  call temp:= `getDisplayMetrics`(v0) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L53d472.  v0:= temp @kind object;
  #L53d474.  v1:= v0.`android.util.DisplayMetrics.widthPixels` @type ^`int`;
  #L53d478.  v0:= v0.`android.util.DisplayMetrics.heightPixels` @type ^`int`;
  #L53d47c.  v2:= new `java.lang.StringBuilder`;
  #L53d480.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53d486.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d48c.  v1:= "*" @kind object;
  #L53d490.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d496.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L53d49c.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53d4a2.  v0:= temp @kind object;
  #L53d4a4.  return v0 @kind object;
}
procedure `java.lang.String` `m`(`java.lang.String` v1 @kind object) @signature `Ln2/j;.m:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L53d4b8.  if v1 == 0 then goto L53d4e2;
  #L53d4bc.  v0:= `@@n2.j.a` @type ^`java.lang.String` @kind object;
  #L53d4c0.  call temp:= `contains`(v1, v0) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L53d4c6.  v0:= temp;
  #L53d4c8.  if v0 != 0 then goto L53d4ce;
  #L53d4cc.  goto L53d4e2;
  #L53d4ce.  v0:= `@@n2.j.a` @type ^`java.lang.String` @kind object;
  #L53d4d2.  call temp:= `split`(v1, v0) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L53d4d8.  v1:= temp @kind object;
  #L53d4da.  v0:= 0I;
  #L53d4dc.  v1:= v1[v0] @kind object;
  #L53d4e0.  return v1 @kind object;
  #L53d4e2.  v1:= 0I;
  #L53d4e4.  return v1 @kind object;
}
