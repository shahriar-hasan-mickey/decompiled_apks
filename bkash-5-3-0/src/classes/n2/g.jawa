record `n2.g` @kind class @AccessFlag PUBLIC {
}
procedure `java.lang.String` `a`(`java.io.File` v3 @kind object) @signature `Ln2/g;.a:(Ljava/io/File;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53c7c8.  v0:= 0I;
  #L53c7ca.  v1:= new `java.io.FileInputStream`;
  #L53c7ce.  call `<init>`(v1, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L53c7d4.  call temp:= `available`(v1) @signature `Ljava/io/FileInputStream;.available:()I` @kind virtual;
  #L53c7da.  v3:= temp;
  #L53c7dc.  v3:= new `byte`[v3];
  #L53c7e0.  call temp:= `read`(v1, v3) @signature `Ljava/io/FileInputStream;.read:([B)I` @kind virtual;
  #L53c7e6.  v0:= new `java.lang.String`;
  #L53c7ea.  v2:= "UTF-8" @kind object;
  #L53c7ee.  call `<init>`(v0, v3, v2) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L53c7f4.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L53c7fa.  return v0 @kind object;
  #L53c7fc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c7fe.  v0:= v1 @kind object;
  #L53c800.  goto L53c804;
  #L53c802.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c804.  v1:= new `java.io.IOException`;
  #L53c808.  call `<init>`(v1, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53c80e.  throw v1;
  #L53c810.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c812.  if v0 == 0 then goto L53c81c;
  #L53c816.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L53c81c.  throw v3;
  catch `java.lang.Throwable` @[L53c7ca..L53c7d4] goto L53c802;
  catch `java.lang.Throwable` @[L53c7d4..L53c7f4] goto L53c7fc;
  catch `java.lang.Throwable` @[L53c7f4..L53c7fa] goto L53c7fa;
  catch `java.lang.Throwable` @[L53c804..L53c810] goto L53c810;
  catch `java.lang.Throwable` @[L53c816..L53c81c] goto L53c81c;
}
procedure `void` `b`(`java.io.Closeable` v2 @kind object) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53c908.  if v2 == 0 then goto L53c930;
  #L53c90c.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L53c912.  goto L53c930;
  #L53c914.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L53c916.  call temp:= `f`() @signature `Lf2/e;.f:()Lj2/b;` @kind static;
  #L53c91c.  v0:= temp @kind object;
  #L53c91e.  call temp:= `getMessage`(v2) @signature `Ljava/io/IOException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L53c924.  v2:= temp @kind object;
  #L53c926.  v1:= "FileUtil" @kind object;
  #L53c92a.  call `a`(v0, v1, v2) @signature `Lj2/b;.a:(Ljava/lang/String;Ljava/lang/String;)V` @kind interface;
  #L53c930.  return @kind void;
  catch `java.io.IOException` @[L53c90c..L53c912] goto L53c914;
}
procedure `void` `c`(`java.io.File` v1 @kind object, `java.io.File` v2 @kind object) @signature `Ln2/g;.c:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L53c9fc.  call temp:= `renameTo`(v1, v2) @signature `Ljava/io/File;.renameTo:(Ljava/io/File;)Z` @kind virtual;
  #L53ca02.  v0:= temp;
  #L53ca04.  if v0 != 0 then goto L53ca14;
  #L53ca08.  call `i`(v1, v2) @signature `Ln2/g;.i:(Ljava/io/File;Ljava/io/File;)V` @kind static;
  #L53ca0e.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L53ca14.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53ca1a.  v1:= temp;
  #L53ca1c.  if v1 != 0 then goto L53ca2e;
  #L53ca20.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53ca26.  v1:= temp;
  #L53ca28.  if v1 == 0 then goto L53ca2e;
  #L53ca2c.  return @kind void;
  #L53ca2e.  v1:= new `java.lang.Exception`;
  #L53ca32.  v2:= "move file fail" @kind object;
  #L53ca36.  call `<init>`(v1, v2) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53ca3c.  throw v1;
  #L53ca3e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53ca40.  v2:= new `java.io.IOException`;
  #L53ca44.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53ca4a.  throw v2;
  catch `java.lang.Throwable` @[L53c9fc..L53ca3e] goto L53ca3e;
}
procedure `void` `d`(`java.io.File` v1 @kind object, `java.lang.String` v2 @kind object, `boolean` v3 ) @signature `Ln2/g;.d:(Ljava/io/File;Ljava/lang/String;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L53ca68.  v0:= "UTF-8" @kind object;
  #L53ca6c.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L53ca72.  v2:= temp @kind object;
  #L53ca74.  call `e`(v1, v2, v3) @signature `Ln2/g;.e:(Ljava/io/File;[BZ)V` @kind static;
  #L53ca7a.  return @kind void;
  #L53ca7c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53ca7e.  v2:= new `java.io.IOException`;
  #L53ca82.  call `<init>`(v2, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53ca88.  throw v2;
  catch `java.lang.Throwable` @[L53ca68..L53ca74] goto L53ca7c;
}
procedure `void` `e`(`java.io.File` v2 @kind object, `byte`[] v3 @kind object, `boolean` v4 ) @signature `Ln2/g;.e:(Ljava/io/File;[BZ)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53c954.  v0:= 0I;
  #L53c956.  call temp:= `getParentFile`(v2) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L53c95c.  v1:= temp @kind object;
  #L53c95e.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53c964.  v1:= temp;
  #L53c966.  if v1 != 0 then goto L53c978;
  #L53c96a.  call temp:= `getParentFile`(v2) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L53c970.  v1:= temp @kind object;
  #L53c972.  call temp:= `mkdirs`(v1) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L53c978.  v1:= new `java.io.FileOutputStream`;
  #L53c97c.  call `<init>`(v1, v2, v4) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L53c982.  call `write`(v1, v3) @signature `Ljava/io/OutputStream;.write:([B)V` @kind virtual;
  #L53c988.  call `flush`(v1) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L53c98e.  call `close`(v1) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L53c994.  return @kind void;
  #L53c996.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c998.  v0:= v1 @kind object;
  #L53c99a.  goto L53c99e;
  #L53c99c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c99e.  v3:= new `java.io.IOException`;
  #L53c9a2.  call `<init>`(v3, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53c9a8.  throw v3;
  #L53c9aa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c9ac.  if v0 == 0 then goto L53c9b6;
  #L53c9b0.  call `close`(v0) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L53c9b6.  throw v2;
  catch `java.lang.Throwable` @[L53c956..L53c982] goto L53c99c;
  catch `java.lang.Throwable` @[L53c982..L53c98e] goto L53c996;
  catch `java.lang.Throwable` @[L53c98e..L53c994] goto L53c994;
  catch `java.lang.Throwable` @[L53c99e..L53c9aa] goto L53c9aa;
  catch `java.lang.Throwable` @[L53c9b0..L53c9b6] goto L53c9b6;
}
procedure `boolean` `f`() @signature `Ln2/g;.f:()Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53c698.  v0:= "mounted" @kind object;
  #L53c69c.  call temp:= `getExternalStorageState`() @signature `Landroid/os/Environment;.getExternalStorageState:()Ljava/lang/String;` @kind static;
  #L53c6a2.  v1:= temp @kind object;
  #L53c6a4.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L53c6aa.  v0:= temp;
  #L53c6ac.  return v0;
  #L53c6ae.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53c6b0.  v1:= new `java.lang.StringBuilder`;
  #L53c6b4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53c6ba.  v2:= "isCanUseSdCard: " @kind object;
  #L53c6be.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53c6c4.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53c6ca.  v0:= 0I;
  #L53c6cc.  return v0;
  catch `java.lang.Throwable` @[L53c698..L53c6ac] goto L53c6ae;
}
procedure `boolean` `g`(`byte`[] v4 @kind object, `byte`[] v5 @kind object, `java.io.File` v6 @kind object) @signature `Ln2/g;.g:([B[BLjava/io/File;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L53c6ec.  v0:= 0I;
  #L53c6ee.  call temp:= `getParentFile`(v6) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L53c6f4.  v1:= temp @kind object;
  #L53c6f6.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53c6fc.  v1:= temp;
  #L53c6fe.  if v1 != 0 then goto L53c710;
  #L53c702.  call temp:= `getParentFile`(v6) @signature `Ljava/io/File;.getParentFile:()Ljava/io/File;` @kind virtual;
  #L53c708.  v1:= temp @kind object;
  #L53c70a.  call temp:= `mkdirs`(v1) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L53c710.  v1:= new `java.io.FileOutputStream`;
  #L53c714.  v2:= 1I;
  #L53c716.  call `<init>`(v1, v6, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L53c71c.  v6:= new `java.io.BufferedOutputStream`;
  #L53c720.  call `<init>`(v6, v1) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L53c726.  v3:= new `java.io.DataOutputStream`;
  #L53c72a.  call `<init>`(v3, v6) @signature `Ljava/io/DataOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L53c730.  v0:= length @variable v4;
  #L53c732.  call `writeInt`(v3, v0) @signature `Ljava/io/DataOutputStream;.writeInt:(I)V` @kind virtual;
  #L53c738.  v0:= length @variable v5;
  #L53c73a.  v0:= (`short`) v0 @kind i2s;
  #L53c73c.  call `writeShort`(v3, v0) @signature `Ljava/io/DataOutputStream;.writeShort:(I)V` @kind virtual;
  #L53c742.  call `write`(v3, v5) @signature `Ljava/io/DataOutputStream;.write:([B)V` @kind virtual;
  #L53c748.  call `write`(v3, v4) @signature `Ljava/io/DataOutputStream;.write:([B)V` @kind virtual;
  #L53c74e.  call `flush`(v3) @signature `Ljava/io/DataOutputStream;.flush:()V` @kind virtual;
  #L53c754.  call `b`(v3) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c75a.  call `b`(v6) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c760.  call `b`(v1) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c766.  return v2;
  #L53c768.  v0:= v3 @kind object;
  #L53c76a.  goto L53c774;
  #L53c76c.  v6:= v0 @kind object;
  #L53c76e.  goto L53c774;
  #L53c770.  v6:= v0 @kind object;
  #L53c772.  v1:= v6 @kind object;
  #L53c774.  v4:= 0I;
  #L53c776.  call `b`(v0) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c77c.  call `b`(v6) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c782.  call `b`(v1) @signature `Ln2/g;.b:(Ljava/io/Closeable;)V` @kind static;
  #L53c788.  return v4;
  catch `java.lang.Throwable` @[L53c6ee..L53c71c] goto L53c770;
  catch `java.lang.Throwable` @[L53c71c..L53c726] goto L53c76c;
  catch `java.lang.Throwable` @[L53c726..L53c730] goto L53c774;
  catch `java.lang.Throwable` @[L53c730..L53c754] goto L53c768;
}
procedure `void` `h`(`java.io.File` v2 @kind object) @signature `Ln2/g;.h:(Ljava/io/File;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L53caa8.  if v2 != 0 then goto L53caae;
  #L53caac.  return @kind void;
  #L53caae.  call temp:= `exists`(v2) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53cab4.  v0:= temp;
  #L53cab6.  if v0 == 0 then goto L53caf0;
  #L53caba.  call temp:= `isFile`(v2) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L53cac0.  v0:= temp;
  #L53cac2.  if v0 == 0 then goto L53caf0;
  #L53cac6.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L53cacc.  goto L53caf0;
  #L53cace.  v0:= new `java.lang.StringBuilder`;
  #L53cad2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53cad8.  v1:= "deleteFileNotDir: " @kind object;
  #L53cadc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53cae2.  call temp:= `getAbsolutePath`(v2) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L53cae8.  v2:= temp @kind object;
  #L53caea.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53caf0.  return @kind void;
  catch `java.lang.Throwable` @[L53caae..L53cacc] goto L53cace;
}
procedure `void` `i`(`java.io.File` v10 @kind object, `java.io.File` v11 @kind object) @signature `Ln2/g;.i:(Ljava/io/File;Ljava/io/File;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L53cb10.  v0:= 0I;
  #L53cb12.  v1:= new `java.io.FileInputStream`;
  #L53cb16.  call `<init>`(v1, v10) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L53cb1c.  call temp:= `getChannel`(v1) @signature `Ljava/io/FileInputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L53cb22.  v10:= temp @kind object;
  #L53cb24.  v8:= new `java.io.FileOutputStream`;
  #L53cb28.  call `<init>`(v8, v11) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L53cb2e.  call temp:= `getChannel`(v8) @signature `Ljava/io/FileOutputStream;.getChannel:()Ljava/nio/channels/FileChannel;` @kind virtual;
  #L53cb34.  v0:= temp @kind object;
  #L53cb36.  v3:= 0L;
  #L53cb3a.  call temp:= `size`(v10) @signature `Ljava/nio/channels/FileChannel;.size:()J` @kind virtual;
  #L53cb40.  v5:= temp @kind wide;
  #L53cb42.  v2:= v10 @kind object;
  #L53cb44.  v7:= v0 @kind object;
  #L53cb46.  call temp:= `transferTo`(v2, v3, v5, v7) @signature `Ljava/nio/channels/FileChannel;.transferTo:(JJLjava/nio/channels/WritableByteChannel;)J` @kind virtual;
  #L53cb4c.  call temp:= `exists`(v11) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53cb52.  v11:= temp;
  #L53cb54.  if v11 == 0 then goto L53cb7a;
  #L53cb58.  call `close`(v1) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L53cb5e.  call `close`(v10) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53cb64.  call `close`(v8) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L53cb6a.  goto L53cb6e;
  #L53cb6c.  
  #L53cb6e.  if v0 == 0 then goto L53cb78;
  #L53cb72.  call `close`(v0) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53cb78.  return @kind void;
  #L53cb7a.  v11:= new `java.lang.RuntimeException`;
  #L53cb7e.  v2:= "copy file fail" @kind object;
  #L53cb82.  call `<init>`(v11, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L53cb88.  throw v11;
  #L53cb8a.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53cb8c.  v9:= v1 @kind object;
  #L53cb8e.  v1:= v0 @kind object;
  #L53cb90.  v0:= v9 @kind object;
  #L53cb92.  goto L53cbae;
  #L53cb94.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53cb96.  v8:= v0 @kind object;
  #L53cb98.  goto L53cba0;
  #L53cb9a.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53cb9c.  v10:= v0 @kind object;
  #L53cb9e.  v8:= v10 @kind object;
  #L53cba0.  v0:= v1 @kind object;
  #L53cba2.  v1:= v8 @kind object;
  #L53cba4.  goto L53cbae;
  #L53cba6.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53cba8.  v10:= v0 @kind object;
  #L53cbaa.  v1:= v10 @kind object;
  #L53cbac.  v8:= v1 @kind object;
  #L53cbae.  v2:= new `java.io.IOException`;
  #L53cbb2.  call `<init>`(v2, v11) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L53cbb8.  throw v2;
  #L53cbba.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53cbbc.  if v0 == 0 then goto L53cbca;
  #L53cbc0.  call `close`(v0) @signature `Ljava/io/FileInputStream;.close:()V` @kind virtual;
  #L53cbc6.  goto L53cbca;
  #L53cbc8.  
  #L53cbca.  if v10 == 0 then goto L53cbd8;
  #L53cbce.  call `close`(v10) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53cbd4.  goto L53cbd8;
  #L53cbd6.  
  #L53cbd8.  if v8 == 0 then goto L53cbe6;
  #L53cbdc.  call `close`(v8) @signature `Ljava/io/FileOutputStream;.close:()V` @kind virtual;
  #L53cbe2.  goto L53cbe6;
  #L53cbe4.  
  #L53cbe6.  if v1 == 0 then goto L53cbf0;
  #L53cbea.  call `close`(v1) @signature `Ljava/nio/channels/FileChannel;.close:()V` @kind virtual;
  #L53cbf0.  throw v11;
  catch `java.lang.Throwable` @[L53cb12..L53cb1c] goto L53cba6;
  catch `java.lang.Throwable` @[L53cb1c..L53cb24] goto L53cb9a;
  catch `java.lang.Throwable` @[L53cb24..L53cb2e] goto L53cb94;
  catch `java.lang.Throwable` @[L53cb2e..L53cb54] goto L53cb8a;
  catch `java.lang.Throwable` @[L53cb58..L53cb5e] goto L53cb5e;
  catch `java.lang.Throwable` @[L53cb5e..L53cb64] goto L53cb64;
  catch `java.lang.Throwable` @[L53cb64..L53cb6a] goto L53cb6c;
  catch `java.lang.Throwable` @[L53cb72..L53cb78] goto L53cb78;
  catch `java.lang.Throwable` @[L53cb7a..L53cb8a] goto L53cb8a;
  catch `java.lang.Throwable` @[L53cbae..L53cbba] goto L53cbba;
  catch `java.lang.Throwable` @[L53cbc0..L53cbc6] goto L53cbc8;
  catch `java.lang.Throwable` @[L53cbce..L53cbd4] goto L53cbd6;
  catch `java.lang.Throwable` @[L53cbdc..L53cbe2] goto L53cbe4;
  catch `java.lang.Throwable` @[L53cbea..L53cbf0] goto L53cbf0;
}
procedure `long` `j`(`java.io.File` v9 @kind object) @signature `Ln2/g;.j:(Ljava/io/File;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L53c864.  v0:= 0L;
  #L53c868.  if v9 == 0 then goto L53c8ea;
  #L53c86c.  call temp:= `exists`(v9) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53c872.  v2:= temp;
  #L53c874.  if v2 == 0 then goto L53c8ea;
  #L53c878.  call temp:= `isDirectory`(v9) @signature `Ljava/io/File;.isDirectory:()Z` @kind virtual;
  #L53c87e.  v2:= temp;
  #L53c880.  if v2 != 0 then goto L53c886;
  #L53c884.  goto L53c8ea;
  #L53c886.  call temp:= `listFiles`(v9) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L53c88c.  v2:= temp @kind object;
  #L53c88e.  if v2 == 0 then goto L53c8e2;
  #L53c892.  v3:= length @variable v2;
  #L53c894.  if v3 != 0 then goto L53c89a;
  #L53c898.  goto L53c8e2;
  #L53c89a.  v3:= length @variable v2;
  #L53c89c.  v4:= 0I;
  #L53c89e.  v5:= v0 @kind wide;
  #L53c8a0.  if v4 >= v3 then goto L53c8e0;
  #L53c8a4.  v7:= v2[v4] @kind object;
  #L53c8a8.  if v7 == 0 then goto L53c8da;
  #L53c8ac.  call temp:= `exists`(v7) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L53c8b2.  v8:= temp;
  #L53c8b4.  if v8 != 0 then goto L53c8ba;
  #L53c8b8.  goto L53c8da;
  #L53c8ba.  call temp:= `isFile`(v7) @signature `Ljava/io/File;.isFile:()Z` @kind virtual;
  #L53c8c0.  v8:= temp;
  #L53c8c2.  if v8 == 0 then goto L53c8d0;
  #L53c8c6.  call temp:= `length`(v7) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L53c8cc.  v7:= temp @kind wide;
  #L53c8ce.  goto L53c8d8;
  #L53c8d0.  call temp:= `j`(v7) @signature `Ln2/g;.j:(Ljava/io/File;)J` @kind static;
  #L53c8d6.  v7:= temp @kind wide;
  #L53c8d8.  v5:= v5 + v7 @kind long;
  #L53c8da.  v4:= v4 + 1;
  #L53c8de.  goto L53c8a0;
  #L53c8e0.  return v5 @kind wide;
  #L53c8e2.  return v0 @kind wide;
  #L53c8e4.  call temp:= `getAbsolutePath`(v9) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L53c8ea.  return v0 @kind wide;
  catch `java.lang.Throwable` @[L53c886..L53c8d8] goto L53c8e4;
}
