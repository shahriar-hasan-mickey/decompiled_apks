record `n2.e` @kind class @AccessFlag FINAL extends `java.io.FileFilter` @kind interface {
}
procedure `void` `<init>`(`n2.e` v0 @kind this) @signature `Ln2/e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L53c5f8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53c5fe.  return @kind void;
}
procedure `boolean` `accept`(`n2.e` v3 @kind this, `java.io.File` v4 @kind object) @signature `Ln2/e;.accept:(Ljava/io/File;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L53c59c.  call temp:= `getName`(v4) @signature `Ljava/io/File;.getName:()Ljava/lang/String;` @kind virtual;
  #L53c5a2.  v4:= temp @kind object;
  #L53c5a4.  v0:= "cpu" @kind object;
  #L53c5a8.  call temp:= `startsWith`(v4, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L53c5ae.  v0:= temp;
  #L53c5b0.  v1:= 0I;
  #L53c5b2.  if v0 == 0 then goto L53c5e4;
  #L53c5b6.  v0:= 3I;
  #L53c5b8.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L53c5be.  v2:= temp;
  #L53c5c0.  if v0 >= v2 then goto L53c5e0;
  #L53c5c4.  call temp:= `charAt`(v4, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L53c5ca.  v2:= temp;
  #L53c5cc.  call temp:= `isDigit`(v2) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L53c5d2.  v2:= temp;
  #L53c5d4.  if v2 != 0 then goto L53c5da;
  #L53c5d8.  return v1;
  #L53c5da.  v0:= v0 + 1;
  #L53c5de.  goto L53c5b8;
  #L53c5e0.  v4:= 1I;
  #L53c5e2.  return v4;
  #L53c5e4.  return v1;
}
