record `n2.p` @kind class @AccessFlag PUBLIC {
}
global `java.lang.String` `@@n2.p.a` @AccessFlag PUBLIC_STATIC;
global `int` `@@n2.p.b` @AccessFlag PRIVATE_STATIC;
global `java.lang.String` `@@n2.p.c` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Ln2/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L53dab0.  return @kind void;
}
procedure `java.lang.String` `a`() @signature `Ln2/p;.a:()Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L53d9f4.  v0:= new `java.lang.StringBuilder`;
  #L53d9f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L53d9fe.  v1:= "20000000" @kind object;
  #L53da02.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53da08.  call temp:= `c`() @signature `Ln2/p;.c:()J` @kind static;
  #L53da0e.  v1:= temp @kind wide;
  #L53da10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L53da16.  call temp:= `b`() @signature `Ln2/p;.b:()Ljava/lang/String;` @kind static;
  #L53da1c.  v1:= temp @kind object;
  #L53da1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L53da24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L53da2a.  v0:= temp @kind object;
  #L53da2c.  `@@n2.p.c` @type ^`java.lang.String` := v0 @kind object;
  #L53da30.  return v0 @kind object;
}
procedure `java.lang.String` `b`() @signature `Ln2/p;.b:()Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L53da44.  v0:= `@@n2.p.b` @type ^`int`;
  #L53da48.  v1:= 1I;
  #L53da4a.  v2:= 10000I;
  #L53da4e.  if v0 != v2 then goto L53da56;
  #L53da52.  `@@n2.p.b` @type ^`int` := v1;
  #L53da56.  v0:= new `java.lang.Object`[v1];
  #L53da5a.  v1:= 0I;
  #L53da5c.  v2:= `@@n2.p.b` @type ^`int`;
  #L53da60.  v3:= v2 + 1;
  #L53da64.  `@@n2.p.b` @type ^`int` := v3;
  #L53da68.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L53da6e.  v2:= temp @kind object;
  #L53da70.  v0[v1]:= v2 @kind object;
  #L53da74.  v1:= "%04d" @kind object;
  #L53da78.  call temp:= `format`(v1, v0) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L53da7e.  v0:= temp @kind object;
  #L53da80.  return v0 @kind object;
}
procedure `long` `c`() @signature `Ln2/p;.c:()J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L53da94.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L53da9a.  v0:= temp @kind wide;
  #L53da9c.  return v0 @kind wide;
}
