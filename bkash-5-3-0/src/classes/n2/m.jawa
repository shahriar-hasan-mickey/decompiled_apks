record `n2.m` @kind class @AccessFlag PUBLIC {
}
global `javax.crypto.Cipher` `@@n2.m.a` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`n2.m` v0 @kind this) @signature `Ln2/m;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L53d97c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L53d982.  return @kind void;
}
procedure `java.security.PublicKey` `a`(`java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Ln2/m;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/PublicKey;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L53d948.  call temp:= `c`(v2) @signature `Ln2/b;.c:(Ljava/lang/String;)[B` @kind static;
  #L53d94e.  v2:= temp @kind object;
  #L53d950.  v0:= new `java.security.spec.X509EncodedKeySpec`;
  #L53d954.  call `<init>`(v0, v2) @signature `Ljava/security/spec/X509EncodedKeySpec;.<init>:([B)V` @kind direct;
  #L53d95a.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyFactory;.getInstance:(Ljava/lang/String;)Ljava/security/KeyFactory;` @kind static;
  #L53d960.  v1:= temp @kind object;
  #L53d962.  call temp:= `generatePublic`(v1, v0) @signature `Ljava/security/KeyFactory;.generatePublic:(Ljava/security/spec/KeySpec;)Ljava/security/PublicKey;` @kind virtual;
  #L53d968.  v1:= temp @kind object;
  #L53d96a.  return v1 @kind object;
}
procedure `byte`[] `b`(`byte`[] v6 @kind object, `java.lang.String` v7 @kind object) @signature `Ln2/m;.b:([BLjava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L53d83c.  v0:= constclass @type ^`n2.m` @kind object;
  #L53d840.  @monitorenter v0
  #L53d842.  v1:= 0I;
  #L53d844.  v2:= `@@n2.m.a` @type ^`javax.crypto.Cipher` @kind object;
  #L53d848.  if v2 != 0 then goto L53d870;
  #L53d84c.  v2:= "RSA" @kind object;
  #L53d850.  call temp:= `a`(v2, v7) @signature `Ln2/m;.a:(Ljava/lang/String;Ljava/lang/String;)Ljava/security/PublicKey;` @kind static;
  #L53d856.  v7:= temp @kind object;
  #L53d858.  v2:= "RSA/ECB/PKCS1Padding" @kind object;
  #L53d85c.  call temp:= `getInstance`(v2) @signature `Ljavax/crypto/Cipher;.getInstance:(Ljava/lang/String;)Ljavax/crypto/Cipher;` @kind static;
  #L53d862.  v2:= temp @kind object;
  #L53d864.  `@@n2.m.a` @type ^`javax.crypto.Cipher` := v2 @kind object;
  #L53d868.  v3:= 1I;
  #L53d86a.  call `init`(v2, v3, v7) @signature `Ljavax/crypto/Cipher;.init:(ILjava/security/Key;)V` @kind virtual;
  #L53d870.  v7:= new `java.io.ByteArrayOutputStream`;
  #L53d874.  call `<init>`(v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L53d87a.  v2:= 0I;
  #L53d87c.  v3:= length @variable v6;
  #L53d87e.  if v2 >= v3 then goto L53d8ac;
  #L53d882.  v3:= `@@n2.m.a` @type ^`javax.crypto.Cipher` @kind object;
  #L53d886.  v4:= length @variable v6;
  #L53d888.  v4:= v4 - v2 @kind int;
  #L53d88a.  v5:= 117I;
  #L53d88e.  if v4 >= v5 then goto L53d898;
  #L53d892.  v4:= length @variable v6;
  #L53d894.  v5:= v4 - v2 @kind int;
  #L53d898.  call temp:= `doFinal`(v3, v6, v2, v5) @signature `Ljavax/crypto/Cipher;.doFinal:([BII)[B` @kind virtual;
  #L53d89e.  v3:= temp @kind object;
  #L53d8a0.  call `write`(v7, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:([B)V` @kind virtual;
  #L53d8a6.  v2:= v2 + 117;
  #L53d8aa.  goto L53d87c;
  #L53d8ac.  call `flush`(v7) @signature `Ljava/io/ByteArrayOutputStream;.flush:()V` @kind virtual;
  #L53d8b2.  call temp:= `toByteArray`(v7) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L53d8b8.  v1:= temp @kind object;
  #L53d8ba.  call `close`(v7) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L53d8c0.  goto L53d8d2;
  #L53d8c2.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d8c4.  goto L53d8da;
  #L53d8c6.  v7:= v1 @kind object;
  #L53d8c8.  `@@n2.m.a` @type ^`javax.crypto.Cipher` := v1 @kind object;
  #L53d8cc.  if v7 == 0 then goto L53d8d2;
  #L53d8d0.  goto L53d8ba;
  #L53d8d2.  @monitorexit v0
  #L53d8d4.  return v1 @kind object;
  #L53d8d6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d8d8.  v1:= v7 @kind object;
  #L53d8da.  if v1 == 0 then goto L53d8e4;
  #L53d8de.  call `close`(v1) @signature `Ljava/io/ByteArrayOutputStream;.close:()V` @kind virtual;
  #L53d8e4.  throw v6;
  #L53d8e6.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L53d8e8.  @monitorexit v0
  #L53d8ea.  throw v6;
  catch `java.lang.Exception` @[L53d844..L53d87a] goto L53d8c6;
  catch `java.lang.Throwable` @[L53d844..L53d87a] goto L53d8c2;
  catch `java.lang.Exception` @[L53d87c..L53d8ba] goto L53d8c8;
  catch `java.lang.Throwable` @[L53d87c..L53d8ba] goto L53d8d6;
  catch `java.io.IOException` @[L53d8ba..L53d8c0] goto L53d8d2;
  catch `java.lang.Throwable` @[L53d8ba..L53d8c0] goto L53d8e6;
  catch `java.lang.Throwable` @[L53d8c8..L53d8cc] goto L53d8d6;
  catch `java.io.IOException` @[L53d8de..L53d8e4] goto L53d8e4;
  catch `java.lang.Throwable` @[L53d8de..L53d8e4] goto L53d8e6;
  catch `java.lang.Throwable` @[L53d8e4..L53d8e6] goto L53d8e6;
}
