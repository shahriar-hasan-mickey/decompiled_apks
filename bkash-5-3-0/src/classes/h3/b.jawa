record `h3.b` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@h3.b.a` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lh3/b;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L50bd54.  v0:= constclass @type ^`h3.b` @kind object;
  #L50bd58.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L50bd5e.  v0:= temp @kind object;
  #L50bd60.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L50bd66.  v0:= temp @kind object;
  #L50bd68.  `@@h3.b.a` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L50bd6c.  return @kind void;
}
procedure `void` `<init>`(`h3.b` v0 @kind this) @signature `Lh3/b;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L50bd80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L50bd86.  return @kind void;
}
procedure `void` `a`(`java.io.Closeable` v2 @kind object, `boolean` v3 ) @signature `Lh3/b;.a:(Ljava/io/Closeable;Z)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L50bd98.  if v2 != 0 then goto L50bd9e;
  #L50bd9c.  return @kind void;
  #L50bd9e.  call `close`(v2) @signature `Ljava/io/Closeable;.close:()V` @kind interface;
  #L50bda4.  goto L50bdbe;
  #L50bda6.  v2:= Exception @type ^`java.io.IOException` @kind object;
  #L50bda8.  if v3 == 0 then goto L50bdc0;
  #L50bdac.  v3:= `@@h3.b.a` @type ^`java.util.logging.Logger` @kind object;
  #L50bdb0.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L50bdb4.  v1:= "IOException thrown while closing Closeable." @kind object;
  #L50bdb8.  call `log`(v3, v0, v1, v2) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L50bdbe.  return @kind void;
  #L50bdc0.  throw v2;
  catch `java.io.IOException` @[L50bd9e..L50bda4] goto L50bda6;
}
procedure `void` `b`(`java.io.InputStream` v1 @kind object) @signature `Lh3/b;.b:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50bde4.  v0:= 1I;
  #L50bde6.  call `a`(v1, v0) @signature `Lh3/b;.a:(Ljava/io/Closeable;Z)V` @kind static;
  #L50bdec.  return @kind void;
  #L50bdee.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L50bdf0.  v0:= new `java.lang.AssertionError`;
  #L50bdf4.  call `<init>`(v0, v1) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L50bdfa.  throw v0;
  catch `java.io.IOException` @[L50bde6..L50bdec] goto L50bdee;
}
