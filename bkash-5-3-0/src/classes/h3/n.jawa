record `h3.n` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `java.lang.RuntimeException` `a`(`java.lang.Throwable` v1 @kind object) @signature `Lh3/n;.a:(Ljava/lang/Throwable;)Ljava/lang/RuntimeException;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50c898.  call temp:= `g`(v1) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50c89e.  v0:= temp @kind object;
  #L50c8a0.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L50c8a4.  call `c`(v0) @signature `Lh3/n;.c:(Ljava/lang/Throwable;)V` @kind static;
  #L50c8aa.  v0:= new `java.lang.RuntimeException`;
  #L50c8ae.  call `<init>`(v0, v1) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L50c8b4.  throw v0;
}
procedure `void` `b`(`java.lang.Throwable` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lh3/n;.b:(Ljava/lang/Throwable;Ljava/lang/Class;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50c8c8.  if v1 == 0 then goto L50c8e8;
  #L50c8cc.  call temp:= `isInstance`(v2, v1) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L50c8d2.  v0:= temp;
  #L50c8d4.  if v0 != 0 then goto L50c8da;
  #L50c8d8.  goto L50c8e8;
  #L50c8da.  call temp:= `cast`(v2, v1) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L50c8e0.  v1:= temp @kind object;
  #L50c8e2.  v1:= (`java.lang.Throwable`) v1 @kind object;
  #L50c8e6.  throw v1;
  #L50c8e8.  return @kind void;
}
procedure `void` `c`(`java.lang.Throwable` v1 @kind object) @signature `Lh3/n;.c:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50c8fc.  v0:= constclass @type ^`java.lang.Error` @kind object;
  #L50c900.  call `b`(v1, v0) @signature `Lh3/n;.b:(Ljava/lang/Throwable;Ljava/lang/Class;)V` @kind static;
  #L50c906.  v0:= constclass @type ^`java.lang.RuntimeException` @kind object;
  #L50c90a.  call `b`(v1, v0) @signature `Lh3/n;.b:(Ljava/lang/Throwable;Ljava/lang/Class;)V` @kind static;
  #L50c910.  return @kind void;
}
