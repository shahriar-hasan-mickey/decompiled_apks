record `h3.a` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `long` `a`(`java.io.InputStream` v5 @kind object, `java.io.OutputStream` v6 @kind object) @signature `Lh3/a;.a:(Ljava/io/InputStream;Ljava/io/OutputStream;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L50bd0c.  call temp:= `g`(v5) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50bd12.  call temp:= `g`(v6) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50bd18.  v0:= 4096I;
  #L50bd1c.  v0:= new `byte`[v0];
  #L50bd20.  v1:= 0L;
  #L50bd24.  call temp:= `read`(v5, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L50bd2a.  v3:= temp;
  #L50bd2c.  v4:= -1I;
  #L50bd2e.  if v3 != v4 then goto L50bd34;
  #L50bd32.  return v1 @kind wide;
  #L50bd34.  v4:= 0I;
  #L50bd36.  call `write`(v6, v0, v4, v3) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L50bd3c.  v3:= (`long`) v3 @kind i2l;
  #L50bd3e.  v1:= v1 + v3 @kind long;
  #L50bd40.  goto L50bd24;
}
procedure `int` `b`(`java.io.InputStream` v3 @kind object, `byte`[] v4 @kind object, `int` v5 , `int` v6 ) @signature `Lh3/a;.b:(Ljava/io/InputStream;[BII)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L50bcb8.  call temp:= `g`(v3) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50bcbe.  call temp:= `g`(v4) @signature `Lh3/j;.g:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L50bcc4.  if v6 < 0 then goto L50bcec;
  #L50bcc8.  v0:= 0I;
  #L50bcca.  if v0 >= v6 then goto L50bcea;
  #L50bcce.  v1:= v5 + v0 @kind int;
  #L50bcd2.  v2:= v6 - v0 @kind int;
  #L50bcd6.  call temp:= `read`(v3, v4, v1, v2) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L50bcdc.  v1:= temp;
  #L50bcde.  v2:= -1I;
  #L50bce0.  if v1 != v2 then goto L50bce6;
  #L50bce4.  goto L50bcea;
  #L50bce6.  v0:= v0 + v1 @kind int;
  #L50bce8.  goto L50bcca;
  #L50bcea.  return v0;
  #L50bcec.  v3:= new `java.lang.IndexOutOfBoundsException`;
  #L50bcf0.  v4:= "len is negative" @kind object;
  #L50bcf4.  call `<init>`(v3, v4) @signature `Ljava/lang/IndexOutOfBoundsException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L50bcfa.  throw v3;
}
