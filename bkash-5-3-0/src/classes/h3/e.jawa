record `h3.e` @kind class @AccessFlag PUBLIC extends `java.util.ArrayList` @kind class {
}
procedure `void` `<init>`(`h3.e` v0 @kind this, `int` v1 ) @signature `Lh3/e;.<init>:(I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L50bf04.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L50bf0a.  return @kind void;
}
procedure `void` `<init>`(`h3.e` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lh3/e;.<init>:(Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L50bf1c.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L50bf22.  return @kind void;
}
procedure `h3.e` `copyOf`(`java.util.List` v1 @kind object) @signature `Lh3/e;.copyOf:(Ljava/util/List;)Lh3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50bec4.  v0:= new `h3.e`;
  #L50bec8.  call `<init>`(v0, v1) @signature `Lh3/e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L50bece.  return v0 @kind object;
}
procedure `h3.e` `of`(`java.lang.Object`[] v2 @kind object) @signature `Lh3/e;.of:([Ljava/lang/Object;)Lh3/e;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L50bee0.  v0:= new `h3.e`;
  #L50bee4.  v1:= length @variable v2;
  #L50bee6.  call `<init>`(v0, v1) @signature `Lh3/e;.<init>:(I)V` @kind direct;
  #L50beec.  call temp:= `addAll`(v0, v2) @signature `Ljava/util/Collections;.addAll:(Ljava/util/Collection;[Ljava/lang/Object;)Z` @kind static;
  #L50bef2.  return v0 @kind object;
}
