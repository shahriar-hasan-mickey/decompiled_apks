record `h5.a$c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `int` `h5.a$c.mValue` @AccessFlag PRIVATE;
}
global `h5.a$c` `@@h5.a$c.BITMAP_MEMORY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h5.a$c` `@@h5.a$c.DISK_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h5.a$c` `@@h5.a$c.ENCODED_MEMORY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h5.a$c` `@@h5.a$c.FULL_FETCH` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `h5.a$c`[] `@@h5.a$c.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lh5/a$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L50cab8.  v0:= new `h5.a$c`;
  #L50cabc.  v1:= "FULL_FETCH" @kind object;
  #L50cac0.  v2:= 0I;
  #L50cac2.  v3:= 1I;
  #L50cac4.  call `<init>`(v0, v1, v2, v3) @signature `Lh5/a$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L50caca.  `@@h5.a$c.FULL_FETCH` @type ^`h5.a$c` := v0 @kind object;
  #L50cace.  v1:= new `h5.a$c`;
  #L50cad2.  v4:= "DISK_CACHE" @kind object;
  #L50cad6.  v5:= 2I;
  #L50cad8.  call `<init>`(v1, v4, v3, v5) @signature `Lh5/a$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L50cade.  `@@h5.a$c.DISK_CACHE` @type ^`h5.a$c` := v1 @kind object;
  #L50cae2.  v4:= new `h5.a$c`;
  #L50cae6.  v6:= "ENCODED_MEMORY_CACHE" @kind object;
  #L50caea.  v7:= 3I;
  #L50caec.  call `<init>`(v4, v6, v5, v7) @signature `Lh5/a$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L50caf2.  `@@h5.a$c.ENCODED_MEMORY_CACHE` @type ^`h5.a$c` := v4 @kind object;
  #L50caf6.  v6:= new `h5.a$c`;
  #L50cafa.  v8:= "BITMAP_MEMORY_CACHE" @kind object;
  #L50cafe.  v9:= 4I;
  #L50cb00.  call `<init>`(v6, v8, v7, v9) @signature `Lh5/a$c;.<init>:(Ljava/lang/String;II)V` @kind direct;
  #L50cb06.  `@@h5.a$c.BITMAP_MEMORY_CACHE` @type ^`h5.a$c` := v6 @kind object;
  #L50cb0a.  v8:= new `h5.a$c`[v9];
  #L50cb0e.  v8[v2]:= v0 @kind object;
  #L50cb12.  v8[v3]:= v1 @kind object;
  #L50cb16.  v8[v5]:= v4 @kind object;
  #L50cb1a.  v8[v7]:= v6 @kind object;
  #L50cb1e.  `@@h5.a$c.g` @type ^`h5.a$c`[] := v8 @kind object;
  #L50cb22.  return @kind void;
}
procedure `void` `<init>`(`h5.a$c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `int` v3 ) @signature `Lh5/a$c;.<init>:(Ljava/lang/String;II)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L50cb34.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L50cb3a.  v0.`h5.a$c.mValue` @type ^`int` := v3;
  #L50cb3e.  return @kind void;
}
procedure `h5.a$c` `getMax`(`h5.a$c` v2 @kind object, `h5.a$c` v3 @kind object) @signature `Lh5/a$c;.getMax:(Lh5/a$c;Lh5/a$c;)Lh5/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L50ca2c.  call temp:= `getValue`(v2) @signature `Lh5/a$c;.getValue:()I` @kind virtual;
  #L50ca32.  v0:= temp;
  #L50ca34.  call temp:= `getValue`(v3) @signature `Lh5/a$c;.getValue:()I` @kind virtual;
  #L50ca3a.  v1:= temp;
  #L50ca3c.  if v0 <= v1 then goto L50ca42;
  #L50ca40.  goto L50ca44;
  #L50ca42.  v2:= v3 @kind object;
  #L50ca44.  return v2 @kind object;
}
procedure `h5.a$c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lh5/a$c;.valueOf:(Ljava/lang/String;)Lh5/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50ca58.  v0:= constclass @type ^`h5.a$c` @kind object;
  #L50ca5c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L50ca62.  v1:= temp @kind object;
  #L50ca64.  v1:= (`h5.a$c`) v1 @kind object;
  #L50ca68.  return v1 @kind object;
}
procedure `h5.a$c`[] `values`() @signature `Lh5/a$c;.values:()[Lh5/a$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L50ca7c.  v0:= `@@h5.a$c.g` @type ^`h5.a$c`[] @kind object;
  #L50ca80.  call temp:= `clone`(v0) @signature `[Lh5/a$c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L50ca86.  v0:= temp @kind object;
  #L50ca88.  v0:= (`h5.a$c`[]) v0 @kind object;
  #L50ca8c.  return v0 @kind object;
}
procedure `int` `getValue`(`h5.a$c` v1 @kind this) @signature `Lh5/a$c;.getValue:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L50caa0.  v0:= v1.`h5.a$c.mValue` @type ^`int`;
  #L50caa4.  return v0;
}
