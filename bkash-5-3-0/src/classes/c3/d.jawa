record `c3.d` @kind class @AccessFlag PUBLIC extends `b3.b` @kind interface {
  `b3.d` `c3.d.a` @AccessFlag PRIVATE;
  `c3.d` `c3.d.b` @AccessFlag PRIVATE;
}
global `java.lang.Object` `@@c3.d.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `c3.d` `@@c3.d.d` @AccessFlag PRIVATE_STATIC;
global `int` `@@c3.d.e` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lc3/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a547c.  v0:= new `java.lang.Object`;
  #L2a5480.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a5486.  `@@c3.d.c` @type ^`java.lang.Object` := v0 @kind object;
  #L2a548a.  return @kind void;
}
procedure `void` `<init>`(`c3.d` v0 @kind this) @signature `Lc3/d;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L2a549c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a54a2.  return @kind void;
}
procedure `c3.d` `a`() @signature `Lc3/d;.a:()Lc3/d;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2a5388.  v0:= `@@c3.d.c` @type ^`java.lang.Object` @kind object;
  #L2a538c.  @monitorenter v0
  #L2a538e.  v1:= `@@c3.d.d` @type ^`c3.d` @kind object;
  #L2a5392.  if v1 == 0 then goto L2a53b4;
  #L2a5396.  v2:= v1.`c3.d.b` @type ^`c3.d` @kind object;
  #L2a539a.  `@@c3.d.d` @type ^`c3.d` := v2 @kind object;
  #L2a539e.  v2:= 0I;
  #L2a53a0.  v1.`c3.d.b` @type ^`c3.d` := v2 @kind object;
  #L2a53a4.  v2:= `@@c3.d.e` @type ^`int`;
  #L2a53a8.  v2:= v2 + -1;
  #L2a53ac.  `@@c3.d.e` @type ^`int` := v2;
  #L2a53b0.  @monitorexit v0
  #L2a53b2.  return v1 @kind object;
  #L2a53b4.  @monitorexit v0
  #L2a53b6.  v0:= new `c3.d`;
  #L2a53ba.  call `<init>`(v0) @signature `Lc3/d;.<init>:()V` @kind direct;
  #L2a53c0.  return v0 @kind object;
  #L2a53c2.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a53c4.  @monitorexit v0
  #L2a53c6.  throw v1;
  catch `java.lang.Throwable` @[L2a538e..L2a53b6] goto L2a53c2;
  catch `java.lang.Throwable` @[L2a53c4..L2a53c6] goto L2a53c2;
}
procedure `void` `c`(`c3.d` v0 @kind this) @signature `Lc3/d;.c:()V` @AccessFlag PRIVATE {
    temp;

  #L2a550c.  return @kind void;
}
procedure `void` `b`(`c3.d` v3 @kind this) @signature `Lc3/d;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a54b4.  v0:= `@@c3.d.c` @type ^`java.lang.Object` @kind object;
  #L2a54b8.  @monitorenter v0
  #L2a54ba.  v1:= `@@c3.d.e` @type ^`int`;
  #L2a54be.  v2:= 5I;
  #L2a54c0.  if v1 >= v2 then goto L2a54e6;
  #L2a54c4.  call `c`(v3) @signature `Lc3/d;.c:()V` @kind direct;
  #L2a54ca.  v1:= `@@c3.d.e` @type ^`int`;
  #L2a54ce.  v1:= v1 + 1;
  #L2a54d2.  `@@c3.d.e` @type ^`int` := v1;
  #L2a54d6.  v1:= `@@c3.d.d` @type ^`c3.d` @kind object;
  #L2a54da.  if v1 == 0 then goto L2a54e2;
  #L2a54de.  v3.`c3.d.b` @type ^`c3.d` := v1 @kind object;
  #L2a54e2.  `@@c3.d.d` @type ^`c3.d` := v3 @kind object;
  #L2a54e6.  @monitorexit v0
  #L2a54e8.  return @kind void;
  #L2a54ea.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a54ec.  @monitorexit v0
  #L2a54ee.  throw v1;
  catch `java.lang.Throwable` @[L2a54ba..L2a54ee] goto L2a54ea;
}
procedure `c3.d` `d`(`c3.d` v0 @kind this, `b3.d` v1 @kind object) @signature `Lc3/d;.d:(Lb3/d;)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a53ec.  v0.`c3.d.a` @type ^`b3.d` := v1 @kind object;
  #L2a53f0.  return v0 @kind object;
}
procedure `c3.d` `e`(`c3.d` v0 @kind this, `long` v1 ) @signature `Lc3/d;.e:(J)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a5404.  return v0 @kind object;
}
procedure `c3.d` `f`(`c3.d` v0 @kind this, `long` v1 ) @signature `Lc3/d;.f:(J)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a5418.  return v0 @kind object;
}
procedure `c3.d` `g`(`c3.d` v0 @kind this, `b3.c$a` v1 @kind object) @signature `Lc3/d;.g:(Lb3/c$a;)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a542c.  return v0 @kind object;
}
procedure `c3.d` `h`(`c3.d` v0 @kind this, `java.io.IOException` v1 @kind object) @signature `Lc3/d;.h:(Ljava/io/IOException;)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a5440.  return v0 @kind object;
}
procedure `c3.d` `i`(`c3.d` v0 @kind this, `long` v1 ) @signature `Lc3/d;.i:(J)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a5454.  return v0 @kind object;
}
procedure `c3.d` `j`(`c3.d` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lc3/d;.j:(Ljava/lang/String;)Lc3/d;` @AccessFlag PUBLIC {
    temp;

  #L2a5468.  return v0 @kind object;
}
