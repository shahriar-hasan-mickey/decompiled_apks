record `c1.d` @kind class @AccessFlag PUBLIC extends `d1.c$a` @kind interface {
  `c1.c` `c1.d.a` @AccessFlag PRIVATE_FINAL;
  `d1.c`[] `c1.d.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `c1.d.c` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@c1.d.d` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lc1/d;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2a4bb4.  v0:= "WorkConstraintsTracker" @kind object;
  #L2a4bb8.  call temp:= `f`(v0) @signature `Landroidx/work/m;.f:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L2a4bbe.  v0:= temp @kind object;
  #L2a4bc0.  `@@c1.d.d` @type ^`java.lang.String` := v0 @kind object;
  #L2a4bc4.  return @kind void;
}
procedure `void` `<init>`(`c1.d` v2 @kind this, `android.content.Context` v3 @kind object, `h1.a` v4 @kind object, `c1.c` v5 @kind object) @signature `Lc1/d;.<init>:(Landroid/content/Context;Lh1/a;Lc1/c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2a4bd8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a4bde.  call temp:= `getApplicationContext`(v3) @signature `Landroid/content/Context;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L2a4be4.  v3:= temp @kind object;
  #L2a4be6.  v2.`c1.d.a` @type ^`c1.c` := v5 @kind object;
  #L2a4bea.  v5:= 7I;
  #L2a4bec.  v5:= new `d1.c`[v5];
  #L2a4bf0.  v0:= new `d1.a`;
  #L2a4bf4.  call `<init>`(v0, v3, v4) @signature `Ld1/a;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4bfa.  v1:= 0I;
  #L2a4bfc.  v5[v1]:= v0 @kind object;
  #L2a4c00.  v0:= new `d1.b`;
  #L2a4c04.  call `<init>`(v0, v3, v4) @signature `Ld1/b;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c0a.  v1:= 1I;
  #L2a4c0c.  v5[v1]:= v0 @kind object;
  #L2a4c10.  v0:= new `d1.h`;
  #L2a4c14.  call `<init>`(v0, v3, v4) @signature `Ld1/h;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c1a.  v1:= 2I;
  #L2a4c1c.  v5[v1]:= v0 @kind object;
  #L2a4c20.  v0:= new `d1.d`;
  #L2a4c24.  call `<init>`(v0, v3, v4) @signature `Ld1/d;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c2a.  v1:= 3I;
  #L2a4c2c.  v5[v1]:= v0 @kind object;
  #L2a4c30.  v0:= new `d1.g`;
  #L2a4c34.  call `<init>`(v0, v3, v4) @signature `Ld1/g;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c3a.  v1:= 4I;
  #L2a4c3c.  v5[v1]:= v0 @kind object;
  #L2a4c40.  v0:= new `d1.f`;
  #L2a4c44.  call `<init>`(v0, v3, v4) @signature `Ld1/f;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c4a.  v1:= 5I;
  #L2a4c4c.  v5[v1]:= v0 @kind object;
  #L2a4c50.  v0:= new `d1.e`;
  #L2a4c54.  call `<init>`(v0, v3, v4) @signature `Ld1/e;.<init>:(Landroid/content/Context;Lh1/a;)V` @kind direct;
  #L2a4c5a.  v3:= 6I;
  #L2a4c5c.  v5[v3]:= v0 @kind object;
  #L2a4c60.  v2.`c1.d.b` @type ^`d1.c`[] := v5 @kind object;
  #L2a4c64.  v3:= new `java.lang.Object`;
  #L2a4c68.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2a4c6e.  v2.`c1.d.c` @type ^`java.lang.Object` := v3 @kind object;
  #L2a4c72.  return @kind void;
}
procedure `void` `a`(`c1.d` v8 @kind this, `java.util.List` v9 @kind object) @signature `Lc1/d;.a:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a4c84.  v0:= v8.`c1.d.c` @type ^`java.lang.Object` @kind object;
  #L2a4c88.  @monitorenter v0
  #L2a4c8a.  v1:= new `java.util.ArrayList`;
  #L2a4c8e.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2a4c94.  call temp:= `iterator`(v9) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2a4c9a.  v9:= temp @kind object;
  #L2a4c9c.  call temp:= `hasNext`(v9) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2a4ca2.  v2:= temp;
  #L2a4ca4.  if v2 == 0 then goto L2a4cf6;
  #L2a4ca8.  call temp:= `next`(v9) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2a4cae.  v2:= temp @kind object;
  #L2a4cb0.  v2:= (`java.lang.String`) v2 @kind object;
  #L2a4cb4.  call temp:= `c`(v8, v2) @signature `Lc1/d;.c:(Ljava/lang/String;)Z` @kind virtual;
  #L2a4cba.  v3:= temp;
  #L2a4cbc.  if v3 == 0 then goto L2a4c9c;
  #L2a4cc0.  call temp:= `c`() @signature `Landroidx/work/m;.c:()Landroidx/work/m;` @kind static;
  #L2a4cc6.  v3:= temp @kind object;
  #L2a4cc8.  v4:= `@@c1.d.d` @type ^`java.lang.String` @kind object;
  #L2a4ccc.  v5:= "Constraints met for %s" @kind object;
  #L2a4cd0.  v6:= 1I;
  #L2a4cd2.  v6:= new `java.lang.Object`[v6];
  #L2a4cd6.  v7:= 0I;
  #L2a4cd8.  v6[v7]:= v2 @kind object;
  #L2a4cdc.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2a4ce2.  v5:= temp @kind object;
  #L2a4ce4.  v6:= new `java.lang.Throwable`[v7];
  #L2a4ce8.  call `a`(v3, v4, v5, v6) @signature `Landroidx/work/m;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Throwable;)V` @kind virtual;
  #L2a4cee.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2a4cf4.  goto L2a4c9c;
  #L2a4cf6.  v9:= v8.`c1.d.a` @type ^`c1.c` @kind object;
  #L2a4cfa.  if v9 == 0 then goto L2a4d04;
  #L2a4cfe.  call `e`(v9, v1) @signature `Lc1/c;.e:(Ljava/util/List;)V` @kind interface;
  #L2a4d04.  @monitorexit v0
  #L2a4d06.  return @kind void;
  #L2a4d08.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4d0a.  @monitorexit v0
  #L2a4d0c.  throw v9;
  catch `java.lang.Throwable` @[L2a4c8a..L2a4d0c] goto L2a4d08;
}
procedure `void` `b`(`c1.d` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lc1/d;.b:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a4d2c.  v0:= v2.`c1.d.c` @type ^`java.lang.Object` @kind object;
  #L2a4d30.  @monitorenter v0
  #L2a4d32.  v1:= v2.`c1.d.a` @type ^`c1.c` @kind object;
  #L2a4d36.  if v1 == 0 then goto L2a4d40;
  #L2a4d3a.  call `b`(v1, v3) @signature `Lc1/c;.b:(Ljava/util/List;)V` @kind interface;
  #L2a4d40.  @monitorexit v0
  #L2a4d42.  return @kind void;
  #L2a4d44.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4d46.  @monitorexit v0
  #L2a4d48.  throw v3;
  catch `java.lang.Throwable` @[L2a4d32..L2a4d48] goto L2a4d44;
}
procedure `boolean` `c`(`c1.d` v8 @kind this, `java.lang.String` v9 @kind object) @signature `Lc1/d;.c:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2a4b1c.  v0:= v8.`c1.d.c` @type ^`java.lang.Object` @kind object;
  #L2a4b20.  @monitorenter v0
  #L2a4b22.  v1:= v8.`c1.d.b` @type ^`d1.c`[] @kind object;
  #L2a4b26.  v2:= length @variable v1;
  #L2a4b28.  v3:= 0I;
  #L2a4b2a.  v4:= 0I;
  #L2a4b2c.  v5:= 1I;
  #L2a4b2e.  if v4 >= v2 then goto L2a4b8c;
  #L2a4b32.  v6:= v1[v4] @kind object;
  #L2a4b36.  call temp:= `d`(v6, v9) @signature `Ld1/c;.d:(Ljava/lang/String;)Z` @kind virtual;
  #L2a4b3c.  v7:= temp;
  #L2a4b3e.  if v7 == 0 then goto L2a4b86;
  #L2a4b42.  call temp:= `c`() @signature `Landroidx/work/m;.c:()Landroidx/work/m;` @kind static;
  #L2a4b48.  v1:= temp @kind object;
  #L2a4b4a.  v2:= `@@c1.d.d` @type ^`java.lang.String` @kind object;
  #L2a4b4e.  v4:= "Work %s constrained by %s" @kind object;
  #L2a4b52.  v7:= 2I;
  #L2a4b54.  v7:= new `java.lang.Object`[v7];
  #L2a4b58.  v7[v3]:= v9 @kind object;
  #L2a4b5c.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2a4b62.  v9:= temp @kind object;
  #L2a4b64.  call temp:= `getSimpleName`(v9) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2a4b6a.  v9:= temp @kind object;
  #L2a4b6c.  v7[v5]:= v9 @kind object;
  #L2a4b70.  call temp:= `format`(v4, v7) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2a4b76.  v9:= temp @kind object;
  #L2a4b78.  v4:= new `java.lang.Throwable`[v3];
  #L2a4b7c.  call `a`(v1, v2, v9, v4) @signature `Landroidx/work/m;.a:(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/Throwable;)V` @kind virtual;
  #L2a4b82.  @monitorexit v0
  #L2a4b84.  return v3;
  #L2a4b86.  v4:= v4 + 1;
  #L2a4b8a.  goto L2a4b2c;
  #L2a4b8c.  @monitorexit v0
  #L2a4b8e.  return v5;
  #L2a4b90.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4b92.  @monitorexit v0
  #L2a4b94.  throw v9;
  catch `java.lang.Throwable` @[L2a4b22..L2a4b94] goto L2a4b90;
}
procedure `void` `d`(`c1.d` v7 @kind this, `java.lang.Iterable` v8 @kind object) @signature `Lc1/d;.d:(Ljava/lang/Iterable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2a4d68.  v0:= v7.`c1.d.c` @type ^`java.lang.Object` @kind object;
  #L2a4d6c.  @monitorenter v0
  #L2a4d6e.  v1:= v7.`c1.d.b` @type ^`d1.c`[] @kind object;
  #L2a4d72.  v2:= length @variable v1;
  #L2a4d74.  v3:= 0I;
  #L2a4d76.  v4:= 0I;
  #L2a4d78.  if v4 >= v2 then goto L2a4d8e;
  #L2a4d7c.  v5:= v1[v4] @kind object;
  #L2a4d80.  v6:= 0I;
  #L2a4d82.  call `g`(v5, v6) @signature `Ld1/c;.g:(Ld1/c$a;)V` @kind virtual;
  #L2a4d88.  v4:= v4 + 1;
  #L2a4d8c.  goto L2a4d78;
  #L2a4d8e.  v1:= v7.`c1.d.b` @type ^`d1.c`[] @kind object;
  #L2a4d92.  v2:= length @variable v1;
  #L2a4d94.  v4:= 0I;
  #L2a4d96.  if v4 >= v2 then goto L2a4daa;
  #L2a4d9a.  v5:= v1[v4] @kind object;
  #L2a4d9e.  call `e`(v5, v8) @signature `Ld1/c;.e:(Ljava/lang/Iterable;)V` @kind virtual;
  #L2a4da4.  v4:= v4 + 1;
  #L2a4da8.  goto L2a4d96;
  #L2a4daa.  v8:= v7.`c1.d.b` @type ^`d1.c`[] @kind object;
  #L2a4dae.  v1:= length @variable v8;
  #L2a4db0.  if v3 >= v1 then goto L2a4dc4;
  #L2a4db4.  v2:= v8[v3] @kind object;
  #L2a4db8.  call `g`(v2, v7) @signature `Ld1/c;.g:(Ld1/c$a;)V` @kind virtual;
  #L2a4dbe.  v3:= v3 + 1;
  #L2a4dc2.  goto L2a4db0;
  #L2a4dc4.  @monitorexit v0
  #L2a4dc6.  return @kind void;
  #L2a4dc8.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4dca.  @monitorexit v0
  #L2a4dcc.  throw v8;
  catch `java.lang.Throwable` @[L2a4d6e..L2a4dcc] goto L2a4dc8;
}
procedure `void` `e`(`c1.d` v5 @kind this) @signature `Lc1/d;.e:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2a4dec.  v0:= v5.`c1.d.c` @type ^`java.lang.Object` @kind object;
  #L2a4df0.  @monitorenter v0
  #L2a4df2.  v1:= v5.`c1.d.b` @type ^`d1.c`[] @kind object;
  #L2a4df6.  v2:= length @variable v1;
  #L2a4df8.  v3:= 0I;
  #L2a4dfa.  if v3 >= v2 then goto L2a4e0e;
  #L2a4dfe.  v4:= v1[v3] @kind object;
  #L2a4e02.  call `f`(v4) @signature `Ld1/c;.f:()V` @kind virtual;
  #L2a4e08.  v3:= v3 + 1;
  #L2a4e0c.  goto L2a4dfa;
  #L2a4e0e.  @monitorexit v0
  #L2a4e10.  return @kind void;
  #L2a4e12.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2a4e14.  @monitorexit v0
  #L2a4e16.  throw v1;
  catch `java.lang.Throwable` @[L2a4df2..L2a4e16] goto L2a4e12;
}
