record `z3.b$c` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `z3.b$c` `@@z3.b$c.BITMAP_MEMORY_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `z3.b$c` `@@z3.b$c.DISK_CACHE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `z3.b$c` `@@z3.b$c.FULL_FETCH` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `z3.b$c`[] `@@z3.b$c.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lz3/b$c;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L58148c.  v0:= new `z3.b$c`;
  #L581490.  v1:= "FULL_FETCH" @kind object;
  #L581494.  v2:= 0I;
  #L581496.  call `<init>`(v0, v1, v2) @signature `Lz3/b$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L58149c.  `@@z3.b$c.FULL_FETCH` @type ^`z3.b$c` := v0 @kind object;
  #L5814a0.  v1:= new `z3.b$c`;
  #L5814a4.  v3:= "DISK_CACHE" @kind object;
  #L5814a8.  v4:= 1I;
  #L5814aa.  call `<init>`(v1, v3, v4) @signature `Lz3/b$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5814b0.  `@@z3.b$c.DISK_CACHE` @type ^`z3.b$c` := v1 @kind object;
  #L5814b4.  v3:= new `z3.b$c`;
  #L5814b8.  v5:= "BITMAP_MEMORY_CACHE" @kind object;
  #L5814bc.  v6:= 2I;
  #L5814be.  call `<init>`(v3, v5, v6) @signature `Lz3/b$c;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5814c4.  `@@z3.b$c.BITMAP_MEMORY_CACHE` @type ^`z3.b$c` := v3 @kind object;
  #L5814c8.  v5:= 3I;
  #L5814ca.  v5:= new `z3.b$c`[v5];
  #L5814ce.  v5[v2]:= v0 @kind object;
  #L5814d2.  v5[v4]:= v1 @kind object;
  #L5814d6.  v5[v6]:= v3 @kind object;
  #L5814da.  `@@z3.b$c.g` @type ^`z3.b$c`[] := v5 @kind object;
  #L5814de.  return @kind void;
}
procedure `void` `<init>`(`z3.b$c` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lz3/b$c;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L5814f0.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L5814f6.  return @kind void;
}
procedure `z3.b$c` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lz3/b$c;.valueOf:(Ljava/lang/String;)Lz3/b$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L581508.  v0:= constclass @type ^`z3.b$c` @kind object;
  #L58150c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L581512.  v1:= temp @kind object;
  #L581514.  v1:= (`z3.b$c`) v1 @kind object;
  #L581518.  return v1 @kind object;
}
procedure `z3.b$c`[] `values`() @signature `Lz3/b$c;.values:()[Lz3/b$c;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L58152c.  v0:= `@@z3.b$c.g` @type ^`z3.b$c`[] @kind object;
  #L581530.  call temp:= `clone`(v0) @signature `[Lz3/b$c;.clone:()Ljava/lang/Object;` @kind virtual;
  #L581536.  v0:= temp @kind object;
  #L581538.  v0:= (`z3.b$c`[]) v0 @kind object;
  #L58153c.  return v0 @kind object;
}
