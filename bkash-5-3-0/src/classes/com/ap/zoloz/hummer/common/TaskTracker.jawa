record `com.ap.zoloz.hummer.common.TaskTracker` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `boolean` `com.ap.zoloz.hummer.common.TaskTracker.isLive` @AccessFlag PROTECTED;
  `com.ap.zoloz.hummer.common.HummerContext` `com.ap.zoloz.hummer.common.TaskTracker.mHummerContext` @AccessFlag PROTECTED;
  `com.ap.zoloz.hummer.common.IAlertManagerCallback` `com.ap.zoloz.hummer.common.TaskTracker.mIAlertManagerCallback` @AccessFlag PROTECTED;
  `com.ap.zoloz.hummer.common.ITaskTrackerCallback` `com.ap.zoloz.hummer.common.TaskTracker.mITaskTrackerCallback` @AccessFlag PROTECTED;
  `com.ap.zoloz.hummer.common.TaskConfig` `com.ap.zoloz.hummer.common.TaskTracker.mTaskConfig` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.ap.zoloz.hummer.common.TaskTracker` v0 @kind this) @signature `Lcom/ap/zoloz/hummer/common/TaskTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2e34a8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2e34ae.  return @kind void;
}
procedure `void` `forceQuit`() @signature `Lcom/ap/zoloz/hummer/common/TaskTracker;.forceQuit:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `release`(`com.ap.zoloz.hummer.common.TaskTracker` v2 @kind this) @signature `Lcom/ap/zoloz/hummer/common/TaskTracker;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2e34c0.  v0:= 0I;
  #L2e34c2.  v2.`com.ap.zoloz.hummer.common.TaskTracker.isLive` @type ^`boolean` := v0 @kind boolean;
  #L2e34c6.  v0:= v2.`com.ap.zoloz.hummer.common.TaskTracker.mHummerContext` @type ^`com.ap.zoloz.hummer.common.HummerContext` @kind object;
  #L2e34ca.  v1:= 0I;
  #L2e34cc.  if v0 == 0 then goto L2e34da;
  #L2e34d0.  call `release`(v0) @signature `Lcom/ap/zoloz/hummer/common/HummerContext;.release:()V` @kind virtual;
  #L2e34d6.  v2.`com.ap.zoloz.hummer.common.TaskTracker.mHummerContext` @type ^`com.ap.zoloz.hummer.common.HummerContext` := v1 @kind object;
  #L2e34da.  v2.`com.ap.zoloz.hummer.common.TaskTracker.mITaskTrackerCallback` @type ^`com.ap.zoloz.hummer.common.ITaskTrackerCallback` := v1 @kind object;
  #L2e34de.  v2.`com.ap.zoloz.hummer.common.TaskTracker.mIAlertManagerCallback` @type ^`com.ap.zoloz.hummer.common.IAlertManagerCallback` := v1 @kind object;
  #L2e34e2.  return @kind void;
}
procedure `void` `run`(`com.ap.zoloz.hummer.common.HummerContext` v0 @kind object, `com.ap.zoloz.hummer.common.TaskConfig` v1 @kind object, `com.ap.zoloz.hummer.common.ITaskTrackerCallback` v2 @kind object) @signature `Lcom/ap/zoloz/hummer/common/TaskTracker;.run:(Lcom/ap/zoloz/hummer/common/HummerContext;Lcom/ap/zoloz/hummer/common/TaskConfig;Lcom/ap/zoloz/hummer/common/ITaskTrackerCallback;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `run`(`com.ap.zoloz.hummer.common.HummerContext` v0 @kind object, `com.ap.zoloz.hummer.common.TaskConfig` v1 @kind object, `com.ap.zoloz.hummer.common.UIConfig` v2 @kind object, `com.ap.zoloz.hummer.common.ITaskTrackerCallback` v3 @kind object) @signature `Lcom/ap/zoloz/hummer/common/TaskTracker;.run:(Lcom/ap/zoloz/hummer/common/HummerContext;Lcom/ap/zoloz/hummer/common/TaskConfig;Lcom/ap/zoloz/hummer/common/UIConfig;Lcom/ap/zoloz/hummer/common/ITaskTrackerCallback;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
