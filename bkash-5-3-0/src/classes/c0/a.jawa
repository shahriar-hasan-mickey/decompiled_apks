record `c0.a` @kind class @AccessFlag PUBLIC_FINAL extends `c0.c` @kind class {
}
procedure `void` `<init>`(`c0.a` v0 @kind this) @signature `Lc0/a;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2a468c.  call `<init>`(v0) @signature `Lc0/c;.<init>:()V` @kind direct;
  #L2a4692.  return @kind void;
}
procedure `c0.a` `f`(`c0.a` v0 @kind this, `int` v1 , `java.nio.ByteBuffer` v2 @kind object) @signature `Lc0/a;.f:(ILjava/nio/ByteBuffer;)Lc0/a;` @AccessFlag PUBLIC {
    temp;

  #L2a4524.  call `g`(v0, v1, v2) @signature `Lc0/a;.g:(ILjava/nio/ByteBuffer;)V` @kind virtual;
  #L2a452a.  return v0 @kind object;
}
procedure `void` `g`(`c0.a` v0 @kind this, `int` v1 , `java.nio.ByteBuffer` v2 @kind object) @signature `Lc0/a;.g:(ILjava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;

  #L2a46a4.  call `c`(v0, v1, v2) @signature `Lc0/c;.c:(ILjava/nio/ByteBuffer;)V` @kind virtual;
  #L2a46aa.  return @kind void;
}
procedure `int` `h`(`c0.a` v2 @kind this, `int` v3 ) @signature `Lc0/a;.h:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2a453c.  v0:= 16I;
  #L2a4540.  call temp:= `b`(v2, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a4546.  v0:= temp;
  #L2a4548.  if v0 == 0 then goto L2a4568;
  #L2a454c.  v1:= v2.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a4550.  call temp:= `d`(v2, v0) @signature `Lc0/c;.d:(I)I` @kind virtual;
  #L2a4556.  v0:= temp;
  #L2a4558.  v3:= v3 * 4;
  #L2a455c.  v0:= v0 + v3 @kind int;
  #L2a455e.  call temp:= `getInt`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L2a4564.  v3:= temp;
  #L2a4566.  goto L2a456a;
  #L2a4568.  v3:= 0I;
  #L2a456a.  return v3;
}
procedure `int` `i`(`c0.a` v1 @kind this) @signature `Lc0/a;.i:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2a457c.  v0:= 16I;
  #L2a4580.  call temp:= `b`(v1, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a4586.  v0:= temp;
  #L2a4588.  if v0 == 0 then goto L2a4596;
  #L2a458c.  call temp:= `e`(v1, v0) @signature `Lc0/c;.e:(I)I` @kind virtual;
  #L2a4592.  v0:= temp;
  #L2a4594.  goto L2a4598;
  #L2a4596.  v0:= 0I;
  #L2a4598.  return v0;
}
procedure `boolean` `j`(`c0.a` v4 @kind this) @signature `Lc0/a;.j:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2a44e8.  v0:= 6I;
  #L2a44ea.  call temp:= `b`(v4, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a44f0.  v0:= temp;
  #L2a44f2.  v1:= 0I;
  #L2a44f4.  if v0 == 0 then goto L2a4510;
  #L2a44f8.  v2:= v4.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a44fc.  v3:= v4.`c0.c.a` @type ^`int`;
  #L2a4500.  v0:= v0 + v3 @kind int;
  #L2a4502.  call temp:= `get`(v2, v0) @signature `Ljava/nio/ByteBuffer;.get:(I)B` @kind virtual;
  #L2a4508.  v0:= temp;
  #L2a450a.  if v0 == 0 then goto L2a4510;
  #L2a450e.  v1:= 1I;
  #L2a4510.  return v1;
}
procedure `short` `k`(`c0.a` v3 @kind this) @signature `Lc0/a;.k:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a45e4.  v0:= 14I;
  #L2a45e8.  call temp:= `b`(v3, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a45ee.  v0:= temp;
  #L2a45f0.  if v0 == 0 then goto L2a4608;
  #L2a45f4.  v1:= v3.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a45f8.  v2:= v3.`c0.c.a` @type ^`int`;
  #L2a45fc.  v0:= v0 + v2 @kind int;
  #L2a45fe.  call temp:= `getShort`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L2a4604.  v0:= temp;
  #L2a4606.  goto L2a460a;
  #L2a4608.  v0:= 0I;
  #L2a460a.  return v0;
}
procedure `int` `l`(`c0.a` v3 @kind this) @signature `Lc0/a;.l:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a45ac.  v0:= 4I;
  #L2a45ae.  call temp:= `b`(v3, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a45b4.  v0:= temp;
  #L2a45b6.  if v0 == 0 then goto L2a45ce;
  #L2a45ba.  v1:= v3.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a45be.  v2:= v3.`c0.c.a` @type ^`int`;
  #L2a45c2.  v0:= v0 + v2 @kind int;
  #L2a45c4.  call temp:= `getInt`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L2a45ca.  v0:= temp;
  #L2a45cc.  goto L2a45d0;
  #L2a45ce.  v0:= 0I;
  #L2a45d0.  return v0;
}
procedure `short` `m`(`c0.a` v3 @kind this) @signature `Lc0/a;.m:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a461c.  v0:= 8I;
  #L2a4620.  call temp:= `b`(v3, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a4626.  v0:= temp;
  #L2a4628.  if v0 == 0 then goto L2a4640;
  #L2a462c.  v1:= v3.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a4630.  v2:= v3.`c0.c.a` @type ^`int`;
  #L2a4634.  v0:= v0 + v2 @kind int;
  #L2a4636.  call temp:= `getShort`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L2a463c.  v0:= temp;
  #L2a463e.  goto L2a4642;
  #L2a4640.  v0:= 0I;
  #L2a4642.  return v0;
}
procedure `short` `n`(`c0.a` v3 @kind this) @signature `Lc0/a;.n:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2a4654.  v0:= 12I;
  #L2a4658.  call temp:= `b`(v3, v0) @signature `Lc0/c;.b:(I)I` @kind virtual;
  #L2a465e.  v0:= temp;
  #L2a4660.  if v0 == 0 then goto L2a4678;
  #L2a4664.  v1:= v3.`c0.c.b` @type ^`java.nio.ByteBuffer` @kind object;
  #L2a4668.  v2:= v3.`c0.c.a` @type ^`int`;
  #L2a466c.  v0:= v0 + v2 @kind int;
  #L2a466e.  call temp:= `getShort`(v1, v0) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L2a4674.  v0:= temp;
  #L2a4676.  goto L2a467a;
  #L2a4678.  v0:= 0I;
  #L2a467a.  return v0;
}
