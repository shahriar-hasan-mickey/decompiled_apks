record `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` @kind class @AccessFlag PUBLIC extends `g4.a` @kind interface, `g4.c$b` @kind interface {
  `v4.f` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.a` @AccessFlag PRIVATE_FINAL;
  `h4.a` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.b` @AccessFlag PRIVATE_FINAL;
  `g4.d` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.c` @AccessFlag PRIVATE_FINAL;
  `h4.b` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.d` @AccessFlag PRIVATE_FINAL;
  `j4.a` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.e` @AccessFlag PRIVATE_FINAL;
  `j4.b` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.f` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Paint` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.g` @AccessFlag PRIVATE_FINAL;
  `android.graphics.Rect` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.h` @AccessFlag PRIVATE;
  `int` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.i` @AccessFlag PRIVATE;
  `int` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.j` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.k` @AccessFlag PRIVATE;
  `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend$a` `com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.l` @AccessFlag PRIVATE;
}
global `java.lang.Class` `@@com.facebook.fresco.animation.bitmap.BitmapAnimationBackend.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this, `v4.f` v2 @kind object, `h4.a` v3 @kind object, `g4.d` v4 @kind object, `h4.b` v5 @kind object, `j4.a` v6 @kind object, `j4.b` v7 @kind object) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.<init>:(Lv4/f;Lh4/a;Lg4/d;Lh4/b;Lj4/a;Lj4/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `k`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v4 @kind this, `int` v5 , `com.facebook.common.references.CloseableReference` v6 @kind object, `android.graphics.Canvas` v7 @kind object, `int` v8 ) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.k:(ILcom/facebook/common/references/CloseableReference;Landroid/graphics/Canvas;I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `l`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v9 @kind this, `android.graphics.Canvas` v10 @kind object, `int` v11 , `int` v12 ) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.l:(Landroid/graphics/Canvas;II)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `m`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v2 @kind this, `int` v3 , `com.facebook.common.references.CloseableReference` v4 @kind object) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.m:(ILcom/facebook/common/references/CloseableReference;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `n`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v2 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.n:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `a`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.a:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `b`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.b:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `c`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.c:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clear`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `d`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.d:(Landroid/graphics/Rect;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `e`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.e:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `f`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v0 @kind this) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.f:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `g`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this, `android.graphics.ColorFilter` v2 @kind object) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.g:(Landroid/graphics/ColorFilter;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `h`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this, `int` v2 ) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.h:(I)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `i`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v1 @kind this, `int` v2 ) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.i:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `j`(`com.facebook.fresco.animation.bitmap.BitmapAnimationBackend` v2 @kind this, `android.graphics.drawable.Drawable` v3 @kind object, `android.graphics.Canvas` v4 @kind object, `int` v5 ) @signature `Lcom/facebook/fresco/animation/bitmap/BitmapAnimationBackend;.j:(Landroid/graphics/drawable/Drawable;Landroid/graphics/Canvas;I)Z` @AccessFlag PUBLIC {

  # return;
}
