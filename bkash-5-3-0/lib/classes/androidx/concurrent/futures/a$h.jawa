record `androidx.concurrent.futures.a$h` @kind class @AccessFlag FINAL extends `androidx.concurrent.futures.a$b` @kind class {
}
procedure `void` `<init>`(`androidx.concurrent.futures.a$h` v1 @kind this) @signature `Landroidx/concurrent/futures/a$h;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`androidx.concurrent.futures.a$h` v1 @kind this, `androidx.concurrent.futures.a` v2 @kind object, `androidx.concurrent.futures.a$e` v3 @kind object, `androidx.concurrent.futures.a$e` v4 @kind object) @signature `Landroidx/concurrent/futures/a$h;.a:(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$e;Landroidx/concurrent/futures/a$e;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `b`(`androidx.concurrent.futures.a$h` v1 @kind this, `androidx.concurrent.futures.a` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Landroidx/concurrent/futures/a$h;.b:(Landroidx/concurrent/futures/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `c`(`androidx.concurrent.futures.a$h` v1 @kind this, `androidx.concurrent.futures.a` v2 @kind object, `androidx.concurrent.futures.a$i` v3 @kind object, `androidx.concurrent.futures.a$i` v4 @kind object) @signature `Landroidx/concurrent/futures/a$h;.c:(Landroidx/concurrent/futures/a;Landroidx/concurrent/futures/a$i;Landroidx/concurrent/futures/a$i;)Z` @AccessFlag  {

  # return;
}
procedure `void` `d`(`androidx.concurrent.futures.a$h` v0 @kind this, `androidx.concurrent.futures.a$i` v1 @kind object, `androidx.concurrent.futures.a$i` v2 @kind object) @signature `Landroidx/concurrent/futures/a$h;.d:(Landroidx/concurrent/futures/a$i;Landroidx/concurrent/futures/a$i;)V` @AccessFlag  {

  # return;
}
procedure `void` `e`(`androidx.concurrent.futures.a$h` v0 @kind this, `androidx.concurrent.futures.a$i` v1 @kind object, `java.lang.Thread` v2 @kind object) @signature `Landroidx/concurrent/futures/a$h;.e:(Landroidx/concurrent/futures/a$i;Ljava/lang/Thread;)V` @AccessFlag  {

  # return;
}
