record `androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` @kind class @AccessFlag  extends `androidx.work.multiprocess.IListenableWorkerImpl` @kind interface {
  `android.os.IBinder` `androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy.g` @AccessFlag PRIVATE;
}
global `androidx.work.multiprocess.IListenableWorkerImpl` `@@androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy.sDefaultImpl` @AccessFlag PUBLIC_STATIC;
procedure `void` `<init>`(`androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` v0 @kind this, `android.os.IBinder` v1 @kind object) @signature `Landroidx/work/multiprocess/IListenableWorkerImpl$Stub$Proxy;.<init>:(Landroid/os/IBinder;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `android.os.IBinder` `asBinder`(`androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` v1 @kind this) @signature `Landroidx/work/multiprocess/IListenableWorkerImpl$Stub$Proxy;.asBinder:()Landroid/os/IBinder;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `getInterfaceDescriptor`(`androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` v1 @kind this) @signature `Landroidx/work/multiprocess/IListenableWorkerImpl$Stub$Proxy;.getInterfaceDescriptor:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `interrupt`(`androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` v5 @kind this, `byte`[] v6 @kind object, `androidx.work.multiprocess.IWorkManagerImplCallback` v7 @kind object) @signature `Landroidx/work/multiprocess/IListenableWorkerImpl$Stub$Proxy;.interrupt:([BLandroidx/work/multiprocess/IWorkManagerImplCallback;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `startWork`(`androidx.work.multiprocess.IListenableWorkerImpl$Stub$Proxy` v4 @kind this, `byte`[] v5 @kind object, `androidx.work.multiprocess.IWorkManagerImplCallback` v6 @kind object) @signature `Landroidx/work/multiprocess/IListenableWorkerImpl$Stub$Proxy;.startWork:([BLandroidx/work/multiprocess/IWorkManagerImplCallback;)V` @AccessFlag PUBLIC {

  # return;
}
