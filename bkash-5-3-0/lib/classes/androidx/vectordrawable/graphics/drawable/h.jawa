record `androidx.vectordrawable.graphics.drawable.h` @kind class @AccessFlag ABSTRACT extends `android.graphics.drawable.Drawable` @kind class, `androidx.core.graphics.drawable.b` @kind interface {
  `android.graphics.drawable.Drawable` `androidx.vectordrawable.graphics.drawable.h.g` @AccessFlag ;
}
procedure `void` `<init>`(`androidx.vectordrawable.graphics.drawable.h` v0 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `applyTheme`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `android.content.res.Resources$Theme` v2 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/h;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearColorFilter`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.clearColorFilter:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getCurrent`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getCurrent:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumHeight`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getMinimumHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumWidth`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getMinimumWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getPadding`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `android.graphics.Rect` v2 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getState`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getState:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.Region` `getTransparentRegion`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `jumpToCurrentState`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this) @signature `Landroidx/vectordrawable/graphics/drawable/h;.jumpToCurrentState:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `onLevelChange`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `int` v2 ) @signature `Landroidx/vectordrawable/graphics/drawable/h;.onLevelChange:(I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `setChangingConfigurations`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `int` v2 ) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setChangingConfigurations:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setColorFilter`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `int` v2 , `android.graphics.PorterDuff$Mode` v3 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFilterBitmap`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `boolean` v2 ) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setHotspot`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `float` v2 , `float` v3 ) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setHotspot:(FF)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setHotspotBounds`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `int` v2 , `int` v3 , `int` v4 , `int` v5 ) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setHotspotBounds:(IIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setState`(`androidx.vectordrawable.graphics.drawable.h` v1 @kind this, `int`[] v2 @kind object) @signature `Landroidx/vectordrawable/graphics/drawable/h;.setState:([I)Z` @AccessFlag PUBLIC {

  # return;
}
