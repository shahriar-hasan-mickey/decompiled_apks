record `androidx.annotation.RestrictTo$a` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.GROUP_ID` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.LIBRARY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.LIBRARY_GROUP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.LIBRARY_GROUP_PREFIX` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.SUBCLASSES` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a` `@@androidx.annotation.RestrictTo$a.TESTS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `androidx.annotation.RestrictTo$a`[] `@@androidx.annotation.RestrictTo$a.g` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Landroidx/annotation/RestrictTo$a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.annotation.RestrictTo$a` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Landroidx/annotation/RestrictTo$a;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `androidx.annotation.RestrictTo$a`[] `a`() @signature `Landroidx/annotation/RestrictTo$a;.a:()[Landroidx/annotation/RestrictTo$a;` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC {

  # return;
}
procedure `androidx.annotation.RestrictTo$a` `valueOf`(`java.lang.String` v1 @kind object) @signature `Landroidx/annotation/RestrictTo$a;.valueOf:(Ljava/lang/String;)Landroidx/annotation/RestrictTo$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `androidx.annotation.RestrictTo$a`[] `values`() @signature `Landroidx/annotation/RestrictTo$a;.values:()[Landroidx/annotation/RestrictTo$a;` @AccessFlag PUBLIC_STATIC {

  # return;
}
