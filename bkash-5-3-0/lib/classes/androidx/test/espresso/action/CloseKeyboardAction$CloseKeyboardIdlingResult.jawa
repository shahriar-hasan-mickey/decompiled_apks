record `androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult` @kind class @AccessFlag  extends `android.os.ResultReceiver` @kind class {
  `androidx.test.espresso.IdlingResource$ResourceCallback` `androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult.g` @AccessFlag PRIVATE;
  `boolean` `androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult.h` @AccessFlag PRIVATE;
  `boolean` `androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult.i` @AccessFlag PRIVATE;
  `android.os.Handler` `androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult.j` @AccessFlag PRIVATE_FINAL;
}
procedure `androidx.test.espresso.IdlingResource$ResourceCallback` `a`(`androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult` v0 @kind object) @signature `Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;.a:(Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;)Landroidx/test/espresso/IdlingResource$ResourceCallback;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `b`(`androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult` v0 @kind object, `boolean` v1 ) @signature `Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;.b:(Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;Z)Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `c`(`androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult` v2 @kind this, `long` v3 ) @signature `Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;.c:(J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `onReceiveResult`(`androidx.test.espresso.action.CloseKeyboardAction$CloseKeyboardIdlingResult` v0 @kind this, `int` v1 , `android.os.Bundle` v2 @kind object) @signature `Landroidx/test/espresso/action/CloseKeyboardAction$CloseKeyboardIdlingResult;.onReceiveResult:(ILandroid/os/Bundle;)V` @AccessFlag PROTECTED {

  # return;
}
