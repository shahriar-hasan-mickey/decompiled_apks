record `androidx.test.services.events.run.TestRunEvent` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.os.Parcelable` @kind interface {
}
global `android.os.Parcelable$Creator` `@@androidx.test.services.events.run.TestRunEvent.CREATOR` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Landroidx/test/services/events/run/TestRunEvent;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`androidx.test.services.events.run.TestRunEvent` v0 @kind this) @signature `Landroidx/test/services/events/run/TestRunEvent;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `androidx.test.services.events.run.TestRunEvent$EventType` `a`() @signature `Landroidx/test/services/events/run/TestRunEvent;.a:()Landroidx/test/services/events/run/TestRunEvent$EventType;` @AccessFlag ABSTRACT {

  # return;
}
procedure `int` `describeContents`(`androidx.test.services.events.run.TestRunEvent` v1 @kind this) @signature `Landroidx/test/services/events/run/TestRunEvent;.describeContents:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `writeToParcel`(`androidx.test.services.events.run.TestRunEvent` v0 @kind this, `android.os.Parcel` v1 @kind object, `int` v2 ) @signature `Landroidx/test/services/events/run/TestRunEvent;.writeToParcel:(Landroid/os/Parcel;I)V` @AccessFlag PUBLIC {

  # return;
}
