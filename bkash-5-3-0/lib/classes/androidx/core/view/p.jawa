record `androidx.core.view.p` @kind class @AccessFlag PUBLIC {
  `android.view.ViewParent` `androidx.core.view.p.a` @AccessFlag PRIVATE;
  `android.view.ViewParent` `androidx.core.view.p.b` @AccessFlag PRIVATE;
  `android.view.View` `androidx.core.view.p.c` @AccessFlag PRIVATE_FINAL;
  `boolean` `androidx.core.view.p.d` @AccessFlag PRIVATE;
  `int`[] `androidx.core.view.p.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`androidx.core.view.p` v0 @kind this, `android.view.View` v1 @kind object) @signature `Landroidx/core/view/p;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `h`(`androidx.core.view.p` v15 @kind this, `int` v16 , `int` v17 , `int` v18 , `int` v19 , `int`[] v20 @kind object, `int` v21 , `int`[] v22 @kind object) @signature `Landroidx/core/view/p;.h:(IIII[II[I)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `android.view.ViewParent` `i`(`androidx.core.view.p` v1 @kind this, `int` v2 ) @signature `Landroidx/core/view/p;.i:(I)Landroid/view/ViewParent;` @AccessFlag PRIVATE {

  # return;
}
procedure `int`[] `j`(`androidx.core.view.p` v1 @kind this) @signature `Landroidx/core/view/p;.j:()[I` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `o`(`androidx.core.view.p` v1 @kind this, `int` v2 , `android.view.ViewParent` v3 @kind object) @signature `Landroidx/core/view/p;.o:(ILandroid/view/ViewParent;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `a`(`androidx.core.view.p` v2 @kind this, `float` v3 , `float` v4 , `boolean` v5 ) @signature `Landroidx/core/view/p;.a:(FFZ)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `b`(`androidx.core.view.p` v2 @kind this, `float` v3 , `float` v4 ) @signature `Landroidx/core/view/p;.b:(FF)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `c`(`androidx.core.view.p` v6 @kind this, `int` v7 , `int` v8 , `int`[] v9 @kind object, `int`[] v10 @kind object) @signature `Landroidx/core/view/p;.c:(II[I[I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `d`(`androidx.core.view.p` v10 @kind this, `int` v11 , `int` v12 , `int`[] v13 @kind object, `int`[] v14 @kind object, `int` v15 ) @signature `Landroidx/core/view/p;.d:(II[I[II)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `e`(`androidx.core.view.p` v0 @kind this, `int` v1 , `int` v2 , `int` v3 , `int` v4 , `int`[] v5 @kind object, `int` v6 , `int`[] v7 @kind object) @signature `Landroidx/core/view/p;.e:(IIII[II[I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `f`(`androidx.core.view.p` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int`[] v13 @kind object) @signature `Landroidx/core/view/p;.f:(IIII[I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `g`(`androidx.core.view.p` v8 @kind this, `int` v9 , `int` v10 , `int` v11 , `int` v12 , `int`[] v13 @kind object, `int` v14 ) @signature `Landroidx/core/view/p;.g:(IIII[II)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `k`(`androidx.core.view.p` v1 @kind this) @signature `Landroidx/core/view/p;.k:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `l`(`androidx.core.view.p` v0 @kind this, `int` v1 ) @signature `Landroidx/core/view/p;.l:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `m`(`androidx.core.view.p` v1 @kind this) @signature `Landroidx/core/view/p;.m:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `n`(`androidx.core.view.p` v1 @kind this, `boolean` v2 ) @signature `Landroidx/core/view/p;.n:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `p`(`androidx.core.view.p` v1 @kind this, `int` v2 ) @signature `Landroidx/core/view/p;.p:(I)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `q`(`androidx.core.view.p` v4 @kind this, `int` v5 , `int` v6 ) @signature `Landroidx/core/view/p;.q:(II)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `r`(`androidx.core.view.p` v1 @kind this) @signature `Landroidx/core/view/p;.r:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `s`(`androidx.core.view.p` v2 @kind this, `int` v3 ) @signature `Landroidx/core/view/p;.s:(I)V` @AccessFlag PUBLIC {

  # return;
}
