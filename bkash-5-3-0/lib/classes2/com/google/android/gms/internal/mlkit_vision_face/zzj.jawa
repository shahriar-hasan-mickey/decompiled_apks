record `com.google.android.gms.internal.mlkit_vision_face.zzj` @kind class @AccessFlag PUBLIC_FINAL extends `com.google.android.gms.internal.mlkit_vision_face.zza` @kind class {
}
procedure `void` `<init>`(`com.google.android.gms.internal.mlkit_vision_face.zzj` v1 @kind this, `android.os.IBinder` v2 @kind object) @signature `Lcom/google/android/gms/internal/mlkit_vision_face/zzj;.<init>:(Landroid/os/IBinder;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `zzd`(`com.google.android.gms.internal.mlkit_vision_face.zzj` v2 @kind this) @signature `Lcom/google/android/gms/internal/mlkit_vision_face/zzj;.zzd:()V` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.android.gms.internal.mlkit_vision_face.zzf`[] `zze`(`com.google.android.gms.internal.mlkit_vision_face.zzj` v1 @kind this, `com.google.android.gms.dynamic.IObjectWrapper` v2 @kind object, `com.google.android.gms.internal.mlkit_vision_face.zzp` v3 @kind object) @signature `Lcom/google/android/gms/internal/mlkit_vision_face/zzj;.zze:(Lcom/google/android/gms/dynamic/IObjectWrapper;Lcom/google/android/gms/internal/mlkit_vision_face/zzp;)[Lcom/google/android/gms/internal/mlkit_vision_face/zzf;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.android.gms.internal.mlkit_vision_face.zzf`[] `zzf`(`com.google.android.gms.internal.mlkit_vision_face.zzj` v1 @kind this, `com.google.android.gms.dynamic.IObjectWrapper` v2 @kind object, `com.google.android.gms.dynamic.IObjectWrapper` v3 @kind object, `com.google.android.gms.dynamic.IObjectWrapper` v4 @kind object, `int` v5 , `int` v6 , `int` v7 , `int` v8 , `int` v9 , `int` v10 , `com.google.android.gms.internal.mlkit_vision_face.zzp` v11 @kind object) @signature `Lcom/google/android/gms/internal/mlkit_vision_face/zzj;.zzf:(Lcom/google/android/gms/dynamic/IObjectWrapper;Lcom/google/android/gms/dynamic/IObjectWrapper;Lcom/google/android/gms/dynamic/IObjectWrapper;IIIIIILcom/google/android/gms/internal/mlkit_vision_face/zzp;)[Lcom/google/android/gms/internal/mlkit_vision_face/zzf;` @AccessFlag PUBLIC_FINAL {

  # return;
}
