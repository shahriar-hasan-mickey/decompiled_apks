record `com.google.common.collect.d0$f` @kind class @AccessFlag  extends `com.google.common.collect.e0` @kind class {
  `com.google.common.collect.d0` `com.google.common.collect.d0$f.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.d0$f` v0 @kind this, `com.google.common.collect.d0` v1 @kind object) @signature `Lcom/google/common/collect/d0$f;.<init>:(Lcom/google/common/collect/d0;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.d0$f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/d0$f;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `count`(`com.google.common.collect.d0$f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/d0$f;.count:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.g0` `elementSet`(`com.google.common.collect.d0$f` v1 @kind this) @signature `Lcom/google/common/collect/d0$f;.elementSet:()Lcom/google/common/collect/g0;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `elementSet`(`com.google.common.collect.d0$f` v1 @kind this) @signature `Lcom/google/common/collect/d0$f;.elementSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.u0$a` `getEntry`(`com.google.common.collect.d0$f` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/d0$f;.getEntry:(I)Lcom/google/common/collect/u0$a;` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.d0$f` v1 @kind this) @signature `Lcom/google/common/collect/d0$f;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.d0$f` v1 @kind this) @signature `Lcom/google/common/collect/d0$f;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.d0$f` v2 @kind this) @signature `Lcom/google/common/collect/d0$f;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
