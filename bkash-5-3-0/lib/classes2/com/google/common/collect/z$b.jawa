record `com.google.common.collect.z$b` @kind class @AccessFlag PUBLIC {
  `java.util.Comparator` `com.google.common.collect.z$b.a` @AccessFlag ;
  `java.lang.Object`[] `com.google.common.collect.z$b.b` @AccessFlag ;
  `int` `com.google.common.collect.z$b.c` @AccessFlag ;
  `boolean` `com.google.common.collect.z$b.d` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.z$b` v1 @kind this) @signature `Lcom/google/common/collect/z$b;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.z$b` v0 @kind this, `int` v1 ) @signature `Lcom/google/common/collect/z$b;.<init>:(I)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `b`(`com.google.common.collect.z$b` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/collect/z$b;.b:(I)V` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.collect.z` `a`(`com.google.common.collect.z$b` v2 @kind this) @signature `Lcom/google/common/collect/z$b;.a:()Lcom/google/common/collect/z;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.z$b` `c`(`com.google.common.collect.z$b` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/google/common/collect/z$b;.c:(Ljava/lang/Object;Ljava/lang/Object;)Lcom/google/common/collect/z$b;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.z$b` `d`(`com.google.common.collect.z$b` v1 @kind this, `java.util.Map$Entry` v2 @kind object) @signature `Lcom/google/common/collect/z$b;.d:(Ljava/util/Map$Entry;)Lcom/google/common/collect/z$b;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.z$b` `e`(`com.google.common.collect.z$b` v2 @kind this, `java.lang.Iterable` v3 @kind object) @signature `Lcom/google/common/collect/z$b;.e:(Ljava/lang/Iterable;)Lcom/google/common/collect/z$b;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `f`(`com.google.common.collect.z$b` v7 @kind this) @signature `Lcom/google/common/collect/z$b;.f:()V` @AccessFlag  {

  # return;
}
