record `com.google.common.collect.q0$n` @kind class @AccessFlag ABSTRACT extends `java.util.concurrent.locks.ReentrantLock` @kind class {
  `int` `com.google.common.collect.q0$n.count` @AccessFlag VOLATILE;
  `com.google.common.collect.q0` `com.google.common.collect.q0$n.map` @AccessFlag FINAL;
  `int` `com.google.common.collect.q0$n.maxSegmentSize` @AccessFlag FINAL;
  `int` `com.google.common.collect.q0$n.modCount` @AccessFlag ;
  `java.util.concurrent.atomic.AtomicInteger` `com.google.common.collect.q0$n.readCount` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceArray` `com.google.common.collect.q0$n.table` @AccessFlag VOLATILE;
  `int` `com.google.common.collect.q0$n.threshold` @AccessFlag ;
}
procedure `void` `<init>`(`com.google.common.collect.q0$n` v1 @kind this, `com.google.common.collect.q0` v2 @kind object, `int` v3 , `int` v4 ) @signature `Lcom/google/common/collect/q0$n;.<init>:(Lcom/google/common/collect/q0;II)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `isCollected`(`com.google.common.collect.q0$i` v0 @kind object) @signature `Lcom/google/common/collect/q0$n;.isCollected:(Lcom/google/common/collect/q0$i;)Z` @AccessFlag STATIC {

  # return;
}
procedure `com.google.common.collect.q0$i` `castForTesting`(`com.google.common.collect.q0$i` v0 @kind object) @signature `Lcom/google/common/collect/q0$n;.castForTesting:(Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `clear`(`com.google.common.collect.q0$n` v4 @kind this) @signature `Lcom/google/common/collect/q0$n;.clear:()V` @AccessFlag  {

  # return;
}
procedure `void` `clearReferenceQueue`(`com.google.common.collect.q0$n` v1 @kind this, `java.lang.ref.ReferenceQueue` v2 @kind object) @signature `Lcom/google/common/collect/q0$n;.clearReferenceQueue:(Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag  {

  # return;
}
procedure `boolean` `clearValueForTesting`(`com.google.common.collect.q0$n` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `com.google.common.collect.q0$f0` v11 @kind object) @signature `Lcom/google/common/collect/q0$n;.clearValueForTesting:(Ljava/lang/Object;ILcom/google/common/collect/q0$f0;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `containsKey`(`com.google.common.collect.q0$n` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 ) @signature `Lcom/google/common/collect/q0$n;.containsKey:(Ljava/lang/Object;I)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `containsValue`(`com.google.common.collect.q0$n` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/google/common/collect/q0$n;.containsValue:(Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `copyEntry`(`com.google.common.collect.q0$n` v2 @kind this, `com.google.common.collect.q0$i` v3 @kind object, `com.google.common.collect.q0$i` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.copyEntry:(Lcom/google/common/collect/q0$i;Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `copyForTesting`(`com.google.common.collect.q0$n` v2 @kind this, `com.google.common.collect.q0$i` v3 @kind object, `com.google.common.collect.q0$i` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.copyForTesting:(Lcom/google/common/collect/q0$i;Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `void` `drainKeyReferenceQueue`(`com.google.common.collect.q0$n` v3 @kind this, `java.lang.ref.ReferenceQueue` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.drainKeyReferenceQueue:(Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag  {

  # return;
}
procedure `void` `drainValueReferenceQueue`(`com.google.common.collect.q0$n` v3 @kind this, `java.lang.ref.ReferenceQueue` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.drainValueReferenceQueue:(Ljava/lang/ref/ReferenceQueue;)V` @AccessFlag  {

  # return;
}
procedure `void` `expand`(`com.google.common.collect.q0$n` v11 @kind this) @signature `Lcom/google/common/collect/q0$n;.expand:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.q0$n` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/q0$n;.get:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `getEntry`(`com.google.common.collect.q0$n` v3 @kind this, `java.lang.Object` v4 @kind object, `int` v5 ) @signature `Lcom/google/common/collect/q0$n;.getEntry:(Ljava/lang/Object;I)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `getFirst`(`com.google.common.collect.q0$n` v2 @kind this, `int` v3 ) @signature `Lcom/google/common/collect/q0$n;.getFirst:(I)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `java.lang.ref.ReferenceQueue` `getKeyReferenceQueueForTesting`(`com.google.common.collect.q0$n` v1 @kind this) @signature `Lcom/google/common/collect/q0$n;.getKeyReferenceQueueForTesting:()Ljava/lang/ref/ReferenceQueue;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `getLiveEntry`(`com.google.common.collect.q0$n` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 ) @signature `Lcom/google/common/collect/q0$n;.getLiveEntry:(Ljava/lang/Object;I)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getLiveValue`(`com.google.common.collect.q0$n` v2 @kind this, `com.google.common.collect.q0$i` v3 @kind object) @signature `Lcom/google/common/collect/q0$n;.getLiveValue:(Lcom/google/common/collect/q0$i;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `getLiveValueForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object) @signature `Lcom/google/common/collect/q0$n;.getLiveValueForTesting:(Lcom/google/common/collect/q0$i;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `java.lang.ref.ReferenceQueue` `getValueReferenceQueueForTesting`(`com.google.common.collect.q0$n` v1 @kind this) @signature `Lcom/google/common/collect/q0$n;.getValueReferenceQueueForTesting:()Ljava/lang/ref/ReferenceQueue;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$f0` `getWeakValueReferenceForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object) @signature `Lcom/google/common/collect/q0$n;.getWeakValueReferenceForTesting:(Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$f0;` @AccessFlag  {

  # return;
}
procedure `void` `initTable`(`com.google.common.collect.q0$n` v2 @kind this, `java.util.concurrent.atomic.AtomicReferenceArray` v3 @kind object) @signature `Lcom/google/common/collect/q0$n;.initTable:(Ljava/util/concurrent/atomic/AtomicReferenceArray;)V` @AccessFlag  {

  # return;
}
procedure `void` `maybeClearReferenceQueues`(`com.google.common.collect.q0$n` v0 @kind this) @signature `Lcom/google/common/collect/q0$n;.maybeClearReferenceQueues:()V` @AccessFlag  {

  # return;
}
procedure `void` `maybeDrainReferenceQueues`(`com.google.common.collect.q0$n` v0 @kind this) @signature `Lcom/google/common/collect/q0$n;.maybeDrainReferenceQueues:()V` @AccessFlag  {

  # return;
}
procedure `java.util.concurrent.atomic.AtomicReferenceArray` `newEntryArray`(`com.google.common.collect.q0$n` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/q0$n;.newEntryArray:(I)Ljava/util/concurrent/atomic/AtomicReferenceArray;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `newEntryForTesting`(`com.google.common.collect.q0$n` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 , `com.google.common.collect.q0$i` v5 @kind object) @signature `Lcom/google/common/collect/q0$n;.newEntryForTesting:(Ljava/lang/Object;ILcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$f0` `newWeakValueReferenceForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/q0$n;.newWeakValueReferenceForTesting:(Lcom/google/common/collect/q0$i;Ljava/lang/Object;)Lcom/google/common/collect/q0$f0;` @AccessFlag  {

  # return;
}
procedure `void` `postReadCleanup`(`com.google.common.collect.q0$n` v1 @kind this) @signature `Lcom/google/common/collect/q0$n;.postReadCleanup:()V` @AccessFlag  {

  # return;
}
procedure `void` `preWriteCleanup`(`com.google.common.collect.q0$n` v0 @kind this) @signature `Lcom/google/common/collect/q0$n;.preWriteCleanup:()V` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.common.collect.q0$n` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `java.lang.Object` v11 @kind object, `boolean` v12 ) @signature `Lcom/google/common/collect/q0$n;.put:(Ljava/lang/Object;ILjava/lang/Object;Z)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `reclaimKey`(`com.google.common.collect.q0$n` v4 @kind this, `com.google.common.collect.q0$i` v5 @kind object, `int` v6 ) @signature `Lcom/google/common/collect/q0$n;.reclaimKey:(Lcom/google/common/collect/q0$i;I)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `reclaimValue`(`com.google.common.collect.q0$n` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `com.google.common.collect.q0$f0` v11 @kind object) @signature `Lcom/google/common/collect/q0$n;.reclaimValue:(Ljava/lang/Object;ILcom/google/common/collect/q0$f0;)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.common.collect.q0$n` v7 @kind this, `java.lang.Object` v8 @kind object, `int` v9 ) @signature `Lcom/google/common/collect/q0$n;.remove:(Ljava/lang/Object;I)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `remove`(`com.google.common.collect.q0$n` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `java.lang.Object` v11 @kind object) @signature `Lcom/google/common/collect/q0$n;.remove:(Ljava/lang/Object;ILjava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `removeEntryForTesting`(`com.google.common.collect.q0$n` v5 @kind this, `com.google.common.collect.q0$i` v6 @kind object) @signature `Lcom/google/common/collect/q0$n;.removeEntryForTesting:(Lcom/google/common/collect/q0$i;)Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `removeFromChain`(`com.google.common.collect.q0$n` v3 @kind this, `com.google.common.collect.q0$i` v4 @kind object, `com.google.common.collect.q0$i` v5 @kind object) @signature `Lcom/google/common/collect/q0$n;.removeFromChain:(Lcom/google/common/collect/q0$i;Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$i` `removeFromChainForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object, `com.google.common.collect.q0$i` v2 @kind object) @signature `Lcom/google/common/collect/q0$n;.removeFromChainForTesting:(Lcom/google/common/collect/q0$i;Lcom/google/common/collect/q0$i;)Lcom/google/common/collect/q0$i;` @AccessFlag  {

  # return;
}
procedure `boolean` `removeTableEntryForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object) @signature `Lcom/google/common/collect/q0$n;.removeTableEntryForTesting:(Lcom/google/common/collect/q0$i;)Z` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `replace`(`com.google.common.collect.q0$n` v7 @kind this, `java.lang.Object` v8 @kind object, `int` v9 , `java.lang.Object` v10 @kind object) @signature `Lcom/google/common/collect/q0$n;.replace:(Ljava/lang/Object;ILjava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `replace`(`com.google.common.collect.q0$n` v8 @kind this, `java.lang.Object` v9 @kind object, `int` v10 , `java.lang.Object` v11 @kind object, `java.lang.Object` v12 @kind object) @signature `Lcom/google/common/collect/q0$n;.replace:(Ljava/lang/Object;ILjava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `void` `runCleanup`(`com.google.common.collect.q0$n` v0 @kind this) @signature `Lcom/google/common/collect/q0$n;.runCleanup:()V` @AccessFlag  {

  # return;
}
procedure `void` `runLockedCleanup`(`com.google.common.collect.q0$n` v2 @kind this) @signature `Lcom/google/common/collect/q0$n;.runLockedCleanup:()V` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.q0$n` `self`() @signature `Lcom/google/common/collect/q0$n;.self:()Lcom/google/common/collect/q0$n;` @AccessFlag ABSTRACT {

  # return;
}
procedure `void` `setTableEntryForTesting`(`com.google.common.collect.q0$n` v1 @kind this, `int` v2 , `com.google.common.collect.q0$i` v3 @kind object) @signature `Lcom/google/common/collect/q0$n;.setTableEntryForTesting:(ILcom/google/common/collect/q0$i;)V` @AccessFlag  {

  # return;
}
procedure `void` `setValue`(`com.google.common.collect.q0$n` v2 @kind this, `com.google.common.collect.q0$i` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.setValue:(Lcom/google/common/collect/q0$i;Ljava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `void` `setValueForTesting`(`com.google.common.collect.q0$n` v2 @kind this, `com.google.common.collect.q0$i` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/collect/q0$n;.setValueForTesting:(Lcom/google/common/collect/q0$i;Ljava/lang/Object;)V` @AccessFlag  {

  # return;
}
procedure `void` `setWeakValueReferenceForTesting`(`com.google.common.collect.q0$n` v0 @kind this, `com.google.common.collect.q0$i` v1 @kind object, `com.google.common.collect.q0$f0` v2 @kind object) @signature `Lcom/google/common/collect/q0$n;.setWeakValueReferenceForTesting:(Lcom/google/common/collect/q0$i;Lcom/google/common/collect/q0$f0;)V` @AccessFlag  {

  # return;
}
procedure `void` `tryDrainReferenceQueues`(`com.google.common.collect.q0$n` v1 @kind this) @signature `Lcom/google/common/collect/q0$n;.tryDrainReferenceQueues:()V` @AccessFlag  {

  # return;
}
