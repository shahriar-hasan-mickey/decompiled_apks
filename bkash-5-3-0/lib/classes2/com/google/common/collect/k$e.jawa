record `com.google.common.collect.k$e` @kind class @AccessFlag ABSTRACT extends `java.util.Iterator` @kind interface {
  `int` `com.google.common.collect.k$e.g` @AccessFlag ;
  `int` `com.google.common.collect.k$e.h` @AccessFlag ;
  `int` `com.google.common.collect.k$e.i` @AccessFlag ;
  `com.google.common.collect.k` `com.google.common.collect.k$e.j` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.collect.k$e` v1 @kind this, `com.google.common.collect.k` v2 @kind object) @signature `Lcom/google/common/collect/k$e;.<init>:(Lcom/google/common/collect/k;)V` @AccessFlag PRIVATE_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.k$e` v0 @kind this, `com.google.common.collect.k` v1 @kind object, `com.google.common.collect.k$a` v2 @kind object) @signature `Lcom/google/common/collect/k$e;.<init>:(Lcom/google/common/collect/k;Lcom/google/common/collect/k$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`com.google.common.collect.k$e` v2 @kind this) @signature `Lcom/google/common/collect/k$e;.a:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `b`(`int` v0 ) @signature `Lcom/google/common/collect/k$e;.b:(I)Ljava/lang/Object;` @AccessFlag ABSTRACT {

  # return;
}
procedure `boolean` `hasNext`(`com.google.common.collect.k$e` v1 @kind this) @signature `Lcom/google/common/collect/k$e;.hasNext:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `next`(`com.google.common.collect.k$e` v3 @kind this) @signature `Lcom/google/common/collect/k$e;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `remove`(`com.google.common.collect.k$e` v3 @kind this) @signature `Lcom/google/common/collect/k$e;.remove:()V` @AccessFlag PUBLIC {

  # return;
}
