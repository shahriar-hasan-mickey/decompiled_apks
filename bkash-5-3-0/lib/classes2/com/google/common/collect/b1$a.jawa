record `com.google.common.collect.b1$a` @kind class @AccessFlag  extends `com.google.common.collect.b1` @kind class {
  `java.util.concurrent.atomic.AtomicInteger` `com.google.common.collect.b1$a.g` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.ConcurrentMap` `com.google.common.collect.b1$a.h` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.b1$a` v2 @kind this) @signature `Lcom/google/common/collect/b1$a;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Integer` `a`(`com.google.common.collect.b1$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/collect/b1$a;.a:(Ljava/lang/Object;)Ljava/lang/Integer;` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `b`(`com.google.common.collect.b1$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/collect/b1$a;.b:(Ljava/lang/Object;)I` @AccessFlag  {

  # return;
}
procedure `int` `compare`(`com.google.common.collect.b1$a` v4 @kind this, `java.lang.Object` v5 @kind object, `java.lang.Object` v6 @kind object) @signature `Lcom/google/common/collect/b1$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.collect.b1$a` v1 @kind this) @signature `Lcom/google/common/collect/b1$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
