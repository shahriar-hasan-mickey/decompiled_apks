record `com.google.common.collect.b0` @kind class @AccessFlag FINAL extends `com.google.common.collect.k0` @kind class {
  `com.google.common.collect.z` `com.google.common.collect.b0.map` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.google.common.collect.b0` v0 @kind this, `com.google.common.collect.z` v1 @kind object) @signature `Lcom/google/common/collect/b0;.<init>:(Lcom/google/common/collect/z;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `contains`(`com.google.common.collect.b0` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/b0;.contains:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.collect.b0` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/b0;.get:(I)Ljava/lang/Object;` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.b0` v1 @kind this) @signature `Lcom/google/common/collect/b0;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `com.google.common.collect.r1` `iterator`(`com.google.common.collect.b0` v1 @kind this) @signature `Lcom/google/common/collect/b0;.iterator:()Lcom/google/common/collect/r1;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Iterator` `iterator`(`com.google.common.collect.b0` v1 @kind this) @signature `Lcom/google/common/collect/b0;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `int` `size`(`com.google.common.collect.b0` v1 @kind this) @signature `Lcom/google/common/collect/b0;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.b0` v2 @kind this) @signature `Lcom/google/common/collect/b0;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
