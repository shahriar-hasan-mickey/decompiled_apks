record `com.google.common.collect.f1` @kind class @AccessFlag  extends `com.google.common.collect.e0` @kind class {
  `com.google.common.collect.a1` `com.google.common.collect.f1.contents` @AccessFlag FINAL_TRANSIENT;
  `int` `com.google.common.collect.f1.j` @AccessFlag PRIVATE_FINAL_TRANSIENT;
  `com.google.common.collect.g0` `com.google.common.collect.f1.k` @AccessFlag PRIVATE_TRANSIENT;
}
global `com.google.common.collect.f1` `@@com.google.common.collect.f1.EMPTY` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/collect/f1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.collect.f1` v5 @kind this, `com.google.common.collect.a1` v6 @kind object) @signature `Lcom/google/common/collect/f1;.<init>:(Lcom/google/common/collect/a1;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `int` `count`(`com.google.common.collect.f1` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/collect/f1;.count:(Ljava/lang/Object;)I` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.common.collect.g0` `elementSet`(`com.google.common.collect.f1` v2 @kind this) @signature `Lcom/google/common/collect/f1;.elementSet:()Lcom/google/common/collect/g0;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `elementSet`(`com.google.common.collect.f1` v1 @kind this) @signature `Lcom/google/common/collect/f1;.elementSet:()Ljava/util/Set;` @AccessFlag PUBLIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.collect.u0$a` `getEntry`(`com.google.common.collect.f1` v1 @kind this, `int` v2 ) @signature `Lcom/google/common/collect/f1;.getEntry:(I)Lcom/google/common/collect/u0$a;` @AccessFlag  {

  # return;
}
procedure `boolean` `isPartialView`(`com.google.common.collect.f1` v1 @kind this) @signature `Lcom/google/common/collect/f1;.isPartialView:()Z` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.common.collect.f1` v1 @kind this) @signature `Lcom/google/common/collect/f1;.size:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.common.collect.f1` v1 @kind this) @signature `Lcom/google/common/collect/f1;.writeReplace:()Ljava/lang/Object;` @AccessFlag  {

  # return;
}
