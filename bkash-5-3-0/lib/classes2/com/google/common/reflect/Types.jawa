record `com.google.common.reflect.Types` @kind class @AccessFlag FINAL {
}
global `com.google.common.base.d` `@@com.google.common.reflect.Types.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.common.base.f` `@@com.google.common.reflect.Types.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/reflect/Types;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `a`(`java.lang.reflect.Type`[] v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lcom/google/common/reflect/Types;.a:([Ljava/lang/reflect/Type;Ljava/lang/String;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `b`(`java.lang.reflect.Type`[] v5 @kind object, `java.lang.String` v6 @kind object) @signature `Lcom/google/common/reflect/Types;.b:([Ljava/lang/reflect/Type;Ljava/lang/String;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Class` `c`(`java.lang.Class` v1 @kind object) @signature `Lcom/google/common/reflect/Types;.c:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.reflect.TypeVariable` `d`(`java.lang.reflect.GenericDeclaration` v2 @kind object, `java.lang.String` v3 @kind object, `java.lang.reflect.Type`[] v4 @kind object) @signature `Lcom/google/common/reflect/Types;.d:(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;` @AccessFlag STATIC {

  # return;
}
procedure `java.lang.reflect.TypeVariable` `e`(`java.lang.reflect.GenericDeclaration` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.reflect.Type`[] v3 @kind object) @signature `Lcom/google/common/reflect/Types;.e:(Ljava/lang/reflect/GenericDeclaration;Ljava/lang/String;[Ljava/lang/reflect/Type;)Ljava/lang/reflect/TypeVariable;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.String` `f`(`java.lang.reflect.Type` v1 @kind object) @signature `Lcom/google/common/reflect/Types;.f:(Ljava/lang/reflect/Type;)Ljava/lang/String;` @AccessFlag STATIC {

  # return;
}
