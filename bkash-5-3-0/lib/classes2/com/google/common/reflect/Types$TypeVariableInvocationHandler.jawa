record `com.google.common.reflect.Types$TypeVariableInvocationHandler` @kind class @AccessFlag FINAL extends `java.lang.reflect.InvocationHandler` @kind interface {
  `com.google.common.reflect.Types$e` `com.google.common.reflect.Types$TypeVariableInvocationHandler.g` @AccessFlag PRIVATE_FINAL;
}
global `com.google.common.collect.z` `@@com.google.common.reflect.Types$TypeVariableInvocationHandler.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/reflect/Types$TypeVariableInvocationHandler;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.reflect.Types$TypeVariableInvocationHandler` v0 @kind this, `com.google.common.reflect.Types$e` v1 @kind object) @signature `Lcom/google/common/reflect/Types$TypeVariableInvocationHandler;.<init>:(Lcom/google/common/reflect/Types$e;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `com.google.common.reflect.Types$e` `a`(`com.google.common.reflect.Types$TypeVariableInvocationHandler` v0 @kind object) @signature `Lcom/google/common/reflect/Types$TypeVariableInvocationHandler;.a:(Lcom/google/common/reflect/Types$TypeVariableInvocationHandler;)Lcom/google/common/reflect/Types$e;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `invoke`(`com.google.common.reflect.Types$TypeVariableInvocationHandler` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/reflect/Types$TypeVariableInvocationHandler;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
