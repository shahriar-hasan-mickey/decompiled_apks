record `com.google.common.base.b` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
procedure `void` `<init>`(`com.google.common.base.b` v0 @kind this) @signature `Lcom/google/common/base/b;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `com.google.common.base.b` `equals`() @signature `Lcom/google/common/base/b;.equals:()Lcom/google/common/base/b;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `com.google.common.base.b` `identity`() @signature `Lcom/google/common/base/b;.identity:()Lcom/google/common/base/b;` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `boolean` `doEquivalent`(`java.lang.Object` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/b;.doEquivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `int` `doHash`(`java.lang.Object` v0 @kind object) @signature `Lcom/google/common/base/b;.doHash:(Ljava/lang/Object;)I` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `boolean` `equivalent`(`com.google.common.base.b` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/b;.equivalent:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.k` `equivalentTo`(`com.google.common.base.b` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/base/b;.equivalentTo:(Ljava/lang/Object;)Lcom/google/common/base/k;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `int` `hash`(`com.google.common.base.b` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/base/b;.hash:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.b` `onResultOf`(`com.google.common.base.b` v1 @kind this, `com.google.common.base.d` v2 @kind object) @signature `Lcom/google/common/base/b;.onResultOf:(Lcom/google/common/base/d;)Lcom/google/common/base/b;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.b` `pairwise`(`com.google.common.base.b` v1 @kind this) @signature `Lcom/google/common/base/b;.pairwise:()Lcom/google/common/base/b;` @AccessFlag PUBLIC_FINAL {

  # return;
}
procedure `com.google.common.base.b$e` `wrap`(`com.google.common.base.b` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/base/b;.wrap:(Ljava/lang/Object;)Lcom/google/common/base/b$e;` @AccessFlag PUBLIC_FINAL {

  # return;
}
