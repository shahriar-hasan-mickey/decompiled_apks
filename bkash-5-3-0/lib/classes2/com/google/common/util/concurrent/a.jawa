record `com.google.common.util.concurrent.a` @kind class @AccessFlag PUBLIC_ABSTRACT extends `k8.a` @kind class, `com.google.common.util.concurrent.b` @kind interface {
  `java.lang.Object` `com.google.common.util.concurrent.a.g` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.a$e` `com.google.common.util.concurrent.a.h` @AccessFlag PRIVATE_VOLATILE;
  `com.google.common.util.concurrent.a$l` `com.google.common.util.concurrent.a.i` @AccessFlag PRIVATE_VOLATILE;
}
global `boolean` `@@com.google.common.util.concurrent.a.j` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.logging.Logger` `@@com.google.common.util.concurrent.a.k` @AccessFlag PRIVATE_STATIC_FINAL;
global `com.google.common.util.concurrent.a$b` `@@com.google.common.util.concurrent.a.l` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.Object` `@@com.google.common.util.concurrent.a.m` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/common/util/concurrent/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.a` v0 @kind this) @signature `Lcom/google/common/util/concurrent/a;.<init>:()V` @AccessFlag PROTECTED_CONSTRUCTOR {

  # return;
}
procedure `java.lang.String` `B`(`com.google.common.util.concurrent.a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/a;.B:(Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PRIVATE {

  # return;
}
procedure `com.google.common.util.concurrent.a$b` `d`() @signature `Lcom/google/common/util/concurrent/a;.d:()Lcom/google/common/util/concurrent/a$b;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `boolean` `e`() @signature `Lcom/google/common/util/concurrent/a;.e:()Z` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `f`(`com.google.common.util.concurrent.a` v0 @kind object) @signature `Lcom/google/common/util/concurrent/a;.f:(Lcom/google/common/util/concurrent/a;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `g`(`com.google.common.util.concurrent.a` v0 @kind object, `java.lang.Object` v1 @kind object) @signature `Lcom/google/common/util/concurrent/a;.g:(Lcom/google/common/util/concurrent/a;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `java.lang.Object` `h`(`com.google.common.util.concurrent.b` v0 @kind object) @signature `Lcom/google/common/util/concurrent/a;.h:(Lcom/google/common/util/concurrent/b;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `i`(`com.google.common.util.concurrent.a` v0 @kind object) @signature `Lcom/google/common/util/concurrent/a;.i:(Lcom/google/common/util/concurrent/a;)V` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.a$l` `j`(`com.google.common.util.concurrent.a` v0 @kind object) @signature `Lcom/google/common/util/concurrent/a;.j:(Lcom/google/common/util/concurrent/a;)Lcom/google/common/util/concurrent/a$l;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.a$l` `k`(`com.google.common.util.concurrent.a` v0 @kind object, `com.google.common.util.concurrent.a$l` v1 @kind object) @signature `Lcom/google/common/util/concurrent/a;.k:(Lcom/google/common/util/concurrent/a;Lcom/google/common/util/concurrent/a$l;)Lcom/google/common/util/concurrent/a$l;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.a$e` `l`(`com.google.common.util.concurrent.a` v0 @kind object) @signature `Lcom/google/common/util/concurrent/a;.l:(Lcom/google/common/util/concurrent/a;)Lcom/google/common/util/concurrent/a$e;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `com.google.common.util.concurrent.a$e` `m`(`com.google.common.util.concurrent.a` v0 @kind object, `com.google.common.util.concurrent.a$e` v1 @kind object) @signature `Lcom/google/common/util/concurrent/a;.m:(Lcom/google/common/util/concurrent/a;Lcom/google/common/util/concurrent/a$e;)Lcom/google/common/util/concurrent/a$e;` @AccessFlag STATIC_SYNTHETIC {

  # return;
}
procedure `void` `n`(`com.google.common.util.concurrent.a` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/google/common/util/concurrent/a;.n:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.util.concurrent.CancellationException` `p`(`java.lang.String` v1 @kind object, `java.lang.Throwable` v2 @kind object) @signature `Lcom/google/common/util/concurrent/a;.p:(Ljava/lang/String;Ljava/lang/Throwable;)Ljava/util/concurrent/CancellationException;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `com.google.common.util.concurrent.a$e` `q`(`com.google.common.util.concurrent.a` v4 @kind this, `com.google.common.util.concurrent.a$e` v5 @kind object) @signature `Lcom/google/common/util/concurrent/a;.q:(Lcom/google/common/util/concurrent/a$e;)Lcom/google/common/util/concurrent/a$e;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `r`(`com.google.common.util.concurrent.a` v4 @kind object) @signature `Lcom/google/common/util/concurrent/a;.r:(Lcom/google/common/util/concurrent/a;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `s`(`java.lang.Runnable` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object) @signature `Lcom/google/common/util/concurrent/a;.s:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `t`(`com.google.common.util.concurrent.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/common/util/concurrent/a;.t:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `u`(`com.google.common.util.concurrent.b` v6 @kind object) @signature `Lcom/google/common/util/concurrent/a;.u:(Lcom/google/common/util/concurrent/b;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `java.lang.Object` `v`(`java.util.concurrent.Future` v1 @kind object) @signature `Lcom/google/common/util/concurrent/a;.v:(Ljava/util/concurrent/Future;)Ljava/lang/Object;` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `y`(`com.google.common.util.concurrent.a` v3 @kind this) @signature `Lcom/google/common/util/concurrent/a;.y:()V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `z`(`com.google.common.util.concurrent.a` v4 @kind this, `com.google.common.util.concurrent.a$l` v5 @kind object) @signature `Lcom/google/common/util/concurrent/a;.z:(Lcom/google/common/util/concurrent/a$l;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `boolean` `A`(`com.google.common.util.concurrent.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/common/util/concurrent/a;.A:(Ljava/lang/Object;)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `a`(`com.google.common.util.concurrent.a` v3 @kind this, `java.lang.Runnable` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/google/common/util/concurrent/a;.a:(Ljava/lang/Runnable;Ljava/util/concurrent/Executor;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Throwable` `c`(`com.google.common.util.concurrent.a` v2 @kind this) @signature `Lcom/google/common/util/concurrent/a;.c:()Ljava/lang/Throwable;` @AccessFlag PROTECTED_FINAL {

  # return;
}
procedure `boolean` `cancel`(`com.google.common.util.concurrent.a` v7 @kind this, `boolean` v8 ) @signature `Lcom/google/common/util/concurrent/a;.cancel:(Z)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.a` v6 @kind this) @signature `Lcom/google/common/util/concurrent/a;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.common.util.concurrent.a` v19 @kind this, `long` v20 , `java.util.concurrent.TimeUnit` v22 @kind object) @signature `Lcom/google/common/util/concurrent/a;.get:(JLjava/util/concurrent/TimeUnit;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isCancelled`(`com.google.common.util.concurrent.a` v1 @kind this) @signature `Lcom/google/common/util/concurrent/a;.isCancelled:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `isDone`(`com.google.common.util.concurrent.a` v3 @kind this) @signature `Lcom/google/common/util/concurrent/a;.isDone:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `o`(`com.google.common.util.concurrent.a` v0 @kind this) @signature `Lcom/google/common/util/concurrent/a;.o:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `toString`(`com.google.common.util.concurrent.a` v5 @kind this) @signature `Lcom/google/common/util/concurrent/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `w`(`com.google.common.util.concurrent.a` v0 @kind this) @signature `Lcom/google/common/util/concurrent/a;.w:()V` @AccessFlag PROTECTED {

  # return;
}
procedure `java.lang.String` `x`(`com.google.common.util.concurrent.a` v3 @kind this) @signature `Lcom/google/common/util/concurrent/a;.x:()Ljava/lang/String;` @AccessFlag PROTECTED {

  # return;
}
