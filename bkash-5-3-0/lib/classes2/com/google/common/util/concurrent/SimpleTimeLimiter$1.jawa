record `com.google.common.util.concurrent.SimpleTimeLimiter$1` @kind class @AccessFlag  extends `java.lang.reflect.InvocationHandler` @kind interface {
  `java.lang.Object` `com.google.common.util.concurrent.SimpleTimeLimiter$1.g` @AccessFlag FINAL_SYNTHETIC;
  `long` `com.google.common.util.concurrent.SimpleTimeLimiter$1.h` @AccessFlag FINAL_SYNTHETIC;
  `java.util.concurrent.TimeUnit` `com.google.common.util.concurrent.SimpleTimeLimiter$1.i` @AccessFlag FINAL_SYNTHETIC;
  `java.util.Set` `com.google.common.util.concurrent.SimpleTimeLimiter$1.j` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.d` `com.google.common.util.concurrent.SimpleTimeLimiter$1.k` @AccessFlag FINAL_SYNTHETIC;
}
procedure `java.lang.Object` `invoke`(`com.google.common.util.concurrent.SimpleTimeLimiter$1` v6 @kind this, `java.lang.Object` v7 @kind object, `java.lang.reflect.Method` v8 @kind object, `java.lang.Object`[] v9 @kind object) @signature `Lcom/google/common/util/concurrent/SimpleTimeLimiter$1;.invoke:(Ljava/lang/Object;Ljava/lang/reflect/Method;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
