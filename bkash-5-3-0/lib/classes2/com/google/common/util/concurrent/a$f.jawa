record `com.google.common.util.concurrent.a$f` @kind class @AccessFlag FINAL extends `com.google.common.util.concurrent.a$b` @kind class {
  `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `com.google.common.util.concurrent.a$f.a` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `com.google.common.util.concurrent.a$f.b` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `com.google.common.util.concurrent.a$f.c` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `com.google.common.util.concurrent.a$f.d` @AccessFlag FINAL;
  `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` `com.google.common.util.concurrent.a$f.e` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.a$f` v1 @kind this, `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` v2 @kind object, `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` v3 @kind object, `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` v4 @kind object, `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` v5 @kind object, `java.util.concurrent.atomic.AtomicReferenceFieldUpdater` v6 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.<init>:(Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.common.util.concurrent.a$f` v1 @kind this, `com.google.common.util.concurrent.a` v2 @kind object, `com.google.common.util.concurrent.a$e` v3 @kind object, `com.google.common.util.concurrent.a$e` v4 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.a:(Lcom/google/common/util/concurrent/a;Lcom/google/common/util/concurrent/a$e;Lcom/google/common/util/concurrent/a$e;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `b`(`com.google.common.util.concurrent.a$f` v1 @kind this, `com.google.common.util.concurrent.a` v2 @kind object, `java.lang.Object` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.b:(Lcom/google/common/util/concurrent/a;Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `c`(`com.google.common.util.concurrent.a$f` v1 @kind this, `com.google.common.util.concurrent.a` v2 @kind object, `com.google.common.util.concurrent.a$l` v3 @kind object, `com.google.common.util.concurrent.a$l` v4 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.c:(Lcom/google/common/util/concurrent/a;Lcom/google/common/util/concurrent/a$l;Lcom/google/common/util/concurrent/a$l;)Z` @AccessFlag  {

  # return;
}
procedure `void` `d`(`com.google.common.util.concurrent.a$f` v1 @kind this, `com.google.common.util.concurrent.a$l` v2 @kind object, `com.google.common.util.concurrent.a$l` v3 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.d:(Lcom/google/common/util/concurrent/a$l;Lcom/google/common/util/concurrent/a$l;)V` @AccessFlag  {

  # return;
}
procedure `void` `e`(`com.google.common.util.concurrent.a$f` v1 @kind this, `com.google.common.util.concurrent.a$l` v2 @kind object, `java.lang.Thread` v3 @kind object) @signature `Lcom/google/common/util/concurrent/a$f;.e:(Lcom/google/common/util/concurrent/a$l;Ljava/lang/Thread;)V` @AccessFlag  {

  # return;
}
