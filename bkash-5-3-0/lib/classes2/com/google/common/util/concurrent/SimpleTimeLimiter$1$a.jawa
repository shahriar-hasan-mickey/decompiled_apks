record `com.google.common.util.concurrent.SimpleTimeLimiter$1$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `java.lang.reflect.Method` `com.google.common.util.concurrent.SimpleTimeLimiter$1$a.g` @AccessFlag FINAL_SYNTHETIC;
  `java.lang.Object`[] `com.google.common.util.concurrent.SimpleTimeLimiter$1$a.h` @AccessFlag FINAL_SYNTHETIC;
  `com.google.common.util.concurrent.SimpleTimeLimiter$1` `com.google.common.util.concurrent.SimpleTimeLimiter$1$a.i` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.google.common.util.concurrent.SimpleTimeLimiter$1$a` v0 @kind this, `com.google.common.util.concurrent.SimpleTimeLimiter$1` v1 @kind object, `java.lang.reflect.Method` v2 @kind object, `java.lang.Object`[] v3 @kind object) @signature `Lcom/google/common/util/concurrent/SimpleTimeLimiter$1$a;.<init>:(Lcom/google/common/util/concurrent/SimpleTimeLimiter$1;Ljava/lang/reflect/Method;[Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `java.lang.Object` `call`(`com.google.common.util.concurrent.SimpleTimeLimiter$1$a` v3 @kind this) @signature `Lcom/google/common/util/concurrent/SimpleTimeLimiter$1$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
