record `com.google.gson.internal.g` @kind class @AccessFlag PUBLIC_FINAL extends `java.util.AbstractMap` @kind class, `java.io.Serializable` @kind interface {
  `java.util.Comparator` `com.google.gson.internal.g.comparator` @AccessFlag ;
  `com.google.gson.internal.g$b` `com.google.gson.internal.g.entrySet` @AccessFlag PRIVATE;
  `com.google.gson.internal.g$e` `com.google.gson.internal.g.header` @AccessFlag FINAL;
  `com.google.gson.internal.g$c` `com.google.gson.internal.g.keySet` @AccessFlag PRIVATE;
  `int` `com.google.gson.internal.g.modCount` @AccessFlag ;
  `com.google.gson.internal.g$e` `com.google.gson.internal.g.root` @AccessFlag ;
  `int` `com.google.gson.internal.g.size` @AccessFlag ;
}
global `boolean` `@@com.google.gson.internal.g.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `java.util.Comparator` `@@com.google.gson.internal.g.g` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/google/gson/internal/g;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.google.gson.internal.g` v1 @kind this, `java.util.Comparator` v2 @kind object) @signature `Lcom/google/gson/internal/g;.<init>:(Ljava/util/Comparator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `boolean` `a`(`com.google.gson.internal.g` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/google/gson/internal/g;.a:(Ljava/lang/Object;Ljava/lang/Object;)Z` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `b`(`com.google.gson.internal.g` v7 @kind this, `com.google.gson.internal.g$e` v8 @kind object, `boolean` v9 ) @signature `Lcom/google/gson/internal/g;.b:(Lcom/google/gson/internal/g$e;Z)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `c`(`com.google.gson.internal.g` v2 @kind this, `com.google.gson.internal.g$e` v3 @kind object, `com.google.gson.internal.g$e` v4 @kind object) @signature `Lcom/google/gson/internal/g;.c:(Lcom/google/gson/internal/g$e;Lcom/google/gson/internal/g$e;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `d`(`com.google.gson.internal.g` v5 @kind this, `com.google.gson.internal.g$e` v6 @kind object) @signature `Lcom/google/gson/internal/g;.d:(Lcom/google/gson/internal/g$e;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `e`(`com.google.gson.internal.g` v5 @kind this, `com.google.gson.internal.g$e` v6 @kind object) @signature `Lcom/google/gson/internal/g;.e:(Lcom/google/gson/internal/g$e;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `readObject`(`com.google.gson.internal.g` v1 @kind this, `java.io.ObjectInputStream` v2 @kind object) @signature `Lcom/google/gson/internal/g;.readObject:(Ljava/io/ObjectInputStream;)V` @AccessFlag PRIVATE {

  # return;
}
procedure `java.lang.Object` `writeReplace`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.writeReplace:()Ljava/lang/Object;` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `clear`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.clear:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `containsKey`(`com.google.gson.internal.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/gson/internal/g;.containsKey:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `entrySet`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.entrySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `com.google.gson.internal.g$e` `find`(`com.google.gson.internal.g` v6 @kind this, `java.lang.Object` v7 @kind object, `boolean` v8 ) @signature `Lcom/google/gson/internal/g;.find:(Ljava/lang/Object;Z)Lcom/google/gson/internal/g$e;` @AccessFlag  {

  # return;
}
procedure `com.google.gson.internal.g$e` `findByEntry`(`com.google.gson.internal.g` v2 @kind this, `java.util.Map$Entry` v3 @kind object) @signature `Lcom/google/gson/internal/g;.findByEntry:(Ljava/util/Map$Entry;)Lcom/google/gson/internal/g$e;` @AccessFlag  {

  # return;
}
procedure `com.google.gson.internal.g$e` `findByObject`(`com.google.gson.internal.g` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/google/gson/internal/g;.findByObject:(Ljava/lang/Object;)Lcom/google/gson/internal/g$e;` @AccessFlag  {

  # return;
}
procedure `java.lang.Object` `get`(`com.google.gson.internal.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/gson/internal/g;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.util.Set` `keySet`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.keySet:()Ljava/util/Set;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `put`(`com.google.gson.internal.g` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/google/gson/internal/g;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `java.lang.Object` `remove`(`com.google.gson.internal.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/google/gson/internal/g;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `removeInternal`(`com.google.gson.internal.g` v5 @kind this, `com.google.gson.internal.g$e` v6 @kind object, `boolean` v7 ) @signature `Lcom/google/gson/internal/g;.removeInternal:(Lcom/google/gson/internal/g$e;Z)V` @AccessFlag  {

  # return;
}
procedure `com.google.gson.internal.g$e` `removeInternalByKey`(`com.google.gson.internal.g` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/google/gson/internal/g;.removeInternalByKey:(Ljava/lang/Object;)Lcom/google/gson/internal/g$e;` @AccessFlag  {

  # return;
}
procedure `int` `size`(`com.google.gson.internal.g` v1 @kind this) @signature `Lcom/google/gson/internal/g;.size:()I` @AccessFlag PUBLIC {

  # return;
}
