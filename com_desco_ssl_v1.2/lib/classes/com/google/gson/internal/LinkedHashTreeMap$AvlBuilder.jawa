record `com.google.gson.internal.LinkedHashTreeMap$AvlBuilder` @kind class @AccessFlag FINAL {
  `int` `com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.leavesSkipped` @AccessFlag PRIVATE;
  `int` `com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.leavesToSkip` @AccessFlag PRIVATE;
  `int` `com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.size` @AccessFlag PRIVATE;
  `com.google.gson.internal.LinkedHashTreeMap$Node` `com.google.gson.internal.LinkedHashTreeMap$AvlBuilder.stack` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.google.gson.internal.LinkedHashTreeMap$AvlBuilder` v0 @kind this) @signature `Lcom/google/gson/internal/LinkedHashTreeMap$AvlBuilder;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `add`(`com.google.gson.internal.LinkedHashTreeMap$AvlBuilder` v8 @kind this, `com.google.gson.internal.LinkedHashTreeMap$Node` v9 @kind object) @signature `Lcom/google/gson/internal/LinkedHashTreeMap$AvlBuilder;.add:(Lcom/google/gson/internal/LinkedHashTreeMap$Node;)V` @AccessFlag  {

  # return;
}
procedure `void` `reset`(`com.google.gson.internal.LinkedHashTreeMap$AvlBuilder` v3 @kind this, `int` v4 @name `targetSize`) @signature `Lcom/google/gson/internal/LinkedHashTreeMap$AvlBuilder;.reset:(I)V` @AccessFlag  {

  # return;
}
procedure `com.google.gson.internal.LinkedHashTreeMap$Node` `root`(`com.google.gson.internal.LinkedHashTreeMap$AvlBuilder` v2 @kind this) @signature `Lcom/google/gson/internal/LinkedHashTreeMap$AvlBuilder;.root:()Lcom/google/gson/internal/LinkedHashTreeMap$Node;` @AccessFlag  {

  # return;
}
