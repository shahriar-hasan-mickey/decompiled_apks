record `com.squareup.picasso.MarkableInputStream` @kind class @AccessFlag FINAL extends `java.io.InputStream` @kind class {
  `long` `com.squareup.picasso.MarkableInputStream.defaultMark` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.squareup.picasso.MarkableInputStream.in` @AccessFlag PRIVATE_FINAL;
  `long` `com.squareup.picasso.MarkableInputStream.limit` @AccessFlag PRIVATE;
  `long` `com.squareup.picasso.MarkableInputStream.offset` @AccessFlag PRIVATE;
  `long` `com.squareup.picasso.MarkableInputStream.reset` @AccessFlag PRIVATE;
}
global `int` `@@com.squareup.picasso.MarkableInputStream.DEFAULT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.squareup.picasso.MarkableInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object @name `in`) @signature `Lcom/squareup/picasso/MarkableInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`com.squareup.picasso.MarkableInputStream` v4 @kind this, `java.io.InputStream` v5 @kind object @name `in`, `int` v6 @name `size`) @signature `Lcom/squareup/picasso/MarkableInputStream;.<init>:(Ljava/io/InputStream;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `void` `setLimit`(`com.squareup.picasso.MarkableInputStream` v7 @kind this, `long` v8 @name `limit`) @signature `Lcom/squareup/picasso/MarkableInputStream;.setLimit:(J)V` @AccessFlag PRIVATE {

  # return;
}
procedure `void` `skip`(`com.squareup.picasso.MarkableInputStream` v7 @kind this, `long` v8 @name `current`, `long` v10 @name `target`) @signature `Lcom/squareup/picasso/MarkableInputStream;.skip:(JJ)V` @AccessFlag PRIVATE {

  # return;
}
procedure `int` `available`(`com.squareup.picasso.MarkableInputStream` v1 @kind this) @signature `Lcom/squareup/picasso/MarkableInputStream;.available:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `close`(`com.squareup.picasso.MarkableInputStream` v1 @kind this) @signature `Lcom/squareup/picasso/MarkableInputStream;.close:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `mark`(`com.squareup.picasso.MarkableInputStream` v2 @kind this, `int` v3 @name `readLimit`) @signature `Lcom/squareup/picasso/MarkableInputStream;.mark:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `markSupported`(`com.squareup.picasso.MarkableInputStream` v1 @kind this) @signature `Lcom/squareup/picasso/MarkableInputStream;.markSupported:()Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.squareup.picasso.MarkableInputStream` v6 @kind this) @signature `Lcom/squareup/picasso/MarkableInputStream;.read:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.squareup.picasso.MarkableInputStream` v6 @kind this, `byte`[] v7 @kind object @name `buffer`) @signature `Lcom/squareup/picasso/MarkableInputStream;.read:([B)I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `read`(`com.squareup.picasso.MarkableInputStream` v6 @kind this, `byte`[] v7 @kind object @name `buffer`, `int` v8 @name `offset`, `int` v9 @name `length`) @signature `Lcom/squareup/picasso/MarkableInputStream;.read:([BII)I` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.squareup.picasso.MarkableInputStream` v2 @kind this) @signature `Lcom/squareup/picasso/MarkableInputStream;.reset:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `reset`(`com.squareup.picasso.MarkableInputStream` v5 @kind this, `long` v6 @name `token`) @signature `Lcom/squareup/picasso/MarkableInputStream;.reset:(J)V` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `savePosition`(`com.squareup.picasso.MarkableInputStream` v6 @kind this, `int` v7 @name `readLimit`) @signature `Lcom/squareup/picasso/MarkableInputStream;.savePosition:(I)J` @AccessFlag PUBLIC {

  # return;
}
procedure `long` `skip`(`com.squareup.picasso.MarkableInputStream` v5 @kind this, `long` v6 @name `byteCount`) @signature `Lcom/squareup/picasso/MarkableInputStream;.skip:(J)J` @AccessFlag PUBLIC {

  # return;
}
