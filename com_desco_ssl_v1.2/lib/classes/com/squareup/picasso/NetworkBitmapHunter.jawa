record `com.squareup.picasso.NetworkBitmapHunter` @kind class @AccessFlag  extends `com.squareup.picasso.BitmapHunter` @kind class {
  `com.squareup.picasso.Downloader` `com.squareup.picasso.NetworkBitmapHunter.downloader` @AccessFlag PRIVATE_FINAL;
  `int` `com.squareup.picasso.NetworkBitmapHunter.retryCount` @AccessFlag ;
}
global `int` `@@com.squareup.picasso.NetworkBitmapHunter.DEFAULT_RETRY_COUNT` @AccessFlag STATIC_FINAL;
global `int` `@@com.squareup.picasso.NetworkBitmapHunter.MARKER` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.squareup.picasso.NetworkBitmapHunter` v1 @kind this, `com.squareup.picasso.Picasso` v2 @kind object @name `picasso`, `com.squareup.picasso.Dispatcher` v3 @kind object @name `dispatcher`, `com.squareup.picasso.Cache` v4 @kind object @name `cache`, `com.squareup.picasso.Stats` v5 @kind object @name `stats`, `com.squareup.picasso.Action` v6 @kind object @name `action`, `com.squareup.picasso.Downloader` v7 @kind object @name `downloader`) @signature `Lcom/squareup/picasso/NetworkBitmapHunter;.<init>:(Lcom/squareup/picasso/Picasso;Lcom/squareup/picasso/Dispatcher;Lcom/squareup/picasso/Cache;Lcom/squareup/picasso/Stats;Lcom/squareup/picasso/Action;Lcom/squareup/picasso/Downloader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {

  # return;
}
procedure `android.graphics.Bitmap` `decodeStream`(`com.squareup.picasso.NetworkBitmapHunter` v12 @kind this, `java.io.InputStream` v13 @kind object @name `stream`, `com.squareup.picasso.Request` v14 @kind object @name `data`) @signature `Lcom/squareup/picasso/NetworkBitmapHunter;.decodeStream:(Ljava/io/InputStream;Lcom/squareup/picasso/Request;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {

  # return;
}
procedure `android.graphics.Bitmap` `decode`(`com.squareup.picasso.NetworkBitmapHunter` v10 @kind this, `com.squareup.picasso.Request` v11 @kind object @name `data`) @signature `Lcom/squareup/picasso/NetworkBitmapHunter;.decode:(Lcom/squareup/picasso/Request;)Landroid/graphics/Bitmap;` @AccessFlag  {

  # return;
}
procedure `boolean` `shouldRetry`(`com.squareup.picasso.NetworkBitmapHunter` v4 @kind this, `boolean` v5 @name `airplaneMode`, `android.net.NetworkInfo` v6 @kind object @name `info`) @signature `Lcom/squareup/picasso/NetworkBitmapHunter;.shouldRetry:(ZLandroid/net/NetworkInfo;)Z` @AccessFlag  {

  # return;
}
procedure `boolean` `supportsReplay`(`com.squareup.picasso.NetworkBitmapHunter` v1 @kind this) @signature `Lcom/squareup/picasso/NetworkBitmapHunter;.supportsReplay:()Z` @AccessFlag  {

  # return;
}
