record `android.support.graphics.drawable.VectorDrawableCommon` @kind class @AccessFlag ABSTRACT extends `android.graphics.drawable.Drawable` @kind class, `android.support.v4.graphics.drawable.TintAwareDrawable` @kind interface {
  `android.graphics.drawable.Drawable` `android.support.graphics.drawable.VectorDrawableCommon.mDelegateDrawable` @AccessFlag ;
}
procedure `void` `<init>`(`android.support.graphics.drawable.VectorDrawableCommon` v0 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.<init>:()V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `android.content.res.TypedArray` `obtainAttributes`(`android.content.res.Resources` v1 @kind object @name `res`, `android.content.res.Resources$Theme` v2 @kind object @name `theme`, `android.util.AttributeSet` v3 @kind object @name `set`, `int`[] v4 @kind object @name `attrs`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.obtainAttributes:(Landroid/content/res/Resources;Landroid/content/res/Resources$Theme;Landroid/util/AttributeSet;[I)Landroid/content/res/TypedArray;` @AccessFlag STATIC {

  # return;
}
procedure `void` `applyTheme`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `android.content.res.Resources$Theme` v2 @kind object @name `t`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.applyTheme:(Landroid/content/res/Resources$Theme;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `clearColorFilter`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.clearColorFilter:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.ColorFilter` `getColorFilter`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getColorFilter:()Landroid/graphics/ColorFilter;` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.drawable.Drawable` `getCurrent`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getCurrent:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumHeight`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getMinimumHeight:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `int` `getMinimumWidth`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getMinimumWidth:()I` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `getPadding`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `android.graphics.Rect` v2 @kind object @name `padding`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getPadding:(Landroid/graphics/Rect;)Z` @AccessFlag PUBLIC {

  # return;
}
procedure `int`[] `getState`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getState:()[I` @AccessFlag PUBLIC {

  # return;
}
procedure `android.graphics.Region` `getTransparentRegion`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.getTransparentRegion:()Landroid/graphics/Region;` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `jumpToCurrentState`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.jumpToCurrentState:()V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `onBoundsChange`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `android.graphics.Rect` v2 @kind object @name `bounds`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.onBoundsChange:(Landroid/graphics/Rect;)V` @AccessFlag PROTECTED {

  # return;
}
procedure `boolean` `onLevelChange`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `int` v2 @name `level`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.onLevelChange:(I)Z` @AccessFlag PROTECTED {

  # return;
}
procedure `void` `setChangingConfigurations`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `int` v2 @name `configs`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setChangingConfigurations:(I)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setColorFilter`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `int` v2 @name `color`, `android.graphics.PorterDuff$Mode` v3 @kind object @name `mode`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setColorFilter:(ILandroid/graphics/PorterDuff$Mode;)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setFilterBitmap`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `boolean` v2 @name `filter`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setFilterBitmap:(Z)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setHotspot`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `float` v2 @name `x`, `float` v3 @name `y`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setHotspot:(FF)V` @AccessFlag PUBLIC {

  # return;
}
procedure `void` `setHotspotBounds`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `int` v2 @name `left`, `int` v3 @name `top`, `int` v4 @name `right`, `int` v5 @name `bottom`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setHotspotBounds:(IIII)V` @AccessFlag PUBLIC {

  # return;
}
procedure `boolean` `setState`(`android.support.graphics.drawable.VectorDrawableCommon` v1 @kind this, `int`[] v2 @kind object @name `stateSet`) @signature `Landroid/support/graphics/drawable/VectorDrawableCommon;.setState:([I)Z` @AccessFlag PUBLIC {

  # return;
}
