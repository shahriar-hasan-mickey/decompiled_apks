record `android.support.graphics.drawable.PathParser$PathDataNode` @kind class @AccessFlag PUBLIC {
  `float`[] `android.support.graphics.drawable.PathParser$PathDataNode.params` @AccessFlag ;
  `char` `android.support.graphics.drawable.PathParser$PathDataNode.type` @AccessFlag ;
}
procedure `void` `<init>`(`android.support.graphics.drawable.PathParser$PathDataNode` v0 @kind this, `char` v1 @name `type`, `float`[] v2 @kind object @name `params`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.<init>:(C[F)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `<init>`(`android.support.graphics.drawable.PathParser$PathDataNode` v3 @kind this, `android.support.graphics.drawable.PathParser$PathDataNode` v4 @kind object @name `n`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.<init>:(Landroid/support/graphics/drawable/PathParser$PathDataNode;)V` @AccessFlag CONSTRUCTOR {

  # return;
}
procedure `void` `addCommand`(`android.graphics.Path` v24 @kind object @name `path`, `float`[] v25 @kind object @name `current`, `char` v26 @name `previousCmd`, `char` v27 @name `cmd`, `float`[] v28 @kind object @name `val`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.addCommand:(Landroid/graphics/Path;[FCC[F)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `arcToBezier`(`android.graphics.Path` v61 @kind object @name `p`, `double` v62 @name `cx`, `double` v64 @name `cy`, `double` v66 @name `a`, `double` v68 @name `b`, `double` v70 @name `e1x`, `double` v72 @name `e1y`, `double` v74 @name `theta`, `double` v76 @name `start`, `double` v78 @name `sweep`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.arcToBezier:(Landroid/graphics/Path;DDDDDDDDD)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `drawArc`(`android.graphics.Path` v58 @kind object @name `p`, `float` v59 @name `x0`, `float` v60 @name `y0`, `float` v61 @name `x1`, `float` v62 @name `y1`, `float` v63 @name `a`, `float` v64 @name `b`, `float` v65 @name `theta`, `boolean` v66 @name `isMoreThanHalf`, `boolean` v67 @name `isPositiveArc`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.drawArc:(Landroid/graphics/Path;FFFFFFFZZ)V` @AccessFlag PRIVATE_STATIC {

  # return;
}
procedure `void` `nodesToPath`(`android.support.graphics.drawable.PathParser$PathDataNode`[] v5 @kind object @name `node`, `android.graphics.Path` v6 @kind object @name `path`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.nodesToPath:([Landroid/support/graphics/drawable/PathParser$PathDataNode;Landroid/graphics/Path;)V` @AccessFlag PUBLIC_STATIC {

  # return;
}
procedure `void` `interpolatePathDataNode`(`android.support.graphics.drawable.PathParser$PathDataNode` v4 @kind this, `android.support.graphics.drawable.PathParser$PathDataNode` v5 @kind object @name `nodeFrom`, `android.support.graphics.drawable.PathParser$PathDataNode` v6 @kind object @name `nodeTo`, `float` v7 @name `fraction`) @signature `Landroid/support/graphics/drawable/PathParser$PathDataNode;.interpolatePathDataNode:(Landroid/support/graphics/drawable/PathParser$PathDataNode;Landroid/support/graphics/drawable/PathParser$PathDataNode;F)V` @AccessFlag PUBLIC {

  # return;
}
