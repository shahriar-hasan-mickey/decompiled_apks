record `retrofit2.ServiceMethod` @kind class @AccessFlag FINAL {
  `okhttp3.HttpUrl` `retrofit2.ServiceMethod.baseUrl` @AccessFlag PRIVATE_FINAL;
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod.callAdapter` @AccessFlag FINAL;
  `okhttp3.Call$Factory` `retrofit2.ServiceMethod.callFactory` @AccessFlag FINAL;
  `okhttp3.MediaType` `retrofit2.ServiceMethod.contentType` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.ServiceMethod.hasBody` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `retrofit2.ServiceMethod.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.ServiceMethod.httpMethod` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.ServiceMethod.isFormEncoded` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.ServiceMethod.isMultipart` @AccessFlag PRIVATE_FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod.parameterHandlers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.ServiceMethod.relativeUrl` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ServiceMethod.responseConverter` @AccessFlag PRIVATE_FINAL;
}
global `java.lang.String` `@@retrofit2.ServiceMethod.PARAM` @AccessFlag STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @AccessFlag STATIC_FINAL;
global `java.util.regex.Pattern` `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/ServiceMethod;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L252068.  v0:= "\\{([a-zA-Z][a-zA-Z0-9_-]*)\\}" @kind object;
  #L25206c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L252072.  v0:= temp @kind object;
  #L252074.  `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L252078.  v0:= "[a-zA-Z][a-zA-Z0-9_-]*" @kind object;
  #L25207c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L252082.  v0:= temp @kind object;
  #L252084.  `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L252088.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod` v1 @kind this, `retrofit2.ServiceMethod$Builder` v2 @kind object) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L25209c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2520a2.  v0:= v2.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2520a6.  call temp:= `callFactory`(v0) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @kind virtual;
  #L2520ac.  v0:= temp @kind object;
  #L2520ae.  v1.`retrofit2.ServiceMethod.callFactory` @type ^`okhttp3.Call$Factory` := v0 @kind object;
  #L2520b2.  v0:= v2.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L2520b6.  v1.`retrofit2.ServiceMethod.callAdapter` @type ^`retrofit2.CallAdapter` := v0 @kind object;
  #L2520ba.  v0:= v2.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2520be.  call temp:= `baseUrl`(v0) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @kind virtual;
  #L2520c4.  v0:= temp @kind object;
  #L2520c6.  v1.`retrofit2.ServiceMethod.baseUrl` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L2520ca.  v0:= v2.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` @kind object;
  #L2520ce.  v1.`retrofit2.ServiceMethod.responseConverter` @type ^`retrofit2.Converter` := v0 @kind object;
  #L2520d2.  v0:= v2.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L2520d6.  v1.`retrofit2.ServiceMethod.httpMethod` @type ^`java.lang.String` := v0 @kind object;
  #L2520da.  v0:= v2.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L2520de.  v1.`retrofit2.ServiceMethod.relativeUrl` @type ^`java.lang.String` := v0 @kind object;
  #L2520e2.  v0:= v2.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` @kind object;
  #L2520e6.  v1.`retrofit2.ServiceMethod.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L2520ea.  v0:= v2.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L2520ee.  v1.`retrofit2.ServiceMethod.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L2520f2.  v0:= v2.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L2520f6.  v1.`retrofit2.ServiceMethod.hasBody` @type ^`boolean` := v0 @kind boolean;
  #L2520fa.  v0:= v2.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L2520fe.  v1.`retrofit2.ServiceMethod.isFormEncoded` @type ^`boolean` := v0 @kind boolean;
  #L252102.  v0:= v2.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L252106.  v1.`retrofit2.ServiceMethod.isMultipart` @type ^`boolean` := v0 @kind boolean;
  #L25210a.  v0:= v2.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L25210e.  v1.`retrofit2.ServiceMethod.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v0 @kind object;
  #L252112.  return @kind void;
}
procedure `java.lang.Class` `boxIfPrimitive`(`java.lang.Class` v1 @kind object) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @AccessFlag STATIC {
    temp;
    v0;

  #L252124.  v0:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L252128.  if v0 != v1 then goto L252132;
  #L25212c.  v1:= constclass @type ^`java.lang.Boolean` @kind object;
  #L252130.  return v1 @kind object;
  #L252132.  v0:= `@@java.lang.Byte.TYPE` @type ^`java.lang.Class` @kind object;
  #L252136.  if v0 != v1 then goto L252140;
  #L25213a.  v1:= constclass @type ^`java.lang.Byte` @kind object;
  #L25213e.  goto L252130;
  #L252140.  v0:= `@@java.lang.Character.TYPE` @type ^`java.lang.Class` @kind object;
  #L252144.  if v0 != v1 then goto L25214e;
  #L252148.  v1:= constclass @type ^`java.lang.Character` @kind object;
  #L25214c.  goto L252130;
  #L25214e.  v0:= `@@java.lang.Double.TYPE` @type ^`java.lang.Class` @kind object;
  #L252152.  if v0 != v1 then goto L25215c;
  #L252156.  v1:= constclass @type ^`java.lang.Double` @kind object;
  #L25215a.  goto L252130;
  #L25215c.  v0:= `@@java.lang.Float.TYPE` @type ^`java.lang.Class` @kind object;
  #L252160.  if v0 != v1 then goto L25216a;
  #L252164.  v1:= constclass @type ^`java.lang.Float` @kind object;
  #L252168.  goto L252130;
  #L25216a.  v0:= `@@java.lang.Integer.TYPE` @type ^`java.lang.Class` @kind object;
  #L25216e.  if v0 != v1 then goto L252178;
  #L252172.  v1:= constclass @type ^`java.lang.Integer` @kind object;
  #L252176.  goto L252130;
  #L252178.  v0:= `@@java.lang.Long.TYPE` @type ^`java.lang.Class` @kind object;
  #L25217c.  if v0 != v1 then goto L252186;
  #L252180.  v1:= constclass @type ^`java.lang.Long` @kind object;
  #L252184.  goto L252130;
  #L252186.  v0:= `@@java.lang.Short.TYPE` @type ^`java.lang.Class` @kind object;
  #L25218a.  if v0 != v1 then goto L252130;
  #L25218e.  v1:= constclass @type ^`java.lang.Short` @kind object;
  #L252192.  goto L252130;
}
procedure `java.util.Set` `parsePathParameters`(`java.lang.String` v3 @kind object @name `path`) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2521a4.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L2521a8.  call temp:= `matcher`(v2, v3) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L2521ae.  v0:= temp @kind object;
  #L2521b0.  v1:= new `java.util.LinkedHashSet`;
  #L2521b4.  call `<init>`(v1) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L2521ba.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L2521c0.  v2:= temp;
  #L2521c2.  if v2 == 0 then goto L2521d8;
  #L2521c6.  v2:= 1I;
  #L2521c8.  call temp:= `group`(v0, v2) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L2521ce.  v2:= temp @kind object;
  #L2521d0.  call temp:= `add`(v1, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2521d6.  goto L2521ba;
  #L2521d8.  return v1 @kind object;
}
procedure `okhttp3.Request` `toRequest`(`retrofit2.ServiceMethod` v12 @kind this, `java.lang.Object`[] v13 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod;.toRequest:([Ljava/lang/Object;)Lokhttp3/Request;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2521ec.  v0:= new `retrofit2.RequestBuilder`;
  #L2521f0.  v1:= v12.`retrofit2.ServiceMethod.httpMethod` @type ^`java.lang.String` @kind object;
  #L2521f4.  v2:= v12.`retrofit2.ServiceMethod.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L2521f8.  v3:= v12.`retrofit2.ServiceMethod.relativeUrl` @type ^`java.lang.String` @kind object;
  #L2521fc.  v4:= v12.`retrofit2.ServiceMethod.headers` @type ^`okhttp3.Headers` @kind object;
  #L252200.  v5:= v12.`retrofit2.ServiceMethod.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L252204.  v6:= v12.`retrofit2.ServiceMethod.hasBody` @type ^`boolean` @kind boolean;
  #L252208.  v7:= v12.`retrofit2.ServiceMethod.isFormEncoded` @type ^`boolean` @kind boolean;
  #L25220c.  v8:= v12.`retrofit2.ServiceMethod.isMultipart` @type ^`boolean` @kind boolean;
  #L252210.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lretrofit2/RequestBuilder;.<init>:(Ljava/lang/String;Lokhttp3/HttpUrl;Ljava/lang/String;Lokhttp3/Headers;Lokhttp3/MediaType;ZZZ)V` @kind direct;
  #L252216.  v10:= v12.`retrofit2.ServiceMethod.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L25221a.  v10:= (`retrofit2.ParameterHandler`[]) v10 @kind object;
  #L25221e.  if v13 == 0 then goto L25227e;
  #L252222.  v9:= length @variable v13;
  #L252224.  v1:= length @variable v10;
  #L252226.  if v9 == v1 then goto L252282;
  #L25222a.  v1:= new `java.lang.IllegalArgumentException`;
  #L25222e.  v2:= new `java.lang.StringBuilder`;
  #L252232.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L252238.  v3:= "Argument count (" @kind object;
  #L25223c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252242.  v2:= temp @kind object;
  #L252244.  call temp:= `append`(v2, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25224a.  v2:= temp @kind object;
  #L25224c.  v3:= ") doesn't match expected count (" @kind object;
  #L252250.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L252256.  v2:= temp @kind object;
  #L252258.  v3:= length @variable v10;
  #L25225a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L252260.  v2:= temp @kind object;
  #L252262.  v3:= ")" @kind object;
  #L252266.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25226c.  v2:= temp @kind object;
  #L25226e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L252274.  v2:= temp @kind object;
  #L252276.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L25227c.  throw v1;
  #L25227e.  v9:= 0I;
  #L252280.  goto L252224;
  #L252282.  v11:= 0I;
  #L252284.  if v11 >= v9 then goto L25229c;
  #L252288.  v1:= v10[v11] @kind object;
  #L25228c.  v2:= v13[v11] @kind object;
  #L252290.  call `apply`(v1, v0, v2) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L252296.  v11:= v11 + 1;
  #L25229a.  goto L252284;
  #L25229c.  call temp:= `build`(v0) @signature `Lretrofit2/RequestBuilder;.build:()Lokhttp3/Request;` @kind virtual;
  #L2522a2.  v1:= temp @kind object;
  #L2522a4.  return v1 @kind object;
}
procedure `java.lang.Object` `toResponse`(`retrofit2.ServiceMethod` v1 @kind this, `okhttp3.ResponseBody` v2 @kind object @name `body`) @signature `Lretrofit2/ServiceMethod;.toResponse:(Lokhttp3/ResponseBody;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L2522b8.  v0:= v1.`retrofit2.ServiceMethod.responseConverter` @type ^`retrofit2.Converter` @kind object;
  #L2522bc.  call temp:= `convert`(v0, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2522c2.  v0:= temp @kind object;
  #L2522c4.  return v0 @kind object;
}
