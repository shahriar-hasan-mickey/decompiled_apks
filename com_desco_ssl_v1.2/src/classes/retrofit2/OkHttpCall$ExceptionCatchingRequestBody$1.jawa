record `retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `retrofit2.OkHttpCall$ExceptionCatchingRequestBody` `retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1` v0 @kind this, `retrofit2.OkHttpCall$ExceptionCatchingRequestBody` v1 @kind object @name `this$0`, `okio.Source` v2 @kind object @name `x0`) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingRequestBody$1;.<init>:(Lretrofit2/OkHttpCall$ExceptionCatchingRequestBody;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3560ac.  v0.`retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1.this$0` @type ^`retrofit2.OkHttpCall$ExceptionCatchingRequestBody` := v1 @kind object;
  #L3560b0.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L3560b6.  return @kind void;
}
procedure `long` `read`(`retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1` v4 @kind this, `okio.Buffer` v5 @kind object @name `sink`, `long` v6 @name `byteCount`) @signature `Lretrofit2/OkHttpCall$ExceptionCatchingRequestBody$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3560c8.  call temp:= `read`(v4, v5, v6) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L3560ce.  v2:= temp @kind wide;
  #L3560d0.  return v2 @kind wide;
  #L3560d2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L3560d4.  v1:= v4.`retrofit2.OkHttpCall$ExceptionCatchingRequestBody$1.this$0` @type ^`retrofit2.OkHttpCall$ExceptionCatchingRequestBody` @kind object;
  #L3560d8.  v1.`retrofit2.OkHttpCall$ExceptionCatchingRequestBody.thrownException` @type ^`java.io.IOException` := v0 @kind object;
  #L3560dc.  throw v0;
  catch `java.io.IOException` @[L3560c8..L3560ce] goto L3560d2;
}
