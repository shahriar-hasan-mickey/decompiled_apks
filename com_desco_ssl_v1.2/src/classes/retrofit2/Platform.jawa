record `retrofit2.Platform` @kind class @AccessFlag  {
}
global `retrofit2.Platform` `@@retrofit2.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lretrofit2/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L24ed94.  call temp:= `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @kind static;
  #L24ed9a.  v0:= temp @kind object;
  #L24ed9c.  `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` := v0 @kind object;
  #L24eda0.  return @kind void;
}
procedure `void` `<init>`(`retrofit2.Platform` v0 @kind this) @signature `Lretrofit2/Platform;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24edb4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24edba.  return @kind void;
}
procedure `retrofit2.Platform` `findPlatform`() @signature `Lretrofit2/Platform;.findPlatform:()Lretrofit2/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L24edcc.  v0:= "android.os.Build" @kind object;
  #L24edd0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24edd6.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L24edda.  if v0 == 0 then goto L24edec;
  #L24edde.  v0:= new `retrofit2.Platform$Android`;
  #L24ede2.  call `<init>`(v0) @signature `Lretrofit2/Platform$Android;.<init>:()V` @kind direct;
  #L24ede8.  return v0 @kind object;
  #L24edea.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L24edec.  v0:= "java.util.Optional" @kind object;
  #L24edf0.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24edf6.  v0:= new `retrofit2.Platform$Java8`;
  #L24edfa.  call `<init>`(v0) @signature `Lretrofit2/Platform$Java8;.<init>:()V` @kind direct;
  #L24ee00.  goto L24ede8;
  #L24ee02.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L24ee04.  v0:= "org.robovm.apple.foundation.NSObject" @kind object;
  #L24ee08.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L24ee0e.  v0:= new `retrofit2.Platform$IOS`;
  #L24ee12.  call `<init>`(v0) @signature `Lretrofit2/Platform$IOS;.<init>:()V` @kind direct;
  #L24ee18.  goto L24ede8;
  #L24ee1a.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L24ee1c.  v0:= new `retrofit2.Platform`;
  #L24ee20.  call `<init>`(v0) @signature `Lretrofit2/Platform;.<init>:()V` @kind direct;
  #L24ee26.  goto L24ede8;
  catch `java.lang.ClassNotFoundException` @[L24edcc..L24ede8] goto L24edea;
  catch `java.lang.ClassNotFoundException` @[L24edec..L24ee00] goto L24ee02;
  catch `java.lang.ClassNotFoundException` @[L24ee04..L24ee18] goto L24ee1a;
}
procedure `retrofit2.Platform` `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @AccessFlag STATIC {
    temp;
    v0;

  #L24ee60.  v0:= `@@retrofit2.Platform.PLATFORM` @type ^`retrofit2.Platform` @kind object;
  #L24ee64.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter$Factory` `defaultCallAdapterFactory`(`retrofit2.Platform` v1 @kind this, `java.util.concurrent.Executor` v2 @kind object @name `callbackExecutor`) @signature `Lretrofit2/Platform;.defaultCallAdapterFactory:(Ljava/util/concurrent/Executor;)Lretrofit2/CallAdapter$Factory;` @AccessFlag  {
    temp;
    v0;

  #L24ee78.  if v2 == 0 then goto L24ee88;
  #L24ee7c.  v0:= new `retrofit2.ExecutorCallAdapterFactory`;
  #L24ee80.  call `<init>`(v0, v2) @signature `Lretrofit2/ExecutorCallAdapterFactory;.<init>:(Ljava/util/concurrent/Executor;)V` @kind direct;
  #L24ee86.  return v0 @kind object;
  #L24ee88.  v0:= `@@retrofit2.DefaultCallAdapterFactory.INSTANCE` @type ^`retrofit2.CallAdapter$Factory` @kind object;
  #L24ee8c.  goto L24ee86;
}
procedure `java.util.concurrent.Executor` `defaultCallbackExecutor`(`retrofit2.Platform` v1 @kind this) @signature `Lretrofit2/Platform;.defaultCallbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag  {
    temp;
    v0;

  #L24eea0.  v0:= 0I;
  #L24eea2.  return v0 @kind object;
}
procedure `java.lang.Object` `invokeDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`, `java.lang.Class` v3 @kind object, `java.lang.Object` v4 @kind object @name `object`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/Platform;.invokeDefaultMethod:(Ljava/lang/reflect/Method;Ljava/lang/Class;Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L24eeb4.  v0:= new `java.lang.UnsupportedOperationException`;
  #L24eeb8.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L24eebe.  throw v0;
}
procedure `boolean` `isDefaultMethod`(`retrofit2.Platform` v1 @kind this, `java.lang.reflect.Method` v2 @kind object @name `method`) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @AccessFlag  {
    temp;
    v0;

  #L24eed0.  v0:= 0I;
  #L24eed2.  return v0;
}
