record `retrofit2.Retrofit` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.List` `retrofit2.Retrofit.adapterFactories` @AccessFlag PRIVATE_FINAL;
  `okhttp3.HttpUrl` `retrofit2.Retrofit.baseUrl` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Call$Factory` `retrofit2.Retrofit.callFactory` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `retrofit2.Retrofit.callbackExecutor` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `retrofit2.Retrofit.converterFactories` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `retrofit2.Retrofit.serviceMethodCache` @AccessFlag PRIVATE_FINAL;
  `boolean` `retrofit2.Retrofit.validateEagerly` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.Retrofit` v1 @kind this, `okhttp3.Call$Factory` v2 @kind object @name `callFactory`, `okhttp3.HttpUrl` v3 @kind object @name `baseUrl`, `java.util.List` v4 @kind object, `java.util.List` v5 @kind object, `java.util.concurrent.Executor` v6 @kind object @name `callbackExecutor`, `boolean` v7 @name `validateEagerly`) @signature `Lretrofit2/Retrofit;.<init>:(Lokhttp3/Call$Factory;Lokhttp3/HttpUrl;Ljava/util/List;Ljava/util/List;Ljava/util/concurrent/Executor;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L24fb24.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24fb2a.  v0:= new `java.util.LinkedHashMap`;
  #L24fb2e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L24fb34.  v1.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` := v0 @kind object;
  #L24fb38.  v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` := v2 @kind object;
  #L24fb3c.  v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L24fb40.  call temp:= `unmodifiableList`(v4) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L24fb46.  v0:= temp @kind object;
  #L24fb48.  v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` := v0 @kind object;
  #L24fb4c.  call temp:= `unmodifiableList`(v5) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L24fb52.  v0:= temp @kind object;
  #L24fb54.  v1.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` := v0 @kind object;
  #L24fb58.  v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` := v6 @kind object;
  #L24fb5c.  v1.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` := v7 @kind boolean;
  #L24fb60.  return @kind void;
}
procedure `void` `eagerlyValidateMethods`(`retrofit2.Retrofit` v6 @kind this, `java.lang.Class` v7 @kind object) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24fb74.  call temp:= `get`() @signature `Lretrofit2/Platform;.get:()Lretrofit2/Platform;` @kind static;
  #L24fb7a.  v1:= temp @kind object;
  #L24fb7c.  call temp:= `getDeclaredMethods`(v7) @signature `Ljava/lang/Class;.getDeclaredMethods:()[Ljava/lang/reflect/Method;` @kind virtual;
  #L24fb82.  v3:= temp @kind object;
  #L24fb84.  v4:= length @variable v3;
  #L24fb86.  v2:= 0I;
  #L24fb88.  if v2 >= v4 then goto L24fba8;
  #L24fb8c.  v0:= v3[v2] @kind object;
  #L24fb90.  call temp:= `isDefaultMethod`(v1, v0) @signature `Lretrofit2/Platform;.isDefaultMethod:(Ljava/lang/reflect/Method;)Z` @kind virtual;
  #L24fb96.  v5:= temp;
  #L24fb98.  if v5 != 0 then goto L24fba2;
  #L24fb9c.  call temp:= `loadServiceMethod`(v6, v0) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @kind virtual;
  #L24fba2.  v2:= v2 + 1;
  #L24fba6.  goto L24fb88;
  #L24fba8.  return @kind void;
}
procedure `okhttp3.HttpUrl` `baseUrl`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.baseUrl:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fbbc.  v0:= v1.`retrofit2.Retrofit.baseUrl` @type ^`okhttp3.HttpUrl` @kind object;
  #L24fbc0.  return v0 @kind object;
}
procedure `retrofit2.CallAdapter` `callAdapter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fbd4.  v0:= 0I;
  #L24fbd6.  call temp:= `nextCallAdapter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L24fbdc.  v0:= temp @kind object;
  #L24fbde.  return v0 @kind object;
}
procedure `java.util.List` `callAdapterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callAdapterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fbf0.  v0:= v1.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fbf4.  return v0 @kind object;
}
procedure `okhttp3.Call$Factory` `callFactory`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callFactory:()Lokhttp3/Call$Factory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fc08.  v0:= v1.`retrofit2.Retrofit.callFactory` @type ^`okhttp3.Call$Factory` @kind object;
  #L24fc0c.  return v0 @kind object;
}
procedure `java.util.concurrent.Executor` `callbackExecutor`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.callbackExecutor:()Ljava/util/concurrent/Executor;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fc20.  v0:= v1.`retrofit2.Retrofit.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L24fc24.  return v0 @kind object;
}
procedure `java.util.List` `converterFactories`(`retrofit2.Retrofit` v1 @kind this) @signature `Lretrofit2/Retrofit;.converterFactories:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24fc38.  v0:= v1.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24fc3c.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`retrofit2.Retrofit` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24fc50.  call `validateServiceInterface`(v4) @signature `Lretrofit2/Utils;.validateServiceInterface:(Ljava/lang/Class;)V` @kind static;
  #L24fc56.  v0:= v3.`retrofit2.Retrofit.validateEagerly` @type ^`boolean` @kind boolean;
  #L24fc5a.  if v0 == 0 then goto L24fc64;
  #L24fc5e.  call `eagerlyValidateMethods`(v3, v4) @signature `Lretrofit2/Retrofit;.eagerlyValidateMethods:(Ljava/lang/Class;)V` @kind direct;
  #L24fc64.  call temp:= `getClassLoader`(v4) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L24fc6a.  v0:= temp @kind object;
  #L24fc6c.  v1:= 1I;
  #L24fc6e.  v1:= new `java.lang.Class`[v1];
  #L24fc72.  v2:= 0I;
  #L24fc74.  v1[v2]:= v4 @kind object;
  #L24fc78.  v2:= new `retrofit2.Retrofit$1`;
  #L24fc7c.  call `<init>`(v2, v3, v4) @signature `Lretrofit2/Retrofit$1;.<init>:(Lretrofit2/Retrofit;Ljava/lang/Class;)V` @kind direct;
  #L24fc82.  call temp:= `newProxyInstance`(v0, v1, v2) @signature `Ljava/lang/reflect/Proxy;.newProxyInstance:(Ljava/lang/ClassLoader;[Ljava/lang/Class;Ljava/lang/reflect/InvocationHandler;)Ljava/lang/Object;` @kind static;
  #L24fc88.  v0:= temp @kind object;
  #L24fc8a.  return v0 @kind object;
}
procedure `retrofit2.ServiceMethod` `loadServiceMethod`(`retrofit2.Retrofit` v3 @kind this, `java.lang.reflect.Method` v4 @kind object @name `method`) @signature `Lretrofit2/Retrofit;.loadServiceMethod:(Ljava/lang/reflect/Method;)Lretrofit2/ServiceMethod;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L24fc9c.  v2:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L24fca0.  @monitorenter v2
  #L24fca2.  v1:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L24fca6.  call temp:= `get`(v1, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24fcac.  v0:= temp @kind object;
  #L24fcae.  v0:= (`retrofit2.ServiceMethod`) v0 @kind object;
  #L24fcb2.  if v0 != 0 then goto L24fcd2;
  #L24fcb6.  v1:= new `retrofit2.ServiceMethod$Builder`;
  #L24fcba.  call `<init>`(v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @kind direct;
  #L24fcc0.  call temp:= `build`(v1) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @kind virtual;
  #L24fcc6.  v0:= temp @kind object;
  #L24fcc8.  v1:= v3.`retrofit2.Retrofit.serviceMethodCache` @type ^`java.util.Map` @kind object;
  #L24fccc.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L24fcd2.  @monitorexit v2
  #L24fcd4.  return v0 @kind object;
  #L24fcd6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24fcd8.  @monitorexit v2
  #L24fcda.  throw v1;
  catch `java.lang.Throwable` @[L24fca2..L24fcda] goto L24fcd6;
}
procedure `retrofit2.CallAdapter` `nextCallAdapter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.CallAdapter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `returnType`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextCallAdapter:(Lretrofit2/CallAdapter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24fcf8.  v5:= "returnType == null" @kind object;
  #L24fcfc.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24fd02.  v5:= "annotations == null" @kind object;
  #L24fd06.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24fd0c.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fd10.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L24fd16.  v5:= temp;
  #L24fd18.  v4:= v5 + 1;
  #L24fd1c.  v3:= v4;
  #L24fd1e.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fd22.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24fd28.  v2:= temp;
  #L24fd2a.  if v3 >= v2 then goto L24fd52;
  #L24fd2e.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fd32.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24fd38.  v5:= temp @kind object;
  #L24fd3a.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L24fd3e.  call temp:= `get`(v5, v9, v10, v7) @signature `Lretrofit2/CallAdapter$Factory;.get:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/CallAdapter;` @kind virtual;
  #L24fd44.  v0:= temp @kind object;
  #L24fd46.  if v0 == 0 then goto L24fd4c;
  #L24fd4a.  return v0 @kind object;
  #L24fd4c.  v3:= v3 + 1;
  #L24fd50.  goto L24fd2a;
  #L24fd52.  v5:= new `java.lang.StringBuilder`;
  #L24fd56.  v6:= "Could not locate call adapter for " @kind object;
  #L24fd5a.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24fd60.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fd66.  v5:= temp @kind object;
  #L24fd68.  v6:= ".\n" @kind object;
  #L24fd6c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fd72.  v1:= temp @kind object;
  #L24fd74.  if v8 == 0 then goto L24fdca;
  #L24fd78.  v5:= "  Skipped:" @kind object;
  #L24fd7c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fd82.  v3:= 0I;
  #L24fd84.  if v3 >= v4 then goto L24fdc0;
  #L24fd88.  v5:= "\n   * " @kind object;
  #L24fd8c.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fd92.  v6:= temp @kind object;
  #L24fd94.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fd98.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24fd9e.  v5:= temp @kind object;
  #L24fda0.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L24fda4.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24fdaa.  v5:= temp @kind object;
  #L24fdac.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24fdb2.  v5:= temp @kind object;
  #L24fdb4.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fdba.  v3:= v3 + 1;
  #L24fdbe.  goto L24fd84;
  #L24fdc0.  v5:= 10I;
  #L24fdc4.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fdca.  v5:= "  Tried:" @kind object;
  #L24fdce.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fdd4.  v3:= v4;
  #L24fdd6.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fdda.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24fde0.  v2:= temp;
  #L24fde2.  if v3 >= v2 then goto L24fe1e;
  #L24fde6.  v5:= "\n   * " @kind object;
  #L24fdea.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fdf0.  v6:= temp @kind object;
  #L24fdf2.  v5:= v7.`retrofit2.Retrofit.adapterFactories` @type ^`java.util.List` @kind object;
  #L24fdf6.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24fdfc.  v5:= temp @kind object;
  #L24fdfe.  v5:= (`retrofit2.CallAdapter$Factory`) v5 @kind object;
  #L24fe02.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24fe08.  v5:= temp @kind object;
  #L24fe0a.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24fe10.  v5:= temp @kind object;
  #L24fe12.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fe18.  v3:= v3 + 1;
  #L24fe1c.  goto L24fde2;
  #L24fe1e.  v5:= new `java.lang.IllegalArgumentException`;
  #L24fe22.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24fe28.  v6:= temp @kind object;
  #L24fe2a.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24fe30.  throw v5;
}
procedure `retrofit2.Converter` `nextRequestBodyConverter`(`retrofit2.Retrofit` v8 @kind this, `retrofit2.Converter$Factory` v9 @kind object @name `skipPast`, `java.lang.reflect.Type` v10 @kind object @name `type`, `java.lang.annotation.Annotation`[] v11 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v12 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24fe44.  v6:= "type == null" @kind object;
  #L24fe48.  call temp:= `checkNotNull`(v10, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24fe4e.  v6:= "parameterAnnotations == null" @kind object;
  #L24fe52.  call temp:= `checkNotNull`(v11, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24fe58.  v6:= "methodAnnotations == null" @kind object;
  #L24fe5c.  call temp:= `checkNotNull`(v12, v6) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24fe62.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24fe66.  call temp:= `indexOf`(v6, v9) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L24fe6c.  v6:= temp;
  #L24fe6e.  v5:= v6 + 1;
  #L24fe72.  v4:= v5;
  #L24fe74.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24fe78.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24fe7e.  v2:= temp;
  #L24fe80.  if v4 >= v2 then goto L24fea8;
  #L24fe84.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24fe88.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24fe8e.  v3:= temp @kind object;
  #L24fe90.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L24fe94.  call temp:= `requestBodyConverter`(v3, v10, v11, v12, v8) @signature `Lretrofit2/Converter$Factory;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L24fe9a.  v1:= temp @kind object;
  #L24fe9c.  if v1 == 0 then goto L24fea2;
  #L24fea0.  return v1 @kind object;
  #L24fea2.  v4:= v4 + 1;
  #L24fea6.  goto L24fe80;
  #L24fea8.  v6:= new `java.lang.StringBuilder`;
  #L24feac.  v7:= "Could not locate RequestBody converter for " @kind object;
  #L24feb0.  call `<init>`(v6, v7) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24feb6.  call temp:= `append`(v6, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24febc.  v6:= temp @kind object;
  #L24febe.  v7:= ".\n" @kind object;
  #L24fec2.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fec8.  v0:= temp @kind object;
  #L24feca.  if v9 == 0 then goto L24ff20;
  #L24fece.  v6:= "  Skipped:" @kind object;
  #L24fed2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fed8.  v4:= 0I;
  #L24feda.  if v4 >= v5 then goto L24ff16;
  #L24fede.  v6:= "\n   * " @kind object;
  #L24fee2.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24fee8.  v7:= temp @kind object;
  #L24feea.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24feee.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24fef4.  v6:= temp @kind object;
  #L24fef6.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L24fefa.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24ff00.  v6:= temp @kind object;
  #L24ff02.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24ff08.  v6:= temp @kind object;
  #L24ff0a.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ff10.  v4:= v4 + 1;
  #L24ff14.  goto L24feda;
  #L24ff16.  v6:= 10I;
  #L24ff1a.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ff20.  v6:= "  Tried:" @kind object;
  #L24ff24.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ff2a.  v4:= v5;
  #L24ff2c.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24ff30.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24ff36.  v2:= temp;
  #L24ff38.  if v4 >= v2 then goto L24ff74;
  #L24ff3c.  v6:= "\n   * " @kind object;
  #L24ff40.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ff46.  v7:= temp @kind object;
  #L24ff48.  v6:= v8.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24ff4c.  call temp:= `get`(v6, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24ff52.  v6:= temp @kind object;
  #L24ff54.  v6:= (`retrofit2.Converter$Factory`) v6 @kind object;
  #L24ff58.  call temp:= `getClass`(v6) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L24ff5e.  v6:= temp @kind object;
  #L24ff60.  call temp:= `getName`(v6) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24ff66.  v6:= temp @kind object;
  #L24ff68.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24ff6e.  v4:= v4 + 1;
  #L24ff72.  goto L24ff38;
  #L24ff74.  v6:= new `java.lang.IllegalArgumentException`;
  #L24ff78.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24ff7e.  v7:= temp @kind object;
  #L24ff80.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ff86.  throw v6;
}
procedure `retrofit2.Converter` `nextResponseBodyConverter`(`retrofit2.Retrofit` v7 @kind this, `retrofit2.Converter$Factory` v8 @kind object @name `skipPast`, `java.lang.reflect.Type` v9 @kind object @name `type`, `java.lang.annotation.Annotation`[] v10 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L24ff98.  v5:= "type == null" @kind object;
  #L24ff9c.  call temp:= `checkNotNull`(v9, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24ffa2.  v5:= "annotations == null" @kind object;
  #L24ffa6.  call temp:= `checkNotNull`(v10, v5) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24ffac.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24ffb0.  call temp:= `indexOf`(v5, v8) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L24ffb6.  v5:= temp;
  #L24ffb8.  v4:= v5 + 1;
  #L24ffbc.  v3:= v4;
  #L24ffbe.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24ffc2.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24ffc8.  v2:= temp;
  #L24ffca.  if v3 >= v2 then goto L24fff2;
  #L24ffce.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L24ffd2.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24ffd8.  v5:= temp @kind object;
  #L24ffda.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L24ffde.  call temp:= `responseBodyConverter`(v5, v9, v10, v7) @signature `Lretrofit2/Converter$Factory;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L24ffe4.  v1:= temp @kind object;
  #L24ffe6.  if v1 == 0 then goto L24ffec;
  #L24ffea.  return v1 @kind object;
  #L24ffec.  v3:= v3 + 1;
  #L24fff0.  goto L24ffca;
  #L24fff2.  v5:= new `java.lang.StringBuilder`;
  #L24fff6.  v6:= "Could not locate ResponseBody converter for " @kind object;
  #L24fffa.  call `<init>`(v5, v6) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L250000.  call temp:= `append`(v5, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250006.  v5:= temp @kind object;
  #L250008.  v6:= ".\n" @kind object;
  #L25000c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250012.  v0:= temp @kind object;
  #L250014.  if v8 == 0 then goto L25006a;
  #L250018.  v5:= "  Skipped:" @kind object;
  #L25001c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250022.  v3:= 0I;
  #L250024.  if v3 >= v4 then goto L250060;
  #L250028.  v5:= "\n   * " @kind object;
  #L25002c.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250032.  v6:= temp @kind object;
  #L250034.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L250038.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25003e.  v5:= temp @kind object;
  #L250040.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L250044.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L25004a.  v5:= temp @kind object;
  #L25004c.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L250052.  v5:= temp @kind object;
  #L250054.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25005a.  v3:= v3 + 1;
  #L25005e.  goto L250024;
  #L250060.  v5:= 10I;
  #L250064.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L25006a.  v5:= "  Tried:" @kind object;
  #L25006e.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250074.  v3:= v4;
  #L250076.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L25007a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L250080.  v2:= temp;
  #L250082.  if v3 >= v2 then goto L2500be;
  #L250086.  v5:= "\n   * " @kind object;
  #L25008a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250090.  v6:= temp @kind object;
  #L250092.  v5:= v7.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L250096.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25009c.  v5:= temp @kind object;
  #L25009e.  v5:= (`retrofit2.Converter$Factory`) v5 @kind object;
  #L2500a2.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L2500a8.  v5:= temp @kind object;
  #L2500aa.  call temp:= `getName`(v5) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L2500b0.  v5:= temp @kind object;
  #L2500b2.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2500b8.  v3:= v3 + 1;
  #L2500bc.  goto L250082;
  #L2500be.  v5:= new `java.lang.IllegalArgumentException`;
  #L2500c2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2500c8.  v6:= temp @kind object;
  #L2500ca.  call `<init>`(v5, v6) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2500d0.  throw v5;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v4 @kind object @name `methodAnnotations`) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2500e4.  v0:= 0I;
  #L2500e6.  call temp:= `nextRequestBodyConverter`(v1, v0, v2, v3, v4) @signature `Lretrofit2/Retrofit;.nextRequestBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L2500ec.  v0:= temp @kind object;
  #L2500ee.  return v0 @kind object;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.Retrofit` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L250100.  v0:= 0I;
  #L250102.  call temp:= `nextResponseBodyConverter`(v1, v0, v2, v3) @signature `Lretrofit2/Retrofit;.nextResponseBodyConverter:(Lretrofit2/Converter$Factory;Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250108.  v0:= temp @kind object;
  #L25010a.  return v0 @kind object;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.Retrofit` v4 @kind this, `java.lang.reflect.Type` v5 @kind object @name `type`, `java.lang.annotation.Annotation`[] v6 @kind object @name `annotations`) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L25011c.  v3:= "type == null" @kind object;
  #L250120.  call temp:= `checkNotNull`(v5, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L250126.  v3:= "annotations == null" @kind object;
  #L25012a.  call temp:= `checkNotNull`(v6, v3) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L250130.  v2:= 0I;
  #L250132.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L250136.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L25013c.  v1:= temp;
  #L25013e.  if v2 >= v1 then goto L250166;
  #L250142.  v3:= v4.`retrofit2.Retrofit.converterFactories` @type ^`java.util.List` @kind object;
  #L250146.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L25014c.  v3:= temp @kind object;
  #L25014e.  v3:= (`retrofit2.Converter$Factory`) v3 @kind object;
  #L250152.  call temp:= `stringConverter`(v3, v5, v6, v4) @signature `Lretrofit2/Converter$Factory;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @kind virtual;
  #L250158.  v0:= temp @kind object;
  #L25015a.  if v0 == 0 then goto L250160;
  #L25015e.  return v0 @kind object;
  #L250160.  v2:= v2 + 1;
  #L250164.  goto L25013e;
  #L250166.  v0:= `@@retrofit2.BuiltInConverters$ToStringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$ToStringConverter` @kind object;
  #L25016a.  goto L25015e;
}
