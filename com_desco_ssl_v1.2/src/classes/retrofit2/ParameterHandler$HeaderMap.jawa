record `retrofit2.ParameterHandler$HeaderMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.Converter` `retrofit2.ParameterHandler$HeaderMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$HeaderMap` v0 @kind this, `retrofit2.Converter` v1 @kind object) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L313be8.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L313bee.  v0.`retrofit2.ParameterHandler$HeaderMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L313bf2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$HeaderMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$HeaderMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L313c04.  v2:= (`java.util.Map`) v2 @kind object;
  #L313c08.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$HeaderMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L313c0e.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$HeaderMap` v6 @kind this, `retrofit2.RequestBuilder` v7 @kind object @name `builder`, `java.util.Map` v8 @kind object) @signature `Lretrofit2/ParameterHandler$HeaderMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L313c20.  if v8 != 0 then goto L313c34;
  #L313c24.  v3:= new `java.lang.IllegalArgumentException`;
  #L313c28.  v4:= "Header map was null." @kind object;
  #L313c2c.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313c32.  throw v3;
  #L313c34.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L313c3a.  v3:= temp @kind object;
  #L313c3c.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L313c42.  v4:= temp @kind object;
  #L313c44.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L313c4a.  v3:= temp;
  #L313c4c.  if v3 == 0 then goto L313cde;
  #L313c50.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L313c56.  v0:= temp @kind object;
  #L313c58.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L313c5c.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L313c62.  v1:= temp @kind object;
  #L313c64.  v1:= (`java.lang.String`) v1 @kind object;
  #L313c68.  if v1 != 0 then goto L313c7c;
  #L313c6c.  v3:= new `java.lang.IllegalArgumentException`;
  #L313c70.  v4:= "Header map contained null key." @kind object;
  #L313c74.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313c7a.  throw v3;
  #L313c7c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L313c82.  v2:= temp @kind object;
  #L313c84.  if v2 != 0 then goto L313cc6;
  #L313c88.  v3:= new `java.lang.IllegalArgumentException`;
  #L313c8c.  v4:= new `java.lang.StringBuilder`;
  #L313c90.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313c96.  v5:= "Header map contained null value for key '" @kind object;
  #L313c9a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313ca0.  v4:= temp @kind object;
  #L313ca2.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313ca8.  v4:= temp @kind object;
  #L313caa.  v5:= "'." @kind object;
  #L313cae.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313cb4.  v4:= temp @kind object;
  #L313cb6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L313cbc.  v4:= temp @kind object;
  #L313cbe.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313cc4.  throw v3;
  #L313cc6.  v3:= v6.`retrofit2.ParameterHandler$HeaderMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L313cca.  call temp:= `convert`(v3, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L313cd0.  v3:= temp @kind object;
  #L313cd2.  v3:= (`java.lang.String`) v3 @kind object;
  #L313cd6.  call `addHeader`(v7, v1, v3) @signature `Lretrofit2/RequestBuilder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)V` @kind virtual;
  #L313cdc.  goto L313c44;
  #L313cde.  return @kind void;
}
