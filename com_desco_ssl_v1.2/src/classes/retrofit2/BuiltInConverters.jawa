record `retrofit2.BuiltInConverters` @kind class @AccessFlag FINAL extends `retrofit2.Converter$Factory` @kind class {
}
procedure `void` `<init>`(`retrofit2.BuiltInConverters` v0 @kind this) @signature `Lretrofit2/BuiltInConverters;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L312d90.  call `<init>`(v0) @signature `Lretrofit2/Converter$Factory;.<init>:()V` @kind direct;
  #L312d96.  return @kind void;
}
procedure `retrofit2.Converter` `requestBodyConverter`(`retrofit2.BuiltInConverters` v2 @kind this, `java.lang.reflect.Type` v3 @kind object @name `type`, `java.lang.annotation.Annotation`[] v4 @kind object @name `parameterAnnotations`, `java.lang.annotation.Annotation`[] v5 @kind object @name `methodAnnotations`, `retrofit2.Retrofit` v6 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L312da8.  v0:= constclass @type ^`okhttp3.RequestBody` @kind object;
  #L312dac.  call temp:= `getRawType`(v3) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L312db2.  v1:= temp @kind object;
  #L312db4.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L312dba.  v0:= temp;
  #L312dbc.  if v0 == 0 then goto L312dc6;
  #L312dc0.  v0:= `@@retrofit2.BuiltInConverters$RequestBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$RequestBodyConverter` @kind object;
  #L312dc4.  return v0 @kind object;
  #L312dc6.  v0:= 0I;
  #L312dc8.  goto L312dc4;
}
procedure `retrofit2.Converter` `responseBodyConverter`(`retrofit2.BuiltInConverters` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L312ddc.  v0:= constclass @type ^`okhttp3.ResponseBody` @kind object;
  #L312de0.  if v2 != v0 then goto L312e00;
  #L312de4.  v0:= constclass @type ^`retrofit2.http.Streaming` @kind object;
  #L312de8.  call temp:= `isAnnotationPresent`(v3, v0) @signature `Lretrofit2/Utils;.isAnnotationPresent:([Ljava/lang/annotation/Annotation;Ljava/lang/Class;)Z` @kind static;
  #L312dee.  v0:= temp;
  #L312df0.  if v0 == 0 then goto L312dfa;
  #L312df4.  v0:= `@@retrofit2.BuiltInConverters$StreamingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$StreamingResponseBodyConverter` @kind object;
  #L312df8.  return v0 @kind object;
  #L312dfa.  v0:= `@@retrofit2.BuiltInConverters$BufferingResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$BufferingResponseBodyConverter` @kind object;
  #L312dfe.  goto L312df8;
  #L312e00.  v0:= constclass @type ^`java.lang.Void` @kind object;
  #L312e04.  if v2 != v0 then goto L312e0e;
  #L312e08.  v0:= `@@retrofit2.BuiltInConverters$VoidResponseBodyConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$VoidResponseBodyConverter` @kind object;
  #L312e0c.  goto L312df8;
  #L312e0e.  v0:= 0I;
  #L312e10.  goto L312df8;
}
procedure `retrofit2.Converter` `stringConverter`(`retrofit2.BuiltInConverters` v1 @kind this, `java.lang.reflect.Type` v2 @kind object @name `type`, `java.lang.annotation.Annotation`[] v3 @kind object @name `annotations`, `retrofit2.Retrofit` v4 @kind object @name `retrofit`) @signature `Lretrofit2/BuiltInConverters;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Lretrofit2/Retrofit;)Lretrofit2/Converter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L312e24.  v0:= constclass @type ^`java.lang.String` @kind object;
  #L312e28.  if v2 != v0 then goto L312e32;
  #L312e2c.  v0:= `@@retrofit2.BuiltInConverters$StringConverter.INSTANCE` @type ^`retrofit2.BuiltInConverters$StringConverter` @kind object;
  #L312e30.  return v0 @kind object;
  #L312e32.  v0:= 0I;
  #L312e34.  goto L312e30;
}
