record `retrofit2.ServiceMethod$Builder` @kind class @AccessFlag FINAL {
  `retrofit2.CallAdapter` `retrofit2.ServiceMethod$Builder.callAdapter` @AccessFlag ;
  `okhttp3.MediaType` `retrofit2.ServiceMethod$Builder.contentType` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotBody` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotField` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPart` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotPath` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotQuery` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.gotUrl` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.hasBody` @AccessFlag ;
  `okhttp3.Headers` `retrofit2.ServiceMethod$Builder.headers` @AccessFlag ;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.httpMethod` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isFormEncoded` @AccessFlag ;
  `boolean` `retrofit2.ServiceMethod$Builder.isMultipart` @AccessFlag ;
  `java.lang.reflect.Method` `retrofit2.ServiceMethod$Builder.method` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[] `retrofit2.ServiceMethod$Builder.methodAnnotations` @AccessFlag FINAL;
  `java.lang.annotation.Annotation`[][] `retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @AccessFlag FINAL;
  `retrofit2.ParameterHandler`[] `retrofit2.ServiceMethod$Builder.parameterHandlers` @AccessFlag ;
  `java.lang.reflect.Type`[] `retrofit2.ServiceMethod$Builder.parameterTypes` @AccessFlag FINAL;
  `java.lang.String` `retrofit2.ServiceMethod$Builder.relativeUrl` @AccessFlag ;
  `java.util.Set` `retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @AccessFlag ;
  `retrofit2.Converter` `retrofit2.ServiceMethod$Builder.responseConverter` @AccessFlag ;
  `java.lang.reflect.Type` `retrofit2.ServiceMethod$Builder.responseType` @AccessFlag ;
  `retrofit2.Retrofit` `retrofit2.ServiceMethod$Builder.retrofit` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `retrofit2.Retrofit` v2 @kind object @name `retrofit`, `java.lang.reflect.Method` v3 @kind object @name `method`) @signature `Lretrofit2/ServiceMethod$Builder;.<init>:(Lretrofit2/Retrofit;Ljava/lang/reflect/Method;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L25017c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L250182.  v1.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` := v2 @kind object;
  #L250186.  v1.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` := v3 @kind object;
  #L25018a.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L250190.  v0:= temp @kind object;
  #L250192.  v1.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] := v0 @kind object;
  #L250196.  call temp:= `getGenericParameterTypes`(v3) @signature `Ljava/lang/reflect/Method;.getGenericParameterTypes:()[Ljava/lang/reflect/Type;` @kind virtual;
  #L25019c.  v0:= temp @kind object;
  #L25019e.  v1.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] := v0 @kind object;
  #L2501a2.  call temp:= `getParameterAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getParameterAnnotations:()[[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L2501a8.  v0:= temp @kind object;
  #L2501aa.  v1.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] := v0 @kind object;
  #L2501ae.  return @kind void;
}
procedure `retrofit2.CallAdapter` `createCallAdapter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2501c0.  v4:= 1I;
  #L2501c2.  v5:= 0I;
  #L2501c4.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L2501c8.  call temp:= `getGenericReturnType`(v3) @signature `Ljava/lang/reflect/Method;.getGenericReturnType:()Ljava/lang/reflect/Type;` @kind virtual;
  #L2501ce.  v2:= temp @kind object;
  #L2501d0.  call temp:= `hasUnresolvableType`(v2) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L2501d6.  v3:= temp;
  #L2501d8.  if v3 == 0 then goto L2501f2;
  #L2501dc.  v3:= "Method return type must not include a type variable or wildcard: %s" @kind object;
  #L2501e0.  v4:= new `java.lang.Object`[v4];
  #L2501e4.  v4[v5]:= v2 @kind object;
  #L2501e8.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2501ee.  v3:= temp @kind object;
  #L2501f0.  throw v3;
  #L2501f2.  v3:= `@@java.lang.Void.TYPE` @type ^`java.lang.Class` @kind object;
  #L2501f6.  if v2 != v3 then goto L25020c;
  #L2501fa.  v3:= "Service methods cannot return void." @kind object;
  #L2501fe.  v4:= new `java.lang.Object`[v5];
  #L250202.  call temp:= `methodError`(v6, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250208.  v3:= temp @kind object;
  #L25020a.  throw v3;
  #L25020c.  v3:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L250210.  call temp:= `getAnnotations`(v3) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L250216.  v0:= temp @kind object;
  #L250218.  v3:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L25021c.  call temp:= `callAdapter`(v3, v2, v0) @signature `Lretrofit2/Retrofit;.callAdapter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/CallAdapter;` @kind virtual;
  #L250222.  v3:= temp @kind object;
  #L250224.  return v3 @kind object;
  #L250226.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L250228.  v3:= "Unable to create call adapter for %s" @kind object;
  #L25022c.  v4:= new `java.lang.Object`[v4];
  #L250230.  v4[v5]:= v2 @kind object;
  #L250234.  call temp:= `methodError`(v6, v1, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25023a.  v3:= temp @kind object;
  #L25023c.  throw v3;
  catch `java.lang.RuntimeException` @[L250218..L250222] goto L250226;
}
procedure `retrofit2.Converter` `createResponseConverter`(`retrofit2.ServiceMethod$Builder` v6 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L250260.  v2:= v6.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L250264.  call temp:= `getAnnotations`(v2) @signature `Ljava/lang/reflect/Method;.getAnnotations:()[Ljava/lang/annotation/Annotation;` @kind virtual;
  #L25026a.  v0:= temp @kind object;
  #L25026c.  v2:= v6.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250270.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L250274.  call temp:= `responseBodyConverter`(v2, v3, v0) @signature `Lretrofit2/Retrofit;.responseBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L25027a.  v2:= temp @kind object;
  #L25027c.  return v2 @kind object;
  #L25027e.  v1:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L250280.  v2:= "Unable to create converter for %s" @kind object;
  #L250284.  v3:= 1I;
  #L250286.  v3:= new `java.lang.Object`[v3];
  #L25028a.  v4:= 0I;
  #L25028c.  v5:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L250290.  v3[v4]:= v5 @kind object;
  #L250294.  call temp:= `methodError`(v6, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25029a.  v2:= temp @kind object;
  #L25029c.  throw v2;
  catch `java.lang.RuntimeException` @[L25026c..L25027a] goto L25027e;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2502c0.  v0:= 0I;
  #L2502c2.  call temp:= `methodError`(v1, v0, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2502c8.  v0:= temp @kind object;
  #L2502ca.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `methodError`(`retrofit2.ServiceMethod$Builder` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `cause`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L2502dc.  call temp:= `format`(v5, v6) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2502e2.  v5:= temp @kind object;
  #L2502e4.  v0:= new `java.lang.IllegalArgumentException`;
  #L2502e8.  v1:= new `java.lang.StringBuilder`;
  #L2502ec.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2502f2.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2502f8.  v1:= temp @kind object;
  #L2502fa.  v2:= "\n    for method " @kind object;
  #L2502fe.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250304.  v1:= temp @kind object;
  #L250306.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L25030a.  call temp:= `getDeclaringClass`(v2) @signature `Ljava/lang/reflect/Method;.getDeclaringClass:()Ljava/lang/Class;` @kind virtual;
  #L250310.  v2:= temp @kind object;
  #L250312.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L250318.  v2:= temp @kind object;
  #L25031a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250320.  v1:= temp @kind object;
  #L250322.  v2:= "." @kind object;
  #L250326.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25032c.  v1:= temp @kind object;
  #L25032e.  v2:= v3.`retrofit2.ServiceMethod$Builder.method` @type ^`java.lang.reflect.Method` @kind object;
  #L250332.  call temp:= `getName`(v2) @signature `Ljava/lang/reflect/Method;.getName:()Ljava/lang/String;` @kind virtual;
  #L250338.  v2:= temp @kind object;
  #L25033a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250340.  v1:= temp @kind object;
  #L250342.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250348.  v1:= temp @kind object;
  #L25034a.  call `<init>`(v0, v1, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L250350.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `int` v3 @name `p`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Object`[] v5 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L250364.  v0:= new `java.lang.StringBuilder`;
  #L250368.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L25036e.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250374.  v0:= temp @kind object;
  #L250376.  v1:= " (parameter #" @kind object;
  #L25037a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250380.  v0:= temp @kind object;
  #L250382.  v1:= v3 + 1;
  #L250386.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L25038c.  v0:= temp @kind object;
  #L25038e.  v1:= ")" @kind object;
  #L250392.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250398.  v0:= temp @kind object;
  #L25039a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2503a0.  v0:= temp @kind object;
  #L2503a2.  call temp:= `methodError`(v2, v0, v5) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2503a8.  v0:= temp @kind object;
  #L2503aa.  return v0 @kind object;
}
procedure `java.lang.RuntimeException` `parameterError`(`retrofit2.ServiceMethod$Builder` v2 @kind this, `java.lang.Throwable` v3 @kind object @name `cause`, `int` v4 @name `p`, `java.lang.String` v5 @kind object @name `message`, `java.lang.Object`[] v6 @kind object @name `args`) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2503bc.  v0:= new `java.lang.StringBuilder`;
  #L2503c0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2503c6.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2503cc.  v0:= temp @kind object;
  #L2503ce.  v1:= " (parameter #" @kind object;
  #L2503d2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2503d8.  v0:= temp @kind object;
  #L2503da.  v1:= v4 + 1;
  #L2503de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2503e4.  v0:= temp @kind object;
  #L2503e6.  v1:= ")" @kind object;
  #L2503ea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2503f0.  v0:= temp @kind object;
  #L2503f2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2503f8.  v0:= temp @kind object;
  #L2503fa.  call temp:= `methodError`(v2, v3, v0, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/Throwable;Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250400.  v0:= temp @kind object;
  #L250402.  return v0 @kind object;
}
procedure `okhttp3.Headers` `parseHeaders`(`retrofit2.ServiceMethod$Builder` v11 @kind this, `java.lang.String`[] v12 @kind object @name `headers`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L250414.  v10:= 1I;
  #L250416.  v7:= 0I;
  #L250418.  v0:= new `okhttp3.Headers$Builder`;
  #L25041c.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L250422.  v8:= length @variable v12;
  #L250424.  v6:= v7;
  #L250426.  if v6 >= v8 then goto L2504ca;
  #L25042a.  v2:= v12[v6] @kind object;
  #L25042e.  v9:= 58I;
  #L250432.  call temp:= `indexOf`(v2, v9) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L250438.  v1:= temp;
  #L25043a.  v9:= -1I;
  #L25043c.  if v1 == v9 then goto L250454;
  #L250440.  if v1 == 0 then goto L250454;
  #L250444.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25044a.  v9:= temp;
  #L25044c.  v9:= v9 + -1;
  #L250450.  if v1 != v9 then goto L25046a;
  #L250454.  v6:= "@Headers value must be in the form \"Name: Value\". Found: \"%s\"" @kind object;
  #L250458.  v8:= new `java.lang.Object`[v10];
  #L25045c.  v8[v7]:= v2 @kind object;
  #L250460.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250466.  v6:= temp @kind object;
  #L250468.  throw v6;
  #L25046a.  call temp:= `substring`(v2, v7, v1) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L250470.  v3:= temp @kind object;
  #L250472.  v9:= v1 + 1;
  #L250476.  call temp:= `substring`(v2, v9) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L25047c.  v9:= temp @kind object;
  #L25047e.  call temp:= `trim`(v9) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L250484.  v4:= temp @kind object;
  #L250486.  v9:= "Content-Type" @kind object;
  #L25048a.  call temp:= `equalsIgnoreCase`(v9, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L250490.  v9:= temp;
  #L250492.  if v9 == 0 then goto L2504c2;
  #L250496.  call temp:= `parse`(v4) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L25049c.  v5:= temp @kind object;
  #L25049e.  if v5 != 0 then goto L2504b8;
  #L2504a2.  v6:= "Malformed content type: %s" @kind object;
  #L2504a6.  v8:= new `java.lang.Object`[v10];
  #L2504aa.  v8[v7]:= v4 @kind object;
  #L2504ae.  call temp:= `methodError`(v11, v6, v8) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2504b4.  v6:= temp @kind object;
  #L2504b6.  throw v6;
  #L2504b8.  v11.`retrofit2.ServiceMethod$Builder.contentType` @type ^`okhttp3.MediaType` := v5 @kind object;
  #L2504bc.  v6:= v6 + 1;
  #L2504c0.  goto L250426;
  #L2504c2.  call temp:= `add`(v0, v3, v4) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L2504c8.  goto L2504bc;
  #L2504ca.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2504d0.  v6:= temp @kind object;
  #L2504d2.  return v6 @kind object;
}
procedure `void` `parseHttpMethodAndPath`(`retrofit2.ServiceMethod$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `httpMethod`, `java.lang.String` v10 @kind object @name `value`, `boolean` v11 @name `hasBody`) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2504e4.  v7:= 1I;
  #L2504e6.  v6:= 0I;
  #L2504e8.  v3:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L2504ec.  if v3 == 0 then goto L250510;
  #L2504f0.  v3:= "Only one HTTP method is allowed. Found: %s and %s." @kind object;
  #L2504f4.  v4:= 2I;
  #L2504f6.  v4:= new `java.lang.Object`[v4];
  #L2504fa.  v5:= v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L2504fe.  v4[v6]:= v5 @kind object;
  #L250502.  v4[v7]:= v9 @kind object;
  #L250506.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25050c.  v3:= temp @kind object;
  #L25050e.  throw v3;
  #L250510.  v8.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` := v9 @kind object;
  #L250514.  v8.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` := v11 @kind boolean;
  #L250518.  call temp:= `isEmpty`(v10) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L25051e.  v3:= temp;
  #L250520.  if v3 == 0 then goto L250526;
  #L250524.  return @kind void;
  #L250526.  v3:= 63I;
  #L25052a.  call temp:= `indexOf`(v10, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L250530.  v2:= temp;
  #L250532.  v3:= -1I;
  #L250534.  if v2 == v3 then goto L250582;
  #L250538.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L25053e.  v3:= temp;
  #L250540.  v3:= v3 + -1;
  #L250544.  if v2 >= v3 then goto L250582;
  #L250548.  v3:= v2 + 1;
  #L25054c.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L250552.  v1:= temp @kind object;
  #L250554.  v3:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L250558.  call temp:= `matcher`(v3, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L25055e.  v0:= temp @kind object;
  #L250560.  call temp:= `find`(v0) @signature `Ljava/util/regex/Matcher;.find:()Z` @kind virtual;
  #L250566.  v3:= temp;
  #L250568.  if v3 == 0 then goto L250582;
  #L25056c.  v3:= "URL query string \"%s\" must not have replace block. For dynamic query parameters use @Query." @kind object;
  #L250570.  v4:= new `java.lang.Object`[v7];
  #L250574.  v4[v6]:= v1 @kind object;
  #L250578.  call temp:= `methodError`(v8, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25057e.  v3:= temp @kind object;
  #L250580.  throw v3;
  #L250582.  v8.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` := v10 @kind object;
  #L250586.  call temp:= `parsePathParameters`(v10) @signature `Lretrofit2/ServiceMethod;.parsePathParameters:(Ljava/lang/String;)Ljava/util/Set;` @kind static;
  #L25058c.  v3:= temp @kind object;
  #L25058e.  v8.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` := v3 @kind object;
  #L250592.  goto L250524;
}
procedure `void` `parseMethodAnnotation`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `java.lang.annotation.Annotation` v7 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2505a4.  v5:= 1I;
  #L2505a6.  v4:= 0I;
  #L2505a8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.DELETE` @kind boolean;
  #L2505ac.  if v2 == 0 then goto L2505c8;
  #L2505b0.  v2:= "DELETE" @kind object;
  #L2505b4.  v7:= (`retrofit2.http.DELETE`) v7 @kind object;
  #L2505b8.  call temp:= `value`(v7) @signature `Lretrofit2/http/DELETE;.value:()Ljava/lang/String;` @kind interface;
  #L2505be.  v3:= temp @kind object;
  #L2505c0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2505c6.  return @kind void;
  #L2505c8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.GET` @kind boolean;
  #L2505cc.  if v2 == 0 then goto L2505e8;
  #L2505d0.  v2:= "GET" @kind object;
  #L2505d4.  v7:= (`retrofit2.http.GET`) v7 @kind object;
  #L2505d8.  call temp:= `value`(v7) @signature `Lretrofit2/http/GET;.value:()Ljava/lang/String;` @kind interface;
  #L2505de.  v3:= temp @kind object;
  #L2505e0.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2505e6.  goto L2505c6;
  #L2505e8.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HEAD` @kind boolean;
  #L2505ec.  if v2 == 0 then goto L25062c;
  #L2505f0.  v2:= "HEAD" @kind object;
  #L2505f4.  v7:= (`retrofit2.http.HEAD`) v7 @kind object;
  #L2505f8.  call temp:= `value`(v7) @signature `Lretrofit2/http/HEAD;.value:()Ljava/lang/String;` @kind interface;
  #L2505fe.  v3:= temp @kind object;
  #L250600.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L250606.  v2:= constclass @type ^`java.lang.Void` @kind object;
  #L25060a.  v3:= v6.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L25060e.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L250614.  v2:= temp;
  #L250616.  if v2 != 0 then goto L2505c6;
  #L25061a.  v2:= "HEAD method must use Void as response type." @kind object;
  #L25061e.  v3:= new `java.lang.Object`[v4];
  #L250622.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250628.  v2:= temp @kind object;
  #L25062a.  throw v2;
  #L25062c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PATCH` @kind boolean;
  #L250630.  if v2 == 0 then goto L25064c;
  #L250634.  v2:= "PATCH" @kind object;
  #L250638.  v7:= (`retrofit2.http.PATCH`) v7 @kind object;
  #L25063c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PATCH;.value:()Ljava/lang/String;` @kind interface;
  #L250642.  v3:= temp @kind object;
  #L250644.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L25064a.  goto L2505c6;
  #L25064c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.POST` @kind boolean;
  #L250650.  if v2 == 0 then goto L25066c;
  #L250654.  v2:= "POST" @kind object;
  #L250658.  v7:= (`retrofit2.http.POST`) v7 @kind object;
  #L25065c.  call temp:= `value`(v7) @signature `Lretrofit2/http/POST;.value:()Ljava/lang/String;` @kind interface;
  #L250662.  v3:= temp @kind object;
  #L250664.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L25066a.  goto L2505c6;
  #L25066c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.PUT` @kind boolean;
  #L250670.  if v2 == 0 then goto L25068c;
  #L250674.  v2:= "PUT" @kind object;
  #L250678.  v7:= (`retrofit2.http.PUT`) v7 @kind object;
  #L25067c.  call temp:= `value`(v7) @signature `Lretrofit2/http/PUT;.value:()Ljava/lang/String;` @kind interface;
  #L250682.  v3:= temp @kind object;
  #L250684.  call `parseHttpMethodAndPath`(v6, v2, v3, v5) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L25068a.  goto L2505c6;
  #L25068c.  v2:= instanceof @variable v7 @type ^`retrofit2.http.OPTIONS` @kind boolean;
  #L250690.  if v2 == 0 then goto L2506ac;
  #L250694.  v2:= "OPTIONS" @kind object;
  #L250698.  v7:= (`retrofit2.http.OPTIONS`) v7 @kind object;
  #L25069c.  call temp:= `value`(v7) @signature `Lretrofit2/http/OPTIONS;.value:()Ljava/lang/String;` @kind interface;
  #L2506a2.  v3:= temp @kind object;
  #L2506a4.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2506aa.  goto L2505c6;
  #L2506ac.  v2:= instanceof @variable v7 @type ^`retrofit2.http.HTTP` @kind boolean;
  #L2506b0.  if v2 == 0 then goto L2506dc;
  #L2506b4.  v1:= v7 @kind object;
  #L2506b6.  v1:= (`retrofit2.http.HTTP`) v1 @kind object;
  #L2506ba.  call temp:= `method`(v1) @signature `Lretrofit2/http/HTTP;.method:()Ljava/lang/String;` @kind interface;
  #L2506c0.  v2:= temp @kind object;
  #L2506c2.  call temp:= `path`(v1) @signature `Lretrofit2/http/HTTP;.path:()Ljava/lang/String;` @kind interface;
  #L2506c8.  v3:= temp @kind object;
  #L2506ca.  call temp:= `hasBody`(v1) @signature `Lretrofit2/http/HTTP;.hasBody:()Z` @kind interface;
  #L2506d0.  v4:= temp;
  #L2506d2.  call `parseHttpMethodAndPath`(v6, v2, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parseHttpMethodAndPath:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind direct;
  #L2506d8.  goto L2505c6;
  #L2506dc.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Headers` @kind boolean;
  #L2506e0.  if v2 == 0 then goto L250718;
  #L2506e4.  v7:= (`retrofit2.http.Headers`) v7 @kind object;
  #L2506e8.  call temp:= `value`(v7) @signature `Lretrofit2/http/Headers;.value:()[Ljava/lang/String;` @kind interface;
  #L2506ee.  v0:= temp @kind object;
  #L2506f0.  v2:= length @variable v0;
  #L2506f2.  if v2 != 0 then goto L250708;
  #L2506f6.  v2:= "@Headers annotation is empty." @kind object;
  #L2506fa.  v3:= new `java.lang.Object`[v4];
  #L2506fe.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250704.  v2:= temp @kind object;
  #L250706.  throw v2;
  #L250708.  call temp:= `parseHeaders`(v6, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseHeaders:([Ljava/lang/String;)Lokhttp3/Headers;` @kind direct;
  #L25070e.  v2:= temp @kind object;
  #L250710.  v6.`retrofit2.ServiceMethod$Builder.headers` @type ^`okhttp3.Headers` := v2 @kind object;
  #L250714.  goto L2505c6;
  #L250718.  v2:= instanceof @variable v7 @type ^`retrofit2.http.Multipart` @kind boolean;
  #L25071c.  if v2 == 0 then goto L250742;
  #L250720.  v2:= v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L250724.  if v2 == 0 then goto L25073a;
  #L250728.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L25072c.  v3:= new `java.lang.Object`[v4];
  #L250730.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250736.  v2:= temp @kind object;
  #L250738.  throw v2;
  #L25073a.  v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` := v5 @kind boolean;
  #L25073e.  goto L2505c6;
  #L250742.  v2:= instanceof @variable v7 @type ^`retrofit2.http.FormUrlEncoded` @kind boolean;
  #L250746.  if v2 == 0 then goto L2505c6;
  #L25074a.  v2:= v6.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L25074e.  if v2 == 0 then goto L250764;
  #L250752.  v2:= "Only one encoding annotation is allowed." @kind object;
  #L250756.  v3:= new `java.lang.Object`[v4];
  #L25075a.  call temp:= `methodError`(v6, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250760.  v2:= temp @kind object;
  #L250762.  throw v2;
  #L250764.  v6.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` := v5 @kind boolean;
  #L250768.  goto L2505c6;
}
procedure `retrofit2.ParameterHandler` `parseParameter`(`retrofit2.ServiceMethod$Builder` v6 @kind this, `int` v7 @name `p`, `java.lang.reflect.Type` v8 @kind object @name `parameterType`, `java.lang.annotation.Annotation`[] v9 @kind object @name `annotations`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L25077c.  v4:= 0I;
  #L25077e.  v2:= 0I;
  #L250780.  v5:= length @variable v9;
  #L250782.  v3:= v4;
  #L250784.  if v3 >= v5 then goto L2507b8;
  #L250788.  v0:= v9[v3] @kind object;
  #L25078c.  call temp:= `parseParameterAnnotation`(v6, v7, v8, v9, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L250792.  v1:= temp @kind object;
  #L250794.  if v1 != 0 then goto L25079e;
  #L250798.  v3:= v3 + 1;
  #L25079c.  goto L250784;
  #L25079e.  if v2 == 0 then goto L2507b4;
  #L2507a2.  v3:= "Multiple Retrofit annotations found, only one allowed." @kind object;
  #L2507a6.  v4:= new `java.lang.Object`[v4];
  #L2507aa.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2507b0.  v3:= temp @kind object;
  #L2507b2.  throw v3;
  #L2507b4.  v2:= v1 @kind object;
  #L2507b6.  goto L250798;
  #L2507b8.  if v2 != 0 then goto L2507ce;
  #L2507bc.  v3:= "No Retrofit annotation found." @kind object;
  #L2507c0.  v4:= new `java.lang.Object`[v4];
  #L2507c4.  call temp:= `parameterError`(v6, v7, v3, v4) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2507ca.  v3:= temp @kind object;
  #L2507cc.  throw v3;
  #L2507ce.  return v2 @kind object;
}
procedure `retrofit2.ParameterHandler` `parseParameterAnnotation`(`retrofit2.ServiceMethod$Builder` v30 @kind this, `int` v31 @name `p`, `java.lang.reflect.Type` v32 @kind object @name `type`, `java.lang.annotation.Annotation`[] v33 @kind object @name `annotations`, `java.lang.annotation.Annotation` v34 @kind object @name `annotation`) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameterAnnotation:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;

  #L2507e0.  v0:= v34 @kind object;
  #L2507e4.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Url` @kind boolean;
  #L2507e8.  v26:= v0;
  #L2507ec.  if v26 == 0 then goto L2509a2;
  #L2507f0.  v0:= v30 @kind object;
  #L2507f4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L2507f8.  v26:= v0;
  #L2507fc.  if v26 == 0 then goto L25082e;
  #L250800.  v26:= "Multiple @Url method annotations found." @kind object;
  #L250804.  v27:= 0I;
  #L250808.  v0:= v27;
  #L25080c.  v0:= new `java.lang.Object`[v0];
  #L250810.  v27:= v0 @kind object;
  #L250814.  v0:= v30 @kind object;
  #L250818.  v1:= v31;
  #L25081c.  v2:= v26 @kind object;
  #L250820.  v3:= v27 @kind object;
  #L250824.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25082a.  v26:= temp @kind object;
  #L25082c.  throw v26;
  #L25082e.  v0:= v30 @kind object;
  #L250832.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` @kind boolean;
  #L250836.  v26:= v0;
  #L25083a.  if v26 == 0 then goto L25086c;
  #L25083e.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L250842.  v27:= 0I;
  #L250846.  v0:= v27;
  #L25084a.  v0:= new `java.lang.Object`[v0];
  #L25084e.  v27:= v0 @kind object;
  #L250852.  v0:= v30 @kind object;
  #L250856.  v1:= v31;
  #L25085a.  v2:= v26 @kind object;
  #L25085e.  v3:= v27 @kind object;
  #L250862.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250868.  v26:= temp @kind object;
  #L25086a.  throw v26;
  #L25086c.  v0:= v30 @kind object;
  #L250870.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L250874.  v26:= v0;
  #L250878.  if v26 == 0 then goto L2508aa;
  #L25087c.  v26:= "A @Url parameter must not come after a @Query" @kind object;
  #L250880.  v27:= 0I;
  #L250884.  v0:= v27;
  #L250888.  v0:= new `java.lang.Object`[v0];
  #L25088c.  v27:= v0 @kind object;
  #L250890.  v0:= v30 @kind object;
  #L250894.  v1:= v31;
  #L250898.  v2:= v26 @kind object;
  #L25089c.  v3:= v27 @kind object;
  #L2508a0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2508a6.  v26:= temp @kind object;
  #L2508a8.  throw v26;
  #L2508aa.  v0:= v30 @kind object;
  #L2508ae.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L2508b2.  v26:= v0 @kind object;
  #L2508b6.  if v26 == 0 then goto L2508fc;
  #L2508ba.  v26:= "@Url cannot be used with @%s URL" @kind object;
  #L2508be.  v27:= 1I;
  #L2508c2.  v0:= v27;
  #L2508c6.  v0:= new `java.lang.Object`[v0];
  #L2508ca.  v27:= v0 @kind object;
  #L2508ce.  v28:= 0I;
  #L2508d2.  v0:= v30 @kind object;
  #L2508d6.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L2508da.  v29:= v0 @kind object;
  #L2508de.  v27[v28]:= v29 @kind object;
  #L2508e2.  v0:= v30 @kind object;
  #L2508e6.  v1:= v31;
  #L2508ea.  v2:= v26 @kind object;
  #L2508ee.  v3:= v27 @kind object;
  #L2508f2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2508f8.  v26:= temp @kind object;
  #L2508fa.  throw v26;
  #L2508fc.  v26:= 1I;
  #L250900.  v0:= v26;
  #L250904.  v1:= v30 @kind object;
  #L250908.  v1.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` := v0 @kind boolean;
  #L25090c.  v26:= constclass @type ^`okhttp3.HttpUrl` @kind object;
  #L250910.  v0:= v32 @kind object;
  #L250914.  v1:= v26 @kind object;
  #L250918.  if v0 == v1 then goto L250968;
  #L25091c.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L250920.  v0:= v32 @kind object;
  #L250924.  v1:= v26 @kind object;
  #L250928.  if v0 == v1 then goto L250968;
  #L25092c.  v26:= constclass @type ^`java.net.URI` @kind object;
  #L250930.  v0:= v32 @kind object;
  #L250934.  v1:= v26 @kind object;
  #L250938.  if v0 == v1 then goto L250968;
  #L25093c.  v0:= v32 @kind object;
  #L250940.  v0:= instanceof @variable v0 @type ^`java.lang.Class` @kind boolean;
  #L250944.  v26:= v0;
  #L250948.  if v26 == 0 then goto L250974;
  #L25094c.  v26:= "android.net.Uri" @kind object;
  #L250950.  v32:= (`java.lang.Class`) v32 @kind object;
  #L250954.  call temp:= `getName`(v32) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L25095a.  v27:= temp @kind object;
  #L25095c.  call temp:= `equals`(v26, v27) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L250962.  v26:= temp;
  #L250964.  if v26 == 0 then goto L250974;
  #L250968.  v26:= new `retrofit2.ParameterHandler$RelativeUrl`;
  #L25096c.  call `<init>`(v26) @signature `Lretrofit2/ParameterHandler$RelativeUrl;.<init>:()V` @kind direct;
  #L250972.  return v26 @kind object;
  #L250974.  v26:= "@Url must be okhttp3.HttpUrl, String, java.net.URI, or android.net.Uri type." @kind object;
  #L250978.  v27:= 0I;
  #L25097c.  v0:= v27;
  #L250980.  v0:= new `java.lang.Object`[v0];
  #L250984.  v27:= v0 @kind object;
  #L250988.  v0:= v30 @kind object;
  #L25098c.  v1:= v31;
  #L250990.  v2:= v26 @kind object;
  #L250994.  v3:= v27 @kind object;
  #L250998.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25099e.  v26:= temp @kind object;
  #L2509a0.  throw v26;
  #L2509a2.  v0:= v34 @kind object;
  #L2509a6.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Path` @kind boolean;
  #L2509aa.  v26:= v0;
  #L2509ae.  if v26 == 0 then goto L250aec;
  #L2509b2.  v0:= v30 @kind object;
  #L2509b6.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` @kind boolean;
  #L2509ba.  v26:= v0;
  #L2509be.  if v26 == 0 then goto L2509f0;
  #L2509c2.  v26:= "A @Path parameter must not come after a @Query." @kind object;
  #L2509c6.  v27:= 0I;
  #L2509ca.  v0:= v27;
  #L2509ce.  v0:= new `java.lang.Object`[v0];
  #L2509d2.  v27:= v0 @kind object;
  #L2509d6.  v0:= v30 @kind object;
  #L2509da.  v1:= v31;
  #L2509de.  v2:= v26 @kind object;
  #L2509e2.  v3:= v27 @kind object;
  #L2509e6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2509ec.  v26:= temp @kind object;
  #L2509ee.  throw v26;
  #L2509f0.  v0:= v30 @kind object;
  #L2509f4.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L2509f8.  v26:= v0;
  #L2509fc.  if v26 == 0 then goto L250a2e;
  #L250a00.  v26:= "@Path parameters may not be used with @Url." @kind object;
  #L250a04.  v27:= 0I;
  #L250a08.  v0:= v27;
  #L250a0c.  v0:= new `java.lang.Object`[v0];
  #L250a10.  v27:= v0 @kind object;
  #L250a14.  v0:= v30 @kind object;
  #L250a18.  v1:= v31;
  #L250a1c.  v2:= v26 @kind object;
  #L250a20.  v3:= v27 @kind object;
  #L250a24.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250a2a.  v26:= temp @kind object;
  #L250a2c.  throw v26;
  #L250a2e.  v0:= v30 @kind object;
  #L250a32.  v0:= v0.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L250a36.  v26:= v0 @kind object;
  #L250a3a.  if v26 != 0 then goto L250a80;
  #L250a3e.  v26:= "@Path can only be used with relative url on @%s" @kind object;
  #L250a42.  v27:= 1I;
  #L250a46.  v0:= v27;
  #L250a4a.  v0:= new `java.lang.Object`[v0];
  #L250a4e.  v27:= v0 @kind object;
  #L250a52.  v28:= 0I;
  #L250a56.  v0:= v30 @kind object;
  #L250a5a.  v0:= v0.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L250a5e.  v29:= v0 @kind object;
  #L250a62.  v27[v28]:= v29 @kind object;
  #L250a66.  v0:= v30 @kind object;
  #L250a6a.  v1:= v31;
  #L250a6e.  v2:= v26 @kind object;
  #L250a72.  v3:= v27 @kind object;
  #L250a76.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250a7c.  v26:= temp @kind object;
  #L250a7e.  throw v26;
  #L250a80.  v26:= 1I;
  #L250a84.  v0:= v26;
  #L250a88.  v1:= v30 @kind object;
  #L250a8c.  v1.`retrofit2.ServiceMethod$Builder.gotPath` @type ^`boolean` := v0 @kind boolean;
  #L250a90.  v20:= v34 @kind object;
  #L250a94.  v20:= (`retrofit2.http.Path`) v20 @kind object;
  #L250a98.  call temp:= `value`(v20) @signature `Lretrofit2/http/Path;.value:()Ljava/lang/String;` @kind interface;
  #L250a9e.  v15:= temp @kind object;
  #L250aa0.  v0:= v30 @kind object;
  #L250aa4.  v1:= v31;
  #L250aa8.  call `validatePathName`(v0, v1, v15) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @kind direct;
  #L250aae.  v0:= v30 @kind object;
  #L250ab2.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250ab6.  v26:= v0 @kind object;
  #L250aba.  v0:= v26 @kind object;
  #L250abe.  v1:= v32 @kind object;
  #L250ac2.  v2:= v33 @kind object;
  #L250ac6.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250acc.  v5:= temp @kind object;
  #L250ace.  v26:= new `retrofit2.ParameterHandler$Path`;
  #L250ad2.  call temp:= `encoded`(v20) @signature `Lretrofit2/http/Path;.encoded:()Z` @kind interface;
  #L250ad8.  v27:= temp;
  #L250ada.  v0:= v26 @kind object;
  #L250ade.  v1:= v27;
  #L250ae2.  call `<init>`(v0, v15, v5, v1) @signature `Lretrofit2/ParameterHandler$Path;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L250ae8.  goto L250972;
  #L250aec.  v0:= v34 @kind object;
  #L250af0.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Query` @kind boolean;
  #L250af4.  v26:= v0;
  #L250af8.  if v26 == 0 then goto L250c9e;
  #L250afc.  v21:= v34 @kind object;
  #L250b00.  v21:= (`retrofit2.http.Query`) v21 @kind object;
  #L250b04.  call temp:= `value`(v21) @signature `Lretrofit2/http/Query;.value:()Ljava/lang/String;` @kind interface;
  #L250b0a.  v15:= temp @kind object;
  #L250b0c.  call temp:= `encoded`(v21) @signature `Lretrofit2/http/Query;.encoded:()Z` @kind interface;
  #L250b12.  v8:= temp;
  #L250b14.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L250b1a.  v22:= temp @kind object;
  #L250b1c.  v26:= 1I;
  #L250b20.  v0:= v26;
  #L250b24.  v1:= v30 @kind object;
  #L250b28.  v1.`retrofit2.ServiceMethod$Builder.gotQuery` @type ^`boolean` := v0 @kind boolean;
  #L250b2c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L250b30.  v0:= v26 @kind object;
  #L250b34.  v1:= v22 @kind object;
  #L250b38.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L250b3e.  v26:= temp;
  #L250b40.  if v26 == 0 then goto L250c1a;
  #L250b44.  v0:= v32 @kind object;
  #L250b48.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L250b4c.  v26:= v0;
  #L250b50.  if v26 != 0 then goto L250bc8;
  #L250b54.  v26:= new `java.lang.StringBuilder`;
  #L250b58.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L250b5e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L250b64.  v27:= temp @kind object;
  #L250b66.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250b6c.  v26:= temp @kind object;
  #L250b6e.  v27:= " must include generic type (e.g., " @kind object;
  #L250b72.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250b78.  v26:= temp @kind object;
  #L250b7a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L250b80.  v27:= temp @kind object;
  #L250b82.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250b88.  v26:= temp @kind object;
  #L250b8a.  v27:= "<String>)" @kind object;
  #L250b8e.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250b94.  v26:= temp @kind object;
  #L250b96.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250b9c.  v26:= temp @kind object;
  #L250b9e.  v27:= 0I;
  #L250ba2.  v0:= v27;
  #L250ba6.  v0:= new `java.lang.Object`[v0];
  #L250baa.  v27:= v0 @kind object;
  #L250bae.  v0:= v30 @kind object;
  #L250bb2.  v1:= v31;
  #L250bb6.  v2:= v26 @kind object;
  #L250bba.  v3:= v27 @kind object;
  #L250bbe.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250bc4.  v26:= temp @kind object;
  #L250bc6.  throw v26;
  #L250bc8.  v16:= v32 @kind object;
  #L250bcc.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L250bd0.  v26:= 0I;
  #L250bd4.  v0:= v26;
  #L250bd8.  v1:= v16 @kind object;
  #L250bdc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L250be2.  v12:= temp @kind object;
  #L250be4.  v0:= v30 @kind object;
  #L250be8.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250bec.  v26:= v0 @kind object;
  #L250bf0.  v0:= v26 @kind object;
  #L250bf4.  v1:= v33 @kind object;
  #L250bf8.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250bfe.  v5:= temp @kind object;
  #L250c00.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L250c04.  v0:= v26 @kind object;
  #L250c08.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L250c0e.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Query;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L250c14.  v26:= temp @kind object;
  #L250c16.  goto L250972;
  #L250c1a.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L250c20.  v26:= temp;
  #L250c22.  if v26 == 0 then goto L250c6c;
  #L250c26.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L250c2c.  v26:= temp @kind object;
  #L250c2e.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L250c34.  v4:= temp @kind object;
  #L250c36.  v0:= v30 @kind object;
  #L250c3a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250c3e.  v26:= v0 @kind object;
  #L250c42.  v0:= v26 @kind object;
  #L250c46.  v1:= v33 @kind object;
  #L250c4a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250c50.  v5:= temp @kind object;
  #L250c52.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L250c56.  v0:= v26 @kind object;
  #L250c5a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L250c60.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Query;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L250c66.  v26:= temp @kind object;
  #L250c68.  goto L250972;
  #L250c6c.  v0:= v30 @kind object;
  #L250c70.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250c74.  v26:= v0 @kind object;
  #L250c78.  v0:= v26 @kind object;
  #L250c7c.  v1:= v32 @kind object;
  #L250c80.  v2:= v33 @kind object;
  #L250c84.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250c8a.  v5:= temp @kind object;
  #L250c8c.  v26:= new `retrofit2.ParameterHandler$Query`;
  #L250c90.  v0:= v26 @kind object;
  #L250c94.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L250c9a.  goto L250972;
  #L250c9e.  v0:= v34 @kind object;
  #L250ca2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.QueryMap` @kind boolean;
  #L250ca6.  v26:= v0;
  #L250caa.  if v26 == 0 then goto L250e24;
  #L250cae.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L250cb4.  v22:= temp @kind object;
  #L250cb6.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L250cba.  v0:= v26 @kind object;
  #L250cbe.  v1:= v22 @kind object;
  #L250cc2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L250cc8.  v26:= temp;
  #L250cca.  if v26 != 0 then goto L250cfc;
  #L250cce.  v26:= "@QueryMap parameter type must be Map." @kind object;
  #L250cd2.  v27:= 0I;
  #L250cd6.  v0:= v27;
  #L250cda.  v0:= new `java.lang.Object`[v0];
  #L250cde.  v27:= v0 @kind object;
  #L250ce2.  v0:= v30 @kind object;
  #L250ce6.  v1:= v31;
  #L250cea.  v2:= v26 @kind object;
  #L250cee.  v3:= v27 @kind object;
  #L250cf2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250cf8.  v26:= temp @kind object;
  #L250cfa.  throw v26;
  #L250cfc.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L250d00.  v0:= v32 @kind object;
  #L250d04.  v1:= v22 @kind object;
  #L250d08.  v2:= v26 @kind object;
  #L250d0c.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L250d12.  v14:= temp @kind object;
  #L250d14.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L250d18.  v26:= v0;
  #L250d1c.  if v26 != 0 then goto L250d4e;
  #L250d20.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L250d24.  v27:= 0I;
  #L250d28.  v0:= v27;
  #L250d2c.  v0:= new `java.lang.Object`[v0];
  #L250d30.  v27:= v0 @kind object;
  #L250d34.  v0:= v30 @kind object;
  #L250d38.  v1:= v31;
  #L250d3c.  v2:= v26 @kind object;
  #L250d40.  v3:= v27 @kind object;
  #L250d44.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250d4a.  v26:= temp @kind object;
  #L250d4c.  throw v26;
  #L250d4e.  v16:= v14 @kind object;
  #L250d52.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L250d56.  v26:= 0I;
  #L250d5a.  v0:= v26;
  #L250d5e.  v1:= v16 @kind object;
  #L250d62.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L250d68.  v13:= temp @kind object;
  #L250d6a.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L250d6e.  v0:= v26 @kind object;
  #L250d72.  if v0 == v13 then goto L250dca;
  #L250d76.  v26:= new `java.lang.StringBuilder`;
  #L250d7a.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L250d80.  v27:= "@QueryMap keys must be of type String: " @kind object;
  #L250d84.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250d8a.  v26:= temp @kind object;
  #L250d8c.  v0:= v26 @kind object;
  #L250d90.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250d96.  v26:= temp @kind object;
  #L250d98.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250d9e.  v26:= temp @kind object;
  #L250da0.  v27:= 0I;
  #L250da4.  v0:= v27;
  #L250da8.  v0:= new `java.lang.Object`[v0];
  #L250dac.  v27:= v0 @kind object;
  #L250db0.  v0:= v30 @kind object;
  #L250db4.  v1:= v31;
  #L250db8.  v2:= v26 @kind object;
  #L250dbc.  v3:= v27 @kind object;
  #L250dc0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250dc6.  v26:= temp @kind object;
  #L250dc8.  throw v26;
  #L250dca.  v26:= 1I;
  #L250dce.  v0:= v26;
  #L250dd2.  v1:= v16 @kind object;
  #L250dd6.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L250ddc.  v25:= temp @kind object;
  #L250dde.  v0:= v30 @kind object;
  #L250de2.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250de6.  v26:= v0 @kind object;
  #L250dea.  v0:= v26 @kind object;
  #L250dee.  v1:= v25 @kind object;
  #L250df2.  v2:= v33 @kind object;
  #L250df6.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250dfc.  v23:= temp @kind object;
  #L250dfe.  v26:= new `retrofit2.ParameterHandler$QueryMap`;
  #L250e02.  v34:= (`retrofit2.http.QueryMap`) v34 @kind object;
  #L250e06.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/QueryMap;.encoded:()Z` @kind interface;
  #L250e0c.  v27:= temp;
  #L250e0e.  v0:= v26 @kind object;
  #L250e12.  v1:= v23 @kind object;
  #L250e16.  v2:= v27;
  #L250e1a.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L250e20.  goto L250972;
  #L250e24.  v0:= v34 @kind object;
  #L250e28.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Header` @kind boolean;
  #L250e2c.  v26:= v0;
  #L250e30.  if v26 == 0 then goto L250fbe;
  #L250e34.  v10:= v34 @kind object;
  #L250e38.  v10:= (`retrofit2.http.Header`) v10 @kind object;
  #L250e3c.  call temp:= `value`(v10) @signature `Lretrofit2/http/Header;.value:()Ljava/lang/String;` @kind interface;
  #L250e42.  v15:= temp @kind object;
  #L250e44.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L250e4a.  v22:= temp @kind object;
  #L250e4c.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L250e50.  v0:= v26 @kind object;
  #L250e54.  v1:= v22 @kind object;
  #L250e58.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L250e5e.  v26:= temp;
  #L250e60.  if v26 == 0 then goto L250f3a;
  #L250e64.  v0:= v32 @kind object;
  #L250e68.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L250e6c.  v26:= v0;
  #L250e70.  if v26 != 0 then goto L250ee8;
  #L250e74.  v26:= new `java.lang.StringBuilder`;
  #L250e78.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L250e7e.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L250e84.  v27:= temp @kind object;
  #L250e86.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250e8c.  v26:= temp @kind object;
  #L250e8e.  v27:= " must include generic type (e.g., " @kind object;
  #L250e92.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250e98.  v26:= temp @kind object;
  #L250e9a.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L250ea0.  v27:= temp @kind object;
  #L250ea2.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250ea8.  v26:= temp @kind object;
  #L250eaa.  v27:= "<String>)" @kind object;
  #L250eae.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L250eb4.  v26:= temp @kind object;
  #L250eb6.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L250ebc.  v26:= temp @kind object;
  #L250ebe.  v27:= 0I;
  #L250ec2.  v0:= v27;
  #L250ec6.  v0:= new `java.lang.Object`[v0];
  #L250eca.  v27:= v0 @kind object;
  #L250ece.  v0:= v30 @kind object;
  #L250ed2.  v1:= v31;
  #L250ed6.  v2:= v26 @kind object;
  #L250eda.  v3:= v27 @kind object;
  #L250ede.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L250ee4.  v26:= temp @kind object;
  #L250ee6.  throw v26;
  #L250ee8.  v16:= v32 @kind object;
  #L250eec.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L250ef0.  v26:= 0I;
  #L250ef4.  v0:= v26;
  #L250ef8.  v1:= v16 @kind object;
  #L250efc.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L250f02.  v12:= temp @kind object;
  #L250f04.  v0:= v30 @kind object;
  #L250f08.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250f0c.  v26:= v0 @kind object;
  #L250f10.  v0:= v26 @kind object;
  #L250f14.  v1:= v33 @kind object;
  #L250f18.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250f1e.  v5:= temp @kind object;
  #L250f20.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L250f24.  v0:= v26 @kind object;
  #L250f28.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L250f2e.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Header;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L250f34.  v26:= temp @kind object;
  #L250f36.  goto L250972;
  #L250f3a.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L250f40.  v26:= temp;
  #L250f42.  if v26 == 0 then goto L250f8c;
  #L250f46.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L250f4c.  v26:= temp @kind object;
  #L250f4e.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L250f54.  v4:= temp @kind object;
  #L250f56.  v0:= v30 @kind object;
  #L250f5a.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250f5e.  v26:= v0 @kind object;
  #L250f62.  v0:= v26 @kind object;
  #L250f66.  v1:= v33 @kind object;
  #L250f6a.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250f70.  v5:= temp @kind object;
  #L250f72.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L250f76.  v0:= v26 @kind object;
  #L250f7a.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L250f80.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Header;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L250f86.  v26:= temp @kind object;
  #L250f88.  goto L250972;
  #L250f8c.  v0:= v30 @kind object;
  #L250f90.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L250f94.  v26:= v0 @kind object;
  #L250f98.  v0:= v26 @kind object;
  #L250f9c.  v1:= v32 @kind object;
  #L250fa0.  v2:= v33 @kind object;
  #L250fa4.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L250faa.  v5:= temp @kind object;
  #L250fac.  v26:= new `retrofit2.ParameterHandler$Header`;
  #L250fb0.  v0:= v26 @kind object;
  #L250fb4.  call `<init>`(v0, v15, v5) @signature `Lretrofit2/ParameterHandler$Header;.<init>:(Ljava/lang/String;Lretrofit2/Converter;)V` @kind direct;
  #L250fba.  goto L250972;
  #L250fbe.  v0:= v34 @kind object;
  #L250fc2.  v0:= instanceof @variable v0 @type ^`retrofit2.http.HeaderMap` @kind boolean;
  #L250fc6.  v26:= v0;
  #L250fca.  if v26 == 0 then goto L251134;
  #L250fce.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L250fd4.  v22:= temp @kind object;
  #L250fd6.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L250fda.  v0:= v26 @kind object;
  #L250fde.  v1:= v22 @kind object;
  #L250fe2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L250fe8.  v26:= temp;
  #L250fea.  if v26 != 0 then goto L25101c;
  #L250fee.  v26:= "@HeaderMap parameter type must be Map." @kind object;
  #L250ff2.  v27:= 0I;
  #L250ff6.  v0:= v27;
  #L250ffa.  v0:= new `java.lang.Object`[v0];
  #L250ffe.  v27:= v0 @kind object;
  #L251002.  v0:= v30 @kind object;
  #L251006.  v1:= v31;
  #L25100a.  v2:= v26 @kind object;
  #L25100e.  v3:= v27 @kind object;
  #L251012.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251018.  v26:= temp @kind object;
  #L25101a.  throw v26;
  #L25101c.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L251020.  v0:= v32 @kind object;
  #L251024.  v1:= v22 @kind object;
  #L251028.  v2:= v26 @kind object;
  #L25102c.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L251032.  v14:= temp @kind object;
  #L251034.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L251038.  v26:= v0;
  #L25103c.  if v26 != 0 then goto L25106e;
  #L251040.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L251044.  v27:= 0I;
  #L251048.  v0:= v27;
  #L25104c.  v0:= new `java.lang.Object`[v0];
  #L251050.  v27:= v0 @kind object;
  #L251054.  v0:= v30 @kind object;
  #L251058.  v1:= v31;
  #L25105c.  v2:= v26 @kind object;
  #L251060.  v3:= v27 @kind object;
  #L251064.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25106a.  v26:= temp @kind object;
  #L25106c.  throw v26;
  #L25106e.  v16:= v14 @kind object;
  #L251072.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L251076.  v26:= 0I;
  #L25107a.  v0:= v26;
  #L25107e.  v1:= v16 @kind object;
  #L251082.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251088.  v13:= temp @kind object;
  #L25108a.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L25108e.  v0:= v26 @kind object;
  #L251092.  if v0 == v13 then goto L2510ea;
  #L251096.  v26:= new `java.lang.StringBuilder`;
  #L25109a.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2510a0.  v27:= "@HeaderMap keys must be of type String: " @kind object;
  #L2510a4.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2510aa.  v26:= temp @kind object;
  #L2510ac.  v0:= v26 @kind object;
  #L2510b0.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2510b6.  v26:= temp @kind object;
  #L2510b8.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2510be.  v26:= temp @kind object;
  #L2510c0.  v27:= 0I;
  #L2510c4.  v0:= v27;
  #L2510c8.  v0:= new `java.lang.Object`[v0];
  #L2510cc.  v27:= v0 @kind object;
  #L2510d0.  v0:= v30 @kind object;
  #L2510d4.  v1:= v31;
  #L2510d8.  v2:= v26 @kind object;
  #L2510dc.  v3:= v27 @kind object;
  #L2510e0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2510e6.  v26:= temp @kind object;
  #L2510e8.  throw v26;
  #L2510ea.  v26:= 1I;
  #L2510ee.  v0:= v26;
  #L2510f2.  v1:= v16 @kind object;
  #L2510f6.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L2510fc.  v25:= temp @kind object;
  #L2510fe.  v0:= v30 @kind object;
  #L251102.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L251106.  v26:= v0 @kind object;
  #L25110a.  v0:= v26 @kind object;
  #L25110e.  v1:= v25 @kind object;
  #L251112.  v2:= v33 @kind object;
  #L251116.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L25111c.  v23:= temp @kind object;
  #L25111e.  v26:= new `retrofit2.ParameterHandler$HeaderMap`;
  #L251122.  v0:= v26 @kind object;
  #L251126.  v1:= v23 @kind object;
  #L25112a.  call `<init>`(v0, v1) @signature `Lretrofit2/ParameterHandler$HeaderMap;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L251130.  goto L250972;
  #L251134.  v0:= v34 @kind object;
  #L251138.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Field` @kind boolean;
  #L25113c.  v26:= v0;
  #L251140.  if v26 == 0 then goto L251324;
  #L251144.  v0:= v30 @kind object;
  #L251148.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L25114c.  v26:= v0;
  #L251150.  if v26 != 0 then goto L251182;
  #L251154.  v26:= "@Field parameters can only be used with form encoding." @kind object;
  #L251158.  v27:= 0I;
  #L25115c.  v0:= v27;
  #L251160.  v0:= new `java.lang.Object`[v0];
  #L251164.  v27:= v0 @kind object;
  #L251168.  v0:= v30 @kind object;
  #L25116c.  v1:= v31;
  #L251170.  v2:= v26 @kind object;
  #L251174.  v3:= v27 @kind object;
  #L251178.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25117e.  v26:= temp @kind object;
  #L251180.  throw v26;
  #L251182.  v9:= v34 @kind object;
  #L251186.  v9:= (`retrofit2.http.Field`) v9 @kind object;
  #L25118a.  call temp:= `value`(v9) @signature `Lretrofit2/http/Field;.value:()Ljava/lang/String;` @kind interface;
  #L251190.  v15:= temp @kind object;
  #L251192.  call temp:= `encoded`(v9) @signature `Lretrofit2/http/Field;.encoded:()Z` @kind interface;
  #L251198.  v8:= temp;
  #L25119a.  v26:= 1I;
  #L25119e.  v0:= v26;
  #L2511a2.  v1:= v30 @kind object;
  #L2511a6.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L2511aa.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L2511b0.  v22:= temp @kind object;
  #L2511b2.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L2511b6.  v0:= v26 @kind object;
  #L2511ba.  v1:= v22 @kind object;
  #L2511be.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2511c4.  v26:= temp;
  #L2511c6.  if v26 == 0 then goto L2512a0;
  #L2511ca.  v0:= v32 @kind object;
  #L2511ce.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L2511d2.  v26:= v0;
  #L2511d6.  if v26 != 0 then goto L25124e;
  #L2511da.  v26:= new `java.lang.StringBuilder`;
  #L2511de.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2511e4.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2511ea.  v27:= temp @kind object;
  #L2511ec.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2511f2.  v26:= temp @kind object;
  #L2511f4.  v27:= " must include generic type (e.g., " @kind object;
  #L2511f8.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2511fe.  v26:= temp @kind object;
  #L251200.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L251206.  v27:= temp @kind object;
  #L251208.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25120e.  v26:= temp @kind object;
  #L251210.  v27:= "<String>)" @kind object;
  #L251214.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25121a.  v26:= temp @kind object;
  #L25121c.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251222.  v26:= temp @kind object;
  #L251224.  v27:= 0I;
  #L251228.  v0:= v27;
  #L25122c.  v0:= new `java.lang.Object`[v0];
  #L251230.  v27:= v0 @kind object;
  #L251234.  v0:= v30 @kind object;
  #L251238.  v1:= v31;
  #L25123c.  v2:= v26 @kind object;
  #L251240.  v3:= v27 @kind object;
  #L251244.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25124a.  v26:= temp @kind object;
  #L25124c.  throw v26;
  #L25124e.  v16:= v32 @kind object;
  #L251252.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L251256.  v26:= 0I;
  #L25125a.  v0:= v26;
  #L25125e.  v1:= v16 @kind object;
  #L251262.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251268.  v12:= temp @kind object;
  #L25126a.  v0:= v30 @kind object;
  #L25126e.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L251272.  v26:= v0 @kind object;
  #L251276.  v0:= v26 @kind object;
  #L25127a.  v1:= v33 @kind object;
  #L25127e.  call temp:= `stringConverter`(v0, v12, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L251284.  v5:= temp @kind object;
  #L251286.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L25128a.  v0:= v26 @kind object;
  #L25128e.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L251294.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Field;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L25129a.  v26:= temp @kind object;
  #L25129c.  goto L250972;
  #L2512a0.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L2512a6.  v26:= temp;
  #L2512a8.  if v26 == 0 then goto L2512f2;
  #L2512ac.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L2512b2.  v26:= temp @kind object;
  #L2512b4.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L2512ba.  v4:= temp @kind object;
  #L2512bc.  v0:= v30 @kind object;
  #L2512c0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2512c4.  v26:= v0 @kind object;
  #L2512c8.  v0:= v26 @kind object;
  #L2512cc.  v1:= v33 @kind object;
  #L2512d0.  call temp:= `stringConverter`(v0, v4, v1) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L2512d6.  v5:= temp @kind object;
  #L2512d8.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L2512dc.  v0:= v26 @kind object;
  #L2512e0.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L2512e6.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Field;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L2512ec.  v26:= temp @kind object;
  #L2512ee.  goto L250972;
  #L2512f2.  v0:= v30 @kind object;
  #L2512f6.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2512fa.  v26:= v0 @kind object;
  #L2512fe.  v0:= v26 @kind object;
  #L251302.  v1:= v32 @kind object;
  #L251306.  v2:= v33 @kind object;
  #L25130a.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L251310.  v5:= temp @kind object;
  #L251312.  v26:= new `retrofit2.ParameterHandler$Field`;
  #L251316.  v0:= v26 @kind object;
  #L25131a.  call `<init>`(v0, v15, v5, v8) @signature `Lretrofit2/ParameterHandler$Field;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @kind direct;
  #L251320.  goto L250972;
  #L251324.  v0:= v34 @kind object;
  #L251328.  v0:= instanceof @variable v0 @type ^`retrofit2.http.FieldMap` @kind boolean;
  #L25132c.  v26:= v0;
  #L251330.  if v26 == 0 then goto L2514f8;
  #L251334.  v0:= v30 @kind object;
  #L251338.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L25133c.  v26:= v0;
  #L251340.  if v26 != 0 then goto L251372;
  #L251344.  v26:= "@FieldMap parameters can only be used with form encoding." @kind object;
  #L251348.  v27:= 0I;
  #L25134c.  v0:= v27;
  #L251350.  v0:= new `java.lang.Object`[v0];
  #L251354.  v27:= v0 @kind object;
  #L251358.  v0:= v30 @kind object;
  #L25135c.  v1:= v31;
  #L251360.  v2:= v26 @kind object;
  #L251364.  v3:= v27 @kind object;
  #L251368.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25136e.  v26:= temp @kind object;
  #L251370.  throw v26;
  #L251372.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L251378.  v22:= temp @kind object;
  #L25137a.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L25137e.  v0:= v26 @kind object;
  #L251382.  v1:= v22 @kind object;
  #L251386.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L25138c.  v26:= temp;
  #L25138e.  if v26 != 0 then goto L2513c0;
  #L251392.  v26:= "@FieldMap parameter type must be Map." @kind object;
  #L251396.  v27:= 0I;
  #L25139a.  v0:= v27;
  #L25139e.  v0:= new `java.lang.Object`[v0];
  #L2513a2.  v27:= v0 @kind object;
  #L2513a6.  v0:= v30 @kind object;
  #L2513aa.  v1:= v31;
  #L2513ae.  v2:= v26 @kind object;
  #L2513b2.  v3:= v27 @kind object;
  #L2513b6.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2513bc.  v26:= temp @kind object;
  #L2513be.  throw v26;
  #L2513c0.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L2513c4.  v0:= v32 @kind object;
  #L2513c8.  v1:= v22 @kind object;
  #L2513cc.  v2:= v26 @kind object;
  #L2513d0.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L2513d6.  v14:= temp @kind object;
  #L2513d8.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L2513dc.  v26:= v0;
  #L2513e0.  if v26 != 0 then goto L251412;
  #L2513e4.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L2513e8.  v27:= 0I;
  #L2513ec.  v0:= v27;
  #L2513f0.  v0:= new `java.lang.Object`[v0];
  #L2513f4.  v27:= v0 @kind object;
  #L2513f8.  v0:= v30 @kind object;
  #L2513fc.  v1:= v31;
  #L251400.  v2:= v26 @kind object;
  #L251404.  v3:= v27 @kind object;
  #L251408.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25140e.  v26:= temp @kind object;
  #L251410.  throw v26;
  #L251412.  v16:= v14 @kind object;
  #L251416.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L25141a.  v26:= 0I;
  #L25141e.  v0:= v26;
  #L251422.  v1:= v16 @kind object;
  #L251426.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L25142c.  v13:= temp @kind object;
  #L25142e.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L251432.  v0:= v26 @kind object;
  #L251436.  if v0 == v13 then goto L25148e;
  #L25143a.  v26:= new `java.lang.StringBuilder`;
  #L25143e.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L251444.  v27:= "@FieldMap keys must be of type String: " @kind object;
  #L251448.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25144e.  v26:= temp @kind object;
  #L251450.  v0:= v26 @kind object;
  #L251454.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25145a.  v26:= temp @kind object;
  #L25145c.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251462.  v26:= temp @kind object;
  #L251464.  v27:= 0I;
  #L251468.  v0:= v27;
  #L25146c.  v0:= new `java.lang.Object`[v0];
  #L251470.  v27:= v0 @kind object;
  #L251474.  v0:= v30 @kind object;
  #L251478.  v1:= v31;
  #L25147c.  v2:= v26 @kind object;
  #L251480.  v3:= v27 @kind object;
  #L251484.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25148a.  v26:= temp @kind object;
  #L25148c.  throw v26;
  #L25148e.  v26:= 1I;
  #L251492.  v0:= v26;
  #L251496.  v1:= v16 @kind object;
  #L25149a.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L2514a0.  v25:= temp @kind object;
  #L2514a2.  v0:= v30 @kind object;
  #L2514a6.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2514aa.  v26:= v0 @kind object;
  #L2514ae.  v0:= v26 @kind object;
  #L2514b2.  v1:= v25 @kind object;
  #L2514b6.  v2:= v33 @kind object;
  #L2514ba.  call temp:= `stringConverter`(v0, v1, v2) @signature `Lretrofit2/Retrofit;.stringConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L2514c0.  v23:= temp @kind object;
  #L2514c2.  v26:= 1I;
  #L2514c6.  v0:= v26;
  #L2514ca.  v1:= v30 @kind object;
  #L2514ce.  v1.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` := v0 @kind boolean;
  #L2514d2.  v26:= new `retrofit2.ParameterHandler$FieldMap`;
  #L2514d6.  v34:= (`retrofit2.http.FieldMap`) v34 @kind object;
  #L2514da.  call temp:= `encoded`(v34) @signature `Lretrofit2/http/FieldMap;.encoded:()Z` @kind interface;
  #L2514e0.  v27:= temp;
  #L2514e2.  v0:= v26 @kind object;
  #L2514e6.  v1:= v23 @kind object;
  #L2514ea.  v2:= v27;
  #L2514ee.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @kind direct;
  #L2514f4.  goto L250972;
  #L2514f8.  v0:= v34 @kind object;
  #L2514fc.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Part` @kind boolean;
  #L251500.  v26:= v0;
  #L251504.  if v26 == 0 then goto L251a2e;
  #L251508.  v0:= v30 @kind object;
  #L25150c.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L251510.  v26:= v0;
  #L251514.  if v26 != 0 then goto L251546;
  #L251518.  v26:= "@Part parameters can only be used with multipart encoding." @kind object;
  #L25151c.  v27:= 0I;
  #L251520.  v0:= v27;
  #L251524.  v0:= new `java.lang.Object`[v0];
  #L251528.  v27:= v0 @kind object;
  #L25152c.  v0:= v30 @kind object;
  #L251530.  v1:= v31;
  #L251534.  v2:= v26 @kind object;
  #L251538.  v3:= v27 @kind object;
  #L25153c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251542.  v26:= temp @kind object;
  #L251544.  throw v26;
  #L251546.  v17:= v34 @kind object;
  #L25154a.  v17:= (`retrofit2.http.Part`) v17 @kind object;
  #L25154e.  v26:= 1I;
  #L251552.  v0:= v26;
  #L251556.  v1:= v30 @kind object;
  #L25155a.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L25155e.  call temp:= `value`(v17) @signature `Lretrofit2/http/Part;.value:()Ljava/lang/String;` @kind interface;
  #L251564.  v19:= temp @kind object;
  #L251566.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L25156c.  v22:= temp @kind object;
  #L25156e.  call temp:= `isEmpty`(v19) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L251574.  v26:= temp;
  #L251576.  if v26 == 0 then goto L25173c;
  #L25157a.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L25157e.  v0:= v26 @kind object;
  #L251582.  v1:= v22 @kind object;
  #L251586.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L25158c.  v26:= temp;
  #L25158e.  if v26 == 0 then goto L251688;
  #L251592.  v0:= v32 @kind object;
  #L251596.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L25159a.  v26:= v0;
  #L25159e.  if v26 != 0 then goto L251616;
  #L2515a2.  v26:= new `java.lang.StringBuilder`;
  #L2515a6.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2515ac.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2515b2.  v27:= temp @kind object;
  #L2515b4.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2515ba.  v26:= temp @kind object;
  #L2515bc.  v27:= " must include generic type (e.g., " @kind object;
  #L2515c0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2515c6.  v26:= temp @kind object;
  #L2515c8.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2515ce.  v27:= temp @kind object;
  #L2515d0.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2515d6.  v26:= temp @kind object;
  #L2515d8.  v27:= "<String>)" @kind object;
  #L2515dc.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2515e2.  v26:= temp @kind object;
  #L2515e4.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2515ea.  v26:= temp @kind object;
  #L2515ec.  v27:= 0I;
  #L2515f0.  v0:= v27;
  #L2515f4.  v0:= new `java.lang.Object`[v0];
  #L2515f8.  v27:= v0 @kind object;
  #L2515fc.  v0:= v30 @kind object;
  #L251600.  v1:= v31;
  #L251604.  v2:= v26 @kind object;
  #L251608.  v3:= v27 @kind object;
  #L25160c.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251612.  v26:= temp @kind object;
  #L251614.  throw v26;
  #L251616.  v16:= v32 @kind object;
  #L25161a.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L25161e.  v26:= 0I;
  #L251622.  v0:= v26;
  #L251626.  v1:= v16 @kind object;
  #L25162a.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251630.  v12:= temp @kind object;
  #L251632.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L251636.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L25163c.  v27:= temp @kind object;
  #L25163e.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L251644.  v26:= temp;
  #L251646.  if v26 != 0 then goto L251678;
  #L25164a.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L25164e.  v27:= 0I;
  #L251652.  v0:= v27;
  #L251656.  v0:= new `java.lang.Object`[v0];
  #L25165a.  v27:= v0 @kind object;
  #L25165e.  v0:= v30 @kind object;
  #L251662.  v1:= v31;
  #L251666.  v2:= v26 @kind object;
  #L25166a.  v3:= v27 @kind object;
  #L25166e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251674.  v26:= temp @kind object;
  #L251676.  throw v26;
  #L251678.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L25167c.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L251682.  v26:= temp @kind object;
  #L251684.  goto L250972;
  #L251688.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L25168e.  v26:= temp;
  #L251690.  if v26 == 0 then goto L2516ee;
  #L251694.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L25169a.  v4:= temp @kind object;
  #L25169c.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L2516a0.  v0:= v26 @kind object;
  #L2516a4.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2516aa.  v26:= temp;
  #L2516ac.  if v26 != 0 then goto L2516de;
  #L2516b0.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L2516b4.  v27:= 0I;
  #L2516b8.  v0:= v27;
  #L2516bc.  v0:= new `java.lang.Object`[v0];
  #L2516c0.  v27:= v0 @kind object;
  #L2516c4.  v0:= v30 @kind object;
  #L2516c8.  v1:= v31;
  #L2516cc.  v2:= v26 @kind object;
  #L2516d0.  v3:= v27 @kind object;
  #L2516d4.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2516da.  v26:= temp @kind object;
  #L2516dc.  throw v26;
  #L2516de.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L2516e2.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$RawPart;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L2516e8.  v26:= temp @kind object;
  #L2516ea.  goto L250972;
  #L2516ee.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L2516f2.  v0:= v26 @kind object;
  #L2516f6.  v1:= v22 @kind object;
  #L2516fa.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L251700.  v26:= temp;
  #L251702.  if v26 == 0 then goto L25170e;
  #L251706.  v26:= `@@retrofit2.ParameterHandler$RawPart.INSTANCE` @type ^`retrofit2.ParameterHandler$RawPart` @kind object;
  #L25170a.  goto L250972;
  #L25170e.  v26:= "@Part annotation must supply a name or use MultipartBody.Part parameter type." @kind object;
  #L251712.  v27:= 0I;
  #L251716.  v0:= v27;
  #L25171a.  v0:= new `java.lang.Object`[v0];
  #L25171e.  v27:= v0 @kind object;
  #L251722.  v0:= v30 @kind object;
  #L251726.  v1:= v31;
  #L25172a.  v2:= v26 @kind object;
  #L25172e.  v3:= v27 @kind object;
  #L251732.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251738.  v26:= temp @kind object;
  #L25173a.  throw v26;
  #L25173c.  v26:= 4I;
  #L251740.  v0:= v26;
  #L251744.  v0:= new `java.lang.String`[v0];
  #L251748.  v26:= v0 @kind object;
  #L25174c.  v27:= 0I;
  #L251750.  v28:= "Content-Disposition" @kind object;
  #L251754.  v26[v27]:= v28 @kind object;
  #L251758.  v27:= 1I;
  #L25175c.  v28:= new `java.lang.StringBuilder`;
  #L251760.  call `<init>`(v28) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L251766.  v29:= "form-data; name=\"" @kind object;
  #L25176a.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251770.  v28:= temp @kind object;
  #L251772.  v0:= v28 @kind object;
  #L251776.  v1:= v19 @kind object;
  #L25177a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251780.  v28:= temp @kind object;
  #L251782.  v29:= "\"" @kind object;
  #L251786.  call temp:= `append`(v28, v29) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25178c.  v28:= temp @kind object;
  #L25178e.  call temp:= `toString`(v28) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251794.  v28:= temp @kind object;
  #L251796.  v26[v27]:= v28 @kind object;
  #L25179a.  v27:= 2I;
  #L25179e.  v28:= "Content-Transfer-Encoding" @kind object;
  #L2517a2.  v26[v27]:= v28 @kind object;
  #L2517a6.  v27:= 3I;
  #L2517aa.  call temp:= `encoding`(v17) @signature `Lretrofit2/http/Part;.encoding:()Ljava/lang/String;` @kind interface;
  #L2517b0.  v28:= temp @kind object;
  #L2517b2.  v26[v27]:= v28 @kind object;
  #L2517b6.  call temp:= `of`(v26) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L2517bc.  v11:= temp @kind object;
  #L2517be.  v26:= constclass @type ^`java.lang.Iterable` @kind object;
  #L2517c2.  v0:= v26 @kind object;
  #L2517c6.  v1:= v22 @kind object;
  #L2517ca.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2517d0.  v26:= temp;
  #L2517d2.  if v26 == 0 then goto L251902;
  #L2517d6.  v0:= v32 @kind object;
  #L2517da.  v0:= instanceof @variable v0 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L2517de.  v26:= v0;
  #L2517e2.  if v26 != 0 then goto L25185a;
  #L2517e6.  v26:= new `java.lang.StringBuilder`;
  #L2517ea.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2517f0.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L2517f6.  v27:= temp @kind object;
  #L2517f8.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2517fe.  v26:= temp @kind object;
  #L251800.  v27:= " must include generic type (e.g., " @kind object;
  #L251804.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25180a.  v26:= temp @kind object;
  #L25180c.  call temp:= `getSimpleName`(v22) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L251812.  v27:= temp @kind object;
  #L251814.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L25181a.  v26:= temp @kind object;
  #L25181c.  v27:= "<String>)" @kind object;
  #L251820.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251826.  v26:= temp @kind object;
  #L251828.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L25182e.  v26:= temp @kind object;
  #L251830.  v27:= 0I;
  #L251834.  v0:= v27;
  #L251838.  v0:= new `java.lang.Object`[v0];
  #L25183c.  v27:= v0 @kind object;
  #L251840.  v0:= v30 @kind object;
  #L251844.  v1:= v31;
  #L251848.  v2:= v26 @kind object;
  #L25184c.  v3:= v27 @kind object;
  #L251850.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251856.  v26:= temp @kind object;
  #L251858.  throw v26;
  #L25185a.  v16:= v32 @kind object;
  #L25185e.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L251862.  v26:= 0I;
  #L251866.  v0:= v26;
  #L25186a.  v1:= v16 @kind object;
  #L25186e.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251874.  v12:= temp @kind object;
  #L251876.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L25187a.  call temp:= `getRawType`(v12) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L251880.  v27:= temp @kind object;
  #L251882.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L251888.  v26:= temp;
  #L25188a.  if v26 == 0 then goto L2518bc;
  #L25188e.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L251892.  v27:= 0I;
  #L251896.  v0:= v27;
  #L25189a.  v0:= new `java.lang.Object`[v0];
  #L25189e.  v27:= v0 @kind object;
  #L2518a2.  v0:= v30 @kind object;
  #L2518a6.  v1:= v31;
  #L2518aa.  v2:= v26 @kind object;
  #L2518ae.  v3:= v27 @kind object;
  #L2518b2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2518b8.  v26:= temp @kind object;
  #L2518ba.  throw v26;
  #L2518bc.  v0:= v30 @kind object;
  #L2518c0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2518c4.  v26:= v0 @kind object;
  #L2518c8.  v0:= v30 @kind object;
  #L2518cc.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L2518d0.  v27:= v0 @kind object;
  #L2518d4.  v0:= v26 @kind object;
  #L2518d8.  v1:= v33 @kind object;
  #L2518dc.  v2:= v27 @kind object;
  #L2518e0.  call temp:= `requestBodyConverter`(v0, v12, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L2518e6.  v6:= temp @kind object;
  #L2518e8.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L2518ec.  v0:= v26 @kind object;
  #L2518f0.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L2518f6.  call temp:= `iterable`(v26) @signature `Lretrofit2/ParameterHandler$Part;.iterable:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L2518fc.  v26:= temp @kind object;
  #L2518fe.  goto L250972;
  #L251902.  call temp:= `isArray`(v22) @signature `Ljava/lang/Class;.isArray:()Z` @kind virtual;
  #L251908.  v26:= temp;
  #L25190a.  if v26 == 0 then goto L2519a6;
  #L25190e.  call temp:= `getComponentType`(v22) @signature `Ljava/lang/Class;.getComponentType:()Ljava/lang/Class;` @kind virtual;
  #L251914.  v26:= temp @kind object;
  #L251916.  call temp:= `boxIfPrimitive`(v26) @signature `Lretrofit2/ServiceMethod;.boxIfPrimitive:(Ljava/lang/Class;)Ljava/lang/Class;` @kind static;
  #L25191c.  v4:= temp @kind object;
  #L25191e.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L251922.  v0:= v26 @kind object;
  #L251926.  call temp:= `isAssignableFrom`(v0, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L25192c.  v26:= temp;
  #L25192e.  if v26 == 0 then goto L251960;
  #L251932.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L251936.  v27:= 0I;
  #L25193a.  v0:= v27;
  #L25193e.  v0:= new `java.lang.Object`[v0];
  #L251942.  v27:= v0 @kind object;
  #L251946.  v0:= v30 @kind object;
  #L25194a.  v1:= v31;
  #L25194e.  v2:= v26 @kind object;
  #L251952.  v3:= v27 @kind object;
  #L251956.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L25195c.  v26:= temp @kind object;
  #L25195e.  throw v26;
  #L251960.  v0:= v30 @kind object;
  #L251964.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L251968.  v26:= v0 @kind object;
  #L25196c.  v0:= v30 @kind object;
  #L251970.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L251974.  v27:= v0 @kind object;
  #L251978.  v0:= v26 @kind object;
  #L25197c.  v1:= v33 @kind object;
  #L251980.  v2:= v27 @kind object;
  #L251984.  call temp:= `requestBodyConverter`(v0, v4, v1, v2) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L25198a.  v6:= temp @kind object;
  #L25198c.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L251990.  v0:= v26 @kind object;
  #L251994.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L25199a.  call temp:= `array`(v26) @signature `Lretrofit2/ParameterHandler$Part;.array:()Lretrofit2/ParameterHandler;` @kind virtual;
  #L2519a0.  v26:= temp @kind object;
  #L2519a2.  goto L250972;
  #L2519a6.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L2519aa.  v0:= v26 @kind object;
  #L2519ae.  v1:= v22 @kind object;
  #L2519b2.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L2519b8.  v26:= temp;
  #L2519ba.  if v26 == 0 then goto L2519ec;
  #L2519be.  v26:= "@Part parameters using the MultipartBody.Part must not include a part name in the annotation." @kind object;
  #L2519c2.  v27:= 0I;
  #L2519c6.  v0:= v27;
  #L2519ca.  v0:= new `java.lang.Object`[v0];
  #L2519ce.  v27:= v0 @kind object;
  #L2519d2.  v0:= v30 @kind object;
  #L2519d6.  v1:= v31;
  #L2519da.  v2:= v26 @kind object;
  #L2519de.  v3:= v27 @kind object;
  #L2519e2.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L2519e8.  v26:= temp @kind object;
  #L2519ea.  throw v26;
  #L2519ec.  v0:= v30 @kind object;
  #L2519f0.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L2519f4.  v26:= v0 @kind object;
  #L2519f8.  v0:= v30 @kind object;
  #L2519fc.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L251a00.  v27:= v0 @kind object;
  #L251a04.  v0:= v26 @kind object;
  #L251a08.  v1:= v32 @kind object;
  #L251a0c.  v2:= v33 @kind object;
  #L251a10.  v3:= v27 @kind object;
  #L251a14.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L251a1a.  v6:= temp @kind object;
  #L251a1c.  v26:= new `retrofit2.ParameterHandler$Part`;
  #L251a20.  v0:= v26 @kind object;
  #L251a24.  call `<init>`(v0, v11, v6) @signature `Lretrofit2/ParameterHandler$Part;.<init>:(Lokhttp3/Headers;Lretrofit2/Converter;)V` @kind direct;
  #L251a2a.  goto L250972;
  #L251a2e.  v0:= v34 @kind object;
  #L251a32.  v0:= instanceof @variable v0 @type ^`retrofit2.http.PartMap` @kind boolean;
  #L251a36.  v26:= v0;
  #L251a3a.  if v26 == 0 then goto L251c5c;
  #L251a3e.  v0:= v30 @kind object;
  #L251a42.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L251a46.  v26:= v0;
  #L251a4a.  if v26 != 0 then goto L251a7c;
  #L251a4e.  v26:= "@PartMap parameters can only be used with multipart encoding." @kind object;
  #L251a52.  v27:= 0I;
  #L251a56.  v0:= v27;
  #L251a5a.  v0:= new `java.lang.Object`[v0];
  #L251a5e.  v27:= v0 @kind object;
  #L251a62.  v0:= v30 @kind object;
  #L251a66.  v1:= v31;
  #L251a6a.  v2:= v26 @kind object;
  #L251a6e.  v3:= v27 @kind object;
  #L251a72.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251a78.  v26:= temp @kind object;
  #L251a7a.  throw v26;
  #L251a7c.  v26:= 1I;
  #L251a80.  v0:= v26;
  #L251a84.  v1:= v30 @kind object;
  #L251a88.  v1.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` := v0 @kind boolean;
  #L251a8c.  call temp:= `getRawType`(v32) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L251a92.  v22:= temp @kind object;
  #L251a94.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L251a98.  v0:= v26 @kind object;
  #L251a9c.  v1:= v22 @kind object;
  #L251aa0.  call temp:= `isAssignableFrom`(v0, v1) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L251aa6.  v26:= temp;
  #L251aa8.  if v26 != 0 then goto L251ada;
  #L251aac.  v26:= "@PartMap parameter type must be Map." @kind object;
  #L251ab0.  v27:= 0I;
  #L251ab4.  v0:= v27;
  #L251ab8.  v0:= new `java.lang.Object`[v0];
  #L251abc.  v27:= v0 @kind object;
  #L251ac0.  v0:= v30 @kind object;
  #L251ac4.  v1:= v31;
  #L251ac8.  v2:= v26 @kind object;
  #L251acc.  v3:= v27 @kind object;
  #L251ad0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251ad6.  v26:= temp @kind object;
  #L251ad8.  throw v26;
  #L251ada.  v26:= constclass @type ^`java.util.Map` @kind object;
  #L251ade.  v0:= v32 @kind object;
  #L251ae2.  v1:= v22 @kind object;
  #L251ae6.  v2:= v26 @kind object;
  #L251aea.  call temp:= `getSupertype`(v0, v1, v2) @signature `Lretrofit2/Utils;.getSupertype:(Ljava/lang/reflect/Type;Ljava/lang/Class;Ljava/lang/Class;)Ljava/lang/reflect/Type;` @kind static;
  #L251af0.  v14:= temp @kind object;
  #L251af2.  v0:= instanceof @variable v14 @type ^`java.lang.reflect.ParameterizedType` @kind boolean;
  #L251af6.  v26:= v0;
  #L251afa.  if v26 != 0 then goto L251b2c;
  #L251afe.  v26:= "Map must include generic types (e.g., Map<String, String>)" @kind object;
  #L251b02.  v27:= 0I;
  #L251b06.  v0:= v27;
  #L251b0a.  v0:= new `java.lang.Object`[v0];
  #L251b0e.  v27:= v0 @kind object;
  #L251b12.  v0:= v30 @kind object;
  #L251b16.  v1:= v31;
  #L251b1a.  v2:= v26 @kind object;
  #L251b1e.  v3:= v27 @kind object;
  #L251b22.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251b28.  v26:= temp @kind object;
  #L251b2a.  throw v26;
  #L251b2c.  v16:= v14 @kind object;
  #L251b30.  v16:= (`java.lang.reflect.ParameterizedType`) v16 @kind object;
  #L251b34.  v26:= 0I;
  #L251b38.  v0:= v26;
  #L251b3c.  v1:= v16 @kind object;
  #L251b40.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251b46.  v13:= temp @kind object;
  #L251b48.  v26:= constclass @type ^`java.lang.String` @kind object;
  #L251b4c.  v0:= v26 @kind object;
  #L251b50.  if v0 == v13 then goto L251ba8;
  #L251b54.  v26:= new `java.lang.StringBuilder`;
  #L251b58.  call `<init>`(v26) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L251b5e.  v27:= "@PartMap keys must be of type String: " @kind object;
  #L251b62.  call temp:= `append`(v26, v27) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251b68.  v26:= temp @kind object;
  #L251b6a.  v0:= v26 @kind object;
  #L251b6e.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251b74.  v26:= temp @kind object;
  #L251b76.  call temp:= `toString`(v26) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251b7c.  v26:= temp @kind object;
  #L251b7e.  v27:= 0I;
  #L251b82.  v0:= v27;
  #L251b86.  v0:= new `java.lang.Object`[v0];
  #L251b8a.  v27:= v0 @kind object;
  #L251b8e.  v0:= v30 @kind object;
  #L251b92.  v1:= v31;
  #L251b96.  v2:= v26 @kind object;
  #L251b9a.  v3:= v27 @kind object;
  #L251b9e.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251ba4.  v26:= temp @kind object;
  #L251ba6.  throw v26;
  #L251ba8.  v26:= 1I;
  #L251bac.  v0:= v26;
  #L251bb0.  v1:= v16 @kind object;
  #L251bb4.  call temp:= `getParameterUpperBound`(v0, v1) @signature `Lretrofit2/Utils;.getParameterUpperBound:(ILjava/lang/reflect/ParameterizedType;)Ljava/lang/reflect/Type;` @kind static;
  #L251bba.  v25:= temp @kind object;
  #L251bbc.  v26:= constclass @type ^`okhttp3.MultipartBody$Part` @kind object;
  #L251bc0.  call temp:= `getRawType`(v25) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L251bc6.  v27:= temp @kind object;
  #L251bc8.  call temp:= `isAssignableFrom`(v26, v27) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L251bce.  v26:= temp;
  #L251bd0.  if v26 == 0 then goto L251c02;
  #L251bd4.  v26:= "@PartMap values cannot be MultipartBody.Part. Use @Part List<Part> or a different value type instead." @kind object;
  #L251bd8.  v27:= 0I;
  #L251bdc.  v0:= v27;
  #L251be0.  v0:= new `java.lang.Object`[v0];
  #L251be4.  v27:= v0 @kind object;
  #L251be8.  v0:= v30 @kind object;
  #L251bec.  v1:= v31;
  #L251bf0.  v2:= v26 @kind object;
  #L251bf4.  v3:= v27 @kind object;
  #L251bf8.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251bfe.  v26:= temp @kind object;
  #L251c00.  throw v26;
  #L251c02.  v0:= v30 @kind object;
  #L251c06.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L251c0a.  v26:= v0 @kind object;
  #L251c0e.  v0:= v30 @kind object;
  #L251c12.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L251c16.  v27:= v0 @kind object;
  #L251c1a.  v0:= v26 @kind object;
  #L251c1e.  v1:= v25 @kind object;
  #L251c22.  v2:= v33 @kind object;
  #L251c26.  v3:= v27 @kind object;
  #L251c2a.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L251c30.  v24:= temp @kind object;
  #L251c32.  v18:= v34 @kind object;
  #L251c36.  v18:= (`retrofit2.http.PartMap`) v18 @kind object;
  #L251c3a.  v26:= new `retrofit2.ParameterHandler$PartMap`;
  #L251c3e.  call temp:= `encoding`(v18) @signature `Lretrofit2/http/PartMap;.encoding:()Ljava/lang/String;` @kind interface;
  #L251c44.  v27:= temp @kind object;
  #L251c46.  v0:= v26 @kind object;
  #L251c4a.  v1:= v24 @kind object;
  #L251c4e.  v2:= v27 @kind object;
  #L251c52.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$PartMap;.<init>:(Lretrofit2/Converter;Ljava/lang/String;)V` @kind direct;
  #L251c58.  goto L250972;
  #L251c5c.  v0:= v34 @kind object;
  #L251c60.  v0:= instanceof @variable v0 @type ^`retrofit2.http.Body` @kind boolean;
  #L251c64.  v26:= v0;
  #L251c68.  if v26 == 0 then goto L251d82;
  #L251c6c.  v0:= v30 @kind object;
  #L251c70.  v0:= v0.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L251c74.  v26:= v0;
  #L251c78.  if v26 != 0 then goto L251c8c;
  #L251c7c.  v0:= v30 @kind object;
  #L251c80.  v0:= v0.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L251c84.  v26:= v0;
  #L251c88.  if v26 == 0 then goto L251cba;
  #L251c8c.  v26:= "@Body parameters cannot be used with form or multi-part encoding." @kind object;
  #L251c90.  v27:= 0I;
  #L251c94.  v0:= v27;
  #L251c98.  v0:= new `java.lang.Object`[v0];
  #L251c9c.  v27:= v0 @kind object;
  #L251ca0.  v0:= v30 @kind object;
  #L251ca4.  v1:= v31;
  #L251ca8.  v2:= v26 @kind object;
  #L251cac.  v3:= v27 @kind object;
  #L251cb0.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251cb6.  v26:= temp @kind object;
  #L251cb8.  throw v26;
  #L251cba.  v0:= v30 @kind object;
  #L251cbe.  v0:= v0.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L251cc2.  v26:= v0;
  #L251cc6.  if v26 == 0 then goto L251cf8;
  #L251cca.  v26:= "Multiple @Body method annotations found." @kind object;
  #L251cce.  v27:= 0I;
  #L251cd2.  v0:= v27;
  #L251cd6.  v0:= new `java.lang.Object`[v0];
  #L251cda.  v27:= v0 @kind object;
  #L251cde.  v0:= v30 @kind object;
  #L251ce2.  v1:= v31;
  #L251ce6.  v2:= v26 @kind object;
  #L251cea.  v3:= v27 @kind object;
  #L251cee.  call temp:= `parameterError`(v0, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251cf4.  v26:= temp @kind object;
  #L251cf6.  throw v26;
  #L251cf8.  v0:= v30 @kind object;
  #L251cfc.  v0:= v0.`retrofit2.ServiceMethod$Builder.retrofit` @type ^`retrofit2.Retrofit` @kind object;
  #L251d00.  v26:= v0 @kind object;
  #L251d04.  v0:= v30 @kind object;
  #L251d08.  v0:= v0.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L251d0c.  v27:= v0 @kind object;
  #L251d10.  v0:= v26 @kind object;
  #L251d14.  v1:= v32 @kind object;
  #L251d18.  v2:= v33 @kind object;
  #L251d1c.  v3:= v27 @kind object;
  #L251d20.  call temp:= `requestBodyConverter`(v0, v1, v2, v3) @signature `Lretrofit2/Retrofit;.requestBodyConverter:(Ljava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;[Ljava/lang/annotation/Annotation;)Lretrofit2/Converter;` @kind virtual;
  #L251d26.  v6:= temp @kind object;
  #L251d28.  v26:= 1I;
  #L251d2c.  v0:= v26;
  #L251d30.  v1:= v30 @kind object;
  #L251d34.  v1.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` := v0 @kind boolean;
  #L251d38.  v26:= new `retrofit2.ParameterHandler$Body`;
  #L251d3c.  v0:= v26 @kind object;
  #L251d40.  call `<init>`(v0, v6) @signature `Lretrofit2/ParameterHandler$Body;.<init>:(Lretrofit2/Converter;)V` @kind direct;
  #L251d46.  goto L250972;
  #L251d4a.  v7:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L251d4c.  v26:= "Unable to create @Body converter for %s" @kind object;
  #L251d50.  v27:= 1I;
  #L251d54.  v0:= v27;
  #L251d58.  v0:= new `java.lang.Object`[v0];
  #L251d5c.  v27:= v0 @kind object;
  #L251d60.  v28:= 0I;
  #L251d64.  v27[v28]:= v32 @kind object;
  #L251d68.  v0:= v30 @kind object;
  #L251d6c.  v1:= v31;
  #L251d70.  v2:= v26 @kind object;
  #L251d74.  v3:= v27 @kind object;
  #L251d78.  call temp:= `parameterError`(v0, v7, v1, v2, v3) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(Ljava/lang/Throwable;ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251d7e.  v26:= temp @kind object;
  #L251d80.  throw v26;
  #L251d82.  v26:= 0I;
  #L251d86.  goto L250972;
  catch `java.lang.RuntimeException` @[L251cf8..L251d26] goto L251d4a;
}
procedure `void` `validatePathName`(`retrofit2.ServiceMethod$Builder` v5 @kind this, `int` v6 @name `p`, `java.lang.String` v7 @kind object @name `name`) @signature `Lretrofit2/ServiceMethod$Builder;.validatePathName:(ILjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L251dac.  v1:= 2I;
  #L251dae.  v4:= 1I;
  #L251db0.  v3:= 0I;
  #L251db2.  v0:= `@@retrofit2.ServiceMethod.PARAM_NAME_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L251db6.  call temp:= `matcher`(v0, v7) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L251dbc.  v0:= temp @kind object;
  #L251dbe.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L251dc4.  v0:= temp;
  #L251dc6.  if v0 != 0 then goto L251df0;
  #L251dca.  v0:= "@Path parameter name must match %s. Found: %s" @kind object;
  #L251dce.  v1:= new `java.lang.Object`[v1];
  #L251dd2.  v2:= `@@retrofit2.ServiceMethod.PARAM_URL_REGEX` @type ^`java.util.regex.Pattern` @kind object;
  #L251dd6.  call temp:= `pattern`(v2) @signature `Ljava/util/regex/Pattern;.pattern:()Ljava/lang/String;` @kind virtual;
  #L251ddc.  v2:= temp @kind object;
  #L251dde.  v1[v3]:= v2 @kind object;
  #L251de2.  v1[v4]:= v7 @kind object;
  #L251de6.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251dec.  v0:= temp @kind object;
  #L251dee.  throw v0;
  #L251df0.  v0:= v5.`retrofit2.ServiceMethod$Builder.relativeUrlParamNames` @type ^`java.util.Set` @kind object;
  #L251df4.  call temp:= `contains`(v0, v7) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L251dfa.  v0:= temp;
  #L251dfc.  if v0 != 0 then goto L251e1e;
  #L251e00.  v0:= "URL \"%s\" does not contain \"{%s}\"." @kind object;
  #L251e04.  v1:= new `java.lang.Object`[v1];
  #L251e08.  v2:= v5.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L251e0c.  v1[v3]:= v2 @kind object;
  #L251e10.  v1[v4]:= v7 @kind object;
  #L251e14.  call temp:= `parameterError`(v5, v6, v0, v1) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251e1a.  v0:= temp @kind object;
  #L251e1c.  throw v0;
  #L251e1e.  return @kind void;
}
procedure `retrofit2.ServiceMethod` `build`(`retrofit2.ServiceMethod$Builder` v10 @kind this) @signature `Lretrofit2/ServiceMethod$Builder;.build:()Lretrofit2/ServiceMethod;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L251e30.  v9:= 1I;
  #L251e32.  v6:= 0I;
  #L251e34.  call temp:= `createCallAdapter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createCallAdapter:()Lretrofit2/CallAdapter;` @kind direct;
  #L251e3a.  v5:= temp @kind object;
  #L251e3c.  v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` := v5 @kind object;
  #L251e40.  v5:= v10.`retrofit2.ServiceMethod$Builder.callAdapter` @type ^`retrofit2.CallAdapter` @kind object;
  #L251e44.  call temp:= `responseType`(v5) @signature `Lretrofit2/CallAdapter;.responseType:()Ljava/lang/reflect/Type;` @kind interface;
  #L251e4a.  v5:= temp @kind object;
  #L251e4c.  v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` := v5 @kind object;
  #L251e50.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L251e54.  v7:= constclass @type ^`retrofit2.Response` @kind object;
  #L251e58.  if v5 == v7 then goto L251e68;
  #L251e5c.  v5:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L251e60.  v7:= constclass @type ^`okhttp3.Response` @kind object;
  #L251e64.  if v5 != v7 then goto L251ebc;
  #L251e68.  v5:= new `java.lang.StringBuilder`;
  #L251e6c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L251e72.  v7:= "'" @kind object;
  #L251e76.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251e7c.  v5:= temp @kind object;
  #L251e7e.  v7:= v10.`retrofit2.ServiceMethod$Builder.responseType` @type ^`java.lang.reflect.Type` @kind object;
  #L251e82.  call temp:= `getRawType`(v7) @signature `Lretrofit2/Utils;.getRawType:(Ljava/lang/reflect/Type;)Ljava/lang/Class;` @kind static;
  #L251e88.  v7:= temp @kind object;
  #L251e8a.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L251e90.  v7:= temp @kind object;
  #L251e92.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251e98.  v5:= temp @kind object;
  #L251e9a.  v7:= "' is not a valid response body type. Did you mean ResponseBody?" @kind object;
  #L251e9e.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L251ea4.  v5:= temp @kind object;
  #L251ea6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L251eac.  v5:= temp @kind object;
  #L251eae.  v6:= new `java.lang.Object`[v6];
  #L251eb2.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251eb8.  v5:= temp @kind object;
  #L251eba.  throw v5;
  #L251ebc.  call temp:= `createResponseConverter`(v10) @signature `Lretrofit2/ServiceMethod$Builder;.createResponseConverter:()Lretrofit2/Converter;` @kind direct;
  #L251ec2.  v5:= temp @kind object;
  #L251ec4.  v10.`retrofit2.ServiceMethod$Builder.responseConverter` @type ^`retrofit2.Converter` := v5 @kind object;
  #L251ec8.  v7:= v10.`retrofit2.ServiceMethod$Builder.methodAnnotations` @type ^`java.lang.annotation.Annotation`[] @kind object;
  #L251ecc.  v8:= length @variable v7;
  #L251ece.  v5:= v6;
  #L251ed0.  if v5 >= v8 then goto L251ee4;
  #L251ed4.  v0:= v7[v5] @kind object;
  #L251ed8.  call `parseMethodAnnotation`(v10, v0) @signature `Lretrofit2/ServiceMethod$Builder;.parseMethodAnnotation:(Ljava/lang/annotation/Annotation;)V` @kind direct;
  #L251ede.  v5:= v5 + 1;
  #L251ee2.  goto L251ed0;
  #L251ee4.  v5:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L251ee8.  if v5 != 0 then goto L251efe;
  #L251eec.  v5:= "HTTP method annotation is required (e.g., @GET, @POST, etc.)." @kind object;
  #L251ef0.  v6:= new `java.lang.Object`[v6];
  #L251ef4.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251efa.  v5:= temp @kind object;
  #L251efc.  throw v5;
  #L251efe.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L251f02.  if v5 != 0 then goto L251f3a;
  #L251f06.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L251f0a.  if v5 == 0 then goto L251f20;
  #L251f0e.  v5:= "Multipart can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L251f12.  v6:= new `java.lang.Object`[v6];
  #L251f16.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251f1c.  v5:= temp @kind object;
  #L251f1e.  throw v5;
  #L251f20.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L251f24.  if v5 == 0 then goto L251f3a;
  #L251f28.  v5:= "FormUrlEncoded can only be specified on HTTP methods with request body (e.g., @POST)." @kind object;
  #L251f2c.  v6:= new `java.lang.Object`[v6];
  #L251f30.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251f36.  v5:= temp @kind object;
  #L251f38.  throw v5;
  #L251f3a.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L251f3e.  v3:= length @variable v5;
  #L251f40.  v5:= new `retrofit2.ParameterHandler`[v3];
  #L251f44.  v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] := v5 @kind object;
  #L251f48.  v1:= 0I;
  #L251f4a.  if v1 >= v3 then goto L251fac;
  #L251f4e.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterTypes` @type ^`java.lang.reflect.Type`[] @kind object;
  #L251f52.  v4:= v5[v1] @kind object;
  #L251f56.  call temp:= `hasUnresolvableType`(v4) @signature `Lretrofit2/Utils;.hasUnresolvableType:(Ljava/lang/reflect/Type;)Z` @kind static;
  #L251f5c.  v5:= temp;
  #L251f5e.  if v5 == 0 then goto L251f78;
  #L251f62.  v5:= "Parameter type must not include a type variable or wildcard: %s" @kind object;
  #L251f66.  v7:= new `java.lang.Object`[v9];
  #L251f6a.  v7[v6]:= v4 @kind object;
  #L251f6e.  call temp:= `parameterError`(v10, v1, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251f74.  v5:= temp @kind object;
  #L251f76.  throw v5;
  #L251f78.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterAnnotationsArray` @type ^`java.lang.annotation.Annotation`[][] @kind object;
  #L251f7c.  v2:= v5[v1] @kind object;
  #L251f80.  if v2 != 0 then goto L251f96;
  #L251f84.  v5:= "No Retrofit annotation found." @kind object;
  #L251f88.  v6:= new `java.lang.Object`[v6];
  #L251f8c.  call temp:= `parameterError`(v10, v1, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.parameterError:(ILjava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251f92.  v5:= temp @kind object;
  #L251f94.  throw v5;
  #L251f96.  v5:= v10.`retrofit2.ServiceMethod$Builder.parameterHandlers` @type ^`retrofit2.ParameterHandler`[] @kind object;
  #L251f9a.  call temp:= `parseParameter`(v10, v1, v4, v2) @signature `Lretrofit2/ServiceMethod$Builder;.parseParameter:(ILjava/lang/reflect/Type;[Ljava/lang/annotation/Annotation;)Lretrofit2/ParameterHandler;` @kind direct;
  #L251fa0.  v7:= temp @kind object;
  #L251fa2.  v5[v1]:= v7 @kind object;
  #L251fa6.  v1:= v1 + 1;
  #L251faa.  goto L251f4a;
  #L251fac.  v5:= v10.`retrofit2.ServiceMethod$Builder.relativeUrl` @type ^`java.lang.String` @kind object;
  #L251fb0.  if v5 != 0 then goto L251fd6;
  #L251fb4.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotUrl` @type ^`boolean` @kind boolean;
  #L251fb8.  if v5 != 0 then goto L251fd6;
  #L251fbc.  v5:= "Missing either @%s URL or @Url parameter." @kind object;
  #L251fc0.  v7:= new `java.lang.Object`[v9];
  #L251fc4.  v8:= v10.`retrofit2.ServiceMethod$Builder.httpMethod` @type ^`java.lang.String` @kind object;
  #L251fc8.  v7[v6]:= v8 @kind object;
  #L251fcc.  call temp:= `methodError`(v10, v5, v7) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L251fd2.  v5:= temp @kind object;
  #L251fd4.  throw v5;
  #L251fd6.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L251fda.  if v5 != 0 then goto L252008;
  #L251fde.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L251fe2.  if v5 != 0 then goto L252008;
  #L251fe6.  v5:= v10.`retrofit2.ServiceMethod$Builder.hasBody` @type ^`boolean` @kind boolean;
  #L251fea.  if v5 != 0 then goto L252008;
  #L251fee.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotBody` @type ^`boolean` @kind boolean;
  #L251ff2.  if v5 == 0 then goto L252008;
  #L251ff6.  v5:= "Non-body HTTP method cannot contain @Body." @kind object;
  #L251ffa.  v6:= new `java.lang.Object`[v6];
  #L251ffe.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L252004.  v5:= temp @kind object;
  #L252006.  throw v5;
  #L252008.  v5:= v10.`retrofit2.ServiceMethod$Builder.isFormEncoded` @type ^`boolean` @kind boolean;
  #L25200c.  if v5 == 0 then goto L25202a;
  #L252010.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotField` @type ^`boolean` @kind boolean;
  #L252014.  if v5 != 0 then goto L25202a;
  #L252018.  v5:= "Form-encoded method must contain at least one @Field." @kind object;
  #L25201c.  v6:= new `java.lang.Object`[v6];
  #L252020.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L252026.  v5:= temp @kind object;
  #L252028.  throw v5;
  #L25202a.  v5:= v10.`retrofit2.ServiceMethod$Builder.isMultipart` @type ^`boolean` @kind boolean;
  #L25202e.  if v5 == 0 then goto L25204c;
  #L252032.  v5:= v10.`retrofit2.ServiceMethod$Builder.gotPart` @type ^`boolean` @kind boolean;
  #L252036.  if v5 != 0 then goto L25204c;
  #L25203a.  v5:= "Multipart method must contain at least one @Part." @kind object;
  #L25203e.  v6:= new `java.lang.Object`[v6];
  #L252042.  call temp:= `methodError`(v10, v5, v6) @signature `Lretrofit2/ServiceMethod$Builder;.methodError:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/RuntimeException;` @kind direct;
  #L252048.  v5:= temp @kind object;
  #L25204a.  throw v5;
  #L25204c.  v5:= new `retrofit2.ServiceMethod`;
  #L252050.  call `<init>`(v5, v10) @signature `Lretrofit2/ServiceMethod;.<init>:(Lretrofit2/ServiceMethod$Builder;)V` @kind direct;
  #L252056.  return v5 @kind object;
}
