record `retrofit2.ParameterHandler$Query` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$Query.encoded` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `retrofit2.ParameterHandler$Query.name` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$Query.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$Query` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `retrofit2.Converter` v3 @kind object, `boolean` v4 @name `encoded`) @signature `Lretrofit2/ParameterHandler$Query;.<init>:(Ljava/lang/String;Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L313fb0.  call `<init>`(v1) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L313fb6.  v0:= "name == null" @kind object;
  #L313fba.  call temp:= `checkNotNull`(v2, v0) @signature `Lretrofit2/Utils;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L313fc0.  v0:= temp @kind object;
  #L313fc2.  v0:= (`java.lang.String`) v0 @kind object;
  #L313fc6.  v1.`retrofit2.ParameterHandler$Query.name` @type ^`java.lang.String` := v0 @kind object;
  #L313fca.  v1.`retrofit2.ParameterHandler$Query.valueConverter` @type ^`retrofit2.Converter` := v3 @kind object;
  #L313fce.  v1.`retrofit2.ParameterHandler$Query.encoded` @type ^`boolean` := v4 @kind boolean;
  #L313fd2.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$Query` v3 @kind this, `retrofit2.RequestBuilder` v4 @kind object @name `builder`, `java.lang.Object` v5 @kind object) @signature `Lretrofit2/ParameterHandler$Query;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L313fe4.  if v5 != 0 then goto L313fea;
  #L313fe8.  return @kind void;
  #L313fea.  v1:= v3.`retrofit2.ParameterHandler$Query.name` @type ^`java.lang.String` @kind object;
  #L313fee.  v0:= v3.`retrofit2.ParameterHandler$Query.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L313ff2.  call temp:= `convert`(v0, v5) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L313ff8.  v0:= temp @kind object;
  #L313ffa.  v0:= (`java.lang.String`) v0 @kind object;
  #L313ffe.  v2:= v3.`retrofit2.ParameterHandler$Query.encoded` @type ^`boolean` @kind boolean;
  #L314002.  call `addQueryParam`(v4, v1, v0, v2) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L314008.  goto L313fe8;
}
