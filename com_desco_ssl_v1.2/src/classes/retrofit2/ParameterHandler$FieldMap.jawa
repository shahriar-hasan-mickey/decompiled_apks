record `retrofit2.ParameterHandler$FieldMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$FieldMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$FieldMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$FieldMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L313a74.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L313a7a.  v0.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L313a7e.  v0.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L313a82.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L313a94.  v2:= (`java.util.Map`) v2 @kind object;
  #L313a98.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L313a9e.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$FieldMap` v6 @kind this, `retrofit2.RequestBuilder` v7 @kind object @name `builder`, `java.util.Map` v8 @kind object) @signature `Lretrofit2/ParameterHandler$FieldMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L313ab0.  if v8 != 0 then goto L313ac4;
  #L313ab4.  v3:= new `java.lang.IllegalArgumentException`;
  #L313ab8.  v4:= "Field map was null." @kind object;
  #L313abc.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313ac2.  throw v3;
  #L313ac4.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L313aca.  v3:= temp @kind object;
  #L313acc.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L313ad2.  v4:= temp @kind object;
  #L313ad4.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L313ada.  v3:= temp;
  #L313adc.  if v3 == 0 then goto L313b72;
  #L313ae0.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L313ae6.  v0:= temp @kind object;
  #L313ae8.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L313aec.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L313af2.  v1:= temp @kind object;
  #L313af4.  v1:= (`java.lang.String`) v1 @kind object;
  #L313af8.  if v1 != 0 then goto L313b0c;
  #L313afc.  v3:= new `java.lang.IllegalArgumentException`;
  #L313b00.  v4:= "Field map contained null key." @kind object;
  #L313b04.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313b0a.  throw v3;
  #L313b0c.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L313b12.  v2:= temp @kind object;
  #L313b14.  if v2 != 0 then goto L313b56;
  #L313b18.  v3:= new `java.lang.IllegalArgumentException`;
  #L313b1c.  v4:= new `java.lang.StringBuilder`;
  #L313b20.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L313b26.  v5:= "Field map contained null value for key '" @kind object;
  #L313b2a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313b30.  v4:= temp @kind object;
  #L313b32.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313b38.  v4:= temp @kind object;
  #L313b3a.  v5:= "'." @kind object;
  #L313b3e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L313b44.  v4:= temp @kind object;
  #L313b46.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L313b4c.  v4:= temp @kind object;
  #L313b4e.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L313b54.  throw v3;
  #L313b56.  v3:= v6.`retrofit2.ParameterHandler$FieldMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L313b5a.  call temp:= `convert`(v3, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L313b60.  v3:= temp @kind object;
  #L313b62.  v3:= (`java.lang.String`) v3 @kind object;
  #L313b66.  v5:= v6.`retrofit2.ParameterHandler$FieldMap.encoded` @type ^`boolean` @kind boolean;
  #L313b6a.  call `addFormField`(v7, v1, v3, v5) @signature `Lretrofit2/RequestBuilder;.addFormField:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L313b70.  goto L313ad4;
  #L313b72.  return @kind void;
}
