record `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` @kind class @AccessFlag FINAL extends `retrofit2.Call` @kind interface {
  `java.util.concurrent.Executor` `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @AccessFlag FINAL;
  `retrofit2.Call` `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @AccessFlag FINAL;
}
procedure `void` `<init>`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v0 @kind this, `java.util.concurrent.Executor` v1 @kind object @name `callbackExecutor`, `retrofit2.Call` v2 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L313010.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L313016.  v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` := v1 @kind object;
  #L31301a.  v0.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` := v2 @kind object;
  #L31301e.  return @kind void;
}
procedure `void` `cancel`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313030.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L313034.  call `cancel`(v0) @signature `Lretrofit2/Call;.cancel:()V` @kind interface;
  #L31303a.  return @kind void;
}
procedure `java.lang.Object` `clone`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L31304c.  call temp:= `clone`(v1) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @kind virtual;
  #L313052.  v0:= temp @kind object;
  #L313054.  return v0 @kind object;
}
procedure `retrofit2.Call` `clone`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v3 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.clone:()Lretrofit2/Call;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313068.  v0:= new `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall`;
  #L31306c.  v1:= v3.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.callbackExecutor` @type ^`java.util.concurrent.Executor` @kind object;
  #L313070.  v2:= v3.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L313074.  call temp:= `clone`(v2) @signature `Lretrofit2/Call;.clone:()Lretrofit2/Call;` @kind interface;
  #L31307a.  v2:= temp @kind object;
  #L31307c.  call `<init>`(v0, v1, v2) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.<init>:(Ljava/util/concurrent/Executor;Lretrofit2/Call;)V` @kind direct;
  #L313082.  return v0 @kind object;
}
procedure `void` `enqueue`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v2 @kind this, `retrofit2.Callback` v3 @kind object) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.enqueue:(Lretrofit2/Callback;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L313094.  if v3 != 0 then goto L3130a8;
  #L313098.  v0:= new `java.lang.NullPointerException`;
  #L31309c.  v1:= "callback == null" @kind object;
  #L3130a0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3130a6.  throw v0;
  #L3130a8.  v0:= v2.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L3130ac.  v1:= new `retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall$1`;
  #L3130b0.  call `<init>`(v1, v2, v3) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall$1;.<init>:(Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;Lretrofit2/Callback;)V` @kind direct;
  #L3130b6.  call `enqueue`(v0, v1) @signature `Lretrofit2/Call;.enqueue:(Lretrofit2/Callback;)V` @kind interface;
  #L3130bc.  return @kind void;
}
procedure `retrofit2.Response` `execute`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.execute:()Lretrofit2/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3130d0.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L3130d4.  call temp:= `execute`(v0) @signature `Lretrofit2/Call;.execute:()Lretrofit2/Response;` @kind interface;
  #L3130da.  v0:= temp @kind object;
  #L3130dc.  return v0 @kind object;
}
procedure `boolean` `isCanceled`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3130f0.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L3130f4.  call temp:= `isCanceled`(v0) @signature `Lretrofit2/Call;.isCanceled:()Z` @kind interface;
  #L3130fa.  v0:= temp;
  #L3130fc.  return v0;
}
procedure `boolean` `isExecuted`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.isExecuted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313110.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L313114.  call temp:= `isExecuted`(v0) @signature `Lretrofit2/Call;.isExecuted:()Z` @kind interface;
  #L31311a.  v0:= temp;
  #L31311c.  return v0;
}
procedure `okhttp3.Request` `request`(`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall` v1 @kind this) @signature `Lretrofit2/ExecutorCallAdapterFactory$ExecutorCallbackCall;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L313130.  v0:= v1.`retrofit2.ExecutorCallAdapterFactory$ExecutorCallbackCall.delegate` @type ^`retrofit2.Call` @kind object;
  #L313134.  call temp:= `request`(v0) @signature `Lretrofit2/Call;.request:()Lokhttp3/Request;` @kind interface;
  #L31313a.  v0:= temp @kind object;
  #L31313c.  return v0 @kind object;
}
