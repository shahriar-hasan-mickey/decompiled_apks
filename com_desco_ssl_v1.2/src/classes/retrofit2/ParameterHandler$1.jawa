record `retrofit2.ParameterHandler$1` @kind class @AccessFlag  extends `retrofit2.ParameterHandler` @kind class {
  `retrofit2.ParameterHandler` `retrofit2.ParameterHandler$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$1` v0 @kind this, `retrofit2.ParameterHandler` v1 @kind object @name `this$0`) @signature `Lretrofit2/ParameterHandler$1;.<init>:(Lretrofit2/ParameterHandler;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L313890.  v0.`retrofit2.ParameterHandler$1.this$0` @type ^`retrofit2.ParameterHandler` := v1 @kind object;
  #L313894.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L31389a.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$1` v3 @kind this, `retrofit2.RequestBuilder` v4 @kind object @name `builder`, `java.lang.Iterable` v5 @kind object) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Iterable;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3138ac.  if v5 != 0 then goto L3138b2;
  #L3138b0.  return @kind void;
  #L3138b2.  call temp:= `iterator`(v5) @signature `Ljava/lang/Iterable;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3138b8.  v1:= temp @kind object;
  #L3138ba.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3138c0.  v2:= temp;
  #L3138c2.  if v2 == 0 then goto L3138b0;
  #L3138c6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3138cc.  v0:= temp @kind object;
  #L3138ce.  v2:= v3.`retrofit2.ParameterHandler$1.this$0` @type ^`retrofit2.ParameterHandler` @kind object;
  #L3138d2.  call `apply`(v2, v4, v0) @signature `Lretrofit2/ParameterHandler;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @kind virtual;
  #L3138d8.  goto L3138ba;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$1` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L3138ec.  v2:= (`java.lang.Iterable`) v2 @kind object;
  #L3138f0.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$1;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Iterable;)V` @kind virtual;
  #L3138f6.  return @kind void;
}
