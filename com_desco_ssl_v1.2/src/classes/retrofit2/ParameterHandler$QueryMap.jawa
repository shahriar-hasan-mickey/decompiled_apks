record `retrofit2.ParameterHandler$QueryMap` @kind class @AccessFlag FINAL extends `retrofit2.ParameterHandler` @kind class {
  `boolean` `retrofit2.ParameterHandler$QueryMap.encoded` @AccessFlag PRIVATE_FINAL;
  `retrofit2.Converter` `retrofit2.ParameterHandler$QueryMap.valueConverter` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`retrofit2.ParameterHandler$QueryMap` v0 @kind this, `retrofit2.Converter` v1 @kind object, `boolean` v2 @name `encoded`) @signature `Lretrofit2/ParameterHandler$QueryMap;.<init>:(Lretrofit2/Converter;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L31401c.  call `<init>`(v0) @signature `Lretrofit2/ParameterHandler;.<init>:()V` @kind direct;
  #L314022.  v0.`retrofit2.ParameterHandler$QueryMap.valueConverter` @type ^`retrofit2.Converter` := v1 @kind object;
  #L314026.  v0.`retrofit2.ParameterHandler$QueryMap.encoded` @type ^`boolean` := v2 @kind boolean;
  #L31402a.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$QueryMap` v0 @kind this, `retrofit2.RequestBuilder` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/lang/Object;)V` @AccessFlag SYNTHETIC {
    temp;

  #L31403c.  v2:= (`java.util.Map`) v2 @kind object;
  #L314040.  call `apply`(v0, v1, v2) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @kind virtual;
  #L314046.  return @kind void;
}
procedure `void` `apply`(`retrofit2.ParameterHandler$QueryMap` v6 @kind this, `retrofit2.RequestBuilder` v7 @kind object @name `builder`, `java.util.Map` v8 @kind object) @signature `Lretrofit2/ParameterHandler$QueryMap;.apply:(Lretrofit2/RequestBuilder;Ljava/util/Map;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L314058.  if v8 != 0 then goto L31406c;
  #L31405c.  v3:= new `java.lang.IllegalArgumentException`;
  #L314060.  v4:= "Query map was null." @kind object;
  #L314064.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L31406a.  throw v3;
  #L31406c.  call temp:= `entrySet`(v8) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L314072.  v3:= temp @kind object;
  #L314074.  call temp:= `iterator`(v3) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L31407a.  v4:= temp @kind object;
  #L31407c.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L314082.  v3:= temp;
  #L314084.  if v3 == 0 then goto L31411a;
  #L314088.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L31408e.  v0:= temp @kind object;
  #L314090.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L314094.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L31409a.  v1:= temp @kind object;
  #L31409c.  v1:= (`java.lang.String`) v1 @kind object;
  #L3140a0.  if v1 != 0 then goto L3140b4;
  #L3140a4.  v3:= new `java.lang.IllegalArgumentException`;
  #L3140a8.  v4:= "Query map contained null key." @kind object;
  #L3140ac.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3140b2.  throw v3;
  #L3140b4.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3140ba.  v2:= temp @kind object;
  #L3140bc.  if v2 != 0 then goto L3140fe;
  #L3140c0.  v3:= new `java.lang.IllegalArgumentException`;
  #L3140c4.  v4:= new `java.lang.StringBuilder`;
  #L3140c8.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3140ce.  v5:= "Query map contained null value for key '" @kind object;
  #L3140d2.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3140d8.  v4:= temp @kind object;
  #L3140da.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3140e0.  v4:= temp @kind object;
  #L3140e2.  v5:= "'." @kind object;
  #L3140e6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3140ec.  v4:= temp @kind object;
  #L3140ee.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3140f4.  v4:= temp @kind object;
  #L3140f6.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3140fc.  throw v3;
  #L3140fe.  v3:= v6.`retrofit2.ParameterHandler$QueryMap.valueConverter` @type ^`retrofit2.Converter` @kind object;
  #L314102.  call temp:= `convert`(v3, v2) @signature `Lretrofit2/Converter;.convert:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L314108.  v3:= temp @kind object;
  #L31410a.  v3:= (`java.lang.String`) v3 @kind object;
  #L31410e.  v5:= v6.`retrofit2.ParameterHandler$QueryMap.encoded` @type ^`boolean` @kind boolean;
  #L314112.  call `addQueryParam`(v7, v1, v3, v5) @signature `Lretrofit2/RequestBuilder;.addQueryParam:(Ljava/lang/String;Ljava/lang/String;Z)V` @kind virtual;
  #L314118.  goto L31407c;
  #L31411a.  return @kind void;
}
