record `retrofit2.OkHttpCall$1` @kind class @AccessFlag  extends `okhttp3.Callback` @kind interface {
  `retrofit2.OkHttpCall` `retrofit2.OkHttpCall$1.this$0` @AccessFlag FINAL_SYNTHETIC;
  `retrofit2.Callback` `retrofit2.OkHttpCall$1.val$callback` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`retrofit2.OkHttpCall$1` v0 @kind this, `retrofit2.OkHttpCall` v1 @kind object @name `this$0`, `retrofit2.Callback` v2 @kind object) @signature `Lretrofit2/OkHttpCall$1;.<init>:(Lretrofit2/OkHttpCall;Lretrofit2/Callback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3131a4.  v0.`retrofit2.OkHttpCall$1.this$0` @type ^`retrofit2.OkHttpCall` := v1 @kind object;
  #L3131a8.  v0.`retrofit2.OkHttpCall$1.val$callback` @type ^`retrofit2.Callback` := v2 @kind object;
  #L3131ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3131b2.  return @kind void;
}
procedure `void` `callFailure`(`retrofit2.OkHttpCall$1` v3 @kind this, `java.lang.Throwable` v4 @kind object @name `e`) @signature `Lretrofit2/OkHttpCall$1;.callFailure:(Ljava/lang/Throwable;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3131c4.  v1:= v3.`retrofit2.OkHttpCall$1.val$callback` @type ^`retrofit2.Callback` @kind object;
  #L3131c8.  v2:= v3.`retrofit2.OkHttpCall$1.this$0` @type ^`retrofit2.OkHttpCall` @kind object;
  #L3131cc.  call `onFailure`(v1, v2, v4) @signature `Lretrofit2/Callback;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @kind interface;
  #L3131d2.  return @kind void;
  #L3131d4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3131d6.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L3131dc.  goto L3131d2;
  catch `java.lang.Throwable` @[L3131c4..L3131d2] goto L3131d4;
}
procedure `void` `callSuccess`(`retrofit2.OkHttpCall$1` v3 @kind this, `retrofit2.Response` v4 @kind object) @signature `Lretrofit2/OkHttpCall$1;.callSuccess:(Lretrofit2/Response;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L313200.  v1:= v3.`retrofit2.OkHttpCall$1.val$callback` @type ^`retrofit2.Callback` @kind object;
  #L313204.  v2:= v3.`retrofit2.OkHttpCall$1.this$0` @type ^`retrofit2.OkHttpCall` @kind object;
  #L313208.  call `onResponse`(v1, v2, v4) @signature `Lretrofit2/Callback;.onResponse:(Lretrofit2/Call;Lretrofit2/Response;)V` @kind interface;
  #L31320e.  return @kind void;
  #L313210.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L313212.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L313218.  goto L31320e;
  catch `java.lang.Throwable` @[L313200..L31320e] goto L313210;
}
procedure `void` `onFailure`(`retrofit2.OkHttpCall$1` v3 @kind this, `okhttp3.Call` v4 @kind object @name `call`, `java.io.IOException` v5 @kind object @name `e`) @signature `Lretrofit2/OkHttpCall$1;.onFailure:(Lokhttp3/Call;Ljava/io/IOException;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L31323c.  v1:= v3.`retrofit2.OkHttpCall$1.val$callback` @type ^`retrofit2.Callback` @kind object;
  #L313240.  v2:= v3.`retrofit2.OkHttpCall$1.this$0` @type ^`retrofit2.OkHttpCall` @kind object;
  #L313244.  call `onFailure`(v1, v2, v5) @signature `Lretrofit2/Callback;.onFailure:(Lretrofit2/Call;Ljava/lang/Throwable;)V` @kind interface;
  #L31324a.  return @kind void;
  #L31324c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31324e.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L313254.  goto L31324a;
  catch `java.lang.Throwable` @[L31323c..L31324a] goto L31324c;
}
procedure `void` `onResponse`(`retrofit2.OkHttpCall$1` v3 @kind this, `okhttp3.Call` v4 @kind object @name `call`, `okhttp3.Response` v5 @kind object @name `rawResponse`) @signature `Lretrofit2/OkHttpCall$1;.onResponse:(Lokhttp3/Call;Lokhttp3/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L313278.  v2:= v3.`retrofit2.OkHttpCall$1.this$0` @type ^`retrofit2.OkHttpCall` @kind object;
  #L31327c.  call temp:= `parseResponse`(v2, v5) @signature `Lretrofit2/OkHttpCall;.parseResponse:(Lokhttp3/Response;)Lretrofit2/Response;` @kind virtual;
  #L313282.  v1:= temp @kind object;
  #L313284.  call `callSuccess`(v3, v1) @signature `Lretrofit2/OkHttpCall$1;.callSuccess:(Lretrofit2/Response;)V` @kind direct;
  #L31328a.  return @kind void;
  #L31328c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L31328e.  call `callFailure`(v3, v0) @signature `Lretrofit2/OkHttpCall$1;.callFailure:(Ljava/lang/Throwable;)V` @kind direct;
  #L313294.  goto L31328a;
  catch `java.lang.Throwable` @[L313278..L313282] goto L31328c;
}
