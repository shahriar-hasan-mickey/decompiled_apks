record `okhttp3.RealCall$ApplicationInterceptorChain` @kind class @AccessFlag  extends `okhttp3.Interceptor$Chain` @kind interface {
  `boolean` `okhttp3.RealCall$ApplicationInterceptorChain.forWebSocket` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.RealCall$ApplicationInterceptorChain.index` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.RealCall$ApplicationInterceptorChain.request` @AccessFlag PRIVATE_FINAL;
  `okhttp3.RealCall` `okhttp3.RealCall$ApplicationInterceptorChain.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.RealCall$ApplicationInterceptorChain` v0 @kind this, `okhttp3.RealCall` v1 @kind object @name `this$0`, `int` v2 @name `index`, `okhttp3.Request` v3 @kind object @name `request`, `boolean` v4 @name `forWebSocket`) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.<init>:(Lokhttp3/RealCall;ILokhttp3/Request;Z)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L308714.  v0.`okhttp3.RealCall$ApplicationInterceptorChain.this$0` @type ^`okhttp3.RealCall` := v1 @kind object;
  #L308718.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30871e.  v0.`okhttp3.RealCall$ApplicationInterceptorChain.index` @type ^`int` := v2;
  #L308722.  v0.`okhttp3.RealCall$ApplicationInterceptorChain.request` @type ^`okhttp3.Request` := v3 @kind object;
  #L308726.  v0.`okhttp3.RealCall$ApplicationInterceptorChain.forWebSocket` @type ^`boolean` := v4 @kind boolean;
  #L30872a.  return @kind void;
}
procedure `okhttp3.Connection` `connection`(`okhttp3.RealCall$ApplicationInterceptorChain` v1 @kind this) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.connection:()Lokhttp3/Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30873c.  v0:= 0I;
  #L30873e.  return v0 @kind object;
}
procedure `okhttp3.Response` `proceed`(`okhttp3.RealCall$ApplicationInterceptorChain` v6 @kind this, `okhttp3.Request` v7 @kind object @name `request`) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L308750.  v3:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.index` @type ^`int`;
  #L308754.  v4:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L308758.  call temp:= `access$300`(v4) @signature `Lokhttp3/RealCall;.access$300:(Lokhttp3/RealCall;)Lokhttp3/OkHttpClient;` @kind static;
  #L30875e.  v4:= temp @kind object;
  #L308760.  call temp:= `interceptors`(v4) @signature `Lokhttp3/OkHttpClient;.interceptors:()Ljava/util/List;` @kind virtual;
  #L308766.  v4:= temp @kind object;
  #L308768.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30876e.  v4:= temp;
  #L308770.  if v3 >= v4 then goto L3087fc;
  #L308774.  v0:= new `okhttp3.RealCall$ApplicationInterceptorChain`;
  #L308778.  v3:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L30877c.  v4:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.index` @type ^`int`;
  #L308780.  v4:= v4 + 1;
  #L308784.  v5:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.forWebSocket` @type ^`boolean` @kind boolean;
  #L308788.  call `<init>`(v0, v3, v4, v7, v5) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.<init>:(Lokhttp3/RealCall;ILokhttp3/Request;Z)V` @kind direct;
  #L30878e.  v3:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L308792.  call temp:= `access$300`(v3) @signature `Lokhttp3/RealCall;.access$300:(Lokhttp3/RealCall;)Lokhttp3/OkHttpClient;` @kind static;
  #L308798.  v3:= temp @kind object;
  #L30879a.  call temp:= `interceptors`(v3) @signature `Lokhttp3/OkHttpClient;.interceptors:()Ljava/util/List;` @kind virtual;
  #L3087a0.  v3:= temp @kind object;
  #L3087a2.  v4:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.index` @type ^`int`;
  #L3087a6.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3087ac.  v2:= temp @kind object;
  #L3087ae.  v2:= (`okhttp3.Interceptor`) v2 @kind object;
  #L3087b2.  call temp:= `intercept`(v2, v0) @signature `Lokhttp3/Interceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @kind interface;
  #L3087b8.  v1:= temp @kind object;
  #L3087ba.  if v1 != 0 then goto L30880c;
  #L3087be.  v3:= new `java.lang.NullPointerException`;
  #L3087c2.  v4:= new `java.lang.StringBuilder`;
  #L3087c6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3087cc.  v5:= "application interceptor " @kind object;
  #L3087d0.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3087d6.  v4:= temp @kind object;
  #L3087d8.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3087de.  v4:= temp @kind object;
  #L3087e0.  v5:= " returned null" @kind object;
  #L3087e4.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3087ea.  v4:= temp @kind object;
  #L3087ec.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3087f2.  v4:= temp @kind object;
  #L3087f4.  call `<init>`(v3, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3087fa.  throw v3;
  #L3087fc.  v3:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.this$0` @type ^`okhttp3.RealCall` @kind object;
  #L308800.  v4:= v6.`okhttp3.RealCall$ApplicationInterceptorChain.forWebSocket` @type ^`boolean` @kind boolean;
  #L308804.  call temp:= `getResponse`(v3, v7, v4) @signature `Lokhttp3/RealCall;.getResponse:(Lokhttp3/Request;Z)Lokhttp3/Response;` @kind virtual;
  #L30880a.  v1:= temp @kind object;
  #L30880c.  return v1 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall$ApplicationInterceptorChain` v1 @kind this) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308820.  v0:= v1.`okhttp3.RealCall$ApplicationInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L308824.  return v0 @kind object;
}
