record `okhttp3.RealCall` @kind class @AccessFlag FINAL extends `okhttp3.Call` @kind interface {
  `boolean` `okhttp3.RealCall.canceled` @AccessFlag VOLATILE;
  `okhttp3.OkHttpClient` `okhttp3.RealCall.client` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http.HttpEngine` `okhttp3.RealCall.engine` @AccessFlag ;
  `boolean` `okhttp3.RealCall.executed` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.RealCall.originalRequest` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.RealCall` v0 @kind this, `okhttp3.OkHttpClient` v1 @kind object @name `client`, `okhttp3.Request` v2 @kind object @name `originalRequest`) @signature `Lokhttp3/RealCall;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Request;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L308a68.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L308a6e.  v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` := v1 @kind object;
  #L308a72.  v0.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` := v2 @kind object;
  #L308a76.  return @kind void;
}
procedure `okhttp3.Response` `access$100`(`okhttp3.RealCall` v1 @kind object @name `x0`, `boolean` v2 @name `x1`) @signature `Lokhttp3/RealCall;.access$100:(Lokhttp3/RealCall;Z)Lokhttp3/Response;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L308a88.  call temp:= `getResponseWithInterceptorChain`(v1, v2) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:(Z)Lokhttp3/Response;` @kind direct;
  #L308a8e.  v0:= temp @kind object;
  #L308a90.  return v0 @kind object;
}
procedure `java.lang.String` `access$200`(`okhttp3.RealCall` v1 @kind object @name `x0`) @signature `Lokhttp3/RealCall;.access$200:(Lokhttp3/RealCall;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L308aa4.  call temp:= `toLoggableString`(v1) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @kind direct;
  #L308aaa.  v0:= temp @kind object;
  #L308aac.  return v0 @kind object;
}
procedure `okhttp3.OkHttpClient` `access$300`(`okhttp3.RealCall` v1 @kind object @name `x0`) @signature `Lokhttp3/RealCall;.access$300:(Lokhttp3/RealCall;)Lokhttp3/OkHttpClient;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L308ac0.  v0:= v1.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308ac4.  return v0 @kind object;
}
procedure `okhttp3.Response` `getResponseWithInterceptorChain`(`okhttp3.RealCall` v3 @kind this, `boolean` v4 @name `forWebSocket`) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:(Z)Lokhttp3/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L308ad8.  v0:= new `okhttp3.RealCall$ApplicationInterceptorChain`;
  #L308adc.  v1:= 0I;
  #L308ade.  v2:= v3.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L308ae2.  call `<init>`(v0, v3, v1, v2, v4) @signature `Lokhttp3/RealCall$ApplicationInterceptorChain;.<init>:(Lokhttp3/RealCall;ILokhttp3/Request;Z)V` @kind direct;
  #L308ae8.  v1:= v3.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L308aec.  call temp:= `proceed`(v0, v1) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L308af2.  v1:= temp @kind object;
  #L308af4.  return v1 @kind object;
}
procedure `java.lang.String` `toLoggableString`(`okhttp3.RealCall` v3 @kind this) @signature `Lokhttp3/RealCall;.toLoggableString:()Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L308b08.  v1:= v3.`okhttp3.RealCall.canceled` @type ^`boolean` @kind boolean;
  #L308b0c.  if v1 == 0 then goto L308b4c;
  #L308b10.  v0:= "canceled call" @kind object;
  #L308b14.  v1:= new `java.lang.StringBuilder`;
  #L308b18.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L308b1e.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308b24.  v1:= temp @kind object;
  #L308b26.  v2:= " to " @kind object;
  #L308b2a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308b30.  v1:= temp @kind object;
  #L308b32.  call temp:= `redactedUrl`(v3) @signature `Lokhttp3/RealCall;.redactedUrl:()Lokhttp3/HttpUrl;` @kind virtual;
  #L308b38.  v2:= temp @kind object;
  #L308b3a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308b40.  v1:= temp @kind object;
  #L308b42.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L308b48.  v1:= temp @kind object;
  #L308b4a.  return v1 @kind object;
  #L308b4c.  v0:= "call" @kind object;
  #L308b50.  goto L308b14;
}
procedure `void` `cancel`(`okhttp3.RealCall` v1 @kind this) @signature `Lokhttp3/RealCall;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308b64.  v0:= 1I;
  #L308b66.  v1.`okhttp3.RealCall.canceled` @type ^`boolean` := v0 @kind boolean;
  #L308b6a.  v0:= v1.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308b6e.  if v0 == 0 then goto L308b7c;
  #L308b72.  v0:= v1.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308b76.  call `cancel`(v0) @signature `Lokhttp3/internal/http/HttpEngine;.cancel:()V` @kind virtual;
  #L308b7c.  return @kind void;
}
procedure `void` `enqueue`(`okhttp3.RealCall` v1 @kind this, `okhttp3.Callback` v2 @kind object @name `responseCallback`) @signature `Lokhttp3/RealCall;.enqueue:(Lokhttp3/Callback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L308b90.  v0:= 0I;
  #L308b92.  call `enqueue`(v1, v2, v0) @signature `Lokhttp3/RealCall;.enqueue:(Lokhttp3/Callback;Z)V` @kind virtual;
  #L308b98.  return @kind void;
}
procedure `void` `enqueue`(`okhttp3.RealCall` v3 @kind this, `okhttp3.Callback` v4 @kind object @name `responseCallback`, `boolean` v5 @name `forWebSocket`) @signature `Lokhttp3/RealCall;.enqueue:(Lokhttp3/Callback;Z)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L308bac.  @monitorenter v3
  #L308bae.  v0:= v3.`okhttp3.RealCall.executed` @type ^`boolean` @kind boolean;
  #L308bb2.  if v0 == 0 then goto L308bcc;
  #L308bb6.  v0:= new `java.lang.IllegalStateException`;
  #L308bba.  v1:= "Already Executed" @kind object;
  #L308bbe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308bc4.  throw v0;
  #L308bc6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308bc8.  @monitorexit v3
  #L308bca.  throw v0;
  #L308bcc.  v0:= 1I;
  #L308bce.  v3.`okhttp3.RealCall.executed` @type ^`boolean` := v0 @kind boolean;
  #L308bd2.  @monitorexit v3
  #L308bd4.  v0:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308bd8.  call temp:= `dispatcher`(v0) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L308bde.  v0:= temp @kind object;
  #L308be0.  v1:= new `okhttp3.RealCall$AsyncCall`;
  #L308be4.  v2:= 0I;
  #L308be6.  call `<init>`(v1, v3, v4, v5, v2) @signature `Lokhttp3/RealCall$AsyncCall;.<init>:(Lokhttp3/RealCall;Lokhttp3/Callback;ZLokhttp3/RealCall$1;)V` @kind direct;
  #L308bec.  call `enqueue`(v0, v1) @signature `Lokhttp3/Dispatcher;.enqueue:(Lokhttp3/RealCall$AsyncCall;)V` @kind virtual;
  #L308bf2.  return @kind void;
  catch `java.lang.Throwable` @[L308bae..L308bca] goto L308bc6;
  catch `java.lang.Throwable` @[L308bce..L308bd4] goto L308bc6;
}
procedure `okhttp3.Response` `execute`(`okhttp3.RealCall` v3 @kind this) @signature `Lokhttp3/RealCall;.execute:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L308c18.  @monitorenter v3
  #L308c1a.  v1:= v3.`okhttp3.RealCall.executed` @type ^`boolean` @kind boolean;
  #L308c1e.  if v1 == 0 then goto L308c38;
  #L308c22.  v1:= new `java.lang.IllegalStateException`;
  #L308c26.  v2:= "Already Executed" @kind object;
  #L308c2a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308c30.  throw v1;
  #L308c32.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308c34.  @monitorexit v3
  #L308c36.  throw v1;
  #L308c38.  v1:= 1I;
  #L308c3a.  v3.`okhttp3.RealCall.executed` @type ^`boolean` := v1 @kind boolean;
  #L308c3e.  @monitorexit v3
  #L308c40.  v1:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308c44.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L308c4a.  v1:= temp @kind object;
  #L308c4c.  call `executed`(v1, v3) @signature `Lokhttp3/Dispatcher;.executed:(Lokhttp3/RealCall;)V` @kind virtual;
  #L308c52.  v1:= 0I;
  #L308c54.  call temp:= `getResponseWithInterceptorChain`(v3, v1) @signature `Lokhttp3/RealCall;.getResponseWithInterceptorChain:(Z)Lokhttp3/Response;` @kind direct;
  #L308c5a.  v0:= temp @kind object;
  #L308c5c.  if v0 != 0 then goto L308c86;
  #L308c60.  v1:= new `java.io.IOException`;
  #L308c64.  v2:= "Canceled" @kind object;
  #L308c68.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308c6e.  throw v1;
  #L308c70.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308c72.  v2:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308c76.  call temp:= `dispatcher`(v2) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L308c7c.  v2:= temp @kind object;
  #L308c7e.  call `finished`(v2, v3) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/Call;)V` @kind virtual;
  #L308c84.  throw v1;
  #L308c86.  v1:= v3.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308c8a.  call temp:= `dispatcher`(v1) @signature `Lokhttp3/OkHttpClient;.dispatcher:()Lokhttp3/Dispatcher;` @kind virtual;
  #L308c90.  v1:= temp @kind object;
  #L308c92.  call `finished`(v1, v3) @signature `Lokhttp3/Dispatcher;.finished:(Lokhttp3/Call;)V` @kind virtual;
  #L308c98.  return v0 @kind object;
  catch `java.lang.Throwable` @[L308c1a..L308c36] goto L308c32;
  catch `java.lang.Throwable` @[L308c3a..L308c40] goto L308c32;
  catch `java.lang.Throwable` @[L308c40..L308c70] goto L308c70;
}
procedure `okhttp3.Response` `getResponse`(`okhttp3.RealCall` v21 @kind this, `okhttp3.Request` v22 @kind object @name `request`, `boolean` v23 @name `forWebSocket`) @signature `Lokhttp3/RealCall;.getResponse:(Lokhttp3/Request;Z)Lokhttp3/Response;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L308ccc.  call temp:= `body`(v22) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L308cd2.  v11:= temp @kind object;
  #L308cd4.  if v11 == 0 then goto L308d42;
  #L308cd8.  call temp:= `newBuilder`(v22) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L308cde.  v19:= temp @kind object;
  #L308ce0.  call temp:= `contentType`(v11) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L308ce6.  v14:= temp @kind object;
  #L308ce8.  if v14 == 0 then goto L308d02;
  #L308cec.  v2:= "Content-Type" @kind object;
  #L308cf0.  call temp:= `toString`(v14) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L308cf6.  v3:= temp @kind object;
  #L308cf8.  v0:= v19 @kind object;
  #L308cfc.  call temp:= `header`(v0, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L308d02.  call temp:= `contentLength`(v11) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L308d08.  v12:= temp @kind wide;
  #L308d0a.  v2:= -1L;
  #L308d0e.  v2:= lcmp(v12, v2);
  #L308d12.  if v2 == 0 then goto L308d9c;
  #L308d16.  v2:= "Content-Length" @kind object;
  #L308d1a.  call temp:= `toString`(v12) @signature `Ljava/lang/Long;.toString:(J)Ljava/lang/String;` @kind static;
  #L308d20.  v3:= temp @kind object;
  #L308d22.  v0:= v19 @kind object;
  #L308d26.  call temp:= `header`(v0, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L308d2c.  v2:= "Transfer-Encoding" @kind object;
  #L308d30.  v0:= v19 @kind object;
  #L308d34.  call temp:= `removeHeader`(v0, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L308d3a.  call temp:= `build`(v19) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L308d40.  v22:= temp @kind object;
  #L308d42.  v2:= new `okhttp3.internal.http.HttpEngine`;
  #L308d46.  v0:= v21 @kind object;
  #L308d4a.  v3:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308d4e.  v5:= 0I;
  #L308d50.  v6:= 0I;
  #L308d52.  v8:= 0I;
  #L308d54.  v9:= 0I;
  #L308d56.  v10:= 0I;
  #L308d58.  v4:= v22 @kind object;
  #L308d5c.  v7:= v23;
  #L308d60.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http/HttpEngine;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Request;ZZZLokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/http/RetryableSink;Lokhttp3/Response;)V` @kind direct;
  #L308d66.  v0:= v21 @kind object;
  #L308d6a.  v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` := v2 @kind object;
  #L308d6e.  v17:= 0I;
  #L308d72.  v0:= v21 @kind object;
  #L308d76.  v2:= v0.`okhttp3.RealCall.canceled` @type ^`boolean` @kind boolean;
  #L308d7a.  if v2 == 0 then goto L308dbe;
  #L308d7e.  v0:= v21 @kind object;
  #L308d82.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308d86.  call `releaseStreamAllocation`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.releaseStreamAllocation:()V` @kind virtual;
  #L308d8c.  v2:= new `java.io.IOException`;
  #L308d90.  v3:= "Canceled" @kind object;
  #L308d94.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308d9a.  throw v2;
  #L308d9c.  v2:= "Transfer-Encoding" @kind object;
  #L308da0.  v3:= "chunked" @kind object;
  #L308da4.  v0:= v19 @kind object;
  #L308da8.  call temp:= `header`(v0, v2, v3) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L308dae.  v2:= "Content-Length" @kind object;
  #L308db2.  v0:= v19 @kind object;
  #L308db6.  call temp:= `removeHeader`(v0, v2) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L308dbc.  goto L308d3a;
  #L308dbe.  v18:= 1I;
  #L308dc2.  v0:= v21 @kind object;
  #L308dc6.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308dca.  call `sendRequest`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.sendRequest:()V` @kind virtual;
  #L308dd0.  v0:= v21 @kind object;
  #L308dd4.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308dd8.  call `readResponse`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.readResponse:()V` @kind virtual;
  #L308dde.  v18:= 0I;
  #L308de2.  if v18 == 0 then goto L308dfc;
  #L308de6.  v0:= v21 @kind object;
  #L308dea.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308dee.  call temp:= `close`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.close:()Lokhttp3/internal/http/StreamAllocation;` @kind virtual;
  #L308df4.  v8:= temp @kind object;
  #L308df6.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308dfc.  v0:= v21 @kind object;
  #L308e00.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e04.  call temp:= `getResponse`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.getResponse:()Lokhttp3/Response;` @kind virtual;
  #L308e0a.  v10:= temp @kind object;
  #L308e0c.  v0:= v21 @kind object;
  #L308e10.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e14.  call temp:= `followUpRequest`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.followUpRequest:()Lokhttp3/Request;` @kind virtual;
  #L308e1a.  v16:= temp @kind object;
  #L308e1c.  if v16 != 0 then goto L308f02;
  #L308e20.  if v23 != 0 then goto L308e32;
  #L308e24.  v0:= v21 @kind object;
  #L308e28.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e2c.  call `releaseStreamAllocation`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.releaseStreamAllocation:()V` @kind virtual;
  #L308e32.  return v10 @kind object;
  #L308e34.  v15:= Exception @type ^`okhttp3.internal.http.RequestException` @kind object;
  #L308e36.  call temp:= `getCause`(v15) @signature `Lokhttp3/internal/http/RequestException;.getCause:()Ljava/io/IOException;` @kind virtual;
  #L308e3c.  v2:= temp @kind object;
  #L308e3e.  throw v2;
  #L308e40.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L308e42.  if v18 == 0 then goto L308e5c;
  #L308e46.  v0:= v21 @kind object;
  #L308e4a.  v3:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e4e.  call temp:= `close`(v3) @signature `Lokhttp3/internal/http/HttpEngine;.close:()Lokhttp3/internal/http/StreamAllocation;` @kind virtual;
  #L308e54.  v8:= temp @kind object;
  #L308e56.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308e5c.  throw v2;
  #L308e5e.  v15:= Exception @type ^`okhttp3.internal.http.RouteException` @kind object;
  #L308e60.  v0:= v21 @kind object;
  #L308e64.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e68.  call temp:= `getLastConnectException`(v15) @signature `Lokhttp3/internal/http/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L308e6e.  v3:= temp @kind object;
  #L308e70.  v4:= 1I;
  #L308e72.  v5:= 0I;
  #L308e74.  call temp:= `recover`(v2, v3, v4, v5) @signature `Lokhttp3/internal/http/HttpEngine;.recover:(Ljava/io/IOException;ZLokio/Sink;)Lokhttp3/internal/http/HttpEngine;` @kind virtual;
  #L308e7a.  v20:= temp @kind object;
  #L308e7c.  if v20 == 0 then goto L308eae;
  #L308e80.  v18:= 0I;
  #L308e84.  v0:= v20 @kind object;
  #L308e88.  v1:= v21 @kind object;
  #L308e8c.  v1.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` := v0 @kind object;
  #L308e90.  if v18 == 0 then goto L308d72;
  #L308e94.  v0:= v21 @kind object;
  #L308e98.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308e9c.  call temp:= `close`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.close:()Lokhttp3/internal/http/StreamAllocation;` @kind virtual;
  #L308ea2.  v8:= temp @kind object;
  #L308ea4.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308eaa.  goto L308d72;
  #L308eae.  call temp:= `getLastConnectException`(v15) @signature `Lokhttp3/internal/http/RouteException;.getLastConnectException:()Ljava/io/IOException;` @kind virtual;
  #L308eb4.  v2:= temp @kind object;
  #L308eb6.  throw v2;
  #L308eb8.  v15:= Exception @type ^`java.io.IOException` @kind object;
  #L308eba.  v0:= v21 @kind object;
  #L308ebe.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308ec2.  v3:= 0I;
  #L308ec4.  v4:= 0I;
  #L308ec6.  call temp:= `recover`(v2, v15, v3, v4) @signature `Lokhttp3/internal/http/HttpEngine;.recover:(Ljava/io/IOException;ZLokio/Sink;)Lokhttp3/internal/http/HttpEngine;` @kind virtual;
  #L308ecc.  v20:= temp @kind object;
  #L308ece.  if v20 == 0 then goto L308f00;
  #L308ed2.  v18:= 0I;
  #L308ed6.  v0:= v20 @kind object;
  #L308eda.  v1:= v21 @kind object;
  #L308ede.  v1.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` := v0 @kind object;
  #L308ee2.  if v18 == 0 then goto L308d72;
  #L308ee6.  v0:= v21 @kind object;
  #L308eea.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308eee.  call temp:= `close`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.close:()Lokhttp3/internal/http/StreamAllocation;` @kind virtual;
  #L308ef4.  v8:= temp @kind object;
  #L308ef6.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308efc.  goto L308d72;
  #L308f00.  throw v15;
  #L308f02.  v0:= v21 @kind object;
  #L308f06.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308f0a.  call temp:= `close`(v2) @signature `Lokhttp3/internal/http/HttpEngine;.close:()Lokhttp3/internal/http/StreamAllocation;` @kind virtual;
  #L308f10.  v8:= temp @kind object;
  #L308f12.  v17:= v17 + 1;
  #L308f16.  v2:= 20I;
  #L308f1a.  v0:= v17;
  #L308f1e.  if v0 <= v2 then goto L308f5e;
  #L308f22.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308f28.  v2:= new `java.net.ProtocolException`;
  #L308f2c.  v3:= new `java.lang.StringBuilder`;
  #L308f30.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L308f36.  v4:= "Too many follow-up requests: " @kind object;
  #L308f3a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308f40.  v3:= temp @kind object;
  #L308f42.  v0:= v17;
  #L308f46.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L308f4c.  v3:= temp @kind object;
  #L308f4e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L308f54.  v3:= temp @kind object;
  #L308f56.  call `<init>`(v2, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308f5c.  throw v2;
  #L308f5e.  v0:= v21 @kind object;
  #L308f62.  v2:= v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L308f66.  call temp:= `url`(v16) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L308f6c.  v3:= temp @kind object;
  #L308f6e.  call temp:= `sameConnection`(v2, v3) @signature `Lokhttp3/internal/http/HttpEngine;.sameConnection:(Lokhttp3/HttpUrl;)Z` @kind virtual;
  #L308f74.  v2:= temp;
  #L308f76.  if v2 != 0 then goto L308fb2;
  #L308f7a.  call `release`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.release:()V` @kind virtual;
  #L308f80.  v8:= 0I;
  #L308f82.  v22:= v16 @kind object;
  #L308f86.  v2:= new `okhttp3.internal.http.HttpEngine`;
  #L308f8a.  v0:= v21 @kind object;
  #L308f8e.  v3:= v0.`okhttp3.RealCall.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L308f92.  v5:= 0I;
  #L308f94.  v6:= 0I;
  #L308f96.  v9:= 0I;
  #L308f98.  v4:= v22 @kind object;
  #L308f9c.  v7:= v23;
  #L308fa0.  call `<init>`(v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lokhttp3/internal/http/HttpEngine;.<init>:(Lokhttp3/OkHttpClient;Lokhttp3/Request;ZZZLokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/http/RetryableSink;Lokhttp3/Response;)V` @kind direct;
  #L308fa6.  v0:= v21 @kind object;
  #L308faa.  v0.`okhttp3.RealCall.engine` @type ^`okhttp3.internal.http.HttpEngine` := v2 @kind object;
  #L308fae.  goto L308d72;
  #L308fb2.  call temp:= `stream`(v8) @signature `Lokhttp3/internal/http/StreamAllocation;.stream:()Lokhttp3/internal/http/HttpStream;` @kind virtual;
  #L308fb8.  v2:= temp @kind object;
  #L308fba.  if v2 == 0 then goto L308f82;
  #L308fbe.  v2:= new `java.lang.IllegalStateException`;
  #L308fc2.  v3:= new `java.lang.StringBuilder`;
  #L308fc6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L308fcc.  v4:= "Closing the body of " @kind object;
  #L308fd0.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308fd6.  v3:= temp @kind object;
  #L308fd8.  call temp:= `append`(v3, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308fde.  v3:= temp @kind object;
  #L308fe0.  v4:= " didn't close its backing stream. Bad interceptor?" @kind object;
  #L308fe4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L308fea.  v3:= temp @kind object;
  #L308fec.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L308ff2.  v3:= temp @kind object;
  #L308ff4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L308ffa.  throw v2;
  catch `okhttp3.internal.http.RequestException` @[L308dc2..L308dde] goto L308e34;
  catch `okhttp3.internal.http.RouteException` @[L308dc2..L308dde] goto L308e5e;
  catch `java.io.IOException` @[L308dc2..L308dde] goto L308eb8;
  catch `java.lang.Throwable` @[L308dc2..L308dde] goto L308e40;
  catch `java.lang.Throwable` @[L308e36..L308e40] goto L308e40;
  catch `java.lang.Throwable` @[L308e60..L308e90] goto L308e40;
  catch `java.lang.Throwable` @[L308eae..L308ee2] goto L308e40;
  catch `java.lang.Throwable` @[L308f00..L308f02] goto L308e40;
}
procedure `boolean` `isCanceled`(`okhttp3.RealCall` v1 @kind this) @signature `Lokhttp3/RealCall;.isCanceled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309048.  v0:= v1.`okhttp3.RealCall.canceled` @type ^`boolean` @kind boolean;
  #L30904c.  return v0;
}
procedure `boolean` `isExecuted`(`okhttp3.RealCall` v1 @kind this) @signature `Lokhttp3/RealCall;.isExecuted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L309060.  @monitorenter v1
  #L309062.  v0:= v1.`okhttp3.RealCall.executed` @type ^`boolean` @kind boolean;
  #L309066.  @monitorexit v1
  #L309068.  return v0;
  #L30906a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30906c.  @monitorexit v1
  #L30906e.  throw v0;
  catch `java.lang.Throwable` @[L309062..L309066] goto L30906a;
}
procedure `okhttp3.HttpUrl` `redactedUrl`(`okhttp3.RealCall` v2 @kind this) @signature `Lokhttp3/RealCall;.redactedUrl:()Lokhttp3/HttpUrl;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L30908c.  v0:= v2.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L309090.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L309096.  v0:= temp @kind object;
  #L309098.  v1:= "/..." @kind object;
  #L30909c.  call temp:= `resolve`(v0, v1) @signature `Lokhttp3/HttpUrl;.resolve:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind virtual;
  #L3090a2.  v0:= temp @kind object;
  #L3090a4.  return v0 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.RealCall` v1 @kind this) @signature `Lokhttp3/RealCall;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3090b8.  v0:= v1.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L3090bc.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.RealCall` v1 @kind this) @signature `Lokhttp3/RealCall;.tag:()Ljava/lang/Object;` @AccessFlag  {
    temp;
    v0;

  #L3090d0.  v0:= v1.`okhttp3.RealCall.originalRequest` @type ^`okhttp3.Request` @kind object;
  #L3090d4.  call temp:= `tag`(v0) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @kind virtual;
  #L3090da.  v0:= temp @kind object;
  #L3090dc.  return v0 @kind object;
}
