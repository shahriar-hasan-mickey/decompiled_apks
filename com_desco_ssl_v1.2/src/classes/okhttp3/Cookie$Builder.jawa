record `okhttp3.Cookie$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Cookie$Builder.domain` @AccessFlag ;
  `long` `okhttp3.Cookie$Builder.expiresAt` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.hostOnly` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.httpOnly` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.name` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.path` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.persistent` @AccessFlag ;
  `boolean` `okhttp3.Cookie$Builder.secure` @AccessFlag ;
  `java.lang.String` `okhttp3.Cookie$Builder.value` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2382b8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2382be.  v0:= 253402300799999L;
  #L2382c8.  v2.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v0 @kind wide;
  #L2382cc.  v0:= "/" @kind object;
  #L2382d0.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v0 @kind object;
  #L2382d4.  return @kind void;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v4 @kind this, `java.lang.String` v5 @kind object @name `domain`, `boolean` v6 @name `hostOnly`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2382e8.  if v5 != 0 then goto L2382fc;
  #L2382ec.  v1:= new `java.lang.NullPointerException`;
  #L2382f0.  v2:= "domain == null" @kind object;
  #L2382f4.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2382fa.  throw v1;
  #L2382fc.  call temp:= `domainToAscii`(v5) @signature `Lokhttp3/internal/Util;.domainToAscii:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L238302.  v0:= temp @kind object;
  #L238304.  if v0 != 0 then goto L23833a;
  #L238308.  v1:= new `java.lang.IllegalArgumentException`;
  #L23830c.  v2:= new `java.lang.StringBuilder`;
  #L238310.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L238316.  v3:= "unexpected domain: " @kind object;
  #L23831a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238320.  v2:= temp @kind object;
  #L238322.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L238328.  v2:= temp @kind object;
  #L23832a.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L238330.  v2:= temp @kind object;
  #L238332.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238338.  throw v1;
  #L23833a.  v4.`okhttp3.Cookie$Builder.domain` @type ^`java.lang.String` := v0 @kind object;
  #L23833e.  v4.`okhttp3.Cookie$Builder.hostOnly` @type ^`boolean` := v6 @kind boolean;
  #L238342.  return v4 @kind object;
}
procedure `okhttp3.Cookie` `build`(`okhttp3.Cookie$Builder` v2 @kind this) @signature `Lokhttp3/Cookie$Builder;.build:()Lokhttp3/Cookie;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L238354.  v0:= new `okhttp3.Cookie`;
  #L238358.  v1:= 0I;
  #L23835a.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/Cookie;.<init>:(Lokhttp3/Cookie$Builder;Lokhttp3/Cookie$1;)V` @kind direct;
  #L238360.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `domain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L238374.  v0:= 0I;
  #L238376.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L23837c.  v0:= temp @kind object;
  #L23837e.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `expiresAt`(`okhttp3.Cookie$Builder` v3 @kind this, `long` v4 @name `expiresAt`) @signature `Lokhttp3/Cookie$Builder;.expiresAt:(J)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L238390.  v0:= 0L;
  #L238394.  v0:= lcmp(v4, v0);
  #L238398.  if v0 > 0 then goto L2383a0;
  #L23839c.  v4:= -9223372036854775808L;
  #L2383a0.  v0:= 253402300799999L;
  #L2383aa.  v0:= lcmp(v4, v0);
  #L2383ae.  if v0 <= 0 then goto L2383bc;
  #L2383b2.  v4:= 253402300799999L;
  #L2383bc.  v3.`okhttp3.Cookie$Builder.expiresAt` @type ^`long` := v4 @kind wide;
  #L2383c0.  v0:= 1I;
  #L2383c2.  v3.`okhttp3.Cookie$Builder.persistent` @type ^`boolean` := v0 @kind boolean;
  #L2383c6.  return v3 @kind object;
}
procedure `okhttp3.Cookie$Builder` `hostOnlyDomain`(`okhttp3.Cookie$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `domain`) @signature `Lokhttp3/Cookie$Builder;.hostOnlyDomain:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2383d8.  v0:= 1I;
  #L2383da.  call temp:= `domain`(v1, v2, v0) @signature `Lokhttp3/Cookie$Builder;.domain:(Ljava/lang/String;Z)Lokhttp3/Cookie$Builder;` @kind direct;
  #L2383e0.  v0:= temp @kind object;
  #L2383e2.  return v0 @kind object;
}
procedure `okhttp3.Cookie$Builder` `httpOnly`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.httpOnly:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2383f4.  v0:= 1I;
  #L2383f6.  v1.`okhttp3.Cookie$Builder.httpOnly` @type ^`boolean` := v0 @kind boolean;
  #L2383fa.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `name`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `name`) @signature `Lokhttp3/Cookie$Builder;.name:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23840c.  if v3 != 0 then goto L238420;
  #L238410.  v0:= new `java.lang.NullPointerException`;
  #L238414.  v1:= "name == null" @kind object;
  #L238418.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23841e.  throw v0;
  #L238420.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L238426.  v0:= temp @kind object;
  #L238428.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23842e.  v0:= temp;
  #L238430.  if v0 != 0 then goto L238444;
  #L238434.  v0:= new `java.lang.IllegalArgumentException`;
  #L238438.  v1:= "name is not trimmed" @kind object;
  #L23843c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L238442.  throw v0;
  #L238444.  v2.`okhttp3.Cookie$Builder.name` @type ^`java.lang.String` := v3 @kind object;
  #L238448.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `path`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `path`) @signature `Lokhttp3/Cookie$Builder;.path:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23845c.  v0:= "/" @kind object;
  #L238460.  call temp:= `startsWith`(v3, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L238466.  v0:= temp;
  #L238468.  if v0 != 0 then goto L23847c;
  #L23846c.  v0:= new `java.lang.IllegalArgumentException`;
  #L238470.  v1:= "path must start with '/'" @kind object;
  #L238474.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23847a.  throw v0;
  #L23847c.  v2.`okhttp3.Cookie$Builder.path` @type ^`java.lang.String` := v3 @kind object;
  #L238480.  return v2 @kind object;
}
procedure `okhttp3.Cookie$Builder` `secure`(`okhttp3.Cookie$Builder` v1 @kind this) @signature `Lokhttp3/Cookie$Builder;.secure:()Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L238494.  v0:= 1I;
  #L238496.  v1.`okhttp3.Cookie$Builder.secure` @type ^`boolean` := v0 @kind boolean;
  #L23849a.  return v1 @kind object;
}
procedure `okhttp3.Cookie$Builder` `value`(`okhttp3.Cookie$Builder` v2 @kind this, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Cookie$Builder;.value:(Ljava/lang/String;)Lokhttp3/Cookie$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2384ac.  if v3 != 0 then goto L2384c0;
  #L2384b0.  v0:= new `java.lang.NullPointerException`;
  #L2384b4.  v1:= "value == null" @kind object;
  #L2384b8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2384be.  throw v0;
  #L2384c0.  call temp:= `trim`(v3) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L2384c6.  v0:= temp @kind object;
  #L2384c8.  call temp:= `equals`(v0, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2384ce.  v0:= temp;
  #L2384d0.  if v0 != 0 then goto L2384e4;
  #L2384d4.  v0:= new `java.lang.IllegalArgumentException`;
  #L2384d8.  v1:= "value is not trimmed" @kind object;
  #L2384dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2384e2.  throw v0;
  #L2384e4.  v2.`okhttp3.Cookie$Builder.value` @type ^`java.lang.String` := v3 @kind object;
  #L2384e8.  return v2 @kind object;
}
