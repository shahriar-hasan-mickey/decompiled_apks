record `okhttp3.MultipartBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `okio.ByteString` `okhttp3.MultipartBody.boundary` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.MultipartBody.contentLength` @AccessFlag PRIVATE;
  `okhttp3.MediaType` `okhttp3.MultipartBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.MediaType` `okhttp3.MultipartBody.originalType` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.MultipartBody.parts` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.ALTERNATIVE` @AccessFlag PUBLIC_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.COLONSPACE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.CRLF` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.MultipartBody.DASHDASH` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.DIGEST` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.FORM` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.MIXED` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.MediaType` `@@okhttp3.MultipartBody.PARALLEL` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MultipartBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L307b10.  v1:= 2I;
  #L307b12.  v0:= "multipart/mixed" @kind object;
  #L307b16.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307b1c.  v0:= temp @kind object;
  #L307b1e.  `@@okhttp3.MultipartBody.MIXED` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307b22.  v0:= "multipart/alternative" @kind object;
  #L307b26.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307b2c.  v0:= temp @kind object;
  #L307b2e.  `@@okhttp3.MultipartBody.ALTERNATIVE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307b32.  v0:= "multipart/digest" @kind object;
  #L307b36.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307b3c.  v0:= temp @kind object;
  #L307b3e.  `@@okhttp3.MultipartBody.DIGEST` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307b42.  v0:= "multipart/parallel" @kind object;
  #L307b46.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307b4c.  v0:= temp @kind object;
  #L307b4e.  `@@okhttp3.MultipartBody.PARALLEL` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307b52.  v0:= "multipart/form-data" @kind object;
  #L307b56.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307b5c.  v0:= temp @kind object;
  #L307b5e.  `@@okhttp3.MultipartBody.FORM` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307b62.  v0:= new `byte`[v1];
  #L307b66.  goto L307b90;
  #L307b6c.  `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] := v0 @kind object;
  #L307b70.  v0:= new `byte`[v1];
  #L307b74.  goto L307b9c;
  #L307b7a.  `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] := v0 @kind object;
  #L307b7e.  v0:= new `byte`[v1];
  #L307b82.  goto L307ba8;
  #L307b88.  `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] := v0 @kind object;
  #L307b8c.  return @kind void;
  #L307b8e.  
  #L307b90.  v0:= (58I, 32I) @kind object;
  #L307b99.  goto L307b6c;
  #L307b9a.  
  #L307b9c.  v0:= (13I, 10I) @kind object;
  #L307ba5.  goto L307b7a;
  #L307ba6.  
  #L307ba8.  v0:= (45I, 45I) @kind object;
  #L307bb1.  goto L307b88;
}
procedure `void` `<init>`(`okhttp3.MultipartBody` v2 @kind this, `okio.ByteString` v3 @kind object @name `boundary`, `okhttp3.MediaType` v4 @kind object @name `type`, `java.util.List` v5 @kind object) @signature `Lokhttp3/MultipartBody;.<init>:(Lokio/ByteString;Lokhttp3/MediaType;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L307bc4.  call `<init>`(v2) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L307bca.  v0:= -1L;
  #L307bce.  v2.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L307bd2.  v2.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` := v3 @kind object;
  #L307bd6.  v2.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` := v4 @kind object;
  #L307bda.  v0:= new `java.lang.StringBuilder`;
  #L307bde.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L307be4.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307bea.  v0:= temp @kind object;
  #L307bec.  v1:= "; boundary=" @kind object;
  #L307bf0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307bf6.  v0:= temp @kind object;
  #L307bf8.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L307bfe.  v1:= temp @kind object;
  #L307c00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c06.  v0:= temp @kind object;
  #L307c08.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L307c0e.  v0:= temp @kind object;
  #L307c10.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L307c16.  v0:= temp @kind object;
  #L307c18.  v2.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307c1c.  call temp:= `immutableList`(v5) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L307c22.  v0:= temp @kind object;
  #L307c24.  v2.`okhttp3.MultipartBody.parts` @type ^`java.util.List` := v0 @kind object;
  #L307c28.  return @kind void;
}
procedure `java.lang.StringBuilder` `appendQuotedString`(`java.lang.StringBuilder` v5 @kind object @name `target`, `java.lang.String` v6 @kind object @name `key`) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L307c3c.  v4:= 34I;
  #L307c40.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c46.  v1:= 0I;
  #L307c48.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L307c4e.  v2:= temp;
  #L307c50.  if v1 >= v2 then goto L307c92;
  #L307c54.  call temp:= `charAt`(v6, v1) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L307c5a.  v0:= temp;
  #L307c5c.  goto L307c9c;
  #L307c62.  call temp:= `append`(v5, v0) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c68.  v1:= v1 + 1;
  #L307c6c.  goto L307c50;
  #L307c6e.  v3:= "%0A" @kind object;
  #L307c72.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c78.  goto L307c68;
  #L307c7a.  v3:= "%0D" @kind object;
  #L307c7e.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c84.  goto L307c68;
  #L307c86.  v3:= "%22" @kind object;
  #L307c8a.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c90.  goto L307c68;
  #L307c92.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L307c98.  return v5 @kind object;
  #L307c9a.  
  #L307c9c.  switch v0
                  | 10 => goto L307c6e
                  | 13 => goto L307c7a
                  | 34 => goto L307c86
                  | else => goto L307c62;
}
procedure `long` `writeOrCountBytes`(`okhttp3.MultipartBody` v18 @kind this, `okio.BufferedSink` v19 @kind object @name `sink`, `boolean` v20 @name `countBytes`) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L307cc8.  v4:= 0L;
  #L307ccc.  v3:= 0I;
  #L307cce.  if v20 == 0 then goto L307ce0;
  #L307cd2.  v3:= new `okio.Buffer`;
  #L307cd6.  call `<init>`(v3) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L307cdc.  v19:= v3 @kind object;
  #L307ce0.  v12:= 0I;
  #L307ce2.  v0:= v18 @kind object;
  #L307ce6.  v15:= v0.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L307cea.  call temp:= `size`(v15) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L307cf0.  v14:= temp;
  #L307cf2.  if v12 >= v14 then goto L307e4c;
  #L307cf6.  v0:= v18 @kind object;
  #L307cfa.  v15:= v0.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L307cfe.  call temp:= `get`(v15, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L307d04.  v13:= temp @kind object;
  #L307d06.  v13:= (`okhttp3.MultipartBody$Part`) v13 @kind object;
  #L307d0a.  call temp:= `access$000`(v13) @signature `Lokhttp3/MultipartBody$Part;.access$000:(Lokhttp3/MultipartBody$Part;)Lokhttp3/Headers;` @kind static;
  #L307d10.  v11:= temp @kind object;
  #L307d12.  call temp:= `access$100`(v13) @signature `Lokhttp3/MultipartBody$Part;.access$100:(Lokhttp3/MultipartBody$Part;)Lokhttp3/RequestBody;` @kind static;
  #L307d18.  v2:= temp @kind object;
  #L307d1a.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L307d1e.  v0:= v19 @kind object;
  #L307d22.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307d28.  v0:= v18 @kind object;
  #L307d2c.  v15:= v0.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L307d30.  v0:= v19 @kind object;
  #L307d34.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L307d3a.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307d3e.  v0:= v19 @kind object;
  #L307d42.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307d48.  if v11 == 0 then goto L307d9a;
  #L307d4c.  v9:= 0I;
  #L307d4e.  call temp:= `size`(v11) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L307d54.  v10:= temp;
  #L307d56.  if v9 >= v10 then goto L307d9a;
  #L307d5a.  call temp:= `name`(v11, v9) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L307d60.  v15:= temp @kind object;
  #L307d62.  v0:= v19 @kind object;
  #L307d66.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L307d6c.  v15:= temp @kind object;
  #L307d6e.  v16:= `@@okhttp3.MultipartBody.COLONSPACE` @type ^`byte`[] @kind object;
  #L307d72.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307d78.  v15:= temp @kind object;
  #L307d7a.  call temp:= `value`(v11, v9) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L307d80.  v16:= temp @kind object;
  #L307d82.  call temp:= `writeUtf8`(v15, v16) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L307d88.  v15:= temp @kind object;
  #L307d8a.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307d8e.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307d94.  v9:= v9 + 1;
  #L307d98.  goto L307d56;
  #L307d9a.  call temp:= `contentType`(v2) @signature `Lokhttp3/RequestBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L307da0.  v8:= temp @kind object;
  #L307da2.  if v8 == 0 then goto L307dd0;
  #L307da6.  v15:= "Content-Type: " @kind object;
  #L307daa.  v0:= v19 @kind object;
  #L307dae.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L307db4.  v15:= temp @kind object;
  #L307db6.  call temp:= `toString`(v8) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @kind virtual;
  #L307dbc.  v16:= temp @kind object;
  #L307dbe.  call temp:= `writeUtf8`(v15, v16) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L307dc4.  v15:= temp @kind object;
  #L307dc6.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307dca.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307dd0.  call temp:= `contentLength`(v2) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L307dd6.  v6:= temp @kind wide;
  #L307dd8.  v16:= -1L;
  #L307ddc.  v15:= lcmp(v6, v16);
  #L307de0.  if v15 == 0 then goto L307e30;
  #L307de4.  v15:= "Content-Length: " @kind object;
  #L307de8.  v0:= v19 @kind object;
  #L307dec.  call temp:= `writeUtf8`(v0, v15) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L307df2.  v15:= temp @kind object;
  #L307df4.  call temp:= `writeDecimalLong`(v15, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L307dfa.  v15:= temp @kind object;
  #L307dfc.  v16:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307e00.  call temp:= `write`(v15, v16) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e06.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307e0a.  v0:= v19 @kind object;
  #L307e0e.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e14.  if v20 == 0 then goto L307e40;
  #L307e18.  v4:= v4 + v6 @kind long;
  #L307e1a.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307e1e.  v0:= v19 @kind object;
  #L307e22.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e28.  v12:= v12 + 1;
  #L307e2c.  goto L307cf2;
  #L307e30.  if v20 == 0 then goto L307e06;
  #L307e34.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L307e3a.  v16:= -1L;
  #L307e3e.  return v16 @kind wide;
  #L307e40.  v0:= v19 @kind object;
  #L307e44.  call `writeTo`(v2, v0) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L307e4a.  goto L307e1a;
  #L307e4c.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L307e50.  v0:= v19 @kind object;
  #L307e54.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e5a.  v0:= v18 @kind object;
  #L307e5e.  v15:= v0.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L307e62.  v0:= v19 @kind object;
  #L307e66.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:(Lokio/ByteString;)Lokio/BufferedSink;` @kind interface;
  #L307e6c.  v15:= `@@okhttp3.MultipartBody.DASHDASH` @type ^`byte`[] @kind object;
  #L307e70.  v0:= v19 @kind object;
  #L307e74.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e7a.  v15:= `@@okhttp3.MultipartBody.CRLF` @type ^`byte`[] @kind object;
  #L307e7e.  v0:= v19 @kind object;
  #L307e82.  call temp:= `write`(v0, v15) @signature `Lokio/BufferedSink;.write:([B)Lokio/BufferedSink;` @kind interface;
  #L307e88.  if v20 == 0 then goto L307e9e;
  #L307e8c.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L307e92.  v16:= temp @kind wide;
  #L307e94.  v4:= v4 + v16 @kind long;
  #L307e98.  call `clear`(v3) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L307e9e.  v16:= v4 @kind wide;
  #L307ea2.  goto L307e3e;
}
procedure `java.lang.String` `boundary`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.boundary:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307eb4.  v0:= v1.`okhttp3.MultipartBody.boundary` @type ^`okio.ByteString` @kind object;
  #L307eb8.  call temp:= `utf8`(v0) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L307ebe.  v0:= temp @kind object;
  #L307ec0.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.MultipartBody` v4 @kind this) @signature `Lokhttp3/MultipartBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L307ed4.  v0:= v4.`okhttp3.MultipartBody.contentLength` @type ^`long` @kind wide;
  #L307ed8.  v2:= -1L;
  #L307edc.  v2:= lcmp(v0, v2);
  #L307ee0.  if v2 == 0 then goto L307ee6;
  #L307ee4.  return v0 @kind wide;
  #L307ee6.  v2:= 0I;
  #L307ee8.  v3:= 1I;
  #L307eea.  call temp:= `writeOrCountBytes`(v4, v2, v3) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L307ef0.  v0:= temp @kind wide;
  #L307ef2.  v4.`okhttp3.MultipartBody.contentLength` @type ^`long` := v0 @kind wide;
  #L307ef6.  goto L307ee4;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f08.  v0:= v1.`okhttp3.MultipartBody.contentType` @type ^`okhttp3.MediaType` @kind object;
  #L307f0c.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `part`(`okhttp3.MultipartBody` v1 @kind this, `int` v2 @name `index`) @signature `Lokhttp3/MultipartBody;.part:(I)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f20.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L307f24.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L307f2a.  v0:= temp @kind object;
  #L307f2c.  v0:= (`okhttp3.MultipartBody$Part`) v0 @kind object;
  #L307f30.  return v0 @kind object;
}
procedure `java.util.List` `parts`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.parts:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f44.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L307f48.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f5c.  v0:= v1.`okhttp3.MultipartBody.parts` @type ^`java.util.List` @kind object;
  #L307f60.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L307f66.  v0:= temp;
  #L307f68.  return v0;
}
procedure `okhttp3.MediaType` `type`(`okhttp3.MultipartBody` v1 @kind this) @signature `Lokhttp3/MultipartBody;.type:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f7c.  v0:= v1.`okhttp3.MultipartBody.originalType` @type ^`okhttp3.MediaType` @kind object;
  #L307f80.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.MultipartBody` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`) @signature `Lokhttp3/MultipartBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307f94.  v0:= 0I;
  #L307f96.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/MultipartBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L307f9c.  return @kind void;
}
