record `okhttp3.MediaType` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.MediaType.charset` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.mediaType` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.subtype` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.MediaType.type` @AccessFlag PRIVATE_FINAL;
}
global `java.util.regex.Pattern` `@@okhttp3.MediaType.PARAMETER` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.QUOTED` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.MediaType.TOKEN` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.regex.Pattern` `@@okhttp3.MediaType.TYPE_SUBTYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/MediaType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L23d118.  v0:= "([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)/([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)" @kind object;
  #L23d11c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L23d122.  v0:= temp @kind object;
  #L23d124.  `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L23d128.  v0:= ";\\s*(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)=(?:([a-zA-Z0-9-!#$%&'*+.^_`{|}~]+)|\"([^\"]*)\"))?" @kind object;
  #L23d12c.  call temp:= `compile`(v0) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L23d132.  v0:= temp @kind object;
  #L23d134.  `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` := v0 @kind object;
  #L23d138.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.MediaType` v0 @kind this, `java.lang.String` v1 @kind object @name `mediaType`, `java.lang.String` v2 @kind object @name `type`, `java.lang.String` v3 @kind object @name `subtype`, `java.lang.String` v4 @kind object @name `charset`) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23d14c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23d152.  v0.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` := v1 @kind object;
  #L23d156.  v0.`okhttp3.MediaType.type` @type ^`java.lang.String` := v2 @kind object;
  #L23d15a.  v0.`okhttp3.MediaType.subtype` @type ^`java.lang.String` := v3 @kind object;
  #L23d15e.  v0.`okhttp3.MediaType.charset` @type ^`java.lang.String` := v4 @kind object;
  #L23d162.  return @kind void;
}
procedure `okhttp3.MediaType` `parse`(`java.lang.String` v13 @kind object @name `string`) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L23d174.  v8:= 0I;
  #L23d176.  v12:= 1I;
  #L23d178.  v11:= 2I;
  #L23d17a.  v9:= `@@okhttp3.MediaType.TYPE_SUBTYPE` @type ^`java.util.regex.Pattern` @kind object;
  #L23d17e.  call temp:= `matcher`(v9, v13) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L23d184.  v7:= temp @kind object;
  #L23d186.  call temp:= `lookingAt`(v7) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L23d18c.  v9:= temp;
  #L23d18e.  if v9 != 0 then goto L23d194;
  #L23d192.  return v8 @kind object;
  #L23d194.  call temp:= `group`(v7, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d19a.  v9:= temp @kind object;
  #L23d19c.  v10:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L23d1a0.  call temp:= `toLowerCase`(v9, v10) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L23d1a6.  v6:= temp @kind object;
  #L23d1a8.  call temp:= `group`(v7, v11) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d1ae.  v9:= temp @kind object;
  #L23d1b0.  v10:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L23d1b4.  call temp:= `toLowerCase`(v9, v10) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L23d1ba.  v5:= temp @kind object;
  #L23d1bc.  v0:= 0I;
  #L23d1be.  v9:= `@@okhttp3.MediaType.PARAMETER` @type ^`java.util.regex.Pattern` @kind object;
  #L23d1c2.  call temp:= `matcher`(v9, v13) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L23d1c8.  v3:= temp @kind object;
  #L23d1ca.  call temp:= `end`(v7) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L23d1d0.  v4:= temp;
  #L23d1d2.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23d1d8.  v9:= temp;
  #L23d1da.  if v4 >= v9 then goto L23d284;
  #L23d1de.  call temp:= `length`(v13) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23d1e4.  v9:= temp;
  #L23d1e6.  call temp:= `region`(v3, v4, v9) @signature `Ljava/util/regex/Matcher;.region:(II)Ljava/util/regex/Matcher;` @kind virtual;
  #L23d1ec.  call temp:= `lookingAt`(v3) @signature `Ljava/util/regex/Matcher;.lookingAt:()Z` @kind virtual;
  #L23d1f2.  v9:= temp;
  #L23d1f4.  if v9 == 0 then goto L23d192;
  #L23d1f8.  call temp:= `group`(v3, v12) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d1fe.  v2:= temp @kind object;
  #L23d200.  if v2 == 0 then goto L23d214;
  #L23d204.  v9:= "charset" @kind object;
  #L23d208.  call temp:= `equalsIgnoreCase`(v2, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L23d20e.  v9:= temp;
  #L23d210.  if v9 != 0 then goto L23d21e;
  #L23d214.  call temp:= `end`(v3) @signature `Ljava/util/regex/Matcher;.end:()I` @kind virtual;
  #L23d21a.  v4:= temp;
  #L23d21c.  goto L23d1d2;
  #L23d21e.  call temp:= `group`(v3, v11) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d224.  v9:= temp @kind object;
  #L23d226.  if v9 == 0 then goto L23d274;
  #L23d22a.  call temp:= `group`(v3, v11) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d230.  v1:= temp @kind object;
  #L23d232.  if v0 == 0 then goto L23d280;
  #L23d236.  call temp:= `equalsIgnoreCase`(v1, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L23d23c.  v9:= temp;
  #L23d23e.  if v9 != 0 then goto L23d280;
  #L23d242.  v8:= new `java.lang.IllegalArgumentException`;
  #L23d246.  v9:= new `java.lang.StringBuilder`;
  #L23d24a.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23d250.  v10:= "Multiple different charsets: " @kind object;
  #L23d254.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23d25a.  v9:= temp @kind object;
  #L23d25c.  call temp:= `append`(v9, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23d262.  v9:= temp @kind object;
  #L23d264.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23d26a.  v9:= temp @kind object;
  #L23d26c.  call `<init>`(v8, v9) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d272.  throw v8;
  #L23d274.  v9:= 3I;
  #L23d276.  call temp:= `group`(v3, v9) @signature `Ljava/util/regex/Matcher;.group:(I)Ljava/lang/String;` @kind virtual;
  #L23d27c.  v1:= temp @kind object;
  #L23d27e.  goto L23d232;
  #L23d280.  v0:= v1 @kind object;
  #L23d282.  goto L23d214;
  #L23d284.  v8:= new `okhttp3.MediaType`;
  #L23d288.  call `<init>`(v8, v13, v6, v5, v0) @signature `Lokhttp3/MediaType;.<init>:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L23d28e.  goto L23d192;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d2a0.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L23d2a4.  if v0 == 0 then goto L23d2b6;
  #L23d2a8.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L23d2ac.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L23d2b2.  v0:= temp @kind object;
  #L23d2b4.  return v0 @kind object;
  #L23d2b6.  v0:= 0I;
  #L23d2b8.  goto L23d2b4;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.MediaType` v1 @kind this, `java.nio.charset.Charset` v2 @kind object @name `defaultValue`) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d2cc.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L23d2d0.  if v0 == 0 then goto L23d2e0;
  #L23d2d4.  v0:= v1.`okhttp3.MediaType.charset` @type ^`java.lang.String` @kind object;
  #L23d2d8.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L23d2de.  v2:= temp @kind object;
  #L23d2e0.  return v2 @kind object;
}
procedure `boolean` `equals`(`okhttp3.MediaType` v2 @kind this, `java.lang.Object` v3 @kind object @name `o`) @signature `Lokhttp3/MediaType;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23d2f4.  v0:= instanceof @variable v3 @type ^`okhttp3.MediaType` @kind boolean;
  #L23d2f8.  if v0 == 0 then goto L23d318;
  #L23d2fc.  v3:= (`okhttp3.MediaType`) v3 @kind object;
  #L23d300.  v0:= v3.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L23d304.  v1:= v2.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L23d308.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23d30e.  v0:= temp;
  #L23d310.  if v0 == 0 then goto L23d318;
  #L23d314.  v0:= 1I;
  #L23d316.  return v0;
  #L23d318.  v0:= 0I;
  #L23d31a.  goto L23d316;
}
procedure `int` `hashCode`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d32c.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L23d330.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L23d336.  v0:= temp;
  #L23d338.  return v0;
}
procedure `java.lang.String` `subtype`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.subtype:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d34c.  v0:= v1.`okhttp3.MediaType.subtype` @type ^`java.lang.String` @kind object;
  #L23d350.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d364.  v0:= v1.`okhttp3.MediaType.mediaType` @type ^`java.lang.String` @kind object;
  #L23d368.  return v0 @kind object;
}
procedure `java.lang.String` `type`(`okhttp3.MediaType` v1 @kind this) @signature `Lokhttp3/MediaType;.type:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23d37c.  v0:= v1.`okhttp3.MediaType.type` @type ^`java.lang.String` @kind object;
  #L23d380.  return v0 @kind object;
}
