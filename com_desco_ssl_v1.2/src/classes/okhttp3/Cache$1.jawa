record `okhttp3.Cache$1` @kind class @AccessFlag  extends `okhttp3.internal.InternalCache` @kind interface {
  `okhttp3.Cache` `okhttp3.Cache$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$1` v0 @kind this, `okhttp3.Cache` v1 @kind object @name `this$0`) @signature `Lokhttp3/Cache$1;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3075c4.  v0.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` := v1 @kind object;
  #L3075c8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3075ce.  return @kind void;
}
procedure `okhttp3.Response` `get`(`okhttp3.Cache$1` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Cache$1;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3075e0.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L3075e4.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Cache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @kind virtual;
  #L3075ea.  v0:= temp @kind object;
  #L3075ec.  return v0 @kind object;
}
procedure `okhttp3.internal.http.CacheRequest` `put`(`okhttp3.Cache$1` v1 @kind this, `okhttp3.Response` v2 @kind object @name `response`) @signature `Lokhttp3/Cache$1;.put:(Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307600.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L307604.  call temp:= `access$000`(v0, v2) @signature `Lokhttp3/Cache;.access$000:(Lokhttp3/Cache;Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;` @kind static;
  #L30760a.  v0:= temp @kind object;
  #L30760c.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.Cache$1` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Cache$1;.remove:(Lokhttp3/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307620.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L307624.  call `access$100`(v0, v2) @signature `Lokhttp3/Cache;.access$100:(Lokhttp3/Cache;Lokhttp3/Request;)V` @kind static;
  #L30762a.  return @kind void;
}
procedure `void` `trackConditionalCacheHit`(`okhttp3.Cache$1` v1 @kind this) @signature `Lokhttp3/Cache$1;.trackConditionalCacheHit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30763c.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L307640.  call `access$300`(v0) @signature `Lokhttp3/Cache;.access$300:(Lokhttp3/Cache;)V` @kind static;
  #L307646.  return @kind void;
}
procedure `void` `trackResponse`(`okhttp3.Cache$1` v1 @kind this, `okhttp3.internal.http.CacheStrategy` v2 @kind object @name `cacheStrategy`) @signature `Lokhttp3/Cache$1;.trackResponse:(Lokhttp3/internal/http/CacheStrategy;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307658.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L30765c.  call `access$400`(v0, v2) @signature `Lokhttp3/Cache;.access$400:(Lokhttp3/Cache;Lokhttp3/internal/http/CacheStrategy;)V` @kind static;
  #L307662.  return @kind void;
}
procedure `void` `update`(`okhttp3.Cache$1` v1 @kind this, `okhttp3.Response` v2 @kind object @name `cached`, `okhttp3.Response` v3 @kind object @name `network`) @signature `Lokhttp3/Cache$1;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307674.  v0:= v1.`okhttp3.Cache$1.this$0` @type ^`okhttp3.Cache` @kind object;
  #L307678.  call `access$200`(v0, v2, v3) @signature `Lokhttp3/Cache;.access$200:(Lokhttp3/Cache;Lokhttp3/Response;Lokhttp3/Response;)V` @kind static;
  #L30767e.  return @kind void;
}
