record `okhttp3.Address` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.CertificatePinner` `okhttp3.Address.certificatePinner` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.connectionSpecs` @AccessFlag FINAL;
  `okhttp3.Dns` `okhttp3.Address.dns` @AccessFlag FINAL;
  `javax.net.ssl.HostnameVerifier` `okhttp3.Address.hostnameVerifier` @AccessFlag FINAL;
  `java.util.List` `okhttp3.Address.protocols` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Address.proxy` @AccessFlag FINAL;
  `okhttp3.Authenticator` `okhttp3.Address.proxyAuthenticator` @AccessFlag FINAL;
  `java.net.ProxySelector` `okhttp3.Address.proxySelector` @AccessFlag FINAL;
  `javax.net.SocketFactory` `okhttp3.Address.socketFactory` @AccessFlag FINAL;
  `javax.net.ssl.SSLSocketFactory` `okhttp3.Address.sslSocketFactory` @AccessFlag FINAL;
  `okhttp3.HttpUrl` `okhttp3.Address.url` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Address` v2 @kind this, `java.lang.String` v3 @kind object @name `uriHost`, `int` v4 @name `uriPort`, `okhttp3.Dns` v5 @kind object @name `dns`, `javax.net.SocketFactory` v6 @kind object @name `socketFactory`, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`, `javax.net.ssl.HostnameVerifier` v8 @kind object @name `hostnameVerifier`, `okhttp3.CertificatePinner` v9 @kind object @name `certificatePinner`, `okhttp3.Authenticator` v10 @kind object @name `proxyAuthenticator`, `java.net.Proxy` v11 @kind object @name `proxy`, `java.util.List` v12 @kind object, `java.util.List` v13 @kind object, `java.net.ProxySelector` v14 @kind object @name `proxySelector`) @signature `Lokhttp3/Address;.<init>:(Ljava/lang/String;ILokhttp3/Dns;Ljavax/net/SocketFactory;Ljavax/net/ssl/SSLSocketFactory;Ljavax/net/ssl/HostnameVerifier;Lokhttp3/CertificatePinner;Lokhttp3/Authenticator;Ljava/net/Proxy;Ljava/util/List;Ljava/util/List;Ljava/net/ProxySelector;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L233944.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23394a.  v1:= new `okhttp3.HttpUrl$Builder`;
  #L23394e.  call `<init>`(v1) @signature `Lokhttp3/HttpUrl$Builder;.<init>:()V` @kind direct;
  #L233954.  if v7 == 0 then goto L233994;
  #L233958.  v0:= "https" @kind object;
  #L23395c.  call temp:= `scheme`(v1, v0) @signature `Lokhttp3/HttpUrl$Builder;.scheme:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L233962.  v0:= temp @kind object;
  #L233964.  call temp:= `host`(v0, v3) @signature `Lokhttp3/HttpUrl$Builder;.host:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L23396a.  v0:= temp @kind object;
  #L23396c.  call temp:= `port`(v0, v4) @signature `Lokhttp3/HttpUrl$Builder;.port:(I)Lokhttp3/HttpUrl$Builder;` @kind virtual;
  #L233972.  v0:= temp @kind object;
  #L233974.  call temp:= `build`(v0) @signature `Lokhttp3/HttpUrl$Builder;.build:()Lokhttp3/HttpUrl;` @kind virtual;
  #L23397a.  v0:= temp @kind object;
  #L23397c.  v2.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L233980.  if v5 != 0 then goto L23399a;
  #L233984.  v0:= new `java.lang.NullPointerException`;
  #L233988.  v1:= "dns == null" @kind object;
  #L23398c.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233992.  throw v0;
  #L233994.  v0:= "http" @kind object;
  #L233998.  goto L23395c;
  #L23399a.  v2.`okhttp3.Address.dns` @type ^`okhttp3.Dns` := v5 @kind object;
  #L23399e.  if v6 != 0 then goto L2339b2;
  #L2339a2.  v0:= new `java.lang.NullPointerException`;
  #L2339a6.  v1:= "socketFactory == null" @kind object;
  #L2339aa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2339b0.  throw v0;
  #L2339b2.  v2.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` := v6 @kind object;
  #L2339b6.  if v10 != 0 then goto L2339ca;
  #L2339ba.  v0:= new `java.lang.NullPointerException`;
  #L2339be.  v1:= "proxyAuthenticator == null" @kind object;
  #L2339c2.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2339c8.  throw v0;
  #L2339ca.  v2.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` := v10 @kind object;
  #L2339ce.  if v12 != 0 then goto L2339e2;
  #L2339d2.  v0:= new `java.lang.NullPointerException`;
  #L2339d6.  v1:= "protocols == null" @kind object;
  #L2339da.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2339e0.  throw v0;
  #L2339e2.  call temp:= `immutableList`(v12) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L2339e8.  v0:= temp @kind object;
  #L2339ea.  v2.`okhttp3.Address.protocols` @type ^`java.util.List` := v0 @kind object;
  #L2339ee.  if v13 != 0 then goto L233a02;
  #L2339f2.  v0:= new `java.lang.NullPointerException`;
  #L2339f6.  v1:= "connectionSpecs == null" @kind object;
  #L2339fa.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233a00.  throw v0;
  #L233a02.  call temp:= `immutableList`(v13) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L233a08.  v0:= temp @kind object;
  #L233a0a.  v2.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` := v0 @kind object;
  #L233a0e.  if v14 != 0 then goto L233a22;
  #L233a12.  v0:= new `java.lang.NullPointerException`;
  #L233a16.  v1:= "proxySelector == null" @kind object;
  #L233a1a.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233a20.  throw v0;
  #L233a22.  v2.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` := v14 @kind object;
  #L233a26.  v2.`okhttp3.Address.proxy` @type ^`java.net.Proxy` := v11 @kind object;
  #L233a2a.  v2.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v7 @kind object;
  #L233a2e.  v2.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` := v8 @kind object;
  #L233a32.  v2.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` := v9 @kind object;
  #L233a36.  return @kind void;
}
procedure `okhttp3.CertificatePinner` `certificatePinner`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.certificatePinner:()Lokhttp3/CertificatePinner;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233a48.  v0:= v1.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L233a4c.  return v0 @kind object;
}
procedure `java.util.List` `connectionSpecs`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.connectionSpecs:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233a60.  v0:= v1.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L233a64.  return v0 @kind object;
}
procedure `okhttp3.Dns` `dns`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.dns:()Lokhttp3/Dns;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233a78.  v0:= v1.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L233a7c.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Address` v4 @kind this, `java.lang.Object` v5 @kind object @name `other`) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L233a90.  v1:= 0I;
  #L233a92.  v2:= instanceof @variable v5 @type ^`okhttp3.Address` @kind boolean;
  #L233a96.  if v2 == 0 then goto L233b6a;
  #L233a9a.  v0:= v5 @kind object;
  #L233a9c.  v0:= (`okhttp3.Address`) v0 @kind object;
  #L233aa0.  v2:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L233aa4.  v3:= v0.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L233aa8.  call temp:= `equals`(v2, v3) @signature `Lokhttp3/HttpUrl;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L233aae.  v2:= temp;
  #L233ab0.  if v2 == 0 then goto L233b6a;
  #L233ab4.  v2:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L233ab8.  v3:= v0.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L233abc.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L233ac2.  v2:= temp;
  #L233ac4.  if v2 == 0 then goto L233b6a;
  #L233ac8.  v2:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L233acc.  v3:= v0.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L233ad0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L233ad6.  v2:= temp;
  #L233ad8.  if v2 == 0 then goto L233b6a;
  #L233adc.  v2:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L233ae0.  v3:= v0.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L233ae4.  call temp:= `equals`(v2, v3) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L233aea.  v2:= temp;
  #L233aec.  if v2 == 0 then goto L233b6a;
  #L233af0.  v2:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L233af4.  v3:= v0.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L233af8.  call temp:= `equals`(v2, v3) @signature `Ljava/util/List;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L233afe.  v2:= temp;
  #L233b00.  if v2 == 0 then goto L233b6a;
  #L233b04.  v2:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L233b08.  v3:= v0.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L233b0c.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L233b12.  v2:= temp;
  #L233b14.  if v2 == 0 then goto L233b6a;
  #L233b18.  v2:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L233b1c.  v3:= v0.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L233b20.  call temp:= `equal`(v2, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L233b26.  v2:= temp;
  #L233b28.  if v2 == 0 then goto L233b6a;
  #L233b2c.  v2:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L233b30.  v3:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L233b34.  call temp:= `equal`(v2, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L233b3a.  v2:= temp;
  #L233b3c.  if v2 == 0 then goto L233b6a;
  #L233b40.  v2:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L233b44.  v3:= v0.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L233b48.  call temp:= `equal`(v2, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L233b4e.  v2:= temp;
  #L233b50.  if v2 == 0 then goto L233b6a;
  #L233b54.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L233b58.  v3:= v0.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L233b5c.  call temp:= `equal`(v2, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L233b62.  v2:= temp;
  #L233b64.  if v2 == 0 then goto L233b6a;
  #L233b68.  v1:= 1I;
  #L233b6a.  return v1;
}
procedure `int` `hashCode`(`okhttp3.Address` v4 @kind this) @signature `Lokhttp3/Address;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L233b7c.  v2:= 0I;
  #L233b7e.  v0:= 17I;
  #L233b82.  v1:= v4.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L233b86.  call temp:= `hashCode`(v1) @signature `Lokhttp3/HttpUrl;.hashCode:()I` @kind virtual;
  #L233b8c.  v1:= temp;
  #L233b8e.  v0:= v1 + 527;
  #L233b92.  v1:= v0 * 31;
  #L233b96.  v3:= v4.`okhttp3.Address.dns` @type ^`okhttp3.Dns` @kind object;
  #L233b9a.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233ba0.  v3:= temp;
  #L233ba2.  v0:= v1 + v3 @kind int;
  #L233ba6.  v1:= v0 * 31;
  #L233baa.  v3:= v4.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L233bae.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233bb4.  v3:= temp;
  #L233bb6.  v0:= v1 + v3 @kind int;
  #L233bba.  v1:= v0 * 31;
  #L233bbe.  v3:= v4.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L233bc2.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L233bc8.  v3:= temp;
  #L233bca.  v0:= v1 + v3 @kind int;
  #L233bce.  v1:= v0 * 31;
  #L233bd2.  v3:= v4.`okhttp3.Address.connectionSpecs` @type ^`java.util.List` @kind object;
  #L233bd6.  call temp:= `hashCode`(v3) @signature `Ljava/util/List;.hashCode:()I` @kind interface;
  #L233bdc.  v3:= temp;
  #L233bde.  v0:= v1 + v3 @kind int;
  #L233be2.  v1:= v0 * 31;
  #L233be6.  v3:= v4.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L233bea.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233bf0.  v3:= temp;
  #L233bf2.  v0:= v1 + v3 @kind int;
  #L233bf6.  v3:= v0 * 31;
  #L233bfa.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L233bfe.  if v1 == 0 then goto L233c68;
  #L233c02.  v1:= v4.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L233c06.  call temp:= `hashCode`(v1) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L233c0c.  v1:= temp;
  #L233c0e.  v0:= v3 + v1 @kind int;
  #L233c12.  v3:= v0 * 31;
  #L233c16.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L233c1a.  if v1 == 0 then goto L233c6c;
  #L233c1e.  v1:= v4.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L233c22.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233c28.  v1:= temp;
  #L233c2a.  v0:= v3 + v1 @kind int;
  #L233c2e.  v3:= v0 * 31;
  #L233c32.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L233c36.  if v1 == 0 then goto L233c70;
  #L233c3a.  v1:= v4.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L233c3e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233c44.  v1:= temp;
  #L233c46.  v0:= v3 + v1 @kind int;
  #L233c4a.  v1:= v0 * 31;
  #L233c4e.  v3:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L233c52.  if v3 == 0 then goto L233c62;
  #L233c56.  v2:= v4.`okhttp3.Address.certificatePinner` @type ^`okhttp3.CertificatePinner` @kind object;
  #L233c5a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L233c60.  v2:= temp;
  #L233c62.  v0:= v1 + v2 @kind int;
  #L233c66.  return v0;
  #L233c68.  v1:= v2;
  #L233c6a.  goto L233c0e;
  #L233c6c.  v1:= v2;
  #L233c6e.  goto L233c2a;
  #L233c70.  v1:= v2;
  #L233c72.  goto L233c46;
}
procedure `javax.net.ssl.HostnameVerifier` `hostnameVerifier`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.hostnameVerifier:()Ljavax/net/ssl/HostnameVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233c84.  v0:= v1.`okhttp3.Address.hostnameVerifier` @type ^`javax.net.ssl.HostnameVerifier` @kind object;
  #L233c88.  return v0 @kind object;
}
procedure `java.util.List` `protocols`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.protocols:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233c9c.  v0:= v1.`okhttp3.Address.protocols` @type ^`java.util.List` @kind object;
  #L233ca0.  return v0 @kind object;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233cb4.  v0:= v1.`okhttp3.Address.proxy` @type ^`java.net.Proxy` @kind object;
  #L233cb8.  return v0 @kind object;
}
procedure `okhttp3.Authenticator` `proxyAuthenticator`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxyAuthenticator:()Lokhttp3/Authenticator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233ccc.  v0:= v1.`okhttp3.Address.proxyAuthenticator` @type ^`okhttp3.Authenticator` @kind object;
  #L233cd0.  return v0 @kind object;
}
procedure `java.net.ProxySelector` `proxySelector`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.proxySelector:()Ljava/net/ProxySelector;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233ce4.  v0:= v1.`okhttp3.Address.proxySelector` @type ^`java.net.ProxySelector` @kind object;
  #L233ce8.  return v0 @kind object;
}
procedure `javax.net.SocketFactory` `socketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.socketFactory:()Ljavax/net/SocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233cfc.  v0:= v1.`okhttp3.Address.socketFactory` @type ^`javax.net.SocketFactory` @kind object;
  #L233d00.  return v0 @kind object;
}
procedure `javax.net.ssl.SSLSocketFactory` `sslSocketFactory`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.sslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233d14.  v0:= v1.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L233d18.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Address` v1 @kind this) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L233d2c.  v0:= v1.`okhttp3.Address.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L233d30.  return v0 @kind object;
}
