record `okhttp3.TlsVersion` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `okhttp3.TlsVersion.javaName` @AccessFlag FINAL;
}
global `okhttp3.TlsVersion`[] `@@okhttp3.TlsVersion.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.SSL_3_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_0` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_1` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.TlsVersion` `@@okhttp3.TlsVersion.TLS_1_2` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/TlsVersion;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23f99c.  v6:= 3I;
  #L23f99e.  v5:= 2I;
  #L23f9a0.  v4:= 1I;
  #L23f9a2.  v3:= 0I;
  #L23f9a4.  v0:= new `okhttp3.TlsVersion`;
  #L23f9a8.  v1:= "TLS_1_2" @kind object;
  #L23f9ac.  v2:= "TLSv1.2" @kind object;
  #L23f9b0.  call `<init>`(v0, v1, v3, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L23f9b6.  `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L23f9ba.  v0:= new `okhttp3.TlsVersion`;
  #L23f9be.  v1:= "TLS_1_1" @kind object;
  #L23f9c2.  v2:= "TLSv1.1" @kind object;
  #L23f9c6.  call `<init>`(v0, v1, v4, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L23f9cc.  `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L23f9d0.  v0:= new `okhttp3.TlsVersion`;
  #L23f9d4.  v1:= "TLS_1_0" @kind object;
  #L23f9d8.  v2:= "TLSv1" @kind object;
  #L23f9dc.  call `<init>`(v0, v1, v5, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L23f9e2.  `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L23f9e6.  v0:= new `okhttp3.TlsVersion`;
  #L23f9ea.  v1:= "SSL_3_0" @kind object;
  #L23f9ee.  v2:= "SSLv3" @kind object;
  #L23f9f2.  call `<init>`(v0, v1, v6, v2) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L23f9f8.  `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` := v0 @kind object;
  #L23f9fc.  v0:= 4I;
  #L23f9fe.  v0:= new `okhttp3.TlsVersion`[v0];
  #L23fa02.  v1:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fa06.  v0[v3]:= v1 @kind object;
  #L23fa0a.  v1:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fa0e.  v0[v4]:= v1 @kind object;
  #L23fa12.  v1:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fa16.  v0[v5]:= v1 @kind object;
  #L23fa1a.  v1:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fa1e.  v0[v6]:= v1 @kind object;
  #L23fa22.  `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] := v0 @kind object;
  #L23fa26.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.TlsVersion` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23fa38.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23fa3e.  v0.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` := v3 @kind object;
  #L23fa42.  return @kind void;
}
procedure `okhttp3.TlsVersion` `forJavaName`(`java.lang.String` v3 @kind object @name `javaName`) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23fa54.  v0:= -1I;
  #L23fa56.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L23fa5c.  v1:= temp;
  #L23fa5e.  goto L23fb04;
  #L23fa64.  goto L23fb28;
  #L23fa6a.  v0:= new `java.lang.IllegalArgumentException`;
  #L23fa6e.  v1:= new `java.lang.StringBuilder`;
  #L23fa72.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23fa78.  v2:= "Unexpected TLS version: " @kind object;
  #L23fa7c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23fa82.  v1:= temp @kind object;
  #L23fa84.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23fa8a.  v1:= temp @kind object;
  #L23fa8c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23fa92.  v1:= temp @kind object;
  #L23fa94.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23fa9a.  throw v0;
  #L23fa9c.  v1:= "TLSv1.2" @kind object;
  #L23faa0.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23faa6.  v1:= temp;
  #L23faa8.  if v1 == 0 then goto L23fa64;
  #L23faac.  v0:= 0I;
  #L23faae.  goto L23fa64;
  #L23fab0.  v1:= "TLSv1.1" @kind object;
  #L23fab4.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23faba.  v1:= temp;
  #L23fabc.  if v1 == 0 then goto L23fa64;
  #L23fac0.  v0:= 1I;
  #L23fac2.  goto L23fa64;
  #L23fac4.  v1:= "TLSv1" @kind object;
  #L23fac8.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23face.  v1:= temp;
  #L23fad0.  if v1 == 0 then goto L23fa64;
  #L23fad4.  v0:= 2I;
  #L23fad6.  goto L23fa64;
  #L23fad8.  v1:= "SSLv3" @kind object;
  #L23fadc.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23fae2.  v1:= temp;
  #L23fae4.  if v1 == 0 then goto L23fa64;
  #L23fae8.  v0:= 3I;
  #L23faea.  goto L23fa64;
  #L23faec.  v0:= `@@okhttp3.TlsVersion.TLS_1_2` @type ^`okhttp3.TlsVersion` @kind object;
  #L23faf0.  return v0 @kind object;
  #L23faf2.  v0:= `@@okhttp3.TlsVersion.TLS_1_1` @type ^`okhttp3.TlsVersion` @kind object;
  #L23faf6.  goto L23faf0;
  #L23faf8.  v0:= `@@okhttp3.TlsVersion.TLS_1_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fafc.  goto L23faf0;
  #L23fafe.  v0:= `@@okhttp3.TlsVersion.SSL_3_0` @type ^`okhttp3.TlsVersion` @kind object;
  #L23fb02.  goto L23faf0;
  #L23fb04.  switch v1
                  | -503070503 => goto L23fab0
                  | -503070502 => goto L23fa9c
                  | 79201641 => goto L23fad8
                  | 79923350 => goto L23fac4
                  | else => goto L23fa64;
  #L23fb28.  switch v0
                  | 0 => goto L23faec
                  | 1 => goto L23faf2
                  | 2 => goto L23faf8
                  | 3 => goto L23fafe
                  | else => goto L23fa6a;
}
procedure `okhttp3.TlsVersion` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/TlsVersion;.valueOf:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23fb50.  v0:= constclass @type ^`okhttp3.TlsVersion` @kind object;
  #L23fb54.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23fb5a.  v0:= temp @kind object;
  #L23fb5c.  v0:= (`okhttp3.TlsVersion`) v0 @kind object;
  #L23fb60.  return v0 @kind object;
}
procedure `okhttp3.TlsVersion`[] `values`() @signature `Lokhttp3/TlsVersion;.values:()[Lokhttp3/TlsVersion;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23fb74.  v0:= `@@okhttp3.TlsVersion.$VALUES` @type ^`okhttp3.TlsVersion`[] @kind object;
  #L23fb78.  call temp:= `clone`(v0) @signature `[Lokhttp3/TlsVersion;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23fb7e.  v0:= temp @kind object;
  #L23fb80.  v0:= (`okhttp3.TlsVersion`[]) v0 @kind object;
  #L23fb84.  return v0 @kind object;
}
procedure `java.lang.String` `javaName`(`okhttp3.TlsVersion` v1 @kind this) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23fb98.  v0:= v1.`okhttp3.TlsVersion.javaName` @type ^`java.lang.String` @kind object;
  #L23fb9c.  return v0 @kind object;
}
