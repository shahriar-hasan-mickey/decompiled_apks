record `okhttp3.HttpUrl$Builder$ParseResult` @kind class @AccessFlag FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `okhttp3.HttpUrl$Builder$ParseResult`[] `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `okhttp3.HttpUrl$Builder$ParseResult` `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23a858.  v6:= 4I;
  #L23a85a.  v5:= 3I;
  #L23a85c.  v4:= 2I;
  #L23a85e.  v3:= 1I;
  #L23a860.  v2:= 0I;
  #L23a862.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L23a866.  v1:= "SUCCESS" @kind object;
  #L23a86a.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a870.  `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L23a874.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L23a878.  v1:= "MISSING_SCHEME" @kind object;
  #L23a87c.  call `<init>`(v0, v1, v3) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a882.  `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L23a886.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L23a88a.  v1:= "UNSUPPORTED_SCHEME" @kind object;
  #L23a88e.  call `<init>`(v0, v1, v4) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a894.  `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L23a898.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L23a89c.  v1:= "INVALID_PORT" @kind object;
  #L23a8a0.  call `<init>`(v0, v1, v5) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a8a6.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L23a8aa.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`;
  #L23a8ae.  v1:= "INVALID_HOST" @kind object;
  #L23a8b2.  call `<init>`(v0, v1, v6) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a8b8.  `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` := v0 @kind object;
  #L23a8bc.  v0:= 5I;
  #L23a8be.  v0:= new `okhttp3.HttpUrl$Builder$ParseResult`[v0];
  #L23a8c2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a8c6.  v0[v2]:= v1 @kind object;
  #L23a8ca.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a8ce.  v0[v3]:= v1 @kind object;
  #L23a8d2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a8d6.  v0[v4]:= v1 @kind object;
  #L23a8da.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a8de.  v0[v5]:= v1 @kind object;
  #L23a8e2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a8e6.  v0[v6]:= v1 @kind object;
  #L23a8ea.  `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] := v0 @kind object;
  #L23a8ee.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.HttpUrl$Builder$ParseResult` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23a900.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L23a906.  return @kind void;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.valueOf:(Ljava/lang/String;)Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23a918.  v0:= constclass @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a91c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L23a922.  v0:= temp @kind object;
  #L23a924.  v0:= (`okhttp3.HttpUrl$Builder$ParseResult`) v0 @kind object;
  #L23a928.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl$Builder$ParseResult`[] `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23a93c.  v0:= `@@okhttp3.HttpUrl$Builder$ParseResult.$VALUES` @type ^`okhttp3.HttpUrl$Builder$ParseResult`[] @kind object;
  #L23a940.  call temp:= `clone`(v0) @signature `[Lokhttp3/HttpUrl$Builder$ParseResult;.clone:()Ljava/lang/Object;` @kind virtual;
  #L23a946.  v0:= temp @kind object;
  #L23a948.  v0:= (`okhttp3.HttpUrl$Builder$ParseResult`[]) v0 @kind object;
  #L23a94c.  return v0 @kind object;
}
