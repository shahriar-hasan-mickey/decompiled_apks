record `okhttp3.Cache$Entry` @kind class @AccessFlag FINAL {
  `int` `okhttp3.Cache$Entry.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Cache$Entry.handshake` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Cache$Entry.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.receivedResponseMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.requestMethod` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.responseHeaders` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Cache$Entry.sentRequestMillis` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$Entry.url` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Cache$Entry.varyHeaders` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L233eb4.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L233eba.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L233ec0.  v0:= temp @kind object;
  #L233ec2.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L233ec8.  v0:= temp @kind object;
  #L233eca.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L233ed0.  v0:= temp @kind object;
  #L233ed2.  v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L233ed6.  call temp:= `varyHeaders`(v3) @signature `Lokhttp3/internal/http/OkHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @kind static;
  #L233edc.  v0:= temp @kind object;
  #L233ede.  v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L233ee2.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L233ee8.  v0:= temp @kind object;
  #L233eea.  call temp:= `method`(v0) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L233ef0.  v0:= temp @kind object;
  #L233ef2.  v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L233ef6.  call temp:= `protocol`(v3) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @kind virtual;
  #L233efc.  v0:= temp @kind object;
  #L233efe.  v2.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L233f02.  call temp:= `code`(v3) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L233f08.  v0:= temp;
  #L233f0a.  v2.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L233f0e.  call temp:= `message`(v3) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @kind virtual;
  #L233f14.  v0:= temp @kind object;
  #L233f16.  v2.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L233f1a.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L233f20.  v0:= temp @kind object;
  #L233f22.  v2.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L233f26.  call temp:= `handshake`(v3) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L233f2c.  v0:= temp @kind object;
  #L233f2e.  v2.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L233f32.  call temp:= `sentRequestAtMillis`(v3) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L233f38.  v0:= temp @kind wide;
  #L233f3a.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L233f3e.  call temp:= `receivedResponseAtMillis`(v3) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L233f44.  v0:= temp @kind wide;
  #L233f46.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L233f4a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache$Entry` v22 @kind this, `okio.Source` v23 @kind object @name `in`) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L233f5c.  call `<init>`(v22) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L233f62.  call temp:= `buffer`(v23) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L233f68.  v14:= temp @kind object;
  #L233f6a.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L233f70.  v19:= temp @kind object;
  #L233f72.  v0:= v19 @kind object;
  #L233f76.  v1:= v22 @kind object;
  #L233f7a.  v1.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` := v0 @kind object;
  #L233f7e.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L233f84.  v19:= temp @kind object;
  #L233f86.  v0:= v19 @kind object;
  #L233f8a.  v1:= v22 @kind object;
  #L233f8e.  v1.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` := v0 @kind object;
  #L233f92.  v17:= new `okhttp3.Headers$Builder`;
  #L233f96.  call `<init>`(v17) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L233f9c.  call temp:= `access$1000`(v14) @signature `Lokhttp3/Cache;.access$1000:(Lokio/BufferedSource;)I` @kind static;
  #L233fa2.  v18:= temp;
  #L233fa4.  v7:= 0I;
  #L233fa6.  v0:= v18;
  #L233faa.  if v7 >= v0 then goto L233fca;
  #L233fae.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L233fb4.  v19:= temp @kind object;
  #L233fb6.  v0:= v17 @kind object;
  #L233fba.  v1:= v19 @kind object;
  #L233fbe.  call temp:= `addLenient`(v0, v1) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L233fc4.  v7:= v7 + 1;
  #L233fc8.  goto L233fa6;
  #L233fca.  call temp:= `build`(v17) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L233fd0.  v19:= temp @kind object;
  #L233fd2.  v0:= v19 @kind object;
  #L233fd6.  v1:= v22 @kind object;
  #L233fda.  v1.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L233fde.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L233fe4.  v19:= temp @kind object;
  #L233fe6.  call temp:= `parse`(v19) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L233fec.  v15:= temp @kind object;
  #L233fee.  v0:= v15.`okhttp3.internal.http.StatusLine.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L233ff2.  v19:= v0 @kind object;
  #L233ff6.  v0:= v19 @kind object;
  #L233ffa.  v1:= v22 @kind object;
  #L233ffe.  v1.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L234002.  v0:= v15.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L234006.  v19:= v0;
  #L23400a.  v0:= v19;
  #L23400e.  v1:= v22 @kind object;
  #L234012.  v1.`okhttp3.Cache$Entry.code` @type ^`int` := v0;
  #L234016.  v0:= v15.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L23401a.  v19:= v0 @kind object;
  #L23401e.  v0:= v19 @kind object;
  #L234022.  v1:= v22 @kind object;
  #L234026.  v1.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` := v0 @kind object;
  #L23402a.  v12:= new `okhttp3.Headers$Builder`;
  #L23402e.  call `<init>`(v12) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L234034.  call temp:= `access$1000`(v14) @signature `Lokhttp3/Cache;.access$1000:(Lokio/BufferedSource;)I` @kind static;
  #L23403a.  v11:= temp;
  #L23403c.  v7:= 0I;
  #L23403e.  if v7 >= v11 then goto L23405a;
  #L234042.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L234048.  v19:= temp @kind object;
  #L23404a.  v0:= v19 @kind object;
  #L23404e.  call temp:= `addLenient`(v12, v0) @signature `Lokhttp3/Headers$Builder;.addLenient:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L234054.  v7:= v7 + 1;
  #L234058.  goto L23403e;
  #L23405a.  v19:= `@@okhttp3.internal.http.OkHeaders.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L23405e.  v0:= v19 @kind object;
  #L234062.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L234068.  v13:= temp @kind object;
  #L23406a.  v19:= `@@okhttp3.internal.http.OkHeaders.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L23406e.  v0:= v19 @kind object;
  #L234072.  call temp:= `get`(v12, v0) @signature `Lokhttp3/Headers$Builder;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L234078.  v10:= temp @kind object;
  #L23407a.  v19:= `@@okhttp3.internal.http.OkHeaders.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L23407e.  v0:= v19 @kind object;
  #L234082.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L234088.  v19:= `@@okhttp3.internal.http.OkHeaders.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L23408c.  v0:= v19 @kind object;
  #L234090.  call temp:= `removeAll`(v12, v0) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L234096.  if v13 == 0 then goto L234146;
  #L23409a.  call temp:= `parseLong`(v13) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2340a0.  v20:= temp @kind wide;
  #L2340a2.  v0:= v20 @kind wide;
  #L2340a6.  v2:= v22 @kind object;
  #L2340aa.  v2.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` := v0 @kind wide;
  #L2340ae.  if v10 == 0 then goto L23414c;
  #L2340b2.  call temp:= `parseLong`(v10) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L2340b8.  v20:= temp @kind wide;
  #L2340ba.  v0:= v20 @kind wide;
  #L2340be.  v2:= v22 @kind object;
  #L2340c2.  v2.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` := v0 @kind wide;
  #L2340c6.  call temp:= `build`(v12) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L2340cc.  v19:= temp @kind object;
  #L2340ce.  v0:= v19 @kind object;
  #L2340d2.  v1:= v22 @kind object;
  #L2340d6.  v1.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` := v0 @kind object;
  #L2340da.  call temp:= `isHttps`(v22) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L2340e0.  v19:= temp;
  #L2340e2.  if v19 == 0 then goto L2341bc;
  #L2340e6.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L2340ec.  v4:= temp @kind object;
  #L2340ee.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2340f4.  v19:= temp;
  #L2340f6.  if v19 <= 0 then goto L234152;
  #L2340fa.  v19:= new `java.io.IOException`;
  #L2340fe.  v20:= new `java.lang.StringBuilder`;
  #L234102.  call `<init>`(v20) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L234108.  v21:= "expected \"\" but was \"" @kind object;
  #L23410c.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L234112.  v20:= temp @kind object;
  #L234114.  v0:= v20 @kind object;
  #L234118.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23411e.  v20:= temp @kind object;
  #L234120.  v21:= "\"" @kind object;
  #L234124.  call temp:= `append`(v20, v21) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23412a.  v20:= temp @kind object;
  #L23412c.  call temp:= `toString`(v20) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L234132.  v20:= temp @kind object;
  #L234134.  call `<init>`(v19, v20) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23413a.  throw v19;
  #L23413c.  v19:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23413e.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L234144.  throw v19;
  #L234146.  v20:= 0L;
  #L23414a.  goto L2340a2;
  #L23414c.  v20:= 0L;
  #L234150.  goto L2340ba;
  #L234152.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L234158.  v6:= temp @kind object;
  #L23415a.  call temp:= `forJavaName`(v6) @signature `Lokhttp3/CipherSuite;.forJavaName:(Ljava/lang/String;)Lokhttp3/CipherSuite;` @kind static;
  #L234160.  v5:= temp @kind object;
  #L234162.  v0:= v22 @kind object;
  #L234166.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L23416c.  v9:= temp @kind object;
  #L23416e.  v0:= v22 @kind object;
  #L234172.  call temp:= `readCertificateList`(v0, v14) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @kind direct;
  #L234178.  v8:= temp @kind object;
  #L23417a.  call temp:= `exhausted`(v14) @signature `Lokio/BufferedSource;.exhausted:()Z` @kind interface;
  #L234180.  v19:= temp;
  #L234182.  if v19 != 0 then goto L2341b6;
  #L234186.  call temp:= `readUtf8LineStrict`(v14) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L23418c.  v19:= temp @kind object;
  #L23418e.  call temp:= `forJavaName`(v19) @signature `Lokhttp3/TlsVersion;.forJavaName:(Ljava/lang/String;)Lokhttp3/TlsVersion;` @kind static;
  #L234194.  v16:= temp @kind object;
  #L234196.  v0:= v16 @kind object;
  #L23419a.  call temp:= `get`(v0, v5, v9, v8) @signature `Lokhttp3/Handshake;.get:(Lokhttp3/TlsVersion;Lokhttp3/CipherSuite;Ljava/util/List;Ljava/util/List;)Lokhttp3/Handshake;` @kind static;
  #L2341a0.  v19:= temp @kind object;
  #L2341a2.  v0:= v19 @kind object;
  #L2341a6.  v1:= v22 @kind object;
  #L2341aa.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2341ae.  call `close`(v23) @signature `Lokio/Source;.close:()V` @kind interface;
  #L2341b4.  return @kind void;
  #L2341b6.  v16:= 0I;
  #L2341ba.  goto L234196;
  #L2341bc.  v19:= 0I;
  #L2341c0.  v0:= v19 @kind object;
  #L2341c4.  v1:= v22 @kind object;
  #L2341c8.  v1.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L2341cc.  goto L2341ae;
  catch `java.lang.Throwable` @[L233f62..L23413c] goto L23413c;
  catch `java.lang.Throwable` @[L234152..L2341ae] goto L23413c;
  catch `java.lang.Throwable` @[L2341c0..L2341cc] goto L23413c;
}
procedure `boolean` `isHttps`(`okhttp3.Cache$Entry` v2 @kind this) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2341fc.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L234200.  v1:= "https://" @kind object;
  #L234204.  call temp:= `startsWith`(v0, v1) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L23420a.  v0:= temp;
  #L23420c.  return v0;
}
procedure `java.util.List` `readCertificateList`(`okhttp3.Cache$Entry` v9 @kind this, `okio.BufferedSource` v10 @kind object @name `source`) @signature `Lokhttp3/Cache$Entry;.readCertificateList:(Lokio/BufferedSource;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L234220.  call temp:= `access$1000`(v10) @signature `Lokhttp3/Cache;.access$1000:(Lokio/BufferedSource;)I` @kind static;
  #L234226.  v4:= temp;
  #L234228.  v7:= -1I;
  #L23422a.  if v4 != v7 then goto L234238;
  #L23422e.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L234234.  v6:= temp @kind object;
  #L234236.  return v6 @kind object;
  #L234238.  v7:= "X.509" @kind object;
  #L23423c.  call temp:= `getInstance`(v7) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L234242.  v1:= temp @kind object;
  #L234244.  v6:= new `java.util.ArrayList`;
  #L234248.  call `<init>`(v6, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L23424e.  v3:= 0I;
  #L234250.  if v3 >= v4 then goto L234236;
  #L234254.  call temp:= `readUtf8LineStrict`(v10) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L23425a.  v5:= temp @kind object;
  #L23425c.  v0:= new `okio.Buffer`;
  #L234260.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L234266.  call temp:= `decodeBase64`(v5) @signature `Lokio/ByteString;.decodeBase64:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L23426c.  v7:= temp @kind object;
  #L23426e.  call temp:= `write`(v0, v7) @signature `Lokio/Buffer;.write:(Lokio/ByteString;)Lokio/Buffer;` @kind virtual;
  #L234274.  call temp:= `inputStream`(v0) @signature `Lokio/Buffer;.inputStream:()Ljava/io/InputStream;` @kind virtual;
  #L23427a.  v7:= temp @kind object;
  #L23427c.  call temp:= `generateCertificate`(v1, v7) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L234282.  v7:= temp @kind object;
  #L234284.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L23428a.  v3:= v3 + 1;
  #L23428e.  goto L234250;
  #L234290.  v2:= Exception @type ^`java.security.cert.CertificateException` @kind object;
  #L234292.  v7:= new `java.io.IOException`;
  #L234296.  call temp:= `getMessage`(v2) @signature `Ljava/security/cert/CertificateException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L23429c.  v8:= temp @kind object;
  #L23429e.  call `<init>`(v7, v8) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2342a4.  throw v7;
  catch `java.security.cert.CertificateException` @[L234238..L23428a] goto L234290;
}
procedure `void` `writeCertList`(`okhttp3.Cache$Entry` v8 @kind this, `okio.BufferedSink` v9 @kind object @name `sink`, `java.util.List` v10 @kind object) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2342c8.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2342ce.  v5:= temp;
  #L2342d0.  v6:= (`long`) v5 @kind i2l;
  #L2342d2.  call temp:= `writeDecimalLong`(v9, v6) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L2342d8.  v5:= temp @kind object;
  #L2342da.  v6:= 10I;
  #L2342de.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2342e4.  v2:= 0I;
  #L2342e6.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2342ec.  v4:= temp;
  #L2342ee.  if v2 >= v4 then goto L234344;
  #L2342f2.  call temp:= `get`(v10, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2342f8.  v5:= temp @kind object;
  #L2342fa.  v5:= (`java.security.cert.Certificate`) v5 @kind object;
  #L2342fe.  call temp:= `getEncoded`(v5) @signature `Ljava/security/cert/Certificate;.getEncoded:()[B` @kind virtual;
  #L234304.  v0:= temp @kind object;
  #L234306.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L23430c.  v5:= temp @kind object;
  #L23430e.  call temp:= `base64`(v5) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L234314.  v3:= temp @kind object;
  #L234316.  call temp:= `writeUtf8`(v9, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23431c.  v5:= temp @kind object;
  #L23431e.  v6:= 10I;
  #L234322.  call temp:= `writeByte`(v5, v6) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234328.  v2:= v2 + 1;
  #L23432c.  goto L2342ee;
  #L23432e.  v1:= Exception @type ^`java.security.cert.CertificateEncodingException` @kind object;
  #L234330.  v5:= new `java.io.IOException`;
  #L234334.  call temp:= `getMessage`(v1) @signature `Ljava/security/cert/CertificateEncodingException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L23433a.  v6:= temp @kind object;
  #L23433c.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L234342.  throw v5;
  #L234344.  return @kind void;
  catch `java.security.cert.CertificateEncodingException` @[L2342c8..L234328] goto L23432e;
}
procedure `boolean` `matches`(`okhttp3.Cache$Entry` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Response` v4 @kind object @name `response`) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234368.  v0:= v2.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L23436c.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L234372.  v1:= temp @kind object;
  #L234374.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L23437a.  v1:= temp @kind object;
  #L23437c.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L234382.  v0:= temp;
  #L234384.  if v0 == 0 then goto L2343b4;
  #L234388.  v0:= v2.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L23438c.  call temp:= `method`(v3) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L234392.  v1:= temp @kind object;
  #L234394.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23439a.  v0:= temp;
  #L23439c.  if v0 == 0 then goto L2343b4;
  #L2343a0.  v0:= v2.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2343a4.  call temp:= `varyMatches`(v4, v0, v3) @signature `Lokhttp3/internal/http/OkHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @kind static;
  #L2343aa.  v0:= temp;
  #L2343ac.  if v0 == 0 then goto L2343b4;
  #L2343b0.  v0:= 1I;
  #L2343b2.  return v0;
  #L2343b4.  v0:= 0I;
  #L2343b6.  goto L2343b2;
}
procedure `okhttp3.Response` `response`(`okhttp3.Cache$Entry` v6 @kind this, `okhttp3.internal.DiskLruCache$Snapshot` v7 @kind object @name `snapshot`) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/DiskLruCache$Snapshot;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2343c8.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2343cc.  v4:= "Content-Type" @kind object;
  #L2343d0.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2343d6.  v2:= temp @kind object;
  #L2343d8.  v3:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2343dc.  v4:= "Content-Length" @kind object;
  #L2343e0.  call temp:= `get`(v3, v4) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2343e6.  v1:= temp @kind object;
  #L2343e8.  v3:= new `okhttp3.Request$Builder`;
  #L2343ec.  call `<init>`(v3) @signature `Lokhttp3/Request$Builder;.<init>:()V` @kind direct;
  #L2343f2.  v4:= v6.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2343f6.  call temp:= `url`(v3, v4) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2343fc.  v3:= temp @kind object;
  #L2343fe.  v4:= v6.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L234402.  v5:= 0I;
  #L234404.  call temp:= `method`(v3, v4, v5) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23440a.  v3:= temp @kind object;
  #L23440c.  v4:= v6.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L234410.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @kind virtual;
  #L234416.  v3:= temp @kind object;
  #L234418.  call temp:= `build`(v3) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L23441e.  v0:= temp @kind object;
  #L234420.  v3:= new `okhttp3.Response$Builder`;
  #L234424.  call `<init>`(v3) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L23442a.  call temp:= `request`(v3, v0) @signature `Lokhttp3/Response$Builder;.request:(Lokhttp3/Request;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234430.  v3:= temp @kind object;
  #L234432.  v4:= v6.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L234436.  call temp:= `protocol`(v3, v4) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L23443c.  v3:= temp @kind object;
  #L23443e.  v4:= v6.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L234442.  call temp:= `code`(v3, v4) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L234448.  v3:= temp @kind object;
  #L23444a.  v4:= v6.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L23444e.  call temp:= `message`(v3, v4) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234454.  v3:= temp @kind object;
  #L234456.  v4:= v6.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L23445a.  call temp:= `headers`(v3, v4) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234460.  v3:= temp @kind object;
  #L234462.  v4:= new `okhttp3.Cache$CacheResponseBody`;
  #L234466.  call `<init>`(v4, v7, v2, v1) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L23446c.  call temp:= `body`(v3, v4) @signature `Lokhttp3/Response$Builder;.body:(Lokhttp3/ResponseBody;)Lokhttp3/Response$Builder;` @kind virtual;
  #L234472.  v3:= temp @kind object;
  #L234474.  v4:= v6.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L234478.  call temp:= `handshake`(v3, v4) @signature `Lokhttp3/Response$Builder;.handshake:(Lokhttp3/Handshake;)Lokhttp3/Response$Builder;` @kind virtual;
  #L23447e.  v3:= temp @kind object;
  #L234480.  v4:= v6.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L234484.  call temp:= `sentRequestAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.sentRequestAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L23448a.  v3:= temp @kind object;
  #L23448c.  v4:= v6.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L234490.  call temp:= `receivedResponseAtMillis`(v3, v4) @signature `Lokhttp3/Response$Builder;.receivedResponseAtMillis:(J)Lokhttp3/Response$Builder;` @kind virtual;
  #L234496.  v3:= temp @kind object;
  #L234498.  call temp:= `build`(v3) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L23449e.  v3:= temp @kind object;
  #L2344a0.  return v3 @kind object;
}
procedure `void` `writeTo`(`okhttp3.Cache$Entry` v8 @kind this, `okhttp3.internal.DiskLruCache$Editor` v9 @kind object @name `editor`) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/DiskLruCache$Editor;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2344b4.  v7:= 10I;
  #L2344b8.  v3:= 0I;
  #L2344ba.  call temp:= `newSink`(v9, v3) @signature `Lokhttp3/internal/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @kind virtual;
  #L2344c0.  v3:= temp @kind object;
  #L2344c2.  call temp:= `buffer`(v3) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L2344c8.  v1:= temp @kind object;
  #L2344ca.  v3:= v8.`okhttp3.Cache$Entry.url` @type ^`java.lang.String` @kind object;
  #L2344ce.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2344d4.  v3:= temp @kind object;
  #L2344d6.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2344dc.  v3:= v8.`okhttp3.Cache$Entry.requestMethod` @type ^`java.lang.String` @kind object;
  #L2344e0.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2344e6.  v3:= temp @kind object;
  #L2344e8.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2344ee.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2344f2.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2344f8.  v3:= temp;
  #L2344fa.  v4:= (`long`) v3 @kind i2l;
  #L2344fc.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L234502.  v3:= temp @kind object;
  #L234504.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L23450a.  v0:= 0I;
  #L23450c.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L234510.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L234516.  v2:= temp;
  #L234518.  if v0 >= v2 then goto L23455c;
  #L23451c.  v3:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L234520.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L234526.  v3:= temp @kind object;
  #L234528.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23452e.  v3:= temp @kind object;
  #L234530.  v4:= ": " @kind object;
  #L234534.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23453a.  v3:= temp @kind object;
  #L23453c.  v4:= v8.`okhttp3.Cache$Entry.varyHeaders` @type ^`okhttp3.Headers` @kind object;
  #L234540.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L234546.  v4:= temp @kind object;
  #L234548.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23454e.  v3:= temp @kind object;
  #L234550.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234556.  v0:= v0 + 1;
  #L23455a.  goto L234518;
  #L23455c.  v3:= new `okhttp3.internal.http.StatusLine`;
  #L234560.  v4:= v8.`okhttp3.Cache$Entry.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L234564.  v5:= v8.`okhttp3.Cache$Entry.code` @type ^`int`;
  #L234568.  v6:= v8.`okhttp3.Cache$Entry.message` @type ^`java.lang.String` @kind object;
  #L23456c.  call `<init>`(v3, v4, v5, v6) @signature `Lokhttp3/internal/http/StatusLine;.<init>:(Lokhttp3/Protocol;ILjava/lang/String;)V` @kind direct;
  #L234572.  call temp:= `toString`(v3) @signature `Lokhttp3/internal/http/StatusLine;.toString:()Ljava/lang/String;` @kind virtual;
  #L234578.  v3:= temp @kind object;
  #L23457a.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L234580.  v3:= temp @kind object;
  #L234582.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234588.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L23458c.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L234592.  v3:= temp;
  #L234594.  v3:= v3 + 2;
  #L234598.  v4:= (`long`) v3 @kind i2l;
  #L23459a.  call temp:= `writeDecimalLong`(v1, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L2345a0.  v3:= temp @kind object;
  #L2345a2.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2345a8.  v0:= 0I;
  #L2345aa.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2345ae.  call temp:= `size`(v3) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L2345b4.  v2:= temp;
  #L2345b6.  if v0 >= v2 then goto L2345fa;
  #L2345ba.  v3:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2345be.  call temp:= `name`(v3, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L2345c4.  v3:= temp @kind object;
  #L2345c6.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2345cc.  v3:= temp @kind object;
  #L2345ce.  v4:= ": " @kind object;
  #L2345d2.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2345d8.  v3:= temp @kind object;
  #L2345da.  v4:= v8.`okhttp3.Cache$Entry.responseHeaders` @type ^`okhttp3.Headers` @kind object;
  #L2345de.  call temp:= `value`(v4, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L2345e4.  v4:= temp @kind object;
  #L2345e6.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2345ec.  v3:= temp @kind object;
  #L2345ee.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2345f4.  v0:= v0 + 1;
  #L2345f8.  goto L2345b6;
  #L2345fa.  v3:= `@@okhttp3.internal.http.OkHeaders.SENT_MILLIS` @type ^`java.lang.String` @kind object;
  #L2345fe.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L234604.  v3:= temp @kind object;
  #L234606.  v4:= ": " @kind object;
  #L23460a.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L234610.  v3:= temp @kind object;
  #L234612.  v4:= v8.`okhttp3.Cache$Entry.sentRequestMillis` @type ^`long` @kind wide;
  #L234616.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L23461c.  v3:= temp @kind object;
  #L23461e.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234624.  v3:= `@@okhttp3.internal.http.OkHeaders.RECEIVED_MILLIS` @type ^`java.lang.String` @kind object;
  #L234628.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23462e.  v3:= temp @kind object;
  #L234630.  v4:= ": " @kind object;
  #L234634.  call temp:= `writeUtf8`(v3, v4) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23463a.  v3:= temp @kind object;
  #L23463c.  v4:= v8.`okhttp3.Cache$Entry.receivedResponseMillis` @type ^`long` @kind wide;
  #L234640.  call temp:= `writeDecimalLong`(v3, v4) @signature `Lokio/BufferedSink;.writeDecimalLong:(J)Lokio/BufferedSink;` @kind interface;
  #L234646.  v3:= temp @kind object;
  #L234648.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L23464e.  call temp:= `isHttps`(v8) @signature `Lokhttp3/Cache$Entry;.isHttps:()Z` @kind direct;
  #L234654.  v3:= temp;
  #L234656.  if v3 == 0 then goto L2346d8;
  #L23465a.  call temp:= `writeByte`(v1, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234660.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L234664.  call temp:= `cipherSuite`(v3) @signature `Lokhttp3/Handshake;.cipherSuite:()Lokhttp3/CipherSuite;` @kind virtual;
  #L23466a.  v3:= temp @kind object;
  #L23466c.  call temp:= `javaName`(v3) @signature `Lokhttp3/CipherSuite;.javaName:()Ljava/lang/String;` @kind virtual;
  #L234672.  v3:= temp @kind object;
  #L234674.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L23467a.  v3:= temp @kind object;
  #L23467c.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L234682.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L234686.  call temp:= `peerCertificates`(v3) @signature `Lokhttp3/Handshake;.peerCertificates:()Ljava/util/List;` @kind virtual;
  #L23468c.  v3:= temp @kind object;
  #L23468e.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L234694.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L234698.  call temp:= `localCertificates`(v3) @signature `Lokhttp3/Handshake;.localCertificates:()Ljava/util/List;` @kind virtual;
  #L23469e.  v3:= temp @kind object;
  #L2346a0.  call `writeCertList`(v8, v1, v3) @signature `Lokhttp3/Cache$Entry;.writeCertList:(Lokio/BufferedSink;Ljava/util/List;)V` @kind direct;
  #L2346a6.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2346aa.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L2346b0.  v3:= temp @kind object;
  #L2346b2.  if v3 == 0 then goto L2346d8;
  #L2346b6.  v3:= v8.`okhttp3.Cache$Entry.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L2346ba.  call temp:= `tlsVersion`(v3) @signature `Lokhttp3/Handshake;.tlsVersion:()Lokhttp3/TlsVersion;` @kind virtual;
  #L2346c0.  v3:= temp @kind object;
  #L2346c2.  call temp:= `javaName`(v3) @signature `Lokhttp3/TlsVersion;.javaName:()Ljava/lang/String;` @kind virtual;
  #L2346c8.  v3:= temp @kind object;
  #L2346ca.  call temp:= `writeUtf8`(v1, v3) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L2346d0.  v3:= temp @kind object;
  #L2346d2.  call temp:= `writeByte`(v3, v7) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L2346d8.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L2346de.  return @kind void;
}
