record `okhttp3.Cache$2` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `boolean` `okhttp3.Cache$2.canRemove` @AccessFlag ;
  `java.util.Iterator` `okhttp3.Cache$2.delegate` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.Cache$2.nextUrl` @AccessFlag ;
  `okhttp3.Cache` `okhttp3.Cache$2.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$2` v1 @kind this, `okhttp3.Cache` v2 @kind object @name `this$0`) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L233d64.  v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` := v2 @kind object;
  #L233d68.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L233d6e.  v0:= v1.`okhttp3.Cache$2.this$0` @type ^`okhttp3.Cache` @kind object;
  #L233d72.  call temp:= `access$600`(v0) @signature `Lokhttp3/Cache;.access$600:(Lokhttp3/Cache;)Lokhttp3/internal/DiskLruCache;` @kind static;
  #L233d78.  v0:= temp @kind object;
  #L233d7a.  call temp:= `snapshots`(v0) @signature `Lokhttp3/internal/DiskLruCache;.snapshots:()Ljava/util/Iterator;` @kind virtual;
  #L233d80.  v0:= temp @kind object;
  #L233d82.  v1.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L233d86.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.Cache$2` v5 @kind this) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L233d98.  v2:= 1I;
  #L233d9a.  v3:= 0I;
  #L233d9c.  v4:= v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L233da0.  if v4 == 0 then goto L233da6;
  #L233da4.  return v2;
  #L233da6.  v5.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v3 @kind boolean;
  #L233daa.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L233dae.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L233db4.  v4:= temp;
  #L233db6.  if v4 == 0 then goto L233e04;
  #L233dba.  v4:= v5.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L233dbe.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L233dc4.  v1:= temp @kind object;
  #L233dc6.  v1:= (`okhttp3.internal.DiskLruCache$Snapshot`) v1 @kind object;
  #L233dca.  v4:= 0I;
  #L233dcc.  call temp:= `getSource`(v1, v4) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L233dd2.  v4:= temp @kind object;
  #L233dd4.  call temp:= `buffer`(v4) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L233dda.  v0:= temp @kind object;
  #L233ddc.  call temp:= `readUtf8LineStrict`(v0) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L233de2.  v4:= temp @kind object;
  #L233de4.  v5.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v4 @kind object;
  #L233de8.  call `close`(v1) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L233dee.  goto L233da4;
  #L233df0.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L233df2.  call `close`(v1) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L233df8.  goto L233daa;
  #L233dfa.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L233dfc.  call `close`(v1) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.close:()V` @kind virtual;
  #L233e02.  throw v2;
  #L233e04.  v2:= v3;
  #L233e06.  goto L233da4;
  catch `java.io.IOException` @[L233dcc..L233de8] goto L233df0;
  catch `java.lang.Throwable` @[L233dcc..L233de8] goto L233dfa;
}
procedure `java.lang.Object` `next`(`okhttp3.Cache$2` v1 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L233e28.  call temp:= `next`(v1) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @kind virtual;
  #L233e2e.  v0:= temp @kind object;
  #L233e30.  return v0 @kind object;
}
procedure `java.lang.String` `next`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.next:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L233e44.  call temp:= `hasNext`(v2) @signature `Lokhttp3/Cache$2;.hasNext:()Z` @kind virtual;
  #L233e4a.  v1:= temp;
  #L233e4c.  if v1 != 0 then goto L233e5c;
  #L233e50.  v1:= new `java.util.NoSuchElementException`;
  #L233e54.  call `<init>`(v1) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L233e5a.  throw v1;
  #L233e5c.  v0:= v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` @kind object;
  #L233e60.  v1:= 0I;
  #L233e62.  v2.`okhttp3.Cache$2.nextUrl` @type ^`java.lang.String` := v1 @kind object;
  #L233e66.  v1:= 1I;
  #L233e68.  v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` := v1 @kind boolean;
  #L233e6c.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.Cache$2` v2 @kind this) @signature `Lokhttp3/Cache$2;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L233e80.  v0:= v2.`okhttp3.Cache$2.canRemove` @type ^`boolean` @kind boolean;
  #L233e84.  if v0 != 0 then goto L233e98;
  #L233e88.  v0:= new `java.lang.IllegalStateException`;
  #L233e8c.  v1:= "remove() before next()" @kind object;
  #L233e90.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L233e96.  throw v0;
  #L233e98.  v0:= v2.`okhttp3.Cache$2.delegate` @type ^`java.util.Iterator` @kind object;
  #L233e9c.  call `remove`(v0) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L233ea2.  return @kind void;
}
