record `okhttp3.MultipartBody$Part` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.MultipartBody$Part.body` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.MultipartBody$Part.headers` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.MultipartBody$Part` v0 @kind this, `okhttp3.Headers` v1 @kind object @name `headers`, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L23d574.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23d57a.  v0.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` := v1 @kind object;
  #L23d57e.  v0.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` := v2 @kind object;
  #L23d582.  return @kind void;
}
procedure `okhttp3.Headers` `access$000`(`okhttp3.MultipartBody$Part` v1 @kind object @name `x0`) @signature `Lokhttp3/MultipartBody$Part;.access$000:(Lokhttp3/MultipartBody$Part;)Lokhttp3/Headers;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23d594.  v0:= v1.`okhttp3.MultipartBody$Part.headers` @type ^`okhttp3.Headers` @kind object;
  #L23d598.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `access$100`(`okhttp3.MultipartBody$Part` v1 @kind object @name `x0`) @signature `Lokhttp3/MultipartBody$Part;.access$100:(Lokhttp3/MultipartBody$Part;)Lokhttp3/RequestBody;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23d5ac.  v0:= v1.`okhttp3.MultipartBody$Part.body` @type ^`okhttp3.RequestBody` @kind object;
  #L23d5b0.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.Headers` v2 @kind object @name `headers`, `okhttp3.RequestBody` v3 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L23d5c4.  if v3 != 0 then goto L23d5d8;
  #L23d5c8.  v0:= new `java.lang.NullPointerException`;
  #L23d5cc.  v1:= "body == null" @kind object;
  #L23d5d0.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d5d6.  throw v0;
  #L23d5d8.  if v2 == 0 then goto L23d5fc;
  #L23d5dc.  v0:= "Content-Type" @kind object;
  #L23d5e0.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23d5e6.  v0:= temp @kind object;
  #L23d5e8.  if v0 == 0 then goto L23d5fc;
  #L23d5ec.  v0:= new `java.lang.IllegalArgumentException`;
  #L23d5f0.  v1:= "Unexpected header: Content-Type" @kind object;
  #L23d5f4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d5fa.  throw v0;
  #L23d5fc.  if v2 == 0 then goto L23d620;
  #L23d600.  v0:= "Content-Length" @kind object;
  #L23d604.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23d60a.  v0:= temp @kind object;
  #L23d60c.  if v0 == 0 then goto L23d620;
  #L23d610.  v0:= new `java.lang.IllegalArgumentException`;
  #L23d614.  v1:= "Unexpected header: Content-Length" @kind object;
  #L23d618.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d61e.  throw v0;
  #L23d620.  v0:= new `okhttp3.MultipartBody$Part`;
  #L23d624.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/MultipartBody$Part;.<init>:(Lokhttp3/Headers;Lokhttp3/RequestBody;)V` @kind direct;
  #L23d62a.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `create`(`okhttp3.RequestBody` v1 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L23d63c.  v0:= 0I;
  #L23d63e.  call temp:= `create`(v0, v1) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L23d644.  v0:= temp @kind object;
  #L23d646.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L23d658.  v1:= 0I;
  #L23d65a.  call temp:= `create`(v1, v3) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/RequestBody;` @kind static;
  #L23d660.  v0:= temp @kind object;
  #L23d662.  call temp:= `createFormData`(v2, v1, v0) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L23d668.  v0:= temp @kind object;
  #L23d66a.  return v0 @kind object;
}
procedure `okhttp3.MultipartBody$Part` `createFormData`(`java.lang.String` v4 @kind object @name `name`, `java.lang.String` v5 @kind object @name `filename`, `okhttp3.RequestBody` v6 @kind object @name `body`) @signature `Lokhttp3/MultipartBody$Part;.createFormData:(Ljava/lang/String;Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23d67c.  if v4 != 0 then goto L23d690;
  #L23d680.  v1:= new `java.lang.NullPointerException`;
  #L23d684.  v2:= "name == null" @kind object;
  #L23d688.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d68e.  throw v1;
  #L23d690.  v0:= new `java.lang.StringBuilder`;
  #L23d694.  v1:= "form-data; name=" @kind object;
  #L23d698.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23d69e.  call temp:= `appendQuotedString`(v0, v4) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L23d6a4.  if v5 == 0 then goto L23d6b8;
  #L23d6a8.  v1:= "; filename=" @kind object;
  #L23d6ac.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23d6b2.  call temp:= `appendQuotedString`(v0, v5) @signature `Lokhttp3/MultipartBody;.appendQuotedString:(Ljava/lang/StringBuilder;Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind static;
  #L23d6b8.  v1:= 2I;
  #L23d6ba.  v1:= new `java.lang.String`[v1];
  #L23d6be.  v2:= 0I;
  #L23d6c0.  v3:= "Content-Disposition" @kind object;
  #L23d6c4.  v1[v2]:= v3 @kind object;
  #L23d6c8.  v2:= 1I;
  #L23d6ca.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23d6d0.  v3:= temp @kind object;
  #L23d6d2.  v1[v2]:= v3 @kind object;
  #L23d6d6.  call temp:= `of`(v1) @signature `Lokhttp3/Headers;.of:([Ljava/lang/String;)Lokhttp3/Headers;` @kind static;
  #L23d6dc.  v1:= temp @kind object;
  #L23d6de.  call temp:= `create`(v1, v6) @signature `Lokhttp3/MultipartBody$Part;.create:(Lokhttp3/Headers;Lokhttp3/RequestBody;)Lokhttp3/MultipartBody$Part;` @kind static;
  #L23d6e4.  v1:= temp @kind object;
  #L23d6e6.  return v1 @kind object;
}
