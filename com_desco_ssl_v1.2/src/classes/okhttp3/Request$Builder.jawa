record `okhttp3.Request$Builder` @kind class @AccessFlag PUBLIC {
  `okhttp3.RequestBody` `okhttp3.Request$Builder.body` @AccessFlag PRIVATE;
  `okhttp3.Headers$Builder` `okhttp3.Request$Builder.headers` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.Request$Builder.method` @AccessFlag PRIVATE;
  `java.lang.Object` `okhttp3.Request$Builder.tag` @AccessFlag PRIVATE;
  `okhttp3.HttpUrl` `okhttp3.Request$Builder.url` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this) @signature `Lokhttp3/Request$Builder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L23e0dc.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23e0e2.  v0:= "GET" @kind object;
  #L23e0e6.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L23e0ea.  v0:= new `okhttp3.Headers$Builder`;
  #L23e0ee.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L23e0f4.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L23e0f8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23e10c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23e112.  call temp:= `access$600`(v2) @signature `Lokhttp3/Request;.access$600:(Lokhttp3/Request;)Lokhttp3/HttpUrl;` @kind static;
  #L23e118.  v0:= temp @kind object;
  #L23e11a.  v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L23e11e.  call temp:= `access$700`(v2) @signature `Lokhttp3/Request;.access$700:(Lokhttp3/Request;)Ljava/lang/String;` @kind static;
  #L23e124.  v0:= temp @kind object;
  #L23e126.  v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v0 @kind object;
  #L23e12a.  call temp:= `access$800`(v2) @signature `Lokhttp3/Request;.access$800:(Lokhttp3/Request;)Lokhttp3/RequestBody;` @kind static;
  #L23e130.  v0:= temp @kind object;
  #L23e132.  v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L23e136.  call temp:= `access$900`(v2) @signature `Lokhttp3/Request;.access$900:(Lokhttp3/Request;)Ljava/lang/Object;` @kind static;
  #L23e13c.  v0:= temp @kind object;
  #L23e13e.  v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L23e142.  call temp:= `access$1000`(v2) @signature `Lokhttp3/Request;.access$1000:(Lokhttp3/Request;)Lokhttp3/Headers;` @kind static;
  #L23e148.  v0:= temp @kind object;
  #L23e14a.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L23e150.  v0:= temp @kind object;
  #L23e152.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L23e156.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Request$Builder` v0 @kind this, `okhttp3.Request` v1 @kind object @name `x0`, `okhttp3.Request$1` v2 @kind object @name `x1`) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;Lokhttp3/Request$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23e168.  call `<init>`(v0, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;)V` @kind direct;
  #L23e16e.  return @kind void;
}
procedure `okhttp3.HttpUrl` `access$000`(`okhttp3.Request$Builder` v1 @kind object @name `x0`) @signature `Lokhttp3/Request$Builder;.access$000:(Lokhttp3/Request$Builder;)Lokhttp3/HttpUrl;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e180.  v0:= v1.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e184.  return v0 @kind object;
}
procedure `java.lang.String` `access$100`(`okhttp3.Request$Builder` v1 @kind object @name `x0`) @signature `Lokhttp3/Request$Builder;.access$100:(Lokhttp3/Request$Builder;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e198.  v0:= v1.`okhttp3.Request$Builder.method` @type ^`java.lang.String` @kind object;
  #L23e19c.  return v0 @kind object;
}
procedure `okhttp3.Headers$Builder` `access$200`(`okhttp3.Request$Builder` v1 @kind object @name `x0`) @signature `Lokhttp3/Request$Builder;.access$200:(Lokhttp3/Request$Builder;)Lokhttp3/Headers$Builder;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e1b0.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L23e1b4.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `access$300`(`okhttp3.Request$Builder` v1 @kind object @name `x0`) @signature `Lokhttp3/Request$Builder;.access$300:(Lokhttp3/Request$Builder;)Lokhttp3/RequestBody;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e1c8.  v0:= v1.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` @kind object;
  #L23e1cc.  return v0 @kind object;
}
procedure `java.lang.Object` `access$400`(`okhttp3.Request$Builder` v1 @kind object @name `x0`) @signature `Lokhttp3/Request$Builder;.access$400:(Lokhttp3/Request$Builder;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e1e0.  v0:= v1.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` @kind object;
  #L23e1e4.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `addHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e1f8.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L23e1fc.  call temp:= `add`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L23e202.  return v1 @kind object;
}
procedure `okhttp3.Request` `build`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e214.  v0:= v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e218.  if v0 != 0 then goto L23e22c;
  #L23e21c.  v0:= new `java.lang.IllegalStateException`;
  #L23e220.  v1:= "url == null" @kind object;
  #L23e224.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e22a.  throw v0;
  #L23e22c.  v0:= new `okhttp3.Request`;
  #L23e230.  v1:= 0I;
  #L23e232.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;Lokhttp3/Request$1;)V` @kind direct;
  #L23e238.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `cacheControl`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.CacheControl` v3 @kind object @name `cacheControl`) @signature `Lokhttp3/Request$Builder;.cacheControl:(Lokhttp3/CacheControl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e24c.  call temp:= `toString`(v3) @signature `Lokhttp3/CacheControl;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e252.  v0:= temp @kind object;
  #L23e254.  call temp:= `isEmpty`(v0) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L23e25a.  v1:= temp;
  #L23e25c.  if v1 == 0 then goto L23e26e;
  #L23e260.  v1:= "Cache-Control" @kind object;
  #L23e264.  call temp:= `removeHeader`(v2, v1) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e26a.  v1:= temp @kind object;
  #L23e26c.  return v1 @kind object;
  #L23e26e.  v1:= "Cache-Control" @kind object;
  #L23e272.  call temp:= `header`(v2, v1, v0) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e278.  v1:= temp @kind object;
  #L23e27a.  goto L23e26c;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.delete:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e28c.  v0:= 0I;
  #L23e28e.  v1:= 0I;
  #L23e290.  v1:= new `byte`[v1];
  #L23e294.  call temp:= `create`(v0, v1) @signature `Lokhttp3/RequestBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/RequestBody;` @kind static;
  #L23e29a.  v0:= temp @kind object;
  #L23e29c.  call temp:= `delete`(v2, v0) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e2a2.  v0:= temp @kind object;
  #L23e2a4.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `delete`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.delete:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e2b8.  v0:= "DELETE" @kind object;
  #L23e2bc.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e2c2.  v0:= temp @kind object;
  #L23e2c4.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `get`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.get:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e2d8.  v0:= "GET" @kind object;
  #L23e2dc.  v1:= 0I;
  #L23e2de.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e2e4.  v0:= temp @kind object;
  #L23e2e6.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `head`(`okhttp3.Request$Builder` v2 @kind this) @signature `Lokhttp3/Request$Builder;.head:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e2f8.  v0:= "HEAD" @kind object;
  #L23e2fc.  v1:= 0I;
  #L23e2fe.  call temp:= `method`(v2, v0, v1) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e304.  v0:= temp @kind object;
  #L23e306.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `header`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`, `java.lang.String` v3 @kind object @name `value`) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e318.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L23e31c.  call temp:= `set`(v0, v2, v3) @signature `Lokhttp3/Headers$Builder;.set:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L23e322.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `headers`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.Headers` v2 @kind object @name `headers`) @signature `Lokhttp3/Request$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e334.  call temp:= `newBuilder`(v2) @signature `Lokhttp3/Headers;.newBuilder:()Lokhttp3/Headers$Builder;` @kind virtual;
  #L23e33a.  v0:= temp @kind object;
  #L23e33c.  v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` := v0 @kind object;
  #L23e340.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `method`(`okhttp3.Request$Builder` v3 @kind this, `java.lang.String` v4 @kind object @name `method`, `okhttp3.RequestBody` v5 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23e354.  if v4 != 0 then goto L23e368;
  #L23e358.  v0:= new `java.lang.NullPointerException`;
  #L23e35c.  v1:= "method == null" @kind object;
  #L23e360.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e366.  throw v0;
  #L23e368.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L23e36e.  v0:= temp;
  #L23e370.  if v0 != 0 then goto L23e384;
  #L23e374.  v0:= new `java.lang.IllegalArgumentException`;
  #L23e378.  v1:= "method.length() == 0" @kind object;
  #L23e37c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e382.  throw v0;
  #L23e384.  if v5 == 0 then goto L23e3d2;
  #L23e388.  call temp:= `permitsRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L23e38e.  v0:= temp;
  #L23e390.  if v0 != 0 then goto L23e3d2;
  #L23e394.  v0:= new `java.lang.IllegalArgumentException`;
  #L23e398.  v1:= new `java.lang.StringBuilder`;
  #L23e39c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e3a2.  v2:= "method " @kind object;
  #L23e3a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e3ac.  v1:= temp @kind object;
  #L23e3ae.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e3b4.  v1:= temp @kind object;
  #L23e3b6.  v2:= " must not have a request body." @kind object;
  #L23e3ba.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e3c0.  v1:= temp @kind object;
  #L23e3c2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e3c8.  v1:= temp @kind object;
  #L23e3ca.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e3d0.  throw v0;
  #L23e3d2.  if v5 != 0 then goto L23e420;
  #L23e3d6.  call temp:= `requiresRequestBody`(v4) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L23e3dc.  v0:= temp;
  #L23e3de.  if v0 == 0 then goto L23e420;
  #L23e3e2.  v0:= new `java.lang.IllegalArgumentException`;
  #L23e3e6.  v1:= new `java.lang.StringBuilder`;
  #L23e3ea.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e3f0.  v2:= "method " @kind object;
  #L23e3f4.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e3fa.  v1:= temp @kind object;
  #L23e3fc.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e402.  v1:= temp @kind object;
  #L23e404.  v2:= " must have a request body." @kind object;
  #L23e408.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e40e.  v1:= temp @kind object;
  #L23e410.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e416.  v1:= temp @kind object;
  #L23e418.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e41e.  throw v0;
  #L23e420.  v3.`okhttp3.Request$Builder.method` @type ^`java.lang.String` := v4 @kind object;
  #L23e424.  v3.`okhttp3.Request$Builder.body` @type ^`okhttp3.RequestBody` := v5 @kind object;
  #L23e428.  return v3 @kind object;
}
procedure `okhttp3.Request$Builder` `patch`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.patch:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e43c.  v0:= "PATCH" @kind object;
  #L23e440.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e446.  v0:= temp @kind object;
  #L23e448.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `post`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.post:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e45c.  v0:= "POST" @kind object;
  #L23e460.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e466.  v0:= temp @kind object;
  #L23e468.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `put`(`okhttp3.Request$Builder` v1 @kind this, `okhttp3.RequestBody` v2 @kind object @name `body`) @signature `Lokhttp3/Request$Builder;.put:(Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e47c.  v0:= "PUT" @kind object;
  #L23e480.  call temp:= `method`(v1, v0, v2) @signature `Lokhttp3/Request$Builder;.method:(Ljava/lang/String;Lokhttp3/RequestBody;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e486.  v0:= temp @kind object;
  #L23e488.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `removeHeader`(`okhttp3.Request$Builder` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request$Builder;.removeHeader:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e49c.  v0:= v1.`okhttp3.Request$Builder.headers` @type ^`okhttp3.Headers$Builder` @kind object;
  #L23e4a0.  call temp:= `removeAll`(v0, v2) @signature `Lokhttp3/Headers$Builder;.removeAll:(Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L23e4a6.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `tag`(`okhttp3.Request$Builder` v0 @kind this, `java.lang.Object` v1 @kind object @name `tag`) @signature `Lokhttp3/Request$Builder;.tag:(Ljava/lang/Object;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;

  #L23e4b8.  v0.`okhttp3.Request$Builder.tag` @type ^`java.lang.Object` := v1 @kind object;
  #L23e4bc.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v8 @kind this, `java.lang.String` v9 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/lang/String;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L23e4d0.  v7:= 4I;
  #L23e4d2.  v5:= 3I;
  #L23e4d4.  v1:= 1I;
  #L23e4d6.  v2:= 0I;
  #L23e4d8.  if v9 != 0 then goto L23e4ec;
  #L23e4dc.  v0:= new `java.lang.NullPointerException`;
  #L23e4e0.  v1:= "url == null" @kind object;
  #L23e4e4.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e4ea.  throw v0;
  #L23e4ec.  v3:= "ws:" @kind object;
  #L23e4f0.  v0:= v9 @kind object;
  #L23e4f2.  v4:= v2;
  #L23e4f4.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L23e4fa.  v0:= temp;
  #L23e4fc.  if v0 == 0 then goto L23e56c;
  #L23e500.  v0:= new `java.lang.StringBuilder`;
  #L23e504.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e50a.  v1:= "http:" @kind object;
  #L23e50e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e514.  v0:= temp @kind object;
  #L23e516.  call temp:= `substring`(v9, v5) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L23e51c.  v1:= temp @kind object;
  #L23e51e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e524.  v0:= temp @kind object;
  #L23e526.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e52c.  v9:= temp @kind object;
  #L23e52e.  call temp:= `parse`(v9) @signature `Lokhttp3/HttpUrl;.parse:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @kind static;
  #L23e534.  v6:= temp @kind object;
  #L23e536.  if v6 != 0 then goto L23e5b2;
  #L23e53a.  v0:= new `java.lang.IllegalArgumentException`;
  #L23e53e.  v1:= new `java.lang.StringBuilder`;
  #L23e542.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e548.  v2:= "unexpected url: " @kind object;
  #L23e54c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e552.  v1:= temp @kind object;
  #L23e554.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e55a.  v1:= temp @kind object;
  #L23e55c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e562.  v1:= temp @kind object;
  #L23e564.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e56a.  throw v0;
  #L23e56c.  v3:= "wss:" @kind object;
  #L23e570.  v0:= v9 @kind object;
  #L23e572.  v4:= v2;
  #L23e574.  v5:= v7;
  #L23e576.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L23e57c.  v0:= temp;
  #L23e57e.  if v0 == 0 then goto L23e52e;
  #L23e582.  v0:= new `java.lang.StringBuilder`;
  #L23e586.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e58c.  v1:= "https:" @kind object;
  #L23e590.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e596.  v0:= temp @kind object;
  #L23e598.  call temp:= `substring`(v9, v7) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L23e59e.  v1:= temp @kind object;
  #L23e5a0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e5a6.  v0:= temp @kind object;
  #L23e5a8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e5ae.  v9:= temp @kind object;
  #L23e5b0.  goto L23e52e;
  #L23e5b2.  call temp:= `url`(v8, v6) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e5b8.  v0:= temp @kind object;
  #L23e5ba.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v4 @kind this, `java.net.URL` v5 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Ljava/net/URL;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23e5cc.  if v5 != 0 then goto L23e5e0;
  #L23e5d0.  v1:= new `java.lang.NullPointerException`;
  #L23e5d4.  v2:= "url == null" @kind object;
  #L23e5d8.  call `<init>`(v1, v2) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e5de.  throw v1;
  #L23e5e0.  call temp:= `get`(v5) @signature `Lokhttp3/HttpUrl;.get:(Ljava/net/URL;)Lokhttp3/HttpUrl;` @kind static;
  #L23e5e6.  v0:= temp @kind object;
  #L23e5e8.  if v0 != 0 then goto L23e61e;
  #L23e5ec.  v1:= new `java.lang.IllegalArgumentException`;
  #L23e5f0.  v2:= new `java.lang.StringBuilder`;
  #L23e5f4.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e5fa.  v3:= "unexpected url: " @kind object;
  #L23e5fe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e604.  v2:= temp @kind object;
  #L23e606.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e60c.  v2:= temp @kind object;
  #L23e60e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e614.  v2:= temp @kind object;
  #L23e616.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e61c.  throw v1;
  #L23e61e.  call temp:= `url`(v4, v0) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @kind virtual;
  #L23e624.  v1:= temp @kind object;
  #L23e626.  return v1 @kind object;
}
procedure `okhttp3.Request$Builder` `url`(`okhttp3.Request$Builder` v2 @kind this, `okhttp3.HttpUrl` v3 @kind object @name `url`) @signature `Lokhttp3/Request$Builder;.url:(Lokhttp3/HttpUrl;)Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e638.  if v3 != 0 then goto L23e64c;
  #L23e63c.  v0:= new `java.lang.NullPointerException`;
  #L23e640.  v1:= "url == null" @kind object;
  #L23e644.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23e64a.  throw v0;
  #L23e64c.  v2.`okhttp3.Request$Builder.url` @type ^`okhttp3.HttpUrl` := v3 @kind object;
  #L23e650.  return v2 @kind object;
}
