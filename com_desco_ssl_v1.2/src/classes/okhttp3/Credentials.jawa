record `okhttp3.Credentials` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.Credentials` v0 @kind this) @signature `Lokhttp3/Credentials;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L239268.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23926e.  return @kind void;
}
procedure `java.lang.String` `basic`(`java.lang.String` v6 @kind object @name `userName`, `java.lang.String` v7 @kind object @name `password`) @signature `Lokhttp3/Credentials;.basic:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L239280.  v4:= new `java.lang.StringBuilder`;
  #L239284.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23928a.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L239290.  v4:= temp @kind object;
  #L239292.  v5:= ":" @kind object;
  #L239296.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23929c.  v4:= temp @kind object;
  #L23929e.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2392a4.  v4:= temp @kind object;
  #L2392a6.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2392ac.  v3:= temp @kind object;
  #L2392ae.  v4:= "ISO-8859-1" @kind object;
  #L2392b2.  call temp:= `getBytes`(v3, v4) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2392b8.  v0:= temp @kind object;
  #L2392ba.  call temp:= `of`(v0) @signature `Lokio/ByteString;.of:([B)Lokio/ByteString;` @kind static;
  #L2392c0.  v4:= temp @kind object;
  #L2392c2.  call temp:= `base64`(v4) @signature `Lokio/ByteString;.base64:()Ljava/lang/String;` @kind virtual;
  #L2392c8.  v2:= temp @kind object;
  #L2392ca.  v4:= new `java.lang.StringBuilder`;
  #L2392ce.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2392d4.  v5:= "Basic " @kind object;
  #L2392d8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2392de.  v4:= temp @kind object;
  #L2392e0.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2392e6.  v4:= temp @kind object;
  #L2392e8.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2392ee.  v4:= temp @kind object;
  #L2392f0.  return v4 @kind object;
  #L2392f2.  v1:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L2392f4.  v4:= new `java.lang.AssertionError`;
  #L2392f8.  call `<init>`(v4) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L2392fe.  throw v4;
  catch `java.io.UnsupportedEncodingException` @[L239280..L2392ee] goto L2392f2;
}
