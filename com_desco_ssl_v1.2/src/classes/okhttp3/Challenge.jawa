record `okhttp3.Challenge` @kind class @AccessFlag PUBLIC_FINAL {
  `java.lang.String` `okhttp3.Challenge.realm` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Challenge.scheme` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Challenge` v0 @kind this, `java.lang.String` v1 @kind object @name `scheme`, `java.lang.String` v2 @kind object @name `realm`) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L235db8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L235dbe.  v0.`okhttp3.Challenge.scheme` @type ^`java.lang.String` := v1 @kind object;
  #L235dc2.  v0.`okhttp3.Challenge.realm` @type ^`java.lang.String` := v2 @kind object;
  #L235dc6.  return @kind void;
}
procedure `boolean` `equals`(`okhttp3.Challenge` v2 @kind this, `java.lang.Object` v3 @kind object @name `o`) @signature `Lokhttp3/Challenge;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235dd8.  v0:= instanceof @variable v3 @type ^`okhttp3.Challenge` @kind boolean;
  #L235ddc.  if v0 == 0 then goto L235e16;
  #L235de0.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235de4.  v0:= v3 @kind object;
  #L235de6.  v0:= (`okhttp3.Challenge`) v0 @kind object;
  #L235dea.  v0:= v0.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235dee.  call temp:= `equal`(v1, v0) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L235df4.  v0:= temp;
  #L235df6.  if v0 == 0 then goto L235e16;
  #L235dfa.  v0:= v2.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235dfe.  v3:= (`okhttp3.Challenge`) v3 @kind object;
  #L235e02.  v1:= v3.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235e06.  call temp:= `equal`(v0, v1) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L235e0c.  v0:= temp;
  #L235e0e.  if v0 == 0 then goto L235e16;
  #L235e12.  v0:= 1I;
  #L235e14.  return v0;
  #L235e16.  v0:= 0I;
  #L235e18.  goto L235e14;
}
procedure `int` `hashCode`(`okhttp3.Challenge` v4 @kind this) @signature `Lokhttp3/Challenge;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L235e2c.  v2:= 0I;
  #L235e2e.  v0:= 29I;
  #L235e32.  v1:= v4.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235e36.  if v1 == 0 then goto L235e68;
  #L235e3a.  v1:= v4.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235e3e.  call temp:= `hashCode`(v1) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L235e44.  v1:= temp;
  #L235e46.  v0:= v1 + 899;
  #L235e4a.  v1:= v0 * 31;
  #L235e4e.  v3:= v4.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235e52.  if v3 == 0 then goto L235e62;
  #L235e56.  v2:= v4.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235e5a.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L235e60.  v2:= temp;
  #L235e62.  v0:= v1 + v2 @kind int;
  #L235e66.  return v0;
  #L235e68.  v1:= v2;
  #L235e6a.  goto L235e46;
}
procedure `java.lang.String` `realm`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.realm:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L235e7c.  v0:= v1.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235e80.  return v0 @kind object;
}
procedure `java.lang.String` `scheme`(`okhttp3.Challenge` v1 @kind this) @signature `Lokhttp3/Challenge;.scheme:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L235e94.  v0:= v1.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235e98.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Challenge` v2 @kind this) @signature `Lokhttp3/Challenge;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L235eac.  v0:= new `java.lang.StringBuilder`;
  #L235eb0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L235eb6.  v1:= v2.`okhttp3.Challenge.scheme` @type ^`java.lang.String` @kind object;
  #L235eba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235ec0.  v0:= temp @kind object;
  #L235ec2.  v1:= " realm=\"" @kind object;
  #L235ec6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235ecc.  v0:= temp @kind object;
  #L235ece.  v1:= v2.`okhttp3.Challenge.realm` @type ^`java.lang.String` @kind object;
  #L235ed2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235ed8.  v0:= temp @kind object;
  #L235eda.  v1:= "\"" @kind object;
  #L235ede.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L235ee4.  v0:= temp @kind object;
  #L235ee6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L235eec.  v0:= temp @kind object;
  #L235eee.  return v0 @kind object;
}
