record `okhttp3.Route` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.Address` `okhttp3.Route.address` @AccessFlag FINAL;
  `java.net.InetSocketAddress` `okhttp3.Route.inetSocketAddress` @AccessFlag FINAL;
  `java.net.Proxy` `okhttp3.Route.proxy` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.Route` v2 @kind this, `okhttp3.Address` v3 @kind object @name `address`, `java.net.Proxy` v4 @kind object @name `proxy`, `java.net.InetSocketAddress` v5 @kind object @name `inetSocketAddress`) @signature `Lokhttp3/Route;.<init>:(Lokhttp3/Address;Ljava/net/Proxy;Ljava/net/InetSocketAddress;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23f80c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f812.  if v3 != 0 then goto L23f826;
  #L23f816.  v0:= new `java.lang.NullPointerException`;
  #L23f81a.  v1:= "address == null" @kind object;
  #L23f81e.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f824.  throw v0;
  #L23f826.  if v4 != 0 then goto L23f83a;
  #L23f82a.  v0:= new `java.lang.NullPointerException`;
  #L23f82e.  v1:= "proxy == null" @kind object;
  #L23f832.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f838.  throw v0;
  #L23f83a.  if v5 != 0 then goto L23f84e;
  #L23f83e.  v0:= new `java.lang.NullPointerException`;
  #L23f842.  v1:= "inetSocketAddress == null" @kind object;
  #L23f846.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f84c.  throw v0;
  #L23f84e.  v2.`okhttp3.Route.address` @type ^`okhttp3.Address` := v3 @kind object;
  #L23f852.  v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` := v4 @kind object;
  #L23f856.  v2.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` := v5 @kind object;
  #L23f85a.  return @kind void;
}
procedure `okhttp3.Address` `address`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f86c.  v0:= v1.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L23f870.  return v0 @kind object;
}
procedure `boolean` `equals`(`okhttp3.Route` v4 @kind this, `java.lang.Object` v5 @kind object @name `obj`) @signature `Lokhttp3/Route;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23f884.  v1:= 0I;
  #L23f886.  v2:= instanceof @variable v5 @type ^`okhttp3.Route` @kind boolean;
  #L23f88a.  if v2 == 0 then goto L23f8d2;
  #L23f88e.  v0:= v5 @kind object;
  #L23f890.  v0:= (`okhttp3.Route`) v0 @kind object;
  #L23f894.  v2:= v4.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L23f898.  v3:= v0.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L23f89c.  call temp:= `equals`(v2, v3) @signature `Lokhttp3/Address;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23f8a2.  v2:= temp;
  #L23f8a4.  if v2 == 0 then goto L23f8d2;
  #L23f8a8.  v2:= v4.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L23f8ac.  v3:= v0.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L23f8b0.  call temp:= `equals`(v2, v3) @signature `Ljava/net/Proxy;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23f8b6.  v2:= temp;
  #L23f8b8.  if v2 == 0 then goto L23f8d2;
  #L23f8bc.  v2:= v4.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L23f8c0.  v3:= v0.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L23f8c4.  call temp:= `equals`(v2, v3) @signature `Ljava/net/InetSocketAddress;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L23f8ca.  v2:= temp;
  #L23f8cc.  if v2 == 0 then goto L23f8d2;
  #L23f8d0.  v1:= 1I;
  #L23f8d2.  return v1;
}
procedure `int` `hashCode`(`okhttp3.Route` v3 @kind this) @signature `Lokhttp3/Route;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23f8e4.  v0:= 17I;
  #L23f8e8.  v1:= v3.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L23f8ec.  call temp:= `hashCode`(v1) @signature `Lokhttp3/Address;.hashCode:()I` @kind virtual;
  #L23f8f2.  v1:= temp;
  #L23f8f4.  v0:= v1 + 527;
  #L23f8f8.  v1:= v0 * 31;
  #L23f8fc.  v2:= v3.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L23f900.  call temp:= `hashCode`(v2) @signature `Ljava/net/Proxy;.hashCode:()I` @kind virtual;
  #L23f906.  v2:= temp;
  #L23f908.  v0:= v1 + v2 @kind int;
  #L23f90c.  v1:= v0 * 31;
  #L23f910.  v2:= v3.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L23f914.  call temp:= `hashCode`(v2) @signature `Ljava/net/InetSocketAddress;.hashCode:()I` @kind virtual;
  #L23f91a.  v2:= temp;
  #L23f91c.  v0:= v1 + v2 @kind int;
  #L23f920.  return v0;
}
procedure `java.net.Proxy` `proxy`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.proxy:()Ljava/net/Proxy;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f934.  v0:= v1.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L23f938.  return v0 @kind object;
}
procedure `boolean` `requiresTunnel`(`okhttp3.Route` v2 @kind this) @signature `Lokhttp3/Route;.requiresTunnel:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f94c.  v0:= v2.`okhttp3.Route.address` @type ^`okhttp3.Address` @kind object;
  #L23f950.  v0:= v0.`okhttp3.Address.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L23f954.  if v0 == 0 then goto L23f970;
  #L23f958.  v0:= v2.`okhttp3.Route.proxy` @type ^`java.net.Proxy` @kind object;
  #L23f95c.  call temp:= `type`(v0) @signature `Ljava/net/Proxy;.type:()Ljava/net/Proxy$Type;` @kind virtual;
  #L23f962.  v0:= temp @kind object;
  #L23f964.  v1:= `@@java.net.Proxy$Type.HTTP` @type ^`java.net.Proxy$Type` @kind object;
  #L23f968.  if v0 != v1 then goto L23f970;
  #L23f96c.  v0:= 1I;
  #L23f96e.  return v0;
  #L23f970.  v0:= 0I;
  #L23f972.  goto L23f96e;
}
procedure `java.net.InetSocketAddress` `socketAddress`(`okhttp3.Route` v1 @kind this) @signature `Lokhttp3/Route;.socketAddress:()Ljava/net/InetSocketAddress;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f984.  v0:= v1.`okhttp3.Route.inetSocketAddress` @type ^`java.net.InetSocketAddress` @kind object;
  #L23f988.  return v0 @kind object;
}
