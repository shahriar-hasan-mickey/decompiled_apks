record `okhttp3.Response` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface {
  `okhttp3.ResponseBody` `okhttp3.Response.body` @AccessFlag PRIVATE_FINAL;
  `okhttp3.CacheControl` `okhttp3.Response.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Response` `okhttp3.Response.cacheResponse` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Response.code` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Handshake` `okhttp3.Response.handshake` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Headers` `okhttp3.Response.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Response.message` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.networkResponse` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Response` `okhttp3.Response.priorResponse` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Protocol` `okhttp3.Response.protocol` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.receivedResponseAtMillis` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.Response.request` @AccessFlag PRIVATE_FINAL;
  `long` `okhttp3.Response.sentRequestAtMillis` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Response` v2 @kind this, `okhttp3.Response$Builder` v3 @kind object @name `builder`) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23efcc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23efd2.  call temp:= `access$000`(v3) @signature `Lokhttp3/Response$Builder;.access$000:(Lokhttp3/Response$Builder;)Lokhttp3/Request;` @kind static;
  #L23efd8.  v0:= temp @kind object;
  #L23efda.  v2.`okhttp3.Response.request` @type ^`okhttp3.Request` := v0 @kind object;
  #L23efde.  call temp:= `access$100`(v3) @signature `Lokhttp3/Response$Builder;.access$100:(Lokhttp3/Response$Builder;)Lokhttp3/Protocol;` @kind static;
  #L23efe4.  v0:= temp @kind object;
  #L23efe6.  v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` := v0 @kind object;
  #L23efea.  call temp:= `access$200`(v3) @signature `Lokhttp3/Response$Builder;.access$200:(Lokhttp3/Response$Builder;)I` @kind static;
  #L23eff0.  v0:= temp;
  #L23eff2.  v2.`okhttp3.Response.code` @type ^`int` := v0;
  #L23eff6.  call temp:= `access$300`(v3) @signature `Lokhttp3/Response$Builder;.access$300:(Lokhttp3/Response$Builder;)Ljava/lang/String;` @kind static;
  #L23effc.  v0:= temp @kind object;
  #L23effe.  v2.`okhttp3.Response.message` @type ^`java.lang.String` := v0 @kind object;
  #L23f002.  call temp:= `access$400`(v3) @signature `Lokhttp3/Response$Builder;.access$400:(Lokhttp3/Response$Builder;)Lokhttp3/Handshake;` @kind static;
  #L23f008.  v0:= temp @kind object;
  #L23f00a.  v2.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` := v0 @kind object;
  #L23f00e.  call temp:= `access$500`(v3) @signature `Lokhttp3/Response$Builder;.access$500:(Lokhttp3/Response$Builder;)Lokhttp3/Headers$Builder;` @kind static;
  #L23f014.  v0:= temp @kind object;
  #L23f016.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L23f01c.  v0:= temp @kind object;
  #L23f01e.  v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L23f022.  call temp:= `access$600`(v3) @signature `Lokhttp3/Response$Builder;.access$600:(Lokhttp3/Response$Builder;)Lokhttp3/ResponseBody;` @kind static;
  #L23f028.  v0:= temp @kind object;
  #L23f02a.  v2.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` := v0 @kind object;
  #L23f02e.  call temp:= `access$700`(v3) @signature `Lokhttp3/Response$Builder;.access$700:(Lokhttp3/Response$Builder;)Lokhttp3/Response;` @kind static;
  #L23f034.  v0:= temp @kind object;
  #L23f036.  v2.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L23f03a.  call temp:= `access$800`(v3) @signature `Lokhttp3/Response$Builder;.access$800:(Lokhttp3/Response$Builder;)Lokhttp3/Response;` @kind static;
  #L23f040.  v0:= temp @kind object;
  #L23f042.  v2.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L23f046.  call temp:= `access$900`(v3) @signature `Lokhttp3/Response$Builder;.access$900:(Lokhttp3/Response$Builder;)Lokhttp3/Response;` @kind static;
  #L23f04c.  v0:= temp @kind object;
  #L23f04e.  v2.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` := v0 @kind object;
  #L23f052.  call temp:= `access$1000`(v3) @signature `Lokhttp3/Response$Builder;.access$1000:(Lokhttp3/Response$Builder;)J` @kind static;
  #L23f058.  v0:= temp @kind wide;
  #L23f05a.  v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` := v0 @kind wide;
  #L23f05e.  call temp:= `access$1100`(v3) @signature `Lokhttp3/Response$Builder;.access$1100:(Lokhttp3/Response$Builder;)J` @kind static;
  #L23f064.  v0:= temp @kind wide;
  #L23f066.  v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` := v0 @kind wide;
  #L23f06a.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Response` v0 @kind this, `okhttp3.Response$Builder` v1 @kind object @name `x0`, `okhttp3.Response$1` v2 @kind object @name `x1`) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;Lokhttp3/Response$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23f07c.  call `<init>`(v0, v1) @signature `Lokhttp3/Response;.<init>:(Lokhttp3/Response$Builder;)V` @kind direct;
  #L23f082.  return @kind void;
}
procedure `okhttp3.Request` `access$1300`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1300:(Lokhttp3/Response;)Lokhttp3/Request;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f094.  v0:= v1.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L23f098.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `access$1400`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1400:(Lokhttp3/Response;)Lokhttp3/Protocol;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f0ac.  v0:= v1.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L23f0b0.  return v0 @kind object;
}
procedure `int` `access$1500`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1500:(Lokhttp3/Response;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f0c4.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L23f0c8.  return v0;
}
procedure `java.lang.String` `access$1600`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1600:(Lokhttp3/Response;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f0dc.  v0:= v1.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L23f0e0.  return v0 @kind object;
}
procedure `okhttp3.Handshake` `access$1700`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1700:(Lokhttp3/Response;)Lokhttp3/Handshake;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f0f4.  v0:= v1.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L23f0f8.  return v0 @kind object;
}
procedure `okhttp3.Headers` `access$1800`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1800:(Lokhttp3/Response;)Lokhttp3/Headers;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f10c.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L23f110.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `access$1900`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$1900:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f124.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L23f128.  return v0 @kind object;
}
procedure `okhttp3.Response` `access$2000`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$2000:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f13c.  v0:= v1.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L23f140.  return v0 @kind object;
}
procedure `okhttp3.Response` `access$2100`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$2100:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f154.  v0:= v1.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L23f158.  return v0 @kind object;
}
procedure `okhttp3.Response` `access$2200`(`okhttp3.Response` v1 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$2200:(Lokhttp3/Response;)Lokhttp3/Response;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23f16c.  v0:= v1.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L23f170.  return v0 @kind object;
}
procedure `long` `access$2300`(`okhttp3.Response` v2 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$2300:(Lokhttp3/Response;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L23f184.  v0:= v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` @kind wide;
  #L23f188.  return v0 @kind wide;
}
procedure `long` `access$2400`(`okhttp3.Response` v2 @kind object @name `x0`) @signature `Lokhttp3/Response;.access$2400:(Lokhttp3/Response;)J` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L23f19c.  v0:= v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L23f1a0.  return v0 @kind wide;
}
procedure `okhttp3.ResponseBody` `body`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f1b4.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L23f1b8.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f1cc.  v0:= v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L23f1d0.  if v0 == 0 then goto L23f1d6;
  #L23f1d4.  return v0 @kind object;
  #L23f1d6.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L23f1da.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L23f1e0.  v0:= temp @kind object;
  #L23f1e2.  v2.`okhttp3.Response.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L23f1e6.  goto L23f1d4;
}
procedure `okhttp3.Response` `cacheResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.cacheResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f1f8.  v0:= v1.`okhttp3.Response.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L23f1fc.  return v0 @kind object;
}
procedure `java.util.List` `challenges`(`okhttp3.Response` v3 @kind this) @signature `Lokhttp3/Response;.challenges:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23f210.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L23f214.  v2:= 401I;
  #L23f218.  if v1 != v2 then goto L23f232;
  #L23f21c.  v0:= "WWW-Authenticate" @kind object;
  #L23f220.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L23f226.  v1:= temp @kind object;
  #L23f228.  call temp:= `parseChallenges`(v1, v0) @signature `Lokhttp3/internal/http/OkHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L23f22e.  v1:= temp @kind object;
  #L23f230.  return v1 @kind object;
  #L23f232.  v1:= v3.`okhttp3.Response.code` @type ^`int`;
  #L23f236.  v2:= 407I;
  #L23f23a.  if v1 != v2 then goto L23f244;
  #L23f23e.  v0:= "Proxy-Authenticate" @kind object;
  #L23f242.  goto L23f220;
  #L23f244.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L23f24a.  v1:= temp @kind object;
  #L23f24c.  goto L23f230;
}
procedure `void` `close`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f260.  v0:= v1.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L23f264.  call `close`(v0) @signature `Lokhttp3/ResponseBody;.close:()V` @kind virtual;
  #L23f26a.  return @kind void;
}
procedure `int` `code`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.code:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f27c.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L23f280.  return v0;
}
procedure `okhttp3.Handshake` `handshake`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f294.  v0:= v1.`okhttp3.Response.handshake` @type ^`okhttp3.Handshake` @kind object;
  #L23f298.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f2ac.  v0:= 0I;
  #L23f2ae.  call temp:= `header`(v1, v2, v0) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23f2b4.  v0:= temp @kind object;
  #L23f2b6.  return v0 @kind object;
}
procedure `java.lang.String` `header`(`okhttp3.Response` v2 @kind this, `java.lang.String` v3 @kind object @name `name`, `java.lang.String` v4 @kind object @name `defaultValue`) @signature `Lokhttp3/Response;.header:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f2c8.  v1:= v2.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L23f2cc.  call temp:= `get`(v1, v3) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23f2d2.  v0:= temp @kind object;
  #L23f2d4.  if v0 == 0 then goto L23f2da;
  #L23f2d8.  return v0 @kind object;
  #L23f2da.  v0:= v4 @kind object;
  #L23f2dc.  goto L23f2d8;
}
procedure `java.util.List` `headers`(`okhttp3.Response` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Response;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f2f0.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L23f2f4.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L23f2fa.  v0:= temp @kind object;
  #L23f2fc.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f310.  v0:= v1.`okhttp3.Response.headers` @type ^`okhttp3.Headers` @kind object;
  #L23f314.  return v0 @kind object;
}
procedure `boolean` `isRedirect`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.isRedirect:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f328.  v0:= v1.`okhttp3.Response.code` @type ^`int`;
  #L23f32c.  goto L23f33c;
  #L23f332.  v0:= 0I;
  #L23f334.  return v0;
  #L23f336.  v0:= 1I;
  #L23f338.  goto L23f334;
  #L23f33a.  
  #L23f33c.  switch v0
                  | 300 => goto L23f336
                  | 301 => goto L23f336
                  | 302 => goto L23f336
                  | 303 => goto L23f336
                  | 304 => goto L23f332
                  | 305 => goto L23f332
                  | 306 => goto L23f332
                  | 307 => goto L23f336
                  | 308 => goto L23f336
                  | else => goto L23f332;
}
procedure `boolean` `isSuccessful`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.isSuccessful:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f378.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L23f37c.  v1:= 200I;
  #L23f380.  if v0 < v1 then goto L23f394;
  #L23f384.  v0:= v2.`okhttp3.Response.code` @type ^`int`;
  #L23f388.  v1:= 300I;
  #L23f38c.  if v0 >= v1 then goto L23f394;
  #L23f390.  v0:= 1I;
  #L23f392.  return v0;
  #L23f394.  v0:= 0I;
  #L23f396.  goto L23f392;
}
procedure `java.lang.String` `message`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.message:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f3a8.  v0:= v1.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L23f3ac.  return v0 @kind object;
}
procedure `okhttp3.Response` `networkResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f3c0.  v0:= v1.`okhttp3.Response.networkResponse` @type ^`okhttp3.Response` @kind object;
  #L23f3c4.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `newBuilder`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f3d8.  v0:= new `okhttp3.Response$Builder`;
  #L23f3dc.  v1:= 0I;
  #L23f3de.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/Response$Builder;.<init>:(Lokhttp3/Response;Lokhttp3/Response$1;)V` @kind direct;
  #L23f3e4.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `peekBody`(`okhttp3.Response` v7 @kind this, `long` v8 @name `byteCount`) @signature `Lokhttp3/Response;.peekBody:(J)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23f3f8.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L23f3fc.  call temp:= `source`(v3) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L23f402.  v2:= temp @kind object;
  #L23f404.  call temp:= `request`(v2, v8) @signature `Lokio/BufferedSource;.request:(J)Z` @kind interface;
  #L23f40a.  call temp:= `buffer`(v2) @signature `Lokio/BufferedSource;.buffer:()Lokio/Buffer;` @kind interface;
  #L23f410.  v3:= temp @kind object;
  #L23f412.  call temp:= `clone`(v3) @signature `Lokio/Buffer;.clone:()Lokio/Buffer;` @kind virtual;
  #L23f418.  v0:= temp @kind object;
  #L23f41a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L23f420.  v4:= temp @kind wide;
  #L23f422.  v3:= lcmp(v4, v8);
  #L23f426.  if v3 <= 0 then goto L23f45e;
  #L23f42a.  v1:= new `okio.Buffer`;
  #L23f42e.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L23f434.  call `write`(v1, v0, v8) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L23f43a.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L23f440.  v3:= v7.`okhttp3.Response.body` @type ^`okhttp3.ResponseBody` @kind object;
  #L23f444.  call temp:= `contentType`(v3) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L23f44a.  v3:= temp @kind object;
  #L23f44c.  call temp:= `size`(v1) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L23f452.  v4:= temp @kind wide;
  #L23f454.  call temp:= `create`(v3, v4, v1) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L23f45a.  v3:= temp @kind object;
  #L23f45c.  return v3 @kind object;
  #L23f45e.  v1:= v0 @kind object;
  #L23f460.  goto L23f440;
}
procedure `okhttp3.Response` `priorResponse`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.priorResponse:()Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f474.  v0:= v1.`okhttp3.Response.priorResponse` @type ^`okhttp3.Response` @kind object;
  #L23f478.  return v0 @kind object;
}
procedure `okhttp3.Protocol` `protocol`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.protocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f48c.  v0:= v1.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L23f490.  return v0 @kind object;
}
procedure `long` `receivedResponseAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f4a4.  v0:= v2.`okhttp3.Response.receivedResponseAtMillis` @type ^`long` @kind wide;
  #L23f4a8.  return v0 @kind wide;
}
procedure `okhttp3.Request` `request`(`okhttp3.Response` v1 @kind this) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f4bc.  v0:= v1.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L23f4c0.  return v0 @kind object;
}
procedure `long` `sentRequestAtMillis`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f4d4.  v0:= v2.`okhttp3.Response.sentRequestAtMillis` @type ^`long` @kind wide;
  #L23f4d8.  return v0 @kind wide;
}
procedure `java.lang.String` `toString`(`okhttp3.Response` v2 @kind this) @signature `Lokhttp3/Response;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23f4ec.  v0:= new `java.lang.StringBuilder`;
  #L23f4f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23f4f6.  v1:= "Response{protocol=" @kind object;
  #L23f4fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f500.  v0:= temp @kind object;
  #L23f502.  v1:= v2.`okhttp3.Response.protocol` @type ^`okhttp3.Protocol` @kind object;
  #L23f506.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f50c.  v0:= temp @kind object;
  #L23f50e.  v1:= ", code=" @kind object;
  #L23f512.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f518.  v0:= temp @kind object;
  #L23f51a.  v1:= v2.`okhttp3.Response.code` @type ^`int`;
  #L23f51e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f524.  v0:= temp @kind object;
  #L23f526.  v1:= ", message=" @kind object;
  #L23f52a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f530.  v0:= temp @kind object;
  #L23f532.  v1:= v2.`okhttp3.Response.message` @type ^`java.lang.String` @kind object;
  #L23f536.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f53c.  v0:= temp @kind object;
  #L23f53e.  v1:= ", url=" @kind object;
  #L23f542.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f548.  v0:= temp @kind object;
  #L23f54a.  v1:= v2.`okhttp3.Response.request` @type ^`okhttp3.Request` @kind object;
  #L23f54e.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L23f554.  v1:= temp @kind object;
  #L23f556.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f55c.  v0:= temp @kind object;
  #L23f55e.  v1:= 125I;
  #L23f562.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f568.  v0:= temp @kind object;
  #L23f56a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23f570.  v0:= temp @kind object;
  #L23f572.  return v0 @kind object;
}
