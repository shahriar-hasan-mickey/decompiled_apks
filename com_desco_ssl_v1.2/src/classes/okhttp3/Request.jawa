record `okhttp3.Request` @kind class @AccessFlag PUBLIC_FINAL {
  `okhttp3.RequestBody` `okhttp3.Request.body` @AccessFlag PRIVATE_FINAL;
  `okhttp3.CacheControl` `okhttp3.Request.cacheControl` @AccessFlag PRIVATE_VOLATILE;
  `okhttp3.Headers` `okhttp3.Request.headers` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Request.method` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `okhttp3.Request.tag` @AccessFlag PRIVATE_FINAL;
  `okhttp3.HttpUrl` `okhttp3.Request.url` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Request` v1 @kind this, `okhttp3.Request$Builder` v2 @kind object @name `builder`) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L23e664.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23e66a.  call temp:= `access$000`(v2) @signature `Lokhttp3/Request$Builder;.access$000:(Lokhttp3/Request$Builder;)Lokhttp3/HttpUrl;` @kind static;
  #L23e670.  v0:= temp @kind object;
  #L23e672.  v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` := v0 @kind object;
  #L23e676.  call temp:= `access$100`(v2) @signature `Lokhttp3/Request$Builder;.access$100:(Lokhttp3/Request$Builder;)Ljava/lang/String;` @kind static;
  #L23e67c.  v0:= temp @kind object;
  #L23e67e.  v1.`okhttp3.Request.method` @type ^`java.lang.String` := v0 @kind object;
  #L23e682.  call temp:= `access$200`(v2) @signature `Lokhttp3/Request$Builder;.access$200:(Lokhttp3/Request$Builder;)Lokhttp3/Headers$Builder;` @kind static;
  #L23e688.  v0:= temp @kind object;
  #L23e68a.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L23e690.  v0:= temp @kind object;
  #L23e692.  v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` := v0 @kind object;
  #L23e696.  call temp:= `access$300`(v2) @signature `Lokhttp3/Request$Builder;.access$300:(Lokhttp3/Request$Builder;)Lokhttp3/RequestBody;` @kind static;
  #L23e69c.  v0:= temp @kind object;
  #L23e69e.  v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` := v0 @kind object;
  #L23e6a2.  call temp:= `access$400`(v2) @signature `Lokhttp3/Request$Builder;.access$400:(Lokhttp3/Request$Builder;)Ljava/lang/Object;` @kind static;
  #L23e6a8.  v0:= temp @kind object;
  #L23e6aa.  if v0 == 0 then goto L23e6bc;
  #L23e6ae.  call temp:= `access$400`(v2) @signature `Lokhttp3/Request$Builder;.access$400:(Lokhttp3/Request$Builder;)Ljava/lang/Object;` @kind static;
  #L23e6b4.  v0:= temp @kind object;
  #L23e6b6.  v1.`okhttp3.Request.tag` @type ^`java.lang.Object` := v0 @kind object;
  #L23e6ba.  return @kind void;
  #L23e6bc.  v0:= v1 @kind object;
  #L23e6be.  goto L23e6b6;
}
procedure `void` `<init>`(`okhttp3.Request` v0 @kind this, `okhttp3.Request$Builder` v1 @kind object @name `x0`, `okhttp3.Request$1` v2 @kind object @name `x1`) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;Lokhttp3/Request$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L23e6d0.  call `<init>`(v0, v1) @signature `Lokhttp3/Request;.<init>:(Lokhttp3/Request$Builder;)V` @kind direct;
  #L23e6d6.  return @kind void;
}
procedure `okhttp3.Headers` `access$1000`(`okhttp3.Request` v1 @kind object @name `x0`) @signature `Lokhttp3/Request;.access$1000:(Lokhttp3/Request;)Lokhttp3/Headers;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e6e8.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L23e6ec.  return v0 @kind object;
}
procedure `okhttp3.HttpUrl` `access$600`(`okhttp3.Request` v1 @kind object @name `x0`) @signature `Lokhttp3/Request;.access$600:(Lokhttp3/Request;)Lokhttp3/HttpUrl;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e700.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e704.  return v0 @kind object;
}
procedure `java.lang.String` `access$700`(`okhttp3.Request` v1 @kind object @name `x0`) @signature `Lokhttp3/Request;.access$700:(Lokhttp3/Request;)Ljava/lang/String;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e718.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L23e71c.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `access$800`(`okhttp3.Request` v1 @kind object @name `x0`) @signature `Lokhttp3/Request;.access$800:(Lokhttp3/Request;)Lokhttp3/RequestBody;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e730.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L23e734.  return v0 @kind object;
}
procedure `java.lang.Object` `access$900`(`okhttp3.Request` v1 @kind object @name `x0`) @signature `Lokhttp3/Request;.access$900:(Lokhttp3/Request;)Ljava/lang/Object;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23e748.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L23e74c.  return v0 @kind object;
}
procedure `okhttp3.RequestBody` `body`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e760.  v0:= v1.`okhttp3.Request.body` @type ^`okhttp3.RequestBody` @kind object;
  #L23e764.  return v0 @kind object;
}
procedure `okhttp3.CacheControl` `cacheControl`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e778.  v0:= v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` @kind object;
  #L23e77c.  if v0 == 0 then goto L23e782;
  #L23e780.  return v0 @kind object;
  #L23e782.  v1:= v2.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L23e786.  call temp:= `parse`(v1) @signature `Lokhttp3/CacheControl;.parse:(Lokhttp3/Headers;)Lokhttp3/CacheControl;` @kind static;
  #L23e78c.  v0:= temp @kind object;
  #L23e78e.  v2.`okhttp3.Request.cacheControl` @type ^`okhttp3.CacheControl` := v0 @kind object;
  #L23e792.  goto L23e780;
}
procedure `java.lang.String` `header`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e7a4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L23e7a8.  call temp:= `get`(v0, v2) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L23e7ae.  v0:= temp @kind object;
  #L23e7b0.  return v0 @kind object;
}
procedure `java.util.List` `headers`(`okhttp3.Request` v1 @kind this, `java.lang.String` v2 @kind object @name `name`) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e7c4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L23e7c8.  call temp:= `values`(v0, v2) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L23e7ce.  v0:= temp @kind object;
  #L23e7d0.  return v0 @kind object;
}
procedure `okhttp3.Headers` `headers`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e7e4.  v0:= v1.`okhttp3.Request.headers` @type ^`okhttp3.Headers` @kind object;
  #L23e7e8.  return v0 @kind object;
}
procedure `boolean` `isHttps`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.isHttps:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e7fc.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e800.  call temp:= `isHttps`(v0) @signature `Lokhttp3/HttpUrl;.isHttps:()Z` @kind virtual;
  #L23e806.  v0:= temp;
  #L23e808.  return v0;
}
procedure `java.lang.String` `method`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e81c.  v0:= v1.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L23e820.  return v0 @kind object;
}
procedure `okhttp3.Request$Builder` `newBuilder`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e834.  v0:= new `okhttp3.Request$Builder`;
  #L23e838.  v1:= 0I;
  #L23e83a.  call `<init>`(v0, v2, v1) @signature `Lokhttp3/Request$Builder;.<init>:(Lokhttp3/Request;Lokhttp3/Request$1;)V` @kind direct;
  #L23e840.  return v0 @kind object;
}
procedure `java.lang.Object` `tag`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.tag:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e854.  v0:= v1.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L23e858.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okhttp3.Request` v2 @kind this) @signature `Lokhttp3/Request;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L23e86c.  v0:= new `java.lang.StringBuilder`;
  #L23e870.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23e876.  v1:= "Request{method=" @kind object;
  #L23e87a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e880.  v0:= temp @kind object;
  #L23e882.  v1:= v2.`okhttp3.Request.method` @type ^`java.lang.String` @kind object;
  #L23e886.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e88c.  v0:= temp @kind object;
  #L23e88e.  v1:= ", url=" @kind object;
  #L23e892.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e898.  v0:= temp @kind object;
  #L23e89a.  v1:= v2.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e89e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e8a4.  v0:= temp @kind object;
  #L23e8a6.  v1:= ", tag=" @kind object;
  #L23e8aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e8b0.  v1:= temp @kind object;
  #L23e8b2.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L23e8b6.  if v0 == v2 then goto L23e8dc;
  #L23e8ba.  v0:= v2.`okhttp3.Request.tag` @type ^`java.lang.Object` @kind object;
  #L23e8be.  call temp:= `append`(v1, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e8c4.  v0:= temp @kind object;
  #L23e8c6.  v1:= 125I;
  #L23e8ca.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L23e8d0.  v0:= temp @kind object;
  #L23e8d2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23e8d8.  v0:= temp @kind object;
  #L23e8da.  return v0 @kind object;
  #L23e8dc.  v0:= 0I;
  #L23e8de.  goto L23e8be;
}
procedure `okhttp3.HttpUrl` `url`(`okhttp3.Request` v1 @kind this) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23e8f0.  v0:= v1.`okhttp3.Request.url` @type ^`okhttp3.HttpUrl` @kind object;
  #L23e8f4.  return v0 @kind object;
}
