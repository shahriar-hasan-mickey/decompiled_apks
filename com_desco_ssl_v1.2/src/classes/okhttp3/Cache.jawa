record `okhttp3.Cache` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.Closeable` @kind interface, `java.io.Flushable` @kind interface {
  `okhttp3.internal.DiskLruCache` `okhttp3.Cache.cache` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.Cache.hitCount` @AccessFlag PRIVATE;
  `okhttp3.internal.InternalCache` `okhttp3.Cache.internalCache` @AccessFlag FINAL;
  `int` `okhttp3.Cache.networkCount` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.requestCount` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.writeAbortCount` @AccessFlag PRIVATE;
  `int` `okhttp3.Cache.writeSuccessCount` @AccessFlag PRIVATE;
}
global `int` `@@okhttp3.Cache.ENTRY_BODY` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.ENTRY_COUNT` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.ENTRY_METADATA` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.Cache.VERSION` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.Cache` v2 @kind this, `java.io.File` v3 @kind object @name `directory`, `long` v4 @name `maxSize`) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2346f0.  v0:= `@@okhttp3.internal.io.FileSystem.SYSTEM` @type ^`okhttp3.internal.io.FileSystem` @kind object;
  #L2346f4.  call `<init>`(v2, v3, v4, v0) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @kind direct;
  #L2346fa.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.Cache` v6 @kind this, `java.io.File` v7 @kind object @name `directory`, `long` v8 @name `maxSize`, `okhttp3.internal.io.FileSystem` v10 @kind object @name `fileSystem`) @signature `Lokhttp3/Cache;.<init>:(Ljava/io/File;JLokhttp3/internal/io/FileSystem;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23470c.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L234712.  v0:= new `okhttp3.Cache$1`;
  #L234716.  call `<init>`(v0, v6) @signature `Lokhttp3/Cache$1;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L23471c.  v6.`okhttp3.Cache.internalCache` @type ^`okhttp3.internal.InternalCache` := v0 @kind object;
  #L234720.  v2:= 201105I;
  #L234726.  v3:= 2I;
  #L234728.  v0:= v10 @kind object;
  #L23472a.  v1:= v7 @kind object;
  #L23472c.  v4:= v8 @kind wide;
  #L23472e.  call temp:= `create`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/DiskLruCache;.create:(Lokhttp3/internal/io/FileSystem;Ljava/io/File;IIJ)Lokhttp3/internal/DiskLruCache;` @kind static;
  #L234734.  v0:= temp @kind object;
  #L234736.  v6.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` := v0 @kind object;
  #L23473a.  return @kind void;
}
procedure `void` `abortQuietly`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.DiskLruCache$Editor` v2 @kind object @name `editor`) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/DiskLruCache$Editor;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L23474c.  if v2 == 0 then goto L234756;
  #L234750.  call `abort`(v2) @signature `Lokhttp3/internal/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #L234756.  return @kind void;
  #L234758.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L23475a.  goto L234756;
  catch `java.io.IOException` @[L234750..L234756] goto L234758;
}
procedure `okhttp3.internal.http.CacheRequest` `access$000`(`okhttp3.Cache` v1 @kind object @name `x0`, `okhttp3.Response` v2 @kind object @name `x1`) @signature `Lokhttp3/Cache;.access$000:(Lokhttp3/Cache;Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L23477c.  call temp:= `put`(v1, v2) @signature `Lokhttp3/Cache;.put:(Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;` @kind direct;
  #L234782.  v0:= temp @kind object;
  #L234784.  return v0 @kind object;
}
procedure `void` `access$100`(`okhttp3.Cache` v0 @kind object @name `x0`, `okhttp3.Request` v1 @kind object @name `x1`) @signature `Lokhttp3/Cache;.access$100:(Lokhttp3/Cache;Lokhttp3/Request;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L234798.  call `remove`(v0, v1) @signature `Lokhttp3/Cache;.remove:(Lokhttp3/Request;)V` @kind direct;
  #L23479e.  return @kind void;
}
procedure `int` `access$1000`(`okio.BufferedSource` v1 @kind object @name `x0`) @signature `Lokhttp3/Cache;.access$1000:(Lokio/BufferedSource;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L2347b0.  call temp:= `readInt`(v1) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @kind static;
  #L2347b6.  v0:= temp;
  #L2347b8.  return v0;
}
procedure `void` `access$200`(`okhttp3.Cache` v0 @kind object @name `x0`, `okhttp3.Response` v1 @kind object @name `x1`, `okhttp3.Response` v2 @kind object @name `x2`) @signature `Lokhttp3/Cache;.access$200:(Lokhttp3/Cache;Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2347cc.  call `update`(v0, v1, v2) @signature `Lokhttp3/Cache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @kind direct;
  #L2347d2.  return @kind void;
}
procedure `void` `access$300`(`okhttp3.Cache` v0 @kind object @name `x0`) @signature `Lokhttp3/Cache;.access$300:(Lokhttp3/Cache;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2347e4.  call `trackConditionalCacheHit`(v0) @signature `Lokhttp3/Cache;.trackConditionalCacheHit:()V` @kind direct;
  #L2347ea.  return @kind void;
}
procedure `void` `access$400`(`okhttp3.Cache` v0 @kind object @name `x0`, `okhttp3.internal.http.CacheStrategy` v1 @kind object @name `x1`) @signature `Lokhttp3/Cache;.access$400:(Lokhttp3/Cache;Lokhttp3/internal/http/CacheStrategy;)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L2347fc.  call `trackResponse`(v0, v1) @signature `Lokhttp3/Cache;.trackResponse:(Lokhttp3/internal/http/CacheStrategy;)V` @kind direct;
  #L234802.  return @kind void;
}
procedure `okhttp3.internal.DiskLruCache` `access$600`(`okhttp3.Cache` v1 @kind object @name `x0`) @signature `Lokhttp3/Cache;.access$600:(Lokhttp3/Cache;)Lokhttp3/internal/DiskLruCache;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L234814.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234818.  return v0 @kind object;
}
procedure `int` `access$808`(`okhttp3.Cache` v2 @kind object @name `x0`) @signature `Lokhttp3/Cache;.access$808:(Lokhttp3/Cache;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L23482c.  v0:= v2.`okhttp3.Cache.writeSuccessCount` @type ^`int`;
  #L234830.  v1:= v0 + 1;
  #L234834.  v2.`okhttp3.Cache.writeSuccessCount` @type ^`int` := v1;
  #L234838.  return v0;
}
procedure `int` `access$908`(`okhttp3.Cache` v2 @kind object @name `x0`) @signature `Lokhttp3/Cache;.access$908:(Lokhttp3/Cache;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;
    v1;

  #L23484c.  v0:= v2.`okhttp3.Cache.writeAbortCount` @type ^`int`;
  #L234850.  v1:= v0 + 1;
  #L234854.  v2.`okhttp3.Cache.writeAbortCount` @type ^`int` := v1;
  #L234858.  return v0;
}
procedure `okhttp3.internal.http.CacheRequest` `put`(`okhttp3.Cache` v7 @kind this, `okhttp3.Response` v8 @kind object @name `response`) @signature `Lokhttp3/Cache;.put:(Lokhttp3/Response;)Lokhttp3/internal/http/CacheRequest;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23486c.  v4:= 0I;
  #L23486e.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L234874.  v5:= temp @kind object;
  #L234876.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L23487c.  v3:= temp @kind object;
  #L23487e.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L234884.  v5:= temp @kind object;
  #L234886.  call temp:= `method`(v5) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L23488c.  v5:= temp @kind object;
  #L23488e.  call temp:= `invalidatesCache`(v5) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @kind static;
  #L234894.  v5:= temp;
  #L234896.  if v5 == 0 then goto L2348aa;
  #L23489a.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2348a0.  v5:= temp @kind object;
  #L2348a2.  call `remove`(v7, v5) @signature `Lokhttp3/Cache;.remove:(Lokhttp3/Request;)V` @kind direct;
  #L2348a8.  return v4 @kind object;
  #L2348aa.  v5:= "GET" @kind object;
  #L2348ae.  call temp:= `equals`(v3, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2348b4.  v5:= temp;
  #L2348b6.  if v5 == 0 then goto L2348a8;
  #L2348ba.  call temp:= `hasVaryAll`(v8) @signature `Lokhttp3/internal/http/OkHeaders;.hasVaryAll:(Lokhttp3/Response;)Z` @kind static;
  #L2348c0.  v5:= temp;
  #L2348c2.  if v5 != 0 then goto L2348a8;
  #L2348c6.  v2:= new `okhttp3.Cache$Entry`;
  #L2348ca.  call `<init>`(v2, v8) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L2348d0.  v1:= 0I;
  #L2348d2.  v5:= v7.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2348d6.  call temp:= `request`(v8) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L2348dc.  v6:= temp @kind object;
  #L2348de.  call temp:= `urlToKey`(v6) @signature `Lokhttp3/Cache;.urlToKey:(Lokhttp3/Request;)Ljava/lang/String;` @kind static;
  #L2348e4.  v6:= temp @kind object;
  #L2348e6.  call temp:= `edit`(v5, v6) @signature `Lokhttp3/internal/DiskLruCache;.edit:(Ljava/lang/String;)Lokhttp3/internal/DiskLruCache$Editor;` @kind virtual;
  #L2348ec.  v1:= temp @kind object;
  #L2348ee.  if v1 == 0 then goto L2348a8;
  #L2348f2.  call `writeTo`(v2, v1) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/DiskLruCache$Editor;)V` @kind virtual;
  #L2348f8.  v5:= new `okhttp3.Cache$CacheRequestImpl`;
  #L2348fc.  call `<init>`(v5, v7, v1) @signature `Lokhttp3/Cache$CacheRequestImpl;.<init>:(Lokhttp3/Cache;Lokhttp3/internal/DiskLruCache$Editor;)V` @kind direct;
  #L234902.  v4:= v5 @kind object;
  #L234904.  goto L2348a8;
  #L234906.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L234908.  call `abortQuietly`(v7, v1) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/DiskLruCache$Editor;)V` @kind direct;
  #L23490e.  goto L2348a8;
  #L234910.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L234912.  goto L2348a8;
  catch `java.io.IOException` @[L23489a..L2348a8] goto L234910;
  catch `java.io.IOException` @[L2348d2..L234902] goto L234906;
}
procedure `int` `readInt`(`okio.BufferedSource` v7 @kind object @name `source`) @signature `Lokhttp3/Cache;.readInt:(Lokio/BufferedSource;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L234940.  call temp:= `readDecimalLong`(v7) @signature `Lokio/BufferedSource;.readDecimalLong:()J` @kind interface;
  #L234946.  v2:= temp @kind wide;
  #L234948.  call temp:= `readUtf8LineStrict`(v7) @signature `Lokio/BufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @kind interface;
  #L23494e.  v1:= temp @kind object;
  #L234950.  v4:= 0L;
  #L234954.  v4:= lcmp(v2, v4);
  #L234958.  if v4 < 0 then goto L234976;
  #L23495c.  v4:= 2147483647L;
  #L234962.  v4:= lcmp(v2, v4);
  #L234966.  if v4 > 0 then goto L234976;
  #L23496a.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L234970.  v4:= temp;
  #L234972.  if v4 != 0 then goto L2349d2;
  #L234976.  v4:= new `java.io.IOException`;
  #L23497a.  v5:= new `java.lang.StringBuilder`;
  #L23497e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L234984.  v6:= "expected an int but was \"" @kind object;
  #L234988.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23498e.  v5:= temp @kind object;
  #L234990.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L234996.  v5:= temp @kind object;
  #L234998.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23499e.  v5:= temp @kind object;
  #L2349a0.  v6:= "\"" @kind object;
  #L2349a4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2349aa.  v5:= temp @kind object;
  #L2349ac.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2349b2.  v5:= temp @kind object;
  #L2349b4.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2349ba.  throw v4;
  #L2349bc.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L2349be.  v4:= new `java.io.IOException`;
  #L2349c2.  call temp:= `getMessage`(v0) @signature `Ljava/lang/NumberFormatException;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L2349c8.  v5:= temp @kind object;
  #L2349ca.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2349d0.  throw v4;
  #L2349d2.  v4:= (`int`) v2 @kind l2i;
  #L2349d4.  return v4;
  catch `java.lang.NumberFormatException` @[L234940..L2349bc] goto L2349bc;
}
procedure `void` `remove`(`okhttp3.Cache` v2 @kind this, `okhttp3.Request` v3 @kind object @name `request`) @signature `Lokhttp3/Cache;.remove:(Lokhttp3/Request;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L2349f8.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2349fc.  call temp:= `urlToKey`(v3) @signature `Lokhttp3/Cache;.urlToKey:(Lokhttp3/Request;)Ljava/lang/String;` @kind static;
  #L234a02.  v1:= temp @kind object;
  #L234a04.  call temp:= `remove`(v0, v1) @signature `Lokhttp3/internal/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L234a0a.  return @kind void;
}
procedure `void` `trackConditionalCacheHit`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.trackConditionalCacheHit:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L234a1c.  @monitorenter v1
  #L234a1e.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #L234a22.  v0:= v0 + 1;
  #L234a26.  v1.`okhttp3.Cache.hitCount` @type ^`int` := v0;
  #L234a2a.  @monitorexit v1
  #L234a2c.  return @kind void;
  #L234a2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234a30.  @monitorexit v1
  #L234a32.  throw v0;
  catch `java.lang.Throwable` @[L234a1e..L234a2a] goto L234a2e;
}
procedure `void` `trackResponse`(`okhttp3.Cache` v1 @kind this, `okhttp3.internal.http.CacheStrategy` v2 @kind object @name `cacheStrategy`) @signature `Lokhttp3/Cache;.trackResponse:(Lokhttp3/internal/http/CacheStrategy;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L234a50.  @monitorenter v1
  #L234a52.  v0:= v1.`okhttp3.Cache.requestCount` @type ^`int`;
  #L234a56.  v0:= v0 + 1;
  #L234a5a.  v1.`okhttp3.Cache.requestCount` @type ^`int` := v0;
  #L234a5e.  v0:= v2.`okhttp3.internal.http.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L234a62.  if v0 == 0 then goto L234a76;
  #L234a66.  v0:= v1.`okhttp3.Cache.networkCount` @type ^`int`;
  #L234a6a.  v0:= v0 + 1;
  #L234a6e.  v1.`okhttp3.Cache.networkCount` @type ^`int` := v0;
  #L234a72.  @monitorexit v1
  #L234a74.  return @kind void;
  #L234a76.  v0:= v2.`okhttp3.internal.http.CacheStrategy.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L234a7a.  if v0 == 0 then goto L234a72;
  #L234a7e.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #L234a82.  v0:= v0 + 1;
  #L234a86.  v1.`okhttp3.Cache.hitCount` @type ^`int` := v0;
  #L234a8a.  goto L234a72;
  #L234a8c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234a8e.  @monitorexit v1
  #L234a90.  throw v0;
  catch `java.lang.Throwable` @[L234a52..L234a72] goto L234a8c;
  catch `java.lang.Throwable` @[L234a76..L234a8a] goto L234a8c;
}
procedure `void` `update`(`okhttp3.Cache` v5 @kind this, `okhttp3.Response` v6 @kind object @name `cached`, `okhttp3.Response` v7 @kind object @name `network`) @signature `Lokhttp3/Cache;.update:(Lokhttp3/Response;Lokhttp3/Response;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L234ab8.  v2:= new `okhttp3.Cache$Entry`;
  #L234abc.  call `<init>`(v2, v7) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokhttp3/Response;)V` @kind direct;
  #L234ac2.  call temp:= `body`(v6) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L234ac8.  v4:= temp @kind object;
  #L234aca.  v4:= (`okhttp3.Cache$CacheResponseBody`) v4 @kind object;
  #L234ace.  call temp:= `access$500`(v4) @signature `Lokhttp3/Cache$CacheResponseBody;.access$500:(Lokhttp3/Cache$CacheResponseBody;)Lokhttp3/internal/DiskLruCache$Snapshot;` @kind static;
  #L234ad4.  v3:= temp @kind object;
  #L234ad6.  v1:= 0I;
  #L234ad8.  call temp:= `edit`(v3) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.edit:()Lokhttp3/internal/DiskLruCache$Editor;` @kind virtual;
  #L234ade.  v1:= temp @kind object;
  #L234ae0.  if v1 == 0 then goto L234af0;
  #L234ae4.  call `writeTo`(v2, v1) @signature `Lokhttp3/Cache$Entry;.writeTo:(Lokhttp3/internal/DiskLruCache$Editor;)V` @kind virtual;
  #L234aea.  call `commit`(v1) @signature `Lokhttp3/internal/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L234af0.  return @kind void;
  #L234af2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L234af4.  call `abortQuietly`(v5, v1) @signature `Lokhttp3/Cache;.abortQuietly:(Lokhttp3/internal/DiskLruCache$Editor;)V` @kind direct;
  #L234afa.  goto L234af0;
  catch `java.io.IOException` @[L234ad8..L234af0] goto L234af2;
}
procedure `java.lang.String` `urlToKey`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/Cache;.urlToKey:(Lokhttp3/Request;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L234b1c.  call temp:= `url`(v1) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L234b22.  v0:= temp @kind object;
  #L234b24.  call temp:= `toString`(v0) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L234b2a.  v0:= temp @kind object;
  #L234b2c.  call temp:= `md5Hex`(v0) @signature `Lokhttp3/internal/Util;.md5Hex:(Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L234b32.  v0:= temp @kind object;
  #L234b34.  return v0 @kind object;
}
procedure `void` `close`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234b48.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234b4c.  call `close`(v0) @signature `Lokhttp3/internal/DiskLruCache;.close:()V` @kind virtual;
  #L234b52.  return @kind void;
}
procedure `void` `delete`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.delete:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234b64.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234b68.  call `delete`(v0) @signature `Lokhttp3/internal/DiskLruCache;.delete:()V` @kind virtual;
  #L234b6e.  return @kind void;
}
procedure `java.io.File` `directory`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.directory:()Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234b80.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234b84.  call temp:= `getDirectory`(v0) @signature `Lokhttp3/internal/DiskLruCache;.getDirectory:()Ljava/io/File;` @kind virtual;
  #L234b8a.  v0:= temp @kind object;
  #L234b8c.  return v0 @kind object;
}
procedure `void` `evictAll`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.evictAll:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234ba0.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234ba4.  call `evictAll`(v0) @signature `Lokhttp3/internal/DiskLruCache;.evictAll:()V` @kind virtual;
  #L234baa.  return @kind void;
}
procedure `void` `flush`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234bbc.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234bc0.  call `flush`(v0) @signature `Lokhttp3/internal/DiskLruCache;.flush:()V` @kind virtual;
  #L234bc6.  return @kind void;
}
procedure `okhttp3.Response` `get`(`okhttp3.Cache` v7 @kind this, `okhttp3.Request` v8 @kind object @name `request`) @signature `Lokhttp3/Cache;.get:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L234bd8.  v5:= 0I;
  #L234bda.  call temp:= `urlToKey`(v8) @signature `Lokhttp3/Cache;.urlToKey:(Lokhttp3/Request;)Ljava/lang/String;` @kind static;
  #L234be0.  v2:= temp @kind object;
  #L234be2.  v6:= v7.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234be6.  call temp:= `get`(v6, v2) @signature `Lokhttp3/internal/DiskLruCache;.get:(Ljava/lang/String;)Lokhttp3/internal/DiskLruCache$Snapshot;` @kind virtual;
  #L234bec.  v4:= temp @kind object;
  #L234bee.  if v4 != 0 then goto L234bfc;
  #L234bf2.  v3:= v5 @kind object;
  #L234bf4.  return v3 @kind object;
  #L234bf6.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L234bf8.  v3:= v5 @kind object;
  #L234bfa.  goto L234bf4;
  #L234bfc.  v1:= new `okhttp3.Cache$Entry`;
  #L234c00.  v6:= 0I;
  #L234c02.  call temp:= `getSource`(v4, v6) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L234c08.  v6:= temp @kind object;
  #L234c0a.  call `<init>`(v1, v6) @signature `Lokhttp3/Cache$Entry;.<init>:(Lokio/Source;)V` @kind direct;
  #L234c10.  call temp:= `response`(v1, v4) @signature `Lokhttp3/Cache$Entry;.response:(Lokhttp3/internal/DiskLruCache$Snapshot;)Lokhttp3/Response;` @kind virtual;
  #L234c16.  v3:= temp @kind object;
  #L234c18.  call temp:= `matches`(v1, v8, v3) @signature `Lokhttp3/Cache$Entry;.matches:(Lokhttp3/Request;Lokhttp3/Response;)Z` @kind virtual;
  #L234c1e.  v6:= temp;
  #L234c20.  if v6 != 0 then goto L234bf4;
  #L234c24.  call temp:= `body`(v3) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L234c2a.  v6:= temp @kind object;
  #L234c2c.  call `closeQuietly`(v6) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L234c32.  v3:= v5 @kind object;
  #L234c34.  goto L234bf4;
  #L234c36.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L234c38.  call `closeQuietly`(v4) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L234c3e.  v3:= v5 @kind object;
  #L234c40.  goto L234bf4;
  catch `java.io.IOException` @[L234be2..L234bec] goto L234bf6;
  catch `java.io.IOException` @[L234bfc..L234c10] goto L234c36;
}
procedure `int` `hitCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.hitCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234c70.  @monitorenter v1
  #L234c72.  v0:= v1.`okhttp3.Cache.hitCount` @type ^`int`;
  #L234c76.  @monitorexit v1
  #L234c78.  return v0;
  #L234c7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234c7c.  @monitorexit v1
  #L234c7e.  throw v0;
  catch `java.lang.Throwable` @[L234c72..L234c76] goto L234c7a;
}
procedure `void` `initialize`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234c9c.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234ca0.  call `initialize`(v0) @signature `Lokhttp3/internal/DiskLruCache;.initialize:()V` @kind virtual;
  #L234ca6.  return @kind void;
}
procedure `boolean` `isClosed`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.isClosed:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234cb8.  v0:= v1.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234cbc.  call temp:= `isClosed`(v0) @signature `Lokhttp3/internal/DiskLruCache;.isClosed:()Z` @kind virtual;
  #L234cc2.  v0:= temp;
  #L234cc4.  return v0;
}
procedure `long` `maxSize`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.maxSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234cd8.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234cdc.  call temp:= `getMaxSize`(v0) @signature `Lokhttp3/internal/DiskLruCache;.getMaxSize:()J` @kind virtual;
  #L234ce2.  v0:= temp @kind wide;
  #L234ce4.  return v0 @kind wide;
}
procedure `int` `networkCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.networkCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234cf8.  @monitorenter v1
  #L234cfa.  v0:= v1.`okhttp3.Cache.networkCount` @type ^`int`;
  #L234cfe.  @monitorexit v1
  #L234d00.  return v0;
  #L234d02.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234d04.  @monitorexit v1
  #L234d06.  throw v0;
  catch `java.lang.Throwable` @[L234cfa..L234cfe] goto L234d02;
}
procedure `int` `requestCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.requestCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234d24.  @monitorenter v1
  #L234d26.  v0:= v1.`okhttp3.Cache.requestCount` @type ^`int`;
  #L234d2a.  @monitorexit v1
  #L234d2c.  return v0;
  #L234d2e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234d30.  @monitorexit v1
  #L234d32.  throw v0;
  catch `java.lang.Throwable` @[L234d26..L234d2a] goto L234d2e;
}
procedure `long` `size`(`okhttp3.Cache` v2 @kind this) @signature `Lokhttp3/Cache;.size:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L234d50.  v0:= v2.`okhttp3.Cache.cache` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L234d54.  call temp:= `size`(v0) @signature `Lokhttp3/internal/DiskLruCache;.size:()J` @kind virtual;
  #L234d5a.  v0:= temp @kind wide;
  #L234d5c.  return v0 @kind wide;
}
procedure `java.util.Iterator` `urls`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.urls:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234d70.  v0:= new `okhttp3.Cache$2`;
  #L234d74.  call `<init>`(v0, v1) @signature `Lokhttp3/Cache$2;.<init>:(Lokhttp3/Cache;)V` @kind direct;
  #L234d7a.  return v0 @kind object;
}
procedure `int` `writeAbortCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeAbortCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234d8c.  @monitorenter v1
  #L234d8e.  v0:= v1.`okhttp3.Cache.writeAbortCount` @type ^`int`;
  #L234d92.  @monitorexit v1
  #L234d94.  return v0;
  #L234d96.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234d98.  @monitorexit v1
  #L234d9a.  throw v0;
  catch `java.lang.Throwable` @[L234d8e..L234d92] goto L234d96;
}
procedure `int` `writeSuccessCount`(`okhttp3.Cache` v1 @kind this) @signature `Lokhttp3/Cache;.writeSuccessCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L234db8.  @monitorenter v1
  #L234dba.  v0:= v1.`okhttp3.Cache.writeSuccessCount` @type ^`int`;
  #L234dbe.  @monitorexit v1
  #L234dc0.  return v0;
  #L234dc2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L234dc4.  @monitorexit v1
  #L234dc6.  throw v0;
  catch `java.lang.Throwable` @[L234dba..L234dbe] goto L234dc2;
}
