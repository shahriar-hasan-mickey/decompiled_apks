record `okhttp3.Cache$CacheResponseBody` @kind class @AccessFlag  extends `okhttp3.ResponseBody` @kind class {
  `okio.BufferedSource` `okhttp3.Cache$CacheResponseBody.bodySource` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentLength` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `okhttp3.Cache$CacheResponseBody.contentType` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.DiskLruCache$Snapshot` `okhttp3.Cache$CacheResponseBody.snapshot` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheResponseBody` v2 @kind this, `okhttp3.internal.DiskLruCache$Snapshot` v3 @kind object @name `snapshot`, `java.lang.String` v4 @kind object @name `contentType`, `java.lang.String` v5 @kind object @name `contentLength`) @signature `Lokhttp3/Cache$CacheResponseBody;.<init>:(Lokhttp3/internal/DiskLruCache$Snapshot;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30778c.  call `<init>`(v2) @signature `Lokhttp3/ResponseBody;.<init>:()V` @kind direct;
  #L307792.  v2.`okhttp3.Cache$CacheResponseBody.snapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v3 @kind object;
  #L307796.  v2.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` := v4 @kind object;
  #L30779a.  v2.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` := v5 @kind object;
  #L30779e.  v1:= 1I;
  #L3077a0.  call temp:= `getSource`(v3, v1) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.getSource:(I)Lokio/Source;` @kind virtual;
  #L3077a6.  v0:= temp @kind object;
  #L3077a8.  v1:= new `okhttp3.Cache$CacheResponseBody$1`;
  #L3077ac.  call `<init>`(v1, v2, v0, v3) @signature `Lokhttp3/Cache$CacheResponseBody$1;.<init>:(Lokhttp3/Cache$CacheResponseBody;Lokio/Source;Lokhttp3/internal/DiskLruCache$Snapshot;)V` @kind direct;
  #L3077b2.  call temp:= `buffer`(v1) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L3077b8.  v1:= temp @kind object;
  #L3077ba.  v2.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` := v1 @kind object;
  #L3077be.  return @kind void;
}
procedure `okhttp3.internal.DiskLruCache$Snapshot` `access$500`(`okhttp3.Cache$CacheResponseBody` v1 @kind object @name `x0`) @signature `Lokhttp3/Cache$CacheResponseBody;.access$500:(Lokhttp3/Cache$CacheResponseBody;)Lokhttp3/internal/DiskLruCache$Snapshot;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L3077d0.  v0:= v1.`okhttp3.Cache$CacheResponseBody.snapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L3077d4.  return v0 @kind object;
}
procedure `long` `contentLength`(`okhttp3.Cache$CacheResponseBody` v4 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3077e8.  v2:= -1L;
  #L3077ec.  v1:= v4.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L3077f0.  if v1 == 0 then goto L307800;
  #L3077f4.  v1:= v4.`okhttp3.Cache$CacheResponseBody.contentLength` @type ^`java.lang.String` @kind object;
  #L3077f8.  call temp:= `parseLong`(v1) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L3077fe.  v2:= temp @kind wide;
  #L307800.  return v2 @kind wide;
  #L307802.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L307804.  goto L307800;
  catch `java.lang.NumberFormatException` @[L3077ec..L3077fe] goto L307802;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307828.  v0:= v1.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` @kind object;
  #L30782c.  if v0 == 0 then goto L30783e;
  #L307830.  v0:= v1.`okhttp3.Cache$CacheResponseBody.contentType` @type ^`java.lang.String` @kind object;
  #L307834.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L30783a.  v0:= temp @kind object;
  #L30783c.  return v0 @kind object;
  #L30783e.  v0:= 0I;
  #L307840.  goto L30783c;
}
procedure `okio.BufferedSource` `source`(`okhttp3.Cache$CacheResponseBody` v1 @kind this) @signature `Lokhttp3/Cache$CacheResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307854.  v0:= v1.`okhttp3.Cache$CacheResponseBody.bodySource` @type ^`okio.BufferedSource` @kind object;
  #L307858.  return v0 @kind object;
}
