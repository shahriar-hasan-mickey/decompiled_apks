record `okhttp3.HttpUrl$1` @kind class @AccessFlag SYNTHETIC {
}
global `int`[] `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/HttpUrl$1;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L23a770.  call temp:= `values`() @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.values:()[Lokhttp3/HttpUrl$Builder$ParseResult;` @kind static;
  #L23a776.  v0:= temp @kind object;
  #L23a778.  v0:= length @variable v0;
  #L23a77a.  v0:= new `int`[v0];
  #L23a77e.  `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] := v0 @kind object;
  #L23a782.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L23a786.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.SUCCESS` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a78a.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L23a790.  v1:= temp;
  #L23a792.  v2:= 1I;
  #L23a794.  v0[v1]:= v2;
  #L23a798.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L23a79c.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_HOST` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a7a0.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L23a7a6.  v1:= temp;
  #L23a7a8.  v2:= 2I;
  #L23a7aa.  v0[v1]:= v2;
  #L23a7ae.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L23a7b2.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.UNSUPPORTED_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a7b6.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L23a7bc.  v1:= temp;
  #L23a7be.  v2:= 3I;
  #L23a7c0.  v0[v1]:= v2;
  #L23a7c4.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L23a7c8.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.MISSING_SCHEME` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a7cc.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L23a7d2.  v1:= temp;
  #L23a7d4.  v2:= 4I;
  #L23a7d6.  v0[v1]:= v2;
  #L23a7da.  v0:= `@@okhttp3.HttpUrl$1.$SwitchMap$okhttp3$HttpUrl$Builder$ParseResult` @type ^`int`[] @kind object;
  #L23a7de.  v1:= `@@okhttp3.HttpUrl$Builder$ParseResult.INVALID_PORT` @type ^`okhttp3.HttpUrl$Builder$ParseResult` @kind object;
  #L23a7e2.  call temp:= `ordinal`(v1) @signature `Lokhttp3/HttpUrl$Builder$ParseResult;.ordinal:()I` @kind virtual;
  #L23a7e8.  v1:= temp;
  #L23a7ea.  v2:= 5I;
  #L23a7ec.  v0[v1]:= v2;
  #L23a7f0.  return @kind void;
  #L23a7f2.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L23a7f4.  goto L23a7f0;
  #L23a7f6.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L23a7f8.  goto L23a7da;
  #L23a7fa.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L23a7fc.  goto L23a7c4;
  #L23a7fe.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L23a800.  goto L23a7ae;
  #L23a802.  v0:= Exception @type ^`java.lang.NoSuchFieldError` @kind object;
  #L23a804.  goto L23a798;
  catch `java.lang.NoSuchFieldError` @[L23a782..L23a798] goto L23a802;
  catch `java.lang.NoSuchFieldError` @[L23a798..L23a7ae] goto L23a7fe;
  catch `java.lang.NoSuchFieldError` @[L23a7ae..L23a7c4] goto L23a7fa;
  catch `java.lang.NoSuchFieldError` @[L23a7c4..L23a7da] goto L23a7f6;
  catch `java.lang.NoSuchFieldError` @[L23a7da..L23a7f0] goto L23a7f2;
}
