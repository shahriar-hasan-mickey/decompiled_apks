record `okhttp3.FormBody` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.RequestBody` @kind class {
  `java.util.List` `okhttp3.FormBody.encodedNames` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `okhttp3.FormBody.encodedValues` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.MediaType` `@@okhttp3.FormBody.CONTENT_TYPE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/FormBody;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L307904.  v0:= "application/x-www-form-urlencoded" @kind object;
  #L307908.  call temp:= `parse`(v0) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L30790e.  v0:= temp @kind object;
  #L307910.  `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` := v0 @kind object;
  #L307914.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v1 @kind this, `java.util.List` v2 @kind object, `java.util.List` v3 @kind object) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L307928.  call `<init>`(v1) @signature `Lokhttp3/RequestBody;.<init>:()V` @kind direct;
  #L30792e.  call temp:= `immutableList`(v2) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L307934.  v0:= temp @kind object;
  #L307936.  v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` := v0 @kind object;
  #L30793a.  call temp:= `immutableList`(v3) @signature `Lokhttp3/internal/Util;.immutableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L307940.  v0:= temp @kind object;
  #L307942.  v1.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` := v0 @kind object;
  #L307946.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.FormBody` v0 @kind this, `java.util.List` v1 @kind object @name `x0`, `java.util.List` v2 @kind object @name `x1`, `okhttp3.FormBody$1` v3 @kind object @name `x2`) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;Lokhttp3/FormBody$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L307958.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/FormBody;.<init>:(Ljava/util/List;Ljava/util/List;)V` @kind direct;
  #L30795e.  return @kind void;
}
procedure `long` `writeOrCountBytes`(`okhttp3.FormBody` v6 @kind this, `okio.BufferedSink` v7 @kind object @name `sink`, `boolean` v8 @name `countBytes`) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L307970.  v2:= 0L;
  #L307974.  if v8 == 0 then goto L3079de;
  #L307978.  v0:= new `okio.Buffer`;
  #L30797c.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L307982.  v1:= 0I;
  #L307984.  v5:= v6.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L307988.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30798e.  v4:= temp;
  #L307990.  if v1 >= v4 then goto L3079e8;
  #L307994.  if v1 <= 0 then goto L3079a2;
  #L307998.  v5:= 38I;
  #L30799c.  call temp:= `writeByte`(v0, v5) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L3079a2.  v5:= v6.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L3079a6.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3079ac.  v5:= temp @kind object;
  #L3079ae.  v5:= (`java.lang.String`) v5 @kind object;
  #L3079b2.  call temp:= `writeUtf8`(v0, v5) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L3079b8.  v5:= 61I;
  #L3079bc.  call temp:= `writeByte`(v0, v5) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L3079c2.  v5:= v6.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L3079c6.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3079cc.  v5:= temp @kind object;
  #L3079ce.  v5:= (`java.lang.String`) v5 @kind object;
  #L3079d2.  call temp:= `writeUtf8`(v0, v5) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L3079d8.  v1:= v1 + 1;
  #L3079dc.  goto L307990;
  #L3079de.  call temp:= `buffer`(v7) @signature `Lokio/BufferedSink;.buffer:()Lokio/Buffer;` @kind interface;
  #L3079e4.  v0:= temp @kind object;
  #L3079e6.  goto L307982;
  #L3079e8.  if v8 == 0 then goto L3079fa;
  #L3079ec.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3079f2.  v2:= temp @kind wide;
  #L3079f4.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L3079fa.  return v2 @kind wide;
}
procedure `long` `contentLength`(`okhttp3.FormBody` v2 @kind this) @signature `Lokhttp3/FormBody;.contentLength:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307a0c.  v0:= 0I;
  #L307a0e.  v1:= 1I;
  #L307a10.  call temp:= `writeOrCountBytes`(v2, v0, v1) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L307a16.  v0:= temp @kind wide;
  #L307a18.  return v0 @kind wide;
}
procedure `okhttp3.MediaType` `contentType`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307a2c.  v0:= `@@okhttp3.FormBody.CONTENT_TYPE` @type ^`okhttp3.MediaType` @kind object;
  #L307a30.  return v0 @kind object;
}
procedure `java.lang.String` `encodedName`(`okhttp3.FormBody` v1 @kind this, `int` v2 @name `index`) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307a44.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L307a48.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L307a4e.  v0:= temp @kind object;
  #L307a50.  v0:= (`java.lang.String`) v0 @kind object;
  #L307a54.  return v0 @kind object;
}
procedure `java.lang.String` `encodedValue`(`okhttp3.FormBody` v1 @kind this, `int` v2 @name `index`) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307a68.  v0:= v1.`okhttp3.FormBody.encodedValues` @type ^`java.util.List` @kind object;
  #L307a6c.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L307a72.  v0:= temp @kind object;
  #L307a74.  v0:= (`java.lang.String`) v0 @kind object;
  #L307a78.  return v0 @kind object;
}
procedure `java.lang.String` `name`(`okhttp3.FormBody` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/FormBody;.name:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307a8c.  call temp:= `encodedName`(v2, v3) @signature `Lokhttp3/FormBody;.encodedName:(I)Ljava/lang/String;` @kind virtual;
  #L307a92.  v0:= temp @kind object;
  #L307a94.  v1:= 1I;
  #L307a96.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L307a9c.  v0:= temp @kind object;
  #L307a9e.  return v0 @kind object;
}
procedure `int` `size`(`okhttp3.FormBody` v1 @kind this) @signature `Lokhttp3/FormBody;.size:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307ab0.  v0:= v1.`okhttp3.FormBody.encodedNames` @type ^`java.util.List` @kind object;
  #L307ab4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L307aba.  v0:= temp;
  #L307abc.  return v0;
}
procedure `java.lang.String` `value`(`okhttp3.FormBody` v2 @kind this, `int` v3 @name `index`) @signature `Lokhttp3/FormBody;.value:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L307ad0.  call temp:= `encodedValue`(v2, v3) @signature `Lokhttp3/FormBody;.encodedValue:(I)Ljava/lang/String;` @kind virtual;
  #L307ad6.  v0:= temp @kind object;
  #L307ad8.  v1:= 1I;
  #L307ada.  call temp:= `percentDecode`(v0, v1) @signature `Lokhttp3/HttpUrl;.percentDecode:(Ljava/lang/String;Z)Ljava/lang/String;` @kind static;
  #L307ae0.  v0:= temp @kind object;
  #L307ae2.  return v0 @kind object;
}
procedure `void` `writeTo`(`okhttp3.FormBody` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`) @signature `Lokhttp3/FormBody;.writeTo:(Lokio/BufferedSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L307af4.  v0:= 0I;
  #L307af6.  call temp:= `writeOrCountBytes`(v1, v2, v0) @signature `Lokhttp3/FormBody;.writeOrCountBytes:(Lokio/BufferedSink;Z)J` @kind direct;
  #L307afc.  return @kind void;
}
