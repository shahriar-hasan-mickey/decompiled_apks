record `okhttp3.ResponseBody` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.io.Closeable` @kind interface {
  `java.io.Reader` `okhttp3.ResponseBody.reader` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.ResponseBody` v0 @kind this) @signature `Lokhttp3/ResponseBody;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L23f584.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23f58a.  return @kind void;
}
procedure `java.nio.charset.Charset` `charset`(`okhttp3.ResponseBody` v2 @kind this) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L23f59c.  call temp:= `contentType`(v2) @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @kind virtual;
  #L23f5a2.  v0:= temp @kind object;
  #L23f5a4.  if v0 == 0 then goto L23f5b6;
  #L23f5a8.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L23f5ac.  call temp:= `charset`(v0, v1) @signature `Lokhttp3/MediaType;.charset:(Ljava/nio/charset/Charset;)Ljava/nio/charset/Charset;` @kind virtual;
  #L23f5b2.  v1:= temp @kind object;
  #L23f5b4.  return v1 @kind object;
  #L23f5b6.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L23f5ba.  goto L23f5b4;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v3 @kind object @name `contentType`, `long` v4 @name `contentLength`, `okio.BufferedSource` v6 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L23f5cc.  if v6 != 0 then goto L23f5e0;
  #L23f5d0.  v0:= new `java.lang.NullPointerException`;
  #L23f5d4.  v1:= "source == null" @kind object;
  #L23f5d8.  call `<init>`(v0, v1) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f5de.  throw v0;
  #L23f5e0.  v0:= new `okhttp3.ResponseBody$1`;
  #L23f5e4.  call `<init>`(v0, v3, v4, v6) @signature `Lokhttp3/ResponseBody$1;.<init>:(Lokhttp3/MediaType;JLokio/BufferedSource;)V` @kind direct;
  #L23f5ea.  return v0 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v4 @kind object @name `contentType`, `java.lang.String` v5 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;Ljava/lang/String;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23f5fc.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L23f600.  if v4 == 0 then goto L23f642;
  #L23f604.  call temp:= `charset`(v4) @signature `Lokhttp3/MediaType;.charset:()Ljava/nio/charset/Charset;` @kind virtual;
  #L23f60a.  v1:= temp @kind object;
  #L23f60c.  if v1 != 0 then goto L23f642;
  #L23f610.  v1:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L23f614.  v2:= new `java.lang.StringBuilder`;
  #L23f618.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23f61e.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f624.  v2:= temp @kind object;
  #L23f626.  v3:= "; charset=utf-8" @kind object;
  #L23f62a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f630.  v2:= temp @kind object;
  #L23f632.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23f638.  v2:= temp @kind object;
  #L23f63a.  call temp:= `parse`(v2) @signature `Lokhttp3/MediaType;.parse:(Ljava/lang/String;)Lokhttp3/MediaType;` @kind static;
  #L23f640.  v4:= temp @kind object;
  #L23f642.  v2:= new `okio.Buffer`;
  #L23f646.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L23f64c.  call temp:= `writeString`(v2, v5, v1) @signature `Lokio/Buffer;.writeString:(Ljava/lang/String;Ljava/nio/charset/Charset;)Lokio/Buffer;` @kind virtual;
  #L23f652.  v0:= temp @kind object;
  #L23f654.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L23f65a.  v2:= temp @kind wide;
  #L23f65c.  call temp:= `create`(v4, v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L23f662.  v2:= temp @kind object;
  #L23f664.  return v2 @kind object;
}
procedure `okhttp3.ResponseBody` `create`(`okhttp3.MediaType` v4 @kind object @name `contentType`, `byte`[] v5 @kind object @name `content`) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;[B)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L23f678.  v1:= new `okio.Buffer`;
  #L23f67c.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L23f682.  call temp:= `write`(v1, v5) @signature `Lokio/Buffer;.write:([B)Lokio/Buffer;` @kind virtual;
  #L23f688.  v0:= temp @kind object;
  #L23f68a.  v1:= length @variable v5;
  #L23f68c.  v2:= (`long`) v1 @kind i2l;
  #L23f68e.  call temp:= `create`(v4, v2, v0) @signature `Lokhttp3/ResponseBody;.create:(Lokhttp3/MediaType;JLokio/BufferedSource;)Lokhttp3/ResponseBody;` @kind static;
  #L23f694.  v1:= temp @kind object;
  #L23f696.  return v1 @kind object;
}
procedure `java.io.InputStream` `byteStream`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L23f6a8.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L23f6ae.  v0:= temp @kind object;
  #L23f6b0.  call temp:= `inputStream`(v0) @signature `Lokio/BufferedSource;.inputStream:()Ljava/io/InputStream;` @kind interface;
  #L23f6b6.  v0:= temp @kind object;
  #L23f6b8.  return v0 @kind object;
}
procedure `byte`[] `bytes`(`okhttp3.ResponseBody` v7 @kind this) @signature `Lokhttp3/ResponseBody;.bytes:()[B` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L23f6cc.  call temp:= `contentLength`(v7) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L23f6d2.  v2:= temp @kind wide;
  #L23f6d4.  v4:= 2147483647L;
  #L23f6da.  v4:= lcmp(v2, v4);
  #L23f6de.  if v4 <= 0 then goto L23f714;
  #L23f6e2.  v4:= new `java.io.IOException`;
  #L23f6e6.  v5:= new `java.lang.StringBuilder`;
  #L23f6ea.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L23f6f0.  v6:= "Cannot buffer entire body for content length: " @kind object;
  #L23f6f4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f6fa.  v5:= temp @kind object;
  #L23f6fc.  call temp:= `append`(v5, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L23f702.  v5:= temp @kind object;
  #L23f704.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L23f70a.  v5:= temp @kind object;
  #L23f70c.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f712.  throw v4;
  #L23f714.  call temp:= `source`(v7) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L23f71a.  v1:= temp @kind object;
  #L23f71c.  call temp:= `readByteArray`(v1) @signature `Lokio/BufferedSource;.readByteArray:()[B` @kind interface;
  #L23f722.  v0:= temp @kind object;
  #L23f724.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L23f72a.  v4:= -1L;
  #L23f72e.  v4:= lcmp(v2, v4);
  #L23f732.  if v4 == 0 then goto L23f75c;
  #L23f736.  v4:= length @variable v0;
  #L23f738.  v4:= (`long`) v4 @kind i2l;
  #L23f73a.  v4:= lcmp(v2, v4);
  #L23f73e.  if v4 == 0 then goto L23f75c;
  #L23f742.  v4:= new `java.io.IOException`;
  #L23f746.  v5:= "Content-Length and stream length disagree" @kind object;
  #L23f74a.  call `<init>`(v4, v5) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23f750.  throw v4;
  #L23f752.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23f754.  call `closeQuietly`(v1) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L23f75a.  throw v4;
  #L23f75c.  return v0 @kind object;
  catch `java.lang.Throwable` @[L23f71c..L23f722] goto L23f752;
}
procedure `java.io.Reader` `charStream`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.charStream:()Ljava/io/Reader;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23f77c.  v0:= v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` @kind object;
  #L23f780.  if v0 == 0 then goto L23f786;
  #L23f784.  return v0 @kind object;
  #L23f786.  v0:= new `java.io.InputStreamReader`;
  #L23f78a.  call temp:= `byteStream`(v3) @signature `Lokhttp3/ResponseBody;.byteStream:()Ljava/io/InputStream;` @kind virtual;
  #L23f790.  v1:= temp @kind object;
  #L23f792.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L23f798.  v2:= temp @kind object;
  #L23f79a.  call `<init>`(v0, v1, v2) @signature `Ljava/io/InputStreamReader;.<init>:(Ljava/io/InputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L23f7a0.  v3.`okhttp3.ResponseBody.reader` @type ^`java.io.Reader` := v0 @kind object;
  #L23f7a4.  goto L23f784;
}
procedure `void` `close`(`okhttp3.ResponseBody` v1 @kind this) @signature `Lokhttp3/ResponseBody;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23f7b8.  call temp:= `source`(v1) @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @kind virtual;
  #L23f7be.  v0:= temp @kind object;
  #L23f7c0.  call `closeQuietly`(v0) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L23f7c6.  return @kind void;
}
procedure `long` `contentLength`() @signature `Lokhttp3/ResponseBody;.contentLength:()J` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.MediaType` `contentType`() @signature `Lokhttp3/ResponseBody;.contentType:()Lokhttp3/MediaType;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okio.BufferedSource` `source`() @signature `Lokhttp3/ResponseBody;.source:()Lokio/BufferedSource;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.lang.String` `string`(`okhttp3.ResponseBody` v3 @kind this) @signature `Lokhttp3/ResponseBody;.string:()Ljava/lang/String;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L23f7d8.  v0:= new `java.lang.String`;
  #L23f7dc.  call temp:= `bytes`(v3) @signature `Lokhttp3/ResponseBody;.bytes:()[B` @kind virtual;
  #L23f7e2.  v1:= temp @kind object;
  #L23f7e4.  call temp:= `charset`(v3) @signature `Lokhttp3/ResponseBody;.charset:()Ljava/nio/charset/Charset;` @kind direct;
  #L23f7ea.  v2:= temp @kind object;
  #L23f7ec.  call temp:= `name`(v2) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L23f7f2.  v2:= temp @kind object;
  #L23f7f4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L23f7fa.  return v0 @kind object;
}
