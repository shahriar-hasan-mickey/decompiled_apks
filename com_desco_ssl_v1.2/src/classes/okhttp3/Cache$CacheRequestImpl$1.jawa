record `okhttp3.Cache$CacheRequestImpl$1` @kind class @AccessFlag  extends `okio.ForwardingSink` @kind class {
  `okhttp3.Cache$CacheRequestImpl` `okhttp3.Cache$CacheRequestImpl$1.this$1` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.DiskLruCache$Editor` `okhttp3.Cache$CacheRequestImpl$1.val$editor` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.Cache` `okhttp3.Cache$CacheRequestImpl$1.val$this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.Cache$CacheRequestImpl$1` v0 @kind this, `okhttp3.Cache$CacheRequestImpl` v1 @kind object @name `this$1`, `okio.Sink` v2 @kind object @name `x0`, `okhttp3.Cache` v3 @kind object, `okhttp3.internal.DiskLruCache$Editor` v4 @kind object) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.<init>:(Lokhttp3/Cache$CacheRequestImpl;Lokio/Sink;Lokhttp3/Cache;Lokhttp3/internal/DiskLruCache$Editor;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L350e7c.  v0.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` := v1 @kind object;
  #L350e80.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$this$0` @type ^`okhttp3.Cache` := v3 @kind object;
  #L350e84.  v0.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.DiskLruCache$Editor` := v4 @kind object;
  #L350e88.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L350e8e.  return @kind void;
}
procedure `void` `close`(`okhttp3.Cache$CacheRequestImpl$1` v3 @kind this) @signature `Lokhttp3/Cache$CacheRequestImpl$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L350ea0.  v0:= v3.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L350ea4.  v1:= v0.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L350ea8.  @monitorenter v1
  #L350eaa.  v0:= v3.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L350eae.  call temp:= `access$700`(v0) @signature `Lokhttp3/Cache$CacheRequestImpl;.access$700:(Lokhttp3/Cache$CacheRequestImpl;)Z` @kind static;
  #L350eb4.  v0:= temp;
  #L350eb6.  if v0 == 0 then goto L350ebe;
  #L350eba.  @monitorexit v1
  #L350ebc.  return @kind void;
  #L350ebe.  v0:= v3.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L350ec2.  v2:= 1I;
  #L350ec4.  call temp:= `access$702`(v0, v2) @signature `Lokhttp3/Cache$CacheRequestImpl;.access$702:(Lokhttp3/Cache$CacheRequestImpl;Z)Z` @kind static;
  #L350eca.  v0:= v3.`okhttp3.Cache$CacheRequestImpl$1.this$1` @type ^`okhttp3.Cache$CacheRequestImpl` @kind object;
  #L350ece.  v0:= v0.`okhttp3.Cache$CacheRequestImpl.this$0` @type ^`okhttp3.Cache` @kind object;
  #L350ed2.  call temp:= `access$808`(v0) @signature `Lokhttp3/Cache;.access$808:(Lokhttp3/Cache;)I` @kind static;
  #L350ed8.  @monitorexit v1
  #L350eda.  call `close`(v3) @signature `Lokio/ForwardingSink;.close:()V` @kind super;
  #L350ee0.  v0:= v3.`okhttp3.Cache$CacheRequestImpl$1.val$editor` @type ^`okhttp3.internal.DiskLruCache$Editor` @kind object;
  #L350ee4.  call `commit`(v0) @signature `Lokhttp3/internal/DiskLruCache$Editor;.commit:()V` @kind virtual;
  #L350eea.  goto L350ebc;
  #L350eec.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L350eee.  @monitorexit v1
  #L350ef0.  throw v0;
  catch `java.lang.Throwable` @[L350eaa..L350eda] goto L350eec;
  catch `java.lang.Throwable` @[L350eee..L350ef0] goto L350eec;
}
