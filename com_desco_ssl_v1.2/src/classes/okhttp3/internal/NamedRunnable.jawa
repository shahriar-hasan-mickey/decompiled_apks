record `okhttp3.internal.NamedRunnable` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Runnable` @kind interface {
  `java.lang.String` `okhttp3.internal.NamedRunnable.name` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.NamedRunnable` v1 @kind this, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L241f54.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L241f5a.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L241f60.  v0:= temp @kind object;
  #L241f62.  v1.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` := v0 @kind object;
  #L241f66.  return @kind void;
}
procedure `void` `execute`() @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `void` `run`(`okhttp3.internal.NamedRunnable` v3 @kind this) @signature `Lokhttp3/internal/NamedRunnable;.run:()V` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L241f78.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L241f7e.  v1:= temp @kind object;
  #L241f80.  call temp:= `getName`(v1) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L241f86.  v0:= temp @kind object;
  #L241f88.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L241f8e.  v1:= temp @kind object;
  #L241f90.  v2:= v3.`okhttp3.internal.NamedRunnable.name` @type ^`java.lang.String` @kind object;
  #L241f94.  call `setName`(v1, v2) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L241f9a.  call `execute`(v3) @signature `Lokhttp3/internal/NamedRunnable;.execute:()V` @kind virtual;
  #L241fa0.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L241fa6.  v1:= temp @kind object;
  #L241fa8.  call `setName`(v1, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L241fae.  return @kind void;
  #L241fb0.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L241fb2.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L241fb8.  v2:= temp @kind object;
  #L241fba.  call `setName`(v2, v0) @signature `Ljava/lang/Thread;.setName:(Ljava/lang/String;)V` @kind virtual;
  #L241fc0.  throw v1;
  catch `java.lang.Throwable` @[L241f9a..L241fa0] goto L241fb0;
}
