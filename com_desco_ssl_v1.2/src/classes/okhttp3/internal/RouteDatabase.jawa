record `okhttp3.internal.RouteDatabase` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Set` `okhttp3.internal.RouteDatabase.failedRoutes` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/RouteDatabase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2425c4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2425ca.  v0:= new `java.util.LinkedHashSet`;
  #L2425ce.  call `<init>`(v0) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L2425d4.  v1.`okhttp3.internal.RouteDatabase.failedRoutes` @type ^`java.util.Set` := v0 @kind object;
  #L2425d8.  return @kind void;
}
procedure `void` `connected`(`okhttp3.internal.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/RouteDatabase;.connected:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2425ec.  @monitorenter v1
  #L2425ee.  v0:= v1.`okhttp3.internal.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L2425f2.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2425f8.  @monitorexit v1
  #L2425fa.  return @kind void;
  #L2425fc.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2425fe.  @monitorexit v1
  #L242600.  throw v0;
  catch `java.lang.Throwable` @[L2425ee..L2425f8] goto L2425fc;
}
procedure `void` `failed`(`okhttp3.internal.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `failedRoute`) @signature `Lokhttp3/internal/RouteDatabase;.failed:(Lokhttp3/Route;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L242620.  @monitorenter v1
  #L242622.  v0:= v1.`okhttp3.internal.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L242626.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24262c.  @monitorexit v1
  #L24262e.  return @kind void;
  #L242630.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L242632.  @monitorexit v1
  #L242634.  throw v0;
  catch `java.lang.Throwable` @[L242622..L24262c] goto L242630;
}
procedure `int` `failedRoutesCount`(`okhttp3.internal.RouteDatabase` v1 @kind this) @signature `Lokhttp3/internal/RouteDatabase;.failedRoutesCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L242654.  @monitorenter v1
  #L242656.  v0:= v1.`okhttp3.internal.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L24265a.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L242660.  v0:= temp;
  #L242662.  @monitorexit v1
  #L242664.  return v0;
  #L242666.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L242668.  @monitorexit v1
  #L24266a.  throw v0;
  catch `java.lang.Throwable` @[L242656..L242660] goto L242666;
}
procedure `boolean` `shouldPostpone`(`okhttp3.internal.RouteDatabase` v1 @kind this, `okhttp3.Route` v2 @kind object @name `route`) @signature `Lokhttp3/internal/RouteDatabase;.shouldPostpone:(Lokhttp3/Route;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L242688.  @monitorenter v1
  #L24268a.  v0:= v1.`okhttp3.internal.RouteDatabase.failedRoutes` @type ^`java.util.Set` @kind object;
  #L24268e.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L242694.  v0:= temp;
  #L242696.  @monitorexit v1
  #L242698.  return v0;
  #L24269a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24269c.  @monitorexit v1
  #L24269e.  throw v0;
  catch `java.lang.Throwable` @[L24268a..L242694] goto L24269a;
}
