record `okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex` @kind class @AccessFlag FINAL extends `okhttp3.internal.tls.TrustRootIndex` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.findByIssuerAndSignatureMethod` @AccessFlag PRIVATE_FINAL;
  `javax.net.ssl.X509TrustManager` `okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.trustManager` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex` v0 @kind this, `javax.net.ssl.X509TrustManager` v1 @kind object @name `trustManager`, `java.lang.reflect.Method` v2 @kind object @name `findByIssuerAndSignatureMethod`) @signature `Lokhttp3/internal/tls/TrustRootIndex$AndroidTrustRootIndex;.<init>:(Ljavax/net/ssl/X509TrustManager;Ljava/lang/reflect/Method;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L310704.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/TrustRootIndex;.<init>:()V` @kind direct;
  #L31070a.  v0.`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.findByIssuerAndSignatureMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L31070e.  v0.`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.trustManager` @type ^`javax.net.ssl.X509TrustManager` := v1 @kind object;
  #L310712.  return @kind void;
}
procedure `java.security.cert.X509Certificate` `findByIssuerAndSignature`(`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex` v7 @kind this, `java.security.cert.X509Certificate` v8 @kind object @name `cert`) @signature `Lokhttp3/internal/tls/TrustRootIndex$AndroidTrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L310724.  v2:= 0I;
  #L310726.  v3:= v7.`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.findByIssuerAndSignatureMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L31072a.  v4:= v7.`okhttp3.internal.tls.TrustRootIndex$AndroidTrustRootIndex.trustManager` @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L31072e.  v5:= 1I;
  #L310730.  v5:= new `java.lang.Object`[v5];
  #L310734.  v6:= 0I;
  #L310736.  v5[v6]:= v8 @kind object;
  #L31073a.  call temp:= `invoke`(v3, v4, v5) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L310740.  v1:= temp @kind object;
  #L310742.  v1:= (`java.security.cert.TrustAnchor`) v1 @kind object;
  #L310746.  if v1 == 0 then goto L310752;
  #L31074a.  call temp:= `getTrustedCert`(v1) @signature `Ljava/security/cert/TrustAnchor;.getTrustedCert:()Ljava/security/cert/X509Certificate;` @kind virtual;
  #L310750.  v2:= temp @kind object;
  #L310752.  return v2 @kind object;
  #L310754.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L310756.  v2:= new `java.lang.AssertionError`;
  #L31075a.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L310760.  throw v2;
  #L310762.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L310764.  goto L310752;
  catch `java.lang.IllegalAccessException` @[L310726..L310750] goto L310754;
  catch `java.lang.reflect.InvocationTargetException` @[L310726..L310750] goto L310762;
}
