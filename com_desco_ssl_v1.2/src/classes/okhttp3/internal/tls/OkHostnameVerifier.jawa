record `okhttp3.internal.tls.OkHostnameVerifier` @kind class @AccessFlag PUBLIC_FINAL extends `javax.net.ssl.HostnameVerifier` @kind interface {
}
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_DNS_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.tls.OkHostnameVerifier.ALT_IPA_NAME` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.tls.OkHostnameVerifier` `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L24c168.  v0:= new `okhttp3.internal.tls.OkHostnameVerifier`;
  #L24c16c.  call `<init>`(v0) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @kind direct;
  #L24c172.  `@@okhttp3.internal.tls.OkHostnameVerifier.INSTANCE` @type ^`okhttp3.internal.tls.OkHostnameVerifier` := v0 @kind object;
  #L24c176.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.tls.OkHostnameVerifier` v0 @kind this) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24c188.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c18e.  return @kind void;
}
procedure `java.util.List` `allSubjectAltNames`(`java.security.cert.X509Certificate` v5 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.allSubjectAltNames:(Ljava/security/cert/X509Certificate;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L24c1a0.  v3:= 7I;
  #L24c1a2.  call temp:= `getSubjectAltNames`(v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L24c1a8.  v1:= temp @kind object;
  #L24c1aa.  v3:= 2I;
  #L24c1ac.  call temp:= `getSubjectAltNames`(v5, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L24c1b2.  v0:= temp @kind object;
  #L24c1b4.  v2:= new `java.util.ArrayList`;
  #L24c1b8.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c1be.  v3:= temp;
  #L24c1c0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c1c6.  v4:= temp;
  #L24c1c8.  v3:= v3 + v4 @kind int;
  #L24c1ca.  call `<init>`(v2, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L24c1d0.  call temp:= `addAll`(v2, v1) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L24c1d6.  call temp:= `addAll`(v2, v0) @signature `Ljava/util/List;.addAll:(Ljava/util/Collection;)Z` @kind interface;
  #L24c1dc.  return v2 @kind object;
}
procedure `java.util.List` `getSubjectAltNames`(`java.security.cert.X509Certificate` v11 @kind object @name `certificate`, `int` v12 @name `type`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L24c1f0.  v5:= new `java.util.ArrayList`;
  #L24c1f4.  call `<init>`(v5) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L24c1fa.  call temp:= `getSubjectAlternativeNames`(v11) @signature `Ljava/security/cert/X509Certificate;.getSubjectAlternativeNames:()Ljava/util/Collection;` @kind virtual;
  #L24c200.  v7:= temp @kind object;
  #L24c202.  if v7 != 0 then goto L24c210;
  #L24c206.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L24c20c.  v5:= temp @kind object;
  #L24c20e.  return v5 @kind object;
  #L24c210.  call temp:= `iterator`(v7) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24c216.  v8:= temp @kind object;
  #L24c218.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24c21e.  v9:= temp;
  #L24c220.  if v9 == 0 then goto L24c20e;
  #L24c224.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24c22a.  v6:= temp @kind object;
  #L24c22c.  v0:= v6 @kind object;
  #L24c22e.  v0:= (`java.util.List`) v0 @kind object;
  #L24c232.  v4:= v0 @kind object;
  #L24c234.  if v4 == 0 then goto L24c218;
  #L24c238.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c23e.  v9:= temp;
  #L24c240.  v10:= 2I;
  #L24c242.  if v9 < v10 then goto L24c218;
  #L24c246.  v9:= 0I;
  #L24c248.  call temp:= `get`(v4, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c24e.  v2:= temp @kind object;
  #L24c250.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L24c254.  if v2 == 0 then goto L24c218;
  #L24c258.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L24c25e.  v9:= temp;
  #L24c260.  if v9 != v12 then goto L24c218;
  #L24c264.  v9:= 1I;
  #L24c266.  call temp:= `get`(v4, v9) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c26c.  v1:= temp @kind object;
  #L24c26e.  v1:= (`java.lang.String`) v1 @kind object;
  #L24c272.  if v1 == 0 then goto L24c218;
  #L24c276.  call temp:= `add`(v5, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24c27c.  goto L24c218;
  #L24c27e.  v3:= Exception @type ^`java.security.cert.CertificateParsingException` @kind object;
  #L24c280.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L24c286.  v5:= temp @kind object;
  #L24c288.  goto L24c20e;
  catch `java.security.cert.CertificateParsingException` @[L24c1fa..L24c27c] goto L24c27e;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v8 @kind this, `java.lang.String` v9 @kind object @name `hostname`, `java.lang.String` v10 @kind object @name `pattern`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24c2ac.  v7:= -1I;
  #L24c2ae.  v6:= 46I;
  #L24c2b2.  v3:= 1I;
  #L24c2b4.  v2:= 0I;
  #L24c2b6.  if v9 == 0 then goto L24c2e6;
  #L24c2ba.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c2c0.  v4:= temp;
  #L24c2c2.  if v4 == 0 then goto L24c2e6;
  #L24c2c6.  v4:= "." @kind object;
  #L24c2ca.  call temp:= `startsWith`(v9, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c2d0.  v4:= temp;
  #L24c2d2.  if v4 != 0 then goto L24c2e6;
  #L24c2d6.  v4:= ".." @kind object;
  #L24c2da.  call temp:= `endsWith`(v9, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c2e0.  v4:= temp;
  #L24c2e2.  if v4 == 0 then goto L24c2e8;
  #L24c2e6.  return v2;
  #L24c2e8.  if v10 == 0 then goto L24c2e6;
  #L24c2ec.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c2f2.  v4:= temp;
  #L24c2f4.  if v4 == 0 then goto L24c2e6;
  #L24c2f8.  v4:= "." @kind object;
  #L24c2fc.  call temp:= `startsWith`(v10, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c302.  v4:= temp;
  #L24c304.  if v4 != 0 then goto L24c2e6;
  #L24c308.  v4:= ".." @kind object;
  #L24c30c.  call temp:= `endsWith`(v10, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c312.  v4:= temp;
  #L24c314.  if v4 != 0 then goto L24c2e6;
  #L24c318.  v4:= "." @kind object;
  #L24c31c.  call temp:= `endsWith`(v9, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c322.  v4:= temp;
  #L24c324.  if v4 != 0 then goto L24c34a;
  #L24c328.  v4:= new `java.lang.StringBuilder`;
  #L24c32c.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24c332.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c338.  v4:= temp @kind object;
  #L24c33a.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c340.  v4:= temp @kind object;
  #L24c342.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24c348.  v9:= temp @kind object;
  #L24c34a.  v4:= "." @kind object;
  #L24c34e.  call temp:= `endsWith`(v10, v4) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c354.  v4:= temp;
  #L24c356.  if v4 != 0 then goto L24c37c;
  #L24c35a.  v4:= new `java.lang.StringBuilder`;
  #L24c35e.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24c364.  call temp:= `append`(v4, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c36a.  v4:= temp @kind object;
  #L24c36c.  call temp:= `append`(v4, v6) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L24c372.  v4:= temp @kind object;
  #L24c374.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24c37a.  v10:= temp @kind object;
  #L24c37c.  v4:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L24c380.  call temp:= `toLowerCase`(v10, v4) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L24c386.  v10:= temp @kind object;
  #L24c388.  v4:= "*" @kind object;
  #L24c38c.  call temp:= `contains`(v10, v4) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L24c392.  v4:= temp;
  #L24c394.  if v4 != 0 then goto L24c3a2;
  #L24c398.  call temp:= `equals`(v9, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L24c39e.  v2:= temp;
  #L24c3a0.  goto L24c2e6;
  #L24c3a2.  v4:= "*." @kind object;
  #L24c3a6.  call temp:= `startsWith`(v10, v4) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c3ac.  v4:= temp;
  #L24c3ae.  if v4 == 0 then goto L24c2e6;
  #L24c3b2.  v4:= 42I;
  #L24c3b6.  call temp:= `indexOf`(v10, v4, v3) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L24c3bc.  v4:= temp;
  #L24c3be.  if v4 != v7 then goto L24c2e6;
  #L24c3c2.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c3c8.  v4:= temp;
  #L24c3ca.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c3d0.  v5:= temp;
  #L24c3d2.  if v4 < v5 then goto L24c2e6;
  #L24c3d6.  v4:= "*." @kind object;
  #L24c3da.  call temp:= `equals`(v4, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L24c3e0.  v4:= temp;
  #L24c3e2.  if v4 != 0 then goto L24c2e6;
  #L24c3e6.  call temp:= `substring`(v10, v3) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L24c3ec.  v0:= temp @kind object;
  #L24c3ee.  call temp:= `endsWith`(v9, v0) @signature `Ljava/lang/String;.endsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L24c3f4.  v4:= temp;
  #L24c3f6.  if v4 == 0 then goto L24c2e6;
  #L24c3fa.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c400.  v4:= temp;
  #L24c402.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c408.  v5:= temp;
  #L24c40a.  v1:= v4 - v5 @kind int;
  #L24c40e.  if v1 <= 0 then goto L24c422;
  #L24c412.  v4:= v1 + -1;
  #L24c416.  call temp:= `lastIndexOf`(v9, v6, v4) @signature `Ljava/lang/String;.lastIndexOf:(II)I` @kind virtual;
  #L24c41c.  v4:= temp;
  #L24c41e.  if v4 != v7 then goto L24c2e6;
  #L24c422.  v2:= v3;
  #L24c424.  goto L24c2e6;
}
procedure `boolean` `verifyHostname`(`okhttp3.internal.tls.OkHostnameVerifier` v8 @kind this, `java.lang.String` v9 @kind object @name `hostname`, `java.security.cert.X509Certificate` v10 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24c438.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L24c43c.  call temp:= `toLowerCase`(v9, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L24c442.  v9:= temp @kind object;
  #L24c444.  v2:= 0I;
  #L24c446.  v6:= 2I;
  #L24c448.  call temp:= `getSubjectAltNames`(v10, v6) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L24c44e.  v0:= temp @kind object;
  #L24c450.  v3:= 0I;
  #L24c452.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c458.  v5:= temp;
  #L24c45a.  if v3 >= v5 then goto L24c482;
  #L24c45e.  v2:= 1I;
  #L24c460.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c466.  v6:= temp @kind object;
  #L24c468.  v6:= (`java.lang.String`) v6 @kind object;
  #L24c46c.  call temp:= `verifyHostname`(v8, v9, v6) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L24c472.  v6:= temp;
  #L24c474.  if v6 == 0 then goto L24c47c;
  #L24c478.  v6:= 1I;
  #L24c47a.  return v6;
  #L24c47c.  v3:= v3 + 1;
  #L24c480.  goto L24c45a;
  #L24c482.  if v2 != 0 then goto L24c4b2;
  #L24c486.  call temp:= `getSubjectX500Principal`(v10) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L24c48c.  v4:= temp @kind object;
  #L24c48e.  v6:= new `okhttp3.internal.tls.DistinguishedNameParser`;
  #L24c492.  call `<init>`(v6, v4) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.<init>:(Ljavax/security/auth/x500/X500Principal;)V` @kind direct;
  #L24c498.  v7:= "cn" @kind object;
  #L24c49c.  call temp:= `findMostSpecific`(v6, v7) @signature `Lokhttp3/internal/tls/DistinguishedNameParser;.findMostSpecific:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L24c4a2.  v1:= temp @kind object;
  #L24c4a4.  if v1 == 0 then goto L24c4b2;
  #L24c4a8.  call temp:= `verifyHostname`(v8, v9, v1) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/lang/String;)Z` @kind direct;
  #L24c4ae.  v6:= temp;
  #L24c4b0.  goto L24c47a;
  #L24c4b2.  v6:= 0I;
  #L24c4b4.  goto L24c47a;
}
procedure `boolean` `verifyIpAddress`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object @name `ipAddress`, `java.security.cert.X509Certificate` v6 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24c4c8.  v3:= 7I;
  #L24c4ca.  call temp:= `getSubjectAltNames`(v6, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.getSubjectAltNames:(Ljava/security/cert/X509Certificate;I)Ljava/util/List;` @kind static;
  #L24c4d0.  v0:= temp @kind object;
  #L24c4d2.  v1:= 0I;
  #L24c4d4.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L24c4da.  v2:= temp;
  #L24c4dc.  if v1 >= v2 then goto L24c502;
  #L24c4e0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24c4e6.  v3:= temp @kind object;
  #L24c4e8.  v3:= (`java.lang.String`) v3 @kind object;
  #L24c4ec.  call temp:= `equalsIgnoreCase`(v5, v3) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L24c4f2.  v3:= temp;
  #L24c4f4.  if v3 == 0 then goto L24c4fc;
  #L24c4f8.  v3:= 1I;
  #L24c4fa.  return v3;
  #L24c4fc.  v1:= v1 + 1;
  #L24c500.  goto L24c4dc;
  #L24c502.  v3:= 0I;
  #L24c504.  goto L24c4fa;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v1 @kind this, `java.lang.String` v2 @kind object @name `host`, `java.security.cert.X509Certificate` v3 @kind object @name `certificate`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24c518.  call temp:= `verifyAsIpAddress`(v2) @signature `Lokhttp3/internal/Util;.verifyAsIpAddress:(Ljava/lang/String;)Z` @kind static;
  #L24c51e.  v0:= temp;
  #L24c520.  if v0 == 0 then goto L24c52e;
  #L24c524.  call temp:= `verifyIpAddress`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyIpAddress:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L24c52a.  v0:= temp;
  #L24c52c.  return v0;
  #L24c52e.  call temp:= `verifyHostname`(v1, v2, v3) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verifyHostname:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind direct;
  #L24c534.  v0:= temp;
  #L24c536.  goto L24c52c;
}
procedure `boolean` `verify`(`okhttp3.internal.tls.OkHostnameVerifier` v4 @kind this, `java.lang.String` v5 @kind object @name `host`, `javax.net.ssl.SSLSession` v6 @kind object @name `session`) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljavax/net/ssl/SSLSession;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24c548.  v3:= 0I;
  #L24c54a.  call temp:= `getPeerCertificates`(v6) @signature `Ljavax/net/ssl/SSLSession;.getPeerCertificates:()[Ljava/security/cert/Certificate;` @kind interface;
  #L24c550.  v0:= temp @kind object;
  #L24c552.  v2:= 0I;
  #L24c554.  v2:= v0[v2] @kind object;
  #L24c558.  v2:= (`java.security.cert.X509Certificate`) v2 @kind object;
  #L24c55c.  call temp:= `verify`(v4, v5, v2) @signature `Lokhttp3/internal/tls/OkHostnameVerifier;.verify:(Ljava/lang/String;Ljava/security/cert/X509Certificate;)Z` @kind virtual;
  #L24c562.  v2:= temp;
  #L24c564.  return v2;
  #L24c566.  v1:= Exception @type ^`javax.net.ssl.SSLException` @kind object;
  #L24c568.  v2:= v3;
  #L24c56a.  goto L24c564;
  catch `javax.net.ssl.SSLException` @[L24c54a..L24c562] goto L24c566;
}
