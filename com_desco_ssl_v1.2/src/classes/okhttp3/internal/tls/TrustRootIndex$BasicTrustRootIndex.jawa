record `okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex` @kind class @AccessFlag FINAL extends `okhttp3.internal.tls.TrustRootIndex` @kind class {
  `java.util.Map` `okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex.subjectToCaCerts` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex` v6 @kind this, `java.security.cert.X509Certificate`[] v7 @kind object @name `caCerts`) @signature `Lokhttp3/internal/tls/TrustRootIndex$BasicTrustRootIndex;.<init>:([Ljava/security/cert/X509Certificate;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L310788.  call `<init>`(v6) @signature `Lokhttp3/internal/tls/TrustRootIndex;.<init>:()V` @kind direct;
  #L31078e.  v3:= new `java.util.LinkedHashMap`;
  #L310792.  call `<init>`(v3) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L310798.  v6.`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex.subjectToCaCerts` @type ^`java.util.Map` := v3 @kind object;
  #L31079c.  v4:= length @variable v7;
  #L31079e.  v3:= 0I;
  #L3107a0.  if v3 >= v4 then goto L3107e6;
  #L3107a4.  v0:= v7[v3] @kind object;
  #L3107a8.  call temp:= `getSubjectX500Principal`(v0) @signature `Ljava/security/cert/X509Certificate;.getSubjectX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L3107ae.  v1:= temp @kind object;
  #L3107b0.  v5:= v6.`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex.subjectToCaCerts` @type ^`java.util.Map` @kind object;
  #L3107b4.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3107ba.  v2:= temp @kind object;
  #L3107bc.  v2:= (`java.util.List`) v2 @kind object;
  #L3107c0.  if v2 != 0 then goto L3107da;
  #L3107c4.  v2:= new `java.util.ArrayList`;
  #L3107c8.  v5:= 1I;
  #L3107ca.  call `<init>`(v2, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3107d0.  v5:= v6.`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex.subjectToCaCerts` @type ^`java.util.Map` @kind object;
  #L3107d4.  call temp:= `put`(v5, v1, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3107da.  call temp:= `add`(v2, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3107e0.  v3:= v3 + 1;
  #L3107e4.  goto L3107a0;
  #L3107e6.  return @kind void;
}
procedure `java.security.cert.X509Certificate` `findByIssuerAndSignature`(`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex` v7 @kind this, `java.security.cert.X509Certificate` v8 @kind object @name `cert`) @signature `Lokhttp3/internal/tls/TrustRootIndex$BasicTrustRootIndex;.findByIssuerAndSignature:(Ljava/security/cert/X509Certificate;)Ljava/security/cert/X509Certificate;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3107f8.  v4:= 0I;
  #L3107fa.  call temp:= `getIssuerX500Principal`(v8) @signature `Ljava/security/cert/X509Certificate;.getIssuerX500Principal:()Ljavax/security/auth/x500/X500Principal;` @kind virtual;
  #L310800.  v1:= temp @kind object;
  #L310802.  v5:= v7.`okhttp3.internal.tls.TrustRootIndex$BasicTrustRootIndex.subjectToCaCerts` @type ^`java.util.Map` @kind object;
  #L310806.  call temp:= `get`(v5, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L31080c.  v3:= temp @kind object;
  #L31080e.  v3:= (`java.util.List`) v3 @kind object;
  #L310812.  if v3 != 0 then goto L31081a;
  #L310816.  v0:= v4 @kind object;
  #L310818.  return v0 @kind object;
  #L31081a.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L310820.  v5:= temp @kind object;
  #L310822.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L310828.  v6:= temp;
  #L31082a.  if v6 == 0 then goto L31084e;
  #L31082e.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L310834.  v0:= temp @kind object;
  #L310836.  v0:= (`java.security.cert.X509Certificate`) v0 @kind object;
  #L31083a.  call temp:= `getPublicKey`(v0) @signature `Ljava/security/cert/X509Certificate;.getPublicKey:()Ljava/security/PublicKey;` @kind virtual;
  #L310840.  v2:= temp @kind object;
  #L310842.  call `verify`(v8, v2) @signature `Ljava/security/cert/X509Certificate;.verify:(Ljava/security/PublicKey;)V` @kind virtual;
  #L310848.  goto L310818;
  #L31084a.  v6:= Exception @type ^`java.lang.Exception` @kind object;
  #L31084c.  goto L310822;
  #L31084e.  v0:= v4 @kind object;
  #L310850.  goto L310818;
  catch `java.lang.Exception` @[L310842..L310848] goto L31084a;
}
