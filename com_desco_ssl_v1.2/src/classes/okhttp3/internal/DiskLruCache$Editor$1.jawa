record `okhttp3.internal.DiskLruCache$Editor$1` @kind class @AccessFlag  extends `okhttp3.internal.FaultHidingSink` @kind class {
  `okhttp3.internal.DiskLruCache$Editor` `okhttp3.internal.DiskLruCache$Editor$1.this$1` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.DiskLruCache$Editor$1` v0 @kind this, `okhttp3.internal.DiskLruCache$Editor` v1 @kind object @name `this$1`, `okio.Sink` v2 @kind object @name `delegate`) @signature `Lokhttp3/internal/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/DiskLruCache$Editor;Lokio/Sink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L361de4.  v0.`okhttp3.internal.DiskLruCache$Editor$1.this$1` @type ^`okhttp3.internal.DiskLruCache$Editor` := v1 @kind object;
  #L361de8.  call `<init>`(v0, v2) @signature `Lokhttp3/internal/FaultHidingSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L361dee.  return @kind void;
}
procedure `void` `onException`(`okhttp3.internal.DiskLruCache$Editor$1` v2 @kind this, `java.io.IOException` v3 @kind object @name `e`) @signature `Lokhttp3/internal/DiskLruCache$Editor$1;.onException:(Ljava/io/IOException;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L361e00.  v0:= v2.`okhttp3.internal.DiskLruCache$Editor$1.this$1` @type ^`okhttp3.internal.DiskLruCache$Editor` @kind object;
  #L361e04.  v1:= v0.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L361e08.  @monitorenter v1
  #L361e0a.  v0:= v2.`okhttp3.internal.DiskLruCache$Editor$1.this$1` @type ^`okhttp3.internal.DiskLruCache$Editor` @kind object;
  #L361e0e.  call `detach`(v0) @signature `Lokhttp3/internal/DiskLruCache$Editor;.detach:()V` @kind virtual;
  #L361e14.  @monitorexit v1
  #L361e16.  return @kind void;
  #L361e18.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L361e1a.  @monitorexit v1
  #L361e1c.  throw v0;
  catch `java.lang.Throwable` @[L361e0a..L361e1c] goto L361e18;
}
