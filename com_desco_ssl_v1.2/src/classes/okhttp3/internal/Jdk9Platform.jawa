record `okhttp3.internal.Jdk9Platform` @kind class @AccessFlag FINAL extends `okhttp3.internal.Platform` @kind class {
  `java.lang.reflect.Method` `okhttp3.internal.Jdk9Platform.getProtocolMethod` @AccessFlag FINAL;
  `java.lang.reflect.Method` `okhttp3.internal.Jdk9Platform.setProtocolMethod` @AccessFlag FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.Jdk9Platform` v0 @kind this, `java.lang.reflect.Method` v1 @kind object @name `setProtocolMethod`, `java.lang.reflect.Method` v2 @kind object @name `getProtocolMethod`) @signature `Lokhttp3/internal/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3097b8.  call `<init>`(v0) @signature `Lokhttp3/internal/Platform;.<init>:()V` @kind direct;
  #L3097be.  v0.`okhttp3.internal.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` := v1 @kind object;
  #L3097c2.  v0.`okhttp3.internal.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` := v2 @kind object;
  #L3097c6.  return @kind void;
}
procedure `okhttp3.internal.Jdk9Platform` `buildIfSupported`() @signature `Lokhttp3/internal/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/Jdk9Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3097d8.  v2:= constclass @type ^`javax.net.ssl.SSLParameters` @kind object;
  #L3097dc.  v3:= "setApplicationProtocols" @kind object;
  #L3097e0.  v4:= 1I;
  #L3097e2.  v4:= new `java.lang.Class`[v4];
  #L3097e6.  v5:= 0I;
  #L3097e8.  v6:= constclass @type ^`java.lang.String`[] @kind object;
  #L3097ec.  v4[v5]:= v6 @kind object;
  #L3097f0.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L3097f6.  v1:= temp @kind object;
  #L3097f8.  v2:= constclass @type ^`javax.net.ssl.SSLSocket` @kind object;
  #L3097fc.  v3:= "getApplicationProtocol" @kind object;
  #L309800.  v4:= 0I;
  #L309802.  v4:= new `java.lang.Class`[v4];
  #L309806.  call temp:= `getMethod`(v2, v3, v4) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30980c.  v0:= temp @kind object;
  #L30980e.  v2:= new `okhttp3.internal.Jdk9Platform`;
  #L309812.  call `<init>`(v2, v1, v0) @signature `Lokhttp3/internal/Jdk9Platform;.<init>:(Ljava/lang/reflect/Method;Ljava/lang/reflect/Method;)V` @kind direct;
  #L309818.  return v2 @kind object;
  #L30981a.  v2:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L30981c.  v2:= 0I;
  #L30981e.  goto L309818;
  catch `java.lang.NoSuchMethodException` @[L3097d8..L309818] goto L30981a;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.Jdk9Platform` v7 @kind this, `javax.net.ssl.SSLSocket` v8 @kind object @name `sslSocket`, `java.lang.String` v9 @kind object @name `hostname`, `java.util.List` v10 @kind object) @signature `Lokhttp3/internal/Jdk9Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L309840.  call temp:= `getSSLParameters`(v8) @signature `Ljavax/net/ssl/SSLSocket;.getSSLParameters:()Ljavax/net/ssl/SSLParameters;` @kind virtual;
  #L309846.  v2:= temp @kind object;
  #L309848.  call temp:= `alpnProtocolNames`(v10) @signature `Lokhttp3/internal/Jdk9Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L30984e.  v1:= temp @kind object;
  #L309850.  v3:= v7.`okhttp3.internal.Jdk9Platform.setProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L309854.  v4:= 1I;
  #L309856.  v4:= new `java.lang.Object`[v4];
  #L30985a.  v5:= 0I;
  #L30985c.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L309862.  v6:= temp;
  #L309864.  v6:= new `java.lang.String`[v6];
  #L309868.  call temp:= `toArray`(v1, v6) @signature `Ljava/util/List;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L30986e.  v6:= temp @kind object;
  #L309870.  v4[v5]:= v6 @kind object;
  #L309874.  call temp:= `invoke`(v3, v2, v4) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30987a.  call `setSSLParameters`(v8, v2) @signature `Ljavax/net/ssl/SSLSocket;.setSSLParameters:(Ljavax/net/ssl/SSLParameters;)V` @kind virtual;
  #L309880.  return @kind void;
  #L309882.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L309884.  v3:= new `java.lang.AssertionError`;
  #L309888.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30988e.  throw v3;
  #L309890.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L309892.  goto L309884;
  catch `java.lang.IllegalAccessException` @[L309840..L309880] goto L309882;
  catch `java.lang.reflect.InvocationTargetException` @[L309840..L309880] goto L309890;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.Jdk9Platform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/Jdk9Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3098b4.  v2:= v4.`okhttp3.internal.Jdk9Platform.getProtocolMethod` @type ^`java.lang.reflect.Method` @kind object;
  #L3098b8.  v3:= 0I;
  #L3098ba.  v3:= new `java.lang.Object`[v3];
  #L3098be.  call temp:= `invoke`(v2, v5, v3) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3098c4.  v1:= temp @kind object;
  #L3098c6.  v1:= (`java.lang.String`) v1 @kind object;
  #L3098ca.  if v1 == 0 then goto L3098de;
  #L3098ce.  v2:= "" @kind object;
  #L3098d2.  call temp:= `equals`(v1, v2) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3098d8.  v2:= temp;
  #L3098da.  if v2 == 0 then goto L3098e0;
  #L3098de.  v1:= 0I;
  #L3098e0.  return v1 @kind object;
  #L3098e2.  v0:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3098e4.  v2:= new `java.lang.AssertionError`;
  #L3098e8.  call `<init>`(v2) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3098ee.  throw v2;
  #L3098f0.  v0:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3098f2.  goto L3098e4;
  catch `java.lang.IllegalAccessException` @[L3098b4..L3098d8] goto L3098e2;
  catch `java.lang.reflect.InvocationTargetException` @[L3098b4..L3098d8] goto L3098f0;
}
