record `okhttp3.internal.Internal` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `okhttp3.internal.Internal` `@@okhttp3.internal.Internal.instance` @AccessFlag PUBLIC_STATIC;
procedure `void` `<init>`(`okhttp3.internal.Internal` v0 @kind this) @signature `Lokhttp3/internal/Internal;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L241d6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L241d72.  return @kind void;
}
procedure `void` `initializeInstanceForTests`() @signature `Lokhttp3/internal/Internal;.initializeInstanceForTests:()V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L241d84.  v0:= new `okhttp3.OkHttpClient`;
  #L241d88.  call `<init>`(v0) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @kind direct;
  #L241d8e.  return @kind void;
}
procedure `void` `addLenient`(`okhttp3.Headers$Builder` v0 @kind object, `java.lang.String` v1 @kind object) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `addLenient`(`okhttp3.Headers$Builder` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lokhttp3/internal/Internal;.addLenient:(Lokhttp3/Headers$Builder;Ljava/lang/String;Ljava/lang/String;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `apply`(`okhttp3.ConnectionSpec` v0 @kind object, `javax.net.ssl.SSLSocket` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Internal;.apply:(Lokhttp3/ConnectionSpec;Ljavax/net/ssl/SSLSocket;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.http.StreamAllocation` `callEngineGetStreamAllocation`(`okhttp3.Call` v0 @kind object) @signature `Lokhttp3/internal/Internal;.callEngineGetStreamAllocation:(Lokhttp3/Call;)Lokhttp3/internal/http/StreamAllocation;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `callEnqueue`(`okhttp3.Call` v0 @kind object, `okhttp3.Callback` v1 @kind object, `boolean` v2 ) @signature `Lokhttp3/internal/Internal;.callEnqueue:(Lokhttp3/Call;Lokhttp3/Callback;Z)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `boolean` `connectionBecameIdle`(`okhttp3.ConnectionPool` v0 @kind object, `okhttp3.internal.io.RealConnection` v1 @kind object) @signature `Lokhttp3/internal/Internal;.connectionBecameIdle:(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)Z` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.io.RealConnection` `get`(`okhttp3.ConnectionPool` v0 @kind object, `okhttp3.Address` v1 @kind object, `okhttp3.internal.http.StreamAllocation` v2 @kind object) @signature `Lokhttp3/internal/Internal;.get:(Lokhttp3/ConnectionPool;Lokhttp3/Address;Lokhttp3/internal/http/StreamAllocation;)Lokhttp3/internal/io/RealConnection;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.HttpUrl` `getHttpUrlChecked`(`java.lang.String` v0 @kind object) @signature `Lokhttp3/internal/Internal;.getHttpUrlChecked:(Ljava/lang/String;)Lokhttp3/HttpUrl;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.InternalCache` `internalCache`(`okhttp3.OkHttpClient` v0 @kind object) @signature `Lokhttp3/internal/Internal;.internalCache:(Lokhttp3/OkHttpClient;)Lokhttp3/internal/InternalCache;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `put`(`okhttp3.ConnectionPool` v0 @kind object, `okhttp3.internal.io.RealConnection` v1 @kind object) @signature `Lokhttp3/internal/Internal;.put:(Lokhttp3/ConnectionPool;Lokhttp3/internal/io/RealConnection;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `okhttp3.internal.RouteDatabase` `routeDatabase`(`okhttp3.ConnectionPool` v0 @kind object) @signature `Lokhttp3/internal/Internal;.routeDatabase:(Lokhttp3/ConnectionPool;)Lokhttp3/internal/RouteDatabase;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setCache`(`okhttp3.OkHttpClient$Builder` v0 @kind object, `okhttp3.internal.InternalCache` v1 @kind object) @signature `Lokhttp3/internal/Internal;.setCache:(Lokhttp3/OkHttpClient$Builder;Lokhttp3/internal/InternalCache;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
