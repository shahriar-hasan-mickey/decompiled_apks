record `okhttp3.internal.DiskLruCache$3` @kind class @AccessFlag  extends `java.util.Iterator` @kind interface {
  `java.util.Iterator` `okhttp3.internal.DiskLruCache$3.delegate` @AccessFlag FINAL;
  `okhttp3.internal.DiskLruCache$Snapshot` `okhttp3.internal.DiskLruCache$3.nextSnapshot` @AccessFlag ;
  `okhttp3.internal.DiskLruCache$Snapshot` `okhttp3.internal.DiskLruCache$3.removeSnapshot` @AccessFlag ;
  `okhttp3.internal.DiskLruCache` `okhttp3.internal.DiskLruCache$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.DiskLruCache$3` v2 @kind this, `okhttp3.internal.DiskLruCache` v3 @kind object @name `this$0`) @signature `Lokhttp3/internal/DiskLruCache$3;.<init>:(Lokhttp3/internal/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L23fe7c.  v2.`okhttp3.internal.DiskLruCache$3.this$0` @type ^`okhttp3.internal.DiskLruCache` := v3 @kind object;
  #L23fe80.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L23fe86.  v0:= new `java.util.ArrayList`;
  #L23fe8a.  v1:= v2.`okhttp3.internal.DiskLruCache$3.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L23fe8e.  call temp:= `access$2300`(v1) @signature `Lokhttp3/internal/DiskLruCache;.access$2300:(Lokhttp3/internal/DiskLruCache;)Ljava/util/LinkedHashMap;` @kind static;
  #L23fe94.  v1:= temp @kind object;
  #L23fe96.  call temp:= `values`(v1) @signature `Ljava/util/LinkedHashMap;.values:()Ljava/util/Collection;` @kind virtual;
  #L23fe9c.  v1:= temp @kind object;
  #L23fe9e.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L23fea4.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L23feaa.  v0:= temp @kind object;
  #L23feac.  v2.`okhttp3.internal.DiskLruCache$3.delegate` @type ^`java.util.Iterator` := v0 @kind object;
  #L23feb0.  return @kind void;
}
procedure `boolean` `hasNext`(`okhttp3.internal.DiskLruCache$3` v6 @kind this) @signature `Lokhttp3/internal/DiskLruCache$3;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L23fec4.  v2:= 1I;
  #L23fec6.  v3:= 0I;
  #L23fec8.  v4:= v6.`okhttp3.internal.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L23fecc.  if v4 == 0 then goto L23fed2;
  #L23fed0.  return v2;
  #L23fed2.  v4:= v6.`okhttp3.internal.DiskLruCache$3.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L23fed6.  @monitorenter v4
  #L23fed8.  v5:= v6.`okhttp3.internal.DiskLruCache$3.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L23fedc.  call temp:= `access$100`(v5) @signature `Lokhttp3/internal/DiskLruCache;.access$100:(Lokhttp3/internal/DiskLruCache;)Z` @kind static;
  #L23fee2.  v5:= temp;
  #L23fee4.  if v5 == 0 then goto L23feee;
  #L23fee8.  @monitorexit v4
  #L23feea.  v2:= v3;
  #L23feec.  goto L23fed0;
  #L23feee.  v5:= v6.`okhttp3.internal.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L23fef2.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L23fef8.  v5:= temp;
  #L23fefa.  if v5 == 0 then goto L23ff28;
  #L23fefe.  v5:= v6.`okhttp3.internal.DiskLruCache$3.delegate` @type ^`java.util.Iterator` @kind object;
  #L23ff02.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L23ff08.  v0:= temp @kind object;
  #L23ff0a.  v0:= (`okhttp3.internal.DiskLruCache$Entry`) v0 @kind object;
  #L23ff0e.  call temp:= `snapshot`(v0) @signature `Lokhttp3/internal/DiskLruCache$Entry;.snapshot:()Lokhttp3/internal/DiskLruCache$Snapshot;` @kind virtual;
  #L23ff14.  v1:= temp @kind object;
  #L23ff16.  if v1 == 0 then goto L23feee;
  #L23ff1a.  v6.`okhttp3.internal.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v1 @kind object;
  #L23ff1e.  @monitorexit v4
  #L23ff20.  goto L23fed0;
  #L23ff22.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23ff24.  @monitorexit v4
  #L23ff26.  throw v2;
  #L23ff28.  @monitorexit v4
  #L23ff2a.  v2:= v3;
  #L23ff2c.  goto L23fed0;
  catch `java.lang.Throwable` @[L23fed8..L23ff26] goto L23ff22;
  catch `java.lang.Throwable` @[L23ff28..L23ff2a] goto L23ff22;
}
procedure `java.lang.Object` `next`(`okhttp3.internal.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/DiskLruCache$3;.next:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L23ff54.  call temp:= `next`(v1) @signature `Lokhttp3/internal/DiskLruCache$3;.next:()Lokhttp3/internal/DiskLruCache$Snapshot;` @kind virtual;
  #L23ff5a.  v0:= temp @kind object;
  #L23ff5c.  return v0 @kind object;
}
procedure `okhttp3.internal.DiskLruCache$Snapshot` `next`(`okhttp3.internal.DiskLruCache$3` v1 @kind this) @signature `Lokhttp3/internal/DiskLruCache$3;.next:()Lokhttp3/internal/DiskLruCache$Snapshot;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L23ff70.  call temp:= `hasNext`(v1) @signature `Lokhttp3/internal/DiskLruCache$3;.hasNext:()Z` @kind virtual;
  #L23ff76.  v0:= temp;
  #L23ff78.  if v0 != 0 then goto L23ff88;
  #L23ff7c.  v0:= new `java.util.NoSuchElementException`;
  #L23ff80.  call `<init>`(v0) @signature `Ljava/util/NoSuchElementException;.<init>:()V` @kind direct;
  #L23ff86.  throw v0;
  #L23ff88.  v0:= v1.`okhttp3.internal.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L23ff8c.  v1.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v0 @kind object;
  #L23ff90.  v0:= 0I;
  #L23ff92.  v1.`okhttp3.internal.DiskLruCache$3.nextSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v0 @kind object;
  #L23ff96.  v0:= v1.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L23ff9a.  return v0 @kind object;
}
procedure `void` `remove`(`okhttp3.internal.DiskLruCache$3` v3 @kind this) @signature `Lokhttp3/internal/DiskLruCache$3;.remove:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L23ffac.  v2:= 0I;
  #L23ffae.  v0:= v3.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L23ffb2.  if v0 != 0 then goto L23ffc6;
  #L23ffb6.  v0:= new `java.lang.IllegalStateException`;
  #L23ffba.  v1:= "remove() before next()" @kind object;
  #L23ffbe.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L23ffc4.  throw v0;
  #L23ffc6.  v0:= v3.`okhttp3.internal.DiskLruCache$3.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L23ffca.  v1:= v3.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` @kind object;
  #L23ffce.  call temp:= `access$2400`(v1) @signature `Lokhttp3/internal/DiskLruCache$Snapshot;.access$2400:(Lokhttp3/internal/DiskLruCache$Snapshot;)Ljava/lang/String;` @kind static;
  #L23ffd4.  v1:= temp @kind object;
  #L23ffd6.  call temp:= `remove`(v0, v1) @signature `Lokhttp3/internal/DiskLruCache;.remove:(Ljava/lang/String;)Z` @kind virtual;
  #L23ffdc.  v3.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v2 @kind object;
  #L23ffe0.  return @kind void;
  #L23ffe2.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L23ffe4.  v3.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v2 @kind object;
  #L23ffe8.  goto L23ffe0;
  #L23ffea.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L23ffec.  v3.`okhttp3.internal.DiskLruCache$3.removeSnapshot` @type ^`okhttp3.internal.DiskLruCache$Snapshot` := v2 @kind object;
  #L23fff0.  throw v0;
  catch `java.io.IOException` @[L23ffc6..L23ffdc] goto L23ffe2;
  catch `java.lang.Throwable` @[L23ffc6..L23ffdc] goto L23ffea;
}
