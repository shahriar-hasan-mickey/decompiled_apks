record `okhttp3.internal.framed.FramedStream$FramedDataSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.framed.FramedStream$FramedDataSink.closed` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.framed.FramedStream$FramedDataSink.finished` @AccessFlag PRIVATE;
  `okio.Buffer` `okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.framed.FramedStream` `okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.framed.FramedStream$FramedDataSink.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
global `long` `@@okhttp3.internal.framed.FramedStream$FramedDataSink.EMIT_BUFFER_SIZE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30a8b8.  v0:= constclass @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a8bc.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L30a8c2.  v0:= temp;
  #L30a8c4.  if v0 != 0 then goto L30a8d0;
  #L30a8c8.  v0:= 1I;
  #L30a8ca.  `@@okhttp3.internal.framed.FramedStream$FramedDataSink.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L30a8ce.  return @kind void;
  #L30a8d0.  v0:= 0I;
  #L30a8d2.  goto L30a8ca;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v1 @kind this, `okhttp3.internal.framed.FramedStream` v2 @kind object @name `this$0`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.<init>:(Lokhttp3/internal/framed/FramedStream;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L30a8e4.  v1.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` := v2 @kind object;
  #L30a8e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30a8ee.  v0:= new `okio.Buffer`;
  #L30a8f2.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L30a8f8.  v1.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L30a8fc.  return @kind void;
}
procedure `boolean` `access$200`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.access$200:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30a910.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSink.finished` @type ^`boolean` @kind boolean;
  #L30a914.  return v0;
}
procedure `boolean` `access$202`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v0 @kind object @name `x0`, `boolean` v1 @name `x1`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.access$202:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30a928.  v0.`okhttp3.internal.framed.FramedStream$FramedDataSink.finished` @type ^`boolean` := v1 @kind boolean;
  #L30a92c.  return v1;
}
procedure `boolean` `access$400`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.access$400:(Lokhttp3/internal/framed/FramedStream$FramedDataSink;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30a940.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSink.closed` @type ^`boolean` @kind boolean;
  #L30a944.  return v0;
}
procedure `void` `emitDataFrame`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v8 @kind this, `boolean` v9 @name `outFinished`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.emitDataFrame:(Z)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30a958.  v1:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a95c.  @monitorenter v1
  #L30a95e.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a962.  call temp:= `access$1100`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30a968.  v0:= temp @kind object;
  #L30a96a.  call `enter`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.enter:()V` @kind virtual;
  #L30a970.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a974.  v2:= v0.`okhttp3.internal.framed.FramedStream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30a978.  v6:= 0L;
  #L30a97c.  v0:= lcmp(v2, v6);
  #L30a980.  if v0 > 0 then goto L30a9cc;
  #L30a984.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.finished` @type ^`boolean` @kind boolean;
  #L30a988.  if v0 != 0 then goto L30a9cc;
  #L30a98c.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.closed` @type ^`boolean` @kind boolean;
  #L30a990.  if v0 != 0 then goto L30a9cc;
  #L30a994.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a998.  call temp:= `access$800`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$800:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/ErrorCode;` @kind static;
  #L30a99e.  v0:= temp @kind object;
  #L30a9a0.  if v0 != 0 then goto L30a9cc;
  #L30a9a4.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a9a8.  call `access$900`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$900:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30a9ae.  goto L30a970;
  #L30a9b0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a9b2.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a9b6.  call temp:= `access$1100`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30a9bc.  v2:= temp @kind object;
  #L30a9be.  call `exitAndThrowIfTimedOut`(v2) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30a9c4.  throw v0;
  #L30a9c6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a9c8.  @monitorexit v1
  #L30a9ca.  throw v0;
  #L30a9cc.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a9d0.  call temp:= `access$1100`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30a9d6.  v0:= temp @kind object;
  #L30a9d8.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30a9de.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a9e2.  call `access$1200`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1200:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30a9e8.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30a9ec.  v2:= v0.`okhttp3.internal.framed.FramedStream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30a9f0.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30a9f4.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30a9fa.  v6:= temp @kind wide;
  #L30a9fc.  call temp:= `min`(v2, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L30aa02.  v4:= temp @kind wide;
  #L30aa04.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa08.  v2:= v0.`okhttp3.internal.framed.FramedStream.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30aa0c.  v2:= v2 - v4 @kind long;
  #L30aa0e.  v0.`okhttp3.internal.framed.FramedStream.bytesLeftInWriteWindow` @type ^`long` := v2 @kind wide;
  #L30aa12.  @monitorexit v1
  #L30aa14.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa18.  call temp:= `access$1100`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30aa1e.  v0:= temp @kind object;
  #L30aa20.  call `enter`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.enter:()V` @kind virtual;
  #L30aa26.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa2a.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30aa30.  v0:= temp @kind object;
  #L30aa32.  v1:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa36.  call temp:= `access$600`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.access$600:(Lokhttp3/internal/framed/FramedStream;)I` @kind static;
  #L30aa3c.  v1:= temp;
  #L30aa3e.  if v9 == 0 then goto L30aa76;
  #L30aa42.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30aa46.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30aa4c.  v2:= temp @kind wide;
  #L30aa4e.  v2:= lcmp(v4, v2);
  #L30aa52.  if v2 != 0 then goto L30aa76;
  #L30aa56.  v2:= 1I;
  #L30aa58.  v3:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30aa5c.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L30aa62.  v0:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa66.  call temp:= `access$1100`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30aa6c.  v0:= temp @kind object;
  #L30aa6e.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30aa74.  return @kind void;
  #L30aa76.  v2:= 0I;
  #L30aa78.  goto L30aa58;
  #L30aa7a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30aa7c.  v1:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aa80.  call temp:= `access$1100`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30aa86.  v1:= temp @kind object;
  #L30aa88.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30aa8e.  throw v0;
  catch `java.lang.Throwable` @[L30a95e..L30a970] goto L30a9c6;
  catch `java.lang.Throwable` @[L30a970..L30a9ae] goto L30a9b0;
  catch `java.lang.Throwable` @[L30a9b2..L30a9ca] goto L30a9c6;
  catch `java.lang.Throwable` @[L30a9cc..L30aa14] goto L30a9c6;
  catch `java.lang.Throwable` @[L30aa26..L30aa62] goto L30aa7a;
}
procedure `void` `close`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v6 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30aad0.  v4:= 0L;
  #L30aad4.  v2:= 1I;
  #L30aad6.  v0:= `@@okhttp3.internal.framed.FramedStream$FramedDataSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L30aada.  if v0 != 0 then goto L30aafa;
  #L30aade.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aae2.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L30aae8.  v0:= temp;
  #L30aaea.  if v0 == 0 then goto L30aafa;
  #L30aaee.  v0:= new `java.lang.AssertionError`;
  #L30aaf2.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30aaf8.  throw v0;
  #L30aafa.  v1:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aafe.  @monitorenter v1
  #L30ab00.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.closed` @type ^`boolean` @kind boolean;
  #L30ab04.  if v0 == 0 then goto L30ab0c;
  #L30ab08.  @monitorexit v1
  #L30ab0a.  return @kind void;
  #L30ab0c.  @monitorexit v1
  #L30ab0e.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab12.  v0:= v0.`okhttp3.internal.framed.FramedStream.sink` @type ^`okhttp3.internal.framed.FramedStream$FramedDataSink` @kind object;
  #L30ab16.  v0:= v0.`okhttp3.internal.framed.FramedStream$FramedDataSink.finished` @type ^`boolean` @kind boolean;
  #L30ab1a.  if v0 != 0 then goto L30ab74;
  #L30ab1e.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30ab22.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30ab28.  v0:= temp @kind wide;
  #L30ab2a.  v0:= lcmp(v0, v4);
  #L30ab2e.  if v0 <= 0 then goto L30ab54;
  #L30ab32.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30ab36.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30ab3c.  v0:= temp @kind wide;
  #L30ab3e.  v0:= lcmp(v0, v4);
  #L30ab42.  if v0 <= 0 then goto L30ab74;
  #L30ab46.  call `emitDataFrame`(v6, v2) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.emitDataFrame:(Z)V` @kind direct;
  #L30ab4c.  goto L30ab32;
  #L30ab4e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ab50.  @monitorexit v1
  #L30ab52.  throw v0;
  #L30ab54.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab58.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30ab5e.  v0:= temp @kind object;
  #L30ab60.  v1:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab64.  call temp:= `access$600`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.access$600:(Lokhttp3/internal/framed/FramedStream;)I` @kind static;
  #L30ab6a.  v1:= temp;
  #L30ab6c.  v3:= 0I;
  #L30ab6e.  call `writeData`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.writeData:(IZLokio/Buffer;J)V` @kind virtual;
  #L30ab74.  v1:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab78.  @monitorenter v1
  #L30ab7a.  v0:= 1I;
  #L30ab7c.  v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L30ab80.  @monitorexit v1
  #L30ab82.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab86.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30ab8c.  v0:= temp @kind object;
  #L30ab8e.  call `flush`(v0) @signature `Lokhttp3/internal/framed/FramedConnection;.flush:()V` @kind virtual;
  #L30ab94.  v0:= v6.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ab98.  call `access$1000`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1000:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30ab9e.  goto L30ab0a;
  #L30aba0.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30aba2.  @monitorexit v1
  #L30aba4.  throw v0;
  catch `java.lang.Throwable` @[L30ab00..L30ab0e] goto L30ab4e;
  catch `java.lang.Throwable` @[L30ab50..L30ab52] goto L30ab4e;
  catch `java.lang.Throwable` @[L30ab7c..L30ab82] goto L30aba0;
  catch `java.lang.Throwable` @[L30aba2..L30aba4] goto L30aba0;
}
procedure `void` `flush`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v4 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30abe0.  v0:= `@@okhttp3.internal.framed.FramedStream$FramedDataSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L30abe4.  if v0 != 0 then goto L30ac04;
  #L30abe8.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30abec.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L30abf2.  v0:= temp;
  #L30abf4.  if v0 == 0 then goto L30ac04;
  #L30abf8.  v0:= new `java.lang.AssertionError`;
  #L30abfc.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30ac02.  throw v0;
  #L30ac04.  v1:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ac08.  @monitorenter v1
  #L30ac0a.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ac0e.  call `access$1200`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1200:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30ac14.  @monitorexit v1
  #L30ac16.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30ac1a.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30ac20.  v0:= temp @kind wide;
  #L30ac22.  v2:= 0L;
  #L30ac26.  v0:= lcmp(v0, v2);
  #L30ac2a.  if v0 <= 0 then goto L30ac50;
  #L30ac2e.  v0:= 0I;
  #L30ac30.  call `emitDataFrame`(v4, v0) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.emitDataFrame:(Z)V` @kind direct;
  #L30ac36.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ac3a.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30ac40.  v0:= temp @kind object;
  #L30ac42.  call `flush`(v0) @signature `Lokhttp3/internal/framed/FramedConnection;.flush:()V` @kind virtual;
  #L30ac48.  goto L30ac16;
  #L30ac4a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ac4c.  @monitorexit v1
  #L30ac4e.  throw v0;
  #L30ac50.  return @kind void;
  catch `java.lang.Throwable` @[L30ac0a..L30ac16] goto L30ac4a;
  catch `java.lang.Throwable` @[L30ac4c..L30ac4e] goto L30ac4a;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v1 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30ac78.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ac7c.  call temp:= `access$1100`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1100:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30ac82.  v0:= temp @kind object;
  #L30ac84.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.framed.FramedStream$FramedDataSink` v4 @kind this, `okio.Buffer` v5 @kind object @name `source`, `long` v6 @name `byteCount`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30ac98.  v0:= `@@okhttp3.internal.framed.FramedStream$FramedDataSink.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L30ac9c.  if v0 != 0 then goto L30acbc;
  #L30aca0.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aca4.  call temp:= `holdsLock`(v0) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L30acaa.  v0:= temp;
  #L30acac.  if v0 == 0 then goto L30acbc;
  #L30acb0.  v0:= new `java.lang.AssertionError`;
  #L30acb4.  call `<init>`(v0) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30acba.  throw v0;
  #L30acbc.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30acc0.  call `write`(v0, v5, v6) @signature `Lokio/Buffer;.write:(Lokio/Buffer;J)V` @kind virtual;
  #L30acc6.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSink.sendBuffer` @type ^`okio.Buffer` @kind object;
  #L30acca.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30acd0.  v0:= temp @kind wide;
  #L30acd2.  v2:= 16384L;
  #L30acd6.  v0:= lcmp(v0, v2);
  #L30acda.  if v0 < 0 then goto L30ace8;
  #L30acde.  v0:= 0I;
  #L30ace0.  call `emitDataFrame`(v4, v0) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSink;.emitDataFrame:(Z)V` @kind direct;
  #L30ace6.  goto L30acc6;
  #L30ace8.  return @kind void;
}
