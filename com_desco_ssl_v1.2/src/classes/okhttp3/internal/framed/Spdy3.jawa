record `okhttp3.internal.framed.Spdy3` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.framed.Variant` @kind interface {
}
global `byte`[] `@@okhttp3.internal.framed.Spdy3.DICTIONARY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.FLAG_FIN` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.FLAG_UNIDIRECTIONAL` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_PING` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_SYN_REPLY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_SYN_STREAM` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Spdy3.VERSION` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/Spdy3;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L30d784.  v1:= "\u0000\u0000\u0000\u0007options\u0000\u0000\u0000\u0004head\u0000\u0000\u0000\u0004post\u0000\u0000\u0000\u0003put\u0000\u0000\u0000\u0006delete\u0000\u0000\u0000\u0005trace\u0000\u0000\u0000\u0006accept\u0000\u0000\u0000\u000Eaccept-charset\u0000\u0000\u0000\u000Faccept-encoding\u0000\u0000\u0000\u000Faccept-language\u0000\u0000\u0000\raccept-ranges\u0000\u0000\u0000\u0003age\u0000\u0000\u0000\u0005allow\u0000\u0000\u0000\rauthorization\u0000\u0000\u0000\rcache-control\u0000\u0000\u0000\nconnection\u0000\u0000\u0000\fcontent-base\u0000\u0000\u0000\u0010content-encoding\u0000\u0000\u0000\u0010content-language\u0000\u0000\u0000\u000Econtent-length\u0000\u0000\u0000\u0010content-location\u0000\u0000\u0000\u000Bcontent-md5\u0000\u0000\u0000\rcontent-range\u0000\u0000\u0000\fcontent-type\u0000\u0000\u0000\u0004date\u0000\u0000\u0000\u0004etag\u0000\u0000\u0000\u0006expect\u0000\u0000\u0000\u0007expires\u0000\u0000\u0000\u0004from\u0000\u0000\u0000\u0004host\u0000\u0000\u0000\bif-match\u0000\u0000\u0000\u0011if-modified-since\u0000\u0000\u0000\rif-none-match\u0000\u0000\u0000\bif-range\u0000\u0000\u0000\u0013if-unmodified-since\u0000\u0000\u0000\rlast-modified\u0000\u0000\u0000\blocation\u0000\u0000\u0000\fmax-forwards\u0000\u0000\u0000\u0006pragma\u0000\u0000\u0000\u0012proxy-authenticate\u0000\u0000\u0000\u0013proxy-authorization\u0000\u0000\u0000\u0005range\u0000\u0000\u0000\u0007referer\u0000\u0000\u0000\u000Bretry-after\u0000\u0000\u0000\u0006server\u0000\u0000\u0000\u0002te\u0000\u0000\u0000\u0007trailer\u0000\u0000\u0000\u0011transfer-encoding\u0000\u0000\u0000\u0007upgrade\u0000\u0000\u0000\nuser-agent\u0000\u0000\u0000\u0004vary\u0000\u0000\u0000\u0003via\u0000\u0000\u0000\u0007warning\u0000\u0000\u0000\u0010www-authenticate\u0000\u0000\u0000\u0006method\u0000\u0000\u0000\u0003get\u0000\u0000\u0000\u0006status\u0000\u0000\u0000\u0006200 OK\u0000\u0000\u0000\u0007version\u0000\u0000\u0000\bHTTP/1.1\u0000\u0000\u0000\u0003url\u0000\u0000\u0000\u0006public\u0000\u0000\u0000\nset-cookie\u0000\u0000\u0000\nkeep-alive\u0000\u0000\u0000\u0006origin100101201202205206300302303304305306307402405406407408409410411412413414415416417502504505203 Non-Authoritative Information204 No Content301 Moved Permanently400 Bad Request401 Unauthorized403 Forbidden404 Not Found500 Internal Server Error501 Not Implemented503 Service UnavailableJan Feb Mar Apr May Jun Jul Aug Sept Oct Nov Dec 00:00:00 Mon, Tue, Wed, Thu, Fri, Sat, Sun, GMTchunked,text/html,image/png,image/jpg,image/gif,application/xml,application/xhtml+xml,text/plain,text/javascript,publicprivatemax-age=gzip,deflate,sdchcharset=utf-8charset=iso-8859-1,utf-,*,enq=0." @kind object;
  #L30d788.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L30d78c.  call temp:= `name`(v2) @signature `Ljava/nio/charset/Charset;.name:()Ljava/lang/String;` @kind virtual;
  #L30d792.  v2:= temp @kind object;
  #L30d794.  call temp:= `getBytes`(v1, v2) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L30d79a.  v1:= temp @kind object;
  #L30d79c.  `@@okhttp3.internal.framed.Spdy3.DICTIONARY` @type ^`byte`[] := v1 @kind object;
  #L30d7a0.  return @kind void;
  #L30d7a2.  v0:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L30d7a4.  v1:= new `java.lang.AssertionError`;
  #L30d7a8.  call `<init>`(v1) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30d7ae.  throw v1;
  catch `java.io.UnsupportedEncodingException` @[L30d784..L30d7a0] goto L30d7a2;
}
procedure `void` `<init>`(`okhttp3.internal.framed.Spdy3` v0 @kind this) @signature `Lokhttp3/internal/framed/Spdy3;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30d7d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d7d6.  return @kind void;
}
procedure `okhttp3.Protocol` `getProtocol`(`okhttp3.internal.framed.Spdy3` v1 @kind this) @signature `Lokhttp3/internal/framed/Spdy3;.getProtocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d7e8.  v0:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L30d7ec.  return v0 @kind object;
}
procedure `okhttp3.internal.framed.FrameReader` `newReader`(`okhttp3.internal.framed.Spdy3` v1 @kind this, `okio.BufferedSource` v2 @kind object @name `source`, `boolean` v3 @name `client`) @signature `Lokhttp3/internal/framed/Spdy3;.newReader:(Lokio/BufferedSource;Z)Lokhttp3/internal/framed/FrameReader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d800.  v0:= new `okhttp3.internal.framed.Spdy3$Reader`;
  #L30d804.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/framed/Spdy3$Reader;.<init>:(Lokio/BufferedSource;Z)V` @kind direct;
  #L30d80a.  return v0 @kind object;
}
procedure `okhttp3.internal.framed.FrameWriter` `newWriter`(`okhttp3.internal.framed.Spdy3` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`, `boolean` v3 @name `client`) @signature `Lokhttp3/internal/framed/Spdy3;.newWriter:(Lokio/BufferedSink;Z)Lokhttp3/internal/framed/FrameWriter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d81c.  v0:= new `okhttp3.internal.framed.Spdy3$Writer`;
  #L30d820.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/framed/Spdy3$Writer;.<init>:(Lokio/BufferedSink;Z)V` @kind direct;
  #L30d826.  return v0 @kind object;
}
