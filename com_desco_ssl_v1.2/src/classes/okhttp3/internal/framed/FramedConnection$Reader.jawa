record `okhttp3.internal.framed.FramedConnection$Reader` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class, `okhttp3.internal.framed.FrameReader$Handler` @kind interface {
  `okhttp3.internal.framed.FrameReader` `okhttp3.internal.framed.FramedConnection$Reader.frameReader` @AccessFlag FINAL;
  `okhttp3.internal.framed.FramedConnection` `okhttp3.internal.framed.FramedConnection$Reader.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedConnection$Reader` v4 @kind this, `okhttp3.internal.framed.FramedConnection` v5 @kind object @name `this$0`, `okhttp3.internal.framed.FrameReader` v6 @kind object @name `frameReader`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.<init>:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/FrameReader;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30a1a0.  v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` := v5 @kind object;
  #L30a1a4.  v0:= "OkHttp %s" @kind object;
  #L30a1a8.  v1:= 1I;
  #L30a1aa.  v1:= new `java.lang.Object`[v1];
  #L30a1ae.  v2:= 0I;
  #L30a1b0.  call temp:= `access$1100`(v5) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1100:(Lokhttp3/internal/framed/FramedConnection;)Ljava/lang/String;` @kind static;
  #L30a1b6.  v3:= temp @kind object;
  #L30a1b8.  v1[v2]:= v3 @kind object;
  #L30a1bc.  call `<init>`(v4, v0, v1) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30a1c2.  v4.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` := v6 @kind object;
  #L30a1c6.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedConnection$Reader` v0 @kind this, `okhttp3.internal.framed.FramedConnection` v1 @kind object @name `x0`, `okhttp3.internal.framed.FrameReader` v2 @kind object @name `x1`, `okhttp3.internal.framed.FramedConnection$1` v3 @kind object @name `x2`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.<init>:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/FrameReader;Lokhttp3/internal/framed/FramedConnection$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30a1d8.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.<init>:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/FrameReader;)V` @kind direct;
  #L30a1de.  return @kind void;
}
procedure `void` `ackSettingsLater`(`okhttp3.internal.framed.FramedConnection$Reader` v6 @kind this, `okhttp3.internal.framed.Settings` v7 @kind object @name `peerSettings`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.ackSettingsLater:(Lokhttp3/internal/framed/Settings;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30a1f0.  call temp:= `access$2100`() @signature `Lokhttp3/internal/framed/FramedConnection;.access$2100:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L30a1f6.  v0:= temp @kind object;
  #L30a1f8.  v1:= new `okhttp3.internal.framed.FramedConnection$Reader$3`;
  #L30a1fc.  v2:= "OkHttp %s ACK Settings" @kind object;
  #L30a200.  v3:= 1I;
  #L30a202.  v3:= new `java.lang.Object`[v3];
  #L30a206.  v4:= 0I;
  #L30a208.  v5:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a20c.  call temp:= `access$1100`(v5) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1100:(Lokhttp3/internal/framed/FramedConnection;)Ljava/lang/String;` @kind static;
  #L30a212.  v5:= temp @kind object;
  #L30a214.  v3[v4]:= v5 @kind object;
  #L30a218.  call `<init>`(v1, v6, v2, v3, v7) @signature `Lokhttp3/internal/framed/FramedConnection$Reader$3;.<init>:(Lokhttp3/internal/framed/FramedConnection$Reader;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/framed/Settings;)V` @kind direct;
  #L30a21e.  call `execute`(v0, v1) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30a224.  return @kind void;
}
procedure `void` `ackSettings`(`okhttp3.internal.framed.FramedConnection$Reader` v0 @kind this) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.ackSettings:()V` @AccessFlag PUBLIC {
    temp;

  #L30a238.  return @kind void;
}
procedure `void` `alternateService`(`okhttp3.internal.framed.FramedConnection$Reader` v0 @kind this, `int` v1 @name `streamId`, `java.lang.String` v2 @kind object @name `origin`, `okio.ByteString` v3 @kind object @name `protocol`, `java.lang.String` v4 @kind object @name `host`, `int` v5 @name `port`, `long` v6 @name `maxAge`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.alternateService:(ILjava/lang/String;Lokio/ByteString;Ljava/lang/String;IJ)V` @AccessFlag PUBLIC {
    temp;

  #L30a24c.  return @kind void;
}
procedure `void` `data`(`okhttp3.internal.framed.FramedConnection$Reader` v4 @kind this, `boolean` v5 @name `inFinished`, `int` v6 @name `streamId`, `okio.BufferedSource` v7 @kind object @name `source`, `int` v8 @name `length`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.data:(ZILokio/BufferedSource;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30a260.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a264.  call temp:= `access$1300`(v1, v6) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1300:(Lokhttp3/internal/framed/FramedConnection;I)Z` @kind static;
  #L30a26a.  v1:= temp;
  #L30a26c.  if v1 == 0 then goto L30a27c;
  #L30a270.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a274.  call `access$1400`(v1, v6, v7, v8, v5) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1400:(Lokhttp3/internal/framed/FramedConnection;ILokio/BufferedSource;IZ)V` @kind static;
  #L30a27a.  return @kind void;
  #L30a27c.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a280.  call temp:= `getStream`(v1, v6) @signature `Lokhttp3/internal/framed/FramedConnection;.getStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a286.  v0:= temp @kind object;
  #L30a288.  if v0 != 0 then goto L30a2a4;
  #L30a28c.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a290.  v2:= `@@okhttp3.internal.framed.ErrorCode.INVALID_STREAM` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a294.  call `writeSynResetLater`(v1, v6, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.writeSynResetLater:(ILokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30a29a.  v2:= (`long`) v8 @kind i2l;
  #L30a29c.  call `skip`(v7, v2) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L30a2a2.  goto L30a27a;
  #L30a2a4.  call `receiveData`(v0, v7, v8) @signature `Lokhttp3/internal/framed/FramedStream;.receiveData:(Lokio/BufferedSource;I)V` @kind virtual;
  #L30a2aa.  if v5 == 0 then goto L30a27a;
  #L30a2ae.  call `receiveFin`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.receiveFin:()V` @kind virtual;
  #L30a2b4.  goto L30a27a;
}
procedure `void` `execute`(`okhttp3.internal.framed.FramedConnection$Reader` v5 @kind this) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.execute:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L30a2c8.  v0:= `@@okhttp3.internal.framed.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a2cc.  v2:= `@@okhttp3.internal.framed.ErrorCode.INTERNAL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a2d0.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a2d4.  v3:= v3.`okhttp3.internal.framed.FramedConnection.client` @type ^`boolean` @kind boolean;
  #L30a2d8.  if v3 != 0 then goto L30a2e6;
  #L30a2dc.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` @kind object;
  #L30a2e0.  call `readConnectionPreface`(v3) @signature `Lokhttp3/internal/framed/FrameReader;.readConnectionPreface:()V` @kind interface;
  #L30a2e6.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` @kind object;
  #L30a2ea.  call temp:= `nextFrame`(v3, v5) @signature `Lokhttp3/internal/framed/FrameReader;.nextFrame:(Lokhttp3/internal/framed/FrameReader$Handler;)Z` @kind interface;
  #L30a2f0.  v3:= temp;
  #L30a2f2.  if v3 != 0 then goto L30a2e6;
  #L30a2f6.  v0:= `@@okhttp3.internal.framed.ErrorCode.NO_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a2fa.  v2:= `@@okhttp3.internal.framed.ErrorCode.CANCEL` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a2fe.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a302.  call `access$1200`(v3, v0, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1200:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/ErrorCode;Lokhttp3/internal/framed/ErrorCode;)V` @kind static;
  #L30a308.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` @kind object;
  #L30a30c.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30a312.  return @kind void;
  #L30a314.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L30a316.  v0:= `@@okhttp3.internal.framed.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a31a.  v2:= `@@okhttp3.internal.framed.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a31e.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a322.  call `access$1200`(v3, v0, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1200:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/ErrorCode;Lokhttp3/internal/framed/ErrorCode;)V` @kind static;
  #L30a328.  v3:= v5.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` @kind object;
  #L30a32c.  call `closeQuietly`(v3) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30a332.  goto L30a312;
  #L30a334.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a336.  v4:= v5.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a33a.  call `access$1200`(v4, v0, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1200:(Lokhttp3/internal/framed/FramedConnection;Lokhttp3/internal/framed/ErrorCode;Lokhttp3/internal/framed/ErrorCode;)V` @kind static;
  #L30a340.  v4:= v5.`okhttp3.internal.framed.FramedConnection$Reader.frameReader` @type ^`okhttp3.internal.framed.FrameReader` @kind object;
  #L30a344.  call `closeQuietly`(v4) @signature `Lokhttp3/internal/Util;.closeQuietly:(Ljava/io/Closeable;)V` @kind static;
  #L30a34a.  throw v3;
  #L30a34c.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L30a34e.  goto L30a340;
  #L30a350.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L30a352.  goto L30a328;
  #L30a354.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L30a356.  goto L30a308;
  catch `java.io.IOException` @[L30a2d0..L30a2fe] goto L30a314;
  catch `java.lang.Throwable` @[L30a2d0..L30a2fe] goto L30a334;
  catch `java.io.IOException` @[L30a2fe..L30a308] goto L30a354;
  catch `java.lang.Throwable` @[L30a316..L30a31e] goto L30a334;
  catch `java.io.IOException` @[L30a31e..L30a328] goto L30a350;
  catch `java.io.IOException` @[L30a336..L30a340] goto L30a34c;
}
procedure `void` `goAway`(`okhttp3.internal.framed.FramedConnection$Reader` v6 @kind this, `int` v7 @name `lastGoodStreamId`, `okhttp3.internal.framed.ErrorCode` v8 @kind object @name `errorCode`, `okio.ByteString` v9 @kind object @name `debugData`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.goAway:(ILokhttp3/internal/framed/ErrorCode;Lokio/ByteString;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30a3a4.  call temp:= `size`(v9) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L30a3aa.  v2:= temp;
  #L30a3ac.  if v2 <= 0 then goto L30a3b0;
  #L30a3b0.  v3:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a3b4.  @monitorenter v3
  #L30a3b6.  v2:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a3ba.  call temp:= `access$1900`(v2) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a3c0.  v2:= temp @kind object;
  #L30a3c2.  call temp:= `values`(v2) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L30a3c8.  v2:= temp @kind object;
  #L30a3ca.  v4:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a3ce.  call temp:= `access$1900`(v4) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a3d4.  v4:= temp @kind object;
  #L30a3d6.  call temp:= `size`(v4) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30a3dc.  v4:= temp;
  #L30a3de.  v4:= new `okhttp3.internal.framed.FramedStream`[v4];
  #L30a3e2.  call temp:= `toArray`(v2, v4) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L30a3e8.  v1:= temp @kind object;
  #L30a3ea.  v1:= (`okhttp3.internal.framed.FramedStream`[]) v1 @kind object;
  #L30a3ee.  v2:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a3f2.  v4:= 1I;
  #L30a3f4.  call temp:= `access$1602`(v2, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1602:(Lokhttp3/internal/framed/FramedConnection;Z)Z` @kind static;
  #L30a3fa.  @monitorexit v3
  #L30a3fc.  v3:= length @variable v1;
  #L30a3fe.  v2:= 0I;
  #L30a400.  if v2 >= v3 then goto L30a448;
  #L30a404.  v0:= v1[v2] @kind object;
  #L30a408.  call temp:= `getId`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getId:()I` @kind virtual;
  #L30a40e.  v4:= temp;
  #L30a410.  if v4 <= v7 then goto L30a43c;
  #L30a414.  call temp:= `isLocallyInitiated`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.isLocallyInitiated:()Z` @kind virtual;
  #L30a41a.  v4:= temp;
  #L30a41c.  if v4 == 0 then goto L30a43c;
  #L30a420.  v4:= `@@okhttp3.internal.framed.ErrorCode.REFUSED_STREAM` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a424.  call `receiveRstStream`(v0, v4) @signature `Lokhttp3/internal/framed/FramedStream;.receiveRstStream:(Lokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30a42a.  v4:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a42e.  call temp:= `getId`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getId:()I` @kind virtual;
  #L30a434.  v5:= temp;
  #L30a436.  call temp:= `removeStream`(v4, v5) @signature `Lokhttp3/internal/framed/FramedConnection;.removeStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a43c.  v2:= v2 + 1;
  #L30a440.  goto L30a400;
  #L30a442.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a444.  @monitorexit v3
  #L30a446.  throw v2;
  #L30a448.  return @kind void;
  catch `java.lang.Throwable` @[L30a3b6..L30a3fc] goto L30a442;
  catch `java.lang.Throwable` @[L30a444..L30a446] goto L30a442;
}
procedure `void` `headers`(`okhttp3.internal.framed.FramedConnection$Reader` v9 @kind this, `boolean` v10 @name `outFinished`, `boolean` v11 @name `inFinished`, `int` v12 @name `streamId`, `int` v13 @name `associatedStreamId`, `java.util.List` v14 @kind object, `okhttp3.internal.framed.HeadersMode` v15 @kind object @name `headersMode`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.headers:(ZZIILjava/util/List;Lokhttp3/internal/framed/HeadersMode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30a470.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a474.  call temp:= `access$1300`(v1, v12) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1300:(Lokhttp3/internal/framed/FramedConnection;I)Z` @kind static;
  #L30a47a.  v1:= temp;
  #L30a47c.  if v1 == 0 then goto L30a48c;
  #L30a480.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a484.  call `access$1500`(v1, v12, v14, v11) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1500:(Lokhttp3/internal/framed/FramedConnection;ILjava/util/List;Z)V` @kind static;
  #L30a48a.  return @kind void;
  #L30a48c.  v7:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a490.  @monitorenter v7
  #L30a492.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a496.  call temp:= `access$1600`(v1) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1600:(Lokhttp3/internal/framed/FramedConnection;)Z` @kind static;
  #L30a49c.  v1:= temp;
  #L30a49e.  if v1 == 0 then goto L30a4ac;
  #L30a4a2.  @monitorexit v7
  #L30a4a4.  goto L30a48a;
  #L30a4a6.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a4a8.  @monitorexit v7
  #L30a4aa.  throw v1;
  #L30a4ac.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a4b0.  call temp:= `getStream`(v1, v12) @signature `Lokhttp3/internal/framed/FramedConnection;.getStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a4b6.  v6:= temp @kind object;
  #L30a4b8.  if v6 != 0 then goto L30a58a;
  #L30a4bc.  call temp:= `failIfStreamAbsent`(v15) @signature `Lokhttp3/internal/framed/HeadersMode;.failIfStreamAbsent:()Z` @kind virtual;
  #L30a4c2.  v1:= temp;
  #L30a4c4.  if v1 == 0 then goto L30a4da;
  #L30a4c8.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a4cc.  v2:= `@@okhttp3.internal.framed.ErrorCode.INVALID_STREAM` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a4d0.  call `writeSynResetLater`(v1, v12, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.writeSynResetLater:(ILokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30a4d6.  @monitorexit v7
  #L30a4d8.  goto L30a48a;
  #L30a4da.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a4de.  call temp:= `access$1700`(v1) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1700:(Lokhttp3/internal/framed/FramedConnection;)I` @kind static;
  #L30a4e4.  v1:= temp;
  #L30a4e6.  if v12 > v1 then goto L30a4ee;
  #L30a4ea.  @monitorexit v7
  #L30a4ec.  goto L30a48a;
  #L30a4ee.  v1:= v12 %% 2;
  #L30a4f2.  v2:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a4f6.  call temp:= `access$1800`(v2) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1800:(Lokhttp3/internal/framed/FramedConnection;)I` @kind static;
  #L30a4fc.  v2:= temp;
  #L30a4fe.  v2:= v2 %% 2;
  #L30a502.  if v1 != v2 then goto L30a50a;
  #L30a506.  @monitorexit v7
  #L30a508.  goto L30a48a;
  #L30a50a.  v0:= new `okhttp3.internal.framed.FramedStream`;
  #L30a50e.  v2:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a512.  v1:= v12;
  #L30a514.  v3:= v10;
  #L30a516.  v4:= v11;
  #L30a518.  v5:= v14 @kind object;
  #L30a51a.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/framed/FramedStream;.<init>:(ILokhttp3/internal/framed/FramedConnection;ZZLjava/util/List;)V` @kind direct;
  #L30a520.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a524.  call temp:= `access$1702`(v1, v12) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1702:(Lokhttp3/internal/framed/FramedConnection;I)I` @kind static;
  #L30a52a.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a52e.  call temp:= `access$1900`(v1) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a534.  v1:= temp @kind object;
  #L30a536.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30a53c.  v2:= temp @kind object;
  #L30a53e.  call temp:= `put`(v1, v2, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30a544.  call temp:= `access$2100`() @signature `Lokhttp3/internal/framed/FramedConnection;.access$2100:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L30a54a.  v1:= temp @kind object;
  #L30a54c.  v2:= new `okhttp3.internal.framed.FramedConnection$Reader$1`;
  #L30a550.  v3:= "OkHttp %s stream %d" @kind object;
  #L30a554.  v4:= 2I;
  #L30a556.  v4:= new `java.lang.Object`[v4];
  #L30a55a.  v5:= 0I;
  #L30a55c.  v8:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a560.  call temp:= `access$1100`(v8) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1100:(Lokhttp3/internal/framed/FramedConnection;)Ljava/lang/String;` @kind static;
  #L30a566.  v8:= temp @kind object;
  #L30a568.  v4[v5]:= v8 @kind object;
  #L30a56c.  v5:= 1I;
  #L30a56e.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30a574.  v8:= temp @kind object;
  #L30a576.  v4[v5]:= v8 @kind object;
  #L30a57a.  call `<init>`(v2, v9, v3, v4, v0) @signature `Lokhttp3/internal/framed/FramedConnection$Reader$1;.<init>:(Lokhttp3/internal/framed/FramedConnection$Reader;Ljava/lang/String;[Ljava/lang/Object;Lokhttp3/internal/framed/FramedStream;)V` @kind direct;
  #L30a580.  call `execute`(v1, v2) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30a586.  @monitorexit v7
  #L30a588.  goto L30a48a;
  #L30a58a.  @monitorexit v7
  #L30a58c.  call temp:= `failIfStreamPresent`(v15) @signature `Lokhttp3/internal/framed/HeadersMode;.failIfStreamPresent:()Z` @kind virtual;
  #L30a592.  v1:= temp;
  #L30a594.  if v1 == 0 then goto L30a5b0;
  #L30a598.  v1:= `@@okhttp3.internal.framed.ErrorCode.PROTOCOL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30a59c.  call `closeLater`(v6, v1) @signature `Lokhttp3/internal/framed/FramedStream;.closeLater:(Lokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30a5a2.  v1:= v9.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a5a6.  call temp:= `removeStream`(v1, v12) @signature `Lokhttp3/internal/framed/FramedConnection;.removeStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a5ac.  goto L30a48a;
  #L30a5b0.  call `receiveHeaders`(v6, v14, v15) @signature `Lokhttp3/internal/framed/FramedStream;.receiveHeaders:(Ljava/util/List;Lokhttp3/internal/framed/HeadersMode;)V` @kind virtual;
  #L30a5b6.  if v11 == 0 then goto L30a48a;
  #L30a5ba.  call `receiveFin`(v6) @signature `Lokhttp3/internal/framed/FramedStream;.receiveFin:()V` @kind virtual;
  #L30a5c0.  goto L30a48a;
  catch `java.lang.Throwable` @[L30a492..L30a4aa] goto L30a4a6;
  catch `java.lang.Throwable` @[L30a4ac..L30a58c] goto L30a4a6;
}
procedure `void` `ping`(`okhttp3.internal.framed.FramedConnection$Reader` v4 @kind this, `boolean` v5 @name `reply`, `int` v6 @name `payload1`, `int` v7 @name `payload2`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.ping:(ZII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30a5e8.  if v5 == 0 then goto L30a604;
  #L30a5ec.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a5f0.  call temp:= `access$2400`(v1, v6) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2400:(Lokhttp3/internal/framed/FramedConnection;I)Lokhttp3/internal/framed/Ping;` @kind static;
  #L30a5f6.  v0:= temp @kind object;
  #L30a5f8.  if v0 == 0 then goto L30a602;
  #L30a5fc.  call `receive`(v0) @signature `Lokhttp3/internal/framed/Ping;.receive:()V` @kind virtual;
  #L30a602.  return @kind void;
  #L30a604.  v1:= v4.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a608.  v2:= 1I;
  #L30a60a.  v3:= 0I;
  #L30a60c.  call `access$2500`(v1, v2, v6, v7, v3) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2500:(Lokhttp3/internal/framed/FramedConnection;ZIILokhttp3/internal/framed/Ping;)V` @kind static;
  #L30a612.  goto L30a602;
}
procedure `void` `priority`(`okhttp3.internal.framed.FramedConnection$Reader` v0 @kind this, `int` v1 @name `streamId`, `int` v2 @name `streamDependency`, `int` v3 @name `weight`, `boolean` v4 @name `exclusive`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.priority:(IIIZ)V` @AccessFlag PUBLIC {
    temp;

  #L30a624.  return @kind void;
}
procedure `void` `pushPromise`(`okhttp3.internal.framed.FramedConnection$Reader` v1 @kind this, `int` v2 @name `streamId`, `int` v3 @name `promisedStreamId`, `java.util.List` v4 @kind object) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.pushPromise:(IILjava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30a638.  v0:= v1.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a63c.  call `access$2600`(v0, v3, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2600:(Lokhttp3/internal/framed/FramedConnection;ILjava/util/List;)V` @kind static;
  #L30a642.  return @kind void;
}
procedure `void` `rstStream`(`okhttp3.internal.framed.FramedConnection$Reader` v2 @kind this, `int` v3 @name `streamId`, `okhttp3.internal.framed.ErrorCode` v4 @kind object @name `errorCode`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.rstStream:(ILokhttp3/internal/framed/ErrorCode;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30a654.  v1:= v2.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a658.  call temp:= `access$1300`(v1, v3) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1300:(Lokhttp3/internal/framed/FramedConnection;I)Z` @kind static;
  #L30a65e.  v1:= temp;
  #L30a660.  if v1 == 0 then goto L30a670;
  #L30a664.  v1:= v2.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a668.  call `access$2200`(v1, v3, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2200:(Lokhttp3/internal/framed/FramedConnection;ILokhttp3/internal/framed/ErrorCode;)V` @kind static;
  #L30a66e.  return @kind void;
  #L30a670.  v1:= v2.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a674.  call temp:= `removeStream`(v1, v3) @signature `Lokhttp3/internal/framed/FramedConnection;.removeStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a67a.  v0:= temp @kind object;
  #L30a67c.  if v0 == 0 then goto L30a66e;
  #L30a680.  call `receiveRstStream`(v0, v4) @signature `Lokhttp3/internal/framed/FramedStream;.receiveRstStream:(Lokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30a686.  goto L30a66e;
}
procedure `void` `settings`(`okhttp3.internal.framed.FramedConnection$Reader` v15 @kind this, `boolean` v16 @name `clearPrevious`, `okhttp3.internal.framed.Settings` v17 @kind object @name `newSettings`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.settings:(ZLokhttp3/internal/framed/Settings;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;

  #L30a698.  v2:= 0L;
  #L30a69c.  v7:= 0I;
  #L30a69e.  v9:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6a2.  @monitorenter v9
  #L30a6a4.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6a8.  v8:= v8.`okhttp3.internal.framed.FramedConnection.peerSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30a6ac.  v10:= 65536I;
  #L30a6b0.  call temp:= `getInitialWindowSize`(v8, v10) @signature `Lokhttp3/internal/framed/Settings;.getInitialWindowSize:(I)I` @kind virtual;
  #L30a6b6.  v5:= temp;
  #L30a6b8.  if v16 == 0 then goto L30a6ca;
  #L30a6bc.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6c0.  v8:= v8.`okhttp3.internal.framed.FramedConnection.peerSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30a6c4.  call `clear`(v8) @signature `Lokhttp3/internal/framed/Settings;.clear:()V` @kind virtual;
  #L30a6ca.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6ce.  v8:= v8.`okhttp3.internal.framed.FramedConnection.peerSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30a6d2.  v0:= v17 @kind object;
  #L30a6d6.  call `merge`(v8, v0) @signature `Lokhttp3/internal/framed/Settings;.merge:(Lokhttp3/internal/framed/Settings;)V` @kind virtual;
  #L30a6dc.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6e0.  call temp:= `getProtocol`(v8) @signature `Lokhttp3/internal/framed/FramedConnection;.getProtocol:()Lokhttp3/Protocol;` @kind virtual;
  #L30a6e6.  v8:= temp @kind object;
  #L30a6e8.  v10:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L30a6ec.  if v8 != v10 then goto L30a6fa;
  #L30a6f0.  v0:= v17 @kind object;
  #L30a6f4.  call `ackSettingsLater`(v15, v0) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.ackSettingsLater:(Lokhttp3/internal/framed/Settings;)V` @kind direct;
  #L30a6fa.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a6fe.  v8:= v8.`okhttp3.internal.framed.FramedConnection.peerSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30a702.  v10:= 65536I;
  #L30a706.  call temp:= `getInitialWindowSize`(v8, v10) @signature `Lokhttp3/internal/framed/Settings;.getInitialWindowSize:(I)I` @kind virtual;
  #L30a70c.  v4:= temp;
  #L30a70e.  v8:= -1I;
  #L30a710.  if v4 == v8 then goto L30a798;
  #L30a714.  if v4 == v5 then goto L30a798;
  #L30a718.  v8:= v4 - v5 @kind int;
  #L30a71c.  v2:= (`long`) v8 @kind i2l;
  #L30a71e.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a722.  call temp:= `access$2300`(v8) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2300:(Lokhttp3/internal/framed/FramedConnection;)Z` @kind static;
  #L30a728.  v8:= temp;
  #L30a72a.  if v8 != 0 then goto L30a744;
  #L30a72e.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a732.  call `addBytesToWriteWindow`(v8, v2) @signature `Lokhttp3/internal/framed/FramedConnection;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L30a738.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a73c.  v10:= 1I;
  #L30a73e.  call temp:= `access$2302`(v8, v10) @signature `Lokhttp3/internal/framed/FramedConnection;.access$2302:(Lokhttp3/internal/framed/FramedConnection;Z)Z` @kind static;
  #L30a744.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a748.  call temp:= `access$1900`(v8) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a74e.  v8:= temp @kind object;
  #L30a750.  call temp:= `isEmpty`(v8) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L30a756.  v8:= temp;
  #L30a758.  if v8 != 0 then goto L30a798;
  #L30a75c.  v8:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a760.  call temp:= `access$1900`(v8) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a766.  v8:= temp @kind object;
  #L30a768.  call temp:= `values`(v8) @signature `Ljava/util/Map;.values:()Ljava/util/Collection;` @kind interface;
  #L30a76e.  v8:= temp @kind object;
  #L30a770.  v10:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a774.  call temp:= `access$1900`(v10) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1900:(Lokhttp3/internal/framed/FramedConnection;)Ljava/util/Map;` @kind static;
  #L30a77a.  v10:= temp @kind object;
  #L30a77c.  call temp:= `size`(v10) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L30a782.  v10:= temp;
  #L30a784.  v10:= new `okhttp3.internal.framed.FramedStream`[v10];
  #L30a788.  call temp:= `toArray`(v8, v10) @signature `Ljava/util/Collection;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind interface;
  #L30a78e.  v8:= temp @kind object;
  #L30a790.  v0:= v8 @kind object;
  #L30a792.  v0:= (`okhttp3.internal.framed.FramedStream`[]) v0 @kind object;
  #L30a796.  v7:= v0 @kind object;
  #L30a798.  call temp:= `access$2100`() @signature `Lokhttp3/internal/framed/FramedConnection;.access$2100:()Ljava/util/concurrent/ExecutorService;` @kind static;
  #L30a79e.  v8:= temp @kind object;
  #L30a7a0.  v10:= new `okhttp3.internal.framed.FramedConnection$Reader$2`;
  #L30a7a4.  v11:= "OkHttp %s settings" @kind object;
  #L30a7a8.  v12:= 1I;
  #L30a7aa.  v12:= new `java.lang.Object`[v12];
  #L30a7ae.  v13:= 0I;
  #L30a7b0.  v14:= v15.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a7b4.  call temp:= `access$1100`(v14) @signature `Lokhttp3/internal/framed/FramedConnection;.access$1100:(Lokhttp3/internal/framed/FramedConnection;)Ljava/lang/String;` @kind static;
  #L30a7ba.  v14:= temp @kind object;
  #L30a7bc.  v12[v13]:= v14 @kind object;
  #L30a7c0.  call `<init>`(v10, v15, v11, v12) @signature `Lokhttp3/internal/framed/FramedConnection$Reader$2;.<init>:(Lokhttp3/internal/framed/FramedConnection$Reader;Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L30a7c6.  call `execute`(v8, v10) @signature `Ljava/util/concurrent/ExecutorService;.execute:(Ljava/lang/Runnable;)V` @kind interface;
  #L30a7cc.  @monitorexit v9
  #L30a7ce.  if v7 == 0 then goto L30a806;
  #L30a7d2.  v8:= 0L;
  #L30a7d6.  v8:= lcmp(v2, v8);
  #L30a7da.  if v8 == 0 then goto L30a806;
  #L30a7de.  v9:= length @variable v7;
  #L30a7e0.  v8:= 0I;
  #L30a7e2.  if v8 >= v9 then goto L30a806;
  #L30a7e6.  v6:= v7[v8] @kind object;
  #L30a7ea.  @monitorenter v6
  #L30a7ec.  call `addBytesToWriteWindow`(v6, v2) @signature `Lokhttp3/internal/framed/FramedStream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L30a7f2.  @monitorexit v6
  #L30a7f4.  v8:= v8 + 1;
  #L30a7f8.  goto L30a7e2;
  #L30a7fa.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a7fc.  @monitorexit v9
  #L30a7fe.  throw v8;
  #L30a800.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a802.  @monitorexit v6
  #L30a804.  throw v8;
  #L30a806.  return @kind void;
  catch `java.lang.Throwable` @[L30a6a4..L30a7ce] goto L30a7fa;
  catch `java.lang.Throwable` @[L30a7ec..L30a7f4] goto L30a800;
  catch `java.lang.Throwable` @[L30a7fc..L30a7fe] goto L30a7fa;
  catch `java.lang.Throwable` @[L30a802..L30a804] goto L30a800;
}
procedure `void` `windowUpdate`(`okhttp3.internal.framed.FramedConnection$Reader` v6 @kind this, `int` v7 @name `streamId`, `long` v8 @name `windowSizeIncrement`) @signature `Lokhttp3/internal/framed/FramedConnection$Reader;.windowUpdate:(IJ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30a840.  if v7 != 0 then goto L30a86c;
  #L30a844.  v2:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a848.  @monitorenter v2
  #L30a84a.  v1:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a84e.  v4:= v1.`okhttp3.internal.framed.FramedConnection.bytesLeftInWriteWindow` @type ^`long` @kind wide;
  #L30a852.  v4:= v4 + v8 @kind long;
  #L30a854.  v1.`okhttp3.internal.framed.FramedConnection.bytesLeftInWriteWindow` @type ^`long` := v4 @kind wide;
  #L30a858.  v1:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a85c.  call `notifyAll`(v1) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30a862.  @monitorexit v2
  #L30a864.  return @kind void;
  #L30a866.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a868.  @monitorexit v2
  #L30a86a.  throw v1;
  #L30a86c.  v1:= v6.`okhttp3.internal.framed.FramedConnection$Reader.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30a870.  call temp:= `getStream`(v1, v7) @signature `Lokhttp3/internal/framed/FramedConnection;.getStream:(I)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30a876.  v0:= temp @kind object;
  #L30a878.  if v0 == 0 then goto L30a864;
  #L30a87c.  @monitorenter v0
  #L30a87e.  call `addBytesToWriteWindow`(v0, v8) @signature `Lokhttp3/internal/framed/FramedStream;.addBytesToWriteWindow:(J)V` @kind virtual;
  #L30a884.  @monitorexit v0
  #L30a886.  goto L30a864;
  #L30a888.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30a88a.  @monitorexit v0
  #L30a88c.  throw v1;
  catch `java.lang.Throwable` @[L30a84a..L30a86a] goto L30a866;
  catch `java.lang.Throwable` @[L30a87e..L30a88c] goto L30a888;
}
