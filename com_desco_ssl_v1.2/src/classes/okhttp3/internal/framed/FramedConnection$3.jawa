record `okhttp3.internal.framed.FramedConnection$3` @kind class @AccessFlag  extends `okhttp3.internal.NamedRunnable` @kind class {
  `okhttp3.internal.framed.FramedConnection` `okhttp3.internal.framed.FramedConnection$3.this$0` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.framed.FramedConnection$3.val$payload1` @AccessFlag FINAL_SYNTHETIC;
  `int` `okhttp3.internal.framed.FramedConnection$3.val$payload2` @AccessFlag FINAL_SYNTHETIC;
  `okhttp3.internal.framed.Ping` `okhttp3.internal.framed.FramedConnection$3.val$ping` @AccessFlag FINAL_SYNTHETIC;
  `boolean` `okhttp3.internal.framed.FramedConnection$3.val$reply` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedConnection$3` v0 @kind this, `okhttp3.internal.framed.FramedConnection` v1 @kind object @name `this$0`, `java.lang.String` v2 @kind object @name `format`, `java.lang.Object`[] v3 @kind object @name `args`, `boolean` v4 , `int` v5 , `int` v6 , `okhttp3.internal.framed.Ping` v7 @kind object) @signature `Lokhttp3/internal/framed/FramedConnection$3;.<init>:(Lokhttp3/internal/framed/FramedConnection;Ljava/lang/String;[Ljava/lang/Object;ZIILokhttp3/internal/framed/Ping;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L309ca8.  v0.`okhttp3.internal.framed.FramedConnection$3.this$0` @type ^`okhttp3.internal.framed.FramedConnection` := v1 @kind object;
  #L309cac.  v0.`okhttp3.internal.framed.FramedConnection$3.val$reply` @type ^`boolean` := v4 @kind boolean;
  #L309cb0.  v0.`okhttp3.internal.framed.FramedConnection$3.val$payload1` @type ^`int` := v5;
  #L309cb4.  v0.`okhttp3.internal.framed.FramedConnection$3.val$payload2` @type ^`int` := v6;
  #L309cb8.  v0.`okhttp3.internal.framed.FramedConnection$3.val$ping` @type ^`okhttp3.internal.framed.Ping` := v7 @kind object;
  #L309cbc.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/NamedRunnable;.<init>:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind direct;
  #L309cc2.  return @kind void;
}
procedure `void` `execute`(`okhttp3.internal.framed.FramedConnection$3` v5 @kind this) @signature `Lokhttp3/internal/framed/FramedConnection$3;.execute:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L309cd4.  v0:= v5.`okhttp3.internal.framed.FramedConnection$3.this$0` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L309cd8.  v1:= v5.`okhttp3.internal.framed.FramedConnection$3.val$reply` @type ^`boolean` @kind boolean;
  #L309cdc.  v2:= v5.`okhttp3.internal.framed.FramedConnection$3.val$payload1` @type ^`int`;
  #L309ce0.  v3:= v5.`okhttp3.internal.framed.FramedConnection$3.val$payload2` @type ^`int`;
  #L309ce4.  v4:= v5.`okhttp3.internal.framed.FramedConnection$3.val$ping` @type ^`okhttp3.internal.framed.Ping` @kind object;
  #L309ce8.  call `access$900`(v0, v1, v2, v3, v4) @signature `Lokhttp3/internal/framed/FramedConnection;.access$900:(Lokhttp3/internal/framed/FramedConnection;ZIILokhttp3/internal/framed/Ping;)V` @kind static;
  #L309cee.  return @kind void;
  #L309cf0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L309cf2.  goto L309cee;
  catch `java.io.IOException` @[L309cd4..L309cee] goto L309cf0;
}
