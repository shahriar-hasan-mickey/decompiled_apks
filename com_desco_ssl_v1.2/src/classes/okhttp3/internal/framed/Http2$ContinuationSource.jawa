record `okhttp3.internal.framed.Http2$ContinuationSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `byte` `okhttp3.internal.framed.Http2$ContinuationSource.flags` @AccessFlag ;
  `int` `okhttp3.internal.framed.Http2$ContinuationSource.left` @AccessFlag ;
  `int` `okhttp3.internal.framed.Http2$ContinuationSource.length` @AccessFlag ;
  `short` `okhttp3.internal.framed.Http2$ContinuationSource.padding` @AccessFlag ;
  `okio.BufferedSource` `okhttp3.internal.framed.Http2$ContinuationSource.source` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.framed.Http2$ContinuationSource.streamId` @AccessFlag ;
}
procedure `void` `<init>`(`okhttp3.internal.framed.Http2$ContinuationSource` v0 @kind this, `okio.BufferedSource` v1 @kind object @name `source`) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.<init>:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30b234.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30b23a.  v0.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` := v1 @kind object;
  #L30b23e.  return @kind void;
}
procedure `void` `readContinuationHeader`(`okhttp3.internal.framed.Http2$ContinuationSource` v8 @kind this) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.readContinuationHeader:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30b250.  v7:= 1I;
  #L30b252.  v6:= 0I;
  #L30b254.  v0:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.streamId` @type ^`int`;
  #L30b258.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b25c.  call temp:= `access$300`(v2) @signature `Lokhttp3/internal/framed/Http2;.access$300:(Lokio/BufferedSource;)I` @kind static;
  #L30b262.  v2:= temp;
  #L30b264.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.left` @type ^`int` := v2;
  #L30b268.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.length` @type ^`int` := v2;
  #L30b26c.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b270.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L30b276.  v2:= temp;
  #L30b278.  v2:= v2 ^& 255;
  #L30b27c.  v1:= (`byte`) v2 @kind i2b;
  #L30b27e.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b282.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L30b288.  v2:= temp;
  #L30b28a.  v2:= v2 ^& 255;
  #L30b28e.  v2:= (`byte`) v2 @kind i2b;
  #L30b290.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.flags` @type ^`byte` := v2 @kind byte;
  #L30b294.  call temp:= `access$100`() @signature `Lokhttp3/internal/framed/Http2;.access$100:()Ljava/util/logging/Logger;` @kind static;
  #L30b29a.  v2:= temp @kind object;
  #L30b29c.  v3:= `@@java.util.logging.Level.FINE` @type ^`java.util.logging.Level` @kind object;
  #L30b2a0.  call temp:= `isLoggable`(v2, v3) @signature `Ljava/util/logging/Logger;.isLoggable:(Ljava/util/logging/Level;)Z` @kind virtual;
  #L30b2a6.  v2:= temp;
  #L30b2a8.  if v2 == 0 then goto L30b2ce;
  #L30b2ac.  call temp:= `access$100`() @signature `Lokhttp3/internal/framed/Http2;.access$100:()Ljava/util/logging/Logger;` @kind static;
  #L30b2b2.  v2:= temp @kind object;
  #L30b2b4.  v3:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.streamId` @type ^`int`;
  #L30b2b8.  v4:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.length` @type ^`int`;
  #L30b2bc.  v5:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L30b2c0.  call temp:= `formatHeader`(v7, v3, v4, v1, v5) @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.formatHeader:(ZIIBB)Ljava/lang/String;` @kind static;
  #L30b2c6.  v3:= temp @kind object;
  #L30b2c8.  call `fine`(v2, v3) @signature `Ljava/util/logging/Logger;.fine:(Ljava/lang/String;)V` @kind virtual;
  #L30b2ce.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b2d2.  call temp:= `readInt`(v2) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L30b2d8.  v2:= temp;
  #L30b2da.  v3:= 2147483647I;
  #L30b2e0.  v2:= v2 ^& v3 @kind int;
  #L30b2e2.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.streamId` @type ^`int` := v2;
  #L30b2e6.  v2:= 9I;
  #L30b2ea.  if v1 == v2 then goto L30b30c;
  #L30b2ee.  v2:= "%s != TYPE_CONTINUATION" @kind object;
  #L30b2f2.  v3:= new `java.lang.Object`[v7];
  #L30b2f6.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L30b2fc.  v4:= temp @kind object;
  #L30b2fe.  v3[v6]:= v4 @kind object;
  #L30b302.  call temp:= `access$200`(v2, v3) @signature `Lokhttp3/internal/framed/Http2;.access$200:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L30b308.  v2:= temp @kind object;
  #L30b30a.  throw v2;
  #L30b30c.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.streamId` @type ^`int`;
  #L30b310.  if v2 == v0 then goto L30b326;
  #L30b314.  v2:= "TYPE_CONTINUATION streamId changed" @kind object;
  #L30b318.  v3:= new `java.lang.Object`[v6];
  #L30b31c.  call temp:= `access$200`(v2, v3) @signature `Lokhttp3/internal/framed/Http2;.access$200:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L30b322.  v2:= temp @kind object;
  #L30b324.  throw v2;
  #L30b326.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.framed.Http2$ContinuationSource` v0 @kind this) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.close:()V` @AccessFlag PUBLIC {
    temp;

  #L30b338.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.framed.Http2$ContinuationSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30b34c.  v2:= -1L;
  #L30b350.  v4:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.left` @type ^`int`;
  #L30b354.  if v4 != 0 then goto L30b386;
  #L30b358.  v4:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b35c.  v5:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.padding` @type ^`short` @kind short;
  #L30b360.  v6:= (`long`) v5 @kind i2l;
  #L30b362.  call `skip`(v4, v6) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L30b368.  v4:= 0I;
  #L30b36a.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.padding` @type ^`short` := v4 @kind char;
  #L30b36e.  v4:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.flags` @type ^`byte` @kind byte;
  #L30b372.  v4:= v4 ^& 4;
  #L30b376.  if v4 == 0 then goto L30b37e;
  #L30b37a.  v0:= v2 @kind wide;
  #L30b37c.  return v0 @kind wide;
  #L30b37e.  call `readContinuationHeader`(v8) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.readContinuationHeader:()V` @kind direct;
  #L30b384.  goto L30b350;
  #L30b386.  v4:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b38a.  v5:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.left` @type ^`int`;
  #L30b38e.  v6:= (`long`) v5 @kind i2l;
  #L30b390.  call temp:= `min`(v10, v6) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L30b396.  v6:= temp @kind wide;
  #L30b398.  call temp:= `read`(v4, v9, v6) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L30b39e.  v0:= temp @kind wide;
  #L30b3a0.  v4:= lcmp(v0, v2);
  #L30b3a4.  if v4 != 0 then goto L30b3ac;
  #L30b3a8.  v0:= v2 @kind wide;
  #L30b3aa.  goto L30b37c;
  #L30b3ac.  v2:= v8.`okhttp3.internal.framed.Http2$ContinuationSource.left` @type ^`int`;
  #L30b3b0.  v2:= (`long`) v2 @kind i2l;
  #L30b3b2.  v2:= v2 - v0 @kind long;
  #L30b3b4.  v2:= (`int`) v2 @kind l2i;
  #L30b3b6.  v8.`okhttp3.internal.framed.Http2$ContinuationSource.left` @type ^`int` := v2;
  #L30b3ba.  goto L30b37c;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.framed.Http2$ContinuationSource` v1 @kind this) @signature `Lokhttp3/internal/framed/Http2$ContinuationSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30b3cc.  v0:= v1.`okhttp3.internal.framed.Http2$ContinuationSource.source` @type ^`okio.BufferedSource` @kind object;
  #L30b3d0.  call temp:= `timeout`(v0) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L30b3d6.  v0:= temp @kind object;
  #L30b3d8.  return v0 @kind object;
}
