record `okhttp3.internal.framed.FramedStream$FramedDataSource` @kind class @AccessFlag FINAL extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.framed.FramedStream$FramedDataSource.closed` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.framed.FramedStream$FramedDataSource.finished` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.framed.FramedStream$FramedDataSource.maxByteCount` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @AccessFlag PRIVATE_FINAL;
  `okio.Buffer` `okhttp3.internal.framed.FramedStream$FramedDataSource.receiveBuffer` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.framed.FramedStream` `okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
global `boolean` `@@okhttp3.internal.framed.FramedStream$FramedDataSource.$assertionsDisabled` @AccessFlag STATIC_FINAL_SYNTHETIC;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30acfc.  v0:= constclass @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ad00.  call temp:= `desiredAssertionStatus`(v0) @signature `Ljava/lang/Class;.desiredAssertionStatus:()Z` @kind virtual;
  #L30ad06.  v0:= temp;
  #L30ad08.  if v0 != 0 then goto L30ad14;
  #L30ad0c.  v0:= 1I;
  #L30ad0e.  `@@okhttp3.internal.framed.FramedStream$FramedDataSource.$assertionsDisabled` @type ^`boolean` := v0 @kind boolean;
  #L30ad12.  return @kind void;
  #L30ad14.  v0:= 0I;
  #L30ad16.  goto L30ad0e;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v2 @kind this, `okhttp3.internal.framed.FramedStream` v3 @kind object, `long` v4 @name `maxByteCount`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.<init>:(Lokhttp3/internal/framed/FramedStream;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30ad28.  v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` := v3 @kind object;
  #L30ad2c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30ad32.  v0:= new `okio.Buffer`;
  #L30ad36.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L30ad3c.  v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.receiveBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L30ad40.  v0:= new `okio.Buffer`;
  #L30ad44.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L30ad4a.  v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` := v0 @kind object;
  #L30ad4e.  v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.maxByteCount` @type ^`long` := v4 @kind wide;
  #L30ad52.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v0 @kind this, `okhttp3.internal.framed.FramedStream` v1 @kind object @name `x0`, `long` v2 @name `x1`, `okhttp3.internal.framed.FramedStream$1` v4 @kind object @name `x2`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.<init>:(Lokhttp3/internal/framed/FramedStream;JLokhttp3/internal/framed/FramedStream$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30ad64.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.<init>:(Lokhttp3/internal/framed/FramedStream;J)V` @kind direct;
  #L30ad6a.  return @kind void;
}
procedure `boolean` `access$100`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.access$100:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30ad7c.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSource.finished` @type ^`boolean` @kind boolean;
  #L30ad80.  return v0;
}
procedure `boolean` `access$102`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v0 @kind object @name `x0`, `boolean` v1 @name `x1`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.access$102:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;Z)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30ad94.  v0.`okhttp3.internal.framed.FramedStream$FramedDataSource.finished` @type ^`boolean` := v1 @kind boolean;
  #L30ad98.  return v1;
}
procedure `boolean` `access$300`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.access$300:(Lokhttp3/internal/framed/FramedStream$FramedDataSource;)Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30adac.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSource.closed` @type ^`boolean` @kind boolean;
  #L30adb0.  return v0;
}
procedure `void` `checkNotClosed`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v2 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.checkNotClosed:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L30adc4.  v0:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.closed` @type ^`boolean` @kind boolean;
  #L30adc8.  if v0 == 0 then goto L30addc;
  #L30adcc.  v0:= new `java.io.IOException`;
  #L30add0.  v1:= "stream closed" @kind object;
  #L30add4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30adda.  throw v0;
  #L30addc.  v0:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ade0.  call temp:= `access$800`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$800:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/ErrorCode;` @kind static;
  #L30ade6.  v0:= temp @kind object;
  #L30ade8.  if v0 == 0 then goto L30ae04;
  #L30adec.  v0:= new `okhttp3.internal.framed.StreamResetException`;
  #L30adf0.  v1:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30adf4.  call temp:= `access$800`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.access$800:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/ErrorCode;` @kind static;
  #L30adfa.  v1:= temp @kind object;
  #L30adfc.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/framed/StreamResetException;.<init>:(Lokhttp3/internal/framed/ErrorCode;)V` @kind direct;
  #L30ae02.  throw v0;
  #L30ae04.  return @kind void;
}
procedure `void` `waitUntilReadable`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v4 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.waitUntilReadable:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30ae18.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ae1c.  call temp:= `access$700`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$700:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30ae22.  v0:= temp @kind object;
  #L30ae24.  call `enter`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.enter:()V` @kind virtual;
  #L30ae2a.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30ae2e.  call temp:= `size`(v0) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30ae34.  v0:= temp @kind wide;
  #L30ae36.  v2:= 0L;
  #L30ae3a.  v0:= lcmp(v0, v2);
  #L30ae3e.  if v0 != 0 then goto L30ae84;
  #L30ae42.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.finished` @type ^`boolean` @kind boolean;
  #L30ae46.  if v0 != 0 then goto L30ae84;
  #L30ae4a.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.closed` @type ^`boolean` @kind boolean;
  #L30ae4e.  if v0 != 0 then goto L30ae84;
  #L30ae52.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ae56.  call temp:= `access$800`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$800:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/ErrorCode;` @kind static;
  #L30ae5c.  v0:= temp @kind object;
  #L30ae5e.  if v0 != 0 then goto L30ae84;
  #L30ae62.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ae66.  call `access$900`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$900:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30ae6c.  goto L30ae2a;
  #L30ae6e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30ae70.  v1:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ae74.  call temp:= `access$700`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.access$700:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30ae7a.  v1:= temp @kind object;
  #L30ae7c.  call `exitAndThrowIfTimedOut`(v1) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30ae82.  throw v0;
  #L30ae84.  v0:= v4.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ae88.  call temp:= `access$700`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$700:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30ae8e.  v0:= temp @kind object;
  #L30ae90.  call `exitAndThrowIfTimedOut`(v0) @signature `Lokhttp3/internal/framed/FramedStream$StreamTimeout;.exitAndThrowIfTimedOut:()V` @kind virtual;
  #L30ae96.  return @kind void;
  catch `java.lang.Throwable` @[L30ae2a..L30ae6c] goto L30ae6e;
}
procedure `void` `close`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v2 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30aeb4.  v1:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aeb8.  @monitorenter v1
  #L30aeba.  v0:= 1I;
  #L30aebc.  v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L30aec0.  v0:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30aec4.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L30aeca.  v0:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aece.  call `notifyAll`(v0) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30aed4.  @monitorexit v1
  #L30aed6.  v0:= v2.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aeda.  call `access$1000`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$1000:(Lokhttp3/internal/framed/FramedStream;)V` @kind static;
  #L30aee0.  return @kind void;
  #L30aee2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30aee4.  @monitorexit v1
  #L30aee6.  throw v0;
  catch `java.lang.Throwable` @[L30aebc..L30aed6] goto L30aee2;
  catch `java.lang.Throwable` @[L30aee4..L30aee6] goto L30aee2;
}
procedure `long` `read`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30af0c.  v6:= 0L;
  #L30af10.  v2:= lcmp(v10, v6);
  #L30af14.  if v2 >= 0 then goto L30af4a;
  #L30af18.  v2:= new `java.lang.IllegalArgumentException`;
  #L30af1c.  v3:= new `java.lang.StringBuilder`;
  #L30af20.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30af26.  v4:= "byteCount < 0: " @kind object;
  #L30af2a.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30af30.  v3:= temp @kind object;
  #L30af32.  call temp:= `append`(v3, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30af38.  v3:= temp @kind object;
  #L30af3a.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30af40.  v3:= temp @kind object;
  #L30af42.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30af48.  throw v2;
  #L30af4a.  v3:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30af4e.  @monitorenter v3
  #L30af50.  call `waitUntilReadable`(v8) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.waitUntilReadable:()V` @kind direct;
  #L30af56.  call `checkNotClosed`(v8) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.checkNotClosed:()V` @kind direct;
  #L30af5c.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30af60.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30af66.  v4:= temp @kind wide;
  #L30af68.  v2:= lcmp(v4, v6);
  #L30af6c.  if v2 != 0 then goto L30af78;
  #L30af70.  v0:= -1L;
  #L30af74.  @monitorexit v3
  #L30af76.  return v0 @kind wide;
  #L30af78.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30af7c.  v4:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30af80.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30af86.  v4:= temp @kind wide;
  #L30af88.  call temp:= `min`(v10, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L30af8e.  v4:= temp @kind wide;
  #L30af90.  call temp:= `read`(v2, v9, v4) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L30af96.  v0:= temp @kind wide;
  #L30af98.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30af9c.  v4:= v2.`okhttp3.internal.framed.FramedStream.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30afa0.  v4:= v4 + v0 @kind long;
  #L30afa2.  v2.`okhttp3.internal.framed.FramedStream.unacknowledgedBytesRead` @type ^`long` := v4 @kind wide;
  #L30afa6.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30afaa.  v4:= v2.`okhttp3.internal.framed.FramedStream.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30afae.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30afb2.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30afb8.  v2:= temp @kind object;
  #L30afba.  v2:= v2.`okhttp3.internal.framed.FramedConnection.okHttpSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30afbe.  v6:= 65536I;
  #L30afc2.  call temp:= `getInitialWindowSize`(v2, v6) @signature `Lokhttp3/internal/framed/Settings;.getInitialWindowSize:(I)I` @kind virtual;
  #L30afc8.  v2:= temp;
  #L30afca.  v2:= v2 / 2;
  #L30afce.  v6:= (`long`) v2 @kind i2l;
  #L30afd0.  v2:= lcmp(v4, v6);
  #L30afd4.  if v2 < 0 then goto L30b00a;
  #L30afd8.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30afdc.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30afe2.  v2:= temp @kind object;
  #L30afe4.  v4:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30afe8.  call temp:= `access$600`(v4) @signature `Lokhttp3/internal/framed/FramedStream;.access$600:(Lokhttp3/internal/framed/FramedStream;)I` @kind static;
  #L30afee.  v4:= temp;
  #L30aff0.  v5:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30aff4.  v6:= v5.`okhttp3.internal.framed.FramedStream.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30aff8.  call `writeWindowUpdateLater`(v2, v4, v6) @signature `Lokhttp3/internal/framed/FramedConnection;.writeWindowUpdateLater:(IJ)V` @kind virtual;
  #L30affe.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b002.  v4:= 0L;
  #L30b006.  v2.`okhttp3.internal.framed.FramedStream.unacknowledgedBytesRead` @type ^`long` := v4 @kind wide;
  #L30b00a.  @monitorexit v3
  #L30b00c.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b010.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b016.  v3:= temp @kind object;
  #L30b018.  @monitorenter v3
  #L30b01a.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b01e.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b024.  v2:= temp @kind object;
  #L30b026.  v4:= v2.`okhttp3.internal.framed.FramedConnection.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30b02a.  v4:= v4 + v0 @kind long;
  #L30b02c.  v2.`okhttp3.internal.framed.FramedConnection.unacknowledgedBytesRead` @type ^`long` := v4 @kind wide;
  #L30b030.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b034.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b03a.  v2:= temp @kind object;
  #L30b03c.  v4:= v2.`okhttp3.internal.framed.FramedConnection.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30b040.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b044.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b04a.  v2:= temp @kind object;
  #L30b04c.  v2:= v2.`okhttp3.internal.framed.FramedConnection.okHttpSettings` @type ^`okhttp3.internal.framed.Settings` @kind object;
  #L30b050.  v6:= 65536I;
  #L30b054.  call temp:= `getInitialWindowSize`(v2, v6) @signature `Lokhttp3/internal/framed/Settings;.getInitialWindowSize:(I)I` @kind virtual;
  #L30b05a.  v2:= temp;
  #L30b05c.  v2:= v2 / 2;
  #L30b060.  v6:= (`long`) v2 @kind i2l;
  #L30b062.  v2:= lcmp(v4, v6);
  #L30b066.  if v2 < 0 then goto L30b0a2;
  #L30b06a.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b06e.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b074.  v2:= temp @kind object;
  #L30b076.  v4:= 0I;
  #L30b078.  v5:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b07c.  call temp:= `access$500`(v5) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b082.  v5:= temp @kind object;
  #L30b084.  v6:= v5.`okhttp3.internal.framed.FramedConnection.unacknowledgedBytesRead` @type ^`long` @kind wide;
  #L30b088.  call `writeWindowUpdateLater`(v2, v4, v6) @signature `Lokhttp3/internal/framed/FramedConnection;.writeWindowUpdateLater:(IJ)V` @kind virtual;
  #L30b08e.  v2:= v8.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b092.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/framed/FramedStream;.access$500:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedConnection;` @kind static;
  #L30b098.  v2:= temp @kind object;
  #L30b09a.  v4:= 0L;
  #L30b09e.  v2.`okhttp3.internal.framed.FramedConnection.unacknowledgedBytesRead` @type ^`long` := v4 @kind wide;
  #L30b0a2.  @monitorexit v3
  #L30b0a4.  goto L30af76;
  #L30b0a8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30b0aa.  @monitorexit v3
  #L30b0ac.  throw v2;
  #L30b0ae.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30b0b0.  @monitorexit v3
  #L30b0b2.  throw v2;
  catch `java.lang.Throwable` @[L30af50..L30b00c] goto L30b0ae;
  catch `java.lang.Throwable` @[L30b01a..L30b0ac] goto L30b0a8;
  catch `java.lang.Throwable` @[L30b0b0..L30b0b2] goto L30b0ae;
}
procedure `void` `receive`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v12 @kind this, `okio.BufferedSource` v13 @kind object @name `in`, `long` v14 @name `byteCount`) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.receive:(Lokio/BufferedSource;J)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L30b0e4.  v5:= `@@okhttp3.internal.framed.FramedStream$FramedDataSource.$assertionsDisabled` @type ^`boolean` @kind boolean;
  #L30b0e8.  if v5 != 0 then goto L30b148;
  #L30b0ec.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b0f0.  call temp:= `holdsLock`(v5) @signature `Ljava/lang/Thread;.holdsLock:(Ljava/lang/Object;)Z` @kind static;
  #L30b0f6.  v5:= temp;
  #L30b0f8.  if v5 == 0 then goto L30b148;
  #L30b0fc.  v5:= new `java.lang.AssertionError`;
  #L30b100.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L30b106.  throw v5;
  #L30b108.  v14:= v14 - v2 @kind long;
  #L30b10a.  v6:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b10e.  @monitorenter v6
  #L30b110.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30b114.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30b11a.  v8:= temp @kind wide;
  #L30b11c.  v10:= 0L;
  #L30b120.  v5:= lcmp(v8, v10);
  #L30b124.  if v5 != 0 then goto L30b1d0;
  #L30b128.  v4:= 1I;
  #L30b12a.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30b12e.  v7:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.receiveBuffer` @type ^`okio.Buffer` @kind object;
  #L30b132.  call temp:= `writeAll`(v5, v7) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L30b138.  if v4 == 0 then goto L30b146;
  #L30b13c.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b140.  call `notifyAll`(v5) @signature `Ljava/lang/Object;.notifyAll:()V` @kind virtual;
  #L30b146.  @monitorexit v6
  #L30b148.  v6:= 0L;
  #L30b14c.  v5:= lcmp(v14, v6);
  #L30b150.  if v5 <= 0 then goto L30b194;
  #L30b154.  v6:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b158.  @monitorenter v6
  #L30b15a.  v0:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.finished` @type ^`boolean` @kind boolean;
  #L30b15e.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.readBuffer` @type ^`okio.Buffer` @kind object;
  #L30b162.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30b168.  v8:= temp @kind wide;
  #L30b16a.  v8:= v8 + v14 @kind long;
  #L30b16c.  v10:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.maxByteCount` @type ^`long` @kind wide;
  #L30b170.  v5:= lcmp(v8, v10);
  #L30b174.  if v5 <= 0 then goto L30b196;
  #L30b178.  v1:= 1I;
  #L30b17a.  @monitorexit v6
  #L30b17c.  if v1 == 0 then goto L30b1a0;
  #L30b180.  call `skip`(v13, v14) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L30b186.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b18a.  v6:= `@@okhttp3.internal.framed.ErrorCode.FLOW_CONTROL_ERROR` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30b18e.  call `closeLater`(v5, v6) @signature `Lokhttp3/internal/framed/FramedStream;.closeLater:(Lokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30b194.  return @kind void;
  #L30b196.  v1:= 0I;
  #L30b198.  goto L30b17a;
  #L30b19a.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30b19c.  @monitorexit v6
  #L30b19e.  throw v5;
  #L30b1a0.  if v0 == 0 then goto L30b1ac;
  #L30b1a4.  call `skip`(v13, v14) @signature `Lokio/BufferedSource;.skip:(J)V` @kind interface;
  #L30b1aa.  goto L30b194;
  #L30b1ac.  v5:= v12.`okhttp3.internal.framed.FramedStream$FramedDataSource.receiveBuffer` @type ^`okio.Buffer` @kind object;
  #L30b1b0.  call temp:= `read`(v13, v5, v14) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L30b1b6.  v2:= temp @kind wide;
  #L30b1b8.  v6:= -1L;
  #L30b1bc.  v5:= lcmp(v2, v6);
  #L30b1c0.  if v5 != 0 then goto L30b108;
  #L30b1c4.  v5:= new `java.io.EOFException`;
  #L30b1c8.  call `<init>`(v5) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L30b1ce.  throw v5;
  #L30b1d0.  v4:= 0I;
  #L30b1d2.  goto L30b12a;
  #L30b1d4.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30b1d6.  @monitorexit v6
  #L30b1d8.  throw v5;
  catch `java.lang.Throwable` @[L30b110..L30b148] goto L30b1d4;
  catch `java.lang.Throwable` @[L30b15a..L30b17c] goto L30b19a;
  catch `java.lang.Throwable` @[L30b19c..L30b19e] goto L30b19a;
  catch `java.lang.Throwable` @[L30b1d6..L30b1d8] goto L30b1d4;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.framed.FramedStream$FramedDataSource` v1 @kind this) @signature `Lokhttp3/internal/framed/FramedStream$FramedDataSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30b214.  v0:= v1.`okhttp3.internal.framed.FramedStream$FramedDataSource.this$0` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30b218.  call temp:= `access$700`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.access$700:(Lokhttp3/internal/framed/FramedStream;)Lokhttp3/internal/framed/FramedStream$StreamTimeout;` @kind static;
  #L30b21e.  v0:= temp @kind object;
  #L30b220.  return v0 @kind object;
}
