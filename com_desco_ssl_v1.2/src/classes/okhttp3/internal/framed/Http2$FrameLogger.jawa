record `okhttp3.internal.framed.Http2$FrameLogger` @kind class @AccessFlag FINAL {
}
global `java.lang.String`[] `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.lang.String`[] `@@okhttp3.internal.framed.Http2$FrameLogger.TYPES` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L246594.  v11:= 8I;
  #L246598.  v13:= 4I;
  #L24659a.  v12:= 3I;
  #L24659c.  v10:= 1I;
  #L24659e.  v6:= 0I;
  #L2465a0.  v5:= 10I;
  #L2465a4.  v5:= new `java.lang.String`[v5];
  #L2465a8.  v7:= "DATA" @kind object;
  #L2465ac.  v5[v6]:= v7 @kind object;
  #L2465b0.  v7:= "HEADERS" @kind object;
  #L2465b4.  v5[v10]:= v7 @kind object;
  #L2465b8.  v7:= 2I;
  #L2465ba.  v8:= "PRIORITY" @kind object;
  #L2465be.  v5[v7]:= v8 @kind object;
  #L2465c2.  v7:= "RST_STREAM" @kind object;
  #L2465c6.  v5[v12]:= v7 @kind object;
  #L2465ca.  v7:= "SETTINGS" @kind object;
  #L2465ce.  v5[v13]:= v7 @kind object;
  #L2465d2.  v7:= 5I;
  #L2465d4.  v8:= "PUSH_PROMISE" @kind object;
  #L2465d8.  v5[v7]:= v8 @kind object;
  #L2465dc.  v7:= 6I;
  #L2465de.  v8:= "PING" @kind object;
  #L2465e2.  v5[v7]:= v8 @kind object;
  #L2465e6.  v7:= 7I;
  #L2465e8.  v8:= "GOAWAY" @kind object;
  #L2465ec.  v5[v7]:= v8 @kind object;
  #L2465f0.  v7:= "WINDOW_UPDATE" @kind object;
  #L2465f4.  v5[v11]:= v7 @kind object;
  #L2465f8.  v7:= 9I;
  #L2465fc.  v8:= "CONTINUATION" @kind object;
  #L246600.  v5[v7]:= v8 @kind object;
  #L246604.  `@@okhttp3.internal.framed.Http2$FrameLogger.TYPES` @type ^`java.lang.String`[] := v5 @kind object;
  #L246608.  v5:= 64I;
  #L24660c.  v5:= new `java.lang.String`[v5];
  #L246610.  `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] := v5 @kind object;
  #L246614.  v5:= 256I;
  #L246618.  v5:= new `java.lang.String`[v5];
  #L24661c.  `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] := v5 @kind object;
  #L246620.  v2:= 0I;
  #L246622.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L246626.  v5:= length @variable v5;
  #L246628.  if v2 >= v5 then goto L246666;
  #L24662c.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L246630.  v7:= "%8s" @kind object;
  #L246634.  v8:= new `java.lang.Object`[v10];
  #L246638.  call temp:= `toBinaryString`(v2) @signature `Ljava/lang/Integer;.toBinaryString:(I)Ljava/lang/String;` @kind static;
  #L24663e.  v9:= temp @kind object;
  #L246640.  v8[v6]:= v9 @kind object;
  #L246644.  call temp:= `format`(v7, v8) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24664a.  v7:= temp @kind object;
  #L24664c.  v8:= 32I;
  #L246650.  v9:= 48I;
  #L246654.  call temp:= `replace`(v7, v8, v9) @signature `Ljava/lang/String;.replace:(CC)Ljava/lang/String;` @kind virtual;
  #L24665a.  v7:= temp @kind object;
  #L24665c.  v5[v2]:= v7 @kind object;
  #L246660.  v2:= v2 + 1;
  #L246664.  goto L246622;
  #L246666.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L24666a.  v7:= "" @kind object;
  #L24666e.  v5[v6]:= v7 @kind object;
  #L246672.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L246676.  v7:= "END_STREAM" @kind object;
  #L24667a.  v5[v10]:= v7 @kind object;
  #L24667e.  v4:= new `int`[v10];
  #L246682.  v4[v6]:= v10;
  #L246686.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L24668a.  v7:= "PADDED" @kind object;
  #L24668e.  v5[v11]:= v7 @kind object;
  #L246692.  v7:= length @variable v4;
  #L246694.  v5:= v6;
  #L246696.  if v5 >= v7 then goto L2466de;
  #L24669a.  v3:= v4[v5];
  #L24669e.  v8:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2466a2.  v9:= v3 ^| 8;
  #L2466a6.  v10:= new `java.lang.StringBuilder`;
  #L2466aa.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2466b0.  v11:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2466b4.  v11:= v11[v3] @kind object;
  #L2466b8.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2466be.  v10:= temp @kind object;
  #L2466c0.  v11:= "|PADDED" @kind object;
  #L2466c4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2466ca.  v10:= temp @kind object;
  #L2466cc.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2466d2.  v10:= temp @kind object;
  #L2466d4.  v8[v9]:= v10 @kind object;
  #L2466d8.  v5:= v5 + 1;
  #L2466dc.  goto L246696;
  #L2466de.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2466e2.  v7:= "END_HEADERS" @kind object;
  #L2466e6.  v5[v13]:= v7 @kind object;
  #L2466ea.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2466ee.  v7:= 32I;
  #L2466f2.  v8:= "PRIORITY" @kind object;
  #L2466f6.  v5[v7]:= v8 @kind object;
  #L2466fa.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2466fe.  v7:= 36I;
  #L246702.  v8:= "END_HEADERS|PRIORITY" @kind object;
  #L246706.  v5[v7]:= v8 @kind object;
  #L24670a.  v1:= new `int`[v12];
  #L24670e.  goto L246810;
  #L246714.  v8:= length @variable v1;
  #L246716.  v7:= v6;
  #L246718.  if v7 >= v8 then goto L2467de;
  #L24671c.  v0:= v1[v7];
  #L246720.  v9:= length @variable v4;
  #L246722.  v5:= v6;
  #L246724.  if v5 >= v9 then goto L2467d6;
  #L246728.  v3:= v4[v5];
  #L24672c.  v10:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L246730.  v11:= v3 ^| v0 @kind int;
  #L246734.  v12:= new `java.lang.StringBuilder`;
  #L246738.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24673e.  v13:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L246742.  v13:= v13[v3] @kind object;
  #L246746.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24674c.  v12:= temp @kind object;
  #L24674e.  v13:= 124I;
  #L246752.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L246758.  v12:= temp @kind object;
  #L24675a.  v13:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L24675e.  v13:= v13[v0] @kind object;
  #L246762.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L246768.  v12:= temp @kind object;
  #L24676a.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L246770.  v12:= temp @kind object;
  #L246772.  v10[v11]:= v12 @kind object;
  #L246776.  v10:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L24677a.  v11:= v3 ^| v0 @kind int;
  #L24677e.  v11:= v11 ^| 8;
  #L246782.  v12:= new `java.lang.StringBuilder`;
  #L246786.  call `<init>`(v12) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24678c.  v13:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L246790.  v13:= v13[v3] @kind object;
  #L246794.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24679a.  v12:= temp @kind object;
  #L24679c.  v13:= 124I;
  #L2467a0.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L2467a6.  v12:= temp @kind object;
  #L2467a8.  v13:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2467ac.  v13:= v13[v0] @kind object;
  #L2467b0.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2467b6.  v12:= temp @kind object;
  #L2467b8.  v13:= "|PADDED" @kind object;
  #L2467bc.  call temp:= `append`(v12, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2467c2.  v12:= temp @kind object;
  #L2467c4.  call temp:= `toString`(v12) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2467ca.  v12:= temp @kind object;
  #L2467cc.  v10[v11]:= v12 @kind object;
  #L2467d0.  v5:= v5 + 1;
  #L2467d4.  goto L246724;
  #L2467d6.  v5:= v7 + 1;
  #L2467da.  v7:= v5;
  #L2467dc.  goto L246718;
  #L2467de.  v2:= 0I;
  #L2467e0.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2467e4.  v5:= length @variable v5;
  #L2467e6.  if v2 >= v5 then goto L24680c;
  #L2467ea.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2467ee.  v5:= v5[v2] @kind object;
  #L2467f2.  if v5 != 0 then goto L246806;
  #L2467f6.  v5:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L2467fa.  v6:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L2467fe.  v6:= v6[v2] @kind object;
  #L246802.  v5[v2]:= v6 @kind object;
  #L246806.  v2:= v2 + 1;
  #L24680a.  goto L2467e0;
  #L24680c.  return @kind void;
  #L24680e.  
  #L246810.  v1:= (4I, 32I, 36I) @kind object;
  #L246823.  goto L246714;
}
procedure `void` `<init>`(`okhttp3.internal.framed.Http2$FrameLogger` v0 @kind this) @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L246834.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24683a.  return @kind void;
}
procedure `java.lang.String` `formatFlags`(`byte` v3 @name `type`, `byte` v4 @name `flags`) @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.formatFlags:(BB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24684c.  if v4 != 0 then goto L246856;
  #L246850.  v1:= "" @kind object;
  #L246854.  return v1 @kind object;
  #L246856.  goto L2468dc;
  #L24685c.  v1:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L246860.  v1:= length @variable v1;
  #L246862.  if v4 >= v1 then goto L2468ae;
  #L246866.  v1:= `@@okhttp3.internal.framed.Http2$FrameLogger.FLAGS` @type ^`java.lang.String`[] @kind object;
  #L24686a.  v0:= v1[v4] @kind object;
  #L24686e.  v1:= 5I;
  #L246870.  if v3 != v1 then goto L2468b8;
  #L246874.  v1:= v4 ^& 4;
  #L246878.  if v1 == 0 then goto L2468b8;
  #L24687c.  v1:= "HEADERS" @kind object;
  #L246880.  v2:= "PUSH_PROMISE" @kind object;
  #L246884.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L24688a.  v1:= temp @kind object;
  #L24688c.  goto L246854;
  #L24688e.  v1:= 1I;
  #L246890.  if v4 != v1 then goto L24689a;
  #L246894.  v1:= "ACK" @kind object;
  #L246898.  goto L246854;
  #L24689a.  v1:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L24689e.  v1:= v1[v4] @kind object;
  #L2468a2.  goto L246854;
  #L2468a4.  v1:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L2468a8.  v1:= v1[v4] @kind object;
  #L2468ac.  goto L246854;
  #L2468ae.  v1:= `@@okhttp3.internal.framed.Http2$FrameLogger.BINARY` @type ^`java.lang.String`[] @kind object;
  #L2468b2.  v0:= v1[v4] @kind object;
  #L2468b6.  goto L24686e;
  #L2468b8.  if v3 != 0 then goto L2468d6;
  #L2468bc.  v1:= v4 ^& 32;
  #L2468c0.  if v1 == 0 then goto L2468d6;
  #L2468c4.  v1:= "PRIORITY" @kind object;
  #L2468c8.  v2:= "COMPRESSED" @kind object;
  #L2468cc.  call temp:= `replace`(v0, v1, v2) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L2468d2.  v1:= temp @kind object;
  #L2468d4.  goto L246854;
  #L2468d6.  v1:= v0 @kind object;
  #L2468d8.  goto L246854;
  #L2468da.  
  #L2468dc.  switch v3
                  | 2 => goto L2468a4
                  | 3 => goto L2468a4
                  | 4 => goto L24688e
                  | 5 => goto L24685c
                  | 6 => goto L24688e
                  | 7 => goto L2468a4
                  | 8 => goto L2468a4
                  | else => goto L24685c;
}
procedure `java.lang.String` `formatHeader`(`boolean` v7 @name `inbound`, `int` v8 @name `streamId`, `int` v9 @name `length`, `byte` v10 @name `type`, `byte` v11 @name `flags`) @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.formatHeader:(ZIIBB)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L246910.  v6:= 1I;
  #L246912.  v5:= 0I;
  #L246914.  v2:= `@@okhttp3.internal.framed.Http2$FrameLogger.TYPES` @type ^`java.lang.String`[] @kind object;
  #L246918.  v2:= length @variable v2;
  #L24691a.  if v10 >= v2 then goto L246974;
  #L24691e.  v2:= `@@okhttp3.internal.framed.Http2$FrameLogger.TYPES` @type ^`java.lang.String`[] @kind object;
  #L246922.  v1:= v2[v10] @kind object;
  #L246926.  call temp:= `formatFlags`(v10, v11) @signature `Lokhttp3/internal/framed/Http2$FrameLogger;.formatFlags:(BB)Ljava/lang/String;` @kind static;
  #L24692c.  v0:= temp @kind object;
  #L24692e.  v3:= "%s 0x%08x %5d %-13s %s" @kind object;
  #L246932.  v2:= 5I;
  #L246934.  v4:= new `java.lang.Object`[v2];
  #L246938.  if v7 == 0 then goto L246992;
  #L24693c.  v2:= "<<" @kind object;
  #L246940.  v4[v5]:= v2 @kind object;
  #L246944.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L24694a.  v2:= temp @kind object;
  #L24694c.  v4[v6]:= v2 @kind object;
  #L246950.  v2:= 2I;
  #L246952.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L246958.  v5:= temp @kind object;
  #L24695a.  v4[v2]:= v5 @kind object;
  #L24695e.  v2:= 3I;
  #L246960.  v4[v2]:= v1 @kind object;
  #L246964.  v2:= 4I;
  #L246966.  v4[v2]:= v0 @kind object;
  #L24696a.  call temp:= `format`(v3, v4) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L246970.  v2:= temp @kind object;
  #L246972.  return v2 @kind object;
  #L246974.  v2:= "0x%02x" @kind object;
  #L246978.  v3:= new `java.lang.Object`[v6];
  #L24697c.  call temp:= `valueOf`(v10) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L246982.  v4:= temp @kind object;
  #L246984.  v3[v5]:= v4 @kind object;
  #L246988.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L24698e.  v1:= temp @kind object;
  #L246990.  goto L246926;
  #L246992.  v2:= ">>" @kind object;
  #L246996.  goto L246940;
}
