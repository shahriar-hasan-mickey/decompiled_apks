record `okhttp3.internal.framed.NameValueBlockReader` @kind class @AccessFlag  {
  `int` `okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @AccessFlag PRIVATE;
  `okio.InflaterSource` `okhttp3.internal.framed.NameValueBlockReader.inflaterSource` @AccessFlag PRIVATE_FINAL;
  `okio.BufferedSource` `okhttp3.internal.framed.NameValueBlockReader.source` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.framed.NameValueBlockReader` v3 @kind this, `okio.BufferedSource` v4 @kind object @name `source`) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.<init>:(Lokio/BufferedSource;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2472e0.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2472e6.  v1:= new `okhttp3.internal.framed.NameValueBlockReader$1`;
  #L2472ea.  call `<init>`(v1, v3, v4) @signature `Lokhttp3/internal/framed/NameValueBlockReader$1;.<init>:(Lokhttp3/internal/framed/NameValueBlockReader;Lokio/Source;)V` @kind direct;
  #L2472f0.  v0:= new `okhttp3.internal.framed.NameValueBlockReader$2`;
  #L2472f4.  call `<init>`(v0, v3) @signature `Lokhttp3/internal/framed/NameValueBlockReader$2;.<init>:(Lokhttp3/internal/framed/NameValueBlockReader;)V` @kind direct;
  #L2472fa.  v2:= new `okio.InflaterSource`;
  #L2472fe.  call `<init>`(v2, v1, v0) @signature `Lokio/InflaterSource;.<init>:(Lokio/Source;Ljava/util/zip/Inflater;)V` @kind direct;
  #L247304.  v3.`okhttp3.internal.framed.NameValueBlockReader.inflaterSource` @type ^`okio.InflaterSource` := v2 @kind object;
  #L247308.  v2:= v3.`okhttp3.internal.framed.NameValueBlockReader.inflaterSource` @type ^`okio.InflaterSource` @kind object;
  #L24730c.  call temp:= `buffer`(v2) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L247312.  v2:= temp @kind object;
  #L247314.  v3.`okhttp3.internal.framed.NameValueBlockReader.source` @type ^`okio.BufferedSource` := v2 @kind object;
  #L247318.  return @kind void;
}
procedure `int` `access$000`(`okhttp3.internal.framed.NameValueBlockReader` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$000:(Lokhttp3/internal/framed/NameValueBlockReader;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L24732c.  v0:= v1.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int`;
  #L247330.  return v0;
}
procedure `int` `access$002`(`okhttp3.internal.framed.NameValueBlockReader` v0 @kind object @name `x0`, `int` v1 @name `x1`) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$002:(Lokhttp3/internal/framed/NameValueBlockReader;I)I` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L247344.  v0.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int` := v1;
  #L247348.  return v1;
}
procedure `void` `doneReading`(`okhttp3.internal.framed.NameValueBlockReader` v3 @kind this) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.doneReading:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L24735c.  v0:= v3.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int`;
  #L247360.  if v0 <= 0 then goto L2473ac;
  #L247364.  v0:= v3.`okhttp3.internal.framed.NameValueBlockReader.inflaterSource` @type ^`okio.InflaterSource` @kind object;
  #L247368.  call temp:= `refill`(v0) @signature `Lokio/InflaterSource;.refill:()Z` @kind virtual;
  #L24736e.  v0:= v3.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int`;
  #L247372.  if v0 == 0 then goto L2473ac;
  #L247376.  v0:= new `java.io.IOException`;
  #L24737a.  v1:= new `java.lang.StringBuilder`;
  #L24737e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L247384.  v2:= "compressedLimit > 0: " @kind object;
  #L247388.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24738e.  v1:= temp @kind object;
  #L247390.  v2:= v3.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int`;
  #L247394.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24739a.  v1:= temp @kind object;
  #L24739c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2473a2.  v1:= temp @kind object;
  #L2473a4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2473aa.  throw v0;
  #L2473ac.  return @kind void;
}
procedure `okio.ByteString` `readByteString`(`okhttp3.internal.framed.NameValueBlockReader` v4 @kind this) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.readByteString:()Lokio/ByteString;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2473c0.  v1:= v4.`okhttp3.internal.framed.NameValueBlockReader.source` @type ^`okio.BufferedSource` @kind object;
  #L2473c4.  call temp:= `readInt`(v1) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L2473ca.  v0:= temp;
  #L2473cc.  v1:= v4.`okhttp3.internal.framed.NameValueBlockReader.source` @type ^`okio.BufferedSource` @kind object;
  #L2473d0.  v2:= (`long`) v0 @kind i2l;
  #L2473d2.  call temp:= `readByteString`(v1, v2) @signature `Lokio/BufferedSource;.readByteString:(J)Lokio/ByteString;` @kind interface;
  #L2473d8.  v1:= temp @kind object;
  #L2473da.  return v1 @kind object;
}
procedure `void` `close`(`okhttp3.internal.framed.NameValueBlockReader` v1 @kind this) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2473ec.  v0:= v1.`okhttp3.internal.framed.NameValueBlockReader.source` @type ^`okio.BufferedSource` @kind object;
  #L2473f0.  call `close`(v0) @signature `Lokio/BufferedSource;.close:()V` @kind interface;
  #L2473f6.  return @kind void;
}
procedure `java.util.List` `readNameValueBlock`(`okhttp3.internal.framed.NameValueBlockReader` v8 @kind this, `int` v9 @name `length`) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.readNameValueBlock:(I)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L247408.  v5:= v8.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int`;
  #L24740c.  v5:= v5 + v9 @kind int;
  #L24740e.  v8.`okhttp3.internal.framed.NameValueBlockReader.compressedLimit` @type ^`int` := v5;
  #L247412.  v5:= v8.`okhttp3.internal.framed.NameValueBlockReader.source` @type ^`okio.BufferedSource` @kind object;
  #L247416.  call temp:= `readInt`(v5) @signature `Lokio/BufferedSource;.readInt:()I` @kind interface;
  #L24741c.  v3:= temp;
  #L24741e.  if v3 >= 0 then goto L247454;
  #L247422.  v5:= new `java.io.IOException`;
  #L247426.  v6:= new `java.lang.StringBuilder`;
  #L24742a.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L247430.  v7:= "numberOfPairs < 0: " @kind object;
  #L247434.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24743a.  v6:= temp @kind object;
  #L24743c.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L247442.  v6:= temp @kind object;
  #L247444.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24744a.  v6:= temp @kind object;
  #L24744c.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L247452.  throw v5;
  #L247454.  v5:= 1024I;
  #L247458.  if v3 <= v5 then goto L24748e;
  #L24745c.  v5:= new `java.io.IOException`;
  #L247460.  v6:= new `java.lang.StringBuilder`;
  #L247464.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24746a.  v7:= "numberOfPairs > 1024: " @kind object;
  #L24746e.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L247474.  v6:= temp @kind object;
  #L247476.  call temp:= `append`(v6, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L24747c.  v6:= temp @kind object;
  #L24747e.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L247484.  v6:= temp @kind object;
  #L247486.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24748c.  throw v5;
  #L24748e.  v0:= new `java.util.ArrayList`;
  #L247492.  call `<init>`(v0, v3) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L247498.  v1:= 0I;
  #L24749a.  if v1 >= v3 then goto L2474e8;
  #L24749e.  call temp:= `readByteString`(v8) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.readByteString:()Lokio/ByteString;` @kind direct;
  #L2474a4.  v5:= temp @kind object;
  #L2474a6.  call temp:= `toAsciiLowercase`(v5) @signature `Lokio/ByteString;.toAsciiLowercase:()Lokio/ByteString;` @kind virtual;
  #L2474ac.  v2:= temp @kind object;
  #L2474ae.  call temp:= `readByteString`(v8) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.readByteString:()Lokio/ByteString;` @kind direct;
  #L2474b4.  v4:= temp @kind object;
  #L2474b6.  call temp:= `size`(v2) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L2474bc.  v5:= temp;
  #L2474be.  if v5 != 0 then goto L2474d2;
  #L2474c2.  v5:= new `java.io.IOException`;
  #L2474c6.  v6:= "name.size == 0" @kind object;
  #L2474ca.  call `<init>`(v5, v6) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2474d0.  throw v5;
  #L2474d2.  v5:= new `okhttp3.internal.framed.Header`;
  #L2474d6.  call `<init>`(v5, v2, v4) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Lokio/ByteString;)V` @kind direct;
  #L2474dc.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2474e2.  v1:= v1 + 1;
  #L2474e6.  goto L24749a;
  #L2474e8.  call `doneReading`(v8) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.doneReading:()V` @kind direct;
  #L2474ee.  return v0 @kind object;
}
