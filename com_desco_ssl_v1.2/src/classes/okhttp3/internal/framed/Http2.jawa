record `okhttp3.internal.framed.Http2` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.framed.Variant` @kind interface {
}
global `okio.ByteString` `@@okhttp3.internal.framed.Http2.CONNECTION_PREFACE` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_ACK` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_COMPRESSED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_END_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_END_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_END_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_NONE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_PADDED` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.FLAG_PRIORITY` @AccessFlag STATIC_FINAL;
global `int` `@@okhttp3.internal.framed.Http2.INITIAL_MAX_FRAME_SIZE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_CONTINUATION` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_DATA` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_GOAWAY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_HEADERS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_PING` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_PRIORITY` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_PUSH_PROMISE` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_RST_STREAM` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_SETTINGS` @AccessFlag STATIC_FINAL;
global `byte` `@@okhttp3.internal.framed.Http2.TYPE_WINDOW_UPDATE` @AccessFlag STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.framed.Http2.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/Http2;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L30c5c4.  v0:= constclass @type ^`okhttp3.internal.framed.Http2$FrameLogger` @kind object;
  #L30c5c8.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L30c5ce.  v0:= temp @kind object;
  #L30c5d0.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L30c5d6.  v0:= temp @kind object;
  #L30c5d8.  `@@okhttp3.internal.framed.Http2.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L30c5dc.  v0:= "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n" @kind object;
  #L30c5e0.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30c5e6.  v0:= temp @kind object;
  #L30c5e8.  `@@okhttp3.internal.framed.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` := v0 @kind object;
  #L30c5ec.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.framed.Http2` v0 @kind this) @signature `Lokhttp3/internal/framed/Http2;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30c600.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30c606.  return @kind void;
}
procedure `okio.ByteString` `access$000`() @signature `Lokhttp3/internal/framed/Http2;.access$000:()Lokio/ByteString;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c618.  v0:= `@@okhttp3.internal.framed.Http2.CONNECTION_PREFACE` @type ^`okio.ByteString` @kind object;
  #L30c61c.  return v0 @kind object;
}
procedure `java.util.logging.Logger` `access$100`() @signature `Lokhttp3/internal/framed/Http2;.access$100:()Ljava/util/logging/Logger;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c630.  v0:= `@@okhttp3.internal.framed.Http2.logger` @type ^`java.util.logging.Logger` @kind object;
  #L30c634.  return v0 @kind object;
}
procedure `java.io.IOException` `access$200`(`java.lang.String` v1 @kind object @name `x0`, `java.lang.Object`[] v2 @kind object @name `x1`) @signature `Lokhttp3/internal/framed/Http2;.access$200:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c648.  call temp:= `ioException`(v1, v2) @signature `Lokhttp3/internal/framed/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L30c64e.  v0:= temp @kind object;
  #L30c650.  return v0 @kind object;
}
procedure `int` `access$300`(`okio.BufferedSource` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/Http2;.access$300:(Lokio/BufferedSource;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c664.  call temp:= `readMedium`(v1) @signature `Lokhttp3/internal/framed/Http2;.readMedium:(Lokio/BufferedSource;)I` @kind static;
  #L30c66a.  v0:= temp;
  #L30c66c.  return v0;
}
procedure `int` `access$400`(`int` v1 @name `x0`, `byte` v2 @name `x1`, `short` v3 @name `x2`) @signature `Lokhttp3/internal/framed/Http2;.access$400:(IBS)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c680.  call temp:= `lengthWithoutPadding`(v1, v2, v3) @signature `Lokhttp3/internal/framed/Http2;.lengthWithoutPadding:(IBS)I` @kind static;
  #L30c686.  v0:= temp;
  #L30c688.  return v0;
}
procedure `java.lang.IllegalArgumentException` `access$500`(`java.lang.String` v1 @kind object @name `x0`, `java.lang.Object`[] v2 @kind object @name `x1`) @signature `Lokhttp3/internal/framed/Http2;.access$500:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30c69c.  call temp:= `illegalArgument`(v1, v2) @signature `Lokhttp3/internal/framed/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @kind static;
  #L30c6a2.  v0:= temp @kind object;
  #L30c6a4.  return v0 @kind object;
}
procedure `void` `access$600`(`okio.BufferedSink` v0 @kind object @name `x0`, `int` v1 @name `x1`) @signature `Lokhttp3/internal/framed/Http2;.access$600:(Lokio/BufferedSink;I)V` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L30c6b8.  call `writeMedium`(v0, v1) @signature `Lokhttp3/internal/framed/Http2;.writeMedium:(Lokio/BufferedSink;I)V` @kind static;
  #L30c6be.  return @kind void;
}
procedure `java.lang.IllegalArgumentException` `illegalArgument`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/framed/Http2;.illegalArgument:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/IllegalArgumentException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L30c6d0.  v0:= new `java.lang.IllegalArgumentException`;
  #L30c6d4.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c6da.  v1:= temp @kind object;
  #L30c6dc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30c6e2.  throw v0;
}
procedure `java.io.IOException` `ioException`(`java.lang.String` v2 @kind object @name `message`, `java.lang.Object`[] v3 @kind object @name `args`) @signature `Lokhttp3/internal/framed/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L30c6f4.  v0:= new `java.io.IOException`;
  #L30c6f8.  call temp:= `format`(v2, v3) @signature `Lokhttp3/internal/Util;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L30c6fe.  v1:= temp @kind object;
  #L30c700.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30c706.  throw v0;
}
procedure `int` `lengthWithoutPadding`(`int` v4 @name `length`, `byte` v5 @name `flags`, `short` v6 @name `padding`) @signature `Lokhttp3/internal/framed/Http2;.lengthWithoutPadding:(IBS)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30c718.  v0:= v5 ^& 8;
  #L30c71c.  if v0 == 0 then goto L30c724;
  #L30c720.  v4:= v4 + -1;
  #L30c724.  if v6 <= v4 then goto L30c758;
  #L30c728.  v0:= "PROTOCOL_ERROR padding %s > remaining length %s" @kind object;
  #L30c72c.  v1:= 2I;
  #L30c72e.  v1:= new `java.lang.Object`[v1];
  #L30c732.  v2:= 0I;
  #L30c734.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Short;.valueOf:(S)Ljava/lang/Short;` @kind static;
  #L30c73a.  v3:= temp @kind object;
  #L30c73c.  v1[v2]:= v3 @kind object;
  #L30c740.  v2:= 1I;
  #L30c742.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L30c748.  v3:= temp @kind object;
  #L30c74a.  v1[v2]:= v3 @kind object;
  #L30c74e.  call temp:= `ioException`(v0, v1) @signature `Lokhttp3/internal/framed/Http2;.ioException:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/io/IOException;` @kind static;
  #L30c754.  v0:= temp @kind object;
  #L30c756.  throw v0;
  #L30c758.  v0:= v4 - v6 @kind int;
  #L30c75c.  v0:= (`short`) v0 @kind i2s;
  #L30c75e.  return v0;
}
procedure `int` `readMedium`(`okio.BufferedSource` v2 @kind object @name `source`) @signature `Lokhttp3/internal/framed/Http2;.readMedium:(Lokio/BufferedSource;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L30c770.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L30c776.  v0:= temp;
  #L30c778.  v0:= v0 ^& 255;
  #L30c77c.  v0:= v0 ^< 16;
  #L30c780.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L30c786.  v1:= temp;
  #L30c788.  v1:= v1 ^& 255;
  #L30c78c.  v1:= v1 ^< 8;
  #L30c790.  v0:= v0 ^| v1 @kind int;
  #L30c792.  call temp:= `readByte`(v2) @signature `Lokio/BufferedSource;.readByte:()B` @kind interface;
  #L30c798.  v1:= temp;
  #L30c79a.  v1:= v1 ^& 255;
  #L30c79e.  v0:= v0 ^| v1 @kind int;
  #L30c7a0.  return v0;
}
procedure `void` `writeMedium`(`okio.BufferedSink` v1 @kind object @name `sink`, `int` v2 @name `i`) @signature `Lokhttp3/internal/framed/Http2;.writeMedium:(Lokio/BufferedSink;I)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L30c7b4.  v0:= v2 ^>> 16;
  #L30c7b8.  v0:= v0 ^& 255;
  #L30c7bc.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L30c7c2.  v0:= v2 ^>> 8;
  #L30c7c6.  v0:= v0 ^& 255;
  #L30c7ca.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L30c7d0.  v0:= v2 ^& 255;
  #L30c7d4.  call temp:= `writeByte`(v1, v0) @signature `Lokio/BufferedSink;.writeByte:(I)Lokio/BufferedSink;` @kind interface;
  #L30c7da.  return @kind void;
}
procedure `okhttp3.Protocol` `getProtocol`(`okhttp3.internal.framed.Http2` v1 @kind this) @signature `Lokhttp3/internal/framed/Http2;.getProtocol:()Lokhttp3/Protocol;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30c7ec.  v0:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L30c7f0.  return v0 @kind object;
}
procedure `okhttp3.internal.framed.FrameReader` `newReader`(`okhttp3.internal.framed.Http2` v2 @kind this, `okio.BufferedSource` v3 @kind object @name `source`, `boolean` v4 @name `client`) @signature `Lokhttp3/internal/framed/Http2;.newReader:(Lokio/BufferedSource;Z)Lokhttp3/internal/framed/FrameReader;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30c804.  v0:= new `okhttp3.internal.framed.Http2$Reader`;
  #L30c808.  v1:= 4096I;
  #L30c80c.  call `<init>`(v0, v3, v1, v4) @signature `Lokhttp3/internal/framed/Http2$Reader;.<init>:(Lokio/BufferedSource;IZ)V` @kind direct;
  #L30c812.  return v0 @kind object;
}
procedure `okhttp3.internal.framed.FrameWriter` `newWriter`(`okhttp3.internal.framed.Http2` v1 @kind this, `okio.BufferedSink` v2 @kind object @name `sink`, `boolean` v3 @name `client`) @signature `Lokhttp3/internal/framed/Http2;.newWriter:(Lokio/BufferedSink;Z)Lokhttp3/internal/framed/FrameWriter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30c824.  v0:= new `okhttp3.internal.framed.Http2$Writer`;
  #L30c828.  call `<init>`(v0, v2, v3) @signature `Lokhttp3/internal/framed/Http2$Writer;.<init>:(Lokio/BufferedSink;Z)V` @kind direct;
  #L30c82e.  return v0 @kind object;
}
