record `okhttp3.internal.framed.NameValueBlockReader$1` @kind class @AccessFlag  extends `okio.ForwardingSource` @kind class {
  `okhttp3.internal.framed.NameValueBlockReader` `okhttp3.internal.framed.NameValueBlockReader$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.framed.NameValueBlockReader$1` v0 @kind this, `okhttp3.internal.framed.NameValueBlockReader` v1 @kind object @name `this$0`, `okio.Source` v2 @kind object @name `x0`) @signature `Lokhttp3/internal/framed/NameValueBlockReader$1;.<init>:(Lokhttp3/internal/framed/NameValueBlockReader;Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3510ec.  v0.`okhttp3.internal.framed.NameValueBlockReader$1.this$0` @type ^`okhttp3.internal.framed.NameValueBlockReader` := v1 @kind object;
  #L3510f0.  call `<init>`(v0, v2) @signature `Lokio/ForwardingSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L3510f6.  return @kind void;
}
procedure `long` `read`(`okhttp3.internal.framed.NameValueBlockReader$1` v6 @kind this, `okio.Buffer` v7 @kind object @name `sink`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/framed/NameValueBlockReader$1;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L351108.  v2:= -1L;
  #L35110c.  v4:= v6.`okhttp3.internal.framed.NameValueBlockReader$1.this$0` @type ^`okhttp3.internal.framed.NameValueBlockReader` @kind object;
  #L351110.  call temp:= `access$000`(v4) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$000:(Lokhttp3/internal/framed/NameValueBlockReader;)I` @kind static;
  #L351116.  v4:= temp;
  #L351118.  if v4 != 0 then goto L351120;
  #L35111c.  v0:= v2 @kind wide;
  #L35111e.  return v0 @kind wide;
  #L351120.  v4:= v6.`okhttp3.internal.framed.NameValueBlockReader$1.this$0` @type ^`okhttp3.internal.framed.NameValueBlockReader` @kind object;
  #L351124.  call temp:= `access$000`(v4) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$000:(Lokhttp3/internal/framed/NameValueBlockReader;)I` @kind static;
  #L35112a.  v4:= temp;
  #L35112c.  v4:= (`long`) v4 @kind i2l;
  #L35112e.  call temp:= `min`(v8, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L351134.  v4:= temp @kind wide;
  #L351136.  call temp:= `read`(v6, v7, v4) @signature `Lokio/ForwardingSource;.read:(Lokio/Buffer;J)J` @kind super;
  #L35113c.  v0:= temp @kind wide;
  #L35113e.  v4:= lcmp(v0, v2);
  #L351142.  if v4 != 0 then goto L35114a;
  #L351146.  v0:= v2 @kind wide;
  #L351148.  goto L35111e;
  #L35114a.  v2:= v6.`okhttp3.internal.framed.NameValueBlockReader$1.this$0` @type ^`okhttp3.internal.framed.NameValueBlockReader` @kind object;
  #L35114e.  v3:= v6.`okhttp3.internal.framed.NameValueBlockReader$1.this$0` @type ^`okhttp3.internal.framed.NameValueBlockReader` @kind object;
  #L351152.  call temp:= `access$000`(v3) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$000:(Lokhttp3/internal/framed/NameValueBlockReader;)I` @kind static;
  #L351158.  v3:= temp;
  #L35115a.  v4:= (`long`) v3 @kind i2l;
  #L35115c.  v4:= v4 - v0 @kind long;
  #L35115e.  v3:= (`int`) v4 @kind l2i;
  #L351160.  call temp:= `access$002`(v2, v3) @signature `Lokhttp3/internal/framed/NameValueBlockReader;.access$002:(Lokhttp3/internal/framed/NameValueBlockReader;I)I` @kind static;
  #L351166.  goto L35111e;
}
