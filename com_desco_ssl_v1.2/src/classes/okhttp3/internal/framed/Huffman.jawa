record `okhttp3.internal.framed.Huffman` @kind class @AccessFlag  {
  `okhttp3.internal.framed.Huffman$Node` `okhttp3.internal.framed.Huffman.root` @AccessFlag PRIVATE_FINAL;
}
global `int`[] `@@okhttp3.internal.framed.Huffman.CODES` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @AccessFlag PRIVATE_STATIC_FINAL;
global `okhttp3.internal.framed.Huffman` `@@okhttp3.internal.framed.Huffman.INSTANCE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/framed/Huffman;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L246a54.  v1:= 256I;
  #L246a58.  v0:= new `int`[v1];
  #L246a5c.  goto L246a84;
  #L246a62.  `@@okhttp3.internal.framed.Huffman.CODES` @type ^`int`[] := v0 @kind object;
  #L246a66.  v0:= new `byte`[v1];
  #L246a6a.  goto L246e8c;
  #L246a70.  `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @type ^`byte`[] := v0 @kind object;
  #L246a74.  v0:= new `okhttp3.internal.framed.Huffman`;
  #L246a78.  call `<init>`(v0) @signature `Lokhttp3/internal/framed/Huffman;.<init>:()V` @kind direct;
  #L246a7e.  `@@okhttp3.internal.framed.Huffman.INSTANCE` @type ^`okhttp3.internal.framed.Huffman` := v0 @kind object;
  #L246a82.  return @kind void;
  #L246a84.  v0:= (8184I, 8388568I, 268435426I, 268435427I, 268435428I, 268435429I, 268435430I, 268435431I, 268435432I, 16777194I, 1073741820I, 268435433I, 268435434I, 1073741821I, 268435435I, 268435436I, 268435437I, 268435438I, 268435439I, 268435440I, 268435441I, 268435442I, 1073741822I, 268435443I, 268435444I, 268435445I, 268435446I, 268435447I, 268435448I, 268435449I, 268435450I, 268435451I, 20I, 1016I, 1017I, 4090I, 8185I, 21I, 248I, 2042I, 1018I, 1019I, 249I, 2043I, 250I, 22I, 23I, 24I, 0I, 1I, 2I, 25I, 26I, 27I, 28I, 29I, 30I, 31I, 92I, 251I, 32764I, 32I, 4091I, 1020I, 8186I, 33I, 93I, 94I, 95I, 96I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 252I, 115I, 253I, 8187I, 524272I, 8188I, 16380I, 34I, 32765I, 3I, 35I, 4I, 36I, 5I, 37I, 38I, 39I, 6I, 116I, 117I, 40I, 41I, 42I, 7I, 43I, 118I, 44I, 8I, 9I, 45I, 119I, 120I, 121I, 122I, 123I, 32766I, 2044I, 16381I, 8189I, 268435452I, 1048550I, 4194258I, 1048551I, 1048552I, 4194259I, 4194260I, 4194261I, 8388569I, 4194262I, 8388570I, 8388571I, 8388572I, 8388573I, 8388574I, 16777195I, 8388575I, 16777196I, 16777197I, 4194263I, 8388576I, 16777198I, 8388577I, 8388578I, 8388579I, 8388580I, 2097116I, 4194264I, 8388581I, 4194265I, 8388582I, 8388583I, 16777199I, 4194266I, 2097117I, 1048553I, 4194267I, 4194268I, 8388584I, 8388585I, 2097118I, 8388586I, 4194269I, 4194270I, 16777200I, 2097119I, 4194271I, 8388587I, 8388588I, 2097120I, 2097121I, 4194272I, 2097122I, 8388589I, 4194273I, 8388590I, 8388591I, 1048554I, 4194274I, 4194275I, 4194276I, 8388592I, 4194277I, 4194278I, 8388593I, 67108832I, 67108833I, 1048555I, 524273I, 4194279I, 8388594I, 4194280I, 33554412I, 67108834I, 67108835I, 67108836I, 134217694I, 134217695I, 67108837I, 16777201I, 33554413I, 524274I, 2097123I, 67108838I, 134217696I, 134217697I, 67108839I, 134217698I, 16777202I, 2097124I, 2097125I, 67108840I, 67108841I, 268435453I, 134217699I, 134217700I, 134217701I, 1048556I, 16777203I, 1048557I, 2097126I, 4194281I, 2097127I, 2097128I, 8388595I, 4194282I, 4194283I, 33554414I, 33554415I, 16777204I, 16777205I, 67108842I, 8388596I, 67108843I, 134217702I, 67108844I, 67108845I, 134217703I, 134217704I, 134217705I, 134217706I, 134217707I, 268435454I, 134217708I, 134217709I, 134217710I, 134217711I, 134217712I, 67108846I) @kind object;
  #L246e8b.  goto L246a62;
  #L246e8c.  v0:= (13I, 23I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 24I, 30I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 30I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 28I, 6I, 10I, 10I, 12I, 13I, 6I, 8I, 11I, 10I, 10I, 8I, 11I, 8I, 6I, 6I, 6I, 5I, 5I, 5I, 6I, 6I, 6I, 6I, 6I, 6I, 6I, 7I, 8I, 15I, 6I, 12I, 10I, 13I, 6I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 7I, 8I, 7I, 8I, 13I, 19I, 13I, 14I, 6I, 15I, 5I, 6I, 5I, 6I, 5I, 6I, 6I, 6I, 5I, 7I, 7I, 6I, 6I, 6I, 5I, 6I, 7I, 6I, 5I, 5I, 6I, 7I, 7I, 7I, 7I, 7I, 15I, 11I, 14I, 13I, 28I, 20I, 22I, 20I, 20I, 22I, 22I, 22I, 23I, 22I, 23I, 23I, 23I, 23I, 23I, 24I, 23I, 24I, 24I, 22I, 23I, 24I, 23I, 23I, 23I, 23I, 21I, 22I, 23I, 22I, 23I, 23I, 24I, 22I, 21I, 20I, 22I, 22I, 23I, 23I, 21I, 23I, 22I, 22I, 24I, 21I, 22I, 23I, 23I, 21I, 21I, 22I, 21I, 23I, 22I, 23I, 23I, 20I, 22I, 22I, 22I, 23I, 22I, 22I, 23I, 26I, 26I, 20I, 19I, 22I, 23I, 22I, 25I, 26I, 26I, 26I, 27I, 27I, 26I, 24I, 25I, 19I, 21I, 26I, 27I, 27I, 26I, 27I, 24I, 21I, 21I, 26I, 26I, 28I, 27I, 27I, 27I, 20I, 24I, 20I, 21I, 22I, 21I, 21I, 23I, 22I, 22I, 25I, 25I, 24I, 24I, 26I, 23I, 26I, 27I, 26I, 26I, 27I, 27I, 27I, 27I, 27I, 28I, 27I, 27I, 27I, 27I, 27I, 26I) @kind object;
  #L246f93.  goto L246a70;
}
procedure `void` `<init>`(`okhttp3.internal.framed.Huffman` v1 @kind this) @signature `Lokhttp3/internal/framed/Huffman;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L246fa4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L246faa.  v0:= new `okhttp3.internal.framed.Huffman$Node`;
  #L246fae.  call `<init>`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.<init>:()V` @kind direct;
  #L246fb4.  v1.`okhttp3.internal.framed.Huffman.root` @type ^`okhttp3.internal.framed.Huffman$Node` := v0 @kind object;
  #L246fb8.  call `buildTree`(v1) @signature `Lokhttp3/internal/framed/Huffman;.buildTree:()V` @kind direct;
  #L246fbe.  return @kind void;
}
procedure `void` `addCode`(`okhttp3.internal.framed.Huffman` v8 @kind this, `int` v9 @name `sym`, `int` v10 @name `code`, `byte` v11 @name `len`) @signature `Lokhttp3/internal/framed/Huffman;.addCode:(IIB)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L246fd0.  v5:= new `okhttp3.internal.framed.Huffman$Node`;
  #L246fd4.  call `<init>`(v5, v9, v11) @signature `Lokhttp3/internal/framed/Huffman$Node;.<init>:(II)V` @kind direct;
  #L246fda.  v0:= v8.`okhttp3.internal.framed.Huffman.root` @type ^`okhttp3.internal.framed.Huffman$Node` @kind object;
  #L246fde.  v6:= 8I;
  #L246fe2.  if v11 <= v6 then goto L247044;
  #L246fe6.  v6:= v11 + -8;
  #L246fea.  v11:= (`byte`) v6 @kind i2b;
  #L246fec.  v6:= v10 ^>> v11 @kind int;
  #L246ff0.  v2:= v6 ^& 255;
  #L246ff4.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L246ffa.  v6:= temp @kind object;
  #L246ffc.  if v6 != 0 then goto L247010;
  #L247000.  v6:= new `java.lang.IllegalStateException`;
  #L247004.  v7:= "invalid dictionary: prefix not unique" @kind object;
  #L247008.  call `<init>`(v6, v7) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24700e.  throw v6;
  #L247010.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L247016.  v6:= temp @kind object;
  #L247018.  v6:= v6[v2] @kind object;
  #L24701c.  if v6 != 0 then goto L247036;
  #L247020.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L247026.  v6:= temp @kind object;
  #L247028.  v7:= new `okhttp3.internal.framed.Huffman$Node`;
  #L24702c.  call `<init>`(v7) @signature `Lokhttp3/internal/framed/Huffman$Node;.<init>:()V` @kind direct;
  #L247032.  v6[v2]:= v7 @kind object;
  #L247036.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L24703c.  v6:= temp @kind object;
  #L24703e.  v0:= v6[v2] @kind object;
  #L247042.  goto L246fde;
  #L247044.  v3:= v11 - 8;
  #L247048.  v6:= v10 ^< v3 @kind int;
  #L24704c.  v4:= v6 ^& 255;
  #L247050.  v6:= 1I;
  #L247052.  v1:= v6 ^< v3 @kind int;
  #L247056.  v2:= v4;
  #L247058.  v6:= v4 + v1 @kind int;
  #L24705c.  if v2 >= v6 then goto L247072;
  #L247060.  call temp:= `access$000`(v0) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L247066.  v6:= temp @kind object;
  #L247068.  v6[v2]:= v5 @kind object;
  #L24706c.  v2:= v2 + 1;
  #L247070.  goto L247058;
  #L247072.  return @kind void;
}
procedure `void` `buildTree`(`okhttp3.internal.framed.Huffman` v3 @kind this) @signature `Lokhttp3/internal/framed/Huffman;.buildTree:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L247084.  v0:= 0I;
  #L247086.  v1:= `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @type ^`byte`[] @kind object;
  #L24708a.  v1:= length @variable v1;
  #L24708c.  if v0 >= v1 then goto L2470ac;
  #L247090.  v1:= `@@okhttp3.internal.framed.Huffman.CODES` @type ^`int`[] @kind object;
  #L247094.  v1:= v1[v0];
  #L247098.  v2:= `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @type ^`byte`[] @kind object;
  #L24709c.  v2:= v2[v0] @kind byte;
  #L2470a0.  call `addCode`(v3, v0, v1, v2) @signature `Lokhttp3/internal/framed/Huffman;.addCode:(IIB)V` @kind direct;
  #L2470a6.  v0:= v0 + 1;
  #L2470aa.  goto L247086;
  #L2470ac.  return @kind void;
}
procedure `okhttp3.internal.framed.Huffman` `get`() @signature `Lokhttp3/internal/framed/Huffman;.get:()Lokhttp3/internal/framed/Huffman;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2470c0.  v0:= `@@okhttp3.internal.framed.Huffman.INSTANCE` @type ^`okhttp3.internal.framed.Huffman` @kind object;
  #L2470c4.  return v0 @kind object;
}
procedure `byte`[] `decode`(`okhttp3.internal.framed.Huffman` v8 @kind this, `byte`[] v9 @kind object @name `buf`) @signature `Lokhttp3/internal/framed/Huffman;.decode:([B)[B` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2470d8.  v1:= new `java.io.ByteArrayOutputStream`;
  #L2470dc.  call `<init>`(v1) @signature `Ljava/io/ByteArrayOutputStream;.<init>:()V` @kind direct;
  #L2470e2.  v6:= v8.`okhttp3.internal.framed.Huffman.root` @type ^`okhttp3.internal.framed.Huffman$Node` @kind object;
  #L2470e6.  v3:= 0I;
  #L2470e8.  v5:= 0I;
  #L2470ea.  v4:= 0I;
  #L2470ec.  v7:= length @variable v9;
  #L2470ee.  if v4 >= v7 then goto L247178;
  #L2470f2.  v7:= v9[v4] @kind byte;
  #L2470f6.  v0:= v7 ^& 255;
  #L2470fa.  v7:= v3 ^< 8;
  #L2470fe.  v3:= v7 ^| v0 @kind int;
  #L247102.  v5:= v5 + 8;
  #L247106.  v7:= 8I;
  #L24710a.  if v5 < v7 then goto L247156;
  #L24710e.  v7:= v5 + -8;
  #L247112.  v7:= v3 ^>> v7 @kind int;
  #L247116.  v2:= v7 ^& 255;
  #L24711a.  call temp:= `access$000`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L247120.  v7:= temp @kind object;
  #L247122.  v6:= v7[v2] @kind object;
  #L247126.  call temp:= `access$000`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L24712c.  v7:= temp @kind object;
  #L24712e.  if v7 != 0 then goto L247150;
  #L247132.  call temp:= `access$100`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$100:(Lokhttp3/internal/framed/Huffman$Node;)I` @kind static;
  #L247138.  v7:= temp;
  #L24713a.  call `write`(v1, v7) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L247140.  call temp:= `access$200`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$200:(Lokhttp3/internal/framed/Huffman$Node;)I` @kind static;
  #L247146.  v7:= temp;
  #L247148.  v5:= v5 - v7 @kind int;
  #L24714a.  v6:= v8.`okhttp3.internal.framed.Huffman.root` @type ^`okhttp3.internal.framed.Huffman$Node` @kind object;
  #L24714e.  goto L247106;
  #L247150.  v5:= v5 + -8;
  #L247154.  goto L247106;
  #L247156.  v4:= v4 + 1;
  #L24715a.  goto L2470ec;
  #L24715c.  call temp:= `access$100`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$100:(Lokhttp3/internal/framed/Huffman$Node;)I` @kind static;
  #L247162.  v7:= temp;
  #L247164.  call `write`(v1, v7) @signature `Ljava/io/ByteArrayOutputStream;.write:(I)V` @kind virtual;
  #L24716a.  call temp:= `access$200`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$200:(Lokhttp3/internal/framed/Huffman$Node;)I` @kind static;
  #L247170.  v7:= temp;
  #L247172.  v5:= v5 - v7 @kind int;
  #L247174.  v6:= v8.`okhttp3.internal.framed.Huffman.root` @type ^`okhttp3.internal.framed.Huffman$Node` @kind object;
  #L247178.  if v5 <= 0 then goto L2471ac;
  #L24717c.  v7:= v5 - 8;
  #L247180.  v7:= v3 ^< v7 @kind int;
  #L247184.  v2:= v7 ^& 255;
  #L247188.  call temp:= `access$000`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L24718e.  v7:= temp @kind object;
  #L247190.  v6:= v7[v2] @kind object;
  #L247194.  call temp:= `access$000`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$000:(Lokhttp3/internal/framed/Huffman$Node;)[Lokhttp3/internal/framed/Huffman$Node;` @kind static;
  #L24719a.  v7:= temp @kind object;
  #L24719c.  if v7 != 0 then goto L2471ac;
  #L2471a0.  call temp:= `access$200`(v6) @signature `Lokhttp3/internal/framed/Huffman$Node;.access$200:(Lokhttp3/internal/framed/Huffman$Node;)I` @kind static;
  #L2471a6.  v7:= temp;
  #L2471a8.  if v7 <= v5 then goto L24715c;
  #L2471ac.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L2471b2.  v7:= temp @kind object;
  #L2471b4.  return v7 @kind object;
}
procedure `void` `encode`(`okhttp3.internal.framed.Huffman` v10 @kind this, `byte`[] v11 @kind object @name `data`, `java.io.OutputStream` v12 @kind object @name `out`) @signature `Lokhttp3/internal/framed/Huffman;.encode:([BLjava/io/OutputStream;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2471c8.  v2:= 0L;
  #L2471cc.  v5:= 0I;
  #L2471ce.  v4:= 0I;
  #L2471d0.  v7:= length @variable v11;
  #L2471d2.  if v4 >= v7 then goto L247216;
  #L2471d6.  v7:= v11[v4] @kind byte;
  #L2471da.  v0:= v7 ^& 255;
  #L2471de.  v7:= `@@okhttp3.internal.framed.Huffman.CODES` @type ^`int`[] @kind object;
  #L2471e2.  v1:= v7[v0];
  #L2471e6.  v7:= `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @type ^`byte`[] @kind object;
  #L2471ea.  v6:= v7[v0] @kind byte;
  #L2471ee.  v2:= v2 ^< v6 @kind long;
  #L2471f0.  v8:= (`long`) v1 @kind i2l;
  #L2471f2.  v2:= v2 ^| v8 @kind long;
  #L2471f4.  v5:= v5 + v6 @kind int;
  #L2471f6.  v7:= 8I;
  #L2471fa.  if v5 < v7 then goto L247210;
  #L2471fe.  v5:= v5 + -8;
  #L247202.  v8:= v2 ^> v5 @kind long;
  #L247206.  v7:= (`int`) v8 @kind l2i;
  #L247208.  call `write`(v12, v7) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L24720e.  goto L2471f6;
  #L247210.  v4:= v4 + 1;
  #L247214.  goto L2471d0;
  #L247216.  if v5 <= 0 then goto L247232;
  #L24721a.  v7:= v5 - 8;
  #L24721e.  v2:= v2 ^< v7 @kind long;
  #L247220.  v7:= 255I;
  #L247224.  v7:= v7 ^>> v5 @kind int;
  #L247226.  v8:= (`long`) v7 @kind i2l;
  #L247228.  v2:= v2 ^| v8 @kind long;
  #L24722a.  v7:= (`int`) v2 @kind l2i;
  #L24722c.  call `write`(v12, v7) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L247232.  return @kind void;
}
procedure `int` `encodedLength`(`okhttp3.internal.framed.Huffman` v7 @kind this, `byte`[] v8 @kind object @name `bytes`) @signature `Lokhttp3/internal/framed/Huffman;.encodedLength:([B)I` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L247244.  v2:= 0L;
  #L247248.  v1:= 0I;
  #L24724a.  v4:= length @variable v8;
  #L24724c.  if v1 >= v4 then goto L24726a;
  #L247250.  v4:= v8[v1] @kind byte;
  #L247254.  v0:= v4 ^& 255;
  #L247258.  v4:= `@@okhttp3.internal.framed.Huffman.CODE_LENGTHS` @type ^`byte`[] @kind object;
  #L24725c.  v4:= v4[v0] @kind byte;
  #L247260.  v4:= (`long`) v4 @kind i2l;
  #L247262.  v2:= v2 + v4 @kind long;
  #L247264.  v1:= v1 + 1;
  #L247268.  goto L24724a;
  #L24726a.  v4:= 7L;
  #L24726e.  v4:= v4 + v2 @kind long;
  #L247270.  v6:= 3I;
  #L247272.  v4:= v4 ^> v6 @kind long;
  #L247274.  v4:= (`int`) v4 @kind l2i;
  #L247276.  return v4;
}
