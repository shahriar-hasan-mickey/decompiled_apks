record `okhttp3.internal.http.CacheStrategy$Factory` @kind class @AccessFlag PUBLIC {
  `int` `okhttp3.internal.http.CacheStrategy$Factory.ageSeconds` @AccessFlag PRIVATE;
  `okhttp3.Response` `okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @AccessFlag FINAL;
  `java.lang.String` `okhttp3.internal.http.CacheStrategy$Factory.etag` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.http.CacheStrategy$Factory.expires` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.http.CacheStrategy$Factory.lastModified` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.http.CacheStrategy$Factory.lastModifiedString` @AccessFlag PRIVATE;
  `long` `okhttp3.internal.http.CacheStrategy$Factory.nowMillis` @AccessFlag FINAL;
  `long` `okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @AccessFlag PRIVATE;
  `okhttp3.Request` `okhttp3.internal.http.CacheStrategy$Factory.request` @AccessFlag FINAL;
  `long` `okhttp3.internal.http.CacheStrategy$Factory.sentRequestMillis` @AccessFlag PRIVATE;
  `java.util.Date` `okhttp3.internal.http.CacheStrategy$Factory.servedDate` @AccessFlag PRIVATE;
  `java.lang.String` `okhttp3.internal.http.CacheStrategy$Factory.servedDateString` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`okhttp3.internal.http.CacheStrategy$Factory` v9 @kind this, `long` v10 @name `nowMillis`, `okhttp3.Request` v12 @kind object @name `request`, `okhttp3.Response` v13 @kind object @name `cacheResponse`) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.<init>:(JLokhttp3/Request;Lokhttp3/Response;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L247b28.  v8:= -1I;
  #L247b2a.  call `<init>`(v9) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L247b30.  v9.`okhttp3.internal.http.CacheStrategy$Factory.ageSeconds` @type ^`int` := v8;
  #L247b34.  v9.`okhttp3.internal.http.CacheStrategy$Factory.nowMillis` @type ^`long` := v10 @kind wide;
  #L247b38.  v9.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` := v12 @kind object;
  #L247b3c.  v9.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` := v13 @kind object;
  #L247b40.  if v13 == 0 then goto L247c1c;
  #L247b44.  call temp:= `sentRequestAtMillis`(v13) @signature `Lokhttp3/Response;.sentRequestAtMillis:()J` @kind virtual;
  #L247b4a.  v6:= temp @kind wide;
  #L247b4c.  v9.`okhttp3.internal.http.CacheStrategy$Factory.sentRequestMillis` @type ^`long` := v6 @kind wide;
  #L247b50.  call temp:= `receivedResponseAtMillis`(v13) @signature `Lokhttp3/Response;.receivedResponseAtMillis:()J` @kind virtual;
  #L247b56.  v6:= temp @kind wide;
  #L247b58.  v9.`okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` := v6 @kind wide;
  #L247b5c.  call temp:= `headers`(v13) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L247b62.  v1:= temp @kind object;
  #L247b64.  v2:= 0I;
  #L247b66.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L247b6c.  v3:= temp;
  #L247b6e.  if v2 >= v3 then goto L247c1c;
  #L247b72.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L247b78.  v0:= temp @kind object;
  #L247b7a.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L247b80.  v4:= temp @kind object;
  #L247b82.  v5:= "Date" @kind object;
  #L247b86.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L247b8c.  v5:= temp;
  #L247b8e.  if v5 == 0 then goto L247ba8;
  #L247b92.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L247b98.  v5:= temp @kind object;
  #L247b9a.  v9.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` := v5 @kind object;
  #L247b9e.  v9.`okhttp3.internal.http.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` := v4 @kind object;
  #L247ba2.  v2:= v2 + 1;
  #L247ba6.  goto L247b6e;
  #L247ba8.  v5:= "Expires" @kind object;
  #L247bac.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L247bb2.  v5:= temp;
  #L247bb4.  if v5 == 0 then goto L247bc6;
  #L247bb8.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L247bbe.  v5:= temp @kind object;
  #L247bc0.  v9.`okhttp3.internal.http.CacheStrategy$Factory.expires` @type ^`java.util.Date` := v5 @kind object;
  #L247bc4.  goto L247ba2;
  #L247bc6.  v5:= "Last-Modified" @kind object;
  #L247bca.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L247bd0.  v5:= temp;
  #L247bd2.  if v5 == 0 then goto L247be8;
  #L247bd6.  call temp:= `parse`(v4) @signature `Lokhttp3/internal/http/HttpDate;.parse:(Ljava/lang/String;)Ljava/util/Date;` @kind static;
  #L247bdc.  v5:= temp @kind object;
  #L247bde.  v9.`okhttp3.internal.http.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` := v5 @kind object;
  #L247be2.  v9.`okhttp3.internal.http.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` := v4 @kind object;
  #L247be6.  goto L247ba2;
  #L247be8.  v5:= "ETag" @kind object;
  #L247bec.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L247bf2.  v5:= temp;
  #L247bf4.  if v5 == 0 then goto L247bfe;
  #L247bf8.  v9.`okhttp3.internal.http.CacheStrategy$Factory.etag` @type ^`java.lang.String` := v4 @kind object;
  #L247bfc.  goto L247ba2;
  #L247bfe.  v5:= "Age" @kind object;
  #L247c02.  call temp:= `equalsIgnoreCase`(v5, v0) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L247c08.  v5:= temp;
  #L247c0a.  if v5 == 0 then goto L247ba2;
  #L247c0e.  call temp:= `parseSeconds`(v4, v8) @signature `Lokhttp3/internal/http/HeaderParser;.parseSeconds:(Ljava/lang/String;I)I` @kind static;
  #L247c14.  v5:= temp;
  #L247c16.  v9.`okhttp3.internal.http.CacheStrategy$Factory.ageSeconds` @type ^`int` := v5;
  #L247c1a.  goto L247ba2;
  #L247c1c.  return @kind void;
}
procedure `long` `cacheResponseAge`(`okhttp3.internal.http.CacheStrategy$Factory` v12 @kind this) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.cacheResponseAge:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L247c30.  v0:= 0L;
  #L247c34.  v8:= v12.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247c38.  if v8 == 0 then goto L247c56;
  #L247c3c.  v8:= v12.`okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L247c40.  v10:= v12.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247c44.  call temp:= `getTime`(v10) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L247c4a.  v10:= temp @kind wide;
  #L247c4c.  v8:= v8 - v10 @kind long;
  #L247c4e.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L247c54.  v0:= temp @kind wide;
  #L247c56.  v8:= v12.`okhttp3.internal.http.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L247c5a.  v9:= -1I;
  #L247c5c.  if v8 == v9 then goto L247c9a;
  #L247c60.  v8:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L247c64.  v9:= v12.`okhttp3.internal.http.CacheStrategy$Factory.ageSeconds` @type ^`int`;
  #L247c68.  v10:= (`long`) v9 @kind i2l;
  #L247c6a.  call temp:= `toMillis`(v8, v10) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L247c70.  v8:= temp @kind wide;
  #L247c72.  call temp:= `max`(v0, v8) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L247c78.  v2:= temp @kind wide;
  #L247c7a.  v8:= v12.`okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L247c7e.  v10:= v12.`okhttp3.internal.http.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L247c82.  v6:= v8 - v10 @kind long;
  #L247c86.  v8:= v12.`okhttp3.internal.http.CacheStrategy$Factory.nowMillis` @type ^`long` @kind wide;
  #L247c8a.  v10:= v12.`okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L247c8e.  v4:= v8 - v10 @kind long;
  #L247c92.  v8:= v2 + v6 @kind long;
  #L247c96.  v8:= v8 + v4 @kind long;
  #L247c98.  return v8 @kind wide;
  #L247c9a.  v2:= v0 @kind wide;
  #L247c9c.  goto L247c7a;
}
procedure `long` `computeFreshnessLifetime`(`okhttp3.internal.http.CacheStrategy$Factory` v10 @kind this) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L247cb0.  v6:= 0L;
  #L247cb4.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247cb8.  call temp:= `cacheControl`(v3) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L247cbe.  v2:= temp @kind object;
  #L247cc0.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L247cc6.  v3:= temp;
  #L247cc8.  v8:= -1I;
  #L247cca.  if v3 == v8 then goto L247ce6;
  #L247cce.  v3:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L247cd2.  call temp:= `maxAgeSeconds`(v2) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L247cd8.  v6:= temp;
  #L247cda.  v6:= (`long`) v6 @kind i2l;
  #L247cdc.  call temp:= `toMillis`(v3, v6) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L247ce2.  v6:= temp @kind wide;
  #L247ce4.  return v6 @kind wide;
  #L247ce6.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L247cea.  if v3 == 0 then goto L247d28;
  #L247cee.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247cf2.  if v3 == 0 then goto L247d1e;
  #L247cf6.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247cfa.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L247d00.  v4:= temp @kind wide;
  #L247d02.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L247d06.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L247d0c.  v8:= temp @kind wide;
  #L247d0e.  v0:= v8 - v4 @kind long;
  #L247d12.  v3:= lcmp(v0, v6);
  #L247d16.  if v3 <= 0 then goto L247d24;
  #L247d1a.  v6:= v0 @kind wide;
  #L247d1c.  goto L247ce4;
  #L247d1e.  v4:= v10.`okhttp3.internal.http.CacheStrategy$Factory.receivedResponseMillis` @type ^`long` @kind wide;
  #L247d22.  goto L247d02;
  #L247d24.  v0:= v6 @kind wide;
  #L247d26.  goto L247d1a;
  #L247d28.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L247d2c.  if v3 == 0 then goto L247ce4;
  #L247d30.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247d34.  call temp:= `request`(v3) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L247d3a.  v3:= temp @kind object;
  #L247d3c.  call temp:= `url`(v3) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L247d42.  v3:= temp @kind object;
  #L247d44.  call temp:= `query`(v3) @signature `Lokhttp3/HttpUrl;.query:()Ljava/lang/String;` @kind virtual;
  #L247d4a.  v3:= temp @kind object;
  #L247d4c.  if v3 != 0 then goto L247ce4;
  #L247d50.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247d54.  if v3 == 0 then goto L247d86;
  #L247d58.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L247d5c.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L247d62.  v4:= temp @kind wide;
  #L247d64.  v3:= v10.`okhttp3.internal.http.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L247d68.  call temp:= `getTime`(v3) @signature `Ljava/util/Date;.getTime:()J` @kind virtual;
  #L247d6e.  v8:= temp @kind wide;
  #L247d70.  v0:= v4 - v8 @kind long;
  #L247d74.  v3:= lcmp(v0, v6);
  #L247d78.  if v3 <= 0 then goto L247ce4;
  #L247d7c.  v6:= 10L;
  #L247d80.  v6:= v0 / v6 @kind long;
  #L247d84.  goto L247ce4;
  #L247d86.  v4:= v10.`okhttp3.internal.http.CacheStrategy$Factory.sentRequestMillis` @type ^`long` @kind wide;
  #L247d8a.  goto L247d64;
}
procedure `okhttp3.internal.http.CacheStrategy` `getCandidate`(`okhttp3.internal.http.CacheStrategy$Factory` v24 @kind this) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/http/CacheStrategy;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;

  #L247d9c.  v0:= v24 @kind object;
  #L247da0.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247da4.  v19:= v0 @kind object;
  #L247da8.  if v19 != 0 then goto L247dcc;
  #L247dac.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L247db0.  v0:= v24 @kind object;
  #L247db4.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247db8.  v20:= v0 @kind object;
  #L247dbc.  v21:= 0I;
  #L247dc0.  v22:= 0I;
  #L247dc4.  call `<init>`(v19, v20, v21, v22) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L247dca.  return v19 @kind object;
  #L247dcc.  v0:= v24 @kind object;
  #L247dd0.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247dd4.  v19:= v0 @kind object;
  #L247dd8.  call temp:= `isHttps`(v19) @signature `Lokhttp3/Request;.isHttps:()Z` @kind virtual;
  #L247dde.  v19:= temp;
  #L247de0.  if v19 == 0 then goto L247e1c;
  #L247de4.  v0:= v24 @kind object;
  #L247de8.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247dec.  v19:= v0 @kind object;
  #L247df0.  call temp:= `handshake`(v19) @signature `Lokhttp3/Response;.handshake:()Lokhttp3/Handshake;` @kind virtual;
  #L247df6.  v19:= temp @kind object;
  #L247df8.  if v19 != 0 then goto L247e1c;
  #L247dfc.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L247e00.  v0:= v24 @kind object;
  #L247e04.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247e08.  v20:= v0 @kind object;
  #L247e0c.  v21:= 0I;
  #L247e10.  v22:= 0I;
  #L247e14.  call `<init>`(v19, v20, v21, v22) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L247e1a.  goto L247dca;
  #L247e1c.  v0:= v24 @kind object;
  #L247e20.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247e24.  v19:= v0 @kind object;
  #L247e28.  v0:= v24 @kind object;
  #L247e2c.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247e30.  v20:= v0 @kind object;
  #L247e34.  call temp:= `isCacheable`(v19, v20) @signature `Lokhttp3/internal/http/CacheStrategy;.isCacheable:(Lokhttp3/Response;Lokhttp3/Request;)Z` @kind static;
  #L247e3a.  v19:= temp;
  #L247e3c.  if v19 != 0 then goto L247e60;
  #L247e40.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L247e44.  v0:= v24 @kind object;
  #L247e48.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247e4c.  v20:= v0 @kind object;
  #L247e50.  v21:= 0I;
  #L247e54.  v22:= 0I;
  #L247e58.  call `<init>`(v19, v20, v21, v22) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L247e5e.  goto L247dca;
  #L247e60.  v0:= v24 @kind object;
  #L247e64.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247e68.  v19:= v0 @kind object;
  #L247e6c.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L247e72.  v9:= temp @kind object;
  #L247e74.  call temp:= `noCache`(v9) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L247e7a.  v19:= temp;
  #L247e7c.  if v19 != 0 then goto L247e98;
  #L247e80.  v0:= v24 @kind object;
  #L247e84.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247e88.  v19:= v0 @kind object;
  #L247e8c.  call temp:= `hasConditions`(v19) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L247e92.  v19:= temp;
  #L247e94.  if v19 == 0 then goto L247eb8;
  #L247e98.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L247e9c.  v0:= v24 @kind object;
  #L247ea0.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L247ea4.  v20:= v0 @kind object;
  #L247ea8.  v21:= 0I;
  #L247eac.  v22:= 0I;
  #L247eb0.  call `<init>`(v19, v20, v21, v22) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L247eb6.  goto L247dca;
  #L247eb8.  call temp:= `cacheResponseAge`(v24) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.cacheResponseAge:()J` @kind direct;
  #L247ebe.  v4:= temp @kind wide;
  #L247ec0.  call temp:= `computeFreshnessLifetime`(v24) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.computeFreshnessLifetime:()J` @kind direct;
  #L247ec6.  v10:= temp @kind wide;
  #L247ec8.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L247ece.  v19:= temp;
  #L247ed0.  v20:= -1I;
  #L247ed4.  v0:= v19;
  #L247ed8.  v1:= v20;
  #L247edc.  if v0 == v1 then goto L247f0a;
  #L247ee0.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L247ee4.  call temp:= `maxAgeSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L247eea.  v20:= temp;
  #L247eec.  v0:= v20;
  #L247ef0.  v0:= (`long`) v0 @kind i2l;
  #L247ef2.  v20:= v0 @kind wide;
  #L247ef6.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L247efc.  v20:= temp @kind wide;
  #L247efe.  v0:= v20 @kind wide;
  #L247f02.  call temp:= `min`(v10, v0) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L247f08.  v10:= temp @kind wide;
  #L247f0a.  v14:= 0L;
  #L247f0e.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L247f14.  v19:= temp;
  #L247f16.  v20:= -1I;
  #L247f1a.  v0:= v19;
  #L247f1e.  v1:= v20;
  #L247f22.  if v0 == v1 then goto L247f44;
  #L247f26.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L247f2a.  call temp:= `minFreshSeconds`(v9) @signature `Lokhttp3/CacheControl;.minFreshSeconds:()I` @kind virtual;
  #L247f30.  v20:= temp;
  #L247f32.  v0:= v20;
  #L247f36.  v0:= (`long`) v0 @kind i2l;
  #L247f38.  v20:= v0 @kind wide;
  #L247f3c.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L247f42.  v14:= temp @kind wide;
  #L247f44.  v12:= 0L;
  #L247f48.  v0:= v24 @kind object;
  #L247f4c.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247f50.  v19:= v0 @kind object;
  #L247f54.  call temp:= `cacheControl`(v19) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L247f5a.  v18:= temp @kind object;
  #L247f5c.  call temp:= `mustRevalidate`(v18) @signature `Lokhttp3/CacheControl;.mustRevalidate:()Z` @kind virtual;
  #L247f62.  v19:= temp;
  #L247f64.  if v19 != 0 then goto L247f9e;
  #L247f68.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L247f6e.  v19:= temp;
  #L247f70.  v20:= -1I;
  #L247f74.  v0:= v19;
  #L247f78.  v1:= v20;
  #L247f7c.  if v0 == v1 then goto L247f9e;
  #L247f80.  v19:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L247f84.  call temp:= `maxStaleSeconds`(v9) @signature `Lokhttp3/CacheControl;.maxStaleSeconds:()I` @kind virtual;
  #L247f8a.  v20:= temp;
  #L247f8c.  v0:= v20;
  #L247f90.  v0:= (`long`) v0 @kind i2l;
  #L247f92.  v20:= v0 @kind wide;
  #L247f96.  call temp:= `toMillis`(v19, v20) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L247f9c.  v12:= temp @kind wide;
  #L247f9e.  call temp:= `noCache`(v18) @signature `Lokhttp3/CacheControl;.noCache:()Z` @kind virtual;
  #L247fa4.  v19:= temp;
  #L247fa6.  if v19 != 0 then goto L24803e;
  #L247faa.  v20:= v4 + v14 @kind long;
  #L247fae.  v22:= v10 + v12 @kind long;
  #L247fb2.  v19:= lcmp(v20, v22);
  #L247fb6.  if v19 >= 0 then goto L24803e;
  #L247fba.  v0:= v24 @kind object;
  #L247fbe.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L247fc2.  v19:= v0 @kind object;
  #L247fc6.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Response;.newBuilder:()Lokhttp3/Response$Builder;` @kind virtual;
  #L247fcc.  v6:= temp @kind object;
  #L247fce.  v20:= v4 + v14 @kind long;
  #L247fd2.  v19:= lcmp(v20, v10);
  #L247fd6.  if v19 < 0 then goto L247ff0;
  #L247fda.  v19:= "Warning" @kind object;
  #L247fde.  v20:= "110 HttpURLConnection \"Response is stale\"" @kind object;
  #L247fe2.  v0:= v19 @kind object;
  #L247fe6.  v1:= v20 @kind object;
  #L247fea.  call temp:= `addHeader`(v6, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L247ff0.  v16:= 86400000L;
  #L247ff6.  v19:= lcmp(v4, v16);
  #L247ffa.  if v19 <= 0 then goto L248020;
  #L247ffe.  call temp:= `isFreshnessLifetimeHeuristic`(v24) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @kind direct;
  #L248004.  v19:= temp;
  #L248006.  if v19 == 0 then goto L248020;
  #L24800a.  v19:= "Warning" @kind object;
  #L24800e.  v20:= "113 HttpURLConnection \"Heuristic expiration\"" @kind object;
  #L248012.  v0:= v19 @kind object;
  #L248016.  v1:= v20 @kind object;
  #L24801a.  call temp:= `addHeader`(v6, v0, v1) @signature `Lokhttp3/Response$Builder;.addHeader:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L248020.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L248024.  v20:= 0I;
  #L248028.  call temp:= `build`(v6) @signature `Lokhttp3/Response$Builder;.build:()Lokhttp3/Response;` @kind virtual;
  #L24802e.  v21:= temp @kind object;
  #L248030.  v22:= 0I;
  #L248034.  call `<init>`(v19, v20, v21, v22) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L24803a.  goto L247dca;
  #L24803e.  v0:= v24 @kind object;
  #L248042.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L248046.  v19:= v0 @kind object;
  #L24804a.  call temp:= `newBuilder`(v19) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L248050.  v8:= temp @kind object;
  #L248052.  v0:= v24 @kind object;
  #L248056.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L24805a.  v19:= v0 @kind object;
  #L24805e.  if v19 == 0 then goto L2480be;
  #L248062.  v19:= "If-None-Match" @kind object;
  #L248066.  v0:= v24 @kind object;
  #L24806a.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.etag` @type ^`java.lang.String` @kind object;
  #L24806e.  v20:= v0 @kind object;
  #L248072.  v0:= v19 @kind object;
  #L248076.  v1:= v20 @kind object;
  #L24807a.  call temp:= `header`(v8, v0, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L248080.  call temp:= `build`(v8) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L248086.  v7:= temp @kind object;
  #L248088.  call temp:= `hasConditions`(v7) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @kind static;
  #L24808e.  v19:= temp;
  #L248090.  if v19 == 0 then goto L24811e;
  #L248094.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L248098.  v0:= v24 @kind object;
  #L24809c.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L2480a0.  v20:= v0 @kind object;
  #L2480a4.  v21:= 0I;
  #L2480a8.  v0:= v19 @kind object;
  #L2480ac.  v1:= v20 @kind object;
  #L2480b0.  v2:= v21 @kind object;
  #L2480b4.  call `<init>`(v0, v7, v1, v2) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L2480ba.  goto L247dca;
  #L2480be.  v0:= v24 @kind object;
  #L2480c2.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.lastModified` @type ^`java.util.Date` @kind object;
  #L2480c6.  v19:= v0 @kind object;
  #L2480ca.  if v19 == 0 then goto L2480ee;
  #L2480ce.  v19:= "If-Modified-Since" @kind object;
  #L2480d2.  v0:= v24 @kind object;
  #L2480d6.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.lastModifiedString` @type ^`java.lang.String` @kind object;
  #L2480da.  v20:= v0 @kind object;
  #L2480de.  v0:= v19 @kind object;
  #L2480e2.  v1:= v20 @kind object;
  #L2480e6.  call temp:= `header`(v8, v0, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L2480ec.  goto L248080;
  #L2480ee.  v0:= v24 @kind object;
  #L2480f2.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.servedDate` @type ^`java.util.Date` @kind object;
  #L2480f6.  v19:= v0 @kind object;
  #L2480fa.  if v19 == 0 then goto L248080;
  #L2480fe.  v19:= "If-Modified-Since" @kind object;
  #L248102.  v0:= v24 @kind object;
  #L248106.  v0:= v0.`okhttp3.internal.http.CacheStrategy$Factory.servedDateString` @type ^`java.lang.String` @kind object;
  #L24810a.  v20:= v0 @kind object;
  #L24810e.  v0:= v19 @kind object;
  #L248112.  v1:= v20 @kind object;
  #L248116.  call temp:= `header`(v8, v0, v1) @signature `Lokhttp3/Request$Builder;.header:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Request$Builder;` @kind virtual;
  #L24811c.  goto L248080;
  #L24811e.  v19:= new `okhttp3.internal.http.CacheStrategy`;
  #L248122.  v20:= 0I;
  #L248126.  v21:= 0I;
  #L24812a.  v0:= v19 @kind object;
  #L24812e.  v1:= v20 @kind object;
  #L248132.  v2:= v21 @kind object;
  #L248136.  call `<init>`(v0, v7, v1, v2) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L24813c.  goto L247dca;
}
procedure `boolean` `hasConditions`(`okhttp3.Request` v1 @kind object @name `request`) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.hasConditions:(Lokhttp3/Request;)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L248150.  v0:= "If-Modified-Since" @kind object;
  #L248154.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L24815a.  v0:= temp @kind object;
  #L24815c.  if v0 != 0 then goto L248170;
  #L248160.  v0:= "If-None-Match" @kind object;
  #L248164.  call temp:= `header`(v1, v0) @signature `Lokhttp3/Request;.header:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L24816a.  v0:= temp @kind object;
  #L24816c.  if v0 == 0 then goto L248174;
  #L248170.  v0:= 1I;
  #L248172.  return v0;
  #L248174.  v0:= 0I;
  #L248176.  goto L248172;
}
procedure `boolean` `isFreshnessLifetimeHeuristic`(`okhttp3.internal.http.CacheStrategy$Factory` v2 @kind this) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.isFreshnessLifetimeHeuristic:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L248188.  v0:= v2.`okhttp3.internal.http.CacheStrategy$Factory.cacheResponse` @type ^`okhttp3.Response` @kind object;
  #L24818c.  call temp:= `cacheControl`(v0) @signature `Lokhttp3/Response;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L248192.  v0:= temp @kind object;
  #L248194.  call temp:= `maxAgeSeconds`(v0) @signature `Lokhttp3/CacheControl;.maxAgeSeconds:()I` @kind virtual;
  #L24819a.  v0:= temp;
  #L24819c.  v1:= -1I;
  #L24819e.  if v0 != v1 then goto L2481ae;
  #L2481a2.  v0:= v2.`okhttp3.internal.http.CacheStrategy$Factory.expires` @type ^`java.util.Date` @kind object;
  #L2481a6.  if v0 != 0 then goto L2481ae;
  #L2481aa.  v0:= 1I;
  #L2481ac.  return v0;
  #L2481ae.  v0:= 0I;
  #L2481b0.  goto L2481ac;
}
procedure `okhttp3.internal.http.CacheStrategy` `get`(`okhttp3.internal.http.CacheStrategy$Factory` v3 @kind this) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.get:()Lokhttp3/internal/http/CacheStrategy;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2481c4.  v2:= 0I;
  #L2481c6.  call temp:= `getCandidate`(v3) @signature `Lokhttp3/internal/http/CacheStrategy$Factory;.getCandidate:()Lokhttp3/internal/http/CacheStrategy;` @kind direct;
  #L2481cc.  v0:= temp @kind object;
  #L2481ce.  v1:= v0.`okhttp3.internal.http.CacheStrategy.networkRequest` @type ^`okhttp3.Request` @kind object;
  #L2481d2.  if v1 == 0 then goto L2481f8;
  #L2481d6.  v1:= v3.`okhttp3.internal.http.CacheStrategy$Factory.request` @type ^`okhttp3.Request` @kind object;
  #L2481da.  call temp:= `cacheControl`(v1) @signature `Lokhttp3/Request;.cacheControl:()Lokhttp3/CacheControl;` @kind virtual;
  #L2481e0.  v1:= temp @kind object;
  #L2481e2.  call temp:= `onlyIfCached`(v1) @signature `Lokhttp3/CacheControl;.onlyIfCached:()Z` @kind virtual;
  #L2481e8.  v1:= temp;
  #L2481ea.  if v1 == 0 then goto L2481f8;
  #L2481ee.  v0:= new `okhttp3.internal.http.CacheStrategy`;
  #L2481f2.  call `<init>`(v0, v2, v2, v2) @signature `Lokhttp3/internal/http/CacheStrategy;.<init>:(Lokhttp3/Request;Lokhttp3/Response;Lokhttp3/internal/http/CacheStrategy$1;)V` @kind direct;
  #L2481f8.  return v0 @kind object;
}
