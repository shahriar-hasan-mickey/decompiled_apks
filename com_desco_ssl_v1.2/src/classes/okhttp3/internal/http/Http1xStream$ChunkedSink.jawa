record `okhttp3.internal.http.Http1xStream$ChunkedSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `boolean` `okhttp3.internal.http.Http1xStream$ChunkedSink.closed` @AccessFlag PRIVATE;
  `okhttp3.internal.http.Http1xStream` `okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http.Http1xStream$ChunkedSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v2 @kind this, `okhttp3.internal.http.Http1xStream` v3 @kind object) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30d968.  v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` := v3 @kind object;
  #L30d96c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d972.  v0:= new `okio.ForwardingTimeout`;
  #L30d976.  v1:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d97a.  call temp:= `access$300`(v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30d980.  v1:= temp @kind object;
  #L30d982.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L30d988.  v1:= temp @kind object;
  #L30d98a.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L30d990.  v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L30d994.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v0 @kind this, `okhttp3.internal.http.Http1xStream` v1 @kind object @name `x0`, `okhttp3.internal.http.Http1xStream$1` v2 @kind object @name `x1`) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.<init>:(Lokhttp3/internal/http/Http1xStream;Lokhttp3/internal/http/Http1xStream$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30d9a8.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @kind direct;
  #L30d9ae.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v2 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30d9c0.  @monitorenter v2
  #L30d9c2.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L30d9c6.  if v0 == 0 then goto L30d9ce;
  #L30d9ca.  @monitorexit v2
  #L30d9cc.  return @kind void;
  #L30d9ce.  v0:= 1I;
  #L30d9d0.  v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L30d9d4.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d9d8.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30d9de.  v0:= temp @kind object;
  #L30d9e0.  v1:= "0\r\n\r\n" @kind object;
  #L30d9e4.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L30d9ea.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d9ee.  v1:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30d9f2.  call `access$400`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$400:(Lokhttp3/internal/http/Http1xStream;Lokio/ForwardingTimeout;)V` @kind static;
  #L30d9f8.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d9fc.  v1:= 3I;
  #L30d9fe.  call temp:= `access$502`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$502:(Lokhttp3/internal/http/Http1xStream;I)I` @kind static;
  #L30da04.  goto L30d9ca;
  #L30da06.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30da08.  @monitorexit v2
  #L30da0a.  throw v0;
  catch `java.lang.Throwable` @[L30d9c2..L30d9c6] goto L30da06;
  catch `java.lang.Throwable` @[L30d9d0..L30da04] goto L30da06;
}
procedure `void` `flush`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30da30.  @monitorenter v1
  #L30da32.  v0:= v1.`okhttp3.internal.http.Http1xStream$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L30da36.  if v0 == 0 then goto L30da3e;
  #L30da3a.  @monitorexit v1
  #L30da3c.  return @kind void;
  #L30da3e.  v0:= v1.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30da42.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30da48.  v0:= temp @kind object;
  #L30da4a.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L30da50.  goto L30da3a;
  #L30da52.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L30da54.  @monitorexit v1
  #L30da56.  throw v0;
  catch `java.lang.Throwable` @[L30da32..L30da36] goto L30da52;
  catch `java.lang.Throwable` @[L30da3e..L30da50] goto L30da52;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30da7c.  v0:= v1.`okhttp3.internal.http.Http1xStream$ChunkedSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30da80.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http.Http1xStream$ChunkedSink` v2 @kind this, `okio.Buffer` v3 @kind object @name `source`, `long` v4 @name `byteCount`) @signature `Lokhttp3/internal/http/Http1xStream$ChunkedSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30da94.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.closed` @type ^`boolean` @kind boolean;
  #L30da98.  if v0 == 0 then goto L30daac;
  #L30da9c.  v0:= new `java.lang.IllegalStateException`;
  #L30daa0.  v1:= "closed" @kind object;
  #L30daa4.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30daaa.  throw v0;
  #L30daac.  v0:= 0L;
  #L30dab0.  v0:= lcmp(v4, v0);
  #L30dab4.  if v0 != 0 then goto L30daba;
  #L30dab8.  return @kind void;
  #L30daba.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dabe.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30dac4.  v0:= temp @kind object;
  #L30dac6.  call temp:= `writeHexadecimalUnsignedLong`(v0, v4) @signature `Lokio/BufferedSink;.writeHexadecimalUnsignedLong:(J)Lokio/BufferedSink;` @kind interface;
  #L30dacc.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dad0.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30dad6.  v0:= temp @kind object;
  #L30dad8.  v1:= "\r\n" @kind object;
  #L30dadc.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L30dae2.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dae6.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30daec.  v0:= temp @kind object;
  #L30daee.  call `write`(v0, v3, v4) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L30daf4.  v0:= v2.`okhttp3.internal.http.Http1xStream$ChunkedSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30daf8.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30dafe.  v0:= temp @kind object;
  #L30db00.  v1:= "\r\n" @kind object;
  #L30db04.  call temp:= `writeUtf8`(v0, v1) @signature `Lokio/BufferedSink;.writeUtf8:(Ljava/lang/String;)Lokio/BufferedSink;` @kind interface;
  #L30db0a.  goto L30dab8;
}
