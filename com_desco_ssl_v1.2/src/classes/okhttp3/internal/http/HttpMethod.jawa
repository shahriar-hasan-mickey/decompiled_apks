record `okhttp3.internal.http.HttpMethod` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpMethod` v0 @kind this) @signature `Lokhttp3/internal/http/HttpMethod;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L249ae8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249aee.  return @kind void;
}
procedure `boolean` `invalidatesCache`(`java.lang.String` v1 @kind object @name `method`) @signature `Lokhttp3/internal/http/HttpMethod;.invalidatesCache:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249b00.  v0:= "POST" @kind object;
  #L249b04.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b0a.  v0:= temp;
  #L249b0c.  if v0 != 0 then goto L249b50;
  #L249b10.  v0:= "PATCH" @kind object;
  #L249b14.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b1a.  v0:= temp;
  #L249b1c.  if v0 != 0 then goto L249b50;
  #L249b20.  v0:= "PUT" @kind object;
  #L249b24.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b2a.  v0:= temp;
  #L249b2c.  if v0 != 0 then goto L249b50;
  #L249b30.  v0:= "DELETE" @kind object;
  #L249b34.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b3a.  v0:= temp;
  #L249b3c.  if v0 != 0 then goto L249b50;
  #L249b40.  v0:= "MOVE" @kind object;
  #L249b44.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b4a.  v0:= temp;
  #L249b4c.  if v0 == 0 then goto L249b54;
  #L249b50.  v0:= 1I;
  #L249b52.  return v0;
  #L249b54.  v0:= 0I;
  #L249b56.  goto L249b52;
}
procedure `boolean` `permitsRequestBody`(`java.lang.String` v1 @kind object @name `method`) @signature `Lokhttp3/internal/http/HttpMethod;.permitsRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249b68.  call temp:= `requiresRequestBody`(v1) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @kind static;
  #L249b6e.  v0:= temp;
  #L249b70.  if v0 != 0 then goto L249bc4;
  #L249b74.  v0:= "OPTIONS" @kind object;
  #L249b78.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b7e.  v0:= temp;
  #L249b80.  if v0 != 0 then goto L249bc4;
  #L249b84.  v0:= "DELETE" @kind object;
  #L249b88.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b8e.  v0:= temp;
  #L249b90.  if v0 != 0 then goto L249bc4;
  #L249b94.  v0:= "PROPFIND" @kind object;
  #L249b98.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249b9e.  v0:= temp;
  #L249ba0.  if v0 != 0 then goto L249bc4;
  #L249ba4.  v0:= "MKCOL" @kind object;
  #L249ba8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249bae.  v0:= temp;
  #L249bb0.  if v0 != 0 then goto L249bc4;
  #L249bb4.  v0:= "LOCK" @kind object;
  #L249bb8.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249bbe.  v0:= temp;
  #L249bc0.  if v0 == 0 then goto L249bc8;
  #L249bc4.  v0:= 1I;
  #L249bc6.  return v0;
  #L249bc8.  v0:= 0I;
  #L249bca.  goto L249bc6;
}
procedure `boolean` `redirectsToGet`(`java.lang.String` v1 @kind object @name `method`) @signature `Lokhttp3/internal/http/HttpMethod;.redirectsToGet:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249bdc.  v0:= "PROPFIND" @kind object;
  #L249be0.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249be6.  v0:= temp;
  #L249be8.  if v0 != 0 then goto L249bf0;
  #L249bec.  v0:= 1I;
  #L249bee.  return v0;
  #L249bf0.  v0:= 0I;
  #L249bf2.  goto L249bee;
}
procedure `boolean` `requiresRequestBody`(`java.lang.String` v1 @kind object @name `method`) @signature `Lokhttp3/internal/http/HttpMethod;.requiresRequestBody:(Ljava/lang/String;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249c04.  v0:= "POST" @kind object;
  #L249c08.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249c0e.  v0:= temp;
  #L249c10.  if v0 != 0 then goto L249c54;
  #L249c14.  v0:= "PUT" @kind object;
  #L249c18.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249c1e.  v0:= temp;
  #L249c20.  if v0 != 0 then goto L249c54;
  #L249c24.  v0:= "PATCH" @kind object;
  #L249c28.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249c2e.  v0:= temp;
  #L249c30.  if v0 != 0 then goto L249c54;
  #L249c34.  v0:= "PROPPATCH" @kind object;
  #L249c38.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249c3e.  v0:= temp;
  #L249c40.  if v0 != 0 then goto L249c54;
  #L249c44.  v0:= "REPORT" @kind object;
  #L249c48.  call temp:= `equals`(v1, v0) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L249c4e.  v0:= temp;
  #L249c50.  if v0 == 0 then goto L249c58;
  #L249c54.  v0:= 1I;
  #L249c56.  return v0;
  #L249c58.  v0:= 0I;
  #L249c5a.  goto L249c56;
}
