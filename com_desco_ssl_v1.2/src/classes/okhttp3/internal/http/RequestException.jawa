record `okhttp3.internal.http.RequestException` @kind class @AccessFlag PUBLIC_FINAL extends `java.lang.Exception` @kind class {
}
procedure `void` `<init>`(`okhttp3.internal.http.RequestException` v0 @kind this, `java.io.IOException` v1 @kind object @name `cause`) @signature `Lokhttp3/internal/http/RequestException;.<init>:(Ljava/io/IOException;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L24a1b8.  call `<init>`(v0, v1) @signature `Ljava/lang/Exception;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L24a1be.  return @kind void;
}
procedure `java.io.IOException` `getCause`(`okhttp3.internal.http.RequestException` v1 @kind this) @signature `Lokhttp3/internal/http/RequestException;.getCause:()Ljava/io/IOException;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24a1d0.  call temp:= `getCause`(v1) @signature `Ljava/lang/Exception;.getCause:()Ljava/lang/Throwable;` @kind super;
  #L24a1d6.  v0:= temp @kind object;
  #L24a1d8.  v0:= (`java.io.IOException`) v0 @kind object;
  #L24a1dc.  return v0 @kind object;
}
procedure `java.lang.Throwable` `getCause`(`okhttp3.internal.http.RequestException` v1 @kind this) @signature `Lokhttp3/internal/http/RequestException;.getCause:()Ljava/lang/Throwable;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L24a1f0.  call temp:= `getCause`(v1) @signature `Lokhttp3/internal/http/RequestException;.getCause:()Ljava/io/IOException;` @kind virtual;
  #L24a1f6.  v0:= temp @kind object;
  #L24a1f8.  return v0 @kind object;
}
