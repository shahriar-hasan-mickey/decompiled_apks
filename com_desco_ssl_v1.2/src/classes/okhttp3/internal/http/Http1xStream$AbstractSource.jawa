record `okhttp3.internal.http.Http1xStream$AbstractSource` @kind class @AccessFlag ABSTRACT extends `okio.Source` @kind interface {
  `boolean` `okhttp3.internal.http.Http1xStream$AbstractSource.closed` @AccessFlag PROTECTED;
  `okhttp3.internal.http.Http1xStream` `okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http.Http1xStream$AbstractSource.timeout` @AccessFlag PROTECTED_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$AbstractSource` v2 @kind this, `okhttp3.internal.http.Http1xStream` v3 @kind object) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30d838.  v2.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` := v3 @kind object;
  #L30d83c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30d842.  v0:= new `okio.ForwardingTimeout`;
  #L30d846.  v1:= v2.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d84a.  call temp:= `access$600`(v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$600:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSource;` @kind static;
  #L30d850.  v1:= temp @kind object;
  #L30d852.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSource;.timeout:()Lokio/Timeout;` @kind interface;
  #L30d858.  v1:= temp @kind object;
  #L30d85a.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L30d860.  v2.`okhttp3.internal.http.Http1xStream$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L30d864.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$AbstractSource` v0 @kind this, `okhttp3.internal.http.Http1xStream` v1 @kind object @name `x0`, `okhttp3.internal.http.Http1xStream$1` v2 @kind object @name `x1`) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.<init>:(Lokhttp3/internal/http/Http1xStream;Lokhttp3/internal/http/Http1xStream$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30d878.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @kind direct;
  #L30d87e.  return @kind void;
}
procedure `void` `endOfInput`(`okhttp3.internal.http.Http1xStream$AbstractSource` v3 @kind this, `boolean` v4 @name `reuseConnection`) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.endOfInput:(Z)V` @AccessFlag PROTECTED_FINAL {
    temp;
    v0;
    v1;
    v2;

  #L30d890.  v2:= 6I;
  #L30d892.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d896.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$500:(Lokhttp3/internal/http/Http1xStream;)I` @kind static;
  #L30d89c.  v0:= temp;
  #L30d89e.  if v0 != v2 then goto L30d8a4;
  #L30d8a2.  return @kind void;
  #L30d8a4.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d8a8.  call temp:= `access$500`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$500:(Lokhttp3/internal/http/Http1xStream;)I` @kind static;
  #L30d8ae.  v0:= temp;
  #L30d8b0.  v1:= 5I;
  #L30d8b2.  if v0 == v1 then goto L30d8f4;
  #L30d8b6.  v0:= new `java.lang.IllegalStateException`;
  #L30d8ba.  v1:= new `java.lang.StringBuilder`;
  #L30d8be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30d8c4.  v2:= "state: " @kind object;
  #L30d8c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d8ce.  v1:= temp @kind object;
  #L30d8d0.  v2:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d8d4.  call temp:= `access$500`(v2) @signature `Lokhttp3/internal/http/Http1xStream;.access$500:(Lokhttp3/internal/http/Http1xStream;)I` @kind static;
  #L30d8da.  v2:= temp;
  #L30d8dc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30d8e2.  v1:= temp @kind object;
  #L30d8e4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30d8ea.  v1:= temp @kind object;
  #L30d8ec.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30d8f2.  throw v0;
  #L30d8f4.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d8f8.  v1:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30d8fc.  call `access$400`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$400:(Lokhttp3/internal/http/Http1xStream;Lokio/ForwardingTimeout;)V` @kind static;
  #L30d902.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d906.  call temp:= `access$502`(v0, v2) @signature `Lokhttp3/internal/http/Http1xStream;.access$502:(Lokhttp3/internal/http/Http1xStream;I)I` @kind static;
  #L30d90c.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d910.  call temp:= `access$700`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$700:(Lokhttp3/internal/http/Http1xStream;)Lokhttp3/internal/http/StreamAllocation;` @kind static;
  #L30d916.  v0:= temp @kind object;
  #L30d918.  if v0 == 0 then goto L30d8a2;
  #L30d91c.  v0:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d920.  call temp:= `access$700`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$700:(Lokhttp3/internal/http/Http1xStream;)Lokhttp3/internal/http/StreamAllocation;` @kind static;
  #L30d926.  v1:= temp @kind object;
  #L30d928.  if v4 != 0 then goto L30d93a;
  #L30d92c.  v0:= 1I;
  #L30d92e.  v2:= v3.`okhttp3.internal.http.Http1xStream$AbstractSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30d932.  call `streamFinished`(v1, v0, v2) @signature `Lokhttp3/internal/http/StreamAllocation;.streamFinished:(ZLokhttp3/internal/http/HttpStream;)V` @kind virtual;
  #L30d938.  goto L30d8a2;
  #L30d93a.  v0:= 0I;
  #L30d93c.  goto L30d92e;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http.Http1xStream$AbstractSource` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30d950.  v0:= v1.`okhttp3.internal.http.Http1xStream$AbstractSource.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30d954.  return v0 @kind object;
}
