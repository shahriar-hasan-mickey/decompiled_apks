record `okhttp3.internal.http.OkHeaders` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.lang.String` `@@okhttp3.internal.http.OkHeaders.PREFIX` @AccessFlag STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http.OkHeaders.RECEIVED_MILLIS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http.OkHeaders.RESPONSE_SOURCE` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http.OkHeaders.SELECTED_PROTOCOL` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.String` `@@okhttp3.internal.http.OkHeaders.SENT_MILLIS` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/OkHeaders;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L249c6c.  call temp:= `get`() @signature `Lokhttp3/internal/Platform;.get:()Lokhttp3/internal/Platform;` @kind static;
  #L249c72.  v0:= temp @kind object;
  #L249c74.  call temp:= `getPrefix`(v0) @signature `Lokhttp3/internal/Platform;.getPrefix:()Ljava/lang/String;` @kind virtual;
  #L249c7a.  v0:= temp @kind object;
  #L249c7c.  `@@okhttp3.internal.http.OkHeaders.PREFIX` @type ^`java.lang.String` := v0 @kind object;
  #L249c80.  v0:= new `java.lang.StringBuilder`;
  #L249c84.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249c8a.  v1:= `@@okhttp3.internal.http.OkHeaders.PREFIX` @type ^`java.lang.String` @kind object;
  #L249c8e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249c94.  v0:= temp @kind object;
  #L249c96.  v1:= "-Sent-Millis" @kind object;
  #L249c9a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249ca0.  v0:= temp @kind object;
  #L249ca2.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L249ca8.  v0:= temp @kind object;
  #L249caa.  `@@okhttp3.internal.http.OkHeaders.SENT_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L249cae.  v0:= new `java.lang.StringBuilder`;
  #L249cb2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249cb8.  v1:= `@@okhttp3.internal.http.OkHeaders.PREFIX` @type ^`java.lang.String` @kind object;
  #L249cbc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249cc2.  v0:= temp @kind object;
  #L249cc4.  v1:= "-Received-Millis" @kind object;
  #L249cc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249cce.  v0:= temp @kind object;
  #L249cd0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L249cd6.  v0:= temp @kind object;
  #L249cd8.  `@@okhttp3.internal.http.OkHeaders.RECEIVED_MILLIS` @type ^`java.lang.String` := v0 @kind object;
  #L249cdc.  v0:= new `java.lang.StringBuilder`;
  #L249ce0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249ce6.  v1:= `@@okhttp3.internal.http.OkHeaders.PREFIX` @type ^`java.lang.String` @kind object;
  #L249cea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249cf0.  v0:= temp @kind object;
  #L249cf2.  v1:= "-Selected-Protocol" @kind object;
  #L249cf6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249cfc.  v0:= temp @kind object;
  #L249cfe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L249d04.  v0:= temp @kind object;
  #L249d06.  `@@okhttp3.internal.http.OkHeaders.SELECTED_PROTOCOL` @type ^`java.lang.String` := v0 @kind object;
  #L249d0a.  v0:= new `java.lang.StringBuilder`;
  #L249d0e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L249d14.  v1:= `@@okhttp3.internal.http.OkHeaders.PREFIX` @type ^`java.lang.String` @kind object;
  #L249d18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249d1e.  v0:= temp @kind object;
  #L249d20.  v1:= "-Response-Source" @kind object;
  #L249d24.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L249d2a.  v0:= temp @kind object;
  #L249d2c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L249d32.  v0:= temp @kind object;
  #L249d34.  `@@okhttp3.internal.http.OkHeaders.RESPONSE_SOURCE` @type ^`java.lang.String` := v0 @kind object;
  #L249d38.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.OkHeaders` v0 @kind this) @signature `Lokhttp3/internal/http/OkHeaders;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L249d4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L249d52.  return @kind void;
}
procedure `long` `contentLength`(`okhttp3.Headers` v2 @kind object @name `headers`) @signature `Lokhttp3/internal/http/OkHeaders;.contentLength:(Lokhttp3/Headers;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L249d64.  v0:= "Content-Length" @kind object;
  #L249d68.  call temp:= `get`(v2, v0) @signature `Lokhttp3/Headers;.get:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L249d6e.  v0:= temp @kind object;
  #L249d70.  call temp:= `stringToLong`(v0) @signature `Lokhttp3/internal/http/OkHeaders;.stringToLong:(Ljava/lang/String;)J` @kind static;
  #L249d76.  v0:= temp @kind wide;
  #L249d78.  return v0 @kind wide;
}
procedure `long` `contentLength`(`okhttp3.Request` v2 @kind object @name `request`) @signature `Lokhttp3/internal/http/OkHeaders;.contentLength:(Lokhttp3/Request;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L249d8c.  call temp:= `headers`(v2) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L249d92.  v0:= temp @kind object;
  #L249d94.  call temp:= `contentLength`(v0) @signature `Lokhttp3/internal/http/OkHeaders;.contentLength:(Lokhttp3/Headers;)J` @kind static;
  #L249d9a.  v0:= temp @kind wide;
  #L249d9c.  return v0 @kind wide;
}
procedure `long` `contentLength`(`okhttp3.Response` v2 @kind object @name `response`) @signature `Lokhttp3/internal/http/OkHeaders;.contentLength:(Lokhttp3/Response;)J` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L249db0.  call temp:= `headers`(v2) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L249db6.  v0:= temp @kind object;
  #L249db8.  call temp:= `contentLength`(v0) @signature `Lokhttp3/internal/http/OkHeaders;.contentLength:(Lokhttp3/Headers;)J` @kind static;
  #L249dbe.  v0:= temp @kind wide;
  #L249dc0.  return v0 @kind wide;
}
procedure `boolean` `hasVaryAll`(`okhttp3.Headers` v2 @kind object @name `responseHeaders`) @signature `Lokhttp3/internal/http/OkHeaders;.hasVaryAll:(Lokhttp3/Headers;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L249dd4.  call temp:= `varyFields`(v2) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Headers;)Ljava/util/Set;` @kind static;
  #L249dda.  v0:= temp @kind object;
  #L249ddc.  v1:= "*" @kind object;
  #L249de0.  call temp:= `contains`(v0, v1) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L249de6.  v0:= temp;
  #L249de8.  return v0;
}
procedure `boolean` `hasVaryAll`(`okhttp3.Response` v1 @kind object @name `response`) @signature `Lokhttp3/internal/http/OkHeaders;.hasVaryAll:(Lokhttp3/Response;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L249dfc.  call temp:= `headers`(v1) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L249e02.  v0:= temp @kind object;
  #L249e04.  call temp:= `hasVaryAll`(v0) @signature `Lokhttp3/internal/http/OkHeaders;.hasVaryAll:(Lokhttp3/Headers;)Z` @kind static;
  #L249e0a.  v0:= temp;
  #L249e0c.  return v0;
}
procedure `boolean` `isEndToEnd`(`java.lang.String` v1 @kind object @name `fieldName`) @signature `Lokhttp3/internal/http/OkHeaders;.isEndToEnd:(Ljava/lang/String;)Z` @AccessFlag STATIC {
    temp;
    v0;

  #L249e20.  v0:= "Connection" @kind object;
  #L249e24.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e2a.  v0:= temp;
  #L249e2c.  if v0 != 0 then goto L249ea4;
  #L249e30.  v0:= "Keep-Alive" @kind object;
  #L249e34.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e3a.  v0:= temp;
  #L249e3c.  if v0 != 0 then goto L249ea4;
  #L249e40.  v0:= "Proxy-Authenticate" @kind object;
  #L249e44.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e4a.  v0:= temp;
  #L249e4c.  if v0 != 0 then goto L249ea4;
  #L249e50.  v0:= "Proxy-Authorization" @kind object;
  #L249e54.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e5a.  v0:= temp;
  #L249e5c.  if v0 != 0 then goto L249ea4;
  #L249e60.  v0:= "TE" @kind object;
  #L249e64.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e6a.  v0:= temp;
  #L249e6c.  if v0 != 0 then goto L249ea4;
  #L249e70.  v0:= "Trailers" @kind object;
  #L249e74.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e7a.  v0:= temp;
  #L249e7c.  if v0 != 0 then goto L249ea4;
  #L249e80.  v0:= "Transfer-Encoding" @kind object;
  #L249e84.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e8a.  v0:= temp;
  #L249e8c.  if v0 != 0 then goto L249ea4;
  #L249e90.  v0:= "Upgrade" @kind object;
  #L249e94.  call temp:= `equalsIgnoreCase`(v0, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249e9a.  v0:= temp;
  #L249e9c.  if v0 != 0 then goto L249ea4;
  #L249ea0.  v0:= 1I;
  #L249ea2.  return v0;
  #L249ea4.  v0:= 0I;
  #L249ea6.  goto L249ea2;
}
procedure `java.util.List` `parseChallenges`(`okhttp3.Headers` v13 @kind object @name `responseHeaders`, `java.lang.String` v14 @kind object @name `challengeHeader`) @signature `Lokhttp3/internal/http/OkHeaders;.parseChallenges:(Lokhttp3/Headers;Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L249eb8.  v9:= new `java.util.ArrayList`;
  #L249ebc.  call `<init>`(v9) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L249ec2.  v6:= 0I;
  #L249ec4.  call temp:= `size`(v13) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L249eca.  v11:= temp;
  #L249ecc.  if v6 >= v11 then goto L249f98;
  #L249ed0.  call temp:= `name`(v13, v6) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L249ed6.  v1:= temp @kind object;
  #L249ed8.  call temp:= `equalsIgnoreCase`(v14, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L249ede.  v1:= temp;
  #L249ee0.  if v1 != 0 then goto L249eea;
  #L249ee4.  v6:= v6 + 1;
  #L249ee8.  goto L249ecc;
  #L249eea.  call temp:= `value`(v13, v6) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L249ef0.  v0:= temp @kind object;
  #L249ef2.  v2:= 0I;
  #L249ef4.  call temp:= `length`(v0) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L249efa.  v1:= temp;
  #L249efc.  if v2 >= v1 then goto L249ee4;
  #L249f00.  v12:= v2;
  #L249f02.  v1:= " " @kind object;
  #L249f06.  call temp:= `skipUntil`(v0, v2, v1) @signature `Lokhttp3/internal/http/HeaderParser;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L249f0c.  v2:= temp;
  #L249f0e.  call temp:= `substring`(v0, v12, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L249f14.  v1:= temp @kind object;
  #L249f16.  call temp:= `trim`(v1) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L249f1c.  v10:= temp @kind object;
  #L249f1e.  call temp:= `skipWhitespace`(v0, v2) @signature `Lokhttp3/internal/http/HeaderParser;.skipWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L249f24.  v2:= temp;
  #L249f26.  v1:= 1I;
  #L249f28.  v3:= "realm=\"" @kind object;
  #L249f2c.  v4:= 0I;
  #L249f2e.  v5:= "realm=\"" @kind object;
  #L249f32.  call temp:= `length`(v5) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L249f38.  v5:= temp;
  #L249f3a.  call temp:= `regionMatches`(v0, v1, v2, v3, v4, v5) @signature `Ljava/lang/String;.regionMatches:(ZILjava/lang/String;II)Z` @kind virtual;
  #L249f40.  v1:= temp;
  #L249f42.  if v1 == 0 then goto L249ee4;
  #L249f46.  v1:= "realm=\"" @kind object;
  #L249f4a.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L249f50.  v1:= temp;
  #L249f52.  v2:= v2 + v1 @kind int;
  #L249f54.  v8:= v2;
  #L249f56.  v1:= "\"" @kind object;
  #L249f5a.  call temp:= `skipUntil`(v0, v2, v1) @signature `Lokhttp3/internal/http/HeaderParser;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L249f60.  v2:= temp;
  #L249f62.  call temp:= `substring`(v0, v8, v2) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L249f68.  v7:= temp @kind object;
  #L249f6a.  v2:= v2 + 1;
  #L249f6e.  v1:= "," @kind object;
  #L249f72.  call temp:= `skipUntil`(v0, v2, v1) @signature `Lokhttp3/internal/http/HeaderParser;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @kind static;
  #L249f78.  v2:= temp;
  #L249f7a.  v2:= v2 + 1;
  #L249f7e.  call temp:= `skipWhitespace`(v0, v2) @signature `Lokhttp3/internal/http/HeaderParser;.skipWhitespace:(Ljava/lang/String;I)I` @kind static;
  #L249f84.  v2:= temp;
  #L249f86.  v1:= new `okhttp3.Challenge`;
  #L249f8a.  call `<init>`(v1, v10, v7) @signature `Lokhttp3/Challenge;.<init>:(Ljava/lang/String;Ljava/lang/String;)V` @kind direct;
  #L249f90.  call temp:= `add`(v9, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L249f96.  goto L249ef4;
  #L249f98.  return v9 @kind object;
}
procedure `long` `stringToLong`(`java.lang.String` v4 @kind object @name `s`) @signature `Lokhttp3/internal/http/OkHeaders;.stringToLong:(Ljava/lang/String;)J` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L249fac.  v2:= -1L;
  #L249fb0.  if v4 != 0 then goto L249fb6;
  #L249fb4.  return v2 @kind wide;
  #L249fb6.  call temp:= `parseLong`(v4) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L249fbc.  v2:= temp @kind wide;
  #L249fbe.  goto L249fb4;
  #L249fc0.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L249fc2.  goto L249fb4;
  catch `java.lang.NumberFormatException` @[L249fb6..L249fbc] goto L249fc0;
}
procedure `java.util.Set` `varyFields`(`okhttp3.Headers` v9 @kind object @name `responseHeaders`) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Headers;)Ljava/util/Set;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L249fe4.  call temp:= `emptySet`() @signature `Ljava/util/Collections;.emptySet:()Ljava/util/Set;` @kind static;
  #L249fea.  v1:= temp @kind object;
  #L249fec.  v0:= 0I;
  #L249fee.  call temp:= `size`(v9) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L249ff4.  v2:= temp;
  #L249ff6.  if v0 >= v2 then goto L24a066;
  #L249ffa.  v5:= "Vary" @kind object;
  #L249ffe.  call temp:= `name`(v9, v0) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L24a004.  v6:= temp @kind object;
  #L24a006.  call temp:= `equalsIgnoreCase`(v5, v6) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L24a00c.  v5:= temp;
  #L24a00e.  if v5 != 0 then goto L24a018;
  #L24a012.  v0:= v0 + 1;
  #L24a016.  goto L249ff6;
  #L24a018.  call temp:= `value`(v9, v0) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L24a01e.  v3:= temp @kind object;
  #L24a020.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L24a026.  v5:= temp;
  #L24a028.  if v5 == 0 then goto L24a03a;
  #L24a02c.  v1:= new `java.util.TreeSet`;
  #L24a030.  v5:= `@@java.lang.String.CASE_INSENSITIVE_ORDER` @type ^`java.util.Comparator` @kind object;
  #L24a034.  call `<init>`(v1, v5) @signature `Ljava/util/TreeSet;.<init>:(Ljava/util/Comparator;)V` @kind direct;
  #L24a03a.  v5:= "," @kind object;
  #L24a03e.  call temp:= `split`(v3, v5) @signature `Ljava/lang/String;.split:(Ljava/lang/String;)[Ljava/lang/String;` @kind virtual;
  #L24a044.  v6:= temp @kind object;
  #L24a046.  v7:= length @variable v6;
  #L24a048.  v5:= 0I;
  #L24a04a.  if v5 >= v7 then goto L24a012;
  #L24a04e.  v4:= v6[v5] @kind object;
  #L24a052.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L24a058.  v8:= temp @kind object;
  #L24a05a.  call temp:= `add`(v1, v8) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24a060.  v5:= v5 + 1;
  #L24a064.  goto L24a04a;
  #L24a066.  return v1 @kind object;
}
procedure `java.util.Set` `varyFields`(`okhttp3.Response` v1 @kind object @name `response`) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Response;)Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L24a078.  call temp:= `headers`(v1) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L24a07e.  v0:= temp @kind object;
  #L24a080.  call temp:= `varyFields`(v0) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Headers;)Ljava/util/Set;` @kind static;
  #L24a086.  v0:= temp @kind object;
  #L24a088.  return v0 @kind object;
}
procedure `okhttp3.Headers` `varyHeaders`(`okhttp3.Headers` v6 @kind object @name `requestHeaders`, `okhttp3.Headers` v7 @kind object @name `responseHeaders`) @signature `Lokhttp3/internal/http/OkHeaders;.varyHeaders:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24a09c.  call temp:= `varyFields`(v7) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Headers;)Ljava/util/Set;` @kind static;
  #L24a0a2.  v4:= temp @kind object;
  #L24a0a4.  call temp:= `isEmpty`(v4) @signature `Ljava/util/Set;.isEmpty:()Z` @kind interface;
  #L24a0aa.  v5:= temp;
  #L24a0ac.  if v5 == 0 then goto L24a0c4;
  #L24a0b0.  v5:= new `okhttp3.Headers$Builder`;
  #L24a0b4.  call `<init>`(v5) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L24a0ba.  call temp:= `build`(v5) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L24a0c0.  v5:= temp @kind object;
  #L24a0c2.  return v5 @kind object;
  #L24a0c4.  v2:= new `okhttp3.Headers$Builder`;
  #L24a0c8.  call `<init>`(v2) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L24a0ce.  v1:= 0I;
  #L24a0d0.  call temp:= `size`(v6) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L24a0d6.  v3:= temp;
  #L24a0d8.  if v1 >= v3 then goto L24a104;
  #L24a0dc.  call temp:= `name`(v6, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L24a0e2.  v0:= temp @kind object;
  #L24a0e4.  call temp:= `contains`(v4, v0) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L24a0ea.  v5:= temp;
  #L24a0ec.  if v5 == 0 then goto L24a0fe;
  #L24a0f0.  call temp:= `value`(v6, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L24a0f6.  v5:= temp @kind object;
  #L24a0f8.  call temp:= `add`(v2, v0, v5) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L24a0fe.  v1:= v1 + 1;
  #L24a102.  goto L24a0d8;
  #L24a104.  call temp:= `build`(v2) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L24a10a.  v5:= temp @kind object;
  #L24a10c.  goto L24a0c2;
}
procedure `okhttp3.Headers` `varyHeaders`(`okhttp3.Response` v3 @kind object @name `response`) @signature `Lokhttp3/internal/http/OkHeaders;.varyHeaders:(Lokhttp3/Response;)Lokhttp3/Headers;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L24a120.  call temp:= `networkResponse`(v3) @signature `Lokhttp3/Response;.networkResponse:()Lokhttp3/Response;` @kind virtual;
  #L24a126.  v2:= temp @kind object;
  #L24a128.  call temp:= `request`(v2) @signature `Lokhttp3/Response;.request:()Lokhttp3/Request;` @kind virtual;
  #L24a12e.  v2:= temp @kind object;
  #L24a130.  call temp:= `headers`(v2) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L24a136.  v0:= temp @kind object;
  #L24a138.  call temp:= `headers`(v3) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L24a13e.  v1:= temp @kind object;
  #L24a140.  call temp:= `varyHeaders`(v0, v1) @signature `Lokhttp3/internal/http/OkHeaders;.varyHeaders:(Lokhttp3/Headers;Lokhttp3/Headers;)Lokhttp3/Headers;` @kind static;
  #L24a146.  v2:= temp @kind object;
  #L24a148.  return v2 @kind object;
}
procedure `boolean` `varyMatches`(`okhttp3.Response` v4 @kind object @name `cachedResponse`, `okhttp3.Headers` v5 @kind object @name `cachedRequest`, `okhttp3.Request` v6 @kind object @name `newRequest`) @signature `Lokhttp3/internal/http/OkHeaders;.varyMatches:(Lokhttp3/Response;Lokhttp3/Headers;Lokhttp3/Request;)Z` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24a15c.  call temp:= `varyFields`(v4) @signature `Lokhttp3/internal/http/OkHeaders;.varyFields:(Lokhttp3/Response;)Ljava/util/Set;` @kind static;
  #L24a162.  v1:= temp @kind object;
  #L24a164.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L24a16a.  v1:= temp @kind object;
  #L24a16c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L24a172.  v2:= temp;
  #L24a174.  if v2 == 0 then goto L24a1a4;
  #L24a178.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L24a17e.  v0:= temp @kind object;
  #L24a180.  v0:= (`java.lang.String`) v0 @kind object;
  #L24a184.  call temp:= `values`(v5, v0) @signature `Lokhttp3/Headers;.values:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L24a18a.  v2:= temp @kind object;
  #L24a18c.  call temp:= `headers`(v6, v0) @signature `Lokhttp3/Request;.headers:(Ljava/lang/String;)Ljava/util/List;` @kind virtual;
  #L24a192.  v3:= temp @kind object;
  #L24a194.  call temp:= `equal`(v2, v3) @signature `Lokhttp3/internal/Util;.equal:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L24a19a.  v2:= temp;
  #L24a19c.  if v2 != 0 then goto L24a16c;
  #L24a1a0.  v1:= 0I;
  #L24a1a2.  return v1;
  #L24a1a4.  v1:= 1I;
  #L24a1a6.  goto L24a1a2;
}
