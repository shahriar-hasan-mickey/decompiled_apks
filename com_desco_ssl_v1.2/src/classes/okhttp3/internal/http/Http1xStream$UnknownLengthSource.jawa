record `okhttp3.internal.http.Http1xStream$UnknownLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http.Http1xStream$AbstractSource` @kind class {
  `boolean` `okhttp3.internal.http.Http1xStream$UnknownLengthSource.inputExhausted` @AccessFlag PRIVATE;
  `okhttp3.internal.http.Http1xStream` `okhttp3.internal.http.Http1xStream$UnknownLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$UnknownLengthSource` v1 @kind this, `okhttp3.internal.http.Http1xStream` v2 @kind object) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L351578.  v1.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` := v2 @kind object;
  #L35157c.  v0:= 0I;
  #L35157e.  call `<init>`(v1, v2, v0) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.<init>:(Lokhttp3/internal/http/Http1xStream;Lokhttp3/internal/http/Http1xStream$1;)V` @kind direct;
  #L351584.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$UnknownLengthSource` v0 @kind this, `okhttp3.internal.http.Http1xStream` v1 @kind object @name `x0`, `okhttp3.internal.http.Http1xStream$1` v2 @kind object @name `x1`) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.<init>:(Lokhttp3/internal/http/Http1xStream;Lokhttp3/internal/http/Http1xStream$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L351598.  call `<init>`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.<init>:(Lokhttp3/internal/http/Http1xStream;)V` @kind direct;
  #L35159e.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http.Http1xStream$UnknownLengthSource` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3515b0.  v0:= v1.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L3515b4.  if v0 == 0 then goto L3515ba;
  #L3515b8.  return @kind void;
  #L3515ba.  v0:= v1.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L3515be.  if v0 != 0 then goto L3515ca;
  #L3515c2.  v0:= 0I;
  #L3515c4.  call `endOfInput`(v1, v0) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L3515ca.  v0:= 1I;
  #L3515cc.  v1.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L3515d0.  goto L3515b8;
}
procedure `long` `read`(`okhttp3.internal.http.Http1xStream$UnknownLengthSource` v8 @kind this, `okio.Buffer` v9 @kind object @name `sink`, `long` v10 @name `byteCount`) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3515e4.  v6:= 1I;
  #L3515e6.  v2:= -1L;
  #L3515ea.  v4:= 0L;
  #L3515ee.  v4:= lcmp(v10, v4);
  #L3515f2.  if v4 >= 0 then goto L351628;
  #L3515f6.  v2:= new `java.lang.IllegalArgumentException`;
  #L3515fa.  v3:= new `java.lang.StringBuilder`;
  #L3515fe.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L351604.  v4:= "byteCount < 0: " @kind object;
  #L351608.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L35160e.  v3:= temp @kind object;
  #L351610.  call temp:= `append`(v3, v10) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L351616.  v3:= temp @kind object;
  #L351618.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L35161e.  v3:= temp @kind object;
  #L351620.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L351626.  throw v2;
  #L351628.  v4:= v8.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.closed` @type ^`boolean` @kind boolean;
  #L35162c.  if v4 == 0 then goto L351640;
  #L351630.  v2:= new `java.lang.IllegalStateException`;
  #L351634.  v3:= "closed" @kind object;
  #L351638.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35163e.  throw v2;
  #L351640.  v4:= v8.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.inputExhausted` @type ^`boolean` @kind boolean;
  #L351644.  if v4 == 0 then goto L35164c;
  #L351648.  v0:= v2 @kind wide;
  #L35164a.  return v0 @kind wide;
  #L35164c.  v4:= v8.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L351650.  call temp:= `access$600`(v4) @signature `Lokhttp3/internal/http/Http1xStream;.access$600:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSource;` @kind static;
  #L351656.  v4:= temp @kind object;
  #L351658.  call temp:= `read`(v4, v9, v10) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L35165e.  v0:= temp @kind wide;
  #L351660.  v4:= lcmp(v0, v2);
  #L351664.  if v4 != 0 then goto L35164a;
  #L351668.  v8.`okhttp3.internal.http.Http1xStream$UnknownLengthSource.inputExhausted` @type ^`boolean` := v6 @kind boolean;
  #L35166c.  call `endOfInput`(v8, v6) @signature `Lokhttp3/internal/http/Http1xStream$UnknownLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L351672.  v0:= v2 @kind wide;
  #L351674.  goto L35164a;
}
