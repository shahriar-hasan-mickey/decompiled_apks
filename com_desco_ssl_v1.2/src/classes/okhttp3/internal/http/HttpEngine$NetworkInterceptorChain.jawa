record `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain` @kind class @AccessFlag  extends `okhttp3.Interceptor$Chain` @kind interface {
  `int` `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.calls` @AccessFlag PRIVATE;
  `okhttp3.Connection` `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.connection` @AccessFlag PRIVATE_FINAL;
  `int` `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @AccessFlag PRIVATE_FINAL;
  `okhttp3.Request` `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.request` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http.HttpEngine` `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain` v0 @kind this, `okhttp3.internal.http.HttpEngine` v1 @kind object @name `this$0`, `int` v2 @name `index`, `okhttp3.Request` v3 @kind object @name `request`, `okhttp3.Connection` v4 @kind object @name `connection`) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.<init>:(Lokhttp3/internal/http/HttpEngine;ILokhttp3/Request;Lokhttp3/Connection;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L30efb8.  v0.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` := v1 @kind object;
  #L30efbc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30efc2.  v0.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int` := v2;
  #L30efc6.  v0.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.request` @type ^`okhttp3.Request` := v3 @kind object;
  #L30efca.  v0.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.connection` @type ^`okhttp3.Connection` := v4 @kind object;
  #L30efce.  return @kind void;
}
procedure `okhttp3.Connection` `connection`(`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.connection:()Lokhttp3/Connection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30efe0.  v0:= v1.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.connection` @type ^`okhttp3.Connection` @kind object;
  #L30efe4.  return v0 @kind object;
}
procedure `okhttp3.Response` `proceed`(`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain` v14 @kind this, `okhttp3.Request` v15 @kind object @name `request`) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L30eff8.  v12:= 1I;
  #L30effa.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.calls` @type ^`int`;
  #L30effe.  v9:= v9 + 1;
  #L30f002.  v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.calls` @type ^`int` := v9;
  #L30f006.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int`;
  #L30f00a.  if v9 <= 0 then goto L30f11e;
  #L30f00e.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f012.  v9:= v9.`okhttp3.internal.http.HttpEngine.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30f016.  call temp:= `networkInterceptors`(v9) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @kind virtual;
  #L30f01c.  v9:= temp @kind object;
  #L30f01e.  v10:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int`;
  #L30f022.  v10:= v10 + -1;
  #L30f026.  call temp:= `get`(v9, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30f02c.  v2:= temp @kind object;
  #L30f02e.  v2:= (`okhttp3.Interceptor`) v2 @kind object;
  #L30f032.  call temp:= `connection`(v14) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.connection:()Lokhttp3/Connection;` @kind virtual;
  #L30f038.  v9:= temp @kind object;
  #L30f03a.  call temp:= `route`(v9) @signature `Lokhttp3/Connection;.route:()Lokhttp3/Route;` @kind interface;
  #L30f040.  v9:= temp @kind object;
  #L30f042.  call temp:= `address`(v9) @signature `Lokhttp3/Route;.address:()Lokhttp3/Address;` @kind virtual;
  #L30f048.  v0:= temp @kind object;
  #L30f04a.  call temp:= `url`(v15) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30f050.  v9:= temp @kind object;
  #L30f052.  call temp:= `host`(v9) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L30f058.  v9:= temp @kind object;
  #L30f05a.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30f060.  v10:= temp @kind object;
  #L30f062.  call temp:= `host`(v10) @signature `Lokhttp3/HttpUrl;.host:()Ljava/lang/String;` @kind virtual;
  #L30f068.  v10:= temp @kind object;
  #L30f06a.  call temp:= `equals`(v9, v10) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30f070.  v9:= temp;
  #L30f072.  if v9 == 0 then goto L30f09a;
  #L30f076.  call temp:= `url`(v15) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30f07c.  v9:= temp @kind object;
  #L30f07e.  call temp:= `port`(v9) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L30f084.  v9:= temp;
  #L30f086.  call temp:= `url`(v0) @signature `Lokhttp3/Address;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30f08c.  v10:= temp @kind object;
  #L30f08e.  call temp:= `port`(v10) @signature `Lokhttp3/HttpUrl;.port:()I` @kind virtual;
  #L30f094.  v10:= temp;
  #L30f096.  if v9 == v10 then goto L30f0d8;
  #L30f09a.  v9:= new `java.lang.IllegalStateException`;
  #L30f09e.  v10:= new `java.lang.StringBuilder`;
  #L30f0a2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30f0a8.  v11:= "network interceptor " @kind object;
  #L30f0ac.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0b2.  v10:= temp @kind object;
  #L30f0b4.  call temp:= `append`(v10, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0ba.  v10:= temp @kind object;
  #L30f0bc.  v11:= " must retain the same host and port" @kind object;
  #L30f0c0.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0c6.  v10:= temp @kind object;
  #L30f0c8.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f0ce.  v10:= temp @kind object;
  #L30f0d0.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f0d6.  throw v9;
  #L30f0d8.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.calls` @type ^`int`;
  #L30f0dc.  if v9 <= v12 then goto L30f11e;
  #L30f0e0.  v9:= new `java.lang.IllegalStateException`;
  #L30f0e4.  v10:= new `java.lang.StringBuilder`;
  #L30f0e8.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30f0ee.  v11:= "network interceptor " @kind object;
  #L30f0f2.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f0f8.  v10:= temp @kind object;
  #L30f0fa.  call temp:= `append`(v10, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f100.  v10:= temp @kind object;
  #L30f102.  v11:= " must call proceed() exactly once" @kind object;
  #L30f106.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f10c.  v10:= temp @kind object;
  #L30f10e.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f114.  v10:= temp @kind object;
  #L30f116.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f11c.  throw v9;
  #L30f11e.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int`;
  #L30f122.  v10:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f126.  v10:= v10.`okhttp3.internal.http.HttpEngine.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30f12a.  call temp:= `networkInterceptors`(v10) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @kind virtual;
  #L30f130.  v10:= temp @kind object;
  #L30f132.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30f138.  v10:= temp;
  #L30f13a.  if v9 >= v10 then goto L30f208;
  #L30f13e.  v3:= new `okhttp3.internal.http.HttpEngine$NetworkInterceptorChain`;
  #L30f142.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f146.  v10:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int`;
  #L30f14a.  v10:= v10 + 1;
  #L30f14e.  v11:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.connection` @type ^`okhttp3.Connection` @kind object;
  #L30f152.  call `<init>`(v3, v9, v10, v15, v11) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.<init>:(Lokhttp3/internal/http/HttpEngine;ILokhttp3/Request;Lokhttp3/Connection;)V` @kind direct;
  #L30f158.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f15c.  v9:= v9.`okhttp3.internal.http.HttpEngine.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30f160.  call temp:= `networkInterceptors`(v9) @signature `Lokhttp3/OkHttpClient;.networkInterceptors:()Ljava/util/List;` @kind virtual;
  #L30f166.  v9:= temp @kind object;
  #L30f168.  v10:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.index` @type ^`int`;
  #L30f16c.  call temp:= `get`(v9, v10) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30f172.  v6:= temp @kind object;
  #L30f174.  v6:= (`okhttp3.Interceptor`) v6 @kind object;
  #L30f178.  call temp:= `intercept`(v6, v3) @signature `Lokhttp3/Interceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @kind interface;
  #L30f17e.  v5:= temp @kind object;
  #L30f180.  v9:= v3.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.calls` @type ^`int`;
  #L30f184.  if v9 == v12 then goto L30f1c6;
  #L30f188.  v9:= new `java.lang.IllegalStateException`;
  #L30f18c.  v10:= new `java.lang.StringBuilder`;
  #L30f190.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30f196.  v11:= "network interceptor " @kind object;
  #L30f19a.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1a0.  v10:= temp @kind object;
  #L30f1a2.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1a8.  v10:= temp @kind object;
  #L30f1aa.  v11:= " must call proceed() exactly once" @kind object;
  #L30f1ae.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1b4.  v10:= temp @kind object;
  #L30f1b6.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f1bc.  v10:= temp @kind object;
  #L30f1be.  call `<init>`(v9, v10) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f1c4.  throw v9;
  #L30f1c6.  if v5 != 0 then goto L30f318;
  #L30f1ca.  v9:= new `java.lang.NullPointerException`;
  #L30f1ce.  v10:= new `java.lang.StringBuilder`;
  #L30f1d2.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30f1d8.  v11:= "network interceptor " @kind object;
  #L30f1dc.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1e2.  v10:= temp @kind object;
  #L30f1e4.  call temp:= `append`(v10, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1ea.  v10:= temp @kind object;
  #L30f1ec.  v11:= " returned null" @kind object;
  #L30f1f0.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f1f6.  v10:= temp @kind object;
  #L30f1f8.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f1fe.  v10:= temp @kind object;
  #L30f200.  call `<init>`(v9, v10) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f206.  throw v9;
  #L30f208.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f20c.  call temp:= `access$000`(v9) @signature `Lokhttp3/internal/http/HttpEngine;.access$000:(Lokhttp3/internal/http/HttpEngine;)Lokhttp3/internal/http/HttpStream;` @kind static;
  #L30f212.  v9:= temp @kind object;
  #L30f214.  call `writeRequestHeaders`(v9, v15) @signature `Lokhttp3/internal/http/HttpStream;.writeRequestHeaders:(Lokhttp3/Request;)V` @kind interface;
  #L30f21a.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f21e.  call temp:= `access$102`(v9, v15) @signature `Lokhttp3/internal/http/HttpEngine;.access$102:(Lokhttp3/internal/http/HttpEngine;Lokhttp3/Request;)Lokhttp3/Request;` @kind static;
  #L30f224.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f228.  call temp:= `permitsRequestBody`(v9, v15) @signature `Lokhttp3/internal/http/HttpEngine;.permitsRequestBody:(Lokhttp3/Request;)Z` @kind virtual;
  #L30f22e.  v9:= temp;
  #L30f230.  if v9 == 0 then goto L30f280;
  #L30f234.  call temp:= `body`(v15) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30f23a.  v9:= temp @kind object;
  #L30f23c.  if v9 == 0 then goto L30f280;
  #L30f240.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f244.  call temp:= `access$000`(v9) @signature `Lokhttp3/internal/http/HttpEngine;.access$000:(Lokhttp3/internal/http/HttpEngine;)Lokhttp3/internal/http/HttpStream;` @kind static;
  #L30f24a.  v9:= temp @kind object;
  #L30f24c.  call temp:= `body`(v15) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30f252.  v10:= temp @kind object;
  #L30f254.  call temp:= `contentLength`(v10) @signature `Lokhttp3/RequestBody;.contentLength:()J` @kind virtual;
  #L30f25a.  v10:= temp @kind wide;
  #L30f25c.  call temp:= `createRequestBody`(v9, v15, v10) @signature `Lokhttp3/internal/http/HttpStream;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @kind interface;
  #L30f262.  v7:= temp @kind object;
  #L30f264.  call temp:= `buffer`(v7) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @kind static;
  #L30f26a.  v1:= temp @kind object;
  #L30f26c.  call temp:= `body`(v15) @signature `Lokhttp3/Request;.body:()Lokhttp3/RequestBody;` @kind virtual;
  #L30f272.  v9:= temp @kind object;
  #L30f274.  call `writeTo`(v9, v1) @signature `Lokhttp3/RequestBody;.writeTo:(Lokio/BufferedSink;)V` @kind virtual;
  #L30f27a.  call `close`(v1) @signature `Lokio/BufferedSink;.close:()V` @kind interface;
  #L30f280.  v9:= v14.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.this$0` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30f284.  call temp:= `access$200`(v9) @signature `Lokhttp3/internal/http/HttpEngine;.access$200:(Lokhttp3/internal/http/HttpEngine;)Lokhttp3/Response;` @kind static;
  #L30f28a.  v8:= temp @kind object;
  #L30f28c.  call temp:= `code`(v8) @signature `Lokhttp3/Response;.code:()I` @kind virtual;
  #L30f292.  v4:= temp;
  #L30f294.  v9:= 204I;
  #L30f298.  if v4 == v9 then goto L30f2a4;
  #L30f29c.  v9:= 205I;
  #L30f2a0.  if v4 != v9 then goto L30f316;
  #L30f2a4.  call temp:= `body`(v8) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30f2aa.  v9:= temp @kind object;
  #L30f2ac.  call temp:= `contentLength`(v9) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L30f2b2.  v10:= temp @kind wide;
  #L30f2b4.  v12:= 0L;
  #L30f2b8.  v9:= lcmp(v10, v12);
  #L30f2bc.  if v9 <= 0 then goto L30f316;
  #L30f2c0.  v9:= new `java.net.ProtocolException`;
  #L30f2c4.  v10:= new `java.lang.StringBuilder`;
  #L30f2c8.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30f2ce.  v11:= "HTTP " @kind object;
  #L30f2d2.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f2d8.  v10:= temp @kind object;
  #L30f2da.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f2e0.  v10:= temp @kind object;
  #L30f2e2.  v11:= " had non-zero Content-Length: " @kind object;
  #L30f2e6.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f2ec.  v10:= temp @kind object;
  #L30f2ee.  call temp:= `body`(v8) @signature `Lokhttp3/Response;.body:()Lokhttp3/ResponseBody;` @kind virtual;
  #L30f2f4.  v11:= temp @kind object;
  #L30f2f6.  call temp:= `contentLength`(v11) @signature `Lokhttp3/ResponseBody;.contentLength:()J` @kind virtual;
  #L30f2fc.  v12:= temp @kind wide;
  #L30f2fe.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30f304.  v10:= temp @kind object;
  #L30f306.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30f30c.  v10:= temp @kind object;
  #L30f30e.  call `<init>`(v9, v10) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30f314.  throw v9;
  #L30f316.  v5:= v8 @kind object;
  #L30f318.  return v5 @kind object;
}
procedure `okhttp3.Request` `request`(`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain` v1 @kind this) @signature `Lokhttp3/internal/http/HttpEngine$NetworkInterceptorChain;.request:()Lokhttp3/Request;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30f32c.  v0:= v1.`okhttp3.internal.http.HttpEngine$NetworkInterceptorChain.request` @type ^`okhttp3.Request` @kind object;
  #L30f330.  return v0 @kind object;
}
