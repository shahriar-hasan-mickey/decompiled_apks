record `okhttp3.internal.http.Http1xStream$FixedLengthSink` @kind class @AccessFlag FINAL extends `okio.Sink` @kind interface {
  `long` `okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @AccessFlag PRIVATE;
  `boolean` `okhttp3.internal.http.Http1xStream$FixedLengthSink.closed` @AccessFlag PRIVATE;
  `okhttp3.internal.http.Http1xStream` `okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @AccessFlag FINAL_SYNTHETIC;
  `okio.ForwardingTimeout` `okhttp3.internal.http.Http1xStream$FixedLengthSink.timeout` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v2 @kind this, `okhttp3.internal.http.Http1xStream` v3 @kind object, `long` v4 @name `bytesRemaining`) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.<init>:(Lokhttp3/internal/http/Http1xStream;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L30db1c.  v2.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` := v3 @kind object;
  #L30db20.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30db26.  v0:= new `okio.ForwardingTimeout`;
  #L30db2a.  v1:= v2.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30db2e.  call temp:= `access$300`(v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30db34.  v1:= temp @kind object;
  #L30db36.  call temp:= `timeout`(v1) @signature `Lokio/BufferedSink;.timeout:()Lokio/Timeout;` @kind interface;
  #L30db3c.  v1:= temp @kind object;
  #L30db3e.  call `<init>`(v0, v1) @signature `Lokio/ForwardingTimeout;.<init>:(Lokio/Timeout;)V` @kind direct;
  #L30db44.  v2.`okhttp3.internal.http.Http1xStream$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` := v0 @kind object;
  #L30db48.  v2.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` := v4 @kind wide;
  #L30db4c.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v0 @kind this, `okhttp3.internal.http.Http1xStream` v1 @kind object @name `x0`, `long` v2 @name `x1`, `okhttp3.internal.http.Http1xStream$1` v4 @kind object @name `x2`) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.<init>:(Lokhttp3/internal/http/Http1xStream;JLokhttp3/internal/http/Http1xStream$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L30db60.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.<init>:(Lokhttp3/internal/http/Http1xStream;J)V` @kind direct;
  #L30db66.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v4 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30db78.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L30db7c.  if v0 == 0 then goto L30db82;
  #L30db80.  return @kind void;
  #L30db82.  v0:= 1I;
  #L30db84.  v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.closed` @type ^`boolean` := v0 @kind boolean;
  #L30db88.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L30db8c.  v2:= 0L;
  #L30db90.  v0:= lcmp(v0, v2);
  #L30db94.  if v0 <= 0 then goto L30dba8;
  #L30db98.  v0:= new `java.net.ProtocolException`;
  #L30db9c.  v1:= "unexpected end of stream" @kind object;
  #L30dba0.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30dba6.  throw v0;
  #L30dba8.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dbac.  v1:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30dbb0.  call `access$400`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$400:(Lokhttp3/internal/http/Http1xStream;Lokio/ForwardingTimeout;)V` @kind static;
  #L30dbb6.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dbba.  v1:= 3I;
  #L30dbbc.  call temp:= `access$502`(v0, v1) @signature `Lokhttp3/internal/http/Http1xStream;.access$502:(Lokhttp3/internal/http/Http1xStream;I)I` @kind static;
  #L30dbc2.  goto L30db80;
}
procedure `void` `flush`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30dbd4.  v0:= v1.`okhttp3.internal.http.Http1xStream$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L30dbd8.  if v0 == 0 then goto L30dbde;
  #L30dbdc.  return @kind void;
  #L30dbde.  v0:= v1.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dbe2.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30dbe8.  v0:= temp @kind object;
  #L30dbea.  call `flush`(v0) @signature `Lokio/BufferedSink;.flush:()V` @kind interface;
  #L30dbf0.  goto L30dbdc;
}
procedure `okio.Timeout` `timeout`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v1 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30dc04.  v0:= v1.`okhttp3.internal.http.Http1xStream$FixedLengthSink.timeout` @type ^`okio.ForwardingTimeout` @kind object;
  #L30dc08.  return v0 @kind object;
}
procedure `void` `write`(`okhttp3.internal.http.Http1xStream$FixedLengthSink` v6 @kind this, `okio.Buffer` v7 @kind object @name `source`, `long` v8 @name `byteCount`) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L30dc1c.  v0:= v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.closed` @type ^`boolean` @kind boolean;
  #L30dc20.  if v0 == 0 then goto L30dc34;
  #L30dc24.  v0:= new `java.lang.IllegalStateException`;
  #L30dc28.  v1:= "closed" @kind object;
  #L30dc2c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30dc32.  throw v0;
  #L30dc34.  call temp:= `size`(v7) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L30dc3a.  v0:= temp @kind wide;
  #L30dc3c.  v2:= 0L;
  #L30dc40.  v4:= v8 @kind wide;
  #L30dc42.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokhttp3/internal/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L30dc48.  v0:= v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L30dc4c.  v0:= lcmp(v8, v0);
  #L30dc50.  if v0 <= 0 then goto L30dc9e;
  #L30dc54.  v0:= new `java.net.ProtocolException`;
  #L30dc58.  v1:= new `java.lang.StringBuilder`;
  #L30dc5c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30dc62.  v2:= "expected " @kind object;
  #L30dc66.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dc6c.  v1:= temp @kind object;
  #L30dc6e.  v2:= v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L30dc72.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dc78.  v1:= temp @kind object;
  #L30dc7a.  v2:= " bytes but received " @kind object;
  #L30dc7e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dc84.  v1:= temp @kind object;
  #L30dc86.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L30dc8c.  v1:= temp @kind object;
  #L30dc8e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30dc94.  v1:= temp @kind object;
  #L30dc96.  call `<init>`(v0, v1) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30dc9c.  throw v0;
  #L30dc9e.  v0:= v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L30dca2.  call temp:= `access$300`(v0) @signature `Lokhttp3/internal/http/Http1xStream;.access$300:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSink;` @kind static;
  #L30dca8.  v0:= temp @kind object;
  #L30dcaa.  call `write`(v0, v7, v8) @signature `Lokio/BufferedSink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L30dcb0.  v0:= v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` @kind wide;
  #L30dcb4.  v0:= v0 - v8 @kind long;
  #L30dcb6.  v6.`okhttp3.internal.http.Http1xStream$FixedLengthSink.bytesRemaining` @type ^`long` := v0 @kind wide;
  #L30dcba.  return @kind void;
}
