record `okhttp3.internal.http.Http2xStream` @kind class @AccessFlag PUBLIC_FINAL extends `okhttp3.internal.http.HttpStream` @kind interface {
  `okhttp3.internal.framed.FramedConnection` `okhttp3.internal.http.Http2xStream.framedConnection` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.http.HttpEngine` `okhttp3.internal.http.Http2xStream.httpEngine` @AccessFlag PRIVATE;
  `okhttp3.internal.framed.FramedStream` `okhttp3.internal.http.Http2xStream.stream` @AccessFlag PRIVATE;
  `okhttp3.internal.http.StreamAllocation` `okhttp3.internal.http.Http2xStream.streamAllocation` @AccessFlag PRIVATE_FINAL;
}
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.CONNECTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.ENCODING` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.HOST` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_REQUEST_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_RESPONSE_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_REQUEST_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.List` `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_RESPONSE_HEADERS` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.TE` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @AccessFlag PRIVATE_STATIC_FINAL;
global `okio.ByteString` `@@okhttp3.internal.http.Http2xStream.UPGRADE` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/http/Http2xStream;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30e454.  v7:= 4I;
  #L30e456.  v6:= 3I;
  #L30e458.  v5:= 2I;
  #L30e45a.  v4:= 1I;
  #L30e45c.  v3:= 0I;
  #L30e45e.  v0:= "connection" @kind object;
  #L30e462.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e468.  v0:= temp @kind object;
  #L30e46a.  `@@okhttp3.internal.http.Http2xStream.CONNECTION` @type ^`okio.ByteString` := v0 @kind object;
  #L30e46e.  v0:= "host" @kind object;
  #L30e472.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e478.  v0:= temp @kind object;
  #L30e47a.  `@@okhttp3.internal.http.Http2xStream.HOST` @type ^`okio.ByteString` := v0 @kind object;
  #L30e47e.  v0:= "keep-alive" @kind object;
  #L30e482.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e488.  v0:= temp @kind object;
  #L30e48a.  `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @type ^`okio.ByteString` := v0 @kind object;
  #L30e48e.  v0:= "proxy-connection" @kind object;
  #L30e492.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e498.  v0:= temp @kind object;
  #L30e49a.  `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @type ^`okio.ByteString` := v0 @kind object;
  #L30e49e.  v0:= "transfer-encoding" @kind object;
  #L30e4a2.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e4a8.  v0:= temp @kind object;
  #L30e4aa.  `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @type ^`okio.ByteString` := v0 @kind object;
  #L30e4ae.  v0:= "te" @kind object;
  #L30e4b2.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e4b8.  v0:= temp @kind object;
  #L30e4ba.  `@@okhttp3.internal.http.Http2xStream.TE` @type ^`okio.ByteString` := v0 @kind object;
  #L30e4be.  v0:= "encoding" @kind object;
  #L30e4c2.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e4c8.  v0:= temp @kind object;
  #L30e4ca.  `@@okhttp3.internal.http.Http2xStream.ENCODING` @type ^`okio.ByteString` := v0 @kind object;
  #L30e4ce.  v0:= "upgrade" @kind object;
  #L30e4d2.  call temp:= `encodeUtf8`(v0) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e4d8.  v0:= temp @kind object;
  #L30e4da.  `@@okhttp3.internal.http.Http2xStream.UPGRADE` @type ^`okio.ByteString` := v0 @kind object;
  #L30e4de.  v0:= 11I;
  #L30e4e2.  v0:= new `okio.ByteString`[v0];
  #L30e4e6.  v1:= `@@okhttp3.internal.http.Http2xStream.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e4ea.  v0[v3]:= v1 @kind object;
  #L30e4ee.  v1:= `@@okhttp3.internal.http.Http2xStream.HOST` @type ^`okio.ByteString` @kind object;
  #L30e4f2.  v0[v4]:= v1 @kind object;
  #L30e4f6.  v1:= `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L30e4fa.  v0[v5]:= v1 @kind object;
  #L30e4fe.  v1:= `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e502.  v0[v6]:= v1 @kind object;
  #L30e506.  v1:= `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e50a.  v0[v7]:= v1 @kind object;
  #L30e50e.  v1:= 5I;
  #L30e510.  v2:= `@@okhttp3.internal.framed.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L30e514.  v0[v1]:= v2 @kind object;
  #L30e518.  v1:= 6I;
  #L30e51a.  v2:= `@@okhttp3.internal.framed.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L30e51e.  v0[v1]:= v2 @kind object;
  #L30e522.  v1:= 7I;
  #L30e524.  v2:= `@@okhttp3.internal.framed.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L30e528.  v0[v1]:= v2 @kind object;
  #L30e52c.  v1:= 8I;
  #L30e530.  v2:= `@@okhttp3.internal.framed.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L30e534.  v0[v1]:= v2 @kind object;
  #L30e538.  v1:= 9I;
  #L30e53c.  v2:= `@@okhttp3.internal.framed.Header.TARGET_HOST` @type ^`okio.ByteString` @kind object;
  #L30e540.  v0[v1]:= v2 @kind object;
  #L30e544.  v1:= 10I;
  #L30e548.  v2:= `@@okhttp3.internal.framed.Header.VERSION` @type ^`okio.ByteString` @kind object;
  #L30e54c.  v0[v1]:= v2 @kind object;
  #L30e550.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L30e556.  v0:= temp @kind object;
  #L30e558.  `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L30e55c.  v0:= 5I;
  #L30e55e.  v0:= new `okio.ByteString`[v0];
  #L30e562.  v1:= `@@okhttp3.internal.http.Http2xStream.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e566.  v0[v3]:= v1 @kind object;
  #L30e56a.  v1:= `@@okhttp3.internal.http.Http2xStream.HOST` @type ^`okio.ByteString` @kind object;
  #L30e56e.  v0[v4]:= v1 @kind object;
  #L30e572.  v1:= `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L30e576.  v0[v5]:= v1 @kind object;
  #L30e57a.  v1:= `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e57e.  v0[v6]:= v1 @kind object;
  #L30e582.  v1:= `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e586.  v0[v7]:= v1 @kind object;
  #L30e58a.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L30e590.  v0:= temp @kind object;
  #L30e592.  `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L30e596.  v0:= 14I;
  #L30e59a.  v0:= new `okio.ByteString`[v0];
  #L30e59e.  v1:= `@@okhttp3.internal.http.Http2xStream.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e5a2.  v0[v3]:= v1 @kind object;
  #L30e5a6.  v1:= `@@okhttp3.internal.http.Http2xStream.HOST` @type ^`okio.ByteString` @kind object;
  #L30e5aa.  v0[v4]:= v1 @kind object;
  #L30e5ae.  v1:= `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L30e5b2.  v0[v5]:= v1 @kind object;
  #L30e5b6.  v1:= `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e5ba.  v0[v6]:= v1 @kind object;
  #L30e5be.  v1:= `@@okhttp3.internal.http.Http2xStream.TE` @type ^`okio.ByteString` @kind object;
  #L30e5c2.  v0[v7]:= v1 @kind object;
  #L30e5c6.  v1:= 5I;
  #L30e5c8.  v2:= `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e5cc.  v0[v1]:= v2 @kind object;
  #L30e5d0.  v1:= 6I;
  #L30e5d2.  v2:= `@@okhttp3.internal.http.Http2xStream.ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e5d6.  v0[v1]:= v2 @kind object;
  #L30e5da.  v1:= 7I;
  #L30e5dc.  v2:= `@@okhttp3.internal.http.Http2xStream.UPGRADE` @type ^`okio.ByteString` @kind object;
  #L30e5e0.  v0[v1]:= v2 @kind object;
  #L30e5e4.  v1:= 8I;
  #L30e5e8.  v2:= `@@okhttp3.internal.framed.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L30e5ec.  v0[v1]:= v2 @kind object;
  #L30e5f0.  v1:= 9I;
  #L30e5f4.  v2:= `@@okhttp3.internal.framed.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L30e5f8.  v0[v1]:= v2 @kind object;
  #L30e5fc.  v1:= 10I;
  #L30e600.  v2:= `@@okhttp3.internal.framed.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L30e604.  v0[v1]:= v2 @kind object;
  #L30e608.  v1:= 11I;
  #L30e60c.  v2:= `@@okhttp3.internal.framed.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L30e610.  v0[v1]:= v2 @kind object;
  #L30e614.  v1:= 12I;
  #L30e618.  v2:= `@@okhttp3.internal.framed.Header.TARGET_HOST` @type ^`okio.ByteString` @kind object;
  #L30e61c.  v0[v1]:= v2 @kind object;
  #L30e620.  v1:= 13I;
  #L30e624.  v2:= `@@okhttp3.internal.framed.Header.VERSION` @type ^`okio.ByteString` @kind object;
  #L30e628.  v0[v1]:= v2 @kind object;
  #L30e62c.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L30e632.  v0:= temp @kind object;
  #L30e634.  `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L30e638.  v0:= 8I;
  #L30e63c.  v0:= new `okio.ByteString`[v0];
  #L30e640.  v1:= `@@okhttp3.internal.http.Http2xStream.CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e644.  v0[v3]:= v1 @kind object;
  #L30e648.  v1:= `@@okhttp3.internal.http.Http2xStream.HOST` @type ^`okio.ByteString` @kind object;
  #L30e64c.  v0[v4]:= v1 @kind object;
  #L30e650.  v1:= `@@okhttp3.internal.http.Http2xStream.KEEP_ALIVE` @type ^`okio.ByteString` @kind object;
  #L30e654.  v0[v5]:= v1 @kind object;
  #L30e658.  v1:= `@@okhttp3.internal.http.Http2xStream.PROXY_CONNECTION` @type ^`okio.ByteString` @kind object;
  #L30e65c.  v0[v6]:= v1 @kind object;
  #L30e660.  v1:= `@@okhttp3.internal.http.Http2xStream.TE` @type ^`okio.ByteString` @kind object;
  #L30e664.  v0[v7]:= v1 @kind object;
  #L30e668.  v1:= 5I;
  #L30e66a.  v2:= `@@okhttp3.internal.http.Http2xStream.TRANSFER_ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e66e.  v0[v1]:= v2 @kind object;
  #L30e672.  v1:= 6I;
  #L30e674.  v2:= `@@okhttp3.internal.http.Http2xStream.ENCODING` @type ^`okio.ByteString` @kind object;
  #L30e678.  v0[v1]:= v2 @kind object;
  #L30e67c.  v1:= 7I;
  #L30e67e.  v2:= `@@okhttp3.internal.http.Http2xStream.UPGRADE` @type ^`okio.ByteString` @kind object;
  #L30e682.  v0[v1]:= v2 @kind object;
  #L30e686.  call temp:= `immutableList`(v0) @signature `Lokhttp3/internal/Util;.immutableList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L30e68c.  v0:= temp @kind object;
  #L30e68e.  `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` := v0 @kind object;
  #L30e692.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http2xStream` v0 @kind this, `okhttp3.internal.http.StreamAllocation` v1 @kind object @name `streamAllocation`, `okhttp3.internal.framed.FramedConnection` v2 @kind object @name `framedConnection`) @signature `Lokhttp3/internal/http/Http2xStream;.<init>:(Lokhttp3/internal/http/StreamAllocation;Lokhttp3/internal/framed/FramedConnection;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L30e6a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L30e6aa.  v0.`okhttp3.internal.http.Http2xStream.streamAllocation` @type ^`okhttp3.internal.http.StreamAllocation` := v1 @kind object;
  #L30e6ae.  v0.`okhttp3.internal.http.Http2xStream.framedConnection` @type ^`okhttp3.internal.framed.FramedConnection` := v2 @kind object;
  #L30e6b2.  return @kind void;
}
procedure `okhttp3.internal.http.StreamAllocation` `access$000`(`okhttp3.internal.http.Http2xStream` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/http/Http2xStream;.access$000:(Lokhttp3/internal/http/Http2xStream;)Lokhttp3/internal/http/StreamAllocation;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L30e6c4.  v0:= v1.`okhttp3.internal.http.Http2xStream.streamAllocation` @type ^`okhttp3.internal.http.StreamAllocation` @kind object;
  #L30e6c8.  return v0 @kind object;
}
procedure `java.util.List` `http2HeadersList`(`okhttp3.Request` v9 @kind object @name `request`) @signature `Lokhttp3/internal/http/Http2xStream;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30e6dc.  call temp:= `headers`(v9) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L30e6e2.  v0:= temp @kind object;
  #L30e6e4.  v3:= new `java.util.ArrayList`;
  #L30e6e8.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L30e6ee.  v5:= temp;
  #L30e6f0.  v5:= v5 + 4;
  #L30e6f4.  call `<init>`(v3, v5) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L30e6fa.  v5:= new `okhttp3.internal.framed.Header`;
  #L30e6fe.  v6:= `@@okhttp3.internal.framed.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L30e702.  call temp:= `method`(v9) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L30e708.  v7:= temp @kind object;
  #L30e70a.  call `<init>`(v5, v6, v7) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30e710.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30e716.  v5:= new `okhttp3.internal.framed.Header`;
  #L30e71a.  v6:= `@@okhttp3.internal.framed.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L30e71e.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30e724.  v7:= temp @kind object;
  #L30e726.  call temp:= `requestPath`(v7) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L30e72c.  v7:= temp @kind object;
  #L30e72e.  call `<init>`(v5, v6, v7) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30e734.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30e73a.  v5:= new `okhttp3.internal.framed.Header`;
  #L30e73e.  v6:= `@@okhttp3.internal.framed.Header.TARGET_AUTHORITY` @type ^`okio.ByteString` @kind object;
  #L30e742.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30e748.  v7:= temp @kind object;
  #L30e74a.  v8:= 0I;
  #L30e74c.  call temp:= `hostHeader`(v7, v8) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L30e752.  v7:= temp @kind object;
  #L30e754.  call `<init>`(v5, v6, v7) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30e75a.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30e760.  v5:= new `okhttp3.internal.framed.Header`;
  #L30e764.  v6:= `@@okhttp3.internal.framed.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L30e768.  call temp:= `url`(v9) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30e76e.  v7:= temp @kind object;
  #L30e770.  call temp:= `scheme`(v7) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L30e776.  v7:= temp @kind object;
  #L30e778.  call `<init>`(v5, v6, v7) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30e77e.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30e784.  v1:= 0I;
  #L30e786.  call temp:= `size`(v0) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L30e78c.  v4:= temp;
  #L30e78e.  if v1 >= v4 then goto L30e7dc;
  #L30e792.  call temp:= `name`(v0, v1) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L30e798.  v5:= temp @kind object;
  #L30e79a.  v6:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L30e79e.  call temp:= `toLowerCase`(v5, v6) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L30e7a4.  v5:= temp @kind object;
  #L30e7a6.  call temp:= `encodeUtf8`(v5) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30e7ac.  v2:= temp @kind object;
  #L30e7ae.  v5:= `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` @kind object;
  #L30e7b2.  call temp:= `contains`(v5, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30e7b8.  v5:= temp;
  #L30e7ba.  if v5 != 0 then goto L30e7d6;
  #L30e7be.  v5:= new `okhttp3.internal.framed.Header`;
  #L30e7c2.  call temp:= `value`(v0, v1) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L30e7c8.  v6:= temp @kind object;
  #L30e7ca.  call `<init>`(v5, v2, v6) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30e7d0.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30e7d6.  v1:= v1 + 1;
  #L30e7da.  goto L30e78e;
  #L30e7dc.  return v3 @kind object;
}
procedure `java.lang.String` `joinOnNull`(`java.lang.String` v2 @kind object @name `first`, `java.lang.String` v3 @kind object @name `second`) @signature `Lokhttp3/internal/http/Http2xStream;.joinOnNull:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L30e7f0.  v0:= new `java.lang.StringBuilder`;
  #L30e7f4.  call `<init>`(v0, v2) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30e7fa.  v1:= 0I;
  #L30e7fc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e802.  v0:= temp @kind object;
  #L30e804.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e80a.  v0:= temp @kind object;
  #L30e80c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e812.  v0:= temp @kind object;
  #L30e814.  return v0 @kind object;
}
procedure `okhttp3.Response$Builder` `readHttp2HeadersList`(`java.util.List` v9 @kind object) @signature `Lokhttp3/internal/http/Http2xStream;.readHttp2HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L30e828.  v4:= 0I;
  #L30e82a.  v0:= new `okhttp3.Headers$Builder`;
  #L30e82e.  call `<init>`(v0) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L30e834.  v1:= 0I;
  #L30e836.  call temp:= `size`(v9) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30e83c.  v3:= temp;
  #L30e83e.  if v1 >= v3 then goto L30e8a2;
  #L30e842.  call temp:= `get`(v9, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30e848.  v7:= temp @kind object;
  #L30e84a.  v7:= (`okhttp3.internal.framed.Header`) v7 @kind object;
  #L30e84e.  v2:= v7.`okhttp3.internal.framed.Header.name` @type ^`okio.ByteString` @kind object;
  #L30e852.  call temp:= `get`(v9, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30e858.  v7:= temp @kind object;
  #L30e85a.  v7:= (`okhttp3.internal.framed.Header`) v7 @kind object;
  #L30e85e.  v7:= v7.`okhttp3.internal.framed.Header.value` @type ^`okio.ByteString` @kind object;
  #L30e862.  call temp:= `utf8`(v7) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30e868.  v6:= temp @kind object;
  #L30e86a.  v7:= `@@okhttp3.internal.framed.Header.RESPONSE_STATUS` @type ^`okio.ByteString` @kind object;
  #L30e86e.  call temp:= `equals`(v2, v7) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30e874.  v7:= temp;
  #L30e876.  if v7 == 0 then goto L30e882;
  #L30e87a.  v4:= v6 @kind object;
  #L30e87c.  v1:= v1 + 1;
  #L30e880.  goto L30e83e;
  #L30e882.  v7:= `@@okhttp3.internal.http.Http2xStream.HTTP_2_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` @kind object;
  #L30e886.  call temp:= `contains`(v7, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30e88c.  v7:= temp;
  #L30e88e.  if v7 != 0 then goto L30e87c;
  #L30e892.  call temp:= `utf8`(v2) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30e898.  v7:= temp @kind object;
  #L30e89a.  call temp:= `add`(v0, v7, v6) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L30e8a0.  goto L30e87c;
  #L30e8a2.  if v4 != 0 then goto L30e8b6;
  #L30e8a6.  v7:= new `java.net.ProtocolException`;
  #L30e8aa.  v8:= "Expected ':status' header not present" @kind object;
  #L30e8ae.  call `<init>`(v7, v8) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30e8b4.  throw v7;
  #L30e8b6.  v7:= new `java.lang.StringBuilder`;
  #L30e8ba.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30e8c0.  v8:= "HTTP/1.1 " @kind object;
  #L30e8c4.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e8ca.  v7:= temp @kind object;
  #L30e8cc.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30e8d2.  v7:= temp @kind object;
  #L30e8d4.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30e8da.  v7:= temp @kind object;
  #L30e8dc.  call temp:= `parse`(v7) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L30e8e2.  v5:= temp @kind object;
  #L30e8e4.  v7:= new `okhttp3.Response$Builder`;
  #L30e8e8.  call `<init>`(v7) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L30e8ee.  v8:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L30e8f2.  call temp:= `protocol`(v7, v8) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30e8f8.  v7:= temp @kind object;
  #L30e8fa.  v8:= v5.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L30e8fe.  call temp:= `code`(v7, v8) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L30e904.  v7:= temp @kind object;
  #L30e906.  v8:= v5.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L30e90a.  call temp:= `message`(v7, v8) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30e910.  v7:= temp @kind object;
  #L30e912.  call temp:= `build`(v0) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L30e918.  v8:= temp @kind object;
  #L30e91a.  call temp:= `headers`(v7, v8) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30e920.  v7:= temp @kind object;
  #L30e922.  return v7 @kind object;
}
procedure `okhttp3.Response$Builder` `readSpdy3HeadersList`(`java.util.List` v13 @kind object) @signature `Lokhttp3/internal/http/Http2xStream;.readSpdy3HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L30e934.  v6:= 0I;
  #L30e936.  v10:= "HTTP/1.1" @kind object;
  #L30e93a.  v1:= new `okhttp3.Headers$Builder`;
  #L30e93e.  call `<init>`(v1) @signature `Lokhttp3/Headers$Builder;.<init>:()V` @kind direct;
  #L30e944.  v2:= 0I;
  #L30e946.  call temp:= `size`(v13) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30e94c.  v4:= temp;
  #L30e94e.  if v2 >= v4 then goto L30e9fa;
  #L30e952.  call temp:= `get`(v13, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30e958.  v11:= temp @kind object;
  #L30e95a.  v11:= (`okhttp3.internal.framed.Header`) v11 @kind object;
  #L30e95e.  v3:= v11.`okhttp3.internal.framed.Header.name` @type ^`okio.ByteString` @kind object;
  #L30e962.  call temp:= `get`(v13, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30e968.  v11:= temp @kind object;
  #L30e96a.  v11:= (`okhttp3.internal.framed.Header`) v11 @kind object;
  #L30e96e.  v11:= v11.`okhttp3.internal.framed.Header.value` @type ^`okio.ByteString` @kind object;
  #L30e972.  call temp:= `utf8`(v11) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30e978.  v9:= temp @kind object;
  #L30e97a.  v5:= 0I;
  #L30e97c.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30e982.  v11:= temp;
  #L30e984.  if v5 >= v11 then goto L30e9f4;
  #L30e988.  v11:= 0I;
  #L30e98a.  call temp:= `indexOf`(v9, v11, v5) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L30e990.  v0:= temp;
  #L30e992.  v11:= -1I;
  #L30e994.  if v0 != v11 then goto L30e9a0;
  #L30e998.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L30e99e.  v0:= temp;
  #L30e9a0.  call temp:= `substring`(v9, v5, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L30e9a6.  v8:= temp @kind object;
  #L30e9a8.  v11:= `@@okhttp3.internal.framed.Header.RESPONSE_STATUS` @type ^`okio.ByteString` @kind object;
  #L30e9ac.  call temp:= `equals`(v3, v11) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30e9b2.  v11:= temp;
  #L30e9b4.  if v11 == 0 then goto L30e9c0;
  #L30e9b8.  v6:= v8 @kind object;
  #L30e9ba.  v5:= v0 + 1;
  #L30e9be.  goto L30e97c;
  #L30e9c0.  v11:= `@@okhttp3.internal.framed.Header.VERSION` @type ^`okio.ByteString` @kind object;
  #L30e9c4.  call temp:= `equals`(v3, v11) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30e9ca.  v11:= temp;
  #L30e9cc.  if v11 == 0 then goto L30e9d4;
  #L30e9d0.  v10:= v8 @kind object;
  #L30e9d2.  goto L30e9ba;
  #L30e9d4.  v11:= `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_RESPONSE_HEADERS` @type ^`java.util.List` @kind object;
  #L30e9d8.  call temp:= `contains`(v11, v3) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30e9de.  v11:= temp;
  #L30e9e0.  if v11 != 0 then goto L30e9ba;
  #L30e9e4.  call temp:= `utf8`(v3) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30e9ea.  v11:= temp @kind object;
  #L30e9ec.  call temp:= `add`(v1, v11, v8) @signature `Lokhttp3/Headers$Builder;.add:(Ljava/lang/String;Ljava/lang/String;)Lokhttp3/Headers$Builder;` @kind virtual;
  #L30e9f2.  goto L30e9ba;
  #L30e9f4.  v2:= v2 + 1;
  #L30e9f8.  goto L30e94e;
  #L30e9fa.  if v6 != 0 then goto L30ea0e;
  #L30e9fe.  v11:= new `java.net.ProtocolException`;
  #L30ea02.  v12:= "Expected ':status' header not present" @kind object;
  #L30ea06.  call `<init>`(v11, v12) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L30ea0c.  throw v11;
  #L30ea0e.  v11:= new `java.lang.StringBuilder`;
  #L30ea12.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L30ea18.  call temp:= `append`(v11, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ea1e.  v11:= temp @kind object;
  #L30ea20.  v12:= " " @kind object;
  #L30ea24.  call temp:= `append`(v11, v12) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ea2a.  v11:= temp @kind object;
  #L30ea2c.  call temp:= `append`(v11, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30ea32.  v11:= temp @kind object;
  #L30ea34.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30ea3a.  v11:= temp @kind object;
  #L30ea3c.  call temp:= `parse`(v11) @signature `Lokhttp3/internal/http/StatusLine;.parse:(Ljava/lang/String;)Lokhttp3/internal/http/StatusLine;` @kind static;
  #L30ea42.  v7:= temp @kind object;
  #L30ea44.  v11:= new `okhttp3.Response$Builder`;
  #L30ea48.  call `<init>`(v11) @signature `Lokhttp3/Response$Builder;.<init>:()V` @kind direct;
  #L30ea4e.  v12:= `@@okhttp3.Protocol.SPDY_3` @type ^`okhttp3.Protocol` @kind object;
  #L30ea52.  call temp:= `protocol`(v11, v12) @signature `Lokhttp3/Response$Builder;.protocol:(Lokhttp3/Protocol;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30ea58.  v11:= temp @kind object;
  #L30ea5a.  v12:= v7.`okhttp3.internal.http.StatusLine.code` @type ^`int`;
  #L30ea5e.  call temp:= `code`(v11, v12) @signature `Lokhttp3/Response$Builder;.code:(I)Lokhttp3/Response$Builder;` @kind virtual;
  #L30ea64.  v11:= temp @kind object;
  #L30ea66.  v12:= v7.`okhttp3.internal.http.StatusLine.message` @type ^`java.lang.String` @kind object;
  #L30ea6a.  call temp:= `message`(v11, v12) @signature `Lokhttp3/Response$Builder;.message:(Ljava/lang/String;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30ea70.  v11:= temp @kind object;
  #L30ea72.  call temp:= `build`(v1) @signature `Lokhttp3/Headers$Builder;.build:()Lokhttp3/Headers;` @kind virtual;
  #L30ea78.  v12:= temp @kind object;
  #L30ea7a.  call temp:= `headers`(v11, v12) @signature `Lokhttp3/Response$Builder;.headers:(Lokhttp3/Headers;)Lokhttp3/Response$Builder;` @kind virtual;
  #L30ea80.  v11:= temp @kind object;
  #L30ea82.  return v11 @kind object;
}
procedure `java.util.List` `spdy3HeadersList`(`okhttp3.Request` v13 @kind object @name `request`) @signature `Lokhttp3/internal/http/Http2xStream;.spdy3HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L30ea94.  call temp:= `headers`(v13) @signature `Lokhttp3/Request;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L30ea9a.  v1:= temp @kind object;
  #L30ea9c.  v6:= new `java.util.ArrayList`;
  #L30eaa0.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L30eaa6.  v9:= temp;
  #L30eaa8.  v9:= v9 + 5;
  #L30eaac.  call `<init>`(v6, v9) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L30eab2.  v9:= new `okhttp3.internal.framed.Header`;
  #L30eab6.  v10:= `@@okhttp3.internal.framed.Header.TARGET_METHOD` @type ^`okio.ByteString` @kind object;
  #L30eaba.  call temp:= `method`(v13) @signature `Lokhttp3/Request;.method:()Ljava/lang/String;` @kind virtual;
  #L30eac0.  v11:= temp @kind object;
  #L30eac2.  call `<init>`(v9, v10, v11) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30eac8.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30eace.  v9:= new `okhttp3.internal.framed.Header`;
  #L30ead2.  v10:= `@@okhttp3.internal.framed.Header.TARGET_PATH` @type ^`okio.ByteString` @kind object;
  #L30ead6.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30eadc.  v11:= temp @kind object;
  #L30eade.  call temp:= `requestPath`(v11) @signature `Lokhttp3/internal/http/RequestLine;.requestPath:(Lokhttp3/HttpUrl;)Ljava/lang/String;` @kind static;
  #L30eae4.  v11:= temp @kind object;
  #L30eae6.  call `<init>`(v9, v10, v11) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30eaec.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30eaf2.  v9:= new `okhttp3.internal.framed.Header`;
  #L30eaf6.  v10:= `@@okhttp3.internal.framed.Header.VERSION` @type ^`okio.ByteString` @kind object;
  #L30eafa.  v11:= "HTTP/1.1" @kind object;
  #L30eafe.  call `<init>`(v9, v10, v11) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30eb04.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30eb0a.  v9:= new `okhttp3.internal.framed.Header`;
  #L30eb0e.  v10:= `@@okhttp3.internal.framed.Header.TARGET_HOST` @type ^`okio.ByteString` @kind object;
  #L30eb12.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30eb18.  v11:= temp @kind object;
  #L30eb1a.  v12:= 0I;
  #L30eb1c.  call temp:= `hostHeader`(v11, v12) @signature `Lokhttp3/internal/Util;.hostHeader:(Lokhttp3/HttpUrl;Z)Ljava/lang/String;` @kind static;
  #L30eb22.  v11:= temp @kind object;
  #L30eb24.  call `<init>`(v9, v10, v11) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30eb2a.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30eb30.  v9:= new `okhttp3.internal.framed.Header`;
  #L30eb34.  v10:= `@@okhttp3.internal.framed.Header.TARGET_SCHEME` @type ^`okio.ByteString` @kind object;
  #L30eb38.  call temp:= `url`(v13) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L30eb3e.  v11:= temp @kind object;
  #L30eb40.  call temp:= `scheme`(v11) @signature `Lokhttp3/HttpUrl;.scheme:()Ljava/lang/String;` @kind virtual;
  #L30eb46.  v11:= temp @kind object;
  #L30eb48.  call `<init>`(v9, v10, v11) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30eb4e.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30eb54.  v5:= new `java.util.LinkedHashSet`;
  #L30eb58.  call `<init>`(v5) @signature `Ljava/util/LinkedHashSet;.<init>:()V` @kind direct;
  #L30eb5e.  v2:= 0I;
  #L30eb60.  call temp:= `size`(v1) @signature `Lokhttp3/Headers;.size:()I` @kind virtual;
  #L30eb66.  v7:= temp;
  #L30eb68.  if v2 >= v7 then goto L30ec26;
  #L30eb6c.  call temp:= `name`(v1, v2) @signature `Lokhttp3/Headers;.name:(I)Ljava/lang/String;` @kind virtual;
  #L30eb72.  v9:= temp @kind object;
  #L30eb74.  v10:= `@@java.util.Locale.US` @type ^`java.util.Locale` @kind object;
  #L30eb78.  call temp:= `toLowerCase`(v9, v10) @signature `Ljava/lang/String;.toLowerCase:(Ljava/util/Locale;)Ljava/lang/String;` @kind virtual;
  #L30eb7e.  v9:= temp @kind object;
  #L30eb80.  call temp:= `encodeUtf8`(v9) @signature `Lokio/ByteString;.encodeUtf8:(Ljava/lang/String;)Lokio/ByteString;` @kind static;
  #L30eb86.  v4:= temp @kind object;
  #L30eb88.  v9:= `@@okhttp3.internal.http.Http2xStream.SPDY_3_SKIPPED_REQUEST_HEADERS` @type ^`java.util.List` @kind object;
  #L30eb8c.  call temp:= `contains`(v9, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L30eb92.  v9:= temp;
  #L30eb94.  if v9 == 0 then goto L30eb9e;
  #L30eb98.  v2:= v2 + 1;
  #L30eb9c.  goto L30eb68;
  #L30eb9e.  call temp:= `value`(v1, v2) @signature `Lokhttp3/Headers;.value:(I)Ljava/lang/String;` @kind virtual;
  #L30eba4.  v8:= temp @kind object;
  #L30eba6.  call temp:= `add`(v5, v4) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30ebac.  v9:= temp;
  #L30ebae.  if v9 == 0 then goto L30ebc4;
  #L30ebb2.  v9:= new `okhttp3.internal.framed.Header`;
  #L30ebb6.  call `<init>`(v9, v4, v8) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30ebbc.  call temp:= `add`(v6, v9) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L30ebc2.  goto L30eb98;
  #L30ebc4.  v3:= 0I;
  #L30ebc6.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L30ebcc.  v9:= temp;
  #L30ebce.  if v3 >= v9 then goto L30eb98;
  #L30ebd2.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30ebd8.  v9:= temp @kind object;
  #L30ebda.  v9:= (`okhttp3.internal.framed.Header`) v9 @kind object;
  #L30ebde.  v9:= v9.`okhttp3.internal.framed.Header.name` @type ^`okio.ByteString` @kind object;
  #L30ebe2.  call temp:= `equals`(v9, v4) @signature `Lokio/ByteString;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L30ebe8.  v9:= temp;
  #L30ebea.  if v9 == 0 then goto L30ec20;
  #L30ebee.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L30ebf4.  v9:= temp @kind object;
  #L30ebf6.  v9:= (`okhttp3.internal.framed.Header`) v9 @kind object;
  #L30ebfa.  v9:= v9.`okhttp3.internal.framed.Header.value` @type ^`okio.ByteString` @kind object;
  #L30ebfe.  call temp:= `utf8`(v9) @signature `Lokio/ByteString;.utf8:()Ljava/lang/String;` @kind virtual;
  #L30ec04.  v9:= temp @kind object;
  #L30ec06.  call temp:= `joinOnNull`(v9, v8) @signature `Lokhttp3/internal/http/Http2xStream;.joinOnNull:(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;` @kind static;
  #L30ec0c.  v0:= temp @kind object;
  #L30ec0e.  v9:= new `okhttp3.internal.framed.Header`;
  #L30ec12.  call `<init>`(v9, v4, v0) @signature `Lokhttp3/internal/framed/Header;.<init>:(Lokio/ByteString;Ljava/lang/String;)V` @kind direct;
  #L30ec18.  call temp:= `set`(v6, v3, v9) @signature `Ljava/util/List;.set:(ILjava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L30ec1e.  goto L30eb98;
  #L30ec20.  v3:= v3 + 1;
  #L30ec24.  goto L30ebc6;
  #L30ec26.  return v6 @kind object;
}
procedure `void` `cancel`(`okhttp3.internal.http.Http2xStream` v2 @kind this) @signature `Lokhttp3/internal/http/Http2xStream;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30ec38.  v0:= v2.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ec3c.  if v0 == 0 then goto L30ec4e;
  #L30ec40.  v0:= v2.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ec44.  v1:= `@@okhttp3.internal.framed.ErrorCode.CANCEL` @type ^`okhttp3.internal.framed.ErrorCode` @kind object;
  #L30ec48.  call `closeLater`(v0, v1) @signature `Lokhttp3/internal/framed/FramedStream;.closeLater:(Lokhttp3/internal/framed/ErrorCode;)V` @kind virtual;
  #L30ec4e.  return @kind void;
}
procedure `okio.Sink` `createRequestBody`(`okhttp3.internal.http.Http2xStream` v1 @kind this, `okhttp3.Request` v2 @kind object @name `request`, `long` v3 @name `contentLength`) @signature `Lokhttp3/internal/http/Http2xStream;.createRequestBody:(Lokhttp3/Request;J)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30ec60.  v0:= v1.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ec64.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getSink:()Lokio/Sink;` @kind virtual;
  #L30ec6a.  v0:= temp @kind object;
  #L30ec6c.  return v0 @kind object;
}
procedure `void` `finishRequest`(`okhttp3.internal.http.Http2xStream` v1 @kind this) @signature `Lokhttp3/internal/http/Http2xStream;.finishRequest:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30ec80.  v0:= v1.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ec84.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getSink:()Lokio/Sink;` @kind virtual;
  #L30ec8a.  v0:= temp @kind object;
  #L30ec8c.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L30ec92.  return @kind void;
}
procedure `okhttp3.ResponseBody` `openResponseBody`(`okhttp3.internal.http.Http2xStream` v4 @kind this, `okhttp3.Response` v5 @kind object @name `response`) @signature `Lokhttp3/internal/http/Http2xStream;.openResponseBody:(Lokhttp3/Response;)Lokhttp3/ResponseBody;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L30eca4.  v0:= new `okhttp3.internal.http.Http2xStream$StreamFinishingSource`;
  #L30eca8.  v1:= v4.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ecac.  call temp:= `getSource`(v1) @signature `Lokhttp3/internal/framed/FramedStream;.getSource:()Lokio/Source;` @kind virtual;
  #L30ecb2.  v1:= temp @kind object;
  #L30ecb4.  call `<init>`(v0, v4, v1) @signature `Lokhttp3/internal/http/Http2xStream$StreamFinishingSource;.<init>:(Lokhttp3/internal/http/Http2xStream;Lokio/Source;)V` @kind direct;
  #L30ecba.  v1:= new `okhttp3.internal.http.RealResponseBody`;
  #L30ecbe.  call temp:= `headers`(v5) @signature `Lokhttp3/Response;.headers:()Lokhttp3/Headers;` @kind virtual;
  #L30ecc4.  v2:= temp @kind object;
  #L30ecc6.  call temp:= `buffer`(v0) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @kind static;
  #L30eccc.  v3:= temp @kind object;
  #L30ecce.  call `<init>`(v1, v2, v3) @signature `Lokhttp3/internal/http/RealResponseBody;.<init>:(Lokhttp3/Headers;Lokio/BufferedSource;)V` @kind direct;
  #L30ecd4.  return v1 @kind object;
}
procedure `okhttp3.Response$Builder` `readResponseHeaders`(`okhttp3.internal.http.Http2xStream` v2 @kind this) @signature `Lokhttp3/internal/http/Http2xStream;.readResponseHeaders:()Lokhttp3/Response$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L30ece8.  v0:= v2.`okhttp3.internal.http.Http2xStream.framedConnection` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30ecec.  call temp:= `getProtocol`(v0) @signature `Lokhttp3/internal/framed/FramedConnection;.getProtocol:()Lokhttp3/Protocol;` @kind virtual;
  #L30ecf2.  v0:= temp @kind object;
  #L30ecf4.  v1:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L30ecf8.  if v0 != v1 then goto L30ed12;
  #L30ecfc.  v0:= v2.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ed00.  call temp:= `getResponseHeaders`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getResponseHeaders:()Ljava/util/List;` @kind virtual;
  #L30ed06.  v0:= temp @kind object;
  #L30ed08.  call temp:= `readHttp2HeadersList`(v0) @signature `Lokhttp3/internal/http/Http2xStream;.readHttp2HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @kind static;
  #L30ed0e.  v0:= temp @kind object;
  #L30ed10.  return v0 @kind object;
  #L30ed12.  v0:= v2.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ed16.  call temp:= `getResponseHeaders`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getResponseHeaders:()Ljava/util/List;` @kind virtual;
  #L30ed1c.  v0:= temp @kind object;
  #L30ed1e.  call temp:= `readSpdy3HeadersList`(v0) @signature `Lokhttp3/internal/http/Http2xStream;.readSpdy3HeadersList:(Ljava/util/List;)Lokhttp3/Response$Builder;` @kind static;
  #L30ed24.  v0:= temp @kind object;
  #L30ed26.  goto L30ed10;
}
procedure `void` `setHttpEngine`(`okhttp3.internal.http.Http2xStream` v0 @kind this, `okhttp3.internal.http.HttpEngine` v1 @kind object @name `httpEngine`) @signature `Lokhttp3/internal/http/Http2xStream;.setHttpEngine:(Lokhttp3/internal/http/HttpEngine;)V` @AccessFlag PUBLIC {
    temp;

  #L30ed38.  v0.`okhttp3.internal.http.Http2xStream.httpEngine` @type ^`okhttp3.internal.http.HttpEngine` := v1 @kind object;
  #L30ed3c.  return @kind void;
}
procedure `void` `writeRequestBody`(`okhttp3.internal.http.Http2xStream` v1 @kind this, `okhttp3.internal.http.RetryableSink` v2 @kind object @name `requestBody`) @signature `Lokhttp3/internal/http/Http2xStream;.writeRequestBody:(Lokhttp3/internal/http/RetryableSink;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L30ed50.  v0:= v1.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ed54.  call temp:= `getSink`(v0) @signature `Lokhttp3/internal/framed/FramedStream;.getSink:()Lokio/Sink;` @kind virtual;
  #L30ed5a.  v0:= temp @kind object;
  #L30ed5c.  call `writeToSocket`(v2, v0) @signature `Lokhttp3/internal/http/RetryableSink;.writeToSocket:(Lokio/Sink;)V` @kind virtual;
  #L30ed62.  return @kind void;
}
procedure `void` `writeRequestHeaders`(`okhttp3.internal.http.Http2xStream` v7 @kind this, `okhttp3.Request` v8 @kind object @name `request`) @signature `Lokhttp3/internal/http/Http2xStream;.writeRequestHeaders:(Lokhttp3/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L30ed74.  v3:= v7.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30ed78.  if v3 == 0 then goto L30ed7e;
  #L30ed7c.  return @kind void;
  #L30ed7e.  v3:= v7.`okhttp3.internal.http.Http2xStream.httpEngine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30ed82.  call `writingRequestHeaders`(v3) @signature `Lokhttp3/internal/http/HttpEngine;.writingRequestHeaders:()V` @kind virtual;
  #L30ed88.  v3:= v7.`okhttp3.internal.http.Http2xStream.httpEngine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30ed8c.  call temp:= `permitsRequestBody`(v3, v8) @signature `Lokhttp3/internal/http/HttpEngine;.permitsRequestBody:(Lokhttp3/Request;)Z` @kind virtual;
  #L30ed92.  v1:= temp;
  #L30ed94.  v3:= v7.`okhttp3.internal.http.Http2xStream.framedConnection` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30ed98.  call temp:= `getProtocol`(v3) @signature `Lokhttp3/internal/framed/FramedConnection;.getProtocol:()Lokhttp3/Protocol;` @kind virtual;
  #L30ed9e.  v3:= temp @kind object;
  #L30eda0.  v4:= `@@okhttp3.Protocol.HTTP_2` @type ^`okhttp3.Protocol` @kind object;
  #L30eda4.  if v3 != v4 then goto L30ee14;
  #L30eda8.  call temp:= `http2HeadersList`(v8) @signature `Lokhttp3/internal/http/Http2xStream;.http2HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @kind static;
  #L30edae.  v2:= temp @kind object;
  #L30edb0.  v0:= 1I;
  #L30edb2.  v3:= v7.`okhttp3.internal.http.Http2xStream.framedConnection` @type ^`okhttp3.internal.framed.FramedConnection` @kind object;
  #L30edb6.  call temp:= `newStream`(v3, v2, v1, v0) @signature `Lokhttp3/internal/framed/FramedConnection;.newStream:(Ljava/util/List;ZZ)Lokhttp3/internal/framed/FramedStream;` @kind virtual;
  #L30edbc.  v3:= temp @kind object;
  #L30edbe.  v7.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` := v3 @kind object;
  #L30edc2.  v3:= v7.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30edc6.  call temp:= `readTimeout`(v3) @signature `Lokhttp3/internal/framed/FramedStream;.readTimeout:()Lokio/Timeout;` @kind virtual;
  #L30edcc.  v3:= temp @kind object;
  #L30edce.  v4:= v7.`okhttp3.internal.http.Http2xStream.httpEngine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30edd2.  v4:= v4.`okhttp3.internal.http.HttpEngine.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30edd6.  call temp:= `readTimeoutMillis`(v4) @signature `Lokhttp3/OkHttpClient;.readTimeoutMillis:()I` @kind virtual;
  #L30eddc.  v4:= temp;
  #L30edde.  v4:= (`long`) v4 @kind i2l;
  #L30ede0.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30ede4.  call temp:= `timeout`(v3, v4, v6) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L30edea.  v3:= v7.`okhttp3.internal.http.Http2xStream.stream` @type ^`okhttp3.internal.framed.FramedStream` @kind object;
  #L30edee.  call temp:= `writeTimeout`(v3) @signature `Lokhttp3/internal/framed/FramedStream;.writeTimeout:()Lokio/Timeout;` @kind virtual;
  #L30edf4.  v3:= temp @kind object;
  #L30edf6.  v4:= v7.`okhttp3.internal.http.Http2xStream.httpEngine` @type ^`okhttp3.internal.http.HttpEngine` @kind object;
  #L30edfa.  v4:= v4.`okhttp3.internal.http.HttpEngine.client` @type ^`okhttp3.OkHttpClient` @kind object;
  #L30edfe.  call temp:= `writeTimeoutMillis`(v4) @signature `Lokhttp3/OkHttpClient;.writeTimeoutMillis:()I` @kind virtual;
  #L30ee04.  v4:= temp;
  #L30ee06.  v4:= (`long`) v4 @kind i2l;
  #L30ee08.  v6:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L30ee0c.  call temp:= `timeout`(v3, v4, v6) @signature `Lokio/Timeout;.timeout:(JLjava/util/concurrent/TimeUnit;)Lokio/Timeout;` @kind virtual;
  #L30ee12.  goto L30ed7c;
  #L30ee14.  call temp:= `spdy3HeadersList`(v8) @signature `Lokhttp3/internal/http/Http2xStream;.spdy3HeadersList:(Lokhttp3/Request;)Ljava/util/List;` @kind static;
  #L30ee1a.  v2:= temp @kind object;
  #L30ee1c.  goto L30edb0;
}
