record `okhttp3.internal.http.Http1xStream$FixedLengthSource` @kind class @AccessFlag  extends `okhttp3.internal.http.Http1xStream$AbstractSource` @kind class {
  `long` `okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @AccessFlag PRIVATE;
  `okhttp3.internal.http.Http1xStream` `okhttp3.internal.http.Http1xStream$FixedLengthSource.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okhttp3.internal.http.Http1xStream$FixedLengthSource` v4 @kind this, `okhttp3.internal.http.Http1xStream` v5 @kind object, `long` v6 @name `length`) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.<init>:(Lokhttp3/internal/http/Http1xStream;J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L351410.  v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` := v5 @kind object;
  #L351414.  v0:= 0I;
  #L351416.  call `<init>`(v4, v5, v0) @signature `Lokhttp3/internal/http/Http1xStream$AbstractSource;.<init>:(Lokhttp3/internal/http/Http1xStream;Lokhttp3/internal/http/Http1xStream$1;)V` @kind direct;
  #L35141c.  v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` := v6 @kind wide;
  #L351420.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L351424.  v2:= 0L;
  #L351428.  v0:= lcmp(v0, v2);
  #L35142c.  if v0 != 0 then goto L351438;
  #L351430.  v0:= 1I;
  #L351432.  call `endOfInput`(v4, v0) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L351438.  return @kind void;
}
procedure `void` `close`(`okhttp3.internal.http.Http1xStream$FixedLengthSource` v4 @kind this) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35144c.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L351450.  if v0 == 0 then goto L351456;
  #L351454.  return @kind void;
  #L351456.  v0:= v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L35145a.  v2:= 0L;
  #L35145e.  v0:= lcmp(v0, v2);
  #L351462.  if v0 == 0 then goto L351482;
  #L351466.  v0:= 100I;
  #L35146a.  v1:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L35146e.  call temp:= `discard`(v4, v0, v1) @signature `Lokhttp3/internal/Util;.discard:(Lokio/Source;ILjava/util/concurrent/TimeUnit;)Z` @kind static;
  #L351474.  v0:= temp;
  #L351476.  if v0 != 0 then goto L351482;
  #L35147a.  v0:= 0I;
  #L35147c.  call `endOfInput`(v4, v0) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L351482.  v0:= 1I;
  #L351484.  v4.`okhttp3.internal.http.Http1xStream$FixedLengthSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L351488.  goto L351454;
}
procedure `long` `read`(`okhttp3.internal.http.Http1xStream$FixedLengthSource` v10 @kind this, `okio.Buffer` v11 @kind object @name `sink`, `long` v12 @name `byteCount`) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35149c.  v2:= -1L;
  #L3514a0.  v8:= 0L;
  #L3514a4.  v4:= lcmp(v12, v8);
  #L3514a8.  if v4 >= 0 then goto L3514de;
  #L3514ac.  v2:= new `java.lang.IllegalArgumentException`;
  #L3514b0.  v3:= new `java.lang.StringBuilder`;
  #L3514b4.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3514ba.  v4:= "byteCount < 0: " @kind object;
  #L3514be.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514c4.  v3:= temp @kind object;
  #L3514c6.  call temp:= `append`(v3, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3514cc.  v3:= temp @kind object;
  #L3514ce.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3514d4.  v3:= temp @kind object;
  #L3514d6.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3514dc.  throw v2;
  #L3514de.  v4:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.closed` @type ^`boolean` @kind boolean;
  #L3514e2.  if v4 == 0 then goto L3514f6;
  #L3514e6.  v2:= new `java.lang.IllegalStateException`;
  #L3514ea.  v3:= "closed" @kind object;
  #L3514ee.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3514f4.  throw v2;
  #L3514f6.  v4:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L3514fa.  v4:= lcmp(v4, v8);
  #L3514fe.  if v4 != 0 then goto L351506;
  #L351502.  v0:= v2 @kind wide;
  #L351504.  return v0 @kind wide;
  #L351506.  v4:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.this$0` @type ^`okhttp3.internal.http.Http1xStream` @kind object;
  #L35150a.  call temp:= `access$600`(v4) @signature `Lokhttp3/internal/http/Http1xStream;.access$600:(Lokhttp3/internal/http/Http1xStream;)Lokio/BufferedSource;` @kind static;
  #L351510.  v4:= temp @kind object;
  #L351512.  v6:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L351516.  call temp:= `min`(v6, v12) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L35151c.  v6:= temp @kind wide;
  #L35151e.  call temp:= `read`(v4, v11, v6) @signature `Lokio/BufferedSource;.read:(Lokio/Buffer;J)J` @kind interface;
  #L351524.  v0:= temp @kind wide;
  #L351526.  v2:= lcmp(v0, v2);
  #L35152a.  if v2 != 0 then goto L351546;
  #L35152e.  v2:= 0I;
  #L351530.  call `endOfInput`(v10, v2) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L351536.  v2:= new `java.net.ProtocolException`;
  #L35153a.  v3:= "unexpected end of stream" @kind object;
  #L35153e.  call `<init>`(v2, v3) @signature `Ljava/net/ProtocolException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L351544.  throw v2;
  #L351546.  v2:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L35154a.  v2:= v2 - v0 @kind long;
  #L35154c.  v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` := v2 @kind wide;
  #L351550.  v2:= v10.`okhttp3.internal.http.Http1xStream$FixedLengthSource.bytesRemaining` @type ^`long` @kind wide;
  #L351554.  v2:= lcmp(v2, v8);
  #L351558.  if v2 != 0 then goto L351504;
  #L35155c.  v2:= 1I;
  #L35155e.  call `endOfInput`(v10, v2) @signature `Lokhttp3/internal/http/Http1xStream$FixedLengthSource;.endOfInput:(Z)V` @kind virtual;
  #L351564.  goto L351504;
}
