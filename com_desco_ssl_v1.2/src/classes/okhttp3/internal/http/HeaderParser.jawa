record `okhttp3.internal.http.HeaderParser` @kind class @AccessFlag PUBLIC_FINAL {
}
procedure `void` `<init>`(`okhttp3.internal.http.HeaderParser` v0 @kind this) @signature `Lokhttp3/internal/http/HeaderParser;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24834c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L248352.  return @kind void;
}
procedure `int` `parseSeconds`(`java.lang.String` v6 @kind object @name `value`, `int` v7 @name `defaultValue`) @signature `Lokhttp3/internal/http/HeaderParser;.parseSeconds:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L248364.  call temp:= `parseLong`(v6) @signature `Ljava/lang/Long;.parseLong:(Ljava/lang/String;)J` @kind static;
  #L24836a.  v2:= temp @kind wide;
  #L24836c.  v4:= 2147483647L;
  #L248372.  v1:= lcmp(v2, v4);
  #L248376.  if v1 <= 0 then goto L248382;
  #L24837a.  v7:= 2147483647I;
  #L248380.  return v7;
  #L248382.  v4:= 0L;
  #L248386.  v1:= lcmp(v2, v4);
  #L24838a.  if v1 >= 0 then goto L248392;
  #L24838e.  v7:= 0I;
  #L248390.  goto L248380;
  #L248392.  v7:= (`int`) v2 @kind l2i;
  #L248394.  goto L248380;
  #L248396.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L248398.  goto L248380;
  catch `java.lang.NumberFormatException` @[L248364..L24836a] goto L248396;
}
procedure `int` `skipUntil`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`, `java.lang.String` v4 @kind object @name `characters`) @signature `Lokhttp3/internal/http/HeaderParser;.skipUntil:(Ljava/lang/String;ILjava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2483bc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2483c2.  v0:= temp;
  #L2483c4.  if v3 >= v0 then goto L2483de;
  #L2483c8.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L2483ce.  v0:= temp;
  #L2483d0.  call temp:= `indexOf`(v4, v0) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L2483d6.  v0:= temp;
  #L2483d8.  v1:= -1I;
  #L2483da.  if v0 == v1 then goto L2483e0;
  #L2483de.  return v3;
  #L2483e0.  v3:= v3 + 1;
  #L2483e4.  goto L2483bc;
}
procedure `int` `skipWhitespace`(`java.lang.String` v2 @kind object @name `input`, `int` v3 @name `pos`) @signature `Lokhttp3/internal/http/HeaderParser;.skipWhitespace:(Ljava/lang/String;I)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L2483f8.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2483fe.  v1:= temp;
  #L248400.  if v3 >= v1 then goto L24841c;
  #L248404.  call temp:= `charAt`(v2, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24840a.  v0:= temp;
  #L24840c.  v1:= 32I;
  #L248410.  if v0 == v1 then goto L24841e;
  #L248414.  v1:= 9I;
  #L248418.  if v0 == v1 then goto L24841e;
  #L24841c.  return v3;
  #L24841e.  v3:= v3 + 1;
  #L248422.  goto L2483f8;
}
