record `okhttp3.internal.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `boolean` `okhttp3.internal.DiskLruCache$Editor.done` @AccessFlag PRIVATE;
  `okhttp3.internal.DiskLruCache$Entry` `okhttp3.internal.DiskLruCache$Editor.entry` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.DiskLruCache` `okhttp3.internal.DiskLruCache$Editor.this$0` @AccessFlag FINAL_SYNTHETIC;
  `boolean`[] `okhttp3.internal.DiskLruCache$Editor.written` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okhttp3.internal.DiskLruCache$Editor` v1 @kind this, `okhttp3.internal.DiskLruCache` v2 @kind object @name `this$0`, `okhttp3.internal.DiskLruCache$Entry` v3 @kind object @name `entry`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Entry;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L240014.  v1.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` := v2 @kind object;
  #L240018.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24001e.  v1.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` := v3 @kind object;
  #L240022.  call temp:= `access$1200`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1200:(Lokhttp3/internal/DiskLruCache$Entry;)Z` @kind static;
  #L240028.  v0:= temp;
  #L24002a.  if v0 == 0 then goto L240036;
  #L24002e.  v0:= 0I;
  #L240030.  v1.`okhttp3.internal.DiskLruCache$Editor.written` @type ^`boolean`[] := v0 @kind object;
  #L240034.  return @kind void;
  #L240036.  call temp:= `access$2600`(v2) @signature `Lokhttp3/internal/DiskLruCache;.access$2600:(Lokhttp3/internal/DiskLruCache;)I` @kind static;
  #L24003c.  v0:= temp;
  #L24003e.  v0:= new `boolean`[v0];
  #L240042.  goto L240030;
}
procedure `void` `<init>`(`okhttp3.internal.DiskLruCache$Editor` v0 @kind this, `okhttp3.internal.DiskLruCache` v1 @kind object @name `x0`, `okhttp3.internal.DiskLruCache$Entry` v2 @kind object @name `x1`, `okhttp3.internal.DiskLruCache$1` v3 @kind object @name `x2`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Entry;Lokhttp3/internal/DiskLruCache$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L240054.  call `<init>`(v0, v1, v2) @signature `Lokhttp3/internal/DiskLruCache$Editor;.<init>:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Entry;)V` @kind direct;
  #L24005a.  return @kind void;
}
procedure `okhttp3.internal.DiskLruCache$Entry` `access$2100`(`okhttp3.internal.DiskLruCache$Editor` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.access$2100:(Lokhttp3/internal/DiskLruCache$Editor;)Lokhttp3/internal/DiskLruCache$Entry;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L24006c.  v0:= v1.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L240070.  return v0 @kind object;
}
procedure `boolean`[] `access$2200`(`okhttp3.internal.DiskLruCache$Editor` v1 @kind object @name `x0`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.access$2200:(Lokhttp3/internal/DiskLruCache$Editor;)[Z` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L240084.  v0:= v1.`okhttp3.internal.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L240088.  return v0 @kind object;
}
procedure `void` `abort`(`okhttp3.internal.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L24009c.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2400a0.  @monitorenter v1
  #L2400a2.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L2400a6.  if v0 == 0 then goto L2400bc;
  #L2400aa.  v0:= new `java.lang.IllegalStateException`;
  #L2400ae.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L2400b4.  throw v0;
  #L2400b6.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2400b8.  @monitorexit v1
  #L2400ba.  throw v0;
  #L2400bc.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L2400c0.  call temp:= `access$1300`(v0) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L2400c6.  v0:= temp @kind object;
  #L2400c8.  if v0 != v3 then goto L2400d8;
  #L2400cc.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2400d0.  v2:= 0I;
  #L2400d2.  call `access$2800`(v0, v3, v2) @signature `Lokhttp3/internal/DiskLruCache;.access$2800:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Editor;Z)V` @kind static;
  #L2400d8.  v0:= 1I;
  #L2400da.  v3.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L2400de.  @monitorexit v1
  #L2400e0.  return @kind void;
  catch `java.lang.Throwable` @[L2400a2..L2400ba] goto L2400b6;
  catch `java.lang.Throwable` @[L2400bc..L2400e0] goto L2400b6;
}
procedure `void` `abortUnlessCommitted`(`okhttp3.internal.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L240108.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L24010c.  @monitorenter v1
  #L24010e.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L240112.  if v0 != 0 then goto L240132;
  #L240116.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24011a.  call temp:= `access$1300`(v0) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L240120.  v0:= temp @kind object;
  #L240122.  if v0 != v3 then goto L240132;
  #L240126.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L24012a.  v2:= 0I;
  #L24012c.  call `access$2800`(v0, v3, v2) @signature `Lokhttp3/internal/DiskLruCache;.access$2800:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Editor;Z)V` @kind static;
  #L240132.  @monitorexit v1
  #L240134.  return @kind void;
  #L240136.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L240138.  @monitorexit v1
  #L24013a.  throw v0;
  #L24013c.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L24013e.  goto L240132;
  catch `java.lang.Throwable` @[L24010e..L240120] goto L240136;
  catch `java.io.IOException` @[L240126..L240132] goto L24013c;
  catch `java.lang.Throwable` @[L240126..L240132] goto L240136;
  catch `java.lang.Throwable` @[L240132..L24013a] goto L240136;
}
procedure `void` `commit`(`okhttp3.internal.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L240170.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L240174.  @monitorenter v1
  #L240176.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L24017a.  if v0 == 0 then goto L240190;
  #L24017e.  v0:= new `java.lang.IllegalStateException`;
  #L240182.  call `<init>`(v0) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L240188.  throw v0;
  #L24018a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L24018c.  @monitorexit v1
  #L24018e.  throw v0;
  #L240190.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L240194.  call temp:= `access$1300`(v0) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L24019a.  v0:= temp @kind object;
  #L24019c.  if v0 != v3 then goto L2401ac;
  #L2401a0.  v0:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2401a4.  v2:= 1I;
  #L2401a6.  call `access$2800`(v0, v3, v2) @signature `Lokhttp3/internal/DiskLruCache;.access$2800:(Lokhttp3/internal/DiskLruCache;Lokhttp3/internal/DiskLruCache$Editor;Z)V` @kind static;
  #L2401ac.  v0:= 1I;
  #L2401ae.  v3.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` := v0 @kind boolean;
  #L2401b2.  @monitorexit v1
  #L2401b4.  return @kind void;
  catch `java.lang.Throwable` @[L240176..L24018e] goto L24018a;
  catch `java.lang.Throwable` @[L240190..L2401b4] goto L24018a;
}
procedure `void` `detach`(`okhttp3.internal.DiskLruCache$Editor` v3 @kind this) @signature `Lokhttp3/internal/DiskLruCache$Editor;.detach:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L2401dc.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L2401e0.  call temp:= `access$1300`(v1) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L2401e6.  v1:= temp @kind object;
  #L2401e8.  if v1 != v3 then goto L240232;
  #L2401ec.  v0:= 0I;
  #L2401ee.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2401f2.  call temp:= `access$2600`(v1) @signature `Lokhttp3/internal/DiskLruCache;.access$2600:(Lokhttp3/internal/DiskLruCache;)I` @kind static;
  #L2401f8.  v1:= temp;
  #L2401fa.  if v0 >= v1 then goto L240226;
  #L2401fe.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L240202.  call temp:= `access$2700`(v1) @signature `Lokhttp3/internal/DiskLruCache;.access$2700:(Lokhttp3/internal/DiskLruCache;)Lokhttp3/internal/io/FileSystem;` @kind static;
  #L240208.  v1:= temp @kind object;
  #L24020a.  v2:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24020e.  call temp:= `access$1800`(v2) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1800:(Lokhttp3/internal/DiskLruCache$Entry;)[Ljava/io/File;` @kind static;
  #L240214.  v2:= temp @kind object;
  #L240216.  v2:= v2[v0] @kind object;
  #L24021a.  call `delete`(v1, v2) @signature `Lokhttp3/internal/io/FileSystem;.delete:(Ljava/io/File;)V` @kind interface;
  #L240220.  v0:= v0 + 1;
  #L240224.  goto L2401ee;
  #L240226.  v1:= v3.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24022a.  v2:= 0I;
  #L24022c.  call temp:= `access$1302`(v1, v2) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1302:(Lokhttp3/internal/DiskLruCache$Entry;Lokhttp3/internal/DiskLruCache$Editor;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L240232.  return @kind void;
  #L240234.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L240236.  goto L240220;
  catch `java.io.IOException` @[L2401fe..L240220] goto L240234;
}
procedure `okio.Sink` `newSink`(`okhttp3.internal.DiskLruCache$Editor` v6 @kind this, `int` v7 @name `index`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.newSink:(I)Lokio/Sink;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L240258.  v4:= v6.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L24025c.  @monitorenter v4
  #L24025e.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L240262.  if v3 == 0 then goto L240278;
  #L240266.  v3:= new `java.lang.IllegalStateException`;
  #L24026a.  call `<init>`(v3) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L240270.  throw v3;
  #L240272.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L240274.  @monitorexit v4
  #L240276.  throw v3;
  #L240278.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24027c.  call temp:= `access$1300`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L240282.  v3:= temp @kind object;
  #L240284.  if v3 == v6 then goto L240294;
  #L240288.  call temp:= `access$900`() @signature `Lokhttp3/internal/DiskLruCache;.access$900:()Lokio/Sink;` @kind static;
  #L24028e.  v3:= temp @kind object;
  #L240290.  @monitorexit v4
  #L240292.  return v3 @kind object;
  #L240294.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L240298.  call temp:= `access$1200`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1200:(Lokhttp3/internal/DiskLruCache$Entry;)Z` @kind static;
  #L24029e.  v3:= temp;
  #L2402a0.  if v3 != 0 then goto L2402ae;
  #L2402a4.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.written` @type ^`boolean`[] @kind object;
  #L2402a8.  v5:= 1I;
  #L2402aa.  v3[v7]:= v5 @kind boolean;
  #L2402ae.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L2402b2.  call temp:= `access$1800`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1800:(Lokhttp3/internal/DiskLruCache$Entry;)[Ljava/io/File;` @kind static;
  #L2402b8.  v3:= temp @kind object;
  #L2402ba.  v0:= v3[v7] @kind object;
  #L2402be.  v3:= v6.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L2402c2.  call temp:= `access$2700`(v3) @signature `Lokhttp3/internal/DiskLruCache;.access$2700:(Lokhttp3/internal/DiskLruCache;)Lokhttp3/internal/io/FileSystem;` @kind static;
  #L2402c8.  v3:= temp @kind object;
  #L2402ca.  call temp:= `sink`(v3, v0) @signature `Lokhttp3/internal/io/FileSystem;.sink:(Ljava/io/File;)Lokio/Sink;` @kind interface;
  #L2402d0.  v2:= temp @kind object;
  #L2402d2.  v3:= new `okhttp3.internal.DiskLruCache$Editor$1`;
  #L2402d6.  call `<init>`(v3, v6, v2) @signature `Lokhttp3/internal/DiskLruCache$Editor$1;.<init>:(Lokhttp3/internal/DiskLruCache$Editor;Lokio/Sink;)V` @kind direct;
  #L2402dc.  @monitorexit v4
  #L2402de.  goto L240292;
  #L2402e0.  v1:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L2402e2.  call temp:= `access$900`() @signature `Lokhttp3/internal/DiskLruCache;.access$900:()Lokio/Sink;` @kind static;
  #L2402e8.  v3:= temp @kind object;
  #L2402ea.  @monitorexit v4
  #L2402ec.  goto L240292;
  catch `java.lang.Throwable` @[L24025e..L240276] goto L240272;
  catch `java.lang.Throwable` @[L240278..L2402be] goto L240272;
  catch `java.io.FileNotFoundException` @[L2402be..L2402d0] goto L2402e0;
  catch `java.lang.Throwable` @[L2402be..L2402d0] goto L240272;
  catch `java.lang.Throwable` @[L2402d2..L2402ec] goto L240272;
}
procedure `okio.Source` `newSource`(`okhttp3.internal.DiskLruCache$Editor` v5 @kind this, `int` v6 @name `index`) @signature `Lokhttp3/internal/DiskLruCache$Editor;.newSource:(I)Lokio/Source;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L240328.  v1:= 0I;
  #L24032a.  v2:= v5.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L24032e.  @monitorenter v2
  #L240330.  v3:= v5.`okhttp3.internal.DiskLruCache$Editor.done` @type ^`boolean` @kind boolean;
  #L240334.  if v3 == 0 then goto L24034a;
  #L240338.  v1:= new `java.lang.IllegalStateException`;
  #L24033c.  call `<init>`(v1) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L240342.  throw v1;
  #L240344.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L240346.  @monitorexit v2
  #L240348.  throw v1;
  #L24034a.  v3:= v5.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24034e.  call temp:= `access$1200`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1200:(Lokhttp3/internal/DiskLruCache$Entry;)Z` @kind static;
  #L240354.  v3:= temp;
  #L240356.  if v3 == 0 then goto L24036a;
  #L24035a.  v3:= v5.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24035e.  call temp:= `access$1300`(v3) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1300:(Lokhttp3/internal/DiskLruCache$Entry;)Lokhttp3/internal/DiskLruCache$Editor;` @kind static;
  #L240364.  v3:= temp @kind object;
  #L240366.  if v3 == v5 then goto L24036e;
  #L24036a.  @monitorexit v2
  #L24036c.  return v1 @kind object;
  #L24036e.  v3:= v5.`okhttp3.internal.DiskLruCache$Editor.this$0` @type ^`okhttp3.internal.DiskLruCache` @kind object;
  #L240372.  call temp:= `access$2700`(v3) @signature `Lokhttp3/internal/DiskLruCache;.access$2700:(Lokhttp3/internal/DiskLruCache;)Lokhttp3/internal/io/FileSystem;` @kind static;
  #L240378.  v3:= temp @kind object;
  #L24037a.  v4:= v5.`okhttp3.internal.DiskLruCache$Editor.entry` @type ^`okhttp3.internal.DiskLruCache$Entry` @kind object;
  #L24037e.  call temp:= `access$1700`(v4) @signature `Lokhttp3/internal/DiskLruCache$Entry;.access$1700:(Lokhttp3/internal/DiskLruCache$Entry;)[Ljava/io/File;` @kind static;
  #L240384.  v4:= temp @kind object;
  #L240386.  v4:= v4[v6] @kind object;
  #L24038a.  call temp:= `source`(v3, v4) @signature `Lokhttp3/internal/io/FileSystem;.source:(Ljava/io/File;)Lokio/Source;` @kind interface;
  #L240390.  v1:= temp @kind object;
  #L240392.  @monitorexit v2
  #L240394.  goto L24036c;
  #L240396.  v0:= Exception @type ^`java.io.FileNotFoundException` @kind object;
  #L240398.  @monitorexit v2
  #L24039a.  goto L24036c;
  catch `java.lang.Throwable` @[L240330..L240348] goto L240344;
  catch `java.lang.Throwable` @[L24034a..L24036c] goto L240344;
  catch `java.io.FileNotFoundException` @[L24036e..L240390] goto L240396;
  catch `java.lang.Throwable` @[L24036e..L240390] goto L240344;
  catch `java.lang.Throwable` @[L240392..L24039a] goto L240344;
}
