record `okhttp3.internal.Platform` @kind class @AccessFlag PUBLIC {
}
global `int` `@@okhttp3.internal.Platform.INFO` @AccessFlag PUBLIC_STATIC_FINAL;
global `okhttp3.internal.Platform` `@@okhttp3.internal.Platform.PLATFORM` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@okhttp3.internal.Platform.WARN` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.logging.Logger` `@@okhttp3.internal.Platform.logger` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokhttp3/internal/Platform;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L242284.  call temp:= `findPlatform`() @signature `Lokhttp3/internal/Platform;.findPlatform:()Lokhttp3/internal/Platform;` @kind static;
  #L24228a.  v0:= temp @kind object;
  #L24228c.  `@@okhttp3.internal.Platform.PLATFORM` @type ^`okhttp3.internal.Platform` := v0 @kind object;
  #L242290.  v0:= constclass @type ^`okhttp3.OkHttpClient` @kind object;
  #L242294.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24229a.  v0:= temp @kind object;
  #L24229c.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L2422a2.  v0:= temp @kind object;
  #L2422a4.  `@@okhttp3.internal.Platform.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L2422a8.  return @kind void;
}
procedure `void` `<init>`(`okhttp3.internal.Platform` v0 @kind this) @signature `Lokhttp3/internal/Platform;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2422bc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2422c2.  return @kind void;
}
procedure `java.util.List` `alpnProtocolNames`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/Platform;.alpnProtocolNames:(Ljava/util/List;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2422d4.  v1:= new `java.util.ArrayList`;
  #L2422d8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2422de.  v4:= temp;
  #L2422e0.  call `<init>`(v1, v4) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L2422e6.  v0:= 0I;
  #L2422e8.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2422ee.  v3:= temp;
  #L2422f0.  if v0 >= v3 then goto L24231e;
  #L2422f4.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2422fa.  v2:= temp @kind object;
  #L2422fc.  v2:= (`okhttp3.Protocol`) v2 @kind object;
  #L242300.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L242304.  if v2 != v4 then goto L24230e;
  #L242308.  v0:= v0 + 1;
  #L24230c.  goto L2422f0;
  #L24230e.  call temp:= `toString`(v2) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L242314.  v4:= temp @kind object;
  #L242316.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L24231c.  goto L242308;
  #L24231e.  return v1 @kind object;
}
procedure `byte`[] `concatLengthPrefixed`(`java.util.List` v5 @kind object) @signature `Lokhttp3/internal/Platform;.concatLengthPrefixed:(Ljava/util/List;)[B` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L242330.  v2:= new `okio.Buffer`;
  #L242334.  call `<init>`(v2) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L24233a.  v0:= 0I;
  #L24233c.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L242342.  v3:= temp;
  #L242344.  if v0 >= v3 then goto L242388;
  #L242348.  call temp:= `get`(v5, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L24234e.  v1:= temp @kind object;
  #L242350.  v1:= (`okhttp3.Protocol`) v1 @kind object;
  #L242354.  v4:= `@@okhttp3.Protocol.HTTP_1_0` @type ^`okhttp3.Protocol` @kind object;
  #L242358.  if v1 != v4 then goto L242362;
  #L24235c.  v0:= v0 + 1;
  #L242360.  goto L242344;
  #L242362.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L242368.  v4:= temp @kind object;
  #L24236a.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L242370.  v4:= temp;
  #L242372.  call temp:= `writeByte`(v2, v4) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L242378.  call temp:= `toString`(v1) @signature `Lokhttp3/Protocol;.toString:()Ljava/lang/String;` @kind virtual;
  #L24237e.  v4:= temp @kind object;
  #L242380.  call temp:= `writeUtf8`(v2, v4) @signature `Lokio/Buffer;.writeUtf8:(Ljava/lang/String;)Lokio/Buffer;` @kind virtual;
  #L242386.  goto L24235c;
  #L242388.  call temp:= `readByteArray`(v2) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L24238e.  v4:= temp @kind object;
  #L242390.  return v4 @kind object;
}
procedure `okhttp3.internal.Platform` `findPlatform`() @signature `Lokhttp3/internal/Platform;.findPlatform:()Lokhttp3/internal/Platform;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2423a4.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/Platform;` @kind static;
  #L2423aa.  v0:= temp @kind object;
  #L2423ac.  if v0 == 0 then goto L2423b2;
  #L2423b0.  return v0 @kind object;
  #L2423b2.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/Jdk9Platform;.buildIfSupported:()Lokhttp3/internal/Jdk9Platform;` @kind static;
  #L2423b8.  v1:= temp @kind object;
  #L2423ba.  if v1 == 0 then goto L2423c2;
  #L2423be.  v0:= v1 @kind object;
  #L2423c0.  goto L2423b0;
  #L2423c2.  call temp:= `buildIfSupported`() @signature `Lokhttp3/internal/JdkWithJettyBootPlatform;.buildIfSupported:()Lokhttp3/internal/Platform;` @kind static;
  #L2423c8.  v2:= temp @kind object;
  #L2423ca.  if v2 == 0 then goto L2423d2;
  #L2423ce.  v0:= v2 @kind object;
  #L2423d0.  goto L2423b0;
  #L2423d2.  v0:= new `okhttp3.internal.Platform`;
  #L2423d6.  call `<init>`(v0) @signature `Lokhttp3/internal/Platform;.<init>:()V` @kind direct;
  #L2423dc.  goto L2423b0;
}
procedure `okhttp3.internal.Platform` `get`() @signature `Lokhttp3/internal/Platform;.get:()Lokhttp3/internal/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L2423f0.  v0:= `@@okhttp3.internal.Platform.PLATFORM` @type ^`okhttp3.internal.Platform` @kind object;
  #L2423f4.  return v0 @kind object;
}
procedure `java.lang.Object` `readFieldOrNull`(`java.lang.Object` v8 @kind object @name `instance`, `java.lang.Class` v9 @kind object, `java.lang.String` v10 @kind object @name `fieldName`) @signature `Lokhttp3/internal/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L242408.  v5:= 0I;
  #L24240a.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L242410.  v0:= temp @kind object;
  #L242412.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L242416.  if v0 == v6 then goto L242468;
  #L24241a.  call temp:= `getDeclaredField`(v0, v10) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L242420.  v3:= temp @kind object;
  #L242422.  v6:= 1I;
  #L242424.  call `setAccessible`(v3, v6) @signature `Ljava/lang/reflect/Field;.setAccessible:(Z)V` @kind virtual;
  #L24242a.  call temp:= `get`(v3, v8) @signature `Ljava/lang/reflect/Field;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L242430.  v4:= temp @kind object;
  #L242432.  if v4 == 0 then goto L242442;
  #L242436.  call temp:= `isInstance`(v9, v4) @signature `Ljava/lang/Class;.isInstance:(Ljava/lang/Object;)Z` @kind virtual;
  #L24243c.  v6:= temp;
  #L24243e.  if v6 != 0 then goto L242444;
  #L242442.  return v5 @kind object;
  #L242444.  call temp:= `cast`(v9, v4) @signature `Ljava/lang/Class;.cast:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L24244a.  v5:= temp @kind object;
  #L24244c.  goto L242442;
  #L24244e.  v2:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L242450.  v5:= new `java.lang.AssertionError`;
  #L242454.  call `<init>`(v5) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L24245a.  throw v5;
  #L24245c.  v6:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L24245e.  call temp:= `getSuperclass`(v0) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L242464.  v0:= temp @kind object;
  #L242466.  goto L242412;
  #L242468.  v6:= "delegate" @kind object;
  #L24246c.  call temp:= `equals`(v10, v6) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L242472.  v6:= temp;
  #L242474.  if v6 != 0 then goto L242442;
  #L242478.  v6:= constclass @type ^`java.lang.Object` @kind object;
  #L24247c.  v7:= "delegate" @kind object;
  #L242480.  call temp:= `readFieldOrNull`(v8, v6, v7) @signature `Lokhttp3/internal/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L242486.  v1:= temp @kind object;
  #L242488.  if v1 == 0 then goto L242442;
  #L24248c.  call temp:= `readFieldOrNull`(v1, v9, v10) @signature `Lokhttp3/internal/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L242492.  v5:= temp @kind object;
  #L242494.  goto L242442;
  catch `java.lang.NoSuchFieldException` @[L24241a..L24244a] goto L24245c;
  catch `java.lang.IllegalAccessException` @[L24241a..L24244a] goto L24244e;
}
procedure `void` `afterHandshake`(`okhttp3.internal.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`) @signature `Lokhttp3/internal/Platform;.afterHandshake:(Ljavax/net/ssl/SSLSocket;)V` @AccessFlag PUBLIC {
    temp;

  #L2424b8.  return @kind void;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.Platform` v0 @kind this, `javax.net.ssl.SSLSocket` v1 @kind object @name `sslSocket`, `java.lang.String` v2 @kind object @name `hostname`, `java.util.List` v3 @kind object) @signature `Lokhttp3/internal/Platform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2424cc.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.Platform` v0 @kind this, `java.net.Socket` v1 @kind object @name `socket`, `java.net.InetSocketAddress` v2 @kind object @name `address`, `int` v3 @name `connectTimeout`) @signature `Lokhttp3/internal/Platform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;

  #L2424e0.  call `connect`(v1, v2, v3) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L2424e6.  return @kind void;
}
procedure `java.lang.String` `getPrefix`(`okhttp3.internal.Platform` v1 @kind this) @signature `Lokhttp3/internal/Platform;.getPrefix:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2424f8.  v0:= "OkHttp" @kind object;
  #L2424fc.  return v0 @kind object;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.Platform` v1 @kind this, `javax.net.ssl.SSLSocket` v2 @kind object @name `socket`) @signature `Lokhttp3/internal/Platform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L242510.  v0:= 0I;
  #L242512.  return v0 @kind object;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.Platform` v1 @kind this) @signature `Lokhttp3/internal/Platform;.isCleartextTrafficPermitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L242524.  v0:= 1I;
  #L242526.  return v0;
}
procedure `void` `log`(`okhttp3.internal.Platform` v2 @kind this, `int` v3 @name `level`, `java.lang.String` v4 @kind object @name `message`, `java.lang.Throwable` v5 @kind object @name `t`) @signature `Lokhttp3/internal/Platform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L242538.  v1:= 5I;
  #L24253a.  if v3 != v1 then goto L24254e;
  #L24253e.  v0:= `@@java.util.logging.Level.WARNING` @type ^`java.util.logging.Level` @kind object;
  #L242542.  v1:= `@@okhttp3.internal.Platform.logger` @type ^`java.util.logging.Logger` @kind object;
  #L242546.  call `log`(v1, v0, v4, v5) @signature `Ljava/util/logging/Logger;.log:(Ljava/util/logging/Level;Ljava/lang/String;Ljava/lang/Throwable;)V` @kind virtual;
  #L24254c.  return @kind void;
  #L24254e.  v0:= `@@java.util.logging.Level.INFO` @type ^`java.util.logging.Level` @kind object;
  #L242552.  goto L242542;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.Platform` v6 @kind this, `javax.net.ssl.SSLSocketFactory` v7 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L242564.  v4:= 0I;
  #L242566.  v3:= "sun.security.ssl.SSLContextImpl" @kind object;
  #L24256a.  call temp:= `forName`(v3) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L242570.  v2:= temp @kind object;
  #L242572.  v3:= "context" @kind object;
  #L242576.  call temp:= `readFieldOrNull`(v7, v2, v3) @signature `Lokhttp3/internal/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L24257c.  v0:= temp @kind object;
  #L24257e.  if v0 != 0 then goto L242586;
  #L242582.  v3:= v4 @kind object;
  #L242584.  return v3 @kind object;
  #L242586.  v3:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L24258a.  v5:= "trustManager" @kind object;
  #L24258e.  call temp:= `readFieldOrNull`(v0, v3, v5) @signature `Lokhttp3/internal/Platform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L242594.  v3:= temp @kind object;
  #L242596.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L24259a.  goto L242584;
  #L24259c.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L24259e.  v3:= v4 @kind object;
  #L2425a0.  goto L242584;
  catch `java.lang.ClassNotFoundException` @[L242566..L24259a] goto L24259c;
}
