record `okhttp3.internal.AndroidPlatform` @kind class @AccessFlag  extends `okhttp3.internal.Platform` @kind class {
  `okhttp3.internal.OptionalMethod` `okhttp3.internal.AndroidPlatform.getAlpnSelectedProtocol` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.OptionalMethod` `okhttp3.internal.AndroidPlatform.setAlpnProtocols` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.OptionalMethod` `okhttp3.internal.AndroidPlatform.setHostname` @AccessFlag PRIVATE_FINAL;
  `okhttp3.internal.OptionalMethod` `okhttp3.internal.AndroidPlatform.setUseSessionTickets` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `okhttp3.internal.AndroidPlatform.sslParametersClass` @AccessFlag PRIVATE_FINAL;
}
global `int` `@@okhttp3.internal.AndroidPlatform.MAX_LOG_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`okhttp3.internal.AndroidPlatform` v0 @kind this, `java.lang.Class` v1 @kind object, `okhttp3.internal.OptionalMethod` v2 @kind object, `okhttp3.internal.OptionalMethod` v3 @kind object, `okhttp3.internal.OptionalMethod` v4 @kind object, `okhttp3.internal.OptionalMethod` v5 @kind object) @signature `Lokhttp3/internal/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3092e8.  call `<init>`(v0) @signature `Lokhttp3/internal/Platform;.<init>:()V` @kind direct;
  #L3092ee.  v0.`okhttp3.internal.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` := v1 @kind object;
  #L3092f2.  v0.`okhttp3.internal.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.OptionalMethod` := v2 @kind object;
  #L3092f6.  v0.`okhttp3.internal.AndroidPlatform.setHostname` @type ^`okhttp3.internal.OptionalMethod` := v3 @kind object;
  #L3092fa.  v0.`okhttp3.internal.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.OptionalMethod` := v4 @kind object;
  #L3092fe.  v0.`okhttp3.internal.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.OptionalMethod` := v5 @kind object;
  #L309302.  return @kind void;
}
procedure `okhttp3.internal.Platform` `buildIfSupported`() @signature `Lokhttp3/internal/AndroidPlatform;.buildIfSupported:()Lokhttp3/internal/Platform;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L309314.  v9:= 0I;
  #L309316.  v0:= "com.android.org.conscrypt.SSLParametersImpl" @kind object;
  #L30931a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L309320.  v1:= temp @kind object;
  #L309322.  v2:= new `okhttp3.internal.OptionalMethod`;
  #L309326.  v0:= 0I;
  #L309328.  v10:= "setUseSessionTickets" @kind object;
  #L30932c.  v11:= 1I;
  #L30932e.  v11:= new `java.lang.Class`[v11];
  #L309332.  v12:= 0I;
  #L309334.  v13:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L309338.  v11[v12]:= v13 @kind object;
  #L30933c.  call `<init>`(v2, v0, v10, v11) @signature `Lokhttp3/internal/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L309342.  v3:= new `okhttp3.internal.OptionalMethod`;
  #L309346.  v0:= 0I;
  #L309348.  v10:= "setHostname" @kind object;
  #L30934c.  v11:= 1I;
  #L30934e.  v11:= new `java.lang.Class`[v11];
  #L309352.  v12:= 0I;
  #L309354.  v13:= constclass @type ^`java.lang.String` @kind object;
  #L309358.  v11[v12]:= v13 @kind object;
  #L30935c.  call `<init>`(v3, v0, v10, v11) @signature `Lokhttp3/internal/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L309362.  v4:= 0I;
  #L309364.  v5:= 0I;
  #L309366.  v0:= "android.net.Network" @kind object;
  #L30936a.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L309370.  v7:= new `okhttp3.internal.OptionalMethod`;
  #L309374.  v0:= constclass @type ^`byte`[] @kind object;
  #L309378.  v10:= "getAlpnSelectedProtocol" @kind object;
  #L30937c.  v11:= 0I;
  #L30937e.  v11:= new `java.lang.Class`[v11];
  #L309382.  call `<init>`(v7, v0, v10, v11) @signature `Lokhttp3/internal/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L309388.  v8:= new `okhttp3.internal.OptionalMethod`;
  #L30938c.  v0:= 0I;
  #L30938e.  v10:= "setAlpnProtocols" @kind object;
  #L309392.  v11:= 1I;
  #L309394.  v11:= new `java.lang.Class`[v11];
  #L309398.  v12:= 0I;
  #L30939a.  v13:= constclass @type ^`byte`[] @kind object;
  #L30939e.  v11[v12]:= v13 @kind object;
  #L3093a2.  call `<init>`(v8, v0, v10, v11) @signature `Lokhttp3/internal/OptionalMethod;.<init>:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/Class;)V` @kind direct;
  #L3093a8.  v5:= v8 @kind object;
  #L3093aa.  v4:= v7 @kind object;
  #L3093ac.  v0:= new `okhttp3.internal.AndroidPlatform`;
  #L3093b0.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lokhttp3/internal/AndroidPlatform;.<init>:(Ljava/lang/Class;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;Lokhttp3/internal/OptionalMethod;)V` @kind direct;
  #L3093b6.  return v0 @kind object;
  #L3093b8.  v6:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L3093ba.  v0:= "org.apache.harmony.xnet.provider.jsse.SSLParametersImpl" @kind object;
  #L3093be.  call temp:= `forName`(v0) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L3093c4.  v1:= temp @kind object;
  #L3093c6.  goto L309322;
  #L3093c8.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L3093ca.  v0:= v9 @kind object;
  #L3093cc.  goto L3093b6;
  #L3093ce.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L3093d0.  goto L3093ac;
  #L3093d2.  v0:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L3093d4.  v4:= v7 @kind object;
  #L3093d6.  goto L3093ac;
  catch `java.lang.ClassNotFoundException` @[L309316..L309320] goto L3093b8;
  catch `java.lang.ClassNotFoundException` @[L309322..L309362] goto L3093c8;
  catch `java.lang.ClassNotFoundException` @[L309366..L309388] goto L3093ce;
  catch `java.lang.ClassNotFoundException` @[L309388..L3093a8] goto L3093d2;
  catch `java.lang.ClassNotFoundException` @[L3093ac..L3093c4] goto L3093c8;
}
procedure `void` `configureTlsExtensions`(`okhttp3.internal.AndroidPlatform` v6 @kind this, `javax.net.ssl.SSLSocket` v7 @kind object @name `sslSocket`, `java.lang.String` v8 @kind object @name `hostname`, `java.util.List` v9 @kind object) @signature `Lokhttp3/internal/AndroidPlatform;.configureTlsExtensions:(Ljavax/net/ssl/SSLSocket;Ljava/lang/String;Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L309424.  v5:= 0I;
  #L309426.  v4:= 1I;
  #L309428.  if v8 == 0 then goto L309458;
  #L30942c.  v1:= v6.`okhttp3.internal.AndroidPlatform.setUseSessionTickets` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L309430.  v2:= new `java.lang.Object`[v4];
  #L309434.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L30943a.  v3:= temp @kind object;
  #L30943c.  v2[v5]:= v3 @kind object;
  #L309440.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L309446.  v1:= v6.`okhttp3.internal.AndroidPlatform.setHostname` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L30944a.  v2:= new `java.lang.Object`[v4];
  #L30944e.  v2[v5]:= v8 @kind object;
  #L309452.  call temp:= `invokeOptionalWithoutCheckedException`(v1, v7, v2) @signature `Lokhttp3/internal/OptionalMethod;.invokeOptionalWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L309458.  v1:= v6.`okhttp3.internal.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L30945c.  if v1 == 0 then goto L30948a;
  #L309460.  v1:= v6.`okhttp3.internal.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L309464.  call temp:= `isSupported`(v1, v7) @signature `Lokhttp3/internal/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L30946a.  v1:= temp;
  #L30946c.  if v1 == 0 then goto L30948a;
  #L309470.  v0:= new `java.lang.Object`[v4];
  #L309474.  call temp:= `concatLengthPrefixed`(v9) @signature `Lokhttp3/internal/AndroidPlatform;.concatLengthPrefixed:(Ljava/util/List;)[B` @kind static;
  #L30947a.  v1:= temp @kind object;
  #L30947c.  v0[v5]:= v1 @kind object;
  #L309480.  v1:= v6.`okhttp3.internal.AndroidPlatform.setAlpnProtocols` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L309484.  call temp:= `invokeWithoutCheckedException`(v1, v7, v0) @signature `Lokhttp3/internal/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L30948a.  return @kind void;
}
procedure `void` `connectSocket`(`okhttp3.internal.AndroidPlatform` v3 @kind this, `java.net.Socket` v4 @kind object @name `socket`, `java.net.InetSocketAddress` v5 @kind object @name `address`, `int` v6 @name `connectTimeout`) @signature `Lokhttp3/internal/AndroidPlatform;.connectSocket:(Ljava/net/Socket;Ljava/net/InetSocketAddress;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L30949c.  call `connect`(v4, v5, v6) @signature `Ljava/net/Socket;.connect:(Ljava/net/SocketAddress;I)V` @kind virtual;
  #L3094a2.  return @kind void;
  #L3094a4.  v0:= Exception @type ^`java.lang.AssertionError` @kind object;
  #L3094a6.  call temp:= `isAndroidGetsocknameError`(v0) @signature `Lokhttp3/internal/Util;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @kind static;
  #L3094ac.  v2:= temp;
  #L3094ae.  if v2 == 0 then goto L3094be;
  #L3094b2.  v2:= new `java.io.IOException`;
  #L3094b6.  call `<init>`(v2, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3094bc.  throw v2;
  #L3094be.  throw v0;
  #L3094c0.  v0:= Exception @type ^`java.lang.SecurityException` @kind object;
  #L3094c2.  v1:= new `java.io.IOException`;
  #L3094c6.  v2:= "Exception in connect" @kind object;
  #L3094ca.  call `<init>`(v1, v2) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3094d0.  call temp:= `initCause`(v1, v0) @signature `Ljava/io/IOException;.initCause:(Ljava/lang/Throwable;)Ljava/lang/Throwable;` @kind virtual;
  #L3094d6.  throw v1;
  catch `java.lang.AssertionError` @[L30949c..L3094a2] goto L3094a4;
  catch `java.lang.SecurityException` @[L30949c..L3094a2] goto L3094c0;
}
procedure `java.lang.String` `getSelectedProtocol`(`okhttp3.internal.AndroidPlatform` v4 @kind this, `javax.net.ssl.SSLSocket` v5 @kind object @name `socket`) @signature `Lokhttp3/internal/AndroidPlatform;.getSelectedProtocol:(Ljavax/net/ssl/SSLSocket;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3094f8.  v2:= 0I;
  #L3094fa.  v1:= v4.`okhttp3.internal.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L3094fe.  if v1 != 0 then goto L309504;
  #L309502.  return v2 @kind object;
  #L309504.  v1:= v4.`okhttp3.internal.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L309508.  call temp:= `isSupported`(v1, v5) @signature `Lokhttp3/internal/OptionalMethod;.isSupported:(Ljava/lang/Object;)Z` @kind virtual;
  #L30950e.  v1:= temp;
  #L309510.  if v1 == 0 then goto L309502;
  #L309514.  v1:= v4.`okhttp3.internal.AndroidPlatform.getAlpnSelectedProtocol` @type ^`okhttp3.internal.OptionalMethod` @kind object;
  #L309518.  v3:= 0I;
  #L30951a.  v3:= new `java.lang.Object`[v3];
  #L30951e.  call temp:= `invokeWithoutCheckedException`(v1, v5, v3) @signature `Lokhttp3/internal/OptionalMethod;.invokeWithoutCheckedException:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L309524.  v1:= temp @kind object;
  #L309526.  v1:= (`byte`[]) v1 @kind object;
  #L30952a.  v0:= v1 @kind object;
  #L30952c.  v0:= (`byte`[]) v0 @kind object;
  #L309530.  if v0 == 0 then goto L309546;
  #L309534.  v1:= new `java.lang.String`;
  #L309538.  v2:= `@@okhttp3.internal.Util.UTF_8` @type ^`java.nio.charset.Charset` @kind object;
  #L30953c.  call `<init>`(v1, v0, v2) @signature `Ljava/lang/String;.<init>:([BLjava/nio/charset/Charset;)V` @kind direct;
  #L309542.  v2:= v1 @kind object;
  #L309544.  goto L309502;
  #L309546.  v1:= v2 @kind object;
  #L309548.  goto L309542;
}
procedure `boolean` `isCleartextTrafficPermitted`(`okhttp3.internal.AndroidPlatform` v8 @kind this) @signature `Lokhttp3/internal/AndroidPlatform;.isCleartextTrafficPermitted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30955c.  v6:= "android.security.NetworkSecurityPolicy" @kind object;
  #L309560.  call temp:= `forName`(v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;)Ljava/lang/Class;` @kind static;
  #L309566.  v4:= temp @kind object;
  #L309568.  v6:= "getInstance" @kind object;
  #L30956c.  v7:= 0I;
  #L30956e.  v7:= new `java.lang.Class`[v7];
  #L309572.  call temp:= `getMethod`(v4, v6, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L309578.  v2:= temp @kind object;
  #L30957a.  v6:= 0I;
  #L30957c.  v7:= 0I;
  #L30957e.  v7:= new `java.lang.Object`[v7];
  #L309582.  call temp:= `invoke`(v2, v6, v7) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L309588.  v5:= temp @kind object;
  #L30958a.  v6:= "isCleartextTrafficPermitted" @kind object;
  #L30958e.  v7:= 0I;
  #L309590.  v7:= new `java.lang.Class`[v7];
  #L309594.  call temp:= `getMethod`(v4, v6, v7) @signature `Ljava/lang/Class;.getMethod:(Ljava/lang/String;[Ljava/lang/Class;)Ljava/lang/reflect/Method;` @kind virtual;
  #L30959a.  v3:= temp @kind object;
  #L30959c.  v6:= 0I;
  #L30959e.  v6:= new `java.lang.Object`[v6];
  #L3095a2.  call temp:= `invoke`(v3, v5, v6) @signature `Ljava/lang/reflect/Method;.invoke:(Ljava/lang/Object;[Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3095a8.  v6:= temp @kind object;
  #L3095aa.  v6:= (`java.lang.Boolean`) v6 @kind object;
  #L3095ae.  call temp:= `booleanValue`(v6) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3095b4.  v0:= temp;
  #L3095b6.  return v0;
  #L3095b8.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L3095ba.  call temp:= `isCleartextTrafficPermitted`(v8) @signature `Lokhttp3/internal/Platform;.isCleartextTrafficPermitted:()Z` @kind super;
  #L3095c0.  v0:= temp;
  #L3095c2.  goto L3095b6;
  #L3095c4.  v1:= Exception @type ^`java.lang.IllegalAccessException` @kind object;
  #L3095c6.  v6:= new `java.lang.AssertionError`;
  #L3095ca.  call `<init>`(v6) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L3095d0.  throw v6;
  #L3095d2.  v1:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L3095d4.  goto L3095c6;
  #L3095d6.  v1:= Exception @type ^`java.lang.NoSuchMethodException` @kind object;
  #L3095d8.  goto L3095c6;
  #L3095da.  v1:= Exception @type ^`java.lang.reflect.InvocationTargetException` @kind object;
  #L3095dc.  goto L3095c6;
  catch `java.lang.ClassNotFoundException` @[L30955c..L3095b4] goto L3095b8;
  catch `java.lang.NoSuchMethodException` @[L30955c..L3095b4] goto L3095d6;
  catch `java.lang.IllegalAccessException` @[L30955c..L3095b4] goto L3095c4;
  catch `java.lang.IllegalArgumentException` @[L30955c..L3095b4] goto L3095d2;
  catch `java.lang.reflect.InvocationTargetException` @[L30955c..L3095b4] goto L3095da;
}
procedure `void` `log`(`okhttp3.internal.AndroidPlatform` v8 @kind this, `int` v9 @name `level`, `java.lang.String` v10 @kind object @name `message`, `java.lang.Throwable` v11 @kind object @name `t`) @signature `Lokhttp3/internal/AndroidPlatform;.log:(ILjava/lang/String;Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L30960c.  v7:= 10I;
  #L309610.  v3:= 5I;
  #L309612.  if v9 != v3 then goto L309692;
  #L309616.  if v11 == 0 then goto L30964c;
  #L30961a.  v5:= new `java.lang.StringBuilder`;
  #L30961e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L309624.  call temp:= `append`(v5, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L30962a.  v5:= temp @kind object;
  #L30962c.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L309632.  v5:= temp @kind object;
  #L309634.  call temp:= `getStackTraceString`(v11) @signature `Landroid/util/Log;.getStackTraceString:(Ljava/lang/Throwable;)Ljava/lang/String;` @kind static;
  #L30963a.  v6:= temp @kind object;
  #L30963c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L309642.  v5:= temp @kind object;
  #L309644.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L30964a.  v10:= temp @kind object;
  #L30964c.  v1:= 0I;
  #L30964e.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L309654.  v2:= temp;
  #L309656.  if v1 >= v2 then goto L30969a;
  #L30965a.  call temp:= `indexOf`(v10, v7, v1) @signature `Ljava/lang/String;.indexOf:(II)I` @kind virtual;
  #L309660.  v4:= temp;
  #L309662.  v5:= -1I;
  #L309664.  if v4 == v5 then goto L309696;
  #L309668.  v5:= v1 + 4000;
  #L30966c.  call temp:= `min`(v4, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L309672.  v0:= temp;
  #L309674.  v5:= "OkHttp" @kind object;
  #L309678.  call temp:= `substring`(v10, v1, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L30967e.  v6:= temp @kind object;
  #L309680.  call temp:= `println`(v3, v5, v6) @signature `Landroid/util/Log;.println:(ILjava/lang/String;Ljava/lang/String;)I` @kind static;
  #L309686.  v1:= v0;
  #L309688.  if v1 < v4 then goto L309668;
  #L30968c.  v1:= v1 + 1;
  #L309690.  goto L309656;
  #L309692.  v3:= 3I;
  #L309694.  goto L309616;
  #L309696.  v4:= v2;
  #L309698.  goto L309668;
  #L30969a.  return @kind void;
}
procedure `javax.net.ssl.X509TrustManager` `trustManager`(`okhttp3.internal.AndroidPlatform` v7 @kind this, `javax.net.ssl.SSLSocketFactory` v8 @kind object @name `sslSocketFactory`) @signature `Lokhttp3/internal/AndroidPlatform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3096ac.  v4:= v7.`okhttp3.internal.AndroidPlatform.sslParametersClass` @type ^`java.lang.Class` @kind object;
  #L3096b0.  v5:= "sslParameters" @kind object;
  #L3096b4.  call temp:= `readFieldOrNull`(v8, v4, v5) @signature `Lokhttp3/internal/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3096ba.  v0:= temp @kind object;
  #L3096bc.  if v0 != 0 then goto L3096ea;
  #L3096c0.  v4:= "com.google.android.gms.org.conscrypt.SSLParametersImpl" @kind object;
  #L3096c4.  v5:= 0I;
  #L3096c6.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3096cc.  v6:= temp @kind object;
  #L3096ce.  call temp:= `getClassLoader`(v6) @signature `Ljava/lang/Class;.getClassLoader:()Ljava/lang/ClassLoader;` @kind virtual;
  #L3096d4.  v6:= temp @kind object;
  #L3096d6.  call temp:= `forName`(v4, v5, v6) @signature `Ljava/lang/Class;.forName:(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class;` @kind static;
  #L3096dc.  v2:= temp @kind object;
  #L3096de.  v4:= "sslParameters" @kind object;
  #L3096e2.  call temp:= `readFieldOrNull`(v8, v2, v4) @signature `Lokhttp3/internal/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3096e8.  v0:= temp @kind object;
  #L3096ea.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L3096ee.  v5:= "x509TrustManager" @kind object;
  #L3096f2.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3096f8.  v3:= temp @kind object;
  #L3096fa.  v3:= (`javax.net.ssl.X509TrustManager`) v3 @kind object;
  #L3096fe.  if v3 == 0 then goto L309710;
  #L309702.  return v3 @kind object;
  #L309704.  v1:= Exception @type ^`java.lang.ClassNotFoundException` @kind object;
  #L309706.  call temp:= `trustManager`(v7, v8) @signature `Lokhttp3/internal/Platform;.trustManager:(Ljavax/net/ssl/SSLSocketFactory;)Ljavax/net/ssl/X509TrustManager;` @kind super;
  #L30970c.  v3:= temp @kind object;
  #L30970e.  goto L309702;
  #L309710.  v4:= constclass @type ^`javax.net.ssl.X509TrustManager` @kind object;
  #L309714.  v5:= "trustManager" @kind object;
  #L309718.  call temp:= `readFieldOrNull`(v0, v4, v5) @signature `Lokhttp3/internal/AndroidPlatform;.readFieldOrNull:(Ljava/lang/Object;Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L30971e.  v4:= temp @kind object;
  #L309720.  v4:= (`javax.net.ssl.X509TrustManager`) v4 @kind object;
  #L309724.  v3:= v4 @kind object;
  #L309726.  goto L309702;
  catch `java.lang.ClassNotFoundException` @[L3096c0..L3096e8] goto L309704;
}
