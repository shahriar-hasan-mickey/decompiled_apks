record `com.desco.ssl.Activities.UsageActivity$2` @kind class @AccessFlag  extends `com.github.mikephil.charting.formatter.AxisValueFormatter` @kind interface {
  `com.desco.ssl.Activities.UsageActivity` `com.desco.ssl.Activities.UsageActivity$2.this$0` @AccessFlag FINAL_SYNTHETIC;
  `java.util.List` `com.desco.ssl.Activities.UsageActivity$2.val$monthlyUsages` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.desco.ssl.Activities.UsageActivity$2` v0 @kind this, `com.desco.ssl.Activities.UsageActivity` v1 @kind object @name `this$0`, `java.util.List` v2 @kind object) @signature `Lcom/desco/ssl/Activities/UsageActivity$2;.<init>:(Lcom/desco/ssl/Activities/UsageActivity;Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b3c0c.  v0.`com.desco.ssl.Activities.UsageActivity$2.this$0` @type ^`com.desco.ssl.Activities.UsageActivity` := v1 @kind object;
  #L2b3c10.  v0.`com.desco.ssl.Activities.UsageActivity$2.val$monthlyUsages` @type ^`java.util.List` := v2 @kind object;
  #L2b3c14.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b3c1a.  return @kind void;
}
procedure `int` `getDecimalDigits`(`com.desco.ssl.Activities.UsageActivity$2` v1 @kind this) @signature `Lcom/desco/ssl/Activities/UsageActivity$2;.getDecimalDigits:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3c2c.  v0:= 1I;
  #L2b3c2e.  return v0;
}
procedure `java.lang.String` `getFormattedValue`(`com.desco.ssl.Activities.UsageActivity$2` v4 @kind this, `float` v5 @name `value`, `com.github.mikephil.charting.components.AxisBase` v6 @kind object @name `axis`) @signature `Lcom/desco/ssl/Activities/UsageActivity$2;.getFormattedValue:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b3c40.  v2:= new `java.lang.StringBuilder`;
  #L2b3c44.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3c4a.  v1:= v4.`com.desco.ssl.Activities.UsageActivity$2.val$monthlyUsages` @type ^`java.util.List` @kind object;
  #L2b3c4e.  v3:= (`int`) v5 @kind f2i;
  #L2b3c50.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b3c56.  v1:= temp @kind object;
  #L2b3c58.  v1:= (`com.desco.ssl.Model.JsonModel.UsageGraphModel$MonthlyUsage`) v1 @kind object;
  #L2b3c5c.  call temp:= `getMonth`(v1) @signature `Lcom/desco/ssl/Model/JsonModel/UsageGraphModel$MonthlyUsage;.getMonth:()Ljava/lang/String;` @kind virtual;
  #L2b3c62.  v1:= temp @kind object;
  #L2b3c64.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3c6a.  v1:= temp @kind object;
  #L2b3c6c.  v2:= "\n" @kind object;
  #L2b3c70.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3c76.  v2:= temp @kind object;
  #L2b3c78.  v1:= v4.`com.desco.ssl.Activities.UsageActivity$2.val$monthlyUsages` @type ^`java.util.List` @kind object;
  #L2b3c7c.  v3:= (`int`) v5 @kind f2i;
  #L2b3c7e.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b3c84.  v1:= temp @kind object;
  #L2b3c86.  v1:= (`com.desco.ssl.Model.JsonModel.UsageGraphModel$MonthlyUsage`) v1 @kind object;
  #L2b3c8a.  call temp:= `getYear`(v1) @signature `Lcom/desco/ssl/Model/JsonModel/UsageGraphModel$MonthlyUsage;.getYear:()Ljava/lang/String;` @kind virtual;
  #L2b3c90.  v1:= temp @kind object;
  #L2b3c92.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3c98.  v1:= temp @kind object;
  #L2b3c9a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3ca0.  v1:= temp @kind object;
  #L2b3ca2.  return v1 @kind object;
  #L2b3ca4.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L2b3ca6.  call `printStackTrace`(v0) @signature `Ljava/lang/Exception;.printStackTrace:()V` @kind virtual;
  #L2b3cac.  v1:= "" @kind object;
  #L2b3cb0.  goto L2b3ca2;
  catch `java.lang.Exception` @[L2b3c40..L2b3ca0] goto L2b3ca4;
}
