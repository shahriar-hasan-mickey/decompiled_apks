record `com.desco.ssl.Activities.UsageActivity$3` @kind class @AccessFlag  extends `com.github.mikephil.charting.formatter.AxisValueFormatter` @kind interface {
  `com.desco.ssl.Activities.UsageActivity` `com.desco.ssl.Activities.UsageActivity$3.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.desco.ssl.Activities.UsageActivity$3` v0 @kind this, `com.desco.ssl.Activities.UsageActivity` v1 @kind object @name `this$0`) @signature `Lcom/desco/ssl/Activities/UsageActivity$3;.<init>:(Lcom/desco/ssl/Activities/UsageActivity;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b3cd4.  v0.`com.desco.ssl.Activities.UsageActivity$3.this$0` @type ^`com.desco.ssl.Activities.UsageActivity` := v1 @kind object;
  #L2b3cd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b3cde.  return @kind void;
}
procedure `int` `getDecimalDigits`(`com.desco.ssl.Activities.UsageActivity$3` v1 @kind this) @signature `Lcom/desco/ssl/Activities/UsageActivity$3;.getDecimalDigits:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b3cf0.  v0:= 1I;
  #L2b3cf2.  return v0;
}
procedure `java.lang.String` `getFormattedValue`(`com.desco.ssl.Activities.UsageActivity$3` v2 @kind this, `float` v3 @name `value`, `com.github.mikephil.charting.components.AxisBase` v4 @kind object @name `axis`) @signature `Lcom/desco/ssl/Activities/UsageActivity$3;.getFormattedValue:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b3d04.  v0:= new `java.lang.StringBuilder`;
  #L2b3d08.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2b3d0e.  v1:= (`int`) v3 @kind f2i;
  #L2b3d10.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3d16.  v0:= temp @kind object;
  #L2b3d18.  v1:= "" @kind object;
  #L2b3d1c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2b3d22.  v0:= temp @kind object;
  #L2b3d24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b3d2a.  v0:= temp @kind object;
  #L2b3d2c.  return v0 @kind object;
}
