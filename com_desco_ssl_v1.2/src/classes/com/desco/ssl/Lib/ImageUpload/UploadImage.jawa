record `com.desco.ssl.Lib.ImageUpload.UploadImage` @kind class @AccessFlag PUBLIC {
  `java.io.File` `com.desco.ssl.Lib.ImageUpload.UploadImage.imageFile` @AccessFlag PRIVATE;
  `com.desco.ssl.Lib.LibInterfaces.ImageUploadListener` `com.desco.ssl.Lib.ImageUpload.UploadImage.uploadListener` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.desco.ssl.Lib.ImageUpload.UploadImage.TAG` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.desco.ssl.Lib.ImageUpload.UploadImage` v3 @kind this, `java.io.File` v4 @kind object @name `imageFile`) @signature `Lcom/desco/ssl/Lib/ImageUpload/UploadImage;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1d1a04.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d1a0a.  if v4 == 0 then goto L1d1a14;
  #L1d1a0e.  v3.`com.desco.ssl.Lib.ImageUpload.UploadImage.imageFile` @type ^`java.io.File` := v4 @kind object;
  #L1d1a12.  return @kind void;
  #L1d1a14.  v1:= new `java.io.FileNotFoundException`;
  #L1d1a18.  v2:= "File not Found" @kind object;
  #L1d1a1c.  call `<init>`(v1, v2) @signature `Ljava/io/FileNotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d1a22.  throw v1;
  #L1d1a24.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1d1a26.  v1:= new `java.io.FileNotFoundException`;
  #L1d1a2a.  v2:= "File not Found" @kind object;
  #L1d1a2e.  call `<init>`(v1, v2) @signature `Ljava/io/FileNotFoundException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1d1a34.  throw v1;
  catch `java.lang.Exception` @[L1d1a0e..L1d1a24] goto L1d1a24;
}
procedure `com.desco.ssl.Network.AllNetworkCalls` `callRetrofit`(`com.desco.ssl.Lib.ImageUpload.UploadImage` v8 @kind this) @signature `Lcom/desco/ssl/Lib/ImageUpload/UploadImage;.callRetrofit:()Lcom/desco/ssl/Network/AllNetworkCalls;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d1a58.  v4:= new `okhttp3.OkHttpClient$Builder`;
  #L1d1a5c.  call `<init>`(v4) @signature `Lokhttp3/OkHttpClient$Builder;.<init>:()V` @kind direct;
  #L1d1a62.  v6:= 25L;
  #L1d1a66.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d1a6a.  call temp:= `connectTimeout`(v4, v6, v5) @signature `Lokhttp3/OkHttpClient$Builder;.connectTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L1d1a70.  v4:= temp @kind object;
  #L1d1a72.  v6:= 35L;
  #L1d1a76.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d1a7a.  call temp:= `writeTimeout`(v4, v6, v5) @signature `Lokhttp3/OkHttpClient$Builder;.writeTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L1d1a80.  v4:= temp @kind object;
  #L1d1a82.  v6:= 30L;
  #L1d1a86.  v5:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L1d1a8a.  call temp:= `readTimeout`(v4, v6, v5) @signature `Lokhttp3/OkHttpClient$Builder;.readTimeout:(JLjava/util/concurrent/TimeUnit;)Lokhttp3/OkHttpClient$Builder;` @kind virtual;
  #L1d1a90.  v4:= temp @kind object;
  #L1d1a92.  call temp:= `build`(v4) @signature `Lokhttp3/OkHttpClient$Builder;.build:()Lokhttp3/OkHttpClient;` @kind virtual;
  #L1d1a98.  v0:= temp @kind object;
  #L1d1a9a.  v4:= new `com.google.gson.GsonBuilder`;
  #L1d1a9e.  call `<init>`(v4) @signature `Lcom/google/gson/GsonBuilder;.<init>:()V` @kind direct;
  #L1d1aa4.  call temp:= `setLenient`(v4) @signature `Lcom/google/gson/GsonBuilder;.setLenient:()Lcom/google/gson/GsonBuilder;` @kind virtual;
  #L1d1aaa.  v4:= temp @kind object;
  #L1d1aac.  call temp:= `create`(v4) @signature `Lcom/google/gson/GsonBuilder;.create:()Lcom/google/gson/Gson;` @kind virtual;
  #L1d1ab2.  v1:= temp @kind object;
  #L1d1ab4.  v4:= new `retrofit2.Retrofit$Builder`;
  #L1d1ab8.  call `<init>`(v4) @signature `Lretrofit2/Retrofit$Builder;.<init>:()V` @kind direct;
  #L1d1abe.  call temp:= `getBaseUrl`() @signature `Lcom/desco/ssl/Model/ShareInfo;.getBaseUrl:()Ljava/lang/String;` @kind static;
  #L1d1ac4.  v5:= temp @kind object;
  #L1d1ac6.  call temp:= `baseUrl`(v4, v5) @signature `Lretrofit2/Retrofit$Builder;.baseUrl:(Ljava/lang/String;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1d1acc.  v4:= temp @kind object;
  #L1d1ace.  call temp:= `create`(v1) @signature `Lretrofit2/converter/gson/GsonConverterFactory;.create:(Lcom/google/gson/Gson;)Lretrofit2/converter/gson/GsonConverterFactory;` @kind static;
  #L1d1ad4.  v5:= temp @kind object;
  #L1d1ad6.  call temp:= `addConverterFactory`(v4, v5) @signature `Lretrofit2/Retrofit$Builder;.addConverterFactory:(Lretrofit2/Converter$Factory;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1d1adc.  v4:= temp @kind object;
  #L1d1ade.  call temp:= `client`(v4, v0) @signature `Lretrofit2/Retrofit$Builder;.client:(Lokhttp3/OkHttpClient;)Lretrofit2/Retrofit$Builder;` @kind virtual;
  #L1d1ae4.  v4:= temp @kind object;
  #L1d1ae6.  call temp:= `build`(v4) @signature `Lretrofit2/Retrofit$Builder;.build:()Lretrofit2/Retrofit;` @kind virtual;
  #L1d1aec.  v2:= temp @kind object;
  #L1d1aee.  v4:= constclass @type ^`com.desco.ssl.Network.AllNetworkCalls` @kind object;
  #L1d1af2.  call temp:= `create`(v2, v4) @signature `Lretrofit2/Retrofit;.create:(Ljava/lang/Class;)Ljava/lang/Object;` @kind virtual;
  #L1d1af8.  v3:= temp @kind object;
  #L1d1afa.  v3:= (`com.desco.ssl.Network.AllNetworkCalls`) v3 @kind object;
  #L1d1afe.  return v3 @kind object;
}
procedure `void` `startUploadingImage`(`com.desco.ssl.Lib.ImageUpload.UploadImage` v1 @kind this, `com.desco.ssl.Lib.LibInterfaces.ImageUploadListener` v2 @kind object @name `uploadListener`) @signature `Lcom/desco/ssl/Lib/ImageUpload/UploadImage;.startUploadingImage:(Lcom/desco/ssl/Lib/LibInterfaces/ImageUploadListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d1b10.  @monitorenter v1
  #L1d1b12.  v1.`com.desco.ssl.Lib.ImageUpload.UploadImage.uploadListener` @type ^`com.desco.ssl.Lib.LibInterfaces.ImageUploadListener` := v2 @kind object;
  #L1d1b16.  @monitorexit v1
  #L1d1b18.  return @kind void;
  #L1d1b1a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L1d1b1c.  @monitorexit v1
  #L1d1b1e.  throw v0;
  catch `java.lang.Throwable` @[L1d1b12..L1d1b16] goto L1d1b1a;
}
