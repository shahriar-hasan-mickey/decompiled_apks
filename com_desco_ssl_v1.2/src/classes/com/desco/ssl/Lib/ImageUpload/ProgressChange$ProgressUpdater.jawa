record `com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `long` `com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mTotal` @AccessFlag PRIVATE;
  `long` `com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mUploaded` @AccessFlag PRIVATE;
  `com.desco.ssl.Lib.ImageUpload.ProgressChange` `com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater` v0 @kind this, `com.desco.ssl.Lib.ImageUpload.ProgressChange` v1 @kind object, `long` v2 @name `uploaded`, `long` v4 @name `total`) @signature `Lcom/desco/ssl/Lib/ImageUpload/ProgressChange$ProgressUpdater;.<init>:(Lcom/desco/ssl/Lib/ImageUpload/ProgressChange;JJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d1960.  v0.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.this$0` @type ^`com.desco.ssl.Lib.ImageUpload.ProgressChange` := v1 @kind object;
  #L1d1964.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d196a.  v0.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mUploaded` @type ^`long` := v2 @kind wide;
  #L1d196e.  v0.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mTotal` @type ^`long` := v4 @kind wide;
  #L1d1972.  return @kind void;
}
procedure `void` `run`(`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater` v6 @kind this) @signature `Lcom/desco/ssl/Lib/ImageUpload/ProgressChange$ProgressUpdater;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d1984.  v0:= v6.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.this$0` @type ^`com.desco.ssl.Lib.ImageUpload.ProgressChange` @kind object;
  #L1d1988.  call temp:= `access$000`(v0) @signature `Lcom/desco/ssl/Lib/ImageUpload/ProgressChange;.access$000:(Lcom/desco/ssl/Lib/ImageUpload/ProgressChange;)Lcom/desco/ssl/Lib/ImageUpload/ProgressChange$UploadCallbacks;` @kind static;
  #L1d198e.  v0:= temp @kind object;
  #L1d1990.  v2:= 100L;
  #L1d1994.  v4:= v6.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mUploaded` @type ^`long` @kind wide;
  #L1d1998.  v2:= v2 * v4 @kind long;
  #L1d199a.  v4:= v6.`com.desco.ssl.Lib.ImageUpload.ProgressChange$ProgressUpdater.mTotal` @type ^`long` @kind wide;
  #L1d199e.  v2:= v2 / v4 @kind long;
  #L1d19a0.  v1:= (`int`) v2 @kind l2i;
  #L1d19a2.  call `onProgressUpdate`(v0, v1) @signature `Lcom/desco/ssl/Lib/ImageUpload/ProgressChange$UploadCallbacks;.onProgressUpdate:(I)V` @kind interface;
  #L1d19a8.  return @kind void;
}
