record `com.desco.ssl.Lib.LibValidation.FormValidation` @kind class @AccessFlag PUBLIC {
}
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.ERROR_PASSWORD_MIN_LENGTH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.FIELD_EMPTY` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.FIELD_NULL` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.INVALID` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.PASSWORD_MIN_LENGTH` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.PASSWORD_MISS_MATCH` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.desco.ssl.Lib.LibValidation.FormValidation.VALID` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `<init>`(`com.desco.ssl.Lib.LibValidation.FormValidation` v0 @kind this) @signature `Lcom/desco/ssl/Lib/LibValidation/FormValidation;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d1f38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d1f3e.  return @kind void;
}
procedure `int` `checkConfirmPassword`(`java.lang.String` v2 @kind object @name `password`, `java.lang.String` v3 @kind object @name `confirmPassword`) @signature `Lcom/desco/ssl/Lib/LibValidation/FormValidation;.checkConfirmPassword:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d1f50.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d1f56.  v1:= temp;
  #L1d1f58.  if v1 != 0 then goto L1d1f60;
  #L1d1f5c.  v1:= 3I;
  #L1d1f5e.  return v1;
  #L1d1f60.  v1:= 0I;
  #L1d1f62.  goto L1d1f5e;
  #L1d1f64.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1d1f66.  v1:= -1I;
  #L1d1f68.  goto L1d1f5e;
  catch `java.lang.Exception` @[L1d1f50..L1d1f56] goto L1d1f64;
}
procedure `int` `isValidEmail`(`java.lang.String` v1 @kind object @name `emailAddress`) @signature `Lcom/desco/ssl/Lib/LibValidation/FormValidation;.isValidEmail:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d1f8c.  if v1 != 0 then goto L1d1f94;
  #L1d1f90.  v0:= 1I;
  #L1d1f92.  return v0;
  #L1d1f94.  v0:= `@@android.util.Patterns.EMAIL_ADDRESS` @type ^`java.util.regex.Pattern` @kind object;
  #L1d1f98.  call temp:= `matcher`(v0, v1) @signature `Ljava/util/regex/Pattern;.matcher:(Ljava/lang/CharSequence;)Ljava/util/regex/Matcher;` @kind virtual;
  #L1d1f9e.  v0:= temp @kind object;
  #L1d1fa0.  call temp:= `matches`(v0) @signature `Ljava/util/regex/Matcher;.matches:()Z` @kind virtual;
  #L1d1fa6.  v0:= temp;
  #L1d1fa8.  if v0 == 0 then goto L1d1fb0;
  #L1d1fac.  v0:= 0I;
  #L1d1fae.  goto L1d1f92;
  #L1d1fb0.  v0:= -1I;
  #L1d1fb2.  goto L1d1f92;
}
procedure `int` `isValidPassword`(`java.lang.String` v3 @kind object @name `password`) @signature `Lcom/desco/ssl/Lib/LibValidation/FormValidation;.isValidPassword:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1d1fc4.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1d1fca.  v1:= temp;
  #L1d1fcc.  v2:= 6I;
  #L1d1fce.  if v1 >= v2 then goto L1d1fd6;
  #L1d1fd2.  v1:= 4I;
  #L1d1fd4.  return v1;
  #L1d1fd6.  v1:= 0I;
  #L1d1fd8.  goto L1d1fd4;
  #L1d1fda.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1d1fdc.  v1:= -1I;
  #L1d1fde.  goto L1d1fd4;
  catch `java.lang.Exception` @[L1d1fc4..L1d1fca] goto L1d1fda;
}
procedure `int` `notEmptyField`(`java.lang.String` v2 @kind object @name `fieldValue`) @signature `Lcom/desco/ssl/Lib/LibValidation/FormValidation;.notEmptyField:(Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1d2000.  call temp:= `toString`(v2) @signature `Ljava/lang/String;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d2006.  v1:= temp @kind object;
  #L1d2008.  call temp:= `isEmpty`(v1) @signature `Ljava/lang/String;.isEmpty:()Z` @kind virtual;
  #L1d200e.  v1:= temp;
  #L1d2010.  if v1 == 0 then goto L1d2018;
  #L1d2014.  v1:= 2I;
  #L1d2016.  return v1;
  #L1d2018.  v1:= 0I;
  #L1d201a.  goto L1d2016;
  #L1d201c.  v0:= Exception @type ^`java.lang.Exception` @kind object;
  #L1d201e.  v1:= 1I;
  #L1d2020.  goto L1d2016;
  catch `java.lang.Exception` @[L1d2000..L1d200e] goto L1d201c;
}
