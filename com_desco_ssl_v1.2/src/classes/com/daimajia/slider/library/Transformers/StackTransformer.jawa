record `com.daimajia.slider.library.Transformers.StackTransformer` @kind class @AccessFlag PUBLIC extends `com.daimajia.slider.library.Transformers.BaseTransformer` @kind class {
}
procedure `void` `<init>`(`com.daimajia.slider.library.Transformers.StackTransformer` v0 @kind this) @signature `Lcom/daimajia/slider/library/Transformers/StackTransformer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L327ebc.  call `<init>`(v0) @signature `Lcom/daimajia/slider/library/Transformers/BaseTransformer;.<init>:()V` @kind direct;
  #L327ec2.  return @kind void;
}
procedure `void` `onTransform`(`com.daimajia.slider.library.Transformers.StackTransformer` v2 @kind this, `android.view.View` v3 @kind object @name `view`, `float` v4 @name `position`) @signature `Lcom/daimajia/slider/library/Transformers/StackTransformer;.onTransform:(Landroid/view/View;F)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L327ed4.  v0:= 0I;
  #L327ed6.  v1:= fcmpg(v4, v0);
  #L327eda.  if v1 >= 0 then goto L327ee6;
  #L327ede.  call `setTranslationX`(v3, v0) @signature `Lcom/nineoldandroids/view/ViewHelper;.setTranslationX:(Landroid/view/View;F)V` @kind static;
  #L327ee4.  return @kind void;
  #L327ee6.  call temp:= `getWidth`(v3) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L327eec.  v0:= temp;
  #L327eee.  v0:= -v0 @kind int;
  #L327ef0.  v0:= (`float`) v0 @kind i2f;
  #L327ef2.  v0:= v0 * v4 @kind float;
  #L327ef4.  goto L327ede;
}
