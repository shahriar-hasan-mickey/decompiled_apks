record `com.github.mikephil.charting.highlight.Highlight` @kind class @AccessFlag PUBLIC {
  `com.github.mikephil.charting.components.YAxis$AxisDependency` `com.github.mikephil.charting.highlight.Highlight.axis` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.highlight.Highlight.mDataIndex` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mDrawX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mDrawY` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.highlight.Highlight.mStackIndex` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mX` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mXPx` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mY` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.highlight.Highlight.mYPx` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.highlight.Highlight` v7 @kind this, `float` v8 @name `x`, `float` v9 @name `y`, `float` v10 @name `xPx`, `float` v11 @name `yPx`, `int` v12 @name `dataSetIndex`, `int` v13 @name `stackIndex`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v14 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FFFFIILcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L1d8310.  v0:= v7 @kind object;
  #L1d8312.  v1:= v8;
  #L1d8314.  v2:= v9;
  #L1d8316.  v3:= v10;
  #L1d8318.  v4:= v11;
  #L1d831a.  v5:= v12;
  #L1d831c.  v6:= v14 @kind object;
  #L1d831e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FFFFILcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L1d8324.  v7.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int` := v13;
  #L1d8328.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.highlight.Highlight` v2 @kind this, `float` v3 @name `x`, `float` v4 @name `y`, `float` v5 @name `xPx`, `float` v6 @name `yPx`, `int` v7 @name `dataSetIndex`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v8 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FFFFILcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d833c.  v1:= -1I;
  #L1d833e.  v0:= NaNF;
  #L1d8342.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d8348.  v2.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float` := v0;
  #L1d834c.  v2.`com.github.mikephil.charting.highlight.Highlight.mY` @type ^`float` := v0;
  #L1d8350.  v2.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int` := v1;
  #L1d8354.  v2.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int` := v1;
  #L1d8358.  v2.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float` := v3;
  #L1d835c.  v2.`com.github.mikephil.charting.highlight.Highlight.mY` @type ^`float` := v4;
  #L1d8360.  v2.`com.github.mikephil.charting.highlight.Highlight.mXPx` @type ^`float` := v5;
  #L1d8364.  v2.`com.github.mikephil.charting.highlight.Highlight.mYPx` @type ^`float` := v6;
  #L1d8368.  v2.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int` := v7;
  #L1d836c.  v2.`com.github.mikephil.charting.highlight.Highlight.axis` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v8 @kind object;
  #L1d8370.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.highlight.Highlight` v2 @kind this, `float` v3 @name `x`, `int` v4 @name `dataSetIndex`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d8384.  v1:= -1I;
  #L1d8386.  v0:= NaNF;
  #L1d838a.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d8390.  v2.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float` := v0;
  #L1d8394.  v2.`com.github.mikephil.charting.highlight.Highlight.mY` @type ^`float` := v0;
  #L1d8398.  v2.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int` := v1;
  #L1d839c.  v2.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int` := v1;
  #L1d83a0.  v2.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float` := v3;
  #L1d83a4.  v2.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int` := v4;
  #L1d83a8.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.highlight.Highlight` v0 @kind this, `float` v1 @name `x`, `int` v2 @name `dataSetIndex`, `int` v3 @name `stackIndex`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FII)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d83bc.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.<init>:(FI)V` @kind direct;
  #L1d83c2.  v0.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int` := v3;
  #L1d83c6.  return @kind void;
}
procedure `boolean` `equalTo`(`com.github.mikephil.charting.highlight.Highlight` v3 @kind this, `com.github.mikephil.charting.highlight.Highlight` v4 @kind object @name `h`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.equalTo:(Lcom/github/mikephil/charting/highlight/Highlight;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d83d8.  v0:= 0I;
  #L1d83da.  if v4 != 0 then goto L1d83e0;
  #L1d83de.  return v0;
  #L1d83e0.  v1:= v3.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int`;
  #L1d83e4.  v2:= v4.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int`;
  #L1d83e8.  if v1 != v2 then goto L1d83de;
  #L1d83ec.  v1:= v3.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float`;
  #L1d83f0.  v2:= v4.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float`;
  #L1d83f4.  v1:= fcmpl(v1, v2);
  #L1d83f8.  if v1 != 0 then goto L1d83de;
  #L1d83fc.  v1:= v3.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int`;
  #L1d8400.  v2:= v4.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int`;
  #L1d8404.  if v1 != v2 then goto L1d83de;
  #L1d8408.  v1:= v3.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int`;
  #L1d840c.  v2:= v4.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int`;
  #L1d8410.  if v1 != v2 then goto L1d83de;
  #L1d8414.  v0:= 1I;
  #L1d8416.  goto L1d83de;
}
procedure `com.github.mikephil.charting.components.YAxis$AxisDependency` `getAxis`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getAxis:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8428.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.axis` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d842c.  return v0 @kind object;
}
procedure `int` `getDataIndex`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8440.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int`;
  #L1d8444.  return v0;
}
procedure `int` `getDataSetIndex`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataSetIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8458.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int`;
  #L1d845c.  return v0;
}
procedure `float` `getDrawX`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDrawX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8470.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mDrawX` @type ^`float`;
  #L1d8474.  return v0;
}
procedure `float` `getDrawY`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDrawY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8488.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mDrawY` @type ^`float`;
  #L1d848c.  return v0;
}
procedure `int` `getStackIndex`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getStackIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d84a0.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int`;
  #L1d84a4.  return v0;
}
procedure `float` `getX`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d84b8.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float`;
  #L1d84bc.  return v0;
}
procedure `float` `getXPx`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getXPx:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d84d0.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mXPx` @type ^`float`;
  #L1d84d4.  return v0;
}
procedure `float` `getY`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d84e8.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mY` @type ^`float`;
  #L1d84ec.  return v0;
}
procedure `float` `getYPx`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getYPx:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8500.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mYPx` @type ^`float`;
  #L1d8504.  return v0;
}
procedure `boolean` `isStacked`(`com.github.mikephil.charting.highlight.Highlight` v1 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.isStacked:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8518.  v0:= v1.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int`;
  #L1d851c.  if v0 < 0 then goto L1d8524;
  #L1d8520.  v0:= 1I;
  #L1d8522.  return v0;
  #L1d8524.  v0:= 0I;
  #L1d8526.  goto L1d8522;
}
procedure `void` `setDataIndex`(`com.github.mikephil.charting.highlight.Highlight` v0 @kind this, `int` v1 @name `mDataIndex`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.setDataIndex:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1d8538.  v0.`com.github.mikephil.charting.highlight.Highlight.mDataIndex` @type ^`int` := v1;
  #L1d853c.  return @kind void;
}
procedure `void` `setDraw`(`com.github.mikephil.charting.highlight.Highlight` v0 @kind this, `float` v1 @name `x`, `float` v2 @name `y`) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.setDraw:(FF)V` @AccessFlag PUBLIC {
    temp;

  #L1d8550.  v0.`com.github.mikephil.charting.highlight.Highlight.mDrawX` @type ^`float` := v1;
  #L1d8554.  v0.`com.github.mikephil.charting.highlight.Highlight.mDrawY` @type ^`float` := v2;
  #L1d8558.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.github.mikephil.charting.highlight.Highlight` v2 @kind this) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d856c.  v0:= new `java.lang.StringBuilder`;
  #L1d8570.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L1d8576.  v1:= "Highlight, x: " @kind object;
  #L1d857a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8580.  v0:= temp @kind object;
  #L1d8582.  v1:= v2.`com.github.mikephil.charting.highlight.Highlight.mX` @type ^`float`;
  #L1d8586.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d858c.  v0:= temp @kind object;
  #L1d858e.  v1:= ", y: " @kind object;
  #L1d8592.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d8598.  v0:= temp @kind object;
  #L1d859a.  v1:= v2.`com.github.mikephil.charting.highlight.Highlight.mY` @type ^`float`;
  #L1d859e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d85a4.  v0:= temp @kind object;
  #L1d85a6.  v1:= ", dataSetIndex: " @kind object;
  #L1d85aa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d85b0.  v0:= temp @kind object;
  #L1d85b2.  v1:= v2.`com.github.mikephil.charting.highlight.Highlight.mDataSetIndex` @type ^`int`;
  #L1d85b6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d85bc.  v0:= temp @kind object;
  #L1d85be.  v1:= ", stackIndex (only stacked barentry): " @kind object;
  #L1d85c2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d85c8.  v0:= temp @kind object;
  #L1d85ca.  v1:= v2.`com.github.mikephil.charting.highlight.Highlight.mStackIndex` @type ^`int`;
  #L1d85ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1d85d4.  v0:= temp @kind object;
  #L1d85d6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1d85dc.  v0:= temp @kind object;
  #L1d85de.  return v0 @kind object;
}
