record `com.github.mikephil.charting.data.DataSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.data.BaseDataSet` @kind class {
  `java.util.List` `com.github.mikephil.charting.data.DataSet.mValues` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mXMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mXMin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mYMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.DataSet.mYMin` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.DataSet` v3 @kind this, `java.util.List` v4 @kind object, `java.lang.String` v5 @kind object @name `label`) @signature `Lcom/github/mikephil/charting/data/DataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32c920.  v2:= 2139095039I;
  #L32c926.  v1:= -8388609I;
  #L32c92c.  call `<init>`(v3, v5) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32c932.  v0:= 0I;
  #L32c934.  v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v0 @kind object;
  #L32c938.  v3.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v1;
  #L32c93c.  v3.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v2;
  #L32c940.  v3.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v1;
  #L32c944.  v3.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v2;
  #L32c948.  v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v4 @kind object;
  #L32c94c.  v0:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32c950.  if v0 != 0 then goto L32c962;
  #L32c954.  v0:= new `java.util.ArrayList`;
  #L32c958.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32c95e.  v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v0 @kind object;
  #L32c962.  call `calcMinMax`(v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @kind virtual;
  #L32c968.  return @kind void;
}
procedure `boolean` `addEntry`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.addEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c97c.  if v3 != 0 then goto L32c984;
  #L32c980.  v1:= 0I;
  #L32c982.  return v1;
  #L32c984.  call temp:= `getValues`(v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.getValues:()Ljava/util/List;` @kind virtual;
  #L32c98a.  v0:= temp @kind object;
  #L32c98c.  if v0 != 0 then goto L32c99a;
  #L32c990.  v0:= new `java.util.ArrayList`;
  #L32c994.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32c99a.  call `calcMinMax`(v2, v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L32c9a0.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32c9a6.  v1:= temp;
  #L32c9a8.  goto L32c982;
}
procedure `void` `addEntryOrdered`(`com.github.mikephil.charting.data.DataSet` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.addEntryOrdered:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32c9bc.  if v4 != 0 then goto L32c9c2;
  #L32c9c0.  return @kind void;
  #L32c9c2.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32c9c6.  if v1 != 0 then goto L32c9d8;
  #L32c9ca.  v1:= new `java.util.ArrayList`;
  #L32c9ce.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32c9d4.  v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v1 @kind object;
  #L32c9d8.  call `calcMinMax`(v3, v4) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L32c9de.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32c9e2.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32c9e8.  v1:= temp;
  #L32c9ea.  if v1 <= 0 then goto L32ca46;
  #L32c9ee.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32c9f2.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32c9f6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32c9fc.  v2:= temp;
  #L32c9fe.  v2:= v2 + -1;
  #L32ca02.  call temp:= `get`(v1, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32ca08.  v1:= temp @kind object;
  #L32ca0a.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L32ca0e.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32ca14.  v1:= temp;
  #L32ca16.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32ca1c.  v2:= temp;
  #L32ca1e.  v1:= fcmpl(v1, v2);
  #L32ca22.  if v1 <= 0 then goto L32ca46;
  #L32ca26.  call temp:= `getX`(v4) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32ca2c.  v1:= temp;
  #L32ca2e.  v2:= `@@com.github.mikephil.charting.data.DataSet$Rounding.UP` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L32ca32.  call temp:= `getEntryIndex`(v3, v1, v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L32ca38.  v0:= temp;
  #L32ca3a.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ca3e.  call `add`(v1, v0, v4) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L32ca44.  goto L32c9c0;
  #L32ca46.  v1:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ca4a.  call temp:= `add`(v1, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32ca50.  goto L32c9c0;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.DataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32ca64.  v3:= 2139095039I;
  #L32ca6a.  v2:= -8388609I;
  #L32ca70.  v1:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ca74.  if v1 == 0 then goto L32ca88;
  #L32ca78.  v1:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ca7c.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L32ca82.  v1:= temp;
  #L32ca84.  if v1 == 0 then goto L32ca8a;
  #L32ca88.  return @kind void;
  #L32ca8a.  v4.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v2;
  #L32ca8e.  v4.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v3;
  #L32ca92.  v4.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v2;
  #L32ca96.  v4.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v3;
  #L32ca9a.  v1:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ca9e.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L32caa4.  v1:= temp @kind object;
  #L32caa6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L32caac.  v2:= temp;
  #L32caae.  if v2 == 0 then goto L32ca88;
  #L32cab2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L32cab8.  v0:= temp @kind object;
  #L32caba.  v0:= (`com.github.mikephil.charting.data.Entry`) v0 @kind object;
  #L32cabe.  call `calcMinMax`(v4, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @kind virtual;
  #L32cac4.  goto L32caa6;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L32cad8.  if v3 != 0 then goto L32cade;
  #L32cadc.  return @kind void;
  #L32cade.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L32cae4.  v0:= temp;
  #L32cae6.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float`;
  #L32caea.  v0:= fcmpg(v0, v1);
  #L32caee.  if v0 >= 0 then goto L32cafe;
  #L32caf2.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L32caf8.  v0:= temp;
  #L32cafa.  v2.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float` := v0;
  #L32cafe.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L32cb04.  v0:= temp;
  #L32cb06.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float`;
  #L32cb0a.  v0:= fcmpl(v0, v1);
  #L32cb0e.  if v0 <= 0 then goto L32cb1e;
  #L32cb12.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L32cb18.  v0:= temp;
  #L32cb1a.  v2.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float` := v0;
  #L32cb1e.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cb24.  v0:= temp;
  #L32cb26.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float`;
  #L32cb2a.  v0:= fcmpg(v0, v1);
  #L32cb2e.  if v0 >= 0 then goto L32cb3e;
  #L32cb32.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cb38.  v0:= temp;
  #L32cb3a.  v2.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float` := v0;
  #L32cb3e.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cb44.  v0:= temp;
  #L32cb46.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float`;
  #L32cb4a.  v0:= fcmpl(v0, v1);
  #L32cb4e.  if v0 <= 0 then goto L32cadc;
  #L32cb52.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cb58.  v0:= temp;
  #L32cb5a.  v2.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float` := v0;
  #L32cb5e.  goto L32cadc;
}
procedure `void` `clear`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cb70.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cb74.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L32cb7a.  call `notifyDataSetChanged`(v1) @signature `Lcom/github/mikephil/charting/data/DataSet;.notifyDataSetChanged:()V` @kind virtual;
  #L32cb80.  return @kind void;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`() @signature `Lcom/github/mikephil/charting/data/DataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.util.List` `getEntriesForXPos`(`com.github.mikephil.charting.data.DataSet` v7 @kind this, `float` v8 @name `xVal`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntriesForXPos:(F)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32cb94.  v0:= new `java.util.ArrayList`;
  #L32cb98.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L32cb9e.  v3:= 0I;
  #L32cba0.  v5:= v7.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cba4.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cbaa.  v5:= temp;
  #L32cbac.  v2:= v5 + -1;
  #L32cbb0.  if v3 > v2 then goto L32cc62;
  #L32cbb4.  v5:= v2 + v3 @kind int;
  #L32cbb8.  v4:= v5 / 2;
  #L32cbbc.  v5:= v7.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cbc0.  call temp:= `get`(v5, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cbc6.  v1:= temp @kind object;
  #L32cbc8.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L32cbcc.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cbd2.  v5:= temp;
  #L32cbd4.  v5:= fcmpl(v8, v5);
  #L32cbd8.  if v5 != 0 then goto L32cc46;
  #L32cbdc.  if v4 <= 0 then goto L32cc0a;
  #L32cbe0.  v5:= v7.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cbe4.  v6:= v4 + -1;
  #L32cbe8.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cbee.  v5:= temp @kind object;
  #L32cbf0.  v5:= (`com.github.mikephil.charting.data.Entry`) v5 @kind object;
  #L32cbf4.  call temp:= `getX`(v5) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cbfa.  v5:= temp;
  #L32cbfc.  v5:= fcmpl(v5, v8);
  #L32cc00.  if v5 != 0 then goto L32cc0a;
  #L32cc04.  v4:= v4 + -1;
  #L32cc08.  goto L32cbdc;
  #L32cc0a.  v5:= v7.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cc0e.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cc14.  v2:= temp;
  #L32cc16.  if v4 >= v2 then goto L32cc62;
  #L32cc1a.  v5:= v7.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cc1e.  call temp:= `get`(v5, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cc24.  v1:= temp @kind object;
  #L32cc26.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L32cc2a.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cc30.  v5:= temp;
  #L32cc32.  v5:= fcmpl(v5, v8);
  #L32cc36.  if v5 != 0 then goto L32cc62;
  #L32cc3a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L32cc40.  v4:= v4 + 1;
  #L32cc44.  goto L32cc16;
  #L32cc46.  call temp:= `getX`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cc4c.  v5:= temp;
  #L32cc4e.  v5:= fcmpl(v8, v5);
  #L32cc52.  if v5 <= 0 then goto L32cc5c;
  #L32cc56.  v3:= v4 + 1;
  #L32cc5a.  goto L32cbb0;
  #L32cc5c.  v2:= v4 + -1;
  #L32cc60.  goto L32cbb0;
  #L32cc62.  return v0 @kind object;
}
procedure `int` `getEntryCount`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc74.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cc78.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cc7e.  v0:= temp;
  #L32cc80.  return v0;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForIndex`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `int` v2 @name `index`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32cc94.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cc98.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cc9e.  v0:= temp @kind object;
  #L32cca0.  v0:= (`com.github.mikephil.charting.data.Entry`) v0 @kind object;
  #L32cca4.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForXPos`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `float` v2 @name `xPos`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXPos:(F)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ccb8.  v0:= `@@com.github.mikephil.charting.data.DataSet$Rounding.CLOSEST` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L32ccbc.  call temp:= `getEntryForXPos`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXPos:(FLcom/github/mikephil/charting/data/DataSet$Rounding;)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L32ccc2.  v0:= temp @kind object;
  #L32ccc4.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForXPos`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `float` v3 @name `xPos`, `com.github.mikephil.charting.data.DataSet$Rounding` v4 @kind object @name `rounding`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryForXPos:(FLcom/github/mikephil/charting/data/DataSet$Rounding;)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32ccd8.  call temp:= `getEntryIndex`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @kind virtual;
  #L32ccde.  v0:= temp;
  #L32cce0.  v1:= -1I;
  #L32cce2.  if v0 <= v1 then goto L32ccf8;
  #L32cce6.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ccea.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32ccf0.  v1:= temp @kind object;
  #L32ccf2.  v1:= (`com.github.mikephil.charting.data.Entry`) v1 @kind object;
  #L32ccf6.  return v1 @kind object;
  #L32ccf8.  v1:= 0I;
  #L32ccfa.  goto L32ccf6;
}
procedure `int` `getEntryIndex`(`com.github.mikephil.charting.data.DataSet` v9 @kind this, `float` v10 @name `xPos`, `com.github.mikephil.charting.data.DataSet$Rounding` v11 @kind object @name `rounding`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(FLcom/github/mikephil/charting/data/DataSet$Rounding;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L32cd0c.  v7:= -1I;
  #L32cd0e.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cd12.  if v6 == 0 then goto L32cd26;
  #L32cd16.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cd1a.  call temp:= `isEmpty`(v6) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L32cd20.  v6:= temp;
  #L32cd22.  if v6 == 0 then goto L32cd2a;
  #L32cd26.  v3:= v7;
  #L32cd28.  return v3;
  #L32cd2a.  v4:= 0I;
  #L32cd2c.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cd30.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cd36.  v6:= temp;
  #L32cd38.  v3:= v6 + -1;
  #L32cd3c.  if v4 >= v3 then goto L32cda2;
  #L32cd40.  v6:= v4 + v3 @kind int;
  #L32cd44.  v5:= v6 / 2;
  #L32cd48.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cd4c.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cd52.  v6:= temp @kind object;
  #L32cd54.  v6:= (`com.github.mikephil.charting.data.Entry`) v6 @kind object;
  #L32cd58.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cd5e.  v6:= temp;
  #L32cd60.  v6:= v6 - v10 @kind float;
  #L32cd62.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32cd68.  v1:= temp;
  #L32cd6a.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cd6e.  v8:= v5 + 1;
  #L32cd72.  call temp:= `get`(v6, v8) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cd78.  v6:= temp @kind object;
  #L32cd7a.  v6:= (`com.github.mikephil.charting.data.Entry`) v6 @kind object;
  #L32cd7e.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cd84.  v6:= temp;
  #L32cd86.  v6:= v6 - v10 @kind float;
  #L32cd88.  call temp:= `abs`(v6) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32cd8e.  v2:= temp;
  #L32cd90.  v6:= fcmpg(v2, v1);
  #L32cd94.  if v6 > 0 then goto L32cd9e;
  #L32cd98.  v4:= v5 + 1;
  #L32cd9c.  goto L32cd3c;
  #L32cd9e.  v3:= v5;
  #L32cda0.  goto L32cd3c;
  #L32cda2.  if v3 == v7 then goto L32cd28;
  #L32cda6.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cdaa.  call temp:= `get`(v6, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cdb0.  v6:= temp @kind object;
  #L32cdb2.  v6:= (`com.github.mikephil.charting.data.Entry`) v6 @kind object;
  #L32cdb6.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32cdbc.  v0:= temp;
  #L32cdbe.  v6:= `@@com.github.mikephil.charting.data.DataSet$Rounding.UP` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L32cdc2.  if v11 != v6 then goto L32cde8;
  #L32cdc6.  v6:= fcmpg(v0, v10);
  #L32cdca.  if v6 >= 0 then goto L32cd28;
  #L32cdce.  v6:= v9.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cdd2.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cdd8.  v6:= temp;
  #L32cdda.  v6:= v6 + -1;
  #L32cdde.  if v3 >= v6 then goto L32cd28;
  #L32cde2.  v3:= v3 + 1;
  #L32cde6.  goto L32cd28;
  #L32cde8.  v6:= `@@com.github.mikephil.charting.data.DataSet$Rounding.DOWN` @type ^`com.github.mikephil.charting.data.DataSet$Rounding` @kind object;
  #L32cdec.  if v11 != v6 then goto L32cd28;
  #L32cdf0.  v6:= fcmpl(v0, v10);
  #L32cdf4.  if v6 <= 0 then goto L32cd28;
  #L32cdf8.  if v3 <= 0 then goto L32cd28;
  #L32cdfc.  v3:= v3 + -1;
  #L32ce00.  goto L32cd28;
}
procedure `int` `getEntryIndex`(`com.github.mikephil.charting.data.DataSet` v1 @kind this, `com.github.mikephil.charting.data.Entry` v2 @kind object @name `e`) @signature `Lcom/github/mikephil/charting/data/DataSet;.getEntryIndex:(Lcom/github/mikephil/charting/data/Entry;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce14.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ce18.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L32ce1e.  v0:= temp;
  #L32ce20.  return v0;
}
procedure `java.util.List` `getValues`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getValues:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce34.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ce38.  return v0 @kind object;
}
procedure `float` `getXMax`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getXMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce4c.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mXMax` @type ^`float`;
  #L32ce50.  return v0;
}
procedure `float` `getXMin`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getXMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce64.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mXMin` @type ^`float`;
  #L32ce68.  return v0;
}
procedure `float` `getYMax`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getYMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce7c.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mYMax` @type ^`float`;
  #L32ce80.  return v0;
}
procedure `float` `getYMin`(`com.github.mikephil.charting.data.DataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.getYMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ce94.  v0:= v1.`com.github.mikephil.charting.data.DataSet.mYMin` @type ^`float`;
  #L32ce98.  return v0;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.DataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32ceac.  v0:= 0I;
  #L32ceae.  if v3 != 0 then goto L32ceb4;
  #L32ceb2.  return v0;
  #L32ceb4.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32ceb8.  if v1 == 0 then goto L32ceb2;
  #L32cebc.  v1:= v2.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cec0.  call temp:= `remove`(v1, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L32cec6.  v0:= temp;
  #L32cec8.  if v0 == 0 then goto L32ceb2;
  #L32cecc.  call `calcMinMax`(v2) @signature `Lcom/github/mikephil/charting/data/DataSet;.calcMinMax:()V` @kind virtual;
  #L32ced2.  goto L32ceb2;
}
procedure `void` `setValues`(`com.github.mikephil.charting.data.DataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/DataSet;.setValues:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L32cee4.  v0.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` := v1 @kind object;
  #L32cee8.  call `notifyDataSetChanged`(v0) @signature `Lcom/github/mikephil/charting/data/DataSet;.notifyDataSetChanged:()V` @kind virtual;
  #L32ceee.  return @kind void;
}
procedure `java.lang.String` `toSimpleString`(`com.github.mikephil.charting.data.DataSet` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.toSimpleString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32cf00.  v0:= new `java.lang.StringBuffer`;
  #L32cf04.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L32cf0a.  v1:= new `java.lang.StringBuilder`;
  #L32cf0e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32cf14.  v2:= "DataSet, label: " @kind object;
  #L32cf18.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cf1e.  v2:= temp @kind object;
  #L32cf20.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L32cf26.  v1:= temp @kind object;
  #L32cf28.  if v1 != 0 then goto L32cf7c;
  #L32cf2c.  v1:= "" @kind object;
  #L32cf30.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cf36.  v1:= temp @kind object;
  #L32cf38.  v2:= ", entries: " @kind object;
  #L32cf3c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cf42.  v1:= temp @kind object;
  #L32cf44.  v2:= v3.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cf48.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cf4e.  v2:= temp;
  #L32cf50.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cf56.  v1:= temp @kind object;
  #L32cf58.  v2:= "\n" @kind object;
  #L32cf5c.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cf62.  v1:= temp @kind object;
  #L32cf64.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cf6a.  v1:= temp @kind object;
  #L32cf6c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L32cf72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cf78.  v1:= temp @kind object;
  #L32cf7a.  return v1 @kind object;
  #L32cf7c.  call temp:= `getLabel`(v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L32cf82.  v1:= temp @kind object;
  #L32cf84.  goto L32cf30;
}
procedure `java.lang.String` `toString`(`com.github.mikephil.charting.data.DataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/DataSet;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32cf98.  v0:= new `java.lang.StringBuffer`;
  #L32cf9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L32cfa2.  call temp:= `toSimpleString`(v4) @signature `Lcom/github/mikephil/charting/data/DataSet;.toSimpleString:()Ljava/lang/String;` @kind virtual;
  #L32cfa8.  v2:= temp @kind object;
  #L32cfaa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L32cfb0.  v1:= 0I;
  #L32cfb2.  v2:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cfb6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32cfbc.  v2:= temp;
  #L32cfbe.  if v1 >= v2 then goto L32d00c;
  #L32cfc2.  v3:= new `java.lang.StringBuilder`;
  #L32cfc6.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32cfcc.  v2:= v4.`com.github.mikephil.charting.data.DataSet.mValues` @type ^`java.util.List` @kind object;
  #L32cfd0.  call temp:= `get`(v2, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32cfd6.  v2:= temp @kind object;
  #L32cfd8.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L32cfdc.  call temp:= `toString`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cfe2.  v2:= temp @kind object;
  #L32cfe4.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cfea.  v2:= temp @kind object;
  #L32cfec.  v3:= " " @kind object;
  #L32cff0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32cff6.  v2:= temp @kind object;
  #L32cff8.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32cffe.  v2:= temp @kind object;
  #L32d000.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L32d006.  v1:= v1 + 1;
  #L32d00a.  goto L32cfb2;
  #L32d00c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L32d012.  v2:= temp @kind object;
  #L32d014.  return v2 @kind object;
}
