record `com.github.mikephil.charting.data.ScatterData` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32d284.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:()V` @kind direct;
  #L32d28a.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32d29c.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:(Ljava/util/List;)V` @kind direct;
  #L32d2a2.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ScatterData` v0 @kind this, `com.github.mikephil.charting.interfaces.datasets.IScatterDataSet`[] v1 @kind object @name `dataSets`) @signature `Lcom/github/mikephil/charting/data/ScatterData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L32d2b4.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;)V` @kind direct;
  #L32d2ba.  return @kind void;
}
procedure `float` `getGreatestShapeSize`(`com.github.mikephil.charting.data.ScatterData` v5 @kind this) @signature `Lcom/github/mikephil/charting/data/ScatterData;.getGreatestShapeSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32d2cc.  v1:= 0I;
  #L32d2ce.  v0:= 0I;
  #L32d2d0.  v4:= v5.`com.github.mikephil.charting.data.ScatterData.mDataSets` @type ^`java.util.List` @kind object;
  #L32d2d4.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32d2da.  v4:= temp;
  #L32d2dc.  if v0 >= v4 then goto L32d308;
  #L32d2e0.  v4:= v5.`com.github.mikephil.charting.data.ScatterData.mDataSets` @type ^`java.util.List` @kind object;
  #L32d2e4.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32d2ea.  v2:= temp @kind object;
  #L32d2ec.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IScatterDataSet`) v2 @kind object;
  #L32d2f0.  call temp:= `getScatterShapeSize`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;.getScatterShapeSize:()F` @kind interface;
  #L32d2f6.  v3:= temp;
  #L32d2f8.  v4:= fcmpl(v3, v1);
  #L32d2fc.  if v4 <= 0 then goto L32d302;
  #L32d300.  v1:= v3;
  #L32d302.  v0:= v0 + 1;
  #L32d306.  goto L32d2d0;
  #L32d308.  return v1;
}
