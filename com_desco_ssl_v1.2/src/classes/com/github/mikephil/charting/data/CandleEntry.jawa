record `com.github.mikephil.charting.data.CandleEntry` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.Entry` @kind class {
  `float` `com.github.mikephil.charting.data.CandleEntry.mClose` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.CandleEntry.mOpen` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.CandleEntry.mShadowLow` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.CandleEntry` v3 @kind this, `float` v4 @name `x`, `float` v5 @name `shadowH`, `float` v6 @name `shadowL`, `float` v7 @name `open`, `float` v8 @name `close`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.<init>:(FFFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32c1a0.  v2:= 0I;
  #L32c1a2.  v0:= v5 + v6 @kind float;
  #L32c1a6.  v1:= 2.0F;
  #L32c1aa.  v0:= v0 / v1 @kind float;
  #L32c1ac.  call `<init>`(v3, v4, v0) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FF)V` @kind direct;
  #L32c1b2.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float` := v2;
  #L32c1b6.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float` := v2;
  #L32c1ba.  v3.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float` := v2;
  #L32c1be.  v3.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float` := v2;
  #L32c1c2.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float` := v5;
  #L32c1c6.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float` := v6;
  #L32c1ca.  v3.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float` := v7;
  #L32c1ce.  v3.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float` := v8;
  #L32c1d2.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.CandleEntry` v3 @kind this, `float` v4 @name `x`, `float` v5 @name `shadowH`, `float` v6 @name `shadowL`, `float` v7 @name `open`, `float` v8 @name `close`, `java.lang.Object` v9 @kind object @name `data`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.<init>:(FFFFFLjava/lang/Object;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L32c1e4.  v2:= 0I;
  #L32c1e6.  v0:= v5 + v6 @kind float;
  #L32c1ea.  v1:= 2.0F;
  #L32c1ee.  v0:= v0 / v1 @kind float;
  #L32c1f0.  call `<init>`(v3, v4, v0, v9) @signature `Lcom/github/mikephil/charting/data/Entry;.<init>:(FFLjava/lang/Object;)V` @kind direct;
  #L32c1f6.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float` := v2;
  #L32c1fa.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float` := v2;
  #L32c1fe.  v3.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float` := v2;
  #L32c202.  v3.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float` := v2;
  #L32c206.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float` := v5;
  #L32c20a.  v3.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float` := v6;
  #L32c20e.  v3.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float` := v7;
  #L32c212.  v3.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float` := v8;
  #L32c216.  return @kind void;
}
procedure `com.github.mikephil.charting.data.CandleEntry` `copy`(`com.github.mikephil.charting.data.CandleEntry` v7 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.copy:()Lcom/github/mikephil/charting/data/CandleEntry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L32c228.  v0:= new `com.github.mikephil.charting.data.CandleEntry`;
  #L32c22c.  call temp:= `getX`(v7) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getX:()F` @kind virtual;
  #L32c232.  v1:= temp;
  #L32c234.  v2:= v7.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float`;
  #L32c238.  v3:= v7.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float`;
  #L32c23c.  v4:= v7.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float`;
  #L32c240.  v5:= v7.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float`;
  #L32c244.  call temp:= `getData`(v7) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getData:()Ljava/lang/Object;` @kind virtual;
  #L32c24a.  v6:= temp @kind object;
  #L32c24c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.<init>:(FFFFFLjava/lang/Object;)V` @kind direct;
  #L32c252.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `copy`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L32c264.  call temp:= `copy`(v1) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.copy:()Lcom/github/mikephil/charting/data/CandleEntry;` @kind virtual;
  #L32c26a.  v0:= temp @kind object;
  #L32c26c.  return v0 @kind object;
}
procedure `float` `getBodyRange`(`com.github.mikephil.charting.data.CandleEntry` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getBodyRange:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c280.  v0:= v2.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float`;
  #L32c284.  v1:= v2.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float`;
  #L32c288.  v0:= v0 - v1 @kind float;
  #L32c28a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32c290.  v0:= temp;
  #L32c292.  return v0;
}
procedure `float` `getClose`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getClose:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c2a4.  v0:= v1.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float`;
  #L32c2a8.  return v0;
}
procedure `float` `getHigh`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getHigh:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c2bc.  v0:= v1.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float`;
  #L32c2c0.  return v0;
}
procedure `float` `getLow`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getLow:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c2d4.  v0:= v1.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float`;
  #L32c2d8.  return v0;
}
procedure `float` `getOpen`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getOpen:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c2ec.  v0:= v1.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float`;
  #L32c2f0.  return v0;
}
procedure `float` `getShadowRange`(`com.github.mikephil.charting.data.CandleEntry` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getShadowRange:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32c304.  v0:= v2.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float`;
  #L32c308.  v1:= v2.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float`;
  #L32c30c.  v0:= v0 - v1 @kind float;
  #L32c30e.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32c314.  v0:= temp;
  #L32c316.  return v0;
}
procedure `float` `getY`(`com.github.mikephil.charting.data.CandleEntry` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.getY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32c328.  call temp:= `getY`(v1) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind super;
  #L32c32e.  v0:= temp;
  #L32c330.  return v0;
}
procedure `void` `setClose`(`com.github.mikephil.charting.data.CandleEntry` v0 @kind this, `float` v1 @name `mClose`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.setClose:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32c344.  v0.`com.github.mikephil.charting.data.CandleEntry.mClose` @type ^`float` := v1;
  #L32c348.  return @kind void;
}
procedure `void` `setHigh`(`com.github.mikephil.charting.data.CandleEntry` v0 @kind this, `float` v1 @name `mShadowHigh`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.setHigh:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32c35c.  v0.`com.github.mikephil.charting.data.CandleEntry.mShadowHigh` @type ^`float` := v1;
  #L32c360.  return @kind void;
}
procedure `void` `setLow`(`com.github.mikephil.charting.data.CandleEntry` v0 @kind this, `float` v1 @name `mShadowLow`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.setLow:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32c374.  v0.`com.github.mikephil.charting.data.CandleEntry.mShadowLow` @type ^`float` := v1;
  #L32c378.  return @kind void;
}
procedure `void` `setOpen`(`com.github.mikephil.charting.data.CandleEntry` v0 @kind this, `float` v1 @name `mOpen`) @signature `Lcom/github/mikephil/charting/data/CandleEntry;.setOpen:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32c38c.  v0.`com.github.mikephil.charting.data.CandleEntry.mOpen` @type ^`float` := v1;
  #L32c390.  return @kind void;
}
