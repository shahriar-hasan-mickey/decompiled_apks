record `com.github.mikephil.charting.data.BaseDataSet` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.interfaces.datasets.IDataSet` @kind interface {
  `com.github.mikephil.charting.components.YAxis$AxisDependency` `com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @AccessFlag PROTECTED;
  `java.util.List` `com.github.mikephil.charting.data.BaseDataSet.mColors` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @AccessFlag PROTECTED;
  `java.lang.String` `com.github.mikephil.charting.data.BaseDataSet.mLabel` @AccessFlag PRIVATE;
  `java.util.List` `com.github.mikephil.charting.data.BaseDataSet.mValueColors` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.formatter.ValueFormatter` `com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @AccessFlag PROTECTED_TRANSIENT;
  `float` `com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @AccessFlag PROTECTED;
  `android.graphics.Typeface` `com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.data.BaseDataSet.mVisible` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BaseDataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b9978.  v0:= 0I;
  #L2b997a.  v1:= 1I;
  #L2b997c.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b9982.  v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L2b9986.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L2b998a.  v0:= "DataSet" @kind object;
  #L2b998e.  v4.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v0 @kind object;
  #L2b9992.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L2b9996.  v4.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v0 @kind object;
  #L2b999a.  v4.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` := v1 @kind boolean;
  #L2b999e.  v4.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` := v1 @kind boolean;
  #L2b99a2.  v0:= 17.0F;
  #L2b99a6.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float` := v0;
  #L2b99aa.  v4.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` := v1 @kind boolean;
  #L2b99ae.  v0:= new `java.util.ArrayList`;
  #L2b99b2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b99b8.  v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L2b99bc.  v0:= new `java.util.ArrayList`;
  #L2b99c0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b99c6.  v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v0 @kind object;
  #L2b99ca.  v0:= v4.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b99ce.  v1:= 140I;
  #L2b99d2.  v2:= 234I;
  #L2b99d6.  v3:= 255I;
  #L2b99da.  call temp:= `rgb`(v1, v2, v3) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L2b99e0.  v1:= temp;
  #L2b99e2.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b99e8.  v1:= temp @kind object;
  #L2b99ea.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b99f0.  v0:= v4.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b99f4.  v1:= -16777216I;
  #L2b99f8.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b99fe.  v1:= temp @kind object;
  #L2b9a00.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b9a06.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.lang.String` v1 @kind object @name `label`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:(Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b9a18.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.<init>:()V` @kind direct;
  #L2b9a1e.  v0.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v1 @kind object;
  #L2b9a22.  return @kind void;
}
procedure `void` `addColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `color`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.addColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9a34.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9a38.  if v0 != 0 then goto L2b9a4a;
  #L2b9a3c.  v0:= new `java.util.ArrayList`;
  #L2b9a40.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b9a46.  v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L2b9a4a.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9a4e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b9a54.  v1:= temp @kind object;
  #L2b9a56.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b9a5c.  return @kind void;
}
procedure `boolean` `contains`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.contains:(Lcom/github/mikephil/charting/data/Entry;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9a70.  v0:= 0I;
  #L2b9a72.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryCount:()I` @kind virtual;
  #L2b9a78.  v1:= temp;
  #L2b9a7a.  if v0 >= v1 then goto L2b9a9c;
  #L2b9a7e.  call temp:= `getEntryForIndex`(v2, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9a84.  v1:= temp @kind object;
  #L2b9a86.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2b9a8c.  v1:= temp;
  #L2b9a8e.  if v1 == 0 then goto L2b9a96;
  #L2b9a92.  v1:= 1I;
  #L2b9a94.  return v1;
  #L2b9a96.  v0:= v0 + 1;
  #L2b9a9a.  goto L2b9a72;
  #L2b9a9c.  v1:= 0I;
  #L2b9a9e.  goto L2b9a94;
}
procedure `com.github.mikephil.charting.components.YAxis$AxisDependency` `getAxisDependency`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ab0.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L2b9ab4.  return v0 @kind object;
}
procedure `int` `getColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9ac8.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9acc.  v1:= 0I;
  #L2b9ace.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b9ad4.  v0:= temp @kind object;
  #L2b9ad6.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b9ada.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b9ae0.  v0:= temp;
  #L2b9ae2.  return v0;
}
procedure `int` `getColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9af4.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9af8.  v1:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9afc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b9b02.  v1:= temp;
  #L2b9b04.  v1:= v3 %% v1 @kind int;
  #L2b9b08.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b9b0e.  v0:= temp @kind object;
  #L2b9b10.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b9b14.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b9b1a.  v0:= temp;
  #L2b9b1c.  return v0;
}
procedure `java.util.List` `getColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9b30.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9b34.  return v0 @kind object;
}
procedure `int` `getIndexInEntries`(`com.github.mikephil.charting.data.BaseDataSet` v3 @kind this, `int` v4 @name `xIndex`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getIndexInEntries:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b9b48.  v0:= 0I;
  #L2b9b4a.  call temp:= `getEntryCount`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryCount:()I` @kind virtual;
  #L2b9b50.  v1:= temp;
  #L2b9b52.  if v0 >= v1 then goto L2b9b78;
  #L2b9b56.  v1:= (`float`) v4 @kind i2f;
  #L2b9b58.  call temp:= `getEntryForIndex`(v3, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9b5e.  v2:= temp @kind object;
  #L2b9b60.  call temp:= `getX`(v2) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L2b9b66.  v2:= temp;
  #L2b9b68.  v1:= fcmpl(v1, v2);
  #L2b9b6c.  if v1 != 0 then goto L2b9b72;
  #L2b9b70.  return v0;
  #L2b9b72.  v0:= v0 + 1;
  #L2b9b76.  goto L2b9b4a;
  #L2b9b78.  v0:= -1I;
  #L2b9b7a.  goto L2b9b70;
}
procedure `java.lang.String` `getLabel`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getLabel:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9b8c.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` @kind object;
  #L2b9b90.  return v0 @kind object;
}
procedure `java.util.List` `getValueColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ba4.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9ba8.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.formatter.ValueFormatter` `getValueFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/ValueFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9bbc.  call temp:= `needsFormatter`(v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.needsFormatter:()Z` @kind virtual;
  #L2b9bc2.  v0:= temp;
  #L2b9bc4.  if v0 == 0 then goto L2b9bd6;
  #L2b9bc8.  v0:= new `com.github.mikephil.charting.formatter.DefaultValueFormatter`;
  #L2b9bcc.  v1:= 1I;
  #L2b9bce.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.<init>:(I)V` @kind direct;
  #L2b9bd4.  return v0 @kind object;
  #L2b9bd6.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L2b9bda.  goto L2b9bd4;
}
procedure `int` `getValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9bec.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9bf0.  v1:= 0I;
  #L2b9bf2.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b9bf8.  v0:= temp @kind object;
  #L2b9bfa.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b9bfe.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b9c04.  v0:= temp;
  #L2b9c06.  return v0;
}
procedure `int` `getValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9c18.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9c1c.  v1:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9c20.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b9c26.  v1:= temp;
  #L2b9c28.  v1:= v3 %% v1 @kind int;
  #L2b9c2c.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L2b9c32.  v0:= temp @kind object;
  #L2b9c34.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L2b9c38.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L2b9c3e.  v0:= temp;
  #L2b9c40.  return v0;
}
procedure `float` `getValueTextSize`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTextSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9c54.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float`;
  #L2b9c58.  return v0;
}
procedure `android.graphics.Typeface` `getValueTypeface`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getValueTypeface:()Landroid/graphics/Typeface;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9c6c.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @type ^`android.graphics.Typeface` @kind object;
  #L2b9c70.  return v0 @kind object;
}
procedure `boolean` `isDrawValuesEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isDrawValuesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9c84.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` @kind boolean;
  #L2b9c88.  return v0;
}
procedure `boolean` `isHighlightEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isHighlightEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9c9c.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` @kind boolean;
  #L2b9ca0.  return v0;
}
procedure `boolean` `isVisible`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.isVisible:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9cb4.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` @kind boolean;
  #L2b9cb8.  return v0;
}
procedure `boolean` `needsFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.needsFormatter:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9ccc.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` @kind object;
  #L2b9cd0.  if v0 != 0 then goto L2b9cd8;
  #L2b9cd4.  v0:= 1I;
  #L2b9cd6.  return v0;
  #L2b9cd8.  v0:= 0I;
  #L2b9cda.  goto L2b9cd6;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;

  #L2b9cec.  call `calcMinMax`(v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.calcMinMax:()V` @kind virtual;
  #L2b9cf2.  return @kind void;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9d04.  call temp:= `getEntryForIndex`(v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9d0a.  v0:= temp @kind object;
  #L2b9d0c.  call temp:= `removeEntry`(v2, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind virtual;
  #L2b9d12.  v1:= temp;
  #L2b9d14.  return v1;
}
procedure `boolean` `removeEntryByXPos`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `float` v3 @name `xPos`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntryByXPos:(F)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9d28.  call temp:= `getEntryForXPos`(v2, v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForXPos:(F)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9d2e.  v0:= temp @kind object;
  #L2b9d30.  call temp:= `removeEntry`(v2, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind virtual;
  #L2b9d36.  v1:= temp;
  #L2b9d38.  return v1;
}
procedure `boolean` `removeFirst`(`com.github.mikephil.charting.data.BaseDataSet` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeFirst:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b9d4c.  v1:= 0I;
  #L2b9d4e.  call temp:= `getEntryCount`(v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryCount:()I` @kind virtual;
  #L2b9d54.  v2:= temp;
  #L2b9d56.  if v2 <= 0 then goto L2b9d6a;
  #L2b9d5a.  call temp:= `getEntryForIndex`(v3, v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9d60.  v0:= temp @kind object;
  #L2b9d62.  call temp:= `removeEntry`(v3, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind virtual;
  #L2b9d68.  v1:= temp;
  #L2b9d6a.  return v1;
}
procedure `boolean` `removeLast`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeLast:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9d7c.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryCount:()I` @kind virtual;
  #L2b9d82.  v1:= temp;
  #L2b9d84.  if v1 <= 0 then goto L2b9da6;
  #L2b9d88.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryCount:()I` @kind virtual;
  #L2b9d8e.  v1:= temp;
  #L2b9d90.  v1:= v1 + -1;
  #L2b9d94.  call temp:= `getEntryForIndex`(v2, v1) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L2b9d9a.  v0:= temp @kind object;
  #L2b9d9c.  call temp:= `removeEntry`(v2, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind virtual;
  #L2b9da2.  v1:= temp;
  #L2b9da4.  return v1;
  #L2b9da6.  v1:= 0I;
  #L2b9da8.  goto L2b9da4;
}
procedure `void` `resetColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9dbc.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9dc0.  if v0 != 0 then goto L2b9dd2;
  #L2b9dc4.  v0:= new `java.util.ArrayList`;
  #L2b9dc8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b9dce.  v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L2b9dd2.  v0:= v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9dd6.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2b9ddc.  return @kind void;
}
procedure `void` `setAxisDependency`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v1 @kind object @name `dependency`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setAxisDependency:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;

  #L2b9df0.  v0.`com.github.mikephil.charting.data.BaseDataSet.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v1 @kind object;
  #L2b9df4.  return @kind void;
}
procedure `void` `setColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `color`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9e08.  call `resetColors`(v2) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @kind virtual;
  #L2b9e0e.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9e12.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b9e18.  v1:= temp @kind object;
  #L2b9e1a.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b9e20.  return @kind void;
}
procedure `void` `setColor`(`com.github.mikephil.charting.data.BaseDataSet` v3 @kind this, `int` v4 @name `color`, `int` v5 @name `alpha`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b9e34.  call temp:= `red`(v4) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2b9e3a.  v0:= temp;
  #L2b9e3c.  call temp:= `green`(v4) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2b9e42.  v1:= temp;
  #L2b9e44.  call temp:= `blue`(v4) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2b9e4a.  v2:= temp;
  #L2b9e4c.  call temp:= `argb`(v5, v0, v1, v2) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2b9e52.  v0:= temp;
  #L2b9e54.  call `setColor`(v3, v0) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColor:(I)V` @kind virtual;
  #L2b9e5a.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2b9e6c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v1 @kind object;
  #L2b9e70.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `int`[] v2 @kind object @name `colors`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b9e84.  call temp:= `createColors`(v2) @signature `Lcom/github/mikephil/charting/utils/ColorTemplate;.createColors:([I)Ljava/util/List;` @kind static;
  #L2b9e8a.  v0:= temp @kind object;
  #L2b9e8c.  v1.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v0 @kind object;
  #L2b9e90.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v6 @kind this, `int`[] v7 @kind object @name `colors`, `int` v8 @name `alpha`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b9ea4.  call `resetColors`(v6) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.resetColors:()V` @kind virtual;
  #L2b9eaa.  v2:= length @variable v7;
  #L2b9eac.  v1:= 0I;
  #L2b9eae.  if v1 >= v2 then goto L2b9ee2;
  #L2b9eb2.  v0:= v7[v1];
  #L2b9eb6.  call temp:= `red`(v0) @signature `Landroid/graphics/Color;.red:(I)I` @kind static;
  #L2b9ebc.  v3:= temp;
  #L2b9ebe.  call temp:= `green`(v0) @signature `Landroid/graphics/Color;.green:(I)I` @kind static;
  #L2b9ec4.  v4:= temp;
  #L2b9ec6.  call temp:= `blue`(v0) @signature `Landroid/graphics/Color;.blue:(I)I` @kind static;
  #L2b9ecc.  v5:= temp;
  #L2b9ece.  call temp:= `argb`(v8, v3, v4, v5) @signature `Landroid/graphics/Color;.argb:(IIII)I` @kind static;
  #L2b9ed4.  v3:= temp;
  #L2b9ed6.  call `addColor`(v6, v3) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.addColor:(I)V` @kind virtual;
  #L2b9edc.  v1:= v1 + 1;
  #L2b9ee0.  goto L2b9eae;
  #L2b9ee2.  return @kind void;
}
procedure `void` `setColors`(`com.github.mikephil.charting.data.BaseDataSet` v5 @kind this, `int`[] v6 @kind object @name `colors`, `android.content.Context` v7 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setColors:([ILandroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b9ef4.  v1:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9ef8.  if v1 != 0 then goto L2b9f0a;
  #L2b9efc.  v1:= new `java.util.ArrayList`;
  #L2b9f00.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b9f06.  v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` := v1 @kind object;
  #L2b9f0a.  v1:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9f0e.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2b9f14.  v2:= length @variable v6;
  #L2b9f16.  v1:= 0I;
  #L2b9f18.  if v1 >= v2 then goto L2b9f48;
  #L2b9f1c.  v0:= v6[v1];
  #L2b9f20.  v3:= v5.`com.github.mikephil.charting.data.BaseDataSet.mColors` @type ^`java.util.List` @kind object;
  #L2b9f24.  call temp:= `getResources`(v7) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L2b9f2a.  v4:= temp @kind object;
  #L2b9f2c.  call temp:= `getColor`(v4, v0) @signature `Landroid/content/res/Resources;.getColor:(I)I` @kind virtual;
  #L2b9f32.  v4:= temp;
  #L2b9f34.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b9f3a.  v4:= temp @kind object;
  #L2b9f3c.  call temp:= `add`(v3, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b9f42.  v1:= v1 + 1;
  #L2b9f46.  goto L2b9f18;
  #L2b9f48.  return @kind void;
}
procedure `void` `setDrawValues`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setDrawValues:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b9f5c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mDrawValues` @type ^`boolean` := v1 @kind boolean;
  #L2b9f60.  return @kind void;
}
procedure `void` `setHighlightEnabled`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setHighlightEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b9f74.  v0.`com.github.mikephil.charting.data.BaseDataSet.mHighlightEnabled` @type ^`boolean` := v1 @kind boolean;
  #L2b9f78.  return @kind void;
}
procedure `void` `setLabel`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.lang.String` v1 @kind object @name `label`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setLabel:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;

  #L2b9f8c.  v0.`com.github.mikephil.charting.data.BaseDataSet.mLabel` @type ^`java.lang.String` := v1 @kind object;
  #L2b9f90.  return @kind void;
}
procedure `void` `setValueFormatter`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `com.github.mikephil.charting.formatter.ValueFormatter` v1 @kind object @name `f`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/ValueFormatter;)V` @AccessFlag PUBLIC {
    temp;

  #L2b9fa4.  if v1 != 0 then goto L2b9faa;
  #L2b9fa8.  return @kind void;
  #L2b9faa.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueFormatter` @type ^`com.github.mikephil.charting.formatter.ValueFormatter` := v1 @kind object;
  #L2b9fae.  goto L2b9fa8;
}
procedure `void` `setValueTextColor`(`com.github.mikephil.charting.data.BaseDataSet` v2 @kind this, `int` v3 @name `color`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b9fc0.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9fc4.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2b9fca.  v0:= v2.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` @kind object;
  #L2b9fce.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b9fd4.  v1:= temp @kind object;
  #L2b9fd6.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b9fdc.  return @kind void;
}
procedure `void` `setValueTextColors`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L2b9ff0.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueColors` @type ^`java.util.List` := v1 @kind object;
  #L2b9ff4.  return @kind void;
}
procedure `void` `setValueTextSize`(`com.github.mikephil.charting.data.BaseDataSet` v1 @kind this, `float` v2 @name `size`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba008.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2ba00e.  v0:= temp;
  #L2ba010.  v1.`com.github.mikephil.charting.data.BaseDataSet.mValueTextSize` @type ^`float` := v0;
  #L2ba014.  return @kind void;
}
procedure `void` `setValueTypeface`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `android.graphics.Typeface` v1 @kind object @name `tf`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setValueTypeface:(Landroid/graphics/Typeface;)V` @AccessFlag PUBLIC {
    temp;

  #L2ba028.  v0.`com.github.mikephil.charting.data.BaseDataSet.mValueTypeface` @type ^`android.graphics.Typeface` := v1 @kind object;
  #L2ba02c.  return @kind void;
}
procedure `void` `setVisible`(`com.github.mikephil.charting.data.BaseDataSet` v0 @kind this, `boolean` v1 @name `visible`) @signature `Lcom/github/mikephil/charting/data/BaseDataSet;.setVisible:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2ba040.  v0.`com.github.mikephil.charting.data.BaseDataSet.mVisible` @type ^`boolean` := v1 @kind boolean;
  #L2ba044.  return @kind void;
}
