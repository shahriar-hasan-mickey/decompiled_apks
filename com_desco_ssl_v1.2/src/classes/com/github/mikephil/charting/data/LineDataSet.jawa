record `com.github.mikephil.charting.data.LineDataSet` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.LineRadarDataSet` @kind class, `com.github.mikephil.charting.interfaces.datasets.ILineDataSet` @kind interface {
  `int` `com.github.mikephil.charting.data.LineDataSet.mCircleColorHole` @AccessFlag PRIVATE;
  `java.util.List` `com.github.mikephil.charting.data.LineDataSet.mCircleColors` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.formatter.FillFormatter` `com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.data.LineDataSet$Mode` `com.github.mikephil.charting.data.LineDataSet.mMode` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.LineDataSet` v4 @kind this, `java.util.List` v5 @kind object, `java.lang.String` v6 @kind object @name `label`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36a81c.  v2:= 0I;
  #L36a81e.  v1:= 1I;
  #L36a820.  call `<init>`(v4, v5, v6) @signature `Lcom/github/mikephil/charting/data/LineRadarDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L36a826.  v0:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36a82a.  v4.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L36a82e.  v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v2 @kind object;
  #L36a832.  v0:= -1I;
  #L36a834.  v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColorHole` @type ^`int` := v0;
  #L36a838.  v0:= 8.0F;
  #L36a83c.  v4.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v0;
  #L36a840.  v0:= 4.0F;
  #L36a844.  v4.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v0;
  #L36a848.  v0:= 1045220557I;
  #L36a84e.  v4.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float` := v0;
  #L36a852.  v4.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v2 @kind object;
  #L36a856.  v0:= new `com.github.mikephil.charting.formatter.DefaultFillFormatter`;
  #L36a85a.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/formatter/DefaultFillFormatter;.<init>:()V` @kind direct;
  #L36a860.  v4.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.FillFormatter` := v0 @kind object;
  #L36a864.  v4.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v1 @kind boolean;
  #L36a868.  v4.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v1 @kind boolean;
  #L36a86c.  v0:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a870.  if v0 != 0 then goto L36a882;
  #L36a874.  v0:= new `java.util.ArrayList`;
  #L36a878.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36a87e.  v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L36a882.  v0:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a886.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36a88c.  v0:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a890.  v1:= 140I;
  #L36a894.  v2:= 234I;
  #L36a898.  v3:= 255I;
  #L36a89c.  call temp:= `rgb`(v1, v2, v3) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L36a8a2.  v1:= temp;
  #L36a8a4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L36a8aa.  v1:= temp @kind object;
  #L36a8ac.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36a8b2.  return @kind void;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`(`com.github.mikephil.charting.data.LineDataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L36a8c4.  v2:= new `java.util.ArrayList`;
  #L36a8c8.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36a8ce.  v1:= 0I;
  #L36a8d0.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mValues` @type ^`java.util.List` @kind object;
  #L36a8d4.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36a8da.  v3:= temp;
  #L36a8dc.  if v1 >= v3 then goto L36a904;
  #L36a8e0.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mValues` @type ^`java.util.List` @kind object;
  #L36a8e4.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36a8ea.  v3:= temp @kind object;
  #L36a8ec.  v3:= (`com.github.mikephil.charting.data.Entry`) v3 @kind object;
  #L36a8f0.  call temp:= `copy`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.copy:()Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L36a8f6.  v3:= temp @kind object;
  #L36a8f8.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36a8fe.  v1:= v1 + 1;
  #L36a902.  goto L36a8d0;
  #L36a904.  v0:= new `com.github.mikephil.charting.data.LineDataSet`;
  #L36a908.  call temp:= `getLabel`(v4) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L36a90e.  v3:= temp @kind object;
  #L36a910.  call `<init>`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L36a916.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36a91a.  v0.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v3 @kind object;
  #L36a91e.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mColors` @type ^`java.util.List` @kind object;
  #L36a922.  v0.`com.github.mikephil.charting.data.LineDataSet.mColors` @type ^`java.util.List` := v3 @kind object;
  #L36a926.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float`;
  #L36a92a.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v3;
  #L36a92e.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float`;
  #L36a932.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v3;
  #L36a936.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a93a.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v3 @kind object;
  #L36a93e.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L36a942.  v0.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v3 @kind object;
  #L36a946.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` @kind boolean;
  #L36a94a.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v3 @kind boolean;
  #L36a94e.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` @kind boolean;
  #L36a952.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v3 @kind boolean;
  #L36a956.  v3:= v4.`com.github.mikephil.charting.data.LineDataSet.mHighLightColor` @type ^`int`;
  #L36a95a.  v0.`com.github.mikephil.charting.data.LineDataSet.mHighLightColor` @type ^`int` := v3;
  #L36a95e.  return v0 @kind object;
}
procedure `void` `disableDashedLine`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.disableDashedLine:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36a970.  v0:= 0I;
  #L36a972.  v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L36a976.  return @kind void;
}
procedure `void` `enableDashedLine`(`com.github.mikephil.charting.data.LineDataSet` v3 @kind this, `float` v4 @name `lineLength`, `float` v5 @name `spaceLength`, `float` v6 @name `phase`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.enableDashedLine:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L36a988.  v0:= new `android.graphics.DashPathEffect`;
  #L36a98c.  v1:= 2I;
  #L36a98e.  v1:= new `float`[v1];
  #L36a992.  v2:= 0I;
  #L36a994.  v1[v2]:= v4;
  #L36a998.  v2:= 1I;
  #L36a99a.  v1[v2]:= v5;
  #L36a99e.  call `<init>`(v0, v1, v6) @signature `Landroid/graphics/DashPathEffect;.<init>:([FF)V` @kind direct;
  #L36a9a4.  v3.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L36a9a8.  return @kind void;
}
procedure `int` `getCircleColor`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColor:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36a9bc.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a9c0.  v1:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a9c4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36a9ca.  v1:= temp;
  #L36a9cc.  v1:= v3 %% v1 @kind int;
  #L36a9d0.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L36a9d6.  v0:= temp @kind object;
  #L36a9d8.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L36a9dc.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L36a9e2.  v0:= temp;
  #L36a9e4.  return v0;
}
procedure `int` `getCircleColorCount`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColorCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36a9f8.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36a9fc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L36aa02.  v0:= temp;
  #L36aa04.  return v0;
}
procedure `java.util.List` `getCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleColors:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa18.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36aa1c.  return v0 @kind object;
}
procedure `int` `getCircleHoleColor`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleHoleColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa30.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColorHole` @type ^`int`;
  #L36aa34.  return v0;
}
procedure `float` `getCircleHoleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleHoleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa48.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float`;
  #L36aa4c.  return v0;
}
procedure `float` `getCircleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleRadius:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa60.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float`;
  #L36aa64.  return v0;
}
procedure `float` `getCircleSize`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleSize:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa78.  call temp:= `getCircleRadius`(v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCircleRadius:()F` @kind virtual;
  #L36aa7e.  v0:= temp;
  #L36aa80.  return v0;
}
procedure `float` `getCubicIntensity`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getCubicIntensity:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aa94.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float`;
  #L36aa98.  return v0;
}
procedure `android.graphics.DashPathEffect` `getDashPathEffect`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getDashPathEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aaac.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L36aab0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.formatter.FillFormatter` `getFillFormatter`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getFillFormatter:()Lcom/github/mikephil/charting/formatter/FillFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aac4.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.FillFormatter` @kind object;
  #L36aac8.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode` `getMode`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.getMode:()Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aadc.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36aae0.  return v0 @kind object;
}
procedure `boolean` `isDashedLineEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDashedLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36aaf4.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L36aaf8.  if v0 != 0 then goto L36ab00;
  #L36aafc.  v0:= 0I;
  #L36aafe.  return v0;
  #L36ab00.  v0:= 1I;
  #L36ab02.  goto L36aafe;
}
procedure `boolean` `isDrawCircleHoleEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCircleHoleEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ab14.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` @kind boolean;
  #L36ab18.  return v0;
}
procedure `boolean` `isDrawCirclesEnabled`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCirclesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ab2c.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` @kind boolean;
  #L36ab30.  return v0;
}
procedure `boolean` `isDrawCubicEnabled`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawCubicEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36ab44.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36ab48.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36ab4c.  if v0 != v1 then goto L36ab54;
  #L36ab50.  v0:= 1I;
  #L36ab52.  return v0;
  #L36ab54.  v0:= 0I;
  #L36ab56.  goto L36ab52;
}
procedure `boolean` `isDrawSteppedEnabled`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.isDrawSteppedEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36ab68.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36ab6c.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L36ab70.  if v0 != v1 then goto L36ab78;
  #L36ab74.  v0:= 1I;
  #L36ab76.  return v0;
  #L36ab78.  v0:= 0I;
  #L36ab7a.  goto L36ab76;
}
procedure `void` `resetCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.resetCircleColors:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ab8c.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36ab90.  if v0 != 0 then goto L36aba2;
  #L36ab94.  v0:= new `java.util.ArrayList`;
  #L36ab98.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36ab9e.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L36aba2.  v0:= v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36aba6.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36abac.  return @kind void;
}
procedure `void` `setCircleColor`(`com.github.mikephil.charting.data.LineDataSet` v2 @kind this, `int` v3 @name `color`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L36abc0.  call `resetCircleColors`(v2) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.resetCircleColors:()V` @kind virtual;
  #L36abc6.  v0:= v2.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36abca.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L36abd0.  v1:= temp @kind object;
  #L36abd2.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36abd8.  return @kind void;
}
procedure `void` `setCircleColorHole`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `int` v1 @name `color`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColorHole:(I)V` @AccessFlag PUBLIC {
    temp;

  #L36abec.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleColorHole` @type ^`int` := v1;
  #L36abf0.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L36ac04.  v0.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v1 @kind object;
  #L36ac08.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `int`[] v2 @kind object @name `colors`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:([I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ac1c.  call temp:= `createColors`(v2) @signature `Lcom/github/mikephil/charting/utils/ColorTemplate;.createColors:([I)Ljava/util/List;` @kind static;
  #L36ac22.  v0:= temp @kind object;
  #L36ac24.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L36ac28.  return @kind void;
}
procedure `void` `setCircleColors`(`com.github.mikephil.charting.data.LineDataSet` v5 @kind this, `int`[] v6 @kind object @name `colors`, `android.content.Context` v7 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleColors:([ILandroid/content/Context;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L36ac3c.  v0:= v5.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` @kind object;
  #L36ac40.  if v0 != 0 then goto L36ac4e;
  #L36ac44.  v0:= new `java.util.ArrayList`;
  #L36ac48.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L36ac4e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L36ac54.  v3:= length @variable v6;
  #L36ac56.  v2:= 0I;
  #L36ac58.  if v2 >= v3 then goto L36ac84;
  #L36ac5c.  v1:= v6[v2];
  #L36ac60.  call temp:= `getResources`(v7) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L36ac66.  v4:= temp @kind object;
  #L36ac68.  call temp:= `getColor`(v4, v1) @signature `Landroid/content/res/Resources;.getColor:(I)I` @kind virtual;
  #L36ac6e.  v4:= temp;
  #L36ac70.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L36ac76.  v4:= temp @kind object;
  #L36ac78.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L36ac7e.  v2:= v2 + 1;
  #L36ac82.  goto L36ac58;
  #L36ac84.  v5.`com.github.mikephil.charting.data.LineDataSet.mCircleColors` @type ^`java.util.List` := v0 @kind object;
  #L36ac88.  return @kind void;
}
procedure `void` `setCircleHoleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `float` v2 @name `holeRadius`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleHoleRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ac9c.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L36aca2.  v0:= temp;
  #L36aca4.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleHoleRadius` @type ^`float` := v0;
  #L36aca8.  return @kind void;
}
procedure `void` `setCircleRadius`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `float` v2 @name `radius`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleRadius:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36acbc.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L36acc2.  v0:= temp;
  #L36acc4.  v1.`com.github.mikephil.charting.data.LineDataSet.mCircleRadius` @type ^`float` := v0;
  #L36acc8.  return @kind void;
}
procedure `void` `setCircleSize`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `float` v1 @name `size`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleSize:(F)V` @AccessFlag PUBLIC {
    temp;

  #L36acdc.  call `setCircleRadius`(v0, v1) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCircleRadius:(F)V` @kind virtual;
  #L36ace2.  return @kind void;
}
procedure `void` `setCubicIntensity`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `float` v2 @name `intensity`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setCubicIntensity:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36acf4.  v0:= 1.0F;
  #L36acf8.  v0:= fcmpl(v2, v0);
  #L36acfc.  if v0 <= 0 then goto L36ad04;
  #L36ad00.  v2:= 1.0F;
  #L36ad04.  v0:= 1028443341I;
  #L36ad0a.  v0:= fcmpg(v2, v0);
  #L36ad0e.  if v0 >= 0 then goto L36ad18;
  #L36ad12.  v2:= 1028443341I;
  #L36ad18.  v1.`com.github.mikephil.charting.data.LineDataSet.mCubicIntensity` @type ^`float` := v2;
  #L36ad1c.  return @kind void;
}
procedure `void` `setDrawCircleHole`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setDrawCircleHole:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L36ad30.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircleHole` @type ^`boolean` := v1 @kind boolean;
  #L36ad34.  return @kind void;
}
procedure `void` `setDrawCircles`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setDrawCircles:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L36ad48.  v0.`com.github.mikephil.charting.data.LineDataSet.mDrawCircles` @type ^`boolean` := v1 @kind boolean;
  #L36ad4c.  return @kind void;
}
procedure `void` `setFillFormatter`(`com.github.mikephil.charting.data.LineDataSet` v1 @kind this, `com.github.mikephil.charting.formatter.FillFormatter` v2 @kind object @name `formatter`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setFillFormatter:(Lcom/github/mikephil/charting/formatter/FillFormatter;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L36ad60.  if v2 != 0 then goto L36ad74;
  #L36ad64.  v0:= new `com.github.mikephil.charting.formatter.DefaultFillFormatter`;
  #L36ad68.  call `<init>`(v0) @signature `Lcom/github/mikephil/charting/formatter/DefaultFillFormatter;.<init>:()V` @kind direct;
  #L36ad6e.  v1.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.FillFormatter` := v0 @kind object;
  #L36ad72.  return @kind void;
  #L36ad74.  v1.`com.github.mikephil.charting.data.LineDataSet.mFillFormatter` @type ^`com.github.mikephil.charting.formatter.FillFormatter` := v2 @kind object;
  #L36ad78.  goto L36ad72;
}
procedure `void` `setMode`(`com.github.mikephil.charting.data.LineDataSet` v0 @kind this, `com.github.mikephil.charting.data.LineDataSet$Mode` v1 @kind object @name `mode`) @signature `Lcom/github/mikephil/charting/data/LineDataSet;.setMode:(Lcom/github/mikephil/charting/data/LineDataSet$Mode;)V` @AccessFlag PUBLIC {
    temp;

  #L36ad8c.  v0.`com.github.mikephil.charting.data.LineDataSet.mMode` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v1 @kind object;
  #L36ad90.  return @kind void;
}
