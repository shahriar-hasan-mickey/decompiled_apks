record `com.github.mikephil.charting.data.filter.Approximator$Line` @kind class @AccessFlag  {
  `float` `com.github.mikephil.charting.data.filter.Approximator$Line.dx` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.filter.Approximator$Line.dy` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.filter.Approximator$Line.exsy` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.filter.Approximator$Line.length` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.data.filter.Approximator$Line.points` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.filter.Approximator$Line.sxey` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.data.filter.Approximator` `com.github.mikephil.charting.data.filter.Approximator$Line.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.filter.Approximator$Line` v3 @kind this, `com.github.mikephil.charting.data.filter.Approximator` v4 @kind object, `float` v5 @name `x1`, `float` v6 @name `y1`, `float` v7 @name `x2`, `float` v8 @name `y2`) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.<init>:(Lcom/github/mikephil/charting/data/filter/Approximator;FFFF)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L1d8078.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.this$0` @type ^`com.github.mikephil.charting.data.filter.Approximator` := v4 @kind object;
  #L1d807c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d8082.  v0:= v5 - v7 @kind float;
  #L1d8086.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dx` @type ^`float` := v0;
  #L1d808a.  v0:= v6 - v8 @kind float;
  #L1d808e.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dy` @type ^`float` := v0;
  #L1d8092.  v0:= v5 * v8 @kind float;
  #L1d8096.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.sxey` @type ^`float` := v0;
  #L1d809a.  v0:= v7 * v6 @kind float;
  #L1d809e.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.exsy` @type ^`float` := v0;
  #L1d80a2.  v0:= v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dx` @type ^`float`;
  #L1d80a6.  v1:= v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dx` @type ^`float`;
  #L1d80aa.  v0:= v0 * v1 @kind float;
  #L1d80ac.  v1:= v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dy` @type ^`float`;
  #L1d80b0.  v2:= v3.`com.github.mikephil.charting.data.filter.Approximator$Line.dy` @type ^`float`;
  #L1d80b4.  v1:= v1 * v2 @kind float;
  #L1d80b6.  v0:= v0 + v1 @kind float;
  #L1d80b8.  v0:= (`double`) v0 @kind f2d;
  #L1d80ba.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L1d80c0.  v0:= temp @kind wide;
  #L1d80c2.  v0:= (`float`) v0 @kind d2f;
  #L1d80c4.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.length` @type ^`float` := v0;
  #L1d80c8.  v0:= 4I;
  #L1d80ca.  v0:= new `float`[v0];
  #L1d80ce.  v1:= 0I;
  #L1d80d0.  v0[v1]:= v5;
  #L1d80d4.  v1:= 1I;
  #L1d80d6.  v0[v1]:= v6;
  #L1d80da.  v1:= 2I;
  #L1d80dc.  v0[v1]:= v7;
  #L1d80e0.  v1:= 3I;
  #L1d80e2.  v0[v1]:= v8;
  #L1d80e6.  v3.`com.github.mikephil.charting.data.filter.Approximator$Line.points` @type ^`float`[] := v0 @kind object;
  #L1d80ea.  return @kind void;
}
procedure `float` `distance`(`com.github.mikephil.charting.data.filter.Approximator$Line` v2 @kind this, `float` v3 @name `x`, `float` v4 @name `y`) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.distance:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d80fc.  v0:= v2.`com.github.mikephil.charting.data.filter.Approximator$Line.dy` @type ^`float`;
  #L1d8100.  v0:= v0 * v3 @kind float;
  #L1d8102.  v1:= v2.`com.github.mikephil.charting.data.filter.Approximator$Line.dx` @type ^`float`;
  #L1d8106.  v1:= v1 * v4 @kind float;
  #L1d8108.  v0:= v0 - v1 @kind float;
  #L1d810a.  v1:= v2.`com.github.mikephil.charting.data.filter.Approximator$Line.sxey` @type ^`float`;
  #L1d810e.  v0:= v0 + v1 @kind float;
  #L1d8110.  v1:= v2.`com.github.mikephil.charting.data.filter.Approximator$Line.exsy` @type ^`float`;
  #L1d8114.  v0:= v0 - v1 @kind float;
  #L1d8116.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1d811c.  v0:= temp;
  #L1d811e.  v1:= v2.`com.github.mikephil.charting.data.filter.Approximator$Line.length` @type ^`float`;
  #L1d8122.  v0:= v0 / v1 @kind float;
  #L1d8124.  return v0;
}
procedure `float`[] `getPoints`(`com.github.mikephil.charting.data.filter.Approximator$Line` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/filter/Approximator$Line;.getPoints:()[F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d8138.  v0:= v1.`com.github.mikephil.charting.data.filter.Approximator$Line.points` @type ^`float`[] @kind object;
  #L1d813c.  return v0 @kind object;
}
