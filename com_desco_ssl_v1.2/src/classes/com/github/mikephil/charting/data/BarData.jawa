record `com.github.mikephil.charting.data.BarData` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` @kind class {
  `float` `com.github.mikephil.charting.data.BarData.mBarWidth` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32bad8.  call `<init>`(v1) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:()V` @kind direct;
  #L32bade.  v0:= 1.0F;
  #L32bae2.  v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v0;
  #L32bae6.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32baf8.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:(Ljava/util/List;)V` @kind direct;
  #L32bafe.  v0:= 1.0F;
  #L32bb02.  v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v0;
  #L32bb06.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.BarData` v1 @kind this, `com.github.mikephil.charting.interfaces.datasets.IBarDataSet`[] v2 @kind object @name `dataSets`) @signature `Lcom/github/mikephil/charting/data/BarData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32bb18.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;)V` @kind direct;
  #L32bb1e.  v0:= 1.0F;
  #L32bb22.  v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v0;
  #L32bb26.  return @kind void;
}
procedure `float` `getBarWidth`(`com.github.mikephil.charting.data.BarData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/BarData;.getBarWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32bb38.  v0:= v1.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L32bb3c.  return v0;
}
procedure `float` `getGroupWidth`(`com.github.mikephil.charting.data.BarData` v2 @kind this, `float` v3 @name `groupSpace`, `float` v4 @name `barSpace`) @signature `Lcom/github/mikephil/charting/data/BarData;.getGroupWidth:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32bb50.  v0:= v2.`com.github.mikephil.charting.data.BarData.mDataSets` @type ^`java.util.List` @kind object;
  #L32bb54.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bb5a.  v0:= temp;
  #L32bb5c.  v0:= (`float`) v0 @kind i2f;
  #L32bb5e.  v1:= v2.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L32bb62.  v1:= v1 + v4 @kind float;
  #L32bb64.  v0:= v0 * v1 @kind float;
  #L32bb66.  v0:= v0 + v3 @kind float;
  #L32bb68.  return v0;
}
procedure `void` `groupBars`(`com.github.mikephil.charting.data.BarData` v21 @kind this, `float` v22 @name `fromX`, `float` v23 @name `groupSpace`, `float` v24 @name `barSpace`) @signature `Lcom/github/mikephil/charting/data/BarData;.groupBars:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;

  #L32bb7c.  v0:= v21 @kind object;
  #L32bb80.  v0:= v0.`com.github.mikephil.charting.data.BarData.mDataSets` @type ^`java.util.List` @kind object;
  #L32bb84.  v19:= v0 @kind object;
  #L32bb88.  call temp:= `size`(v19) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bb8e.  v16:= temp;
  #L32bb90.  v19:= 1I;
  #L32bb94.  v0:= v16;
  #L32bb98.  v1:= v19;
  #L32bb9c.  if v0 > v1 then goto L32bbb0;
  #L32bba0.  v19:= new `java.lang.RuntimeException`;
  #L32bba4.  v20:= "BarData needs to hold at least 2 BarDataSets to allow grouping." @kind object;
  #L32bba8.  call `<init>`(v19, v20) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L32bbae.  throw v19;
  #L32bbb0.  call temp:= `getMaxEntryCountSet`(v21) @signature `Lcom/github/mikephil/charting/data/BarData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L32bbb6.  v13:= temp @kind object;
  #L32bbb8.  v13:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v13 @kind object;
  #L32bbbc.  call temp:= `getEntryCount`(v13) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;.getEntryCount:()I` @kind interface;
  #L32bbc2.  v14:= temp;
  #L32bbc4.  v19:= 2.0F;
  #L32bbc8.  v8:= v23 / v19 @kind float;
  #L32bbcc.  v19:= 2.0F;
  #L32bbd0.  v3:= v24 / v19 @kind float;
  #L32bbd4.  v0:= v21 @kind object;
  #L32bbd8.  v0:= v0.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float`;
  #L32bbdc.  v19:= v0;
  #L32bbe0.  v20:= 2.0F;
  #L32bbe4.  v4:= v19 / v20 @kind float;
  #L32bbe8.  v0:= v21 @kind object;
  #L32bbec.  v1:= v23;
  #L32bbf0.  v2:= v24;
  #L32bbf4.  call temp:= `getGroupWidth`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/BarData;.getGroupWidth:(FF)F` @kind virtual;
  #L32bbfa.  v11:= temp;
  #L32bbfc.  v9:= 0I;
  #L32bbfe.  if v9 >= v14 then goto L32bcb6;
  #L32bc02.  v18:= v22;
  #L32bc06.  v22:= v22 + v8 @kind float;
  #L32bc0a.  v0:= v21 @kind object;
  #L32bc0e.  v0:= v0.`com.github.mikephil.charting.data.BarData.mDataSets` @type ^`java.util.List` @kind object;
  #L32bc12.  v19:= v0 @kind object;
  #L32bc16.  call temp:= `size`(v19) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L32bc1c.  v17:= temp;
  #L32bc1e.  v12:= 0I;
  #L32bc20.  v0:= v17;
  #L32bc24.  if v12 >= v0 then goto L32bc84;
  #L32bc28.  v0:= v21 @kind object;
  #L32bc2c.  v0:= v0.`com.github.mikephil.charting.data.BarData.mDataSets` @type ^`java.util.List` @kind object;
  #L32bc30.  v19:= v0 @kind object;
  #L32bc34.  v0:= v19 @kind object;
  #L32bc38.  call temp:= `get`(v0, v12) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L32bc3e.  v15:= temp @kind object;
  #L32bc40.  v15:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v15 @kind object;
  #L32bc44.  v22:= v22 + v3 @kind float;
  #L32bc48.  v22:= v22 + v4 @kind float;
  #L32bc4c.  call temp:= `getEntryCount`(v15) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;.getEntryCount:()I` @kind interface;
  #L32bc52.  v19:= temp;
  #L32bc54.  v0:= v19;
  #L32bc58.  if v9 >= v0 then goto L32bc76;
  #L32bc5c.  call temp:= `getEntryForIndex`(v15, v9) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L32bc62.  v7:= temp @kind object;
  #L32bc64.  v7:= (`com.github.mikephil.charting.data.BarEntry`) v7 @kind object;
  #L32bc68.  if v7 == 0 then goto L32bc76;
  #L32bc6c.  v0:= v22;
  #L32bc70.  call `setX`(v7, v0) @signature `Lcom/github/mikephil/charting/data/BarEntry;.setX:(F)V` @kind virtual;
  #L32bc76.  v22:= v22 + v4 @kind float;
  #L32bc7a.  v22:= v22 + v3 @kind float;
  #L32bc7e.  v12:= v12 + 1;
  #L32bc82.  goto L32bc20;
  #L32bc84.  v22:= v22 + v8 @kind float;
  #L32bc88.  v6:= v22;
  #L32bc8c.  v10:= v6 - v18 @kind float;
  #L32bc90.  v5:= v11 - v10 @kind float;
  #L32bc94.  v19:= 0I;
  #L32bc98.  v19:= fcmpl(v5, v19);
  #L32bc9c.  if v19 > 0 then goto L32bcac;
  #L32bca0.  v19:= 0I;
  #L32bca4.  v19:= fcmpg(v5, v19);
  #L32bca8.  if v19 >= 0 then goto L32bcb0;
  #L32bcac.  v22:= v22 + v5 @kind float;
  #L32bcb0.  v9:= v9 + 1;
  #L32bcb4.  goto L32bbfe;
  #L32bcb6.  call `notifyDataChanged`(v21) @signature `Lcom/github/mikephil/charting/data/BarData;.notifyDataChanged:()V` @kind virtual;
  #L32bcbc.  return @kind void;
}
procedure `void` `setBarWidth`(`com.github.mikephil.charting.data.BarData` v0 @kind this, `float` v1 @name `mBarWidth`) @signature `Lcom/github/mikephil/charting/data/BarData;.setBarWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32bcd0.  v0.`com.github.mikephil.charting.data.BarData.mBarWidth` @type ^`float` := v1;
  #L32bcd4.  return @kind void;
}
