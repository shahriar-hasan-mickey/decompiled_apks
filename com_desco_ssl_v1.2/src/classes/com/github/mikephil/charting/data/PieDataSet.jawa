record `com.github.mikephil.charting.data.PieDataSet` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.data.DataSet` @kind class, `com.github.mikephil.charting.interfaces.datasets.IPieDataSet` @kind interface {
  `float` `com.github.mikephil.charting.data.PieDataSet.mShift` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.data.PieDataSet.mValueLineColor` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.PieDataSet.mValueLinePart1Length` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.PieDataSet.mValueLinePart1OffsetPercentage` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.PieDataSet.mValueLinePart2Length` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.data.PieDataSet.mValueLineVariableLength` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.data.PieDataSet.mValueLineWidth` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.data.PieDataSet$ValuePosition` `com.github.mikephil.charting.data.PieDataSet.mXValuePosition` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.data.PieDataSet$ValuePosition` `com.github.mikephil.charting.data.PieDataSet.mYValuePosition` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this, `java.util.List` v2 @kind object, `java.lang.String` v3 @kind object @name `label`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L35cc08.  call `<init>`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/data/DataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L35cc0e.  v0:= 0I;
  #L35cc10.  v1.`com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @type ^`float` := v0;
  #L35cc14.  v0:= 18.0F;
  #L35cc18.  v1.`com.github.mikephil.charting.data.PieDataSet.mShift` @type ^`float` := v0;
  #L35cc1c.  v0:= `@@com.github.mikephil.charting.data.PieDataSet$ValuePosition.INSIDE_SLICE` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` @kind object;
  #L35cc20.  v1.`com.github.mikephil.charting.data.PieDataSet.mXValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` := v0 @kind object;
  #L35cc24.  v0:= `@@com.github.mikephil.charting.data.PieDataSet$ValuePosition.INSIDE_SLICE` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` @kind object;
  #L35cc28.  v1.`com.github.mikephil.charting.data.PieDataSet.mYValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` := v0 @kind object;
  #L35cc2c.  v0:= -16777216I;
  #L35cc30.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineColor` @type ^`int` := v0;
  #L35cc34.  v0:= 1.0F;
  #L35cc38.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineWidth` @type ^`float` := v0;
  #L35cc3c.  v0:= 75.0F;
  #L35cc40.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1OffsetPercentage` @type ^`float` := v0;
  #L35cc44.  v0:= 1050253722I;
  #L35cc4a.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1Length` @type ^`float` := v0;
  #L35cc4e.  v0:= 1053609165I;
  #L35cc54.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart2Length` @type ^`float` := v0;
  #L35cc58.  v0:= 1I;
  #L35cc5a.  v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineVariableLength` @type ^`boolean` := v0 @kind boolean;
  #L35cc5e.  return @kind void;
}
procedure `com.github.mikephil.charting.data.DataSet` `copy`(`com.github.mikephil.charting.data.PieDataSet` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.copy:()Lcom/github/mikephil/charting/data/DataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L35cc70.  v2:= new `java.util.ArrayList`;
  #L35cc74.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L35cc7a.  v1:= 0I;
  #L35cc7c.  v3:= v4.`com.github.mikephil.charting.data.PieDataSet.mValues` @type ^`java.util.List` @kind object;
  #L35cc80.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L35cc86.  v3:= temp;
  #L35cc88.  if v1 >= v3 then goto L35ccb0;
  #L35cc8c.  v3:= v4.`com.github.mikephil.charting.data.PieDataSet.mValues` @type ^`java.util.List` @kind object;
  #L35cc90.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L35cc96.  v3:= temp @kind object;
  #L35cc98.  v3:= (`com.github.mikephil.charting.data.PieEntry`) v3 @kind object;
  #L35cc9c.  call temp:= `copy`(v3) @signature `Lcom/github/mikephil/charting/data/PieEntry;.copy:()Lcom/github/mikephil/charting/data/PieEntry;` @kind virtual;
  #L35cca2.  v3:= temp @kind object;
  #L35cca4.  call temp:= `add`(v2, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L35ccaa.  v1:= v1 + 1;
  #L35ccae.  goto L35cc7c;
  #L35ccb0.  v0:= new `com.github.mikephil.charting.data.PieDataSet`;
  #L35ccb4.  call temp:= `getLabel`(v4) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L35ccba.  v3:= temp @kind object;
  #L35ccbc.  call `<init>`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.<init>:(Ljava/util/List;Ljava/lang/String;)V` @kind direct;
  #L35ccc2.  v3:= v4.`com.github.mikephil.charting.data.PieDataSet.mColors` @type ^`java.util.List` @kind object;
  #L35ccc6.  v0.`com.github.mikephil.charting.data.PieDataSet.mColors` @type ^`java.util.List` := v3 @kind object;
  #L35ccca.  v3:= v4.`com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @type ^`float`;
  #L35ccce.  v0.`com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @type ^`float` := v3;
  #L35ccd2.  v3:= v4.`com.github.mikephil.charting.data.PieDataSet.mShift` @type ^`float`;
  #L35ccd6.  v0.`com.github.mikephil.charting.data.PieDataSet.mShift` @type ^`float` := v3;
  #L35ccda.  return v0 @kind object;
}
procedure `float` `getSelectionShift`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getSelectionShift:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35ccec.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mShift` @type ^`float`;
  #L35ccf0.  return v0;
}
procedure `float` `getSliceSpace`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getSliceSpace:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd04.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @type ^`float`;
  #L35cd08.  return v0;
}
procedure `int` `getValueLineColor`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getValueLineColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd1c.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineColor` @type ^`int`;
  #L35cd20.  return v0;
}
procedure `float` `getValueLinePart1Length`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getValueLinePart1Length:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd34.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1Length` @type ^`float`;
  #L35cd38.  return v0;
}
procedure `float` `getValueLinePart1OffsetPercentage`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getValueLinePart1OffsetPercentage:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd4c.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1OffsetPercentage` @type ^`float`;
  #L35cd50.  return v0;
}
procedure `float` `getValueLinePart2Length`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getValueLinePart2Length:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd64.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart2Length` @type ^`float`;
  #L35cd68.  return v0;
}
procedure `float` `getValueLineWidth`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getValueLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd7c.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineWidth` @type ^`float`;
  #L35cd80.  return v0;
}
procedure `com.github.mikephil.charting.data.PieDataSet$ValuePosition` `getXValuePosition`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getXValuePosition:()Lcom/github/mikephil/charting/data/PieDataSet$ValuePosition;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cd94.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mXValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` @kind object;
  #L35cd98.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.PieDataSet$ValuePosition` `getYValuePosition`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.getYValuePosition:()Lcom/github/mikephil/charting/data/PieDataSet$ValuePosition;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cdac.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mYValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` @kind object;
  #L35cdb0.  return v0 @kind object;
}
procedure `boolean` `isValueLineVariableLength`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.isValueLineVariableLength:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cdc4.  v0:= v1.`com.github.mikephil.charting.data.PieDataSet.mValueLineVariableLength` @type ^`boolean` @kind boolean;
  #L35cdc8.  return v0;
}
procedure `void` `setSelectionShift`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this, `float` v2 @name `shift`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setSelectionShift:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cddc.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L35cde2.  v0:= temp;
  #L35cde4.  v1.`com.github.mikephil.charting.data.PieDataSet.mShift` @type ^`float` := v0;
  #L35cde8.  return @kind void;
}
procedure `void` `setSliceSpace`(`com.github.mikephil.charting.data.PieDataSet` v1 @kind this, `float` v2 @name `spaceDp`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setSliceSpace:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35cdfc.  v0:= 20.0F;
  #L35ce00.  v0:= fcmpl(v2, v0);
  #L35ce04.  if v0 <= 0 then goto L35ce0c;
  #L35ce08.  v2:= 20.0F;
  #L35ce0c.  v0:= 0I;
  #L35ce0e.  v0:= fcmpg(v2, v0);
  #L35ce12.  if v0 >= 0 then goto L35ce18;
  #L35ce16.  v2:= 0I;
  #L35ce18.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L35ce1e.  v0:= temp;
  #L35ce20.  v1.`com.github.mikephil.charting.data.PieDataSet.mSliceSpace` @type ^`float` := v0;
  #L35ce24.  return @kind void;
}
procedure `void` `setValueLineColor`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `int` v1 @name `valueLineColor`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLineColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L35ce38.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLineColor` @type ^`int` := v1;
  #L35ce3c.  return @kind void;
}
procedure `void` `setValueLinePart1Length`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `float` v1 @name `valueLinePart1Length`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLinePart1Length:(F)V` @AccessFlag PUBLIC {
    temp;

  #L35ce50.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1Length` @type ^`float` := v1;
  #L35ce54.  return @kind void;
}
procedure `void` `setValueLinePart1OffsetPercentage`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `float` v1 @name `valueLinePart1OffsetPercentage`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLinePart1OffsetPercentage:(F)V` @AccessFlag PUBLIC {
    temp;

  #L35ce68.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart1OffsetPercentage` @type ^`float` := v1;
  #L35ce6c.  return @kind void;
}
procedure `void` `setValueLinePart2Length`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `float` v1 @name `valueLinePart2Length`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLinePart2Length:(F)V` @AccessFlag PUBLIC {
    temp;

  #L35ce80.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLinePart2Length` @type ^`float` := v1;
  #L35ce84.  return @kind void;
}
procedure `void` `setValueLineVariableLength`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `boolean` v1 @name `valueLineVariableLength`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLineVariableLength:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L35ce98.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLineVariableLength` @type ^`boolean` := v1 @kind boolean;
  #L35ce9c.  return @kind void;
}
procedure `void` `setValueLineWidth`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `float` v1 @name `valueLineWidth`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setValueLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L35ceb0.  v0.`com.github.mikephil.charting.data.PieDataSet.mValueLineWidth` @type ^`float` := v1;
  #L35ceb4.  return @kind void;
}
procedure `void` `setXValuePosition`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `com.github.mikephil.charting.data.PieDataSet$ValuePosition` v1 @kind object @name `xValuePosition`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setXValuePosition:(Lcom/github/mikephil/charting/data/PieDataSet$ValuePosition;)V` @AccessFlag PUBLIC {
    temp;

  #L35cec8.  v0.`com.github.mikephil.charting.data.PieDataSet.mXValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` := v1 @kind object;
  #L35cecc.  return @kind void;
}
procedure `void` `setYValuePosition`(`com.github.mikephil.charting.data.PieDataSet` v0 @kind this, `com.github.mikephil.charting.data.PieDataSet$ValuePosition` v1 @kind object @name `yValuePosition`) @signature `Lcom/github/mikephil/charting/data/PieDataSet;.setYValuePosition:(Lcom/github/mikephil/charting/data/PieDataSet$ValuePosition;)V` @AccessFlag PUBLIC {
    temp;

  #L35cee0.  v0.`com.github.mikephil.charting.data.PieDataSet.mYValuePosition` @type ^`com.github.mikephil.charting.data.PieDataSet$ValuePosition` := v1 @kind object;
  #L35cee4.  return @kind void;
}
