record `com.github.mikephil.charting.data.ChartData` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `java.util.List` `com.github.mikephil.charting.data.ChartData.mDataSets` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mRightAxisMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mRightAxisMin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mXMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mXMin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mYMax` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.data.ChartData.mYMin` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ChartData` v2 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d6e58.  v1:= 2139095039I;
  #L1d6e5e.  v0:= -8388609I;
  #L1d6e64.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d6e6a.  v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v0;
  #L1d6e6e.  v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v1;
  #L1d6e72.  v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v0;
  #L1d6e76.  v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v1;
  #L1d6e7a.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v0;
  #L1d6e7e.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v1;
  #L1d6e82.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v0;
  #L1d6e86.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v1;
  #L1d6e8a.  v0:= new `java.util.ArrayList`;
  #L1d6e8e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d6e94.  v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` := v0 @kind object;
  #L1d6e98.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d6eac.  v1:= 2139095039I;
  #L1d6eb2.  v0:= -8388609I;
  #L1d6eb8.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d6ebe.  v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v0;
  #L1d6ec2.  v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v1;
  #L1d6ec6.  v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v0;
  #L1d6eca.  v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v1;
  #L1d6ece.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v0;
  #L1d6ed2.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v1;
  #L1d6ed6.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v0;
  #L1d6eda.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v1;
  #L1d6ede.  v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` := v3 @kind object;
  #L1d6ee2.  call `init`(v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.init:()V` @kind virtual;
  #L1d6ee8.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet`[] v3 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.<init>:([Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d6efc.  v1:= 2139095039I;
  #L1d6f02.  v0:= -8388609I;
  #L1d6f08.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d6f0e.  v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v0;
  #L1d6f12.  v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v1;
  #L1d6f16.  v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v0;
  #L1d6f1a.  v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v1;
  #L1d6f1e.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v0;
  #L1d6f22.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v1;
  #L1d6f26.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v0;
  #L1d6f2a.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v1;
  #L1d6f2e.  call temp:= `arrayToList`(v2, v3) @signature `Lcom/github/mikephil/charting/data/ChartData;.arrayToList:([Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)Ljava/util/List;` @kind direct;
  #L1d6f34.  v0:= temp @kind object;
  #L1d6f36.  v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` := v0 @kind object;
  #L1d6f3a.  call `init`(v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.init:()V` @kind virtual;
  #L1d6f40.  return @kind void;
}
procedure `java.util.List` `arrayToList`(`com.github.mikephil.charting.data.ChartData` v4 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet`[] v5 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.arrayToList:([Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)Ljava/util/List;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d6f54.  v1:= new `java.util.ArrayList`;
  #L1d6f58.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L1d6f5e.  v0:= 0I;
  #L1d6f60.  v3:= length @variable v5;
  #L1d6f62.  if v0 >= v3 then goto L1d6f76;
  #L1d6f66.  v2:= v5[v0] @kind object;
  #L1d6f6a.  call temp:= `add`(v1, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d6f70.  v0:= v0 + 1;
  #L1d6f74.  goto L1d6f60;
  #L1d6f76.  return v1 @kind object;
}
procedure `void` `addDataSet`(`com.github.mikephil.charting.data.ChartData` v1 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.addDataSet:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d6f88.  if v2 != 0 then goto L1d6f8e;
  #L1d6f8c.  return @kind void;
  #L1d6f8e.  call `calcMinMax`(v1, v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)V` @kind virtual;
  #L1d6f94.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d6f98.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L1d6f9e.  goto L1d6f8c;
}
procedure `void` `addEntry`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object @name `e`, `int` v5 @name `dataSetIndex`) @signature `Lcom/github/mikephil/charting/data/ChartData;.addEntry:(Lcom/github/mikephil/charting/data/Entry;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d6fb0.  v1:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d6fb4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d6fba.  v1:= temp;
  #L1d6fbc.  if v1 <= v5 then goto L1d6ff2;
  #L1d6fc0.  if v5 < 0 then goto L1d6ff2;
  #L1d6fc4.  v1:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d6fc8.  call temp:= `get`(v1, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d6fce.  v0:= temp @kind object;
  #L1d6fd0.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d6fd4.  call temp:= `addEntry`(v0, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.addEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L1d6fda.  v1:= temp;
  #L1d6fdc.  if v1 != 0 then goto L1d6fe2;
  #L1d6fe0.  return @kind void;
  #L1d6fe2.  call temp:= `getAxisDependency`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d6fe8.  v1:= temp @kind object;
  #L1d6fea.  call `calcMinMax`(v3, v4, v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind virtual;
  #L1d6ff0.  goto L1d6fe0;
  #L1d6ff2.  v1:= "addEntry" @kind object;
  #L1d6ff6.  v2:= "Cannot add Entry because dataSetIndex too high or too low." @kind object;
  #L1d6ffa.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1d7000.  goto L1d6fe0;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.ChartData` v8 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d7014.  v7:= 2139095039I;
  #L1d701a.  v6:= -8388609I;
  #L1d7020.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7024.  if v5 != 0 then goto L1d702a;
  #L1d7028.  return @kind void;
  #L1d702a.  v8.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v6;
  #L1d702e.  v8.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v7;
  #L1d7032.  v8.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v6;
  #L1d7036.  v8.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v7;
  #L1d703a.  v3:= 0I;
  #L1d703c.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7040.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7046.  v5:= temp;
  #L1d7048.  if v3 >= v5 then goto L1d7068;
  #L1d704c.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7050.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7056.  v4:= temp @kind object;
  #L1d7058.  v4:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v4 @kind object;
  #L1d705c.  call `calcMinMax`(v8, v4) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)V` @kind virtual;
  #L1d7062.  v3:= v3 + 1;
  #L1d7066.  goto L1d703c;
  #L1d7068.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v6;
  #L1d706c.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v7;
  #L1d7070.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v6;
  #L1d7074.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v7;
  #L1d7078.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d707c.  call temp:= `getFirstLeft`(v8, v5) @signature `Lcom/github/mikephil/charting/data/ChartData;.getFirstLeft:(Ljava/util/List;)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L1d7082.  v1:= temp @kind object;
  #L1d7084.  if v1 == 0 then goto L1d7118;
  #L1d7088.  call temp:= `getYMax`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d708e.  v5:= temp;
  #L1d7090.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v5;
  #L1d7094.  call temp:= `getYMin`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d709a.  v5:= temp;
  #L1d709c.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v5;
  #L1d70a0.  v3:= 0I;
  #L1d70a2.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d70a6.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d70ac.  v5:= temp;
  #L1d70ae.  if v3 >= v5 then goto L1d7118;
  #L1d70b2.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d70b6.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d70bc.  v0:= temp @kind object;
  #L1d70be.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d70c2.  call temp:= `getAxisDependency`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d70c8.  v5:= temp @kind object;
  #L1d70ca.  v6:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d70ce.  if v5 != v6 then goto L1d7112;
  #L1d70d2.  call temp:= `getYMin`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d70d8.  v5:= temp;
  #L1d70da.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d70de.  v5:= fcmpg(v5, v6);
  #L1d70e2.  if v5 >= 0 then goto L1d70f2;
  #L1d70e6.  call temp:= `getYMin`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d70ec.  v5:= temp;
  #L1d70ee.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v5;
  #L1d70f2.  call temp:= `getYMax`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d70f8.  v5:= temp;
  #L1d70fa.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d70fe.  v5:= fcmpl(v5, v6);
  #L1d7102.  if v5 <= 0 then goto L1d7112;
  #L1d7106.  call temp:= `getYMax`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d710c.  v5:= temp;
  #L1d710e.  v8.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v5;
  #L1d7112.  v3:= v3 + 1;
  #L1d7116.  goto L1d70a2;
  #L1d7118.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d711c.  call temp:= `getFirstRight`(v8, v5) @signature `Lcom/github/mikephil/charting/data/ChartData;.getFirstRight:(Ljava/util/List;)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L1d7122.  v2:= temp @kind object;
  #L1d7124.  if v2 == 0 then goto L1d7028;
  #L1d7128.  call temp:= `getYMax`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d712e.  v5:= temp;
  #L1d7130.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v5;
  #L1d7134.  call temp:= `getYMin`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d713a.  v5:= temp;
  #L1d713c.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v5;
  #L1d7140.  v3:= 0I;
  #L1d7142.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7146.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d714c.  v5:= temp;
  #L1d714e.  if v3 >= v5 then goto L1d7028;
  #L1d7152.  v5:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7156.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d715c.  v0:= temp @kind object;
  #L1d715e.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d7162.  call temp:= `getAxisDependency`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d7168.  v5:= temp @kind object;
  #L1d716a.  v6:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d716e.  if v5 != v6 then goto L1d71b2;
  #L1d7172.  call temp:= `getYMin`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d7178.  v5:= temp;
  #L1d717a.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d717e.  v5:= fcmpg(v5, v6);
  #L1d7182.  if v5 >= 0 then goto L1d7192;
  #L1d7186.  call temp:= `getYMin`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d718c.  v5:= temp;
  #L1d718e.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v5;
  #L1d7192.  call temp:= `getYMax`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d7198.  v5:= temp;
  #L1d719a.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d719e.  v5:= fcmpl(v5, v6);
  #L1d71a2.  if v5 <= 0 then goto L1d71b2;
  #L1d71a6.  call temp:= `getYMax`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d71ac.  v5:= temp;
  #L1d71ae.  v8.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v5;
  #L1d71b2.  v3:= v3 + 1;
  #L1d71b6.  goto L1d7142;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.data.Entry` v3 @kind object @name `e`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1d71c8.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float`;
  #L1d71cc.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d71d2.  v1:= temp;
  #L1d71d4.  v0:= fcmpg(v0, v1);
  #L1d71d8.  if v0 >= 0 then goto L1d71e8;
  #L1d71dc.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d71e2.  v0:= temp;
  #L1d71e4.  v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v0;
  #L1d71e8.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float`;
  #L1d71ec.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d71f2.  v1:= temp;
  #L1d71f4.  v0:= fcmpl(v0, v1);
  #L1d71f8.  if v0 <= 0 then goto L1d7208;
  #L1d71fc.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d7202.  v0:= temp;
  #L1d7204.  v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v0;
  #L1d7208.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float`;
  #L1d720c.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d7212.  v1:= temp;
  #L1d7214.  v0:= fcmpg(v0, v1);
  #L1d7218.  if v0 >= 0 then goto L1d7228;
  #L1d721c.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d7222.  v0:= temp;
  #L1d7224.  v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v0;
  #L1d7228.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float`;
  #L1d722c.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d7232.  v1:= temp;
  #L1d7234.  v0:= fcmpl(v0, v1);
  #L1d7238.  if v0 <= 0 then goto L1d7248;
  #L1d723c.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d7242.  v0:= temp;
  #L1d7244.  v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v0;
  #L1d7248.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d724c.  if v4 != v0 then goto L1d7292;
  #L1d7250.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d7254.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d725a.  v1:= temp;
  #L1d725c.  v0:= fcmpg(v0, v1);
  #L1d7260.  if v0 >= 0 then goto L1d7270;
  #L1d7264.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d726a.  v0:= temp;
  #L1d726c.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v0;
  #L1d7270.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d7274.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d727a.  v1:= temp;
  #L1d727c.  v0:= fcmpl(v0, v1);
  #L1d7280.  if v0 <= 0 then goto L1d7290;
  #L1d7284.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d728a.  v0:= temp;
  #L1d728c.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v0;
  #L1d7290.  return @kind void;
  #L1d7292.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d7296.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d729c.  v1:= temp;
  #L1d729e.  v0:= fcmpg(v0, v1);
  #L1d72a2.  if v0 >= 0 then goto L1d72b2;
  #L1d72a6.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d72ac.  v0:= temp;
  #L1d72ae.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v0;
  #L1d72b2.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d72b6.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d72bc.  v1:= temp;
  #L1d72be.  v0:= fcmpl(v0, v1);
  #L1d72c2.  if v0 <= 0 then goto L1d7290;
  #L1d72c6.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L1d72cc.  v0:= temp;
  #L1d72ce.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v0;
  #L1d72d2.  goto L1d7290;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1d72e4.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float`;
  #L1d72e8.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d72ee.  v1:= temp;
  #L1d72f0.  v0:= fcmpg(v0, v1);
  #L1d72f4.  if v0 >= 0 then goto L1d7304;
  #L1d72f8.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d72fe.  v0:= temp;
  #L1d7300.  v2.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float` := v0;
  #L1d7304.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float`;
  #L1d7308.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d730e.  v1:= temp;
  #L1d7310.  v0:= fcmpl(v0, v1);
  #L1d7314.  if v0 <= 0 then goto L1d7324;
  #L1d7318.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d731e.  v0:= temp;
  #L1d7320.  v2.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float` := v0;
  #L1d7324.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float`;
  #L1d7328.  call temp:= `getXMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getXMax:()F` @kind interface;
  #L1d732e.  v1:= temp;
  #L1d7330.  v0:= fcmpg(v0, v1);
  #L1d7334.  if v0 >= 0 then goto L1d7344;
  #L1d7338.  call temp:= `getXMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getXMax:()F` @kind interface;
  #L1d733e.  v0:= temp;
  #L1d7340.  v2.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float` := v0;
  #L1d7344.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float`;
  #L1d7348.  call temp:= `getXMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getXMin:()F` @kind interface;
  #L1d734e.  v1:= temp;
  #L1d7350.  v0:= fcmpl(v0, v1);
  #L1d7354.  if v0 <= 0 then goto L1d7364;
  #L1d7358.  call temp:= `getXMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getXMin:()F` @kind interface;
  #L1d735e.  v0:= temp;
  #L1d7360.  v2.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float` := v0;
  #L1d7364.  call temp:= `getAxisDependency`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d736a.  v0:= temp @kind object;
  #L1d736c.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d7370.  if v0 != v1 then goto L1d73b6;
  #L1d7374.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d7378.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d737e.  v1:= temp;
  #L1d7380.  v0:= fcmpg(v0, v1);
  #L1d7384.  if v0 >= 0 then goto L1d7394;
  #L1d7388.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d738e.  v0:= temp;
  #L1d7390.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float` := v0;
  #L1d7394.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d7398.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d739e.  v1:= temp;
  #L1d73a0.  v0:= fcmpl(v0, v1);
  #L1d73a4.  if v0 <= 0 then goto L1d73b4;
  #L1d73a8.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d73ae.  v0:= temp;
  #L1d73b0.  v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float` := v0;
  #L1d73b4.  return @kind void;
  #L1d73b6.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d73ba.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d73c0.  v1:= temp;
  #L1d73c2.  v0:= fcmpg(v0, v1);
  #L1d73c6.  if v0 >= 0 then goto L1d73d6;
  #L1d73ca.  call temp:= `getYMax`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMax:()F` @kind interface;
  #L1d73d0.  v0:= temp;
  #L1d73d2.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float` := v0;
  #L1d73d6.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d73da.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d73e0.  v1:= temp;
  #L1d73e2.  v0:= fcmpl(v0, v1);
  #L1d73e6.  if v0 <= 0 then goto L1d73b4;
  #L1d73ea.  call temp:= `getYMin`(v3) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getYMin:()F` @kind interface;
  #L1d73f0.  v0:= temp;
  #L1d73f2.  v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float` := v0;
  #L1d73f6.  goto L1d73b4;
}
procedure `void` `clearValues`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.clearValues:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7408.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d740c.  if v0 == 0 then goto L1d741a;
  #L1d7410.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7414.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L1d741a.  call `notifyDataChanged`(v1) @signature `Lcom/github/mikephil/charting/data/ChartData;.notifyDataChanged:()V` @kind virtual;
  #L1d7420.  return @kind void;
}
procedure `boolean` `contains`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.contains:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7434.  v0:= 0I;
  #L1d7436.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d743a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7440.  v2:= temp;
  #L1d7442.  if v0 >= v2 then goto L1d746c;
  #L1d7446.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d744a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7450.  v1:= temp @kind object;
  #L1d7452.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7456.  call temp:= `equals`(v1, v4) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d745c.  v2:= temp;
  #L1d745e.  if v2 == 0 then goto L1d7466;
  #L1d7462.  v2:= 1I;
  #L1d7464.  return v2;
  #L1d7466.  v0:= v0 + 1;
  #L1d746a.  goto L1d7436;
  #L1d746c.  v2:= 0I;
  #L1d746e.  goto L1d7464;
}
procedure `int`[] `getColors`(`com.github.mikephil.charting.data.ChartData` v8 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getColors:()[I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1d7480.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7484.  if v6 != 0 then goto L1d748c;
  #L1d7488.  v4:= 0I;
  #L1d748a.  return v4 @kind object;
  #L1d748c.  v1:= 0I;
  #L1d748e.  v5:= 0I;
  #L1d7490.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7494.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d749a.  v6:= temp;
  #L1d749c.  if v5 >= v6 then goto L1d74c8;
  #L1d74a0.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d74a4.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d74aa.  v6:= temp @kind object;
  #L1d74ac.  v6:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v6 @kind object;
  #L1d74b0.  call temp:= `getColors`(v6) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getColors:()Ljava/util/List;` @kind interface;
  #L1d74b6.  v6:= temp @kind object;
  #L1d74b8.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d74be.  v6:= temp;
  #L1d74c0.  v1:= v1 + v6 @kind int;
  #L1d74c2.  v5:= v5 + 1;
  #L1d74c6.  goto L1d7490;
  #L1d74c8.  v4:= new `int`[v1];
  #L1d74cc.  v3:= 0I;
  #L1d74ce.  v5:= 0I;
  #L1d74d0.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d74d4.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d74da.  v6:= temp;
  #L1d74dc.  if v5 >= v6 then goto L1d748a;
  #L1d74e0.  v6:= v8.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d74e4.  call temp:= `get`(v6, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d74ea.  v6:= temp @kind object;
  #L1d74ec.  v6:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v6 @kind object;
  #L1d74f0.  call temp:= `getColors`(v6) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getColors:()Ljava/util/List;` @kind interface;
  #L1d74f6.  v2:= temp @kind object;
  #L1d74f8.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L1d74fe.  v6:= temp @kind object;
  #L1d7500.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L1d7506.  v7:= temp;
  #L1d7508.  if v7 == 0 then goto L1d752a;
  #L1d750c.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L1d7512.  v0:= temp @kind object;
  #L1d7514.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L1d7518.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1d751e.  v7:= temp;
  #L1d7520.  v4[v3]:= v7;
  #L1d7524.  v3:= v3 + 1;
  #L1d7528.  goto L1d7500;
  #L1d752a.  v5:= v5 + 1;
  #L1d752e.  goto L1d74d0;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getDataSetByIndex`(`com.github.mikephil.charting.data.ChartData` v1 @kind this, `int` v2 @name `index`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetByIndex:(I)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7540.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7544.  if v0 == 0 then goto L1d755c;
  #L1d7548.  if v2 < 0 then goto L1d755c;
  #L1d754c.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7550.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7556.  v0:= temp;
  #L1d7558.  if v2 < v0 then goto L1d7560;
  #L1d755c.  v0:= 0I;
  #L1d755e.  return v0 @kind object;
  #L1d7560.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7564.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d756a.  v0:= temp @kind object;
  #L1d756c.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d7570.  goto L1d755e;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getDataSetByLabel`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `java.lang.String` v3 @kind object @name `label`, `boolean` v4 @name `ignorecase`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetByLabel:(Ljava/lang/String;Z)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d7584.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7588.  call temp:= `getDataSetIndexByLabel`(v2, v1, v3, v4) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetIndexByLabel:(Ljava/util/List;Ljava/lang/String;Z)I` @kind virtual;
  #L1d758e.  v0:= temp;
  #L1d7590.  if v0 < 0 then goto L1d75a4;
  #L1d7594.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7598.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d759e.  v1:= temp;
  #L1d75a0.  if v0 < v1 then goto L1d75a8;
  #L1d75a4.  v1:= 0I;
  #L1d75a6.  return v1 @kind object;
  #L1d75a8.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d75ac.  call temp:= `get`(v1, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d75b2.  v1:= temp @kind object;
  #L1d75b4.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d75b8.  goto L1d75a6;
}
procedure `int` `getDataSetCount`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d75cc.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d75d0.  if v0 != 0 then goto L1d75d8;
  #L1d75d4.  v0:= 0I;
  #L1d75d6.  return v0;
  #L1d75d8.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d75dc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d75e2.  v0:= temp;
  #L1d75e4.  goto L1d75d6;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getDataSetForEntry`(`com.github.mikephil.charting.data.ChartData` v5 @kind this, `com.github.mikephil.charting.data.Entry` v6 @kind object @name `e`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetForEntry:(Lcom/github/mikephil/charting/data/Entry;)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d75f8.  v3:= 0I;
  #L1d75fa.  if v6 != 0 then goto L1d7602;
  #L1d75fe.  v2:= v3 @kind object;
  #L1d7600.  return v2 @kind object;
  #L1d7602.  v0:= 0I;
  #L1d7604.  v4:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7608.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d760e.  v4:= temp;
  #L1d7610.  if v0 >= v4 then goto L1d765a;
  #L1d7614.  v4:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7618.  call temp:= `get`(v4, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d761e.  v2:= temp @kind object;
  #L1d7620.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v2 @kind object;
  #L1d7624.  v1:= 0I;
  #L1d7626.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L1d762c.  v4:= temp;
  #L1d762e.  if v1 >= v4 then goto L1d7654;
  #L1d7632.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d7638.  v4:= temp;
  #L1d763a.  call temp:= `getEntryForXPos`(v2, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForXPos:(F)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L1d7640.  v4:= temp @kind object;
  #L1d7642.  call temp:= `equalTo`(v6, v4) @signature `Lcom/github/mikephil/charting/data/Entry;.equalTo:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind virtual;
  #L1d7648.  v4:= temp;
  #L1d764a.  if v4 != 0 then goto L1d7600;
  #L1d764e.  v1:= v1 + 1;
  #L1d7652.  goto L1d7626;
  #L1d7654.  v0:= v0 + 1;
  #L1d7658.  goto L1d7604;
  #L1d765a.  v2:= v3 @kind object;
  #L1d765c.  goto L1d7600;
}
procedure `int` `getDataSetIndexByLabel`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `java.util.List` v3 @kind object, `java.lang.String` v4 @kind object @name `label`, `boolean` v5 @name `ignorecase`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetIndexByLabel:(Ljava/util/List;Ljava/lang/String;Z)I` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1d7670.  if v5 == 0 then goto L1d76ac;
  #L1d7674.  v0:= 0I;
  #L1d7676.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d767c.  v1:= temp;
  #L1d767e.  if v0 >= v1 then goto L1d76e4;
  #L1d7682.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7688.  v1:= temp @kind object;
  #L1d768a.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d768e.  call temp:= `getLabel`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getLabel:()Ljava/lang/String;` @kind interface;
  #L1d7694.  v1:= temp @kind object;
  #L1d7696.  call temp:= `equalsIgnoreCase`(v4, v1) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L1d769c.  v1:= temp;
  #L1d769e.  if v1 == 0 then goto L1d76a6;
  #L1d76a2.  v1:= v0;
  #L1d76a4.  return v1;
  #L1d76a6.  v0:= v0 + 1;
  #L1d76aa.  goto L1d7676;
  #L1d76ac.  v0:= 0I;
  #L1d76ae.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d76b4.  v1:= temp;
  #L1d76b6.  if v0 >= v1 then goto L1d76e4;
  #L1d76ba.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d76c0.  v1:= temp @kind object;
  #L1d76c2.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d76c6.  call temp:= `getLabel`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getLabel:()Ljava/lang/String;` @kind interface;
  #L1d76cc.  v1:= temp @kind object;
  #L1d76ce.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1d76d4.  v1:= temp;
  #L1d76d6.  if v1 == 0 then goto L1d76de;
  #L1d76da.  v1:= v0;
  #L1d76dc.  goto L1d76a4;
  #L1d76de.  v0:= v0 + 1;
  #L1d76e2.  goto L1d76ae;
  #L1d76e4.  v1:= -1I;
  #L1d76e6.  goto L1d76a4;
}
procedure `java.lang.String`[] `getDataSetLabels`(`com.github.mikephil.charting.data.ChartData` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSetLabels:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d76f8.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d76fc.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7702.  v2:= temp;
  #L1d7704.  v1:= new `java.lang.String`[v2];
  #L1d7708.  v0:= 0I;
  #L1d770a.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d770e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7714.  v2:= temp;
  #L1d7716.  if v0 >= v2 then goto L1d773c;
  #L1d771a.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d771e.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7724.  v2:= temp @kind object;
  #L1d7726.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v2 @kind object;
  #L1d772a.  call temp:= `getLabel`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getLabel:()Ljava/lang/String;` @kind interface;
  #L1d7730.  v2:= temp @kind object;
  #L1d7732.  v1[v0]:= v2 @kind object;
  #L1d7736.  v0:= v0 + 1;
  #L1d773a.  goto L1d770a;
  #L1d773c.  return v1 @kind object;
}
procedure `java.util.List` `getDataSets`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getDataSets:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7750.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7754.  return v0 @kind object;
}
procedure `int` `getEntryCount`(`com.github.mikephil.charting.data.ChartData` v4 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7768.  v0:= 0I;
  #L1d776a.  v1:= 0I;
  #L1d776c.  v3:= v4.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7770.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7776.  v3:= temp;
  #L1d7778.  if v1 >= v3 then goto L1d779c;
  #L1d777c.  v3:= v4.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7780.  call temp:= `get`(v3, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7786.  v2:= temp @kind object;
  #L1d7788.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v2 @kind object;
  #L1d778c.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L1d7792.  v3:= temp;
  #L1d7794.  v0:= v0 + v3 @kind int;
  #L1d7796.  v1:= v1 + 1;
  #L1d779a.  goto L1d776c;
  #L1d779c.  return v0;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryForHighlight`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.highlight.Highlight` v3 @kind object @name `highlight`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryForHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d77b0.  call temp:= `getDataSetIndex`(v3) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataSetIndex:()I` @kind virtual;
  #L1d77b6.  v0:= temp;
  #L1d77b8.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d77bc.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d77c2.  v1:= temp;
  #L1d77c4.  if v0 < v1 then goto L1d77cc;
  #L1d77c8.  v0:= 0I;
  #L1d77ca.  return v0 @kind object;
  #L1d77cc.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d77d0.  call temp:= `getDataSetIndex`(v3) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataSetIndex:()I` @kind virtual;
  #L1d77d6.  v1:= temp;
  #L1d77d8.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d77de.  v0:= temp @kind object;
  #L1d77e0.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d77e4.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getX:()F` @kind virtual;
  #L1d77ea.  v1:= temp;
  #L1d77ec.  call temp:= `getEntryForXPos`(v0, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForXPos:(F)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L1d77f2.  v0:= temp @kind object;
  #L1d77f4.  goto L1d77ca;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getFirstLeft`(`com.github.mikephil.charting.data.ChartData` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.getFirstLeft:(Ljava/util/List;)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7808.  v1:= 0I;
  #L1d780a.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7810.  v2:= temp;
  #L1d7812.  if v1 >= v2 then goto L1d783a;
  #L1d7816.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d781c.  v0:= temp @kind object;
  #L1d781e.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d7822.  call temp:= `getAxisDependency`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d7828.  v2:= temp @kind object;
  #L1d782a.  v3:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d782e.  if v2 != v3 then goto L1d7834;
  #L1d7832.  return v0 @kind object;
  #L1d7834.  v1:= v1 + 1;
  #L1d7838.  goto L1d780a;
  #L1d783a.  v0:= 0I;
  #L1d783c.  goto L1d7832;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getFirstRight`(`com.github.mikephil.charting.data.ChartData` v4 @kind this, `java.util.List` v5 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.getFirstRight:(Ljava/util/List;)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7850.  v1:= 0I;
  #L1d7852.  call temp:= `size`(v5) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7858.  v2:= temp;
  #L1d785a.  if v1 >= v2 then goto L1d7882;
  #L1d785e.  call temp:= `get`(v5, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7864.  v0:= temp @kind object;
  #L1d7866.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d786a.  call temp:= `getAxisDependency`(v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @kind interface;
  #L1d7870.  v2:= temp @kind object;
  #L1d7872.  v3:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d7876.  if v2 != v3 then goto L1d787c;
  #L1d787a.  return v0 @kind object;
  #L1d787c.  v1:= v1 + 1;
  #L1d7880.  goto L1d7852;
  #L1d7882.  v0:= 0I;
  #L1d7884.  goto L1d787a;
}
procedure `int` `getIndexOfDataSet`(`com.github.mikephil.charting.data.ChartData` v1 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet` v2 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.getIndexOfDataSet:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7898.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d789c.  call temp:= `indexOf`(v0, v2) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L1d78a2.  v0:= temp;
  #L1d78a4.  return v0;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IDataSet` `getMaxEntryCountSet`(`com.github.mikephil.charting.data.ChartData` v5 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getMaxEntryCountSet:()Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L1d78b8.  v3:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d78bc.  if v3 == 0 then goto L1d78d0;
  #L1d78c0.  v3:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d78c4.  call temp:= `isEmpty`(v3) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L1d78ca.  v3:= temp;
  #L1d78cc.  if v3 == 0 then goto L1d78d4;
  #L1d78d0.  v1:= 0I;
  #L1d78d2.  return v1 @kind object;
  #L1d78d4.  v3:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d78d8.  v4:= 0I;
  #L1d78da.  call temp:= `get`(v3, v4) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d78e0.  v1:= temp @kind object;
  #L1d78e2.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d78e6.  v0:= 0I;
  #L1d78e8.  v3:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d78ec.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d78f2.  v3:= temp;
  #L1d78f4.  if v0 >= v3 then goto L1d78d2;
  #L1d78f8.  v3:= v5.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d78fc.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7902.  v2:= temp @kind object;
  #L1d7904.  v2:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v2 @kind object;
  #L1d7908.  call temp:= `getEntryCount`(v2) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L1d790e.  v3:= temp;
  #L1d7910.  call temp:= `getEntryCount`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryCount:()I` @kind interface;
  #L1d7916.  v4:= temp;
  #L1d7918.  if v3 <= v4 then goto L1d791e;
  #L1d791c.  v1:= v2 @kind object;
  #L1d791e.  v0:= v0 + 1;
  #L1d7922.  goto L1d78e8;
}
procedure `float` `getXMax`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7934.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mXMax` @type ^`float`;
  #L1d7938.  return v0;
}
procedure `float` `getXMin`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getXMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d794c.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mXMin` @type ^`float`;
  #L1d7950.  return v0;
}
procedure `float` `getYMax`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d7964.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mYMax` @type ^`float`;
  #L1d7968.  return v0;
}
procedure `float` `getYMax`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v3 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d797c.  v1:= -8388609I;
  #L1d7982.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d7986.  if v3 != v0 then goto L1d79a2;
  #L1d798a.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d798e.  v0:= fcmpl(v0, v1);
  #L1d7992.  if v0 != 0 then goto L1d799c;
  #L1d7996.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d799a.  return v0;
  #L1d799c.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d79a0.  goto L1d799a;
  #L1d79a2.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d79a6.  v0:= fcmpl(v0, v1);
  #L1d79aa.  if v0 != 0 then goto L1d79b4;
  #L1d79ae.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMax` @type ^`float`;
  #L1d79b2.  goto L1d799a;
  #L1d79b4.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMax` @type ^`float`;
  #L1d79b8.  goto L1d799a;
}
procedure `float` `getYMin`(`com.github.mikephil.charting.data.ChartData` v1 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d79cc.  v0:= v1.`com.github.mikephil.charting.data.ChartData.mYMin` @type ^`float`;
  #L1d79d0.  return v0;
}
procedure `float` `getYMin`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v3 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/data/ChartData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d79e4.  v1:= 2139095039I;
  #L1d79ea.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L1d79ee.  if v3 != v0 then goto L1d7a0a;
  #L1d79f2.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d79f6.  v0:= fcmpl(v0, v1);
  #L1d79fa.  if v0 != 0 then goto L1d7a04;
  #L1d79fe.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d7a02.  return v0;
  #L1d7a04.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d7a08.  goto L1d7a02;
  #L1d7a0a.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d7a0e.  v0:= fcmpl(v0, v1);
  #L1d7a12.  if v0 != 0 then goto L1d7a1c;
  #L1d7a16.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mLeftAxisMin` @type ^`float`;
  #L1d7a1a.  goto L1d7a02;
  #L1d7a1c.  v0:= v2.`com.github.mikephil.charting.data.ChartData.mRightAxisMin` @type ^`float`;
  #L1d7a20.  goto L1d7a02;
}
procedure `void` `init`(`com.github.mikephil.charting.data.ChartData` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.init:()V` @AccessFlag PROTECTED {
    temp;

  #L1d7a34.  call `calcMinMax`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:()V` @kind virtual;
  #L1d7a3a.  return @kind void;
}
procedure `boolean` `isHighlightEnabled`(`com.github.mikephil.charting.data.ChartData` v3 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.isHighlightEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7a4c.  v0:= 0I;
  #L1d7a4e.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7a52.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7a58.  v2:= temp;
  #L1d7a5a.  if v0 >= v2 then goto L1d7a84;
  #L1d7a5e.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7a62.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7a68.  v1:= temp @kind object;
  #L1d7a6a.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7a6e.  call temp:= `isHighlightEnabled`(v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.isHighlightEnabled:()Z` @kind interface;
  #L1d7a74.  v2:= temp;
  #L1d7a76.  if v2 != 0 then goto L1d7a7e;
  #L1d7a7a.  v2:= 0I;
  #L1d7a7c.  return v2;
  #L1d7a7e.  v0:= v0 + 1;
  #L1d7a82.  goto L1d7a4e;
  #L1d7a84.  v2:= 1I;
  #L1d7a86.  goto L1d7a7c;
}
procedure `void` `notifyDataChanged`(`com.github.mikephil.charting.data.ChartData` v0 @kind this) @signature `Lcom/github/mikephil/charting/data/ChartData;.notifyDataChanged:()V` @AccessFlag PUBLIC {
    temp;

  #L1d7a98.  call `init`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.init:()V` @kind virtual;
  #L1d7a9e.  return @kind void;
}
procedure `boolean` `removeDataSet`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeDataSet:(I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d7ab0.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7ab4.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7aba.  v1:= temp;
  #L1d7abc.  if v3 >= v1 then goto L1d7ac4;
  #L1d7ac0.  if v3 >= 0 then goto L1d7ac8;
  #L1d7ac4.  v1:= 0I;
  #L1d7ac6.  return v1;
  #L1d7ac8.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7acc.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7ad2.  v0:= temp @kind object;
  #L1d7ad4.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d7ad8.  call temp:= `removeDataSet`(v2, v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeDataSet:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)Z` @kind virtual;
  #L1d7ade.  v1:= temp;
  #L1d7ae0.  goto L1d7ac6;
}
procedure `boolean` `removeDataSet`(`com.github.mikephil.charting.data.ChartData` v2 @kind this, `com.github.mikephil.charting.interfaces.datasets.IDataSet` v3 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeDataSet:(Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d7af4.  if v3 != 0 then goto L1d7afc;
  #L1d7af8.  v0:= 0I;
  #L1d7afa.  return v0;
  #L1d7afc.  v1:= v2.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7b00.  call temp:= `remove`(v1, v3) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L1d7b06.  v0:= temp;
  #L1d7b08.  if v0 == 0 then goto L1d7afa;
  #L1d7b0c.  call `calcMinMax`(v2) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:()V` @kind virtual;
  #L1d7b12.  goto L1d7afa;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.ChartData` v4 @kind this, `float` v5 @name `xPos`, `int` v6 @name `dataSetIndex`) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeEntry:(FI)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d7b24.  v2:= 0I;
  #L1d7b26.  v3:= v4.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7b2a.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7b30.  v3:= temp;
  #L1d7b32.  if v6 < v3 then goto L1d7b38;
  #L1d7b36.  return v2;
  #L1d7b38.  v3:= v4.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7b3c.  call temp:= `get`(v3, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7b42.  v0:= temp @kind object;
  #L1d7b44.  v0:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v0 @kind object;
  #L1d7b48.  call temp:= `getEntryForXPos`(v0, v5) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.getEntryForXPos:(F)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L1d7b4e.  v1:= temp @kind object;
  #L1d7b50.  if v1 == 0 then goto L1d7b36;
  #L1d7b54.  call temp:= `removeEntry`(v4, v1, v6) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;I)Z` @kind virtual;
  #L1d7b5a.  v2:= temp;
  #L1d7b5c.  goto L1d7b36;
}
procedure `boolean` `removeEntry`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `com.github.mikephil.charting.data.Entry` v4 @kind object @name `e`, `int` v5 @name `dataSetIndex`) @signature `Lcom/github/mikephil/charting/data/ChartData;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;I)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7b70.  v0:= 0I;
  #L1d7b72.  if v4 == 0 then goto L1d7b86;
  #L1d7b76.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7b7a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7b80.  v2:= temp;
  #L1d7b82.  if v5 < v2 then goto L1d7b88;
  #L1d7b86.  return v0;
  #L1d7b88.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7b8c.  call temp:= `get`(v2, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7b92.  v1:= temp @kind object;
  #L1d7b94.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7b98.  if v1 == 0 then goto L1d7b86;
  #L1d7b9c.  call temp:= `removeEntry`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.removeEntry:(Lcom/github/mikephil/charting/data/Entry;)Z` @kind interface;
  #L1d7ba2.  v0:= temp;
  #L1d7ba4.  if v0 == 0 then goto L1d7b86;
  #L1d7ba8.  call `calcMinMax`(v3) @signature `Lcom/github/mikephil/charting/data/ChartData;.calcMinMax:()V` @kind virtual;
  #L1d7bae.  goto L1d7b86;
}
procedure `void` `setDrawValues`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `boolean` v4 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setDrawValues:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7bc0.  v0:= 0I;
  #L1d7bc2.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7bc6.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7bcc.  v2:= temp;
  #L1d7bce.  if v0 >= v2 then goto L1d7bee;
  #L1d7bd2.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7bd6.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7bdc.  v1:= temp @kind object;
  #L1d7bde.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7be2.  call `setDrawValues`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setDrawValues:(Z)V` @kind interface;
  #L1d7be8.  v0:= v0 + 1;
  #L1d7bec.  goto L1d7bc2;
  #L1d7bee.  return @kind void;
}
procedure `void` `setHighlightEnabled`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `boolean` v4 @name `enabled`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setHighlightEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7c00.  v0:= 0I;
  #L1d7c02.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c06.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7c0c.  v2:= temp;
  #L1d7c0e.  if v0 >= v2 then goto L1d7c2e;
  #L1d7c12.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c16.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7c1c.  v1:= temp @kind object;
  #L1d7c1e.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7c22.  call `setHighlightEnabled`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setHighlightEnabled:(Z)V` @kind interface;
  #L1d7c28.  v0:= v0 + 1;
  #L1d7c2c.  goto L1d7c02;
  #L1d7c2e.  return @kind void;
}
procedure `void` `setValueFormatter`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `com.github.mikephil.charting.formatter.ValueFormatter` v4 @kind object @name `f`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/ValueFormatter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7c40.  if v4 != 0 then goto L1d7c46;
  #L1d7c44.  return @kind void;
  #L1d7c46.  v0:= 0I;
  #L1d7c48.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c4c.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7c52.  v2:= temp;
  #L1d7c54.  if v0 >= v2 then goto L1d7c44;
  #L1d7c58.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c5c.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7c62.  v1:= temp @kind object;
  #L1d7c64.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7c68.  call `setValueFormatter`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/ValueFormatter;)V` @kind interface;
  #L1d7c6e.  v0:= v0 + 1;
  #L1d7c72.  goto L1d7c48;
}
procedure `void` `setValueTextColor`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `int` v4 @name `color`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setValueTextColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7c84.  v0:= 0I;
  #L1d7c86.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c8a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7c90.  v2:= temp;
  #L1d7c92.  if v0 >= v2 then goto L1d7cb2;
  #L1d7c96.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7c9a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7ca0.  v1:= temp @kind object;
  #L1d7ca2.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7ca6.  call `setValueTextColor`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setValueTextColor:(I)V` @kind interface;
  #L1d7cac.  v0:= v0 + 1;
  #L1d7cb0.  goto L1d7c86;
  #L1d7cb2.  return @kind void;
}
procedure `void` `setValueTextColors`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `java.util.List` v4 @kind object) @signature `Lcom/github/mikephil/charting/data/ChartData;.setValueTextColors:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7cc4.  v0:= 0I;
  #L1d7cc6.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7cca.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7cd0.  v2:= temp;
  #L1d7cd2.  if v0 >= v2 then goto L1d7cf2;
  #L1d7cd6.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7cda.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7ce0.  v1:= temp @kind object;
  #L1d7ce2.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7ce6.  call `setValueTextColors`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setValueTextColors:(Ljava/util/List;)V` @kind interface;
  #L1d7cec.  v0:= v0 + 1;
  #L1d7cf0.  goto L1d7cc6;
  #L1d7cf2.  return @kind void;
}
procedure `void` `setValueTextSize`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `float` v4 @name `size`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setValueTextSize:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7d04.  v0:= 0I;
  #L1d7d06.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7d0a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7d10.  v2:= temp;
  #L1d7d12.  if v0 >= v2 then goto L1d7d32;
  #L1d7d16.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7d1a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7d20.  v1:= temp @kind object;
  #L1d7d22.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7d26.  call `setValueTextSize`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setValueTextSize:(F)V` @kind interface;
  #L1d7d2c.  v0:= v0 + 1;
  #L1d7d30.  goto L1d7d06;
  #L1d7d32.  return @kind void;
}
procedure `void` `setValueTypeface`(`com.github.mikephil.charting.data.ChartData` v3 @kind this, `android.graphics.Typeface` v4 @kind object @name `tf`) @signature `Lcom/github/mikephil/charting/data/ChartData;.setValueTypeface:(Landroid/graphics/Typeface;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d7d44.  v0:= 0I;
  #L1d7d46.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7d4a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1d7d50.  v2:= temp;
  #L1d7d52.  if v0 >= v2 then goto L1d7d72;
  #L1d7d56.  v2:= v3.`com.github.mikephil.charting.data.ChartData.mDataSets` @type ^`java.util.List` @kind object;
  #L1d7d5a.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1d7d60.  v1:= temp @kind object;
  #L1d7d62.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IDataSet`) v1 @kind object;
  #L1d7d66.  call `setValueTypeface`(v1, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;.setValueTypeface:(Landroid/graphics/Typeface;)V` @kind interface;
  #L1d7d6c.  v0:= v0 + 1;
  #L1d7d70.  goto L1d7d46;
  #L1d7d72.  return @kind void;
}
