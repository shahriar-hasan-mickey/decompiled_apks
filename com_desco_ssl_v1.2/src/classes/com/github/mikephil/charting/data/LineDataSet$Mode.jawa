record `com.github.mikephil.charting.data.LineDataSet$Mode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.github.mikephil.charting.data.LineDataSet$Mode`[] `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.HORIZONTAL_BEZIER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.github.mikephil.charting.data.LineDataSet$Mode` `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1d7ed8.  v5:= 3I;
  #L1d7eda.  v4:= 2I;
  #L1d7edc.  v3:= 1I;
  #L1d7ede.  v2:= 0I;
  #L1d7ee0.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L1d7ee4.  v1:= "LINEAR" @kind object;
  #L1d7ee8.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1d7eee.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L1d7ef2.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L1d7ef6.  v1:= "STEPPED" @kind object;
  #L1d7efa.  call `<init>`(v0, v1, v3) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1d7f00.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L1d7f04.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L1d7f08.  v1:= "CUBIC_BEZIER" @kind object;
  #L1d7f0c.  call `<init>`(v0, v1, v4) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1d7f12.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L1d7f16.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`;
  #L1d7f1a.  v1:= "HORIZONTAL_BEZIER" @kind object;
  #L1d7f1e.  call `<init>`(v0, v1, v5) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1d7f24.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.HORIZONTAL_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` := v0 @kind object;
  #L1d7f28.  v0:= 4I;
  #L1d7f2a.  v0:= new `com.github.mikephil.charting.data.LineDataSet$Mode`[v0];
  #L1d7f2e.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.LINEAR` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L1d7f32.  v0[v2]:= v1 @kind object;
  #L1d7f36.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.STEPPED` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L1d7f3a.  v0[v3]:= v1 @kind object;
  #L1d7f3e.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.CUBIC_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L1d7f42.  v0[v4]:= v1 @kind object;
  #L1d7f46.  v1:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.HORIZONTAL_BEZIER` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L1d7f4a.  v0[v5]:= v1 @kind object;
  #L1d7f4e.  `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode`[] := v0 @kind object;
  #L1d7f52.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.data.LineDataSet$Mode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1d7f64.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L1d7f6a.  return @kind void;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode` `valueOf`(`java.lang.String` v1 @kind object @name `name`) @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.valueOf:(Ljava/lang/String;)Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d7f7c.  v0:= constclass @type ^`com.github.mikephil.charting.data.LineDataSet$Mode` @kind object;
  #L1d7f80.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L1d7f86.  v0:= temp @kind object;
  #L1d7f88.  v0:= (`com.github.mikephil.charting.data.LineDataSet$Mode`) v0 @kind object;
  #L1d7f8c.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.LineDataSet$Mode`[] `values`() @signature `Lcom/github/mikephil/charting/data/LineDataSet$Mode;.values:()[Lcom/github/mikephil/charting/data/LineDataSet$Mode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1d7fa0.  v0:= `@@com.github.mikephil.charting.data.LineDataSet$Mode.$VALUES` @type ^`com.github.mikephil.charting.data.LineDataSet$Mode`[] @kind object;
  #L1d7fa4.  call temp:= `clone`(v0) @signature `[Lcom/github/mikephil/charting/data/LineDataSet$Mode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L1d7faa.  v0:= temp @kind object;
  #L1d7fac.  v0:= (`com.github.mikephil.charting.data.LineDataSet$Mode`[]) v0 @kind object;
  #L1d7fb0.  return v0 @kind object;
}
