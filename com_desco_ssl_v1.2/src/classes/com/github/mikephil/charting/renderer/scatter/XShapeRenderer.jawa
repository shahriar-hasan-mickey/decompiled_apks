record `com.github.mikephil.charting.renderer.scatter.XShapeRenderer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.renderer.scatter.ShapeRenderer` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.renderer.scatter.XShapeRenderer` v0 @kind this) @signature `Lcom/github/mikephil/charting/renderer/scatter/XShapeRenderer;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2bec1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2bec22.  return @kind void;
}
procedure `void` `renderShape`(`com.github.mikephil.charting.renderer.scatter.XShapeRenderer` v8 @kind this, `android.graphics.Canvas` v9 @kind object @name `c`, `com.github.mikephil.charting.interfaces.datasets.IScatterDataSet` v10 @kind object @name `dataSet`, `com.github.mikephil.charting.utils.ViewPortHandler` v11 @kind object @name `viewPortHandler`, `com.github.mikephil.charting.buffer.ScatterBuffer` v12 @kind object @name `buffer`, `android.graphics.Paint` v13 @kind object @name `renderPaint`, `float` v14 @name `shapeSize`) @signature `Lcom/github/mikephil/charting/renderer/scatter/XShapeRenderer;.renderShape:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/buffer/ScatterBuffer;Landroid/graphics/Paint;F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bec34.  v0:= 2.0F;
  #L2bec38.  v7:= v14 / v0 @kind float;
  #L2bec3c.  v0:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L2bec40.  call `setStyle`(v13, v0) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L2bec46.  v0:= 1.0F;
  #L2bec4a.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2bec50.  v0:= temp;
  #L2bec52.  call `setStrokeWidth`(v13, v0) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L2bec58.  v6:= 0I;
  #L2bec5a.  call temp:= `size`(v12) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.size:()I` @kind virtual;
  #L2bec60.  v0:= temp;
  #L2bec62.  if v6 >= v0 then goto L2bec7a;
  #L2bec66.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bec6a.  v0:= v0[v6];
  #L2bec6e.  call temp:= `isInBoundsRight`(v11, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsRight:(F)Z` @kind virtual;
  #L2bec74.  v0:= temp;
  #L2bec76.  if v0 != 0 then goto L2bec7c;
  #L2bec7a.  return @kind void;
  #L2bec7c.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bec80.  v0:= v0[v6];
  #L2bec84.  call temp:= `isInBoundsLeft`(v11, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsLeft:(F)Z` @kind virtual;
  #L2bec8a.  v0:= temp;
  #L2bec8c.  if v0 == 0 then goto L2beca8;
  #L2bec90.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bec94.  v1:= v6 + 1;
  #L2bec98.  v0:= v0[v1];
  #L2bec9c.  call temp:= `isInBoundsY`(v11, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsY:(F)Z` @kind virtual;
  #L2beca2.  v0:= temp;
  #L2beca4.  if v0 != 0 then goto L2becae;
  #L2beca8.  v6:= v6 + 2;
  #L2becac.  goto L2bec5a;
  #L2becae.  v0:= v6 / 2;
  #L2becb2.  call temp:= `getColor`(v10, v0) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;.getColor:(I)I` @kind interface;
  #L2becb8.  v0:= temp;
  #L2becba.  call `setColor`(v13, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L2becc0.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2becc4.  v0:= v0[v6];
  #L2becc8.  v1:= v0 - v7 @kind float;
  #L2beccc.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2becd0.  v2:= v6 + 1;
  #L2becd4.  v0:= v0[v2];
  #L2becd8.  v2:= v0 - v7 @kind float;
  #L2becdc.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bece0.  v0:= v0[v6];
  #L2bece4.  v3:= v0 + v7 @kind float;
  #L2bece8.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2becec.  v4:= v6 + 1;
  #L2becf0.  v0:= v0[v4];
  #L2becf4.  v4:= v0 + v7 @kind float;
  #L2becf8.  v0:= v9 @kind object;
  #L2becfa.  v5:= v13 @kind object;
  #L2becfc.  call `drawLine`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L2bed02.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bed06.  v0:= v0[v6];
  #L2bed0a.  v1:= v0 + v7 @kind float;
  #L2bed0e.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bed12.  v2:= v6 + 1;
  #L2bed16.  v0:= v0[v2];
  #L2bed1a.  v2:= v0 - v7 @kind float;
  #L2bed1e.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bed22.  v0:= v0[v6];
  #L2bed26.  v3:= v0 - v7 @kind float;
  #L2bed2a.  v0:= v12.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2bed2e.  v4:= v6 + 1;
  #L2bed32.  v0:= v0[v4];
  #L2bed36.  v4:= v0 + v7 @kind float;
  #L2bed3a.  v0:= v9 @kind object;
  #L2bed3c.  v5:= v13 @kind object;
  #L2bed3e.  call `drawLine`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L2bed44.  goto L2beca8;
}
