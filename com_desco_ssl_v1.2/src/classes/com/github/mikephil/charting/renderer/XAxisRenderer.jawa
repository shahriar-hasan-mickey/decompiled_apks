record `com.github.mikephil.charting.renderer.XAxisRenderer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.renderer.AxisRenderer` @kind class {
  `android.graphics.Path` `com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @AccessFlag ;
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @AccessFlag PROTECTED;
  `android.graphics.Path` `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.XAxis` `com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.renderer.XAxisRenderer` v2 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v3 @kind object @name `viewPortHandler`, `com.github.mikephil.charting.components.XAxis` v4 @kind object @name `xAxis`, `com.github.mikephil.charting.utils.Transformer` v5 @kind object @name `trans`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/XAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L330198.  v1:= 2I;
  #L33019a.  call `<init>`(v2, v3, v5, v4) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/AxisBase;)V` @kind direct;
  #L3301a0.  v0:= new `android.graphics.Path`;
  #L3301a4.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3301aa.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @type ^`android.graphics.Path` := v0 @kind object;
  #L3301ae.  v0:= new `float`[v1];
  #L3301b2.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] := v0 @kind object;
  #L3301b6.  v0:= new `float`[v1];
  #L3301ba.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @type ^`float`[] := v0 @kind object;
  #L3301be.  v0:= 4I;
  #L3301c0.  v0:= new `float`[v0];
  #L3301c4.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] := v0 @kind object;
  #L3301c8.  v0:= new `android.graphics.Path`;
  #L3301cc.  call `<init>`(v0) @signature `Landroid/graphics/Path;.<init>:()V` @kind direct;
  #L3301d2.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` := v0 @kind object;
  #L3301d6.  v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` := v4 @kind object;
  #L3301da.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3301de.  v1:= -16777216I;
  #L3301e2.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3301e8.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3301ec.  v1:= `@@android.graphics.Paint$Align.CENTER` @type ^`android.graphics.Paint$Align` @kind object;
  #L3301f0.  call `setTextAlign`(v0, v1) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L3301f6.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3301fa.  v1:= 10.0F;
  #L3301fe.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L330204.  v1:= temp;
  #L330206.  call `setTextSize`(v0, v1) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L33020c.  return @kind void;
}
procedure `void` `computeAxis`(`com.github.mikephil.charting.renderer.XAxisRenderer` v5 @kind this, `float` v6 @name `min`, `float` v7 @name `max`, `boolean` v8 @name `inverted`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L330220.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330224.  call temp:= `contentWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentWidth:()F` @kind virtual;
  #L33022a.  v2:= temp;
  #L33022c.  v3:= 10.0F;
  #L330230.  v2:= fcmpl(v2, v3);
  #L330234.  if v2 <= 0 then goto L3302ac;
  #L330238.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33023c.  call temp:= `isFullyZoomedOutX`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOutX:()Z` @kind virtual;
  #L330242.  v2:= temp;
  #L330244.  if v2 != 0 then goto L3302ac;
  #L330248.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L33024c.  v3:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330250.  call temp:= `contentLeft`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L330256.  v3:= temp;
  #L330258.  v4:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33025c.  call temp:= `contentTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330262.  v4:= temp;
  #L330264.  call temp:= `getValuesByTouchPoint`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L33026a.  v0:= temp @kind object;
  #L33026c.  v2:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L330270.  v3:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330274.  call temp:= `contentRight`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L33027a.  v3:= temp;
  #L33027c.  v4:= v5.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330280.  call temp:= `contentTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330286.  v4:= temp;
  #L330288.  call temp:= `getValuesByTouchPoint`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L33028e.  v1:= temp @kind object;
  #L330290.  if v8 == 0 then goto L3302b4;
  #L330294.  v2:= v1.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L330298.  v6:= (`float`) v2 @kind d2f;
  #L33029a.  v2:= v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L33029e.  v7:= (`float`) v2 @kind d2f;
  #L3302a0.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3302a6.  call `recycleInstance`(v1) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L3302ac.  call `computeAxisValues`(v5, v6, v7) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxisValues:(FF)V` @kind virtual;
  #L3302b2.  return @kind void;
  #L3302b4.  v2:= v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3302b8.  v6:= (`float`) v2 @kind d2f;
  #L3302ba.  v2:= v1.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3302be.  v7:= (`float`) v2 @kind d2f;
  #L3302c0.  goto L3302a0;
}
procedure `void` `computeAxisValues`(`com.github.mikephil.charting.renderer.XAxisRenderer` v0 @kind this, `float` v1 @name `min`, `float` v2 @name `max`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxisValues:(FF)V` @AccessFlag PROTECTED {
    temp;

  #L3302d4.  call `computeAxisValues`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/AxisRenderer;.computeAxisValues:(FF)V` @kind super;
  #L3302da.  call `computeSize`(v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeSize:()V` @kind virtual;
  #L3302e0.  return @kind void;
}
procedure `void` `computeSize`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeSize:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3302f4.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3302f8.  call temp:= `getLongestLabel`(v5) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L3302fe.  v4:= temp @kind object;
  #L330300.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330304.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330308.  call temp:= `getTypeface`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.getTypeface:()Landroid/graphics/Typeface;` @kind virtual;
  #L33030e.  v6:= temp @kind object;
  #L330310.  call temp:= `setTypeface`(v5, v6) @signature `Landroid/graphics/Paint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L330316.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L33031a.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33031e.  call temp:= `getTextSize`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.getTextSize:()F` @kind virtual;
  #L330324.  v6:= temp;
  #L330326.  call `setTextSize`(v5, v6) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L33032c.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330330.  call temp:= `calcTextSize`(v5, v4) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L330336.  v2:= temp @kind object;
  #L330338.  v3:= v2.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L33033c.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330340.  v6:= "Q" @kind object;
  #L330344.  call temp:= `calcTextHeight`(v5, v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L33034a.  v5:= temp;
  #L33034c.  v0:= (`float`) v5 @kind i2f;
  #L33034e.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330352.  call temp:= `getLabelRotationAngle`(v5) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLabelRotationAngle:()F` @kind virtual;
  #L330358.  v5:= temp;
  #L33035a.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v3, v0, v5) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L330360.  v1:= temp @kind object;
  #L330362.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330366.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L33036c.  v6:= temp;
  #L33036e.  v5.`com.github.mikephil.charting.components.XAxis.mLabelWidth` @type ^`int` := v6;
  #L330372.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330376.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L33037c.  v6:= temp;
  #L33037e.  v5.`com.github.mikephil.charting.components.XAxis.mLabelHeight` @type ^`int` := v6;
  #L330382.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330386.  v6:= v1.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L33038a.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L330390.  v6:= temp;
  #L330392.  v5.`com.github.mikephil.charting.components.XAxis.mLabelRotatedWidth` @type ^`int` := v6;
  #L330396.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33039a.  v6:= v1.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L33039e.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3303a4.  v6:= temp;
  #L3303a6.  v5.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int` := v6;
  #L3303aa.  call `recycleInstance`(v1) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3303b0.  call `recycleInstance`(v2) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L3303b6.  return @kind void;
}
procedure `void` `drawGridLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v1 @kind this, `android.graphics.Canvas` v2 @kind object @name `c`, `float` v3 @name `x`, `float` v4 @name `y`, `android.graphics.Path` v5 @kind object @name `gridLinePath`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawGridLine:(Landroid/graphics/Canvas;FFLandroid/graphics/Path;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3303c8.  v0:= v1.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3303cc.  call temp:= `contentBottom`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3303d2.  v0:= temp;
  #L3303d4.  call `moveTo`(v5, v3, v0) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L3303da.  v0:= v1.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3303de.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3303e4.  v0:= temp;
  #L3303e6.  call `lineTo`(v5, v3, v0) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L3303ec.  v0:= v1.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L3303f0.  call `drawPath`(v2, v5, v0) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L3303f6.  call `reset`(v5) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L3303fc.  return @kind void;
}
procedure `void` `drawLabel`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `c`, `java.lang.String` v9 @kind object @name `formattedLabel`, `float` v10 @name `x`, `float` v11 @name `y`, `com.github.mikephil.charting.utils.MPPointF` v12 @kind object @name `anchor`, `float` v13 @name `angleDegrees`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabel:(Landroid/graphics/Canvas;Ljava/lang/String;FFLcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L330410.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330414.  v0:= v8 @kind object;
  #L330416.  v1:= v9 @kind object;
  #L330418.  v2:= v10;
  #L33041a.  v3:= v11;
  #L33041c.  v5:= v12 @kind object;
  #L33041e.  v6:= v13;
  #L330420.  call `drawXAxisValue`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawXAxisValue:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/graphics/Paint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @kind static;
  #L330426.  return @kind void;
}
procedure `void` `drawLabels`(`com.github.mikephil.charting.renderer.XAxisRenderer` v12 @kind this, `android.graphics.Canvas` v13 @kind object @name `c`, `float` v14 @name `pos`, `com.github.mikephil.charting.utils.MPPointF` v15 @kind object @name `anchor`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L330438.  v11:= 2.0F;
  #L33043c.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330440.  call temp:= `getLabelRotationAngle`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLabelRotationAngle:()F` @kind virtual;
  #L330446.  v6:= temp;
  #L330448.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33044c.  call temp:= `isCenterAxisLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isCenterAxisLabelsEnabled:()Z` @kind virtual;
  #L330452.  v7:= temp;
  #L330454.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330458.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mEntryCount` @type ^`int`;
  #L33045c.  v0:= v0 * 2;
  #L330460.  v9:= new `float`[v0];
  #L330464.  v8:= 0I;
  #L330466.  v0:= length @variable v9;
  #L330468.  if v8 >= v0 then goto L3304a0;
  #L33046c.  if v7 == 0 then goto L33048a;
  #L330470.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330474.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mCenteredEntries` @type ^`float`[] @kind object;
  #L330478.  v1:= v8 / 2;
  #L33047c.  v0:= v0[v1];
  #L330480.  v9[v8]:= v0;
  #L330484.  v8:= v8 + 2;
  #L330488.  goto L330466;
  #L33048a.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33048e.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mEntries` @type ^`float`[] @kind object;
  #L330492.  v1:= v8 / 2;
  #L330496.  v0:= v0[v1];
  #L33049a.  v9[v8]:= v0;
  #L33049e.  goto L330484;
  #L3304a0.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3304a4.  call `pointValuesToPixel`(v0, v9) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L3304aa.  v8:= 0I;
  #L3304ac.  v0:= length @variable v9;
  #L3304ae.  if v8 >= v0 then goto L33058c;
  #L3304b2.  v3:= v9[v8];
  #L3304b6.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3304ba.  call temp:= `isInBoundsX`(v0, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isInBoundsX:(F)Z` @kind virtual;
  #L3304c0.  v0:= temp;
  #L3304c2.  if v0 == 0 then goto L33056c;
  #L3304c6.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3304ca.  call temp:= `getValueFormatter`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/AxisValueFormatter;` @kind virtual;
  #L3304d0.  v0:= temp @kind object;
  #L3304d2.  v1:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3304d6.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mEntries` @type ^`float`[] @kind object;
  #L3304da.  v4:= v8 / 2;
  #L3304de.  v1:= v1[v4];
  #L3304e2.  v4:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3304e6.  call temp:= `getFormattedValue`(v0, v1, v4) @signature `Lcom/github/mikephil/charting/formatter/AxisValueFormatter;.getFormattedValue:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @kind interface;
  #L3304ec.  v2:= temp @kind object;
  #L3304ee.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3304f2.  call temp:= `isAvoidFirstLastClippingEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isAvoidFirstLastClippingEnabled:()Z` @kind virtual;
  #L3304f8.  v0:= temp;
  #L3304fa.  if v0 == 0 then goto L33055e;
  #L3304fe.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330502.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mEntryCount` @type ^`int`;
  #L330506.  v0:= v0 + -1;
  #L33050a.  if v8 != v0 then goto L330572;
  #L33050e.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330512.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mEntryCount` @type ^`int`;
  #L330516.  v1:= 1I;
  #L330518.  if v0 <= v1 then goto L330572;
  #L33051c.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330520.  call temp:= `calcTextWidth`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L330526.  v0:= temp;
  #L330528.  v10:= (`float`) v0 @kind i2f;
  #L33052a.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33052e.  call temp:= `offsetRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.offsetRight:()F` @kind virtual;
  #L330534.  v0:= temp;
  #L330536.  v0:= v0 * v11 @kind float;
  #L330538.  v0:= fcmpl(v10, v0);
  #L33053c.  if v0 <= 0 then goto L33055e;
  #L330540.  v0:= v3 + v10 @kind float;
  #L330544.  v1:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330548.  call temp:= `getChartWidth`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L33054e.  v1:= temp;
  #L330550.  v0:= fcmpl(v0, v1);
  #L330554.  if v0 <= 0 then goto L33055e;
  #L330558.  v0:= v10 / v11 @kind float;
  #L33055c.  v3:= v3 - v0 @kind float;
  #L33055e.  v0:= v12 @kind object;
  #L330560.  v1:= v13 @kind object;
  #L330562.  v4:= v14;
  #L330564.  v5:= v15 @kind object;
  #L330566.  call `drawLabel`(v0, v1, v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabel:(Landroid/graphics/Canvas;Ljava/lang/String;FFLcom/github/mikephil/charting/utils/MPPointF;F)V` @kind virtual;
  #L33056c.  v8:= v8 + 2;
  #L330570.  goto L3304ac;
  #L330572.  if v8 != 0 then goto L33055e;
  #L330576.  v0:= v12.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L33057a.  call temp:= `calcTextWidth`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L330580.  v0:= temp;
  #L330582.  v10:= (`float`) v0 @kind i2f;
  #L330584.  v0:= v10 / v11 @kind float;
  #L330588.  v3:= v3 + v0 @kind float;
  #L33058a.  goto L33055e;
  #L33058c.  return @kind void;
}
procedure `void` `renderAxisLabels`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3305a0.  v6:= 1.0F;
  #L3305a4.  v5:= 0I;
  #L3305a6.  v4:= 0.5F;
  #L3305aa.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3305ae.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L3305b4.  v2:= temp;
  #L3305b6.  if v2 == 0 then goto L3305ca;
  #L3305ba.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3305be.  call temp:= `isDrawLabelsEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L3305c4.  v2:= temp;
  #L3305c6.  if v2 != 0 then goto L3305cc;
  #L3305ca.  return @kind void;
  #L3305cc.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3305d0.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getYOffset:()F` @kind virtual;
  #L3305d6.  v1:= temp;
  #L3305d8.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3305dc.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3305e0.  call temp:= `getTypeface`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getTypeface:()Landroid/graphics/Typeface;` @kind virtual;
  #L3305e6.  v3:= temp @kind object;
  #L3305e8.  call temp:= `setTypeface`(v2, v3) @signature `Landroid/graphics/Paint;.setTypeface:(Landroid/graphics/Typeface;)Landroid/graphics/Typeface;` @kind virtual;
  #L3305ee.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L3305f2.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3305f6.  call temp:= `getTextSize`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getTextSize:()F` @kind virtual;
  #L3305fc.  v3:= temp;
  #L3305fe.  call `setTextSize`(v2, v3) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L330604.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLabelPaint` @type ^`android.graphics.Paint` @kind object;
  #L330608.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33060c.  call temp:= `getTextColor`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.getTextColor:()I` @kind virtual;
  #L330612.  v3:= temp;
  #L330614.  call `setColor`(v2, v3) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L33061a.  call temp:= `getInstance`(v5, v5) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L330620.  v0:= temp @kind object;
  #L330622.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330626.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L33062c.  v2:= temp @kind object;
  #L33062e.  v3:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L330632.  if v2 != v3 then goto L330660;
  #L330636.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L33063a.  v2:= 1063675494I;
  #L330640.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v2;
  #L330644.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330648.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L33064e.  v2:= temp;
  #L330650.  v2:= v2 - v1 @kind float;
  #L330652.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L330658.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L33065e.  goto L3305ca;
  #L330660.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330664.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L33066a.  v2:= temp @kind object;
  #L33066c.  v3:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L330670.  if v2 != v3 then goto L33069e;
  #L330674.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L330678.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v6;
  #L33067c.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330680.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330686.  v2:= temp;
  #L330688.  v2:= v2 + v1 @kind float;
  #L33068a.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33068e.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L330692.  v3:= (`float`) v3 @kind i2f;
  #L330694.  v2:= v2 + v3 @kind float;
  #L330696.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L33069c.  goto L330658;
  #L33069e.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3306a2.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3306a8.  v2:= temp @kind object;
  #L3306aa.  v3:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3306ae.  if v2 != v3 then goto L3306d0;
  #L3306b2.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L3306b6.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L3306ba.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3306be.  call temp:= `contentBottom`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3306c4.  v2:= temp;
  #L3306c6.  v2:= v2 + v1 @kind float;
  #L3306c8.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L3306ce.  goto L330658;
  #L3306d0.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3306d4.  call temp:= `getPosition`(v2) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3306da.  v2:= temp @kind object;
  #L3306dc.  v3:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3306e0.  if v2 != v3 then goto L33070e;
  #L3306e4.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L3306e8.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L3306ec.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3306f0.  call temp:= `contentBottom`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3306f6.  v2:= temp;
  #L3306f8.  v2:= v2 - v1 @kind float;
  #L3306fa.  v3:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3306fe.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L330702.  v3:= (`float`) v3 @kind i2f;
  #L330704.  v2:= v2 - v3 @kind float;
  #L330706.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L33070c.  goto L330658;
  #L33070e.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L330712.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v6;
  #L330716.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33071a.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330720.  v2:= temp;
  #L330722.  v2:= v2 - v1 @kind float;
  #L330724.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L33072a.  v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v4;
  #L33072e.  v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v5;
  #L330732.  v2:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330736.  call temp:= `contentBottom`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L33073c.  v2:= temp;
  #L33073e.  v2:= v2 + v1 @kind float;
  #L330740.  call `drawLabels`(v7, v8, v2, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawLabels:(Landroid/graphics/Canvas;FLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L330746.  goto L330658;
}
procedure `void` `renderAxisLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L330758.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33075c.  call temp:= `isDrawAxisLineEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawAxisLineEnabled:()Z` @kind virtual;
  #L330762.  v0:= temp;
  #L330764.  if v0 == 0 then goto L330778;
  #L330768.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33076c.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L330772.  v0:= temp;
  #L330774.  if v0 != 0 then goto L33077a;
  #L330778.  return @kind void;
  #L33077a.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L33077e.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330782.  call temp:= `getAxisLineColor`(v1) @signature `Lcom/github/mikephil/charting/components/XAxis;.getAxisLineColor:()I` @kind virtual;
  #L330788.  v1:= temp;
  #L33078a.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L330790.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330794.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330798.  call temp:= `getAxisLineWidth`(v1) @signature `Lcom/github/mikephil/charting/components/XAxis;.getAxisLineWidth:()F` @kind virtual;
  #L33079e.  v1:= temp;
  #L3307a0.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3307a6.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3307aa.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3307b0.  v0:= temp @kind object;
  #L3307b2.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3307b6.  if v0 == v1 then goto L3307e2;
  #L3307ba.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3307be.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3307c4.  v0:= temp @kind object;
  #L3307c6.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3307ca.  if v0 == v1 then goto L3307e2;
  #L3307ce.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3307d2.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3307d8.  v0:= temp @kind object;
  #L3307da.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3307de.  if v0 != v1 then goto L33081e;
  #L3307e2.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3307e6.  call temp:= `contentLeft`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3307ec.  v1:= temp;
  #L3307ee.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3307f2.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3307f8.  v2:= temp;
  #L3307fa.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3307fe.  call temp:= `contentRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L330804.  v3:= temp;
  #L330806.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33080a.  call temp:= `contentTop`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330810.  v4:= temp;
  #L330812.  v5:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330816.  v0:= v7 @kind object;
  #L330818.  call `drawLine`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L33081e.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330822.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L330828.  v0:= temp @kind object;
  #L33082a.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L33082e.  if v0 == v1 then goto L33085a;
  #L330832.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330836.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L33083c.  v0:= temp @kind object;
  #L33083e.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM_INSIDE` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L330842.  if v0 == v1 then goto L33085a;
  #L330846.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L33084a.  call temp:= `getPosition`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L330850.  v0:= temp @kind object;
  #L330852.  v1:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L330856.  if v0 != v1 then goto L330778;
  #L33085a.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33085e.  call temp:= `contentLeft`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L330864.  v1:= temp;
  #L330866.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L33086a.  call temp:= `contentBottom`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L330870.  v2:= temp;
  #L330872.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330876.  call temp:= `contentRight`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L33087c.  v3:= temp;
  #L33087e.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330882.  call temp:= `contentBottom`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L330888.  v4:= temp;
  #L33088a.  v5:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxisLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L33088e.  v0:= v7 @kind object;
  #L330890.  call `drawLine`(v0, v1, v2, v3, v4, v5) @signature `Landroid/graphics/Canvas;.drawLine:(FFFFLandroid/graphics/Paint;)V` @kind virtual;
  #L330896.  goto L330778;
}
procedure `void` `renderGridLines`(`com.github.mikephil.charting.renderer.XAxisRenderer` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3308ac.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3308b0.  call temp:= `isDrawGridLinesEnabled`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawGridLinesEnabled:()Z` @kind virtual;
  #L3308b6.  v3:= temp;
  #L3308b8.  if v3 == 0 then goto L3308cc;
  #L3308bc.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3308c0.  call temp:= `isEnabled`(v3) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L3308c6.  v3:= temp;
  #L3308c8.  if v3 != 0 then goto L3308ce;
  #L3308cc.  return @kind void;
  #L3308ce.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] @kind object;
  #L3308d2.  v3:= length @variable v3;
  #L3308d4.  v4:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mAxis` @type ^`com.github.mikephil.charting.components.AxisBase` @kind object;
  #L3308d8.  v4:= v4.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L3308dc.  v4:= v4 * 2;
  #L3308e0.  if v3 == v4 then goto L3308f8;
  #L3308e4.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3308e8.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mEntryCount` @type ^`int`;
  #L3308ec.  v3:= v3 * 2;
  #L3308f0.  v3:= new `float`[v3];
  #L3308f4.  v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] := v3 @kind object;
  #L3308f8.  v2:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesBuffer` @type ^`float`[] @kind object;
  #L3308fc.  v1:= 0I;
  #L3308fe.  v3:= length @variable v2;
  #L330900.  if v1 >= v3 then goto L330936;
  #L330904.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330908.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mEntries` @type ^`float`[] @kind object;
  #L33090c.  v4:= v1 / 2;
  #L330910.  v3:= v3[v4];
  #L330914.  v2[v1]:= v3;
  #L330918.  v3:= v1 + 1;
  #L33091c.  v4:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330920.  v4:= v4.`com.github.mikephil.charting.components.XAxis.mEntries` @type ^`float`[] @kind object;
  #L330924.  v5:= v1 / 2;
  #L330928.  v4:= v4[v5];
  #L33092c.  v2[v3]:= v4;
  #L330930.  v1:= v1 + 2;
  #L330934.  goto L3308fe;
  #L330936.  v3:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L33093a.  call `pointValuesToPixel`(v3, v2) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L330940.  call `setupGridPaint`(v6) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.setupGridPaint:()V` @kind virtual;
  #L330946.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderGridLinesPath` @type ^`android.graphics.Path` @kind object;
  #L33094a.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L330950.  v1:= 0I;
  #L330952.  v3:= length @variable v2;
  #L330954.  if v1 >= v3 then goto L3308cc;
  #L330958.  v3:= v2[v1];
  #L33095c.  v4:= v1 + 1;
  #L330960.  v4:= v2[v4];
  #L330964.  call `drawGridLine`(v6, v7, v3, v4, v0) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.drawGridLine:(Landroid/graphics/Canvas;FFLandroid/graphics/Path;)V` @kind virtual;
  #L33096a.  v1:= v1 + 2;
  #L33096e.  goto L330952;
}
procedure `void` `renderLimitLineLabel`(`com.github.mikephil.charting.renderer.XAxisRenderer` v7 @kind this, `android.graphics.Canvas` v8 @kind object @name `c`, `com.github.mikephil.charting.components.LimitLine` v9 @kind object @name `limitLine`, `float`[] v10 @kind object @name `position`, `float` v11 @name `yOffset`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLabel:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L330980.  v6:= 0I;
  #L330982.  call temp:= `getLabel`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLabel:()Ljava/lang/String;` @kind virtual;
  #L330988.  v0:= temp @kind object;
  #L33098a.  if v0 == 0 then goto L330a4e;
  #L33098e.  v4:= "" @kind object;
  #L330992.  call temp:= `equals`(v0, v4) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L330998.  v4:= temp;
  #L33099a.  if v4 != 0 then goto L330a4e;
  #L33099e.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3309a2.  call temp:= `getTextStyle`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getTextStyle:()Landroid/graphics/Paint$Style;` @kind virtual;
  #L3309a8.  v5:= temp @kind object;
  #L3309aa.  call `setStyle`(v4, v5) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L3309b0.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3309b4.  v5:= 0I;
  #L3309b6.  call temp:= `setPathEffect`(v4, v5) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L3309bc.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3309c0.  call temp:= `getTextColor`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getTextColor:()I` @kind virtual;
  #L3309c6.  v5:= temp;
  #L3309c8.  call `setColor`(v4, v5) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L3309ce.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3309d2.  v5:= 0.5F;
  #L3309d6.  call `setStrokeWidth`(v4, v5) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L3309dc.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L3309e0.  call temp:= `getTextSize`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getTextSize:()F` @kind virtual;
  #L3309e6.  v5:= temp;
  #L3309e8.  call `setTextSize`(v4, v5) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L3309ee.  call temp:= `getLineWidth`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineWidth:()F` @kind virtual;
  #L3309f4.  v4:= temp;
  #L3309f6.  call temp:= `getXOffset`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getXOffset:()F` @kind virtual;
  #L3309fc.  v5:= temp;
  #L3309fe.  v3:= v4 + v5 @kind float;
  #L330a02.  call temp:= `getLabelPosition`(v9) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLabelPosition:()Lcom/github/mikephil/charting/components/LimitLine$LimitLabelPosition;` @kind virtual;
  #L330a08.  v2:= temp @kind object;
  #L330a0a.  v4:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.RIGHT_TOP` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L330a0e.  if v2 != v4 then goto L330a50;
  #L330a12.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a16.  call temp:= `calcTextHeight`(v4, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L330a1c.  v4:= temp;
  #L330a1e.  v1:= (`float`) v4 @kind i2f;
  #L330a20.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a24.  v5:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L330a28.  call `setTextAlign`(v4, v5) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L330a2e.  v4:= v10[v6];
  #L330a32.  v4:= v4 + v3 @kind float;
  #L330a34.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330a38.  call temp:= `contentTop`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330a3e.  v5:= temp;
  #L330a40.  v5:= v5 + v11 @kind float;
  #L330a42.  v5:= v5 + v1 @kind float;
  #L330a44.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a48.  call `drawText`(v8, v0, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L330a4e.  return @kind void;
  #L330a50.  v4:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.RIGHT_BOTTOM` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L330a54.  if v2 != v4 then goto L330a86;
  #L330a58.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a5c.  v5:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L330a60.  call `setTextAlign`(v4, v5) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L330a66.  v4:= v10[v6];
  #L330a6a.  v4:= v4 + v3 @kind float;
  #L330a6c.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330a70.  call temp:= `contentBottom`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L330a76.  v5:= temp;
  #L330a78.  v5:= v5 - v11 @kind float;
  #L330a7a.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a7e.  call `drawText`(v8, v0, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L330a84.  goto L330a4e;
  #L330a86.  v4:= `@@com.github.mikephil.charting.components.LimitLine$LimitLabelPosition.LEFT_TOP` @type ^`com.github.mikephil.charting.components.LimitLine$LimitLabelPosition` @kind object;
  #L330a8a.  if v2 != v4 then goto L330acc;
  #L330a8e.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330a92.  v5:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L330a96.  call `setTextAlign`(v4, v5) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L330a9c.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330aa0.  call temp:= `calcTextHeight`(v4, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L330aa6.  v4:= temp;
  #L330aa8.  v1:= (`float`) v4 @kind i2f;
  #L330aaa.  v4:= v10[v6];
  #L330aae.  v4:= v4 - v3 @kind float;
  #L330ab0.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330ab4.  call temp:= `contentTop`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330aba.  v5:= temp;
  #L330abc.  v5:= v5 + v11 @kind float;
  #L330abe.  v5:= v5 + v1 @kind float;
  #L330ac0.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330ac4.  call `drawText`(v8, v0, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L330aca.  goto L330a4e;
  #L330acc.  v4:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330ad0.  v5:= `@@android.graphics.Paint$Align.RIGHT` @type ^`android.graphics.Paint$Align` @kind object;
  #L330ad4.  call `setTextAlign`(v4, v5) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L330ada.  v4:= v10[v6];
  #L330ade.  v4:= v4 - v3 @kind float;
  #L330ae0.  v5:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330ae4.  call temp:= `contentBottom`(v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L330aea.  v5:= temp;
  #L330aec.  v5:= v5 - v11 @kind float;
  #L330aee.  v6:= v7.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330af2.  call `drawText`(v8, v0, v4, v5, v6) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L330af8.  goto L330a4e;
}
procedure `void` `renderLimitLineLine`(`com.github.mikephil.charting.renderer.XAxisRenderer` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `c`, `com.github.mikephil.charting.components.LimitLine` v8 @kind object @name `limitLine`, `float`[] v9 @kind object @name `position`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLine:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L330b0c.  v5:= 3I;
  #L330b0e.  v4:= 2I;
  #L330b10.  v3:= 1I;
  #L330b12.  v2:= 0I;
  #L330b14.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b18.  v1:= v9[v2];
  #L330b1c.  v0[v2]:= v1;
  #L330b20.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b24.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330b28.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L330b2e.  v1:= temp;
  #L330b30.  v0[v3]:= v1;
  #L330b34.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b38.  v1:= v9[v2];
  #L330b3c.  v0[v4]:= v1;
  #L330b40.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b44.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L330b48.  call temp:= `contentBottom`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L330b4e.  v1:= temp;
  #L330b50.  v0[v5]:= v1;
  #L330b54.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L330b58.  call `reset`(v0) @signature `Landroid/graphics/Path;.reset:()V` @kind virtual;
  #L330b5e.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L330b62.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b66.  v1:= v1[v2];
  #L330b6a.  v2:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b6e.  v2:= v2[v3];
  #L330b72.  call `moveTo`(v0, v1, v2) @signature `Landroid/graphics/Path;.moveTo:(FF)V` @kind virtual;
  #L330b78.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L330b7c.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b80.  v1:= v1[v4];
  #L330b84.  v2:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLineSegmentsBuffer` @type ^`float`[] @kind object;
  #L330b88.  v2:= v2[v5];
  #L330b8c.  call `lineTo`(v0, v1, v2) @signature `Landroid/graphics/Path;.lineTo:(FF)V` @kind virtual;
  #L330b92.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330b96.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L330b9a.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L330ba0.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330ba4.  call temp:= `getLineColor`(v8) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineColor:()I` @kind virtual;
  #L330baa.  v1:= temp;
  #L330bac.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L330bb2.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330bb6.  call temp:= `getLineWidth`(v8) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLineWidth:()F` @kind virtual;
  #L330bbc.  v1:= temp;
  #L330bbe.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L330bc4.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330bc8.  call temp:= `getDashPathEffect`(v8) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getDashPathEffect:()Landroid/graphics/DashPathEffect;` @kind virtual;
  #L330bce.  v1:= temp @kind object;
  #L330bd0.  call temp:= `setPathEffect`(v0, v1) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L330bd6.  v0:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePath` @type ^`android.graphics.Path` @kind object;
  #L330bda.  v1:= v6.`com.github.mikephil.charting.renderer.XAxisRenderer.mLimitLinePaint` @type ^`android.graphics.Paint` @kind object;
  #L330bde.  call `drawPath`(v7, v0, v1) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L330be4.  return @kind void;
}
procedure `void` `renderLimitLines`(`com.github.mikephil.charting.renderer.XAxisRenderer` v9 @kind this, `android.graphics.Canvas` v10 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L330bf8.  v8:= 1I;
  #L330bfa.  v7:= 0I;
  #L330bfc.  v6:= 0I;
  #L330bfe.  v4:= v9.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330c02.  call temp:= `getLimitLines`(v4) @signature `Lcom/github/mikephil/charting/components/XAxis;.getLimitLines:()Ljava/util/List;` @kind virtual;
  #L330c08.  v2:= temp @kind object;
  #L330c0a.  if v2 == 0 then goto L330c1a;
  #L330c0e.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330c14.  v4:= temp;
  #L330c16.  if v4 > 0 then goto L330c1c;
  #L330c1a.  return @kind void;
  #L330c1c.  v3:= v9.`com.github.mikephil.charting.renderer.XAxisRenderer.mRenderLimitLinesBuffer` @type ^`float`[] @kind object;
  #L330c20.  v3[v7]:= v6;
  #L330c24.  v3[v8]:= v6;
  #L330c28.  v0:= 0I;
  #L330c2a.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L330c30.  v4:= temp;
  #L330c32.  if v0 >= v4 then goto L330c1a;
  #L330c36.  call temp:= `get`(v2, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L330c3c.  v1:= temp @kind object;
  #L330c3e.  v1:= (`com.github.mikephil.charting.components.LimitLine`) v1 @kind object;
  #L330c42.  call temp:= `isEnabled`(v1) @signature `Lcom/github/mikephil/charting/components/LimitLine;.isEnabled:()Z` @kind virtual;
  #L330c48.  v4:= temp;
  #L330c4a.  if v4 != 0 then goto L330c54;
  #L330c4e.  v0:= v0 + 1;
  #L330c52.  goto L330c2a;
  #L330c54.  call temp:= `getLimit`(v1) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getLimit:()F` @kind virtual;
  #L330c5a.  v4:= temp;
  #L330c5c.  v3[v7]:= v4;
  #L330c60.  v3[v8]:= v6;
  #L330c64.  v4:= v9.`com.github.mikephil.charting.renderer.XAxisRenderer.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L330c68.  call `pointValuesToPixel`(v4, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L330c6e.  call `renderLimitLineLine`(v9, v10, v1, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLine:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[F)V` @kind virtual;
  #L330c74.  v4:= 2.0F;
  #L330c78.  call temp:= `getYOffset`(v1) @signature `Lcom/github/mikephil/charting/components/LimitLine;.getYOffset:()F` @kind virtual;
  #L330c7e.  v5:= temp;
  #L330c80.  v4:= v4 + v5 @kind float;
  #L330c82.  call `renderLimitLineLabel`(v9, v10, v1, v3, v4) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLineLabel:(Landroid/graphics/Canvas;Lcom/github/mikephil/charting/components/LimitLine;[FF)V` @kind virtual;
  #L330c88.  goto L330c4e;
}
procedure `void` `setupGridPaint`(`com.github.mikephil.charting.renderer.XAxisRenderer` v2 @kind this) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.setupGridPaint:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L330c9c.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L330ca0.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330ca4.  call temp:= `getGridColor`(v1) @signature `Lcom/github/mikephil/charting/components/XAxis;.getGridColor:()I` @kind virtual;
  #L330caa.  v1:= temp;
  #L330cac.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L330cb2.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L330cb6.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330cba.  call temp:= `getGridLineWidth`(v1) @signature `Lcom/github/mikephil/charting/components/XAxis;.getGridLineWidth:()F` @kind virtual;
  #L330cc0.  v1:= temp;
  #L330cc2.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L330cc8.  v0:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mGridPaint` @type ^`android.graphics.Paint` @kind object;
  #L330ccc.  v1:= v2.`com.github.mikephil.charting.renderer.XAxisRenderer.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L330cd0.  call temp:= `getGridDashPathEffect`(v1) @signature `Lcom/github/mikephil/charting/components/XAxis;.getGridDashPathEffect:()Landroid/graphics/DashPathEffect;` @kind virtual;
  #L330cd6.  v1:= temp @kind object;
  #L330cd8.  call temp:= `setPathEffect`(v0, v1) @signature `Landroid/graphics/Paint;.setPathEffect:(Landroid/graphics/PathEffect;)Landroid/graphics/PathEffect;` @kind virtual;
  #L330cde.  return @kind void;
}
