record `com.github.mikephil.charting.renderer.LineRadarRenderer` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.renderer.LineScatterCandleRadarRenderer` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.renderer.LineRadarRenderer` v0 @kind this, `com.github.mikephil.charting.animation.ChartAnimator` v1 @kind object @name `animator`, `com.github.mikephil.charting.utils.ViewPortHandler` v2 @kind object @name `viewPortHandler`) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.<init>:(Lcom/github/mikephil/charting/animation/ChartAnimator;Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L365a58.  call `<init>`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/renderer/LineScatterCandleRadarRenderer;.<init>:(Lcom/github/mikephil/charting/animation/ChartAnimator;Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L365a5e.  return @kind void;
}
procedure `boolean` `clipPathSupported`(`com.github.mikephil.charting.renderer.LineRadarRenderer` v2 @kind this) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.clipPathSupported:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L365a70.  call temp:= `getSDKInt`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getSDKInt:()I` @kind static;
  #L365a76.  v0:= temp;
  #L365a78.  v1:= 18I;
  #L365a7c.  if v0 < v1 then goto L365a84;
  #L365a80.  v0:= 1I;
  #L365a82.  return v0;
  #L365a84.  v0:= 0I;
  #L365a86.  goto L365a82;
}
procedure `void` `drawFilledPath`(`com.github.mikephil.charting.renderer.LineRadarRenderer` v6 @kind this, `android.graphics.Canvas` v7 @kind object @name `c`, `android.graphics.Path` v8 @kind object @name `filledPath`, `int` v9 @name `fillColor`, `int` v10 @name `fillAlpha`) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.drawFilledPath:(Landroid/graphics/Canvas;Landroid/graphics/Path;II)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L365a98.  v4:= v10 ^< 24;
  #L365a9c.  v5:= 16777215I;
  #L365aa2.  v5:= v5 ^& v9 @kind int;
  #L365aa4.  v0:= v4 ^| v5 @kind int;
  #L365aa8.  call temp:= `clipPathSupported`(v6) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.clipPathSupported:()Z` @kind direct;
  #L365aae.  v4:= temp;
  #L365ab0.  if v4 == 0 then goto L365ad0;
  #L365ab4.  call temp:= `save`(v7) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L365aba.  v3:= temp;
  #L365abc.  call temp:= `clipPath`(v7, v8) @signature `Landroid/graphics/Canvas;.clipPath:(Landroid/graphics/Path;)Z` @kind virtual;
  #L365ac2.  call `drawColor`(v7, v0) @signature `Landroid/graphics/Canvas;.drawColor:(I)V` @kind virtual;
  #L365ac8.  call `restoreToCount`(v7, v3) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L365ace.  return @kind void;
  #L365ad0.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365ad4.  call temp:= `getStyle`(v4) @signature `Landroid/graphics/Paint;.getStyle:()Landroid/graphics/Paint$Style;` @kind virtual;
  #L365ada.  v1:= temp @kind object;
  #L365adc.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365ae0.  call temp:= `getColor`(v4) @signature `Landroid/graphics/Paint;.getColor:()I` @kind virtual;
  #L365ae6.  v2:= temp;
  #L365ae8.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365aec.  v5:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L365af0.  call `setStyle`(v4, v5) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L365af6.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365afa.  call `setColor`(v4, v0) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L365b00.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365b04.  call `drawPath`(v7, v8, v4) @signature `Landroid/graphics/Canvas;.drawPath:(Landroid/graphics/Path;Landroid/graphics/Paint;)V` @kind virtual;
  #L365b0a.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365b0e.  call `setColor`(v4, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L365b14.  v4:= v6.`com.github.mikephil.charting.renderer.LineRadarRenderer.mRenderPaint` @type ^`android.graphics.Paint` @kind object;
  #L365b18.  call `setStyle`(v4, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L365b1e.  goto L365ace;
}
procedure `void` `drawFilledPath`(`com.github.mikephil.charting.renderer.LineRadarRenderer` v5 @kind this, `android.graphics.Canvas` v6 @kind object @name `c`, `android.graphics.Path` v7 @kind object @name `filledPath`, `android.graphics.drawable.Drawable` v8 @kind object @name `drawable`) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.drawFilledPath:(Landroid/graphics/Canvas;Landroid/graphics/Path;Landroid/graphics/drawable/Drawable;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L365b30.  call temp:= `clipPathSupported`(v5) @signature `Lcom/github/mikephil/charting/renderer/LineRadarRenderer;.clipPathSupported:()Z` @kind direct;
  #L365b36.  v1:= temp;
  #L365b38.  if v1 == 0 then goto L365b96;
  #L365b3c.  call temp:= `save`(v6) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L365b42.  v0:= temp;
  #L365b44.  call temp:= `clipPath`(v6, v7) @signature `Landroid/graphics/Canvas;.clipPath:(Landroid/graphics/Path;)Z` @kind virtual;
  #L365b4a.  v1:= v5.`com.github.mikephil.charting.renderer.LineRadarRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L365b4e.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L365b54.  v1:= temp;
  #L365b56.  v1:= (`int`) v1 @kind f2i;
  #L365b58.  v2:= v5.`com.github.mikephil.charting.renderer.LineRadarRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L365b5c.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L365b62.  v2:= temp;
  #L365b64.  v2:= (`int`) v2 @kind f2i;
  #L365b66.  v3:= v5.`com.github.mikephil.charting.renderer.LineRadarRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L365b6a.  call temp:= `contentRight`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L365b70.  v3:= temp;
  #L365b72.  v3:= (`int`) v3 @kind f2i;
  #L365b74.  v4:= v5.`com.github.mikephil.charting.renderer.LineRadarRenderer.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L365b78.  call temp:= `contentBottom`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L365b7e.  v4:= temp;
  #L365b80.  v4:= (`int`) v4 @kind f2i;
  #L365b82.  call `setBounds`(v8, v1, v2, v3, v4) @signature `Landroid/graphics/drawable/Drawable;.setBounds:(IIII)V` @kind virtual;
  #L365b88.  call `draw`(v8, v6) @signature `Landroid/graphics/drawable/Drawable;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L365b8e.  call `restoreToCount`(v6, v0) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L365b94.  return @kind void;
  #L365b96.  v1:= new `java.lang.RuntimeException`;
  #L365b9a.  v2:= new `java.lang.StringBuilder`;
  #L365b9e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L365ba4.  v3:= "Fill-drawables not (yet) supported below API level 18, this code was run on API level " @kind object;
  #L365ba8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L365bae.  v2:= temp @kind object;
  #L365bb0.  call temp:= `getSDKInt`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getSDKInt:()I` @kind static;
  #L365bb6.  v3:= temp;
  #L365bb8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L365bbe.  v2:= temp @kind object;
  #L365bc0.  v3:= "." @kind object;
  #L365bc4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L365bca.  v2:= temp @kind object;
  #L365bcc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L365bd2.  v2:= temp @kind object;
  #L365bd4.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L365bda.  throw v1;
}
