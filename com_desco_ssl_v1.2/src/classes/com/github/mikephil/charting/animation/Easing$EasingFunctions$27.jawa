record `com.github.mikephil.charting.animation.Easing$EasingFunctions$27` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$27` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$27;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5c78.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5c7e.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$27` v3 @kind this, `float` v4 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$27;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b5c90.  v2:= 7.5625F;
  #L2b5c94.  v0:= v4;
  #L2b5c96.  v1:= 1052389004I;
  #L2b5c9c.  v1:= fcmpg(v0, v1);
  #L2b5ca0.  if v1 >= 0 then goto L2b5cac;
  #L2b5ca4.  v1:= v2 * v0 @kind float;
  #L2b5ca8.  v1:= v1 * v0 @kind float;
  #L2b5caa.  return v1;
  #L2b5cac.  v1:= 1060777612I;
  #L2b5cb2.  v1:= fcmpg(v0, v1);
  #L2b5cb6.  if v1 >= 0 then goto L2b5cd0;
  #L2b5cba.  v1:= 1057727209I;
  #L2b5cc0.  v0:= v0 - v1 @kind float;
  #L2b5cc2.  v1:= v2 * v0 @kind float;
  #L2b5cc6.  v1:= v1 * v0 @kind float;
  #L2b5cc8.  v2:= 0.75F;
  #L2b5ccc.  v1:= v1 + v2 @kind float;
  #L2b5cce.  goto L2b5caa;
  #L2b5cd0.  v1:= 1063828015I;
  #L2b5cd6.  v1:= fcmpg(v0, v1);
  #L2b5cda.  if v1 >= 0 then goto L2b5cf4;
  #L2b5cde.  v1:= 1062302813I;
  #L2b5ce4.  v0:= v0 - v1 @kind float;
  #L2b5ce6.  v1:= v2 * v0 @kind float;
  #L2b5cea.  v1:= v1 * v0 @kind float;
  #L2b5cec.  v2:= 0.9375F;
  #L2b5cf0.  v1:= v1 + v2 @kind float;
  #L2b5cf2.  goto L2b5caa;
  #L2b5cf4.  v1:= 1064590615I;
  #L2b5cfa.  v0:= v0 - v1 @kind float;
  #L2b5cfc.  v1:= v2 * v0 @kind float;
  #L2b5d00.  v1:= v1 * v0 @kind float;
  #L2b5d02.  v2:= 0.984375F;
  #L2b5d06.  v1:= v1 + v2 @kind float;
  #L2b5d08.  goto L2b5caa;
}
