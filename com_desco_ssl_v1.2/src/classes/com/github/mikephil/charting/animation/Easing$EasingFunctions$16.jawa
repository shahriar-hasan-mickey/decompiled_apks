record `com.github.mikephil.charting.animation.Easing$EasingFunctions$16` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$16` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$16;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5724.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b572a.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$16` v8 @kind this, `float` v9 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$16;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b573c.  v1:= 0I;
  #L2b573e.  v6:= 2.0D;
  #L2b5742.  v4:= 0.5F;
  #L2b5746.  v2:= 1.0F;
  #L2b574a.  v3:= fcmpl(v9, v1);
  #L2b574e.  if v3 != 0 then goto L2b5754;
  #L2b5752.  return v1;
  #L2b5754.  v1:= fcmpl(v9, v2);
  #L2b5758.  if v1 != 0 then goto L2b5760;
  #L2b575c.  v1:= v2;
  #L2b575e.  goto L2b5752;
  #L2b5760.  v0:= v9 / v4 @kind float;
  #L2b5764.  v1:= fcmpg(v0, v2);
  #L2b5768.  if v1 >= 0 then goto L2b5786;
  #L2b576c.  v1:= 10.0F;
  #L2b5770.  v2:= v0 - v2 @kind float;
  #L2b5774.  v1:= v1 * v2 @kind float;
  #L2b5776.  v2:= (`double`) v1 @kind f2d;
  #L2b5778.  call temp:= `pow`(v6, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b577e.  v2:= temp @kind wide;
  #L2b5780.  v1:= (`float`) v2 @kind d2f;
  #L2b5782.  v1:= v1 * v4 @kind float;
  #L2b5784.  goto L2b5752;
  #L2b5786.  v1:= -10.0F;
  #L2b578a.  v0:= v0 - v2 @kind float;
  #L2b578c.  v1:= v1 * v0 @kind float;
  #L2b578e.  v2:= (`double`) v1 @kind f2d;
  #L2b5790.  call temp:= `pow`(v6, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b5796.  v2:= temp @kind wide;
  #L2b5798.  v1:= (`float`) v2 @kind d2f;
  #L2b579a.  v1:= -v1 @kind float;
  #L2b579c.  v2:= 2.0F;
  #L2b57a0.  v1:= v1 + v2 @kind float;
  #L2b57a2.  v1:= v1 * v4 @kind float;
  #L2b57a4.  goto L2b5752;
}
