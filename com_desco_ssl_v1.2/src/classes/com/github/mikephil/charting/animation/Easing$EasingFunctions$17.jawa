record `com.github.mikephil.charting.animation.Easing$EasingFunctions$17` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$17` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$17;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b57b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b57be.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$17` v3 @kind this, `float` v4 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$17;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b57d0.  v2:= 1.0F;
  #L2b57d4.  v0:= v4 * v4 @kind float;
  #L2b57d8.  v0:= v2 - v0 @kind float;
  #L2b57dc.  v0:= (`double`) v0 @kind f2d;
  #L2b57de.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L2b57e4.  v0:= temp @kind wide;
  #L2b57e6.  v0:= (`float`) v0 @kind d2f;
  #L2b57e8.  v0:= v0 - v2 @kind float;
  #L2b57ea.  v0:= -v0 @kind float;
  #L2b57ec.  return v0;
}
