record `com.github.mikephil.charting.animation.Easing$EasingFunctions$12` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$12` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$12;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b55e8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b55ee.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$12` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$12;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5600.  v0:= (`double`) v5 @kind f2d;
  #L2b5602.  v2:= 1.5707963267948966D;
  #L2b560c.  v0:= v0 * v2 @kind double;
  #L2b560e.  call temp:= `sin`(v0) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2b5614.  v0:= temp @kind wide;
  #L2b5616.  v0:= (`float`) v0 @kind d2f;
  #L2b5618.  return v0;
}
