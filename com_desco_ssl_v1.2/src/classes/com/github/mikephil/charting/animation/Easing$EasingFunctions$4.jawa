record `com.github.mikephil.charting.animation.Easing$EasingFunctions$4` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$4` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$4;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5de8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5dee.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$4` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$4;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5e00.  v2:= 0.5F;
  #L2b5e04.  v3:= 1.0F;
  #L2b5e08.  v0:= v5 / v2 @kind float;
  #L2b5e0c.  v1:= fcmpg(v0, v3);
  #L2b5e10.  if v1 >= 0 then goto L2b5e1c;
  #L2b5e14.  v1:= v2 * v0 @kind float;
  #L2b5e18.  v1:= v1 * v0 @kind float;
  #L2b5e1a.  return v1;
  #L2b5e1c.  v1:= -0.5F;
  #L2b5e20.  v0:= v0 - v3 @kind float;
  #L2b5e22.  v2:= 2.0F;
  #L2b5e26.  v2:= v0 - v2 @kind float;
  #L2b5e2a.  v2:= v2 * v0 @kind float;
  #L2b5e2c.  v2:= v2 - v3 @kind float;
  #L2b5e2e.  v1:= v1 * v2 @kind float;
  #L2b5e30.  goto L2b5e1a;
}
