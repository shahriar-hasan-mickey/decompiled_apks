record `com.github.mikephil.charting.animation.Easing$EasingFunctions$20` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$20` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$20;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b58ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b58f2.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$20` v8 @kind this, `float` v9 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$20;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b5904.  v3:= 0I;
  #L2b5906.  v4:= 1.0F;
  #L2b590a.  v5:= fcmpl(v9, v3);
  #L2b590e.  if v5 != 0 then goto L2b5914;
  #L2b5912.  return v3;
  #L2b5914.  v1:= v9;
  #L2b5916.  v3:= fcmpl(v1, v4);
  #L2b591a.  if v3 != 0 then goto L2b5922;
  #L2b591e.  v3:= v4;
  #L2b5920.  goto L2b5912;
  #L2b5922.  v0:= 1050253722I;
  #L2b5928.  v3:= 1086918619I;
  #L2b592e.  v3:= v0 / v3 @kind float;
  #L2b5932.  v6:= 1.0D;
  #L2b5936.  call temp:= `asin`(v6) @signature `Ljava/lang/Math;.asin:(D)D` @kind static;
  #L2b593c.  v6:= temp @kind wide;
  #L2b593e.  v5:= (`float`) v6 @kind d2f;
  #L2b5940.  v2:= v3 * v5 @kind float;
  #L2b5944.  v6:= 2.0D;
  #L2b5948.  v3:= 10.0F;
  #L2b594c.  v1:= v1 - v4 @kind float;
  #L2b594e.  v3:= v3 * v1 @kind float;
  #L2b5950.  v4:= (`double`) v3 @kind f2d;
  #L2b5952.  call temp:= `pow`(v6, v4) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b5958.  v4:= temp @kind wide;
  #L2b595a.  v3:= (`float`) v4 @kind d2f;
  #L2b595c.  v4:= v1 - v2 @kind float;
  #L2b5960.  v4:= (`double`) v4 @kind f2d;
  #L2b5962.  v6:= 6.283185307179586D;
  #L2b596c.  v4:= v4 * v6 @kind double;
  #L2b596e.  v6:= (`double`) v0 @kind f2d;
  #L2b5970.  v4:= v4 / v6 @kind double;
  #L2b5972.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2b5978.  v4:= temp @kind wide;
  #L2b597a.  v4:= (`float`) v4 @kind d2f;
  #L2b597c.  v3:= v3 * v4 @kind float;
  #L2b597e.  v3:= -v3 @kind float;
  #L2b5980.  goto L2b5912;
}
