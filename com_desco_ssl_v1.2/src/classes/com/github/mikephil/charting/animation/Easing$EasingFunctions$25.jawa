record `com.github.mikephil.charting.animation.Easing$EasingFunctions$25` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$25` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$25;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5bc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5bc6.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$25` v7 @kind this, `float` v8 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$25;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L2b5bd8.  v6:= 2.0F;
  #L2b5bdc.  v5:= 1069757235I;
  #L2b5be2.  v3:= 1.0F;
  #L2b5be6.  v4:= 0.5F;
  #L2b5bea.  v1:= 1071238496I;
  #L2b5bf0.  v0:= v8 / v4 @kind float;
  #L2b5bf4.  v2:= fcmpg(v0, v3);
  #L2b5bf8.  if v2 >= 0 then goto L2b5c0e;
  #L2b5bfc.  v2:= v0 * v0 @kind float;
  #L2b5c00.  v1:= v1 * v5 @kind float;
  #L2b5c02.  v3:= v3 + v1 @kind float;
  #L2b5c04.  v3:= v3 * v0 @kind float;
  #L2b5c06.  v3:= v3 - v1 @kind float;
  #L2b5c08.  v2:= v2 * v3 @kind float;
  #L2b5c0a.  v2:= v2 * v4 @kind float;
  #L2b5c0c.  return v2;
  #L2b5c0e.  v0:= v0 - v6 @kind float;
  #L2b5c10.  v2:= v0 * v0 @kind float;
  #L2b5c14.  v1:= v1 * v5 @kind float;
  #L2b5c16.  v3:= v3 + v1 @kind float;
  #L2b5c18.  v3:= v3 * v0 @kind float;
  #L2b5c1a.  v3:= v3 + v1 @kind float;
  #L2b5c1c.  v2:= v2 * v3 @kind float;
  #L2b5c1e.  v2:= v2 + v6 @kind float;
  #L2b5c20.  v2:= v2 * v4 @kind float;
  #L2b5c22.  goto L2b5c0c;
}
