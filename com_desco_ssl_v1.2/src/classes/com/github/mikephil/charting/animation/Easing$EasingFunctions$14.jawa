record `com.github.mikephil.charting.animation.Easing$EasingFunctions$14` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$14` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$14;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b567c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5682.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$14` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$14;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5694.  v0:= 0I;
  #L2b5696.  v1:= fcmpl(v5, v0);
  #L2b569a.  if v1 != 0 then goto L2b56a0;
  #L2b569e.  return v0;
  #L2b56a0.  v0:= 2.0D;
  #L2b56a4.  v2:= 10.0F;
  #L2b56a8.  v3:= 1.0F;
  #L2b56ac.  v3:= v5 - v3 @kind float;
  #L2b56b0.  v2:= v2 * v3 @kind float;
  #L2b56b2.  v2:= (`double`) v2 @kind f2d;
  #L2b56b4.  call temp:= `pow`(v0, v2) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b56ba.  v0:= temp @kind wide;
  #L2b56bc.  v0:= (`float`) v0 @kind d2f;
  #L2b56be.  goto L2b569e;
}
