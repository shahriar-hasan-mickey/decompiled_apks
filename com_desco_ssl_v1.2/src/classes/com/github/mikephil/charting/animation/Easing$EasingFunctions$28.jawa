record `com.github.mikephil.charting.animation.Easing$EasingFunctions$28` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$28` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$28;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5d1c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5d22.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$28` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$28;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5d34.  v1:= 2.0F;
  #L2b5d38.  v3:= 0.5F;
  #L2b5d3c.  v0:= fcmpg(v5, v3);
  #L2b5d40.  if v0 >= 0 then goto L2b5d56;
  #L2b5d44.  v0:= `@@com.github.mikephil.charting.animation.Easing$EasingFunctions.EaseInBounce` @type ^`com.github.mikephil.charting.animation.EasingFunction` @kind object;
  #L2b5d48.  v1:= v1 * v5 @kind float;
  #L2b5d4a.  call temp:= `getInterpolation`(v0, v1) @signature `Lcom/github/mikephil/charting/animation/EasingFunction;.getInterpolation:(F)F` @kind interface;
  #L2b5d50.  v0:= temp;
  #L2b5d52.  v0:= v0 * v3 @kind float;
  #L2b5d54.  return v0;
  #L2b5d56.  v0:= `@@com.github.mikephil.charting.animation.Easing$EasingFunctions.EaseOutBounce` @type ^`com.github.mikephil.charting.animation.EasingFunction` @kind object;
  #L2b5d5a.  v1:= v1 * v5 @kind float;
  #L2b5d5c.  v2:= 1.0F;
  #L2b5d60.  v1:= v1 - v2 @kind float;
  #L2b5d62.  call temp:= `getInterpolation`(v0, v1) @signature `Lcom/github/mikephil/charting/animation/EasingFunction;.getInterpolation:(F)F` @kind interface;
  #L2b5d68.  v0:= temp;
  #L2b5d6a.  v0:= v0 * v3 @kind float;
  #L2b5d6c.  v0:= v0 + v3 @kind float;
  #L2b5d6e.  goto L2b5d54;
}
