record `com.github.mikephil.charting.animation.Easing$EasingFunctions$18` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$18` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$18;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5800.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5806.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$18` v2 @kind this, `float` v3 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$18;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b5818.  v1:= 1.0F;
  #L2b581c.  v3:= v3 - v1 @kind float;
  #L2b581e.  v0:= v3 * v3 @kind float;
  #L2b5822.  v0:= v1 - v0 @kind float;
  #L2b5826.  v0:= (`double`) v0 @kind f2d;
  #L2b5828.  call temp:= `sqrt`(v0) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L2b582e.  v0:= temp @kind wide;
  #L2b5830.  v0:= (`float`) v0 @kind d2f;
  #L2b5832.  return v0;
}
