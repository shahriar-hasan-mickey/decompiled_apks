record `com.github.mikephil.charting.animation.Easing$EasingFunctions$21` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$21` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$21;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b5994.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b599a.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$21` v10 @kind this, `float` v11 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$21;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L2b59ac.  v3:= 0I;
  #L2b59ae.  v4:= 1.0F;
  #L2b59b2.  v5:= fcmpl(v11, v3);
  #L2b59b6.  if v5 != 0 then goto L2b59bc;
  #L2b59ba.  return v3;
  #L2b59bc.  v1:= v11;
  #L2b59be.  v3:= fcmpl(v1, v4);
  #L2b59c2.  if v3 != 0 then goto L2b59ca;
  #L2b59c6.  v3:= v4;
  #L2b59c8.  goto L2b59ba;
  #L2b59ca.  v0:= 1050253722I;
  #L2b59d0.  v3:= 1086918619I;
  #L2b59d6.  v3:= v0 / v3 @kind float;
  #L2b59da.  v6:= 1.0D;
  #L2b59de.  call temp:= `asin`(v6) @signature `Ljava/lang/Math;.asin:(D)D` @kind static;
  #L2b59e4.  v6:= temp @kind wide;
  #L2b59e6.  v5:= (`float`) v6 @kind d2f;
  #L2b59e8.  v2:= v3 * v5 @kind float;
  #L2b59ec.  v6:= 2.0D;
  #L2b59f0.  v3:= -10.0F;
  #L2b59f4.  v3:= v3 * v1 @kind float;
  #L2b59f6.  v8:= (`double`) v3 @kind f2d;
  #L2b59f8.  call temp:= `pow`(v6, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b59fe.  v6:= temp @kind wide;
  #L2b5a00.  v3:= (`float`) v6 @kind d2f;
  #L2b5a02.  v5:= v1 - v2 @kind float;
  #L2b5a06.  v6:= (`double`) v5 @kind f2d;
  #L2b5a08.  v8:= 6.283185307179586D;
  #L2b5a12.  v6:= v6 * v8 @kind double;
  #L2b5a14.  v8:= (`double`) v0 @kind f2d;
  #L2b5a16.  v6:= v6 / v8 @kind double;
  #L2b5a18.  call temp:= `sin`(v6) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L2b5a1e.  v6:= temp @kind wide;
  #L2b5a20.  v5:= (`float`) v6 @kind d2f;
  #L2b5a22.  v3:= v3 * v5 @kind float;
  #L2b5a24.  v3:= v3 + v4 @kind float;
  #L2b5a26.  goto L2b59ba;
}
