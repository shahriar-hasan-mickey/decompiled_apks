record `com.github.mikephil.charting.animation.Easing$EasingFunctions$11` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$11` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$11;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b559c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b55a2.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$11` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$11;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b55b4.  v0:= (`double`) v5 @kind f2d;
  #L2b55b6.  v2:= 1.5707963267948966D;
  #L2b55c0.  v0:= v0 * v2 @kind double;
  #L2b55c2.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2b55c8.  v0:= temp @kind wide;
  #L2b55ca.  v0:= (`float`) v0 @kind d2f;
  #L2b55cc.  v0:= -v0 @kind float;
  #L2b55ce.  v1:= 1.0F;
  #L2b55d2.  v0:= v0 + v1 @kind float;
  #L2b55d4.  return v0;
}
