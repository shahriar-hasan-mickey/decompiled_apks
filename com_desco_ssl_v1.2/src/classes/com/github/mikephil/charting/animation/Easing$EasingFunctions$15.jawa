record `com.github.mikephil.charting.animation.Easing$EasingFunctions$15` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$15` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$15;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b56d0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b56d6.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$15` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$15;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b56e8.  v0:= 1.0F;
  #L2b56ec.  v1:= fcmpl(v5, v0);
  #L2b56f0.  if v1 != 0 then goto L2b56f6;
  #L2b56f4.  return v0;
  #L2b56f6.  v2:= 2.0D;
  #L2b56fa.  v1:= -10.0F;
  #L2b56fe.  v0:= v0 + v5 @kind float;
  #L2b5700.  v0:= v0 * v1 @kind float;
  #L2b5702.  v0:= (`double`) v0 @kind f2d;
  #L2b5704.  call temp:= `pow`(v2, v0) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L2b570a.  v0:= temp @kind wide;
  #L2b570c.  v0:= (`float`) v0 @kind d2f;
  #L2b570e.  v0:= -v0 @kind float;
  #L2b5710.  goto L2b56f4;
}
