record `com.github.mikephil.charting.animation.Easing$EasingFunctions$13` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$13` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$13;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b562c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5632.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$13` v6 @kind this, `float` v7 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$13;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b5644.  v0:= -0.5F;
  #L2b5648.  v2:= 3.141592653589793D;
  #L2b5652.  v4:= (`double`) v7 @kind f2d;
  #L2b5654.  v2:= v2 * v4 @kind double;
  #L2b5656.  call temp:= `cos`(v2) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L2b565c.  v2:= temp @kind wide;
  #L2b565e.  v1:= (`float`) v2 @kind d2f;
  #L2b5660.  v2:= 1.0F;
  #L2b5664.  v1:= v1 - v2 @kind float;
  #L2b5666.  v0:= v0 * v1 @kind float;
  #L2b5668.  return v0;
}
