record `com.github.mikephil.charting.animation.Easing$EasingFunctions$10` @kind class @AccessFlag FINAL extends `com.github.mikephil.charting.animation.EasingFunction` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$10` v0 @kind this) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$10;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L2b553c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b5542.  return @kind void;
}
procedure `float` `getInterpolation`(`com.github.mikephil.charting.animation.Easing$EasingFunctions$10` v4 @kind this, `float` v5 @name `input`) @signature `Lcom/github/mikephil/charting/animation/Easing$EasingFunctions$10;.getInterpolation:(F)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b5554.  v3:= 2.0F;
  #L2b5558.  v2:= 0.5F;
  #L2b555c.  v0:= v5 / v2 @kind float;
  #L2b5560.  v1:= 1.0F;
  #L2b5564.  v1:= fcmpg(v0, v1);
  #L2b5568.  if v1 >= 0 then goto L2b5578;
  #L2b556c.  v1:= v2 * v0 @kind float;
  #L2b5570.  v1:= v1 * v0 @kind float;
  #L2b5572.  v1:= v1 * v0 @kind float;
  #L2b5574.  v1:= v1 * v0 @kind float;
  #L2b5576.  return v1;
  #L2b5578.  v0:= v0 - v3 @kind float;
  #L2b557a.  v1:= -0.5F;
  #L2b557e.  v2:= v0 * v0 @kind float;
  #L2b5582.  v2:= v2 * v0 @kind float;
  #L2b5584.  v2:= v2 * v0 @kind float;
  #L2b5586.  v2:= v2 - v3 @kind float;
  #L2b5588.  v1:= v1 * v2 @kind float;
  #L2b558a.  goto L2b5576;
}
