record `com.github.mikephil.charting.utils.ObjectPool$Poolable` @kind class @AccessFlag PUBLIC_ABSTRACT {
  `int` `com.github.mikephil.charting.utils.ObjectPool$Poolable.currentOwnerId` @AccessFlag ;
}
global `int` `@@com.github.mikephil.charting.utils.ObjectPool$Poolable.NO_OWNER` @AccessFlag PUBLIC_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d9e68.  v0:= -1I;
  #L1d9e6a.  `@@com.github.mikephil.charting.utils.ObjectPool$Poolable.NO_OWNER` @type ^`int` := v0;
  #L1d9e6e.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.ObjectPool$Poolable` v1 @kind this) @signature `Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L1d9e80.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d9e86.  v0:= `@@com.github.mikephil.charting.utils.ObjectPool$Poolable.NO_OWNER` @type ^`int`;
  #L1d9e8a.  v1.`com.github.mikephil.charting.utils.ObjectPool$Poolable.currentOwnerId` @type ^`int` := v0;
  #L1d9e8e.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.ObjectPool$Poolable` `instantiate`() @signature `Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;.instantiate:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
