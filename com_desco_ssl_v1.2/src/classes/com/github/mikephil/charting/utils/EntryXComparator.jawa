record `com.github.mikephil.charting.utils.EntryXComparator` @kind class @AccessFlag PUBLIC extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.EntryXComparator` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/EntryXComparator;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1d97fc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d9802.  return @kind void;
}
procedure `int` `compare`(`com.github.mikephil.charting.utils.EntryXComparator` v4 @kind this, `com.github.mikephil.charting.data.Entry` v5 @kind object @name `entry1`, `com.github.mikephil.charting.data.Entry` v6 @kind object @name `entry2`) @signature `Lcom/github/mikephil/charting/utils/EntryXComparator;.compare:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/data/Entry;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d9814.  v3:= 0I;
  #L1d9816.  call temp:= `getX`(v5) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d981c.  v1:= temp;
  #L1d981e.  call temp:= `getX`(v6) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L1d9824.  v2:= temp;
  #L1d9826.  v0:= v1 - v2 @kind float;
  #L1d982a.  v1:= fcmpl(v0, v3);
  #L1d982e.  if v1 != 0 then goto L1d9836;
  #L1d9832.  v1:= 0I;
  #L1d9834.  return v1;
  #L1d9836.  v1:= fcmpl(v0, v3);
  #L1d983a.  if v1 <= 0 then goto L1d9842;
  #L1d983e.  v1:= 1I;
  #L1d9840.  goto L1d9834;
  #L1d9842.  v1:= -1I;
  #L1d9844.  goto L1d9834;
}
procedure `int` `compare`(`com.github.mikephil.charting.utils.EntryXComparator` v1 @kind this, `java.lang.Object` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/github/mikephil/charting/utils/EntryXComparator;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d9858.  v2:= (`com.github.mikephil.charting.data.Entry`) v2 @kind object;
  #L1d985c.  v3:= (`com.github.mikephil.charting.data.Entry`) v3 @kind object;
  #L1d9860.  call temp:= `compare`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/utils/EntryXComparator;.compare:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/data/Entry;)I` @kind virtual;
  #L1d9866.  v0:= temp;
  #L1d9868.  return v0;
}
