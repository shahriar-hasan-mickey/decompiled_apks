record `com.github.mikephil.charting.utils.ShapeRendererHandler` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.HashMap` `com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.ShapeRendererHandler` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/ShapeRendererHandler;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1da2f0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1da2f6.  call `initShapeRenderers`(v0) @signature `Lcom/github/mikephil/charting/utils/ShapeRendererHandler;.initShapeRenderers:()V` @kind virtual;
  #L1da2fc.  return @kind void;
}
procedure `com.github.mikephil.charting.renderer.scatter.ShapeRenderer` `getShapeRenderer`(`com.github.mikephil.charting.utils.ShapeRendererHandler` v2 @kind this, `com.github.mikephil.charting.charts.ScatterChart$ScatterShape` v3 @kind object @name `shape`) @signature `Lcom/github/mikephil/charting/utils/ShapeRendererHandler;.getShapeRenderer:(Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;)Lcom/github/mikephil/charting/renderer/scatter/ShapeRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1da310.  v0:= v2.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da314.  call temp:= `toString`(v3) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da31a.  v1:= temp @kind object;
  #L1da31c.  call temp:= `get`(v0, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da322.  v0:= temp @kind object;
  #L1da324.  v0:= (`com.github.mikephil.charting.renderer.scatter.ShapeRenderer`) v0 @kind object;
  #L1da328.  return v0 @kind object;
}
procedure `void` `initShapeRenderers`(`com.github.mikephil.charting.utils.ShapeRendererHandler` v3 @kind this) @signature `Lcom/github/mikephil/charting/utils/ShapeRendererHandler;.initShapeRenderers:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1da33c.  v0:= new `java.util.HashMap`;
  #L1da340.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1da346.  v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` := v0 @kind object;
  #L1da34a.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da34e.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.SQUARE` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da352.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da358.  v1:= temp @kind object;
  #L1da35a.  v2:= new `com.github.mikephil.charting.renderer.scatter.SquareShapeRenderer`;
  #L1da35e.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/SquareShapeRenderer;.<init>:()V` @kind direct;
  #L1da364.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da36a.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da36e.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.CIRCLE` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da372.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da378.  v1:= temp @kind object;
  #L1da37a.  v2:= new `com.github.mikephil.charting.renderer.scatter.CircleShapeRenderer`;
  #L1da37e.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/CircleShapeRenderer;.<init>:()V` @kind direct;
  #L1da384.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da38a.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da38e.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.TRIANGLE` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da392.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da398.  v1:= temp @kind object;
  #L1da39a.  v2:= new `com.github.mikephil.charting.renderer.scatter.TriangleShapeRenderer`;
  #L1da39e.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/TriangleShapeRenderer;.<init>:()V` @kind direct;
  #L1da3a4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da3aa.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da3ae.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.CROSS` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da3b2.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da3b8.  v1:= temp @kind object;
  #L1da3ba.  v2:= new `com.github.mikephil.charting.renderer.scatter.CrossShapeRenderer`;
  #L1da3be.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/CrossShapeRenderer;.<init>:()V` @kind direct;
  #L1da3c4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da3ca.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da3ce.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.X` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da3d2.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da3d8.  v1:= temp @kind object;
  #L1da3da.  v2:= new `com.github.mikephil.charting.renderer.scatter.XShapeRenderer`;
  #L1da3de.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/XShapeRenderer;.<init>:()V` @kind direct;
  #L1da3e4.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da3ea.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da3ee.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.CHEVRON_UP` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da3f2.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da3f8.  v1:= temp @kind object;
  #L1da3fa.  v2:= new `com.github.mikephil.charting.renderer.scatter.ChevronUpShapeRenderer`;
  #L1da3fe.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/ChevronUpShapeRenderer;.<init>:()V` @kind direct;
  #L1da404.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da40a.  v0:= v3.`com.github.mikephil.charting.utils.ShapeRendererHandler.shapeRendererList` @type ^`java.util.HashMap` @kind object;
  #L1da40e.  v1:= `@@com.github.mikephil.charting.charts.ScatterChart$ScatterShape.CHEVRON_DOWN` @type ^`com.github.mikephil.charting.charts.ScatterChart$ScatterShape` @kind object;
  #L1da412.  call temp:= `toString`(v1) @signature `Lcom/github/mikephil/charting/charts/ScatterChart$ScatterShape;.toString:()Ljava/lang/String;` @kind virtual;
  #L1da418.  v1:= temp @kind object;
  #L1da41a.  v2:= new `com.github.mikephil.charting.renderer.scatter.ChevronDownShapeRenderer`;
  #L1da41e.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/renderer/scatter/ChevronDownShapeRenderer;.<init>:()V` @kind direct;
  #L1da424.  call temp:= `put`(v0, v1, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1da42a.  return @kind void;
}
