record `com.github.mikephil.charting.utils.MPPointF$1` @kind class @AccessFlag FINAL extends `android.os.Parcelable$Creator` @kind interface {
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.MPPointF$1` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L1d9dd8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1d9dde.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `createFromParcel`(`com.github.mikephil.charting.utils.MPPointF$1` v3 @kind this, `android.os.Parcel` v4 @kind object @name `in`) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L1d9df0.  v2:= 0I;
  #L1d9df2.  v0:= new `com.github.mikephil.charting.utils.MPPointF`;
  #L1d9df6.  v1:= 0I;
  #L1d9df8.  call `<init>`(v0, v2, v2, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.<init>:(FFLcom/github/mikephil/charting/utils/MPPointF$1;)V` @kind direct;
  #L1d9dfe.  call `my_readFromParcel`(v0, v4) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.my_readFromParcel:(Landroid/os/Parcel;)V` @kind virtual;
  #L1d9e04.  return v0 @kind object;
}
procedure `java.lang.Object` `createFromParcel`(`com.github.mikephil.charting.utils.MPPointF$1` v1 @kind this, `android.os.Parcel` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d9e18.  call temp:= `createFromParcel`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.createFromParcel:(Landroid/os/Parcel;)Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L1d9e1e.  v0:= temp @kind object;
  #L1d9e20.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF`[] `newArray`(`com.github.mikephil.charting.utils.MPPointF$1` v1 @kind this, `int` v2 @name `size`) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d9e34.  v0:= new `com.github.mikephil.charting.utils.MPPointF`[v2];
  #L1d9e38.  return v0 @kind object;
}
procedure `java.lang.Object`[] `newArray`(`com.github.mikephil.charting.utils.MPPointF$1` v1 @kind this, `int` v2 ) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L1d9e4c.  call temp:= `newArray`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF$1;.newArray:(I)[Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L1d9e52.  v0:= temp @kind object;
  #L1d9e54.  return v0 @kind object;
}
