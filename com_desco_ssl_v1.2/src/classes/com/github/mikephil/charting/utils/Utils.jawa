record `com.github.mikephil.charting.utils.Utils` @kind class @AccessFlag PUBLIC_ABSTRACT {
}
global `double` `@@com.github.mikephil.charting.utils.Utils.DEG2RAD` @AccessFlag PUBLIC_STATIC_FINAL;
global `float` `@@com.github.mikephil.charting.utils.Utils.FDEG2RAD` @AccessFlag PUBLIC_STATIC_FINAL;
global `int`[] `@@com.github.mikephil.charting.utils.Utils.POW_10` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Rect` `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @AccessFlag PRIVATE_STATIC;
global `android.graphics.Paint$FontMetrics` `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @AccessFlag PRIVATE_STATIC;
global `android.util.DisplayMetrics` `@@com.github.mikephil.charting.utils.Utils.mMetrics` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/utils/Utils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L1dac0c.  v0:= 50I;
  #L1dac10.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v0;
  #L1dac14.  v0:= 8000I;
  #L1dac18.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v0;
  #L1dac1c.  v0:= new `android.graphics.Rect`;
  #L1dac20.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dac26.  `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L1dac2a.  v0:= new `android.graphics.Rect`;
  #L1dac2e.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dac34.  `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @type ^`android.graphics.Rect` := v0 @kind object;
  #L1dac38.  v0:= 10I;
  #L1dac3c.  v0:= new `int`[v0];
  #L1dac40.  goto L1dac68;
  #L1dac46.  `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] := v0 @kind object;
  #L1dac4a.  v0:= new `android.graphics.Rect`;
  #L1dac4e.  call `<init>`(v0) @signature `Landroid/graphics/Rect;.<init>:()V` @kind direct;
  #L1dac54.  `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` := v0 @kind object;
  #L1dac58.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L1dac5c.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L1dac62.  `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` := v0 @kind object;
  #L1dac66.  return @kind void;
  #L1dac68.  v0:= (1I, 10I, 100I, 1000I, 10000I, 100000I, 1000000I, 10000000I, 100000000I, 1000000000I) @kind object;
  #L1dac97.  goto L1dac46;
}
procedure `void` `<init>`(`com.github.mikephil.charting.utils.Utils` v0 @kind this) @signature `Lcom/github/mikephil/charting/utils/Utils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L1daca8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1dacae.  return @kind void;
}
procedure `int` `calcTextHeight`(`android.graphics.Paint` v3 @kind object @name `paint`, `java.lang.String` v4 @kind object @name `demoText`) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1dacc0.  v2:= 0I;
  #L1dacc2.  v0:= `@@com.github.mikephil.charting.utils.Utils.mCalcTextHeightRect` @type ^`android.graphics.Rect` @kind object;
  #L1dacc6.  call `set`(v0, v2, v2, v2, v2) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L1daccc.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dacd2.  v1:= temp;
  #L1dacd4.  call `getTextBounds`(v3, v4, v2, v1, v0) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L1dacda.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1dace0.  v1:= temp;
  #L1dace2.  return v1;
}
procedure `com.github.mikephil.charting.utils.FSize` `calcTextSize`(`android.graphics.Paint` v2 @kind object @name `paint`, `java.lang.String` v3 @kind object @name `demoText`) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1dacf4.  v1:= 0I;
  #L1dacf6.  call temp:= `getInstance`(v1, v1) @signature `Lcom/github/mikephil/charting/utils/FSize;.getInstance:(FF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1dacfc.  v0:= temp @kind object;
  #L1dacfe.  call `calcTextSize`(v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L1dad04.  return v0 @kind object;
}
procedure `void` `calcTextSize`(`android.graphics.Paint` v3 @kind object @name `paint`, `java.lang.String` v4 @kind object @name `demoText`, `com.github.mikephil.charting.utils.FSize` v5 @kind object @name `outputFSize`) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextSize:(Landroid/graphics/Paint;Ljava/lang/String;Lcom/github/mikephil/charting/utils/FSize;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1dad18.  v2:= 0I;
  #L1dad1a.  v0:= `@@com.github.mikephil.charting.utils.Utils.mCalcTextSizeRect` @type ^`android.graphics.Rect` @kind object;
  #L1dad1e.  call `set`(v0, v2, v2, v2, v2) @signature `Landroid/graphics/Rect;.set:(IIII)V` @kind virtual;
  #L1dad24.  call temp:= `length`(v4) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1dad2a.  v1:= temp;
  #L1dad2c.  call `getTextBounds`(v3, v4, v2, v1, v0) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L1dad32.  call temp:= `width`(v0) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1dad38.  v1:= temp;
  #L1dad3a.  v1:= (`float`) v1 @kind i2f;
  #L1dad3c.  v5.`com.github.mikephil.charting.utils.FSize.width` @type ^`float` := v1;
  #L1dad40.  call temp:= `height`(v0) @signature `Landroid/graphics/Rect;.height:()I` @kind virtual;
  #L1dad46.  v1:= temp;
  #L1dad48.  v1:= (`float`) v1 @kind i2f;
  #L1dad4a.  v5.`com.github.mikephil.charting.utils.FSize.height` @type ^`float` := v1;
  #L1dad4e.  return @kind void;
}
procedure `int` `calcTextWidth`(`android.graphics.Paint` v1 @kind object @name `paint`, `java.lang.String` v2 @kind object @name `demoText`) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1dad60.  call temp:= `measureText`(v1, v2) @signature `Landroid/graphics/Paint;.measureText:(Ljava/lang/String;)F` @kind virtual;
  #L1dad66.  v0:= temp;
  #L1dad68.  v0:= (`int`) v0 @kind f2i;
  #L1dad6a.  return v0;
}
procedure `float` `convertDpToPixel`(`float` v4 @name `dp`) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dad7c.  v2:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L1dad80.  if v2 != 0 then goto L1dad94;
  #L1dad84.  v2:= "MPChartLib-Utils" @kind object;
  #L1dad88.  v3:= "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertDpToPixel(...). Otherwise conversion does not take place." @kind object;
  #L1dad8c.  call temp:= `e`(v2, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1dad92.  return v4;
  #L1dad94.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L1dad98.  v2:= v0.`android.util.DisplayMetrics.densityDpi` @type ^`int`;
  #L1dad9c.  v2:= (`float`) v2 @kind i2f;
  #L1dad9e.  v3:= 160.0F;
  #L1dada2.  v2:= v2 / v3 @kind float;
  #L1dada4.  v1:= v4 * v2 @kind float;
  #L1dada8.  v4:= v1;
  #L1dadaa.  goto L1dad92;
}
procedure `int`[] `convertIntegers`(`java.util.List` v2 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertIntegers:(Ljava/util/List;)[I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1dadbc.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1dadc2.  v1:= temp;
  #L1dadc4.  v0:= new `int`[v1];
  #L1dadc8.  call `copyIntegers`(v2, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyIntegers:(Ljava/util/List;[I)V` @kind static;
  #L1dadce.  return v0 @kind object;
}
procedure `float` `convertPixelsToDp`(`float` v4 @name `px`) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertPixelsToDp:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dade0.  v2:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L1dade4.  if v2 != 0 then goto L1dadf8;
  #L1dade8.  v2:= "MPChartLib-Utils" @kind object;
  #L1dadec.  v3:= "Utils NOT INITIALIZED. You need to call Utils.init(...) at least once before calling Utils.convertPixelsToDp(...). Otherwise conversion does not take place." @kind object;
  #L1dadf0.  call temp:= `e`(v2, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1dadf6.  return v4;
  #L1dadf8.  v1:= `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` @kind object;
  #L1dadfc.  v2:= v1.`android.util.DisplayMetrics.densityDpi` @type ^`int`;
  #L1dae00.  v2:= (`float`) v2 @kind i2f;
  #L1dae02.  v3:= 160.0F;
  #L1dae06.  v2:= v2 / v3 @kind float;
  #L1dae08.  v0:= v4 / v2 @kind float;
  #L1dae0c.  v4:= v0;
  #L1dae0e.  goto L1dadf6;
}
procedure `java.lang.String`[] `convertStrings`(`java.util.List` v3 @kind object) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertStrings:(Ljava/util/List;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1dae20.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1dae26.  v2:= temp;
  #L1dae28.  v1:= new `java.lang.String`[v2];
  #L1dae2c.  v0:= 0I;
  #L1dae2e.  v2:= length @variable v1;
  #L1dae30.  if v0 >= v2 then goto L1dae4a;
  #L1dae34.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1dae3a.  v2:= temp @kind object;
  #L1dae3c.  v2:= (`java.lang.String`) v2 @kind object;
  #L1dae40.  v1[v0]:= v2 @kind object;
  #L1dae44.  v0:= v0 + 1;
  #L1dae48.  goto L1dae2e;
  #L1dae4a.  return v1 @kind object;
}
procedure `void` `copyIntegers`(`java.util.List` v4 @kind object, `int`[] v5 @kind object @name `to`) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyIntegers:(Ljava/util/List;[I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1dae5c.  v2:= length @variable v5;
  #L1dae5e.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1dae64.  v3:= temp;
  #L1dae66.  if v2 >= v3 then goto L1dae90;
  #L1dae6a.  v0:= length @variable v5;
  #L1dae6c.  v1:= 0I;
  #L1dae6e.  if v1 >= v0 then goto L1dae9a;
  #L1dae72.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1dae78.  v2:= temp @kind object;
  #L1dae7a.  v2:= (`java.lang.Integer`) v2 @kind object;
  #L1dae7e.  call temp:= `intValue`(v2) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L1dae84.  v2:= temp;
  #L1dae86.  v5[v1]:= v2;
  #L1dae8a.  v1:= v1 + 1;
  #L1dae8e.  goto L1dae6e;
  #L1dae90.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1dae96.  v0:= temp;
  #L1dae98.  goto L1dae6c;
  #L1dae9a.  return @kind void;
}
procedure `void` `copyStrings`(`java.util.List` v4 @kind object, `java.lang.String`[] v5 @kind object @name `to`) @signature `Lcom/github/mikephil/charting/utils/Utils;.copyStrings:(Ljava/util/List;[Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1daeac.  v2:= length @variable v5;
  #L1daeae.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1daeb4.  v3:= temp;
  #L1daeb6.  if v2 >= v3 then goto L1daed8;
  #L1daeba.  v0:= length @variable v5;
  #L1daebc.  v1:= 0I;
  #L1daebe.  if v1 >= v0 then goto L1daee2;
  #L1daec2.  call temp:= `get`(v4, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L1daec8.  v2:= temp @kind object;
  #L1daeca.  v2:= (`java.lang.String`) v2 @kind object;
  #L1daece.  v5[v1]:= v2 @kind object;
  #L1daed2.  v1:= v1 + 1;
  #L1daed6.  goto L1daebe;
  #L1daed8.  call temp:= `size`(v4) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L1daede.  v0:= temp;
  #L1daee0.  goto L1daebc;
  #L1daee2.  return @kind void;
}
procedure `void` `drawMultilineText`(`android.graphics.Canvas` v13 @kind object @name `c`, `android.text.StaticLayout` v14 @kind object @name `textLayout`, `float` v15 @name `x`, `float` v16 @name `y`, `android.text.TextPaint` v17 @kind object @name `paint`, `com.github.mikephil.charting.utils.MPPointF` v18 @kind object @name `anchor`, `float` v19 @name `angleDegrees`) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Landroid/text/StaticLayout;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L1daef4.  v2:= 0I;
  #L1daef6.  v3:= 0I;
  #L1daef8.  v10:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1daefc.  v0:= v17 @kind object;
  #L1daf00.  call temp:= `getFontMetrics`(v0, v10) @signature `Landroid/text/TextPaint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1daf06.  v5:= temp;
  #L1daf08.  call temp:= `getWidth`(v14) @signature `Landroid/text/StaticLayout;.getWidth:()I` @kind virtual;
  #L1daf0e.  v10:= temp;
  #L1daf10.  v4:= (`float`) v10 @kind i2f;
  #L1daf12.  call temp:= `getLineCount`(v14) @signature `Landroid/text/StaticLayout;.getLineCount:()I` @kind virtual;
  #L1daf18.  v10:= temp;
  #L1daf1a.  v10:= (`float`) v10 @kind i2f;
  #L1daf1c.  v1:= v10 * v5 @kind float;
  #L1daf20.  v10:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1daf24.  v10:= v10.`android.graphics.Rect.left` @type ^`int`;
  #L1daf28.  v10:= (`float`) v10 @kind i2f;
  #L1daf2a.  v2:= v2 - v10 @kind float;
  #L1daf2c.  v3:= v3 + v1 @kind float;
  #L1daf2e.  call temp:= `getTextAlign`(v17) @signature `Landroid/text/TextPaint;.getTextAlign:()Landroid/graphics/Paint$Align;` @kind virtual;
  #L1daf34.  v6:= temp @kind object;
  #L1daf36.  v10:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1daf3a.  v0:= v17 @kind object;
  #L1daf3e.  call `setTextAlign`(v0, v10) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1daf44.  v10:= 0I;
  #L1daf46.  v10:= fcmpl(v19, v10);
  #L1daf4a.  if v10 == 0 then goto L1daffe;
  #L1daf4e.  v10:= 0.5F;
  #L1daf52.  v10:= v10 * v4 @kind float;
  #L1daf54.  v2:= v2 - v10 @kind float;
  #L1daf56.  v10:= 0.5F;
  #L1daf5a.  v10:= v10 * v1 @kind float;
  #L1daf5c.  v3:= v3 - v10 @kind float;
  #L1daf5e.  v8:= v15;
  #L1daf60.  v9:= v16;
  #L1daf64.  v0:= v18 @kind object;
  #L1daf68.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1daf6c.  v11:= 0.5F;
  #L1daf70.  v10:= fcmpl(v10, v11);
  #L1daf74.  if v10 != 0 then goto L1daf8c;
  #L1daf78.  v0:= v18 @kind object;
  #L1daf7c.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1daf80.  v11:= 0.5F;
  #L1daf84.  v10:= fcmpl(v10, v11);
  #L1daf88.  if v10 == 0 then goto L1dafca;
  #L1daf8c.  v0:= v19;
  #L1daf90.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v4, v1, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1daf96.  v7:= temp @kind object;
  #L1daf98.  v10:= v7.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L1daf9c.  v0:= v18 @kind object;
  #L1dafa0.  v11:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1dafa4.  v12:= 0.5F;
  #L1dafa8.  v11:= v11 - v12 @kind float;
  #L1dafaa.  v10:= v10 * v11 @kind float;
  #L1dafac.  v8:= v8 - v10 @kind float;
  #L1dafae.  v10:= v7.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L1dafb2.  v0:= v18 @kind object;
  #L1dafb6.  v11:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1dafba.  v12:= 0.5F;
  #L1dafbe.  v11:= v11 - v12 @kind float;
  #L1dafc0.  v10:= v10 * v11 @kind float;
  #L1dafc2.  v9:= v9 - v10 @kind float;
  #L1dafc4.  call `recycleInstance`(v7) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L1dafca.  call temp:= `save`(v13) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1dafd0.  call `translate`(v13, v8, v9) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1dafd6.  v0:= v19;
  #L1dafda.  call `rotate`(v13, v0) @signature `Landroid/graphics/Canvas;.rotate:(F)V` @kind virtual;
  #L1dafe0.  call `translate`(v13, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1dafe6.  call `draw`(v14, v13) @signature `Landroid/text/StaticLayout;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1dafec.  call `restore`(v13) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L1daff2.  v0:= v17 @kind object;
  #L1daff6.  call `setTextAlign`(v0, v6) @signature `Landroid/text/TextPaint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1daffc.  return @kind void;
  #L1daffe.  v0:= v18 @kind object;
  #L1db002.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db006.  v11:= 0I;
  #L1db008.  v10:= fcmpl(v10, v11);
  #L1db00c.  if v10 != 0 then goto L1db022;
  #L1db010.  v0:= v18 @kind object;
  #L1db014.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db018.  v11:= 0I;
  #L1db01a.  v10:= fcmpl(v10, v11);
  #L1db01e.  if v10 == 0 then goto L1db03a;
  #L1db022.  v0:= v18 @kind object;
  #L1db026.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db02a.  v10:= v10 * v4 @kind float;
  #L1db02c.  v2:= v2 - v10 @kind float;
  #L1db02e.  v0:= v18 @kind object;
  #L1db032.  v10:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db036.  v10:= v10 * v1 @kind float;
  #L1db038.  v3:= v3 - v10 @kind float;
  #L1db03a.  v2:= v2 + v15 @kind float;
  #L1db03c.  v3:= v3 + v16 @kind float;
  #L1db040.  call temp:= `save`(v13) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1db046.  call `translate`(v13, v2, v3) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1db04c.  call `draw`(v14, v13) @signature `Landroid/text/StaticLayout;.draw:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L1db052.  call `restore`(v13) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L1db058.  goto L1daff2;
}
procedure `void` `drawMultilineText`(`android.graphics.Canvas` v10 @kind object @name `c`, `java.lang.String` v11 @kind object @name `text`, `float` v12 @name `x`, `float` v13 @name `y`, `android.text.TextPaint` v14 @kind object @name `paint`, `com.github.mikephil.charting.utils.FSize` v15 @kind object @name `constrainedToSize`, `com.github.mikephil.charting.utils.MPPointF` v16 @kind object @name `anchor`, `float` v17 @name `angleDegrees`) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/FSize;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1db06c.  v0:= new `android.text.StaticLayout`;
  #L1db070.  v2:= 0I;
  #L1db072.  call temp:= `length`(v11) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1db078.  v3:= temp;
  #L1db07a.  v1:= v15.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L1db07e.  v4:= (`double`) v1 @kind f2d;
  #L1db080.  call temp:= `ceil`(v4) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1db086.  v4:= temp @kind wide;
  #L1db088.  v6:= 1.0D;
  #L1db08c.  call temp:= `max`(v4, v6) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L1db092.  v4:= temp @kind wide;
  #L1db094.  v5:= (`int`) v4 @kind d2i;
  #L1db096.  v6:= `@@android.text.Layout$Alignment.ALIGN_NORMAL` @type ^`android.text.Layout$Alignment` @kind object;
  #L1db09a.  v7:= 1.0F;
  #L1db09e.  v8:= 0I;
  #L1db0a0.  v9:= 0I;
  #L1db0a2.  v1:= v11 @kind object;
  #L1db0a4.  v4:= v14 @kind object;
  #L1db0a6.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Landroid/text/StaticLayout;.<init>:(Ljava/lang/CharSequence;IILandroid/text/TextPaint;ILandroid/text/Layout$Alignment;FFZ)V` @kind direct;
  #L1db0ac.  v1:= v10 @kind object;
  #L1db0ae.  v2:= v0 @kind object;
  #L1db0b0.  v3:= v12;
  #L1db0b2.  v4:= v13;
  #L1db0b4.  v5:= v14 @kind object;
  #L1db0b6.  v6:= v16 @kind object;
  #L1db0ba.  v7:= v17;
  #L1db0be.  call `drawMultilineText`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawMultilineText:(Landroid/graphics/Canvas;Landroid/text/StaticLayout;FFLandroid/text/TextPaint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @kind static;
  #L1db0c4.  return @kind void;
}
procedure `void` `drawXAxisValue`(`android.graphics.Canvas` v11 @kind object @name `c`, `java.lang.String` v12 @kind object @name `text`, `float` v13 @name `x`, `float` v14 @name `y`, `android.graphics.Paint` v15 @kind object @name `paint`, `com.github.mikephil.charting.utils.MPPointF` v16 @kind object @name `anchor`, `float` v17 @name `angleDegrees`) @signature `Lcom/github/mikephil/charting/utils/Utils;.drawXAxisValue:(Landroid/graphics/Canvas;Ljava/lang/String;FFLandroid/graphics/Paint;Lcom/github/mikephil/charting/utils/MPPointF;F)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L1db0d8.  v1:= 0I;
  #L1db0da.  v2:= 0I;
  #L1db0dc.  v8:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1db0e0.  call temp:= `getFontMetrics`(v15, v8) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1db0e6.  v3:= temp;
  #L1db0e8.  v8:= 0I;
  #L1db0ea.  call temp:= `length`(v12) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1db0f0.  v9:= temp;
  #L1db0f2.  v10:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1db0f6.  call `getTextBounds`(v15, v12, v8, v9, v10) @signature `Landroid/graphics/Paint;.getTextBounds:(Ljava/lang/String;IILandroid/graphics/Rect;)V` @kind virtual;
  #L1db0fc.  v8:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1db100.  v8:= v8.`android.graphics.Rect.left` @type ^`int`;
  #L1db104.  v8:= (`float`) v8 @kind i2f;
  #L1db106.  v1:= v1 - v8 @kind float;
  #L1db108.  v8:= `@@com.github.mikephil.charting.utils.Utils.mFontMetricsBuffer` @type ^`android.graphics.Paint$FontMetrics` @kind object;
  #L1db10c.  v8:= v8.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L1db110.  v8:= -v8 @kind float;
  #L1db112.  v2:= v2 + v8 @kind float;
  #L1db114.  call temp:= `getTextAlign`(v15) @signature `Landroid/graphics/Paint;.getTextAlign:()Landroid/graphics/Paint$Align;` @kind virtual;
  #L1db11a.  v4:= temp @kind object;
  #L1db11c.  v8:= `@@android.graphics.Paint$Align.LEFT` @type ^`android.graphics.Paint$Align` @kind object;
  #L1db120.  call `setTextAlign`(v15, v8) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1db126.  v8:= 0I;
  #L1db128.  v8:= fcmpl(v17, v8);
  #L1db12c.  if v8 == 0 then goto L1db1f0;
  #L1db130.  v8:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1db134.  call temp:= `width`(v8) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1db13a.  v8:= temp;
  #L1db13c.  v8:= (`float`) v8 @kind i2f;
  #L1db13e.  v9:= 0.5F;
  #L1db142.  v8:= v8 * v9 @kind float;
  #L1db144.  v1:= v1 - v8 @kind float;
  #L1db146.  v8:= 0.5F;
  #L1db14a.  v8:= v8 * v3 @kind float;
  #L1db14c.  v2:= v2 - v8 @kind float;
  #L1db14e.  v6:= v13;
  #L1db150.  v7:= v14;
  #L1db152.  v0:= v16 @kind object;
  #L1db156.  v8:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db15a.  v9:= 0.5F;
  #L1db15e.  v8:= fcmpl(v8, v9);
  #L1db162.  if v8 != 0 then goto L1db17a;
  #L1db166.  v0:= v16 @kind object;
  #L1db16a.  v8:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db16e.  v9:= 0.5F;
  #L1db172.  v8:= fcmpl(v8, v9);
  #L1db176.  if v8 == 0 then goto L1db1c6;
  #L1db17a.  v8:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1db17e.  call temp:= `width`(v8) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1db184.  v8:= temp;
  #L1db186.  v8:= (`float`) v8 @kind i2f;
  #L1db188.  v0:= v17;
  #L1db18c.  call temp:= `getSizeOfRotatedRectangleByDegrees`(v8, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1db192.  v5:= temp @kind object;
  #L1db194.  v8:= v5.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L1db198.  v0:= v16 @kind object;
  #L1db19c.  v9:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db1a0.  v10:= 0.5F;
  #L1db1a4.  v9:= v9 - v10 @kind float;
  #L1db1a6.  v8:= v8 * v9 @kind float;
  #L1db1a8.  v6:= v6 - v8 @kind float;
  #L1db1aa.  v8:= v5.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L1db1ae.  v0:= v16 @kind object;
  #L1db1b2.  v9:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db1b6.  v10:= 0.5F;
  #L1db1ba.  v9:= v9 - v10 @kind float;
  #L1db1bc.  v8:= v8 * v9 @kind float;
  #L1db1be.  v7:= v7 - v8 @kind float;
  #L1db1c0.  call `recycleInstance`(v5) @signature `Lcom/github/mikephil/charting/utils/FSize;.recycleInstance:(Lcom/github/mikephil/charting/utils/FSize;)V` @kind static;
  #L1db1c6.  call temp:= `save`(v11) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L1db1cc.  call `translate`(v11, v6, v7) @signature `Landroid/graphics/Canvas;.translate:(FF)V` @kind virtual;
  #L1db1d2.  v0:= v17;
  #L1db1d6.  call `rotate`(v11, v0) @signature `Landroid/graphics/Canvas;.rotate:(F)V` @kind virtual;
  #L1db1dc.  call `drawText`(v11, v12, v1, v2, v15) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1db1e2.  call `restore`(v11) @signature `Landroid/graphics/Canvas;.restore:()V` @kind virtual;
  #L1db1e8.  call `setTextAlign`(v15, v4) @signature `Landroid/graphics/Paint;.setTextAlign:(Landroid/graphics/Paint$Align;)V` @kind virtual;
  #L1db1ee.  return @kind void;
  #L1db1f0.  v0:= v16 @kind object;
  #L1db1f4.  v8:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db1f8.  v9:= 0I;
  #L1db1fa.  v8:= fcmpl(v8, v9);
  #L1db1fe.  if v8 != 0 then goto L1db214;
  #L1db202.  v0:= v16 @kind object;
  #L1db206.  v8:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db20a.  v9:= 0I;
  #L1db20c.  v8:= fcmpl(v8, v9);
  #L1db210.  if v8 == 0 then goto L1db23a;
  #L1db214.  v8:= `@@com.github.mikephil.charting.utils.Utils.mDrawTextRectBuffer` @type ^`android.graphics.Rect` @kind object;
  #L1db218.  call temp:= `width`(v8) @signature `Landroid/graphics/Rect;.width:()I` @kind virtual;
  #L1db21e.  v8:= temp;
  #L1db220.  v8:= (`float`) v8 @kind i2f;
  #L1db222.  v0:= v16 @kind object;
  #L1db226.  v9:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db22a.  v8:= v8 * v9 @kind float;
  #L1db22c.  v1:= v1 - v8 @kind float;
  #L1db22e.  v0:= v16 @kind object;
  #L1db232.  v8:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db236.  v8:= v8 * v3 @kind float;
  #L1db238.  v2:= v2 - v8 @kind float;
  #L1db23a.  v1:= v1 + v13 @kind float;
  #L1db23c.  v2:= v2 + v14 @kind float;
  #L1db23e.  call `drawText`(v11, v12, v1, v2, v15) @signature `Landroid/graphics/Canvas;.drawText:(Ljava/lang/String;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L1db244.  goto L1db1e8;
}
procedure `java.lang.String` `formatNumber`(`float` v1 @name `number`, `int` v2 @name `digitCount`, `boolean` v3 @name `separateThousands`) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZ)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db258.  v0:= 46I;
  #L1db25c.  call temp:= `formatNumber`(v1, v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZC)Ljava/lang/String;` @kind static;
  #L1db262.  v0:= temp @kind object;
  #L1db264.  return v0 @kind object;
}
procedure `java.lang.String` `formatNumber`(`float` v14 @name `number`, `int` v15 @name `digitCount`, `boolean` v16 @name `separateThousands`, `char` v17 @name `separateChar`) @signature `Lcom/github/mikephil/charting/utils/Utils;.formatNumber:(FIZC)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L1db278.  v11:= 35I;
  #L1db27c.  v8:= new `char`[v11];
  #L1db280.  v5:= 0I;
  #L1db282.  v11:= 0I;
  #L1db284.  v11:= fcmpl(v14, v11);
  #L1db288.  if v11 != 0 then goto L1db292;
  #L1db28c.  v11:= "0" @kind object;
  #L1db290.  return v11 @kind object;
  #L1db292.  v10:= 0I;
  #L1db294.  v11:= 1.0F;
  #L1db298.  v11:= fcmpg(v14, v11);
  #L1db29c.  if v11 >= 0 then goto L1db2ae;
  #L1db2a0.  v11:= -1.0F;
  #L1db2a4.  v11:= fcmpl(v14, v11);
  #L1db2a8.  if v11 <= 0 then goto L1db2ae;
  #L1db2ac.  v10:= 1I;
  #L1db2ae.  v11:= 0I;
  #L1db2b0.  v11:= fcmpg(v14, v11);
  #L1db2b4.  if v11 >= 0 then goto L1db2bc;
  #L1db2b8.  v5:= 1I;
  #L1db2ba.  v14:= -v14 @kind float;
  #L1db2bc.  v11:= `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] @kind object;
  #L1db2c0.  v11:= length @variable v11;
  #L1db2c2.  if v15 <= v11 then goto L1db2d0;
  #L1db2c6.  v11:= `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] @kind object;
  #L1db2ca.  v11:= length @variable v11;
  #L1db2cc.  v15:= v11 + -1;
  #L1db2d0.  v11:= `@@com.github.mikephil.charting.utils.Utils.POW_10` @type ^`int`[] @kind object;
  #L1db2d4.  v11:= v11[v15];
  #L1db2d8.  v11:= (`float`) v11 @kind i2f;
  #L1db2da.  v14:= v14 * v11 @kind float;
  #L1db2dc.  call temp:= `round`(v14) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L1db2e2.  v11:= temp;
  #L1db2e4.  v6:= (`long`) v11 @kind i2l;
  #L1db2e6.  v11:= length @variable v8;
  #L1db2e8.  v3:= v11 + -1;
  #L1db2ec.  v0:= 0I;
  #L1db2ee.  v1:= 0I;
  #L1db2f0.  v4:= v3;
  #L1db2f2.  v12:= 0L;
  #L1db2f6.  v11:= lcmp(v6, v12);
  #L1db2fa.  if v11 != 0 then goto L1db306;
  #L1db2fe.  v11:= v15 + 1;
  #L1db302.  if v0 >= v11 then goto L1db396;
  #L1db306.  v12:= 10L;
  #L1db30a.  v12:= v6 %% v12 @kind long;
  #L1db30e.  v2:= (`int`) v12 @kind l2i;
  #L1db310.  v12:= 10L;
  #L1db314.  v6:= v6 / v12 @kind long;
  #L1db316.  v3:= v4 + -1;
  #L1db31a.  v11:= v2 + 48;
  #L1db31e.  v11:= (`char`) v11 @kind i2c;
  #L1db320.  v8[v4]:= v11 @kind char;
  #L1db324.  v0:= v0 + 1;
  #L1db328.  if v0 != v15 then goto L1db344;
  #L1db32c.  v4:= v3 + -1;
  #L1db330.  v11:= 44I;
  #L1db334.  v8[v3]:= v11 @kind char;
  #L1db338.  v0:= v0 + 1;
  #L1db33c.  v1:= 1I;
  #L1db33e.  v3:= v4;
  #L1db340.  v4:= v3;
  #L1db342.  goto L1db2f2;
  #L1db344.  if v16 == 0 then goto L1db340;
  #L1db348.  v12:= 0L;
  #L1db34c.  v11:= lcmp(v6, v12);
  #L1db350.  if v11 == 0 then goto L1db340;
  #L1db354.  if v0 <= v15 then goto L1db340;
  #L1db358.  if v1 == 0 then goto L1db378;
  #L1db35c.  v11:= v0 - v15 @kind int;
  #L1db360.  v11:= v11 %% 4;
  #L1db364.  if v11 != 0 then goto L1db340;
  #L1db368.  v4:= v3 + -1;
  #L1db36c.  v8[v3]:= v17 @kind char;
  #L1db370.  v0:= v0 + 1;
  #L1db374.  v3:= v4;
  #L1db376.  goto L1db340;
  #L1db378.  v11:= v0 - v15 @kind int;
  #L1db37c.  v11:= v11 %% 4;
  #L1db380.  v12:= 3I;
  #L1db382.  if v11 != v12 then goto L1db340;
  #L1db386.  v4:= v3 + -1;
  #L1db38a.  v8[v3]:= v17 @kind char;
  #L1db38e.  v0:= v0 + 1;
  #L1db392.  v3:= v4;
  #L1db394.  goto L1db340;
  #L1db396.  if v10 == 0 then goto L1db3ac;
  #L1db39a.  v3:= v4 + -1;
  #L1db39e.  v11:= 48I;
  #L1db3a2.  v8[v4]:= v11 @kind char;
  #L1db3a6.  v0:= v0 + 1;
  #L1db3aa.  v4:= v3;
  #L1db3ac.  if v5 == 0 then goto L1db3d6;
  #L1db3b0.  v3:= v4 + -1;
  #L1db3b4.  v11:= 45I;
  #L1db3b8.  v8[v4]:= v11 @kind char;
  #L1db3bc.  v0:= v0 + 1;
  #L1db3c0.  v11:= length @variable v8;
  #L1db3c2.  v9:= v11 - v0 @kind int;
  #L1db3c6.  v11:= length @variable v8;
  #L1db3c8.  v11:= v11 - v9 @kind int;
  #L1db3ca.  call temp:= `valueOf`(v8, v9, v11) @signature `Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;` @kind static;
  #L1db3d0.  v11:= temp @kind object;
  #L1db3d2.  goto L1db290;
  #L1db3d6.  v3:= v4;
  #L1db3d8.  goto L1db3c0;
}
procedure `int` `getDecimals`(`float` v4 @name `number`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getDecimals:(F)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1db3ec.  v2:= (`double`) v4 @kind f2d;
  #L1db3ee.  call temp:= `roundToNextSignificant`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L1db3f4.  v0:= temp;
  #L1db3f6.  v2:= (`double`) v0 @kind f2d;
  #L1db3f8.  call temp:= `log10`(v2) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L1db3fe.  v2:= temp @kind wide;
  #L1db400.  v2:= -v2 @kind double;
  #L1db402.  call temp:= `ceil`(v2) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1db408.  v2:= temp @kind wide;
  #L1db40a.  v1:= (`int`) v2 @kind d2i;
  #L1db40c.  v1:= v1 + 2;
  #L1db410.  return v1;
}
procedure `float` `getLineHeight`(`android.graphics.Paint` v2 @kind object @name `paint`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db424.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L1db428.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L1db42e.  call temp:= `getLineHeight`(v2, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @kind static;
  #L1db434.  v1:= temp;
  #L1db436.  return v1;
}
procedure `float` `getLineHeight`(`android.graphics.Paint` v2 @kind object @name `paint`, `android.graphics.Paint$FontMetrics` v3 @kind object @name `fontMetrics`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineHeight:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db448.  call temp:= `getFontMetrics`(v2, v3) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1db44e.  v0:= v3.`android.graphics.Paint$FontMetrics.descent` @type ^`float`;
  #L1db452.  v1:= v3.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L1db456.  v0:= v0 - v1 @kind float;
  #L1db458.  return v0;
}
procedure `float` `getLineSpacing`(`android.graphics.Paint` v2 @kind object @name `paint`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db46c.  v0:= new `android.graphics.Paint$FontMetrics`;
  #L1db470.  call `<init>`(v0) @signature `Landroid/graphics/Paint$FontMetrics;.<init>:()V` @kind direct;
  #L1db476.  call temp:= `getLineSpacing`(v2, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @kind static;
  #L1db47c.  v1:= temp;
  #L1db47e.  return v1;
}
procedure `float` `getLineSpacing`(`android.graphics.Paint` v2 @kind object @name `paint`, `android.graphics.Paint$FontMetrics` v3 @kind object @name `fontMetrics`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getLineSpacing:(Landroid/graphics/Paint;Landroid/graphics/Paint$FontMetrics;)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db490.  call temp:= `getFontMetrics`(v2, v3) @signature `Landroid/graphics/Paint;.getFontMetrics:(Landroid/graphics/Paint$FontMetrics;)F` @kind virtual;
  #L1db496.  v0:= v3.`android.graphics.Paint$FontMetrics.ascent` @type ^`float`;
  #L1db49a.  v1:= v3.`android.graphics.Paint$FontMetrics.top` @type ^`float`;
  #L1db49e.  v0:= v0 - v1 @kind float;
  #L1db4a0.  v1:= v3.`android.graphics.Paint$FontMetrics.bottom` @type ^`float`;
  #L1db4a4.  v0:= v0 + v1 @kind float;
  #L1db4a6.  return v0;
}
procedure `int` `getMaximumFlingVelocity`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getMaximumFlingVelocity:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db4b8.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int`;
  #L1db4bc.  return v0;
}
procedure `int` `getMinimumFlingVelocity`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getMinimumFlingVelocity:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db4d0.  v0:= `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int`;
  #L1db4d4.  return v0;
}
procedure `float` `getNormalizedAngle`(`float` v2 @name `angle`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db4e8.  v1:= 360.0F;
  #L1db4ec.  v0:= 0I;
  #L1db4ee.  v0:= fcmpg(v2, v0);
  #L1db4f2.  if v0 >= 0 then goto L1db4fa;
  #L1db4f6.  v2:= v2 + v1 @kind float;
  #L1db4f8.  goto L1db4ec;
  #L1db4fa.  v0:= v2 %% v1 @kind float;
  #L1db4fe.  return v0;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.utils.MPPointF` v2 @kind object @name `center`, `float` v3 @name `dist`, `float` v4 @name `angle`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db510.  v1:= 0I;
  #L1db512.  call temp:= `getInstance`(v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L1db518.  v0:= temp @kind object;
  #L1db51a.  call `getPosition`(v2, v3, v4, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L1db520.  return v0 @kind object;
}
procedure `void` `getPosition`(`com.github.mikephil.charting.utils.MPPointF` v6 @kind object @name `center`, `float` v7 @name `dist`, `float` v8 @name `angle`, `com.github.mikephil.charting.utils.MPPointF` v9 @kind object @name `outputPoint`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1db534.  v0:= v6.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L1db538.  v0:= (`double`) v0 @kind f2d;
  #L1db53a.  v2:= (`double`) v7 @kind f2d;
  #L1db53c.  v4:= (`double`) v8 @kind f2d;
  #L1db53e.  call temp:= `toRadians`(v4) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L1db544.  v4:= temp @kind wide;
  #L1db546.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1db54c.  v4:= temp @kind wide;
  #L1db54e.  v2:= v2 * v4 @kind double;
  #L1db550.  v0:= v0 + v2 @kind double;
  #L1db552.  v0:= (`float`) v0 @kind d2f;
  #L1db554.  v9.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v0;
  #L1db558.  v0:= v6.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L1db55c.  v0:= (`double`) v0 @kind f2d;
  #L1db55e.  v2:= (`double`) v7 @kind f2d;
  #L1db560.  v4:= (`double`) v8 @kind f2d;
  #L1db562.  call temp:= `toRadians`(v4) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L1db568.  v4:= temp @kind wide;
  #L1db56a.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1db570.  v4:= temp @kind wide;
  #L1db572.  v2:= v2 * v4 @kind double;
  #L1db574.  v0:= v0 + v2 @kind double;
  #L1db576.  v0:= (`float`) v0 @kind d2f;
  #L1db578.  v9.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v0;
  #L1db57c.  return @kind void;
}
procedure `int` `getSDKInt`() @signature `Lcom/github/mikephil/charting/utils/Utils;.getSDKInt:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db590.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1db594.  return v0;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByDegrees`(`float` v2 @name `rectangleWidth`, `float` v3 @name `rectangleHeight`, `float` v4 @name `degrees`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db5a8.  v1:= 1016003125I;
  #L1db5ae.  v0:= v4 * v1 @kind float;
  #L1db5b2.  call temp:= `getSizeOfRotatedRectangleByRadians`(v2, v3, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1db5b8.  v1:= temp @kind object;
  #L1db5ba.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByDegrees`(`com.github.mikephil.charting.utils.FSize` v3 @kind object @name `rectangleSize`, `float` v4 @name `degrees`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByDegrees:(Lcom/github/mikephil/charting/utils/FSize;F)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L1db5cc.  v1:= 1016003125I;
  #L1db5d2.  v0:= v4 * v1 @kind float;
  #L1db5d6.  v1:= v3.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L1db5da.  v2:= v3.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L1db5de.  call temp:= `getSizeOfRotatedRectangleByRadians`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1db5e4.  v1:= temp @kind object;
  #L1db5e6.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByRadians`(`float` v4 @name `rectangleWidth`, `float` v5 @name `rectangleHeight`, `float` v6 @name `radians`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1db5f8.  v0:= (`double`) v6 @kind f2d;
  #L1db5fa.  call temp:= `cos`(v0) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1db600.  v0:= temp @kind wide;
  #L1db602.  v0:= (`float`) v0 @kind d2f;
  #L1db604.  v0:= v0 * v4 @kind float;
  #L1db606.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1db60c.  v0:= temp;
  #L1db60e.  v2:= (`double`) v6 @kind f2d;
  #L1db610.  call temp:= `sin`(v2) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1db616.  v2:= temp @kind wide;
  #L1db618.  v1:= (`float`) v2 @kind d2f;
  #L1db61a.  v1:= v1 * v5 @kind float;
  #L1db61c.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1db622.  v1:= temp;
  #L1db624.  v0:= v0 + v1 @kind float;
  #L1db626.  v2:= (`double`) v6 @kind f2d;
  #L1db628.  call temp:= `sin`(v2) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L1db62e.  v2:= temp @kind wide;
  #L1db630.  v1:= (`float`) v2 @kind d2f;
  #L1db632.  v1:= v1 * v4 @kind float;
  #L1db634.  call temp:= `abs`(v1) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1db63a.  v1:= temp;
  #L1db63c.  v2:= (`double`) v6 @kind f2d;
  #L1db63e.  call temp:= `cos`(v2) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L1db644.  v2:= temp @kind wide;
  #L1db646.  v2:= (`float`) v2 @kind d2f;
  #L1db648.  v2:= v2 * v5 @kind float;
  #L1db64a.  call temp:= `abs`(v2) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L1db650.  v2:= temp;
  #L1db652.  v1:= v1 + v2 @kind float;
  #L1db654.  call temp:= `getInstance`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/FSize;.getInstance:(FF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1db65a.  v0:= temp @kind object;
  #L1db65c.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.FSize` `getSizeOfRotatedRectangleByRadians`(`com.github.mikephil.charting.utils.FSize` v2 @kind object @name `rectangleSize`, `float` v3 @name `radians`) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(Lcom/github/mikephil/charting/utils/FSize;F)Lcom/github/mikephil/charting/utils/FSize;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db670.  v0:= v2.`com.github.mikephil.charting.utils.FSize.width` @type ^`float`;
  #L1db674.  v1:= v2.`com.github.mikephil.charting.utils.FSize.height` @type ^`float`;
  #L1db678.  call temp:= `getSizeOfRotatedRectangleByRadians`(v0, v1, v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.getSizeOfRotatedRectangleByRadians:(FFF)Lcom/github/mikephil/charting/utils/FSize;` @kind static;
  #L1db67e.  v0:= temp @kind object;
  #L1db680.  return v0 @kind object;
}
procedure `double` `granularity`(`float` v12 @name `range`, `int` v13 @name `labelCount`) @signature `Lcom/github/mikephil/charting/utils/Utils;.granularity:(FI)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1db694.  v10:= 10.0D;
  #L1db698.  v5:= (`float`) v13 @kind i2f;
  #L1db69a.  v5:= v12 / v5 @kind float;
  #L1db69e.  v6:= (`double`) v5 @kind f2d;
  #L1db6a0.  call temp:= `roundToNextSignificant`(v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L1db6a6.  v5:= temp;
  #L1db6a8.  v0:= (`double`) v5 @kind f2d;
  #L1db6aa.  call temp:= `log10`(v0) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L1db6b0.  v8:= temp @kind wide;
  #L1db6b2.  v5:= (`int`) v8 @kind d2i;
  #L1db6b4.  v8:= (`double`) v5 @kind i2d;
  #L1db6b6.  call temp:= `pow`(v10, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1db6bc.  v8:= temp @kind wide;
  #L1db6be.  call temp:= `roundToNextSignificant`(v8) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @kind static;
  #L1db6c4.  v5:= temp;
  #L1db6c6.  v2:= (`double`) v5 @kind f2d;
  #L1db6c8.  v8:= v0 / v2 @kind double;
  #L1db6cc.  v4:= (`int`) v8 @kind d2i;
  #L1db6ce.  v5:= 5I;
  #L1db6d0.  if v4 <= v5 then goto L1db6e0;
  #L1db6d4.  v8:= v10 * v2 @kind double;
  #L1db6d8.  call temp:= `floor`(v8) @signature `Ljava/lang/Math;.floor:(D)D` @kind static;
  #L1db6de.  v0:= temp @kind wide;
  #L1db6e0.  v8:= 0.1D;
  #L1db6ea.  v8:= v8 * v0 @kind double;
  #L1db6ec.  return v8 @kind wide;
}
procedure `void` `init`(`android.content.Context` v4 @kind object @name `context`) @signature `Lcom/github/mikephil/charting/utils/Utils;.init:(Landroid/content/Context;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1db700.  if v4 != 0 then goto L1db72c;
  #L1db704.  call temp:= `getMinimumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMinimumFlingVelocity:()I` @kind static;
  #L1db70a.  v2:= temp;
  #L1db70c.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v2;
  #L1db710.  call temp:= `getMaximumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMaximumFlingVelocity:()I` @kind static;
  #L1db716.  v2:= temp;
  #L1db718.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v2;
  #L1db71c.  v2:= "MPChartLib-Utils" @kind object;
  #L1db720.  v3:= "Utils.init(...) PROVIDED CONTEXT OBJECT IS NULL" @kind object;
  #L1db724.  call temp:= `e`(v2, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L1db72a.  return @kind void;
  #L1db72c.  call temp:= `get`(v4) @signature `Landroid/view/ViewConfiguration;.get:(Landroid/content/Context;)Landroid/view/ViewConfiguration;` @kind static;
  #L1db732.  v1:= temp @kind object;
  #L1db734.  call temp:= `getScaledMinimumFlingVelocity`(v1) @signature `Landroid/view/ViewConfiguration;.getScaledMinimumFlingVelocity:()I` @kind virtual;
  #L1db73a.  v2:= temp;
  #L1db73c.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v2;
  #L1db740.  call temp:= `getScaledMaximumFlingVelocity`(v1) @signature `Landroid/view/ViewConfiguration;.getScaledMaximumFlingVelocity:()I` @kind virtual;
  #L1db746.  v2:= temp;
  #L1db748.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v2;
  #L1db74c.  call temp:= `getResources`(v4) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L1db752.  v0:= temp @kind object;
  #L1db754.  call temp:= `getDisplayMetrics`(v0) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L1db75a.  v2:= temp @kind object;
  #L1db75c.  `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` := v2 @kind object;
  #L1db760.  goto L1db72a;
}
procedure `void` `init`(`android.content.res.Resources` v1 @kind object @name `res`) @signature `Lcom/github/mikephil/charting/utils/Utils;.init:(Landroid/content/res/Resources;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1db774.  call temp:= `getDisplayMetrics`(v1) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L1db77a.  v0:= temp @kind object;
  #L1db77c.  `@@com.github.mikephil.charting.utils.Utils.mMetrics` @type ^`android.util.DisplayMetrics` := v0 @kind object;
  #L1db780.  call temp:= `getMinimumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMinimumFlingVelocity:()I` @kind static;
  #L1db786.  v0:= temp;
  #L1db788.  `@@com.github.mikephil.charting.utils.Utils.mMinimumFlingVelocity` @type ^`int` := v0;
  #L1db78c.  call temp:= `getMaximumFlingVelocity`() @signature `Landroid/view/ViewConfiguration;.getMaximumFlingVelocity:()I` @kind static;
  #L1db792.  v0:= temp;
  #L1db794.  `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int` := v0;
  #L1db798.  return @kind void;
}
procedure `double` `nextUp`(`double` v6 @name `d`) @signature `Lcom/github/mikephil/charting/utils/Utils;.nextUp:(D)D` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1db7ac.  v4:= 0L;
  #L1db7b0.  v0:= InfinityD;
  #L1db7b4.  v0:= dcmpl(v6, v0);
  #L1db7b8.  if v0 != 0 then goto L1db7be;
  #L1db7bc.  return v6 @kind wide;
  #L1db7be.  v6:= v6 + v4 @kind double;
  #L1db7c0.  call temp:= `doubleToRawLongBits`(v6) @signature `Ljava/lang/Double;.doubleToRawLongBits:(D)J` @kind static;
  #L1db7c6.  v2:= temp @kind wide;
  #L1db7c8.  v0:= dcmpl(v6, v4);
  #L1db7cc.  if v0 < 0 then goto L1db7e0;
  #L1db7d0.  v0:= 1L;
  #L1db7d4.  v0:= v0 + v2 @kind long;
  #L1db7d6.  call temp:= `longBitsToDouble`(v0) @signature `Ljava/lang/Double;.longBitsToDouble:(J)D` @kind static;
  #L1db7dc.  v6:= temp @kind wide;
  #L1db7de.  goto L1db7bc;
  #L1db7e0.  v0:= -1L;
  #L1db7e4.  goto L1db7d4;
}
procedure `void` `postInvalidateOnAnimation`(`android.view.View` v2 @kind object @name `view`) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L1db7f8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L1db7fc.  v1:= 16I;
  #L1db800.  if v0 < v1 then goto L1db80c;
  #L1db804.  call `postInvalidateOnAnimation`(v2) @signature `Landroid/view/View;.postInvalidateOnAnimation:()V` @kind virtual;
  #L1db80a.  return @kind void;
  #L1db80c.  v0:= 10L;
  #L1db810.  call `postInvalidateDelayed`(v2, v0) @signature `Landroid/view/View;.postInvalidateDelayed:(J)V` @kind virtual;
  #L1db816.  goto L1db80a;
}
procedure `float` `roundToNextSignificant`(`double` v10 @name `number`) @signature `Lcom/github/mikephil/charting/utils/Utils;.roundToNextSignificant:(D)F` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L1db828.  v6:= 0L;
  #L1db82c.  v3:= dcmpg(v10, v6);
  #L1db830.  if v3 >= 0 then goto L1db874;
  #L1db834.  v6:= -v10 @kind double;
  #L1db836.  call temp:= `log10`(v6) @signature `Ljava/lang/Math;.log10:(D)D` @kind static;
  #L1db83c.  v6:= temp @kind wide;
  #L1db83e.  v3:= (`float`) v6 @kind d2f;
  #L1db840.  v6:= (`double`) v3 @kind f2d;
  #L1db842.  call temp:= `ceil`(v6) @signature `Ljava/lang/Math;.ceil:(D)D` @kind static;
  #L1db848.  v6:= temp @kind wide;
  #L1db84a.  v0:= (`float`) v6 @kind d2f;
  #L1db84c.  v3:= (`int`) v0 @kind f2i;
  #L1db84e.  v2:= v3 - 1;
  #L1db852.  v6:= 10.0D;
  #L1db856.  v8:= (`double`) v2 @kind i2d;
  #L1db858.  call temp:= `pow`(v6, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L1db85e.  v6:= temp @kind wide;
  #L1db860.  v1:= (`float`) v6 @kind d2f;
  #L1db862.  v6:= (`double`) v1 @kind f2d;
  #L1db864.  v6:= v6 * v10 @kind double;
  #L1db866.  call temp:= `round`(v6) @signature `Ljava/lang/Math;.round:(D)J` @kind static;
  #L1db86c.  v4:= temp @kind wide;
  #L1db86e.  v3:= (`float`) v4 @kind l2f;
  #L1db870.  v3:= v3 / v1 @kind float;
  #L1db872.  return v3;
  #L1db874.  v6:= v10 @kind wide;
  #L1db876.  goto L1db836;
}
procedure `void` `velocityTrackerPointerUpCleanUpIfNecessary`(`android.view.MotionEvent` v12 @kind object @name `ev`, `android.view.VelocityTracker` v13 @kind object @name `tracker`) @signature `Lcom/github/mikephil/charting/utils/Utils;.velocityTrackerPointerUpCleanUpIfNecessary:(Landroid/view/MotionEvent;Landroid/view/VelocityTracker;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L1db888.  v10:= 1000I;
  #L1db88c.  v11:= `@@com.github.mikephil.charting.utils.Utils.mMaximumFlingVelocity` @type ^`int`;
  #L1db890.  v11:= (`float`) v11 @kind i2f;
  #L1db892.  call `computeCurrentVelocity`(v13, v10, v11) @signature `Landroid/view/VelocityTracker;.computeCurrentVelocity:(IF)V` @kind virtual;
  #L1db898.  call temp:= `getActionIndex`(v12) @signature `Landroid/view/MotionEvent;.getActionIndex:()I` @kind virtual;
  #L1db89e.  v5:= temp;
  #L1db8a0.  call temp:= `getPointerId`(v12, v5) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L1db8a6.  v3:= temp;
  #L1db8a8.  call temp:= `getXVelocity`(v13, v3) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L1db8ae.  v7:= temp;
  #L1db8b0.  call temp:= `getYVelocity`(v13, v3) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L1db8b6.  v9:= temp;
  #L1db8b8.  v2:= 0I;
  #L1db8ba.  call temp:= `getPointerCount`(v12) @signature `Landroid/view/MotionEvent;.getPointerCount:()I` @kind virtual;
  #L1db8c0.  v0:= temp;
  #L1db8c2.  if v2 >= v0 then goto L1db904;
  #L1db8c6.  if v2 != v5 then goto L1db8d0;
  #L1db8ca.  v2:= v2 + 1;
  #L1db8ce.  goto L1db8c2;
  #L1db8d0.  call temp:= `getPointerId`(v12, v2) @signature `Landroid/view/MotionEvent;.getPointerId:(I)I` @kind virtual;
  #L1db8d6.  v4:= temp;
  #L1db8d8.  call temp:= `getXVelocity`(v13, v4) @signature `Landroid/view/VelocityTracker;.getXVelocity:(I)F` @kind virtual;
  #L1db8de.  v10:= temp;
  #L1db8e0.  v6:= v7 * v10 @kind float;
  #L1db8e4.  call temp:= `getYVelocity`(v13, v4) @signature `Landroid/view/VelocityTracker;.getYVelocity:(I)F` @kind virtual;
  #L1db8ea.  v10:= temp;
  #L1db8ec.  v8:= v9 * v10 @kind float;
  #L1db8f0.  v1:= v6 + v8 @kind float;
  #L1db8f4.  v10:= 0I;
  #L1db8f6.  v10:= fcmpg(v1, v10);
  #L1db8fa.  if v10 >= 0 then goto L1db8ca;
  #L1db8fe.  call `clear`(v13) @signature `Landroid/view/VelocityTracker;.clear:()V` @kind virtual;
  #L1db904.  return @kind void;
}
