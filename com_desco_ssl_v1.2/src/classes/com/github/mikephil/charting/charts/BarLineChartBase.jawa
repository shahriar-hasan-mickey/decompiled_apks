record `com.github.mikephil.charting.charts.BarLineChartBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.charts.Chart` @kind class, `com.github.mikephil.charting.interfaces.dataprovider.BarLineScatterCandleBubbleDataProvider` @kind interface {
  `long` `com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @AccessFlag PRIVATE;
  `java.lang.Float` `com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @AccessFlag PRIVATE;
  `java.lang.Float` `com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.renderer.YAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.renderer.YAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis` `com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.listener.OnDrawListener` `com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @AccessFlag PROTECTED;
  `android.graphics.Paint` `com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @AccessFlag PROTECTED;
  `android.graphics.RectF` `com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @AccessFlag PRIVATE;
  `float`[] `com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.renderer.XAxisRenderer` `com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @AccessFlag PROTECTED;
  `android.graphics.Matrix` `com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.MPPointD` `com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @AccessFlag ;
  `com.github.mikephil.charting.utils.MPPointD` `com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.MPPointD` `com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @AccessFlag PROTECTED;
  `long` `com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v7 @kind this, `android.content.Context` v8 @kind object @name `context`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L328874.  v6:= 0I;
  #L328876.  v5:= 2I;
  #L328878.  v1:= 1I;
  #L32887a.  v4:= 0I;
  #L32887c.  v2:= 0L;
  #L328880.  call `<init>`(v7, v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L328886.  v0:= 100I;
  #L32888a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v0;
  #L32888e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328892.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L328896.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L32889a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v4 @kind boolean;
  #L32889e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3288a2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3288a6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3288aa.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3288ae.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3288b2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v4 @kind boolean;
  #L3288b6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v4 @kind boolean;
  #L3288ba.  v0:= 15.0F;
  #L3288be.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v0;
  #L3288c2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v4 @kind boolean;
  #L3288c6.  v0:= 0L;
  #L3288ca.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L3288ce.  v0:= 0L;
  #L3288d2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L3288d6.  v0:= new `android.graphics.RectF`;
  #L3288da.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3288e0.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3288e4.  v0:= new `android.graphics.Matrix`;
  #L3288e8.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3288ee.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3288f2.  v0:= new `android.graphics.Matrix`;
  #L3288f6.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3288fc.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328900.  v0:= new `android.graphics.Matrix`;
  #L328904.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L32890a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L32890e.  v0:= new `android.graphics.Matrix`;
  #L328912.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328918.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L32891c.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328920.  v0:= new `float`[v5];
  #L328924.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v0 @kind object;
  #L328928.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L32892e.  v0:= temp @kind object;
  #L328930.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328934.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L32893a.  v0:= temp @kind object;
  #L32893c.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328940.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328946.  v0:= temp @kind object;
  #L328948.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L32894c.  v0:= new `float`[v5];
  #L328950.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v0 @kind object;
  #L328954.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v7 @kind this, `android.content.Context` v8 @kind object @name `context`, `android.util.AttributeSet` v9 @kind object @name `attrs`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L328968.  v6:= 0I;
  #L32896a.  v5:= 2I;
  #L32896c.  v1:= 1I;
  #L32896e.  v4:= 0I;
  #L328970.  v2:= 0L;
  #L328974.  call `<init>`(v7, v8, v9) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L32897a.  v0:= 100I;
  #L32897e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v0;
  #L328982.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328986.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L32898a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L32898e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328992.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328996.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32899a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32899e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3289a2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L3289a6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v4 @kind boolean;
  #L3289aa.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v4 @kind boolean;
  #L3289ae.  v0:= 15.0F;
  #L3289b2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v0;
  #L3289b6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v4 @kind boolean;
  #L3289ba.  v0:= 0L;
  #L3289be.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L3289c2.  v0:= 0L;
  #L3289c6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L3289ca.  v0:= new `android.graphics.RectF`;
  #L3289ce.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L3289d4.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v0 @kind object;
  #L3289d8.  v0:= new `android.graphics.Matrix`;
  #L3289dc.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3289e2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3289e6.  v0:= new `android.graphics.Matrix`;
  #L3289ea.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3289f0.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L3289f4.  v0:= new `android.graphics.Matrix`;
  #L3289f8.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3289fe.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328a02.  v0:= new `android.graphics.Matrix`;
  #L328a06.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328a0c.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328a10.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328a14.  v0:= new `float`[v5];
  #L328a18.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v0 @kind object;
  #L328a1c.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328a22.  v0:= temp @kind object;
  #L328a24.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328a28.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328a2e.  v0:= temp @kind object;
  #L328a30.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328a34.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328a3a.  v0:= temp @kind object;
  #L328a3c.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328a40.  v0:= new `float`[v5];
  #L328a44.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v0 @kind object;
  #L328a48.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.BarLineChartBase` v7 @kind this, `android.content.Context` v8 @kind object @name `context`, `android.util.AttributeSet` v9 @kind object @name `attrs`, `int` v10 @name `defStyle`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L328a5c.  v6:= 0I;
  #L328a5e.  v5:= 2I;
  #L328a60.  v1:= 1I;
  #L328a62.  v4:= 0I;
  #L328a64.  v2:= 0L;
  #L328a68.  call `<init>`(v7, v8, v9, v10) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L328a6e.  v0:= 100I;
  #L328a72.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v0;
  #L328a76.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328a7a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L328a7e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` := v6 @kind object;
  #L328a82.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328a86.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328a8a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328a8e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328a92.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328a96.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L328a9a.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v4 @kind boolean;
  #L328a9e.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v4 @kind boolean;
  #L328aa2.  v0:= 15.0F;
  #L328aa6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v0;
  #L328aaa.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v4 @kind boolean;
  #L328aae.  v0:= 0L;
  #L328ab2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L328ab6.  v0:= 0L;
  #L328aba.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L328abe.  v0:= new `android.graphics.RectF`;
  #L328ac2.  call `<init>`(v0) @signature `Landroid/graphics/RectF;.<init>:()V` @kind direct;
  #L328ac8.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` := v0 @kind object;
  #L328acc.  v0:= new `android.graphics.Matrix`;
  #L328ad0.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328ad6.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328ada.  v0:= new `android.graphics.Matrix`;
  #L328ade.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328ae4.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328ae8.  v0:= new `android.graphics.Matrix`;
  #L328aec.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328af2.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328af6.  v0:= new `android.graphics.Matrix`;
  #L328afa.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L328b00.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` := v0 @kind object;
  #L328b04.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v4 @kind boolean;
  #L328b08.  v0:= new `float`[v5];
  #L328b0c.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] := v0 @kind object;
  #L328b10.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328b16.  v0:= temp @kind object;
  #L328b18.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328b1c.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328b22.  v0:= temp @kind object;
  #L328b24.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328b28.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L328b2e.  v0:= temp @kind object;
  #L328b30.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` := v0 @kind object;
  #L328b34.  v0:= new `float`[v5];
  #L328b38.  v7.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] := v0 @kind object;
  #L328b3c.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328b50.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` @kind boolean;
  #L328b54.  if v0 == 0 then goto L328b66;
  #L328b58.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328b5c.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328b60.  call `calcMinMax`(v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.calcMinMax:()V` @kind virtual;
  #L328b66.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L328b6a.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328b6e.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328b72.  call temp:= `getXMin`(v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getXMin:()F` @kind virtual;
  #L328b78.  v2:= temp;
  #L328b7a.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328b7e.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328b82.  call temp:= `getXMax`(v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getXMax:()F` @kind virtual;
  #L328b88.  v0:= temp;
  #L328b8a.  call `calculate`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.calculate:(FF)V` @kind virtual;
  #L328b90.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L328b94.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328b98.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328b9c.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L328ba0.  call temp:= `getYMin`(v0, v2) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L328ba6.  v2:= temp;
  #L328ba8.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328bac.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328bb0.  v3:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L328bb4.  call temp:= `getYMax`(v0, v3) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L328bba.  v0:= temp;
  #L328bbc.  call `calculate`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L328bc2.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L328bc6.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328bca.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328bce.  v2:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L328bd2.  call temp:= `getYMin`(v0, v2) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getYMin:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L328bd8.  v2:= temp;
  #L328bda.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L328bde.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L328be2.  v3:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L328be6.  call temp:= `getYMax`(v0, v3) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getYMax:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L328bec.  v0:= temp;
  #L328bee.  call `calculate`(v1, v2, v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @kind virtual;
  #L328bf4.  return @kind void;
}
procedure `void` `calculateLegendOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `android.graphics.RectF` v5 @kind object @name `offsets`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateLegendOffsets:(Landroid/graphics/RectF;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L328c08.  v0:= 0I;
  #L328c0a.  v5.`android.graphics.RectF.left` @type ^`float` := v0;
  #L328c0e.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L328c12.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L328c16.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L328c1a.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c1e.  if v0 == 0 then goto L328c64;
  #L328c22.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c26.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.isEnabled:()Z` @kind virtual;
  #L328c2c.  v0:= temp;
  #L328c2e.  if v0 == 0 then goto L328c64;
  #L328c32.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c36.  call temp:= `isDrawInsideEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/Legend;.isDrawInsideEnabled:()Z` @kind virtual;
  #L328c3c.  v0:= temp;
  #L328c3e.  if v0 != 0 then goto L328c64;
  #L328c42.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendOrientation` @type ^`int`[] @kind object;
  #L328c46.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c4a.  call temp:= `getOrientation`(v1) @signature `Lcom/github/mikephil/charting/components/Legend;.getOrientation:()Lcom/github/mikephil/charting/components/Legend$LegendOrientation;` @kind virtual;
  #L328c50.  v1:= temp @kind object;
  #L328c52.  call temp:= `ordinal`(v1) @signature `Lcom/github/mikephil/charting/components/Legend$LegendOrientation;.ordinal:()I` @kind virtual;
  #L328c58.  v1:= temp;
  #L328c5a.  v0:= v0[v1];
  #L328c5e.  goto L328f74;
  #L328c64.  return @kind void;
  #L328c66.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendHorizontalAlignment` @type ^`int`[] @kind object;
  #L328c6a.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c6e.  call temp:= `getHorizontalAlignment`(v1) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L328c74.  v1:= temp @kind object;
  #L328c76.  call temp:= `ordinal`(v1) @signature `Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;.ordinal:()I` @kind virtual;
  #L328c7c.  v1:= temp;
  #L328c7e.  v0:= v0[v1];
  #L328c82.  goto L328f84;
  #L328c88.  goto L328c64;
  #L328c8a.  v0:= v5.`android.graphics.RectF.left` @type ^`float`;
  #L328c8e.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328c92.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L328c96.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328c9a.  call temp:= `getChartWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L328ca0.  v2:= temp;
  #L328ca2.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328ca6.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328cac.  v3:= temp;
  #L328cae.  v2:= v2 * v3 @kind float;
  #L328cb0.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328cb6.  v1:= temp;
  #L328cb8.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328cbc.  call temp:= `getXOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getXOffset:()F` @kind virtual;
  #L328cc2.  v2:= temp;
  #L328cc4.  v1:= v1 + v2 @kind float;
  #L328cc6.  v0:= v0 + v1 @kind float;
  #L328cc8.  v5.`android.graphics.RectF.left` @type ^`float` := v0;
  #L328ccc.  goto L328c64;
  #L328cce.  v0:= v5.`android.graphics.RectF.right` @type ^`float`;
  #L328cd2.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328cd6.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L328cda.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328cde.  call temp:= `getChartWidth`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L328ce4.  v2:= temp;
  #L328ce6.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328cea.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328cf0.  v3:= temp;
  #L328cf2.  v2:= v2 * v3 @kind float;
  #L328cf4.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328cfa.  v1:= temp;
  #L328cfc.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328d00.  call temp:= `getXOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getXOffset:()F` @kind virtual;
  #L328d06.  v2:= temp;
  #L328d08.  v1:= v1 + v2 @kind float;
  #L328d0a.  v0:= v0 + v1 @kind float;
  #L328d0c.  v5.`android.graphics.RectF.right` @type ^`float` := v0;
  #L328d10.  goto L328c64;
  #L328d12.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendVerticalAlignment` @type ^`int`[] @kind object;
  #L328d16.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328d1a.  call temp:= `getVerticalAlignment`(v1) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L328d20.  v1:= temp @kind object;
  #L328d22.  call temp:= `ordinal`(v1) @signature `Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;.ordinal:()I` @kind virtual;
  #L328d28.  v1:= temp;
  #L328d2a.  v0:= v0[v1];
  #L328d2e.  goto L328f98;
  #L328d34.  goto L328c64;
  #L328d36.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L328d3a.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328d3e.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L328d42.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328d46.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L328d4c.  v2:= temp;
  #L328d4e.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328d52.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328d58.  v3:= temp;
  #L328d5a.  v2:= v2 * v3 @kind float;
  #L328d5c.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328d62.  v1:= temp;
  #L328d64.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328d68.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getYOffset:()F` @kind virtual;
  #L328d6e.  v2:= temp;
  #L328d70.  v1:= v1 + v2 @kind float;
  #L328d72.  v0:= v0 + v1 @kind float;
  #L328d74.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L328d78.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328d7e.  v0:= temp @kind object;
  #L328d80.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L328d86.  v0:= temp;
  #L328d88.  if v0 == 0 then goto L328c64;
  #L328d8c.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328d92.  v0:= temp @kind object;
  #L328d94.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L328d9a.  v0:= temp;
  #L328d9c.  if v0 == 0 then goto L328c64;
  #L328da0.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L328da4.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328daa.  v1:= temp @kind object;
  #L328dac.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L328db0.  v1:= (`float`) v1 @kind i2f;
  #L328db2.  v0:= v0 + v1 @kind float;
  #L328db4.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L328db8.  goto L328c64;
  #L328dbc.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L328dc0.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328dc4.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L328dc8.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328dcc.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L328dd2.  v2:= temp;
  #L328dd4.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328dd8.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328dde.  v3:= temp;
  #L328de0.  v2:= v2 * v3 @kind float;
  #L328de2.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328de8.  v1:= temp;
  #L328dea.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328dee.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getYOffset:()F` @kind virtual;
  #L328df4.  v2:= temp;
  #L328df6.  v1:= v1 + v2 @kind float;
  #L328df8.  v0:= v0 + v1 @kind float;
  #L328dfa.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L328dfe.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328e04.  v0:= temp @kind object;
  #L328e06.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L328e0c.  v0:= temp;
  #L328e0e.  if v0 == 0 then goto L328c64;
  #L328e12.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328e18.  v0:= temp @kind object;
  #L328e1a.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L328e20.  v0:= temp;
  #L328e22.  if v0 == 0 then goto L328c64;
  #L328e26.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L328e2a.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328e30.  v1:= temp @kind object;
  #L328e32.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L328e36.  v1:= (`float`) v1 @kind i2f;
  #L328e38.  v0:= v0 + v1 @kind float;
  #L328e3a.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L328e3e.  goto L328c64;
  #L328e42.  v0:= `@@com.github.mikephil.charting.charts.BarLineChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendVerticalAlignment` @type ^`int`[] @kind object;
  #L328e46.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328e4a.  call temp:= `getVerticalAlignment`(v1) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L328e50.  v1:= temp @kind object;
  #L328e52.  call temp:= `ordinal`(v1) @signature `Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;.ordinal:()I` @kind virtual;
  #L328e58.  v1:= temp;
  #L328e5a.  v0:= v0[v1];
  #L328e5e.  goto L328fa8;
  #L328e64.  goto L328c64;
  #L328e68.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L328e6c.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328e70.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L328e74.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328e78.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L328e7e.  v2:= temp;
  #L328e80.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328e84.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328e8a.  v3:= temp;
  #L328e8c.  v2:= v2 * v3 @kind float;
  #L328e8e.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328e94.  v1:= temp;
  #L328e96.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328e9a.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getYOffset:()F` @kind virtual;
  #L328ea0.  v2:= temp;
  #L328ea2.  v1:= v1 + v2 @kind float;
  #L328ea4.  v0:= v0 + v1 @kind float;
  #L328ea6.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L328eaa.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328eb0.  v0:= temp @kind object;
  #L328eb2.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L328eb8.  v0:= temp;
  #L328eba.  if v0 == 0 then goto L328c64;
  #L328ebe.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328ec4.  v0:= temp @kind object;
  #L328ec6.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L328ecc.  v0:= temp;
  #L328ece.  if v0 == 0 then goto L328c64;
  #L328ed2.  v0:= v5.`android.graphics.RectF.top` @type ^`float`;
  #L328ed6.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328edc.  v1:= temp @kind object;
  #L328ede.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L328ee2.  v1:= (`float`) v1 @kind i2f;
  #L328ee4.  v0:= v0 + v1 @kind float;
  #L328ee6.  v5.`android.graphics.RectF.top` @type ^`float` := v0;
  #L328eea.  goto L328c64;
  #L328eee.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L328ef2.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328ef6.  v1:= v1.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L328efa.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L328efe.  call temp:= `getChartHeight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L328f04.  v2:= temp;
  #L328f06.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328f0a.  call temp:= `getMaxSizePercent`(v3) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L328f10.  v3:= temp;
  #L328f12.  v2:= v2 * v3 @kind float;
  #L328f14.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L328f1a.  v1:= temp;
  #L328f1c.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L328f20.  call temp:= `getYOffset`(v2) @signature `Lcom/github/mikephil/charting/components/Legend;.getYOffset:()F` @kind virtual;
  #L328f26.  v2:= temp;
  #L328f28.  v1:= v1 + v2 @kind float;
  #L328f2a.  v0:= v0 + v1 @kind float;
  #L328f2c.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L328f30.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328f36.  v0:= temp @kind object;
  #L328f38.  call temp:= `isEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L328f3e.  v0:= temp;
  #L328f40.  if v0 == 0 then goto L328c64;
  #L328f44.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328f4a.  v0:= temp @kind object;
  #L328f4c.  call temp:= `isDrawLabelsEnabled`(v0) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L328f52.  v0:= temp;
  #L328f54.  if v0 == 0 then goto L328c64;
  #L328f58.  v0:= v5.`android.graphics.RectF.bottom` @type ^`float`;
  #L328f5c.  call temp:= `getXAxis`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L328f62.  v1:= temp @kind object;
  #L328f64.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L328f68.  v1:= (`float`) v1 @kind i2f;
  #L328f6a.  v0:= v0 + v1 @kind float;
  #L328f6c.  v5.`android.graphics.RectF.bottom` @type ^`float` := v0;
  #L328f70.  goto L328c64;
  #L328f74.  switch v0
                  | 1 => goto L328c66
                  | 2 => goto L328e42
                  | else => goto L328c64;
  #L328f84.  switch v0
                  | 1 => goto L328c8a
                  | 2 => goto L328cce
                  | 3 => goto L328d12
                  | else => goto L328c88;
  #L328f98.  switch v0
                  | 1 => goto L328d36
                  | 2 => goto L328dbc
                  | else => goto L328d34;
  #L328fa8.  switch v0
                  | 1 => goto L328e68
                  | 2 => goto L328eee
                  | else => goto L328e64;
}
procedure `void` `calculateOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v11 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L328fc8.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` @kind boolean;
  #L328fcc.  if v6 != 0 then goto L3291c4;
  #L328fd0.  v2:= 0I;
  #L328fd2.  v3:= 0I;
  #L328fd4.  v4:= 0I;
  #L328fd6.  v1:= 0I;
  #L328fd8.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L328fdc.  call `calculateLegendOffsets`(v11, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateLegendOffsets:(Landroid/graphics/RectF;)V` @kind virtual;
  #L328fe2.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L328fe6.  v6:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L328fea.  v2:= v2 + v6 @kind float;
  #L328fec.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L328ff0.  v6:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L328ff4.  v4:= v4 + v6 @kind float;
  #L328ff6.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L328ffa.  v6:= v6.`android.graphics.RectF.right` @type ^`float`;
  #L328ffe.  v3:= v3 + v6 @kind float;
  #L329000.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mOffsetsBuffer` @type ^`android.graphics.RectF` @kind object;
  #L329004.  v6:= v6.`android.graphics.RectF.bottom` @type ^`float`;
  #L329008.  v1:= v1 + v6 @kind float;
  #L32900a.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32900e.  call temp:= `needsOffset`(v6) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @kind virtual;
  #L329014.  v6:= temp;
  #L329016.  if v6 == 0 then goto L329034;
  #L32901a.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32901e.  v7:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329022.  call temp:= `getPaintAxisLabels`(v7) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.getPaintAxisLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L329028.  v7:= temp @kind object;
  #L32902a.  call temp:= `getRequiredWidthSpace`(v6, v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @kind virtual;
  #L329030.  v6:= temp;
  #L329032.  v2:= v2 + v6 @kind float;
  #L329034.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329038.  call temp:= `needsOffset`(v6) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @kind virtual;
  #L32903e.  v6:= temp;
  #L329040.  if v6 == 0 then goto L32905e;
  #L329044.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329048.  v7:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L32904c.  call temp:= `getPaintAxisLabels`(v7) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.getPaintAxisLabels:()Landroid/graphics/Paint;` @kind virtual;
  #L329052.  v7:= temp @kind object;
  #L329054.  call temp:= `getRequiredWidthSpace`(v6, v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @kind virtual;
  #L32905a.  v6:= temp;
  #L32905c.  v3:= v3 + v6 @kind float;
  #L32905e.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329062.  call temp:= `isEnabled`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L329068.  v6:= temp;
  #L32906a.  if v6 == 0 then goto L3290ae;
  #L32906e.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329072.  call temp:= `isDrawLabelsEnabled`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L329078.  v6:= temp;
  #L32907a.  if v6 == 0 then goto L3290ae;
  #L32907e.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329082.  v6:= v6.`com.github.mikephil.charting.components.XAxis.mLabelRotatedHeight` @type ^`int`;
  #L329086.  v6:= (`float`) v6 @kind i2f;
  #L329088.  v7:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32908c.  call temp:= `getYOffset`(v7) @signature `Lcom/github/mikephil/charting/components/XAxis;.getYOffset:()F` @kind virtual;
  #L329092.  v7:= temp;
  #L329094.  v5:= v6 + v7 @kind float;
  #L329098.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32909c.  call temp:= `getPosition`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3290a2.  v6:= temp @kind object;
  #L3290a4.  v7:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTTOM` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3290a8.  if v6 != v7 then goto L3291d2;
  #L3290ac.  v1:= v1 + v5 @kind float;
  #L3290ae.  call temp:= `getExtraTopOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getExtraTopOffset:()F` @kind virtual;
  #L3290b4.  v6:= temp;
  #L3290b6.  v4:= v4 + v6 @kind float;
  #L3290b8.  call temp:= `getExtraRightOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getExtraRightOffset:()F` @kind virtual;
  #L3290be.  v6:= temp;
  #L3290c0.  v3:= v3 + v6 @kind float;
  #L3290c2.  call temp:= `getExtraBottomOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getExtraBottomOffset:()F` @kind virtual;
  #L3290c8.  v6:= temp;
  #L3290ca.  v1:= v1 + v6 @kind float;
  #L3290cc.  call temp:= `getExtraLeftOffset`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getExtraLeftOffset:()F` @kind virtual;
  #L3290d2.  v6:= temp;
  #L3290d4.  v2:= v2 + v6 @kind float;
  #L3290d6.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float`;
  #L3290da.  call temp:= `convertDpToPixel`(v6) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L3290e0.  v0:= temp;
  #L3290e2.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3290e6.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3290ec.  v7:= temp;
  #L3290ee.  call temp:= `max`(v0, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3290f4.  v8:= temp;
  #L3290f6.  call temp:= `max`(v0, v3) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3290fc.  v9:= temp;
  #L3290fe.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L329104.  v10:= temp;
  #L329106.  call `restrainViewPort`(v6, v7, v8, v9, v10) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @kind virtual;
  #L32910c.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L329110.  if v6 == 0 then goto L3291c4;
  #L329114.  v6:= "MPAndroidChart" @kind object;
  #L329118.  v7:= new `java.lang.StringBuilder`;
  #L32911c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L329122.  v8:= "offsetLeft: " @kind object;
  #L329126.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32912c.  v7:= temp @kind object;
  #L32912e.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L329134.  v7:= temp @kind object;
  #L329136.  v8:= ", offsetTop: " @kind object;
  #L32913a.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329140.  v7:= temp @kind object;
  #L329142.  call temp:= `append`(v7, v4) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L329148.  v7:= temp @kind object;
  #L32914a.  v8:= ", offsetRight: " @kind object;
  #L32914e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329154.  v7:= temp @kind object;
  #L329156.  call temp:= `append`(v7, v3) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32915c.  v7:= temp @kind object;
  #L32915e.  v8:= ", offsetBottom: " @kind object;
  #L329162.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329168.  v7:= temp @kind object;
  #L32916a.  call temp:= `append`(v7, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L329170.  v7:= temp @kind object;
  #L329172.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L329178.  v7:= temp @kind object;
  #L32917a.  call temp:= `i`(v6, v7) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329180.  v6:= "MPAndroidChart" @kind object;
  #L329184.  v7:= new `java.lang.StringBuilder`;
  #L329188.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32918e.  v8:= "Content: " @kind object;
  #L329192.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L329198.  v7:= temp @kind object;
  #L32919a.  v8:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32919e.  call temp:= `getContentRect`(v8) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L3291a4.  v8:= temp @kind object;
  #L3291a6.  call temp:= `toString`(v8) @signature `Landroid/graphics/RectF;.toString:()Ljava/lang/String;` @kind virtual;
  #L3291ac.  v8:= temp @kind object;
  #L3291ae.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3291b4.  v7:= temp @kind object;
  #L3291b6.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3291bc.  v7:= temp @kind object;
  #L3291be.  call temp:= `i`(v6, v7) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3291c4.  call `prepareOffsetMatrix`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareOffsetMatrix:()V` @kind virtual;
  #L3291ca.  call `prepareValuePxMatrix`(v11) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareValuePxMatrix:()V` @kind virtual;
  #L3291d0.  return @kind void;
  #L3291d2.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3291d6.  call temp:= `getPosition`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3291dc.  v6:= temp @kind object;
  #L3291de.  v7:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.TOP` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3291e2.  if v6 != v7 then goto L3291ec;
  #L3291e6.  v4:= v4 + v5 @kind float;
  #L3291e8.  goto L3290ae;
  #L3291ec.  v6:= v11.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3291f0.  call temp:= `getPosition`(v6) @signature `Lcom/github/mikephil/charting/components/XAxis;.getPosition:()Lcom/github/mikephil/charting/components/XAxis$XAxisPosition;` @kind virtual;
  #L3291f6.  v6:= temp @kind object;
  #L3291f8.  v7:= `@@com.github.mikephil.charting.components.XAxis$XAxisPosition.BOTH_SIDED` @type ^`com.github.mikephil.charting.components.XAxis$XAxisPosition` @kind object;
  #L3291fc.  if v6 != v7 then goto L3290ae;
  #L329200.  v1:= v1 + v5 @kind float;
  #L329202.  v4:= v4 + v5 @kind float;
  #L329204.  goto L3290ae;
}
procedure `void` `centerViewTo`(`com.github.mikephil.charting.charts.BarLineChartBase` v7 @kind this, `float` v8 @name `xValue`, `float` v9 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v10 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewTo:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L329218.  v5:= 2.0F;
  #L32921c.  call temp:= `getDeltaY`(v7, v10) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L329222.  v3:= temp;
  #L329224.  v4:= v7.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329228.  call temp:= `getScaleY`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L32922e.  v4:= temp;
  #L329230.  v2:= v3 / v4 @kind float;
  #L329234.  call temp:= `getXAxis`(v7) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L32923a.  v3:= temp @kind object;
  #L32923c.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L329240.  v4:= v7.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329244.  call temp:= `getScaleX`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L32924a.  v4:= temp;
  #L32924c.  v1:= v3 / v4 @kind float;
  #L329250.  v3:= v7.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329254.  v4:= v1 / v5 @kind float;
  #L329258.  v4:= v8 - v4 @kind float;
  #L32925c.  v5:= v2 / v5 @kind float;
  #L329260.  v5:= v5 + v9 @kind float;
  #L329262.  call temp:= `getTransformer`(v7, v10) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329268.  v6:= temp @kind object;
  #L32926a.  call temp:= `getInstance`(v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L329270.  v0:= temp @kind object;
  #L329272.  call `addViewportJob`(v7, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L329278.  return @kind void;
}
procedure `void` `centerViewToAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v16 @kind this, `float` v17 @name `xValue`, `float` v18 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v19 @kind object @name `axis`, `long` v20 @name `duration`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewToAnimated:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L32928c.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L329290.  v4:= 11I;
  #L329294.  if v3 < v4 then goto L32936a;
  #L329298.  v0:= v16 @kind object;
  #L32929c.  v3:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3292a0.  call temp:= `contentLeft`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L3292a6.  v3:= temp;
  #L3292a8.  v0:= v16 @kind object;
  #L3292ac.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3292b0.  call temp:= `contentTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L3292b6.  v4:= temp;
  #L3292b8.  v0:= v16 @kind object;
  #L3292bc.  v1:= v19 @kind object;
  #L3292c0.  call temp:= `getValuesByTouchPoint`(v0, v3, v4, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3292c6.  v2:= temp @kind object;
  #L3292c8.  v0:= v16 @kind object;
  #L3292cc.  v1:= v19 @kind object;
  #L3292d0.  call temp:= `getDeltaY`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L3292d6.  v3:= temp;
  #L3292d8.  v0:= v16 @kind object;
  #L3292dc.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3292e0.  call temp:= `getScaleY`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L3292e6.  v4:= temp;
  #L3292e8.  v14:= v3 / v4 @kind float;
  #L3292ec.  call temp:= `getXAxis`(v16) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L3292f2.  v3:= temp @kind object;
  #L3292f4.  v3:= v3.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L3292f8.  v0:= v16 @kind object;
  #L3292fc.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329300.  call temp:= `getScaleX`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L329306.  v4:= temp;
  #L329308.  v13:= v3 / v4 @kind float;
  #L32930c.  v0:= v16 @kind object;
  #L329310.  v3:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329314.  v4:= 2.0F;
  #L329318.  v4:= v13 / v4 @kind float;
  #L32931c.  v4:= v17 - v4 @kind float;
  #L329320.  v5:= 2.0F;
  #L329324.  v5:= v14 / v5 @kind float;
  #L329328.  v5:= v5 + v18 @kind float;
  #L32932c.  v0:= v16 @kind object;
  #L329330.  v1:= v19 @kind object;
  #L329334.  call temp:= `getTransformer`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32933a.  v6:= temp @kind object;
  #L32933c.  v8:= v2.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L329340.  v8:= (`float`) v8 @kind d2f;
  #L329342.  v10:= v2.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L329346.  v9:= (`float`) v10 @kind d2f;
  #L329348.  v7:= v16 @kind object;
  #L32934c.  v10:= v20 @kind wide;
  #L329350.  call temp:= `getInstance`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @kind static;
  #L329356.  v12:= temp @kind object;
  #L329358.  v0:= v16 @kind object;
  #L32935c.  call `addViewportJob`(v0, v12) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L329362.  call `recycleInstance`(v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L329368.  return @kind void;
  #L32936a.  v3:= "MPAndroidChart" @kind object;
  #L32936e.  v4:= "Unable to execute centerViewToAnimated(...) on API level < 11" @kind object;
  #L329372.  call temp:= `e`(v3, v4) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329378.  goto L329368;
}
procedure `void` `centerViewToY`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this, `float` v7 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v8 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.centerViewToY:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32938c.  call temp:= `getDeltaY`(v6, v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L329392.  v2:= temp;
  #L329394.  v3:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329398.  call temp:= `getScaleY`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L32939e.  v3:= temp;
  #L3293a0.  v1:= v2 / v3 @kind float;
  #L3293a4.  v2:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3293a8.  v3:= 0I;
  #L3293aa.  v4:= 2.0F;
  #L3293ae.  v4:= v1 / v4 @kind float;
  #L3293b2.  v4:= v4 + v7 @kind float;
  #L3293b4.  call temp:= `getTransformer`(v6, v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3293ba.  v5:= temp @kind object;
  #L3293bc.  call temp:= `getInstance`(v2, v3, v4, v5, v6) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L3293c2.  v0:= temp @kind object;
  #L3293c4.  call `addViewportJob`(v6, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L3293ca.  return @kind void;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3293dc.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L3293e0.  v0:= instanceof @variable v0 @type ^`com.github.mikephil.charting.listener.BarLineChartTouchListener` @kind boolean;
  #L3293e4.  if v0 == 0 then goto L3293f6;
  #L3293e8.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L3293ec.  v0:= (`com.github.mikephil.charting.listener.BarLineChartTouchListener`) v0 @kind object;
  #L3293f0.  call `computeScroll`(v0) @signature `Lcom/github/mikephil/charting/listener/BarLineChartTouchListener;.computeScroll:()V` @kind virtual;
  #L3293f6.  return @kind void;
}
procedure `void` `drawGridBackground`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `android.graphics.Canvas` v3 @kind object @name `c`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawGridBackground:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L329408.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` @kind boolean;
  #L32940c.  if v0 == 0 then goto L329426;
  #L329410.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329414.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L32941a.  v0:= temp @kind object;
  #L32941c.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L329420.  call `drawRect`(v3, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L329426.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` @kind boolean;
  #L32942a.  if v0 == 0 then goto L329444;
  #L32942e.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329432.  call temp:= `getContentRect`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L329438.  v0:= temp @kind object;
  #L32943a.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L32943e.  call `drawRect`(v3, v0, v1) @signature `Landroid/graphics/Canvas;.drawRect:(Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L329444.  return @kind void;
}
procedure `void` `fitScreen`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.fitScreen:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L329458.  v0:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mFitScreenMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32945c.  v1:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329460.  call `fitScreen`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.fitScreen:(Landroid/graphics/Matrix;)V` @kind virtual;
  #L329466.  v1:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32946a.  v2:= 0I;
  #L32946c.  call temp:= `refresh`(v1, v0, v3, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L329472.  call `calculateOffsets`(v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L329478.  call `postInvalidate`(v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.postInvalidate:()V` @kind virtual;
  #L32947e.  return @kind void;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329490.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329494.  if v2 != v0 then goto L32949e;
  #L329498.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32949c.  return v0 @kind object;
  #L32949e.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3294a2.  goto L32949c;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxisLeft`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisLeft:()Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3294b4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3294b8.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.components.YAxis` `getAxisRight`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxisRight:()Lcom/github/mikephil/charting/components/YAxis;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3294cc.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3294d0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.BarLineScatterCandleBubbleData` `getData`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getData:()Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3294e4.  call temp:= `getData`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.getData:()Lcom/github/mikephil/charting/data/ChartData;` @kind super;
  #L3294ea.  v0:= temp @kind object;
  #L3294ec.  v0:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v0 @kind object;
  #L3294f0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet` `getDataSetByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 @name `x`, `float` v5 @name `y`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDataSetByTouchPoint:(FF)Lcom/github/mikephil/charting/interfaces/datasets/IBarLineScatterCandleBubbleDataSet;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L329504.  call temp:= `getHighlightByTouchPoint`(v3, v4, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L32950a.  v0:= temp @kind object;
  #L32950c.  if v0 == 0 then goto L32952e;
  #L329510.  v1:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L329514.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L329518.  call temp:= `getDataSetIndex`(v0) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.getDataSetIndex:()I` @kind virtual;
  #L32951e.  v2:= temp;
  #L329520.  call temp:= `getDataSetByIndex`(v1, v2) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getDataSetByIndex:(I)Lcom/github/mikephil/charting/interfaces/datasets/IDataSet;` @kind virtual;
  #L329526.  v1:= temp @kind object;
  #L329528.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IBarLineScatterCandleBubbleDataSet`) v1 @kind object;
  #L32952c.  return v1 @kind object;
  #L32952e.  v1:= 0I;
  #L329530.  goto L32952c;
}
procedure `float` `getDeltaY`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329544.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329548.  if v2 != v0 then goto L329556;
  #L32954c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329550.  v0:= v0.`com.github.mikephil.charting.components.YAxis.mAxisRange` @type ^`float`;
  #L329554.  return v0;
  #L329556.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32955a.  v0:= v0.`com.github.mikephil.charting.components.YAxis.mAxisRange` @type ^`float`;
  #L32955e.  goto L329554;
}
procedure `com.github.mikephil.charting.listener.OnDrawListener` `getDrawListener`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDrawListener:()Lcom/github/mikephil/charting/listener/OnDrawListener;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329570.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @type ^`com.github.mikephil.charting.listener.OnDrawListener` @kind object;
  #L329574.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.data.Entry` `getEntryByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `x`, `float` v4 @name `y`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getEntryByTouchPoint:(FF)Lcom/github/mikephil/charting/data/Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329588.  call temp:= `getHighlightByTouchPoint`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L32958e.  v0:= temp @kind object;
  #L329590.  if v0 == 0 then goto L3295a6;
  #L329594.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L329598.  v1:= (`com.github.mikephil.charting.data.BarLineScatterCandleBubbleData`) v1 @kind object;
  #L32959c.  call temp:= `getEntryForHighlight`(v1, v0) @signature `Lcom/github/mikephil/charting/data/BarLineScatterCandleBubbleData;.getEntryForHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;)Lcom/github/mikephil/charting/data/Entry;` @kind virtual;
  #L3295a2.  v1:= temp @kind object;
  #L3295a4.  return v1 @kind object;
  #L3295a6.  v1:= 0I;
  #L3295a8.  goto L3295a4;
}
procedure `float` `getHighestVisibleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3295bc.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L3295c0.  call temp:= `getTransformer`(v6, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3295c6.  v1:= temp @kind object;
  #L3295c8.  v2:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3295cc.  call temp:= `contentRight`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentRight:()F` @kind virtual;
  #L3295d2.  v2:= temp;
  #L3295d4.  v3:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3295d8.  call temp:= `contentBottom`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L3295de.  v3:= temp;
  #L3295e0.  v4:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3295e4.  call `getValuesByTouchPoint`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L3295ea.  v1:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3295ee.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisMaximum` @type ^`float`;
  #L3295f2.  v2:= (`double`) v1 @kind f2d;
  #L3295f4.  v1:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetHighestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3295f8.  v4:= v1.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L3295fc.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L329602.  v2:= temp @kind wide;
  #L329604.  v0:= (`float`) v2 @kind d2f;
  #L329606.  return v0;
}
procedure `float` `getLowestVisibleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L329618.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L32961c.  call temp:= `getTransformer`(v6, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329622.  v1:= temp @kind object;
  #L329624.  v2:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329628.  call temp:= `contentLeft`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L32962e.  v2:= temp;
  #L329630.  v3:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329634.  call temp:= `contentBottom`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentBottom:()F` @kind virtual;
  #L32963a.  v3:= temp;
  #L32963c.  v4:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L329640.  call `getValuesByTouchPoint`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L329646.  v1:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32964a.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L32964e.  v2:= (`double`) v1 @kind f2d;
  #L329650.  v1:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.posForGetLowestVisibleX` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L329654.  v4:= v1.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L329658.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(DD)D` @kind static;
  #L32965e.  v2:= temp @kind wide;
  #L329660.  v0:= (`float`) v2 @kind d2f;
  #L329662.  return v0;
}
procedure `int` `getMaxVisibleCount`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getMaxVisibleCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329674.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int`;
  #L329678.  return v0;
}
procedure `float` `getMinOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getMinOffset:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32968c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float`;
  #L329690.  return v0;
}
procedure `android.graphics.Paint` `getPaint`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 @name `which`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPaint:(I)Landroid/graphics/Paint;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3296a4.  call temp:= `getPaint`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.getPaint:(I)Landroid/graphics/Paint;` @kind super;
  #L3296aa.  v0:= temp @kind object;
  #L3296ac.  if v0 == 0 then goto L3296b2;
  #L3296b0.  return v0 @kind object;
  #L3296b2.  goto L3296c4;
  #L3296b8.  v0:= 0I;
  #L3296ba.  goto L3296b0;
  #L3296bc.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L3296c0.  goto L3296b0;
  #L3296c2.  
  #L3296c4.  switch v2
                  | 4 => goto L3296bc
                  | else => goto L3296b8;
}
procedure `com.github.mikephil.charting.utils.MPPointD` `getPixelsForValues`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 @name `x`, `float` v3 @name `y`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPixelsForValues:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3296e0.  call temp:= `getTransformer`(v1, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L3296e6.  v0:= temp @kind object;
  #L3296e8.  call temp:= `getPixelsForValues`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getPixelsForValues:(FF)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L3296ee.  v0:= temp @kind object;
  #L3296f0.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `com.github.mikephil.charting.data.Entry` v5 @kind object @name `e`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v6 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getPosition:(Lcom/github/mikephil/charting/data/Entry;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L329704.  v3:= 1I;
  #L329706.  v2:= 0I;
  #L329708.  if v5 != 0 then goto L329710;
  #L32970c.  v1:= 0I;
  #L32970e.  return v1 @kind object;
  #L329710.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mGetPositionBuffer` @type ^`float`[] @kind object;
  #L329714.  call temp:= `getX`(v5) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L32971a.  v1:= temp;
  #L32971c.  v0[v2]:= v1;
  #L329720.  call temp:= `getY`(v5) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L329726.  v1:= temp;
  #L329728.  v0[v3]:= v1;
  #L32972c.  call temp:= `getTransformer`(v4, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329732.  v1:= temp @kind object;
  #L329734.  call `pointValuesToPixel`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L32973a.  v1:= v0[v2];
  #L32973e.  v2:= v0[v3];
  #L329742.  call temp:= `getInstance`(v1, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L329748.  v1:= temp @kind object;
  #L32974a.  goto L32970e;
}
procedure `com.github.mikephil.charting.renderer.YAxisRenderer` `getRendererLeftYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererLeftYAxis:()Lcom/github/mikephil/charting/renderer/YAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32975c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329760.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.renderer.YAxisRenderer` `getRendererRightYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererRightYAxis:()Lcom/github/mikephil/charting/renderer/YAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329774.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329778.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.renderer.XAxisRenderer` `getRendererXAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getRendererXAxis:()Lcom/github/mikephil/charting/renderer/XAxisRenderer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32978c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329790.  return v0 @kind object;
}
procedure `float` `getScaleX`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getScaleX:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3297a4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3297a8.  if v0 != 0 then goto L3297b2;
  #L3297ac.  v0:= 1.0F;
  #L3297b0.  return v0;
  #L3297b2.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3297b6.  call temp:= `getScaleX`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L3297bc.  v0:= temp;
  #L3297be.  goto L3297b0;
}
procedure `float` `getScaleY`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getScaleY:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3297d0.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3297d4.  if v0 != 0 then goto L3297de;
  #L3297d8.  v0:= 1.0F;
  #L3297dc.  return v0;
  #L3297de.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3297e2.  call temp:= `getScaleY`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L3297e8.  v0:= temp;
  #L3297ea.  goto L3297dc;
}
procedure `com.github.mikephil.charting.utils.Transformer` `getTransformer`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object @name `which`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3297fc.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329800.  if v2 != v0 then goto L32980a;
  #L329804.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L329808.  return v0 @kind object;
  #L32980a.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L32980e.  goto L329808;
}
procedure `com.github.mikephil.charting.utils.MPPointD` `getValuesByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `float` v5 @name `x`, `float` v6 @name `y`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v7 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L329820.  v2:= 0L;
  #L329824.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.getInstance:(DD)Lcom/github/mikephil/charting/utils/MPPointD;` @kind static;
  #L32982a.  v0:= temp @kind object;
  #L32982c.  call `getValuesByTouchPoint`(v4, v5, v6, v7, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L329832.  return v0 @kind object;
}
procedure `void` `getValuesByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 @name `x`, `float` v3 @name `y`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object @name `axis`, `com.github.mikephil.charting.utils.MPPointD` v5 @kind object @name `outputPoint`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;Lcom/github/mikephil/charting/utils/MPPointD;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329844.  call temp:= `getTransformer`(v1, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32984a.  v0:= temp @kind object;
  #L32984c.  call `getValuesByTouchPoint`(v0, v2, v3, v5) @signature `Lcom/github/mikephil/charting/utils/Transformer;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L329852.  return @kind void;
}
procedure `float` `getVisibleXRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getVisibleXRange:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329864.  call temp:= `getHighestVisibleX`(v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @kind virtual;
  #L32986a.  v0:= temp;
  #L32986c.  call temp:= `getLowestVisibleX`(v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @kind virtual;
  #L329872.  v1:= temp;
  #L329874.  v0:= v0 - v1 @kind float;
  #L329876.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32987c.  v0:= temp;
  #L32987e.  return v0;
}
procedure `float` `getYChartMax`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getYChartMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329890.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329894.  v0:= v0.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L329898.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32989c.  v1:= v1.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L3298a0.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3298a6.  v0:= temp;
  #L3298a8.  return v0;
}
procedure `float` `getYChartMin`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getYChartMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3298bc.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3298c0.  v0:= v0.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L3298c4.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3298c8.  v1:= v1.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L3298cc.  call temp:= `min`(v0, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3298d2.  v0:= temp;
  #L3298d4.  return v0;
}
procedure `float` `getYValueByTouchPoint`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `float` v5 @name `x`, `float` v6 @name `y`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v7 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getYValueByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3298e8.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3298ec.  call `getValuesByTouchPoint`(v4, v5, v6, v7, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind virtual;
  #L3298f2.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.pointForGetYValueByTouchPoint` @type ^`com.github.mikephil.charting.utils.MPPointD` @kind object;
  #L3298f6.  v2:= v1.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L3298fa.  v0:= (`float`) v2 @kind d2f;
  #L3298fc.  return v0;
}
procedure `boolean` `hasNoDragOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.hasNoDragOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329910.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329914.  call temp:= `hasNoDragOffset`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.hasNoDragOffset:()Z` @kind virtual;
  #L32991a.  v0:= temp;
  #L32991c.  return v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L329930.  v4:= 240I;
  #L329934.  call `init`(v5) @signature `Lcom/github/mikephil/charting/charts/Chart;.init:()V` @kind super;
  #L32993a.  v0:= new `com.github.mikephil.charting.components.YAxis`;
  #L32993e.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329942.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L329948.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` := v0 @kind object;
  #L32994c.  v0:= new `com.github.mikephil.charting.components.YAxis`;
  #L329950.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.RIGHT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329954.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @kind direct;
  #L32995a.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` := v0 @kind object;
  #L32995e.  v0:= new `com.github.mikephil.charting.utils.Transformer`;
  #L329962.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329966.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L32996c.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` := v0 @kind object;
  #L329970.  v0:= new `com.github.mikephil.charting.utils.Transformer`;
  #L329974.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329978.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;)V` @kind direct;
  #L32997e.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` := v0 @kind object;
  #L329982.  v0:= new `com.github.mikephil.charting.renderer.YAxisRenderer`;
  #L329986.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32998a.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32998e.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L329992.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/YAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L329998.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v0 @kind object;
  #L32999c.  v0:= new `com.github.mikephil.charting.renderer.YAxisRenderer`;
  #L3299a0.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3299a4.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L3299a8.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3299ac.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/YAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L3299b2.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v0 @kind object;
  #L3299b6.  v0:= new `com.github.mikephil.charting.renderer.XAxisRenderer`;
  #L3299ba.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3299be.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L3299c2.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L3299c6.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Lcom/github/mikephil/charting/components/XAxis;Lcom/github/mikephil/charting/utils/Transformer;)V` @kind direct;
  #L3299cc.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` := v0 @kind object;
  #L3299d0.  v0:= new `com.github.mikephil.charting.highlight.ChartHighlighter`;
  #L3299d4.  call `<init>`(v0, v5) @signature `Lcom/github/mikephil/charting/highlight/ChartHighlighter;.<init>:(Lcom/github/mikephil/charting/interfaces/dataprovider/BarLineScatterCandleBubbleDataProvider;)V` @kind direct;
  #L3299da.  call `setHighlighter`(v5, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setHighlighter:(Lcom/github/mikephil/charting/highlight/ChartHighlighter;)V` @kind virtual;
  #L3299e0.  v0:= new `com.github.mikephil.charting.listener.BarLineChartTouchListener`;
  #L3299e4.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L3299e8.  call temp:= `getMatrixTouch`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMatrixTouch:()Landroid/graphics/Matrix;` @kind virtual;
  #L3299ee.  v1:= temp @kind object;
  #L3299f0.  v2:= 3.0F;
  #L3299f4.  call `<init>`(v0, v5, v1, v2) @signature `Lcom/github/mikephil/charting/listener/BarLineChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/BarLineChartBase;Landroid/graphics/Matrix;F)V` @kind direct;
  #L3299fa.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` := v0 @kind object;
  #L3299fe.  v0:= new `android.graphics.Paint`;
  #L329a02.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L329a08.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L329a0c.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L329a10.  v1:= `@@android.graphics.Paint$Style.FILL` @type ^`android.graphics.Paint$Style` @kind object;
  #L329a14.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L329a1a.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L329a1e.  call temp:= `rgb`(v4, v4, v4) @signature `Landroid/graphics/Color;.rgb:(III)I` @kind static;
  #L329a24.  v1:= temp;
  #L329a26.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L329a2c.  v0:= new `android.graphics.Paint`;
  #L329a30.  call `<init>`(v0) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L329a36.  v5.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` := v0 @kind object;
  #L329a3a.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L329a3e.  v1:= `@@android.graphics.Paint$Style.STROKE` @type ^`android.graphics.Paint$Style` @kind object;
  #L329a42.  call `setStyle`(v0, v1) @signature `Landroid/graphics/Paint;.setStyle:(Landroid/graphics/Paint$Style;)V` @kind virtual;
  #L329a48.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L329a4c.  v1:= -16777216I;
  #L329a50.  call `setColor`(v0, v1) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L329a56.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L329a5a.  v1:= 1.0F;
  #L329a5e.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L329a64.  v1:= temp;
  #L329a66.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L329a6c.  return @kind void;
}
procedure `boolean` `isAnyAxisInverted`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isAnyAxisInverted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L329a80.  v0:= 1I;
  #L329a82.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329a86.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329a8c.  v1:= temp;
  #L329a8e.  if v1 == 0 then goto L329a94;
  #L329a92.  return v0;
  #L329a94.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329a98.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329a9e.  v1:= temp;
  #L329aa0.  if v1 != 0 then goto L329a92;
  #L329aa4.  v0:= 0I;
  #L329aa6.  goto L329a92;
}
procedure `boolean` `isAutoScaleMinMaxEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isAutoScaleMinMaxEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ab8.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` @kind boolean;
  #L329abc.  return v0;
}
procedure `boolean` `isDoubleTapToZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDoubleTapToZoomEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ad0.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` @kind boolean;
  #L329ad4.  return v0;
}
procedure `boolean` `isDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isDragEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ae8.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @type ^`boolean` @kind boolean;
  #L329aec.  return v0;
}
procedure `boolean` `isFullyZoomedOut`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isFullyZoomedOut:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b00.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329b04.  call temp:= `isFullyZoomedOut`(v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.isFullyZoomedOut:()Z` @kind virtual;
  #L329b0a.  v0:= temp;
  #L329b0c.  return v0;
}
procedure `boolean` `isHighlightPerDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isHighlightPerDragEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b20.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` @kind boolean;
  #L329b24.  return v0;
}
procedure `boolean` `isInverted`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v2 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isInverted:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b38.  call temp:= `getAxis`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @kind virtual;
  #L329b3e.  v0:= temp @kind object;
  #L329b40.  call temp:= `isInverted`(v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329b46.  v0:= temp;
  #L329b48.  return v0;
}
procedure `boolean` `isKeepPositionOnRotation`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isKeepPositionOnRotation:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b5c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L329b60.  return v0;
}
procedure `boolean` `isPinchZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isPinchZoomEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b74.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` @kind boolean;
  #L329b78.  return v0;
}
procedure `boolean` `isScaleXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isScaleXEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329b8c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` @kind boolean;
  #L329b90.  return v0;
}
procedure `boolean` `isScaleYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.isScaleYEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L329ba4.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` @kind boolean;
  #L329ba8.  return v0;
}
procedure `void` `moveViewTo`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this, `float` v6 @name `xValue`, `float` v7 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v8 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewTo:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L329bbc.  call temp:= `getDeltaY`(v5, v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L329bc2.  v2:= temp;
  #L329bc4.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329bc8.  call temp:= `getScaleY`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L329bce.  v3:= temp;
  #L329bd0.  v1:= v2 / v3 @kind float;
  #L329bd4.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329bd8.  v3:= 2.0F;
  #L329bdc.  v3:= v1 / v3 @kind float;
  #L329be0.  v3:= v3 + v7 @kind float;
  #L329be2.  call temp:= `getTransformer`(v5, v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329be8.  v4:= temp @kind object;
  #L329bea.  call temp:= `getInstance`(v2, v6, v3, v4, v5) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L329bf0.  v0:= temp @kind object;
  #L329bf2.  call `addViewportJob`(v5, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L329bf8.  return @kind void;
}
procedure `void` `moveViewToAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v12 @kind this, `float` v13 @name `xValue`, `float` v14 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v15 @kind object @name `axis`, `long` v16 @name `duration`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewToAnimated:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L329c0c.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L329c10.  v2:= 11I;
  #L329c14.  if v1 < v2 then goto L329c92;
  #L329c18.  v1:= v12.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329c1c.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L329c22.  v1:= temp;
  #L329c24.  v2:= v12.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329c28.  call temp:= `contentTop`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L329c2e.  v2:= temp;
  #L329c30.  call temp:= `getValuesByTouchPoint`(v12, v1, v2, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L329c36.  v0:= temp @kind object;
  #L329c38.  call temp:= `getDeltaY`(v12, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L329c3e.  v1:= temp;
  #L329c40.  v2:= v12.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329c44.  call temp:= `getScaleY`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L329c4a.  v2:= temp;
  #L329c4c.  v11:= v1 / v2 @kind float;
  #L329c50.  v1:= v12.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329c54.  v2:= 2.0F;
  #L329c58.  v2:= v11 / v2 @kind float;
  #L329c5c.  v3:= v14 + v2 @kind float;
  #L329c60.  call temp:= `getTransformer`(v12, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329c66.  v4:= temp @kind object;
  #L329c68.  v6:= v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L329c6c.  v6:= (`float`) v6 @kind d2f;
  #L329c6e.  v8:= v0.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L329c72.  v7:= (`float`) v8 @kind d2f;
  #L329c74.  v2:= v13;
  #L329c76.  v5:= v12 @kind object;
  #L329c78.  v8:= v16 @kind wide;
  #L329c7c.  call temp:= `getInstance`(v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @kind static;
  #L329c82.  v10:= temp @kind object;
  #L329c84.  call `addViewportJob`(v12, v10) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L329c8a.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L329c90.  return @kind void;
  #L329c92.  v1:= "MPAndroidChart" @kind object;
  #L329c96.  v2:= "Unable to execute moveViewToAnimated(...) on API level < 11" @kind object;
  #L329c9a.  call temp:= `e`(v1, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329ca0.  goto L329c90;
}
procedure `void` `moveViewToX`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `float` v5 @name `xValue`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.moveViewToX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L329cb4.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329cb8.  v2:= 0I;
  #L329cba.  v3:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L329cbe.  call temp:= `getTransformer`(v4, v3) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L329cc4.  v3:= temp @kind object;
  #L329cc6.  call temp:= `getInstance`(v1, v5, v2, v3, v4) @signature `Lcom/github/mikephil/charting/jobs/MoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/MoveViewJob;` @kind static;
  #L329ccc.  v0:= temp @kind object;
  #L329cce.  call `addViewportJob`(v4, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L329cd4.  return @kind void;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L329ce8.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L329cec.  if v0 != 0 then goto L329d08;
  #L329cf0.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L329cf4.  if v0 == 0 then goto L329d06;
  #L329cf8.  v0:= "MPAndroidChart" @kind object;
  #L329cfc.  v1:= "Preparing... DATA NOT SET." @kind object;
  #L329d00.  call temp:= `i`(v0, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329d06.  return @kind void;
  #L329d08.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L329d0c.  if v0 == 0 then goto L329d1e;
  #L329d10.  v0:= "MPAndroidChart" @kind object;
  #L329d14.  v1:= "Preparing..." @kind object;
  #L329d18.  call temp:= `i`(v0, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L329d1e.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L329d22.  if v0 == 0 then goto L329d30;
  #L329d26.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L329d2a.  call `initBuffers`(v0) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.initBuffers:()V` @kind virtual;
  #L329d30.  call `calcMinMax`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calcMinMax:()V` @kind virtual;
  #L329d36.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329d3a.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d3e.  v1:= v1.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L329d42.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d46.  v2:= v2.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L329d4a.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d4e.  call temp:= `isInverted`(v3) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329d54.  v3:= temp;
  #L329d56.  call `computeAxis`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329d5c.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329d60.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d64.  v1:= v1.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L329d68.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d6c.  v2:= v2.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L329d70.  v3:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329d74.  call temp:= `isInverted`(v3) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329d7a.  v3:= temp;
  #L329d7c.  call `computeAxis`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329d82.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329d86.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329d8a.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L329d8e.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329d92.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisMaximum` @type ^`float`;
  #L329d96.  v3:= 0I;
  #L329d98.  call `computeAxis`(v0, v1, v2, v3) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329d9e.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L329da2.  if v0 == 0 then goto L329db4;
  #L329da6.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L329daa.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L329dae.  call `computeLegend`(v0, v1) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.computeLegend:(Lcom/github/mikephil/charting/data/ChartData;)V` @kind virtual;
  #L329db4.  call `calculateOffsets`(v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L329dba.  goto L329d06;
}
procedure `void` `onDraw`(`com.github.mikephil.charting.charts.BarLineChartBase` v14 @kind this, `android.graphics.Canvas` v15 @kind object @name `canvas`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onDraw:(Landroid/graphics/Canvas;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L329dcc.  call `onDraw`(v14, v15) @signature `Lcom/github/mikephil/charting/charts/Chart;.onDraw:(Landroid/graphics/Canvas;)V` @kind super;
  #L329dd2.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L329dd6.  if v7 != 0 then goto L329ddc;
  #L329dda.  return @kind void;
  #L329ddc.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L329de2.  v8:= temp @kind wide;
  #L329de4.  call `drawGridBackground`(v14, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawGridBackground:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329dea.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329dee.  call temp:= `isEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isEnabled:()Z` @kind virtual;
  #L329df4.  v7:= temp;
  #L329df6.  if v7 == 0 then goto L329e20;
  #L329dfa.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329dfe.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e02.  v10:= v10.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L329e06.  v11:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e0a.  v11:= v11.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L329e0e.  v12:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e12.  call temp:= `isInverted`(v12) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329e18.  v12:= temp;
  #L329e1a.  call `computeAxis`(v7, v10, v11, v12) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329e20.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e24.  call temp:= `isEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isEnabled:()Z` @kind virtual;
  #L329e2a.  v7:= temp;
  #L329e2c.  if v7 == 0 then goto L329e56;
  #L329e30.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329e34.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e38.  v10:= v10.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L329e3c.  v11:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e40.  v11:= v11.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L329e44.  v12:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329e48.  call temp:= `isInverted`(v12) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L329e4e.  v12:= temp;
  #L329e50.  call `computeAxis`(v7, v10, v11, v12) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329e56.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329e5a.  call temp:= `isEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L329e60.  v7:= temp;
  #L329e62.  if v7 == 0 then goto L329e82;
  #L329e66.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329e6a.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329e6e.  v10:= v10.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L329e72.  v11:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329e76.  v11:= v11.`com.github.mikephil.charting.components.XAxis.mAxisMaximum` @type ^`float`;
  #L329e7a.  v12:= 0I;
  #L329e7c.  call `computeAxis`(v7, v10, v11, v12) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.computeAxis:(FFZ)V` @kind virtual;
  #L329e82.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329e86.  call `renderAxisLine`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329e8c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329e90.  call `renderAxisLine`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329e96.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329e9a.  call `renderAxisLine`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLine:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329ea0.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` @kind boolean;
  #L329ea4.  if v7 == 0 then goto L329f14;
  #L329ea8.  call temp:= `getLowestVisibleX`(v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getLowestVisibleX:()F` @kind virtual;
  #L329eae.  v6:= temp;
  #L329eb0.  call temp:= `getHighestVisibleX`(v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getHighestVisibleX:()F` @kind virtual;
  #L329eb6.  v3:= temp;
  #L329eb8.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` @kind object;
  #L329ebc.  if v7 == 0 then goto L329ef0;
  #L329ec0.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` @kind object;
  #L329ec4.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L329eca.  v7:= temp;
  #L329ecc.  v7:= fcmpl(v7, v6);
  #L329ed0.  if v7 != 0 then goto L329ef0;
  #L329ed4.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` @kind object;
  #L329ed8.  if v7 == 0 then goto L329ef0;
  #L329edc.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` @kind object;
  #L329ee0.  call temp:= `floatValue`(v7) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L329ee6.  v7:= temp;
  #L329ee8.  v7:= fcmpl(v7, v3);
  #L329eec.  if v7 == 0 then goto L329f14;
  #L329ef0.  call `calcMinMax`(v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calcMinMax:()V` @kind virtual;
  #L329ef6.  call `calculateOffsets`(v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L329efc.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L329f02.  v7:= temp @kind object;
  #L329f04.  v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastLowestVisibleXIndex` @type ^`java.lang.Float` := v7 @kind object;
  #L329f08.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L329f0e.  v7:= temp @kind object;
  #L329f10.  v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleLastHighestVisibleXIndex` @type ^`java.lang.Float` := v7 @kind object;
  #L329f14.  call temp:= `save`(v15) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L329f1a.  v2:= temp;
  #L329f1c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329f20.  call temp:= `getContentRect`(v7) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L329f26.  v7:= temp @kind object;
  #L329f28.  call temp:= `clipRect`(v15, v7) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L329f2e.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329f32.  call `renderGridLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f38.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329f3c.  call `renderGridLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f42.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329f46.  call `renderGridLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderGridLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f4c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329f50.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L329f56.  v7:= temp;
  #L329f58.  if v7 == 0 then goto L329f66;
  #L329f5c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329f60.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f66.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329f6a.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L329f70.  v7:= temp;
  #L329f72.  if v7 == 0 then goto L329f80;
  #L329f76.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329f7a.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f80.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L329f84.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L329f8a.  v7:= temp;
  #L329f8c.  if v7 == 0 then goto L329f9a;
  #L329f90.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L329f94.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329f9a.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L329f9e.  call `drawData`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawData:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329fa4.  call temp:= `valuesToHighlight`(v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.valuesToHighlight:()Z` @kind virtual;
  #L329faa.  v7:= temp;
  #L329fac.  if v7 == 0 then goto L329fbe;
  #L329fb0.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L329fb4.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mIndicesToHighlight` @type ^`com.github.mikephil.charting.highlight.Highlight`[] @kind object;
  #L329fb8.  call `drawHighlighted`(v7, v15, v10) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawHighlighted:(Landroid/graphics/Canvas;[Lcom/github/mikephil/charting/highlight/Highlight;)V` @kind virtual;
  #L329fbe.  call `restoreToCount`(v15, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L329fc4.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L329fc8.  call `drawExtras`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawExtras:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L329fce.  call temp:= `save`(v15) @signature `Landroid/graphics/Canvas;.save:()I` @kind virtual;
  #L329fd4.  v2:= temp;
  #L329fd6.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L329fda.  call temp:= `getContentRect`(v7) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L329fe0.  v7:= temp @kind object;
  #L329fe2.  call temp:= `clipRect`(v15, v7) @signature `Landroid/graphics/Canvas;.clipRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L329fe8.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L329fec.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L329ff2.  v7:= temp;
  #L329ff4.  if v7 != 0 then goto L32a002;
  #L329ff8.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L329ffc.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a002.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a006.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L32a00c.  v7:= temp;
  #L32a00e.  if v7 != 0 then goto L32a01c;
  #L32a012.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L32a016.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a01c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a020.  call temp:= `isDrawLimitLinesBehindDataEnabled`(v7) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawLimitLinesBehindDataEnabled:()Z` @kind virtual;
  #L32a026.  v7:= temp;
  #L32a028.  if v7 != 0 then goto L32a036;
  #L32a02c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L32a030.  call `renderLimitLines`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderLimitLines:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a036.  call `restoreToCount`(v15, v2) @signature `Landroid/graphics/Canvas;.restoreToCount:(I)V` @kind virtual;
  #L32a03c.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` @kind object;
  #L32a040.  call `renderAxisLabels`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/XAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a046.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L32a04a.  call `renderAxisLabels`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a050.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` @kind object;
  #L32a054.  call `renderAxisLabels`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/YAxisRenderer;.renderAxisLabels:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a05a.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mRenderer` @type ^`com.github.mikephil.charting.renderer.DataRenderer` @kind object;
  #L32a05e.  call `drawValues`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/DataRenderer;.drawValues:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a064.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L32a068.  call `renderLegend`(v7, v15) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.renderLegend:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a06e.  call `drawMarkers`(v14, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawMarkers:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a074.  call `drawDescription`(v14, v15) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.drawDescription:(Landroid/graphics/Canvas;)V` @kind virtual;
  #L32a07a.  v7:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L32a07e.  if v7 == 0 then goto L329dda;
  #L32a082.  call temp:= `currentTimeMillis`() @signature `Ljava/lang/System;.currentTimeMillis:()J` @kind static;
  #L32a088.  v10:= temp @kind wide;
  #L32a08a.  v4:= v10 - v8 @kind long;
  #L32a08e.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` @kind wide;
  #L32a092.  v10:= v10 + v4 @kind long;
  #L32a094.  v14.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v10 @kind wide;
  #L32a098.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` @kind wide;
  #L32a09c.  v12:= 1L;
  #L32a0a0.  v10:= v10 + v12 @kind long;
  #L32a0a2.  v14.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v10 @kind wide;
  #L32a0a6.  v10:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` @kind wide;
  #L32a0aa.  v12:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` @kind wide;
  #L32a0ae.  v0:= v10 / v12 @kind long;
  #L32a0b2.  v7:= "MPAndroidChart" @kind object;
  #L32a0b6.  v10:= new `java.lang.StringBuilder`;
  #L32a0ba.  call `<init>`(v10) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32a0c0.  v11:= "Drawtime: " @kind object;
  #L32a0c4.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0ca.  v10:= temp @kind object;
  #L32a0cc.  call temp:= `append`(v10, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0d2.  v10:= temp @kind object;
  #L32a0d4.  v11:= " ms, average: " @kind object;
  #L32a0d8.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0de.  v10:= temp @kind object;
  #L32a0e0.  call temp:= `append`(v10, v0) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0e6.  v10:= temp @kind object;
  #L32a0e8.  v11:= " ms, cycles: " @kind object;
  #L32a0ec.  call temp:= `append`(v10, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0f2.  v10:= temp @kind object;
  #L32a0f4.  v12:= v14.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` @kind wide;
  #L32a0f8.  call temp:= `append`(v10, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a0fe.  v10:= temp @kind object;
  #L32a100.  call temp:= `toString`(v10) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32a106.  v10:= temp @kind object;
  #L32a108.  call temp:= `i`(v7, v10) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32a10e.  goto L329dda;
}
procedure `void` `onSizeChanged`(`com.github.mikephil.charting.charts.BarLineChartBase` v4 @kind this, `int` v5 @name `w`, `int` v6 @name `h`, `int` v7 @name `oldw`, `int` v8 @name `oldh`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onSizeChanged:(IIII)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32a124.  v2:= 0I;
  #L32a126.  v3:= 1I;
  #L32a128.  v0:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mOnSizeChangedBuffer` @type ^`float`[] @kind object;
  #L32a12c.  v1:= 0I;
  #L32a12e.  v0[v3]:= v1;
  #L32a132.  v0[v2]:= v1;
  #L32a136.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L32a13a.  if v1 == 0 then goto L32a170;
  #L32a13e.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a142.  call temp:= `contentLeft`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L32a148.  v1:= temp;
  #L32a14a.  v0[v2]:= v1;
  #L32a14e.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a152.  call temp:= `contentTop`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L32a158.  v1:= temp;
  #L32a15a.  v0[v3]:= v1;
  #L32a15e.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L32a162.  call temp:= `getTransformer`(v4, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32a168.  v1:= temp @kind object;
  #L32a16a.  call `pixelsToValue`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pixelsToValue:([F)V` @kind virtual;
  #L32a170.  call `onSizeChanged`(v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/charts/Chart;.onSizeChanged:(IIII)V` @kind super;
  #L32a176.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` @kind boolean;
  #L32a17a.  if v1 == 0 then goto L32a19c;
  #L32a17e.  v1:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L32a182.  call temp:= `getTransformer`(v4, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32a188.  v1:= temp @kind object;
  #L32a18a.  call `pointValuesToPixel`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L32a190.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a194.  call `centerViewPort`(v1, v0, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @kind virtual;
  #L32a19a.  return @kind void;
  #L32a19c.  v1:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a1a0.  v2:= v4.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a1a4.  call temp:= `getMatrixTouch`(v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getMatrixTouch:()Landroid/graphics/Matrix;` @kind virtual;
  #L32a1aa.  v2:= temp @kind object;
  #L32a1ac.  call temp:= `refresh`(v1, v2, v4, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L32a1b2.  goto L32a19a;
}
procedure `boolean` `onTouchEvent`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `android.view.MotionEvent` v3 @kind object @name `event`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a1c4.  v0:= 0I;
  #L32a1c6.  call temp:= `onTouchEvent`(v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L32a1cc.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32a1d0.  if v1 == 0 then goto L32a1dc;
  #L32a1d4.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L32a1d8.  if v1 != 0 then goto L32a1de;
  #L32a1dc.  return v0;
  #L32a1de.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mTouchEnabled` @type ^`boolean` @kind boolean;
  #L32a1e2.  if v1 == 0 then goto L32a1dc;
  #L32a1e6.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32a1ea.  call temp:= `onTouch`(v0, v2, v3) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @kind virtual;
  #L32a1f0.  v0:= temp;
  #L32a1f2.  goto L32a1dc;
}
procedure `void` `prepareOffsetMatrix`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareOffsetMatrix:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L32a204.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L32a208.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a20c.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L32a212.  v1:= temp;
  #L32a214.  call `prepareMatrixOffset`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixOffset:(Z)V` @kind virtual;
  #L32a21a.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L32a21e.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a222.  call temp:= `isInverted`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @kind virtual;
  #L32a228.  v1:= temp;
  #L32a22a.  call `prepareMatrixOffset`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixOffset:(Z)V` @kind virtual;
  #L32a230.  return @kind void;
}
procedure `void` `prepareValuePxMatrix`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.prepareValuePxMatrix:()V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32a244.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L32a248.  if v0 == 0 then goto L32a2bc;
  #L32a24c.  v0:= "MPAndroidChart" @kind object;
  #L32a250.  v1:= new `java.lang.StringBuilder`;
  #L32a254.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32a25a.  v2:= "Preparing Value-Px Matrix, xmin: " @kind object;
  #L32a25e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a264.  v1:= temp @kind object;
  #L32a266.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a26a.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L32a26e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a274.  v1:= temp @kind object;
  #L32a276.  v2:= ", xmax: " @kind object;
  #L32a27a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a280.  v1:= temp @kind object;
  #L32a282.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a286.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisMaximum` @type ^`float`;
  #L32a28a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a290.  v1:= temp @kind object;
  #L32a292.  v2:= ", xdelta: " @kind object;
  #L32a296.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a29c.  v1:= temp @kind object;
  #L32a29e.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a2a2.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a2a6.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32a2ac.  v1:= temp @kind object;
  #L32a2ae.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32a2b4.  v1:= temp @kind object;
  #L32a2b6.  call temp:= `i`(v0, v1) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32a2bc.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mRightAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L32a2c0.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a2c4.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L32a2c8.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a2cc.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a2d0.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a2d4.  v3:= v3.`com.github.mikephil.charting.components.YAxis.mAxisRange` @type ^`float`;
  #L32a2d8.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRight` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a2dc.  v4:= v4.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L32a2e0.  call `prepareMatrixValuePx`(v0, v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixValuePx:(FFFF)V` @kind virtual;
  #L32a2e6.  v0:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mLeftAxisTransformer` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L32a2ea.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a2ee.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisMinimum` @type ^`float`;
  #L32a2f2.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a2f6.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a2fa.  v3:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a2fe.  v3:= v3.`com.github.mikephil.charting.components.YAxis.mAxisRange` @type ^`float`;
  #L32a302.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisLeft` @type ^`com.github.mikephil.charting.components.YAxis` @kind object;
  #L32a306.  v4:= v4.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L32a30a.  call `prepareMatrixValuePx`(v0, v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/Transformer;.prepareMatrixValuePx:(FFFF)V` @kind virtual;
  #L32a310.  return @kind void;
}
procedure `void` `resetTracking`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.resetTracking:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a324.  v0:= 0L;
  #L32a328.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.totalTime` @type ^`long` := v0 @kind wide;
  #L32a32c.  v2.`com.github.mikephil.charting.charts.BarLineChartBase.drawCycles` @type ^`long` := v0 @kind wide;
  #L32a330.  return @kind void;
}
procedure `void` `resetViewPortOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.resetViewPortOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a344.  v0:= 0I;
  #L32a346.  v1.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v0 @kind boolean;
  #L32a34a.  call `calculateOffsets`(v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L32a350.  return @kind void;
}
procedure `void` `setAutoScaleMinMaxEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setAutoScaleMinMaxEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a364.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAutoScaleMinMaxEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a368.  return @kind void;
}
procedure `void` `setBorderColor`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 @name `color`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setBorderColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a37c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L32a380.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32a386.  return @kind void;
}
procedure `void` `setBorderWidth`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `width`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setBorderWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a398.  v0:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mBorderPaint` @type ^`android.graphics.Paint` @kind object;
  #L32a39c.  call temp:= `convertDpToPixel`(v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32a3a2.  v1:= temp;
  #L32a3a4.  call `setStrokeWidth`(v0, v1) @signature `Landroid/graphics/Paint;.setStrokeWidth:(F)V` @kind virtual;
  #L32a3aa.  return @kind void;
}
procedure `void` `setDoubleTapToZoomEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDoubleTapToZoomEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a3bc.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDoubleTapToZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a3c0.  return @kind void;
}
procedure `void` `setDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a3d4.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a3d8.  return @kind void;
}
procedure `void` `setDragOffsetX`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 @name `offset`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragOffsetX:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a3ec.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a3f0.  call `setDragOffsetX`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetX:(F)V` @kind virtual;
  #L32a3f6.  return @kind void;
}
procedure `void` `setDragOffsetY`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 @name `offset`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDragOffsetY:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a408.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a40c.  call `setDragOffsetY`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setDragOffsetY:(F)V` @kind virtual;
  #L32a412.  return @kind void;
}
procedure `void` `setDrawBorders`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDrawBorders:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a424.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawBorders` @type ^`boolean` := v1 @kind boolean;
  #L32a428.  return @kind void;
}
procedure `void` `setDrawGridBackground`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setDrawGridBackground:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a43c.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawGridBackground` @type ^`boolean` := v1 @kind boolean;
  #L32a440.  return @kind void;
}
procedure `void` `setGridBackgroundColor`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `int` v2 @name `color`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setGridBackgroundColor:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a454.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` @kind object;
  #L32a458.  call `setColor`(v0, v2) @signature `Landroid/graphics/Paint;.setColor:(I)V` @kind virtual;
  #L32a45e.  return @kind void;
}
procedure `void` `setHighlightPerDragEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setHighlightPerDragEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a470.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mHighlightPerDragEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a474.  return @kind void;
}
procedure `void` `setKeepPositionOnRotation`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `keepPositionOnRotation`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setKeepPositionOnRotation:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a488.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mKeepPositionOnRotation` @type ^`boolean` := v1 @kind boolean;
  #L32a48c.  return @kind void;
}
procedure `void` `setMaxVisibleValueCount`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `int` v1 @name `count`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setMaxVisibleValueCount:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32a4a0.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mMaxVisibleCount` @type ^`int` := v1;
  #L32a4a4.  return @kind void;
}
procedure `void` `setMinOffset`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `float` v1 @name `minOffset`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setMinOffset:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32a4b8.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mMinOffset` @type ^`float` := v1;
  #L32a4bc.  return @kind void;
}
procedure `void` `setOnDrawListener`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.listener.OnDrawListener` v1 @kind object @name `drawListener`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setOnDrawListener:(Lcom/github/mikephil/charting/listener/OnDrawListener;)V` @AccessFlag PUBLIC {
    temp;

  #L32a4d0.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mDrawListener` @type ^`com.github.mikephil.charting.listener.OnDrawListener` := v1 @kind object;
  #L32a4d4.  return @kind void;
}
procedure `void` `setPaint`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `android.graphics.Paint` v1 @kind object @name `p`, `int` v2 @name `which`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setPaint:(Landroid/graphics/Paint;I)V` @AccessFlag PUBLIC {
    temp;

  #L32a4e8.  call `setPaint`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.setPaint:(Landroid/graphics/Paint;I)V` @kind super;
  #L32a4ee.  goto L32a4fc;
  #L32a4f4.  return @kind void;
  #L32a4f6.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mGridBackgroundPaint` @type ^`android.graphics.Paint` := v1 @kind object;
  #L32a4fa.  goto L32a4f4;
  #L32a4fc.  switch v2
                  | 4 => goto L32a4f6
                  | else => goto L32a4f4;
}
procedure `void` `setPinchZoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setPinchZoom:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a518.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mPinchZoomEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a51c.  return @kind void;
}
procedure `void` `setRendererLeftYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.YAxisRenderer` v1 @kind object @name `rendererLeftYAxis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setRendererLeftYAxis:(Lcom/github/mikephil/charting/renderer/YAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L32a530.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererLeft` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v1 @kind object;
  #L32a534.  return @kind void;
}
procedure `void` `setRendererRightYAxis`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.YAxisRenderer` v1 @kind object @name `rendererRightYAxis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setRendererRightYAxis:(Lcom/github/mikephil/charting/renderer/YAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L32a548.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mAxisRendererRight` @type ^`com.github.mikephil.charting.renderer.YAxisRenderer` := v1 @kind object;
  #L32a54c.  return @kind void;
}
procedure `void` `setScaleEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a560.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a564.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a568.  return @kind void;
}
procedure `void` `setScaleMinima`(`com.github.mikephil.charting.charts.BarLineChartBase` v1 @kind this, `float` v2 @name `scaleX`, `float` v3 @name `scaleY`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleMinima:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32a57c.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a580.  call `setMinimumScaleX`(v0, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleX:(F)V` @kind virtual;
  #L32a586.  v0:= v1.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a58a.  call `setMinimumScaleY`(v0, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleY:(F)V` @kind virtual;
  #L32a590.  return @kind void;
}
procedure `void` `setScaleXEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleXEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a5a4.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleXEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a5a8.  return @kind void;
}
procedure `void` `setScaleYEnabled`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setScaleYEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32a5bc.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mScaleYEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32a5c0.  return @kind void;
}
procedure `void` `setViewPortOffsets`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this, `float` v7 @name `left`, `float` v8 @name `top`, `float` v9 @name `right`, `float` v10 @name `bottom`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setViewPortOffsets:(FFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32a5d4.  v0:= 1I;
  #L32a5d6.  v6.`com.github.mikephil.charting.charts.BarLineChartBase.mCustomViewPortEnabled` @type ^`boolean` := v0 @kind boolean;
  #L32a5da.  v0:= new `com.github.mikephil.charting.charts.BarLineChartBase$1`;
  #L32a5de.  v1:= v6 @kind object;
  #L32a5e0.  v2:= v7;
  #L32a5e2.  v3:= v8;
  #L32a5e4.  v4:= v9;
  #L32a5e6.  v5:= v10;
  #L32a5e8.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase$1;.<init>:(Lcom/github/mikephil/charting/charts/BarLineChartBase;FFFF)V` @kind direct;
  #L32a5ee.  call temp:= `post`(v6, v0) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.post:(Ljava/lang/Runnable;)Z` @kind virtual;
  #L32a5f4.  return @kind void;
}
procedure `void` `setVisibleXRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 @name `minXRange`, `float` v5 @name `maxXRange`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRange:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32a608.  v2:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a60c.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a610.  v1:= v2 / v4 @kind float;
  #L32a614.  v2:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a618.  v2:= v2.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a61c.  v0:= v2 / v5 @kind float;
  #L32a620.  v2:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a624.  call `setMinMaxScaleX`(v2, v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleX:(FF)V` @kind virtual;
  #L32a62a.  return @kind void;
}
procedure `void` `setVisibleXRangeMaximum`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `maxXRange`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRangeMaximum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a63c.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a640.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a644.  v0:= v1 / v3 @kind float;
  #L32a648.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a64c.  call `setMinimumScaleX`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleX:(F)V` @kind virtual;
  #L32a652.  return @kind void;
}
procedure `void` `setVisibleXRangeMinimum`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `minXRange`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleXRangeMinimum:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a664.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a668.  v1:= v1.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a66c.  v0:= v1 / v3 @kind float;
  #L32a670.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a674.  call `setMaximumScaleX`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleX:(F)V` @kind virtual;
  #L32a67a.  return @kind void;
}
procedure `void` `setVisibleYRange`(`com.github.mikephil.charting.charts.BarLineChartBase` v3 @kind this, `float` v4 @name `minYRange`, `float` v5 @name `maxYRange`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v6 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRange:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32a68c.  call temp:= `getDeltaY`(v3, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L32a692.  v2:= temp;
  #L32a694.  v1:= v2 / v4 @kind float;
  #L32a698.  call temp:= `getDeltaY`(v3, v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L32a69e.  v2:= temp;
  #L32a6a0.  v0:= v2 / v5 @kind float;
  #L32a6a4.  v2:= v3.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a6a8.  call `setMinMaxScaleY`(v2, v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinMaxScaleY:(FF)V` @kind virtual;
  #L32a6ae.  return @kind void;
}
procedure `void` `setVisibleYRangeMaximum`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `maxYRange`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRangeMaximum:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a6c0.  call temp:= `getDeltaY`(v2, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L32a6c6.  v1:= temp;
  #L32a6c8.  v0:= v1 / v3 @kind float;
  #L32a6cc.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a6d0.  call `setMinimumScaleY`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMinimumScaleY:(F)V` @kind virtual;
  #L32a6d6.  return @kind void;
}
procedure `void` `setVisibleYRangeMinimum`(`com.github.mikephil.charting.charts.BarLineChartBase` v2 @kind this, `float` v3 @name `minYRange`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v4 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setVisibleYRangeMinimum:(FLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32a6e8.  call temp:= `getDeltaY`(v2, v4) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getDeltaY:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)F` @kind virtual;
  #L32a6ee.  v1:= temp;
  #L32a6f0.  v0:= v1 / v3 @kind float;
  #L32a6f4.  v1:= v2.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a6f8.  call `setMaximumScaleY`(v1, v0) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.setMaximumScaleY:(F)V` @kind virtual;
  #L32a6fe.  return @kind void;
}
procedure `void` `setXAxisRenderer`(`com.github.mikephil.charting.charts.BarLineChartBase` v0 @kind this, `com.github.mikephil.charting.renderer.XAxisRenderer` v1 @kind object @name `xAxisRenderer`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.setXAxisRenderer:(Lcom/github/mikephil/charting/renderer/XAxisRenderer;)V` @AccessFlag PUBLIC {
    temp;

  #L32a710.  v0.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxisRenderer` @type ^`com.github.mikephil.charting.renderer.XAxisRenderer` := v1 @kind object;
  #L32a714.  return @kind void;
}
procedure `void` `zoom`(`com.github.mikephil.charting.charts.BarLineChartBase` v6 @kind this, `float` v7 @name `scaleX`, `float` v8 @name `scaleY`, `float` v9 @name `x`, `float` v10 @name `y`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoom:(FFFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32a728.  v5:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32a72c.  v0:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a730.  v1:= v7;
  #L32a732.  v2:= v8;
  #L32a734.  v3:= v9;
  #L32a736.  v4:= v10;
  #L32a738.  call `zoom`(v0, v1, v2, v3, v4, v5) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoom:(FFFFLandroid/graphics/Matrix;)V` @kind virtual;
  #L32a73e.  v0:= v6.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a742.  v1:= 0I;
  #L32a744.  call temp:= `refresh`(v0, v5, v6, v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L32a74a.  call `calculateOffsets`(v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L32a750.  call `postInvalidate`(v6) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.postInvalidate:()V` @kind virtual;
  #L32a756.  return @kind void;
}
procedure `void` `zoomAndCenter`(`com.github.mikephil.charting.charts.BarLineChartBase` v9 @kind this, `float` v10 @name `scaleX`, `float` v11 @name `scaleY`, `float` v12 @name `xValue`, `float` v13 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v14 @kind object @name `axis`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomAndCenter:(FFFFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L32a768.  v0:= v9.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a76c.  call temp:= `getTransformer`(v9, v14) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32a772.  v5:= temp @kind object;
  #L32a774.  v1:= v10;
  #L32a776.  v2:= v11;
  #L32a778.  v3:= v12;
  #L32a77a.  v4:= v13;
  #L32a77c.  v6:= v14 @kind object;
  #L32a77e.  v7:= v9 @kind object;
  #L32a780.  call temp:= `getInstance`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/ZoomJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFFFLcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/YAxis$AxisDependency;Landroid/view/View;)Lcom/github/mikephil/charting/jobs/ZoomJob;` @kind static;
  #L32a786.  v8:= temp @kind object;
  #L32a788.  call `addViewportJob`(v9, v8) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L32a78e.  return @kind void;
}
procedure `void` `zoomAndCenterAnimated`(`com.github.mikephil.charting.charts.BarLineChartBase` v20 @kind this, `float` v21 @name `scaleX`, `float` v22 @name `scaleY`, `float` v23 @name `xValue`, `float` v24 @name `yValue`, `com.github.mikephil.charting.components.YAxis$AxisDependency` v25 @kind object @name `axis`, `long` v26 @name `duration`) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomAndCenterAnimated:(FFFFLcom/github/mikephil/charting/components/YAxis$AxisDependency;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L32a7a0.  v3:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32a7a4.  v4:= 11I;
  #L32a7a8.  if v3 < v4 then goto L32a876;
  #L32a7ac.  v0:= v20 @kind object;
  #L32a7b0.  v3:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a7b4.  call temp:= `contentLeft`(v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentLeft:()F` @kind virtual;
  #L32a7ba.  v3:= temp;
  #L32a7bc.  v0:= v20 @kind object;
  #L32a7c0.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a7c4.  call temp:= `contentTop`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.contentTop:()F` @kind virtual;
  #L32a7ca.  v4:= temp;
  #L32a7cc.  v0:= v20 @kind object;
  #L32a7d0.  v1:= v25 @kind object;
  #L32a7d4.  call temp:= `getValuesByTouchPoint`(v0, v3, v4, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getValuesByTouchPoint:(FFLcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/MPPointD;` @kind virtual;
  #L32a7da.  v18:= temp @kind object;
  #L32a7dc.  v0:= v20 @kind object;
  #L32a7e0.  v3:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a7e4.  v0:= v20 @kind object;
  #L32a7e8.  v1:= v25 @kind object;
  #L32a7ec.  call temp:= `getTransformer`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getTransformer:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/utils/Transformer;` @kind virtual;
  #L32a7f2.  v5:= temp @kind object;
  #L32a7f4.  v0:= v20 @kind object;
  #L32a7f8.  v1:= v25 @kind object;
  #L32a7fc.  call temp:= `getAxis`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.getAxis:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)Lcom/github/mikephil/charting/components/YAxis;` @kind virtual;
  #L32a802.  v6:= temp @kind object;
  #L32a804.  v0:= v20 @kind object;
  #L32a808.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mXAxis` @type ^`com.github.mikephil.charting.components.XAxis` @kind object;
  #L32a80c.  v7:= v4.`com.github.mikephil.charting.components.XAxis.mAxisRange` @type ^`float`;
  #L32a810.  v0:= v20 @kind object;
  #L32a814.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a818.  call temp:= `getScaleX`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleX:()F` @kind virtual;
  #L32a81e.  v10:= temp;
  #L32a820.  v0:= v20 @kind object;
  #L32a824.  v4:= v0.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a828.  call temp:= `getScaleY`(v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getScaleY:()F` @kind virtual;
  #L32a82e.  v11:= temp;
  #L32a830.  v0:= v18 @kind object;
  #L32a834.  v8:= v0.`com.github.mikephil.charting.utils.MPPointD.x` @type ^`double` @kind wide;
  #L32a838.  v14:= (`float`) v8 @kind d2f;
  #L32a83a.  v0:= v18 @kind object;
  #L32a83e.  v8:= v0.`com.github.mikephil.charting.utils.MPPointD.y` @type ^`double` @kind wide;
  #L32a842.  v15:= (`float`) v8 @kind d2f;
  #L32a844.  v4:= v20 @kind object;
  #L32a848.  v8:= v21;
  #L32a84c.  v9:= v22;
  #L32a850.  v12:= v23;
  #L32a854.  v13:= v24;
  #L32a858.  v16:= v26 @kind wide;
  #L32a85c.  call temp:= `getInstance`(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/github/mikephil/charting/jobs/AnimatedZoomJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;Landroid/view/View;Lcom/github/mikephil/charting/utils/Transformer;Lcom/github/mikephil/charting/components/YAxis;FFFFFFFFFJ)Lcom/github/mikephil/charting/jobs/AnimatedZoomJob;` @kind static;
  #L32a862.  v2:= temp @kind object;
  #L32a864.  v0:= v20 @kind object;
  #L32a868.  call `addViewportJob`(v0, v2) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.addViewportJob:(Ljava/lang/Runnable;)V` @kind virtual;
  #L32a86e.  call `recycleInstance`(v18) @signature `Lcom/github/mikephil/charting/utils/MPPointD;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointD;)V` @kind static;
  #L32a874.  return @kind void;
  #L32a876.  v3:= "MPAndroidChart" @kind object;
  #L32a87a.  v4:= "Unable to execute zoomAndCenterAnimated(...) on API level < 11" @kind object;
  #L32a87e.  call temp:= `e`(v3, v4) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32a884.  goto L32a874;
}
procedure `void` `zoomIn`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomIn:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32a898.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a89c.  call temp:= `getContentCenter`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32a8a2.  v0:= temp @kind object;
  #L32a8a4.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a8a8.  v2:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32a8ac.  v3:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32a8b0.  v3:= -v3 @kind float;
  #L32a8b2.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32a8b6.  call `zoomIn`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomIn:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L32a8bc.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a8c0.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomInMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32a8c4.  v3:= 0I;
  #L32a8c6.  call temp:= `refresh`(v1, v2, v5, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L32a8cc.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32a8d2.  call `calculateOffsets`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L32a8d8.  call `postInvalidate`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.postInvalidate:()V` @kind virtual;
  #L32a8de.  return @kind void;
}
procedure `void` `zoomOut`(`com.github.mikephil.charting.charts.BarLineChartBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.zoomOut:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L32a8f0.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a8f4.  call temp:= `getContentCenter`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32a8fa.  v0:= temp @kind object;
  #L32a8fc.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a900.  v2:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32a904.  v3:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32a908.  v3:= -v3 @kind float;
  #L32a90a.  v4:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32a90e.  call `zoomOut`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.zoomOut:(FFLandroid/graphics/Matrix;)V` @kind virtual;
  #L32a914.  v1:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32a918.  v2:= v5.`com.github.mikephil.charting.charts.BarLineChartBase.mZoomOutMatrixBuffer` @type ^`android.graphics.Matrix` @kind object;
  #L32a91c.  v3:= 0I;
  #L32a91e.  call temp:= `refresh`(v1, v2, v5, v3) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.refresh:(Landroid/graphics/Matrix;Landroid/view/View;Z)Landroid/graphics/Matrix;` @kind virtual;
  #L32a924.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32a92a.  call `calculateOffsets`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.calculateOffsets:()V` @kind virtual;
  #L32a930.  call `postInvalidate`(v5) @signature `Lcom/github/mikephil/charting/charts/BarLineChartBase;.postInvalidate:()V` @kind virtual;
  #L32a936.  return @kind void;
}
