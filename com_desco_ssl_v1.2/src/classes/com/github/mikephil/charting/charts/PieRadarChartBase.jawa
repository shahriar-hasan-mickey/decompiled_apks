record `com.github.mikephil.charting.charts.PieRadarChartBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.charts.Chart` @kind class {
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `android.content.Context` v2 @kind object @name `context`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32a948.  v0:= 270.0F;
  #L32a94c.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L32a952.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v0;
  #L32a956.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v0;
  #L32a95a.  v0:= 1I;
  #L32a95c.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v0 @kind boolean;
  #L32a960.  v0:= 0I;
  #L32a962.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v0;
  #L32a966.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32a978.  v0:= 270.0F;
  #L32a97c.  call `<init>`(v1, v2, v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;)V` @kind direct;
  #L32a982.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v0;
  #L32a986.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v0;
  #L32a98a.  v0:= 1I;
  #L32a98c.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v0 @kind boolean;
  #L32a990.  v0:= 0I;
  #L32a992.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v0;
  #L32a996.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `android.content.Context` v2 @kind object @name `context`, `android.util.AttributeSet` v3 @kind object @name `attrs`, `int` v4 @name `defStyle`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L32a9a8.  v0:= 270.0F;
  #L32a9ac.  call `<init>`(v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/charts/Chart;.<init>:(Landroid/content/Context;Landroid/util/AttributeSet;I)V` @kind direct;
  #L32a9b2.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v0;
  #L32a9b6.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v0;
  #L32a9ba.  v0:= 1I;
  #L32a9bc.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v0 @kind boolean;
  #L32a9c0.  v0:= 0I;
  #L32a9c2.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v0;
  #L32a9c6.  return @kind void;
}
procedure `void` `calcMinMax`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calcMinMax:()V` @AccessFlag PROTECTED {
    temp;

  #L32a9d8.  return @kind void;
}
procedure `void` `calculateOffsets`(`com.github.mikephil.charting.charts.PieRadarChartBase` v32 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;
    v31;

  #L32a9ec.  v14:= 0I;
  #L32a9ee.  v15:= 0I;
  #L32a9f0.  v12:= 0I;
  #L32a9f2.  v16:= 0I;
  #L32a9f6.  v0:= v32 @kind object;
  #L32a9fa.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32a9fe.  v29:= v0 @kind object;
  #L32aa02.  if v29 == 0 then goto L32ab0c;
  #L32aa06.  v0:= v32 @kind object;
  #L32aa0a.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aa0e.  v29:= v0 @kind object;
  #L32aa12.  call temp:= `isEnabled`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.isEnabled:()Z` @kind virtual;
  #L32aa18.  v29:= temp;
  #L32aa1a.  if v29 == 0 then goto L32ab0c;
  #L32aa1e.  v0:= v32 @kind object;
  #L32aa22.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aa26.  v29:= v0 @kind object;
  #L32aa2a.  call temp:= `isDrawInsideEnabled`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.isDrawInsideEnabled:()Z` @kind virtual;
  #L32aa30.  v29:= temp;
  #L32aa32.  if v29 != 0 then goto L32ab0c;
  #L32aa36.  v0:= v32 @kind object;
  #L32aa3a.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aa3e.  v29:= v0 @kind object;
  #L32aa42.  v0:= v29 @kind object;
  #L32aa46.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededWidth` @type ^`float`;
  #L32aa4a.  v29:= v0;
  #L32aa4e.  v0:= v32 @kind object;
  #L32aa52.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32aa56.  v30:= v0 @kind object;
  #L32aa5a.  call temp:= `getChartWidth`(v30) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartWidth:()F` @kind virtual;
  #L32aa60.  v30:= temp;
  #L32aa62.  v0:= v32 @kind object;
  #L32aa66.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aa6a.  v31:= v0 @kind object;
  #L32aa6e.  call temp:= `getMaxSizePercent`(v31) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L32aa74.  v31:= temp;
  #L32aa76.  v30:= v30 * v31 @kind float;
  #L32aa7a.  call temp:= `min`(v29, v30) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32aa80.  v29:= temp;
  #L32aa82.  v0:= v32 @kind object;
  #L32aa86.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aa8a.  v30:= v0 @kind object;
  #L32aa8e.  call temp:= `getFormSize`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getFormSize:()F` @kind virtual;
  #L32aa94.  v30:= temp;
  #L32aa96.  v29:= v29 + v30 @kind float;
  #L32aa9a.  v0:= v32 @kind object;
  #L32aa9e.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aaa2.  v30:= v0 @kind object;
  #L32aaa6.  call temp:= `getFormToTextSpace`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getFormToTextSpace:()F` @kind virtual;
  #L32aaac.  v30:= temp;
  #L32aaae.  v11:= v29 + v30 @kind float;
  #L32aab2.  v29:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendOrientation` @type ^`int`[] @kind object;
  #L32aab6.  v0:= v32 @kind object;
  #L32aaba.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aabe.  v30:= v0 @kind object;
  #L32aac2.  call temp:= `getOrientation`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getOrientation:()Lcom/github/mikephil/charting/components/Legend$LegendOrientation;` @kind virtual;
  #L32aac8.  v30:= temp @kind object;
  #L32aaca.  call temp:= `ordinal`(v30) @signature `Lcom/github/mikephil/charting/components/Legend$LegendOrientation;.ordinal:()I` @kind virtual;
  #L32aad0.  v30:= temp;
  #L32aad2.  v29:= v29[v30];
  #L32aad6.  goto L32b098;
  #L32aadc.  call temp:= `getRequiredBaseOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L32aae2.  v29:= temp;
  #L32aae4.  v14:= v14 + v29 @kind float;
  #L32aae8.  call temp:= `getRequiredBaseOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L32aaee.  v29:= temp;
  #L32aaf0.  v15:= v15 + v29 @kind float;
  #L32aaf4.  call temp:= `getRequiredBaseOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L32aafa.  v29:= temp;
  #L32aafc.  v16:= v16 + v29 @kind float;
  #L32ab00.  call temp:= `getRequiredBaseOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L32ab06.  v29:= temp;
  #L32ab08.  v12:= v12 + v29 @kind float;
  #L32ab0c.  v0:= v32 @kind object;
  #L32ab10.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float`;
  #L32ab14.  v29:= v0;
  #L32ab18.  call temp:= `convertDpToPixel`(v29) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32ab1e.  v18:= temp;
  #L32ab20.  v0:= v32 @kind object;
  #L32ab24.  v0:= instanceof @variable v0 @type ^`com.github.mikephil.charting.charts.RadarChart` @kind boolean;
  #L32ab28.  v29:= v0;
  #L32ab2c.  if v29 == 0 then goto L32ab76;
  #L32ab30.  call temp:= `getXAxis`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getXAxis:()Lcom/github/mikephil/charting/components/XAxis;` @kind virtual;
  #L32ab36.  v25:= temp @kind object;
  #L32ab38.  call temp:= `isEnabled`(v25) @signature `Lcom/github/mikephil/charting/components/XAxis;.isEnabled:()Z` @kind virtual;
  #L32ab3e.  v29:= temp;
  #L32ab40.  if v29 == 0 then goto L32ab76;
  #L32ab44.  call temp:= `isDrawLabelsEnabled`(v25) @signature `Lcom/github/mikephil/charting/components/XAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L32ab4a.  v29:= temp;
  #L32ab4c.  if v29 == 0 then goto L32ab76;
  #L32ab50.  v0:= v25 @kind object;
  #L32ab54.  v0:= v0.`com.github.mikephil.charting.components.XAxis.mLabelRotatedWidth` @type ^`int`;
  #L32ab58.  v29:= v0;
  #L32ab5c.  v0:= v29;
  #L32ab60.  v0:= (`float`) v0 @kind i2f;
  #L32ab62.  v29:= v0;
  #L32ab66.  v0:= v18;
  #L32ab6a.  v1:= v29;
  #L32ab6e.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32ab74.  v18:= temp;
  #L32ab76.  call temp:= `getExtraTopOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraTopOffset:()F` @kind virtual;
  #L32ab7c.  v29:= temp;
  #L32ab7e.  v16:= v16 + v29 @kind float;
  #L32ab82.  call temp:= `getExtraRightOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraRightOffset:()F` @kind virtual;
  #L32ab88.  v29:= temp;
  #L32ab8a.  v15:= v15 + v29 @kind float;
  #L32ab8e.  call temp:= `getExtraBottomOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraBottomOffset:()F` @kind virtual;
  #L32ab94.  v29:= temp;
  #L32ab96.  v12:= v12 + v29 @kind float;
  #L32ab9a.  call temp:= `getExtraLeftOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraLeftOffset:()F` @kind virtual;
  #L32aba0.  v29:= temp;
  #L32aba2.  v14:= v14 + v29 @kind float;
  #L32aba6.  v0:= v18;
  #L32abaa.  call temp:= `max`(v0, v14) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32abb0.  v20:= temp;
  #L32abb2.  v0:= v18;
  #L32abb6.  v1:= v16;
  #L32abba.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32abc0.  v22:= temp;
  #L32abc2.  v0:= v18;
  #L32abc6.  call temp:= `max`(v0, v15) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32abcc.  v21:= temp;
  #L32abce.  call temp:= `getRequiredBaseOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @kind virtual;
  #L32abd4.  v29:= temp;
  #L32abd6.  v0:= v29;
  #L32abda.  call temp:= `max`(v0, v12) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32abe0.  v29:= temp;
  #L32abe2.  v0:= v18;
  #L32abe6.  v1:= v29;
  #L32abea.  call temp:= `max`(v0, v1) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32abf0.  v19:= temp;
  #L32abf2.  v0:= v32 @kind object;
  #L32abf6.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32abfa.  v29:= v0 @kind object;
  #L32abfe.  v0:= v29 @kind object;
  #L32ac02.  v1:= v20;
  #L32ac06.  v2:= v22;
  #L32ac0a.  v3:= v21;
  #L32ac0e.  v4:= v19;
  #L32ac12.  call `restrainViewPort`(v0, v1, v2, v3, v4) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.restrainViewPort:(FFFF)V` @kind virtual;
  #L32ac18.  v0:= v32 @kind object;
  #L32ac1c.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLogEnabled` @type ^`boolean` @kind boolean;
  #L32ac20.  v29:= v0;
  #L32ac24.  if v29 == 0 then goto L32acb4;
  #L32ac28.  v29:= "MPAndroidChart" @kind object;
  #L32ac2c.  v30:= new `java.lang.StringBuilder`;
  #L32ac30.  call `<init>`(v30) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L32ac36.  v31:= "offsetLeft: " @kind object;
  #L32ac3a.  call temp:= `append`(v30, v31) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac40.  v30:= temp @kind object;
  #L32ac42.  v0:= v30 @kind object;
  #L32ac46.  v1:= v20;
  #L32ac4a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac50.  v30:= temp @kind object;
  #L32ac52.  v31:= ", offsetTop: " @kind object;
  #L32ac56.  call temp:= `append`(v30, v31) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac5c.  v30:= temp @kind object;
  #L32ac5e.  v0:= v30 @kind object;
  #L32ac62.  v1:= v22;
  #L32ac66.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac6c.  v30:= temp @kind object;
  #L32ac6e.  v31:= ", offsetRight: " @kind object;
  #L32ac72.  call temp:= `append`(v30, v31) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac78.  v30:= temp @kind object;
  #L32ac7a.  v0:= v30 @kind object;
  #L32ac7e.  v1:= v21;
  #L32ac82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac88.  v30:= temp @kind object;
  #L32ac8a.  v31:= ", offsetBottom: " @kind object;
  #L32ac8e.  call temp:= `append`(v30, v31) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L32ac94.  v30:= temp @kind object;
  #L32ac96.  v0:= v30 @kind object;
  #L32ac9a.  v1:= v19;
  #L32ac9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L32aca4.  v30:= temp @kind object;
  #L32aca6.  call temp:= `toString`(v30) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L32acac.  v30:= temp @kind object;
  #L32acae.  call temp:= `i`(v29, v30) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L32acb4.  return @kind void;
  #L32acb6.  v26:= 0I;
  #L32acba.  v0:= v32 @kind object;
  #L32acbe.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32acc2.  v29:= v0 @kind object;
  #L32acc6.  call temp:= `getHorizontalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L32accc.  v29:= temp @kind object;
  #L32acce.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.LEFT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L32acd2.  v0:= v29 @kind object;
  #L32acd6.  v1:= v30 @kind object;
  #L32acda.  if v0 == v1 then goto L32ad02;
  #L32acde.  v0:= v32 @kind object;
  #L32ace2.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32ace6.  v29:= v0 @kind object;
  #L32acea.  call temp:= `getHorizontalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L32acf0.  v29:= temp @kind object;
  #L32acf2.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.RIGHT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L32acf6.  v0:= v29 @kind object;
  #L32acfa.  v1:= v30 @kind object;
  #L32acfe.  if v0 != v1 then goto L32ad36;
  #L32ad02.  v0:= v32 @kind object;
  #L32ad06.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32ad0a.  v29:= v0 @kind object;
  #L32ad0e.  call temp:= `getVerticalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L32ad14.  v29:= temp @kind object;
  #L32ad16.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.CENTER` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L32ad1a.  v0:= v29 @kind object;
  #L32ad1e.  v1:= v30 @kind object;
  #L32ad22.  if v0 != v1 then goto L32ad6c;
  #L32ad26.  v29:= 13.0F;
  #L32ad2a.  call temp:= `convertDpToPixel`(v29) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32ad30.  v24:= temp;
  #L32ad32.  v26:= v11 + v24 @kind float;
  #L32ad36.  v29:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendHorizontalAlignment` @type ^`int`[] @kind object;
  #L32ad3a.  v0:= v32 @kind object;
  #L32ad3e.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32ad42.  v30:= v0 @kind object;
  #L32ad46.  call temp:= `getHorizontalAlignment`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L32ad4c.  v30:= temp @kind object;
  #L32ad4e.  call temp:= `ordinal`(v30) @signature `Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;.ordinal:()I` @kind virtual;
  #L32ad54.  v30:= temp;
  #L32ad56.  v29:= v29[v30];
  #L32ad5a.  goto L32b0a8;
  #L32ad60.  goto L32aadc;
  #L32ad64.  v14:= v26;
  #L32ad68.  goto L32aadc;
  #L32ad6c.  v29:= 8.0F;
  #L32ad70.  call temp:= `convertDpToPixel`(v29) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32ad76.  v24:= temp;
  #L32ad78.  v17:= v11 + v24 @kind float;
  #L32ad7c.  v0:= v32 @kind object;
  #L32ad80.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32ad84.  v29:= v0 @kind object;
  #L32ad88.  v0:= v29 @kind object;
  #L32ad8c.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L32ad90.  v29:= v0;
  #L32ad94.  v0:= v32 @kind object;
  #L32ad98.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32ad9c.  v30:= v0 @kind object;
  #L32ada0.  v0:= v30 @kind object;
  #L32ada4.  v0:= v0.`com.github.mikephil.charting.components.Legend.mTextHeightMax` @type ^`float`;
  #L32ada8.  v30:= v0;
  #L32adac.  v13:= v29 + v30 @kind float;
  #L32adb0.  call temp:= `getCenter`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getCenter:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32adb6.  v7:= temp @kind object;
  #L32adb8.  v0:= v32 @kind object;
  #L32adbc.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32adc0.  v29:= v0 @kind object;
  #L32adc4.  call temp:= `getHorizontalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getHorizontalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendHorizontalAlignment;` @kind virtual;
  #L32adca.  v29:= temp @kind object;
  #L32adcc.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment.RIGHT` @type ^`com.github.mikephil.charting.components.Legend$LegendHorizontalAlignment` @kind object;
  #L32add0.  v0:= v29 @kind object;
  #L32add4.  v1:= v30 @kind object;
  #L32add8.  if v0 != v1 then goto L32aec2;
  #L32addc.  call temp:= `getWidth`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getWidth:()I` @kind virtual;
  #L32ade2.  v29:= temp;
  #L32ade4.  v0:= v29;
  #L32ade8.  v0:= (`float`) v0 @kind i2f;
  #L32adea.  v29:= v0;
  #L32adee.  v29:= v29 - v17 @kind float;
  #L32adf2.  v30:= 15.0F;
  #L32adf6.  v5:= v29 + v30 @kind float;
  #L32adfa.  v29:= 15.0F;
  #L32adfe.  v6:= v13 + v29 @kind float;
  #L32ae02.  v0:= v32 @kind object;
  #L32ae06.  call temp:= `distanceToCenter`(v0, v5, v6) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @kind virtual;
  #L32ae0c.  v9:= temp;
  #L32ae0e.  call temp:= `getRadius`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRadius:()F` @kind virtual;
  #L32ae14.  v29:= temp;
  #L32ae16.  v0:= v32 @kind object;
  #L32ae1a.  call temp:= `getAngleForPoint`(v0, v5, v6) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L32ae20.  v30:= temp;
  #L32ae22.  v0:= v32 @kind object;
  #L32ae26.  v1:= v29;
  #L32ae2a.  v2:= v30;
  #L32ae2e.  call temp:= `getPosition`(v0, v7, v1, v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32ae34.  v23:= temp @kind object;
  #L32ae36.  v0:= v23 @kind object;
  #L32ae3a.  v0:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32ae3e.  v29:= v0;
  #L32ae42.  v0:= v23 @kind object;
  #L32ae46.  v0:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32ae4a.  v30:= v0;
  #L32ae4e.  v0:= v32 @kind object;
  #L32ae52.  v1:= v29;
  #L32ae56.  v2:= v30;
  #L32ae5a.  call temp:= `distanceToCenter`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @kind virtual;
  #L32ae60.  v10:= temp;
  #L32ae62.  v29:= 5.0F;
  #L32ae66.  call temp:= `convertDpToPixel`(v29) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32ae6c.  v18:= temp;
  #L32ae6e.  v0:= v7.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32ae72.  v29:= v0;
  #L32ae76.  v29:= fcmpl(v6, v29);
  #L32ae7a.  if v29 < 0 then goto L32aecc;
  #L32ae7e.  call temp:= `getHeight`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getHeight:()I` @kind virtual;
  #L32ae84.  v29:= temp;
  #L32ae86.  v0:= v29;
  #L32ae8a.  v0:= (`float`) v0 @kind i2f;
  #L32ae8c.  v29:= v0;
  #L32ae90.  v29:= v29 - v17 @kind float;
  #L32ae94.  call temp:= `getWidth`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getWidth:()I` @kind virtual;
  #L32ae9a.  v30:= temp;
  #L32ae9c.  v0:= v30;
  #L32aea0.  v0:= (`float`) v0 @kind i2f;
  #L32aea2.  v30:= v0;
  #L32aea6.  v29:= fcmpl(v29, v30);
  #L32aeaa.  if v29 <= 0 then goto L32aecc;
  #L32aeae.  v26:= v17;
  #L32aeb2.  call `recycleInstance`(v7) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32aeb8.  call `recycleInstance`(v23) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32aebe.  goto L32ad36;
  #L32aec2.  v29:= 15.0F;
  #L32aec6.  v5:= v17 - v29 @kind float;
  #L32aeca.  goto L32adfa;
  #L32aecc.  v29:= fcmpg(v9, v10);
  #L32aed0.  if v29 >= 0 then goto L32aeb2;
  #L32aed4.  v8:= v10 - v9 @kind float;
  #L32aed8.  v26:= v18 + v8 @kind float;
  #L32aedc.  goto L32aeb2;
  #L32aede.  v15:= v26;
  #L32aee2.  goto L32aadc;
  #L32aee6.  v29:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendVerticalAlignment` @type ^`int`[] @kind object;
  #L32aeea.  v0:= v32 @kind object;
  #L32aeee.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32aef2.  v30:= v0 @kind object;
  #L32aef6.  call temp:= `getVerticalAlignment`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L32aefc.  v30:= temp @kind object;
  #L32aefe.  call temp:= `ordinal`(v30) @signature `Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;.ordinal:()I` @kind virtual;
  #L32af04.  v30:= temp;
  #L32af06.  v29:= v29[v30];
  #L32af0a.  goto L32b0bc;
  #L32af10.  goto L32aadc;
  #L32af14.  v0:= v32 @kind object;
  #L32af18.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32af1c.  v29:= v0 @kind object;
  #L32af20.  v0:= v29 @kind object;
  #L32af24.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L32af28.  v29:= v0;
  #L32af2c.  v0:= v32 @kind object;
  #L32af30.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32af34.  v30:= v0 @kind object;
  #L32af38.  call temp:= `getChartHeight`(v30) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L32af3e.  v30:= temp;
  #L32af40.  v0:= v32 @kind object;
  #L32af44.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32af48.  v31:= v0 @kind object;
  #L32af4c.  call temp:= `getMaxSizePercent`(v31) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L32af52.  v31:= temp;
  #L32af54.  v30:= v30 * v31 @kind float;
  #L32af58.  call temp:= `min`(v29, v30) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32af5e.  v16:= temp;
  #L32af60.  goto L32aadc;
  #L32af64.  v0:= v32 @kind object;
  #L32af68.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32af6c.  v29:= v0 @kind object;
  #L32af70.  v0:= v29 @kind object;
  #L32af74.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L32af78.  v29:= v0;
  #L32af7c.  v0:= v32 @kind object;
  #L32af80.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32af84.  v30:= v0 @kind object;
  #L32af88.  call temp:= `getChartHeight`(v30) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L32af8e.  v30:= temp;
  #L32af90.  v0:= v32 @kind object;
  #L32af94.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32af98.  v31:= v0 @kind object;
  #L32af9c.  call temp:= `getMaxSizePercent`(v31) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L32afa2.  v31:= temp;
  #L32afa4.  v30:= v30 * v31 @kind float;
  #L32afa8.  call temp:= `min`(v29, v30) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32afae.  v12:= temp;
  #L32afb0.  goto L32aadc;
  #L32afb4.  v27:= 0I;
  #L32afb8.  v0:= v32 @kind object;
  #L32afbc.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32afc0.  v29:= v0 @kind object;
  #L32afc4.  call temp:= `getVerticalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L32afca.  v29:= temp @kind object;
  #L32afcc.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.TOP` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L32afd0.  v0:= v29 @kind object;
  #L32afd4.  v1:= v30 @kind object;
  #L32afd8.  if v0 == v1 then goto L32b000;
  #L32afdc.  v0:= v32 @kind object;
  #L32afe0.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32afe4.  v29:= v0 @kind object;
  #L32afe8.  call temp:= `getVerticalAlignment`(v29) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L32afee.  v29:= temp @kind object;
  #L32aff0.  v30:= `@@com.github.mikephil.charting.components.Legend$LegendVerticalAlignment.BOTTOM` @type ^`com.github.mikephil.charting.components.Legend$LegendVerticalAlignment` @kind object;
  #L32aff4.  v0:= v29 @kind object;
  #L32aff8.  v1:= v30 @kind object;
  #L32affc.  if v0 != v1 then goto L32aadc;
  #L32b000.  call temp:= `getRequiredLegendOffset`(v32) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredLegendOffset:()F` @kind virtual;
  #L32b006.  v28:= temp;
  #L32b008.  v0:= v32 @kind object;
  #L32b00c.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32b010.  v29:= v0 @kind object;
  #L32b014.  v0:= v29 @kind object;
  #L32b018.  v0:= v0.`com.github.mikephil.charting.components.Legend.mNeededHeight` @type ^`float`;
  #L32b01c.  v29:= v0;
  #L32b020.  v29:= v29 + v28 @kind float;
  #L32b024.  v0:= v32 @kind object;
  #L32b028.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32b02c.  v30:= v0 @kind object;
  #L32b030.  call temp:= `getChartHeight`(v30) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getChartHeight:()F` @kind virtual;
  #L32b036.  v30:= temp;
  #L32b038.  v0:= v32 @kind object;
  #L32b03c.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32b040.  v31:= v0 @kind object;
  #L32b044.  call temp:= `getMaxSizePercent`(v31) @signature `Lcom/github/mikephil/charting/components/Legend;.getMaxSizePercent:()F` @kind virtual;
  #L32b04a.  v31:= temp;
  #L32b04c.  v30:= v30 * v31 @kind float;
  #L32b050.  call temp:= `min`(v29, v30) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32b056.  v27:= temp;
  #L32b058.  v29:= `@@com.github.mikephil.charting.charts.PieRadarChartBase$2.$SwitchMap$com$github$mikephil$charting$components$Legend$LegendVerticalAlignment` @type ^`int`[] @kind object;
  #L32b05c.  v0:= v32 @kind object;
  #L32b060.  v0:= v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32b064.  v30:= v0 @kind object;
  #L32b068.  call temp:= `getVerticalAlignment`(v30) @signature `Lcom/github/mikephil/charting/components/Legend;.getVerticalAlignment:()Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;` @kind virtual;
  #L32b06e.  v30:= temp @kind object;
  #L32b070.  call temp:= `ordinal`(v30) @signature `Lcom/github/mikephil/charting/components/Legend$LegendVerticalAlignment;.ordinal:()I` @kind virtual;
  #L32b076.  v30:= temp;
  #L32b078.  v29:= v29[v30];
  #L32b07c.  goto L32b0cc;
  #L32b082.  goto L32aadc;
  #L32b086.  v16:= v27;
  #L32b08a.  goto L32aadc;
  #L32b08e.  v12:= v27;
  #L32b092.  goto L32aadc;
  #L32b096.  
  #L32b098.  switch v29
                  | 1 => goto L32acb6
                  | 2 => goto L32afb4
                  | else => goto L32aadc;
  #L32b0a8.  switch v29
                  | 1 => goto L32ad64
                  | 2 => goto L32aede
                  | 3 => goto L32aee6
                  | else => goto L32ad60;
  #L32b0bc.  switch v29
                  | 1 => goto L32af14
                  | 2 => goto L32af64
                  | else => goto L32af10;
  #L32b0cc.  switch v29
                  | 1 => goto L32b086
                  | 2 => goto L32b08e
                  | else => goto L32b082;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b0ec.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32b0f0.  v0:= instanceof @variable v0 @type ^`com.github.mikephil.charting.listener.PieRadarChartTouchListener` @kind boolean;
  #L32b0f4.  if v0 == 0 then goto L32b106;
  #L32b0f8.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32b0fc.  v0:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener`) v0 @kind object;
  #L32b100.  call `computeScroll`(v0) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.computeScroll:()V` @kind virtual;
  #L32b106.  return @kind void;
}
procedure `float` `distanceToCenter`(`com.github.mikephil.charting.charts.PieRadarChartBase` v10 @kind this, `float` v11 @name `x`, `float` v12 @name `y`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.distanceToCenter:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L32b118.  v8:= 2.0D;
  #L32b11c.  call temp:= `getCenterOffsets`(v10) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32b122.  v0:= temp @kind object;
  #L32b124.  v1:= 0I;
  #L32b126.  v2:= 0I;
  #L32b128.  v3:= 0I;
  #L32b12a.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b12e.  v4:= fcmpl(v11, v4);
  #L32b132.  if v4 <= 0 then goto L32b17a;
  #L32b136.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b13a.  v2:= v11 - v4 @kind float;
  #L32b13e.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32b142.  v4:= fcmpl(v12, v4);
  #L32b146.  if v4 <= 0 then goto L32b184;
  #L32b14a.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32b14e.  v3:= v12 - v4 @kind float;
  #L32b152.  v4:= (`double`) v2 @kind f2d;
  #L32b154.  call temp:= `pow`(v4, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L32b15a.  v4:= temp @kind wide;
  #L32b15c.  v6:= (`double`) v3 @kind f2d;
  #L32b15e.  call temp:= `pow`(v6, v8) @signature `Ljava/lang/Math;.pow:(DD)D` @kind static;
  #L32b164.  v6:= temp @kind wide;
  #L32b166.  v4:= v4 + v6 @kind double;
  #L32b168.  call temp:= `sqrt`(v4) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L32b16e.  v4:= temp @kind wide;
  #L32b170.  v1:= (`float`) v4 @kind d2f;
  #L32b172.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32b178.  return v1;
  #L32b17a.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b17e.  v2:= v4 - v11 @kind float;
  #L32b182.  goto L32b13e;
  #L32b184.  v4:= v0.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32b188.  v3:= v4 - v12 @kind float;
  #L32b18c.  goto L32b152;
}
procedure `float` `getAngleForPoint`(`com.github.mikephil.charting.charts.PieRadarChartBase` v14 @kind this, `float` v15 @name `x`, `float` v16 @name `y`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L32b1a0.  call temp:= `getCenterOffsets`(v14) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getCenterOffsets:()Lcom/github/mikephil/charting/utils/MPPointF;` @kind virtual;
  #L32b1a6.  v1:= temp @kind object;
  #L32b1a8.  v10:= v1.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b1ac.  v10:= v15 - v10 @kind float;
  #L32b1b0.  v6:= (`double`) v10 @kind f2d;
  #L32b1b2.  v10:= v1.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32b1b6.  v10:= v16 - v10 @kind float;
  #L32b1ba.  v8:= (`double`) v10 @kind f2d;
  #L32b1bc.  v10:= v6 * v6 @kind double;
  #L32b1c0.  v12:= v8 * v8 @kind double;
  #L32b1c4.  v10:= v10 + v12 @kind double;
  #L32b1c6.  call temp:= `sqrt`(v10) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L32b1cc.  v2:= temp @kind wide;
  #L32b1ce.  v10:= v8 / v2 @kind double;
  #L32b1d2.  call temp:= `acos`(v10) @signature `Ljava/lang/Math;.acos:(D)D` @kind static;
  #L32b1d8.  v4:= temp @kind wide;
  #L32b1da.  call temp:= `toDegrees`(v4) @signature `Ljava/lang/Math;.toDegrees:(D)D` @kind static;
  #L32b1e0.  v10:= temp @kind wide;
  #L32b1e2.  v0:= (`float`) v10 @kind d2f;
  #L32b1e4.  v10:= v1.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b1e8.  v10:= fcmpl(v15, v10);
  #L32b1ec.  if v10 <= 0 then goto L32b1f8;
  #L32b1f0.  v10:= 360.0F;
  #L32b1f4.  v0:= v10 - v0 @kind float;
  #L32b1f8.  v10:= 90.0F;
  #L32b1fc.  v0:= v0 + v10 @kind float;
  #L32b1fe.  v10:= 360.0F;
  #L32b202.  v10:= fcmpl(v0, v10);
  #L32b206.  if v10 <= 0 then goto L32b210;
  #L32b20a.  v10:= 360.0F;
  #L32b20e.  v0:= v0 - v10 @kind float;
  #L32b210.  call `recycleInstance`(v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.recycleInstance:(Lcom/github/mikephil/charting/utils/MPPointF;)V` @kind static;
  #L32b216.  return v0;
}
procedure `float` `getDiameter`(`com.github.mikephil.charting.charts.PieRadarChartBase` v3 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getDiameter:()F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L32b228.  v1:= v3.`com.github.mikephil.charting.charts.PieRadarChartBase.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L32b22c.  call temp:= `getContentRect`(v1) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.getContentRect:()Landroid/graphics/RectF;` @kind virtual;
  #L32b232.  v0:= temp @kind object;
  #L32b234.  v1:= v0.`android.graphics.RectF.left` @type ^`float`;
  #L32b238.  call temp:= `getExtraLeftOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraLeftOffset:()F` @kind virtual;
  #L32b23e.  v2:= temp;
  #L32b240.  v1:= v1 + v2 @kind float;
  #L32b242.  v0.`android.graphics.RectF.left` @type ^`float` := v1;
  #L32b246.  v1:= v0.`android.graphics.RectF.top` @type ^`float`;
  #L32b24a.  call temp:= `getExtraTopOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraTopOffset:()F` @kind virtual;
  #L32b250.  v2:= temp;
  #L32b252.  v1:= v1 + v2 @kind float;
  #L32b254.  v0.`android.graphics.RectF.top` @type ^`float` := v1;
  #L32b258.  v1:= v0.`android.graphics.RectF.right` @type ^`float`;
  #L32b25c.  call temp:= `getExtraRightOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraRightOffset:()F` @kind virtual;
  #L32b262.  v2:= temp;
  #L32b264.  v1:= v1 - v2 @kind float;
  #L32b266.  v0.`android.graphics.RectF.right` @type ^`float` := v1;
  #L32b26a.  v1:= v0.`android.graphics.RectF.bottom` @type ^`float`;
  #L32b26e.  call temp:= `getExtraBottomOffset`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getExtraBottomOffset:()F` @kind virtual;
  #L32b274.  v2:= temp;
  #L32b276.  v1:= v1 - v2 @kind float;
  #L32b278.  v0.`android.graphics.RectF.bottom` @type ^`float` := v1;
  #L32b27c.  call temp:= `width`(v0) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L32b282.  v1:= temp;
  #L32b284.  call temp:= `height`(v0) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L32b28a.  v2:= temp;
  #L32b28c.  call temp:= `min`(v1, v2) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32b292.  v1:= temp;
  #L32b294.  return v1;
}
procedure `int` `getIndexForAngle`(`float` v0 ) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getIndexForAngle:(F)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getMaxVisibleCount`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getMaxVisibleCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b2a8.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L32b2ac.  call temp:= `getEntryCount`(v0) @signature `Lcom/github/mikephil/charting/data/ChartData;.getEntryCount:()I` @kind virtual;
  #L32b2b2.  v0:= temp;
  #L32b2b4.  return v0;
}
procedure `float` `getMinOffset`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getMinOffset:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b2c8.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float`;
  #L32b2cc.  return v0;
}
procedure `com.github.mikephil.charting.utils.MPPointF` `getPosition`(`com.github.mikephil.charting.charts.PieRadarChartBase` v2 @kind this, `com.github.mikephil.charting.utils.MPPointF` v3 @kind object @name `center`, `float` v4 @name `dist`, `float` v5 @name `angle`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FF)Lcom/github/mikephil/charting/utils/MPPointF;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b2e0.  v1:= 0I;
  #L32b2e2.  call temp:= `getInstance`(v1, v1) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L32b2e8.  v0:= temp @kind object;
  #L32b2ea.  call `getPosition`(v2, v3, v4, v5, v0) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @kind virtual;
  #L32b2f0.  return v0 @kind object;
}
procedure `void` `getPosition`(`com.github.mikephil.charting.charts.PieRadarChartBase` v6 @kind this, `com.github.mikephil.charting.utils.MPPointF` v7 @kind object @name `center`, `float` v8 @name `dist`, `float` v9 @name `angle`, `com.github.mikephil.charting.utils.MPPointF` v10 @kind object @name `outputPoint`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getPosition:(Lcom/github/mikephil/charting/utils/MPPointF;FFLcom/github/mikephil/charting/utils/MPPointF;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L32b304.  v0:= v7.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L32b308.  v0:= (`double`) v0 @kind f2d;
  #L32b30a.  v2:= (`double`) v8 @kind f2d;
  #L32b30c.  v4:= (`double`) v9 @kind f2d;
  #L32b30e.  call temp:= `toRadians`(v4) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L32b314.  v4:= temp @kind wide;
  #L32b316.  call temp:= `cos`(v4) @signature `Ljava/lang/Math;.cos:(D)D` @kind static;
  #L32b31c.  v4:= temp @kind wide;
  #L32b31e.  v2:= v2 * v4 @kind double;
  #L32b320.  v0:= v0 + v2 @kind double;
  #L32b322.  v0:= (`float`) v0 @kind d2f;
  #L32b324.  v10.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v0;
  #L32b328.  v0:= v7.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L32b32c.  v0:= (`double`) v0 @kind f2d;
  #L32b32e.  v2:= (`double`) v8 @kind f2d;
  #L32b330.  v4:= (`double`) v9 @kind f2d;
  #L32b332.  call temp:= `toRadians`(v4) @signature `Ljava/lang/Math;.toRadians:(D)D` @kind static;
  #L32b338.  v4:= temp @kind wide;
  #L32b33a.  call temp:= `sin`(v4) @signature `Ljava/lang/Math;.sin:(D)D` @kind static;
  #L32b340.  v4:= temp @kind wide;
  #L32b342.  v2:= v2 * v4 @kind double;
  #L32b344.  v0:= v0 + v2 @kind double;
  #L32b346.  v0:= (`float`) v0 @kind d2f;
  #L32b348.  v10.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v0;
  #L32b34c.  return @kind void;
}
procedure `float` `getRadius`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRadius:()F` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `float` `getRawRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRawRotationAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b360.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float`;
  #L32b364.  return v0;
}
procedure `float` `getRequiredBaseOffset`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredBaseOffset:()F` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `float` `getRequiredLegendOffset`() @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRequiredLegendOffset:()F` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
procedure `float` `getRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b378.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float`;
  #L32b37c.  return v0;
}
procedure `float` `getYChartMax`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getYChartMax:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b390.  v0:= 0I;
  #L32b392.  return v0;
}
procedure `float` `getYChartMin`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getYChartMin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b3a4.  v0:= 0I;
  #L32b3a6.  return v0;
}
procedure `void` `init`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.init:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32b3b8.  call `init`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.init:()V` @kind super;
  #L32b3be.  v0:= new `com.github.mikephil.charting.listener.PieRadarChartTouchListener`;
  #L32b3c2.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @kind direct;
  #L32b3c8.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` := v0 @kind object;
  #L32b3cc.  return @kind void;
}
procedure `boolean` `isRotationEnabled`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isRotationEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b3e0.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` @kind boolean;
  #L32b3e4.  return v0;
}
procedure `void` `notifyDataSetChanged`(`com.github.mikephil.charting.charts.PieRadarChartBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.notifyDataSetChanged:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b3f8.  v0:= v2.`com.github.mikephil.charting.charts.PieRadarChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L32b3fc.  if v0 != 0 then goto L32b402;
  #L32b400.  return @kind void;
  #L32b402.  call `calcMinMax`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calcMinMax:()V` @kind virtual;
  #L32b408.  v0:= v2.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegend` @type ^`com.github.mikephil.charting.components.Legend` @kind object;
  #L32b40c.  if v0 == 0 then goto L32b41e;
  #L32b410.  v0:= v2.`com.github.mikephil.charting.charts.PieRadarChartBase.mLegendRenderer` @type ^`com.github.mikephil.charting.renderer.LegendRenderer` @kind object;
  #L32b414.  v1:= v2.`com.github.mikephil.charting.charts.PieRadarChartBase.mData` @type ^`com.github.mikephil.charting.data.ChartData` @kind object;
  #L32b418.  call `computeLegend`(v0, v1) @signature `Lcom/github/mikephil/charting/renderer/LegendRenderer;.computeLegend:(Lcom/github/mikephil/charting/data/ChartData;)V` @kind virtual;
  #L32b41e.  call `calculateOffsets`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.calculateOffsets:()V` @kind virtual;
  #L32b424.  goto L32b400;
}
procedure `boolean` `onTouchEvent`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `android.view.MotionEvent` v2 @kind object @name `event`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b438.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mTouchEnabled` @type ^`boolean` @kind boolean;
  #L32b43c.  if v0 == 0 then goto L32b456;
  #L32b440.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32b444.  if v0 == 0 then goto L32b456;
  #L32b448.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mChartTouchListener` @type ^`com.github.mikephil.charting.listener.ChartTouchListener` @kind object;
  #L32b44c.  call temp:= `onTouch`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @kind virtual;
  #L32b452.  v0:= temp;
  #L32b454.  return v0;
  #L32b456.  call temp:= `onTouchEvent`(v1, v2) @signature `Lcom/github/mikephil/charting/charts/Chart;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind super;
  #L32b45c.  v0:= temp;
  #L32b45e.  goto L32b454;
}
procedure `void` `setMinOffset`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `float` v1 @name `minOffset`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setMinOffset:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32b470.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mMinOffset` @type ^`float` := v1;
  #L32b474.  return @kind void;
}
procedure `void` `setRotationAngle`(`com.github.mikephil.charting.charts.PieRadarChartBase` v1 @kind this, `float` v2 @name `angle`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b488.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float` := v2;
  #L32b48c.  v0:= v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRawRotationAngle` @type ^`float`;
  #L32b490.  call temp:= `getNormalizedAngle`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.getNormalizedAngle:(F)F` @kind static;
  #L32b496.  v0:= temp;
  #L32b498.  v1.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotationAngle` @type ^`float` := v0;
  #L32b49c.  return @kind void;
}
procedure `void` `setRotationEnabled`(`com.github.mikephil.charting.charts.PieRadarChartBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32b4b0.  v0.`com.github.mikephil.charting.charts.PieRadarChartBase.mRotateEnabled` @type ^`boolean` := v1 @kind boolean;
  #L32b4b4.  return @kind void;
}
procedure `void` `spin`(`com.github.mikephil.charting.charts.PieRadarChartBase` v4 @kind this, `int` v5 @name `durationmillis`, `float` v6 @name `fromangle`, `float` v7 @name `toangle`, `com.github.mikephil.charting.animation.Easing$EasingOption` v8 @kind object @name `easing`) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.spin:(IFFLcom/github/mikephil/charting/animation/Easing$EasingOption;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b4c8.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L32b4cc.  v2:= 11I;
  #L32b4d0.  if v1 >= v2 then goto L32b4d6;
  #L32b4d4.  return @kind void;
  #L32b4d6.  call `setRotationAngle`(v4, v6) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L32b4dc.  v1:= "rotationAngle" @kind object;
  #L32b4e0.  v2:= 2I;
  #L32b4e2.  v2:= new `float`[v2];
  #L32b4e6.  v3:= 0I;
  #L32b4e8.  v2[v3]:= v6;
  #L32b4ec.  v3:= 1I;
  #L32b4ee.  v2[v3]:= v7;
  #L32b4f2.  call temp:= `ofFloat`(v4, v1, v2) @signature `Landroid/animation/ObjectAnimator;.ofFloat:(Ljava/lang/Object;Ljava/lang/String;[F)Landroid/animation/ObjectAnimator;` @kind static;
  #L32b4f8.  v0:= temp @kind object;
  #L32b4fa.  v2:= (`long`) v5 @kind i2l;
  #L32b4fc.  call temp:= `setDuration`(v0, v2) @signature `Landroid/animation/ObjectAnimator;.setDuration:(J)Landroid/animation/ObjectAnimator;` @kind virtual;
  #L32b502.  call temp:= `getEasingFunctionFromOption`(v8) @signature `Lcom/github/mikephil/charting/animation/Easing;.getEasingFunctionFromOption:(Lcom/github/mikephil/charting/animation/Easing$EasingOption;)Lcom/github/mikephil/charting/animation/EasingFunction;` @kind static;
  #L32b508.  v1:= temp @kind object;
  #L32b50a.  call `setInterpolator`(v0, v1) @signature `Landroid/animation/ObjectAnimator;.setInterpolator:(Landroid/animation/TimeInterpolator;)V` @kind virtual;
  #L32b510.  v1:= new `com.github.mikephil.charting.charts.PieRadarChartBase$1`;
  #L32b514.  call `<init>`(v1, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase$1;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @kind direct;
  #L32b51a.  call `addUpdateListener`(v0, v1) @signature `Landroid/animation/ObjectAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L32b520.  call `start`(v0) @signature `Landroid/animation/ObjectAnimator;.start:()V` @kind virtual;
  #L32b526.  goto L32b4d4;
}
