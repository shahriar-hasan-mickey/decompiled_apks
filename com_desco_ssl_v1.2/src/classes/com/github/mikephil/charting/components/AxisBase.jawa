record `com.github.mikephil.charting.components.AxisBase` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.components.ComponentBase` @kind class {
  `int` `com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @AccessFlag PUBLIC;
  `float` `com.github.mikephil.charting.components.AxisBase.mAxisRange` @AccessFlag PUBLIC;
  `com.github.mikephil.charting.formatter.AxisValueFormatter` `com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.components.AxisBase.mDecimals` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawLabels` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.components.AxisBase.mEntries` @AccessFlag PUBLIC;
  `int` `com.github.mikephil.charting.components.AxisBase.mEntryCount` @AccessFlag PUBLIC;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mForceLabels` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.AxisBase.mGranularity` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.components.AxisBase.mGridColor` @AccessFlag PRIVATE;
  `android.graphics.DashPathEffect` `com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @AccessFlag PRIVATE;
  `int` `com.github.mikephil.charting.components.AxisBase.mLabelCount` @AccessFlag PRIVATE;
  `java.util.List` `com.github.mikephil.charting.components.AxisBase.mLimitLines` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.AxisBase` v6 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b7cf8.  v5:= 5.0F;
  #L2b7cfc.  v4:= 1I;
  #L2b7cfe.  v3:= 1.0F;
  #L2b7d02.  v2:= 0I;
  #L2b7d04.  v1:= 0I;
  #L2b7d06.  call `<init>`(v6) @signature `Lcom/github/mikephil/charting/components/ComponentBase;.<init>:()V` @kind direct;
  #L2b7d0c.  v0:= -7829368I;
  #L2b7d12.  v6.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int` := v0;
  #L2b7d16.  v6.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float` := v3;
  #L2b7d1a.  v0:= -7829368I;
  #L2b7d20.  v6.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int` := v0;
  #L2b7d24.  v6.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float` := v3;
  #L2b7d28.  v0:= new `float`[v1];
  #L2b7d2c.  v6.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] := v0 @kind object;
  #L2b7d30.  v0:= new `float`[v1];
  #L2b7d34.  v6.`com.github.mikephil.charting.components.AxisBase.mCenteredEntries` @type ^`float`[] := v0 @kind object;
  #L2b7d38.  v0:= 6I;
  #L2b7d3a.  v6.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int` := v0;
  #L2b7d3e.  v6.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float` := v3;
  #L2b7d42.  v6.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v1 @kind boolean;
  #L2b7d46.  v6.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v1 @kind boolean;
  #L2b7d4a.  v6.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` := v4 @kind boolean;
  #L2b7d4e.  v6.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` := v4 @kind boolean;
  #L2b7d52.  v6.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` := v4 @kind boolean;
  #L2b7d56.  v6.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` := v1 @kind boolean;
  #L2b7d5a.  v0:= 0I;
  #L2b7d5c.  v6.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L2b7d60.  v6.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` := v1 @kind boolean;
  #L2b7d64.  v6.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v1 @kind boolean;
  #L2b7d68.  v6.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v1 @kind boolean;
  #L2b7d6c.  v6.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v2;
  #L2b7d70.  v6.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v2;
  #L2b7d74.  v6.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v2;
  #L2b7d78.  v0:= 10.0F;
  #L2b7d7c.  call temp:= `convertDpToPixel`(v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2b7d82.  v0:= temp;
  #L2b7d84.  v6.`com.github.mikephil.charting.components.AxisBase.mTextSize` @type ^`float` := v0;
  #L2b7d88.  call temp:= `convertDpToPixel`(v5) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2b7d8e.  v0:= temp;
  #L2b7d90.  v6.`com.github.mikephil.charting.components.AxisBase.mXOffset` @type ^`float` := v0;
  #L2b7d94.  call temp:= `convertDpToPixel`(v5) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2b7d9a.  v0:= temp;
  #L2b7d9c.  v6.`com.github.mikephil.charting.components.AxisBase.mYOffset` @type ^`float` := v0;
  #L2b7da0.  v0:= new `java.util.ArrayList`;
  #L2b7da4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2b7daa.  v6.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` := v0 @kind object;
  #L2b7dae.  return @kind void;
}
procedure `void` `addLimitLine`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this, `com.github.mikephil.charting.components.LimitLine` v3 @kind object @name `l`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.addLimitLine:(Lcom/github/mikephil/charting/components/LimitLine;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b7dc0.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L2b7dc4.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L2b7dca.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L2b7dce.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L2b7dd4.  v0:= temp;
  #L2b7dd6.  v1:= 6I;
  #L2b7dd8.  if v0 <= v1 then goto L2b7dea;
  #L2b7ddc.  v0:= "MPAndroiChart" @kind object;
  #L2b7de0.  v1:= "Warning! You have more than 6 LimitLines on your axis, do you really want that?" @kind object;
  #L2b7de4.  call temp:= `e`(v0, v1) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L2b7dea.  return @kind void;
}
procedure `void` `calculate`(`com.github.mikephil.charting.components.AxisBase` v5 @kind this, `float` v6 @name `dataMin`, `float` v7 @name `dataMax`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.calculate:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b7dfc.  v4:= 1.0F;
  #L2b7e00.  v3:= v5.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L2b7e04.  if v3 == 0 then goto L2b7e4c;
  #L2b7e08.  v1:= v5.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L2b7e0c.  v3:= v5.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L2b7e10.  if v3 == 0 then goto L2b7e50;
  #L2b7e14.  v0:= v5.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L2b7e18.  v3:= v0 - v1 @kind float;
  #L2b7e1c.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b7e22.  v2:= temp;
  #L2b7e24.  v3:= 0I;
  #L2b7e26.  v3:= fcmpl(v2, v3);
  #L2b7e2a.  if v3 != 0 then goto L2b7e32;
  #L2b7e2e.  v0:= v0 + v4 @kind float;
  #L2b7e30.  v1:= v1 - v4 @kind float;
  #L2b7e32.  v5.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v1;
  #L2b7e36.  v5.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v0;
  #L2b7e3a.  v3:= v0 - v1 @kind float;
  #L2b7e3e.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b7e44.  v3:= temp;
  #L2b7e46.  v5.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v3;
  #L2b7e4a.  return @kind void;
  #L2b7e4c.  v1:= v6;
  #L2b7e4e.  goto L2b7e0c;
  #L2b7e50.  v0:= v7;
  #L2b7e52.  goto L2b7e18;
}
procedure `void` `disableGridDashedLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.disableGridDashedLine:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7e64.  v0:= 0I;
  #L2b7e66.  v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L2b7e6a.  return @kind void;
}
procedure `void` `enableGridDashedLine`(`com.github.mikephil.charting.components.AxisBase` v3 @kind this, `float` v4 @name `lineLength`, `float` v5 @name `spaceLength`, `float` v6 @name `phase`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.enableGridDashedLine:(FFF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b7e7c.  v0:= new `android.graphics.DashPathEffect`;
  #L2b7e80.  v1:= 2I;
  #L2b7e82.  v1:= new `float`[v1];
  #L2b7e86.  v2:= 0I;
  #L2b7e88.  v1[v2]:= v4;
  #L2b7e8c.  v2:= 1I;
  #L2b7e8e.  v1[v2]:= v5;
  #L2b7e92.  call `<init>`(v0, v1, v6) @signature `Landroid/graphics/DashPathEffect;.<init>:([FF)V` @kind direct;
  #L2b7e98.  v3.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` := v0 @kind object;
  #L2b7e9c.  return @kind void;
}
procedure `int` `getAxisLineColor`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7eb0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int`;
  #L2b7eb4.  return v0;
}
procedure `float` `getAxisLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7ec8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float`;
  #L2b7ecc.  return v0;
}
procedure `float` `getAxisMaximum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisMaximum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7ee0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L2b7ee4.  return v0;
}
procedure `float` `getAxisMinimum`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getAxisMinimum:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7ef8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L2b7efc.  return v0;
}
procedure `java.lang.String` `getFormattedLabel`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this, `int` v3 @name `index`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getFormattedLabel:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b7f10.  if v3 < 0 then goto L2b7f1e;
  #L2b7f14.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L2b7f18.  v0:= length @variable v0;
  #L2b7f1a.  if v3 < v0 then goto L2b7f24;
  #L2b7f1e.  v0:= "" @kind object;
  #L2b7f22.  return v0 @kind object;
  #L2b7f24.  call temp:= `getValueFormatter`(v2) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/AxisValueFormatter;` @kind virtual;
  #L2b7f2a.  v0:= temp @kind object;
  #L2b7f2c.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L2b7f30.  v1:= v1[v3];
  #L2b7f34.  call temp:= `getFormattedValue`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/formatter/AxisValueFormatter;.getFormattedValue:(FLcom/github/mikephil/charting/components/AxisBase;)Ljava/lang/String;` @kind interface;
  #L2b7f3a.  v0:= temp @kind object;
  #L2b7f3c.  goto L2b7f22;
}
procedure `float` `getGranularity`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGranularity:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7f50.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float`;
  #L2b7f54.  return v0;
}
procedure `int` `getGridColor`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7f68.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int`;
  #L2b7f6c.  return v0;
}
procedure `android.graphics.DashPathEffect` `getGridDashPathEffect`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridDashPathEffect:()Landroid/graphics/DashPathEffect;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7f80.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L2b7f84.  return v0 @kind object;
}
procedure `float` `getGridLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getGridLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7f98.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float`;
  #L2b7f9c.  return v0;
}
procedure `int` `getLabelCount`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLabelCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7fb0.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int`;
  #L2b7fb4.  return v0;
}
procedure `java.util.List` `getLimitLines`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLimitLines:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b7fc8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L2b7fcc.  return v0 @kind object;
}
procedure `java.lang.String` `getLongestLabel`(`com.github.mikephil.charting.components.AxisBase` v5 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getLongestLabel:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b7fe0.  v1:= "" @kind object;
  #L2b7fe4.  v0:= 0I;
  #L2b7fe6.  v3:= v5.`com.github.mikephil.charting.components.AxisBase.mEntries` @type ^`float`[] @kind object;
  #L2b7fea.  v3:= length @variable v3;
  #L2b7fec.  if v0 >= v3 then goto L2b8018;
  #L2b7ff0.  call temp:= `getFormattedLabel`(v5, v0) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getFormattedLabel:(I)Ljava/lang/String;` @kind virtual;
  #L2b7ff6.  v2:= temp @kind object;
  #L2b7ff8.  if v2 == 0 then goto L2b8012;
  #L2b7ffc.  call temp:= `length`(v1) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b8002.  v3:= temp;
  #L2b8004.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2b800a.  v4:= temp;
  #L2b800c.  if v3 >= v4 then goto L2b8012;
  #L2b8010.  v1:= v2 @kind object;
  #L2b8012.  v0:= v0 + 1;
  #L2b8016.  goto L2b7fe6;
  #L2b8018.  return v1 @kind object;
}
procedure `com.github.mikephil.charting.formatter.AxisValueFormatter` `getValueFormatter`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.getValueFormatter:()Lcom/github/mikephil/charting/formatter/AxisValueFormatter;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b802c.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` @kind object;
  #L2b8030.  if v0 != 0 then goto L2b804c;
  #L2b8034.  v0:= new `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`;
  #L2b8038.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L2b803c.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @kind direct;
  #L2b8042.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` := v0 @kind object;
  #L2b8046.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` @kind object;
  #L2b804a.  return v0 @kind object;
  #L2b804c.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` @kind object;
  #L2b8050.  call temp:= `getDecimalDigits`(v0) @signature `Lcom/github/mikephil/charting/formatter/AxisValueFormatter;.getDecimalDigits:()I` @kind interface;
  #L2b8056.  v0:= temp;
  #L2b8058.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L2b805c.  if v0 == v1 then goto L2b8046;
  #L2b8060.  v0:= v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` @kind object;
  #L2b8064.  v0:= instanceof @variable v0 @type ^`com.github.mikephil.charting.formatter.DefaultAxisValueFormatter` @kind boolean;
  #L2b8068.  if v0 == 0 then goto L2b8046;
  #L2b806c.  v0:= new `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`;
  #L2b8070.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L2b8074.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @kind direct;
  #L2b807a.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` := v0 @kind object;
  #L2b807e.  goto L2b8046;
}
procedure `boolean` `isAxisMaxCustom`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isAxisMaxCustom:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8090.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L2b8094.  return v0;
}
procedure `boolean` `isAxisMinCustom`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isAxisMinCustom:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b80a8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L2b80ac.  return v0;
}
procedure `boolean` `isCenterAxisLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isCenterAxisLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b80c0.  v0:= 1I;
  #L2b80c2.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` @kind boolean;
  #L2b80c6.  if v1 == 0 then goto L2b80d4;
  #L2b80ca.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mEntryCount` @type ^`int`;
  #L2b80ce.  if v1 <= v0 then goto L2b80d4;
  #L2b80d2.  return v0;
  #L2b80d4.  v0:= 0I;
  #L2b80d6.  goto L2b80d2;
}
procedure `boolean` `isDrawAxisLineEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawAxisLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b80e8.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` @kind boolean;
  #L2b80ec.  return v0;
}
procedure `boolean` `isDrawGridLinesEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawGridLinesEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8100.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` @kind boolean;
  #L2b8104.  return v0;
}
procedure `boolean` `isDrawLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8118.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` @kind boolean;
  #L2b811c.  return v0;
}
procedure `boolean` `isDrawLimitLinesBehindDataEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isDrawLimitLinesBehindDataEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8130.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` @kind boolean;
  #L2b8134.  return v0;
}
procedure `boolean` `isForceLabelsEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isForceLabelsEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8148.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` @kind boolean;
  #L2b814c.  return v0;
}
procedure `boolean` `isGranularityEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isGranularityEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8160.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` @kind boolean;
  #L2b8164.  return v0;
}
procedure `boolean` `isGridDashedLineEnabled`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.isGridDashedLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8178.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mGridDashPathEffect` @type ^`android.graphics.DashPathEffect` @kind object;
  #L2b817c.  if v0 != 0 then goto L2b8184;
  #L2b8180.  v0:= 0I;
  #L2b8182.  return v0;
  #L2b8184.  v0:= 1I;
  #L2b8186.  goto L2b8182;
}
procedure `void` `removeAllLimitLines`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.removeAllLimitLines:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8198.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L2b819c.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L2b81a2.  return @kind void;
}
procedure `void` `removeLimitLine`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `com.github.mikephil.charting.components.LimitLine` v2 @kind object @name `l`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.removeLimitLine:(Lcom/github/mikephil/charting/components/LimitLine;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b81b4.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mLimitLines` @type ^`java.util.List` @kind object;
  #L2b81b8.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L2b81be.  return @kind void;
}
procedure `void` `resetAxisMaxValue`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.resetAxisMaxValue:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b81d0.  v0:= 0I;
  #L2b81d2.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v0 @kind boolean;
  #L2b81d6.  return @kind void;
}
procedure `void` `resetAxisMinValue`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/AxisBase;.resetAxisMinValue:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b81e8.  v0:= 0I;
  #L2b81ea.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v0 @kind boolean;
  #L2b81ee.  return @kind void;
}
procedure `void` `setAxisLineColor`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 @name `color`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisLineColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b8200.  v0.`com.github.mikephil.charting.components.AxisBase.mAxisLineColor` @type ^`int` := v1;
  #L2b8204.  return @kind void;
}
procedure `void` `setAxisLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 @name `width`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8218.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2b821e.  v0:= temp;
  #L2b8220.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisLineWidth` @type ^`float` := v0;
  #L2b8224.  return @kind void;
}
procedure `void` `setAxisMaxValue`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 @name `max`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMaxValue:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8238.  v0:= 1I;
  #L2b823a.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMax` @type ^`boolean` := v0 @kind boolean;
  #L2b823e.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float` := v2;
  #L2b8242.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float`;
  #L2b8246.  v0:= v2 - v0 @kind float;
  #L2b824a.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b8250.  v0:= temp;
  #L2b8252.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v0;
  #L2b8256.  return @kind void;
}
procedure `void` `setAxisMinValue`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 @name `min`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setAxisMinValue:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8268.  v0:= 1I;
  #L2b826a.  v1.`com.github.mikephil.charting.components.AxisBase.mCustomAxisMin` @type ^`boolean` := v0 @kind boolean;
  #L2b826e.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisMinimum` @type ^`float` := v2;
  #L2b8272.  v0:= v1.`com.github.mikephil.charting.components.AxisBase.mAxisMaximum` @type ^`float`;
  #L2b8276.  v0:= v0 - v2 @kind float;
  #L2b8278.  call temp:= `abs`(v0) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b827e.  v0:= temp;
  #L2b8280.  v1.`com.github.mikephil.charting.components.AxisBase.mAxisRange` @type ^`float` := v0;
  #L2b8284.  return @kind void;
}
procedure `void` `setCenterAxisLabels`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setCenterAxisLabels:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b8298.  v0.`com.github.mikephil.charting.components.AxisBase.mCenterAxisLabels` @type ^`boolean` := v1 @kind boolean;
  #L2b829c.  return @kind void;
}
procedure `void` `setDrawAxisLine`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawAxisLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b82b0.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawAxisLine` @type ^`boolean` := v1 @kind boolean;
  #L2b82b4.  return @kind void;
}
procedure `void` `setDrawGridLines`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawGridLines:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b82c8.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawGridLines` @type ^`boolean` := v1 @kind boolean;
  #L2b82cc.  return @kind void;
}
procedure `void` `setDrawLabels`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawLabels:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b82e0.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawLabels` @type ^`boolean` := v1 @kind boolean;
  #L2b82e4.  return @kind void;
}
procedure `void` `setDrawLimitLinesBehindData`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setDrawLimitLinesBehindData:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b82f8.  v0.`com.github.mikephil.charting.components.AxisBase.mDrawLimitLineBehindData` @type ^`boolean` := v1 @kind boolean;
  #L2b82fc.  return @kind void;
}
procedure `void` `setGranularity`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 @name `granularity`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGranularity:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b8310.  v1.`com.github.mikephil.charting.components.AxisBase.mGranularity` @type ^`float` := v2;
  #L2b8314.  v0:= 1I;
  #L2b8316.  v1.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v0 @kind boolean;
  #L2b831a.  return @kind void;
}
procedure `void` `setGranularityEnabled`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGranularityEnabled:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b832c.  v0.`com.github.mikephil.charting.components.AxisBase.mGranularityEnabled` @type ^`boolean` := v1 @kind boolean;
  #L2b8330.  return @kind void;
}
procedure `void` `setGridColor`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 @name `color`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGridColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b8344.  v0.`com.github.mikephil.charting.components.AxisBase.mGridColor` @type ^`int` := v1;
  #L2b8348.  return @kind void;
}
procedure `void` `setGridLineWidth`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `float` v2 @name `width`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setGridLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b835c.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2b8362.  v0:= temp;
  #L2b8364.  v1.`com.github.mikephil.charting.components.AxisBase.mGridLineWidth` @type ^`float` := v0;
  #L2b8368.  return @kind void;
}
procedure `void` `setLabelCount`(`com.github.mikephil.charting.components.AxisBase` v1 @kind this, `int` v2 @name `count`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b837c.  v0:= 25I;
  #L2b8380.  if v2 <= v0 then goto L2b8388;
  #L2b8384.  v2:= 25I;
  #L2b8388.  v0:= 2I;
  #L2b838a.  if v2 >= v0 then goto L2b8390;
  #L2b838e.  v2:= 2I;
  #L2b8390.  v1.`com.github.mikephil.charting.components.AxisBase.mLabelCount` @type ^`int` := v2;
  #L2b8394.  v0:= 0I;
  #L2b8396.  v1.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v0 @kind boolean;
  #L2b839a.  return @kind void;
}
procedure `void` `setLabelCount`(`com.github.mikephil.charting.components.AxisBase` v0 @kind this, `int` v1 @name `count`, `boolean` v2 @name `force`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(IZ)V` @AccessFlag PUBLIC {
    temp;

  #L2b83ac.  call `setLabelCount`(v0, v1) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setLabelCount:(I)V` @kind virtual;
  #L2b83b2.  v0.`com.github.mikephil.charting.components.AxisBase.mForceLabels` @type ^`boolean` := v2 @kind boolean;
  #L2b83b6.  return @kind void;
}
procedure `void` `setValueFormatter`(`com.github.mikephil.charting.components.AxisBase` v2 @kind this, `com.github.mikephil.charting.formatter.AxisValueFormatter` v3 @kind object @name `f`) @signature `Lcom/github/mikephil/charting/components/AxisBase;.setValueFormatter:(Lcom/github/mikephil/charting/formatter/AxisValueFormatter;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2b83c8.  if v3 != 0 then goto L2b83e0;
  #L2b83cc.  v0:= new `com.github.mikephil.charting.formatter.DefaultAxisValueFormatter`;
  #L2b83d0.  v1:= v2.`com.github.mikephil.charting.components.AxisBase.mDecimals` @type ^`int`;
  #L2b83d4.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultAxisValueFormatter;.<init>:(I)V` @kind direct;
  #L2b83da.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` := v0 @kind object;
  #L2b83de.  return @kind void;
  #L2b83e0.  v2.`com.github.mikephil.charting.components.AxisBase.mAxisValueFormatter` @type ^`com.github.mikephil.charting.formatter.AxisValueFormatter` := v3 @kind object;
  #L2b83e4.  goto L2b83de;
}
