record `com.github.mikephil.charting.components.YAxis` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.components.AxisBase` @kind class {
  `com.github.mikephil.charting.components.YAxis$AxisDependency` `com.github.mikephil.charting.components.YAxis.mAxisDependency` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.components.YAxis.mInverted` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mMaxWidth` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mMinWidth` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` `com.github.mikephil.charting.components.YAxis.mPosition` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.components.YAxis.mZeroLineColor` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.YAxis` v4 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b618.  v3:= 0I;
  #L32b61a.  v2:= 10.0F;
  #L32b61e.  v1:= 0I;
  #L32b620.  call `<init>`(v4) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @kind direct;
  #L32b626.  v0:= 1I;
  #L32b628.  v4.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L32b62c.  v4.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v3 @kind boolean;
  #L32b630.  v4.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v3 @kind boolean;
  #L32b634.  v0:= -7829368I;
  #L32b63a.  v4.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v0;
  #L32b63e.  v0:= 1.0F;
  #L32b642.  v4.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v0;
  #L32b646.  v4.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v2;
  #L32b64a.  v4.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v2;
  #L32b64e.  v0:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L32b652.  v4.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v0 @kind object;
  #L32b656.  v4.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v1;
  #L32b65a.  v0:= InfinityF;
  #L32b65e.  v4.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v0;
  #L32b662.  v0:= `@@com.github.mikephil.charting.components.YAxis$AxisDependency.LEFT` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L32b666.  v4.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v0 @kind object;
  #L32b66a.  v4.`com.github.mikephil.charting.components.YAxis.mYOffset` @type ^`float` := v1;
  #L32b66e.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.components.YAxis` v4 @kind this, `com.github.mikephil.charting.components.YAxis$AxisDependency` v5 @kind object @name `position`) @signature `Lcom/github/mikephil/charting/components/YAxis;.<init>:(Lcom/github/mikephil/charting/components/YAxis$AxisDependency;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b680.  v3:= 0I;
  #L32b682.  v2:= 10.0F;
  #L32b686.  v1:= 0I;
  #L32b688.  call `<init>`(v4) @signature `Lcom/github/mikephil/charting/components/AxisBase;.<init>:()V` @kind direct;
  #L32b68e.  v0:= 1I;
  #L32b690.  v4.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v0 @kind boolean;
  #L32b694.  v4.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v3 @kind boolean;
  #L32b698.  v4.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v3 @kind boolean;
  #L32b69c.  v0:= -7829368I;
  #L32b6a2.  v4.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v0;
  #L32b6a6.  v0:= 1.0F;
  #L32b6aa.  v4.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v0;
  #L32b6ae.  v4.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v2;
  #L32b6b2.  v4.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v2;
  #L32b6b6.  v0:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L32b6ba.  v4.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v0 @kind object;
  #L32b6be.  v4.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v1;
  #L32b6c2.  v0:= InfinityF;
  #L32b6c6.  v4.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v0;
  #L32b6ca.  v4.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` := v5 @kind object;
  #L32b6ce.  v4.`com.github.mikephil.charting.components.YAxis.mYOffset` @type ^`float` := v1;
  #L32b6d2.  return @kind void;
}
procedure `void` `calculate`(`com.github.mikephil.charting.components.YAxis` v8 @kind this, `float` v9 @name `dataMin`, `float` v10 @name `dataMax`) @signature `Lcom/github/mikephil/charting/components/YAxis;.calculate:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32b6e4.  v7:= 100.0F;
  #L32b6e8.  v6:= 1.0F;
  #L32b6ec.  v5:= v8.`com.github.mikephil.charting.components.YAxis.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L32b6f0.  if v5 == 0 then goto L32b776;
  #L32b6f4.  v2:= v8.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L32b6f8.  v5:= v8.`com.github.mikephil.charting.components.YAxis.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L32b6fc.  if v5 == 0 then goto L32b77a;
  #L32b700.  v1:= v8.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L32b704.  v5:= v1 - v2 @kind float;
  #L32b708.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32b70e.  v3:= temp;
  #L32b710.  v5:= 0I;
  #L32b712.  v5:= fcmpl(v3, v5);
  #L32b716.  if v5 != 0 then goto L32b71e;
  #L32b71a.  v1:= v1 + v6 @kind float;
  #L32b71c.  v2:= v2 - v6 @kind float;
  #L32b71e.  v5:= v8.`com.github.mikephil.charting.components.YAxis.mCustomAxisMin` @type ^`boolean` @kind boolean;
  #L32b722.  if v5 != 0 then goto L32b73e;
  #L32b726.  v5:= v3 / v7 @kind float;
  #L32b72a.  call temp:= `getSpaceBottom`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceBottom:()F` @kind virtual;
  #L32b730.  v6:= temp;
  #L32b732.  v0:= v5 * v6 @kind float;
  #L32b736.  v5:= v2 - v0 @kind float;
  #L32b73a.  v8.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float` := v5;
  #L32b73e.  v5:= v8.`com.github.mikephil.charting.components.YAxis.mCustomAxisMax` @type ^`boolean` @kind boolean;
  #L32b742.  if v5 != 0 then goto L32b75e;
  #L32b746.  v5:= v3 / v7 @kind float;
  #L32b74a.  call temp:= `getSpaceTop`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceTop:()F` @kind virtual;
  #L32b750.  v6:= temp;
  #L32b752.  v4:= v5 * v6 @kind float;
  #L32b756.  v5:= v1 + v4 @kind float;
  #L32b75a.  v8.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float` := v5;
  #L32b75e.  v5:= v8.`com.github.mikephil.charting.components.YAxis.mAxisMaximum` @type ^`float`;
  #L32b762.  v6:= v8.`com.github.mikephil.charting.components.YAxis.mAxisMinimum` @type ^`float`;
  #L32b766.  v5:= v5 - v6 @kind float;
  #L32b768.  call temp:= `abs`(v5) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L32b76e.  v5:= temp;
  #L32b770.  v8.`com.github.mikephil.charting.components.YAxis.mAxisRange` @type ^`float` := v5;
  #L32b774.  return @kind void;
  #L32b776.  v2:= v9;
  #L32b778.  goto L32b6f8;
  #L32b77a.  v1:= v10;
  #L32b77c.  goto L32b704;
}
procedure `com.github.mikephil.charting.components.YAxis$AxisDependency` `getAxisDependency`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getAxisDependency:()Lcom/github/mikephil/charting/components/YAxis$AxisDependency;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b790.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mAxisDependency` @type ^`com.github.mikephil.charting.components.YAxis$AxisDependency` @kind object;
  #L32b794.  return v0 @kind object;
}
procedure `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` `getLabelPosition`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLabelPosition:()Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7a8.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L32b7ac.  return v0 @kind object;
}
procedure `float` `getMaxWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMaxWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7c0.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float`;
  #L32b7c4.  return v0;
}
procedure `float` `getMinWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMinWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b7d8.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float`;
  #L32b7dc.  return v0;
}
procedure `float` `getRequiredHeightSpace`(`com.github.mikephil.charting.components.YAxis` v4 @kind this, `android.graphics.Paint` v5 @kind object @name `p`) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredHeightSpace:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L32b7f0.  v1:= v4.`com.github.mikephil.charting.components.YAxis.mTextSize` @type ^`float`;
  #L32b7f4.  call `setTextSize`(v5, v1) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L32b7fa.  call temp:= `getLongestLabel`(v4) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L32b800.  v0:= temp @kind object;
  #L32b802.  call temp:= `calcTextHeight`(v5, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextHeight:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L32b808.  v1:= temp;
  #L32b80a.  v1:= (`float`) v1 @kind i2f;
  #L32b80c.  call temp:= `getYOffset`(v4) @signature `Lcom/github/mikephil/charting/components/YAxis;.getYOffset:()F` @kind virtual;
  #L32b812.  v2:= temp;
  #L32b814.  v3:= 2.0F;
  #L32b818.  v2:= v2 * v3 @kind float;
  #L32b81a.  v1:= v1 + v2 @kind float;
  #L32b81c.  return v1;
}
procedure `float` `getRequiredWidthSpace`(`com.github.mikephil.charting.components.YAxis` v8 @kind this, `android.graphics.Paint` v9 @kind object @name `p`) @signature `Lcom/github/mikephil/charting/components/YAxis;.getRequiredWidthSpace:(Landroid/graphics/Paint;)F` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L32b830.  v7:= 0I;
  #L32b832.  v4:= v8.`com.github.mikephil.charting.components.YAxis.mTextSize` @type ^`float`;
  #L32b836.  call `setTextSize`(v9, v4) @signature `Landroid/graphics/Paint;.setTextSize:(F)V` @kind virtual;
  #L32b83c.  call temp:= `getLongestLabel`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLongestLabel:()Ljava/lang/String;` @kind virtual;
  #L32b842.  v0:= temp @kind object;
  #L32b844.  call temp:= `calcTextWidth`(v9, v0) @signature `Lcom/github/mikephil/charting/utils/Utils;.calcTextWidth:(Landroid/graphics/Paint;Ljava/lang/String;)I` @kind static;
  #L32b84a.  v4:= temp;
  #L32b84c.  v4:= (`float`) v4 @kind i2f;
  #L32b84e.  call temp:= `getXOffset`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getXOffset:()F` @kind virtual;
  #L32b854.  v5:= temp;
  #L32b856.  v6:= 2.0F;
  #L32b85a.  v5:= v5 * v6 @kind float;
  #L32b85c.  v3:= v4 + v5 @kind float;
  #L32b860.  call temp:= `getMinWidth`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMinWidth:()F` @kind virtual;
  #L32b866.  v2:= temp;
  #L32b868.  call temp:= `getMaxWidth`(v8) @signature `Lcom/github/mikephil/charting/components/YAxis;.getMaxWidth:()F` @kind virtual;
  #L32b86e.  v1:= temp;
  #L32b870.  v4:= fcmpl(v2, v7);
  #L32b874.  if v4 <= 0 then goto L32b880;
  #L32b878.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32b87e.  v2:= temp;
  #L32b880.  v4:= fcmpl(v1, v7);
  #L32b884.  if v4 <= 0 then goto L32b89c;
  #L32b888.  v4:= InfinityF;
  #L32b88c.  v4:= fcmpl(v1, v4);
  #L32b890.  if v4 == 0 then goto L32b89c;
  #L32b894.  call temp:= `convertDpToPixel`(v1) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32b89a.  v1:= temp;
  #L32b89c.  v4:= (`double`) v1 @kind f2d;
  #L32b89e.  v6:= 0L;
  #L32b8a2.  v4:= dcmpl(v4, v6);
  #L32b8a6.  if v4 <= 0 then goto L32b8bc;
  #L32b8aa.  call temp:= `min`(v3, v1) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L32b8b0.  v4:= temp;
  #L32b8b2.  call temp:= `max`(v2, v4) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L32b8b8.  v3:= temp;
  #L32b8ba.  return v3;
  #L32b8bc.  v1:= v3;
  #L32b8be.  goto L32b8aa;
}
procedure `float` `getSpaceBottom`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceBottom:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b8d0.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float`;
  #L32b8d4.  return v0;
}
procedure `float` `getSpaceTop`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getSpaceTop:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b8e8.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float`;
  #L32b8ec.  return v0;
}
procedure `int` `getZeroLineColor`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getZeroLineColor:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b900.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int`;
  #L32b904.  return v0;
}
procedure `float` `getZeroLineWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.getZeroLineWidth:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b918.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float`;
  #L32b91c.  return v0;
}
procedure `boolean` `isDrawTopYLabelEntryEnabled`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawTopYLabelEntryEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b930.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` @kind boolean;
  #L32b934.  return v0;
}
procedure `boolean` `isDrawZeroLineEnabled`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawZeroLineEnabled:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b948.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` @kind boolean;
  #L32b94c.  return v0;
}
procedure `boolean` `isInverted`(`com.github.mikephil.charting.components.YAxis` v1 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.isInverted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32b960.  v0:= v1.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` @kind boolean;
  #L32b964.  return v0;
}
procedure `boolean` `needsOffset`(`com.github.mikephil.charting.components.YAxis` v2 @kind this) @signature `Lcom/github/mikephil/charting/components/YAxis;.needsOffset:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L32b978.  call temp:= `isEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.isEnabled:()Z` @kind virtual;
  #L32b97e.  v0:= temp;
  #L32b980.  if v0 == 0 then goto L32b9a4;
  #L32b984.  call temp:= `isDrawLabelsEnabled`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.isDrawLabelsEnabled:()Z` @kind virtual;
  #L32b98a.  v0:= temp;
  #L32b98c.  if v0 == 0 then goto L32b9a4;
  #L32b990.  call temp:= `getLabelPosition`(v2) @signature `Lcom/github/mikephil/charting/components/YAxis;.getLabelPosition:()Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;` @kind virtual;
  #L32b996.  v0:= temp @kind object;
  #L32b998.  v1:= `@@com.github.mikephil.charting.components.YAxis$YAxisLabelPosition.OUTSIDE_CHART` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` @kind object;
  #L32b99c.  if v0 != v1 then goto L32b9a4;
  #L32b9a0.  v0:= 1I;
  #L32b9a2.  return v0;
  #L32b9a4.  v0:= 0I;
  #L32b9a6.  goto L32b9a2;
}
procedure `void` `setDrawTopYLabelEntry`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setDrawTopYLabelEntry:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32b9b8.  v0.`com.github.mikephil.charting.components.YAxis.mDrawTopYLabelEntry` @type ^`boolean` := v1 @kind boolean;
  #L32b9bc.  return @kind void;
}
procedure `void` `setDrawZeroLine`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 @name `mDrawZeroLine`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setDrawZeroLine:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32b9d0.  v0.`com.github.mikephil.charting.components.YAxis.mDrawZeroLine` @type ^`boolean` := v1 @kind boolean;
  #L32b9d4.  return @kind void;
}
procedure `void` `setInverted`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `boolean` v1 @name `enabled`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setInverted:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L32b9e8.  v0.`com.github.mikephil.charting.components.YAxis.mInverted` @type ^`boolean` := v1 @kind boolean;
  #L32b9ec.  return @kind void;
}
procedure `void` `setMaxWidth`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 @name `maxWidth`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setMaxWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32ba00.  v0.`com.github.mikephil.charting.components.YAxis.mMaxWidth` @type ^`float` := v1;
  #L32ba04.  return @kind void;
}
procedure `void` `setMinWidth`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 @name `minWidth`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setMinWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32ba18.  v0.`com.github.mikephil.charting.components.YAxis.mMinWidth` @type ^`float` := v1;
  #L32ba1c.  return @kind void;
}
procedure `void` `setPosition`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` v1 @kind object @name `pos`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setPosition:(Lcom/github/mikephil/charting/components/YAxis$YAxisLabelPosition;)V` @AccessFlag PUBLIC {
    temp;

  #L32ba30.  v0.`com.github.mikephil.charting.components.YAxis.mPosition` @type ^`com.github.mikephil.charting.components.YAxis$YAxisLabelPosition` := v1 @kind object;
  #L32ba34.  return @kind void;
}
procedure `void` `setSpaceBottom`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 @name `percent`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setSpaceBottom:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32ba48.  v0.`com.github.mikephil.charting.components.YAxis.mSpacePercentBottom` @type ^`float` := v1;
  #L32ba4c.  return @kind void;
}
procedure `void` `setSpaceTop`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `float` v1 @name `percent`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setSpaceTop:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32ba60.  v0.`com.github.mikephil.charting.components.YAxis.mSpacePercentTop` @type ^`float` := v1;
  #L32ba64.  return @kind void;
}
procedure `void` `setStartAtZero`(`com.github.mikephil.charting.components.YAxis` v1 @kind this, `boolean` v2 @name `startAtZero`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setStartAtZero:(Z)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32ba78.  if v2 == 0 then goto L32ba86;
  #L32ba7c.  v0:= 0I;
  #L32ba7e.  call `setAxisMinValue`(v1, v0) @signature `Lcom/github/mikephil/charting/components/YAxis;.setAxisMinValue:(F)V` @kind virtual;
  #L32ba84.  return @kind void;
  #L32ba86.  call `resetAxisMinValue`(v1) @signature `Lcom/github/mikephil/charting/components/YAxis;.resetAxisMinValue:()V` @kind virtual;
  #L32ba8c.  goto L32ba84;
}
procedure `void` `setZeroLineColor`(`com.github.mikephil.charting.components.YAxis` v0 @kind this, `int` v1 @name `color`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setZeroLineColor:(I)V` @AccessFlag PUBLIC {
    temp;

  #L32baa0.  v0.`com.github.mikephil.charting.components.YAxis.mZeroLineColor` @type ^`int` := v1;
  #L32baa4.  return @kind void;
}
procedure `void` `setZeroLineWidth`(`com.github.mikephil.charting.components.YAxis` v1 @kind this, `float` v2 @name `width`) @signature `Lcom/github/mikephil/charting/components/YAxis;.setZeroLineWidth:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32bab8.  call temp:= `convertDpToPixel`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L32babe.  v0:= temp;
  #L32bac0.  v1.`com.github.mikephil.charting.components.YAxis.mZeroLineWidth` @type ^`float` := v0;
  #L32bac4.  return @kind void;
}
