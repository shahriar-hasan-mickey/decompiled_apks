record `com.github.mikephil.charting.jobs.AnimatedViewPortJob` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.jobs.ViewPortJob` @kind class, `android.animation.ValueAnimator$AnimatorUpdateListener` @kind interface, `android.animation.Animator$AnimatorListener` @kind interface {
  `android.animation.ObjectAnimator` `com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.jobs.AnimatedViewPortJob.phase` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.jobs.AnimatedViewPortJob.xOrigin` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.jobs.AnimatedViewPortJob.yOrigin` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v2 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v3 @kind object @name `viewPortHandler`, `float` v4 @name `xValue`, `float` v5 @name `yValue`, `com.github.mikephil.charting.utils.Transformer` v6 @kind object @name `trans`, `android.view.View` v7 @kind object @name `v`, `float` v8 @name `xOrigin`, `float` v9 @name `yOrigin`, `long` v10 @name `duration`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L32d8c8.  call `<init>`(v2, v3, v4, v5, v6, v7) @signature `Lcom/github/mikephil/charting/jobs/ViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @kind direct;
  #L32d8ce.  v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.xOrigin` @type ^`float` := v8;
  #L32d8d2.  v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.yOrigin` @type ^`float` := v9;
  #L32d8d6.  v0:= "phase" @kind object;
  #L32d8da.  v1:= 2I;
  #L32d8dc.  v1:= new `float`[v1];
  #L32d8e0.  goto L32d914;
  #L32d8e6.  call temp:= `ofFloat`(v2, v0, v1) @signature `Landroid/animation/ObjectAnimator;.ofFloat:(Ljava/lang/Object;Ljava/lang/String;[F)Landroid/animation/ObjectAnimator;` @kind static;
  #L32d8ec.  v0:= temp @kind object;
  #L32d8ee.  v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` := v0 @kind object;
  #L32d8f2.  v0:= v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32d8f6.  call temp:= `setDuration`(v0, v10) @signature `Landroid/animation/ObjectAnimator;.setDuration:(J)Landroid/animation/ObjectAnimator;` @kind virtual;
  #L32d8fc.  v0:= v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32d900.  call `addUpdateListener`(v0, v2) @signature `Landroid/animation/ObjectAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L32d906.  v0:= v2.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32d90a.  call `addListener`(v0, v2) @signature `Landroid/animation/ObjectAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L32d910.  return @kind void;
  #L32d912.  
  #L32d914.  v1:= (0I, 1065353216I) @kind object;
  #L32d923.  goto L32d8e6;
}
procedure `float` `getPhase`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.getPhase:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d934.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.phase` @type ^`float`;
  #L32d938.  return v0;
}
procedure `float` `getXOrigin`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.getXOrigin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d94c.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.xOrigin` @type ^`float`;
  #L32d950.  return v0;
}
procedure `float` `getYOrigin`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.getYOrigin:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d964.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.yOrigin` @type ^`float`;
  #L32d968.  return v0;
}
procedure `void` `onAnimationCancel`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this, `android.animation.Animator` v2 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.onAnimationCancel:(Landroid/animation/Animator;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d97c.  call `recycleSelf`(v1) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.recycleSelf:()V` @kind virtual;
  #L32d982.  return @kind void;
  #L32d984.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L32d986.  goto L32d982;
  catch `java.lang.IllegalArgumentException` @[L32d97c..L32d982] goto L32d984;
}
procedure `void` `onAnimationEnd`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this, `android.animation.Animator` v2 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.onAnimationEnd:(Landroid/animation/Animator;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32d9a8.  call `recycleSelf`(v1) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.recycleSelf:()V` @kind virtual;
  #L32d9ae.  return @kind void;
  #L32d9b0.  v0:= Exception @type ^`java.lang.IllegalArgumentException` @kind object;
  #L32d9b2.  goto L32d9ae;
  catch `java.lang.IllegalArgumentException` @[L32d9a8..L32d9ae] goto L32d9b0;
}
procedure `void` `onAnimationRepeat`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v0 @kind this, `android.animation.Animator` v1 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.onAnimationRepeat:(Landroid/animation/Animator;)V` @AccessFlag PUBLIC {
    temp;

  #L32d9d4.  return @kind void;
}
procedure `void` `onAnimationStart`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v0 @kind this, `android.animation.Animator` v1 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.onAnimationStart:(Landroid/animation/Animator;)V` @AccessFlag PUBLIC {
    temp;

  #L32d9e8.  return @kind void;
}
procedure `void` `onAnimationUpdate`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v0 @kind this, `android.animation.ValueAnimator` v1 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.onAnimationUpdate:(Landroid/animation/ValueAnimator;)V` @AccessFlag PUBLIC {
    temp;

  #L32d9fc.  return @kind void;
}
procedure `void` `recycleSelf`() @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.recycleSelf:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetAnimator`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.resetAnimator:()V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L32da10.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da14.  call `removeAllListeners`(v0) @signature `Landroid/animation/ObjectAnimator;.removeAllListeners:()V` @kind virtual;
  #L32da1a.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da1e.  call `removeAllUpdateListeners`(v0) @signature `Landroid/animation/ObjectAnimator;.removeAllUpdateListeners:()V` @kind virtual;
  #L32da24.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da28.  call `reverse`(v0) @signature `Landroid/animation/ObjectAnimator;.reverse:()V` @kind virtual;
  #L32da2e.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da32.  call `addUpdateListener`(v0, v1) @signature `Landroid/animation/ObjectAnimator;.addUpdateListener:(Landroid/animation/ValueAnimator$AnimatorUpdateListener;)V` @kind virtual;
  #L32da38.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da3c.  call `addListener`(v0, v1) @signature `Landroid/animation/ObjectAnimator;.addListener:(Landroid/animation/Animator$AnimatorListener;)V` @kind virtual;
  #L32da42.  return @kind void;
}
procedure `void` `run`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L32da54.  v0:= v1.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L32da58.  call `start`(v0) @signature `Landroid/animation/ObjectAnimator;.start:()V` @kind virtual;
  #L32da5e.  return @kind void;
}
procedure `void` `setPhase`(`com.github.mikephil.charting.jobs.AnimatedViewPortJob` v0 @kind this, `float` v1 @name `phase`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.setPhase:(F)V` @AccessFlag PUBLIC {
    temp;

  #L32da70.  v0.`com.github.mikephil.charting.jobs.AnimatedViewPortJob.phase` @type ^`float` := v1;
  #L32da74.  return @kind void;
}
