record `com.github.mikephil.charting.jobs.ViewPortJob` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.github.mikephil.charting.utils.ObjectPool$Poolable` @kind class, `java.lang.Runnable` @kind interface {
  `com.github.mikephil.charting.utils.Transformer` `com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.utils.ViewPortHandler` `com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @AccessFlag PROTECTED;
  `float`[] `com.github.mikephil.charting.jobs.ViewPortJob.pts` @AccessFlag PROTECTED;
  `android.view.View` `com.github.mikephil.charting.jobs.ViewPortJob.view` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.jobs.ViewPortJob.xValue` @AccessFlag PROTECTED;
  `float` `com.github.mikephil.charting.jobs.ViewPortJob.yValue` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.jobs.ViewPortJob` v2 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v3 @kind object @name `viewPortHandler`, `float` v4 @name `xValue`, `float` v5 @name `yValue`, `com.github.mikephil.charting.utils.Transformer` v6 @kind object @name `trans`, `android.view.View` v7 @kind object @name `v`) @signature `Lcom/github/mikephil/charting/jobs/ViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2bb4f0.  v1:= 0I;
  #L2bb4f2.  call `<init>`(v2) @signature `Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;.<init>:()V` @kind direct;
  #L2bb4f8.  v0:= 2I;
  #L2bb4fa.  v0:= new `float`[v0];
  #L2bb4fe.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.pts` @type ^`float`[] := v0 @kind object;
  #L2bb502.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float` := v1;
  #L2bb506.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float` := v1;
  #L2bb50a.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` := v3 @kind object;
  #L2bb50e.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float` := v4;
  #L2bb512.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float` := v5;
  #L2bb516.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` := v6 @kind object;
  #L2bb51a.  v2.`com.github.mikephil.charting.jobs.ViewPortJob.view` @type ^`android.view.View` := v7 @kind object;
  #L2bb51e.  return @kind void;
}
procedure `float` `getXValue`(`com.github.mikephil.charting.jobs.ViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/ViewPortJob;.getXValue:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bb530.  v0:= v1.`com.github.mikephil.charting.jobs.ViewPortJob.xValue` @type ^`float`;
  #L2bb534.  return v0;
}
procedure `float` `getYValue`(`com.github.mikephil.charting.jobs.ViewPortJob` v1 @kind this) @signature `Lcom/github/mikephil/charting/jobs/ViewPortJob;.getYValue:()F` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bb548.  v0:= v1.`com.github.mikephil.charting.jobs.ViewPortJob.yValue` @type ^`float`;
  #L2bb54c.  return v0;
}
