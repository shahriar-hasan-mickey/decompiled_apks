record `com.github.mikephil.charting.jobs.AnimatedMoveViewJob` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.jobs.AnimatedViewPortJob` @kind class {
}
global `com.github.mikephil.charting.utils.ObjectPool` `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L35d028.  v1:= 0I;
  #L35d02a.  v2:= 0I;
  #L35d02c.  v10:= 4I;
  #L35d02e.  v0:= new `com.github.mikephil.charting.jobs.AnimatedMoveViewJob`;
  #L35d032.  v8:= 0L;
  #L35d036.  v3:= v2;
  #L35d038.  v4:= v1 @kind object;
  #L35d03a.  v5:= v1 @kind object;
  #L35d03c.  v6:= v2;
  #L35d03e.  v7:= v2;
  #L35d040.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L35d046.  call temp:= `create`(v10, v0) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.create:(ILcom/github/mikephil/charting/utils/ObjectPool$Poolable;)Lcom/github/mikephil/charting/utils/ObjectPool;` @kind static;
  #L35d04c.  v0:= temp @kind object;
  #L35d04e.  `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` := v0 @kind object;
  #L35d052.  v0:= `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L35d056.  v1:= 0.5F;
  #L35d05a.  call `setReplenishPercentage`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.setReplenishPercentage:(F)V` @kind virtual;
  #L35d060.  return @kind void;
}
procedure `void` `<init>`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v0 @kind this, `com.github.mikephil.charting.utils.ViewPortHandler` v1 @kind object @name `viewPortHandler`, `float` v2 @name `xValue`, `float` v3 @name `yValue`, `com.github.mikephil.charting.utils.Transformer` v4 @kind object @name `trans`, `android.view.View` v5 @kind object @name `v`, `float` v6 @name `xOrigin`, `float` v7 @name `yOrigin`, `long` v8 @name `duration`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L35d074.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedViewPortJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L35d07a.  return @kind void;
}
procedure `com.github.mikephil.charting.jobs.AnimatedMoveViewJob` `getInstance`(`com.github.mikephil.charting.utils.ViewPortHandler` v3 @kind object @name `viewPortHandler`, `float` v4 @name `xValue`, `float` v5 @name `yValue`, `com.github.mikephil.charting.utils.Transformer` v6 @kind object @name `trans`, `android.view.View` v7 @kind object @name `v`, `float` v8 @name `xOrigin`, `float` v9 @name `yOrigin`, `long` v10 @name `duration`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.getInstance:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L35d08c.  v1:= `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L35d090.  call temp:= `get`(v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.get:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @kind virtual;
  #L35d096.  v0:= temp @kind object;
  #L35d098.  v0:= (`com.github.mikephil.charting.jobs.AnimatedMoveViewJob`) v0 @kind object;
  #L35d09c.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` := v3 @kind object;
  #L35d0a0.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.xValue` @type ^`float` := v4;
  #L35d0a4.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.yValue` @type ^`float` := v5;
  #L35d0a8.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` := v6 @kind object;
  #L35d0ac.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.view` @type ^`android.view.View` := v7 @kind object;
  #L35d0b0.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.xOrigin` @type ^`float` := v8;
  #L35d0b4.  v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.yOrigin` @type ^`float` := v9;
  #L35d0b8.  call `resetAnimator`(v0) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.resetAnimator:()V` @kind virtual;
  #L35d0be.  v1:= v0.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.animator` @type ^`android.animation.ObjectAnimator` @kind object;
  #L35d0c2.  call temp:= `setDuration`(v1, v10) @signature `Landroid/animation/ObjectAnimator;.setDuration:(J)Landroid/animation/ObjectAnimator;` @kind virtual;
  #L35d0c8.  return v0 @kind object;
}
procedure `void` `recycleInstance`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v1 @kind object @name `instance`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L35d0dc.  v0:= `@@com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pool` @type ^`com.github.mikephil.charting.utils.ObjectPool` @kind object;
  #L35d0e0.  call `recycle`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/ObjectPool;.recycle:(Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;)V` @kind virtual;
  #L35d0e6.  return @kind void;
}
procedure `com.github.mikephil.charting.utils.ObjectPool$Poolable` `instantiate`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v10 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.instantiate:()Lcom/github/mikephil/charting/utils/ObjectPool$Poolable;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35d0f8.  v1:= 0I;
  #L35d0fa.  v2:= 0I;
  #L35d0fc.  v0:= new `com.github.mikephil.charting.jobs.AnimatedMoveViewJob`;
  #L35d100.  v8:= 0L;
  #L35d104.  v3:= v2;
  #L35d106.  v4:= v1 @kind object;
  #L35d108.  v5:= v1 @kind object;
  #L35d10a.  v6:= v2;
  #L35d10c.  v7:= v2;
  #L35d10e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.<init>:(Lcom/github/mikephil/charting/utils/ViewPortHandler;FFLcom/github/mikephil/charting/utils/Transformer;Landroid/view/View;FFJ)V` @kind direct;
  #L35d114.  return v0 @kind object;
}
procedure `void` `onAnimationUpdate`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v5 @kind this, `android.animation.ValueAnimator` v6 @kind object @name `animation`) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.onAnimationUpdate:(Landroid/animation/ValueAnimator;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L35d128.  v0:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pts` @type ^`float`[] @kind object;
  #L35d12c.  v1:= 0I;
  #L35d12e.  v2:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.xOrigin` @type ^`float`;
  #L35d132.  v3:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.xValue` @type ^`float`;
  #L35d136.  v4:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.xOrigin` @type ^`float`;
  #L35d13a.  v3:= v3 - v4 @kind float;
  #L35d13c.  v4:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.phase` @type ^`float`;
  #L35d140.  v3:= v3 * v4 @kind float;
  #L35d142.  v2:= v2 + v3 @kind float;
  #L35d144.  v0[v1]:= v2;
  #L35d148.  v0:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pts` @type ^`float`[] @kind object;
  #L35d14c.  v1:= 1I;
  #L35d14e.  v2:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.yOrigin` @type ^`float`;
  #L35d152.  v3:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.yValue` @type ^`float`;
  #L35d156.  v4:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.yOrigin` @type ^`float`;
  #L35d15a.  v3:= v3 - v4 @kind float;
  #L35d15c.  v4:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.phase` @type ^`float`;
  #L35d160.  v3:= v3 * v4 @kind float;
  #L35d162.  v2:= v2 + v3 @kind float;
  #L35d164.  v0[v1]:= v2;
  #L35d168.  v0:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.mTrans` @type ^`com.github.mikephil.charting.utils.Transformer` @kind object;
  #L35d16c.  v1:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pts` @type ^`float`[] @kind object;
  #L35d170.  call `pointValuesToPixel`(v0, v1) @signature `Lcom/github/mikephil/charting/utils/Transformer;.pointValuesToPixel:([F)V` @kind virtual;
  #L35d176.  v0:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.mViewPortHandler` @type ^`com.github.mikephil.charting.utils.ViewPortHandler` @kind object;
  #L35d17a.  v1:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.pts` @type ^`float`[] @kind object;
  #L35d17e.  v2:= v5.`com.github.mikephil.charting.jobs.AnimatedMoveViewJob.view` @type ^`android.view.View` @kind object;
  #L35d182.  call `centerViewPort`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/utils/ViewPortHandler;.centerViewPort:([FLandroid/view/View;)V` @kind virtual;
  #L35d188.  return @kind void;
}
procedure `void` `recycleSelf`(`com.github.mikephil.charting.jobs.AnimatedMoveViewJob` v0 @kind this) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleSelf:()V` @AccessFlag PUBLIC {
    temp;

  #L35d19c.  call `recycleInstance`(v0) @signature `Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;.recycleInstance:(Lcom/github/mikephil/charting/jobs/AnimatedMoveViewJob;)V` @kind static;
  #L35d1a2.  return @kind void;
}
