record `com.github.mikephil.charting.buffer.BarBuffer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.buffer.AbstractBuffer` @kind class {
  `float` `com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @AccessFlag PROTECTED;
  `boolean` `com.github.mikephil.charting.buffer.BarBuffer.mInverted` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.buffer.BarBuffer` v2 @kind this, `int` v3 @name `size`, `int` v4 @name `dataSetCount`, `boolean` v5 @name `containsStacks`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.<init>:(IIZ)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L2b5f74.  v1:= 0I;
  #L2b5f76.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/buffer/AbstractBuffer;.<init>:(I)V` @kind direct;
  #L2b5f7c.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @type ^`int` := v1;
  #L2b5f80.  v0:= 1I;
  #L2b5f82.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @type ^`int` := v0;
  #L2b5f86.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` := v1 @kind boolean;
  #L2b5f8a.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` := v1 @kind boolean;
  #L2b5f8e.  v0:= 1.0F;
  #L2b5f92.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float` := v0;
  #L2b5f96.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetCount` @type ^`int` := v4;
  #L2b5f9a.  v2.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` := v5 @kind boolean;
  #L2b5f9e.  return @kind void;
}
procedure `void` `addBar`(`com.github.mikephil.charting.buffer.BarBuffer` v3 @kind this, `float` v4 @name `left`, `float` v5 @name `top`, `float` v6 @name `right`, `float` v7 @name `bottom`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2b5fb0.  v0:= v3.`com.github.mikephil.charting.buffer.BarBuffer.buffer` @type ^`float`[] @kind object;
  #L2b5fb4.  v1:= v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int`;
  #L2b5fb8.  v2:= v1 + 1;
  #L2b5fbc.  v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int` := v2;
  #L2b5fc0.  v0[v1]:= v4;
  #L2b5fc4.  v0:= v3.`com.github.mikephil.charting.buffer.BarBuffer.buffer` @type ^`float`[] @kind object;
  #L2b5fc8.  v1:= v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int`;
  #L2b5fcc.  v2:= v1 + 1;
  #L2b5fd0.  v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int` := v2;
  #L2b5fd4.  v0[v1]:= v5;
  #L2b5fd8.  v0:= v3.`com.github.mikephil.charting.buffer.BarBuffer.buffer` @type ^`float`[] @kind object;
  #L2b5fdc.  v1:= v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int`;
  #L2b5fe0.  v2:= v1 + 1;
  #L2b5fe4.  v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int` := v2;
  #L2b5fe8.  v0[v1]:= v6;
  #L2b5fec.  v0:= v3.`com.github.mikephil.charting.buffer.BarBuffer.buffer` @type ^`float`[] @kind object;
  #L2b5ff0.  v1:= v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int`;
  #L2b5ff4.  v2:= v1 + 1;
  #L2b5ff8.  v3.`com.github.mikephil.charting.buffer.BarBuffer.index` @type ^`int` := v2;
  #L2b5ffc.  v0[v1]:= v7;
  #L2b6000.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.BarBuffer` v19 @kind this, `com.github.mikephil.charting.interfaces.datasets.IBarDataSet` v20 @kind object @name `data`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;

  #L2b6014.  call temp:= `getEntryCount`(v20) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;.getEntryCount:()I` @kind interface;
  #L2b601a.  v17:= temp;
  #L2b601c.  v0:= v17;
  #L2b6020.  v0:= (`float`) v0 @kind i2f;
  #L2b6022.  v17:= v0;
  #L2b6026.  v0:= v19 @kind object;
  #L2b602a.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.phaseX` @type ^`float`;
  #L2b602e.  v18:= v0;
  #L2b6032.  v10:= v17 * v18 @kind float;
  #L2b6036.  v0:= v19 @kind object;
  #L2b603a.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float`;
  #L2b603e.  v17:= v0;
  #L2b6042.  v18:= 2.0F;
  #L2b6046.  v1:= v17 / v18 @kind float;
  #L2b604a.  v4:= 0I;
  #L2b604c.  v0:= (`float`) v4 @kind i2f;
  #L2b604e.  v17:= v0;
  #L2b6052.  v17:= fcmpg(v17, v10);
  #L2b6056.  if v17 >= 0 then goto L2b6220;
  #L2b605a.  v0:= v20 @kind object;
  #L2b605e.  call temp:= `getEntryForIndex`(v0, v4) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L2b6064.  v3:= temp @kind object;
  #L2b6066.  v3:= (`com.github.mikephil.charting.data.BarEntry`) v3 @kind object;
  #L2b606a.  if v3 != 0 then goto L2b6074;
  #L2b606e.  v4:= v4 + 1;
  #L2b6072.  goto L2b604c;
  #L2b6074.  call temp:= `getX`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getX:()F` @kind virtual;
  #L2b607a.  v14:= temp;
  #L2b607c.  call temp:= `getY`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L2b6082.  v15:= temp;
  #L2b6084.  call temp:= `getYVals`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L2b608a.  v12:= temp @kind object;
  #L2b608c.  v0:= v19 @kind object;
  #L2b6090.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mContainsStacks` @type ^`boolean` @kind boolean;
  #L2b6094.  v17:= v0;
  #L2b6098.  if v17 == 0 then goto L2b60a0;
  #L2b609c.  if v12 != 0 then goto L2b613c;
  #L2b60a0.  v6:= v14 - v1 @kind float;
  #L2b60a4.  v9:= v14 + v1 @kind float;
  #L2b60a8.  v0:= v19 @kind object;
  #L2b60ac.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L2b60b0.  v17:= v0;
  #L2b60b4.  if v17 == 0 then goto L2b6104;
  #L2b60b8.  v17:= 0I;
  #L2b60bc.  v17:= fcmpl(v15, v17);
  #L2b60c0.  if v17 < 0 then goto L2b60fc;
  #L2b60c4.  v2:= v15;
  #L2b60c6.  v17:= 0I;
  #L2b60ca.  v17:= fcmpg(v15, v17);
  #L2b60ce.  if v17 > 0 then goto L2b6100;
  #L2b60d2.  v11:= v15;
  #L2b60d4.  v17:= 0I;
  #L2b60d8.  v17:= fcmpl(v11, v17);
  #L2b60dc.  if v17 <= 0 then goto L2b612a;
  #L2b60e0.  v0:= v19 @kind object;
  #L2b60e4.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.phaseY` @type ^`float`;
  #L2b60e8.  v17:= v0;
  #L2b60ec.  v11:= v11 * v17 @kind float;
  #L2b60f0.  v0:= v19 @kind object;
  #L2b60f4.  call `addBar`(v0, v6, v11, v9, v2) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L2b60fa.  goto L2b606e;
  #L2b60fc.  v2:= 0I;
  #L2b60fe.  goto L2b60c6;
  #L2b6100.  v11:= 0I;
  #L2b6102.  goto L2b60d4;
  #L2b6104.  v17:= 0I;
  #L2b6108.  v17:= fcmpl(v15, v17);
  #L2b610c.  if v17 < 0 then goto L2b6122;
  #L2b6110.  v11:= v15;
  #L2b6112.  v17:= 0I;
  #L2b6116.  v17:= fcmpg(v15, v17);
  #L2b611a.  if v17 > 0 then goto L2b6126;
  #L2b611e.  v2:= v15;
  #L2b6120.  goto L2b60d4;
  #L2b6122.  v11:= 0I;
  #L2b6124.  goto L2b6112;
  #L2b6126.  v2:= 0I;
  #L2b6128.  goto L2b6120;
  #L2b612a.  v0:= v19 @kind object;
  #L2b612e.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.phaseY` @type ^`float`;
  #L2b6132.  v17:= v0;
  #L2b6136.  v2:= v2 * v17 @kind float;
  #L2b613a.  goto L2b60f0;
  #L2b613c.  v8:= 0I;
  #L2b613e.  call temp:= `getNegativeSum`(v3) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getNegativeSum:()F` @kind virtual;
  #L2b6144.  v17:= temp;
  #L2b6146.  v0:= v17;
  #L2b614a.  v7:= -v0 @kind float;
  #L2b614c.  v16:= 0I;
  #L2b6150.  v5:= 0I;
  #L2b6152.  v0:= length @variable v12;
  #L2b6154.  v17:= v0;
  #L2b6158.  v0:= v17;
  #L2b615c.  if v5 >= v0 then goto L2b606e;
  #L2b6160.  v13:= v12[v5];
  #L2b6164.  v17:= 0I;
  #L2b6168.  v17:= fcmpl(v13, v17);
  #L2b616c.  if v17 < 0 then goto L2b61d6;
  #L2b6170.  v15:= v8;
  #L2b6172.  v16:= v8 + v13 @kind float;
  #L2b6176.  v8:= v16;
  #L2b617a.  v6:= v14 - v1 @kind float;
  #L2b617e.  v9:= v14 + v1 @kind float;
  #L2b6182.  v0:= v19 @kind object;
  #L2b6186.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` @kind boolean;
  #L2b618a.  v17:= v0;
  #L2b618e.  if v17 == 0 then goto L2b61fe;
  #L2b6192.  v17:= fcmpl(v15, v16);
  #L2b6196.  if v17 < 0 then goto L2b61f2;
  #L2b619a.  v2:= v15;
  #L2b619c.  v17:= fcmpg(v15, v16);
  #L2b61a0.  if v17 > 0 then goto L2b61f8;
  #L2b61a4.  v11:= v15;
  #L2b61a6.  v0:= v19 @kind object;
  #L2b61aa.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.phaseY` @type ^`float`;
  #L2b61ae.  v17:= v0;
  #L2b61b2.  v11:= v11 * v17 @kind float;
  #L2b61b6.  v0:= v19 @kind object;
  #L2b61ba.  v0:= v0.`com.github.mikephil.charting.buffer.BarBuffer.phaseY` @type ^`float`;
  #L2b61be.  v17:= v0;
  #L2b61c2.  v2:= v2 * v17 @kind float;
  #L2b61c6.  v0:= v19 @kind object;
  #L2b61ca.  call `addBar`(v0, v6, v11, v9, v2) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.addBar:(FFFF)V` @kind virtual;
  #L2b61d0.  v5:= v5 + 1;
  #L2b61d4.  goto L2b6152;
  #L2b61d6.  v15:= v7;
  #L2b61d8.  call temp:= `abs`(v13) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b61de.  v17:= temp;
  #L2b61e0.  v16:= v7 + v17 @kind float;
  #L2b61e4.  call temp:= `abs`(v13) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2b61ea.  v17:= temp;
  #L2b61ec.  v7:= v7 + v17 @kind float;
  #L2b61f0.  goto L2b617a;
  #L2b61f2.  v2:= v16;
  #L2b61f6.  goto L2b619c;
  #L2b61f8.  v11:= v16;
  #L2b61fc.  goto L2b61a6;
  #L2b61fe.  v17:= fcmpl(v15, v16);
  #L2b6202.  if v17 < 0 then goto L2b6214;
  #L2b6206.  v11:= v15;
  #L2b6208.  v17:= fcmpg(v15, v16);
  #L2b620c.  if v17 > 0 then goto L2b621a;
  #L2b6210.  v2:= v15;
  #L2b6212.  goto L2b61a6;
  #L2b6214.  v11:= v16;
  #L2b6218.  goto L2b6208;
  #L2b621a.  v2:= v16;
  #L2b621e.  goto L2b6212;
  #L2b6220.  call `reset`(v19) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.reset:()V` @kind virtual;
  #L2b6226.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b6238.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IBarDataSet`) v1 @kind object;
  #L2b623c.  call `feed`(v0, v1) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IBarDataSet;)V` @kind virtual;
  #L2b6242.  return @kind void;
}
procedure `void` `setBarWidth`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `float` v1 @name `barWidth`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setBarWidth:(F)V` @AccessFlag PUBLIC {
    temp;

  #L2b6254.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mBarWidth` @type ^`float` := v1;
  #L2b6258.  return @kind void;
}
procedure `void` `setDataSet`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `int` v1 @name `index`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setDataSet:(I)V` @AccessFlag PUBLIC {
    temp;

  #L2b626c.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mDataSetIndex` @type ^`int` := v1;
  #L2b6270.  return @kind void;
}
procedure `void` `setInverted`(`com.github.mikephil.charting.buffer.BarBuffer` v0 @kind this, `boolean` v1 @name `inverted`) @signature `Lcom/github/mikephil/charting/buffer/BarBuffer;.setInverted:(Z)V` @AccessFlag PUBLIC {
    temp;

  #L2b6284.  v0.`com.github.mikephil.charting.buffer.BarBuffer.mInverted` @type ^`boolean` := v1 @kind boolean;
  #L2b6288.  return @kind void;
}
