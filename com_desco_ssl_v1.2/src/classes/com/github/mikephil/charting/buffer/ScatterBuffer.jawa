record `com.github.mikephil.charting.buffer.ScatterBuffer` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.buffer.AbstractBuffer` @kind class {
}
procedure `void` `<init>`(`com.github.mikephil.charting.buffer.ScatterBuffer` v0 @kind this, `int` v1 @name `size`) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2b629c.  call `<init>`(v0, v1) @signature `Lcom/github/mikephil/charting/buffer/AbstractBuffer;.<init>:(I)V` @kind direct;
  #L2b62a2.  return @kind void;
}
procedure `void` `addForm`(`com.github.mikephil.charting.buffer.ScatterBuffer` v3 @kind this, `float` v4 @name `x`, `float` v5 @name `y`) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.addForm:(FF)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L2b62b4.  v0:= v3.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2b62b8.  v1:= v3.`com.github.mikephil.charting.buffer.ScatterBuffer.index` @type ^`int`;
  #L2b62bc.  v2:= v1 + 1;
  #L2b62c0.  v3.`com.github.mikephil.charting.buffer.ScatterBuffer.index` @type ^`int` := v2;
  #L2b62c4.  v0[v1]:= v4;
  #L2b62c8.  v0:= v3.`com.github.mikephil.charting.buffer.ScatterBuffer.buffer` @type ^`float`[] @kind object;
  #L2b62cc.  v1:= v3.`com.github.mikephil.charting.buffer.ScatterBuffer.index` @type ^`int`;
  #L2b62d0.  v2:= v1 + 1;
  #L2b62d4.  v3.`com.github.mikephil.charting.buffer.ScatterBuffer.index` @type ^`int` := v2;
  #L2b62d8.  v0[v1]:= v5;
  #L2b62dc.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.ScatterBuffer` v6 @kind this, `com.github.mikephil.charting.interfaces.datasets.IScatterDataSet` v7 @kind object @name `data`) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b62f0.  call temp:= `getEntryCount`(v7) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;.getEntryCount:()I` @kind interface;
  #L2b62f6.  v3:= temp;
  #L2b62f8.  v3:= (`float`) v3 @kind i2f;
  #L2b62fa.  v4:= v6.`com.github.mikephil.charting.buffer.ScatterBuffer.phaseX` @type ^`float`;
  #L2b62fe.  v2:= v3 * v4 @kind float;
  #L2b6302.  v1:= 0I;
  #L2b6304.  v3:= (`float`) v1 @kind i2f;
  #L2b6306.  v3:= fcmpg(v3, v2);
  #L2b630a.  if v3 >= 0 then goto L2b6338;
  #L2b630e.  call temp:= `getEntryForIndex`(v7, v1) @signature `Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;.getEntryForIndex:(I)Lcom/github/mikephil/charting/data/Entry;` @kind interface;
  #L2b6314.  v0:= temp @kind object;
  #L2b6316.  call temp:= `getX`(v0) @signature `Lcom/github/mikephil/charting/data/Entry;.getX:()F` @kind virtual;
  #L2b631c.  v3:= temp;
  #L2b631e.  call temp:= `getY`(v0) @signature `Lcom/github/mikephil/charting/data/Entry;.getY:()F` @kind virtual;
  #L2b6324.  v4:= temp;
  #L2b6326.  v5:= v6.`com.github.mikephil.charting.buffer.ScatterBuffer.phaseY` @type ^`float`;
  #L2b632a.  v4:= v4 * v5 @kind float;
  #L2b632c.  call `addForm`(v6, v3, v4) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.addForm:(FF)V` @kind virtual;
  #L2b6332.  v1:= v1 + 1;
  #L2b6336.  goto L2b6304;
  #L2b6338.  call `reset`(v6) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.reset:()V` @kind virtual;
  #L2b633e.  return @kind void;
}
procedure `void` `feed`(`com.github.mikephil.charting.buffer.ScatterBuffer` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.feed:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L2b6350.  v1:= (`com.github.mikephil.charting.interfaces.datasets.IScatterDataSet`) v1 @kind object;
  #L2b6354.  call `feed`(v0, v1) @signature `Lcom/github/mikephil/charting/buffer/ScatterBuffer;.feed:(Lcom/github/mikephil/charting/interfaces/datasets/IScatterDataSet;)V` @kind virtual;
  #L2b635a.  return @kind void;
}
