record `com.github.mikephil.charting.formatter.FormattedStringCache$Generic` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.formatter.FormattedStringCache` @kind class {
  `java.util.HashMap` `com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedStringsHashMap` @AccessFlag PRIVATE;
  `java.util.HashMap` `com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` v1 @kind this, `java.text.Format` v2 @kind object @name `format`) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.<init>:(Ljava/text/Format;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2ba82c.  call `<init>`(v1, v2) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache;.<init>:(Ljava/text/Format;)V` @kind direct;
  #L2ba832.  v0:= new `java.util.HashMap`;
  #L2ba836.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2ba83c.  v1.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedStringsHashMap` @type ^`java.util.HashMap` := v0 @kind object;
  #L2ba840.  v0:= new `java.util.HashMap`;
  #L2ba844.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L2ba84a.  v1.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @type ^`java.util.HashMap` := v0 @kind object;
  #L2ba84e.  return @kind void;
}
procedure `java.lang.String` `getFormattedValue`(`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` v3 @kind this, `java.lang.Object` v4 @kind object, `java.lang.Object` v5 @kind object) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.getFormattedValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ba860.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba864.  call temp:= `containsKey`(v1, v5) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba86a.  v1:= temp;
  #L2ba86c.  if v1 != 0 then goto L2ba890;
  #L2ba870.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedStringsHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba874.  v2:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mFormat` @type ^`java.text.Format` @kind object;
  #L2ba878.  call temp:= `format`(v2, v4) @signature `Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L2ba87e.  v2:= temp @kind object;
  #L2ba880.  call temp:= `put`(v1, v5, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba886.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba88a.  call temp:= `put`(v1, v5, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba890.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba894.  call temp:= `get`(v1, v5) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba89a.  v1:= temp @kind object;
  #L2ba89c.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L2ba8a2.  v1:= temp;
  #L2ba8a4.  if v1 != 0 then goto L2ba8c8;
  #L2ba8a8.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedStringsHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba8ac.  v2:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mFormat` @type ^`java.text.Format` @kind object;
  #L2ba8b0.  call temp:= `format`(v2, v4) @signature `Ljava/text/Format;.format:(Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L2ba8b6.  v2:= temp @kind object;
  #L2ba8b8.  call temp:= `put`(v1, v5, v2) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba8be.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedValuesHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba8c2.  call temp:= `put`(v1, v5, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba8c8.  v1:= v3.`com.github.mikephil.charting.formatter.FormattedStringCache$Generic.mCachedStringsHashMap` @type ^`java.util.HashMap` @kind object;
  #L2ba8cc.  call temp:= `get`(v1, v5) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L2ba8d2.  v0:= temp @kind object;
  #L2ba8d4.  v0:= (`java.lang.String`) v0 @kind object;
  #L2ba8d8.  return v0 @kind object;
}
