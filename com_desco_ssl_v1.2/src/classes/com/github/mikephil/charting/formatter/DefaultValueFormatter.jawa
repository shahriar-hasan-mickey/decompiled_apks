record `com.github.mikephil.charting.formatter.DefaultValueFormatter` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.formatter.ValueFormatter` @kind interface {
  `int` `com.github.mikephil.charting.formatter.DefaultValueFormatter.mDecimalDigits` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.formatter.FormattedStringCache$Generic` `com.github.mikephil.charting.formatter.DefaultValueFormatter.mFormattedStringCache` @AccessFlag PROTECTED;
}
procedure `void` `<init>`(`com.github.mikephil.charting.formatter.DefaultValueFormatter` v0 @kind this, `int` v1 @name `digits`) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L2ba738.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2ba73e.  call `setup`(v0, v1) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.setup:(I)V` @kind virtual;
  #L2ba744.  return @kind void;
}
procedure `int` `getDecimalDigits`(`com.github.mikephil.charting.formatter.DefaultValueFormatter` v1 @kind this) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.getDecimalDigits:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2ba758.  v0:= v1.`com.github.mikephil.charting.formatter.DefaultValueFormatter.mDecimalDigits` @type ^`int`;
  #L2ba75c.  return v0;
}
procedure `java.lang.String` `getFormattedValue`(`com.github.mikephil.charting.formatter.DefaultValueFormatter` v3 @kind this, `float` v4 @name `value`, `com.github.mikephil.charting.data.Entry` v5 @kind object @name `entry`, `int` v6 @name `dataSetIndex`, `com.github.mikephil.charting.utils.ViewPortHandler` v7 @kind object @name `viewPortHandler`) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.getFormattedValue:(FLcom/github/mikephil/charting/data/Entry;ILcom/github/mikephil/charting/utils/ViewPortHandler;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2ba770.  v0:= v3.`com.github.mikephil.charting.formatter.DefaultValueFormatter.mFormattedStringCache` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` @kind object;
  #L2ba774.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2ba77a.  v1:= temp @kind object;
  #L2ba77c.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2ba782.  v2:= temp @kind object;
  #L2ba784.  call temp:= `getFormattedValue`(v0, v1, v2) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.getFormattedValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L2ba78a.  v0:= temp @kind object;
  #L2ba78c.  return v0 @kind object;
}
procedure `void` `setup`(`com.github.mikephil.charting.formatter.DefaultValueFormatter` v6 @kind this, `int` v7 @name `digits`) @signature `Lcom/github/mikephil/charting/formatter/DefaultValueFormatter;.setup:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2ba7a0.  v6.`com.github.mikephil.charting.formatter.DefaultValueFormatter.mDecimalDigits` @type ^`int` := v7;
  #L2ba7a4.  v0:= new `java.lang.StringBuffer`;
  #L2ba7a8.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L2ba7ae.  v1:= 0I;
  #L2ba7b0.  if v1 >= v7 then goto L2ba7d2;
  #L2ba7b4.  if v1 != 0 then goto L2ba7c2;
  #L2ba7b8.  v2:= "." @kind object;
  #L2ba7bc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L2ba7c2.  v2:= "0" @kind object;
  #L2ba7c6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L2ba7cc.  v1:= v1 + 1;
  #L2ba7d0.  goto L2ba7b0;
  #L2ba7d2.  v2:= new `com.github.mikephil.charting.formatter.FormattedStringCache$Generic`;
  #L2ba7d6.  v3:= new `java.text.DecimalFormat`;
  #L2ba7da.  v4:= new `java.lang.StringBuilder`;
  #L2ba7de.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2ba7e4.  v5:= "###,###,###,##0" @kind object;
  #L2ba7e8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7ee.  v4:= temp @kind object;
  #L2ba7f0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba7f6.  v5:= temp @kind object;
  #L2ba7f8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2ba7fe.  v4:= temp @kind object;
  #L2ba800.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2ba806.  v4:= temp @kind object;
  #L2ba808.  call `<init>`(v3, v4) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2ba80e.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.<init>:(Ljava/text/Format;)V` @kind direct;
  #L2ba814.  v6.`com.github.mikephil.charting.formatter.DefaultValueFormatter.mFormattedStringCache` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` := v2 @kind object;
  #L2ba818.  return @kind void;
}
