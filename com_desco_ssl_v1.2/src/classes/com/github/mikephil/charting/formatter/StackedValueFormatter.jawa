record `com.github.mikephil.charting.formatter.StackedValueFormatter` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.formatter.ValueFormatter` @kind interface {
  `java.lang.String` `com.github.mikephil.charting.formatter.StackedValueFormatter.mAppendix` @AccessFlag PRIVATE;
  `boolean` `com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @AccessFlag PRIVATE;
  `java.text.DecimalFormat` `com.github.mikephil.charting.formatter.StackedValueFormatter.mFormat` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.formatter.FormattedStringCache$Generic` `com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCache` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.formatter.FormattedStringCache$Generic` `com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCacheWholeStack` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.formatter.StackedValueFormatter` v6 @kind this, `boolean` v7 @name `drawWholeStack`, `java.lang.String` v8 @kind object @name `appendix`, `int` v9 @name `decimals`) @signature `Lcom/github/mikephil/charting/formatter/StackedValueFormatter;.<init>:(ZLjava/lang/String;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2baf84.  call `<init>`(v6) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2baf8a.  v6.`com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @type ^`boolean` := v7 @kind boolean;
  #L2baf8e.  v6.`com.github.mikephil.charting.formatter.StackedValueFormatter.mAppendix` @type ^`java.lang.String` := v8 @kind object;
  #L2baf92.  v0:= new `java.lang.StringBuffer`;
  #L2baf96.  call `<init>`(v0) @signature `Ljava/lang/StringBuffer;.<init>:()V` @kind direct;
  #L2baf9c.  v1:= 0I;
  #L2baf9e.  if v1 >= v9 then goto L2bafc0;
  #L2bafa2.  if v1 != 0 then goto L2bafb0;
  #L2bafa6.  v2:= "." @kind object;
  #L2bafaa.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L2bafb0.  v2:= "0" @kind object;
  #L2bafb4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuffer;.append:(Ljava/lang/String;)Ljava/lang/StringBuffer;` @kind virtual;
  #L2bafba.  v1:= v1 + 1;
  #L2bafbe.  goto L2baf9e;
  #L2bafc0.  v2:= new `com.github.mikephil.charting.formatter.FormattedStringCache$Generic`;
  #L2bafc4.  v3:= new `java.text.DecimalFormat`;
  #L2bafc8.  v4:= new `java.lang.StringBuilder`;
  #L2bafcc.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bafd2.  v5:= "###,###,###,##0" @kind object;
  #L2bafd6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bafdc.  v4:= temp @kind object;
  #L2bafde.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bafe4.  v5:= temp @kind object;
  #L2bafe6.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bafec.  v4:= temp @kind object;
  #L2bafee.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2baff4.  v4:= temp @kind object;
  #L2baff6.  call `<init>`(v3, v4) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2baffc.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.<init>:(Ljava/text/Format;)V` @kind direct;
  #L2bb002.  v6.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCache` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` := v2 @kind object;
  #L2bb006.  v2:= new `com.github.mikephil.charting.formatter.FormattedStringCache$Generic`;
  #L2bb00a.  v3:= new `java.text.DecimalFormat`;
  #L2bb00e.  v4:= new `java.lang.StringBuilder`;
  #L2bb012.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bb018.  v5:= "###,###,###,##0" @kind object;
  #L2bb01c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb022.  v4:= temp @kind object;
  #L2bb024.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuffer;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bb02a.  v5:= temp @kind object;
  #L2bb02c.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb032.  v4:= temp @kind object;
  #L2bb034.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bb03a.  v4:= temp @kind object;
  #L2bb03c.  call `<init>`(v3, v4) @signature `Ljava/text/DecimalFormat;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2bb042.  call `<init>`(v2, v3) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.<init>:(Ljava/text/Format;)V` @kind direct;
  #L2bb048.  v6.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCacheWholeStack` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` := v2 @kind object;
  #L2bb04c.  return @kind void;
}
procedure `java.lang.String` `getFormattedValue`(`com.github.mikephil.charting.formatter.StackedValueFormatter` v8 @kind this, `float` v9 @name `value`, `com.github.mikephil.charting.data.Entry` v10 @kind object @name `entry`, `int` v11 @name `dataSetIndex`, `com.github.mikephil.charting.utils.ViewPortHandler` v12 @kind object @name `viewPortHandler`) @signature `Lcom/github/mikephil/charting/formatter/StackedValueFormatter;.getFormattedValue:(FLcom/github/mikephil/charting/data/Entry;ILcom/github/mikephil/charting/utils/ViewPortHandler;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bb060.  v1:= v8.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCache` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` @kind object;
  #L2bb064.  v2:= v11;
  #L2bb066.  v3:= v9;
  #L2bb068.  v5:= v8.`com.github.mikephil.charting.formatter.StackedValueFormatter.mDrawWholeStack` @type ^`boolean` @kind boolean;
  #L2bb06c.  if v5 != 0 then goto L2bb0a8;
  #L2bb070.  v5:= instanceof @variable v10 @type ^`com.github.mikephil.charting.data.BarEntry` @kind boolean;
  #L2bb074.  if v5 == 0 then goto L2bb0a8;
  #L2bb078.  v0:= v10 @kind object;
  #L2bb07a.  v0:= (`com.github.mikephil.charting.data.BarEntry`) v0 @kind object;
  #L2bb07e.  call temp:= `getYVals`(v0) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getYVals:()[F` @kind virtual;
  #L2bb084.  v4:= temp @kind object;
  #L2bb086.  if v4 == 0 then goto L2bb0a8;
  #L2bb08a.  v5:= length @variable v4;
  #L2bb08c.  v5:= v5 + -1;
  #L2bb090.  v5:= v4[v5];
  #L2bb094.  v5:= fcmpl(v5, v9);
  #L2bb098.  if v5 != 0 then goto L2bb0b2;
  #L2bb09c.  v1:= v8.`com.github.mikephil.charting.formatter.StackedValueFormatter.mFormattedStringCacheWholeStack` @type ^`com.github.mikephil.charting.formatter.FormattedStringCache$Generic` @kind object;
  #L2bb0a0.  call temp:= `getY`(v0) @signature `Lcom/github/mikephil/charting/data/BarEntry;.getY:()F` @kind virtual;
  #L2bb0a6.  v3:= temp;
  #L2bb0a8.  if v1 != 0 then goto L2bb0b6;
  #L2bb0ac.  v5:= "" @kind object;
  #L2bb0b0.  return v5 @kind object;
  #L2bb0b2.  v1:= 0I;
  #L2bb0b4.  goto L2bb0a8;
  #L2bb0b6.  v5:= new `java.lang.StringBuilder`;
  #L2bb0ba.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L2bb0c0.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L2bb0c6.  v6:= temp @kind object;
  #L2bb0c8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2bb0ce.  v7:= temp @kind object;
  #L2bb0d0.  call temp:= `getFormattedValue`(v1, v6, v7) @signature `Lcom/github/mikephil/charting/formatter/FormattedStringCache$Generic;.getFormattedValue:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/String;` @kind virtual;
  #L2bb0d6.  v6:= temp @kind object;
  #L2bb0d8.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb0de.  v5:= temp @kind object;
  #L2bb0e0.  v6:= v8.`com.github.mikephil.charting.formatter.StackedValueFormatter.mAppendix` @type ^`java.lang.String` @kind object;
  #L2bb0e4.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2bb0ea.  v5:= temp @kind object;
  #L2bb0ec.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2bb0f2.  v5:= temp @kind object;
  #L2bb0f4.  goto L2bb0b0;
}
