record `com.github.mikephil.charting.listener.ChartTouchListener` @kind class @AccessFlag PUBLIC_ABSTRACT extends `android.view.GestureDetector$SimpleOnGestureListener` @kind class, `android.view.View$OnTouchListener` @kind interface {
  `com.github.mikephil.charting.charts.Chart` `com.github.mikephil.charting.listener.ChartTouchListener.mChart` @AccessFlag PROTECTED;
  `android.view.GestureDetector` `com.github.mikephil.charting.listener.ChartTouchListener.mGestureDetector` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` `com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @AccessFlag PROTECTED;
  `com.github.mikephil.charting.highlight.Highlight` `com.github.mikephil.charting.listener.ChartTouchListener.mLastHighlighted` @AccessFlag PROTECTED;
  `int` `com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @AccessFlag PROTECTED;
}
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.DRAG` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.NONE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.PINCH_ZOOM` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.POST_ZOOM` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.ROTATE` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.X_ZOOM` @AccessFlag PROTECTED_STATIC_FINAL;
global `int` `@@com.github.mikephil.charting.listener.ChartTouchListener.Y_ZOOM` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<init>`(`com.github.mikephil.charting.listener.ChartTouchListener` v2 @kind this, `com.github.mikephil.charting.charts.Chart` v3 @kind object) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/Chart;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1d8830.  call `<init>`(v2) @signature `Landroid/view/GestureDetector$SimpleOnGestureListener;.<init>:()V` @kind direct;
  #L1d8836.  v0:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.NONE` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L1d883a.  v2.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v0 @kind object;
  #L1d883e.  v0:= 0I;
  #L1d8840.  v2.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int` := v0;
  #L1d8844.  v2.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` := v3 @kind object;
  #L1d8848.  v0:= new `android.view.GestureDetector`;
  #L1d884c.  call temp:= `getContext`(v3) @signature `Lcom/github/mikephil/charting/charts/Chart;.getContext:()Landroid/content/Context;` @kind virtual;
  #L1d8852.  v1:= temp @kind object;
  #L1d8854.  call `<init>`(v0, v1, v2) @signature `Landroid/view/GestureDetector;.<init>:(Landroid/content/Context;Landroid/view/GestureDetector$OnGestureListener;)V` @kind direct;
  #L1d885a.  v2.`com.github.mikephil.charting.listener.ChartTouchListener.mGestureDetector` @type ^`android.view.GestureDetector` := v0 @kind object;
  #L1d885e.  return @kind void;
}
procedure `float` `distance`(`float` v4 @name `eventX`, `float` v5 @name `startX`, `float` v6 @name `eventY`, `float` v7 @name `startY`) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.distance:(FFFF)F` @AccessFlag PROTECTED_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1d8870.  v0:= v4 - v5 @kind float;
  #L1d8874.  v1:= v6 - v7 @kind float;
  #L1d8878.  v2:= v0 * v0 @kind float;
  #L1d887c.  v3:= v1 * v1 @kind float;
  #L1d8880.  v2:= v2 + v3 @kind float;
  #L1d8882.  v2:= (`double`) v2 @kind f2d;
  #L1d8884.  call temp:= `sqrt`(v2) @signature `Ljava/lang/Math;.sqrt:(D)D` @kind static;
  #L1d888a.  v2:= temp @kind wide;
  #L1d888c.  v2:= (`float`) v2 @kind d2f;
  #L1d888e.  return v2;
}
procedure `void` `endAction`(`com.github.mikephil.charting.listener.ChartTouchListener` v2 @kind this, `android.view.MotionEvent` v3 @kind object @name `me`) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.endAction:(Landroid/view/MotionEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d88a0.  v1:= v2.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L1d88a4.  call temp:= `getOnChartGestureListener`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L1d88aa.  v0:= temp @kind object;
  #L1d88ac.  if v0 == 0 then goto L1d88ba;
  #L1d88b0.  v1:= v2.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L1d88b4.  call `onChartGestureEnd`(v0, v3, v1) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartGestureEnd:(Landroid/view/MotionEvent;Lcom/github/mikephil/charting/listener/ChartTouchListener$ChartGesture;)V` @kind interface;
  #L1d88ba.  return @kind void;
}
procedure `com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` `getLastGesture`(`com.github.mikephil.charting.listener.ChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.getLastGesture:()Lcom/github/mikephil/charting/listener/ChartTouchListener$ChartGesture;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d88cc.  v0:= v1.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L1d88d0.  return v0 @kind object;
}
procedure `int` `getTouchMode`(`com.github.mikephil.charting.listener.ChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.getTouchMode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1d88e4.  v0:= v1.`com.github.mikephil.charting.listener.ChartTouchListener.mTouchMode` @type ^`int`;
  #L1d88e8.  return v0;
}
procedure `void` `performHighlight`(`com.github.mikephil.charting.listener.ChartTouchListener` v3 @kind this, `com.github.mikephil.charting.highlight.Highlight` v4 @kind object @name `h`, `android.view.MotionEvent` v5 @kind object @name `e`) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.performHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;Landroid/view/MotionEvent;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;

  #L1d88fc.  v2:= 0I;
  #L1d88fe.  v1:= 1I;
  #L1d8900.  if v4 == 0 then goto L1d8914;
  #L1d8904.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mLastHighlighted` @type ^`com.github.mikephil.charting.highlight.Highlight` @kind object;
  #L1d8908.  call temp:= `equalTo`(v4, v0) @signature `Lcom/github/mikephil/charting/highlight/Highlight;.equalTo:(Lcom/github/mikephil/charting/highlight/Highlight;)Z` @kind virtual;
  #L1d890e.  v0:= temp;
  #L1d8910.  if v0 == 0 then goto L1d8924;
  #L1d8914.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L1d8918.  call `highlightValue`(v0, v2, v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.highlightValue:(Lcom/github/mikephil/charting/highlight/Highlight;Z)V` @kind virtual;
  #L1d891e.  v3.`com.github.mikephil.charting.listener.ChartTouchListener.mLastHighlighted` @type ^`com.github.mikephil.charting.highlight.Highlight` := v2 @kind object;
  #L1d8922.  return @kind void;
  #L1d8924.  v0:= v3.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L1d8928.  call `highlightValue`(v0, v4, v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.highlightValue:(Lcom/github/mikephil/charting/highlight/Highlight;Z)V` @kind virtual;
  #L1d892e.  v3.`com.github.mikephil.charting.listener.ChartTouchListener.mLastHighlighted` @type ^`com.github.mikephil.charting.highlight.Highlight` := v4 @kind object;
  #L1d8932.  goto L1d8922;
}
procedure `void` `setLastHighlighted`(`com.github.mikephil.charting.listener.ChartTouchListener` v0 @kind this, `com.github.mikephil.charting.highlight.Highlight` v1 @kind object @name `high`) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.setLastHighlighted:(Lcom/github/mikephil/charting/highlight/Highlight;)V` @AccessFlag PUBLIC {
    temp;

  #L1d8944.  v0.`com.github.mikephil.charting.listener.ChartTouchListener.mLastHighlighted` @type ^`com.github.mikephil.charting.highlight.Highlight` := v1 @kind object;
  #L1d8948.  return @kind void;
}
procedure `void` `startAction`(`com.github.mikephil.charting.listener.ChartTouchListener` v2 @kind this, `android.view.MotionEvent` v3 @kind object @name `me`) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.startAction:(Landroid/view/MotionEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1d895c.  v1:= v2.`com.github.mikephil.charting.listener.ChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L1d8960.  call temp:= `getOnChartGestureListener`(v1) @signature `Lcom/github/mikephil/charting/charts/Chart;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L1d8966.  v0:= temp @kind object;
  #L1d8968.  if v0 == 0 then goto L1d8976;
  #L1d896c.  v1:= v2.`com.github.mikephil.charting.listener.ChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L1d8970.  call `onChartGestureStart`(v0, v3, v1) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartGestureStart:(Landroid/view/MotionEvent;Lcom/github/mikephil/charting/listener/ChartTouchListener$ChartGesture;)V` @kind interface;
  #L1d8976.  return @kind void;
}
