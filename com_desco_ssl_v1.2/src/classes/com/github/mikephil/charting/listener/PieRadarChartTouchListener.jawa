record `com.github.mikephil.charting.listener.PieRadarChartTouchListener` @kind class @AccessFlag PUBLIC extends `com.github.mikephil.charting.listener.ChartTouchListener` @kind class {
  `java.util.ArrayList` `com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @AccessFlag PRIVATE;
  `long` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @AccessFlag PRIVATE;
  `float` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @AccessFlag PRIVATE;
  `com.github.mikephil.charting.utils.MPPointF` `com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v3 @kind this, `com.github.mikephil.charting.charts.PieRadarChartBase` v4 @kind object) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/PieRadarChartBase;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L2bc4cc.  v2:= 0I;
  #L2bc4ce.  call `<init>`(v3, v4) @signature `Lcom/github/mikephil/charting/listener/ChartTouchListener;.<init>:(Lcom/github/mikephil/charting/charts/Chart;)V` @kind direct;
  #L2bc4d4.  call temp:= `getInstance`(v2, v2) @signature `Lcom/github/mikephil/charting/utils/MPPointF;.getInstance:(FF)Lcom/github/mikephil/charting/utils/MPPointF;` @kind static;
  #L2bc4da.  v0:= temp @kind object;
  #L2bc4dc.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` := v0 @kind object;
  #L2bc4e0.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float` := v2;
  #L2bc4e4.  v0:= new `java.util.ArrayList`;
  #L2bc4e8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L2bc4ee.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` := v0 @kind object;
  #L2bc4f2.  v0:= 0L;
  #L2bc4f6.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v0 @kind wide;
  #L2bc4fa.  v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v2;
  #L2bc4fe.  return @kind void;
}
procedure `float` `calculateVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v12 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.calculateVelocity:()F` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2bc510.  v7:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc514.  call temp:= `isEmpty`(v7) @signature `Ljava/util/ArrayList;.isEmpty:()Z` @kind virtual;
  #L2bc51a.  v7:= temp;
  #L2bc51c.  if v7 == 0 then goto L2bc524;
  #L2bc520.  v6:= 0I;
  #L2bc522.  return v6;
  #L2bc524.  v7:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc528.  v8:= 0I;
  #L2bc52a.  call temp:= `get`(v7, v8) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2bc530.  v2:= temp @kind object;
  #L2bc532.  v2:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v2 @kind object;
  #L2bc536.  v7:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc53a.  v8:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc53e.  call temp:= `size`(v8) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2bc544.  v8:= temp;
  #L2bc546.  v8:= v8 + -1;
  #L2bc54a.  call temp:= `get`(v7, v8) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2bc550.  v4:= temp @kind object;
  #L2bc552.  v4:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v4 @kind object;
  #L2bc556.  v0:= v2 @kind object;
  #L2bc558.  v7:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc55c.  call temp:= `size`(v7) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2bc562.  v7:= temp;
  #L2bc564.  v3:= v7 + -1;
  #L2bc568.  if v3 < 0 then goto L2bc58c;
  #L2bc56c.  v7:= v12.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc570.  call temp:= `get`(v7, v3) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2bc576.  v0:= temp @kind object;
  #L2bc578.  v0:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v0 @kind object;
  #L2bc57c.  v7:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc580.  v8:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc584.  v7:= fcmpl(v7, v8);
  #L2bc588.  if v7 == 0 then goto L2bc642;
  #L2bc58c.  v8:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L2bc590.  v10:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L2bc594.  v8:= v8 - v10 @kind long;
  #L2bc596.  v7:= (`float`) v8 @kind l2f;
  #L2bc598.  v8:= 1000.0F;
  #L2bc59c.  v5:= v7 / v8 @kind float;
  #L2bc5a0.  v7:= 0I;
  #L2bc5a2.  v7:= fcmpl(v5, v7);
  #L2bc5a6.  if v7 != 0 then goto L2bc5b0;
  #L2bc5aa.  v5:= 1036831949I;
  #L2bc5b0.  v7:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5b4.  v8:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5b8.  v7:= fcmpl(v7, v8);
  #L2bc5bc.  if v7 < 0 then goto L2bc648;
  #L2bc5c0.  v1:= 1I;
  #L2bc5c2.  v7:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5c6.  v8:= v0.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5ca.  v7:= v7 - v8 @kind float;
  #L2bc5cc.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2bc5d2.  v7:= temp;
  #L2bc5d4.  v8:= (`double`) v7 @kind f2d;
  #L2bc5d6.  v10:= 270.0D;
  #L2bc5e0.  v7:= dcmpl(v8, v10);
  #L2bc5e4.  if v7 <= 0 then goto L2bc5ee;
  #L2bc5e8.  if v1 != 0 then goto L2bc64c;
  #L2bc5ec.  v1:= 1I;
  #L2bc5ee.  v7:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5f2.  v8:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc5f6.  v7:= v7 - v8 @kind float;
  #L2bc5f8.  v8:= (`double`) v7 @kind f2d;
  #L2bc5fa.  v10:= 180.0D;
  #L2bc604.  v7:= dcmpl(v8, v10);
  #L2bc608.  if v7 <= 0 then goto L2bc650;
  #L2bc60c.  v7:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc610.  v8:= (`double`) v7 @kind f2d;
  #L2bc612.  v10:= 360.0D;
  #L2bc61c.  v8:= v8 + v10 @kind double;
  #L2bc61e.  v7:= (`float`) v8 @kind d2f;
  #L2bc620.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float` := v7;
  #L2bc624.  v7:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc628.  v8:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc62c.  v7:= v7 - v8 @kind float;
  #L2bc62e.  v7:= v7 / v5 @kind float;
  #L2bc630.  call temp:= `abs`(v7) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2bc636.  v6:= temp;
  #L2bc638.  if v1 != 0 then goto L2bc522;
  #L2bc63c.  v6:= -v6 @kind float;
  #L2bc63e.  goto L2bc522;
  #L2bc642.  v3:= v3 + -1;
  #L2bc646.  goto L2bc568;
  #L2bc648.  v1:= 0I;
  #L2bc64a.  goto L2bc5c2;
  #L2bc64c.  v1:= 0I;
  #L2bc64e.  goto L2bc5ee;
  #L2bc650.  v7:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc654.  v8:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc658.  v7:= v7 - v8 @kind float;
  #L2bc65a.  v8:= (`double`) v7 @kind f2d;
  #L2bc65c.  v10:= 180.0D;
  #L2bc666.  v7:= dcmpl(v8, v10);
  #L2bc66a.  if v7 <= 0 then goto L2bc624;
  #L2bc66e.  v7:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float`;
  #L2bc672.  v8:= (`double`) v7 @kind f2d;
  #L2bc674.  v10:= 360.0D;
  #L2bc67e.  v8:= v8 + v10 @kind double;
  #L2bc680.  v7:= (`float`) v8 @kind d2f;
  #L2bc682.  v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.angle` @type ^`float` := v7;
  #L2bc686.  goto L2bc624;
}
procedure `void` `resetVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.resetVelocity:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L2bc698.  v0:= v1.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc69c.  call `clear`(v0) @signature `Ljava/util/ArrayList;.clear:()V` @kind virtual;
  #L2bc6a2.  return @kind void;
}
procedure `void` `sampleVelocity`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v8 @kind this, `float` v9 @name `touchLocationX`, `float` v10 @name `touchLocationY`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bc6b4.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L2bc6ba.  v2:= temp @kind wide;
  #L2bc6bc.  v5:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc6c0.  v6:= new `com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`;
  #L2bc6c4.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc6c8.  v4:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v4 @kind object;
  #L2bc6cc.  call temp:= `getAngleForPoint`(v4, v9, v10) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L2bc6d2.  v4:= temp;
  #L2bc6d4.  call `<init>`(v6, v8, v2, v4) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener$AngularVelocitySample;.<init>:(Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;JF)V` @kind direct;
  #L2bc6da.  call temp:= `add`(v5, v6) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L2bc6e0.  v1:= 0I;
  #L2bc6e2.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc6e6.  call temp:= `size`(v4) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L2bc6ec.  v0:= temp;
  #L2bc6ee.  v4:= v0 + -2;
  #L2bc6f2.  if v4 <= 0 then goto L2bc734;
  #L2bc6f6.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc6fa.  call temp:= `get`(v4, v1) @signature `Ljava/util/ArrayList;.get:(I)Ljava/lang/Object;` @kind virtual;
  #L2bc700.  v4:= temp @kind object;
  #L2bc702.  v4:= (`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample`) v4 @kind object;
  #L2bc706.  v4:= v4.`com.github.mikephil.charting.listener.PieRadarChartTouchListener$AngularVelocitySample.time` @type ^`long` @kind wide;
  #L2bc70a.  v4:= v2 - v4 @kind long;
  #L2bc70e.  v6:= 1000L;
  #L2bc712.  v4:= lcmp(v4, v6);
  #L2bc716.  if v4 <= 0 then goto L2bc734;
  #L2bc71a.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener._velocitySamples` @type ^`java.util.ArrayList` @kind object;
  #L2bc71e.  v5:= 0I;
  #L2bc720.  call temp:= `remove`(v4, v5) @signature `Ljava/util/ArrayList;.remove:(I)Ljava/lang/Object;` @kind virtual;
  #L2bc726.  v1:= v1 + -1;
  #L2bc72a.  v0:= v0 + -1;
  #L2bc72e.  v1:= v1 + 1;
  #L2bc732.  goto L2bc6ee;
  #L2bc734.  return @kind void;
}
procedure `void` `computeScroll`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v8 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.computeScroll:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2bc748.  v3:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L2bc74c.  v4:= 0I;
  #L2bc74e.  v3:= fcmpl(v3, v4);
  #L2bc752.  if v3 != 0 then goto L2bc758;
  #L2bc756.  return @kind void;
  #L2bc758.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L2bc75e.  v0:= temp @kind wide;
  #L2bc760.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L2bc764.  v3:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc768.  v3:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v3 @kind object;
  #L2bc76c.  call temp:= `getDragDecelerationFrictionCoef`(v3) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getDragDecelerationFrictionCoef:()F` @kind virtual;
  #L2bc772.  v3:= temp;
  #L2bc774.  v3:= v3 * v4 @kind float;
  #L2bc776.  v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v3;
  #L2bc77a.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` @kind wide;
  #L2bc77e.  v4:= v0 - v4 @kind long;
  #L2bc782.  v3:= (`float`) v4 @kind l2f;
  #L2bc784.  v4:= 1000.0F;
  #L2bc788.  v2:= v3 / v4 @kind float;
  #L2bc78c.  v3:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc790.  v3:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v3 @kind object;
  #L2bc794.  v4:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc798.  v4:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v4 @kind object;
  #L2bc79c.  call temp:= `getRotationAngle`(v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRotationAngle:()F` @kind virtual;
  #L2bc7a2.  v4:= temp;
  #L2bc7a4.  v5:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L2bc7a8.  v5:= v5 * v2 @kind float;
  #L2bc7aa.  v4:= v4 + v5 @kind float;
  #L2bc7ac.  call `setRotationAngle`(v3, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L2bc7b2.  v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v0 @kind wide;
  #L2bc7b6.  v3:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L2bc7ba.  call temp:= `abs`(v3) @signature `Ljava/lang/Math;.abs:(F)F` @kind static;
  #L2bc7c0.  v3:= temp;
  #L2bc7c2.  v4:= (`double`) v3 @kind f2d;
  #L2bc7c4.  v6:= 0.001D;
  #L2bc7ce.  v3:= dcmpl(v4, v6);
  #L2bc7d2.  if v3 < 0 then goto L2bc7e2;
  #L2bc7d6.  v3:= v8.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc7da.  call `postInvalidateOnAnimation`(v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L2bc7e0.  goto L2bc756;
  #L2bc7e2.  call `stopDeceleration`(v8) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L2bc7e8.  goto L2bc756;
}
procedure `void` `onLongPress`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v2 @kind this, `android.view.MotionEvent` v3 @kind object @name `me`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onLongPress:(Landroid/view/MotionEvent;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bc7fc.  v1:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.LONG_PRESS` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L2bc800.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v1 @kind object;
  #L2bc804.  v1:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc808.  v1:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v1 @kind object;
  #L2bc80c.  call temp:= `getOnChartGestureListener`(v1) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L2bc812.  v0:= temp @kind object;
  #L2bc814.  if v0 == 0 then goto L2bc81e;
  #L2bc818.  call `onChartLongPressed`(v0, v3) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartLongPressed:(Landroid/view/MotionEvent;)V` @kind interface;
  #L2bc81e.  return @kind void;
}
procedure `boolean` `onSingleTapConfirmed`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this, `android.view.MotionEvent` v2 @kind object @name `e`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onSingleTapConfirmed:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bc830.  v0:= 1I;
  #L2bc832.  return v0;
}
procedure `boolean` `onSingleTapUp`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v5 @kind this, `android.view.MotionEvent` v6 @kind object @name `e`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onSingleTapUp:(Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2bc844.  v2:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.SINGLE_TAP` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L2bc848.  v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v2 @kind object;
  #L2bc84c.  v2:= v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc850.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc854.  call temp:= `getOnChartGestureListener`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getOnChartGestureListener:()Lcom/github/mikephil/charting/listener/OnChartGestureListener;` @kind virtual;
  #L2bc85a.  v1:= temp @kind object;
  #L2bc85c.  if v1 == 0 then goto L2bc866;
  #L2bc860.  call `onChartSingleTapped`(v1, v6) @signature `Lcom/github/mikephil/charting/listener/OnChartGestureListener;.onChartSingleTapped:(Landroid/view/MotionEvent;)V` @kind interface;
  #L2bc866.  v2:= v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc86a.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc86e.  call temp:= `isHighlightPerTapEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isHighlightPerTapEnabled:()Z` @kind virtual;
  #L2bc874.  v2:= temp;
  #L2bc876.  if v2 != 0 then goto L2bc87e;
  #L2bc87a.  v2:= 0I;
  #L2bc87c.  return v2;
  #L2bc87e.  v2:= v5.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc882.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc886.  call temp:= `getX`(v6) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L2bc88c.  v3:= temp;
  #L2bc88e.  call temp:= `getY`(v6) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L2bc894.  v4:= temp;
  #L2bc896.  call temp:= `getHighlightByTouchPoint`(v2, v3, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getHighlightByTouchPoint:(FF)Lcom/github/mikephil/charting/highlight/Highlight;` @kind virtual;
  #L2bc89c.  v0:= temp @kind object;
  #L2bc89e.  call `performHighlight`(v5, v0, v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.performHighlight:(Lcom/github/mikephil/charting/highlight/Highlight;Landroid/view/MotionEvent;)V` @kind virtual;
  #L2bc8a4.  v2:= 1I;
  #L2bc8a6.  goto L2bc87c;
}
procedure `boolean` `onTouch`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v6 @kind this, `android.view.View` v7 @kind object @name `v`, `android.view.MotionEvent` v8 @kind object @name `event`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.onTouch:(Landroid/view/View;Landroid/view/MotionEvent;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2bc8b8.  v5:= 6I;
  #L2bc8ba.  v4:= 1I;
  #L2bc8bc.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mGestureDetector` @type ^`android.view.GestureDetector` @kind object;
  #L2bc8c0.  call temp:= `onTouchEvent`(v2, v8) @signature `Landroid/view/GestureDetector;.onTouchEvent:(Landroid/view/MotionEvent;)Z` @kind virtual;
  #L2bc8c6.  v2:= temp;
  #L2bc8c8.  if v2 == 0 then goto L2bc8ce;
  #L2bc8cc.  return v4;
  #L2bc8ce.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc8d2.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc8d6.  call temp:= `isRotationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isRotationEnabled:()Z` @kind virtual;
  #L2bc8dc.  v2:= temp;
  #L2bc8de.  if v2 == 0 then goto L2bc8cc;
  #L2bc8e2.  call temp:= `getX`(v8) @signature `Landroid/view/MotionEvent;.getX:()F` @kind virtual;
  #L2bc8e8.  v0:= temp;
  #L2bc8ea.  call temp:= `getY`(v8) @signature `Landroid/view/MotionEvent;.getY:()F` @kind virtual;
  #L2bc8f0.  v1:= temp;
  #L2bc8f2.  call temp:= `getAction`(v8) @signature `Landroid/view/MotionEvent;.getAction:()I` @kind virtual;
  #L2bc8f8.  v2:= temp;
  #L2bc8fa.  goto L2bca44;
  #L2bc900.  goto L2bc8cc;
  #L2bc902.  call `startAction`(v6, v8) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.startAction:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L2bc908.  call `stopDeceleration`(v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L2bc90e.  call `resetVelocity`(v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.resetVelocity:()V` @kind direct;
  #L2bc914.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc918.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc91c.  call temp:= `isDragDecelerationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L2bc922.  v2:= temp;
  #L2bc924.  if v2 == 0 then goto L2bc92e;
  #L2bc928.  call `sampleVelocity`(v6, v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L2bc92e.  call `setGestureStartAngle`(v6, v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.setGestureStartAngle:(FF)V` @kind virtual;
  #L2bc934.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L2bc938.  v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float` := v0;
  #L2bc93c.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L2bc940.  v2.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float` := v1;
  #L2bc944.  goto L2bc8cc;
  #L2bc946.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc94a.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc94e.  call temp:= `isDragDecelerationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L2bc954.  v2:= temp;
  #L2bc956.  if v2 == 0 then goto L2bc960;
  #L2bc95a.  call `sampleVelocity`(v6, v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L2bc960.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchMode` @type ^`int`;
  #L2bc964.  if v2 != 0 then goto L2bc9b6;
  #L2bc968.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L2bc96c.  v2:= v2.`com.github.mikephil.charting.utils.MPPointF.x` @type ^`float`;
  #L2bc970.  v3:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchStartPoint` @type ^`com.github.mikephil.charting.utils.MPPointF` @kind object;
  #L2bc974.  v3:= v3.`com.github.mikephil.charting.utils.MPPointF.y` @type ^`float`;
  #L2bc978.  call temp:= `distance`(v0, v2, v1, v3) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.distance:(FFFF)F` @kind static;
  #L2bc97e.  v2:= temp;
  #L2bc980.  v3:= 8.0F;
  #L2bc984.  call temp:= `convertDpToPixel`(v3) @signature `Lcom/github/mikephil/charting/utils/Utils;.convertDpToPixel:(F)F` @kind static;
  #L2bc98a.  v3:= temp;
  #L2bc98c.  v2:= fcmpl(v2, v3);
  #L2bc990.  if v2 <= 0 then goto L2bc9b6;
  #L2bc994.  v2:= `@@com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture.ROTATE` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` @kind object;
  #L2bc998.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mLastGesture` @type ^`com.github.mikephil.charting.listener.ChartTouchListener$ChartGesture` := v2 @kind object;
  #L2bc99c.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchMode` @type ^`int` := v5;
  #L2bc9a0.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc9a4.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc9a8.  call `disableScroll`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.disableScroll:()V` @kind virtual;
  #L2bc9ae.  call `endAction`(v6, v8) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.endAction:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L2bc9b4.  goto L2bc8cc;
  #L2bc9b6.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchMode` @type ^`int`;
  #L2bc9ba.  if v2 != v5 then goto L2bc9ae;
  #L2bc9be.  call `updateGestureRotation`(v6, v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.updateGestureRotation:(FF)V` @kind virtual;
  #L2bc9c4.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc9c8.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc9cc.  call `invalidate`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.invalidate:()V` @kind virtual;
  #L2bc9d2.  goto L2bc9ae;
  #L2bc9d4.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bc9d8.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bc9dc.  call temp:= `isDragDecelerationEnabled`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.isDragDecelerationEnabled:()Z` @kind virtual;
  #L2bc9e2.  v2:= temp;
  #L2bc9e4.  if v2 == 0 then goto L2bca24;
  #L2bc9e8.  call `stopDeceleration`(v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @kind virtual;
  #L2bc9ee.  call `sampleVelocity`(v6, v0, v1) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.sampleVelocity:(FF)V` @kind direct;
  #L2bc9f4.  call temp:= `calculateVelocity`(v6) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.calculateVelocity:()F` @kind direct;
  #L2bc9fa.  v2:= temp;
  #L2bc9fc.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v2;
  #L2bca00.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float`;
  #L2bca04.  v3:= 0I;
  #L2bca06.  v2:= fcmpl(v2, v3);
  #L2bca0a.  if v2 == 0 then goto L2bca24;
  #L2bca0e.  call temp:= `currentAnimationTimeMillis`() @signature `Landroid/view/animation/AnimationUtils;.currentAnimationTimeMillis:()J` @kind static;
  #L2bca14.  v2:= temp @kind wide;
  #L2bca16.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationLastTime` @type ^`long` := v2 @kind wide;
  #L2bca1a.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bca1e.  call `postInvalidateOnAnimation`(v2) @signature `Lcom/github/mikephil/charting/utils/Utils;.postInvalidateOnAnimation:(Landroid/view/View;)V` @kind static;
  #L2bca24.  v2:= v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bca28.  v2:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v2 @kind object;
  #L2bca2c.  call `enableScroll`(v2) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.enableScroll:()V` @kind virtual;
  #L2bca32.  v2:= 0I;
  #L2bca34.  v6.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mTouchMode` @type ^`int` := v2;
  #L2bca38.  call `endAction`(v6, v8) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.endAction:(Landroid/view/MotionEvent;)V` @kind virtual;
  #L2bca3e.  goto L2bc8cc;
  #L2bca42.  
  #L2bca44.  switch v2
                  | 0 => goto L2bc902
                  | 1 => goto L2bc9d4
                  | 2 => goto L2bc946
                  | else => goto L2bc900;
}
procedure `void` `setGestureStartAngle`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v2 @kind this, `float` v3 @name `x`, `float` v4 @name `y`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.setGestureStartAngle:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L2bca68.  v0:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bca6c.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L2bca70.  call temp:= `getAngleForPoint`(v0, v3, v4) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L2bca76.  v1:= temp;
  #L2bca78.  v0:= v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bca7c.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L2bca80.  call temp:= `getRawRotationAngle`(v0) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getRawRotationAngle:()F` @kind virtual;
  #L2bca86.  v0:= temp;
  #L2bca88.  v0:= v1 - v0 @kind float;
  #L2bca8c.  v2.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float` := v0;
  #L2bca90.  return @kind void;
}
procedure `void` `stopDeceleration`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v1 @kind this) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.stopDeceleration:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2bcaa4.  v0:= 0I;
  #L2bcaa6.  v1.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mDecelerationAngularVelocity` @type ^`float` := v0;
  #L2bcaaa.  return @kind void;
}
procedure `void` `updateGestureRotation`(`com.github.mikephil.charting.listener.PieRadarChartTouchListener` v3 @kind this, `float` v4 @name `x`, `float` v5 @name `y`) @signature `Lcom/github/mikephil/charting/listener/PieRadarChartTouchListener;.updateGestureRotation:(FF)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2bcabc.  v0:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bcac0.  v0:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v0 @kind object;
  #L2bcac4.  v1:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mChart` @type ^`com.github.mikephil.charting.charts.Chart` @kind object;
  #L2bcac8.  v1:= (`com.github.mikephil.charting.charts.PieRadarChartBase`) v1 @kind object;
  #L2bcacc.  call temp:= `getAngleForPoint`(v1, v4, v5) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.getAngleForPoint:(FF)F` @kind virtual;
  #L2bcad2.  v1:= temp;
  #L2bcad4.  v2:= v3.`com.github.mikephil.charting.listener.PieRadarChartTouchListener.mStartAngle` @type ^`float`;
  #L2bcad8.  v1:= v1 - v2 @kind float;
  #L2bcada.  call `setRotationAngle`(v0, v1) @signature `Lcom/github/mikephil/charting/charts/PieRadarChartBase;.setRotationAngle:(F)V` @kind virtual;
  #L2bcae0.  return @kind void;
}
