record `com.android.volley.toolbox.ImageLoader` @kind class @AccessFlag PUBLIC {
  `int` `com.android.volley.toolbox.ImageLoader.mBatchResponseDelayMs` @AccessFlag PRIVATE;
  `java.util.HashMap` `com.android.volley.toolbox.ImageLoader.mBatchedResponses` @AccessFlag PRIVATE_FINAL;
  `com.android.volley.toolbox.ImageLoader$ImageCache` `com.android.volley.toolbox.ImageLoader.mCache` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.android.volley.toolbox.ImageLoader.mHandler` @AccessFlag PRIVATE_FINAL;
  `java.util.HashMap` `com.android.volley.toolbox.ImageLoader.mInFlightRequests` @AccessFlag PRIVATE_FINAL;
  `com.android.volley.RequestQueue` `com.android.volley.toolbox.ImageLoader.mRequestQueue` @AccessFlag PRIVATE_FINAL;
  `java.lang.Runnable` `com.android.volley.toolbox.ImageLoader.mRunnable` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.android.volley.toolbox.ImageLoader` v2 @kind this, `com.android.volley.RequestQueue` v3 @kind object @name `queue`, `com.android.volley.toolbox.ImageLoader$ImageCache` v4 @kind object @name `imageCache`) @signature `Lcom/android/volley/toolbox/ImageLoader;.<init>:(Lcom/android/volley/RequestQueue;Lcom/android/volley/toolbox/ImageLoader$ImageCache;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c92dc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c92e2.  v0:= 100I;
  #L1c92e6.  v2.`com.android.volley.toolbox.ImageLoader.mBatchResponseDelayMs` @type ^`int` := v0;
  #L1c92ea.  v0:= new `java.util.HashMap`;
  #L1c92ee.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1c92f4.  v2.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` := v0 @kind object;
  #L1c92f8.  v0:= new `java.util.HashMap`;
  #L1c92fc.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L1c9302.  v2.`com.android.volley.toolbox.ImageLoader.mBatchedResponses` @type ^`java.util.HashMap` := v0 @kind object;
  #L1c9306.  v0:= new `android.os.Handler`;
  #L1c930a.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1c9310.  v1:= temp @kind object;
  #L1c9312.  call `<init>`(v0, v1) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L1c9318.  v2.`com.android.volley.toolbox.ImageLoader.mHandler` @type ^`android.os.Handler` := v0 @kind object;
  #L1c931c.  v2.`com.android.volley.toolbox.ImageLoader.mRequestQueue` @type ^`com.android.volley.RequestQueue` := v3 @kind object;
  #L1c9320.  v2.`com.android.volley.toolbox.ImageLoader.mCache` @type ^`com.android.volley.toolbox.ImageLoader$ImageCache` := v4 @kind object;
  #L1c9324.  return @kind void;
}
procedure `java.util.HashMap` `access$100`(`com.android.volley.toolbox.ImageLoader` v1 @kind object @name `x0`) @signature `Lcom/android/volley/toolbox/ImageLoader;.access$100:(Lcom/android/volley/toolbox/ImageLoader;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1c9338.  v0:= v1.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` @kind object;
  #L1c933c.  return v0 @kind object;
}
procedure `java.util.HashMap` `access$200`(`com.android.volley.toolbox.ImageLoader` v1 @kind object @name `x0`) @signature `Lcom/android/volley/toolbox/ImageLoader;.access$200:(Lcom/android/volley/toolbox/ImageLoader;)Ljava/util/HashMap;` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1c9350.  v0:= v1.`com.android.volley.toolbox.ImageLoader.mBatchedResponses` @type ^`java.util.HashMap` @kind object;
  #L1c9354.  return v0 @kind object;
}
procedure `java.lang.Runnable` `access$602`(`com.android.volley.toolbox.ImageLoader` v0 @kind object @name `x0`, `java.lang.Runnable` v1 @kind object @name `x1`) @signature `Lcom/android/volley/toolbox/ImageLoader;.access$602:(Lcom/android/volley/toolbox/ImageLoader;Ljava/lang/Runnable;)Ljava/lang/Runnable;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L1c9368.  v0.`com.android.volley.toolbox.ImageLoader.mRunnable` @type ^`java.lang.Runnable` := v1 @kind object;
  #L1c936c.  return v1 @kind object;
}
procedure `void` `batchResponse`(`com.android.volley.toolbox.ImageLoader` v4 @kind this, `java.lang.String` v5 @kind object @name `cacheKey`, `com.android.volley.toolbox.ImageLoader$BatchedImageRequest` v6 @kind object @name `request`) @signature `Lcom/android/volley/toolbox/ImageLoader;.batchResponse:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c9380.  v0:= v4.`com.android.volley.toolbox.ImageLoader.mBatchedResponses` @type ^`java.util.HashMap` @kind object;
  #L1c9384.  call temp:= `put`(v0, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c938a.  v0:= v4.`com.android.volley.toolbox.ImageLoader.mRunnable` @type ^`java.lang.Runnable` @kind object;
  #L1c938e.  if v0 != 0 then goto L1c93b4;
  #L1c9392.  v0:= new `com.android.volley.toolbox.ImageLoader$4`;
  #L1c9396.  call `<init>`(v0, v4) @signature `Lcom/android/volley/toolbox/ImageLoader$4;.<init>:(Lcom/android/volley/toolbox/ImageLoader;)V` @kind direct;
  #L1c939c.  v4.`com.android.volley.toolbox.ImageLoader.mRunnable` @type ^`java.lang.Runnable` := v0 @kind object;
  #L1c93a0.  v0:= v4.`com.android.volley.toolbox.ImageLoader.mHandler` @type ^`android.os.Handler` @kind object;
  #L1c93a4.  v1:= v4.`com.android.volley.toolbox.ImageLoader.mRunnable` @type ^`java.lang.Runnable` @kind object;
  #L1c93a8.  v2:= v4.`com.android.volley.toolbox.ImageLoader.mBatchResponseDelayMs` @type ^`int`;
  #L1c93ac.  v2:= (`long`) v2 @kind i2l;
  #L1c93ae.  call temp:= `postDelayed`(v0, v1, v2) @signature `Landroid/os/Handler;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L1c93b4.  return @kind void;
}
procedure `java.lang.String` `getCacheKey`(`java.lang.String` v2 @kind object @name `url`, `int` v3 @name `maxWidth`, `int` v4 @name `maxHeight`, `android.widget.ImageView$ScaleType` v5 @kind object @name `scaleType`) @signature `Lcom/android/volley/toolbox/ImageLoader;.getCacheKey:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L1c93c8.  v0:= new `java.lang.StringBuilder`;
  #L1c93cc.  call temp:= `length`(v2) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L1c93d2.  v1:= temp;
  #L1c93d4.  v1:= v1 + 12;
  #L1c93d8.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L1c93de.  v1:= "#W" @kind object;
  #L1c93e2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c93e8.  v0:= temp @kind object;
  #L1c93ea.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c93f0.  v0:= temp @kind object;
  #L1c93f2.  v1:= "#H" @kind object;
  #L1c93f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c93fc.  v0:= temp @kind object;
  #L1c93fe.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9404.  v0:= temp @kind object;
  #L1c9406.  v1:= "#S" @kind object;
  #L1c940a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9410.  v0:= temp @kind object;
  #L1c9412.  call temp:= `ordinal`(v5) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L1c9418.  v1:= temp;
  #L1c941a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9420.  v0:= temp @kind object;
  #L1c9422.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L1c9428.  v0:= temp @kind object;
  #L1c942a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c9430.  v0:= temp @kind object;
  #L1c9432.  return v0 @kind object;
}
procedure `com.android.volley.toolbox.ImageLoader$ImageListener` `getImageListener`(`android.widget.ImageView` v1 @kind object @name `view`, `int` v2 @name `defaultImageResId`, `int` v3 @name `errorImageResId`) @signature `Lcom/android/volley/toolbox/ImageLoader;.getImageListener:(Landroid/widget/ImageView;II)Lcom/android/volley/toolbox/ImageLoader$ImageListener;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L1c9444.  v0:= new `com.android.volley.toolbox.ImageLoader$1`;
  #L1c9448.  call `<init>`(v0, v3, v1, v2) @signature `Lcom/android/volley/toolbox/ImageLoader$1;.<init>:(ILandroid/widget/ImageView;I)V` @kind direct;
  #L1c944e.  return v0 @kind object;
}
procedure `void` `throwIfNotOnMainThread`(`com.android.volley.toolbox.ImageLoader` v2 @kind this) @signature `Lcom/android/volley/toolbox/ImageLoader;.throwIfNotOnMainThread:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L1c9460.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L1c9466.  v0:= temp @kind object;
  #L1c9468.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L1c946e.  v1:= temp @kind object;
  #L1c9470.  if v0 == v1 then goto L1c9484;
  #L1c9474.  v0:= new `java.lang.IllegalStateException`;
  #L1c9478.  v1:= "ImageLoader must be invoked from the main thread." @kind object;
  #L1c947c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L1c9482.  throw v0;
  #L1c9484.  return @kind void;
}
procedure `com.android.volley.toolbox.ImageLoader$ImageContainer` `get`(`com.android.volley.toolbox.ImageLoader` v1 @kind this, `java.lang.String` v2 @kind object @name `requestUrl`, `com.android.volley.toolbox.ImageLoader$ImageListener` v3 @kind object @name `listener`) @signature `Lcom/android/volley/toolbox/ImageLoader;.get:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c9498.  v0:= 0I;
  #L1c949a.  call temp:= `get`(v1, v2, v3, v0, v0) @signature `Lcom/android/volley/toolbox/ImageLoader;.get:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;II)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;` @kind virtual;
  #L1c94a0.  v0:= temp @kind object;
  #L1c94a2.  return v0 @kind object;
}
procedure `com.android.volley.toolbox.ImageLoader$ImageContainer` `get`(`com.android.volley.toolbox.ImageLoader` v6 @kind this, `java.lang.String` v7 @kind object @name `requestUrl`, `com.android.volley.toolbox.ImageLoader$ImageListener` v8 @kind object @name `imageListener`, `int` v9 @name `maxWidth`, `int` v10 @name `maxHeight`) @signature `Lcom/android/volley/toolbox/ImageLoader;.get:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;II)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c94b4.  v5:= `@@android.widget.ImageView$ScaleType.CENTER_INSIDE` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L1c94b8.  v0:= v6 @kind object;
  #L1c94ba.  v1:= v7 @kind object;
  #L1c94bc.  v2:= v8 @kind object;
  #L1c94be.  v3:= v9;
  #L1c94c0.  v4:= v10;
  #L1c94c2.  call temp:= `get`(v0, v1, v2, v3, v4, v5) @signature `Lcom/android/volley/toolbox/ImageLoader;.get:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;IILandroid/widget/ImageView$ScaleType;)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;` @kind virtual;
  #L1c94c8.  v0:= temp @kind object;
  #L1c94ca.  return v0 @kind object;
}
procedure `com.android.volley.toolbox.ImageLoader$ImageContainer` `get`(`com.android.volley.toolbox.ImageLoader` v20 @kind this, `java.lang.String` v21 @kind object @name `requestUrl`, `com.android.volley.toolbox.ImageLoader$ImageListener` v22 @kind object @name `imageListener`, `int` v23 @name `maxWidth`, `int` v24 @name `maxHeight`, `android.widget.ImageView$ScaleType` v25 @kind object @name `scaleType`) @signature `Lcom/android/volley/toolbox/ImageLoader;.get:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;IILandroid/widget/ImageView$ScaleType;)Lcom/android/volley/toolbox/ImageLoader$ImageContainer;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;

  #L1c94dc.  call `throwIfNotOnMainThread`(v20) @signature `Lcom/android/volley/toolbox/ImageLoader;.throwIfNotOnMainThread:()V` @kind direct;
  #L1c94e2.  v0:= v21 @kind object;
  #L1c94e6.  v1:= v23;
  #L1c94ea.  v2:= v24;
  #L1c94ee.  v3:= v25 @kind object;
  #L1c94f2.  call temp:= `getCacheKey`(v0, v1, v2, v3) @signature `Lcom/android/volley/toolbox/ImageLoader;.getCacheKey:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;)Ljava/lang/String;` @kind static;
  #L1c94f8.  v11:= temp @kind object;
  #L1c94fa.  v0:= v20 @kind object;
  #L1c94fe.  v5:= v0.`com.android.volley.toolbox.ImageLoader.mCache` @type ^`com.android.volley.toolbox.ImageLoader$ImageCache` @kind object;
  #L1c9502.  call temp:= `getBitmap`(v5, v11) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageCache;.getBitmap:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @kind interface;
  #L1c9508.  v6:= temp @kind object;
  #L1c950a.  if v6 == 0 then goto L1c9534;
  #L1c950e.  v4:= new `com.android.volley.toolbox.ImageLoader$ImageContainer`;
  #L1c9512.  v8:= 0I;
  #L1c9514.  v9:= 0I;
  #L1c9516.  v5:= v20 @kind object;
  #L1c951a.  v7:= v21 @kind object;
  #L1c951e.  call `<init>`(v4, v5, v6, v7, v8, v9) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageContainer;.<init>:(Lcom/android/volley/toolbox/ImageLoader;Landroid/graphics/Bitmap;Ljava/lang/String;Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;)V` @kind direct;
  #L1c9524.  v5:= 1I;
  #L1c9526.  v0:= v22 @kind object;
  #L1c952a.  call `onResponse`(v0, v4, v5) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageListener;.onResponse:(Lcom/android/volley/toolbox/ImageLoader$ImageContainer;Z)V` @kind interface;
  #L1c9530.  v7:= v4 @kind object;
  #L1c9532.  return v7 @kind object;
  #L1c9534.  v7:= new `com.android.volley.toolbox.ImageLoader$ImageContainer`;
  #L1c9538.  v9:= 0I;
  #L1c953a.  v8:= v20 @kind object;
  #L1c953e.  v10:= v21 @kind object;
  #L1c9542.  v12:= v22 @kind object;
  #L1c9546.  call `<init>`(v7, v8, v9, v10, v11, v12) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageContainer;.<init>:(Lcom/android/volley/toolbox/ImageLoader;Landroid/graphics/Bitmap;Ljava/lang/String;Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$ImageListener;)V` @kind direct;
  #L1c954c.  v5:= 1I;
  #L1c954e.  v0:= v22 @kind object;
  #L1c9552.  call `onResponse`(v0, v7, v5) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageListener;.onResponse:(Lcom/android/volley/toolbox/ImageLoader$ImageContainer;Z)V` @kind interface;
  #L1c9558.  v0:= v20 @kind object;
  #L1c955c.  v5:= v0.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` @kind object;
  #L1c9560.  call temp:= `get`(v5, v11) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c9566.  v19:= temp @kind object;
  #L1c9568.  v19:= (`com.android.volley.toolbox.ImageLoader$BatchedImageRequest`) v19 @kind object;
  #L1c956c.  if v19 == 0 then goto L1c957c;
  #L1c9570.  v0:= v19 @kind object;
  #L1c9574.  call `addContainer`(v0, v7) @signature `Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;.addContainer:(Lcom/android/volley/toolbox/ImageLoader$ImageContainer;)V` @kind virtual;
  #L1c957a.  goto L1c9532;
  #L1c957c.  v12:= v20 @kind object;
  #L1c9580.  v13:= v21 @kind object;
  #L1c9584.  v14:= v23;
  #L1c9588.  v15:= v24;
  #L1c958c.  v16:= v25 @kind object;
  #L1c9590.  v17:= v11 @kind object;
  #L1c9594.  call temp:= `makeImageRequest`(v12, v13, v14, v15, v16, v17) @signature `Lcom/android/volley/toolbox/ImageLoader;.makeImageRequest:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;Ljava/lang/String;)Lcom/android/volley/Request;` @kind virtual;
  #L1c959a.  v18:= temp @kind object;
  #L1c959c.  v0:= v20 @kind object;
  #L1c95a0.  v5:= v0.`com.android.volley.toolbox.ImageLoader.mRequestQueue` @type ^`com.android.volley.RequestQueue` @kind object;
  #L1c95a4.  v0:= v18 @kind object;
  #L1c95a8.  call temp:= `add`(v5, v0) @signature `Lcom/android/volley/RequestQueue;.add:(Lcom/android/volley/Request;)Lcom/android/volley/Request;` @kind virtual;
  #L1c95ae.  v0:= v20 @kind object;
  #L1c95b2.  v5:= v0.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` @kind object;
  #L1c95b6.  v8:= new `com.android.volley.toolbox.ImageLoader$BatchedImageRequest`;
  #L1c95ba.  v0:= v20 @kind object;
  #L1c95be.  v1:= v18 @kind object;
  #L1c95c2.  call `<init>`(v8, v0, v1, v7) @signature `Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;.<init>:(Lcom/android/volley/toolbox/ImageLoader;Lcom/android/volley/Request;Lcom/android/volley/toolbox/ImageLoader$ImageContainer;)V` @kind direct;
  #L1c95c8.  call temp:= `put`(v5, v11, v8) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c95ce.  goto L1c9532;
}
procedure `boolean` `isCached`(`com.android.volley.toolbox.ImageLoader` v1 @kind this, `java.lang.String` v2 @kind object @name `requestUrl`, `int` v3 @name `maxWidth`, `int` v4 @name `maxHeight`) @signature `Lcom/android/volley/toolbox/ImageLoader;.isCached:(Ljava/lang/String;II)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L1c95e0.  v0:= `@@android.widget.ImageView$ScaleType.CENTER_INSIDE` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L1c95e4.  call temp:= `isCached`(v1, v2, v3, v4, v0) @signature `Lcom/android/volley/toolbox/ImageLoader;.isCached:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;)Z` @kind virtual;
  #L1c95ea.  v0:= temp;
  #L1c95ec.  return v0;
}
procedure `boolean` `isCached`(`com.android.volley.toolbox.ImageLoader` v2 @kind this, `java.lang.String` v3 @kind object @name `requestUrl`, `int` v4 @name `maxWidth`, `int` v5 @name `maxHeight`, `android.widget.ImageView$ScaleType` v6 @kind object @name `scaleType`) @signature `Lcom/android/volley/toolbox/ImageLoader;.isCached:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c9600.  call `throwIfNotOnMainThread`(v2) @signature `Lcom/android/volley/toolbox/ImageLoader;.throwIfNotOnMainThread:()V` @kind direct;
  #L1c9606.  call temp:= `getCacheKey`(v3, v4, v5, v6) @signature `Lcom/android/volley/toolbox/ImageLoader;.getCacheKey:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;)Ljava/lang/String;` @kind static;
  #L1c960c.  v0:= temp @kind object;
  #L1c960e.  v1:= v2.`com.android.volley.toolbox.ImageLoader.mCache` @type ^`com.android.volley.toolbox.ImageLoader$ImageCache` @kind object;
  #L1c9612.  call temp:= `getBitmap`(v1, v0) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageCache;.getBitmap:(Ljava/lang/String;)Landroid/graphics/Bitmap;` @kind interface;
  #L1c9618.  v1:= temp @kind object;
  #L1c961a.  if v1 == 0 then goto L1c9622;
  #L1c961e.  v1:= 1I;
  #L1c9620.  return v1;
  #L1c9622.  v1:= 0I;
  #L1c9624.  goto L1c9620;
}
procedure `com.android.volley.Request` `makeImageRequest`(`com.android.volley.toolbox.ImageLoader` v8 @kind this, `java.lang.String` v9 @kind object @name `requestUrl`, `int` v10 @name `maxWidth`, `int` v11 @name `maxHeight`, `android.widget.ImageView$ScaleType` v12 @kind object @name `scaleType`, `java.lang.String` v13 @kind object @name `cacheKey`) @signature `Lcom/android/volley/toolbox/ImageLoader;.makeImageRequest:(Ljava/lang/String;IILandroid/widget/ImageView$ScaleType;Ljava/lang/String;)Lcom/android/volley/Request;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L1c9638.  v0:= new `com.android.volley.toolbox.ImageRequest`;
  #L1c963c.  v2:= new `com.android.volley.toolbox.ImageLoader$2`;
  #L1c9640.  call `<init>`(v2, v8, v13) @signature `Lcom/android/volley/toolbox/ImageLoader$2;.<init>:(Lcom/android/volley/toolbox/ImageLoader;Ljava/lang/String;)V` @kind direct;
  #L1c9646.  v6:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L1c964a.  v7:= new `com.android.volley.toolbox.ImageLoader$3`;
  #L1c964e.  call `<init>`(v7, v8, v13) @signature `Lcom/android/volley/toolbox/ImageLoader$3;.<init>:(Lcom/android/volley/toolbox/ImageLoader;Ljava/lang/String;)V` @kind direct;
  #L1c9654.  v1:= v9 @kind object;
  #L1c9656.  v3:= v10;
  #L1c9658.  v4:= v11;
  #L1c965a.  v5:= v12 @kind object;
  #L1c965c.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/android/volley/toolbox/ImageRequest;.<init>:(Ljava/lang/String;Lcom/android/volley/Response$Listener;IILandroid/widget/ImageView$ScaleType;Landroid/graphics/Bitmap$Config;Lcom/android/volley/Response$ErrorListener;)V` @kind direct;
  #L1c9662.  return v0 @kind object;
}
procedure `void` `onGetImageError`(`com.android.volley.toolbox.ImageLoader` v2 @kind this, `java.lang.String` v3 @kind object @name `cacheKey`, `com.android.volley.VolleyError` v4 @kind object @name `error`) @signature `Lcom/android/volley/toolbox/ImageLoader;.onGetImageError:(Ljava/lang/String;Lcom/android/volley/VolleyError;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c9674.  v1:= v2.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` @kind object;
  #L1c9678.  call temp:= `remove`(v1, v3) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c967e.  v0:= temp @kind object;
  #L1c9680.  v0:= (`com.android.volley.toolbox.ImageLoader$BatchedImageRequest`) v0 @kind object;
  #L1c9684.  if v0 == 0 then goto L1c9694;
  #L1c9688.  call `setError`(v0, v4) @signature `Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;.setError:(Lcom/android/volley/VolleyError;)V` @kind virtual;
  #L1c968e.  call `batchResponse`(v2, v3, v0) @signature `Lcom/android/volley/toolbox/ImageLoader;.batchResponse:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;)V` @kind direct;
  #L1c9694.  return @kind void;
}
procedure `void` `onGetImageSuccess`(`com.android.volley.toolbox.ImageLoader` v2 @kind this, `java.lang.String` v3 @kind object @name `cacheKey`, `android.graphics.Bitmap` v4 @kind object @name `response`) @signature `Lcom/android/volley/toolbox/ImageLoader;.onGetImageSuccess:(Ljava/lang/String;Landroid/graphics/Bitmap;)V` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L1c96a8.  v1:= v2.`com.android.volley.toolbox.ImageLoader.mCache` @type ^`com.android.volley.toolbox.ImageLoader$ImageCache` @kind object;
  #L1c96ac.  call `putBitmap`(v1, v3, v4) @signature `Lcom/android/volley/toolbox/ImageLoader$ImageCache;.putBitmap:(Ljava/lang/String;Landroid/graphics/Bitmap;)V` @kind interface;
  #L1c96b2.  v1:= v2.`com.android.volley.toolbox.ImageLoader.mInFlightRequests` @type ^`java.util.HashMap` @kind object;
  #L1c96b6.  call temp:= `remove`(v1, v3) @signature `Ljava/util/HashMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L1c96bc.  v0:= temp @kind object;
  #L1c96be.  v0:= (`com.android.volley.toolbox.ImageLoader$BatchedImageRequest`) v0 @kind object;
  #L1c96c2.  if v0 == 0 then goto L1c96d2;
  #L1c96c6.  call temp:= `access$002`(v0, v4) @signature `Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;.access$002:(Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L1c96cc.  call `batchResponse`(v2, v3, v0) @signature `Lcom/android/volley/toolbox/ImageLoader;.batchResponse:(Ljava/lang/String;Lcom/android/volley/toolbox/ImageLoader$BatchedImageRequest;)V` @kind direct;
  #L1c96d2.  return @kind void;
}
procedure `void` `setBatchedResponseDelay`(`com.android.volley.toolbox.ImageLoader` v0 @kind this, `int` v1 @name `newBatchedResponseDelayMs`) @signature `Lcom/android/volley/toolbox/ImageLoader;.setBatchedResponseDelay:(I)V` @AccessFlag PUBLIC {
    temp;

  #L1c96e4.  v0.`com.android.volley.toolbox.ImageLoader.mBatchResponseDelayMs` @type ^`int` := v1;
  #L1c96e8.  return @kind void;
}
