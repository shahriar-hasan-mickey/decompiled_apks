record `com.android.volley.toolbox.DiskBasedCache$CacheHeader` @kind class @AccessFlag  {
  `java.lang.String` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @AccessFlag PUBLIC;
  `java.lang.String` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @AccessFlag PUBLIC;
  `long` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.lastModified` @AccessFlag PUBLIC;
  `java.util.Map` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.responseHeaders` @AccessFlag PUBLIC;
  `long` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.serverDate` @AccessFlag PUBLIC;
  `long` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @AccessFlag PUBLIC;
  `long` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.softTtl` @AccessFlag PUBLIC;
  `long` `com.android.volley.toolbox.DiskBasedCache$CacheHeader.ttl` @AccessFlag PUBLIC;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CacheHeader` v0 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L1c88ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c88f2.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CacheHeader` v2 @kind this, `java.lang.String` v3 @kind object @name `key`, `com.android.volley.Cache$Entry` v4 @kind object @name `entry`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.<init>:(Ljava/lang/String;Lcom/android/volley/Cache$Entry;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L1c8904.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L1c890a.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` := v3 @kind object;
  #L1c890e.  v0:= v4.`com.android.volley.Cache$Entry.data` @type ^`byte`[] @kind object;
  #L1c8912.  v0:= length @variable v0;
  #L1c8914.  v0:= (`long`) v0 @kind i2l;
  #L1c8916.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` := v0 @kind wide;
  #L1c891a.  v0:= v4.`com.android.volley.Cache$Entry.etag` @type ^`java.lang.String` @kind object;
  #L1c891e.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` := v0 @kind object;
  #L1c8922.  v0:= v4.`com.android.volley.Cache$Entry.serverDate` @type ^`long` @kind wide;
  #L1c8926.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.serverDate` @type ^`long` := v0 @kind wide;
  #L1c892a.  v0:= v4.`com.android.volley.Cache$Entry.lastModified` @type ^`long` @kind wide;
  #L1c892e.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.lastModified` @type ^`long` := v0 @kind wide;
  #L1c8932.  v0:= v4.`com.android.volley.Cache$Entry.ttl` @type ^`long` @kind wide;
  #L1c8936.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.ttl` @type ^`long` := v0 @kind wide;
  #L1c893a.  v0:= v4.`com.android.volley.Cache$Entry.softTtl` @type ^`long` @kind wide;
  #L1c893e.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.softTtl` @type ^`long` := v0 @kind wide;
  #L1c8942.  v0:= v4.`com.android.volley.Cache$Entry.responseHeaders` @type ^`java.util.Map` @kind object;
  #L1c8946.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.responseHeaders` @type ^`java.util.Map` := v0 @kind object;
  #L1c894a.  return @kind void;
}
procedure `com.android.volley.toolbox.DiskBasedCache$CacheHeader` `readHeader`(`java.io.InputStream` v4 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.readHeader:(Ljava/io/InputStream;)Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c895c.  v0:= new `com.android.volley.toolbox.DiskBasedCache$CacheHeader`;
  #L1c8960.  call `<init>`(v0) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.<init>:()V` @kind direct;
  #L1c8966.  call temp:= `readInt`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readInt:(Ljava/io/InputStream;)I` @kind static;
  #L1c896c.  v1:= temp;
  #L1c896e.  v2:= 538247942I;
  #L1c8974.  if v1 == v2 then goto L1c8984;
  #L1c8978.  v2:= new `java.io.IOException`;
  #L1c897c.  call `<init>`(v2) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L1c8982.  throw v2;
  #L1c8984.  call temp:= `readString`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readString:(Ljava/io/InputStream;)Ljava/lang/String;` @kind static;
  #L1c898a.  v2:= temp @kind object;
  #L1c898c.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` := v2 @kind object;
  #L1c8990.  call temp:= `readString`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readString:(Ljava/io/InputStream;)Ljava/lang/String;` @kind static;
  #L1c8996.  v2:= temp @kind object;
  #L1c8998.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` := v2 @kind object;
  #L1c899c.  v2:= v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` @kind object;
  #L1c89a0.  v3:= "" @kind object;
  #L1c89a4.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L1c89aa.  v2:= temp;
  #L1c89ac.  if v2 == 0 then goto L1c89b6;
  #L1c89b0.  v2:= 0I;
  #L1c89b2.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` := v2 @kind object;
  #L1c89b6.  call temp:= `readLong`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @kind static;
  #L1c89bc.  v2:= temp @kind wide;
  #L1c89be.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.serverDate` @type ^`long` := v2 @kind wide;
  #L1c89c2.  call temp:= `readLong`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @kind static;
  #L1c89c8.  v2:= temp @kind wide;
  #L1c89ca.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.lastModified` @type ^`long` := v2 @kind wide;
  #L1c89ce.  call temp:= `readLong`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @kind static;
  #L1c89d4.  v2:= temp @kind wide;
  #L1c89d6.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.ttl` @type ^`long` := v2 @kind wide;
  #L1c89da.  call temp:= `readLong`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @kind static;
  #L1c89e0.  v2:= temp @kind wide;
  #L1c89e2.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.softTtl` @type ^`long` := v2 @kind wide;
  #L1c89e6.  call temp:= `readStringStringMap`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readStringStringMap:(Ljava/io/InputStream;)Ljava/util/Map;` @kind static;
  #L1c89ec.  v2:= temp @kind object;
  #L1c89ee.  v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.responseHeaders` @type ^`java.util.Map` := v2 @kind object;
  #L1c89f2.  return v0 @kind object;
}
procedure `com.android.volley.Cache$Entry` `toCacheEntry`(`com.android.volley.toolbox.DiskBasedCache$CacheHeader` v4 @kind this, `byte`[] v5 @kind object @name `data`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.toCacheEntry:([B)Lcom/android/volley/Cache$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L1c8a04.  v0:= new `com.android.volley.Cache$Entry`;
  #L1c8a08.  call `<init>`(v0) @signature `Lcom/android/volley/Cache$Entry;.<init>:()V` @kind direct;
  #L1c8a0e.  v0.`com.android.volley.Cache$Entry.data` @type ^`byte`[] := v5 @kind object;
  #L1c8a12.  v1:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` @kind object;
  #L1c8a16.  v0.`com.android.volley.Cache$Entry.etag` @type ^`java.lang.String` := v1 @kind object;
  #L1c8a1a.  v2:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.serverDate` @type ^`long` @kind wide;
  #L1c8a1e.  v0.`com.android.volley.Cache$Entry.serverDate` @type ^`long` := v2 @kind wide;
  #L1c8a22.  v2:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.lastModified` @type ^`long` @kind wide;
  #L1c8a26.  v0.`com.android.volley.Cache$Entry.lastModified` @type ^`long` := v2 @kind wide;
  #L1c8a2a.  v2:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.ttl` @type ^`long` @kind wide;
  #L1c8a2e.  v0.`com.android.volley.Cache$Entry.ttl` @type ^`long` := v2 @kind wide;
  #L1c8a32.  v2:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.softTtl` @type ^`long` @kind wide;
  #L1c8a36.  v0.`com.android.volley.Cache$Entry.softTtl` @type ^`long` := v2 @kind wide;
  #L1c8a3a.  v1:= v4.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.responseHeaders` @type ^`java.util.Map` @kind object;
  #L1c8a3e.  v0.`com.android.volley.Cache$Entry.responseHeaders` @type ^`java.util.Map` := v1 @kind object;
  #L1c8a42.  return v0 @kind object;
}
procedure `boolean` `writeHeader`(`com.android.volley.toolbox.DiskBasedCache$CacheHeader` v6 @kind this, `java.io.OutputStream` v7 @kind object @name `os`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.writeHeader:(Ljava/io/OutputStream;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L1c8a54.  v1:= 1I;
  #L1c8a56.  v2:= 0I;
  #L1c8a58.  v3:= 538247942I;
  #L1c8a5e.  call `writeInt`(v7, v3) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeInt:(Ljava/io/OutputStream;I)V` @kind static;
  #L1c8a64.  v3:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` @kind object;
  #L1c8a68.  call `writeString`(v7, v3) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeString:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind static;
  #L1c8a6e.  v3:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` @kind object;
  #L1c8a72.  if v3 != 0 then goto L1c8aba;
  #L1c8a76.  v3:= "" @kind object;
  #L1c8a7a.  call `writeString`(v7, v3) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeString:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind static;
  #L1c8a80.  v4:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.serverDate` @type ^`long` @kind wide;
  #L1c8a84.  call `writeLong`(v7, v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @kind static;
  #L1c8a8a.  v4:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.lastModified` @type ^`long` @kind wide;
  #L1c8a8e.  call `writeLong`(v7, v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @kind static;
  #L1c8a94.  v4:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.ttl` @type ^`long` @kind wide;
  #L1c8a98.  call `writeLong`(v7, v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @kind static;
  #L1c8a9e.  v4:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.softTtl` @type ^`long` @kind wide;
  #L1c8aa2.  call `writeLong`(v7, v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @kind static;
  #L1c8aa8.  v3:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.responseHeaders` @type ^`java.util.Map` @kind object;
  #L1c8aac.  call `writeStringStringMap`(v3, v7) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeStringStringMap:(Ljava/util/Map;Ljava/io/OutputStream;)V` @kind static;
  #L1c8ab2.  call `flush`(v7) @signature `Ljava/io/OutputStream;.flush:()V` @kind virtual;
  #L1c8ab8.  return v1;
  #L1c8aba.  v3:= v6.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.etag` @type ^`java.lang.String` @kind object;
  #L1c8abe.  goto L1c8a7a;
  #L1c8ac0.  v0:= Exception @type ^`java.io.IOException` @kind object;
  #L1c8ac2.  v3:= "%s" @kind object;
  #L1c8ac6.  v1:= new `java.lang.Object`[v1];
  #L1c8aca.  call temp:= `toString`(v0) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L1c8ad0.  v4:= temp @kind object;
  #L1c8ad2.  v1[v2]:= v4 @kind object;
  #L1c8ad6.  call `d`(v3, v1) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L1c8adc.  v1:= v2;
  #L1c8ade.  goto L1c8ab8;
  catch `java.io.IOException` @[L1c8a5e..L1c8abe] goto L1c8ac0;
}
