record `com.android.volley.toolbox.ImageRequest` @kind class @AccessFlag PUBLIC extends `com.android.volley.Request` @kind class {
  `android.graphics.Bitmap$Config` `com.android.volley.toolbox.ImageRequest.mDecodeConfig` @AccessFlag PRIVATE_FINAL;
  `com.android.volley.Response$Listener` `com.android.volley.toolbox.ImageRequest.mListener` @AccessFlag PRIVATE_FINAL;
  `int` `com.android.volley.toolbox.ImageRequest.mMaxHeight` @AccessFlag PRIVATE_FINAL;
  `int` `com.android.volley.toolbox.ImageRequest.mMaxWidth` @AccessFlag PRIVATE_FINAL;
  `android.widget.ImageView$ScaleType` `com.android.volley.toolbox.ImageRequest.mScaleType` @AccessFlag PRIVATE;
}
global `float` `@@com.android.volley.toolbox.ImageRequest.DEFAULT_IMAGE_BACKOFF_MULT` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.android.volley.toolbox.ImageRequest.DEFAULT_IMAGE_MAX_RETRIES` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.android.volley.toolbox.ImageRequest.DEFAULT_IMAGE_TIMEOUT_MS` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.lang.Object` `@@com.android.volley.toolbox.ImageRequest.sDecodeLock` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/android/volley/toolbox/ImageRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L2b0e3c.  v0:= new `java.lang.Object`;
  #L2b0e40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2b0e46.  `@@com.android.volley.toolbox.ImageRequest.sDecodeLock` @type ^`java.lang.Object` := v0 @kind object;
  #L2b0e4a.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.ImageRequest` v8 @kind this, `java.lang.String` v9 @kind object @name `url`, `com.android.volley.Response$Listener` v10 @kind object, `int` v11 @name `maxWidth`, `int` v12 @name `maxHeight`, `android.graphics.Bitmap$Config` v13 @kind object @name `decodeConfig`, `com.android.volley.Response$ErrorListener` v14 @kind object @name `errorListener`) @signature `Lcom/android/volley/toolbox/ImageRequest;.<init>:(Ljava/lang/String;Lcom/android/volley/Response$Listener;IILandroid/graphics/Bitmap$Config;Lcom/android/volley/Response$ErrorListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b0e5c.  v5:= `@@android.widget.ImageView$ScaleType.CENTER_INSIDE` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2b0e60.  v0:= v8 @kind object;
  #L2b0e62.  v1:= v9 @kind object;
  #L2b0e64.  v2:= v10 @kind object;
  #L2b0e66.  v3:= v11;
  #L2b0e68.  v4:= v12;
  #L2b0e6a.  v6:= v13 @kind object;
  #L2b0e6c.  v7:= v14 @kind object;
  #L2b0e6e.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/android/volley/toolbox/ImageRequest;.<init>:(Ljava/lang/String;Lcom/android/volley/Response$Listener;IILandroid/widget/ImageView$ScaleType;Landroid/graphics/Bitmap$Config;Lcom/android/volley/Response$ErrorListener;)V` @kind direct;
  #L2b0e74.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.ImageRequest` v4 @kind this, `java.lang.String` v5 @kind object @name `url`, `com.android.volley.Response$Listener` v6 @kind object, `int` v7 @name `maxWidth`, `int` v8 @name `maxHeight`, `android.widget.ImageView$ScaleType` v9 @kind object @name `scaleType`, `android.graphics.Bitmap$Config` v10 @kind object @name `decodeConfig`, `com.android.volley.Response$ErrorListener` v11 @kind object @name `errorListener`) @signature `Lcom/android/volley/toolbox/ImageRequest;.<init>:(Ljava/lang/String;Lcom/android/volley/Response$Listener;IILandroid/widget/ImageView$ScaleType;Landroid/graphics/Bitmap$Config;Lcom/android/volley/Response$ErrorListener;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b0e88.  v0:= 0I;
  #L2b0e8a.  call `<init>`(v4, v0, v5, v11) @signature `Lcom/android/volley/Request;.<init>:(ILjava/lang/String;Lcom/android/volley/Response$ErrorListener;)V` @kind direct;
  #L2b0e90.  v0:= new `com.android.volley.DefaultRetryPolicy`;
  #L2b0e94.  v1:= 1000I;
  #L2b0e98.  v2:= 2I;
  #L2b0e9a.  v3:= 2.0F;
  #L2b0e9e.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/android/volley/DefaultRetryPolicy;.<init>:(IIF)V` @kind direct;
  #L2b0ea4.  call temp:= `setRetryPolicy`(v4, v0) @signature `Lcom/android/volley/toolbox/ImageRequest;.setRetryPolicy:(Lcom/android/volley/RetryPolicy;)Lcom/android/volley/Request;` @kind virtual;
  #L2b0eaa.  v4.`com.android.volley.toolbox.ImageRequest.mListener` @type ^`com.android.volley.Response$Listener` := v6 @kind object;
  #L2b0eae.  v4.`com.android.volley.toolbox.ImageRequest.mDecodeConfig` @type ^`android.graphics.Bitmap$Config` := v10 @kind object;
  #L2b0eb2.  v4.`com.android.volley.toolbox.ImageRequest.mMaxWidth` @type ^`int` := v7;
  #L2b0eb6.  v4.`com.android.volley.toolbox.ImageRequest.mMaxHeight` @type ^`int` := v8;
  #L2b0eba.  v4.`com.android.volley.toolbox.ImageRequest.mScaleType` @type ^`android.widget.ImageView$ScaleType` := v9 @kind object;
  #L2b0ebe.  return @kind void;
}
procedure `com.android.volley.Response` `doParse`(`com.android.volley.toolbox.ImageRequest` v13 @kind this, `com.android.volley.NetworkResponse` v14 @kind object @name `response`) @signature `Lcom/android/volley/toolbox/ImageRequest;.doParse:(Lcom/android/volley/NetworkResponse;)Lcom/android/volley/Response;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2b0ed0.  v12:= 1I;
  #L2b0ed2.  v11:= 0I;
  #L2b0ed4.  v3:= v14.`com.android.volley.NetworkResponse.data` @type ^`byte`[] @kind object;
  #L2b0ed8.  v4:= new `android.graphics.BitmapFactory$Options`;
  #L2b0edc.  call `<init>`(v4) @signature `Landroid/graphics/BitmapFactory$Options;.<init>:()V` @kind direct;
  #L2b0ee2.  v2:= 0I;
  #L2b0ee4.  v8:= v13.`com.android.volley.toolbox.ImageRequest.mMaxWidth` @type ^`int`;
  #L2b0ee8.  if v8 != 0 then goto L2b0f1e;
  #L2b0eec.  v8:= v13.`com.android.volley.toolbox.ImageRequest.mMaxHeight` @type ^`int`;
  #L2b0ef0.  if v8 != 0 then goto L2b0f1e;
  #L2b0ef4.  v8:= v13.`com.android.volley.toolbox.ImageRequest.mDecodeConfig` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L2b0ef8.  v4.`android.graphics.BitmapFactory$Options.inPreferredConfig` @type ^`android.graphics.Bitmap$Config` := v8 @kind object;
  #L2b0efc.  v8:= length @variable v3;
  #L2b0efe.  call temp:= `decodeByteArray`(v3, v11, v8, v4) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2b0f04.  v2:= temp @kind object;
  #L2b0f06.  if v2 != 0 then goto L2b0fa4;
  #L2b0f0a.  v8:= new `com.android.volley.ParseError`;
  #L2b0f0e.  call `<init>`(v8, v14) @signature `Lcom/android/volley/ParseError;.<init>:(Lcom/android/volley/NetworkResponse;)V` @kind direct;
  #L2b0f14.  call temp:= `error`(v8) @signature `Lcom/android/volley/Response;.error:(Lcom/android/volley/VolleyError;)Lcom/android/volley/Response;` @kind static;
  #L2b0f1a.  v8:= temp @kind object;
  #L2b0f1c.  return v8 @kind object;
  #L2b0f1e.  v4.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v12 @kind boolean;
  #L2b0f22.  v8:= length @variable v3;
  #L2b0f24.  call temp:= `decodeByteArray`(v3, v11, v8, v4) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2b0f2a.  v1:= v4.`android.graphics.BitmapFactory$Options.outWidth` @type ^`int`;
  #L2b0f2e.  v0:= v4.`android.graphics.BitmapFactory$Options.outHeight` @type ^`int`;
  #L2b0f32.  v8:= v13.`com.android.volley.toolbox.ImageRequest.mMaxWidth` @type ^`int`;
  #L2b0f36.  v9:= v13.`com.android.volley.toolbox.ImageRequest.mMaxHeight` @type ^`int`;
  #L2b0f3a.  v10:= v13.`com.android.volley.toolbox.ImageRequest.mScaleType` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2b0f3e.  call temp:= `getResizedDimension`(v8, v9, v1, v0, v10) @signature `Lcom/android/volley/toolbox/ImageRequest;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @kind static;
  #L2b0f44.  v6:= temp;
  #L2b0f46.  v8:= v13.`com.android.volley.toolbox.ImageRequest.mMaxHeight` @type ^`int`;
  #L2b0f4a.  v9:= v13.`com.android.volley.toolbox.ImageRequest.mMaxWidth` @type ^`int`;
  #L2b0f4e.  v10:= v13.`com.android.volley.toolbox.ImageRequest.mScaleType` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2b0f52.  call temp:= `getResizedDimension`(v8, v9, v0, v1, v10) @signature `Lcom/android/volley/toolbox/ImageRequest;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @kind static;
  #L2b0f58.  v5:= temp;
  #L2b0f5a.  v4.`android.graphics.BitmapFactory$Options.inJustDecodeBounds` @type ^`boolean` := v11 @kind boolean;
  #L2b0f5e.  call temp:= `findBestSampleSize`(v1, v0, v6, v5) @signature `Lcom/android/volley/toolbox/ImageRequest;.findBestSampleSize:(IIII)I` @kind static;
  #L2b0f64.  v8:= temp;
  #L2b0f66.  v4.`android.graphics.BitmapFactory$Options.inSampleSize` @type ^`int` := v8;
  #L2b0f6a.  v8:= length @variable v3;
  #L2b0f6c.  call temp:= `decodeByteArray`(v3, v11, v8, v4) @signature `Landroid/graphics/BitmapFactory;.decodeByteArray:([BIILandroid/graphics/BitmapFactory$Options;)Landroid/graphics/Bitmap;` @kind static;
  #L2b0f72.  v7:= temp @kind object;
  #L2b0f74.  if v7 == 0 then goto L2b0fa0;
  #L2b0f78.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L2b0f7e.  v8:= temp;
  #L2b0f80.  if v8 > v6 then goto L2b0f90;
  #L2b0f84.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L2b0f8a.  v8:= temp;
  #L2b0f8c.  if v8 <= v5 then goto L2b0fa0;
  #L2b0f90.  call temp:= `createScaledBitmap`(v7, v6, v5, v12) @signature `Landroid/graphics/Bitmap;.createScaledBitmap:(Landroid/graphics/Bitmap;IIZ)Landroid/graphics/Bitmap;` @kind static;
  #L2b0f96.  v2:= temp @kind object;
  #L2b0f98.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L2b0f9e.  goto L2b0f06;
  #L2b0fa0.  v2:= v7 @kind object;
  #L2b0fa2.  goto L2b0f06;
  #L2b0fa4.  call temp:= `parseCacheHeaders`(v14) @signature `Lcom/android/volley/toolbox/HttpHeaderParser;.parseCacheHeaders:(Lcom/android/volley/NetworkResponse;)Lcom/android/volley/Cache$Entry;` @kind static;
  #L2b0faa.  v8:= temp @kind object;
  #L2b0fac.  call temp:= `success`(v2, v8) @signature `Lcom/android/volley/Response;.success:(Ljava/lang/Object;Lcom/android/volley/Cache$Entry;)Lcom/android/volley/Response;` @kind static;
  #L2b0fb2.  v8:= temp @kind object;
  #L2b0fb4.  goto L2b0f1c;
}
procedure `int` `findBestSampleSize`(`int` v12 @name `actualWidth`, `int` v13 @name `actualHeight`, `int` v14 @name `desiredWidth`, `int` v15 @name `desiredHeight`) @signature `Lcom/android/volley/toolbox/ImageRequest;.findBestSampleSize:(IIII)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2b0fc8.  v8:= (`double`) v12 @kind i2d;
  #L2b0fca.  v10:= (`double`) v14 @kind i2d;
  #L2b0fcc.  v6:= v8 / v10 @kind double;
  #L2b0fd0.  v8:= (`double`) v13 @kind i2d;
  #L2b0fd2.  v10:= (`double`) v15 @kind i2d;
  #L2b0fd4.  v0:= v8 / v10 @kind double;
  #L2b0fd8.  call temp:= `min`(v6, v0) @signature `Ljava/lang/Math;.min:(DD)D` @kind static;
  #L2b0fde.  v4:= temp @kind wide;
  #L2b0fe0.  v2:= 1.0F;
  #L2b0fe4.  v3:= 2.0F;
  #L2b0fe8.  v3:= v3 * v2 @kind float;
  #L2b0fea.  v8:= (`double`) v3 @kind f2d;
  #L2b0fec.  v3:= dcmpg(v8, v4);
  #L2b0ff0.  if v3 > 0 then goto L2b0ffc;
  #L2b0ff4.  v3:= 2.0F;
  #L2b0ff8.  v2:= v2 * v3 @kind float;
  #L2b0ffa.  goto L2b0fe4;
  #L2b0ffc.  v3:= (`int`) v2 @kind f2i;
  #L2b0ffe.  return v3;
}
procedure `int` `getResizedDimension`(`int` v8 @name `maxPrimary`, `int` v9 @name `maxSecondary`, `int` v10 @name `actualPrimary`, `int` v11 @name `actualSecondary`, `android.widget.ImageView$ScaleType` v12 @kind object @name `scaleType`) @signature `Lcom/android/volley/toolbox/ImageRequest;.getResizedDimension:(IIIILandroid/widget/ImageView$ScaleType;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b1010.  if v8 != 0 then goto L2b101a;
  #L2b1014.  if v9 != 0 then goto L2b101a;
  #L2b1018.  return v10;
  #L2b101a.  v3:= `@@android.widget.ImageView$ScaleType.FIT_XY` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2b101e.  if v12 != v3 then goto L2b102a;
  #L2b1022.  if v8 == 0 then goto L2b1018;
  #L2b1026.  v10:= v8;
  #L2b1028.  goto L2b1018;
  #L2b102a.  if v8 != 0 then goto L2b103e;
  #L2b102e.  v4:= (`double`) v9 @kind i2d;
  #L2b1030.  v6:= (`double`) v11 @kind i2d;
  #L2b1032.  v0:= v4 / v6 @kind double;
  #L2b1036.  v4:= (`double`) v10 @kind i2d;
  #L2b1038.  v4:= v4 * v0 @kind double;
  #L2b103a.  v10:= (`int`) v4 @kind d2i;
  #L2b103c.  goto L2b1018;
  #L2b103e.  if v9 != 0 then goto L2b1046;
  #L2b1042.  v10:= v8;
  #L2b1044.  goto L2b1018;
  #L2b1046.  v4:= (`double`) v11 @kind i2d;
  #L2b1048.  v6:= (`double`) v10 @kind i2d;
  #L2b104a.  v0:= v4 / v6 @kind double;
  #L2b104e.  v2:= v8;
  #L2b1050.  v3:= `@@android.widget.ImageView$ScaleType.CENTER_CROP` @type ^`android.widget.ImageView$ScaleType` @kind object;
  #L2b1054.  if v12 != v3 then goto L2b1070;
  #L2b1058.  v4:= (`double`) v2 @kind i2d;
  #L2b105a.  v4:= v4 * v0 @kind double;
  #L2b105c.  v6:= (`double`) v9 @kind i2d;
  #L2b105e.  v3:= dcmpg(v4, v6);
  #L2b1062.  if v3 >= 0 then goto L2b106c;
  #L2b1066.  v4:= (`double`) v9 @kind i2d;
  #L2b1068.  v4:= v4 / v0 @kind double;
  #L2b106a.  v2:= (`int`) v4 @kind d2i;
  #L2b106c.  v10:= v2;
  #L2b106e.  goto L2b1018;
  #L2b1070.  v4:= (`double`) v2 @kind i2d;
  #L2b1072.  v4:= v4 * v0 @kind double;
  #L2b1074.  v6:= (`double`) v9 @kind i2d;
  #L2b1076.  v3:= dcmpl(v4, v6);
  #L2b107a.  if v3 <= 0 then goto L2b1084;
  #L2b107e.  v4:= (`double`) v9 @kind i2d;
  #L2b1080.  v4:= v4 / v0 @kind double;
  #L2b1082.  v2:= (`int`) v4 @kind d2i;
  #L2b1084.  v10:= v2;
  #L2b1086.  goto L2b1018;
}
procedure `void` `deliverResponse`(`com.android.volley.toolbox.ImageRequest` v1 @kind this, `android.graphics.Bitmap` v2 @kind object @name `response`) @signature `Lcom/android/volley/toolbox/ImageRequest;.deliverResponse:(Landroid/graphics/Bitmap;)V` @AccessFlag PROTECTED {
    temp;
    v0;

  #L2b1098.  v0:= v1.`com.android.volley.toolbox.ImageRequest.mListener` @type ^`com.android.volley.Response$Listener` @kind object;
  #L2b109c.  call `onResponse`(v0, v2) @signature `Lcom/android/volley/Response$Listener;.onResponse:(Ljava/lang/Object;)V` @kind interface;
  #L2b10a2.  return @kind void;
}
procedure `void` `deliverResponse`(`com.android.volley.toolbox.ImageRequest` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/android/volley/toolbox/ImageRequest;.deliverResponse:(Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L2b10b4.  v1:= (`android.graphics.Bitmap`) v1 @kind object;
  #L2b10b8.  call `deliverResponse`(v0, v1) @signature `Lcom/android/volley/toolbox/ImageRequest;.deliverResponse:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L2b10be.  return @kind void;
}
procedure `com.android.volley.Request$Priority` `getPriority`(`com.android.volley.toolbox.ImageRequest` v1 @kind this) @signature `Lcom/android/volley/toolbox/ImageRequest;.getPriority:()Lcom/android/volley/Request$Priority;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L2b10d0.  v0:= `@@com.android.volley.Request$Priority.LOW` @type ^`com.android.volley.Request$Priority` @kind object;
  #L2b10d4.  return v0 @kind object;
}
procedure `com.android.volley.Response` `parseNetworkResponse`(`com.android.volley.toolbox.ImageRequest` v6 @kind this, `com.android.volley.NetworkResponse` v7 @kind object @name `response`) @signature `Lcom/android/volley/toolbox/ImageRequest;.parseNetworkResponse:(Lcom/android/volley/NetworkResponse;)Lcom/android/volley/Response;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2b10e8.  v2:= `@@com.android.volley.toolbox.ImageRequest.sDecodeLock` @type ^`java.lang.Object` @kind object;
  #L2b10ec.  @monitorenter v2
  #L2b10ee.  call temp:= `doParse`(v6, v7) @signature `Lcom/android/volley/toolbox/ImageRequest;.doParse:(Lcom/android/volley/NetworkResponse;)Lcom/android/volley/Response;` @kind direct;
  #L2b10f4.  v1:= temp @kind object;
  #L2b10f6.  @monitorexit v2
  #L2b10f8.  return v1 @kind object;
  #L2b10fa.  v0:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L2b10fc.  v1:= "Caught OOM for %d byte image, url=%s" @kind object;
  #L2b1100.  v3:= 2I;
  #L2b1102.  v3:= new `java.lang.Object`[v3];
  #L2b1106.  v4:= 0I;
  #L2b1108.  v5:= v7.`com.android.volley.NetworkResponse.data` @type ^`byte`[] @kind object;
  #L2b110c.  v5:= length @variable v5;
  #L2b110e.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2b1114.  v5:= temp @kind object;
  #L2b1116.  v3[v4]:= v5 @kind object;
  #L2b111a.  v4:= 1I;
  #L2b111c.  call temp:= `getUrl`(v6) @signature `Lcom/android/volley/toolbox/ImageRequest;.getUrl:()Ljava/lang/String;` @kind virtual;
  #L2b1122.  v5:= temp @kind object;
  #L2b1124.  v3[v4]:= v5 @kind object;
  #L2b1128.  call `e`(v1, v3) @signature `Lcom/android/volley/VolleyLog;.e:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b112e.  v1:= new `com.android.volley.ParseError`;
  #L2b1132.  call `<init>`(v1, v0) @signature `Lcom/android/volley/ParseError;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L2b1138.  call temp:= `error`(v1) @signature `Lcom/android/volley/Response;.error:(Lcom/android/volley/VolleyError;)Lcom/android/volley/Response;` @kind static;
  #L2b113e.  v1:= temp @kind object;
  #L2b1140.  @monitorexit v2
  #L2b1142.  goto L2b10f8;
  #L2b1144.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b1146.  @monitorexit v2
  #L2b1148.  throw v1;
  catch `java.lang.OutOfMemoryError` @[L2b10ee..L2b10f4] goto L2b10fa;
  catch `java.lang.Throwable` @[L2b10ee..L2b10f4] goto L2b1144;
  catch `java.lang.Throwable` @[L2b10f6..L2b1148] goto L2b1144;
}
