record `com.android.volley.toolbox.DiskBasedCache` @kind class @AccessFlag PUBLIC extends `com.android.volley.Cache` @kind interface {
  `java.util.Map` `com.android.volley.toolbox.DiskBasedCache.mEntries` @AccessFlag PRIVATE_FINAL;
  `int` `com.android.volley.toolbox.DiskBasedCache.mMaxCacheSizeInBytes` @AccessFlag PRIVATE_FINAL;
  `java.io.File` `com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @AccessFlag PRIVATE_FINAL;
  `long` `com.android.volley.toolbox.DiskBasedCache.mTotalSize` @AccessFlag PRIVATE;
}
global `int` `@@com.android.volley.toolbox.DiskBasedCache.CACHE_MAGIC` @AccessFlag PRIVATE_STATIC_FINAL;
global `int` `@@com.android.volley.toolbox.DiskBasedCache.DEFAULT_DISK_USAGE_BYTES` @AccessFlag PRIVATE_STATIC_FINAL;
global `float` `@@com.android.volley.toolbox.DiskBasedCache.HYSTERESIS_FACTOR` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache` v1 @kind this, `java.io.File` v2 @kind object @name `rootDirectory`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.<init>:(Ljava/io/File;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L2af97c.  v0:= 5242880I;
  #L2af980.  call `<init>`(v1, v2, v0) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.<init>:(Ljava/io/File;I)V` @kind direct;
  #L2af986.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache` v4 @kind this, `java.io.File` v5 @kind object @name `rootDirectory`, `int` v6 @name `maxCacheSizeInBytes`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.<init>:(Ljava/io/File;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2af998.  call `<init>`(v4) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L2af99e.  v0:= new `java.util.LinkedHashMap`;
  #L2af9a2.  v1:= 16I;
  #L2af9a6.  v2:= 0.75F;
  #L2af9aa.  v3:= 1I;
  #L2af9ac.  call `<init>`(v0, v1, v2, v3) @signature `Ljava/util/LinkedHashMap;.<init>:(IFZ)V` @kind direct;
  #L2af9b2.  v4.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` := v0 @kind object;
  #L2af9b6.  v0:= 0L;
  #L2af9ba.  v4.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v0 @kind wide;
  #L2af9be.  v4.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` := v5 @kind object;
  #L2af9c2.  v4.`com.android.volley.toolbox.DiskBasedCache.mMaxCacheSizeInBytes` @type ^`int` := v6;
  #L2af9c6.  return @kind void;
}
procedure `java.lang.String` `getFilenameForKey`(`com.android.volley.toolbox.DiskBasedCache` v5 @kind this, `java.lang.String` v6 @kind object @name `key`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFilenameForKey:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2af9d8.  call temp:= `length`(v6) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2af9de.  v2:= temp;
  #L2af9e0.  v0:= v2 / 2;
  #L2af9e4.  v2:= 0I;
  #L2af9e6.  call temp:= `substring`(v6, v2, v0) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L2af9ec.  v2:= temp @kind object;
  #L2af9ee.  call temp:= `hashCode`(v2) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2af9f4.  v2:= temp;
  #L2af9f6.  call temp:= `valueOf`(v2) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2af9fc.  v1:= temp @kind object;
  #L2af9fe.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2afa04.  v2:= temp @kind object;
  #L2afa06.  call temp:= `substring`(v6, v0) @signature `Ljava/lang/String;.substring:(I)Ljava/lang/String;` @kind virtual;
  #L2afa0c.  v3:= temp @kind object;
  #L2afa0e.  call temp:= `hashCode`(v3) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L2afa14.  v3:= temp;
  #L2afa16.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L2afa1c.  v3:= temp @kind object;
  #L2afa1e.  call temp:= `valueOf`(v3) @signature `Ljava/lang/String;.valueOf:(Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L2afa24.  v3:= temp @kind object;
  #L2afa26.  call temp:= `length`(v3) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L2afa2c.  v4:= temp;
  #L2afa2e.  if v4 == 0 then goto L2afa3c;
  #L2afa32.  call temp:= `concat`(v2, v3) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L2afa38.  v1:= temp @kind object;
  #L2afa3a.  return v1 @kind object;
  #L2afa3c.  v1:= new `java.lang.String`;
  #L2afa40.  call `<init>`(v1, v2) @signature `Ljava/lang/String;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afa46.  goto L2afa3a;
}
procedure `void` `pruneIfNeeded`(`com.android.volley.toolbox.DiskBasedCache` v14 @kind this, `int` v15 @name `neededSpace`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.pruneIfNeeded:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;

  #L2afa58.  v10:= v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afa5c.  v12:= (`long`) v15 @kind i2l;
  #L2afa5e.  v10:= v10 + v12 @kind long;
  #L2afa60.  v7:= v14.`com.android.volley.toolbox.DiskBasedCache.mMaxCacheSizeInBytes` @type ^`int`;
  #L2afa64.  v12:= (`long`) v7 @kind i2l;
  #L2afa66.  v7:= lcmp(v10, v12);
  #L2afa6a.  if v7 >= 0 then goto L2afa70;
  #L2afa6e.  return @kind void;
  #L2afa70.  v7:= `@@com.android.volley.VolleyLog.DEBUG` @type ^`boolean` @kind boolean;
  #L2afa74.  if v7 == 0 then goto L2afa88;
  #L2afa78.  v7:= "Pruning old cache entries." @kind object;
  #L2afa7c.  v10:= 0I;
  #L2afa7e.  v10:= new `java.lang.Object`[v10];
  #L2afa82.  call `v`(v7, v10) @signature `Lcom/android/volley/VolleyLog;.v:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2afa88.  v0:= v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afa8c.  v6:= 0I;
  #L2afa8e.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L2afa94.  v8:= temp @kind wide;
  #L2afa96.  v7:= v14.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afa9a.  call temp:= `entrySet`(v7) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2afaa0.  v7:= temp @kind object;
  #L2afaa2.  call temp:= `iterator`(v7) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2afaa8.  v5:= temp @kind object;
  #L2afaaa.  call temp:= `hasNext`(v5) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2afab0.  v7:= temp;
  #L2afab2.  if v7 == 0 then goto L2afb1e;
  #L2afab6.  call temp:= `next`(v5) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2afabc.  v4:= temp @kind object;
  #L2afabe.  v4:= (`java.util.Map$Entry`) v4 @kind object;
  #L2afac2.  call temp:= `getValue`(v4) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2afac8.  v3:= temp @kind object;
  #L2afaca.  v3:= (`com.android.volley.toolbox.DiskBasedCache$CacheHeader`) v3 @kind object;
  #L2aface.  v7:= v3.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` @kind object;
  #L2afad2.  call temp:= `getFileForKey`(v14, v7) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFileForKey:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L2afad8.  v7:= temp @kind object;
  #L2afada.  call temp:= `delete`(v7) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2afae0.  v2:= temp;
  #L2afae2.  if v2 == 0 then goto L2afb74;
  #L2afae6.  v10:= v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afaea.  v12:= v3.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` @kind wide;
  #L2afaee.  v10:= v10 - v12 @kind long;
  #L2afaf0.  v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v10 @kind wide;
  #L2afaf4.  call `remove`(v5) @signature `Ljava/util/Iterator;.remove:()V` @kind interface;
  #L2afafa.  v6:= v6 + 1;
  #L2afafe.  v10:= v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afb02.  v12:= (`long`) v15 @kind i2l;
  #L2afb04.  v10:= v10 + v12 @kind long;
  #L2afb06.  v7:= (`float`) v10 @kind l2f;
  #L2afb08.  v10:= v14.`com.android.volley.toolbox.DiskBasedCache.mMaxCacheSizeInBytes` @type ^`int`;
  #L2afb0c.  v10:= (`float`) v10 @kind i2f;
  #L2afb0e.  v11:= 1063675494I;
  #L2afb14.  v10:= v10 * v11 @kind float;
  #L2afb16.  v7:= fcmpg(v7, v10);
  #L2afb1a.  if v7 >= 0 then goto L2afaaa;
  #L2afb1e.  v7:= `@@com.android.volley.VolleyLog.DEBUG` @type ^`boolean` @kind boolean;
  #L2afb22.  if v7 == 0 then goto L2afa6e;
  #L2afb26.  v7:= "pruned %d files, %d bytes, %d ms" @kind object;
  #L2afb2a.  v10:= 3I;
  #L2afb2c.  v10:= new `java.lang.Object`[v10];
  #L2afb30.  v11:= 0I;
  #L2afb32.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L2afb38.  v12:= temp @kind object;
  #L2afb3a.  v10[v11]:= v12 @kind object;
  #L2afb3e.  v11:= 1I;
  #L2afb40.  v12:= v14.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afb44.  v12:= v12 - v0 @kind long;
  #L2afb46.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2afb4c.  v12:= temp @kind object;
  #L2afb4e.  v10[v11]:= v12 @kind object;
  #L2afb52.  v11:= 2I;
  #L2afb54.  call temp:= `elapsedRealtime`() @signature `Landroid/os/SystemClock;.elapsedRealtime:()J` @kind static;
  #L2afb5a.  v12:= temp @kind wide;
  #L2afb5c.  v12:= v12 - v8 @kind long;
  #L2afb5e.  call temp:= `valueOf`(v12) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L2afb64.  v12:= temp @kind object;
  #L2afb66.  v10[v11]:= v12 @kind object;
  #L2afb6a.  call `v`(v7, v10) @signature `Lcom/android/volley/VolleyLog;.v:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2afb70.  goto L2afa6e;
  #L2afb74.  v7:= "Could not delete cache entry for key=%s, filename=%s" @kind object;
  #L2afb78.  v10:= 2I;
  #L2afb7a.  v10:= new `java.lang.Object`[v10];
  #L2afb7e.  v11:= 0I;
  #L2afb80.  v12:= v3.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` @kind object;
  #L2afb84.  v10[v11]:= v12 @kind object;
  #L2afb88.  v11:= 1I;
  #L2afb8a.  v12:= v3.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` @kind object;
  #L2afb8e.  call temp:= `getFilenameForKey`(v14, v12) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFilenameForKey:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L2afb94.  v12:= temp @kind object;
  #L2afb96.  v10[v11]:= v12 @kind object;
  #L2afb9a.  call `d`(v7, v10) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2afba0.  goto L2afaf4;
}
procedure `void` `putEntry`(`com.android.volley.toolbox.DiskBasedCache` v8 @kind this, `java.lang.String` v9 @kind object @name `key`, `com.android.volley.toolbox.DiskBasedCache$CacheHeader` v10 @kind object @name `entry`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.putEntry:(Ljava/lang/String;Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2afbb4.  v1:= v8.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afbb8.  call temp:= `containsKey`(v1, v9) @signature `Ljava/util/Map;.containsKey:(Ljava/lang/Object;)Z` @kind interface;
  #L2afbbe.  v1:= temp;
  #L2afbc0.  if v1 != 0 then goto L2afbde;
  #L2afbc4.  v2:= v8.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afbc8.  v4:= v10.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` @kind wide;
  #L2afbcc.  v2:= v2 + v4 @kind long;
  #L2afbce.  v8.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v2 @kind wide;
  #L2afbd2.  v1:= v8.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afbd6.  call temp:= `put`(v1, v9, v10) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2afbdc.  return @kind void;
  #L2afbde.  v1:= v8.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afbe2.  call temp:= `get`(v1, v9) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2afbe8.  v0:= temp @kind object;
  #L2afbea.  v0:= (`com.android.volley.toolbox.DiskBasedCache$CacheHeader`) v0 @kind object;
  #L2afbee.  v2:= v8.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afbf2.  v4:= v10.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` @kind wide;
  #L2afbf6.  v6:= v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` @kind wide;
  #L2afbfa.  v4:= v4 - v6 @kind long;
  #L2afbfc.  v2:= v2 + v4 @kind long;
  #L2afbfe.  v8.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v2 @kind wide;
  #L2afc02.  goto L2afbd2;
}
procedure `int` `read`(`java.io.InputStream` v2 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L2afc14.  call temp:= `read`(v2) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L2afc1a.  v0:= temp;
  #L2afc1c.  v1:= -1I;
  #L2afc1e.  if v0 != v1 then goto L2afc2e;
  #L2afc22.  v1:= new `java.io.EOFException`;
  #L2afc26.  call `<init>`(v1) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L2afc2c.  throw v1;
  #L2afc2e.  return v0;
}
procedure `int` `readInt`(`java.io.InputStream` v2 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readInt:(Ljava/io/InputStream;)I` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L2afc40.  v0:= 0I;
  #L2afc42.  call temp:= `read`(v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afc48.  v1:= temp;
  #L2afc4a.  v1:= v1 ^< 0;
  #L2afc4e.  v0:= v0 ^| v1 @kind int;
  #L2afc50.  call temp:= `read`(v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afc56.  v1:= temp;
  #L2afc58.  v1:= v1 ^< 8;
  #L2afc5c.  v0:= v0 ^| v1 @kind int;
  #L2afc5e.  call temp:= `read`(v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afc64.  v1:= temp;
  #L2afc66.  v1:= v1 ^< 16;
  #L2afc6a.  v0:= v0 ^| v1 @kind int;
  #L2afc6c.  call temp:= `read`(v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afc72.  v1:= temp;
  #L2afc74.  v1:= v1 ^< 24;
  #L2afc78.  v0:= v0 ^| v1 @kind int;
  #L2afc7a.  return v0;
}
procedure `long` `readLong`(`java.io.InputStream` v8 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2afc8c.  v6:= 255L;
  #L2afc90.  v0:= 0L;
  #L2afc94.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afc9a.  v2:= temp;
  #L2afc9c.  v2:= (`long`) v2 @kind i2l;
  #L2afc9e.  v2:= v2 ^& v6 @kind long;
  #L2afca0.  v4:= 0I;
  #L2afca2.  v2:= v2 ^< v4 @kind long;
  #L2afca4.  v0:= v0 ^| v2 @kind long;
  #L2afca6.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afcac.  v2:= temp;
  #L2afcae.  v2:= (`long`) v2 @kind i2l;
  #L2afcb0.  v2:= v2 ^& v6 @kind long;
  #L2afcb2.  v4:= 8I;
  #L2afcb6.  v2:= v2 ^< v4 @kind long;
  #L2afcb8.  v0:= v0 ^| v2 @kind long;
  #L2afcba.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afcc0.  v2:= temp;
  #L2afcc2.  v2:= (`long`) v2 @kind i2l;
  #L2afcc4.  v2:= v2 ^& v6 @kind long;
  #L2afcc6.  v4:= 16I;
  #L2afcca.  v2:= v2 ^< v4 @kind long;
  #L2afccc.  v0:= v0 ^| v2 @kind long;
  #L2afcce.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afcd4.  v2:= temp;
  #L2afcd6.  v2:= (`long`) v2 @kind i2l;
  #L2afcd8.  v2:= v2 ^& v6 @kind long;
  #L2afcda.  v4:= 24I;
  #L2afcde.  v2:= v2 ^< v4 @kind long;
  #L2afce0.  v0:= v0 ^| v2 @kind long;
  #L2afce2.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afce8.  v2:= temp;
  #L2afcea.  v2:= (`long`) v2 @kind i2l;
  #L2afcec.  v2:= v2 ^& v6 @kind long;
  #L2afcee.  v4:= 32I;
  #L2afcf2.  v2:= v2 ^< v4 @kind long;
  #L2afcf4.  v0:= v0 ^| v2 @kind long;
  #L2afcf6.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afcfc.  v2:= temp;
  #L2afcfe.  v2:= (`long`) v2 @kind i2l;
  #L2afd00.  v2:= v2 ^& v6 @kind long;
  #L2afd02.  v4:= 40I;
  #L2afd06.  v2:= v2 ^< v4 @kind long;
  #L2afd08.  v0:= v0 ^| v2 @kind long;
  #L2afd0a.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afd10.  v2:= temp;
  #L2afd12.  v2:= (`long`) v2 @kind i2l;
  #L2afd14.  v2:= v2 ^& v6 @kind long;
  #L2afd16.  v4:= 48I;
  #L2afd1a.  v2:= v2 ^< v4 @kind long;
  #L2afd1c.  v0:= v0 ^| v2 @kind long;
  #L2afd1e.  call temp:= `read`(v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.read:(Ljava/io/InputStream;)I` @kind static;
  #L2afd24.  v2:= temp;
  #L2afd26.  v2:= (`long`) v2 @kind i2l;
  #L2afd28.  v2:= v2 ^& v6 @kind long;
  #L2afd2a.  v4:= 56I;
  #L2afd2e.  v2:= v2 ^< v4 @kind long;
  #L2afd30.  v0:= v0 ^| v2 @kind long;
  #L2afd32.  return v0 @kind wide;
}
procedure `java.lang.String` `readString`(`java.io.InputStream` v4 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readString:(Ljava/io/InputStream;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2afd44.  call temp:= `readLong`(v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readLong:(Ljava/io/InputStream;)J` @kind static;
  #L2afd4a.  v2:= temp @kind wide;
  #L2afd4c.  v1:= (`int`) v2 @kind l2i;
  #L2afd4e.  call temp:= `streamToBytes`(v4, v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.streamToBytes:(Ljava/io/InputStream;I)[B` @kind static;
  #L2afd54.  v0:= temp @kind object;
  #L2afd56.  v2:= new `java.lang.String`;
  #L2afd5a.  v3:= "UTF-8" @kind object;
  #L2afd5e.  call `<init>`(v2, v0, v3) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L2afd64.  return v2 @kind object;
}
procedure `java.util.Map` `readStringStringMap`(`java.io.InputStream` v6 @kind object @name `is`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readStringStringMap:(Ljava/io/InputStream;)Ljava/util/Map;` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2afd78.  call temp:= `readInt`(v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readInt:(Ljava/io/InputStream;)I` @kind static;
  #L2afd7e.  v3:= temp;
  #L2afd80.  if v3 != 0 then goto L2afdbe;
  #L2afd84.  call temp:= `emptyMap`() @signature `Ljava/util/Collections;.emptyMap:()Ljava/util/Map;` @kind static;
  #L2afd8a.  v2:= temp @kind object;
  #L2afd8c.  v0:= 0I;
  #L2afd8e.  if v0 >= v3 then goto L2afdca;
  #L2afd92.  call temp:= `readString`(v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readString:(Ljava/io/InputStream;)Ljava/lang/String;` @kind static;
  #L2afd98.  v5:= temp @kind object;
  #L2afd9a.  call temp:= `intern`(v5) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L2afda0.  v1:= temp @kind object;
  #L2afda2.  call temp:= `readString`(v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.readString:(Ljava/io/InputStream;)Ljava/lang/String;` @kind static;
  #L2afda8.  v5:= temp @kind object;
  #L2afdaa.  call temp:= `intern`(v5) @signature `Ljava/lang/String;.intern:()Ljava/lang/String;` @kind virtual;
  #L2afdb0.  v4:= temp @kind object;
  #L2afdb2.  call temp:= `put`(v2, v1, v4) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2afdb8.  v0:= v0 + 1;
  #L2afdbc.  goto L2afd8e;
  #L2afdbe.  v2:= new `java.util.HashMap`;
  #L2afdc2.  call `<init>`(v2, v3) @signature `Ljava/util/HashMap;.<init>:(I)V` @kind direct;
  #L2afdc8.  goto L2afd8c;
  #L2afdca.  return v2 @kind object;
}
procedure `void` `removeEntry`(`com.android.volley.toolbox.DiskBasedCache` v6 @kind this, `java.lang.String` v7 @kind object @name `key`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.removeEntry:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2afddc.  v1:= v6.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afde0.  call temp:= `get`(v1, v7) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2afde6.  v0:= temp @kind object;
  #L2afde8.  v0:= (`com.android.volley.toolbox.DiskBasedCache$CacheHeader`) v0 @kind object;
  #L2afdec.  if v0 == 0 then goto L2afe08;
  #L2afdf0.  v2:= v6.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` @kind wide;
  #L2afdf4.  v4:= v0.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` @kind wide;
  #L2afdf8.  v2:= v2 - v4 @kind long;
  #L2afdfa.  v6.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v2 @kind wide;
  #L2afdfe.  v1:= v6.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2afe02.  call temp:= `remove`(v1, v7) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2afe08.  return @kind void;
}
procedure `byte`[] `streamToBytes`(`java.io.InputStream` v6 @kind object @name `in`, `int` v7 @name `length`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.streamToBytes:(Ljava/io/InputStream;I)[B` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L2afe1c.  v0:= new `byte`[v7];
  #L2afe20.  v2:= 0I;
  #L2afe22.  if v2 >= v7 then goto L2afe3c;
  #L2afe26.  v3:= v7 - v2 @kind int;
  #L2afe2a.  call temp:= `read`(v6, v0, v2, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L2afe30.  v1:= temp;
  #L2afe32.  v3:= -1I;
  #L2afe34.  if v1 == v3 then goto L2afe3c;
  #L2afe38.  v2:= v2 + v1 @kind int;
  #L2afe3a.  goto L2afe22;
  #L2afe3c.  if v2 == v7 then goto L2afe96;
  #L2afe40.  v3:= new `java.io.IOException`;
  #L2afe44.  v4:= new `java.lang.StringBuilder`;
  #L2afe48.  v5:= 50I;
  #L2afe4c.  call `<init>`(v4, v5) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L2afe52.  v5:= "Expected " @kind object;
  #L2afe56.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2afe5c.  v4:= temp @kind object;
  #L2afe5e.  call temp:= `append`(v4, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2afe64.  v4:= temp @kind object;
  #L2afe66.  v5:= " bytes, read " @kind object;
  #L2afe6a.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2afe70.  v4:= temp @kind object;
  #L2afe72.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L2afe78.  v4:= temp @kind object;
  #L2afe7a.  v5:= " bytes" @kind object;
  #L2afe7e.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L2afe84.  v4:= temp @kind object;
  #L2afe86.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L2afe8c.  v4:= temp @kind object;
  #L2afe8e.  call `<init>`(v3, v4) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L2afe94.  throw v3;
  #L2afe96.  return v0 @kind object;
}
procedure `void` `writeInt`(`java.io.OutputStream` v1 @kind object @name `os`, `int` v2 @name `n`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeInt:(Ljava/io/OutputStream;I)V` @AccessFlag STATIC {
    temp;
    v0;

  #L2afea8.  v0:= v2 ^> 0;
  #L2afeac.  v0:= v0 ^& 255;
  #L2afeb0.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2afeb6.  v0:= v2 ^> 8;
  #L2afeba.  v0:= v0 ^& 255;
  #L2afebe.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2afec4.  v0:= v2 ^> 16;
  #L2afec8.  v0:= v0 ^& 255;
  #L2afecc.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2afed2.  v0:= v2 ^> 24;
  #L2afed6.  v0:= v0 ^& 255;
  #L2afeda.  call `write`(v1, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2afee0.  return @kind void;
}
procedure `void` `writeLong`(`java.io.OutputStream` v3 @kind object @name `os`, `long` v4 @name `n`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2afef4.  v0:= 0I;
  #L2afef6.  v0:= v4 ^>> v0 @kind long;
  #L2afefa.  v0:= (`int`) v0 @kind l2i;
  #L2afefc.  v0:= (`byte`) v0 @kind i2b;
  #L2afefe.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff04.  v0:= 8I;
  #L2aff08.  v0:= v4 ^>> v0 @kind long;
  #L2aff0c.  v0:= (`int`) v0 @kind l2i;
  #L2aff0e.  v0:= (`byte`) v0 @kind i2b;
  #L2aff10.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff16.  v0:= 16I;
  #L2aff1a.  v0:= v4 ^>> v0 @kind long;
  #L2aff1e.  v0:= (`int`) v0 @kind l2i;
  #L2aff20.  v0:= (`byte`) v0 @kind i2b;
  #L2aff22.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff28.  v0:= 24I;
  #L2aff2c.  v0:= v4 ^>> v0 @kind long;
  #L2aff30.  v0:= (`int`) v0 @kind l2i;
  #L2aff32.  v0:= (`byte`) v0 @kind i2b;
  #L2aff34.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff3a.  v0:= 32I;
  #L2aff3e.  v0:= v4 ^>> v0 @kind long;
  #L2aff42.  v0:= (`int`) v0 @kind l2i;
  #L2aff44.  v0:= (`byte`) v0 @kind i2b;
  #L2aff46.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff4c.  v0:= 40I;
  #L2aff50.  v0:= v4 ^>> v0 @kind long;
  #L2aff54.  v0:= (`int`) v0 @kind l2i;
  #L2aff56.  v0:= (`byte`) v0 @kind i2b;
  #L2aff58.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff5e.  v0:= 48I;
  #L2aff62.  v0:= v4 ^>> v0 @kind long;
  #L2aff66.  v0:= (`int`) v0 @kind l2i;
  #L2aff68.  v0:= (`byte`) v0 @kind i2b;
  #L2aff6a.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff70.  v0:= 56I;
  #L2aff74.  v0:= v4 ^>> v0 @kind long;
  #L2aff78.  v0:= (`int`) v0 @kind l2i;
  #L2aff7a.  v0:= (`byte`) v0 @kind i2b;
  #L2aff7c.  call `write`(v3, v0) @signature `Ljava/io/OutputStream;.write:(I)V` @kind virtual;
  #L2aff82.  return @kind void;
}
procedure `void` `writeString`(`java.io.OutputStream` v4 @kind object @name `os`, `java.lang.String` v5 @kind object @name `s`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeString:(Ljava/io/OutputStream;Ljava/lang/String;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2aff94.  v1:= "UTF-8" @kind object;
  #L2aff98.  call temp:= `getBytes`(v5, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L2aff9e.  v0:= temp @kind object;
  #L2affa0.  v1:= length @variable v0;
  #L2affa2.  v2:= (`long`) v1 @kind i2l;
  #L2affa4.  call `writeLong`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeLong:(Ljava/io/OutputStream;J)V` @kind static;
  #L2affaa.  v1:= 0I;
  #L2affac.  v2:= length @variable v0;
  #L2affae.  call `write`(v4, v0, v1, v2) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L2affb4.  return @kind void;
}
procedure `void` `writeStringStringMap`(`java.util.Map` v3 @kind object, `java.io.OutputStream` v4 @kind object @name `os`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeStringStringMap:(Ljava/util/Map;Ljava/io/OutputStream;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L2affc8.  if v3 == 0 then goto L2b0028;
  #L2affcc.  call temp:= `size`(v3) @signature `Ljava/util/Map;.size:()I` @kind interface;
  #L2affd2.  v2:= temp;
  #L2affd4.  call `writeInt`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeInt:(Ljava/io/OutputStream;I)V` @kind static;
  #L2affda.  call temp:= `entrySet`(v3) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L2affe0.  v2:= temp @kind object;
  #L2affe2.  call temp:= `iterator`(v2) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L2affe8.  v1:= temp @kind object;
  #L2affea.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L2afff0.  v2:= temp;
  #L2afff2.  if v2 == 0 then goto L2b0030;
  #L2afff6.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L2afffc.  v0:= temp @kind object;
  #L2afffe.  v0:= (`java.util.Map$Entry`) v0 @kind object;
  #L2b0002.  call temp:= `getKey`(v0) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L2b0008.  v2:= temp @kind object;
  #L2b000a.  v2:= (`java.lang.String`) v2 @kind object;
  #L2b000e.  call `writeString`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeString:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind static;
  #L2b0014.  call temp:= `getValue`(v0) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L2b001a.  v2:= temp @kind object;
  #L2b001c.  v2:= (`java.lang.String`) v2 @kind object;
  #L2b0020.  call `writeString`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeString:(Ljava/io/OutputStream;Ljava/lang/String;)V` @kind static;
  #L2b0026.  goto L2affea;
  #L2b0028.  v2:= 0I;
  #L2b002a.  call `writeInt`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.writeInt:(Ljava/io/OutputStream;I)V` @kind static;
  #L2b0030.  return @kind void;
}
procedure `void` `clear`(`com.android.volley.toolbox.DiskBasedCache` v8 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L2b0044.  @monitorenter v8
  #L2b0046.  v5:= v8.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b004a.  call temp:= `listFiles`(v5) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L2b0050.  v2:= temp @kind object;
  #L2b0052.  if v2 == 0 then goto L2b0070;
  #L2b0056.  v0:= v2 @kind object;
  #L2b0058.  v4:= length @variable v0;
  #L2b005a.  v3:= 0I;
  #L2b005c.  if v3 >= v4 then goto L2b0070;
  #L2b0060.  v1:= v0[v3] @kind object;
  #L2b0064.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2b006a.  v3:= v3 + 1;
  #L2b006e.  goto L2b005c;
  #L2b0070.  v5:= v8.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2b0074.  call `clear`(v5) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L2b007a.  v6:= 0L;
  #L2b007e.  v8.`com.android.volley.toolbox.DiskBasedCache.mTotalSize` @type ^`long` := v6 @kind wide;
  #L2b0082.  v5:= "Cache cleared." @kind object;
  #L2b0086.  v6:= 0I;
  #L2b0088.  v6:= new `java.lang.Object`[v6];
  #L2b008c.  call `d`(v5, v6) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b0092.  @monitorexit v8
  #L2b0094.  return @kind void;
  #L2b0096.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0098.  @monitorexit v8
  #L2b009a.  throw v5;
  catch `java.lang.Throwable` @[L2b0046..L2b0092] goto L2b0096;
}
procedure `com.android.volley.Cache$Entry` `get`(`com.android.volley.toolbox.DiskBasedCache` v12 @kind this, `java.lang.String` v13 @kind object @name `key`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.get:(Ljava/lang/String;)Lcom/android/volley/Cache$Entry;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L2b00b8.  v7:= 0I;
  #L2b00ba.  @monitorenter v12
  #L2b00bc.  v8:= v12.`com.android.volley.toolbox.DiskBasedCache.mEntries` @type ^`java.util.Map` @kind object;
  #L2b00c0.  call temp:= `get`(v8, v13) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L2b00c6.  v4:= temp @kind object;
  #L2b00c8.  v4:= (`com.android.volley.toolbox.DiskBasedCache$CacheHeader`) v4 @kind object;
  #L2b00cc.  if v4 != 0 then goto L2b00d4;
  #L2b00d0.  @monitorexit v12
  #L2b00d2.  return v7 @kind object;
  #L2b00d4.  call temp:= `getFileForKey`(v12, v13) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFileForKey:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L2b00da.  v5:= temp @kind object;
  #L2b00dc.  v0:= 0I;
  #L2b00de.  v1:= new `com.android.volley.toolbox.DiskBasedCache$CountingInputStream`;
  #L2b00e2.  v8:= new `java.io.BufferedInputStream`;
  #L2b00e6.  v9:= new `java.io.FileInputStream`;
  #L2b00ea.  call `<init>`(v9, v5) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2b00f0.  call `<init>`(v8, v9) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2b00f6.  v9:= 0I;
  #L2b00f8.  call `<init>`(v1, v8, v9) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;Lcom/android/volley/toolbox/DiskBasedCache$1;)V` @kind direct;
  #L2b00fe.  call temp:= `readHeader`(v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.readHeader:(Ljava/io/InputStream;)Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;` @kind static;
  #L2b0104.  call temp:= `length`(v5) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L2b010a.  v8:= temp @kind wide;
  #L2b010c.  call temp:= `access$100`(v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.access$100:(Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;)I` @kind static;
  #L2b0112.  v10:= temp;
  #L2b0114.  v10:= (`long`) v10 @kind i2l;
  #L2b0116.  v8:= v8 - v10 @kind long;
  #L2b0118.  v8:= (`int`) v8 @kind l2i;
  #L2b011a.  call temp:= `streamToBytes`(v1, v8) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.streamToBytes:(Ljava/io/InputStream;I)[B` @kind static;
  #L2b0120.  v2:= temp @kind object;
  #L2b0122.  call temp:= `toCacheEntry`(v4, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.toCacheEntry:([B)Lcom/android/volley/Cache$Entry;` @kind virtual;
  #L2b0128.  v8:= temp @kind object;
  #L2b012a.  if v1 == 0 then goto L2b0134;
  #L2b012e.  call `close`(v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.close:()V` @kind virtual;
  #L2b0134.  v7:= v8 @kind object;
  #L2b0136.  goto L2b00d0;
  #L2b0138.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2b013a.  goto L2b00d0;
  #L2b013c.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2b013e.  v8:= "%s: %s" @kind object;
  #L2b0142.  v9:= 2I;
  #L2b0144.  v9:= new `java.lang.Object`[v9];
  #L2b0148.  v10:= 0I;
  #L2b014a.  call temp:= `getAbsolutePath`(v5) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L2b0150.  v11:= temp @kind object;
  #L2b0152.  v9[v10]:= v11 @kind object;
  #L2b0156.  v10:= 1I;
  #L2b0158.  call temp:= `toString`(v3) @signature `Ljava/io/IOException;.toString:()Ljava/lang/String;` @kind virtual;
  #L2b015e.  v11:= temp @kind object;
  #L2b0160.  v9[v10]:= v11 @kind object;
  #L2b0164.  call `d`(v8, v9) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b016a.  call `remove`(v12, v13) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.remove:(Ljava/lang/String;)V` @kind virtual;
  #L2b0170.  if v0 == 0 then goto L2b00d0;
  #L2b0174.  call `close`(v0) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.close:()V` @kind virtual;
  #L2b017a.  goto L2b00d0;
  #L2b017c.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2b017e.  goto L2b00d0;
  #L2b0180.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0182.  if v0 == 0 then goto L2b018c;
  #L2b0186.  call `close`(v0) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.close:()V` @kind virtual;
  #L2b018c.  throw v8;
  #L2b018e.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0190.  @monitorexit v12
  #L2b0192.  throw v7;
  #L2b0194.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L2b0196.  goto L2b00d0;
  #L2b0198.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b019a.  v0:= v1 @kind object;
  #L2b019c.  goto L2b0182;
  #L2b019e.  v3:= Exception @type ^`java.io.IOException` @kind object;
  #L2b01a0.  v0:= v1 @kind object;
  #L2b01a2.  goto L2b013e;
  catch `java.lang.Throwable` @[L2b00bc..L2b00cc] goto L2b018e;
  catch `java.lang.Throwable` @[L2b00d4..L2b00da] goto L2b018e;
  catch `java.io.IOException` @[L2b00de..L2b00fe] goto L2b013c;
  catch `java.lang.Throwable` @[L2b00de..L2b00fe] goto L2b0180;
  catch `java.io.IOException` @[L2b00fe..L2b0128] goto L2b019e;
  catch `java.lang.Throwable` @[L2b00fe..L2b0128] goto L2b0198;
  catch `java.io.IOException` @[L2b012e..L2b0134] goto L2b0138;
  catch `java.lang.Throwable` @[L2b012e..L2b0134] goto L2b018e;
  catch `java.lang.Throwable` @[L2b013e..L2b0170] goto L2b0180;
  catch `java.io.IOException` @[L2b0174..L2b017a] goto L2b017c;
  catch `java.lang.Throwable` @[L2b0174..L2b017a] goto L2b018e;
  catch `java.io.IOException` @[L2b0186..L2b018c] goto L2b0194;
  catch `java.lang.Throwable` @[L2b0186..L2b018c] goto L2b018e;
  catch `java.lang.Throwable` @[L2b018c..L2b018e] goto L2b018e;
}
procedure `java.io.File` `getFileForKey`(`com.android.volley.toolbox.DiskBasedCache` v3 @kind this, `java.lang.String` v4 @kind object @name `key`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFileForKey:(Ljava/lang/String;)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L2b021c.  v0:= new `java.io.File`;
  #L2b0220.  v1:= v3.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b0224.  call temp:= `getFilenameForKey`(v3, v4) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFilenameForKey:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L2b022a.  v2:= temp @kind object;
  #L2b022c.  call `<init>`(v0, v1, v2) @signature `Ljava/io/File;.<init>:(Ljava/io/File;Ljava/lang/String;)V` @kind direct;
  #L2b0232.  return v0 @kind object;
}
procedure `void` `initialize`(`com.android.volley.toolbox.DiskBasedCache` v13 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;

  #L2b0244.  @monitorenter v13
  #L2b0246.  v9:= v13.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b024a.  call temp:= `exists`(v9) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L2b0250.  v9:= temp;
  #L2b0252.  if v9 != 0 then goto L2b028c;
  #L2b0256.  v9:= v13.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b025a.  call temp:= `mkdirs`(v9) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L2b0260.  v9:= temp;
  #L2b0262.  if v9 != 0 then goto L2b0288;
  #L2b0266.  v9:= "Unable to create cache dir %s" @kind object;
  #L2b026a.  v10:= 1I;
  #L2b026c.  v10:= new `java.lang.Object`[v10];
  #L2b0270.  v11:= 0I;
  #L2b0272.  v12:= v13.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b0276.  call temp:= `getAbsolutePath`(v12) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L2b027c.  v12:= temp @kind object;
  #L2b027e.  v10[v11]:= v12 @kind object;
  #L2b0282.  call `e`(v9, v10) @signature `Lcom/android/volley/VolleyLog;.e:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b0288.  @monitorexit v13
  #L2b028a.  return @kind void;
  #L2b028c.  v9:= v13.`com.android.volley.toolbox.DiskBasedCache.mRootDirectory` @type ^`java.io.File` @kind object;
  #L2b0290.  call temp:= `listFiles`(v9) @signature `Ljava/io/File;.listFiles:()[Ljava/io/File;` @kind virtual;
  #L2b0296.  v4:= temp @kind object;
  #L2b0298.  if v4 == 0 then goto L2b0288;
  #L2b029c.  v0:= v4 @kind object;
  #L2b029e.  v8:= length @variable v0;
  #L2b02a0.  v7:= 0I;
  #L2b02a2.  if v7 >= v8 then goto L2b0288;
  #L2b02a6.  v3:= v0[v7] @kind object;
  #L2b02aa.  v5:= 0I;
  #L2b02ac.  v6:= new `java.io.BufferedInputStream`;
  #L2b02b0.  v9:= new `java.io.FileInputStream`;
  #L2b02b4.  call `<init>`(v9, v3) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2b02ba.  call `<init>`(v6, v9) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L2b02c0.  call temp:= `readHeader`(v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.readHeader:(Ljava/io/InputStream;)Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;` @kind static;
  #L2b02c6.  v2:= temp @kind object;
  #L2b02c8.  call temp:= `length`(v3) @signature `Ljava/io/File;.length:()J` @kind virtual;
  #L2b02ce.  v10:= temp @kind wide;
  #L2b02d0.  v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.size` @type ^`long` := v10 @kind wide;
  #L2b02d4.  v9:= v2.`com.android.volley.toolbox.DiskBasedCache$CacheHeader.key` @type ^`java.lang.String` @kind object;
  #L2b02d8.  call `putEntry`(v13, v9, v2) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.putEntry:(Ljava/lang/String;Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;)V` @kind direct;
  #L2b02de.  if v6 == 0 then goto L2b02e8;
  #L2b02e2.  call `close`(v6) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L2b02e8.  v5:= v6 @kind object;
  #L2b02ea.  v7:= v7 + 1;
  #L2b02ee.  goto L2b02a2;
  #L2b02f0.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L2b02f2.  v5:= v6 @kind object;
  #L2b02f4.  goto L2b02ea;
  #L2b02f6.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2b02f8.  if v3 == 0 then goto L2b0302;
  #L2b02fc.  call temp:= `delete`(v3) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2b0302.  if v5 == 0 then goto L2b02ea;
  #L2b0306.  call `close`(v5) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L2b030c.  goto L2b02ea;
  #L2b030e.  v9:= Exception @type ^`java.io.IOException` @kind object;
  #L2b0310.  goto L2b02ea;
  #L2b0312.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0314.  if v5 == 0 then goto L2b031e;
  #L2b0318.  call `close`(v5) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L2b031e.  throw v9;
  #L2b0320.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b0322.  @monitorexit v13
  #L2b0324.  throw v9;
  #L2b0326.  v10:= Exception @type ^`java.io.IOException` @kind object;
  #L2b0328.  goto L2b031e;
  #L2b032a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b032c.  v5:= v6 @kind object;
  #L2b032e.  goto L2b0314;
  #L2b0330.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L2b0332.  v5:= v6 @kind object;
  #L2b0334.  goto L2b02f8;
  catch `java.lang.Throwable` @[L2b0246..L2b0288] goto L2b0320;
  catch `java.lang.Throwable` @[L2b028c..L2b02aa] goto L2b0320;
  catch `java.io.IOException` @[L2b02ac..L2b02c0] goto L2b02f6;
  catch `java.lang.Throwable` @[L2b02ac..L2b02c0] goto L2b0312;
  catch `java.io.IOException` @[L2b02c0..L2b02de] goto L2b0330;
  catch `java.lang.Throwable` @[L2b02c0..L2b02de] goto L2b032a;
  catch `java.io.IOException` @[L2b02e2..L2b02e8] goto L2b02f0;
  catch `java.lang.Throwable` @[L2b02e2..L2b02e8] goto L2b0320;
  catch `java.lang.Throwable` @[L2b02fc..L2b0302] goto L2b0312;
  catch `java.io.IOException` @[L2b0306..L2b030c] goto L2b030e;
  catch `java.lang.Throwable` @[L2b0306..L2b030c] goto L2b0320;
  catch `java.io.IOException` @[L2b0318..L2b031e] goto L2b0326;
  catch `java.lang.Throwable` @[L2b0318..L2b031e] goto L2b0320;
  catch `java.lang.Throwable` @[L2b031e..L2b0320] goto L2b0320;
}
procedure `void` `invalidate`(`com.android.volley.toolbox.DiskBasedCache` v4 @kind this, `java.lang.String` v5 @kind object @name `key`, `boolean` v6 @name `fullExpire`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.invalidate:(Ljava/lang/String;Z)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L2b03b0.  @monitorenter v4
  #L2b03b2.  call temp:= `get`(v4, v5) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.get:(Ljava/lang/String;)Lcom/android/volley/Cache$Entry;` @kind virtual;
  #L2b03b8.  v0:= temp @kind object;
  #L2b03ba.  if v0 == 0 then goto L2b03d8;
  #L2b03be.  v2:= 0L;
  #L2b03c2.  v0.`com.android.volley.Cache$Entry.softTtl` @type ^`long` := v2 @kind wide;
  #L2b03c6.  if v6 == 0 then goto L2b03d2;
  #L2b03ca.  v2:= 0L;
  #L2b03ce.  v0.`com.android.volley.Cache$Entry.ttl` @type ^`long` := v2 @kind wide;
  #L2b03d2.  call `put`(v4, v5, v0) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.put:(Ljava/lang/String;Lcom/android/volley/Cache$Entry;)V` @kind virtual;
  #L2b03d8.  @monitorexit v4
  #L2b03da.  return @kind void;
  #L2b03dc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b03de.  @monitorexit v4
  #L2b03e0.  throw v1;
  catch `java.lang.Throwable` @[L2b03b2..L2b03d8] goto L2b03dc;
}
procedure `void` `put`(`com.android.volley.toolbox.DiskBasedCache` v9 @kind this, `java.lang.String` v10 @kind object @name `key`, `com.android.volley.Cache$Entry` v11 @kind object @name `entry`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.put:(Ljava/lang/String;Lcom/android/volley/Cache$Entry;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L2b0400.  @monitorenter v9
  #L2b0402.  v5:= v11.`com.android.volley.Cache$Entry.data` @type ^`byte`[] @kind object;
  #L2b0406.  v5:= length @variable v5;
  #L2b0408.  call `pruneIfNeeded`(v9, v5) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.pruneIfNeeded:(I)V` @kind direct;
  #L2b040e.  call temp:= `getFileForKey`(v9, v10) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFileForKey:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L2b0414.  v2:= temp @kind object;
  #L2b0416.  v3:= new `java.io.BufferedOutputStream`;
  #L2b041a.  v5:= new `java.io.FileOutputStream`;
  #L2b041e.  call `<init>`(v5, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L2b0424.  call `<init>`(v3, v5) @signature `Ljava/io/BufferedOutputStream;.<init>:(Ljava/io/OutputStream;)V` @kind direct;
  #L2b042a.  v1:= new `com.android.volley.toolbox.DiskBasedCache$CacheHeader`;
  #L2b042e.  call `<init>`(v1, v10, v11) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.<init>:(Ljava/lang/String;Lcom/android/volley/Cache$Entry;)V` @kind direct;
  #L2b0434.  call temp:= `writeHeader`(v1, v3) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;.writeHeader:(Ljava/io/OutputStream;)Z` @kind virtual;
  #L2b043a.  v4:= temp;
  #L2b043c.  if v4 != 0 then goto L2b04a0;
  #L2b0440.  call `close`(v3) @signature `Ljava/io/BufferedOutputStream;.close:()V` @kind virtual;
  #L2b0446.  v5:= "Failed to write header for %s" @kind object;
  #L2b044a.  v6:= 1I;
  #L2b044c.  v6:= new `java.lang.Object`[v6];
  #L2b0450.  v7:= 0I;
  #L2b0452.  call temp:= `getAbsolutePath`(v2) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L2b0458.  v8:= temp @kind object;
  #L2b045a.  v6[v7]:= v8 @kind object;
  #L2b045e.  call `d`(v5, v6) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b0464.  v5:= new `java.io.IOException`;
  #L2b0468.  call `<init>`(v5) @signature `Ljava/io/IOException;.<init>:()V` @kind direct;
  #L2b046e.  throw v5;
  #L2b0470.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L2b0472.  call temp:= `delete`(v2) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2b0478.  v0:= temp;
  #L2b047a.  if v0 != 0 then goto L2b049c;
  #L2b047e.  v5:= "Could not clean up file %s" @kind object;
  #L2b0482.  v6:= 1I;
  #L2b0484.  v6:= new `java.lang.Object`[v6];
  #L2b0488.  v7:= 0I;
  #L2b048a.  call temp:= `getAbsolutePath`(v2) @signature `Ljava/io/File;.getAbsolutePath:()Ljava/lang/String;` @kind virtual;
  #L2b0490.  v8:= temp @kind object;
  #L2b0492.  v6[v7]:= v8 @kind object;
  #L2b0496.  call `d`(v5, v6) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b049c.  @monitorexit v9
  #L2b049e.  return @kind void;
  #L2b04a0.  v5:= v11.`com.android.volley.Cache$Entry.data` @type ^`byte`[] @kind object;
  #L2b04a4.  call `write`(v3, v5) @signature `Ljava/io/BufferedOutputStream;.write:([B)V` @kind virtual;
  #L2b04aa.  call `close`(v3) @signature `Ljava/io/BufferedOutputStream;.close:()V` @kind virtual;
  #L2b04b0.  call `putEntry`(v9, v10, v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.putEntry:(Ljava/lang/String;Lcom/android/volley/toolbox/DiskBasedCache$CacheHeader;)V` @kind direct;
  #L2b04b6.  goto L2b049c;
  #L2b04b8.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b04ba.  @monitorexit v9
  #L2b04bc.  throw v5;
  catch `java.lang.Throwable` @[L2b0402..L2b0414] goto L2b04b8;
  catch `java.io.IOException` @[L2b0416..L2b0470] goto L2b0470;
  catch `java.lang.Throwable` @[L2b0416..L2b0470] goto L2b04b8;
  catch `java.lang.Throwable` @[L2b0472..L2b049c] goto L2b04b8;
  catch `java.io.IOException` @[L2b04a0..L2b04b6] goto L2b0470;
  catch `java.lang.Throwable` @[L2b04a0..L2b04b6] goto L2b04b8;
}
procedure `void` `remove`(`com.android.volley.toolbox.DiskBasedCache` v5 @kind this, `java.lang.String` v6 @kind object @name `key`) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.remove:(Ljava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L2b04f8.  @monitorenter v5
  #L2b04fa.  call temp:= `getFileForKey`(v5, v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFileForKey:(Ljava/lang/String;)Ljava/io/File;` @kind virtual;
  #L2b0500.  v1:= temp @kind object;
  #L2b0502.  call temp:= `delete`(v1) @signature `Ljava/io/File;.delete:()Z` @kind virtual;
  #L2b0508.  v0:= temp;
  #L2b050a.  call `removeEntry`(v5, v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.removeEntry:(Ljava/lang/String;)V` @kind direct;
  #L2b0510.  if v0 != 0 then goto L2b0538;
  #L2b0514.  v1:= "Could not delete cache entry for key=%s, filename=%s" @kind object;
  #L2b0518.  v2:= 2I;
  #L2b051a.  v2:= new `java.lang.Object`[v2];
  #L2b051e.  v3:= 0I;
  #L2b0520.  v2[v3]:= v6 @kind object;
  #L2b0524.  v3:= 1I;
  #L2b0526.  call temp:= `getFilenameForKey`(v5, v6) @signature `Lcom/android/volley/toolbox/DiskBasedCache;.getFilenameForKey:(Ljava/lang/String;)Ljava/lang/String;` @kind direct;
  #L2b052c.  v4:= temp @kind object;
  #L2b052e.  v2[v3]:= v4 @kind object;
  #L2b0532.  call `d`(v1, v2) @signature `Lcom/android/volley/VolleyLog;.d:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L2b0538.  @monitorexit v5
  #L2b053a.  return @kind void;
  #L2b053c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L2b053e.  @monitorexit v5
  #L2b0540.  throw v1;
  catch `java.lang.Throwable` @[L2b04fa..L2b0538] goto L2b053c;
}
