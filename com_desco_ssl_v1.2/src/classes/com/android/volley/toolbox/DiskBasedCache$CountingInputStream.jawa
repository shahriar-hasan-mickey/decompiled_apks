record `com.android.volley.toolbox.DiskBasedCache$CountingInputStream` @kind class @AccessFlag  extends `java.io.FilterInputStream` @kind class {
  `int` `com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object @name `in`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;

  #L1c8b00.  call `<init>`(v1, v2) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1c8b06.  v0:= 0I;
  #L1c8b08.  v1.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v0;
  #L1c8b0c.  return @kind void;
}
procedure `void` `<init>`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object @name `x0`, `com.android.volley.toolbox.DiskBasedCache$1` v2 @kind object @name `x1`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;Lcom/android/volley/toolbox/DiskBasedCache$1;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L1c8b20.  call `<init>`(v0, v1) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L1c8b26.  return @kind void;
}
procedure `int` `access$100`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v1 @kind object @name `x0`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.access$100:(Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;)I` @AccessFlag STATIC_SYNTHETIC {
    temp;
    v0;

  #L1c8b38.  v0:= v1.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L1c8b3c.  return v0;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v2 @kind this) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8b50.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L1c8b56.  v0:= temp;
  #L1c8b58.  v1:= -1I;
  #L1c8b5a.  if v0 == v1 then goto L1c8b6a;
  #L1c8b5e.  v1:= v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L1c8b62.  v1:= v1 + 1;
  #L1c8b66.  v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v1;
  #L1c8b6a.  return v0;
}
procedure `int` `read`(`com.android.volley.toolbox.DiskBasedCache$CountingInputStream` v2 @kind this, `byte`[] v3 @kind object @name `buffer`, `int` v4 @name `offset`, `int` v5 @name `count`) @signature `Lcom/android/volley/toolbox/DiskBasedCache$CountingInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L1c8b7c.  call temp:= `read`(v2, v3, v4, v5) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L1c8b82.  v0:= temp;
  #L1c8b84.  v1:= -1I;
  #L1c8b86.  if v0 == v1 then goto L1c8b94;
  #L1c8b8a.  v1:= v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int`;
  #L1c8b8e.  v1:= v1 + v0 @kind int;
  #L1c8b90.  v2.`com.android.volley.toolbox.DiskBasedCache$CountingInputStream.bytesRead` @type ^`int` := v1;
  #L1c8b94.  return v0;
}
