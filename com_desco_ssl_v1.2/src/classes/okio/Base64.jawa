record `okio.Base64` @kind class @AccessFlag FINAL {
}
global `byte`[] `@@okio.Base64.MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `byte`[] `@@okio.Base64.URL_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Base64;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L24c688.  v1:= 64I;
  #L24c68c.  v0:= new `byte`[v1];
  #L24c690.  goto L24c6ac;
  #L24c696.  `@@okio.Base64.MAP` @type ^`byte`[] := v0 @kind object;
  #L24c69a.  v0:= new `byte`[v1];
  #L24c69e.  goto L24c6f4;
  #L24c6a4.  `@@okio.Base64.URL_MAP` @type ^`byte`[] := v0 @kind object;
  #L24c6a8.  return @kind void;
  #L24c6aa.  
  #L24c6ac.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 43I, 47I) @kind object;
  #L24c6f3.  goto L24c696;
  #L24c6f4.  v0:= (65I, 66I, 67I, 68I, 69I, 70I, 71I, 72I, 73I, 74I, 75I, 76I, 77I, 78I, 79I, 80I, 81I, 82I, 83I, 84I, 85I, 86I, 87I, 88I, 89I, 90I, 97I, 98I, 99I, 100I, 101I, 102I, 103I, 104I, 105I, 106I, 107I, 108I, 109I, 110I, 111I, 112I, 113I, 114I, 115I, 116I, 117I, 118I, 119I, 120I, 121I, 122I, 48I, 49I, 50I, 51I, 52I, 53I, 54I, 55I, 56I, 57I, 45I, 95I) @kind object;
  #L24c73b.  goto L24c6a4;
}
procedure `void` `<init>`(`okio.Base64` v0 @kind this) @signature `Lokio/Base64;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24c74c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24c752.  return @kind void;
}
procedure `byte`[] `decode`(`java.lang.String` v18 @kind object @name `in`) @signature `Lokio/Base64;.decode:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L24c764.  call temp:= `length`(v18) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L24c76a.  v6:= temp;
  #L24c76c.  if v6 <= 0 then goto L24c7a8;
  #L24c770.  v13:= v6 + -1;
  #L24c774.  v0:= v18 @kind object;
  #L24c778.  call temp:= `charAt`(v0, v13) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24c77e.  v3:= temp;
  #L24c780.  v13:= 61I;
  #L24c784.  if v3 == v13 then goto L24c832;
  #L24c788.  v13:= 10I;
  #L24c78c.  if v3 == v13 then goto L24c832;
  #L24c790.  v13:= 13I;
  #L24c794.  if v3 == v13 then goto L24c832;
  #L24c798.  v13:= 32I;
  #L24c79c.  if v3 == v13 then goto L24c832;
  #L24c7a0.  v13:= 9I;
  #L24c7a4.  if v3 == v13 then goto L24c832;
  #L24c7a8.  v14:= (`long`) v6 @kind i2l;
  #L24c7aa.  v16:= 6L;
  #L24c7ae.  v14:= v14 * v16 @kind long;
  #L24c7b2.  v16:= 8L;
  #L24c7b6.  v14:= v14 / v16 @kind long;
  #L24c7ba.  v13:= (`int`) v14 @kind l2i;
  #L24c7bc.  v7:= new `byte`[v13];
  #L24c7c0.  v8:= 0I;
  #L24c7c2.  v4:= 0I;
  #L24c7c4.  v12:= 0I;
  #L24c7c6.  v10:= 0I;
  #L24c7c8.  v9:= v8;
  #L24c7ca.  if v10 >= v6 then goto L24c8ba;
  #L24c7ce.  v0:= v18 @kind object;
  #L24c7d2.  call temp:= `charAt`(v0, v10) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L24c7d8.  v3:= temp;
  #L24c7da.  v13:= 65I;
  #L24c7de.  if v3 < v13 then goto L24c838;
  #L24c7e2.  v13:= 90I;
  #L24c7e6.  if v3 > v13 then goto L24c838;
  #L24c7ea.  v2:= v3 + -65;
  #L24c7ee.  v13:= v12 ^< 6;
  #L24c7f2.  v14:= (`byte`) v2 @kind i2b;
  #L24c7f4.  v12:= v13 ^| v14 @kind int;
  #L24c7f8.  v4:= v4 + 1;
  #L24c7fc.  v13:= v4 %% 4;
  #L24c800.  if v13 != 0 then goto L24c924;
  #L24c804.  v8:= v9 + 1;
  #L24c808.  v13:= v12 ^> 16;
  #L24c80c.  v13:= (`byte`) v13 @kind i2b;
  #L24c80e.  v7[v9]:= v13 @kind byte;
  #L24c812.  v9:= v8 + 1;
  #L24c816.  v13:= v12 ^> 8;
  #L24c81a.  v13:= (`byte`) v13 @kind i2b;
  #L24c81c.  v7[v8]:= v13 @kind byte;
  #L24c820.  v8:= v9 + 1;
  #L24c824.  v13:= (`byte`) v12 @kind i2b;
  #L24c826.  v7[v9]:= v13 @kind byte;
  #L24c82a.  v10:= v10 + 1;
  #L24c82e.  v9:= v8;
  #L24c830.  goto L24c7ca;
  #L24c832.  v6:= v6 + -1;
  #L24c836.  goto L24c76c;
  #L24c838.  v13:= 97I;
  #L24c83c.  if v3 < v13 then goto L24c84e;
  #L24c840.  v13:= 122I;
  #L24c844.  if v3 > v13 then goto L24c84e;
  #L24c848.  v2:= v3 + -71;
  #L24c84c.  goto L24c7ee;
  #L24c84e.  v13:= 48I;
  #L24c852.  if v3 < v13 then goto L24c864;
  #L24c856.  v13:= 57I;
  #L24c85a.  if v3 > v13 then goto L24c864;
  #L24c85e.  v2:= v3 + 4;
  #L24c862.  goto L24c7ee;
  #L24c864.  v13:= 43I;
  #L24c868.  if v3 == v13 then goto L24c874;
  #L24c86c.  v13:= 45I;
  #L24c870.  if v3 != v13 then goto L24c87a;
  #L24c874.  v2:= 62I;
  #L24c878.  goto L24c7ee;
  #L24c87a.  v13:= 47I;
  #L24c87e.  if v3 == v13 then goto L24c88a;
  #L24c882.  v13:= 95I;
  #L24c886.  if v3 != v13 then goto L24c890;
  #L24c88a.  v2:= 63I;
  #L24c88e.  goto L24c7ee;
  #L24c890.  v13:= 10I;
  #L24c894.  if v3 == v13 then goto L24c924;
  #L24c898.  v13:= 13I;
  #L24c89c.  if v3 == v13 then goto L24c924;
  #L24c8a0.  v13:= 32I;
  #L24c8a4.  if v3 == v13 then goto L24c924;
  #L24c8a8.  v13:= 9I;
  #L24c8ac.  if v3 != v13 then goto L24c8b4;
  #L24c8b0.  v8:= v9;
  #L24c8b2.  goto L24c82a;
  #L24c8b4.  v7:= 0I;
  #L24c8b6.  v8:= v9;
  #L24c8b8.  return v7 @kind object;
  #L24c8ba.  v5:= v4 %% 4;
  #L24c8be.  v13:= 1I;
  #L24c8c0.  if v5 != v13 then goto L24c8ca;
  #L24c8c4.  v7:= 0I;
  #L24c8c6.  v8:= v9;
  #L24c8c8.  goto L24c8b8;
  #L24c8ca.  v13:= 2I;
  #L24c8cc.  if v5 != v13 then goto L24c8fa;
  #L24c8d0.  v12:= v12 ^< 12;
  #L24c8d4.  v8:= v9 + 1;
  #L24c8d8.  v13:= v12 ^> 16;
  #L24c8dc.  v13:= (`byte`) v13 @kind i2b;
  #L24c8de.  v7[v9]:= v13 @kind byte;
  #L24c8e2.  v13:= length @variable v7;
  #L24c8e4.  if v8 == v13 then goto L24c8b8;
  #L24c8e8.  v11:= new `byte`[v8];
  #L24c8ec.  v13:= 0I;
  #L24c8ee.  v14:= 0I;
  #L24c8f0.  call `arraycopy`(v7, v13, v11, v14, v8) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L24c8f6.  v7:= v11 @kind object;
  #L24c8f8.  goto L24c8b8;
  #L24c8fa.  v13:= 3I;
  #L24c8fc.  if v5 != v13 then goto L24c920;
  #L24c900.  v12:= v12 ^< 6;
  #L24c904.  v8:= v9 + 1;
  #L24c908.  v13:= v12 ^> 16;
  #L24c90c.  v13:= (`byte`) v13 @kind i2b;
  #L24c90e.  v7[v9]:= v13 @kind byte;
  #L24c912.  v9:= v8 + 1;
  #L24c916.  v13:= v12 ^> 8;
  #L24c91a.  v13:= (`byte`) v13 @kind i2b;
  #L24c91c.  v7[v8]:= v13 @kind byte;
  #L24c920.  v8:= v9;
  #L24c922.  goto L24c8e2;
  #L24c924.  v8:= v9;
  #L24c926.  goto L24c82a;
}
procedure `java.lang.String` `encode`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encode:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24c938.  v0:= `@@okio.Base64.MAP` @type ^`byte`[] @kind object;
  #L24c93c.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L24c942.  v0:= temp @kind object;
  #L24c944.  return v0 @kind object;
}
procedure `java.lang.String` `encode`(`byte`[] v10 @kind object @name `in`, `byte`[] v11 @kind object @name `map`) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L24c958.  v9:= 61I;
  #L24c95c.  v7:= length @variable v10;
  #L24c95e.  v7:= v7 + 2;
  #L24c962.  v7:= v7 * 4;
  #L24c966.  v5:= v7 / 3;
  #L24c96a.  v6:= new `byte`[v5];
  #L24c96e.  v3:= 0I;
  #L24c970.  v7:= length @variable v10;
  #L24c972.  v8:= length @variable v10;
  #L24c974.  v8:= v8 %% 3;
  #L24c978.  v1:= v7 - v8 @kind int;
  #L24c97c.  v2:= 0I;
  #L24c97e.  v4:= v3;
  #L24c980.  if v2 >= v1 then goto L24ca12;
  #L24c984.  v3:= v4 + 1;
  #L24c988.  v7:= v10[v2] @kind byte;
  #L24c98c.  v7:= v7 ^& 255;
  #L24c990.  v7:= v7 ^> 2;
  #L24c994.  v7:= v11[v7] @kind byte;
  #L24c998.  v6[v4]:= v7 @kind byte;
  #L24c99c.  v4:= v3 + 1;
  #L24c9a0.  v7:= v10[v2] @kind byte;
  #L24c9a4.  v7:= v7 ^& 3;
  #L24c9a8.  v7:= v7 ^< 4;
  #L24c9ac.  v8:= v2 + 1;
  #L24c9b0.  v8:= v10[v8] @kind byte;
  #L24c9b4.  v8:= v8 ^& 255;
  #L24c9b8.  v8:= v8 ^> 4;
  #L24c9bc.  v7:= v7 ^| v8 @kind int;
  #L24c9be.  v7:= v11[v7] @kind byte;
  #L24c9c2.  v6[v3]:= v7 @kind byte;
  #L24c9c6.  v3:= v4 + 1;
  #L24c9ca.  v7:= v2 + 1;
  #L24c9ce.  v7:= v10[v7] @kind byte;
  #L24c9d2.  v7:= v7 ^& 15;
  #L24c9d6.  v7:= v7 ^< 2;
  #L24c9da.  v8:= v2 + 2;
  #L24c9de.  v8:= v10[v8] @kind byte;
  #L24c9e2.  v8:= v8 ^& 255;
  #L24c9e6.  v8:= v8 ^> 6;
  #L24c9ea.  v7:= v7 ^| v8 @kind int;
  #L24c9ec.  v7:= v11[v7] @kind byte;
  #L24c9f0.  v6[v4]:= v7 @kind byte;
  #L24c9f4.  v4:= v3 + 1;
  #L24c9f8.  v7:= v2 + 2;
  #L24c9fc.  v7:= v10[v7] @kind byte;
  #L24ca00.  v7:= v7 ^& 63;
  #L24ca04.  v7:= v11[v7] @kind byte;
  #L24ca08.  v6[v3]:= v7 @kind byte;
  #L24ca0c.  v2:= v2 + 3;
  #L24ca10.  goto L24c980;
  #L24ca12.  v7:= length @variable v10;
  #L24ca14.  v7:= v7 %% 3;
  #L24ca18.  goto L24caec;
  #L24ca1e.  v3:= v4;
  #L24ca20.  v7:= new `java.lang.String`;
  #L24ca24.  v8:= 0I;
  #L24ca26.  v9:= "US-ASCII" @kind object;
  #L24ca2a.  call `<init>`(v7, v6, v8, v3, v9) @signature `Ljava/lang/String;.<init>:([BIILjava/lang/String;)V` @kind direct;
  #L24ca30.  return v7 @kind object;
  #L24ca32.  v3:= v4 + 1;
  #L24ca36.  v7:= v10[v1] @kind byte;
  #L24ca3a.  v7:= v7 ^& 255;
  #L24ca3e.  v7:= v7 ^> 2;
  #L24ca42.  v7:= v11[v7] @kind byte;
  #L24ca46.  v6[v4]:= v7 @kind byte;
  #L24ca4a.  v4:= v3 + 1;
  #L24ca4e.  v7:= v10[v1] @kind byte;
  #L24ca52.  v7:= v7 ^& 3;
  #L24ca56.  v7:= v7 ^< 4;
  #L24ca5a.  v7:= v11[v7] @kind byte;
  #L24ca5e.  v6[v3]:= v7 @kind byte;
  #L24ca62.  v3:= v4 + 1;
  #L24ca66.  v6[v4]:= v9 @kind byte;
  #L24ca6a.  v4:= v3 + 1;
  #L24ca6e.  v6[v3]:= v9 @kind byte;
  #L24ca72.  v3:= v4;
  #L24ca74.  goto L24ca20;
  #L24ca76.  v3:= v4 + 1;
  #L24ca7a.  v7:= v10[v1] @kind byte;
  #L24ca7e.  v7:= v7 ^& 255;
  #L24ca82.  v7:= v7 ^> 2;
  #L24ca86.  v7:= v11[v7] @kind byte;
  #L24ca8a.  v6[v4]:= v7 @kind byte;
  #L24ca8e.  v4:= v3 + 1;
  #L24ca92.  v7:= v10[v1] @kind byte;
  #L24ca96.  v7:= v7 ^& 3;
  #L24ca9a.  v7:= v7 ^< 4;
  #L24ca9e.  v8:= v1 + 1;
  #L24caa2.  v8:= v10[v8] @kind byte;
  #L24caa6.  v8:= v8 ^& 255;
  #L24caaa.  v8:= v8 ^> 4;
  #L24caae.  v7:= v7 ^| v8 @kind int;
  #L24cab0.  v7:= v11[v7] @kind byte;
  #L24cab4.  v6[v3]:= v7 @kind byte;
  #L24cab8.  v3:= v4 + 1;
  #L24cabc.  v7:= v1 + 1;
  #L24cac0.  v7:= v10[v7] @kind byte;
  #L24cac4.  v7:= v7 ^& 15;
  #L24cac8.  v7:= v7 ^< 2;
  #L24cacc.  v7:= v11[v7] @kind byte;
  #L24cad0.  v6[v4]:= v7 @kind byte;
  #L24cad4.  v4:= v3 + 1;
  #L24cad8.  v6[v3]:= v9 @kind byte;
  #L24cadc.  goto L24ca1e;
  #L24cade.  v0:= Exception @type ^`java.io.UnsupportedEncodingException` @kind object;
  #L24cae0.  v7:= new `java.lang.AssertionError`;
  #L24cae4.  call `<init>`(v7, v0) @signature `Ljava/lang/AssertionError;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L24caea.  throw v7;
  #L24caec.  switch v7
                  | 1 => goto L24ca32
                  | 2 => goto L24ca76
                  | else => goto L24ca1e;
  catch `java.io.UnsupportedEncodingException` @[L24ca20..L24ca30] goto L24cade;
}
procedure `java.lang.String` `encodeUrl`(`byte`[] v1 @kind object @name `in`) @signature `Lokio/Base64;.encodeUrl:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24cb1c.  v0:= `@@okio.Base64.URL_MAP` @type ^`byte`[] @kind object;
  #L24cb20.  call temp:= `encode`(v1, v0) @signature `Lokio/Base64;.encode:([B[B)Ljava/lang/String;` @kind static;
  #L24cb26.  v0:= temp @kind object;
  #L24cb28.  return v0 @kind object;
}
