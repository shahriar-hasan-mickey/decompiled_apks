record `okio.RealBufferedSource` @kind class @AccessFlag FINAL extends `okio.BufferedSource` @kind interface {
  `okio.Buffer` `okio.RealBufferedSource.buffer` @AccessFlag PUBLIC_FINAL;
  `boolean` `okio.RealBufferedSource.closed` @AccessFlag ;
  `okio.Source` `okio.RealBufferedSource.source` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`okio.RealBufferedSource` v2 @kind this, `okio.Source` v3 @kind object @name `source`) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L35532c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L355332.  v0:= new `okio.Buffer`;
  #L355336.  call `<init>`(v0) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L35533c.  v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` := v0 @kind object;
  #L355340.  if v3 != 0 then goto L355354;
  #L355344.  v0:= new `java.lang.IllegalArgumentException`;
  #L355348.  v1:= "source == null" @kind object;
  #L35534c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355352.  throw v0;
  #L355354.  v2.`okio.RealBufferedSource.source` @type ^`okio.Source` := v3 @kind object;
  #L355358.  return @kind void;
}
procedure `okio.Buffer` `buffer`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.buffer:()Lokio/Buffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L35536c.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355370.  return v0 @kind object;
}
procedure `void` `close`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355384.  v0:= v1.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355388.  if v0 == 0 then goto L35538e;
  #L35538c.  return @kind void;
  #L35538e.  v0:= 1I;
  #L355390.  v1.`okio.RealBufferedSource.closed` @type ^`boolean` := v0 @kind boolean;
  #L355394.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355398.  call `close`(v0) @signature `Lokio/Source;.close:()V` @kind interface;
  #L35539e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3553a2.  call `clear`(v0) @signature `Lokio/Buffer;.clear:()V` @kind virtual;
  #L3553a8.  goto L35538c;
}
procedure `boolean` `exhausted`(`okio.RealBufferedSource` v4 @kind this) @signature `Lokio/RealBufferedSource;.exhausted:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3553bc.  v0:= v4.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L3553c0.  if v0 == 0 then goto L3553d4;
  #L3553c4.  v0:= new `java.lang.IllegalStateException`;
  #L3553c8.  v1:= "closed" @kind object;
  #L3553cc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3553d2.  throw v0;
  #L3553d4.  v0:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3553d8.  call temp:= `exhausted`(v0) @signature `Lokio/Buffer;.exhausted:()Z` @kind virtual;
  #L3553de.  v0:= temp;
  #L3553e0.  if v0 == 0 then goto L355408;
  #L3553e4.  v0:= v4.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L3553e8.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3553ec.  v2:= 8192L;
  #L3553f0.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L3553f6.  v0:= temp @kind wide;
  #L3553f8.  v2:= -1L;
  #L3553fc.  v0:= lcmp(v0, v2);
  #L355400.  if v0 != 0 then goto L355408;
  #L355404.  v0:= 1I;
  #L355406.  return v0;
  #L355408.  v0:= 0I;
  #L35540a.  goto L355406;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `byte` v3 @name `b`) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35541c.  v0:= 0L;
  #L355420.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @kind virtual;
  #L355426.  v0:= temp @kind wide;
  #L355428.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v10 @kind this, `byte` v11 @name `b`, `long` v12 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOf:(BJ)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35543c.  v4:= -1L;
  #L355440.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355444.  if v6 == 0 then goto L355460;
  #L355448.  v4:= new `java.lang.IllegalStateException`;
  #L35544c.  v5:= "closed" @kind object;
  #L355450.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355456.  throw v4;
  #L355458.  call temp:= `max`(v12, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L35545e.  v12:= temp @kind wide;
  #L355460.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355464.  call temp:= `indexOf`(v6, v11, v12) @signature `Lokio/Buffer;.indexOf:(BJ)J` @kind virtual;
  #L35546a.  v2:= temp @kind wide;
  #L35546c.  v6:= lcmp(v2, v4);
  #L355470.  if v6 == 0 then goto L355476;
  #L355474.  return v2 @kind wide;
  #L355476.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35547a.  v0:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L35547e.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355482.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355486.  v8:= 8192L;
  #L35548a.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L355490.  v6:= temp @kind wide;
  #L355492.  v6:= lcmp(v6, v4);
  #L355496.  if v6 != 0 then goto L355458;
  #L35549a.  v2:= v4 @kind wide;
  #L35549c.  goto L355474;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object @name `bytes`) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3554b0.  v0:= 0L;
  #L3554b4.  call temp:= `indexOf`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L3554ba.  v0:= temp @kind wide;
  #L3554bc.  return v0 @kind wide;
}
procedure `long` `indexOf`(`okio.RealBufferedSource` v10 @kind this, `okio.ByteString` v11 @kind object @name `bytes`, `long` v12 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOf:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3554d0.  v4:= -1L;
  #L3554d4.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L3554d8.  if v6 == 0 then goto L355508;
  #L3554dc.  v4:= new `java.lang.IllegalStateException`;
  #L3554e0.  v5:= "closed" @kind object;
  #L3554e4.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3554ea.  throw v4;
  #L3554ec.  call temp:= `size`(v11) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L3554f2.  v6:= temp;
  #L3554f4.  v6:= (`long`) v6 @kind i2l;
  #L3554f6.  v6:= v0 - v6 @kind long;
  #L3554fa.  v8:= 1L;
  #L3554fe.  v6:= v6 + v8 @kind long;
  #L355500.  call temp:= `max`(v12, v6) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L355506.  v12:= temp @kind wide;
  #L355508.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35550c.  call temp:= `indexOf`(v6, v11, v12) @signature `Lokio/Buffer;.indexOf:(Lokio/ByteString;J)J` @kind virtual;
  #L355512.  v2:= temp @kind wide;
  #L355514.  v6:= lcmp(v2, v4);
  #L355518.  if v6 == 0 then goto L35551e;
  #L35551c.  return v2 @kind wide;
  #L35551e.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355522.  v0:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355526.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L35552a.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35552e.  v8:= 8192L;
  #L355532.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L355538.  v6:= temp @kind wide;
  #L35553a.  v6:= lcmp(v6, v4);
  #L35553e.  if v6 != 0 then goto L3554ec;
  #L355542.  v2:= v4 @kind wide;
  #L355544.  goto L35551c;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v2 @kind this, `okio.ByteString` v3 @kind object @name `targetBytes`) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355558.  v0:= 0L;
  #L35555c.  call temp:= `indexOfElement`(v2, v3, v0) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L355562.  v0:= temp @kind wide;
  #L355564.  return v0 @kind wide;
}
procedure `long` `indexOfElement`(`okio.RealBufferedSource` v10 @kind this, `okio.ByteString` v11 @kind object @name `targetBytes`, `long` v12 @name `fromIndex`) @signature `Lokio/RealBufferedSource;.indexOfElement:(Lokio/ByteString;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L355578.  v4:= -1L;
  #L35557c.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355580.  if v6 == 0 then goto L35559c;
  #L355584.  v4:= new `java.lang.IllegalStateException`;
  #L355588.  v5:= "closed" @kind object;
  #L35558c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355592.  throw v4;
  #L355594.  call temp:= `max`(v12, v0) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L35559a.  v12:= temp @kind wide;
  #L35559c.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3555a0.  call temp:= `indexOfElement`(v6, v11, v12) @signature `Lokio/Buffer;.indexOfElement:(Lokio/ByteString;J)J` @kind virtual;
  #L3555a6.  v2:= temp @kind wide;
  #L3555a8.  v6:= lcmp(v2, v4);
  #L3555ac.  if v6 == 0 then goto L3555b2;
  #L3555b0.  return v2 @kind wide;
  #L3555b2.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3555b6.  v0:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L3555ba.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L3555be.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3555c2.  v8:= 8192L;
  #L3555c6.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L3555cc.  v6:= temp @kind wide;
  #L3555ce.  v6:= lcmp(v6, v4);
  #L3555d2.  if v6 != 0 then goto L355594;
  #L3555d6.  v2:= v4 @kind wide;
  #L3555d8.  goto L3555b0;
}
procedure `java.io.InputStream` `inputStream`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.inputStream:()Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3555ec.  v0:= new `okio.RealBufferedSource$1`;
  #L3555f0.  call `<init>`(v0, v1) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @kind direct;
  #L3555f6.  return v0 @kind object;
}
procedure `int` `read`(`okio.RealBufferedSource` v2 @kind this, `byte`[] v3 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355608.  v0:= 0I;
  #L35560a.  v1:= length @variable v3;
  #L35560c.  call temp:= `read`(v2, v3, v0, v1) @signature `Lokio/RealBufferedSource;.read:([BII)I` @kind virtual;
  #L355612.  v0:= temp;
  #L355614.  return v0;
}
procedure `int` `read`(`okio.RealBufferedSource` v9 @kind this, `byte`[] v10 @kind object @name `sink`, `int` v11 @name `offset`, `int` v12 @name `byteCount`) @signature `Lokio/RealBufferedSource;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L355628.  v0:= length @variable v10;
  #L35562a.  v0:= (`long`) v0 @kind i2l;
  #L35562c.  v2:= (`long`) v11 @kind i2l;
  #L35562e.  v4:= (`long`) v12 @kind i2l;
  #L355630.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L355636.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35563a.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L35563e.  v2:= 0L;
  #L355642.  v0:= lcmp(v0, v2);
  #L355646.  if v0 != 0 then goto L35566e;
  #L35564a.  v0:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L35564e.  v1:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355652.  v2:= 8192L;
  #L355656.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L35565c.  v6:= temp @kind wide;
  #L35565e.  v0:= -1L;
  #L355662.  v0:= lcmp(v6, v0);
  #L355666.  if v0 != 0 then goto L35566e;
  #L35566a.  v0:= -1I;
  #L35566c.  return v0;
  #L35566e.  v0:= (`long`) v12 @kind i2l;
  #L355670.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355674.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355678.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L35567e.  v0:= temp @kind wide;
  #L355680.  v8:= (`int`) v0 @kind l2i;
  #L355682.  v0:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355686.  call temp:= `read`(v0, v10, v11, v8) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L35568c.  v0:= temp;
  #L35568e.  goto L35566c;
}
procedure `long` `read`(`okio.RealBufferedSource` v10 @kind this, `okio.Buffer` v11 @kind object @name `sink`, `long` v12 @name `byteCount`) @signature `Lokio/RealBufferedSource;.read:(Lokio/Buffer;J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3556a0.  v8:= 0L;
  #L3556a4.  v4:= -1L;
  #L3556a8.  if v11 != 0 then goto L3556bc;
  #L3556ac.  v4:= new `java.lang.IllegalArgumentException`;
  #L3556b0.  v5:= "sink == null" @kind object;
  #L3556b4.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3556ba.  throw v4;
  #L3556bc.  v6:= lcmp(v12, v8);
  #L3556c0.  if v6 >= 0 then goto L3556f6;
  #L3556c4.  v4:= new `java.lang.IllegalArgumentException`;
  #L3556c8.  v5:= new `java.lang.StringBuilder`;
  #L3556cc.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3556d2.  v6:= "byteCount < 0: " @kind object;
  #L3556d6.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3556dc.  v5:= temp @kind object;
  #L3556de.  call temp:= `append`(v5, v12) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3556e4.  v5:= temp @kind object;
  #L3556e6.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3556ec.  v5:= temp @kind object;
  #L3556ee.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3556f4.  throw v4;
  #L3556f6.  v6:= v10.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L3556fa.  if v6 == 0 then goto L35570e;
  #L3556fe.  v4:= new `java.lang.IllegalStateException`;
  #L355702.  v5:= "closed" @kind object;
  #L355706.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L35570c.  throw v4;
  #L35570e.  v6:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355712.  v6:= v6.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355716.  v6:= lcmp(v6, v8);
  #L35571a.  if v6 != 0 then goto L35573c;
  #L35571e.  v6:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355722.  v7:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355726.  v8:= 8192L;
  #L35572a.  call temp:= `read`(v6, v7, v8) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L355730.  v0:= temp @kind wide;
  #L355732.  v6:= lcmp(v0, v4);
  #L355736.  if v6 != 0 then goto L35573c;
  #L35573a.  return v4 @kind wide;
  #L35573c.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355740.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355744.  call temp:= `min`(v12, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L35574a.  v2:= temp @kind wide;
  #L35574c.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355750.  call temp:= `read`(v4, v11, v2) @signature `Lokio/Buffer;.read:(Lokio/Buffer;J)J` @kind virtual;
  #L355756.  v4:= temp @kind wide;
  #L355758.  goto L35573a;
}
procedure `long` `readAll`(`okio.RealBufferedSource` v10 @kind this, `okio.Sink` v11 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.readAll:(Lokio/Sink;)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L35576c.  v8:= 0L;
  #L355770.  if v11 != 0 then goto L355784;
  #L355774.  v4:= new `java.lang.IllegalArgumentException`;
  #L355778.  v5:= "sink == null" @kind object;
  #L35577c.  call `<init>`(v4, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355782.  throw v4;
  #L355784.  v2:= 0L;
  #L355788.  v4:= v10.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L35578c.  v5:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355790.  v6:= 8192L;
  #L355794.  call temp:= `read`(v4, v5, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L35579a.  v4:= temp @kind wide;
  #L35579c.  v6:= -1L;
  #L3557a0.  v4:= lcmp(v4, v6);
  #L3557a4.  if v4 == 0 then goto L3557ca;
  #L3557a8.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557ac.  call temp:= `completeSegmentByteCount`(v4) @signature `Lokio/Buffer;.completeSegmentByteCount:()J` @kind virtual;
  #L3557b2.  v0:= temp @kind wide;
  #L3557b4.  v4:= lcmp(v0, v8);
  #L3557b8.  if v4 <= 0 then goto L355788;
  #L3557bc.  v2:= v2 + v0 @kind long;
  #L3557be.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557c2.  call `write`(v11, v4, v0) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L3557c8.  goto L355788;
  #L3557ca.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557ce.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3557d4.  v4:= temp @kind wide;
  #L3557d6.  v4:= lcmp(v4, v8);
  #L3557da.  if v4 <= 0 then goto L355802;
  #L3557de.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557e2.  call temp:= `size`(v4) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3557e8.  v4:= temp @kind wide;
  #L3557ea.  v2:= v2 + v4 @kind long;
  #L3557ec.  v4:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557f0.  v5:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3557f4.  call temp:= `size`(v5) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L3557fa.  v6:= temp @kind wide;
  #L3557fc.  call `write`(v11, v4, v6) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L355802.  return v2 @kind wide;
}
procedure `byte` `readByte`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByte:()B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355814.  v0:= 1L;
  #L355818.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L35581e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355822.  call temp:= `readByte`(v0) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L355828.  v0:= temp;
  #L35582a.  return v0;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteArray:()[B` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35583c.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355840.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355844.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L35584a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35584e.  call temp:= `readByteArray`(v0) @signature `Lokio/Buffer;.readByteArray:()[B` @kind virtual;
  #L355854.  v0:= temp @kind object;
  #L355856.  return v0 @kind object;
}
procedure `byte`[] `readByteArray`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readByteArray:(J)[B` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355868.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L35586e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355872.  call temp:= `readByteArray`(v0, v2) @signature `Lokio/Buffer;.readByteArray:(J)[B` @kind virtual;
  #L355878.  v0:= temp @kind object;
  #L35587a.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readByteString:()Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L35588c.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355890.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355894.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L35589a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35589e.  call temp:= `readByteString`(v0) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L3558a4.  v0:= temp @kind object;
  #L3558a6.  return v0 @kind object;
}
procedure `okio.ByteString` `readByteString`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readByteString:(J)Lokio/ByteString;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3558b8.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L3558be.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3558c2.  call temp:= `readByteString`(v0, v2) @signature `Lokio/Buffer;.readByteString:(J)Lokio/ByteString;` @kind virtual;
  #L3558c8.  v0:= temp @kind object;
  #L3558ca.  return v0 @kind object;
}
procedure `long` `readDecimalLong`(`okio.RealBufferedSource` v7 @kind this) @signature `Lokio/RealBufferedSource;.readDecimalLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3558dc.  v2:= 1L;
  #L3558e0.  call `require`(v7, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L3558e6.  v1:= 0I;
  #L3558e8.  v2:= v1 + 1;
  #L3558ec.  v2:= (`long`) v2 @kind i2l;
  #L3558ee.  call temp:= `request`(v7, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L3558f4.  v2:= temp;
  #L3558f6.  if v2 == 0 then goto L35595a;
  #L3558fa.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3558fe.  v4:= (`long`) v1 @kind i2l;
  #L355900.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L355906.  v0:= temp;
  #L355908.  v2:= 48I;
  #L35590c.  if v0 < v2 then goto L355918;
  #L355910.  v2:= 57I;
  #L355914.  if v0 <= v2 then goto L355954;
  #L355918.  if v1 != 0 then goto L355924;
  #L35591c.  v2:= 45I;
  #L355920.  if v0 == v2 then goto L355954;
  #L355924.  if v1 != 0 then goto L35595a;
  #L355928.  v2:= new `java.lang.NumberFormatException`;
  #L35592c.  v3:= "Expected leading [0-9] or '-' character but was %#x" @kind object;
  #L355930.  v4:= 1I;
  #L355932.  v4:= new `java.lang.Object`[v4];
  #L355936.  v5:= 0I;
  #L355938.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L35593e.  v6:= temp @kind object;
  #L355940.  v4[v5]:= v6 @kind object;
  #L355944.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L35594a.  v3:= temp @kind object;
  #L35594c.  call `<init>`(v2, v3) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355952.  throw v2;
  #L355954.  v1:= v1 + 1;
  #L355958.  goto L3558e8;
  #L35595a.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35595e.  call temp:= `readDecimalLong`(v2) @signature `Lokio/Buffer;.readDecimalLong:()J` @kind virtual;
  #L355964.  v2:= temp @kind wide;
  #L355966.  return v2 @kind wide;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v2 @kind this, `okio.Buffer` v3 @kind object @name `sink`, `long` v4 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readFully:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355978.  call `require`(v2, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L35597e.  v1:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355982.  call `readFully`(v1, v3, v4) @signature `Lokio/Buffer;.readFully:(Lokio/Buffer;J)V` @kind virtual;
  #L355988.  return @kind void;
  #L35598a.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L35598c.  v1:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355990.  call temp:= `writeAll`(v3, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L355996.  throw v0;
  catch `java.io.EOFException` @[L355978..L35597e] goto L35598a;
}
procedure `void` `readFully`(`okio.RealBufferedSource` v8 @kind this, `byte`[] v9 @kind object @name `sink`) @signature `Lokio/RealBufferedSource;.readFully:([B)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3559b8.  v3:= length @variable v9;
  #L3559ba.  v4:= (`long`) v3 @kind i2l;
  #L3559bc.  call `require`(v8, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L3559c2.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3559c6.  call `readFully`(v3, v9) @signature `Lokio/Buffer;.readFully:([B)V` @kind virtual;
  #L3559cc.  return @kind void;
  #L3559ce.  v0:= Exception @type ^`java.io.EOFException` @kind object;
  #L3559d0.  v1:= 0I;
  #L3559d2.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3559d6.  v4:= v3.`okio.Buffer.size` @type ^`long` @kind wide;
  #L3559da.  v6:= 0L;
  #L3559de.  v3:= lcmp(v4, v6);
  #L3559e2.  if v3 <= 0 then goto L355a12;
  #L3559e6.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3559ea.  v4:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L3559ee.  v4:= v4.`okio.Buffer.size` @type ^`long` @kind wide;
  #L3559f2.  v4:= (`int`) v4 @kind l2i;
  #L3559f4.  call temp:= `read`(v3, v9, v1, v4) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L3559fa.  v2:= temp;
  #L3559fc.  v3:= -1I;
  #L3559fe.  if v2 != v3 then goto L355a0e;
  #L355a02.  v3:= new `java.lang.AssertionError`;
  #L355a06.  call `<init>`(v3) @signature `Ljava/lang/AssertionError;.<init>:()V` @kind direct;
  #L355a0c.  throw v3;
  #L355a0e.  v1:= v1 + v2 @kind int;
  #L355a10.  goto L3559d2;
  #L355a12.  throw v0;
  catch `java.io.EOFException` @[L3559b8..L3559c2] goto L3559ce;
}
procedure `long` `readHexadecimalUnsignedLong`(`okio.RealBufferedSource` v7 @kind this) @signature `Lokio/RealBufferedSource;.readHexadecimalUnsignedLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L355a34.  v2:= 1L;
  #L355a38.  call `require`(v7, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355a3e.  v1:= 0I;
  #L355a40.  v2:= v1 + 1;
  #L355a44.  v2:= (`long`) v2 @kind i2l;
  #L355a46.  call temp:= `request`(v7, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L355a4c.  v2:= temp;
  #L355a4e.  if v2 == 0 then goto L355ac6;
  #L355a52.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355a56.  v4:= (`long`) v1 @kind i2l;
  #L355a58.  call temp:= `getByte`(v2, v4) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L355a5e.  v0:= temp;
  #L355a60.  v2:= 48I;
  #L355a64.  if v0 < v2 then goto L355a70;
  #L355a68.  v2:= 57I;
  #L355a6c.  if v0 <= v2 then goto L355ac0;
  #L355a70.  v2:= 97I;
  #L355a74.  if v0 < v2 then goto L355a80;
  #L355a78.  v2:= 102I;
  #L355a7c.  if v0 <= v2 then goto L355ac0;
  #L355a80.  v2:= 65I;
  #L355a84.  if v0 < v2 then goto L355a90;
  #L355a88.  v2:= 70I;
  #L355a8c.  if v0 <= v2 then goto L355ac0;
  #L355a90.  if v1 != 0 then goto L355ac6;
  #L355a94.  v2:= new `java.lang.NumberFormatException`;
  #L355a98.  v3:= "Expected leading [0-9a-fA-F] character but was %#x" @kind object;
  #L355a9c.  v4:= 1I;
  #L355a9e.  v4:= new `java.lang.Object`[v4];
  #L355aa2.  v5:= 0I;
  #L355aa4.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L355aaa.  v6:= temp @kind object;
  #L355aac.  v4[v5]:= v6 @kind object;
  #L355ab0.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L355ab6.  v3:= temp @kind object;
  #L355ab8.  call `<init>`(v2, v3) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355abe.  throw v2;
  #L355ac0.  v1:= v1 + 1;
  #L355ac4.  goto L355a40;
  #L355ac6.  v2:= v7.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355aca.  call temp:= `readHexadecimalUnsignedLong`(v2) @signature `Lokio/Buffer;.readHexadecimalUnsignedLong:()J` @kind virtual;
  #L355ad0.  v2:= temp @kind wide;
  #L355ad2.  return v2 @kind wide;
}
procedure `int` `readInt`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readInt:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355ae4.  v0:= 4L;
  #L355ae8.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355aee.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355af2.  call temp:= `readInt`(v0) @signature `Lokio/Buffer;.readInt:()I` @kind virtual;
  #L355af8.  v0:= temp;
  #L355afa.  return v0;
}
procedure `int` `readIntLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readIntLe:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355b0c.  v0:= 4L;
  #L355b10.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355b16.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355b1a.  call temp:= `readIntLe`(v0) @signature `Lokio/Buffer;.readIntLe:()I` @kind virtual;
  #L355b20.  v0:= temp;
  #L355b22.  return v0;
}
procedure `long` `readLong`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLong:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355b34.  v0:= 8L;
  #L355b38.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355b3e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355b42.  call temp:= `readLong`(v0) @signature `Lokio/Buffer;.readLong:()J` @kind virtual;
  #L355b48.  v0:= temp @kind wide;
  #L355b4a.  return v0 @kind wide;
}
procedure `long` `readLongLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readLongLe:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355b5c.  v0:= 8L;
  #L355b60.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355b66.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355b6a.  call temp:= `readLongLe`(v0) @signature `Lokio/Buffer;.readLongLe:()J` @kind virtual;
  #L355b70.  v0:= temp @kind wide;
  #L355b72.  return v0 @kind wide;
}
procedure `short` `readShort`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShort:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355b84.  v0:= 2L;
  #L355b88.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355b8e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355b92.  call temp:= `readShort`(v0) @signature `Lokio/Buffer;.readShort:()S` @kind virtual;
  #L355b98.  v0:= temp;
  #L355b9a.  return v0;
}
procedure `short` `readShortLe`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readShortLe:()S` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355bac.  v0:= 2L;
  #L355bb0.  call `require`(v2, v0) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355bb6.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355bba.  call temp:= `readShortLe`(v0) @signature `Lokio/Buffer;.readShortLe:()S` @kind virtual;
  #L355bc0.  v0:= temp;
  #L355bc2.  return v0;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v3 @kind this, `long` v4 @name `byteCount`, `java.nio.charset.Charset` v6 @kind object @name `charset`) @signature `Lokio/RealBufferedSource;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L355bd4.  call `require`(v3, v4) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355bda.  if v6 != 0 then goto L355bee;
  #L355bde.  v0:= new `java.lang.IllegalArgumentException`;
  #L355be2.  v1:= "charset == null" @kind object;
  #L355be6.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355bec.  throw v0;
  #L355bee.  v0:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355bf2.  call temp:= `readString`(v0, v4, v6) @signature `Lokio/Buffer;.readString:(JLjava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L355bf8.  v0:= temp @kind object;
  #L355bfa.  return v0 @kind object;
}
procedure `java.lang.String` `readString`(`okio.RealBufferedSource` v2 @kind this, `java.nio.charset.Charset` v3 @kind object @name `charset`) @signature `Lokio/RealBufferedSource;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355c0c.  if v3 != 0 then goto L355c20;
  #L355c10.  v0:= new `java.lang.IllegalArgumentException`;
  #L355c14.  v1:= "charset == null" @kind object;
  #L355c18.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355c1e.  throw v0;
  #L355c20.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355c24.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355c28.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L355c2e.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355c32.  call temp:= `readString`(v0, v3) @signature `Lokio/Buffer;.readString:(Ljava/nio/charset/Charset;)Ljava/lang/String;` @kind virtual;
  #L355c38.  v0:= temp @kind object;
  #L355c3a.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L355c4c.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355c50.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355c54.  call temp:= `writeAll`(v0, v1) @signature `Lokio/Buffer;.writeAll:(Lokio/Source;)J` @kind virtual;
  #L355c5a.  v0:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355c5e.  call temp:= `readUtf8`(v0) @signature `Lokio/Buffer;.readUtf8:()Ljava/lang/String;` @kind virtual;
  #L355c64.  v0:= temp @kind object;
  #L355c66.  return v0 @kind object;
}
procedure `java.lang.String` `readUtf8`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355c78.  call `require`(v1, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355c7e.  v0:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355c82.  call temp:= `readUtf8`(v0, v2) @signature `Lokio/Buffer;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L355c88.  v0:= temp @kind object;
  #L355c8a.  return v0 @kind object;
}
procedure `int` `readUtf8CodePoint`(`okio.RealBufferedSource` v4 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8CodePoint:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L355c9c.  v2:= 1L;
  #L355ca0.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355ca6.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355caa.  v2:= 0L;
  #L355cae.  call temp:= `getByte`(v1, v2) @signature `Lokio/Buffer;.getByte:(J)B` @kind virtual;
  #L355cb4.  v0:= temp;
  #L355cb6.  v1:= v0 ^& 224;
  #L355cba.  v2:= 192I;
  #L355cbe.  if v1 != v2 then goto L355cda;
  #L355cc2.  v2:= 2L;
  #L355cc6.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355ccc.  v1:= v4.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355cd0.  call temp:= `readUtf8CodePoint`(v1) @signature `Lokio/Buffer;.readUtf8CodePoint:()I` @kind virtual;
  #L355cd6.  v1:= temp;
  #L355cd8.  return v1;
  #L355cda.  v1:= v0 ^& 240;
  #L355cde.  v2:= 224I;
  #L355ce2.  if v1 != v2 then goto L355cf2;
  #L355ce6.  v2:= 3L;
  #L355cea.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355cf0.  goto L355ccc;
  #L355cf2.  v1:= v0 ^& 248;
  #L355cf6.  v2:= 240I;
  #L355cfa.  if v1 != v2 then goto L355ccc;
  #L355cfe.  v2:= 4L;
  #L355d02.  call `require`(v4, v2) @signature `Lokio/RealBufferedSource;.require:(J)V` @kind virtual;
  #L355d08.  goto L355ccc;
}
procedure `java.lang.String` `readUtf8Line`(`okio.RealBufferedSource` v6 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8Line:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L355d1c.  v2:= 10I;
  #L355d20.  call temp:= `indexOf`(v6, v2) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L355d26.  v0:= temp @kind wide;
  #L355d28.  v2:= -1L;
  #L355d2c.  v2:= lcmp(v0, v2);
  #L355d30.  if v2 != 0 then goto L355d5e;
  #L355d34.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355d38.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355d3c.  v4:= 0L;
  #L355d40.  v2:= lcmp(v2, v4);
  #L355d44.  if v2 == 0 then goto L355d5a;
  #L355d48.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355d4c.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355d50.  call temp:= `readUtf8`(v6, v2) @signature `Lokio/RealBufferedSource;.readUtf8:(J)Ljava/lang/String;` @kind virtual;
  #L355d56.  v2:= temp @kind object;
  #L355d58.  return v2 @kind object;
  #L355d5a.  v2:= 0I;
  #L355d5c.  goto L355d58;
  #L355d5e.  v2:= v6.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355d62.  call temp:= `readUtf8Line`(v2, v0) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L355d68.  v2:= temp @kind object;
  #L355d6a.  goto L355d58;
}
procedure `java.lang.String` `readUtf8LineStrict`(`okio.RealBufferedSource` v10 @kind this) @signature `Lokio/RealBufferedSource;.readUtf8LineStrict:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L355d7c.  v0:= 10I;
  #L355d80.  call temp:= `indexOf`(v10, v0) @signature `Lokio/RealBufferedSource;.indexOf:(B)J` @kind virtual;
  #L355d86.  v6:= temp @kind wide;
  #L355d88.  v2:= -1L;
  #L355d8c.  v0:= lcmp(v6, v2);
  #L355d90.  if v0 != 0 then goto L355e32;
  #L355d94.  v1:= new `okio.Buffer`;
  #L355d98.  call `<init>`(v1) @signature `Lokio/Buffer;.<init>:()V` @kind direct;
  #L355d9e.  v0:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355da2.  v2:= 0L;
  #L355da6.  v4:= 32L;
  #L355daa.  v8:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355dae.  call temp:= `size`(v8) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L355db4.  v8:= temp @kind wide;
  #L355db6.  call temp:= `min`(v4, v8) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L355dbc.  v4:= temp @kind wide;
  #L355dbe.  call temp:= `copyTo`(v0, v1, v2, v4) @signature `Lokio/Buffer;.copyTo:(Lokio/Buffer;JJ)Lokio/Buffer;` @kind virtual;
  #L355dc4.  v0:= new `java.io.EOFException`;
  #L355dc8.  v2:= new `java.lang.StringBuilder`;
  #L355dcc.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L355dd2.  v3:= "\\n not found: size=" @kind object;
  #L355dd6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L355ddc.  v2:= temp @kind object;
  #L355dde.  v3:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355de2.  call temp:= `size`(v3) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L355de8.  v4:= temp @kind wide;
  #L355dea.  call temp:= `append`(v2, v4) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L355df0.  v2:= temp @kind object;
  #L355df2.  v3:= " content=" @kind object;
  #L355df6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L355dfc.  v2:= temp @kind object;
  #L355dfe.  call temp:= `readByteString`(v1) @signature `Lokio/Buffer;.readByteString:()Lokio/ByteString;` @kind virtual;
  #L355e04.  v3:= temp @kind object;
  #L355e06.  call temp:= `hex`(v3) @signature `Lokio/ByteString;.hex:()Ljava/lang/String;` @kind virtual;
  #L355e0c.  v3:= temp @kind object;
  #L355e0e.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L355e14.  v2:= temp @kind object;
  #L355e16.  v3:= "…" @kind object;
  #L355e1a.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L355e20.  v2:= temp @kind object;
  #L355e22.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L355e28.  v2:= temp @kind object;
  #L355e2a.  call `<init>`(v0, v2) @signature `Ljava/io/EOFException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355e30.  throw v0;
  #L355e32.  v0:= v10.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355e36.  call temp:= `readUtf8Line`(v0, v6) @signature `Lokio/Buffer;.readUtf8Line:(J)Ljava/lang/String;` @kind virtual;
  #L355e3c.  v0:= temp @kind object;
  #L355e3e.  return v0 @kind object;
}
procedure `boolean` `request`(`okio.RealBufferedSource` v5 @kind this, `long` v6 @name `byteCount`) @signature `Lokio/RealBufferedSource;.request:(J)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L355e50.  v0:= 0L;
  #L355e54.  v0:= lcmp(v6, v0);
  #L355e58.  if v0 >= 0 then goto L355e8e;
  #L355e5c.  v0:= new `java.lang.IllegalArgumentException`;
  #L355e60.  v1:= new `java.lang.StringBuilder`;
  #L355e64.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L355e6a.  v2:= "byteCount < 0: " @kind object;
  #L355e6e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L355e74.  v1:= temp @kind object;
  #L355e76.  call temp:= `append`(v1, v6) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L355e7c.  v1:= temp @kind object;
  #L355e7e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L355e84.  v1:= temp @kind object;
  #L355e86.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355e8c.  throw v0;
  #L355e8e.  v0:= v5.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355e92.  if v0 == 0 then goto L355ea6;
  #L355e96.  v0:= new `java.lang.IllegalStateException`;
  #L355e9a.  v1:= "closed" @kind object;
  #L355e9e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355ea4.  throw v0;
  #L355ea6.  v0:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355eaa.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355eae.  v0:= lcmp(v0, v6);
  #L355eb2.  if v0 >= 0 then goto L355eda;
  #L355eb6.  v0:= v5.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355eba.  v1:= v5.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355ebe.  v2:= 8192L;
  #L355ec2.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L355ec8.  v0:= temp @kind wide;
  #L355eca.  v2:= -1L;
  #L355ece.  v0:= lcmp(v0, v2);
  #L355ed2.  if v0 != 0 then goto L355ea6;
  #L355ed6.  v0:= 0I;
  #L355ed8.  return v0;
  #L355eda.  v0:= 1I;
  #L355edc.  goto L355ed8;
}
procedure `void` `require`(`okio.RealBufferedSource` v1 @kind this, `long` v2 @name `byteCount`) @signature `Lokio/RealBufferedSource;.require:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L355ef0.  call temp:= `request`(v1, v2) @signature `Lokio/RealBufferedSource;.request:(J)Z` @kind virtual;
  #L355ef6.  v0:= temp;
  #L355ef8.  if v0 != 0 then goto L355f08;
  #L355efc.  v0:= new `java.io.EOFException`;
  #L355f00.  call `<init>`(v0) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L355f06.  throw v0;
  #L355f08.  return @kind void;
}
procedure `int` `select`(`okio.RealBufferedSource` v8 @kind this, `okio.Options` v9 @kind object @name `options`) @signature `Lokio/RealBufferedSource;.select:(Lokio/Options;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L355f1c.  v2:= -1I;
  #L355f1e.  v3:= v8.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355f22.  if v3 == 0 then goto L355f36;
  #L355f26.  v2:= new `java.lang.IllegalStateException`;
  #L355f2a.  v3:= "closed" @kind object;
  #L355f2e.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355f34.  throw v2;
  #L355f36.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355f3a.  call temp:= `selectPrefix`(v3, v9) @signature `Lokio/Buffer;.selectPrefix:(Lokio/Options;)I` @kind virtual;
  #L355f40.  v0:= temp;
  #L355f42.  if v0 != v2 then goto L355f4a;
  #L355f46.  v0:= v2;
  #L355f48.  return v0;
  #L355f4a.  v3:= v9.`okio.Options.byteStrings` @type ^`okio.ByteString`[] @kind object;
  #L355f4e.  v3:= v3[v0] @kind object;
  #L355f52.  call temp:= `size`(v3) @signature `Lokio/ByteString;.size:()I` @kind virtual;
  #L355f58.  v1:= temp;
  #L355f5a.  v4:= (`long`) v1 @kind i2l;
  #L355f5c.  v3:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355f60.  v6:= v3.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355f64.  v3:= lcmp(v4, v6);
  #L355f68.  if v3 > 0 then goto L355f7a;
  #L355f6c.  v2:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355f70.  v4:= (`long`) v1 @kind i2l;
  #L355f72.  call `skip`(v2, v4) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L355f78.  goto L355f48;
  #L355f7a.  v3:= v8.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L355f7e.  v4:= v8.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355f82.  v6:= 8192L;
  #L355f86.  call temp:= `read`(v3, v4, v6) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L355f8c.  v4:= temp @kind wide;
  #L355f8e.  v6:= -1L;
  #L355f92.  v3:= lcmp(v4, v6);
  #L355f96.  if v3 != 0 then goto L355f36;
  #L355f9a.  v0:= v2;
  #L355f9c.  goto L355f48;
}
procedure `void` `skip`(`okio.RealBufferedSource` v9 @kind this, `long` v10 @name `byteCount`) @signature `Lokio/RealBufferedSource;.skip:(J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L355fb0.  v6:= 0L;
  #L355fb4.  v2:= v9.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L355fb8.  if v2 == 0 then goto L355fec;
  #L355fbc.  v2:= new `java.lang.IllegalStateException`;
  #L355fc0.  v3:= "closed" @kind object;
  #L355fc4.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L355fca.  throw v2;
  #L355fcc.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355fd0.  call temp:= `size`(v2) @signature `Lokio/Buffer;.size:()J` @kind virtual;
  #L355fd6.  v2:= temp @kind wide;
  #L355fd8.  call temp:= `min`(v10, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L355fde.  v0:= temp @kind wide;
  #L355fe0.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355fe4.  call `skip`(v2, v0) @signature `Lokio/Buffer;.skip:(J)V` @kind virtual;
  #L355fea.  v10:= v10 - v0 @kind long;
  #L355fec.  v2:= lcmp(v10, v6);
  #L355ff0.  if v2 <= 0 then goto L356030;
  #L355ff4.  v2:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L355ff8.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L355ffc.  v2:= lcmp(v2, v6);
  #L356000.  if v2 != 0 then goto L355fcc;
  #L356004.  v2:= v9.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L356008.  v3:= v9.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L35600c.  v4:= 8192L;
  #L356010.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L356016.  v2:= temp @kind wide;
  #L356018.  v4:= -1L;
  #L35601c.  v2:= lcmp(v2, v4);
  #L356020.  if v2 != 0 then goto L355fcc;
  #L356024.  v2:= new `java.io.EOFException`;
  #L356028.  call `<init>`(v2) @signature `Ljava/io/EOFException;.<init>:()V` @kind direct;
  #L35602e.  throw v2;
  #L356030.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.RealBufferedSource` v1 @kind this) @signature `Lokio/RealBufferedSource;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L356044.  v0:= v1.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L356048.  call temp:= `timeout`(v0) @signature `Lokio/Source;.timeout:()Lokio/Timeout;` @kind interface;
  #L35604e.  v0:= temp @kind object;
  #L356050.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource` v2 @kind this) @signature `Lokio/RealBufferedSource;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L356064.  v0:= new `java.lang.StringBuilder`;
  #L356068.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L35606e.  v1:= "buffer(" @kind object;
  #L356072.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356078.  v0:= temp @kind object;
  #L35607a.  v1:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L35607e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356084.  v0:= temp @kind object;
  #L356086.  v1:= ")" @kind object;
  #L35608a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L356090.  v0:= temp @kind object;
  #L356092.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L356098.  v0:= temp @kind object;
  #L35609a.  return v0 @kind object;
}
