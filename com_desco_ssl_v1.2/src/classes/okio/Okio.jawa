record `okio.Okio` @kind class @AccessFlag PUBLIC_FINAL {
}
global `java.util.logging.Logger` `@@okio.Okio.logger` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lokio/Okio;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L24db0c.  v0:= constclass @type ^`okio.Okio` @kind object;
  #L24db10.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L24db16.  v0:= temp @kind object;
  #L24db18.  call temp:= `getLogger`(v0) @signature `Ljava/util/logging/Logger;.getLogger:(Ljava/lang/String;)Ljava/util/logging/Logger;` @kind static;
  #L24db1e.  v0:= temp @kind object;
  #L24db20.  `@@okio.Okio.logger` @type ^`java.util.logging.Logger` := v0 @kind object;
  #L24db24.  return @kind void;
}
procedure `void` `<init>`(`okio.Okio` v0 @kind this) @signature `Lokio/Okio;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L24db38.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L24db3e.  return @kind void;
}
procedure `okio.Sink` `appendingSink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.appendingSink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24db50.  if v2 != 0 then goto L24db64;
  #L24db54.  v0:= new `java.lang.IllegalArgumentException`;
  #L24db58.  v1:= "file == null" @kind object;
  #L24db5c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24db62.  throw v0;
  #L24db64.  v0:= new `java.io.FileOutputStream`;
  #L24db68.  v1:= 1I;
  #L24db6a.  call `<init>`(v0, v2, v1) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;Z)V` @kind direct;
  #L24db70.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L24db76.  v0:= temp @kind object;
  #L24db78.  return v0 @kind object;
}
procedure `okio.BufferedSink` `buffer`(`okio.Sink` v2 @kind object @name `sink`) @signature `Lokio/Okio;.buffer:(Lokio/Sink;)Lokio/BufferedSink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24db8c.  if v2 != 0 then goto L24dba0;
  #L24db90.  v0:= new `java.lang.IllegalArgumentException`;
  #L24db94.  v1:= "sink == null" @kind object;
  #L24db98.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24db9e.  throw v0;
  #L24dba0.  v0:= new `okio.RealBufferedSink`;
  #L24dba4.  call `<init>`(v0, v2) @signature `Lokio/RealBufferedSink;.<init>:(Lokio/Sink;)V` @kind direct;
  #L24dbaa.  return v0 @kind object;
}
procedure `okio.BufferedSource` `buffer`(`okio.Source` v2 @kind object @name `source`) @signature `Lokio/Okio;.buffer:(Lokio/Source;)Lokio/BufferedSource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24dbbc.  if v2 != 0 then goto L24dbd0;
  #L24dbc0.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dbc4.  v1:= "source == null" @kind object;
  #L24dbc8.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dbce.  throw v0;
  #L24dbd0.  v0:= new `okio.RealBufferedSource`;
  #L24dbd4.  call `<init>`(v0, v2) @signature `Lokio/RealBufferedSource;.<init>:(Lokio/Source;)V` @kind direct;
  #L24dbda.  return v0 @kind object;
}
procedure `boolean` `isAndroidGetsocknameError`(`java.lang.AssertionError` v2 @kind object @name `e`) @signature `Lokio/Okio;.isAndroidGetsocknameError:(Ljava/lang/AssertionError;)Z` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L24dbec.  call temp:= `getCause`(v2) @signature `Ljava/lang/AssertionError;.getCause:()Ljava/lang/Throwable;` @kind virtual;
  #L24dbf2.  v0:= temp @kind object;
  #L24dbf4.  if v0 == 0 then goto L24dc20;
  #L24dbf8.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L24dbfe.  v0:= temp @kind object;
  #L24dc00.  if v0 == 0 then goto L24dc20;
  #L24dc04.  call temp:= `getMessage`(v2) @signature `Ljava/lang/AssertionError;.getMessage:()Ljava/lang/String;` @kind virtual;
  #L24dc0a.  v0:= temp @kind object;
  #L24dc0c.  v1:= "getsockname failed" @kind object;
  #L24dc10.  call temp:= `contains`(v0, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L24dc16.  v0:= temp;
  #L24dc18.  if v0 == 0 then goto L24dc20;
  #L24dc1c.  v0:= 1I;
  #L24dc1e.  return v0;
  #L24dc20.  v0:= 0I;
  #L24dc22.  goto L24dc1e;
}
procedure `okio.Sink` `sink`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.sink:(Ljava/io/File;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24dc34.  if v2 != 0 then goto L24dc48;
  #L24dc38.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dc3c.  v1:= "file == null" @kind object;
  #L24dc40.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dc46.  throw v0;
  #L24dc48.  v0:= new `java.io.FileOutputStream`;
  #L24dc4c.  call `<init>`(v0, v2) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L24dc52.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L24dc58.  v0:= temp @kind object;
  #L24dc5a.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v1 @kind object @name `out`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24dc6c.  v0:= new `okio.Timeout`;
  #L24dc70.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L24dc76.  call temp:= `sink`(v1, v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L24dc7c.  v0:= temp @kind object;
  #L24dc7e.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.io.OutputStream` v2 @kind object @name `out`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L24dc90.  if v2 != 0 then goto L24dca4;
  #L24dc94.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dc98.  v1:= "out == null" @kind object;
  #L24dc9c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dca2.  throw v0;
  #L24dca4.  if v3 != 0 then goto L24dcb8;
  #L24dca8.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dcac.  v1:= "timeout == null" @kind object;
  #L24dcb0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dcb6.  throw v0;
  #L24dcb8.  v0:= new `okio.Okio$1`;
  #L24dcbc.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$1;.<init>:(Lokio/Timeout;Ljava/io/OutputStream;)V` @kind direct;
  #L24dcc2.  return v0 @kind object;
}
procedure `okio.Sink` `sink`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.sink:(Ljava/net/Socket;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24dcd4.  if v4 != 0 then goto L24dce8;
  #L24dcd8.  v2:= new `java.lang.IllegalArgumentException`;
  #L24dcdc.  v3:= "socket == null" @kind object;
  #L24dce0.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dce6.  throw v2;
  #L24dce8.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L24dcee.  v1:= temp @kind object;
  #L24dcf0.  call temp:= `getOutputStream`(v4) @signature `Ljava/net/Socket;.getOutputStream:()Ljava/io/OutputStream;` @kind virtual;
  #L24dcf6.  v2:= temp @kind object;
  #L24dcf8.  call temp:= `sink`(v2, v1) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;Lokio/Timeout;)Lokio/Sink;` @kind static;
  #L24dcfe.  v0:= temp @kind object;
  #L24dd00.  call temp:= `sink`(v1, v0) @signature `Lokio/AsyncTimeout;.sink:(Lokio/Sink;)Lokio/Sink;` @kind virtual;
  #L24dd06.  v2:= temp @kind object;
  #L24dd08.  return v2 @kind object;
}
procedure `okio.Sink` `sink`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.sink:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Sink;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24dd1c.  if v2 != 0 then goto L24dd30;
  #L24dd20.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dd24.  v1:= "path == null" @kind object;
  #L24dd28.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dd2e.  throw v0;
  #L24dd30.  call temp:= `newOutputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newOutputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/OutputStream;` @kind static;
  #L24dd36.  v0:= temp @kind object;
  #L24dd38.  call temp:= `sink`(v0) @signature `Lokio/Okio;.sink:(Ljava/io/OutputStream;)Lokio/Sink;` @kind static;
  #L24dd3e.  v0:= temp @kind object;
  #L24dd40.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.File` v2 @kind object @name `file`) @signature `Lokio/Okio;.source:(Ljava/io/File;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24dd54.  if v2 != 0 then goto L24dd68;
  #L24dd58.  v0:= new `java.lang.IllegalArgumentException`;
  #L24dd5c.  v1:= "file == null" @kind object;
  #L24dd60.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dd66.  throw v0;
  #L24dd68.  v0:= new `java.io.FileInputStream`;
  #L24dd6c.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L24dd72.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L24dd78.  v0:= temp @kind object;
  #L24dd7a.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v1 @kind object @name `in`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L24dd8c.  v0:= new `okio.Timeout`;
  #L24dd90.  call `<init>`(v0) @signature `Lokio/Timeout;.<init>:()V` @kind direct;
  #L24dd96.  call temp:= `source`(v1, v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L24dd9c.  v0:= temp @kind object;
  #L24dd9e.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.io.InputStream` v2 @kind object @name `in`, `okio.Timeout` v3 @kind object @name `timeout`) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L24ddb0.  if v2 != 0 then goto L24ddc4;
  #L24ddb4.  v0:= new `java.lang.IllegalArgumentException`;
  #L24ddb8.  v1:= "in == null" @kind object;
  #L24ddbc.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ddc2.  throw v0;
  #L24ddc4.  if v3 != 0 then goto L24ddd8;
  #L24ddc8.  v0:= new `java.lang.IllegalArgumentException`;
  #L24ddcc.  v1:= "timeout == null" @kind object;
  #L24ddd0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24ddd6.  throw v0;
  #L24ddd8.  v0:= new `okio.Okio$2`;
  #L24dddc.  call `<init>`(v0, v3, v2) @signature `Lokio/Okio$2;.<init>:(Lokio/Timeout;Ljava/io/InputStream;)V` @kind direct;
  #L24dde2.  return v0 @kind object;
}
procedure `okio.Source` `source`(`java.net.Socket` v4 @kind object @name `socket`) @signature `Lokio/Okio;.source:(Ljava/net/Socket;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24ddf4.  if v4 != 0 then goto L24de08;
  #L24ddf8.  v2:= new `java.lang.IllegalArgumentException`;
  #L24ddfc.  v3:= "socket == null" @kind object;
  #L24de00.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24de06.  throw v2;
  #L24de08.  call temp:= `timeout`(v4) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @kind static;
  #L24de0e.  v1:= temp @kind object;
  #L24de10.  call temp:= `getInputStream`(v4) @signature `Ljava/net/Socket;.getInputStream:()Ljava/io/InputStream;` @kind virtual;
  #L24de16.  v2:= temp @kind object;
  #L24de18.  call temp:= `source`(v2, v1) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;Lokio/Timeout;)Lokio/Source;` @kind static;
  #L24de1e.  v0:= temp @kind object;
  #L24de20.  call temp:= `source`(v1, v0) @signature `Lokio/AsyncTimeout;.source:(Lokio/Source;)Lokio/Source;` @kind virtual;
  #L24de26.  v2:= temp @kind object;
  #L24de28.  return v2 @kind object;
}
procedure `okio.Source` `source`(`java.nio.file.Path` v2 @kind object @name `path`, `java.nio.file.OpenOption`[] v3 @kind object @name `options`) @signature `Lokio/Okio;.source:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Lokio/Source;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L24de3c.  if v2 != 0 then goto L24de50;
  #L24de40.  v0:= new `java.lang.IllegalArgumentException`;
  #L24de44.  v1:= "path == null" @kind object;
  #L24de48.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24de4e.  throw v0;
  #L24de50.  call temp:= `newInputStream`(v2, v3) @signature `Ljava/nio/file/Files;.newInputStream:(Ljava/nio/file/Path;[Ljava/nio/file/OpenOption;)Ljava/io/InputStream;` @kind static;
  #L24de56.  v0:= temp @kind object;
  #L24de58.  call temp:= `source`(v0) @signature `Lokio/Okio;.source:(Ljava/io/InputStream;)Lokio/Source;` @kind static;
  #L24de5e.  v0:= temp @kind object;
  #L24de60.  return v0 @kind object;
}
procedure `okio.AsyncTimeout` `timeout`(`java.net.Socket` v1 @kind object @name `socket`) @signature `Lokio/Okio;.timeout:(Ljava/net/Socket;)Lokio/AsyncTimeout;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L24de74.  v0:= new `okio.Okio$3`;
  #L24de78.  call `<init>`(v0, v1) @signature `Lokio/Okio$3;.<init>:(Ljava/net/Socket;)V` @kind direct;
  #L24de7e.  return v0 @kind object;
}
