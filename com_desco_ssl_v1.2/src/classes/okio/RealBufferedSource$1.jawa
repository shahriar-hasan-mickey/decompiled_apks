record `okio.RealBufferedSource$1` @kind class @AccessFlag  extends `java.io.InputStream` @kind class {
  `okio.RealBufferedSource` `okio.RealBufferedSource$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSource$1` v0 @kind this, `okio.RealBufferedSource` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSource$1;.<init>:(Lokio/RealBufferedSource;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24e050.  v0.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` := v1 @kind object;
  #L24e054.  call `<init>`(v0) @signature `Ljava/io/InputStream;.<init>:()V` @kind direct;
  #L24e05a.  return @kind void;
}
procedure `int` `available`(`okio.RealBufferedSource$1` v4 @kind this) @signature `Lokio/RealBufferedSource$1;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L24e06c.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e070.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24e074.  if v0 == 0 then goto L24e088;
  #L24e078.  v0:= new `java.io.IOException`;
  #L24e07c.  v1:= "closed" @kind object;
  #L24e080.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24e086.  throw v0;
  #L24e088.  v0:= v4.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e08c.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e090.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24e094.  v2:= 2147483647L;
  #L24e09a.  call temp:= `min`(v0, v2) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L24e0a0.  v0:= temp @kind wide;
  #L24e0a2.  v0:= (`int`) v0 @kind l2i;
  #L24e0a4.  return v0;
}
procedure `void` `close`(`okio.RealBufferedSource$1` v1 @kind this) @signature `Lokio/RealBufferedSource$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24e0b8.  v0:= v1.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e0bc.  call `close`(v0) @signature `Lokio/RealBufferedSource;.close:()V` @kind virtual;
  #L24e0c2.  return @kind void;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v6 @kind this) @signature `Lokio/RealBufferedSource$1;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L24e0d4.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e0d8.  v2:= v2.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24e0dc.  if v2 == 0 then goto L24e0f0;
  #L24e0e0.  v2:= new `java.io.IOException`;
  #L24e0e4.  v3:= "closed" @kind object;
  #L24e0e8.  call `<init>`(v2, v3) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24e0ee.  throw v2;
  #L24e0f0.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e0f4.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e0f8.  v2:= v2.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24e0fc.  v4:= 0L;
  #L24e100.  v2:= lcmp(v2, v4);
  #L24e104.  if v2 != 0 then goto L24e134;
  #L24e108.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e10c.  v2:= v2.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24e110.  v3:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e114.  v3:= v3.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e118.  v4:= 8192L;
  #L24e11c.  call temp:= `read`(v2, v3, v4) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L24e122.  v0:= temp @kind wide;
  #L24e124.  v2:= -1L;
  #L24e128.  v2:= lcmp(v0, v2);
  #L24e12c.  if v2 != 0 then goto L24e134;
  #L24e130.  v2:= -1I;
  #L24e132.  return v2;
  #L24e134.  v2:= v6.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e138.  v2:= v2.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e13c.  call temp:= `readByte`(v2) @signature `Lokio/Buffer;.readByte:()B` @kind virtual;
  #L24e142.  v2:= temp;
  #L24e144.  v2:= v2 ^& 255;
  #L24e148.  goto L24e132;
}
procedure `int` `read`(`okio.RealBufferedSource$1` v8 @kind this, `byte`[] v9 @kind object @name `data`, `int` v10 @name `offset`, `int` v11 @name `byteCount`) @signature `Lokio/RealBufferedSource$1;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L24e15c.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e160.  v0:= v0.`okio.RealBufferedSource.closed` @type ^`boolean` @kind boolean;
  #L24e164.  if v0 == 0 then goto L24e178;
  #L24e168.  v0:= new `java.io.IOException`;
  #L24e16c.  v1:= "closed" @kind object;
  #L24e170.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24e176.  throw v0;
  #L24e178.  v0:= length @variable v9;
  #L24e17a.  v0:= (`long`) v0 @kind i2l;
  #L24e17c.  v2:= (`long`) v10 @kind i2l;
  #L24e17e.  v4:= (`long`) v11 @kind i2l;
  #L24e180.  call `checkOffsetAndCount`(v0, v2, v4) @signature `Lokio/Util;.checkOffsetAndCount:(JJJ)V` @kind static;
  #L24e186.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e18a.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e18e.  v0:= v0.`okio.Buffer.size` @type ^`long` @kind wide;
  #L24e192.  v2:= 0L;
  #L24e196.  v0:= lcmp(v0, v2);
  #L24e19a.  if v0 != 0 then goto L24e1ca;
  #L24e19e.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e1a2.  v0:= v0.`okio.RealBufferedSource.source` @type ^`okio.Source` @kind object;
  #L24e1a6.  v1:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e1aa.  v1:= v1.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e1ae.  v2:= 8192L;
  #L24e1b2.  call temp:= `read`(v0, v1, v2) @signature `Lokio/Source;.read:(Lokio/Buffer;J)J` @kind interface;
  #L24e1b8.  v6:= temp @kind wide;
  #L24e1ba.  v0:= -1L;
  #L24e1be.  v0:= lcmp(v6, v0);
  #L24e1c2.  if v0 != 0 then goto L24e1ca;
  #L24e1c6.  v0:= -1I;
  #L24e1c8.  return v0;
  #L24e1ca.  v0:= v8.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e1ce.  v0:= v0.`okio.RealBufferedSource.buffer` @type ^`okio.Buffer` @kind object;
  #L24e1d2.  call temp:= `read`(v0, v9, v10, v11) @signature `Lokio/Buffer;.read:([BII)I` @kind virtual;
  #L24e1d8.  v0:= temp;
  #L24e1da.  goto L24e1c8;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSource$1` v2 @kind this) @signature `Lokio/RealBufferedSource$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24e1ec.  v0:= new `java.lang.StringBuilder`;
  #L24e1f0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24e1f6.  v1:= v2.`okio.RealBufferedSource$1.this$0` @type ^`okio.RealBufferedSource` @kind object;
  #L24e1fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24e200.  v0:= temp @kind object;
  #L24e202.  v1:= ".inputStream()" @kind object;
  #L24e206.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24e20c.  v0:= temp @kind object;
  #L24e20e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24e214.  v0:= temp @kind object;
  #L24e216.  return v0 @kind object;
}
