record `okio.ForwardingSink` @kind class @AccessFlag PUBLIC_ABSTRACT extends `okio.Sink` @kind interface {
  `okio.Sink` `okio.ForwardingSink.delegate` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`okio.ForwardingSink` v2 @kind this, `okio.Sink` v3 @kind object @name `delegate`) @signature `Lokio/ForwardingSink;.<init>:(Lokio/Sink;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L31126c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L311272.  if v3 != 0 then goto L311286;
  #L311276.  v0:= new `java.lang.IllegalArgumentException`;
  #L31127a.  v1:= "delegate == null" @kind object;
  #L31127e.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L311284.  throw v0;
  #L311286.  v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` := v3 @kind object;
  #L31128a.  return @kind void;
}
procedure `void` `close`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L31129c.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L3112a0.  call `close`(v0) @signature `Lokio/Sink;.close:()V` @kind interface;
  #L3112a6.  return @kind void;
}
procedure `okio.Sink` `delegate`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.delegate:()Lokio/Sink;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3112b8.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L3112bc.  return v0 @kind object;
}
procedure `void` `flush`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3112d0.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L3112d4.  call `flush`(v0) @signature `Lokio/Sink;.flush:()V` @kind interface;
  #L3112da.  return @kind void;
}
procedure `okio.Timeout` `timeout`(`okio.ForwardingSink` v1 @kind this) @signature `Lokio/ForwardingSink;.timeout:()Lokio/Timeout;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3112ec.  v0:= v1.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L3112f0.  call temp:= `timeout`(v0) @signature `Lokio/Sink;.timeout:()Lokio/Timeout;` @kind interface;
  #L3112f6.  v0:= temp @kind object;
  #L3112f8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`okio.ForwardingSink` v2 @kind this) @signature `Lokio/ForwardingSink;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L31130c.  v0:= new `java.lang.StringBuilder`;
  #L311310.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L311316.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L31131c.  v1:= temp @kind object;
  #L31131e.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L311324.  v1:= temp @kind object;
  #L311326.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31132c.  v0:= temp @kind object;
  #L31132e.  v1:= "(" @kind object;
  #L311332.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311338.  v0:= temp @kind object;
  #L31133a.  v1:= v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L31133e.  call temp:= `toString`(v1) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L311344.  v1:= temp @kind object;
  #L311346.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L31134c.  v0:= temp @kind object;
  #L31134e.  v1:= ")" @kind object;
  #L311352.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L311358.  v0:= temp @kind object;
  #L31135a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L311360.  v0:= temp @kind object;
  #L311362.  return v0 @kind object;
}
procedure `void` `write`(`okio.ForwardingSink` v2 @kind this, `okio.Buffer` v3 @kind object @name `source`, `long` v4 @name `byteCount`) @signature `Lokio/ForwardingSink;.write:(Lokio/Buffer;J)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L311374.  v0:= v2.`okio.ForwardingSink.delegate` @type ^`okio.Sink` @kind object;
  #L311378.  call `write`(v0, v3, v4) @signature `Lokio/Sink;.write:(Lokio/Buffer;J)V` @kind interface;
  #L31137e.  return @kind void;
}
