record `okio.RealBufferedSink$1` @kind class @AccessFlag  extends `java.io.OutputStream` @kind class {
  `okio.RealBufferedSink` `okio.RealBufferedSink$1.this$0` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`okio.RealBufferedSink$1` v0 @kind this, `okio.RealBufferedSink` v1 @kind object @name `this$0`) @signature `Lokio/RealBufferedSink$1;.<init>:(Lokio/RealBufferedSink;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L24df24.  v0.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` := v1 @kind object;
  #L24df28.  call `<init>`(v0) @signature `Ljava/io/OutputStream;.<init>:()V` @kind direct;
  #L24df2e.  return @kind void;
}
procedure `void` `close`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24df40.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24df44.  call `close`(v0) @signature `Lokio/RealBufferedSink;.close:()V` @kind virtual;
  #L24df4a.  return @kind void;
}
procedure `void` `flush`(`okio.RealBufferedSink$1` v1 @kind this) @signature `Lokio/RealBufferedSink$1;.flush:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L24df5c.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24df60.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L24df64.  if v0 != 0 then goto L24df72;
  #L24df68.  v0:= v1.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24df6c.  call `flush`(v0) @signature `Lokio/RealBufferedSink;.flush:()V` @kind virtual;
  #L24df72.  return @kind void;
}
procedure `java.lang.String` `toString`(`okio.RealBufferedSink$1` v2 @kind this) @signature `Lokio/RealBufferedSink$1;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24df84.  v0:= new `java.lang.StringBuilder`;
  #L24df88.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L24df8e.  v1:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24df92.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24df98.  v0:= temp @kind object;
  #L24df9a.  v1:= ".outputStream()" @kind object;
  #L24df9e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L24dfa4.  v0:= temp @kind object;
  #L24dfa6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L24dfac.  v0:= temp @kind object;
  #L24dfae.  return v0 @kind object;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `int` v3 @name `b`) @signature `Lokio/RealBufferedSink$1;.write:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24dfc0.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24dfc4.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L24dfc8.  if v0 == 0 then goto L24dfdc;
  #L24dfcc.  v0:= new `java.io.IOException`;
  #L24dfd0.  v1:= "closed" @kind object;
  #L24dfd4.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24dfda.  throw v0;
  #L24dfdc.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24dfe0.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L24dfe4.  v1:= (`byte`) v3 @kind i2b;
  #L24dfe6.  call temp:= `writeByte`(v0, v1) @signature `Lokio/Buffer;.writeByte:(I)Lokio/Buffer;` @kind virtual;
  #L24dfec.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24dff0.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L24dff6.  return @kind void;
}
procedure `void` `write`(`okio.RealBufferedSink$1` v2 @kind this, `byte`[] v3 @kind object @name `data`, `int` v4 @name `offset`, `int` v5 @name `byteCount`) @signature `Lokio/RealBufferedSink$1;.write:([BII)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L24e008.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24e00c.  v0:= v0.`okio.RealBufferedSink.closed` @type ^`boolean` @kind boolean;
  #L24e010.  if v0 == 0 then goto L24e024;
  #L24e014.  v0:= new `java.io.IOException`;
  #L24e018.  v1:= "closed" @kind object;
  #L24e01c.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L24e022.  throw v0;
  #L24e024.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24e028.  v0:= v0.`okio.RealBufferedSink.buffer` @type ^`okio.Buffer` @kind object;
  #L24e02c.  call temp:= `write`(v0, v3, v4, v5) @signature `Lokio/Buffer;.write:([BII)Lokio/Buffer;` @kind virtual;
  #L24e032.  v0:= v2.`okio.RealBufferedSink$1.this$0` @type ^`okio.RealBufferedSink` @kind object;
  #L24e036.  call temp:= `emitCompleteSegments`(v0) @signature `Lokio/RealBufferedSink;.emitCompleteSegments:()Lokio/BufferedSink;` @kind virtual;
  #L24e03c.  return @kind void;
}
