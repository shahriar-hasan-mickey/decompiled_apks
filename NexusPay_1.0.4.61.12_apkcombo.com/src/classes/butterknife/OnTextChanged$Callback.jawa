record `butterknife.OnTextChanged$Callback` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `butterknife.OnTextChanged$Callback`[] `@@butterknife.OnTextChanged$Callback.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `butterknife.OnTextChanged$Callback` `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lbutterknife/OnTextChanged$Callback;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L37e150.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L37e154.  v1:= "TEXT_CHANGED" @kind object;
  #L37e158.  v2:= 0I;
  #L37e15a.  call `<init>`(v0, v1, v2) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37e160.  `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L37e164.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L37e168.  v1:= "BEFORE_TEXT_CHANGED" @kind object;
  #L37e16c.  v3:= 1I;
  #L37e16e.  call `<init>`(v0, v1, v3) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37e174.  `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L37e178.  v0:= new `butterknife.OnTextChanged$Callback`;
  #L37e17c.  v1:= "AFTER_TEXT_CHANGED" @kind object;
  #L37e180.  v4:= 2I;
  #L37e182.  call `<init>`(v0, v1, v4) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37e188.  `@@butterknife.OnTextChanged$Callback.AFTER_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` := v0 @kind object;
  #L37e18c.  v1:= 3I;
  #L37e18e.  v1:= new `butterknife.OnTextChanged$Callback`[v1];
  #L37e192.  v5:= `@@butterknife.OnTextChanged$Callback.TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L37e196.  v1[v2]:= v5 @kind object;
  #L37e19a.  v2:= `@@butterknife.OnTextChanged$Callback.BEFORE_TEXT_CHANGED` @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L37e19e.  v1[v3]:= v2 @kind object;
  #L37e1a2.  v1[v4]:= v0 @kind object;
  #L37e1a6.  `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] := v1 @kind object;
  #L37e1aa.  return @kind void;
}
procedure `void` `<init>`(`butterknife.OnTextChanged$Callback` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lbutterknife/OnTextChanged$Callback;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L37e1bc.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L37e1c2.  return @kind void;
}
procedure `butterknife.OnTextChanged$Callback` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lbutterknife/OnTextChanged$Callback;.valueOf:(Ljava/lang/String;)Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37e108.  v0:= constclass @type ^`butterknife.OnTextChanged$Callback` @kind object;
  #L37e10c.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L37e112.  v1:= temp @kind object;
  #L37e114.  v1:= (`butterknife.OnTextChanged$Callback`) v1 @kind object;
  #L37e118.  return v1 @kind object;
}
procedure `butterknife.OnTextChanged$Callback`[] `values`() @signature `Lbutterknife/OnTextChanged$Callback;.values:()[Lbutterknife/OnTextChanged$Callback;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L37e12c.  v0:= `@@butterknife.OnTextChanged$Callback.$VALUES` @type ^`butterknife.OnTextChanged$Callback`[] @kind object;
  #L37e130.  call temp:= `clone`(v0) @signature `[Lbutterknife/OnTextChanged$Callback;.clone:()Ljava/lang/Object;` @kind virtual;
  #L37e136.  v0:= temp @kind object;
  #L37e138.  v0:= (`butterknife.OnTextChanged$Callback`[]) v0 @kind object;
  #L37e13c.  return v0 @kind object;
}
