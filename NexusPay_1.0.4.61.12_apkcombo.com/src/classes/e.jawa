record `e` @kind class @AccessFlag PUBLIC_SYNTHETIC {
}
procedure `long` `a`(`java.lang.String` v16 @kind object, `int` v17 ) @signature `Le;.a:(Ljava/lang/String;I)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L188864.  v0:= v16 @kind object;
  #L188868.  v1:= v17;
  #L18886c.  call temp:= `length`(v16) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L188872.  v2:= temp;
  #L188874.  if v2 == 0 then goto L188948;
  #L188878.  v3:= 2I;
  #L18887a.  if v1 < v3 then goto L188928;
  #L18887e.  v3:= 36I;
  #L188882.  if v1 > v3 then goto L188928;
  #L188886.  v3:= (`long`) v1 @kind i2l;
  #L188888.  v5:= -1L;
  #L18888c.  call temp:= `a`(v5, v3) @signature `Ld;.a:(JJ)J` @kind static;
  #L188892.  v7:= temp @kind wide;
  #L188894.  v9:= 0I;
  #L188896.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L18889c.  v10:= temp;
  #L18889e.  v11:= 43I;
  #L1888a2.  v12:= 1I;
  #L1888a4.  if v10 != v11 then goto L1888ae;
  #L1888a8.  if v2 <= v12 then goto L1888ae;
  #L1888ac.  v9:= 1I;
  #L1888ae.  v10:= 0L;
  #L1888b2.  v12:= v10 @kind wide;
  #L1888b4.  if v9 >= v2 then goto L188926;
  #L1888b8.  call temp:= `charAt`(v0, v9) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L1888be.  v14:= temp;
  #L1888c0.  call temp:= `digit`(v14, v1) @signature `Ljava/lang/Character;.digit:(CI)I` @kind static;
  #L1888c6.  v14:= temp;
  #L1888c8.  v15:= -1I;
  #L1888ca.  if v14 == v15 then goto L18891a;
  #L1888ce.  v15:= lcmp(v12, v10);
  #L1888d2.  if v15 < 0 then goto L188902;
  #L1888d6.  v15:= lcmp(v12, v7);
  #L1888da.  if v15 > 0 then goto L188902;
  #L1888de.  if v15 != 0 then goto L1888f0;
  #L1888e2.  call temp:= `a`(v5, v3) @signature `Lf;.a:(JJ)J` @kind static;
  #L1888e8.  v10:= temp @kind wide;
  #L1888ea.  v11:= (`int`) v10 @kind l2i;
  #L1888ec.  if v14 > v11 then goto L188902;
  #L1888f0.  v12:= v12 * v3 @kind long;
  #L1888f4.  v10:= (`long`) v14 @kind i2l;
  #L1888f6.  v12:= v12 + v10 @kind long;
  #L1888f8.  v9:= v9 + 1;
  #L1888fc.  v10:= 0L;
  #L188900.  goto L1888b4;
  #L188902.  v1:= new `java.lang.NumberFormatException`;
  #L188906.  v2:= "Too large for unsigned long: " @kind object;
  #L18890a.  call temp:= `concat`(v2, v0) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L188910.  v0:= temp @kind object;
  #L188912.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L188918.  throw v1;
  #L18891a.  v1:= new `java.lang.NumberFormatException`;
  #L18891e.  call `<init>`(v1, v0) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L188924.  throw v1;
  #L188926.  return v12 @kind wide;
  #L188928.  v0:= new `java.lang.NumberFormatException`;
  #L18892c.  call temp:= `valueOf`(v17) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L188932.  v1:= temp @kind object;
  #L188934.  v2:= "illegal radix: " @kind object;
  #L188938.  call temp:= `concat`(v2, v1) @signature `Ljava/lang/String;.concat:(Ljava/lang/String;)Ljava/lang/String;` @kind virtual;
  #L18893e.  v1:= temp @kind object;
  #L188940.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L188946.  throw v0;
  #L188948.  v0:= new `java.lang.NumberFormatException`;
  #L18894c.  v1:= "empty string" @kind object;
  #L188950.  call `<init>`(v0, v1) @signature `Ljava/lang/NumberFormatException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L188956.  throw v0;
}
