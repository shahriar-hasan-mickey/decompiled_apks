record `f` @kind class @AccessFlag PUBLIC_SYNTHETIC {
}
procedure `long` `a`(`long` v7 , `long` v9 ) @signature `Lf;.a:(JJ)J` @AccessFlag PUBLIC_STATIC_SYNTHETIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L188968.  v0:= 0L;
  #L18896c.  v2:= -9223372036854775808L;
  #L188970.  v4:= lcmp(v9, v0);
  #L188974.  if v4 >= 0 then goto L18898c;
  #L188978.  v0:= v7 ^~ v2 @kind long;
  #L18897c.  v2:= v2 ^~ v9 @kind long;
  #L18897e.  v4:= lcmp(v0, v2);
  #L188982.  if v4 >= 0 then goto L188988;
  #L188986.  return v7 @kind wide;
  #L188988.  v7:= v7 - v9 @kind long;
  #L18898a.  return v7 @kind wide;
  #L18898c.  v4:= lcmp(v7, v0);
  #L188990.  if v4 < 0 then goto L188998;
  #L188994.  v7:= v7 %% v9 @kind long;
  #L188996.  return v7 @kind wide;
  #L188998.  v4:= 1I;
  #L18899a.  v5:= v7 ^>> v4 @kind long;
  #L18899e.  v5:= v5 / v9 @kind long;
  #L1889a0.  v4:= v5 ^< v4 @kind long;
  #L1889a4.  v4:= v4 * v9 @kind long;
  #L1889a8.  v7:= v7 - v4 @kind long;
  #L1889aa.  v4:= v7 ^~ v2 @kind long;
  #L1889ae.  v2:= v2 ^~ v9 @kind long;
  #L1889b0.  v6:= lcmp(v4, v2);
  #L1889b4.  if v6 < 0 then goto L1889ba;
  #L1889b8.  goto L1889bc;
  #L1889ba.  v9:= v0 @kind wide;
  #L1889bc.  v7:= v7 - v9 @kind long;
  #L1889be.  return v7 @kind wide;
}
