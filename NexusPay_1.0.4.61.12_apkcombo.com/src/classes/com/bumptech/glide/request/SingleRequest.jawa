record `com.bumptech.glide.request.SingleRequest` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.request.Request` @kind interface, `com.bumptech.glide.request.target.SizeReadyCallback` @kind interface, `com.bumptech.glide.request.ResourceCallback` @kind interface {
  `int` `com.bumptech.glide.request.SingleRequest.A` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.SingleRequest.B` @AccessFlag PRIVATE;
  `java.lang.RuntimeException` `com.bumptech.glide.request.SingleRequest.C` @AccessFlag PRIVATE;
  `java.lang.String` `com.bumptech.glide.request.SingleRequest.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.util.pool.StateVerifier` `com.bumptech.glide.request.SingleRequest.b` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.SingleRequest.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestListener` `com.bumptech.glide.request.SingleRequest.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.SingleRequest.e` @AccessFlag PRIVATE_FINAL;
  `android.content.Context` `com.bumptech.glide.request.SingleRequest.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.request.SingleRequest.g` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.SingleRequest.h` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.request.SingleRequest.i` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.BaseRequestOptions` `com.bumptech.glide.request.SingleRequest.j` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.SingleRequest.k` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.request.SingleRequest.l` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.SingleRequest.m` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.target.Target` `com.bumptech.glide.request.SingleRequest.n` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.SingleRequest.o` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.transition.TransitionFactory` `com.bumptech.glide.request.SingleRequest.p` @AccessFlag PRIVATE_FINAL;
  `java.util.concurrent.Executor` `com.bumptech.glide.request.SingleRequest.q` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.request.SingleRequest.r` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.Engine$LoadStatus` `com.bumptech.glide.request.SingleRequest.s` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.request.SingleRequest.t` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.Engine` `com.bumptech.glide.request.SingleRequest.u` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.SingleRequest$a` `com.bumptech.glide.request.SingleRequest.v` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.w` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.x` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.SingleRequest.y` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.SingleRequest.z` @AccessFlag PRIVATE;
}
global `boolean` `@@com.bumptech.glide.request.SingleRequest.D` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/SingleRequest;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3eba08.  v0:= "Request" @kind object;
  #L3eba0c.  v1:= 2I;
  #L3eba0e.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3eba14.  v0:= temp;
  #L3eba16.  `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` := v0 @kind boolean;
  #L3eba1a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.SingleRequest` v3 @kind this, `android.content.Context` v4 @kind object, `com.bumptech.glide.GlideContext` v5 @kind object, `java.lang.Object` v6 @kind object, `java.lang.Object` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.Priority` v12 @kind object, `com.bumptech.glide.request.target.Target` v13 @kind object, `com.bumptech.glide.request.RequestListener` v14 @kind object, `java.util.List` v15 @kind object, `com.bumptech.glide.request.RequestCoordinator` v16 @kind object, `com.bumptech.glide.load.engine.Engine` v17 @kind object, `com.bumptech.glide.request.transition.TransitionFactory` v18 @kind object, `java.util.concurrent.Executor` v19 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3eba2c.  v0:= v3 @kind object;
  #L3eba2e.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3eba34.  v1:= `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` @kind boolean;
  #L3eba38.  if v1 == 0 then goto L3eba4e;
  #L3eba3c.  call temp:= `hashCode`(v3) @signature `Ljava/lang/Object;.hashCode:()I` @kind super;
  #L3eba42.  v1:= temp;
  #L3eba44.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L3eba4a.  v1:= temp @kind object;
  #L3eba4c.  goto L3eba50;
  #L3eba4e.  v1:= 0I;
  #L3eba50.  v0.`com.bumptech.glide.request.SingleRequest.a` @type ^`java.lang.String` := v1 @kind object;
  #L3eba54.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.newInstance:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind static;
  #L3eba5a.  v1:= temp @kind object;
  #L3eba5c.  v0.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` := v1 @kind object;
  #L3eba60.  v1:= v6 @kind object;
  #L3eba62.  v0.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` := v1 @kind object;
  #L3eba66.  v1:= v4 @kind object;
  #L3eba68.  v0.`com.bumptech.glide.request.SingleRequest.f` @type ^`android.content.Context` := v1 @kind object;
  #L3eba6c.  v1:= v5 @kind object;
  #L3eba6e.  v0.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3eba72.  v2:= v7 @kind object;
  #L3eba74.  v0.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` := v2 @kind object;
  #L3eba78.  v2:= v8 @kind object;
  #L3eba7a.  v0.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` := v2 @kind object;
  #L3eba7e.  v2:= v9 @kind object;
  #L3eba80.  v0.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` := v2 @kind object;
  #L3eba84.  v2:= v10;
  #L3eba86.  v0.`com.bumptech.glide.request.SingleRequest.k` @type ^`int` := v2;
  #L3eba8a.  v2:= v11;
  #L3eba8c.  v0.`com.bumptech.glide.request.SingleRequest.l` @type ^`int` := v2;
  #L3eba90.  v2:= v12 @kind object;
  #L3eba92.  v0.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L3eba96.  v2:= v13 @kind object;
  #L3eba98.  v0.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` := v2 @kind object;
  #L3eba9c.  v2:= v14 @kind object;
  #L3eba9e.  v0.`com.bumptech.glide.request.SingleRequest.d` @type ^`com.bumptech.glide.request.RequestListener` := v2 @kind object;
  #L3ebaa2.  v2:= v15 @kind object;
  #L3ebaa4.  v0.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` := v2 @kind object;
  #L3ebaa8.  v2:= v16 @kind object;
  #L3ebaac.  v0.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` := v2 @kind object;
  #L3ebab0.  v2:= v17 @kind object;
  #L3ebab4.  v0.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` := v2 @kind object;
  #L3ebab8.  v2:= v18 @kind object;
  #L3ebabc.  v0.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.request.transition.TransitionFactory` := v2 @kind object;
  #L3ebac0.  v2:= v19 @kind object;
  #L3ebac4.  v0.`com.bumptech.glide.request.SingleRequest.q` @type ^`java.util.concurrent.Executor` := v2 @kind object;
  #L3ebac8.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.PENDING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebacc.  v0.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v2 @kind object;
  #L3ebad0.  v2:= v0.`com.bumptech.glide.request.SingleRequest.C` @type ^`java.lang.RuntimeException` @kind object;
  #L3ebad4.  if v2 != 0 then goto L3ebaf6;
  #L3ebad8.  call temp:= `isLoggingRequestOriginsEnabled`(v5) @signature `Lcom/bumptech/glide/GlideContext;.isLoggingRequestOriginsEnabled:()Z` @kind virtual;
  #L3ebade.  v1:= temp;
  #L3ebae0.  if v1 == 0 then goto L3ebaf6;
  #L3ebae4.  v1:= new `java.lang.RuntimeException`;
  #L3ebae8.  v2:= "Glide request origin trace" @kind object;
  #L3ebaec.  call `<init>`(v1, v2) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ebaf2.  v0.`com.bumptech.glide.request.SingleRequest.C` @type ^`java.lang.RuntimeException` := v1 @kind object;
  #L3ebaf6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ebb08.  v0:= v2.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` @kind boolean;
  #L3ebb0c.  if v0 != 0 then goto L3ebb12;
  #L3ebb10.  return @kind void;
  #L3ebb12.  v0:= new `java.lang.IllegalStateException`;
  #L3ebb16.  v1:= "You can't start or clear loads in RequestListener or Target callbacks. If you're trying to start a fallback request when a load fails, use RequestBuilder#error(RequestBuilder). Otherwise consider posting your into() or clear() calls to the main thread using a Handler instead." @kind object;
  #L3ebb1a.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ebb20.  throw v0;
}
procedure `boolean` `b`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb680.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3eb684.  if v0 == 0 then goto L3eb69a;
  #L3eb688.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3eb68e.  v0:= temp;
  #L3eb690.  if v0 == 0 then goto L3eb696;
  #L3eb694.  goto L3eb69a;
  #L3eb696.  v0:= 0I;
  #L3eb698.  goto L3eb69c;
  #L3eb69a.  v0:= 1I;
  #L3eb69c.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb6b0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3eb6b4.  if v0 == 0 then goto L3eb6ca;
  #L3eb6b8.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3eb6be.  v0:= temp;
  #L3eb6c0.  if v0 == 0 then goto L3eb6c6;
  #L3eb6c4.  goto L3eb6ca;
  #L3eb6c6.  v0:= 0I;
  #L3eb6c8.  goto L3eb6cc;
  #L3eb6ca.  v0:= 1I;
  #L3eb6cc.  return v0;
}
procedure `boolean` `d`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.d:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb6e0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3eb6e4.  if v0 == 0 then goto L3eb6fa;
  #L3eb6e8.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3eb6ee.  v0:= temp;
  #L3eb6f0.  if v0 == 0 then goto L3eb6f6;
  #L3eb6f4.  goto L3eb6fa;
  #L3eb6f6.  v0:= 0I;
  #L3eb6f8.  goto L3eb6fc;
  #L3eb6fa.  v0:= 1I;
  #L3eb6fc.  return v0;
}
procedure `void` `e`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ebcb4.  call `a`(v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3ebcba.  v0:= v1.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ebcbe.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ebcc4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebcc8.  call `removeCallback`(v0, v1) @signature `Lcom/bumptech/glide/request/target/Target;.removeCallback:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind interface;
  #L3ebcce.  v0:= v1.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` @kind object;
  #L3ebcd2.  if v0 == 0 then goto L3ebce2;
  #L3ebcd6.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/engine/Engine$LoadStatus;.cancel:()V` @kind virtual;
  #L3ebcdc.  v0:= 0I;
  #L3ebcde.  v1.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3ebce2.  return @kind void;
}
procedure `android.graphics.drawable.Drawable` `f`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb524.  v0:= v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb528.  if v0 != 0 then goto L3eb568;
  #L3eb52c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb530.  call temp:= `getErrorPlaceholder`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorPlaceholder:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3eb536.  v0:= temp @kind object;
  #L3eb538.  v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb53c.  if v0 != 0 then goto L3eb568;
  #L3eb540.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb544.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @kind virtual;
  #L3eb54a.  v0:= temp;
  #L3eb54c.  if v0 <= 0 then goto L3eb568;
  #L3eb550.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb554.  call temp:= `getErrorId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @kind virtual;
  #L3eb55a.  v0:= temp;
  #L3eb55c.  call temp:= `j`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3eb562.  v0:= temp @kind object;
  #L3eb564.  v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb568.  v0:= v1.`com.bumptech.glide.request.SingleRequest.w` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb56c.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `g`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb580.  v0:= v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb584.  if v0 != 0 then goto L3eb5c4;
  #L3eb588.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb58c.  call temp:= `getFallbackDrawable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3eb592.  v0:= temp @kind object;
  #L3eb594.  v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb598.  if v0 != 0 then goto L3eb5c4;
  #L3eb59c.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb5a0.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @kind virtual;
  #L3eb5a6.  v0:= temp;
  #L3eb5a8.  if v0 <= 0 then goto L3eb5c4;
  #L3eb5ac.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb5b0.  call temp:= `getFallbackId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @kind virtual;
  #L3eb5b6.  v0:= temp;
  #L3eb5b8.  call temp:= `j`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3eb5be.  v0:= temp @kind object;
  #L3eb5c0.  v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb5c4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.y` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb5c8.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `h`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb5dc.  v0:= v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb5e0.  if v0 != 0 then goto L3eb620;
  #L3eb5e4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb5e8.  call temp:= `getPlaceholderDrawable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderDrawable:()Landroid/graphics/drawable/Drawable;` @kind virtual;
  #L3eb5ee.  v0:= temp @kind object;
  #L3eb5f0.  v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb5f4.  if v0 != 0 then goto L3eb620;
  #L3eb5f8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb5fc.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @kind virtual;
  #L3eb602.  v0:= temp;
  #L3eb604.  if v0 <= 0 then goto L3eb620;
  #L3eb608.  v0:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb60c.  call temp:= `getPlaceholderId`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @kind virtual;
  #L3eb612.  v0:= temp;
  #L3eb614.  call temp:= `j`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:(I)Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3eb61a.  v0:= temp @kind object;
  #L3eb61c.  v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3eb620.  v0:= v1.`com.bumptech.glide.request.SingleRequest.x` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3eb624.  return v0 @kind object;
}
procedure `boolean` `i`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3eb8d8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3eb8dc.  if v0 == 0 then goto L3eb8fa;
  #L3eb8e0.  call temp:= `getRoot`(v0) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L3eb8e6.  v0:= temp @kind object;
  #L3eb8e8.  call temp:= `isAnyResourceSet`(v0) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.isAnyResourceSet:()Z` @kind interface;
  #L3eb8ee.  v0:= temp;
  #L3eb8f0.  if v0 != 0 then goto L3eb8f6;
  #L3eb8f4.  goto L3eb8fa;
  #L3eb8f6.  v0:= 0I;
  #L3eb8f8.  goto L3eb8fc;
  #L3eb8fa.  v0:= 1I;
  #L3eb8fc.  return v0;
}
procedure `android.graphics.drawable.Drawable` `j`(`com.bumptech.glide.request.SingleRequest` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.j:(I)Landroid/graphics/drawable/Drawable;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eb638.  v0:= v2.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb63c.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3eb642.  v0:= temp @kind object;
  #L3eb644.  if v0 == 0 then goto L3eb656;
  #L3eb648.  v0:= v2.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb64c.  call temp:= `getTheme`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3eb652.  v0:= temp @kind object;
  #L3eb654.  goto L3eb662;
  #L3eb656.  v0:= v2.`com.bumptech.glide.request.SingleRequest.f` @type ^`android.content.Context` @kind object;
  #L3eb65a.  call temp:= `getTheme`(v0) @signature `Landroid/content/Context;.getTheme:()Landroid/content/res/Resources$Theme;` @kind virtual;
  #L3eb660.  v0:= temp @kind object;
  #L3eb662.  v1:= v2.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3eb666.  call temp:= `getDrawable`(v1, v3, v0) @signature `Lcom/bumptech/glide/load/resource/drawable/DrawableDecoderCompat;.getDrawable:(Landroid/content/Context;ILandroid/content/res/Resources$Theme;)Landroid/graphics/drawable/Drawable;` @kind static;
  #L3eb66c.  v3:= temp @kind object;
  #L3eb66e.  return v3 @kind object;
}
procedure `void` `k`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `java.lang.String` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(Ljava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ebd98.  v0:= new `java.lang.StringBuilder`;
  #L3ebd9c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebda2.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebda8.  v2:= " this: " @kind object;
  #L3ebdac.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebdb2.  v2:= v1.`com.bumptech.glide.request.SingleRequest.a` @type ^`java.lang.String` @kind object;
  #L3ebdb6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebdbc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebdc2.  v2:= temp @kind object;
  #L3ebdc4.  v0:= "Request" @kind object;
  #L3ebdc8.  call temp:= `v`(v0, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ebdce.  return @kind void;
}
procedure `int` `l`(`int` v1 , `float` v2 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(IF)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3eb9bc.  v0:= -2147483648I;
  #L3eb9c0.  if v1 != v0 then goto L3eb9c6;
  #L3eb9c4.  goto L3eb9d4;
  #L3eb9c6.  v1:= (`float`) v1 @kind i2f;
  #L3eb9c8.  v2:= v2 * v1 @kind float;
  #L3eb9cc.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3eb9d2.  v1:= temp;
  #L3eb9d4.  return v1;
}
procedure `void` `m`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ebde0.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ebde4.  if v0 == 0 then goto L3ebdee;
  #L3ebde8.  call `onRequestFailed`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3ebdee.  return @kind void;
}
procedure `void` `n`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ebe00.  v0:= v1.`com.bumptech.glide.request.SingleRequest.e` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ebe04.  if v0 == 0 then goto L3ebe0e;
  #L3ebe08.  call `onRequestSuccess`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3ebe0e.  return @kind void;
}
procedure `void` `o`(`com.bumptech.glide.request.SingleRequest` v8 @kind this, `com.bumptech.glide.load.engine.GlideException` v9 @kind object, `int` v10 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3ebe3c.  v0:= v8.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ebe40.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ebe46.  v0:= v8.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ebe4a.  @monitorenter v0
  #L3ebe4c.  v1:= v8.`com.bumptech.glide.request.SingleRequest.C` @type ^`java.lang.RuntimeException` @kind object;
  #L3ebe50.  call `setOrigin`(v9, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.setOrigin:(Ljava/lang/Exception;)V` @kind virtual;
  #L3ebe56.  v1:= v8.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3ebe5a.  call temp:= `getLogLevel`(v1) @signature `Lcom/bumptech/glide/GlideContext;.getLogLevel:()I` @kind virtual;
  #L3ebe60.  v1:= temp;
  #L3ebe62.  if v1 > v10 then goto L3ebed8;
  #L3ebe66.  v10:= "Glide" @kind object;
  #L3ebe6a.  v2:= new `java.lang.StringBuilder`;
  #L3ebe6e.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebe74.  v3:= "Load failed for " @kind object;
  #L3ebe78.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebe7e.  v3:= v8.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ebe82.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebe88.  v3:= " with size [" @kind object;
  #L3ebe8c.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebe92.  v3:= v8.`com.bumptech.glide.request.SingleRequest.z` @type ^`int`;
  #L3ebe96.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebe9c.  v3:= "x" @kind object;
  #L3ebea0.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebea6.  v3:= v8.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3ebeaa.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebeb0.  v3:= "]" @kind object;
  #L3ebeb4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebeba.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebec0.  v2:= temp @kind object;
  #L3ebec2.  call temp:= `w`(v10, v2, v9) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3ebec8.  v10:= 4I;
  #L3ebeca.  if v1 > v10 then goto L3ebed8;
  #L3ebece.  v10:= "Glide" @kind object;
  #L3ebed2.  call `logRootCauses`(v9, v10) @signature `Lcom/bumptech/glide/load/engine/GlideException;.logRootCauses:(Ljava/lang/String;)V` @kind virtual;
  #L3ebed8.  v10:= 0I;
  #L3ebeda.  v8.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v10 @kind object;
  #L3ebede.  v10:= `@@com.bumptech.glide.request.SingleRequest$a.FAILED` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebee2.  v8.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v10 @kind object;
  #L3ebee6.  v10:= 1I;
  #L3ebee8.  v8.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v10 @kind boolean;
  #L3ebeec.  v1:= 0I;
  #L3ebeee.  v2:= v8.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3ebef2.  if v2 == 0 then goto L3ebf38;
  #L3ebef6.  v2:= v8.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3ebefa.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ebf00.  v2:= temp @kind object;
  #L3ebf02.  v3:= 0I;
  #L3ebf04.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ebf0a.  v4:= temp;
  #L3ebf0c.  if v4 == 0 then goto L3ebf3a;
  #L3ebf10.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ebf16.  v4:= temp @kind object;
  #L3ebf18.  v4:= (`com.bumptech.glide.request.RequestListener`) v4 @kind object;
  #L3ebf1c.  v5:= v8.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ebf20.  v6:= v8.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebf24.  call temp:= `i`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Z` @kind direct;
  #L3ebf2a.  v7:= temp;
  #L3ebf2c.  call temp:= `onLoadFailed`(v4, v9, v5, v6, v7) @signature `Lcom/bumptech/glide/request/RequestListener;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z` @kind interface;
  #L3ebf32.  v4:= temp;
  #L3ebf34.  v3:= v3 ^| v4 @kind int;
  #L3ebf36.  goto L3ebf04;
  #L3ebf38.  v3:= 0I;
  #L3ebf3a.  v2:= v8.`com.bumptech.glide.request.SingleRequest.d` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3ebf3e.  if v2 == 0 then goto L3ebf64;
  #L3ebf42.  v2:= v8.`com.bumptech.glide.request.SingleRequest.d` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3ebf46.  v4:= v8.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ebf4a.  v5:= v8.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebf4e.  call temp:= `i`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Z` @kind direct;
  #L3ebf54.  v6:= temp;
  #L3ebf56.  call temp:= `onLoadFailed`(v2, v9, v4, v5, v6) @signature `Lcom/bumptech/glide/request/RequestListener;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Z)Z` @kind interface;
  #L3ebf5c.  v9:= temp;
  #L3ebf5e.  if v9 == 0 then goto L3ebf64;
  #L3ebf62.  goto L3ebf66;
  #L3ebf64.  v10:= 0I;
  #L3ebf66.  v9:= v3 ^| v10 @kind int;
  #L3ebf6a.  if v9 != 0 then goto L3ebf74;
  #L3ebf6e.  call `q`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:()V` @kind direct;
  #L3ebf74.  v8.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v1 @kind boolean;
  #L3ebf78.  call `m`(v8) @signature `Lcom/bumptech/glide/request/SingleRequest;.m:()V` @kind direct;
  #L3ebf7e.  @monitorexit v0
  #L3ebf80.  return @kind void;
  #L3ebf82.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf84.  v8.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v1 @kind boolean;
  #L3ebf88.  throw v9;
  #L3ebf8a.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebf8c.  @monitorexit v0
  #L3ebf8e.  throw v9;
  catch `java.lang.Throwable` @[L3ebe4c..L3ebeec] goto L3ebf8a;
  catch `java.lang.Throwable` @[L3ebeee..L3ebf74] goto L3ebf82;
  catch `java.lang.Throwable` @[L3ebf74..L3ebf8e] goto L3ebf8a;
}
procedure `com.bumptech.glide.request.SingleRequest` `obtain`(`android.content.Context` v18 @kind object, `com.bumptech.glide.GlideContext` v19 @kind object, `java.lang.Object` v20 @kind object, `java.lang.Object` v21 @kind object, `java.lang.Class` v22 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v23 @kind object, `int` v24 , `int` v25 , `com.bumptech.glide.Priority` v26 @kind object, `com.bumptech.glide.request.target.Target` v27 @kind object, `com.bumptech.glide.request.RequestListener` v28 @kind object, `java.util.List` v29 @kind object, `com.bumptech.glide.request.RequestCoordinator` v30 @kind object, `com.bumptech.glide.load.engine.Engine` v31 @kind object, `com.bumptech.glide.request.transition.TransitionFactory` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3eb95c.  v1:= v18 @kind object;
  #L3eb960.  v2:= v19 @kind object;
  #L3eb964.  v3:= v20 @kind object;
  #L3eb968.  v4:= v21 @kind object;
  #L3eb96c.  v5:= v22 @kind object;
  #L3eb970.  v6:= v23 @kind object;
  #L3eb974.  v7:= v24;
  #L3eb978.  v8:= v25;
  #L3eb97c.  v9:= v26 @kind object;
  #L3eb980.  v10:= v27 @kind object;
  #L3eb984.  v11:= v28 @kind object;
  #L3eb988.  v12:= v29 @kind object;
  #L3eb98c.  v13:= v30 @kind object;
  #L3eb990.  v14:= v31 @kind object;
  #L3eb994.  v15:= v32 @kind object;
  #L3eb998.  v16:= v33 @kind object;
  #L3eb99c.  v17:= new `com.bumptech.glide.request.SingleRequest`;
  #L3eb9a0.  v0:= v17 @kind object;
  #L3eb9a4.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3eb9aa.  return v17 @kind object;
}
procedure `void` `p`(`com.bumptech.glide.request.SingleRequest` v10 @kind this, `com.bumptech.glide.load.engine.Resource` v11 @kind object, `java.lang.Object` v12 @kind object, `com.bumptech.glide.load.DataSource` v13 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:(Lcom/bumptech/glide/load/engine/Resource;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3ec198.  call temp:= `i`(v10) @signature `Lcom/bumptech/glide/request/SingleRequest;.i:()Z` @kind direct;
  #L3ec19e.  v6:= temp;
  #L3ec1a0.  v0:= `@@com.bumptech.glide.request.SingleRequest$a.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec1a4.  v10.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v0 @kind object;
  #L3ec1a8.  v10.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` := v11 @kind object;
  #L3ec1ac.  v11:= v10.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3ec1b0.  call temp:= `getLogLevel`(v11) @signature `Lcom/bumptech/glide/GlideContext;.getLogLevel:()I` @kind virtual;
  #L3ec1b6.  v11:= temp;
  #L3ec1b8.  v0:= 3I;
  #L3ec1ba.  if v11 > v0 then goto L3ec26c;
  #L3ec1be.  v11:= new `java.lang.StringBuilder`;
  #L3ec1c2.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec1c8.  v0:= "Finished loading " @kind object;
  #L3ec1cc.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec1d2.  call temp:= `getClass`(v12) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ec1d8.  v0:= temp @kind object;
  #L3ec1da.  call temp:= `getSimpleName`(v0) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3ec1e0.  v0:= temp @kind object;
  #L3ec1e2.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec1e8.  v0:= " from " @kind object;
  #L3ec1ec.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec1f2.  call temp:= `append`(v11, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec1f8.  v0:= " for " @kind object;
  #L3ec1fc.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec202.  v0:= v10.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ec206.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec20c.  v0:= " with size [" @kind object;
  #L3ec210.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec216.  v0:= v10.`com.bumptech.glide.request.SingleRequest.z` @type ^`int`;
  #L3ec21a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec220.  v0:= "x" @kind object;
  #L3ec224.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec22a.  v0:= v10.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3ec22e.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec234.  v0:= "] in " @kind object;
  #L3ec238.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec23e.  v0:= v10.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` @kind wide;
  #L3ec242.  call temp:= `getElapsedMillis`(v0) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3ec248.  v0:= temp @kind wide;
  #L3ec24a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec250.  v0:= " ms" @kind object;
  #L3ec254.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec25a.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec260.  v11:= temp @kind object;
  #L3ec262.  v0:= "Glide" @kind object;
  #L3ec266.  call temp:= `d`(v0, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ec26c.  v11:= 1I;
  #L3ec26e.  v10.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v11 @kind boolean;
  #L3ec272.  v7:= 0I;
  #L3ec274.  v0:= v10.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3ec278.  if v0 == 0 then goto L3ec2bc;
  #L3ec27c.  v0:= v10.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3ec280.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3ec286.  v8:= temp @kind object;
  #L3ec288.  v9:= 0I;
  #L3ec28a.  call temp:= `hasNext`(v8) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ec290.  v0:= temp;
  #L3ec292.  if v0 == 0 then goto L3ec2be;
  #L3ec296.  call temp:= `next`(v8) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ec29c.  v0:= temp @kind object;
  #L3ec29e.  v0:= (`com.bumptech.glide.request.RequestListener`) v0 @kind object;
  #L3ec2a2.  v2:= v10.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ec2a6.  v3:= v10.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ec2aa.  v1:= v12 @kind object;
  #L3ec2ac.  v4:= v13 @kind object;
  #L3ec2ae.  v5:= v6;
  #L3ec2b0.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/RequestListener;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L3ec2b6.  v0:= temp;
  #L3ec2b8.  v9:= v9 ^| v0 @kind int;
  #L3ec2ba.  goto L3ec28a;
  #L3ec2bc.  v9:= 0I;
  #L3ec2be.  v0:= v10.`com.bumptech.glide.request.SingleRequest.d` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3ec2c2.  if v0 == 0 then goto L3ec2e6;
  #L3ec2c6.  v0:= v10.`com.bumptech.glide.request.SingleRequest.d` @type ^`com.bumptech.glide.request.RequestListener` @kind object;
  #L3ec2ca.  v2:= v10.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ec2ce.  v3:= v10.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ec2d2.  v1:= v12 @kind object;
  #L3ec2d4.  v4:= v13 @kind object;
  #L3ec2d6.  v5:= v6;
  #L3ec2d8.  call temp:= `onResourceReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/request/RequestListener;.onResourceReady:(Ljava/lang/Object;Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/load/DataSource;Z)Z` @kind interface;
  #L3ec2de.  v0:= temp;
  #L3ec2e0.  if v0 == 0 then goto L3ec2e6;
  #L3ec2e4.  goto L3ec2e8;
  #L3ec2e6.  v11:= 0I;
  #L3ec2e8.  v11:= v11 ^| v9 @kind int;
  #L3ec2ea.  if v11 != 0 then goto L3ec304;
  #L3ec2ee.  v11:= v10.`com.bumptech.glide.request.SingleRequest.p` @type ^`com.bumptech.glide.request.transition.TransitionFactory` @kind object;
  #L3ec2f2.  call temp:= `build`(v11, v13, v6) @signature `Lcom/bumptech/glide/request/transition/TransitionFactory;.build:(Lcom/bumptech/glide/load/DataSource;Z)Lcom/bumptech/glide/request/transition/Transition;` @kind interface;
  #L3ec2f8.  v11:= temp @kind object;
  #L3ec2fa.  v13:= v10.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ec2fe.  call `onResourceReady`(v13, v12, v11) @signature `Lcom/bumptech/glide/request/target/Target;.onResourceReady:(Ljava/lang/Object;Lcom/bumptech/glide/request/transition/Transition;)V` @kind interface;
  #L3ec304.  v10.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v7 @kind boolean;
  #L3ec308.  call `n`(v10) @signature `Lcom/bumptech/glide/request/SingleRequest;.n:()V` @kind direct;
  #L3ec30e.  return @kind void;
  #L3ec310.  v11:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec312.  v10.`com.bumptech.glide.request.SingleRequest.B` @type ^`boolean` := v7 @kind boolean;
  #L3ec316.  throw v11;
  catch `java.lang.Throwable` @[L3ec274..L3ec304] goto L3ec310;
}
procedure `void` `q`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ec5b4.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @kind direct;
  #L3ec5ba.  v0:= temp;
  #L3ec5bc.  if v0 != 0 then goto L3ec5c2;
  #L3ec5c0.  return @kind void;
  #L3ec5c2.  v0:= 0I;
  #L3ec5c4.  v1:= v2.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ec5c8.  if v1 != 0 then goto L3ec5d4;
  #L3ec5cc.  call temp:= `g`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ec5d2.  v0:= temp @kind object;
  #L3ec5d4.  if v0 != 0 then goto L3ec5e0;
  #L3ec5d8.  call temp:= `f`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.f:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ec5de.  v0:= temp @kind object;
  #L3ec5e0.  if v0 != 0 then goto L3ec5ec;
  #L3ec5e4.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ec5ea.  v0:= temp @kind object;
  #L3ec5ec.  v1:= v2.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ec5f0.  call `onLoadFailed`(v1, v0) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadFailed:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3ec5f6.  return @kind void;
}
procedure `void` `begin`(`com.bumptech.glide.request.SingleRequest` v4 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebb34.  v0:= v4.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ebb38.  @monitorenter v0
  #L3ebb3a.  call `a`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3ebb40.  v1:= v4.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ebb44.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ebb4a.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3ebb50.  v1:= temp @kind wide;
  #L3ebb52.  v4.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` := v1 @kind wide;
  #L3ebb56.  v1:= v4.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ebb5a.  if v1 != 0 then goto L3ebbac;
  #L3ebb5e.  v1:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3ebb62.  v2:= v4.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3ebb66.  call temp:= `isValidDimensions`(v1, v2) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3ebb6c.  v1:= temp;
  #L3ebb6e.  if v1 == 0 then goto L3ebb82;
  #L3ebb72.  v1:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3ebb76.  v4.`com.bumptech.glide.request.SingleRequest.z` @type ^`int` := v1;
  #L3ebb7a.  v1:= v4.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3ebb7e.  v4.`com.bumptech.glide.request.SingleRequest.A` @type ^`int` := v1;
  #L3ebb82.  call temp:= `g`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.g:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ebb88.  v1:= temp @kind object;
  #L3ebb8a.  if v1 != 0 then goto L3ebb92;
  #L3ebb8e.  v1:= 5I;
  #L3ebb90.  goto L3ebb94;
  #L3ebb92.  v1:= 3I;
  #L3ebb94.  v2:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3ebb98.  v3:= "Received null model" @kind object;
  #L3ebb9c.  call `<init>`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ebba2.  call `o`(v4, v2, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L3ebba8.  @monitorexit v0
  #L3ebbaa.  return @kind void;
  #L3ebbac.  v1:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebbb0.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebbb4.  if v1 == v2 then goto L3ebc82;
  #L3ebbb8.  v1:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebbbc.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebbc0.  if v1 != v2 then goto L3ebbd6;
  #L3ebbc4.  v1:= v4.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3ebbc8.  v2:= `@@com.bumptech.glide.load.DataSource.MEMORY_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3ebbcc.  call `onResourceReady`(v4, v1, v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @kind virtual;
  #L3ebbd2.  @monitorexit v0
  #L3ebbd4.  return @kind void;
  #L3ebbd6.  v1:= `@@com.bumptech.glide.request.SingleRequest$a.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebbda.  v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v1 @kind object;
  #L3ebbde.  v1:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3ebbe2.  v2:= v4.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3ebbe6.  call temp:= `isValidDimensions`(v1, v2) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3ebbec.  v1:= temp;
  #L3ebbee.  if v1 == 0 then goto L3ebc02;
  #L3ebbf2.  v1:= v4.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3ebbf6.  v2:= v4.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3ebbfa.  call `onSizeReady`(v4, v1, v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.onSizeReady:(II)V` @kind virtual;
  #L3ebc00.  goto L3ebc0c;
  #L3ebc02.  v1:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebc06.  call `getSize`(v1, v4) @signature `Lcom/bumptech/glide/request/target/Target;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind interface;
  #L3ebc0c.  v1:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebc10.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebc14.  if v1 == v2 then goto L3ebc24;
  #L3ebc18.  v1:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebc1c.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebc20.  if v1 != v2 then goto L3ebc42;
  #L3ebc24.  call temp:= `c`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.c:()Z` @kind direct;
  #L3ebc2a.  v1:= temp;
  #L3ebc2c.  if v1 == 0 then goto L3ebc42;
  #L3ebc30.  v1:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebc34.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ebc3a.  v2:= temp @kind object;
  #L3ebc3c.  call `onLoadStarted`(v1, v2) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3ebc42.  v1:= `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` @kind boolean;
  #L3ebc46.  if v1 == 0 then goto L3ebc7e;
  #L3ebc4a.  v1:= new `java.lang.StringBuilder`;
  #L3ebc4e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebc54.  v2:= "finished run method in " @kind object;
  #L3ebc58.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebc5e.  v2:= v4.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` @kind wide;
  #L3ebc62.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3ebc68.  v2:= temp @kind wide;
  #L3ebc6a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebc70.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ebc76.  v1:= temp @kind object;
  #L3ebc78.  call `k`(v4, v1) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(Ljava/lang/String;)V` @kind direct;
  #L3ebc7e.  @monitorexit v0
  #L3ebc80.  return @kind void;
  #L3ebc82.  v1:= new `java.lang.IllegalArgumentException`;
  #L3ebc86.  v2:= "Cannot restart a running request" @kind object;
  #L3ebc8a.  call `<init>`(v1, v2) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ebc90.  throw v1;
  #L3ebc92.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebc94.  @monitorexit v0
  #L3ebc96.  throw v1;
  catch `java.lang.Throwable` @[L3ebb3a..L3ebc96] goto L3ebc92;
}
procedure `void` `clear`(`com.bumptech.glide.request.SingleRequest` v4 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ebcf4.  v0:= v4.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ebcf8.  @monitorenter v0
  #L3ebcfa.  call `a`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.a:()V` @kind direct;
  #L3ebd00.  v1:= v4.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ebd04.  call `throwIfRecycled`(v1) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ebd0a.  v1:= v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebd0e.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.CLEARED` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebd12.  if v1 != v2 then goto L3ebd1a;
  #L3ebd16.  @monitorexit v0
  #L3ebd18.  return @kind void;
  #L3ebd1a.  call `e`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.e:()V` @kind direct;
  #L3ebd20.  v1:= v4.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3ebd24.  v2:= 0I;
  #L3ebd26.  if v1 == 0 then goto L3ebd34;
  #L3ebd2a.  v1:= v4.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3ebd2e.  v4.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` := v2 @kind object;
  #L3ebd32.  v2:= v1 @kind object;
  #L3ebd34.  call temp:= `b`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.b:()Z` @kind direct;
  #L3ebd3a.  v1:= temp;
  #L3ebd3c.  if v1 == 0 then goto L3ebd52;
  #L3ebd40.  v1:= v4.`com.bumptech.glide.request.SingleRequest.n` @type ^`com.bumptech.glide.request.target.Target` @kind object;
  #L3ebd44.  call temp:= `h`(v4) @signature `Lcom/bumptech/glide/request/SingleRequest;.h:()Landroid/graphics/drawable/Drawable;` @kind direct;
  #L3ebd4a.  v3:= temp @kind object;
  #L3ebd4c.  call `onLoadCleared`(v1, v3) @signature `Lcom/bumptech/glide/request/target/Target;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @kind interface;
  #L3ebd52.  v1:= `@@com.bumptech.glide.request.SingleRequest$a.CLEARED` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ebd56.  v4.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v1 @kind object;
  #L3ebd5a.  @monitorexit v0
  #L3ebd5c.  if v2 == 0 then goto L3ebd6a;
  #L3ebd60.  v0:= v4.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3ebd64.  call `release`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3ebd6a.  return @kind void;
  #L3ebd6c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ebd6e.  @monitorexit v0
  #L3ebd70.  throw v1;
  catch `java.lang.Throwable` @[L3ebcfa..L3ebd5c] goto L3ebd6c;
  catch `java.lang.Throwable` @[L3ebd6e..L3ebd70] goto L3ebd6c;
}
procedure `java.lang.Object` `getLock`(`com.bumptech.glide.request.SingleRequest` v1 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.getLock:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eb9e8.  v0:= v1.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3eb9ec.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3eb9f2.  v0:= v1.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb9f6.  return v0 @kind object;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb710.  v0:= v3.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb714.  @monitorenter v0
  #L3eb716.  v1:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb71a.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb71e.  if v1 != v2 then goto L3eb726;
  #L3eb722.  v1:= 1I;
  #L3eb724.  goto L3eb728;
  #L3eb726.  v1:= 0I;
  #L3eb728.  @monitorexit v0
  #L3eb72a.  return v1;
  #L3eb72c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb72e.  @monitorexit v0
  #L3eb730.  throw v1;
  catch `java.lang.Throwable` @[L3eb716..L3eb730] goto L3eb72c;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb750.  v0:= v3.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb754.  @monitorenter v0
  #L3eb756.  v1:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb75a.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.CLEARED` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb75e.  if v1 != v2 then goto L3eb766;
  #L3eb762.  v1:= 1I;
  #L3eb764.  goto L3eb768;
  #L3eb766.  v1:= 0I;
  #L3eb768.  @monitorexit v0
  #L3eb76a.  return v1;
  #L3eb76c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb76e.  @monitorexit v0
  #L3eb770.  throw v1;
  catch `java.lang.Throwable` @[L3eb756..L3eb770] goto L3eb76c;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb790.  v0:= v3.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb794.  @monitorenter v0
  #L3eb796.  v1:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb79a.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb79e.  if v1 != v2 then goto L3eb7a6;
  #L3eb7a2.  v1:= 1I;
  #L3eb7a4.  goto L3eb7a8;
  #L3eb7a6.  v1:= 0I;
  #L3eb7a8.  @monitorexit v0
  #L3eb7aa.  return v1;
  #L3eb7ac.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb7ae.  @monitorexit v0
  #L3eb7b0.  throw v1;
  catch `java.lang.Throwable` @[L3eb796..L3eb7b0] goto L3eb7ac;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.request.SingleRequest` v16 @kind this, `com.bumptech.glide.request.Request` v17 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3eb7d0.  v1:= v16 @kind object;
  #L3eb7d4.  v0:= v17 @kind object;
  #L3eb7d8.  v2:= instanceof @variable v0 @type ^`com.bumptech.glide.request.SingleRequest` @kind boolean;
  #L3eb7dc.  v3:= 0I;
  #L3eb7de.  if v2 != 0 then goto L3eb7e4;
  #L3eb7e2.  return v3;
  #L3eb7e4.  v2:= v1.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb7e8.  @monitorenter v2
  #L3eb7ea.  v4:= v1.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3eb7ee.  v5:= v1.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3eb7f2.  v6:= v1.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3eb7f6.  v7:= v1.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3eb7fa.  v8:= v1.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb7fe.  v9:= v1.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3eb802.  v10:= v1.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3eb806.  if v10 == 0 then goto L3eb818;
  #L3eb80a.  v10:= v1.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3eb80e.  call temp:= `size`(v10) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3eb814.  v10:= temp;
  #L3eb816.  goto L3eb81a;
  #L3eb818.  v10:= 0I;
  #L3eb81a.  @monitorexit v2
  #L3eb81c.  v0:= (`com.bumptech.glide.request.SingleRequest`) v0 @kind object;
  #L3eb820.  v11:= v0.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb824.  @monitorenter v11
  #L3eb826.  v2:= v0.`com.bumptech.glide.request.SingleRequest.k` @type ^`int`;
  #L3eb82a.  v12:= v0.`com.bumptech.glide.request.SingleRequest.l` @type ^`int`;
  #L3eb82e.  v13:= v0.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3eb832.  v14:= v0.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3eb836.  v15:= v0.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3eb83a.  v3:= v0.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3eb83e.  v1:= v0.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3eb842.  if v1 == 0 then goto L3eb854;
  #L3eb846.  v0:= v0.`com.bumptech.glide.request.SingleRequest.o` @type ^`java.util.List` @kind object;
  #L3eb84a.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3eb850.  v0:= temp;
  #L3eb852.  goto L3eb856;
  #L3eb854.  v0:= 0I;
  #L3eb856.  @monitorexit v11
  #L3eb858.  if v4 != v2 then goto L3eb890;
  #L3eb85c.  if v5 != v12 then goto L3eb890;
  #L3eb860.  call temp:= `bothModelsNullEquivalentOrEquals`(v6, v13) @signature `Lcom/bumptech/glide/util/Util;.bothModelsNullEquivalentOrEquals:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3eb866.  v1:= temp;
  #L3eb868.  if v1 == 0 then goto L3eb890;
  #L3eb86c.  call temp:= `equals`(v7, v14) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eb872.  v1:= temp;
  #L3eb874.  if v1 == 0 then goto L3eb890;
  #L3eb878.  call temp:= `equals`(v8, v15) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3eb87e.  v1:= temp;
  #L3eb880.  if v1 == 0 then goto L3eb890;
  #L3eb884.  if v9 != v3 then goto L3eb890;
  #L3eb888.  if v10 != v0 then goto L3eb890;
  #L3eb88c.  v3:= 1I;
  #L3eb88e.  goto L3eb892;
  #L3eb890.  v3:= 0I;
  #L3eb892.  return v3;
  #L3eb894.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb896.  @monitorexit v11
  #L3eb898.  throw v0;
  #L3eb89a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb89c.  @monitorexit v2
  #L3eb89e.  throw v0;
  catch `java.lang.Throwable` @[L3eb7ea..L3eb81c] goto L3eb89a;
  catch `java.lang.Throwable` @[L3eb826..L3eb858] goto L3eb894;
  catch `java.lang.Throwable` @[L3eb896..L3eb898] goto L3eb894;
  catch `java.lang.Throwable` @[L3eb89c..L3eb89e] goto L3eb89a;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.SingleRequest` v3 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3eb910.  v0:= v3.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3eb914.  @monitorenter v0
  #L3eb916.  v1:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb91a.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb91e.  if v1 == v2 then goto L3eb934;
  #L3eb922.  v1:= v3.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb926.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3eb92a.  if v1 != v2 then goto L3eb930;
  #L3eb92e.  goto L3eb934;
  #L3eb930.  v1:= 0I;
  #L3eb932.  goto L3eb936;
  #L3eb934.  v1:= 1I;
  #L3eb936.  @monitorexit v0
  #L3eb938.  return v1;
  #L3eb93a.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eb93c.  @monitorexit v0
  #L3eb93e.  throw v1;
  catch `java.lang.Throwable` @[L3eb916..L3eb93e] goto L3eb93a;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.request.SingleRequest` v1 @kind this, `com.bumptech.glide.load.engine.GlideException` v2 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ebe20.  v0:= 5I;
  #L3ebe22.  call `o`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.o:(Lcom/bumptech/glide/load/engine/GlideException;I)V` @kind direct;
  #L3ebe28.  return @kind void;
}
procedure `void` `onResourceReady`(`com.bumptech.glide.request.SingleRequest` v5 @kind this, `com.bumptech.glide.load.engine.Resource` v6 @kind object, `com.bumptech.glide.load.DataSource` v7 @kind object) @signature `Lcom/bumptech/glide/request/SingleRequest;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ebfc0.  v0:= v5.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ebfc4.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ebfca.  v0:= 0I;
  #L3ebfcc.  v1:= v5.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ebfd0.  @monitorenter v1
  #L3ebfd2.  v5.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3ebfd6.  if v6 != 0 then goto L3ec01e;
  #L3ebfda.  v6:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3ebfde.  v7:= new `java.lang.StringBuilder`;
  #L3ebfe2.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ebfe8.  v2:= "Expected to receive a Resource<R> with an object of " @kind object;
  #L3ebfec.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebff2.  v2:= v5.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3ebff6.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ebffc.  v2:= " inside, but instead got null." @kind object;
  #L3ec000.  call temp:= `append`(v7, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec006.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec00c.  v7:= temp @kind object;
  #L3ec00e.  call `<init>`(v6, v7) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec014.  call `onLoadFailed`(v5, v6) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L3ec01a.  @monitorexit v1
  #L3ec01c.  return @kind void;
  #L3ec01e.  call temp:= `get`(v6) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3ec024.  v2:= temp @kind object;
  #L3ec026.  if v2 == 0 then goto L3ec078;
  #L3ec02a.  v3:= v5.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3ec02e.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ec034.  v4:= temp @kind object;
  #L3ec036.  call temp:= `isAssignableFrom`(v3, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3ec03c.  v3:= temp;
  #L3ec03e.  if v3 != 0 then goto L3ec044;
  #L3ec042.  goto L3ec078;
  #L3ec044.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/request/SingleRequest;.d:()Z` @kind direct;
  #L3ec04a.  v3:= temp;
  #L3ec04c.  if v3 != 0 then goto L3ec06e;
  #L3ec050.  v5.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3ec054.  v7:= `@@com.bumptech.glide.request.SingleRequest$a.COMPLETE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec058.  v5.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v7 @kind object;
  #L3ec05c.  @monitorexit v1
  #L3ec05e.  if v6 == 0 then goto L3ec06c;
  #L3ec062.  v7:= v5.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3ec066.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3ec06c.  return @kind void;
  #L3ec06e.  call `p`(v5, v6, v2, v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.p:(Lcom/bumptech/glide/load/engine/Resource;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)V` @kind direct;
  #L3ec074.  @monitorexit v1
  #L3ec076.  return @kind void;
  #L3ec078.  v5.`com.bumptech.glide.request.SingleRequest.r` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3ec07c.  v7:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3ec080.  v0:= new `java.lang.StringBuilder`;
  #L3ec084.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec08a.  v3:= "Expected to receive an object of " @kind object;
  #L3ec08e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec094.  v3:= v5.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3ec098.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec09e.  v3:= " but instead got " @kind object;
  #L3ec0a2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0a8.  if v2 == 0 then goto L3ec0b6;
  #L3ec0ac.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ec0b2.  v3:= temp @kind object;
  #L3ec0b4.  goto L3ec0ba;
  #L3ec0b6.  v3:= "" @kind object;
  #L3ec0ba.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0c0.  v3:= "{" @kind object;
  #L3ec0c4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0ca.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0d0.  v3:= "} inside Resource{" @kind object;
  #L3ec0d4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0da.  call temp:= `append`(v0, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0e0.  v3:= "}." @kind object;
  #L3ec0e4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0ea.  if v2 == 0 then goto L3ec0f4;
  #L3ec0ee.  v2:= "" @kind object;
  #L3ec0f2.  goto L3ec0f8;
  #L3ec0f4.  v2:= " To indicate failure return a null Resource object, rather than a Resource object containing null data." @kind object;
  #L3ec0f8.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec0fe.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec104.  v0:= temp @kind object;
  #L3ec106.  call `<init>`(v7, v0) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ec10c.  call `onLoadFailed`(v5, v7) @signature `Lcom/bumptech/glide/request/SingleRequest;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind virtual;
  #L3ec112.  @monitorexit v1
  #L3ec114.  if v6 == 0 then goto L3ec122;
  #L3ec118.  v7:= v5.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3ec11c.  call `release`(v7, v6) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3ec122.  return @kind void;
  #L3ec124.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec126.  v0:= v6 @kind object;
  #L3ec128.  v6:= v7 @kind object;
  #L3ec12a.  goto L3ec12e;
  #L3ec12c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec12e.  @monitorexit v1
  #L3ec130.  throw v6;
  #L3ec132.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec134.  if v0 == 0 then goto L3ec142;
  #L3ec138.  v7:= v5.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3ec13c.  call `release`(v7, v0) @signature `Lcom/bumptech/glide/load/engine/Engine;.release:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3ec142.  throw v6;
  catch `java.lang.Throwable` @[L3ebfcc..L3ebfd2] goto L3ec132;
  catch `java.lang.Throwable` @[L3ebfd2..L3ec04c] goto L3ec12c;
  catch `java.lang.Throwable` @[L3ec050..L3ec05e] goto L3ec124;
  catch `java.lang.Throwable` @[L3ec06e..L3ec076] goto L3ec12c;
  catch `java.lang.Throwable` @[L3ec078..L3ec114] goto L3ec124;
  catch `java.lang.Throwable` @[L3ec12e..L3ec130] goto L3ec12c;
  catch `java.lang.Throwable` @[L3ec130..L3ec132] goto L3ec132;
}
procedure `void` `onSizeReady`(`com.bumptech.glide.request.SingleRequest` v22 @kind this, `int` v23 , `int` v24 ) @signature `Lcom/bumptech/glide/request/SingleRequest;.onSizeReady:(II)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;

  #L3ec334.  v15:= v22 @kind object;
  #L3ec338.  v0:= v15.`com.bumptech.glide.request.SingleRequest.b` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3ec33c.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3ec342.  v14:= v15.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ec346.  @monitorenter v14
  #L3ec348.  v0:= `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` @kind boolean;
  #L3ec34c.  if v0 == 0 then goto L3ec384;
  #L3ec350.  v0:= new `java.lang.StringBuilder`;
  #L3ec354.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec35a.  v1:= "Got onSizeReady in " @kind object;
  #L3ec35e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec364.  v1:= v15.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` @kind wide;
  #L3ec368.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3ec36e.  v1:= temp @kind wide;
  #L3ec370.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec376.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec37c.  v0:= temp @kind object;
  #L3ec37e.  call `k`(v15, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(Ljava/lang/String;)V` @kind direct;
  #L3ec384.  v0:= v15.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec388.  v1:= `@@com.bumptech.glide.request.SingleRequest$a.WAITING_FOR_SIZE` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec38c.  if v0 == v1 then goto L3ec394;
  #L3ec390.  @monitorexit v14
  #L3ec392.  return @kind void;
  #L3ec394.  v0:= `@@com.bumptech.glide.request.SingleRequest$a.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec398.  v15.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` := v0 @kind object;
  #L3ec39c.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec3a0.  call temp:= `getSizeMultiplier`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSizeMultiplier:()F` @kind virtual;
  #L3ec3a6.  v0:= temp;
  #L3ec3a8.  v1:= v23;
  #L3ec3ac.  call temp:= `l`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(IF)I` @kind static;
  #L3ec3b2.  v1:= temp;
  #L3ec3b4.  v15.`com.bumptech.glide.request.SingleRequest.z` @type ^`int` := v1;
  #L3ec3b8.  v1:= v24;
  #L3ec3bc.  call temp:= `l`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.l:(IF)I` @kind static;
  #L3ec3c2.  v0:= temp;
  #L3ec3c4.  v15.`com.bumptech.glide.request.SingleRequest.A` @type ^`int` := v0;
  #L3ec3c8.  v0:= `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` @kind boolean;
  #L3ec3cc.  if v0 == 0 then goto L3ec404;
  #L3ec3d0.  v0:= new `java.lang.StringBuilder`;
  #L3ec3d4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec3da.  v1:= "finished setup for calling load in " @kind object;
  #L3ec3de.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec3e4.  v1:= v15.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` @kind wide;
  #L3ec3e8.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3ec3ee.  v1:= temp @kind wide;
  #L3ec3f0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec3f6.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec3fc.  v0:= temp @kind object;
  #L3ec3fe.  call `k`(v15, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(Ljava/lang/String;)V` @kind direct;
  #L3ec404.  v1:= v15.`com.bumptech.glide.request.SingleRequest.u` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3ec408.  v2:= v15.`com.bumptech.glide.request.SingleRequest.g` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3ec40c.  v3:= v15.`com.bumptech.glide.request.SingleRequest.h` @type ^`java.lang.Object` @kind object;
  #L3ec410.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec414.  call temp:= `getSignature`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSignature:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L3ec41a.  v4:= temp @kind object;
  #L3ec41c.  v5:= v15.`com.bumptech.glide.request.SingleRequest.z` @type ^`int`;
  #L3ec420.  v6:= v15.`com.bumptech.glide.request.SingleRequest.A` @type ^`int`;
  #L3ec424.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec428.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getResourceClass:()Ljava/lang/Class;` @kind virtual;
  #L3ec42e.  v7:= temp @kind object;
  #L3ec430.  v8:= v15.`com.bumptech.glide.request.SingleRequest.i` @type ^`java.lang.Class` @kind object;
  #L3ec434.  v9:= v15.`com.bumptech.glide.request.SingleRequest.m` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3ec438.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec43c.  call temp:= `getDiskCacheStrategy`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getDiskCacheStrategy:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @kind virtual;
  #L3ec442.  v10:= temp @kind object;
  #L3ec444.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec448.  call temp:= `getTransformations`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTransformations:()Ljava/util/Map;` @kind virtual;
  #L3ec44e.  v11:= temp @kind object;
  #L3ec450.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec454.  call temp:= `isTransformationRequired`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationRequired:()Z` @kind virtual;
  #L3ec45a.  v12:= temp;
  #L3ec45c.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec460.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.a:()Z` @kind virtual;
  #L3ec466.  v13:= temp;
  #L3ec468.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec46c.  call temp:= `getOptions`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOptions:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3ec472.  v0:= temp @kind object;
  #L3ec474.  v23:= v0 @kind object;
  #L3ec478.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec47c.  call temp:= `isMemoryCacheable`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @kind virtual;
  #L3ec482.  v0:= temp;
  #L3ec484.  v24:= v0;
  #L3ec488.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec48c.  call temp:= `getUseUnlimitedSourceGeneratorsPool`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseUnlimitedSourceGeneratorsPool:()Z` @kind virtual;
  #L3ec492.  v16:= temp;
  #L3ec494.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec498.  call temp:= `getUseAnimationPool`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseAnimationPool:()Z` @kind virtual;
  #L3ec49e.  v17:= temp;
  #L3ec4a0.  v0:= v15.`com.bumptech.glide.request.SingleRequest.j` @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind object;
  #L3ec4a4.  call temp:= `getOnlyRetrieveFromCache`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOnlyRetrieveFromCache:()Z` @kind virtual;
  #L3ec4aa.  v18:= temp;
  #L3ec4ac.  v0:= v15.`com.bumptech.glide.request.SingleRequest.q` @type ^`java.util.concurrent.Executor` @kind object;
  #L3ec4b0.  v21:= v14 @kind object;
  #L3ec4b4.  v14:= v23 @kind object;
  #L3ec4b8.  v15:= v24;
  #L3ec4bc.  v19:= v22 @kind object;
  #L3ec4c0.  v20:= v0 @kind object;
  #L3ec4c4.  call temp:= `load`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20) @signature `Lcom/bumptech/glide/load/engine/Engine;.load:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/util/Map;ZZLcom/bumptech/glide/load/Options;ZZZZLcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/load/engine/Engine$LoadStatus;` @kind virtual;
  #L3ec4ca.  v0:= temp @kind object;
  #L3ec4cc.  v1:= v22 @kind object;
  #L3ec4d0.  v1.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3ec4d4.  v0:= v1.`com.bumptech.glide.request.SingleRequest.v` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec4d8.  v2:= `@@com.bumptech.glide.request.SingleRequest$a.RUNNING` @type ^`com.bumptech.glide.request.SingleRequest$a` @kind object;
  #L3ec4dc.  if v0 == v2 then goto L3ec4e6;
  #L3ec4e0.  v0:= 0I;
  #L3ec4e2.  v1.`com.bumptech.glide.request.SingleRequest.s` @type ^`com.bumptech.glide.load.engine.Engine$LoadStatus` := v0 @kind object;
  #L3ec4e6.  v0:= `@@com.bumptech.glide.request.SingleRequest.D` @type ^`boolean` @kind boolean;
  #L3ec4ea.  if v0 == 0 then goto L3ec522;
  #L3ec4ee.  v0:= new `java.lang.StringBuilder`;
  #L3ec4f2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ec4f8.  v2:= "finished onSizeReady in " @kind object;
  #L3ec4fc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec502.  v2:= v1.`com.bumptech.glide.request.SingleRequest.t` @type ^`long` @kind wide;
  #L3ec506.  call temp:= `getElapsedMillis`(v2) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3ec50c.  v2:= temp @kind wide;
  #L3ec50e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ec514.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ec51a.  v0:= temp @kind object;
  #L3ec51c.  call `k`(v1, v0) @signature `Lcom/bumptech/glide/request/SingleRequest;.k:(Ljava/lang/String;)V` @kind direct;
  #L3ec522.  @monitorexit v21
  #L3ec524.  return @kind void;
  #L3ec526.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec528.  v1:= v22 @kind object;
  #L3ec52c.  goto L3ec536;
  #L3ec52e.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec530.  v21:= v14 @kind object;
  #L3ec534.  v1:= v15 @kind object;
  #L3ec536.  @monitorexit v21
  #L3ec538.  throw v0;
  #L3ec53a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec53c.  goto L3ec536;
  catch `java.lang.Throwable` @[L3ec348..L3ec4b0] goto L3ec52e;
  catch `java.lang.Throwable` @[L3ec4c4..L3ec4cc] goto L3ec526;
  catch `java.lang.Throwable` @[L3ec4d0..L3ec538] goto L3ec53a;
}
procedure `void` `pause`(`com.bumptech.glide.request.SingleRequest` v2 @kind this) @signature `Lcom/bumptech/glide/request/SingleRequest;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec574.  v0:= v2.`com.bumptech.glide.request.SingleRequest.c` @type ^`java.lang.Object` @kind object;
  #L3ec578.  @monitorenter v0
  #L3ec57a.  call temp:= `isRunning`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.isRunning:()Z` @kind virtual;
  #L3ec580.  v1:= temp;
  #L3ec582.  if v1 == 0 then goto L3ec58c;
  #L3ec586.  call `clear`(v2) @signature `Lcom/bumptech/glide/request/SingleRequest;.clear:()V` @kind virtual;
  #L3ec58c.  @monitorexit v0
  #L3ec58e.  return @kind void;
  #L3ec590.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec592.  @monitorexit v0
  #L3ec594.  throw v1;
  catch `java.lang.Throwable` @[L3ec57a..L3ec594] goto L3ec590;
}
