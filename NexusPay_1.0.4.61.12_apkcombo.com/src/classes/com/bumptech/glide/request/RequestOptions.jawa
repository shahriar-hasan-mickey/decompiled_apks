record `com.bumptech.glide.request.RequestOptions` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.BaseRequestOptions` @kind class {
}
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.A` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.B` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.C` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.D` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.E` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.F` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.H` @AccessFlag PRIVATE_STATIC;
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.request.RequestOptions.I` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.bumptech.glide.request.RequestOptions` v0 @kind this) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eb3ec.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.<init>:()V` @kind direct;
  #L3eb3f2.  return @kind void;
}
procedure `com.bumptech.glide.request.RequestOptions` `bitmapTransform`(`com.bumptech.glide.load.Transformation` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.bitmapTransform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eaee8.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eaeec.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eaef2.  call temp:= `transform`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eaef8.  v1:= temp @kind object;
  #L3eaefa.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eaefe.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `centerCropTransform`() @signature `Lcom/bumptech/glide/request/RequestOptions;.centerCropTransform:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eaf10.  v0:= `@@com.bumptech.glide.request.RequestOptions.E` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eaf14.  if v0 != 0 then goto L3eaf3e;
  #L3eaf18.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eaf1c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eaf22.  call temp:= `centerCrop`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eaf28.  v0:= temp @kind object;
  #L3eaf2a.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eaf2e.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eaf34.  v0:= temp @kind object;
  #L3eaf36.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eaf3a.  `@@com.bumptech.glide.request.RequestOptions.E` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eaf3e.  v0:= `@@com.bumptech.glide.request.RequestOptions.E` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eaf42.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `centerInsideTransform`() @signature `Lcom/bumptech/glide/request/RequestOptions;.centerInsideTransform:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eaf54.  v0:= `@@com.bumptech.glide.request.RequestOptions.D` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eaf58.  if v0 != 0 then goto L3eaf82;
  #L3eaf5c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eaf60.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eaf66.  call temp:= `centerInside`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eaf6c.  v0:= temp @kind object;
  #L3eaf6e.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eaf72.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eaf78.  v0:= temp @kind object;
  #L3eaf7a.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eaf7e.  `@@com.bumptech.glide.request.RequestOptions.D` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eaf82.  v0:= `@@com.bumptech.glide.request.RequestOptions.D` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eaf86.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `circleCropTransform`() @signature `Lcom/bumptech/glide/request/RequestOptions;.circleCropTransform:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eaf98.  v0:= `@@com.bumptech.glide.request.RequestOptions.F` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eaf9c.  if v0 != 0 then goto L3eafc6;
  #L3eafa0.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eafa4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eafaa.  call temp:= `circleCrop`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.circleCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eafb0.  v0:= temp @kind object;
  #L3eafb2.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eafb6.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eafbc.  v0:= temp @kind object;
  #L3eafbe.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eafc2.  `@@com.bumptech.glide.request.RequestOptions.F` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eafc6.  v0:= `@@com.bumptech.glide.request.RequestOptions.F` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eafca.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `decodeTypeOf`(`java.lang.Class` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.decodeTypeOf:(Ljava/lang/Class;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eafdc.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eafe0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eafe6.  call temp:= `decode`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.decode:(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eafec.  v1:= temp @kind object;
  #L3eafee.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eaff2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `diskCacheStrategyOf`(`com.bumptech.glide.load.engine.DiskCacheStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb004.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb008.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb00e.  call temp:= `diskCacheStrategy`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb014.  v1:= temp @kind object;
  #L3eb016.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb01a.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `downsampleOf`(`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.downsampleOf:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb02c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb030.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb036.  call temp:= `downsample`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb03c.  v1:= temp @kind object;
  #L3eb03e.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb042.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `encodeFormatOf`(`android.graphics.Bitmap$CompressFormat` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.encodeFormatOf:(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb054.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb058.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb05e.  call temp:= `encodeFormat`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeFormat:(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb064.  v1:= temp @kind object;
  #L3eb066.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb06a.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `encodeQualityOf`(`int` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.encodeQualityOf:(I)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb07c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb080.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb086.  call temp:= `encodeQuality`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeQuality:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb08c.  v1:= temp @kind object;
  #L3eb08e.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb092.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `errorOf`(`int` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.errorOf:(I)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb0cc.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb0d0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb0d6.  call temp:= `error`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb0dc.  v1:= temp @kind object;
  #L3eb0de.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb0e2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `errorOf`(`android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.errorOf:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb0a4.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb0a8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb0ae.  call temp:= `error`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb0b4.  v1:= temp @kind object;
  #L3eb0b6.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb0ba.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `fitCenterTransform`() @signature `Lcom/bumptech/glide/request/RequestOptions;.fitCenterTransform:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb0f4.  v0:= `@@com.bumptech.glide.request.RequestOptions.C` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb0f8.  if v0 != 0 then goto L3eb122;
  #L3eb0fc.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb100.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb106.  call temp:= `fitCenter`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb10c.  v0:= temp @kind object;
  #L3eb10e.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb112.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb118.  v0:= temp @kind object;
  #L3eb11a.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb11e.  `@@com.bumptech.glide.request.RequestOptions.C` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eb122.  v0:= `@@com.bumptech.glide.request.RequestOptions.C` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb126.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `formatOf`(`com.bumptech.glide.load.DecodeFormat` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.formatOf:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb138.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb13c.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb142.  call temp:= `format`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.format:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb148.  v1:= temp @kind object;
  #L3eb14a.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb14e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `frameOf`(`long` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.frameOf:(J)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb160.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb164.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb16a.  call temp:= `frame`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.frame:(J)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb170.  v1:= temp @kind object;
  #L3eb172.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb176.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `noAnimation`() @signature `Lcom/bumptech/glide/request/RequestOptions;.noAnimation:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb188.  v0:= `@@com.bumptech.glide.request.RequestOptions.I` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb18c.  if v0 != 0 then goto L3eb1b6;
  #L3eb190.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb194.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb19a.  call temp:= `dontAnimate`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontAnimate:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb1a0.  v0:= temp @kind object;
  #L3eb1a2.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb1a6.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb1ac.  v0:= temp @kind object;
  #L3eb1ae.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb1b2.  `@@com.bumptech.glide.request.RequestOptions.I` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eb1b6.  v0:= `@@com.bumptech.glide.request.RequestOptions.I` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb1ba.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `noTransformation`() @signature `Lcom/bumptech/glide/request/RequestOptions;.noTransformation:()Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb1cc.  v0:= `@@com.bumptech.glide.request.RequestOptions.H` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb1d0.  if v0 != 0 then goto L3eb1fa;
  #L3eb1d4.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb1d8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb1de.  call temp:= `dontTransform`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontTransform:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb1e4.  v0:= temp @kind object;
  #L3eb1e6.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb1ea.  call temp:= `autoClone`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb1f0.  v0:= temp @kind object;
  #L3eb1f2.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3eb1f6.  `@@com.bumptech.glide.request.RequestOptions.H` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3eb1fa.  v0:= `@@com.bumptech.glide.request.RequestOptions.H` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb1fe.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `option`(`com.bumptech.glide.load.Option` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.option:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb210.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb214.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb21a.  call temp:= `set`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb220.  v1:= temp @kind object;
  #L3eb222.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb226.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `overrideOf`(`int` v0 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.overrideOf:(I)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3eb238.  call temp:= `overrideOf`(v0, v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.overrideOf:(II)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3eb23e.  v0:= temp @kind object;
  #L3eb240.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `overrideOf`(`int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.overrideOf:(II)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb254.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb258.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb25e.  call temp:= `override`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb264.  v1:= temp @kind object;
  #L3eb266.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb26a.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `placeholderOf`(`int` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.placeholderOf:(I)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb2a4.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb2a8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb2ae.  call temp:= `placeholder`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb2b4.  v1:= temp @kind object;
  #L3eb2b6.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb2ba.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `placeholderOf`(`android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.placeholderOf:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb27c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb280.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb286.  call temp:= `placeholder`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb28c.  v1:= temp @kind object;
  #L3eb28e.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb292.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `priorityOf`(`com.bumptech.glide.Priority` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.priorityOf:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb2cc.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb2d0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb2d6.  call temp:= `priority`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb2dc.  v1:= temp @kind object;
  #L3eb2de.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb2e2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `signatureOf`(`com.bumptech.glide.load.Key` v1 @kind object) @signature `Lcom/bumptech/glide/request/RequestOptions;.signatureOf:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb2f4.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb2f8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb2fe.  call temp:= `signature`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb304.  v1:= temp @kind object;
  #L3eb306.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb30a.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `sizeMultiplierOf`(`float` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.sizeMultiplierOf:(F)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb31c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb320.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb326.  call temp:= `sizeMultiplier`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb32c.  v1:= temp @kind object;
  #L3eb32e.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb332.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `skipMemoryCacheOf`(`boolean` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.skipMemoryCacheOf:(Z)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb344.  if v1 == 0 then goto L3eb37e;
  #L3eb348.  v1:= `@@com.bumptech.glide.request.RequestOptions.A` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb34c.  if v1 != 0 then goto L3eb378;
  #L3eb350.  v1:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb354.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb35a.  v0:= 1I;
  #L3eb35c.  call temp:= `skipMemoryCache`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb362.  v1:= temp @kind object;
  #L3eb364.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb368.  call temp:= `autoClone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb36e.  v1:= temp @kind object;
  #L3eb370.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb374.  `@@com.bumptech.glide.request.RequestOptions.A` @type ^`com.bumptech.glide.request.RequestOptions` := v1 @kind object;
  #L3eb378.  v1:= `@@com.bumptech.glide.request.RequestOptions.A` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb37c.  return v1 @kind object;
  #L3eb37e.  v1:= `@@com.bumptech.glide.request.RequestOptions.B` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb382.  if v1 != 0 then goto L3eb3ae;
  #L3eb386.  v1:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb38a.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb390.  v0:= 0I;
  #L3eb392.  call temp:= `skipMemoryCache`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb398.  v1:= temp @kind object;
  #L3eb39a.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb39e.  call temp:= `autoClone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb3a4.  v1:= temp @kind object;
  #L3eb3a6.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb3aa.  `@@com.bumptech.glide.request.RequestOptions.B` @type ^`com.bumptech.glide.request.RequestOptions` := v1 @kind object;
  #L3eb3ae.  v1:= `@@com.bumptech.glide.request.RequestOptions.B` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3eb3b2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.RequestOptions` `timeoutOf`(`int` v1 ) @signature `Lcom/bumptech/glide/request/RequestOptions;.timeoutOf:(I)Lcom/bumptech/glide/request/RequestOptions;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eb3c4.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3eb3c8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3eb3ce.  call temp:= `timeout`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.timeout:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3eb3d4.  v1:= temp @kind object;
  #L3eb3d6.  v1:= (`com.bumptech.glide.request.RequestOptions`) v1 @kind object;
  #L3eb3da.  return v1 @kind object;
}
