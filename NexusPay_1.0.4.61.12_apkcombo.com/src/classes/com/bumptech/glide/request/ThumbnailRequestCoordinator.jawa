record `com.bumptech.glide.request.ThumbnailRequestCoordinator` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.RequestCoordinator` @kind interface, `com.bumptech.glide.request.Request` @kind interface {
  `com.bumptech.glide.request.RequestCoordinator` `com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Object` `com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.Request` `com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.request.RequestCoordinator$RequestState` `com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.request.RequestCoordinator` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3ec974.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ec97a.  v0:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec97e.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3ec982.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v0 @kind object;
  #L3ec986.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` := v2 @kind object;
  #L3ec98a.  v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` := v3 @kind object;
  #L3ec98e.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.a:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec8a0.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ec8a4.  if v0 == 0 then goto L3ec8ba;
  #L3ec8a8.  call temp:= `canNotifyCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3ec8ae.  v0:= temp;
  #L3ec8b0.  if v0 == 0 then goto L3ec8b6;
  #L3ec8b4.  goto L3ec8ba;
  #L3ec8b6.  v0:= 0I;
  #L3ec8b8.  goto L3ec8bc;
  #L3ec8ba.  v0:= 1I;
  #L3ec8bc.  return v0;
}
procedure `boolean` `b`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec8d0.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ec8d4.  if v0 == 0 then goto L3ec8ea;
  #L3ec8d8.  call temp:= `canNotifyStatusChanged`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3ec8de.  v0:= temp;
  #L3ec8e0.  if v0 == 0 then goto L3ec8e6;
  #L3ec8e4.  goto L3ec8ea;
  #L3ec8e6.  v0:= 0I;
  #L3ec8e8.  goto L3ec8ec;
  #L3ec8ea.  v0:= 1I;
  #L3ec8ec.  return v0;
}
procedure `boolean` `c`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v1 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ec900.  v0:= v1.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ec904.  if v0 == 0 then goto L3ec91a;
  #L3ec908.  call temp:= `canSetImage`(v0, v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3ec90e.  v0:= temp;
  #L3ec910.  if v0 == 0 then goto L3ec916;
  #L3ec914.  goto L3ec91a;
  #L3ec916.  v0:= 0I;
  #L3ec918.  goto L3ec91c;
  #L3ec91a.  v0:= 1I;
  #L3ec91c.  return v0;
}
procedure `void` `begin`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v4 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.begin:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3ec9a0.  v0:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec9a4.  @monitorenter v0
  #L3ec9a6.  v1:= 1I;
  #L3ec9a8.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3ec9ac.  v1:= 0I;
  #L3ec9ae.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9b2.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9b6.  if v2 == v3 then goto L3ec9d8;
  #L3ec9ba.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9be.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9c2.  if v2 == v3 then goto L3ec9d8;
  #L3ec9c6.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9ca.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v2 @kind object;
  #L3ec9ce.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec9d2.  call `begin`(v2) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3ec9d8.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` @kind boolean;
  #L3ec9dc.  if v2 == 0 then goto L3ec9fe;
  #L3ec9e0.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9e4.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9e8.  if v2 == v3 then goto L3ec9fe;
  #L3ec9ec.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec9f0.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v2 @kind object;
  #L3ec9f4.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec9f8.  call `begin`(v2) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3ec9fe.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3eca02.  @monitorexit v0
  #L3eca04.  return @kind void;
  #L3eca06.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eca08.  v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3eca0c.  throw v2;
  #L3eca0e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eca10.  @monitorexit v0
  #L3eca12.  throw v1;
  catch `java.lang.Throwable` @[L3ec9a8..L3ec9ac] goto L3eca0e;
  catch `java.lang.Throwable` @[L3ec9ae..L3ec9fe] goto L3eca06;
  catch `java.lang.Throwable` @[L3ec9fe..L3eca12] goto L3eca0e;
}
procedure `boolean` `canNotifyCleared`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canNotifyCleared:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec608.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec60c.  @monitorenter v0
  #L3ec60e.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.a:()Z` @kind direct;
  #L3ec614.  v1:= temp;
  #L3ec616.  if v1 == 0 then goto L3ec63a;
  #L3ec61a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec61e.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ec624.  v3:= temp;
  #L3ec626.  if v3 == 0 then goto L3ec63a;
  #L3ec62a.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec62e.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec632.  if v3 == v1 then goto L3ec63a;
  #L3ec636.  v3:= 1I;
  #L3ec638.  goto L3ec63c;
  #L3ec63a.  v3:= 0I;
  #L3ec63c.  @monitorexit v0
  #L3ec63e.  return v3;
  #L3ec640.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec642.  @monitorexit v0
  #L3ec644.  throw v3;
  catch `java.lang.Throwable` @[L3ec60e..L3ec644] goto L3ec640;
}
procedure `boolean` `canNotifyStatusChanged`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canNotifyStatusChanged:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec664.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec668.  @monitorenter v0
  #L3ec66a.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.b:()Z` @kind direct;
  #L3ec670.  v1:= temp;
  #L3ec672.  if v1 == 0 then goto L3ec696;
  #L3ec676.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec67a.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ec680.  v3:= temp;
  #L3ec682.  if v3 == 0 then goto L3ec696;
  #L3ec686.  call temp:= `isAnyResourceSet`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isAnyResourceSet:()Z` @kind virtual;
  #L3ec68c.  v3:= temp;
  #L3ec68e.  if v3 != 0 then goto L3ec696;
  #L3ec692.  v3:= 1I;
  #L3ec694.  goto L3ec698;
  #L3ec696.  v3:= 0I;
  #L3ec698.  @monitorexit v0
  #L3ec69a.  return v3;
  #L3ec69c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec69e.  @monitorexit v0
  #L3ec6a0.  throw v3;
  catch `java.lang.Throwable` @[L3ec66a..L3ec6a0] goto L3ec69c;
}
procedure `boolean` `canSetImage`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.canSetImage:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec6c0.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec6c4.  @monitorenter v0
  #L3ec6c6.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.c:()Z` @kind direct;
  #L3ec6cc.  v1:= temp;
  #L3ec6ce.  if v1 == 0 then goto L3ec6f2;
  #L3ec6d2.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec6d6.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ec6dc.  v3:= temp;
  #L3ec6de.  if v3 != 0 then goto L3ec6ee;
  #L3ec6e2.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec6e6.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec6ea.  if v3 == v1 then goto L3ec6f2;
  #L3ec6ee.  v3:= 1I;
  #L3ec6f0.  goto L3ec6f4;
  #L3ec6f2.  v3:= 0I;
  #L3ec6f4.  @monitorexit v0
  #L3ec6f6.  return v3;
  #L3ec6f8.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec6fa.  @monitorexit v0
  #L3ec6fc.  throw v3;
  catch `java.lang.Throwable` @[L3ec6c6..L3ec6fc] goto L3ec6f8;
}
procedure `void` `clear`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eca44.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3eca48.  @monitorenter v0
  #L3eca4a.  v1:= 0I;
  #L3eca4c.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.g` @type ^`boolean` := v1 @kind boolean;
  #L3eca50.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3eca54.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3eca58.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3eca5c.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3eca60.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3eca64.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3eca6a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3eca6e.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3eca74.  @monitorexit v0
  #L3eca76.  return @kind void;
  #L3eca78.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eca7a.  @monitorexit v0
  #L3eca7c.  throw v1;
  catch `java.lang.Throwable` @[L3eca4c..L3eca7c] goto L3eca78;
}
procedure `com.bumptech.glide.request.RequestCoordinator` `getRoot`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec930.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec934.  @monitorenter v0
  #L3ec936.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ec93a.  if v1 == 0 then goto L3ec94c;
  #L3ec93e.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ec942.  call temp:= `getRoot`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.getRoot:()Lcom/bumptech/glide/request/RequestCoordinator;` @kind interface;
  #L3ec948.  v1:= temp @kind object;
  #L3ec94a.  goto L3ec94e;
  #L3ec94c.  v1:= v2 @kind object;
  #L3ec94e.  @monitorexit v0
  #L3ec950.  return v1 @kind object;
  #L3ec952.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec954.  @monitorexit v0
  #L3ec956.  throw v1;
  catch `java.lang.Throwable` @[L3ec936..L3ec956] goto L3ec952;
}
procedure `boolean` `isAnyResourceSet`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isAnyResourceSet:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ec71c.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec720.  @monitorenter v0
  #L3ec722.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec726.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3ec72c.  v1:= temp;
  #L3ec72e.  if v1 != 0 then goto L3ec748;
  #L3ec732.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec736.  call temp:= `isAnyResourceSet`(v1) @signature `Lcom/bumptech/glide/request/Request;.isAnyResourceSet:()Z` @kind interface;
  #L3ec73c.  v1:= temp;
  #L3ec73e.  if v1 == 0 then goto L3ec744;
  #L3ec742.  goto L3ec748;
  #L3ec744.  v1:= 0I;
  #L3ec746.  goto L3ec74a;
  #L3ec748.  v1:= 1I;
  #L3ec74a.  @monitorexit v0
  #L3ec74c.  return v1;
  #L3ec74e.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec750.  @monitorexit v0
  #L3ec752.  throw v1;
  catch `java.lang.Throwable` @[L3ec722..L3ec752] goto L3ec74e;
}
procedure `boolean` `isCleared`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isCleared:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec770.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec774.  @monitorenter v0
  #L3ec776.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec77a.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.CLEARED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec77e.  if v1 != v2 then goto L3ec786;
  #L3ec782.  v1:= 1I;
  #L3ec784.  goto L3ec788;
  #L3ec786.  v1:= 0I;
  #L3ec788.  @monitorexit v0
  #L3ec78a.  return v1;
  #L3ec78c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec78e.  @monitorexit v0
  #L3ec790.  throw v1;
  catch `java.lang.Throwable` @[L3ec776..L3ec790] goto L3ec78c;
}
procedure `boolean` `isComplete`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isComplete:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec7b0.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec7b4.  @monitorenter v0
  #L3ec7b6.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec7ba.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec7be.  if v1 != v2 then goto L3ec7c6;
  #L3ec7c2.  v1:= 1I;
  #L3ec7c4.  goto L3ec7c8;
  #L3ec7c6.  v1:= 0I;
  #L3ec7c8.  @monitorexit v0
  #L3ec7ca.  return v1;
  #L3ec7cc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec7ce.  @monitorexit v0
  #L3ec7d0.  throw v1;
  catch `java.lang.Throwable` @[L3ec7b6..L3ec7d0] goto L3ec7cc;
}
procedure `boolean` `isEquivalentTo`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this, `com.bumptech.glide.request.Request` v4 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec7f0.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.ThumbnailRequestCoordinator` @kind boolean;
  #L3ec7f4.  v1:= 0I;
  #L3ec7f6.  if v0 == 0 then goto L3ec84c;
  #L3ec7fa.  v4:= (`com.bumptech.glide.request.ThumbnailRequestCoordinator`) v4 @kind object;
  #L3ec7fe.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec802.  if v0 != 0 then goto L3ec810;
  #L3ec806.  v0:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec80a.  if v0 != 0 then goto L3ec84c;
  #L3ec80e.  goto L3ec824;
  #L3ec810.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec814.  v2:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec818.  call temp:= `isEquivalentTo`(v0, v2) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3ec81e.  v0:= temp;
  #L3ec820.  if v0 == 0 then goto L3ec84c;
  #L3ec824.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec828.  if v0 != 0 then goto L3ec836;
  #L3ec82c.  v4:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec830.  if v4 != 0 then goto L3ec84c;
  #L3ec834.  goto L3ec84a;
  #L3ec836.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec83a.  v4:= v4.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ec83e.  call temp:= `isEquivalentTo`(v0, v4) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3ec844.  v4:= temp;
  #L3ec846.  if v4 == 0 then goto L3ec84c;
  #L3ec84a.  v1:= 1I;
  #L3ec84c.  return v1;
}
procedure `boolean` `isRunning`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v3 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.isRunning:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ec860.  v0:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ec864.  @monitorenter v0
  #L3ec866.  v1:= v3.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec86a.  v2:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.RUNNING` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ec86e.  if v1 != v2 then goto L3ec876;
  #L3ec872.  v1:= 1I;
  #L3ec874.  goto L3ec878;
  #L3ec876.  v1:= 0I;
  #L3ec878.  @monitorexit v0
  #L3ec87a.  return v1;
  #L3ec87c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ec87e.  @monitorexit v0
  #L3ec880.  throw v1;
  catch `java.lang.Throwable` @[L3ec866..L3ec880] goto L3ec87c;
}
procedure `void` `onRequestFailed`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eca9c.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ecaa0.  @monitorenter v0
  #L3ecaa2.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ecaa6.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ecaac.  v3:= temp;
  #L3ecaae.  if v3 != 0 then goto L3ecabe;
  #L3ecab2.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecab6.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3ecaba.  @monitorexit v0
  #L3ecabc.  return @kind void;
  #L3ecabe.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.FAILED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecac2.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3ecac6.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ecaca.  if v3 == 0 then goto L3ecad8;
  #L3ecace.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ecad2.  call `onRequestFailed`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestFailed:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3ecad8.  @monitorexit v0
  #L3ecada.  return @kind void;
  #L3ecadc.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ecade.  @monitorexit v0
  #L3ecae0.  throw v3;
  catch `java.lang.Throwable` @[L3ecaa2..L3ecae0] goto L3ecadc;
}
procedure `void` `onRequestSuccess`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ecb00.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ecb04.  @monitorenter v0
  #L3ecb06.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ecb0a.  call temp:= `equals`(v3, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ecb10.  v3:= temp;
  #L3ecb12.  if v3 == 0 then goto L3ecb22;
  #L3ecb16.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecb1a.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3ecb1e.  @monitorexit v0
  #L3ecb20.  return @kind void;
  #L3ecb22.  v3:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.SUCCESS` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecb26.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v3 @kind object;
  #L3ecb2a.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ecb2e.  if v3 == 0 then goto L3ecb3c;
  #L3ecb32.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.a` @type ^`com.bumptech.glide.request.RequestCoordinator` @kind object;
  #L3ecb36.  call `onRequestSuccess`(v3, v2) @signature `Lcom/bumptech/glide/request/RequestCoordinator;.onRequestSuccess:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3ecb3c.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecb40.  call temp:= `isComplete`(v3) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.isComplete:()Z` @kind virtual;
  #L3ecb46.  v3:= temp;
  #L3ecb48.  if v3 != 0 then goto L3ecb56;
  #L3ecb4c.  v3:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ecb50.  call `clear`(v3) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3ecb56.  @monitorexit v0
  #L3ecb58.  return @kind void;
  #L3ecb5a.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ecb5c.  @monitorexit v0
  #L3ecb5e.  throw v3;
  catch `java.lang.Throwable` @[L3ecb06..L3ecb5e] goto L3ecb5a;
}
procedure `void` `pause`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v2 @kind this) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.pause:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ecb7c.  v0:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.b` @type ^`java.lang.Object` @kind object;
  #L3ecb80.  @monitorenter v0
  #L3ecb82.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecb86.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.isComplete:()Z` @kind virtual;
  #L3ecb8c.  v1:= temp;
  #L3ecb8e.  if v1 != 0 then goto L3ecba4;
  #L3ecb92.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecb96.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.f` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3ecb9a.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ecb9e.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3ecba4.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecba8.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/RequestCoordinator$RequestState;.isComplete:()Z` @kind virtual;
  #L3ecbae.  v1:= temp;
  #L3ecbb0.  if v1 != 0 then goto L3ecbc6;
  #L3ecbb4.  v1:= `@@com.bumptech.glide.request.RequestCoordinator$RequestState.PAUSED` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` @kind object;
  #L3ecbb8.  v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.e` @type ^`com.bumptech.glide.request.RequestCoordinator$RequestState` := v1 @kind object;
  #L3ecbbc.  v1:= v2.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` @kind object;
  #L3ecbc0.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3ecbc6.  @monitorexit v0
  #L3ecbc8.  return @kind void;
  #L3ecbca.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ecbcc.  @monitorexit v0
  #L3ecbce.  throw v1;
  catch `java.lang.Throwable` @[L3ecb82..L3ecbce] goto L3ecbca;
}
procedure `void` `setRequests`(`com.bumptech.glide.request.ThumbnailRequestCoordinator` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object, `com.bumptech.glide.request.Request` v2 @kind object) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3ecbec.  v0.`com.bumptech.glide.request.ThumbnailRequestCoordinator.c` @type ^`com.bumptech.glide.request.Request` := v1 @kind object;
  #L3ecbf0.  v0.`com.bumptech.glide.request.ThumbnailRequestCoordinator.d` @type ^`com.bumptech.glide.request.Request` := v2 @kind object;
  #L3ecbf4.  return @kind void;
}
