record `com.bumptech.glide.request.BaseRequestOptions` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Cloneable` @kind interface {
  `int` `com.bumptech.glide.request.BaseRequestOptions.a` @AccessFlag PRIVATE;
  `float` `com.bumptech.glide.request.BaseRequestOptions.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.request.BaseRequestOptions.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.request.BaseRequestOptions.d` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.f` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.h` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.k` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.request.BaseRequestOptions.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.m` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.n` @AccessFlag PRIVATE;
  `android.graphics.drawable.Drawable` `com.bumptech.glide.request.BaseRequestOptions.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.request.BaseRequestOptions.p` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.request.BaseRequestOptions.q` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.request.BaseRequestOptions.r` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.request.BaseRequestOptions.s` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.t` @AccessFlag PRIVATE;
  `android.content.res.Resources$Theme` `com.bumptech.glide.request.BaseRequestOptions.u` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.v` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.w` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.x` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.y` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.BaseRequestOptions.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3ea2a0.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ea2a6.  v0:= 1.0F;
  #L3ea2aa.  v2.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v0;
  #L3ea2ae.  v0:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.AUTOMATIC` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3ea2b2.  v2.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3ea2b6.  v0:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3ea2ba.  v2.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3ea2be.  v0:= 1I;
  #L3ea2c0.  v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v0 @kind boolean;
  #L3ea2c4.  v1:= -1I;
  #L3ea2c6.  v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v1;
  #L3ea2ca.  v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v1;
  #L3ea2ce.  call temp:= `obtain`() @signature `Lcom/bumptech/glide/signature/EmptySignature;.obtain:()Lcom/bumptech/glide/signature/EmptySignature;` @kind static;
  #L3ea2d4.  v1:= temp @kind object;
  #L3ea2d6.  v2.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3ea2da.  v2.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v0 @kind boolean;
  #L3ea2de.  v1:= new `com.bumptech.glide.load.Options`;
  #L3ea2e2.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @kind direct;
  #L3ea2e8.  v2.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3ea2ec.  v1:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3ea2f0.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3ea2f6.  v2.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` := v1 @kind object;
  #L3ea2fa.  v1:= constclass @type ^`java.lang.Object` @kind object;
  #L3ea2fe.  v2.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v1 @kind object;
  #L3ea302.  v2.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3ea306.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e8ffc.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9000.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9006.  v2:= temp;
  #L3e9008.  return v2;
}
procedure `boolean` `c`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3e901c.  v0:= v0 ^& v1 @kind int;
  #L3e901e.  if v0 == 0 then goto L3e9026;
  #L3e9022.  v0:= 1I;
  #L3e9024.  goto L3e9028;
  #L3e9026.  v0:= 0I;
  #L3e9028.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `d`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9a24.  v0:= 0I;
  #L3e9a26.  call temp:= `g`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9a2c.  v2:= temp @kind object;
  #L3e9a2e.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `f`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3e9c08.  v0:= 1I;
  #L3e9c0a.  call temp:= `g`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9c10.  v2:= temp @kind object;
  #L3e9c12.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `g`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v1 @kind object, `com.bumptech.glide.load.Transformation` v2 @kind object, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.g:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;

  #L3e9c24.  if v3 == 0 then goto L3e9c32;
  #L3e9c28.  call temp:= `k`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9c2e.  v1:= temp @kind object;
  #L3e9c30.  goto L3e9c3a;
  #L3e9c32.  call temp:= `e`(v0, v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9c38.  v1:= temp @kind object;
  #L3e9c3a.  v2:= 1I;
  #L3e9c3c.  v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v2 @kind boolean;
  #L3e9c40.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `h`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;

  #L3e9c54.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `i`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3e9c68.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3e9c6c.  if v0 != 0 then goto L3e9c78;
  #L3e9c70.  call temp:= `h`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9c76.  return v2 @kind object;
  #L3e9c78.  v0:= new `java.lang.IllegalStateException`;
  #L3e9c7c.  v1:= "You cannot modify locked T, consider clone()" @kind object;
  #L3e9c80.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9c86.  throw v0;
}
procedure `boolean` `a`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.a:()Z` @AccessFlag  {
    temp;
    v0;

  #L3e8fe4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` @kind boolean;
  #L3e8fe8.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `apply`(`com.bumptech.glide.request.BaseRequestOptions` v4 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v5 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e9130.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9134.  if v0 == 0 then goto L3e914a;
  #L3e9138.  call temp:= `clone`(v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e913e.  v0:= temp @kind object;
  #L3e9140.  call temp:= `apply`(v0, v5) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9146.  v5:= temp @kind object;
  #L3e9148.  return v5 @kind object;
  #L3e914a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e914e.  v1:= 2I;
  #L3e9150.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9156.  v0:= temp;
  #L3e9158.  if v0 == 0 then goto L3e9164;
  #L3e915c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3e9160.  v4.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v0;
  #L3e9164.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9168.  v1:= 262144I;
  #L3e916c.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9172.  v0:= temp;
  #L3e9174.  if v0 == 0 then goto L3e9180;
  #L3e9178.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3e917c.  v4.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` := v0 @kind boolean;
  #L3e9180.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9184.  v1:= 1048576I;
  #L3e9188.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e918e.  v0:= temp;
  #L3e9190.  if v0 == 0 then goto L3e919c;
  #L3e9194.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` @kind boolean;
  #L3e9198.  v4.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` := v0 @kind boolean;
  #L3e919c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e91a0.  v1:= 4I;
  #L3e91a2.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e91a8.  v0:= temp;
  #L3e91aa.  if v0 == 0 then goto L3e91b6;
  #L3e91ae.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3e91b2.  v4.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3e91b6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e91ba.  v1:= 8I;
  #L3e91be.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e91c4.  v0:= temp;
  #L3e91c6.  if v0 == 0 then goto L3e91d2;
  #L3e91ca.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3e91ce.  v4.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3e91d2.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e91d6.  v1:= 16I;
  #L3e91da.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e91e0.  v0:= temp;
  #L3e91e2.  v1:= 0I;
  #L3e91e4.  if v0 == 0 then goto L3e9200;
  #L3e91e8.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e91ec.  v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e91f0.  v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v1;
  #L3e91f4.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e91f8.  v0:= v0 ^& -33;
  #L3e91fc.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9200.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9204.  v2:= 32I;
  #L3e9208.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e920e.  v0:= temp;
  #L3e9210.  v2:= 0I;
  #L3e9212.  if v0 == 0 then goto L3e922e;
  #L3e9216.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3e921a.  v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v0;
  #L3e921e.  v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e9222.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9226.  v0:= v0 ^& -17;
  #L3e922a.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e922e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9232.  v3:= 64I;
  #L3e9236.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e923c.  v0:= temp;
  #L3e923e.  if v0 == 0 then goto L3e925a;
  #L3e9242.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e9246.  v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e924a.  v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v1;
  #L3e924e.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9252.  v0:= v0 ^& -129;
  #L3e9256.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e925a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e925e.  v3:= 128I;
  #L3e9262.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9268.  v0:= temp;
  #L3e926a.  if v0 == 0 then goto L3e9286;
  #L3e926e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3e9272.  v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v0;
  #L3e9276.  v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e927a.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e927e.  v0:= v0 ^& -65;
  #L3e9282.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9286.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e928a.  v3:= 256I;
  #L3e928e.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9294.  v0:= temp;
  #L3e9296.  if v0 == 0 then goto L3e92a2;
  #L3e929a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3e929e.  v4.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v0 @kind boolean;
  #L3e92a2.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e92a6.  v3:= 512I;
  #L3e92aa.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e92b0.  v0:= temp;
  #L3e92b2.  if v0 == 0 then goto L3e92c6;
  #L3e92b6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3e92ba.  v4.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v0;
  #L3e92be.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3e92c2.  v4.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v0;
  #L3e92c6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e92ca.  v3:= 1024I;
  #L3e92ce.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e92d4.  v0:= temp;
  #L3e92d6.  if v0 == 0 then goto L3e92e2;
  #L3e92da.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e92de.  v4.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3e92e2.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e92e6.  v3:= 4096I;
  #L3e92ea.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e92f0.  v0:= temp;
  #L3e92f2.  if v0 == 0 then goto L3e92fe;
  #L3e92f6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3e92fa.  v4.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v0 @kind object;
  #L3e92fe.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9302.  v3:= 8192I;
  #L3e9306.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e930c.  v0:= temp;
  #L3e930e.  if v0 == 0 then goto L3e932a;
  #L3e9312.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e9316.  v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e931a.  v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v1;
  #L3e931e.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9322.  v0:= v0 ^& -16385;
  #L3e9326.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e932a.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e932e.  v3:= 16384I;
  #L3e9332.  call temp:= `c`(v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9338.  v0:= temp;
  #L3e933a.  if v0 == 0 then goto L3e9356;
  #L3e933e.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3e9342.  v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v0;
  #L3e9346.  v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e934a.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e934e.  v0:= v0 ^& -8193;
  #L3e9352.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9356.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e935a.  v2:= 32768I;
  #L3e9360.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9366.  v0:= temp;
  #L3e9368.  if v0 == 0 then goto L3e9374;
  #L3e936c.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3e9370.  v4.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` := v0 @kind object;
  #L3e9374.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9378.  v2:= 65536I;
  #L3e937c.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e9382.  v0:= temp;
  #L3e9384.  if v0 == 0 then goto L3e9390;
  #L3e9388.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3e938c.  v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v0 @kind boolean;
  #L3e9390.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9394.  v2:= 131072I;
  #L3e9398.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e939e.  v0:= temp;
  #L3e93a0.  if v0 == 0 then goto L3e93ac;
  #L3e93a4.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3e93a8.  v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v0 @kind boolean;
  #L3e93ac.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e93b0.  v2:= 2048I;
  #L3e93b4.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e93ba.  v0:= temp;
  #L3e93bc.  if v0 == 0 then goto L3e93d6;
  #L3e93c0.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e93c4.  v2:= v5.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e93c8.  call `putAll`(v0, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3e93ce.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` @kind boolean;
  #L3e93d2.  v4.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3e93d6.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e93da.  v2:= 524288I;
  #L3e93de.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.c:(II)Z` @kind static;
  #L3e93e4.  v0:= temp;
  #L3e93e6.  if v0 == 0 then goto L3e93f2;
  #L3e93ea.  v0:= v5.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3e93ee.  v4.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` := v0 @kind boolean;
  #L3e93f2.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3e93f6.  if v0 != 0 then goto L3e9426;
  #L3e93fa.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e93fe.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3e9404.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9408.  v0:= v0 ^& -2049;
  #L3e940c.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9410.  v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v1 @kind boolean;
  #L3e9414.  v1:= -131073I;
  #L3e941a.  v0:= v0 ^& v1 @kind int;
  #L3e941c.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9420.  v0:= 1I;
  #L3e9422.  v4.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3e9426.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e942a.  v1:= v5.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e942e.  v0:= v0 ^| v1 @kind int;
  #L3e9430.  v4.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e9434.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e9438.  v5:= v5.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e943c.  call `putAll`(v0, v5) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3e9442.  call temp:= `i`(v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9448.  return v4 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `autoClone`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.autoClone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e945c.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3e9460.  if v0 == 0 then goto L3e947e;
  #L3e9464.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9468.  if v0 == 0 then goto L3e946e;
  #L3e946c.  goto L3e947e;
  #L3e946e.  v0:= new `java.lang.IllegalStateException`;
  #L3e9472.  v1:= "You cannot auto lock an already locked options object, try clone() first" @kind object;
  #L3e9476.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e947c.  throw v0;
  #L3e947e.  v0:= 1I;
  #L3e9480.  v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` := v0 @kind boolean;
  #L3e9484.  call temp:= `lock`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.lock:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e948a.  v0:= temp @kind object;
  #L3e948c.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `centerCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e94a0.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e94a4.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterCrop`;
  #L3e94a8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterCrop;.<init>:()V` @kind direct;
  #L3e94ae.  call temp:= `k`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e94b4.  v0:= temp @kind object;
  #L3e94b6.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `centerInside`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.centerInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e94c8.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e94cc.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterInside`;
  #L3e94d0.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterInside;.<init>:()V` @kind direct;
  #L3e94d6.  call temp:= `f`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e94dc.  v0:= temp @kind object;
  #L3e94de.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `circleCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.circleCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e94f0.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e94f4.  v1:= new `com.bumptech.glide.load.resource.bitmap.CircleCrop`;
  #L3e94f8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CircleCrop;.<init>:()V` @kind direct;
  #L3e94fe.  call temp:= `k`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9504.  v0:= temp @kind object;
  #L3e9506.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `clone`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9518.  call temp:= `clone`(v3) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L3e951e.  v0:= temp @kind object;
  #L3e9520.  v0:= (`com.bumptech.glide.request.BaseRequestOptions`) v0 @kind object;
  #L3e9524.  v1:= new `com.bumptech.glide.load.Options`;
  #L3e9528.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @kind direct;
  #L3e952e.  v0.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3e9532.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e9536.  call `putAll`(v1, v2) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3e953c.  v1:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3e9540.  call `<init>`(v1) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3e9546.  v0.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` := v1 @kind object;
  #L3e954a.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e954e.  call `putAll`(v1, v2) @signature `Ljava/util/Map;.putAll:(Ljava/util/Map;)V` @kind interface;
  #L3e9554.  v1:= 0I;
  #L3e9556.  v0.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` := v1 @kind boolean;
  #L3e955a.  v0.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` := v1 @kind boolean;
  #L3e955e.  return v0 @kind object;
  #L3e9560.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L3e9562.  v1:= new `java.lang.RuntimeException`;
  #L3e9566.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3e956c.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L3e9518..L3e955e] goto L3e9560;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3ea26c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea272.  v0:= temp @kind object;
  #L3ea274.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `decode`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.decode:(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9590.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9594.  if v0 == 0 then goto L3e95aa;
  #L3e9598.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e959e.  v0:= temp @kind object;
  #L3e95a0.  call temp:= `decode`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.decode:(Ljava/lang/Class;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e95a6.  v2:= temp @kind object;
  #L3e95a8.  return v2 @kind object;
  #L3e95aa.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e95b0.  v2:= temp @kind object;
  #L3e95b2.  v2:= (`java.lang.Class`) v2 @kind object;
  #L3e95b6.  v1.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` := v2 @kind object;
  #L3e95ba.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e95be.  v2:= v2 ^| 4096;
  #L3e95c2.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e95c6.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e95cc.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `disallowHardwareConfig`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.disallowHardwareConfig:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e95e0.  v0:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.ALLOW_HARDWARE_CONFIG` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e95e4.  v1:= `@@java.lang.Boolean.FALSE` @type ^`java.lang.Boolean` @kind object;
  #L3e95e8.  call temp:= `set`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e95ee.  v0:= temp @kind object;
  #L3e95f0.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `diskCacheStrategy`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.engine.DiskCacheStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9604.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9608.  if v0 == 0 then goto L3e961e;
  #L3e960c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9612.  v0:= temp @kind object;
  #L3e9614.  call temp:= `diskCacheStrategy`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e961a.  v2:= temp @kind object;
  #L3e961c.  return v2 @kind object;
  #L3e961e.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9624.  v2:= temp @kind object;
  #L3e9626.  v2:= (`com.bumptech.glide.load.engine.DiskCacheStrategy`) v2 @kind object;
  #L3e962a.  v1.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v2 @kind object;
  #L3e962e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9632.  v2:= v2 ^| 4;
  #L3e9636.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e963a.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9640.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `dontAnimate`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontAnimate:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9654.  v0:= `@@com.bumptech.glide.load.resource.gif.GifOptions.DISABLE_ANIMATION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e9658.  v1:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3e965c.  call temp:= `set`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9662.  v0:= temp @kind object;
  #L3e9664.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `dontTransform`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontTransform:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e9678.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e967c.  if v0 == 0 then goto L3e9692;
  #L3e9680.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9686.  v0:= temp @kind object;
  #L3e9688.  call temp:= `dontTransform`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.dontTransform:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e968e.  v0:= temp @kind object;
  #L3e9690.  return v0 @kind object;
  #L3e9692.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e9696.  call `clear`(v0) @signature `Ljava/util/Map;.clear:()V` @kind interface;
  #L3e969c.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e96a0.  v0:= v0 ^& -2049;
  #L3e96a4.  v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e96a8.  v1:= 0I;
  #L3e96aa.  v3.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v1 @kind boolean;
  #L3e96ae.  v2:= -131073I;
  #L3e96b4.  v0:= v0 ^& v2 @kind int;
  #L3e96b6.  v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e96ba.  v3.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v1 @kind boolean;
  #L3e96be.  v1:= 65536I;
  #L3e96c2.  v0:= v0 ^| v1 @kind int;
  #L3e96c4.  v3.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v0;
  #L3e96c8.  v0:= 1I;
  #L3e96ca.  v3.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3e96ce.  call temp:= `i`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e96d4.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `downsample`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e96e8.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.OPTION` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e96ec.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e96f2.  v2:= temp @kind object;
  #L3e96f4.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e96fa.  v2:= temp @kind object;
  #L3e96fc.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `e`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag FINAL {
    temp;
    v0;

  #L3e9a5c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9a60.  if v0 == 0 then goto L3e9a76;
  #L3e9a64.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9a6a.  v0:= temp @kind object;
  #L3e9a6c.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9a72.  v2:= temp @kind object;
  #L3e9a74.  return v2 @kind object;
  #L3e9a76.  call temp:= `downsample`(v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9a7c.  v2:= 0I;
  #L3e9a7e.  call temp:= `j`(v1, v3, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9a84.  v2:= temp @kind object;
  #L3e9a86.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `encodeFormat`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.Bitmap$CompressFormat` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeFormat:(Landroid/graphics/Bitmap$CompressFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9710.  v0:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e9714.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e971a.  v2:= temp @kind object;
  #L3e971c.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9722.  v2:= temp @kind object;
  #L3e9724.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `encodeQuality`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.encodeQuality:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9738.  v0:= `@@com.bumptech.glide.load.resource.bitmap.BitmapEncoder.COMPRESSION_QUALITY` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e973c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9742.  v2:= temp @kind object;
  #L3e9744.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e974a.  v2:= temp @kind object;
  #L3e974c.  return v2 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.request.BaseRequestOptions` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8da8.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.request.BaseRequestOptions` @kind boolean;
  #L3e8dac.  v1:= 0I;
  #L3e8dae.  if v0 == 0 then goto L3e8f04;
  #L3e8db2.  v4:= (`com.bumptech.glide.request.BaseRequestOptions`) v4 @kind object;
  #L3e8db6.  v0:= v4.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3e8dba.  v2:= v3.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3e8dbe.  call temp:= `compare`(v0, v2) @signature `Ljava/lang/Float;.compare:(FF)I` @kind static;
  #L3e8dc4.  v0:= temp;
  #L3e8dc6.  if v0 != 0 then goto L3e8f04;
  #L3e8dca.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3e8dce.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3e8dd2.  if v0 != v2 then goto L3e8f04;
  #L3e8dd6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8dda.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8dde.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8de4.  v0:= temp;
  #L3e8de6.  if v0 == 0 then goto L3e8f04;
  #L3e8dea.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3e8dee.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3e8df2.  if v0 != v2 then goto L3e8f04;
  #L3e8df6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8dfa.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8dfe.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8e04.  v0:= temp;
  #L3e8e06.  if v0 == 0 then goto L3e8f04;
  #L3e8e0a.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3e8e0e.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3e8e12.  if v0 != v2 then goto L3e8f04;
  #L3e8e16.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8e1a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8e1e.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8e24.  v0:= temp;
  #L3e8e26.  if v0 == 0 then goto L3e8f04;
  #L3e8e2a.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3e8e2e.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3e8e32.  if v0 != v2 then goto L3e8f04;
  #L3e8e36.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3e8e3a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3e8e3e.  if v0 != v2 then goto L3e8f04;
  #L3e8e42.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3e8e46.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3e8e4a.  if v0 != v2 then goto L3e8f04;
  #L3e8e4e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3e8e52.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3e8e56.  if v0 != v2 then goto L3e8f04;
  #L3e8e5a.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3e8e5e.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3e8e62.  if v0 != v2 then goto L3e8f04;
  #L3e8e66.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3e8e6a.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3e8e6e.  if v0 != v2 then goto L3e8f04;
  #L3e8e72.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3e8e76.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3e8e7a.  if v0 != v2 then goto L3e8f04;
  #L3e8e7e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3e8e82.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3e8e86.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e8e8c.  v0:= temp;
  #L3e8e8e.  if v0 == 0 then goto L3e8f04;
  #L3e8e92.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3e8e96.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3e8e9a.  if v0 != v2 then goto L3e8f04;
  #L3e8e9e.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e8ea2.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e8ea6.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Options;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e8eac.  v0:= temp;
  #L3e8eae.  if v0 == 0 then goto L3e8f04;
  #L3e8eb2.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e8eb6.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e8eba.  call temp:= `equals`(v0, v2) @signature `Ljava/util/Map;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3e8ec0.  v0:= temp;
  #L3e8ec2.  if v0 == 0 then goto L3e8f04;
  #L3e8ec6.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3e8eca.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3e8ece.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e8ed4.  v0:= temp;
  #L3e8ed6.  if v0 == 0 then goto L3e8f04;
  #L3e8eda.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e8ede.  v2:= v4.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e8ee2.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8ee8.  v0:= temp;
  #L3e8eea.  if v0 == 0 then goto L3e8f04;
  #L3e8eee.  v0:= v3.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3e8ef2.  v4:= v4.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3e8ef6.  call temp:= `bothNullOrEqual`(v0, v4) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3e8efc.  v4:= temp;
  #L3e8efe.  if v4 == 0 then goto L3e8f04;
  #L3e8f02.  v1:= 1I;
  #L3e8f04.  return v1;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `error`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e97b0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e97b4.  if v0 == 0 then goto L3e97ca;
  #L3e97b8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e97be.  v0:= temp @kind object;
  #L3e97c0.  call temp:= `error`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e97c6.  v2:= temp @kind object;
  #L3e97c8.  return v2 @kind object;
  #L3e97ca.  v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v2;
  #L3e97ce.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e97d2.  v2:= v2 ^| 32;
  #L3e97d6.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e97da.  v0:= 0I;
  #L3e97dc.  v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e97e0.  v2:= v2 ^& -17;
  #L3e97e4.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e97e8.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e97ee.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `error`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9760.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9764.  if v0 == 0 then goto L3e977a;
  #L3e9768.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e976e.  v0:= temp @kind object;
  #L3e9770.  call temp:= `error`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.error:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9776.  v2:= temp @kind object;
  #L3e9778.  return v2 @kind object;
  #L3e977a.  v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e977e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9782.  v2:= v2 ^| 16;
  #L3e9786.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e978a.  v0:= 0I;
  #L3e978c.  v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int` := v0;
  #L3e9790.  v2:= v2 ^& -33;
  #L3e9794.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9798.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e979e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fallback`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9850.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9854.  if v0 == 0 then goto L3e986a;
  #L3e9858.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e985e.  v0:= temp @kind object;
  #L3e9860.  call temp:= `fallback`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9866.  v2:= temp @kind object;
  #L3e9868.  return v2 @kind object;
  #L3e986a.  v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v2;
  #L3e986e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9872.  v2:= v2 ^| 16384;
  #L3e9876.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e987a.  v0:= 0I;
  #L3e987c.  v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e9880.  v2:= v2 ^& -8193;
  #L3e9884.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9888.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e988e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fallback`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9800.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9804.  if v0 == 0 then goto L3e981a;
  #L3e9808.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e980e.  v0:= temp @kind object;
  #L3e9810.  call temp:= `fallback`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fallback:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9816.  v2:= temp @kind object;
  #L3e9818.  return v2 @kind object;
  #L3e981a.  v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e981e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9822.  v2:= v2 ^| 8192;
  #L3e9826.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e982a.  v0:= 0I;
  #L3e982c.  v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int` := v0;
  #L3e9830.  v2:= v2 ^& -16385;
  #L3e9834.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9838.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e983e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `fitCenter`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.fitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e98a0.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e98a4.  v1:= new `com.bumptech.glide.load.resource.bitmap.FitCenter`;
  #L3e98a8.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/FitCenter;.<init>:()V` @kind direct;
  #L3e98ae.  call temp:= `f`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.f:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e98b4.  v0:= temp @kind object;
  #L3e98b6.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `format`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.DecodeFormat` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.format:(Lcom/bumptech/glide/load/DecodeFormat;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e98c8.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e98ce.  v0:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.DECODE_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e98d2.  call temp:= `set`(v2, v0, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e98d8.  v0:= temp @kind object;
  #L3e98da.  v1:= `@@com.bumptech.glide.load.resource.gif.GifOptions.DECODE_FORMAT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e98de.  call temp:= `set`(v0, v1, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e98e4.  v3:= temp @kind object;
  #L3e98e6.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `frame`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `long` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.frame:(J)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e98f8.  v0:= `@@com.bumptech.glide.load.resource.bitmap.VideoDecoder.TARGET_FRAME` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e98fc.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Long;.valueOf:(J)Ljava/lang/Long;` @kind static;
  #L3e9902.  v2:= temp @kind object;
  #L3e9904.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e990a.  v2:= temp @kind object;
  #L3e990c.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.DiskCacheStrategy` `getDiskCacheStrategy`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getDiskCacheStrategy:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e9118.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3e911c.  return v0 @kind object;
}
procedure `int` `getErrorId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea0cc.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3ea0d0.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getErrorPlaceholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getErrorPlaceholder:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8d60.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8d64.  return v0 @kind object;
}
procedure `android.graphics.drawable.Drawable` `getFallbackDrawable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8d78.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8d7c.  return v0 @kind object;
}
procedure `int` `getFallbackId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getFallbackId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea0e4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3ea0e8.  return v0;
}
procedure `boolean` `getOnlyRetrieveFromCache`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOnlyRetrieveFromCache:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8f18.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3e8f1c.  return v0;
}
procedure `com.bumptech.glide.load.Options` `getOptions`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOptions:()Lcom/bumptech/glide/load/Options;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e9100.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e9104.  return v0 @kind object;
}
procedure `int` `getOverrideHeight`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea0fc.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3ea100.  return v0;
}
procedure `int` `getOverrideWidth`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea114.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3ea118.  return v0;
}
procedure `android.graphics.drawable.Drawable` `getPlaceholderDrawable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderDrawable:()Landroid/graphics/drawable/Drawable;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8d90.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e8d94.  return v0 @kind object;
}
procedure `int` `getPlaceholderId`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPlaceholderId:()I` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea12c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3ea130.  return v0;
}
procedure `com.bumptech.glide.Priority` `getPriority`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e90d0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3e90d4.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea254.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3ea258.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Key` `getSignature`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSignature:()Lcom/bumptech/glide/load/Key;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e90e8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3e90ec.  return v0 @kind object;
}
procedure `float` `getSizeMultiplier`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getSizeMultiplier:()F` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea0b4.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3ea0b8.  return v0;
}
procedure `android.content.res.Resources$Theme` `getTheme`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTheme:()Landroid/content/res/Resources$Theme;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8d48.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3e8d4c.  return v0 @kind object;
}
procedure `java.util.Map` `getTransformations`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getTransformations:()Ljava/util/Map;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ea288.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3ea28c.  return v0 @kind object;
}
procedure `boolean` `getUseAnimationPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseAnimationPool:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8f30.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` @kind boolean;
  #L3e8f34.  return v0;
}
procedure `boolean` `getUseUnlimitedSourceGeneratorsPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getUseUnlimitedSourceGeneratorsPool:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8f48.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3e8f4c.  return v0;
}
procedure `int` `hashCode`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ea144.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float`;
  #L3ea148.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(F)I` @kind static;
  #L3ea14e.  v0:= temp;
  #L3ea150.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.f` @type ^`int`;
  #L3ea154.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3ea15a.  v0:= temp;
  #L3ea15c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.e` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3ea160.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea166.  v0:= temp;
  #L3ea168.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int`;
  #L3ea16c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3ea172.  v0:= temp;
  #L3ea174.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3ea178.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea17e.  v0:= temp;
  #L3ea180.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.p` @type ^`int`;
  #L3ea184.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3ea18a.  v0:= temp;
  #L3ea18c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.o` @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3ea190.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea196.  v0:= temp;
  #L3ea198.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3ea19c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3ea1a2.  v0:= temp;
  #L3ea1a4.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3ea1a8.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3ea1ae.  v0:= temp;
  #L3ea1b0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3ea1b4.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(II)I` @kind static;
  #L3ea1ba.  v0:= temp;
  #L3ea1bc.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3ea1c0.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3ea1c6.  v0:= temp;
  #L3ea1c8.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3ea1cc.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3ea1d2.  v0:= temp;
  #L3ea1d4.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` @kind boolean;
  #L3ea1d8.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3ea1de.  v0:= temp;
  #L3ea1e0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` @kind boolean;
  #L3ea1e4.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(ZI)I` @kind static;
  #L3ea1ea.  v0:= temp;
  #L3ea1ec.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.c` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3ea1f0.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea1f6.  v0:= temp;
  #L3ea1f8.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3ea1fc.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea202.  v0:= temp;
  #L3ea204.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3ea208.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea20e.  v0:= temp;
  #L3ea210.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3ea214.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea21a.  v0:= temp;
  #L3ea21c.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.s` @type ^`java.lang.Class` @kind object;
  #L3ea220.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea226.  v0:= temp;
  #L3ea228.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3ea22c.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea232.  v0:= temp;
  #L3ea234.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` @kind object;
  #L3ea238.  call temp:= `hashCode`(v1, v0) @signature `Lcom/bumptech/glide/util/Util;.hashCode:(Ljava/lang/Object;I)I` @kind static;
  #L3ea23e.  v0:= temp;
  #L3ea240.  return v0;
}
procedure `boolean` `isAutoCloneEnabled`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isAutoCloneEnabled:()Z` @AccessFlag PROTECTED {
    temp;
    v0;

  #L3e8f60.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e8f64.  return v0;
}
procedure `boolean` `isDiskCacheStrategySet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isDiskCacheStrategySet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8f78.  v0:= 4I;
  #L3e8f7a.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3e8f80.  v0:= temp;
  #L3e8f82.  return v0;
}
procedure `boolean` `isLocked`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isLocked:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8f94.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` @kind boolean;
  #L3e8f98.  return v0;
}
procedure `boolean` `isMemoryCacheable`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8fac.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` @kind boolean;
  #L3e8fb0.  return v0;
}
procedure `boolean` `isPrioritySet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isPrioritySet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e8fc4.  v0:= 8I;
  #L3e8fc8.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3e8fce.  v0:= temp;
  #L3e8fd0.  return v0;
}
procedure `boolean` `isSkipMemoryCacheSet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isSkipMemoryCacheSet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e903c.  v0:= 256I;
  #L3e9040.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3e9046.  v0:= temp;
  #L3e9048.  return v0;
}
procedure `boolean` `isTransformationAllowed`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationAllowed:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e905c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` @kind boolean;
  #L3e9060.  return v0;
}
procedure `boolean` `isTransformationRequired`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationRequired:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e9074.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` @kind boolean;
  #L3e9078.  return v0;
}
procedure `boolean` `isTransformationSet`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationSet:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3e908c.  v0:= 2048I;
  #L3e9090.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.b:(I)Z` @kind direct;
  #L3e9096.  v0:= temp;
  #L3e9098.  return v0;
}
procedure `boolean` `isValidOverride`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3e90ac.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int`;
  #L3e90b0.  v1:= v2.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int`;
  #L3e90b4.  call temp:= `isValidDimensions`(v0, v1) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3e90ba.  v0:= temp;
  #L3e90bc.  return v0;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `j`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.Transformation` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e9e6c.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9e70.  if v0 == 0 then goto L3e9e86;
  #L3e9e74.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9e7a.  v0:= temp @kind object;
  #L3e9e7c.  call temp:= `j`(v0, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9e82.  v3:= temp @kind object;
  #L3e9e84.  return v3 @kind object;
  #L3e9e86.  v0:= new `com.bumptech.glide.load.resource.bitmap.DrawableTransformation`;
  #L3e9e8a.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @kind direct;
  #L3e9e90.  v1:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L3e9e94.  call temp:= `l`(v2, v1, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9e9a.  v1:= constclass @type ^`android.graphics.drawable.Drawable` @kind object;
  #L3e9e9e.  call temp:= `l`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9ea4.  v1:= constclass @type ^`android.graphics.drawable.BitmapDrawable` @kind object;
  #L3e9ea8.  call temp:= `asBitmapDrawable`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.asBitmapDrawable:()Lcom/bumptech/glide/load/Transformation;` @kind virtual;
  #L3e9eae.  v0:= temp @kind object;
  #L3e9eb0.  call temp:= `l`(v2, v1, v0, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9eb6.  v0:= constclass @type ^`com.bumptech.glide.load.resource.gif.GifDrawable` @kind object;
  #L3e9eba.  v1:= new `com.bumptech.glide.load.resource.gif.GifDrawableTransformation`;
  #L3e9ebe.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3e9ec4.  call temp:= `l`(v2, v0, v1, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9eca.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9ed0.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `k`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag FINAL {
    temp;
    v0;

  #L3e9f30.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9f34.  if v0 == 0 then goto L3e9f4a;
  #L3e9f38.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f3e.  v0:= temp @kind object;
  #L3e9f40.  call temp:= `k`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.k:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f46.  v2:= temp @kind object;
  #L3e9f48.  return v2 @kind object;
  #L3e9f4a.  call temp:= `downsample`(v1, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.downsample:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f50.  call temp:= `transform`(v1, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f56.  v2:= temp @kind object;
  #L3e9f58.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `l`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object, `boolean` v4 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag  {
    temp;
    v0;

  #L3e9f88.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9f8c.  if v0 == 0 then goto L3e9fa2;
  #L3e9f90.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f96.  v0:= temp @kind object;
  #L3e9f98.  call temp:= `l`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f9e.  v2:= temp @kind object;
  #L3e9fa0.  return v2 @kind object;
  #L3e9fa2.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9fa8.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9fae.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.r` @type ^`java.util.Map` @kind object;
  #L3e9fb2.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3e9fb8.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9fbc.  v2:= v2 ^| 2048;
  #L3e9fc0.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9fc4.  v3:= 1I;
  #L3e9fc6.  v1.`com.bumptech.glide.request.BaseRequestOptions.n` @type ^`boolean` := v3 @kind boolean;
  #L3e9fca.  v0:= 65536I;
  #L3e9fce.  v2:= v2 ^| v0 @kind int;
  #L3e9fd0.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9fd4.  v0:= 0I;
  #L3e9fd6.  v1.`com.bumptech.glide.request.BaseRequestOptions.y` @type ^`boolean` := v0 @kind boolean;
  #L3e9fda.  if v4 == 0 then goto L3e9fec;
  #L3e9fde.  v4:= 131072I;
  #L3e9fe2.  v2:= v2 ^| v4 @kind int;
  #L3e9fe4.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9fe8.  v1.`com.bumptech.glide.request.BaseRequestOptions.m` @type ^`boolean` := v3 @kind boolean;
  #L3e9fec.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9ff2.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `lock`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.lock:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9920.  v0:= 1I;
  #L3e9922.  v1.`com.bumptech.glide.request.BaseRequestOptions.t` @type ^`boolean` := v0 @kind boolean;
  #L3e9926.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.h:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e992c.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `onlyRetrieveFromCache`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.onlyRetrieveFromCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9940.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9944.  if v0 == 0 then goto L3e995a;
  #L3e9948.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e994e.  v0:= temp @kind object;
  #L3e9950.  call temp:= `onlyRetrieveFromCache`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.onlyRetrieveFromCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9956.  v2:= temp @kind object;
  #L3e9958.  return v2 @kind object;
  #L3e995a.  v1.`com.bumptech.glide.request.BaseRequestOptions.x` @type ^`boolean` := v2 @kind boolean;
  #L3e995e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9962.  v0:= 524288I;
  #L3e9966.  v2:= v2 ^| v0 @kind int;
  #L3e9968.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e996c.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9972.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCenterCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9984.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e9988.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterCrop`;
  #L3e998c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterCrop;.<init>:()V` @kind direct;
  #L3e9992.  call temp:= `e`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9998.  v0:= temp @kind object;
  #L3e999a.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCenterInside`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e99ac.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_INSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e99b0.  v1:= new `com.bumptech.glide.load.resource.bitmap.CenterInside`;
  #L3e99b4.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CenterInside;.<init>:()V` @kind direct;
  #L3e99ba.  call temp:= `d`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e99c0.  v0:= temp @kind object;
  #L3e99c2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalCircleCrop`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCircleCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e99d4.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.CENTER_OUTSIDE` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e99d8.  v1:= new `com.bumptech.glide.load.resource.bitmap.CircleCrop`;
  #L3e99dc.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/CircleCrop;.<init>:()V` @kind direct;
  #L3e99e2.  call temp:= `e`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.e:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e99e8.  v0:= temp @kind object;
  #L3e99ea.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalFitCenter`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalFitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e99fc.  v0:= `@@com.bumptech.glide.load.resource.bitmap.DownsampleStrategy.FIT_CENTER` @type ^`com.bumptech.glide.load.resource.bitmap.DownsampleStrategy` @kind object;
  #L3e9a00.  v1:= new `com.bumptech.glide.load.resource.bitmap.FitCenter`;
  #L3e9a04.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/FitCenter;.<init>:()V` @kind direct;
  #L3e9a0a.  call temp:= `d`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.d:(Lcom/bumptech/glide/load/resource/bitmap/DownsampleStrategy;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9a10.  v0:= temp @kind object;
  #L3e9a12.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalTransform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalTransform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9a40.  v0:= 0I;
  #L3e9a42.  call temp:= `j`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9a48.  v2:= temp @kind object;
  #L3e9a4a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `optionalTransform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalTransform:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9a98.  v0:= 0I;
  #L3e9a9a.  call temp:= `l`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9aa0.  v2:= temp @kind object;
  #L3e9aa2.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `override`(`com.bumptech.glide.request.BaseRequestOptions` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;

  #L3e9ab4.  call temp:= `override`(v0, v1, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9aba.  v1:= temp @kind object;
  #L3e9abc.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `override`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9ad0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9ad4.  if v0 == 0 then goto L3e9aea;
  #L3e9ad8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9ade.  v0:= temp @kind object;
  #L3e9ae0.  call temp:= `override`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.override:(II)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9ae6.  v2:= temp @kind object;
  #L3e9ae8.  return v2 @kind object;
  #L3e9aea.  v1.`com.bumptech.glide.request.BaseRequestOptions.k` @type ^`int` := v2;
  #L3e9aee.  v1.`com.bumptech.glide.request.BaseRequestOptions.j` @type ^`int` := v3;
  #L3e9af2.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9af6.  v2:= v2 ^| 512;
  #L3e9afa.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9afe.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9b04.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `placeholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9b68.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9b6c.  if v0 == 0 then goto L3e9b82;
  #L3e9b70.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9b76.  v0:= temp @kind object;
  #L3e9b78.  call temp:= `placeholder`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9b7e.  v2:= temp @kind object;
  #L3e9b80.  return v2 @kind object;
  #L3e9b82.  v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v2;
  #L3e9b86.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9b8a.  v2:= v2 ^| 128;
  #L3e9b8e.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9b92.  v0:= 0I;
  #L3e9b94.  v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v0 @kind object;
  #L3e9b98.  v2:= v2 ^& -65;
  #L3e9b9c.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9ba0.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9ba6.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `placeholder`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.graphics.drawable.Drawable` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9b18.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9b1c.  if v0 == 0 then goto L3e9b32;
  #L3e9b20.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9b26.  v0:= temp @kind object;
  #L3e9b28.  call temp:= `placeholder`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.placeholder:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9b2e.  v2:= temp @kind object;
  #L3e9b30.  return v2 @kind object;
  #L3e9b32.  v1.`com.bumptech.glide.request.BaseRequestOptions.g` @type ^`android.graphics.drawable.Drawable` := v2 @kind object;
  #L3e9b36.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9b3a.  v2:= v2 ^| 64;
  #L3e9b3e.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9b42.  v0:= 0I;
  #L3e9b44.  v1.`com.bumptech.glide.request.BaseRequestOptions.h` @type ^`int` := v0;
  #L3e9b48.  v2:= v2 ^& -129;
  #L3e9b4c.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9b50.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9b56.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `priority`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9bb8.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9bbc.  if v0 == 0 then goto L3e9bd2;
  #L3e9bc0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9bc6.  v0:= temp @kind object;
  #L3e9bc8.  call temp:= `priority`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9bce.  v2:= temp @kind object;
  #L3e9bd0.  return v2 @kind object;
  #L3e9bd2.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9bd8.  v2:= temp @kind object;
  #L3e9bda.  v2:= (`com.bumptech.glide.Priority`) v2 @kind object;
  #L3e9bde.  v1.`com.bumptech.glide.request.BaseRequestOptions.d` @type ^`com.bumptech.glide.Priority` := v2 @kind object;
  #L3e9be2.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9be6.  v2:= v2 ^| 8;
  #L3e9bea.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9bee.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9bf4.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `set`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9c98.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9c9c.  if v0 == 0 then goto L3e9cb2;
  #L3e9ca0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9ca6.  v0:= temp @kind object;
  #L3e9ca8.  call temp:= `set`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9cae.  v2:= temp @kind object;
  #L3e9cb0.  return v2 @kind object;
  #L3e9cb2.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9cb8.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9cbe.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.q` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3e9cc2.  call temp:= `set`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/Options;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3e9cc8.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9cce.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `signature`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9ce0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9ce4.  if v0 == 0 then goto L3e9cfa;
  #L3e9ce8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9cee.  v0:= temp @kind object;
  #L3e9cf0.  call temp:= `signature`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.signature:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9cf6.  v2:= temp @kind object;
  #L3e9cf8.  return v2 @kind object;
  #L3e9cfa.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3e9d00.  v2:= temp @kind object;
  #L3e9d02.  v2:= (`com.bumptech.glide.load.Key`) v2 @kind object;
  #L3e9d06.  v1.`com.bumptech.glide.request.BaseRequestOptions.l` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L3e9d0a.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9d0e.  v2:= v2 ^| 1024;
  #L3e9d12.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9d16.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9d1c.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `sizeMultiplier`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9d30.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9d34.  if v0 == 0 then goto L3e9d4a;
  #L3e9d38.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9d3e.  v0:= temp @kind object;
  #L3e9d40.  call temp:= `sizeMultiplier`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9d46.  v2:= temp @kind object;
  #L3e9d48.  return v2 @kind object;
  #L3e9d4a.  v0:= 0I;
  #L3e9d4c.  v0:= fcmpg(v2, v0);
  #L3e9d50.  if v0 < 0 then goto L3e9d78;
  #L3e9d54.  v0:= 1.0F;
  #L3e9d58.  v0:= fcmpl(v2, v0);
  #L3e9d5c.  if v0 > 0 then goto L3e9d78;
  #L3e9d60.  v1.`com.bumptech.glide.request.BaseRequestOptions.b` @type ^`float` := v2;
  #L3e9d64.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9d68.  v2:= v2 ^| 2;
  #L3e9d6c.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9d70.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9d76.  return v1 @kind object;
  #L3e9d78.  v2:= new `java.lang.IllegalArgumentException`;
  #L3e9d7c.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L3e9d80.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e9d86.  throw v2;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `skipMemoryCache`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `boolean` v3 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9d98.  v0:= v2.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9d9c.  v1:= 1I;
  #L3e9d9e.  if v0 == 0 then goto L3e9db4;
  #L3e9da2.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9da8.  v3:= temp @kind object;
  #L3e9daa.  call temp:= `skipMemoryCache`(v3, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9db0.  v3:= temp @kind object;
  #L3e9db2.  return v3 @kind object;
  #L3e9db4.  v3:= v3 ^~ v1 @kind int;
  #L3e9db6.  v2.`com.bumptech.glide.request.BaseRequestOptions.i` @type ^`boolean` := v3 @kind boolean;
  #L3e9dba.  v3:= v2.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9dbe.  v3:= v3 ^| 256;
  #L3e9dc2.  v2.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v3;
  #L3e9dc6.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9dcc.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `theme`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `android.content.res.Resources$Theme` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.theme:(Landroid/content/res/Resources$Theme;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9de0.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3e9de4.  if v0 == 0 then goto L3e9dfa;
  #L3e9de8.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9dee.  v0:= temp @kind object;
  #L3e9df0.  call temp:= `theme`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.theme:(Landroid/content/res/Resources$Theme;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9df6.  v2:= temp @kind object;
  #L3e9df8.  return v2 @kind object;
  #L3e9dfa.  v1.`com.bumptech.glide.request.BaseRequestOptions.u` @type ^`android.content.res.Resources$Theme` := v2 @kind object;
  #L3e9dfe.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3e9e02.  v0:= 32768I;
  #L3e9e08.  v2:= v2 ^| v0 @kind int;
  #L3e9e0a.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3e9e0e.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9e14.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `timeout`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.timeout:(I)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9e28.  v0:= `@@com.bumptech.glide.load.model.stream.HttpGlideUrlLoader.TIMEOUT` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3e9e2c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3e9e32.  v2:= temp @kind object;
  #L3e9e34.  call temp:= `set`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9e3a.  v2:= temp @kind object;
  #L3e9e3c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation` v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9e50.  v0:= 1I;
  #L3e9e52.  call temp:= `j`(v1, v2, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9e58.  v2:= temp @kind object;
  #L3e9e5a.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e9f6c.  v0:= 1I;
  #L3e9f6e.  call temp:= `l`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.l:(Ljava/lang/Class;Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f74.  v2:= temp @kind object;
  #L3e9f76.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transform`(`com.bumptech.glide.request.BaseRequestOptions` v2 @kind this, `com.bumptech.glide.load.Transformation`[] v3 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e9ee4.  v0:= length @variable v3;
  #L3e9ee6.  v1:= 1I;
  #L3e9ee8.  if v0 <= v1 then goto L3e9f00;
  #L3e9eec.  v0:= new `com.bumptech.glide.load.MultiTransformation`;
  #L3e9ef0.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/MultiTransformation;.<init>:([Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3e9ef6.  call temp:= `j`(v2, v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9efc.  v3:= temp @kind object;
  #L3e9efe.  return v3 @kind object;
  #L3e9f00.  v0:= length @variable v3;
  #L3e9f02.  if v0 != v1 then goto L3e9f16;
  #L3e9f06.  v0:= 0I;
  #L3e9f08.  v3:= v3[v0] @kind object;
  #L3e9f0c.  call temp:= `transform`(v2, v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transform:(Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3e9f12.  v3:= temp @kind object;
  #L3e9f14.  return v3 @kind object;
  #L3e9f16.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3e9f1c.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `transforms`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `com.bumptech.glide.load.Transformation`[] v2 @kind object) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.transforms:([Lcom/bumptech/glide/load/Transformation;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea004.  v0:= new `com.bumptech.glide.load.MultiTransformation`;
  #L3ea008.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/MultiTransformation;.<init>:([Lcom/bumptech/glide/load/Transformation;)V` @kind direct;
  #L3ea00e.  v2:= 1I;
  #L3ea010.  call temp:= `j`(v1, v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.j:(Lcom/bumptech/glide/load/Transformation;Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea016.  v2:= temp @kind object;
  #L3ea018.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `useAnimationPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useAnimationPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea02c.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3ea030.  if v0 == 0 then goto L3ea046;
  #L3ea034.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea03a.  v0:= temp @kind object;
  #L3ea03c.  call temp:= `useAnimationPool`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useAnimationPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea042.  v2:= temp @kind object;
  #L3ea044.  return v2 @kind object;
  #L3ea046.  v1.`com.bumptech.glide.request.BaseRequestOptions.z` @type ^`boolean` := v2 @kind boolean;
  #L3ea04a.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3ea04e.  v0:= 1048576I;
  #L3ea052.  v2:= v2 ^| v0 @kind int;
  #L3ea054.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3ea058.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3ea05e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `useUnlimitedSourceGeneratorsPool`(`com.bumptech.glide.request.BaseRequestOptions` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useUnlimitedSourceGeneratorsPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ea070.  v0:= v1.`com.bumptech.glide.request.BaseRequestOptions.v` @type ^`boolean` @kind boolean;
  #L3ea074.  if v0 == 0 then goto L3ea08a;
  #L3ea078.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea07e.  v0:= temp @kind object;
  #L3ea080.  call temp:= `useUnlimitedSourceGeneratorsPool`(v0, v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.useUnlimitedSourceGeneratorsPool:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3ea086.  v2:= temp @kind object;
  #L3ea088.  return v2 @kind object;
  #L3ea08a.  v1.`com.bumptech.glide.request.BaseRequestOptions.w` @type ^`boolean` := v2 @kind boolean;
  #L3ea08e.  v2:= v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int`;
  #L3ea092.  v0:= 262144I;
  #L3ea096.  v2:= v2 ^| v0 @kind int;
  #L3ea098.  v1.`com.bumptech.glide.request.BaseRequestOptions.a` @type ^`int` := v2;
  #L3ea09c.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.i:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind direct;
  #L3ea0a2.  return v1 @kind object;
}
