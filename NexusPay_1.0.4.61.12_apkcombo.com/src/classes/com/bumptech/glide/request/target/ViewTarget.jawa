record `com.bumptech.glide.request.target.ViewTarget` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.request.target.BaseTarget` @kind class {
  `com.bumptech.glide.request.target.ViewTarget$b` `com.bumptech.glide.request.target.ViewTarget.b` @AccessFlag PRIVATE_FINAL;
  `android.view.View$OnAttachStateChangeListener` `com.bumptech.glide.request.target.ViewTarget.c` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.target.ViewTarget.d` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.request.target.ViewTarget.e` @AccessFlag PRIVATE;
  `android.view.View` `com.bumptech.glide.request.target.ViewTarget.view` @AccessFlag PROTECTED_FINAL;
}
global `boolean` `@@com.bumptech.glide.request.target.ViewTarget.f` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.bumptech.glide.request.target.ViewTarget.g` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eea48.  v0:= `@@com.bumptech.glide.R$id.glide_custom_view_target_tag` @type ^`int`;
  #L3eea4c.  `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int` := v0;
  #L3eea50.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3eea64.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.<init>:()V` @kind direct;
  #L3eea6a.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3eea70.  v0:= temp @kind object;
  #L3eea72.  v0:= (`android.view.View`) v0 @kind object;
  #L3eea76.  v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` := v0 @kind object;
  #L3eea7a.  v0:= new `com.bumptech.glide.request.target.ViewTarget$b`;
  #L3eea7e.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3eea84.  v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` := v0 @kind object;
  #L3eea88.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.view.View` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3eea9c.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.<init>:(Landroid/view/View;)V` @kind direct;
  #L3eeaa2.  if v2 == 0 then goto L3eeaac;
  #L3eeaa6.  call temp:= `waitForLayout`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.waitForLayout:()Lcom/bumptech/glide/request/target/ViewTarget;` @kind virtual;
  #L3eeaac.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.a:()Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ee9ec.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3ee9f0.  v1:= `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int`;
  #L3ee9f4.  call temp:= `getTag`(v0, v1) @signature `Landroid/view/View;.getTag:(I)Ljava/lang/Object;` @kind virtual;
  #L3ee9fa.  v0:= temp @kind object;
  #L3ee9fc.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eeadc.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3eeae0.  if v0 == 0 then goto L3eeafe;
  #L3eeae4.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` @kind boolean;
  #L3eeae8.  if v1 == 0 then goto L3eeaee;
  #L3eeaec.  goto L3eeafe;
  #L3eeaee.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3eeaf2.  call `addOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.addOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L3eeaf8.  v0:= 1I;
  #L3eeafa.  v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` := v0 @kind boolean;
  #L3eeafe.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eeb10.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3eeb14.  if v0 == 0 then goto L3eeb32;
  #L3eeb18.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` @kind boolean;
  #L3eeb1c.  if v1 != 0 then goto L3eeb22;
  #L3eeb20.  goto L3eeb32;
  #L3eeb22.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3eeb26.  call `removeOnAttachStateChangeListener`(v1, v0) @signature `Landroid/view/View;.removeOnAttachStateChangeListener:(Landroid/view/View$OnAttachStateChangeListener;)V` @kind virtual;
  #L3eeb2c.  v0:= 0I;
  #L3eeb2e.  v2.`com.bumptech.glide.request.target.ViewTarget.e` @type ^`boolean` := v0 @kind boolean;
  #L3eeb32.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.f:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3eec28.  v0:= 1I;
  #L3eec2a.  `@@com.bumptech.glide.request.target.ViewTarget.f` @type ^`boolean` := v0 @kind boolean;
  #L3eec2e.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3eec32.  v1:= `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int`;
  #L3eec36.  call `setTag`(v0, v1, v3) @signature `Landroid/view/View;.setTag:(ILjava/lang/Object;)V` @kind virtual;
  #L3eec3c.  return @kind void;
}
procedure `void` `setTagId`(`int` v1 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setTagId:(I)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eec50.  v0:= `@@com.bumptech.glide.request.target.ViewTarget.f` @type ^`boolean` @kind boolean;
  #L3eec54.  if v0 != 0 then goto L3eec5e;
  #L3eec58.  `@@com.bumptech.glide.request.target.ViewTarget.g` @type ^`int` := v1;
  #L3eec5c.  return @kind void;
  #L3eec5e.  v1:= new `java.lang.IllegalArgumentException`;
  #L3eec62.  v0:= "You cannot set the tag id more than once or change the tag id after the first request has been made" @kind object;
  #L3eec66.  call `<init>`(v1, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3eec6c.  throw v1;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `clearOnDetach`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.clearOnDetach:()Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3ee9a0.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` @kind object;
  #L3ee9a4.  if v0 == 0 then goto L3ee9aa;
  #L3ee9a8.  return v1 @kind object;
  #L3ee9aa.  v0:= new `com.bumptech.glide.request.target.ViewTarget$a`;
  #L3ee9ae.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$a;.<init>:(Lcom/bumptech/glide/request/target/ViewTarget;)V` @kind direct;
  #L3ee9b4.  v1.`com.bumptech.glide.request.target.ViewTarget.c` @type ^`android.view.View$OnAttachStateChangeListener` := v0 @kind object;
  #L3ee9b8.  call `b`(v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @kind direct;
  #L3ee9be.  return v1 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3eeb94.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind virtual;
  #L3eeb9a.  v0:= temp @kind object;
  #L3eeb9c.  if v0 == 0 then goto L3eebb2;
  #L3eeba0.  v1:= 1I;
  #L3eeba2.  v2.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` := v1 @kind boolean;
  #L3eeba6.  call `clear`(v0) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3eebac.  v0:= 0I;
  #L3eebae.  v2.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` := v0 @kind boolean;
  #L3eebb2.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.e:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3eebe0.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind virtual;
  #L3eebe6.  v0:= temp @kind object;
  #L3eebe8.  if v0 == 0 then goto L3eebfe;
  #L3eebec.  call temp:= `isCleared`(v0) @signature `Lcom/bumptech/glide/request/Request;.isCleared:()Z` @kind interface;
  #L3eebf2.  v1:= temp;
  #L3eebf4.  if v1 == 0 then goto L3eebfe;
  #L3eebf8.  call `begin`(v0) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3eebfe.  return @kind void;
}
procedure `com.bumptech.glide.request.Request` `getRequest`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getRequest:()Lcom/bumptech/glide/request/Request;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3ee960.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.a:()Ljava/lang/Object;` @kind direct;
  #L3ee966.  v0:= temp @kind object;
  #L3ee968.  if v0 == 0 then goto L3ee98a;
  #L3ee96c.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.request.Request` @kind boolean;
  #L3ee970.  if v1 == 0 then goto L3ee97a;
  #L3ee974.  v0:= (`com.bumptech.glide.request.Request`) v0 @kind object;
  #L3ee978.  goto L3ee98c;
  #L3ee97a.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ee97e.  v1:= "You must not call setTag() on a view Glide is targeting" @kind object;
  #L3ee982.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ee988.  throw v0;
  #L3ee98a.  v0:= 0I;
  #L3ee98c.  return v0 @kind object;
}
procedure `void` `getSize`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getSize:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eeac0.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3eeac4.  call `d`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.d:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind virtual;
  #L3eeaca.  return @kind void;
}
procedure `android.view.View` `getView`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.getView:()Landroid/view/View;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ee948.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3ee94c.  return v0 @kind object;
}
procedure `void` `onLoadCleared`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3eeb44.  call `onLoadCleared`(v0, v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.onLoadCleared:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L3eeb4a.  v1:= v0.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3eeb4e.  call `b`(v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.b:()V` @kind virtual;
  #L3eeb54.  v1:= v0.`com.bumptech.glide.request.target.ViewTarget.d` @type ^`boolean` @kind boolean;
  #L3eeb58.  if v1 != 0 then goto L3eeb62;
  #L3eeb5c.  call `c`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.c:()V` @kind direct;
  #L3eeb62.  return @kind void;
}
procedure `void` `onLoadStarted`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @AccessFlag PUBLIC {
    temp;

  #L3eeb74.  call `onLoadStarted`(v0, v1) @signature `Lcom/bumptech/glide/request/target/BaseTarget;.onLoadStarted:(Landroid/graphics/drawable/Drawable;)V` @kind super;
  #L3eeb7a.  call `b`(v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.b:()V` @kind direct;
  #L3eeb80.  return @kind void;
}
procedure `void` `removeCallback`(`com.bumptech.glide.request.target.ViewTarget` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.removeCallback:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3eebc4.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3eebc8.  call `k`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.k:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @kind virtual;
  #L3eebce.  return @kind void;
}
procedure `void` `setRequest`(`com.bumptech.glide.request.target.ViewTarget` v0 @kind this, `com.bumptech.glide.request.Request` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;

  #L3eec10.  call `f`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.f:(Ljava/lang/Object;)V` @kind direct;
  #L3eec16.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eea10.  v0:= new `java.lang.StringBuilder`;
  #L3eea14.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3eea1a.  v1:= "Target for: " @kind object;
  #L3eea1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eea24.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget.view` @type ^`android.view.View` @kind object;
  #L3eea28.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3eea2e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3eea34.  v0:= temp @kind object;
  #L3eea36.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `waitForLayout`(`com.bumptech.glide.request.target.ViewTarget` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget;.waitForLayout:()Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3ee9d0.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget.b` @type ^`com.bumptech.glide.request.target.ViewTarget$b` @kind object;
  #L3ee9d4.  v1:= 1I;
  #L3ee9d6.  v0.`com.bumptech.glide.request.target.ViewTarget$b.c` @type ^`boolean` := v1 @kind boolean;
  #L3ee9da.  return v2 @kind object;
}
