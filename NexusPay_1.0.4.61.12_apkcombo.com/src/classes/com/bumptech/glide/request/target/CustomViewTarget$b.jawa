record `com.bumptech.glide.request.target.CustomViewTarget$b` @kind class @AccessFlag FINAL {
  `android.view.View` `com.bumptech.glide.request.target.CustomViewTarget$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.target.CustomViewTarget$b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.target.CustomViewTarget$b.c` @AccessFlag ;
  `com.bumptech.glide.request.target.CustomViewTarget$b$a` `com.bumptech.glide.request.target.CustomViewTarget$b.d` @AccessFlag PRIVATE;
}
global `java.lang.Integer` `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @AccessFlag STATIC;
procedure `void` `<init>`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ed3d0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ed3d6.  v0:= new `java.util.ArrayList`;
  #L3ed3da.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ed3e0.  v1.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` := v0 @kind object;
  #L3ed3e4.  v1.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` := v2 @kind object;
  #L3ed3e8.  return @kind void;
}
procedure `int` `c`(`android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.c:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3ed220.  v0:= `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3ed224.  if v0 != 0 then goto L3ed278;
  #L3ed228.  v0:= "window" @kind object;
  #L3ed22c.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3ed232.  v1:= temp @kind object;
  #L3ed234.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3ed238.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ed23e.  v1:= temp @kind object;
  #L3ed240.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3ed244.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L3ed24a.  v1:= temp @kind object;
  #L3ed24c.  v0:= new `android.graphics.Point`;
  #L3ed250.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L3ed256.  call `getSize`(v1, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L3ed25c.  v1:= v0.`android.graphics.Point.x` @type ^`int`;
  #L3ed260.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L3ed264.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ed26a.  v1:= temp;
  #L3ed26c.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ed272.  v1:= temp @kind object;
  #L3ed274.  `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L3ed278.  v1:= `@@com.bumptech.glide.request.target.CustomViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3ed27c.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ed282.  v1:= temp;
  #L3ed284.  return v1;
}
procedure `int` `e`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ed298.  v0:= v4 - v5 @kind int;
  #L3ed29c.  if v0 <= 0 then goto L3ed2a2;
  #L3ed2a0.  return v0;
  #L3ed2a2.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.c` @type ^`boolean` @kind boolean;
  #L3ed2a6.  v1:= 0I;
  #L3ed2a8.  if v0 == 0 then goto L3ed2be;
  #L3ed2ac.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed2b0.  call temp:= `isLayoutRequested`(v0) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3ed2b6.  v0:= temp;
  #L3ed2b8.  if v0 == 0 then goto L3ed2be;
  #L3ed2bc.  return v1;
  #L3ed2be.  v3:= v3 - v5 @kind int;
  #L3ed2c0.  if v3 <= 0 then goto L3ed2c6;
  #L3ed2c4.  return v3;
  #L3ed2c6.  v3:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed2ca.  call temp:= `isLayoutRequested`(v3) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3ed2d0.  v3:= temp;
  #L3ed2d2.  if v3 != 0 then goto L3ed30e;
  #L3ed2d6.  v3:= -2I;
  #L3ed2d8.  if v4 != v3 then goto L3ed30e;
  #L3ed2dc.  v3:= 4I;
  #L3ed2de.  v4:= "CustomViewTarget" @kind object;
  #L3ed2e2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ed2e8.  v3:= temp;
  #L3ed2ea.  if v3 == 0 then goto L3ed2f8;
  #L3ed2ee.  v3:= "Glide treats LayoutParams.WRAP_CONTENT as a request for an image the size of this device's screen dimensions. If you want to load the original image and are ok with the corresponding memory cost and OOMs (depending on the input size), use .override(Target.SIZE_ORIGINAL). Otherwise, use LayoutParams.MATCH_PARENT, set layout_width and layout_height to fixed dimension, or use .override() with fixed dimensions." @kind object;
  #L3ed2f2.  call temp:= `i`(v4, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ed2f8.  v3:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed2fc.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3ed302.  v3:= temp @kind object;
  #L3ed304.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.c:(Landroid/content/Context;)I` @kind static;
  #L3ed30a.  v3:= temp;
  #L3ed30c.  return v3;
  #L3ed30e.  return v1;
}
procedure `int` `f`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ed320.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed324.  call temp:= `getPaddingTop`(v0) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L3ed32a.  v0:= temp;
  #L3ed32c.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed330.  call temp:= `getPaddingBottom`(v1) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L3ed336.  v1:= temp;
  #L3ed338.  v0:= v0 + v1 @kind int;
  #L3ed33a.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed33e.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ed344.  v1:= temp @kind object;
  #L3ed346.  if v1 == 0 then goto L3ed350;
  #L3ed34a.  v1:= v1.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L3ed34e.  goto L3ed352;
  #L3ed350.  v1:= 0I;
  #L3ed352.  v2:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed356.  call temp:= `getHeight`(v2) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L3ed35c.  v2:= temp;
  #L3ed35e.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @kind direct;
  #L3ed364.  v0:= temp;
  #L3ed366.  return v0;
}
procedure `int` `g`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ed378.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed37c.  call temp:= `getPaddingLeft`(v0) @signature `Landroid/view/View;.getPaddingLeft:()I` @kind virtual;
  #L3ed382.  v0:= temp;
  #L3ed384.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed388.  call temp:= `getPaddingRight`(v1) @signature `Landroid/view/View;.getPaddingRight:()I` @kind virtual;
  #L3ed38e.  v1:= temp;
  #L3ed390.  v0:= v0 + v1 @kind int;
  #L3ed392.  v1:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed396.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ed39c.  v1:= temp @kind object;
  #L3ed39e.  if v1 == 0 then goto L3ed3a8;
  #L3ed3a2.  v1:= v1.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L3ed3a6.  goto L3ed3aa;
  #L3ed3a8.  v1:= 0I;
  #L3ed3aa.  v2:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed3ae.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L3ed3b4.  v2:= temp;
  #L3ed3b6.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.e:(III)I` @kind direct;
  #L3ed3bc.  v0:= temp;
  #L3ed3be.  return v0;
}
procedure `boolean` `h`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ed1c8.  if v2 > 0 then goto L3ed1da;
  #L3ed1cc.  v0:= -2147483648I;
  #L3ed1d0.  if v2 != v0 then goto L3ed1d6;
  #L3ed1d4.  goto L3ed1da;
  #L3ed1d6.  v2:= 0I;
  #L3ed1d8.  goto L3ed1dc;
  #L3ed1da.  v2:= 1I;
  #L3ed1dc.  return v2;
}
procedure `boolean` `i`(`com.bumptech.glide.request.target.CustomViewTarget$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @AccessFlag PRIVATE {
    temp;

  #L3ed1f0.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @kind direct;
  #L3ed1f6.  v1:= temp;
  #L3ed1f8.  if v1 == 0 then goto L3ed20c;
  #L3ed1fc.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.h:(I)Z` @kind direct;
  #L3ed202.  v1:= temp;
  #L3ed204.  if v1 == 0 then goto L3ed20c;
  #L3ed208.  v1:= 1I;
  #L3ed20a.  goto L3ed20e;
  #L3ed20c.  v1:= 0I;
  #L3ed20e.  return v1;
}
procedure `void` `j`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.j:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ed508.  v0:= new `java.util.ArrayList`;
  #L3ed50c.  v1:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed510.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ed516.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ed51c.  v0:= temp @kind object;
  #L3ed51e.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ed524.  v1:= temp;
  #L3ed526.  if v1 == 0 then goto L3ed53e;
  #L3ed52a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ed530.  v1:= temp @kind object;
  #L3ed532.  v1:= (`com.bumptech.glide.request.target.SizeReadyCallback`) v1 @kind object;
  #L3ed536.  call `onSizeReady`(v1, v3, v4) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3ed53c.  goto L3ed51e;
  #L3ed53e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ed3fc.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed400.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ed406.  v0:= temp;
  #L3ed408.  if v0 == 0 then goto L3ed40e;
  #L3ed40c.  return @kind void;
  #L3ed40e.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @kind direct;
  #L3ed414.  v0:= temp;
  #L3ed416.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @kind direct;
  #L3ed41c.  v1:= temp;
  #L3ed41e.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @kind direct;
  #L3ed424.  v2:= temp;
  #L3ed426.  if v2 != 0 then goto L3ed42c;
  #L3ed42a.  return @kind void;
  #L3ed42c.  call `j`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.j:(II)V` @kind direct;
  #L3ed432.  call `b`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.b:()V` @kind virtual;
  #L3ed438.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.request.target.CustomViewTarget$b` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ed44c.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed450.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3ed456.  v0:= temp @kind object;
  #L3ed458.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L3ed45e.  v1:= temp;
  #L3ed460.  if v1 == 0 then goto L3ed46e;
  #L3ed464.  v1:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` @kind object;
  #L3ed468.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3ed46e.  v0:= 0I;
  #L3ed470.  v2.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` := v0 @kind object;
  #L3ed474.  v0:= v2.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed478.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ed47e.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.request.target.CustomViewTarget$b` v3 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v4 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.d:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ed490.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.g:()I` @kind direct;
  #L3ed496.  v0:= temp;
  #L3ed498.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.f:()I` @kind direct;
  #L3ed49e.  v1:= temp;
  #L3ed4a0.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.i:(II)Z` @kind direct;
  #L3ed4a6.  v2:= temp;
  #L3ed4a8.  if v2 == 0 then goto L3ed4b4;
  #L3ed4ac.  call `onSizeReady`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3ed4b2.  return @kind void;
  #L3ed4b4.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed4b8.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ed4be.  v0:= temp;
  #L3ed4c0.  if v0 != 0 then goto L3ed4ce;
  #L3ed4c4.  v0:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed4c8.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ed4ce.  v4:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` @kind object;
  #L3ed4d2.  if v4 != 0 then goto L3ed4f6;
  #L3ed4d6.  v4:= v3.`com.bumptech.glide.request.target.CustomViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ed4da.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3ed4e0.  v4:= temp @kind object;
  #L3ed4e2.  v0:= new `com.bumptech.glide.request.target.CustomViewTarget$b$a`;
  #L3ed4e6.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b$a;.<init>:(Lcom/bumptech/glide/request/target/CustomViewTarget$b;)V` @kind direct;
  #L3ed4ec.  v3.`com.bumptech.glide.request.target.CustomViewTarget$b.d` @type ^`com.bumptech.glide.request.target.CustomViewTarget$b$a` := v0 @kind object;
  #L3ed4f0.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3ed4f6.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.request.target.CustomViewTarget$b` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/CustomViewTarget$b;.k:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;

  #L3ed550.  v0:= v1.`com.bumptech.glide.request.target.CustomViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ed554.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3ed55a.  return @kind void;
}
