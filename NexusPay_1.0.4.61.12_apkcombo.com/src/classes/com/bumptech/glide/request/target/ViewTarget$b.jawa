record `com.bumptech.glide.request.target.ViewTarget$b` @kind class @AccessFlag FINAL {
  `android.view.View` `com.bumptech.glide.request.target.ViewTarget$b.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.request.target.ViewTarget$b.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.request.target.ViewTarget$b.c` @AccessFlag ;
  `com.bumptech.glide.request.target.ViewTarget$b$a` `com.bumptech.glide.request.target.ViewTarget$b.d` @AccessFlag PRIVATE;
}
global `java.lang.Integer` `@@com.bumptech.glide.request.target.ViewTarget$b.e` @AccessFlag STATIC;
procedure `void` `<init>`(`com.bumptech.glide.request.target.ViewTarget$b` v1 @kind this, `android.view.View` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.<init>:(Landroid/view/View;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3ee7ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ee7b2.  v0:= new `java.util.ArrayList`;
  #L3ee7b6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3ee7bc.  v1.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` := v0 @kind object;
  #L3ee7c0.  v1.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` := v2 @kind object;
  #L3ee7c4.  return @kind void;
}
procedure `int` `c`(`android.content.Context` v1 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.c:(Landroid/content/Context;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3ee5fc.  v0:= `@@com.bumptech.glide.request.target.ViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3ee600.  if v0 != 0 then goto L3ee654;
  #L3ee604.  v0:= "window" @kind object;
  #L3ee608.  call temp:= `getSystemService`(v1, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3ee60e.  v1:= temp @kind object;
  #L3ee610.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3ee614.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ee61a.  v1:= temp @kind object;
  #L3ee61c.  v1:= (`android.view.WindowManager`) v1 @kind object;
  #L3ee620.  call temp:= `getDefaultDisplay`(v1) @signature `Landroid/view/WindowManager;.getDefaultDisplay:()Landroid/view/Display;` @kind interface;
  #L3ee626.  v1:= temp @kind object;
  #L3ee628.  v0:= new `android.graphics.Point`;
  #L3ee62c.  call `<init>`(v0) @signature `Landroid/graphics/Point;.<init>:()V` @kind direct;
  #L3ee632.  call `getSize`(v1, v0) @signature `Landroid/view/Display;.getSize:(Landroid/graphics/Point;)V` @kind virtual;
  #L3ee638.  v1:= v0.`android.graphics.Point.x` @type ^`int`;
  #L3ee63c.  v0:= v0.`android.graphics.Point.y` @type ^`int`;
  #L3ee640.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3ee646.  v1:= temp;
  #L3ee648.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3ee64e.  v1:= temp @kind object;
  #L3ee650.  `@@com.bumptech.glide.request.target.ViewTarget$b.e` @type ^`java.lang.Integer` := v1 @kind object;
  #L3ee654.  v1:= `@@com.bumptech.glide.request.target.ViewTarget$b.e` @type ^`java.lang.Integer` @kind object;
  #L3ee658.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3ee65e.  v1:= temp;
  #L3ee660.  return v1;
}
procedure `int` `e`(`com.bumptech.glide.request.target.ViewTarget$b` v2 @kind this, `int` v3 , `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.e:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ee674.  v0:= v4 - v5 @kind int;
  #L3ee678.  if v0 <= 0 then goto L3ee67e;
  #L3ee67c.  return v0;
  #L3ee67e.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$b.c` @type ^`boolean` @kind boolean;
  #L3ee682.  v1:= 0I;
  #L3ee684.  if v0 == 0 then goto L3ee69a;
  #L3ee688.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee68c.  call temp:= `isLayoutRequested`(v0) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3ee692.  v0:= temp;
  #L3ee694.  if v0 == 0 then goto L3ee69a;
  #L3ee698.  return v1;
  #L3ee69a.  v3:= v3 - v5 @kind int;
  #L3ee69c.  if v3 <= 0 then goto L3ee6a2;
  #L3ee6a0.  return v3;
  #L3ee6a2.  v3:= v2.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee6a6.  call temp:= `isLayoutRequested`(v3) @signature `Landroid/view/View;.isLayoutRequested:()Z` @kind virtual;
  #L3ee6ac.  v3:= temp;
  #L3ee6ae.  if v3 != 0 then goto L3ee6ea;
  #L3ee6b2.  v3:= -2I;
  #L3ee6b4.  if v4 != v3 then goto L3ee6ea;
  #L3ee6b8.  v3:= 4I;
  #L3ee6ba.  v4:= "ViewTarget" @kind object;
  #L3ee6be.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3ee6c4.  v3:= temp;
  #L3ee6c6.  if v3 == 0 then goto L3ee6d4;
  #L3ee6ca.  v3:= "Glide treats LayoutParams.WRAP_CONTENT as a request for an image the size of this device's screen dimensions. If you want to load the original image and are ok with the corresponding memory cost and OOMs (depending on the input size), use override(Target.SIZE_ORIGINAL). Otherwise, use LayoutParams.MATCH_PARENT, set layout_width and layout_height to fixed dimension, or use .override() with fixed dimensions." @kind object;
  #L3ee6ce.  call temp:= `i`(v4, v3) @signature `Landroid/util/Log;.i:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3ee6d4.  v3:= v2.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee6d8.  call temp:= `getContext`(v3) @signature `Landroid/view/View;.getContext:()Landroid/content/Context;` @kind virtual;
  #L3ee6de.  v3:= temp @kind object;
  #L3ee6e0.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.c:(Landroid/content/Context;)I` @kind static;
  #L3ee6e6.  v3:= temp;
  #L3ee6e8.  return v3;
  #L3ee6ea.  return v1;
}
procedure `int` `f`(`com.bumptech.glide.request.target.ViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.f:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ee6fc.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee700.  call temp:= `getPaddingTop`(v0) @signature `Landroid/view/View;.getPaddingTop:()I` @kind virtual;
  #L3ee706.  v0:= temp;
  #L3ee708.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee70c.  call temp:= `getPaddingBottom`(v1) @signature `Landroid/view/View;.getPaddingBottom:()I` @kind virtual;
  #L3ee712.  v1:= temp;
  #L3ee714.  v0:= v0 + v1 @kind int;
  #L3ee716.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee71a.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ee720.  v1:= temp @kind object;
  #L3ee722.  if v1 == 0 then goto L3ee72c;
  #L3ee726.  v1:= v1.`android.view.ViewGroup$LayoutParams.height` @type ^`int`;
  #L3ee72a.  goto L3ee72e;
  #L3ee72c.  v1:= 0I;
  #L3ee72e.  v2:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee732.  call temp:= `getHeight`(v2) @signature `Landroid/view/View;.getHeight:()I` @kind virtual;
  #L3ee738.  v2:= temp;
  #L3ee73a.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.e:(III)I` @kind direct;
  #L3ee740.  v0:= temp;
  #L3ee742.  return v0;
}
procedure `int` `g`(`com.bumptech.glide.request.target.ViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3ee754.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee758.  call temp:= `getPaddingLeft`(v0) @signature `Landroid/view/View;.getPaddingLeft:()I` @kind virtual;
  #L3ee75e.  v0:= temp;
  #L3ee760.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee764.  call temp:= `getPaddingRight`(v1) @signature `Landroid/view/View;.getPaddingRight:()I` @kind virtual;
  #L3ee76a.  v1:= temp;
  #L3ee76c.  v0:= v0 + v1 @kind int;
  #L3ee76e.  v1:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee772.  call temp:= `getLayoutParams`(v1) @signature `Landroid/view/View;.getLayoutParams:()Landroid/view/ViewGroup$LayoutParams;` @kind virtual;
  #L3ee778.  v1:= temp @kind object;
  #L3ee77a.  if v1 == 0 then goto L3ee784;
  #L3ee77e.  v1:= v1.`android.view.ViewGroup$LayoutParams.width` @type ^`int`;
  #L3ee782.  goto L3ee786;
  #L3ee784.  v1:= 0I;
  #L3ee786.  v2:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee78a.  call temp:= `getWidth`(v2) @signature `Landroid/view/View;.getWidth:()I` @kind virtual;
  #L3ee790.  v2:= temp;
  #L3ee792.  call temp:= `e`(v3, v2, v1, v0) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.e:(III)I` @kind direct;
  #L3ee798.  v0:= temp;
  #L3ee79a.  return v0;
}
procedure `boolean` `h`(`com.bumptech.glide.request.target.ViewTarget$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.h:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3ee5a4.  if v2 > 0 then goto L3ee5b6;
  #L3ee5a8.  v0:= -2147483648I;
  #L3ee5ac.  if v2 != v0 then goto L3ee5b2;
  #L3ee5b0.  goto L3ee5b6;
  #L3ee5b2.  v2:= 0I;
  #L3ee5b4.  goto L3ee5b8;
  #L3ee5b6.  v2:= 1I;
  #L3ee5b8.  return v2;
}
procedure `boolean` `i`(`com.bumptech.glide.request.target.ViewTarget$b` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.i:(II)Z` @AccessFlag PRIVATE {
    temp;

  #L3ee5cc.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.h:(I)Z` @kind direct;
  #L3ee5d2.  v1:= temp;
  #L3ee5d4.  if v1 == 0 then goto L3ee5e8;
  #L3ee5d8.  call temp:= `h`(v0, v2) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.h:(I)Z` @kind direct;
  #L3ee5de.  v1:= temp;
  #L3ee5e0.  if v1 == 0 then goto L3ee5e8;
  #L3ee5e4.  v1:= 1I;
  #L3ee5e6.  goto L3ee5ea;
  #L3ee5e8.  v1:= 0I;
  #L3ee5ea.  return v1;
}
procedure `void` `j`(`com.bumptech.glide.request.target.ViewTarget$b` v2 @kind this, `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.j:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3ee8e4.  v0:= new `java.util.ArrayList`;
  #L3ee8e8.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee8ec.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3ee8f2.  call temp:= `iterator`(v0) @signature `Ljava/util/ArrayList;.iterator:()Ljava/util/Iterator;` @kind virtual;
  #L3ee8f8.  v0:= temp @kind object;
  #L3ee8fa.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3ee900.  v1:= temp;
  #L3ee902.  if v1 == 0 then goto L3ee91a;
  #L3ee906.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3ee90c.  v1:= temp @kind object;
  #L3ee90e.  v1:= (`com.bumptech.glide.request.target.SizeReadyCallback`) v1 @kind object;
  #L3ee912.  call `onSizeReady`(v1, v3, v4) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3ee918.  goto L3ee8fa;
  #L3ee91a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.request.target.ViewTarget$b` v3 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ee7d8.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee7dc.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3ee7e2.  v0:= temp;
  #L3ee7e4.  if v0 == 0 then goto L3ee7ea;
  #L3ee7e8.  return @kind void;
  #L3ee7ea.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.g:()I` @kind direct;
  #L3ee7f0.  v0:= temp;
  #L3ee7f2.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.f:()I` @kind direct;
  #L3ee7f8.  v1:= temp;
  #L3ee7fa.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.i:(II)Z` @kind direct;
  #L3ee800.  v2:= temp;
  #L3ee802.  if v2 != 0 then goto L3ee808;
  #L3ee806.  return @kind void;
  #L3ee808.  call `j`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.j:(II)V` @kind direct;
  #L3ee80e.  call `b`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.b:()V` @kind virtual;
  #L3ee814.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.request.target.ViewTarget$b` v2 @kind this) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3ee828.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee82c.  call temp:= `getViewTreeObserver`(v0) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3ee832.  v0:= temp @kind object;
  #L3ee834.  call temp:= `isAlive`(v0) @signature `Landroid/view/ViewTreeObserver;.isAlive:()Z` @kind virtual;
  #L3ee83a.  v1:= temp;
  #L3ee83c.  if v1 == 0 then goto L3ee84a;
  #L3ee840.  v1:= v2.`com.bumptech.glide.request.target.ViewTarget$b.d` @type ^`com.bumptech.glide.request.target.ViewTarget$b$a` @kind object;
  #L3ee844.  call `removeOnPreDrawListener`(v0, v1) @signature `Landroid/view/ViewTreeObserver;.removeOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3ee84a.  v0:= 0I;
  #L3ee84c.  v2.`com.bumptech.glide.request.target.ViewTarget$b.d` @type ^`com.bumptech.glide.request.target.ViewTarget$b$a` := v0 @kind object;
  #L3ee850.  v0:= v2.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee854.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3ee85a.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.request.target.ViewTarget$b` v3 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v4 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.d:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3ee86c.  call temp:= `g`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.g:()I` @kind direct;
  #L3ee872.  v0:= temp;
  #L3ee874.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.f:()I` @kind direct;
  #L3ee87a.  v1:= temp;
  #L3ee87c.  call temp:= `i`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.i:(II)Z` @kind direct;
  #L3ee882.  v2:= temp;
  #L3ee884.  if v2 == 0 then goto L3ee890;
  #L3ee888.  call `onSizeReady`(v4, v0, v1) @signature `Lcom/bumptech/glide/request/target/SizeReadyCallback;.onSizeReady:(II)V` @kind interface;
  #L3ee88e.  return @kind void;
  #L3ee890.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee894.  call temp:= `contains`(v0, v4) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3ee89a.  v0:= temp;
  #L3ee89c.  if v0 != 0 then goto L3ee8aa;
  #L3ee8a0.  v0:= v3.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee8a4.  call temp:= `add`(v0, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3ee8aa.  v4:= v3.`com.bumptech.glide.request.target.ViewTarget$b.d` @type ^`com.bumptech.glide.request.target.ViewTarget$b$a` @kind object;
  #L3ee8ae.  if v4 != 0 then goto L3ee8d2;
  #L3ee8b2.  v4:= v3.`com.bumptech.glide.request.target.ViewTarget$b.a` @type ^`android.view.View` @kind object;
  #L3ee8b6.  call temp:= `getViewTreeObserver`(v4) @signature `Landroid/view/View;.getViewTreeObserver:()Landroid/view/ViewTreeObserver;` @kind virtual;
  #L3ee8bc.  v4:= temp @kind object;
  #L3ee8be.  v0:= new `com.bumptech.glide.request.target.ViewTarget$b$a`;
  #L3ee8c2.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b$a;.<init>:(Lcom/bumptech/glide/request/target/ViewTarget$b;)V` @kind direct;
  #L3ee8c8.  v3.`com.bumptech.glide.request.target.ViewTarget$b.d` @type ^`com.bumptech.glide.request.target.ViewTarget$b$a` := v0 @kind object;
  #L3ee8cc.  call `addOnPreDrawListener`(v4, v0) @signature `Landroid/view/ViewTreeObserver;.addOnPreDrawListener:(Landroid/view/ViewTreeObserver$OnPreDrawListener;)V` @kind virtual;
  #L3ee8d2.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.request.target.ViewTarget$b` v1 @kind this, `com.bumptech.glide.request.target.SizeReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/request/target/ViewTarget$b;.k:(Lcom/bumptech/glide/request/target/SizeReadyCallback;)V` @AccessFlag  {
    temp;
    v0;

  #L3ee92c.  v0:= v1.`com.bumptech.glide.request.target.ViewTarget$b.b` @type ^`java.util.List` @kind object;
  #L3ee930.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3ee936.  return @kind void;
}
