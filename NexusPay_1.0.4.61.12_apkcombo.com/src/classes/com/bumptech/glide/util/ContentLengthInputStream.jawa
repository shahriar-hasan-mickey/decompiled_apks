record `com.bumptech.glide.util.ContentLengthInputStream` @kind class @AccessFlag PUBLIC_FINAL extends `java.io.FilterInputStream` @kind class {
  `long` `com.bumptech.glide.util.ContentLengthInputStream.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.util.ContentLengthInputStream.b` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.util.ContentLengthInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.<init>:(Ljava/io/InputStream;J)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3effac.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3effb2.  v0.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` := v2 @kind wide;
  #L3effb6.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.util.ContentLengthInputStream` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3efddc.  if v6 < 0 then goto L3efdec;
  #L3efde0.  v0:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3efde4.  v0:= v0 + v6 @kind int;
  #L3efde6.  v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int` := v0;
  #L3efdea.  goto L3efe04;
  #L3efdec.  v0:= v5.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3efdf0.  v2:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3efdf4.  v2:= (`long`) v2 @kind i2l;
  #L3efdf6.  v0:= v0 - v2 @kind long;
  #L3efdf8.  v2:= 0L;
  #L3efdfc.  v4:= lcmp(v0, v2);
  #L3efe00.  if v4 > 0 then goto L3efe06;
  #L3efe04.  return v6;
  #L3efe06.  v6:= new `java.io.IOException`;
  #L3efe0a.  v0:= new `java.lang.StringBuilder`;
  #L3efe0e.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3efe14.  v1:= "Failed to read all expected data, expected: " @kind object;
  #L3efe18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efe1e.  v1:= v5.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3efe22.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efe28.  v1:= ", but read: " @kind object;
  #L3efe2c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efe32.  v1:= v5.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3efe36.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efe3c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3efe42.  v0:= temp @kind object;
  #L3efe44.  call `<init>`(v6, v0) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3efe4a.  throw v6;
}
procedure `int` `b`(`java.lang.String` v4 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.b:(Ljava/lang/String;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3efe5c.  call temp:= `isEmpty`(v4) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3efe62.  v0:= temp;
  #L3efe64.  if v0 != 0 then goto L3efeae;
  #L3efe68.  call temp:= `parseInt`(v4) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3efe6e.  v4:= temp;
  #L3efe70.  goto L3efeb0;
  #L3efe72.  v0:= Exception @type ^`java.lang.NumberFormatException` @kind object;
  #L3efe74.  v1:= 3I;
  #L3efe76.  v2:= "ContentLengthStream" @kind object;
  #L3efe7a.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3efe80.  v1:= temp;
  #L3efe82.  if v1 == 0 then goto L3efeae;
  #L3efe86.  v1:= new `java.lang.StringBuilder`;
  #L3efe8a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3efe90.  v3:= "failed to parse content length header: " @kind object;
  #L3efe94.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efe9a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3efea0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3efea6.  v4:= temp @kind object;
  #L3efea8.  call temp:= `d`(v2, v4, v0) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3efeae.  v4:= -1I;
  #L3efeb0.  return v4;
  catch `java.lang.NumberFormatException` @[L3efe68..L3efe70] goto L3efe72;
}
procedure `java.io.InputStream` `obtain`(`java.io.InputStream` v1 @kind object, `long` v2 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3eff90.  v0:= new `com.bumptech.glide.util.ContentLengthInputStream`;
  #L3eff94.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.<init>:(Ljava/io/InputStream;J)V` @kind direct;
  #L3eff9a.  return v0 @kind object;
}
procedure `java.io.InputStream` `obtain`(`java.io.InputStream` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;Ljava/lang/String;)Ljava/io/InputStream;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3eff6c.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.b:(Ljava/lang/String;)I` @kind static;
  #L3eff72.  v3:= temp;
  #L3eff74.  v0:= (`long`) v3 @kind i2l;
  #L3eff76.  call temp:= `obtain`(v2, v0) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.obtain:(Ljava/io/InputStream;J)Ljava/io/InputStream;` @kind static;
  #L3eff7c.  v2:= temp @kind object;
  #L3eff7e.  return v2 @kind object;
}
procedure `int` `available`(`com.bumptech.glide.util.ContentLengthInputStream` v4 @kind this) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3efd90.  @monitorenter v4
  #L3efd92.  v0:= v4.`com.bumptech.glide.util.ContentLengthInputStream.a` @type ^`long` @kind wide;
  #L3efd96.  v2:= v4.`com.bumptech.glide.util.ContentLengthInputStream.b` @type ^`int`;
  #L3efd9a.  v2:= (`long`) v2 @kind i2l;
  #L3efd9c.  v0:= v0 - v2 @kind long;
  #L3efd9e.  v2:= v4.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3efda2.  call temp:= `available`(v2) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3efda8.  v2:= temp;
  #L3efdaa.  v2:= (`long`) v2 @kind i2l;
  #L3efdac.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(JJ)J` @kind static;
  #L3efdb2.  v0:= temp @kind wide;
  #L3efdb4.  v1:= (`int`) v0 @kind l2i;
  #L3efdb6.  @monitorexit v4
  #L3efdb8.  return v1;
  #L3efdba.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3efdbc.  @monitorexit v4
  #L3efdbe.  throw v0;
  catch `java.lang.Throwable` @[L3efd92..L3efdb4] goto L3efdba;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3efed4.  @monitorenter v2
  #L3efed6.  call temp:= `read`(v2) @signature `Ljava/io/FilterInputStream;.read:()I` @kind super;
  #L3efedc.  v0:= temp;
  #L3efede.  if v0 < 0 then goto L3efee6;
  #L3efee2.  v1:= 1I;
  #L3efee4.  goto L3efee8;
  #L3efee6.  v1:= -1I;
  #L3efee8.  call temp:= `a`(v2, v1) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @kind direct;
  #L3efeee.  @monitorexit v2
  #L3efef0.  return v0;
  #L3efef2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3efef4.  @monitorexit v2
  #L3efef6.  throw v0;
  catch `java.lang.Throwable` @[L3efed6..L3efeee] goto L3efef2;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v2 @kind this, `byte`[] v3 @kind object) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3eff14.  v0:= length @variable v3;
  #L3eff16.  v1:= 0I;
  #L3eff18.  call temp:= `read`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([BII)I` @kind virtual;
  #L3eff1e.  v3:= temp;
  #L3eff20.  return v3;
}
procedure `int` `read`(`com.bumptech.glide.util.ContentLengthInputStream` v0 @kind this, `byte`[] v1 @kind object, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;

  #L3eff34.  @monitorenter v0
  #L3eff36.  call temp:= `read`(v0, v1, v2, v3) @signature `Ljava/io/FilterInputStream;.read:([BII)I` @kind super;
  #L3eff3c.  v1:= temp;
  #L3eff3e.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/util/ContentLengthInputStream;.a:(I)I` @kind direct;
  #L3eff44.  @monitorexit v0
  #L3eff46.  return v1;
  #L3eff48.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3eff4a.  @monitorexit v0
  #L3eff4c.  throw v1;
  catch `java.lang.Throwable` @[L3eff36..L3eff44] goto L3eff48;
}
