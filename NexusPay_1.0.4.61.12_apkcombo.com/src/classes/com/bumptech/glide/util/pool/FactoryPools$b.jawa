record `com.bumptech.glide.util.pool.FactoryPools$b` @kind class @AccessFlag  extends `com.bumptech.glide.util.pool.FactoryPools$Factory` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.util.pool.FactoryPools$b` v0 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f13ec.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f13f2.  return @kind void;
}
procedure `java.util.List` `a`(`com.bumptech.glide.util.pool.FactoryPools$b` v1 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$b;.a:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f13d0.  v0:= new `java.util.ArrayList`;
  #L3f13d4.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3f13da.  return v0 @kind object;
}
procedure `java.lang.Object` `create`(`com.bumptech.glide.util.pool.FactoryPools$b` v1 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$b;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3f13b4.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$b;.a:()Ljava/util/List;` @kind virtual;
  #L3f13ba.  v0:= temp @kind object;
  #L3f13bc.  return v0 @kind object;
}
