record `com.bumptech.glide.util.pool.FactoryPools$d` @kind class @AccessFlag FINAL extends `androidx.core.util.Pools$Pool` @kind interface {
  `com.bumptech.glide.util.pool.FactoryPools$Factory` `com.bumptech.glide.util.pool.FactoryPools$d.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.util.pool.FactoryPools$Resetter` `com.bumptech.glide.util.pool.FactoryPools$d.b` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.util.pool.FactoryPools$d.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.util.pool.FactoryPools$d` v0 @kind this, `androidx.core.util.Pools$Pool` v1 @kind object, `com.bumptech.glide.util.pool.FactoryPools$Factory` v2 @kind object, `com.bumptech.glide.util.pool.FactoryPools$Resetter` v3 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$d;.<init>:(Landroidx/core/util/Pools$Pool;Lcom/bumptech/glide/util/pool/FactoryPools$Factory;Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f1528.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f152e.  v0.`com.bumptech.glide.util.pool.FactoryPools$d.c` @type ^`androidx.core.util.Pools$Pool` := v1 @kind object;
  #L3f1532.  v0.`com.bumptech.glide.util.pool.FactoryPools$d.a` @type ^`com.bumptech.glide.util.pool.FactoryPools$Factory` := v2 @kind object;
  #L3f1536.  v0.`com.bumptech.glide.util.pool.FactoryPools$d.b` @type ^`com.bumptech.glide.util.pool.FactoryPools$Resetter` := v3 @kind object;
  #L3f153a.  return @kind void;
}
procedure `java.lang.Object` `acquire`(`com.bumptech.glide.util.pool.FactoryPools$d` v4 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$d;.acquire:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f1498.  v0:= v4.`com.bumptech.glide.util.pool.FactoryPools$d.c` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3f149c.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3f14a2.  v0:= temp @kind object;
  #L3f14a4.  if v0 != 0 then goto L3f14f6;
  #L3f14a8.  v0:= v4.`com.bumptech.glide.util.pool.FactoryPools$d.a` @type ^`com.bumptech.glide.util.pool.FactoryPools$Factory` @kind object;
  #L3f14ac.  call temp:= `create`(v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$Factory;.create:()Ljava/lang/Object;` @kind interface;
  #L3f14b2.  v0:= temp @kind object;
  #L3f14b4.  v1:= 2I;
  #L3f14b6.  v2:= "FactoryPools" @kind object;
  #L3f14ba.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3f14c0.  v1:= temp;
  #L3f14c2.  if v1 == 0 then goto L3f14f6;
  #L3f14c6.  v1:= new `java.lang.StringBuilder`;
  #L3f14ca.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f14d0.  v3:= "Created new " @kind object;
  #L3f14d4.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f14da.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f14e0.  v3:= temp @kind object;
  #L3f14e2.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f14e8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f14ee.  v1:= temp @kind object;
  #L3f14f0.  call temp:= `v`(v2, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3f14f6.  v1:= instanceof @variable v0 @type ^`com.bumptech.glide.util.pool.FactoryPools$Poolable` @kind boolean;
  #L3f14fa.  if v1 == 0 then goto L3f1514;
  #L3f14fe.  v1:= v0 @kind object;
  #L3f1500.  v1:= (`com.bumptech.glide.util.pool.FactoryPools$Poolable`) v1 @kind object;
  #L3f1504.  call temp:= `getVerifier`(v1) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$Poolable;.getVerifier:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind interface;
  #L3f150a.  v1:= temp @kind object;
  #L3f150c.  v2:= 0I;
  #L3f150e.  call `a`(v1, v2) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.a:(Z)V` @kind virtual;
  #L3f1514.  return v0 @kind object;
}
procedure `boolean` `release`(`com.bumptech.glide.util.pool.FactoryPools$d` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$d;.release:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f1450.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.util.pool.FactoryPools$Poolable` @kind boolean;
  #L3f1454.  if v0 == 0 then goto L3f146e;
  #L3f1458.  v0:= v3 @kind object;
  #L3f145a.  v0:= (`com.bumptech.glide.util.pool.FactoryPools$Poolable`) v0 @kind object;
  #L3f145e.  call temp:= `getVerifier`(v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$Poolable;.getVerifier:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind interface;
  #L3f1464.  v0:= temp @kind object;
  #L3f1466.  v1:= 1I;
  #L3f1468.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.a:(Z)V` @kind virtual;
  #L3f146e.  v0:= v2.`com.bumptech.glide.util.pool.FactoryPools$d.b` @type ^`com.bumptech.glide.util.pool.FactoryPools$Resetter` @kind object;
  #L3f1472.  call `reset`(v0, v3) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$Resetter;.reset:(Ljava/lang/Object;)V` @kind interface;
  #L3f1478.  v0:= v2.`com.bumptech.glide.util.pool.FactoryPools$d.c` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3f147c.  call temp:= `release`(v0, v3) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3f1482.  v3:= temp;
  #L3f1484.  return v3;
}
