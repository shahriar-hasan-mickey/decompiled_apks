record `com.bumptech.glide.util.pool.FactoryPools$c` @kind class @AccessFlag  extends `com.bumptech.glide.util.pool.FactoryPools$Resetter` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.util.pool.FactoryPools$c` v0 @kind this) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$c;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3f1404.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f140a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.util.pool.FactoryPools$c` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$c;.a:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;

  #L3f1438.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3f143e.  return @kind void;
}
procedure `void` `reset`(`com.bumptech.glide.util.pool.FactoryPools$c` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$c;.reset:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3f141c.  v1:= (`java.util.List`) v1 @kind object;
  #L3f1420.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/util/pool/FactoryPools$c;.a:(Ljava/util/List;)V` @kind virtual;
  #L3f1426.  return @kind void;
}
