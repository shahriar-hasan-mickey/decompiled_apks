record `com.bumptech.glide.util.MultiClassKey` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.util.MultiClassKey.a` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.util.MultiClassKey.b` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.util.MultiClassKey.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.util.MultiClassKey` v0 @kind this) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f0b28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f0b2e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.MultiClassKey` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f0b40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f0b46.  call `set`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L3f0b4c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.util.MultiClassKey` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/util/MultiClassKey;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3f0b60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3f0b66.  call `set`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L3f0b6c.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.util.MultiClassKey` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/util/MultiClassKey;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3f0a08.  v0:= 1I;
  #L3f0a0a.  if v4 != v5 then goto L3f0a10;
  #L3f0a0e.  return v0;
  #L3f0a10.  v1:= 0I;
  #L3f0a12.  if v5 == 0 then goto L3f0a70;
  #L3f0a16.  v2:= constclass @type ^`com.bumptech.glide.util.MultiClassKey` @kind object;
  #L3f0a1a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3f0a20.  v3:= temp @kind object;
  #L3f0a22.  if v2 == v3 then goto L3f0a28;
  #L3f0a26.  goto L3f0a70;
  #L3f0a28.  v5:= (`com.bumptech.glide.util.MultiClassKey`) v5 @kind object;
  #L3f0a2c.  v2:= v4.`com.bumptech.glide.util.MultiClassKey.a` @type ^`java.lang.Class` @kind object;
  #L3f0a30.  v3:= v5.`com.bumptech.glide.util.MultiClassKey.a` @type ^`java.lang.Class` @kind object;
  #L3f0a34.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0a3a.  v2:= temp;
  #L3f0a3c.  if v2 != 0 then goto L3f0a42;
  #L3f0a40.  return v1;
  #L3f0a42.  v2:= v4.`com.bumptech.glide.util.MultiClassKey.b` @type ^`java.lang.Class` @kind object;
  #L3f0a46.  v3:= v5.`com.bumptech.glide.util.MultiClassKey.b` @type ^`java.lang.Class` @kind object;
  #L3f0a4a.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3f0a50.  v2:= temp;
  #L3f0a52.  if v2 != 0 then goto L3f0a58;
  #L3f0a56.  return v1;
  #L3f0a58.  v2:= v4.`com.bumptech.glide.util.MultiClassKey.c` @type ^`java.lang.Class` @kind object;
  #L3f0a5c.  v5:= v5.`com.bumptech.glide.util.MultiClassKey.c` @type ^`java.lang.Class` @kind object;
  #L3f0a60.  call temp:= `bothNullOrEqual`(v2, v5) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3f0a66.  v5:= temp;
  #L3f0a68.  if v5 != 0 then goto L3f0a6e;
  #L3f0a6c.  return v1;
  #L3f0a6e.  return v0;
  #L3f0a70.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.util.MultiClassKey` v2 @kind this) @signature `Lcom/bumptech/glide/util/MultiClassKey;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0a84.  v0:= v2.`com.bumptech.glide.util.MultiClassKey.a` @type ^`java.lang.Class` @kind object;
  #L3f0a88.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f0a8e.  v0:= temp;
  #L3f0a90.  v0:= v0 * 31;
  #L3f0a94.  v1:= v2.`com.bumptech.glide.util.MultiClassKey.b` @type ^`java.lang.Class` @kind object;
  #L3f0a98.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f0a9e.  v1:= temp;
  #L3f0aa0.  v0:= v0 + v1 @kind int;
  #L3f0aa2.  v0:= v0 * 31;
  #L3f0aa6.  v1:= v2.`com.bumptech.glide.util.MultiClassKey.c` @type ^`java.lang.Class` @kind object;
  #L3f0aaa.  if v1 == 0 then goto L3f0ab8;
  #L3f0aae.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3f0ab4.  v1:= temp;
  #L3f0ab6.  goto L3f0aba;
  #L3f0ab8.  v1:= 0I;
  #L3f0aba.  v0:= v0 + v1 @kind int;
  #L3f0abc.  return v0;
}
procedure `void` `set`(`com.bumptech.glide.util.MultiClassKey` v1 @kind this, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3f0b80.  v0:= 0I;
  #L3f0b82.  call `set`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @kind virtual;
  #L3f0b88.  return @kind void;
}
procedure `void` `set`(`com.bumptech.glide.util.MultiClassKey` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/util/MultiClassKey;.set:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3f0b9c.  v0.`com.bumptech.glide.util.MultiClassKey.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3f0ba0.  v0.`com.bumptech.glide.util.MultiClassKey.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3f0ba4.  v0.`com.bumptech.glide.util.MultiClassKey.c` @type ^`java.lang.Class` := v3 @kind object;
  #L3f0ba8.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.util.MultiClassKey` v2 @kind this) @signature `Lcom/bumptech/glide/util/MultiClassKey;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3f0ad0.  v0:= new `java.lang.StringBuilder`;
  #L3f0ad4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3f0ada.  v1:= "MultiClassKey{first=" @kind object;
  #L3f0ade.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0ae4.  v1:= v2.`com.bumptech.glide.util.MultiClassKey.a` @type ^`java.lang.Class` @kind object;
  #L3f0ae8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0aee.  v1:= ", second=" @kind object;
  #L3f0af2.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0af8.  v1:= v2.`com.bumptech.glide.util.MultiClassKey.b` @type ^`java.lang.Class` @kind object;
  #L3f0afc.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0b02.  v1:= 125I;
  #L3f0b06.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3f0b0c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3f0b12.  v0:= temp @kind object;
  #L3f0b14.  return v0 @kind object;
}
