record `com.bumptech.glide.ListPreloader` @kind class @AccessFlag PUBLIC extends `android.widget.AbsListView$OnScrollListener` @kind interface {
  `int` `com.bumptech.glide.ListPreloader.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.ListPreloader$b` `com.bumptech.glide.ListPreloader.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.RequestManager` `com.bumptech.glide.ListPreloader.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.ListPreloader$PreloadModelProvider` `com.bumptech.glide.ListPreloader.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.ListPreloader$PreloadSizeProvider` `com.bumptech.glide.ListPreloader.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.ListPreloader.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.ListPreloader.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.ListPreloader.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.ListPreloader.i` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.ListPreloader.j` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.ListPreloader` v1 @kind this, `com.bumptech.glide.RequestManager` v2 @kind object, `com.bumptech.glide.ListPreloader$PreloadModelProvider` v3 @kind object, `com.bumptech.glide.ListPreloader$PreloadSizeProvider` v4 @kind object, `int` v5 ) @signature `Lcom/bumptech/glide/ListPreloader;.<init>:(Lcom/bumptech/glide/RequestManager;Lcom/bumptech/glide/ListPreloader$PreloadModelProvider;Lcom/bumptech/glide/ListPreloader$PreloadSizeProvider;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c60ac.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c60b2.  v0:= -1I;
  #L3c60b4.  v1.`com.bumptech.glide.ListPreloader.h` @type ^`int` := v0;
  #L3c60b8.  v0:= 1I;
  #L3c60ba.  v1.`com.bumptech.glide.ListPreloader.j` @type ^`boolean` := v0 @kind boolean;
  #L3c60be.  v1.`com.bumptech.glide.ListPreloader.c` @type ^`com.bumptech.glide.RequestManager` := v2 @kind object;
  #L3c60c2.  v1.`com.bumptech.glide.ListPreloader.d` @type ^`com.bumptech.glide.ListPreloader$PreloadModelProvider` := v3 @kind object;
  #L3c60c6.  v1.`com.bumptech.glide.ListPreloader.e` @type ^`com.bumptech.glide.ListPreloader$PreloadSizeProvider` := v4 @kind object;
  #L3c60ca.  v1.`com.bumptech.glide.ListPreloader.a` @type ^`int` := v5;
  #L3c60ce.  v2:= new `com.bumptech.glide.ListPreloader$b`;
  #L3c60d2.  v5:= v5 + v0 @kind int;
  #L3c60d4.  call `<init>`(v2, v5) @signature `Lcom/bumptech/glide/ListPreloader$b;.<init>:(I)V` @kind direct;
  #L3c60da.  v1.`com.bumptech.glide.ListPreloader.b` @type ^`com.bumptech.glide.ListPreloader$b` := v2 @kind object;
  #L3c60de.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.ListPreloader` v4 @kind this) @signature `Lcom/bumptech/glide/ListPreloader;.a:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c60f0.  v0:= 0I;
  #L3c60f2.  v1:= 0I;
  #L3c60f4.  v2:= v4.`com.bumptech.glide.ListPreloader.b` @type ^`com.bumptech.glide.ListPreloader$b` @kind object;
  #L3c60f8.  v2:= v2.`com.bumptech.glide.ListPreloader$b.a` @type ^`java.util.Queue` @kind object;
  #L3c60fc.  call temp:= `size`(v2) @signature `Ljava/util/Queue;.size:()I` @kind interface;
  #L3c6102.  v2:= temp;
  #L3c6104.  if v1 >= v2 then goto L3c6124;
  #L3c6108.  v2:= v4.`com.bumptech.glide.ListPreloader.c` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c610c.  v3:= v4.`com.bumptech.glide.ListPreloader.b` @type ^`com.bumptech.glide.ListPreloader$b` @kind object;
  #L3c6110.  call temp:= `a`(v3, v0, v0) @signature `Lcom/bumptech/glide/ListPreloader$b;.a:(II)Lcom/bumptech/glide/ListPreloader$a;` @kind virtual;
  #L3c6116.  v3:= temp @kind object;
  #L3c6118.  call `clear`(v2, v3) @signature `Lcom/bumptech/glide/RequestManager;.clear:(Lcom/bumptech/glide/request/target/Target;)V` @kind virtual;
  #L3c611e.  v1:= v1 + 1;
  #L3c6122.  goto L3c60f4;
  #L3c6124.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.ListPreloader` v4 @kind this, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/ListPreloader;.b:(II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c61c4.  if v5 >= v6 then goto L3c61da;
  #L3c61c8.  v0:= v4.`com.bumptech.glide.ListPreloader.f` @type ^`int`;
  #L3c61cc.  call temp:= `max`(v0, v5) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3c61d2.  v0:= temp;
  #L3c61d4.  v1:= v0;
  #L3c61d6.  v0:= v6;
  #L3c61d8.  goto L3c61e8;
  #L3c61da.  v0:= v4.`com.bumptech.glide.ListPreloader.g` @type ^`int`;
  #L3c61de.  call temp:= `min`(v0, v5) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3c61e4.  v0:= temp;
  #L3c61e6.  v1:= v6;
  #L3c61e8.  v2:= v4.`com.bumptech.glide.ListPreloader.i` @type ^`int`;
  #L3c61ec.  call temp:= `min`(v2, v0) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3c61f2.  v0:= temp;
  #L3c61f4.  v2:= v4.`com.bumptech.glide.ListPreloader.i` @type ^`int`;
  #L3c61f8.  v3:= 0I;
  #L3c61fa.  call temp:= `max`(v3, v1) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3c6200.  v1:= temp;
  #L3c6202.  call temp:= `min`(v2, v1) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3c6208.  v1:= temp;
  #L3c620a.  if v5 >= v6 then goto L3c622e;
  #L3c620e.  v5:= v1;
  #L3c6210.  if v5 >= v0 then goto L3c624e;
  #L3c6214.  v6:= v4.`com.bumptech.glide.ListPreloader.d` @type ^`com.bumptech.glide.ListPreloader$PreloadModelProvider` @kind object;
  #L3c6218.  call temp:= `getPreloadItems`(v6, v5) @signature `Lcom/bumptech/glide/ListPreloader$PreloadModelProvider;.getPreloadItems:(I)Ljava/util/List;` @kind interface;
  #L3c621e.  v6:= temp @kind object;
  #L3c6220.  v2:= 1I;
  #L3c6222.  call `d`(v4, v6, v5, v2) @signature `Lcom/bumptech/glide/ListPreloader;.d:(Ljava/util/List;IZ)V` @kind direct;
  #L3c6228.  v5:= v5 + 1;
  #L3c622c.  goto L3c6210;
  #L3c622e.  v5:= v0 + -1;
  #L3c6232.  if v5 < v1 then goto L3c624e;
  #L3c6236.  v6:= v4.`com.bumptech.glide.ListPreloader.d` @type ^`com.bumptech.glide.ListPreloader$PreloadModelProvider` @kind object;
  #L3c623a.  call temp:= `getPreloadItems`(v6, v5) @signature `Lcom/bumptech/glide/ListPreloader$PreloadModelProvider;.getPreloadItems:(I)Ljava/util/List;` @kind interface;
  #L3c6240.  v6:= temp @kind object;
  #L3c6242.  call `d`(v4, v6, v5, v3) @signature `Lcom/bumptech/glide/ListPreloader;.d:(Ljava/util/List;IZ)V` @kind direct;
  #L3c6248.  v5:= v5 + -1;
  #L3c624c.  goto L3c6232;
  #L3c624e.  v4.`com.bumptech.glide.ListPreloader.g` @type ^`int` := v1;
  #L3c6252.  v4.`com.bumptech.glide.ListPreloader.f` @type ^`int` := v0;
  #L3c6256.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.ListPreloader` v1 @kind this, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/ListPreloader;.c:(IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c6188.  v0:= v1.`com.bumptech.glide.ListPreloader.j` @type ^`boolean` @kind boolean;
  #L3c618c.  if v0 == v3 then goto L3c619a;
  #L3c6190.  v1.`com.bumptech.glide.ListPreloader.j` @type ^`boolean` := v3 @kind boolean;
  #L3c6194.  call `a`(v1) @signature `Lcom/bumptech/glide/ListPreloader;.a:()V` @kind direct;
  #L3c619a.  if v3 == 0 then goto L3c61a4;
  #L3c619e.  v3:= v1.`com.bumptech.glide.ListPreloader.a` @type ^`int`;
  #L3c61a2.  goto L3c61aa;
  #L3c61a4.  v3:= v1.`com.bumptech.glide.ListPreloader.a` @type ^`int`;
  #L3c61a8.  v3:= -v3 @kind int;
  #L3c61aa.  v3:= v3 + v2 @kind int;
  #L3c61ac.  call `b`(v1, v2, v3) @signature `Lcom/bumptech/glide/ListPreloader;.b:(II)V` @kind direct;
  #L3c61b2.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.ListPreloader` v2 @kind this, `java.util.List` v3 @kind object, `int` v4 , `boolean` v5 ) @signature `Lcom/bumptech/glide/ListPreloader;.d:(Ljava/util/List;IZ)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c6268.  call temp:= `size`(v3) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3c626e.  v0:= temp;
  #L3c6270.  if v5 == 0 then goto L3c628e;
  #L3c6274.  v5:= 0I;
  #L3c6276.  if v5 >= v0 then goto L3c62aa;
  #L3c627a.  call temp:= `get`(v3, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c6280.  v1:= temp @kind object;
  #L3c6282.  call `e`(v2, v1, v4, v5) @signature `Lcom/bumptech/glide/ListPreloader;.e:(Ljava/lang/Object;II)V` @kind direct;
  #L3c6288.  v5:= v5 + 1;
  #L3c628c.  goto L3c6276;
  #L3c628e.  v0:= v0 + -1;
  #L3c6292.  if v0 < 0 then goto L3c62aa;
  #L3c6296.  call temp:= `get`(v3, v0) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3c629c.  v5:= temp @kind object;
  #L3c629e.  call `e`(v2, v5, v4, v0) @signature `Lcom/bumptech/glide/ListPreloader;.e:(Ljava/lang/Object;II)V` @kind direct;
  #L3c62a4.  v0:= v0 + -1;
  #L3c62a8.  goto L3c6292;
  #L3c62aa.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.ListPreloader` v2 @kind this, `java.lang.Object` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/ListPreloader;.e:(Ljava/lang/Object;II)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c62bc.  if v3 != 0 then goto L3c62c2;
  #L3c62c0.  return @kind void;
  #L3c62c2.  v0:= v2.`com.bumptech.glide.ListPreloader.e` @type ^`com.bumptech.glide.ListPreloader$PreloadSizeProvider` @kind object;
  #L3c62c6.  call temp:= `getPreloadSize`(v0, v3, v4, v5) @signature `Lcom/bumptech/glide/ListPreloader$PreloadSizeProvider;.getPreloadSize:(Ljava/lang/Object;II)[I` @kind interface;
  #L3c62cc.  v4:= temp @kind object;
  #L3c62ce.  if v4 != 0 then goto L3c62d4;
  #L3c62d2.  return @kind void;
  #L3c62d4.  v5:= v2.`com.bumptech.glide.ListPreloader.d` @type ^`com.bumptech.glide.ListPreloader$PreloadModelProvider` @kind object;
  #L3c62d8.  call temp:= `getPreloadRequestBuilder`(v5, v3) @signature `Lcom/bumptech/glide/ListPreloader$PreloadModelProvider;.getPreloadRequestBuilder:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind interface;
  #L3c62de.  v3:= temp @kind object;
  #L3c62e0.  if v3 != 0 then goto L3c62e6;
  #L3c62e4.  return @kind void;
  #L3c62e6.  v5:= v2.`com.bumptech.glide.ListPreloader.b` @type ^`com.bumptech.glide.ListPreloader$b` @kind object;
  #L3c62ea.  v0:= 0I;
  #L3c62ec.  v0:= v4[v0];
  #L3c62f0.  v1:= 1I;
  #L3c62f2.  v4:= v4[v1];
  #L3c62f6.  call temp:= `a`(v5, v0, v4) @signature `Lcom/bumptech/glide/ListPreloader$b;.a:(II)Lcom/bumptech/glide/ListPreloader$a;` @kind virtual;
  #L3c62fc.  v4:= temp @kind object;
  #L3c62fe.  call temp:= `into`(v3, v4) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c6304.  return @kind void;
}
procedure `void` `onScroll`(`com.bumptech.glide.ListPreloader` v0 @kind this, `android.widget.AbsListView` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/ListPreloader;.onScroll:(Landroid/widget/AbsListView;III)V` @AccessFlag PUBLIC {
    temp;

  #L3c6138.  v0.`com.bumptech.glide.ListPreloader.i` @type ^`int` := v4;
  #L3c613c.  v1:= v0.`com.bumptech.glide.ListPreloader.h` @type ^`int`;
  #L3c6140.  if v2 <= v1 then goto L3c6150;
  #L3c6144.  v3:= v3 + v2 @kind int;
  #L3c6146.  v1:= 1I;
  #L3c6148.  call `c`(v0, v3, v1) @signature `Lcom/bumptech/glide/ListPreloader;.c:(IZ)V` @kind direct;
  #L3c614e.  goto L3c615c;
  #L3c6150.  if v2 >= v1 then goto L3c615c;
  #L3c6154.  v1:= 0I;
  #L3c6156.  call `c`(v0, v2, v1) @signature `Lcom/bumptech/glide/ListPreloader;.c:(IZ)V` @kind direct;
  #L3c615c.  v0.`com.bumptech.glide.ListPreloader.h` @type ^`int` := v2;
  #L3c6160.  return @kind void;
}
procedure `void` `onScrollStateChanged`(`com.bumptech.glide.ListPreloader` v0 @kind this, `android.widget.AbsListView` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/ListPreloader;.onScrollStateChanged:(Landroid/widget/AbsListView;I)V` @AccessFlag PUBLIC {
    temp;

  #L3c6174.  return @kind void;
}
