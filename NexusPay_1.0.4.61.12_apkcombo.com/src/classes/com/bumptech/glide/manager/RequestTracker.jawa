record `com.bumptech.glide.manager.RequestTracker` @kind class @AccessFlag PUBLIC {
  `java.util.Set` `com.bumptech.glide.manager.RequestTracker.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.manager.RequestTracker.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.manager.RequestTracker.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e77b0.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e77b6.  v0:= new `java.util.WeakHashMap`;
  #L3e77ba.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3e77c0.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3e77c6.  v0:= temp @kind object;
  #L3e77c8.  v1.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` := v0 @kind object;
  #L3e77cc.  v0:= new `java.util.ArrayList`;
  #L3e77d0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e77d6.  v1.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` := v0 @kind object;
  #L3e77da.  return @kind void;
}
procedure `boolean` `clearAndRemove`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this, `com.bumptech.glide.request.Request` v4 @kind object) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearAndRemove:(Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e76e4.  v0:= 1I;
  #L3e76e6.  if v4 != 0 then goto L3e76ec;
  #L3e76ea.  return v0;
  #L3e76ec.  v1:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e76f0.  call temp:= `remove`(v1, v4) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e76f6.  v1:= temp;
  #L3e76f8.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e76fc.  call temp:= `remove`(v2, v4) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7702.  v2:= temp;
  #L3e7704.  if v2 != 0 then goto L3e7710;
  #L3e7708.  if v1 == 0 then goto L3e770e;
  #L3e770c.  goto L3e7710;
  #L3e770e.  v0:= 0I;
  #L3e7710.  if v0 == 0 then goto L3e771a;
  #L3e7714.  call `clear`(v4) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3e771a.  return v0;
}
procedure `void` `clearRequests`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e77ec.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e77f0.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e77f6.  v0:= temp @kind object;
  #L3e77f8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e77fe.  v0:= temp @kind object;
  #L3e7800.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e7806.  v1:= temp;
  #L3e7808.  if v1 == 0 then goto L3e7820;
  #L3e780c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7812.  v1:= temp @kind object;
  #L3e7814.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3e7818.  call temp:= `clearAndRemove`(v2, v1) @signature `Lcom/bumptech/glide/manager/RequestTracker;.clearAndRemove:(Lcom/bumptech/glide/request/Request;)Z` @kind virtual;
  #L3e781e.  goto L3e7800;
  #L3e7820.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e7824.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3e782a.  return @kind void;
}
procedure `boolean` `isPaused`(`com.bumptech.glide.manager.RequestTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.isPaused:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e772c.  v0:= v1.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3e7730.  return v0;
}
procedure `void` `pauseAllRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.pauseAllRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e783c.  v0:= 1I;
  #L3e783e.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3e7842.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7846.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e784c.  v0:= temp @kind object;
  #L3e784e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e7854.  v0:= temp @kind object;
  #L3e7856.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e785c.  v1:= temp;
  #L3e785e.  if v1 == 0 then goto L3e7898;
  #L3e7862.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7868.  v1:= temp @kind object;
  #L3e786a.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3e786e.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3e7874.  v2:= temp;
  #L3e7876.  if v2 != 0 then goto L3e7886;
  #L3e787a.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3e7880.  v2:= temp;
  #L3e7882.  if v2 == 0 then goto L3e7856;
  #L3e7886.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3e788c.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e7890.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7896.  goto L3e7856;
  #L3e7898.  return @kind void;
}
procedure `void` `pauseRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.pauseRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e78ac.  v0:= 1I;
  #L3e78ae.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3e78b2.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e78b6.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e78bc.  v0:= temp @kind object;
  #L3e78be.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e78c4.  v0:= temp @kind object;
  #L3e78c6.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e78cc.  v1:= temp;
  #L3e78ce.  if v1 == 0 then goto L3e78fc;
  #L3e78d2.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e78d8.  v1:= temp @kind object;
  #L3e78da.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3e78de.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3e78e4.  v2:= temp;
  #L3e78e6.  if v2 == 0 then goto L3e78c6;
  #L3e78ea.  call `pause`(v1) @signature `Lcom/bumptech/glide/request/Request;.pause:()V` @kind interface;
  #L3e78f0.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e78f4.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e78fa.  goto L3e78c6;
  #L3e78fc.  return @kind void;
}
procedure `void` `restartRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.restartRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7910.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7914.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e791a.  v0:= temp @kind object;
  #L3e791c.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e7922.  v0:= temp @kind object;
  #L3e7924.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e792a.  v1:= temp;
  #L3e792c.  if v1 == 0 then goto L3e7976;
  #L3e7930.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7936.  v1:= temp @kind object;
  #L3e7938.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3e793c.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3e7942.  v2:= temp;
  #L3e7944.  if v2 != 0 then goto L3e7924;
  #L3e7948.  call temp:= `isCleared`(v1) @signature `Lcom/bumptech/glide/request/Request;.isCleared:()Z` @kind interface;
  #L3e794e.  v2:= temp;
  #L3e7950.  if v2 != 0 then goto L3e7924;
  #L3e7954.  call `clear`(v1) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3e795a.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3e795e.  if v2 != 0 then goto L3e796a;
  #L3e7962.  call `begin`(v1) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3e7968.  goto L3e7924;
  #L3e796a.  v2:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e796e.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7974.  goto L3e7924;
  #L3e7976.  return @kind void;
}
procedure `void` `resumeRequests`(`com.bumptech.glide.manager.RequestTracker` v3 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.resumeRequests:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e7988.  v0:= 0I;
  #L3e798a.  v3.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` := v0 @kind boolean;
  #L3e798e.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7992.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e7998.  v0:= temp @kind object;
  #L3e799a.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e79a0.  v0:= temp @kind object;
  #L3e79a2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e79a8.  v1:= temp;
  #L3e79aa.  if v1 == 0 then goto L3e79da;
  #L3e79ae.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e79b4.  v1:= temp @kind object;
  #L3e79b6.  v1:= (`com.bumptech.glide.request.Request`) v1 @kind object;
  #L3e79ba.  call temp:= `isComplete`(v1) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3e79c0.  v2:= temp;
  #L3e79c2.  if v2 != 0 then goto L3e79a2;
  #L3e79c6.  call temp:= `isRunning`(v1) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3e79cc.  v2:= temp;
  #L3e79ce.  if v2 != 0 then goto L3e79a2;
  #L3e79d2.  call `begin`(v1) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3e79d8.  goto L3e79a2;
  #L3e79da.  v0:= v3.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e79de.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3e79e4.  return @kind void;
}
procedure `void` `runRequest`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this, `com.bumptech.glide.request.Request` v3 @kind object) @signature `Lcom/bumptech/glide/manager/RequestTracker;.runRequest:(Lcom/bumptech/glide/request/Request;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e79f8.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e79fc.  call temp:= `add`(v0, v3) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7a02.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3e7a06.  if v0 != 0 then goto L3e7a12;
  #L3e7a0a.  call `begin`(v3) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3e7a10.  goto L3e7a3e;
  #L3e7a12.  call `clear`(v3) @signature `Lcom/bumptech/glide/request/Request;.clear:()V` @kind interface;
  #L3e7a18.  v0:= 2I;
  #L3e7a1a.  v1:= "RequestTracker" @kind object;
  #L3e7a1e.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e7a24.  v0:= temp;
  #L3e7a26.  if v0 == 0 then goto L3e7a34;
  #L3e7a2a.  v0:= "Paused, delaying request" @kind object;
  #L3e7a2e.  call temp:= `v`(v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e7a34.  v0:= v2.`com.bumptech.glide.manager.RequestTracker.b` @type ^`java.util.List` @kind object;
  #L3e7a38.  call temp:= `add`(v0, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e7a3e.  return @kind void;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.manager.RequestTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestTracker;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7744.  v0:= new `java.lang.StringBuilder`;
  #L3e7748.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e774e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3e7754.  v1:= temp @kind object;
  #L3e7756.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e775c.  v1:= "{numRequests=" @kind object;
  #L3e7760.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7766.  v1:= v2.`com.bumptech.glide.manager.RequestTracker.a` @type ^`java.util.Set` @kind object;
  #L3e776a.  call temp:= `size`(v1) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3e7770.  v1:= temp;
  #L3e7772.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7778.  v1:= ", isPaused=" @kind object;
  #L3e777c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7782.  v1:= v2.`com.bumptech.glide.manager.RequestTracker.c` @type ^`boolean` @kind boolean;
  #L3e7786.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e778c.  v1:= "}" @kind object;
  #L3e7790.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e7796.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e779c.  v0:= temp @kind object;
  #L3e779e.  return v0 @kind object;
}
