record `com.bumptech.glide.manager.RequestManagerFragment$a` @kind class @AccessFlag  extends `com.bumptech.glide.manager.RequestManagerTreeNode` @kind interface {
  `com.bumptech.glide.manager.RequestManagerFragment` `com.bumptech.glide.manager.RequestManagerFragment$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.RequestManagerFragment$a` v0 @kind this, `com.bumptech.glide.manager.RequestManagerFragment` v1 @kind object) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.<init>:(Lcom/bumptech/glide/manager/RequestManagerFragment;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e68a0.  v0.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` := v1 @kind object;
  #L3e68a4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e68aa.  return @kind void;
}
procedure `java.util.Set` `getDescendants`(`com.bumptech.glide.manager.RequestManagerFragment$a` v4 @kind this) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.getDescendants:()Ljava/util/Set;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e6834.  v0:= v4.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` @kind object;
  #L3e6838.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.b:()Ljava/util/Set;` @kind virtual;
  #L3e683e.  v0:= temp @kind object;
  #L3e6840.  v1:= new `java.util.HashSet`;
  #L3e6844.  call temp:= `size`(v0) @signature `Ljava/util/Set;.size:()I` @kind interface;
  #L3e684a.  v2:= temp;
  #L3e684c.  call `<init>`(v1, v2) @signature `Ljava/util/HashSet;.<init>:(I)V` @kind direct;
  #L3e6852.  call temp:= `iterator`(v0) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e6858.  v0:= temp @kind object;
  #L3e685a.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6860.  v2:= temp;
  #L3e6862.  if v2 == 0 then goto L3e688e;
  #L3e6866.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e686c.  v2:= temp @kind object;
  #L3e686e.  v2:= (`com.bumptech.glide.manager.RequestManagerFragment`) v2 @kind object;
  #L3e6872.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L3e6878.  v3:= temp @kind object;
  #L3e687a.  if v3 == 0 then goto L3e685a;
  #L3e687e.  call temp:= `getRequestManager`(v2) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment;.getRequestManager:()Lcom/bumptech/glide/RequestManager;` @kind virtual;
  #L3e6884.  v2:= temp @kind object;
  #L3e6886.  call temp:= `add`(v1, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e688c.  goto L3e685a;
  #L3e688e.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.manager.RequestManagerFragment$a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/RequestManagerFragment$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e67e4.  v0:= new `java.lang.StringBuilder`;
  #L3e67e8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e67ee.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind super;
  #L3e67f4.  v1:= temp @kind object;
  #L3e67f6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e67fc.  v1:= "{fragment=" @kind object;
  #L3e6800.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6806.  v1:= v2.`com.bumptech.glide.manager.RequestManagerFragment$a.a` @type ^`com.bumptech.glide.manager.RequestManagerFragment` @kind object;
  #L3e680a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6810.  v1:= "}" @kind object;
  #L3e6814.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e681a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e6820.  v0:= temp @kind object;
  #L3e6822.  return v0 @kind object;
}
