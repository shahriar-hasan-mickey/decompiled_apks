record `com.bumptech.glide.manager.TargetTracker` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.manager.LifecycleListener` @kind interface {
  `java.util.Set` `com.bumptech.glide.manager.TargetTracker.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e7f88.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e7f8e.  v0:= new `java.util.WeakHashMap`;
  #L3e7f92.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3e7f98.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3e7f9e.  v0:= temp @kind object;
  #L3e7fa0.  v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` := v0 @kind object;
  #L3e7fa4.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7fb8.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7fbc.  call `clear`(v0) @signature `Ljava/util/Set;.clear:()V` @kind interface;
  #L3e7fc2.  return @kind void;
}
procedure `java.util.List` `getAll`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.getAll:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e7f68.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7f6c.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e7f72.  v0:= temp @kind object;
  #L3e7f74.  return v0 @kind object;
}
procedure `void` `onDestroy`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onDestroy:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e7fd4.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e7fd8.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e7fde.  v0:= temp @kind object;
  #L3e7fe0.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e7fe6.  v0:= temp @kind object;
  #L3e7fe8.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e7fee.  v1:= temp;
  #L3e7ff0.  if v1 == 0 then goto L3e8008;
  #L3e7ff4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e7ffa.  v1:= temp @kind object;
  #L3e7ffc.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3e8000.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3e8006.  goto L3e7fe8;
  #L3e8008.  return @kind void;
}
procedure `void` `onStart`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onStart:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e801c.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e8020.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e8026.  v0:= temp @kind object;
  #L3e8028.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e802e.  v0:= temp @kind object;
  #L3e8030.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e8036.  v1:= temp;
  #L3e8038.  if v1 == 0 then goto L3e8050;
  #L3e803c.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8042.  v1:= temp @kind object;
  #L3e8044.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3e8048.  call `onStart`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3e804e.  goto L3e8030;
  #L3e8050.  return @kind void;
}
procedure `void` `onStop`(`com.bumptech.glide.manager.TargetTracker` v2 @kind this) @signature `Lcom/bumptech/glide/manager/TargetTracker;.onStop:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e8064.  v0:= v2.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e8068.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e806e.  v0:= temp @kind object;
  #L3e8070.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8076.  v0:= temp @kind object;
  #L3e8078.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e807e.  v1:= temp;
  #L3e8080.  if v1 == 0 then goto L3e8098;
  #L3e8084.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e808a.  v1:= temp @kind object;
  #L3e808c.  v1:= (`com.bumptech.glide.request.target.Target`) v1 @kind object;
  #L3e8090.  call `onStop`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3e8096.  goto L3e8078;
  #L3e8098.  return @kind void;
}
procedure `void` `track`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/manager/TargetTracker;.track:(Lcom/bumptech/glide/request/target/Target;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e80ac.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e80b0.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e80b6.  return @kind void;
}
procedure `void` `untrack`(`com.bumptech.glide.manager.TargetTracker` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/manager/TargetTracker;.untrack:(Lcom/bumptech/glide/request/target/Target;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e80c8.  v0:= v1.`com.bumptech.glide.manager.TargetTracker.a` @type ^`java.util.Set` @kind object;
  #L3e80cc.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e80d2.  return @kind void;
}
