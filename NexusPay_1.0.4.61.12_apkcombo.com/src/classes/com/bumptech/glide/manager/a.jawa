record `com.bumptech.glide.manager.a` @kind class @AccessFlag  extends `com.bumptech.glide.manager.Lifecycle` @kind interface {
  `java.util.Set` `com.bumptech.glide.manager.a.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.manager.a.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.manager.a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.manager.a` v1 @kind this) @signature `Lcom/bumptech/glide/manager/a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e62d8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e62de.  v0:= new `java.util.WeakHashMap`;
  #L3e62e2.  call `<init>`(v0) @signature `Ljava/util/WeakHashMap;.<init>:()V` @kind direct;
  #L3e62e8.  call temp:= `newSetFromMap`(v0) @signature `Ljava/util/Collections;.newSetFromMap:(Ljava/util/Map;)Ljava/util/Set;` @kind static;
  #L3e62ee.  v0:= temp @kind object;
  #L3e62f0.  v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` := v0 @kind object;
  #L3e62f4.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e634c.  v0:= 1I;
  #L3e634e.  v2.`com.bumptech.glide.manager.a.c` @type ^`boolean` := v0 @kind boolean;
  #L3e6352.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3e6356.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e635c.  v0:= temp @kind object;
  #L3e635e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e6364.  v0:= temp @kind object;
  #L3e6366.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e636c.  v1:= temp;
  #L3e636e.  if v1 == 0 then goto L3e6386;
  #L3e6372.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6378.  v1:= temp @kind object;
  #L3e637a.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3e637e.  call `onDestroy`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3e6384.  goto L3e6366;
  #L3e6386.  return @kind void;
}
procedure `void` `addListener`(`com.bumptech.glide.manager.a` v1 @kind this, `com.bumptech.glide.manager.LifecycleListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/a;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6308.  v0:= v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3e630c.  call temp:= `add`(v0, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e6312.  v0:= v1.`com.bumptech.glide.manager.a.c` @type ^`boolean` @kind boolean;
  #L3e6316.  if v0 == 0 then goto L3e6322;
  #L3e631a.  call `onDestroy`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onDestroy:()V` @kind interface;
  #L3e6320.  goto L3e6338;
  #L3e6322.  v0:= v1.`com.bumptech.glide.manager.a.b` @type ^`boolean` @kind boolean;
  #L3e6326.  if v0 == 0 then goto L3e6332;
  #L3e632a.  call `onStart`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3e6330.  goto L3e6338;
  #L3e6332.  call `onStop`(v2) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3e6338.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.b:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e6398.  v0:= 1I;
  #L3e639a.  v2.`com.bumptech.glide.manager.a.b` @type ^`boolean` := v0 @kind boolean;
  #L3e639e.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3e63a2.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e63a8.  v0:= temp @kind object;
  #L3e63aa.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e63b0.  v0:= temp @kind object;
  #L3e63b2.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e63b8.  v1:= temp;
  #L3e63ba.  if v1 == 0 then goto L3e63d2;
  #L3e63be.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e63c4.  v1:= temp @kind object;
  #L3e63c6.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3e63ca.  call `onStart`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStart:()V` @kind interface;
  #L3e63d0.  goto L3e63b2;
  #L3e63d2.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.manager.a` v2 @kind this) @signature `Lcom/bumptech/glide/manager/a;.c:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3e63e4.  v0:= 0I;
  #L3e63e6.  v2.`com.bumptech.glide.manager.a.b` @type ^`boolean` := v0 @kind boolean;
  #L3e63ea.  v0:= v2.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3e63ee.  call temp:= `getSnapshot`(v0) @signature `Lcom/bumptech/glide/util/Util;.getSnapshot:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3e63f4.  v0:= temp @kind object;
  #L3e63f6.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e63fc.  v0:= temp @kind object;
  #L3e63fe.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e6404.  v1:= temp;
  #L3e6406.  if v1 == 0 then goto L3e641e;
  #L3e640a.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e6410.  v1:= temp @kind object;
  #L3e6412.  v1:= (`com.bumptech.glide.manager.LifecycleListener`) v1 @kind object;
  #L3e6416.  call `onStop`(v1) @signature `Lcom/bumptech/glide/manager/LifecycleListener;.onStop:()V` @kind interface;
  #L3e641c.  goto L3e63fe;
  #L3e641e.  return @kind void;
}
procedure `void` `removeListener`(`com.bumptech.glide.manager.a` v1 @kind this, `com.bumptech.glide.manager.LifecycleListener` v2 @kind object) @signature `Lcom/bumptech/glide/manager/a;.removeListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e6430.  v0:= v1.`com.bumptech.glide.manager.a.a` @type ^`java.util.Set` @kind object;
  #L3e6434.  call temp:= `remove`(v0, v2) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3e643a.  return @kind void;
}
