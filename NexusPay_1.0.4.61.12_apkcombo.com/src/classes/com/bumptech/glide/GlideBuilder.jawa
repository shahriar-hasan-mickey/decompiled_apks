record `com.bumptech.glide.GlideBuilder` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.bumptech.glide.GlideBuilder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Engine` `com.bumptech.glide.GlideBuilder.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.GlideBuilder.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.GlideBuilder.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.GlideBuilder.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.f` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.DiskCache$Factory` `com.bumptech.glide.GlideBuilder.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` `com.bumptech.glide.GlideBuilder.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.ConnectivityMonitorFactory` `com.bumptech.glide.GlideBuilder.j` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.GlideBuilder.k` @AccessFlag PRIVATE;
  `com.bumptech.glide.Glide$RequestOptionsFactory` `com.bumptech.glide.GlideBuilder.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` `com.bumptech.glide.GlideBuilder.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.GlideBuilder.n` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GlideBuilder.o` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.GlideBuilder.p` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GlideBuilder.q` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.GlideBuilder.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.GlideBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/GlideBuilder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c4ad4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c4ada.  v0:= new `androidx.collection.ArrayMap`;
  #L3c4ade.  call `<init>`(v0) @signature `Landroidx/collection/ArrayMap;.<init>:()V` @kind direct;
  #L3c4ae4.  v1.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` := v0 @kind object;
  #L3c4ae8.  v0:= 4I;
  #L3c4aea.  v1.`com.bumptech.glide.GlideBuilder.k` @type ^`int` := v0;
  #L3c4aee.  v0:= new `com.bumptech.glide.GlideBuilder$a`;
  #L3c4af2.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder$a;.<init>:(Lcom/bumptech/glide/GlideBuilder;)V` @kind direct;
  #L3c4af8.  v1.`com.bumptech.glide.GlideBuilder.l` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` := v0 @kind object;
  #L3c4afc.  return @kind void;
}
procedure `com.bumptech.glide.Glide` `a`(`com.bumptech.glide.GlideBuilder` v16 @kind this, `android.content.Context` v17 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.a:(Landroid/content/Context;)Lcom/bumptech/glide/Glide;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3c46d8.  v0:= v16 @kind object;
  #L3c46dc.  v2:= v17 @kind object;
  #L3c46e0.  v1:= v0.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c46e4.  if v1 != 0 then goto L3c46f4;
  #L3c46e8.  call temp:= `newSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3c46ee.  v1:= temp @kind object;
  #L3c46f0.  v0.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c46f4.  v1:= v0.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c46f8.  if v1 != 0 then goto L3c4708;
  #L3c46fc.  call temp:= `newDiskCacheExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newDiskCacheExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3c4702.  v1:= temp @kind object;
  #L3c4704.  v0.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c4708.  v1:= v0.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c470c.  if v1 != 0 then goto L3c471c;
  #L3c4710.  call temp:= `newAnimationExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newAnimationExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3c4716.  v1:= temp @kind object;
  #L3c4718.  v0.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c471c.  v1:= v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3c4720.  if v1 != 0 then goto L3c473a;
  #L3c4724.  v1:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder`;
  #L3c4728.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3c472e.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @kind virtual;
  #L3c4734.  v1:= temp @kind object;
  #L3c4736.  v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` := v1 @kind object;
  #L3c473a.  v1:= v0.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` @kind object;
  #L3c473e.  if v1 != 0 then goto L3c4750;
  #L3c4742.  v1:= new `com.bumptech.glide.manager.DefaultConnectivityMonitorFactory`;
  #L3c4746.  call `<init>`(v1) @signature `Lcom/bumptech/glide/manager/DefaultConnectivityMonitorFactory;.<init>:()V` @kind direct;
  #L3c474c.  v0.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` := v1 @kind object;
  #L3c4750.  v1:= v0.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3c4754.  if v1 != 0 then goto L3c4788;
  #L3c4758.  v1:= v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3c475c.  call temp:= `getBitmapPoolSize`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getBitmapPoolSize:()I` @kind virtual;
  #L3c4762.  v1:= temp;
  #L3c4764.  if v1 <= 0 then goto L3c477a;
  #L3c4768.  v3:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool`;
  #L3c476c.  v4:= (`long`) v1 @kind i2l;
  #L3c476e.  call `<init>`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(J)V` @kind direct;
  #L3c4774.  v0.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v3 @kind object;
  #L3c4778.  goto L3c4788;
  #L3c477a.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPoolAdapter`;
  #L3c477e.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPoolAdapter;.<init>:()V` @kind direct;
  #L3c4784.  v0.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3c4788.  v1:= v0.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3c478c.  if v1 != 0 then goto L3c47aa;
  #L3c4790.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool`;
  #L3c4794.  v3:= v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3c4798.  call temp:= `getArrayPoolSizeInBytes`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getArrayPoolSizeInBytes:()I` @kind virtual;
  #L3c479e.  v3:= temp;
  #L3c47a0.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:(I)V` @kind direct;
  #L3c47a6.  v0.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3c47aa.  v1:= v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3c47ae.  if v1 != 0 then goto L3c47ce;
  #L3c47b2.  v1:= new `com.bumptech.glide.load.engine.cache.LruResourceCache`;
  #L3c47b6.  v3:= v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` @kind object;
  #L3c47ba.  call temp:= `getMemoryCacheSize`(v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.getMemoryCacheSize:()I` @kind virtual;
  #L3c47c0.  v3:= temp;
  #L3c47c2.  v3:= (`long`) v3 @kind i2l;
  #L3c47c4.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.<init>:(J)V` @kind direct;
  #L3c47ca.  v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v1 @kind object;
  #L3c47ce.  v1:= v0.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3c47d2.  if v1 != 0 then goto L3c47e4;
  #L3c47d6.  v1:= new `com.bumptech.glide.load.engine.cache.InternalCacheDiskCacheFactory`;
  #L3c47da.  call `<init>`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/InternalCacheDiskCacheFactory;.<init>:(Landroid/content/Context;)V` @kind direct;
  #L3c47e0.  v0.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v1 @kind object;
  #L3c47e4.  v1:= v0.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3c47e8.  if v1 != 0 then goto L3c481c;
  #L3c47ec.  v1:= new `com.bumptech.glide.load.engine.Engine`;
  #L3c47f0.  v4:= v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3c47f4.  v5:= v0.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3c47f8.  v6:= v0.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c47fc.  v7:= v0.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c4800.  call temp:= `newUnlimitedSourceExecutor`() @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor;.newUnlimitedSourceExecutor:()Lcom/bumptech/glide/load/engine/executor/GlideExecutor;` @kind static;
  #L3c4806.  v8:= temp @kind object;
  #L3c4808.  v9:= v0.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3c480c.  v10:= v0.`com.bumptech.glide.GlideBuilder.o` @type ^`boolean` @kind boolean;
  #L3c4810.  v3:= v1 @kind object;
  #L3c4812.  call `<init>`(v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/load/engine/Engine;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Z)V` @kind direct;
  #L3c4818.  v0.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.load.engine.Engine` := v1 @kind object;
  #L3c481c.  v1:= v0.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` @kind object;
  #L3c4820.  if v1 != 0 then goto L3c4832;
  #L3c4824.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3c482a.  v1:= temp @kind object;
  #L3c482c.  v0.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` := v1 @kind object;
  #L3c4830.  goto L3c483e;
  #L3c4832.  call temp:= `unmodifiableList`(v1) @signature `Ljava/util/Collections;.unmodifiableList:(Ljava/util/List;)Ljava/util/List;` @kind static;
  #L3c4838.  v1:= temp @kind object;
  #L3c483a.  v0.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` := v1 @kind object;
  #L3c483e.  v7:= new `com.bumptech.glide.manager.RequestManagerRetriever`;
  #L3c4842.  v1:= v0.`com.bumptech.glide.GlideBuilder.m` @type ^`com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` @kind object;
  #L3c4846.  call `<init>`(v7, v1) @signature `Lcom/bumptech/glide/manager/RequestManagerRetriever;.<init>:(Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;)V` @kind direct;
  #L3c484c.  v15:= new `com.bumptech.glide.Glide`;
  #L3c4850.  v3:= v0.`com.bumptech.glide.GlideBuilder.b` @type ^`com.bumptech.glide.load.engine.Engine` @kind object;
  #L3c4854.  v4:= v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3c4858.  v5:= v0.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3c485c.  v6:= v0.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3c4860.  v8:= v0.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` @kind object;
  #L3c4864.  v9:= v0.`com.bumptech.glide.GlideBuilder.k` @type ^`int`;
  #L3c4868.  v10:= v0.`com.bumptech.glide.GlideBuilder.l` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` @kind object;
  #L3c486c.  v11:= v0.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` @kind object;
  #L3c4870.  v12:= v0.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` @kind object;
  #L3c4874.  v13:= v0.`com.bumptech.glide.GlideBuilder.q` @type ^`boolean` @kind boolean;
  #L3c4878.  v14:= v0.`com.bumptech.glide.GlideBuilder.r` @type ^`boolean` @kind boolean;
  #L3c487c.  v1:= v15 @kind object;
  #L3c487e.  v2:= v17 @kind object;
  #L3c4882.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14) @signature `Lcom/bumptech/glide/Glide;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/manager/RequestManagerRetriever;Lcom/bumptech/glide/manager/ConnectivityMonitorFactory;ILcom/bumptech/glide/Glide$RequestOptionsFactory;Ljava/util/Map;Ljava/util/List;ZZ)V` @kind direct;
  #L3c4888.  return v15 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `addGlobalRequestListener`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.addGlobalRequestListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c489c.  v0:= v1.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` @kind object;
  #L3c48a0.  if v0 != 0 then goto L3c48b2;
  #L3c48a4.  v0:= new `java.util.ArrayList`;
  #L3c48a8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c48ae.  v1.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` := v0 @kind object;
  #L3c48b2.  v0:= v1.`com.bumptech.glide.GlideBuilder.p` @type ^`java.util.List` @kind object;
  #L3c48b6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3c48bc.  return v1 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.b:(Lcom/bumptech/glide/manager/RequestManagerRetriever$RequestManagerFactory;)V` @AccessFlag  {
    temp;

  #L3c4b10.  v0.`com.bumptech.glide.GlideBuilder.m` @type ^`com.bumptech.glide.manager.RequestManagerRetriever$RequestManagerFactory` := v1 @kind object;
  #L3c4b14.  return @kind void;
}
procedure `com.bumptech.glide.GlideBuilder` `setAnimationExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setAnimationExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c48d0.  v0.`com.bumptech.glide.GlideBuilder.n` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c48d4.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setArrayPool`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setArrayPool:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c48e8.  v0.`com.bumptech.glide.GlideBuilder.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3c48ec.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setBitmapPool`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setBitmapPool:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4900.  v0.`com.bumptech.glide.GlideBuilder.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v1 @kind object;
  #L3c4904.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setConnectivityMonitorFactory`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.manager.ConnectivityMonitorFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setConnectivityMonitorFactory:(Lcom/bumptech/glide/manager/ConnectivityMonitorFactory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4918.  v0.`com.bumptech.glide.GlideBuilder.j` @type ^`com.bumptech.glide.manager.ConnectivityMonitorFactory` := v1 @kind object;
  #L3c491c.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultRequestOptions`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.Glide$RequestOptionsFactory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/Glide$RequestOptionsFactory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4930.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c4936.  v1:= temp @kind object;
  #L3c4938.  v1:= (`com.bumptech.glide.Glide$RequestOptionsFactory`) v1 @kind object;
  #L3c493c.  v0.`com.bumptech.glide.GlideBuilder.l` @type ^`com.bumptech.glide.Glide$RequestOptionsFactory` := v1 @kind object;
  #L3c4940.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultRequestOptions`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `com.bumptech.glide.request.RequestOptions` v2 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/request/RequestOptions;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4954.  v0:= new `com.bumptech.glide.GlideBuilder$b`;
  #L3c4958.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/GlideBuilder$b;.<init>:(Lcom/bumptech/glide/GlideBuilder;Lcom/bumptech/glide/request/RequestOptions;)V` @kind direct;
  #L3c495e.  call temp:= `setDefaultRequestOptions`(v1, v0) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultRequestOptions:(Lcom/bumptech/glide/Glide$RequestOptionsFactory;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3c4964.  v2:= temp @kind object;
  #L3c4966.  return v2 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDefaultTransitionOptions`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `java.lang.Class` v2 @kind object, `com.bumptech.glide.TransitionOptions` v3 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDefaultTransitionOptions:(Ljava/lang/Class;Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4978.  v0:= v1.`com.bumptech.glide.GlideBuilder.a` @type ^`java.util.Map` @kind object;
  #L3c497c.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3c4982.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDiskCache`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDiskCache:(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4994.  v0.`com.bumptech.glide.GlideBuilder.h` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v1 @kind object;
  #L3c4998.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setDiskCacheExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setDiskCacheExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c49ac.  v0.`com.bumptech.glide.GlideBuilder.g` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c49b0.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setImageDecoderEnabledForBitmaps`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setImageDecoderEnabledForBitmaps:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c49c4.  call temp:= `isAtLeastQ`() @signature `Landroidx/core/os/BuildCompat;.isAtLeastQ:()Z` @kind static;
  #L3c49ca.  v0:= temp;
  #L3c49cc.  if v0 != 0 then goto L3c49d2;
  #L3c49d0.  return v1 @kind object;
  #L3c49d2.  v1.`com.bumptech.glide.GlideBuilder.r` @type ^`boolean` := v2 @kind boolean;
  #L3c49d6.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setIsActiveResourceRetentionAllowed`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setIsActiveResourceRetentionAllowed:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c49e8.  v0.`com.bumptech.glide.GlideBuilder.o` @type ^`boolean` := v1 @kind boolean;
  #L3c49ec.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setLogLevel`(`com.bumptech.glide.GlideBuilder` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setLogLevel:(I)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c4a00.  v0:= 2I;
  #L3c4a02.  if v2 < v0 then goto L3c4a12;
  #L3c4a06.  v0:= 6I;
  #L3c4a08.  if v2 > v0 then goto L3c4a12;
  #L3c4a0c.  v1.`com.bumptech.glide.GlideBuilder.k` @type ^`int` := v2;
  #L3c4a10.  return v1 @kind object;
  #L3c4a12.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c4a16.  v0:= "Log level must be one of Log.VERBOSE, Log.DEBUG, Log.INFO, Log.WARN, or Log.ERROR" @kind object;
  #L3c4a1a.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c4a20.  throw v2;
}
procedure `com.bumptech.glide.GlideBuilder` `setLogRequestOrigins`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/GlideBuilder;.setLogRequestOrigins:(Z)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4a34.  v0.`com.bumptech.glide.GlideBuilder.q` @type ^`boolean` := v1 @kind boolean;
  #L3c4a38.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemoryCache`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemoryCache:(Lcom/bumptech/glide/load/engine/cache/MemoryCache;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4a4c.  v0.`com.bumptech.glide.GlideBuilder.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v1 @kind object;
  #L3c4a50.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemorySizeCalculator`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4a64.  call temp:= `build`(v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @kind virtual;
  #L3c4a6a.  v1:= temp @kind object;
  #L3c4a6c.  call temp:= `setMemorySizeCalculator`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3c4a72.  v1:= temp @kind object;
  #L3c4a74.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setMemorySizeCalculator`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setMemorySizeCalculator:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4a88.  v0.`com.bumptech.glide.GlideBuilder.i` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator` := v1 @kind object;
  #L3c4a8c.  return v0 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setResizeExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setResizeExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4aa0.  call temp:= `setSourceExecutor`(v0, v1) @signature `Lcom/bumptech/glide/GlideBuilder;.setSourceExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @kind virtual;
  #L3c4aa6.  v1:= temp @kind object;
  #L3c4aa8.  return v1 @kind object;
}
procedure `com.bumptech.glide.GlideBuilder` `setSourceExecutor`(`com.bumptech.glide.GlideBuilder` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v1 @kind object) @signature `Lcom/bumptech/glide/GlideBuilder;.setSourceExecutor:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;)Lcom/bumptech/glide/GlideBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c4abc.  v0.`com.bumptech.glide.GlideBuilder.f` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v1 @kind object;
  #L3c4ac0.  return v0 @kind object;
}
