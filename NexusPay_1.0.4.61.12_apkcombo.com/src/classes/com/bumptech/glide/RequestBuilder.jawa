record `com.bumptech.glide.RequestBuilder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.request.BaseRequestOptions` @kind class, `java.lang.Cloneable` @kind interface {
  `android.content.Context` `com.bumptech.glide.RequestBuilder.A` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.RequestManager` `com.bumptech.glide.RequestBuilder.B` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.RequestBuilder.C` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.Glide` `com.bumptech.glide.RequestBuilder.D` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.RequestBuilder.E` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.TransitionOptions` `com.bumptech.glide.RequestBuilder.F` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.RequestBuilder.H` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.RequestBuilder.I` @AccessFlag PRIVATE;
  `com.bumptech.glide.RequestBuilder` `com.bumptech.glide.RequestBuilder.J` @AccessFlag PRIVATE;
  `com.bumptech.glide.RequestBuilder` `com.bumptech.glide.RequestBuilder.K` @AccessFlag PRIVATE;
  `java.lang.Float` `com.bumptech.glide.RequestBuilder.L` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.M` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.N` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.RequestBuilder.O` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.request.RequestOptions` `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @AccessFlag PROTECTED_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/RequestBuilder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3c7c3c.  v0:= new `com.bumptech.glide.request.RequestOptions`;
  #L3c7c40.  call `<init>`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.<init>:()V` @kind direct;
  #L3c7c46.  v1:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.DATA` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3c7c4a.  call temp:= `diskCacheStrategy`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.diskCacheStrategy:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7c50.  v0:= temp @kind object;
  #L3c7c52.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3c7c56.  v1:= `@@com.bumptech.glide.Priority.LOW` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3c7c5a.  call temp:= `priority`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.priority:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7c60.  v0:= temp @kind object;
  #L3c7c62.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3c7c66.  v1:= 1I;
  #L3c7c68.  call temp:= `skipMemoryCache`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.skipMemoryCache:(Z)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7c6e.  v0:= temp @kind object;
  #L3c7c70.  v0:= (`com.bumptech.glide.request.RequestOptions`) v0 @kind object;
  #L3c7c74.  `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @type ^`com.bumptech.glide.request.RequestOptions` := v0 @kind object;
  #L3c7c78.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.Glide` v2 @kind object, `com.bumptech.glide.RequestManager` v3 @kind object, `java.lang.Class` v4 @kind object, `android.content.Context` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/RequestManager;Ljava/lang/Class;Landroid/content/Context;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3c7c8c.  call `<init>`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.<init>:()V` @kind direct;
  #L3c7c92.  v0:= 1I;
  #L3c7c94.  v1.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` := v0 @kind boolean;
  #L3c7c98.  v1.`com.bumptech.glide.RequestBuilder.D` @type ^`com.bumptech.glide.Glide` := v2 @kind object;
  #L3c7c9c.  v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` := v3 @kind object;
  #L3c7ca0.  v1.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` := v4 @kind object;
  #L3c7ca4.  v1.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` := v5 @kind object;
  #L3c7ca8.  call temp:= `c`(v3, v4) @signature `Lcom/bumptech/glide/RequestManager;.c:(Ljava/lang/Class;)Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c7cae.  v4:= temp @kind object;
  #L3c7cb0.  v1.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v4 @kind object;
  #L3c7cb4.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/Glide;.d:()Lcom/bumptech/glide/GlideContext;` @kind virtual;
  #L3c7cba.  v2:= temp @kind object;
  #L3c7cbc.  v1.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` := v2 @kind object;
  #L3c7cc0.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/RequestManager;.a:()Ljava/util/List;` @kind virtual;
  #L3c7cc6.  v2:= temp @kind object;
  #L3c7cc8.  call `q`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.q:(Ljava/util/List;)V` @kind direct;
  #L3c7cce.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/RequestManager;.b:()Lcom/bumptech/glide/request/RequestOptions;` @kind virtual;
  #L3c7cd4.  v2:= temp @kind object;
  #L3c7cd6.  call temp:= `apply`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7cdc.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `java.lang.Class` v4 @kind object, `com.bumptech.glide.RequestBuilder` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/RequestBuilder;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3c7cf0.  v0:= v5.`com.bumptech.glide.RequestBuilder.D` @type ^`com.bumptech.glide.Glide` @kind object;
  #L3c7cf4.  v1:= v5.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c7cf8.  v2:= v5.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3c7cfc.  call `<init>`(v3, v0, v1, v4, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Lcom/bumptech/glide/Glide;Lcom/bumptech/glide/RequestManager;Ljava/lang/Class;Landroid/content/Context;)V` @kind direct;
  #L3c7d02.  v4:= v5.`com.bumptech.glide.RequestBuilder.H` @type ^`java.lang.Object` @kind object;
  #L3c7d06.  v3.`com.bumptech.glide.RequestBuilder.H` @type ^`java.lang.Object` := v4 @kind object;
  #L3c7d0a.  v4:= v5.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` @kind boolean;
  #L3c7d0e.  v3.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` := v4 @kind boolean;
  #L3c7d12.  call temp:= `apply`(v3, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7d18.  return @kind void;
}
procedure `com.bumptech.glide.request.Request` `m`(`com.bumptech.glide.RequestBuilder` v11 @kind this, `com.bumptech.glide.request.target.Target` v12 @kind object, `com.bumptech.glide.request.RequestListener` v13 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v14 @kind object, `java.util.concurrent.Executor` v15 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3c7548.  v1:= new `java.lang.Object`;
  #L3c754c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c7552.  v5:= v11.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3c7556.  call temp:= `getPriority`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3c755c.  v6:= temp @kind object;
  #L3c755e.  call temp:= `getOverrideWidth`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3c7564.  v7:= temp;
  #L3c7566.  call temp:= `getOverrideHeight`(v14) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3c756c.  v8:= temp;
  #L3c756e.  v4:= 0I;
  #L3c7570.  v0:= v11 @kind object;
  #L3c7572.  v2:= v12 @kind object;
  #L3c7574.  v3:= v13 @kind object;
  #L3c7576.  v9:= v14 @kind object;
  #L3c7578.  v10:= v15 @kind object;
  #L3c757a.  call temp:= `n`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c7580.  v12:= temp @kind object;
  #L3c7582.  return v12 @kind object;
}
procedure `com.bumptech.glide.request.Request` `n`(`com.bumptech.glide.RequestBuilder` v23 @kind this, `java.lang.Object` v24 @kind object, `com.bumptech.glide.request.target.Target` v25 @kind object, `com.bumptech.glide.request.RequestListener` v26 @kind object, `com.bumptech.glide.request.RequestCoordinator` v27 @kind object, `com.bumptech.glide.TransitionOptions` v28 @kind object, `com.bumptech.glide.Priority` v29 @kind object, `int` v30 , `int` v31 , `com.bumptech.glide.request.BaseRequestOptions` v32 @kind object, `java.util.concurrent.Executor` v33 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L3c7594.  v11:= v23 @kind object;
  #L3c7598.  v0:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c759c.  if v0 == 0 then goto L3c75b8;
  #L3c75a0.  v0:= new `com.bumptech.glide.request.ErrorRequestCoordinator`;
  #L3c75a4.  v13:= v24 @kind object;
  #L3c75a8.  v1:= v27 @kind object;
  #L3c75ac.  call `<init>`(v0, v13, v1) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3c75b2.  v4:= v0 @kind object;
  #L3c75b4.  v15:= v4 @kind object;
  #L3c75b6.  goto L3c75c6;
  #L3c75b8.  v13:= v24 @kind object;
  #L3c75bc.  v1:= v27 @kind object;
  #L3c75c0.  v0:= 0I;
  #L3c75c2.  v15:= v0 @kind object;
  #L3c75c4.  v4:= v1 @kind object;
  #L3c75c6.  v0:= v23 @kind object;
  #L3c75ca.  v1:= v24 @kind object;
  #L3c75ce.  v2:= v25 @kind object;
  #L3c75d2.  v3:= v26 @kind object;
  #L3c75d6.  v5:= v28 @kind object;
  #L3c75da.  v6:= v29 @kind object;
  #L3c75de.  v7:= v30;
  #L3c75e2.  v8:= v31;
  #L3c75e6.  v9:= v32 @kind object;
  #L3c75ea.  v10:= v33 @kind object;
  #L3c75ee.  call temp:= `o`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.o:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c75f4.  v0:= temp @kind object;
  #L3c75f6.  if v15 != 0 then goto L3c75fc;
  #L3c75fa.  return v0 @kind object;
  #L3c75fc.  v1:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c7600.  call temp:= `getOverrideWidth`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3c7606.  v1:= temp;
  #L3c7608.  v2:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c760c.  call temp:= `getOverrideHeight`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3c7612.  v2:= temp;
  #L3c7614.  call temp:= `isValidDimensions`(v30, v31) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3c761a.  v3:= temp;
  #L3c761c.  if v3 == 0 then goto L3c7640;
  #L3c7620.  v3:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c7624.  call temp:= `isValidOverride`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @kind virtual;
  #L3c762a.  v3:= temp;
  #L3c762c.  if v3 != 0 then goto L3c7640;
  #L3c7630.  call temp:= `getOverrideWidth`(v32) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3c7636.  v1:= temp;
  #L3c7638.  call temp:= `getOverrideHeight`(v32) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3c763e.  v2:= temp;
  #L3c7640.  v19:= v1;
  #L3c7644.  v20:= v2;
  #L3c7648.  v12:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c764c.  v1:= v12.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3c7650.  call temp:= `getPriority`(v12) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3c7656.  v18:= temp @kind object;
  #L3c7658.  v2:= v11.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c765c.  v13:= v24 @kind object;
  #L3c7660.  v14:= v25 @kind object;
  #L3c7664.  v3:= v15 @kind object;
  #L3c7666.  v15:= v26 @kind object;
  #L3c766a.  v16:= v3 @kind object;
  #L3c766e.  v17:= v1 @kind object;
  #L3c7672.  v21:= v2 @kind object;
  #L3c7676.  v22:= v33 @kind object;
  #L3c767a.  call temp:= `n`(v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c7680.  v1:= temp @kind object;
  #L3c7682.  call `setRequests`(v3, v0, v1) @signature `Lcom/bumptech/glide/request/ErrorRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3c7688.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.Request` `o`(`com.bumptech.glide.RequestBuilder` v18 @kind this, `java.lang.Object` v19 @kind object, `com.bumptech.glide.request.target.Target` v20 @kind object, `com.bumptech.glide.request.RequestListener` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.TransitionOptions` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `com.bumptech.glide.request.BaseRequestOptions` v27 @kind object, `java.util.concurrent.Executor` v28 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.o:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3c769c.  v11:= v18 @kind object;
  #L3c76a0.  v12:= v19 @kind object;
  #L3c76a4.  v5:= v22 @kind object;
  #L3c76a8.  v13:= v24 @kind object;
  #L3c76ac.  v0:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c76b0.  if v0 == 0 then goto L3c77c8;
  #L3c76b4.  v1:= v11.`com.bumptech.glide.RequestBuilder.O` @type ^`boolean` @kind boolean;
  #L3c76b8.  if v1 != 0 then goto L3c77b8;
  #L3c76bc.  v1:= v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3c76c0.  v0:= v0.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` @kind boolean;
  #L3c76c4.  if v0 == 0 then goto L3c76ce;
  #L3c76c8.  v14:= v23 @kind object;
  #L3c76cc.  goto L3c76d0;
  #L3c76ce.  v14:= v1 @kind object;
  #L3c76d0.  v0:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c76d4.  call temp:= `isPrioritySet`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isPrioritySet:()Z` @kind virtual;
  #L3c76da.  v0:= temp;
  #L3c76dc.  if v0 == 0 then goto L3c76ee;
  #L3c76e0.  v0:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c76e4.  call temp:= `getPriority`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3c76ea.  v0:= temp @kind object;
  #L3c76ec.  goto L3c76f6;
  #L3c76ee.  call temp:= `p`(v11, v13) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L3c76f4.  v0:= temp @kind object;
  #L3c76f6.  v15:= v0 @kind object;
  #L3c76f8.  v0:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c76fc.  call temp:= `getOverrideWidth`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3c7702.  v0:= temp;
  #L3c7704.  v1:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c7708.  call temp:= `getOverrideHeight`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3c770e.  v1:= temp;
  #L3c7710.  call temp:= `isValidDimensions`(v25, v26) @signature `Lcom/bumptech/glide/util/Util;.isValidDimensions:(II)Z` @kind static;
  #L3c7716.  v2:= temp;
  #L3c7718.  if v2 == 0 then goto L3c773c;
  #L3c771c.  v2:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c7720.  call temp:= `isValidOverride`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isValidOverride:()Z` @kind virtual;
  #L3c7726.  v2:= temp;
  #L3c7728.  if v2 != 0 then goto L3c773c;
  #L3c772c.  call temp:= `getOverrideWidth`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideWidth:()I` @kind virtual;
  #L3c7732.  v0:= temp;
  #L3c7734.  call temp:= `getOverrideHeight`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getOverrideHeight:()I` @kind virtual;
  #L3c773a.  v1:= temp;
  #L3c773c.  v16:= v0;
  #L3c7740.  v17:= v1;
  #L3c7744.  v10:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L3c7748.  call `<init>`(v10, v12, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3c774e.  v0:= v18 @kind object;
  #L3c7752.  v1:= v19 @kind object;
  #L3c7756.  v2:= v20 @kind object;
  #L3c775a.  v3:= v21 @kind object;
  #L3c775e.  v4:= v27 @kind object;
  #L3c7762.  v5:= v10 @kind object;
  #L3c7764.  v6:= v23 @kind object;
  #L3c7768.  v7:= v24 @kind object;
  #L3c776c.  v8:= v25;
  #L3c7770.  v9:= v26;
  #L3c7774.  v13:= v10 @kind object;
  #L3c7776.  v10:= v28 @kind object;
  #L3c777a.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c7780.  v10:= temp @kind object;
  #L3c7782.  v0:= 1I;
  #L3c7784.  v11.`com.bumptech.glide.RequestBuilder.O` @type ^`boolean` := v0 @kind boolean;
  #L3c7788.  v9:= v11.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` @kind object;
  #L3c778c.  v0:= v9 @kind object;
  #L3c778e.  v4:= v13 @kind object;
  #L3c7790.  v5:= v14 @kind object;
  #L3c7792.  v6:= v15 @kind object;
  #L3c7794.  v7:= v16;
  #L3c7798.  v8:= v17;
  #L3c779c.  v12:= v10 @kind object;
  #L3c779e.  v10:= v28 @kind object;
  #L3c77a2.  call temp:= `n`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.n:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c77a8.  v0:= temp @kind object;
  #L3c77aa.  v1:= 0I;
  #L3c77ac.  v11.`com.bumptech.glide.RequestBuilder.O` @type ^`boolean` := v1 @kind boolean;
  #L3c77b0.  call `setRequests`(v13, v12, v0) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3c77b6.  return v13 @kind object;
  #L3c77b8.  v0:= new `java.lang.IllegalStateException`;
  #L3c77bc.  v1:= "You cannot use a request as both the main request and a thumbnail, consider using clone() on the request(s) passed to thumbnail()" @kind object;
  #L3c77c0.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c77c6.  throw v0;
  #L3c77c8.  v0:= v11.`com.bumptech.glide.RequestBuilder.L` @type ^`java.lang.Float` @kind object;
  #L3c77cc.  if v0 == 0 then goto L3c7848;
  #L3c77d0.  v14:= new `com.bumptech.glide.request.ThumbnailRequestCoordinator`;
  #L3c77d4.  call `<init>`(v14, v12, v5) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.<init>:(Ljava/lang/Object;Lcom/bumptech/glide/request/RequestCoordinator;)V` @kind direct;
  #L3c77da.  v0:= v18 @kind object;
  #L3c77de.  v1:= v19 @kind object;
  #L3c77e2.  v2:= v20 @kind object;
  #L3c77e6.  v3:= v21 @kind object;
  #L3c77ea.  v4:= v27 @kind object;
  #L3c77ee.  v5:= v14 @kind object;
  #L3c77f0.  v6:= v23 @kind object;
  #L3c77f4.  v7:= v24 @kind object;
  #L3c77f8.  v8:= v25;
  #L3c77fc.  v9:= v26;
  #L3c7800.  v10:= v28 @kind object;
  #L3c7804.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c780a.  v15:= temp @kind object;
  #L3c780c.  call temp:= `clone`(v27) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7812.  v0:= temp @kind object;
  #L3c7814.  v1:= v11.`com.bumptech.glide.RequestBuilder.L` @type ^`java.lang.Float` @kind object;
  #L3c7818.  call temp:= `floatValue`(v1) @signature `Ljava/lang/Float;.floatValue:()F` @kind virtual;
  #L3c781e.  v1:= temp;
  #L3c7820.  call temp:= `sizeMultiplier`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.sizeMultiplier:(F)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7826.  v4:= temp @kind object;
  #L3c7828.  call temp:= `p`(v11, v13) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @kind direct;
  #L3c782e.  v7:= temp @kind object;
  #L3c7830.  v0:= v18 @kind object;
  #L3c7834.  v1:= v19 @kind object;
  #L3c7838.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c783e.  v0:= temp @kind object;
  #L3c7840.  call `setRequests`(v14, v15, v0) @signature `Lcom/bumptech/glide/request/ThumbnailRequestCoordinator;.setRequests:(Lcom/bumptech/glide/request/Request;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3c7846.  return v14 @kind object;
  #L3c7848.  v0:= v18 @kind object;
  #L3c784c.  v1:= v19 @kind object;
  #L3c7850.  v2:= v20 @kind object;
  #L3c7854.  v3:= v21 @kind object;
  #L3c7858.  v4:= v27 @kind object;
  #L3c785c.  v5:= v22 @kind object;
  #L3c7860.  v6:= v23 @kind object;
  #L3c7864.  v7:= v24 @kind object;
  #L3c7868.  v8:= v25;
  #L3c786c.  v9:= v26;
  #L3c7870.  v10:= v28 @kind object;
  #L3c7874.  call temp:= `v`(v0, v1, v2, v3, v4, v5, v6, v7, v8, v9, v10) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c787a.  v0:= temp @kind object;
  #L3c787c.  return v0 @kind object;
}
procedure `com.bumptech.glide.Priority` `p`(`com.bumptech.glide.RequestBuilder` v2 @kind this, `com.bumptech.glide.Priority` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.p:(Lcom/bumptech/glide/Priority;)Lcom/bumptech/glide/Priority;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3c70b0.  v0:= `@@com.bumptech.glide.RequestBuilder$a.b` @type ^`int`[] @kind object;
  #L3c70b4.  call temp:= `ordinal`(v3) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3c70ba.  v3:= temp;
  #L3c70bc.  v3:= v0[v3];
  #L3c70c0.  v0:= 1I;
  #L3c70c2.  if v3 == v0 then goto L3c711c;
  #L3c70c6.  v0:= 2I;
  #L3c70c8.  if v3 == v0 then goto L3c7116;
  #L3c70cc.  v0:= 3I;
  #L3c70ce.  if v3 == v0 then goto L3c7110;
  #L3c70d2.  v0:= 4I;
  #L3c70d4.  if v3 != v0 then goto L3c70da;
  #L3c70d8.  goto L3c7110;
  #L3c70da.  v3:= new `java.lang.IllegalArgumentException`;
  #L3c70de.  v0:= new `java.lang.StringBuilder`;
  #L3c70e2.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c70e8.  v1:= "unknown priority: " @kind object;
  #L3c70ec.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c70f2.  call temp:= `getPriority`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.getPriority:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3c70f8.  v1:= temp @kind object;
  #L3c70fa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c7100.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c7106.  v0:= temp @kind object;
  #L3c7108.  call `<init>`(v3, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c710e.  throw v3;
  #L3c7110.  v3:= `@@com.bumptech.glide.Priority.IMMEDIATE` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3c7114.  return v3 @kind object;
  #L3c7116.  v3:= `@@com.bumptech.glide.Priority.HIGH` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3c711a.  return v3 @kind object;
  #L3c711c.  v3:= `@@com.bumptech.glide.Priority.NORMAL` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3c7120.  return v3 @kind object;
}
procedure `void` `q`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.q:(Ljava/util/List;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c7d2c.  call temp:= `iterator`(v2) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c7d32.  v2:= temp @kind object;
  #L3c7d34.  call temp:= `hasNext`(v2) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c7d3a.  v0:= temp;
  #L3c7d3c.  if v0 == 0 then goto L3c7d54;
  #L3c7d40.  call temp:= `next`(v2) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c7d46.  v0:= temp @kind object;
  #L3c7d48.  v0:= (`com.bumptech.glide.request.RequestListener`) v0 @kind object;
  #L3c7d4c.  call temp:= `addListener`(v1, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7d52.  goto L3c7d34;
  #L3c7d54.  return @kind void;
}
procedure `com.bumptech.glide.request.target.Target` `r`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object, `com.bumptech.glide.request.RequestListener` v3 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v4 @kind object, `java.util.concurrent.Executor` v5 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3c7940.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c7946.  v0:= v1.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` @kind boolean;
  #L3c794a.  if v0 == 0 then goto L3c79b2;
  #L3c794e.  call temp:= `m`(v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.m:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @kind direct;
  #L3c7954.  v3:= temp @kind object;
  #L3c7956.  call temp:= `getRequest`(v2) @signature `Lcom/bumptech/glide/request/target/Target;.getRequest:()Lcom/bumptech/glide/request/Request;` @kind interface;
  #L3c795c.  v5:= temp @kind object;
  #L3c795e.  call temp:= `isEquivalentTo`(v3, v5) @signature `Lcom/bumptech/glide/request/Request;.isEquivalentTo:(Lcom/bumptech/glide/request/Request;)Z` @kind interface;
  #L3c7964.  v0:= temp;
  #L3c7966.  if v0 == 0 then goto L3c7996;
  #L3c796a.  call temp:= `t`(v1, v4, v5) @signature `Lcom/bumptech/glide/RequestBuilder;.t:(Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/Request;)Z` @kind direct;
  #L3c7970.  v4:= temp;
  #L3c7972.  if v4 != 0 then goto L3c7996;
  #L3c7976.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c797c.  v3:= temp @kind object;
  #L3c797e.  v3:= (`com.bumptech.glide.request.Request`) v3 @kind object;
  #L3c7982.  call temp:= `isRunning`(v3) @signature `Lcom/bumptech/glide/request/Request;.isRunning:()Z` @kind interface;
  #L3c7988.  v3:= temp;
  #L3c798a.  if v3 != 0 then goto L3c7994;
  #L3c798e.  call `begin`(v5) @signature `Lcom/bumptech/glide/request/Request;.begin:()V` @kind interface;
  #L3c7994.  return v2 @kind object;
  #L3c7996.  v4:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c799a.  call `clear`(v4, v2) @signature `Lcom/bumptech/glide/RequestManager;.clear:(Lcom/bumptech/glide/request/target/Target;)V` @kind virtual;
  #L3c79a0.  call `setRequest`(v2, v3) @signature `Lcom/bumptech/glide/request/target/Target;.setRequest:(Lcom/bumptech/glide/request/Request;)V` @kind interface;
  #L3c79a6.  v4:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c79aa.  call `d`(v4, v2, v3) @signature `Lcom/bumptech/glide/RequestManager;.d:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/Request;)V` @kind virtual;
  #L3c79b0.  return v2 @kind object;
  #L3c79b2.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c79b6.  v3:= "You must call #load() before calling #into()" @kind object;
  #L3c79ba.  call `<init>`(v2, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c79c0.  throw v2;
}
procedure `boolean` `t`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object, `com.bumptech.glide.request.Request` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.t:(Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/Request;)Z` @AccessFlag PRIVATE {
    temp;

  #L3c7080.  call temp:= `isMemoryCacheable`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isMemoryCacheable:()Z` @kind virtual;
  #L3c7086.  v1:= temp;
  #L3c7088.  if v1 != 0 then goto L3c709c;
  #L3c708c.  call temp:= `isComplete`(v2) @signature `Lcom/bumptech/glide/request/Request;.isComplete:()Z` @kind interface;
  #L3c7092.  v1:= temp;
  #L3c7094.  if v1 == 0 then goto L3c709c;
  #L3c7098.  v1:= 1I;
  #L3c709a.  goto L3c709e;
  #L3c709c.  v1:= 0I;
  #L3c709e.  return v1;
}
procedure `com.bumptech.glide.RequestBuilder` `u`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PRIVATE {
    temp;

  #L3c7384.  v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.lang.Object` := v1 @kind object;
  #L3c7388.  v1:= 1I;
  #L3c738a.  v0.`com.bumptech.glide.RequestBuilder.N` @type ^`boolean` := v1 @kind boolean;
  #L3c738e.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.Request` `v`(`com.bumptech.glide.RequestBuilder` v17 @kind this, `java.lang.Object` v18 @kind object, `com.bumptech.glide.request.target.Target` v19 @kind object, `com.bumptech.glide.request.RequestListener` v20 @kind object, `com.bumptech.glide.request.BaseRequestOptions` v21 @kind object, `com.bumptech.glide.request.RequestCoordinator` v22 @kind object, `com.bumptech.glide.TransitionOptions` v23 @kind object, `com.bumptech.glide.Priority` v24 @kind object, `int` v25 , `int` v26 , `java.util.concurrent.Executor` v27 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.v:(Ljava/lang/Object;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/TransitionOptions;Lcom/bumptech/glide/Priority;IILjava/util/concurrent/Executor;)Lcom/bumptech/glide/request/Request;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;

  #L3c7890.  v0:= v17 @kind object;
  #L3c7894.  v1:= v0.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3c7898.  v2:= v0.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3c789c.  v4:= v0.`com.bumptech.glide.RequestBuilder.H` @type ^`java.lang.Object` @kind object;
  #L3c78a0.  v5:= v0.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` @kind object;
  #L3c78a4.  v12:= v0.`com.bumptech.glide.RequestBuilder.I` @type ^`java.util.List` @kind object;
  #L3c78a8.  call temp:= `getEngine`(v2) @signature `Lcom/bumptech/glide/GlideContext;.getEngine:()Lcom/bumptech/glide/load/engine/Engine;` @kind virtual;
  #L3c78ae.  v14:= temp @kind object;
  #L3c78b0.  call temp:= `a`(v23) @signature `Lcom/bumptech/glide/TransitionOptions;.a:()Lcom/bumptech/glide/request/transition/TransitionFactory;` @kind virtual;
  #L3c78b6.  v15:= temp @kind object;
  #L3c78b8.  v3:= v18 @kind object;
  #L3c78bc.  v6:= v21 @kind object;
  #L3c78c0.  v7:= v25;
  #L3c78c4.  v8:= v26;
  #L3c78c8.  v9:= v24 @kind object;
  #L3c78cc.  v10:= v19 @kind object;
  #L3c78d0.  v11:= v20 @kind object;
  #L3c78d4.  v13:= v22 @kind object;
  #L3c78d8.  v16:= v27 @kind object;
  #L3c78dc.  call temp:= `obtain`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16) @signature `Lcom/bumptech/glide/request/SingleRequest;.obtain:(Landroid/content/Context;Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/Class;Lcom/bumptech/glide/request/BaseRequestOptions;IILcom/bumptech/glide/Priority;Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/List;Lcom/bumptech/glide/request/RequestCoordinator;Lcom/bumptech/glide/load/engine/Engine;Lcom/bumptech/glide/request/transition/TransitionFactory;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/SingleRequest;` @kind static;
  #L3c78e2.  v1:= temp @kind object;
  #L3c78e4.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `addListener`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7134.  if v2 == 0 then goto L3c7158;
  #L3c7138.  v0:= v1.`com.bumptech.glide.RequestBuilder.I` @type ^`java.util.List` @kind object;
  #L3c713c.  if v0 != 0 then goto L3c714e;
  #L3c7140.  v0:= new `java.util.ArrayList`;
  #L3c7144.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3c714a.  v1.`com.bumptech.glide.RequestBuilder.I` @type ^`java.util.List` := v0 @kind object;
  #L3c714e.  v0:= v1.`com.bumptech.glide.RequestBuilder.I` @type ^`java.util.List` @kind object;
  #L3c7152.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3c7158.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `apply`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c716c.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c7172.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @kind super;
  #L3c7178.  v1:= temp @kind object;
  #L3c717a.  v1:= (`com.bumptech.glide.RequestBuilder`) v1 @kind object;
  #L3c717e.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `apply`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.BaseRequestOptions` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7480.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7486.  v1:= temp @kind object;
  #L3c7488.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `clone`(`com.bumptech.glide.RequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7190.  call temp:= `clone`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind super;
  #L3c7196.  v0:= temp @kind object;
  #L3c7198.  v0:= (`com.bumptech.glide.RequestBuilder`) v0 @kind object;
  #L3c719c.  v1:= v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` @kind object;
  #L3c71a0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/TransitionOptions;.clone:()Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c71a6.  v1:= temp @kind object;
  #L3c71a8.  v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v1 @kind object;
  #L3c71ac.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.BaseRequestOptions` `clone`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c749c.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c74a2.  v0:= temp @kind object;
  #L3c74a4.  return v0 @kind object;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c7b24.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7b2a.  v0:= temp @kind object;
  #L3c7b2c.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `downloadOnly`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.downloadOnly:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c74b8.  call temp:= `getDownloadOnlyRequest`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c74be.  v0:= temp @kind object;
  #L3c74c0.  call temp:= `submit`(v0, v2, v3) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3c74c6.  v2:= temp @kind object;
  #L3c74c8.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `downloadOnly`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.target.Target` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.downloadOnly:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c78f8.  call temp:= `getDownloadOnlyRequest`(v1) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c78fe.  v0:= temp @kind object;
  #L3c7900.  call temp:= `into`(v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c7906.  v2:= temp @kind object;
  #L3c7908.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `error`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.RequestBuilder` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.error:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c71c0.  v0.`com.bumptech.glide.RequestBuilder.K` @type ^`com.bumptech.glide.RequestBuilder` := v1 @kind object;
  #L3c71c4.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `getDownloadOnlyRequest`(`com.bumptech.glide.RequestBuilder` v2 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.getDownloadOnlyRequest:()Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PROTECTED {
    temp;
    v0;
    v1;

  #L3c71d8.  v0:= new `com.bumptech.glide.RequestBuilder`;
  #L3c71dc.  v1:= constclass @type ^`java.io.File` @kind object;
  #L3c71e0.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/RequestBuilder;)V` @kind direct;
  #L3c71e6.  v1:= `@@com.bumptech.glide.RequestBuilder.DOWNLOAD_ONLY_OPTIONS` @type ^`com.bumptech.glide.request.RequestOptions` @kind object;
  #L3c71ea.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c71f0.  v0:= temp @kind object;
  #L3c71f2.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `into`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `int` v1 , `int` v2 ) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;

  #L3c74dc.  call temp:= `submit`(v0, v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3c74e2.  v1:= temp @kind object;
  #L3c74e4.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `into`(`com.bumptech.glide.RequestBuilder` v2 @kind this, `com.bumptech.glide.request.target.Target` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c791c.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3c7922.  v0:= temp @kind object;
  #L3c7924.  v1:= 0I;
  #L3c7926.  call temp:= `s`(v2, v3, v1, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c792c.  return v3 @kind object;
}
procedure `com.bumptech.glide.request.target.ViewTarget` `into`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `android.widget.ImageView` v4 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Landroid/widget/ImageView;)Lcom/bumptech/glide/request/target/ViewTarget;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c7a34.  call `assertMainThread`() @signature `Lcom/bumptech/glide/util/Util;.assertMainThread:()V` @kind static;
  #L3c7a3a.  call temp:= `checkNotNull`(v4) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c7a40.  call temp:= `isTransformationSet`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationSet:()Z` @kind virtual;
  #L3c7a46.  v0:= temp;
  #L3c7a48.  if v0 != 0 then goto L3c7acc;
  #L3c7a4c.  call temp:= `isTransformationAllowed`(v3) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isTransformationAllowed:()Z` @kind virtual;
  #L3c7a52.  v0:= temp;
  #L3c7a54.  if v0 == 0 then goto L3c7acc;
  #L3c7a58.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L3c7a5e.  v0:= temp @kind object;
  #L3c7a60.  if v0 == 0 then goto L3c7acc;
  #L3c7a64.  v0:= `@@com.bumptech.glide.RequestBuilder$a.a` @type ^`int`[] @kind object;
  #L3c7a68.  call temp:= `getScaleType`(v4) @signature `Landroid/widget/ImageView;.getScaleType:()Landroid/widget/ImageView$ScaleType;` @kind virtual;
  #L3c7a6e.  v1:= temp @kind object;
  #L3c7a70.  call temp:= `ordinal`(v1) @signature `Landroid/widget/ImageView$ScaleType;.ordinal:()I` @kind virtual;
  #L3c7a76.  v1:= temp;
  #L3c7a78.  v0:= v0[v1];
  #L3c7a7c.  goto L3c7af4;
  #L3c7a82.  goto L3c7acc;
  #L3c7a84.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7a8a.  v0:= temp @kind object;
  #L3c7a8c.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7a92.  v0:= temp @kind object;
  #L3c7a94.  goto L3c7ace;
  #L3c7a96.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7a9c.  v0:= temp @kind object;
  #L3c7a9e.  call temp:= `optionalFitCenter`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalFitCenter:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7aa4.  v0:= temp @kind object;
  #L3c7aa6.  goto L3c7ace;
  #L3c7aa8.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7aae.  v0:= temp @kind object;
  #L3c7ab0.  call temp:= `optionalCenterInside`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterInside:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7ab6.  v0:= temp @kind object;
  #L3c7ab8.  goto L3c7ace;
  #L3c7aba.  call temp:= `clone`(v3) @signature `Lcom/bumptech/glide/RequestBuilder;.clone:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7ac0.  v0:= temp @kind object;
  #L3c7ac2.  call temp:= `optionalCenterCrop`(v0) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.optionalCenterCrop:()Lcom/bumptech/glide/request/BaseRequestOptions;` @kind virtual;
  #L3c7ac8.  v0:= temp @kind object;
  #L3c7aca.  goto L3c7ace;
  #L3c7acc.  v0:= v3 @kind object;
  #L3c7ace.  v1:= v3.`com.bumptech.glide.RequestBuilder.E` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3c7ad2.  v2:= v3.`com.bumptech.glide.RequestBuilder.C` @type ^`java.lang.Class` @kind object;
  #L3c7ad6.  call temp:= `buildImageViewTarget`(v1, v4, v2) @signature `Lcom/bumptech/glide/GlideContext;.buildImageViewTarget:(Landroid/widget/ImageView;Ljava/lang/Class;)Lcom/bumptech/glide/request/target/ViewTarget;` @kind virtual;
  #L3c7adc.  v4:= temp @kind object;
  #L3c7ade.  v1:= 0I;
  #L3c7ae0.  call temp:= `mainThreadExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.mainThreadExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3c7ae6.  v2:= temp @kind object;
  #L3c7ae8.  call temp:= `r`(v3, v4, v1, v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind direct;
  #L3c7aee.  v4:= (`com.bumptech.glide.request.target.ViewTarget`) v4 @kind object;
  #L3c7af2.  return v4 @kind object;
  #L3c7af4.  switch v0
                  | 1 => goto L3c7aba
                  | 2 => goto L3c7aa8
                  | 3 => goto L3c7a96
                  | 4 => goto L3c7a96
                  | 5 => goto L3c7a96
                  | 6 => goto L3c7a84
                  | else => goto L3c7a82;
}
procedure `com.bumptech.glide.RequestBuilder` `listener`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `com.bumptech.glide.request.RequestListener` v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.listener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7204.  v0:= 0I;
  #L3c7206.  v1.`com.bumptech.glide.RequestBuilder.I` @type ^`java.util.List` := v0 @kind object;
  #L3c720a.  call temp:= `addListener`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.addListener:(Lcom/bumptech/glide/request/RequestListener;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7210.  v2:= temp @kind object;
  #L3c7212.  return v2 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c7224.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c722a.  v1:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3c722e.  call temp:= `diskCacheStrategyOf`(v1) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3c7234.  v1:= temp @kind object;
  #L3c7236.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c723c.  v1:= temp @kind object;
  #L3c723e.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c7250.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c7256.  v1:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3c725a.  call temp:= `diskCacheStrategyOf`(v1) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3c7260.  v1:= temp @kind object;
  #L3c7262.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7268.  v1:= temp @kind object;
  #L3c726a.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.net.Uri` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c727c.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c7282.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c72f0.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c72f6.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c7308.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c730e.  v1:= v0.`com.bumptech.glide.RequestBuilder.A` @type ^`android.content.Context` @kind object;
  #L3c7312.  call temp:= `obtain`(v1) @signature `Lcom/bumptech/glide/signature/AndroidResourceSignature;.obtain:(Landroid/content/Context;)Lcom/bumptech/glide/load/Key;` @kind static;
  #L3c7318.  v1:= temp @kind object;
  #L3c731a.  call temp:= `signatureOf`(v1) @signature `Lcom/bumptech/glide/request/RequestOptions;.signatureOf:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3c7320.  v1:= temp @kind object;
  #L3c7322.  call temp:= `apply`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7328.  v1:= temp @kind object;
  #L3c732a.  return v1 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c733c.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c7342.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c7354.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c735a.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c736c.  call temp:= `u`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c7372.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `load`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7294.  call temp:= `u`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.u:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind direct;
  #L3c729a.  call temp:= `isDiskCacheStrategySet`(v1) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isDiskCacheStrategySet:()Z` @kind virtual;
  #L3c72a0.  v2:= temp;
  #L3c72a2.  if v2 != 0 then goto L3c72bc;
  #L3c72a6.  v2:= `@@com.bumptech.glide.load.engine.DiskCacheStrategy.NONE` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3c72aa.  call temp:= `diskCacheStrategyOf`(v2) @signature `Lcom/bumptech/glide/request/RequestOptions;.diskCacheStrategyOf:(Lcom/bumptech/glide/load/engine/DiskCacheStrategy;)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3c72b0.  v2:= temp @kind object;
  #L3c72b2.  call temp:= `apply`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c72b8.  v2:= temp @kind object;
  #L3c72ba.  goto L3c72be;
  #L3c72bc.  v2:= v1 @kind object;
  #L3c72be.  call temp:= `isSkipMemoryCacheSet`(v2) @signature `Lcom/bumptech/glide/request/BaseRequestOptions;.isSkipMemoryCacheSet:()Z` @kind virtual;
  #L3c72c4.  v0:= temp;
  #L3c72c6.  if v0 != 0 then goto L3c72dc;
  #L3c72ca.  v0:= 1I;
  #L3c72cc.  call temp:= `skipMemoryCacheOf`(v0) @signature `Lcom/bumptech/glide/request/RequestOptions;.skipMemoryCacheOf:(Z)Lcom/bumptech/glide/request/RequestOptions;` @kind static;
  #L3c72d2.  v0:= temp @kind object;
  #L3c72d4.  call temp:= `apply`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.apply:(Lcom/bumptech/glide/request/BaseRequestOptions;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c72da.  v2:= temp @kind object;
  #L3c72dc.  return v2 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7b40.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/Bitmap;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7b46.  v1:= temp @kind object;
  #L3c7b48.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.graphics.drawable.Drawable` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7b5c.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/graphics/drawable/Drawable;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7b62.  v1:= temp @kind object;
  #L3c7b64.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `android.net.Uri` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7b78.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Landroid/net/Uri;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7b7e.  v1:= temp @kind object;
  #L3c7b80.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7bb0.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/io/File;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7bb6.  v1:= temp @kind object;
  #L3c7bb8.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Integer` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7bcc.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Integer;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7bd2.  v1:= temp @kind object;
  #L3c7bd4.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7be8.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/Object;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7bee.  v1:= temp @kind object;
  #L3c7bf0.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7c04.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/lang/String;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7c0a.  v1:= temp @kind object;
  #L3c7c0c.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `java.net.URL` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7c20.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:(Ljava/net/URL;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7c26.  v1:= temp @kind object;
  #L3c7c28.  return v1 @kind object;
}
procedure `java.lang.Object` `load`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3c7b94.  call temp:= `load`(v0, v1) @signature `Lcom/bumptech/glide/RequestBuilder;.load:([B)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7b9a.  v1:= temp @kind object;
  #L3c7b9c.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:()Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c79ec.  v0:= -2147483648I;
  #L3c79f0.  call temp:= `preload`(v1, v0, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c79f6.  v0:= temp @kind object;
  #L3c79f8.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `preload`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.preload:(II)Lcom/bumptech/glide/request/target/Target;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7a0c.  v0:= v1.`com.bumptech.glide.RequestBuilder.B` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c7a10.  call temp:= `obtain`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/target/PreloadTarget;.obtain:(Lcom/bumptech/glide/RequestManager;II)Lcom/bumptech/glide/request/target/PreloadTarget;` @kind static;
  #L3c7a16.  v2:= temp @kind object;
  #L3c7a18.  call temp:= `into`(v1, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.into:(Lcom/bumptech/glide/request/target/Target;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c7a1e.  v2:= temp @kind object;
  #L3c7a20.  return v2 @kind object;
}
procedure `com.bumptech.glide.request.target.Target` `s`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.request.target.Target` v1 @kind object, `com.bumptech.glide.request.RequestListener` v2 @kind object, `java.util.concurrent.Executor` v3 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @AccessFlag  {
    temp;

  #L3c79d4.  call temp:= `r`(v0, v1, v2, v0, v3) @signature `Lcom/bumptech/glide/RequestBuilder;.r:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Lcom/bumptech/glide/request/BaseRequestOptions;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind direct;
  #L3c79da.  return v1 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `submit`(`com.bumptech.glide.RequestBuilder` v1 @kind this) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:()Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c74f8.  v0:= -2147483648I;
  #L3c74fc.  call temp:= `submit`(v1, v0, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @kind virtual;
  #L3c7502.  v0:= temp @kind object;
  #L3c7504.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.FutureTarget` `submit`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/RequestBuilder;.submit:(II)Lcom/bumptech/glide/request/FutureTarget;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7518.  v0:= new `com.bumptech.glide.request.RequestFutureTarget`;
  #L3c751c.  call `<init>`(v0, v2, v3) @signature `Lcom/bumptech/glide/request/RequestFutureTarget;.<init>:(II)V` @kind direct;
  #L3c7522.  call temp:= `directExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.directExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3c7528.  v2:= temp @kind object;
  #L3c752a.  call temp:= `s`(v1, v0, v0, v2) @signature `Lcom/bumptech/glide/RequestBuilder;.s:(Lcom/bumptech/glide/request/target/Target;Lcom/bumptech/glide/request/RequestListener;Ljava/util/concurrent/Executor;)Lcom/bumptech/glide/request/target/Target;` @kind virtual;
  #L3c7530.  v0:= (`com.bumptech.glide.request.FutureTarget`) v0 @kind object;
  #L3c7534.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v1 @kind this, `float` v2 ) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(F)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c7414.  v0:= 0I;
  #L3c7416.  v0:= fcmpg(v2, v0);
  #L3c741a.  if v0 < 0 then goto L3c7438;
  #L3c741e.  v0:= 1.0F;
  #L3c7422.  v0:= fcmpl(v2, v0);
  #L3c7426.  if v0 > 0 then goto L3c7438;
  #L3c742a.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Float;.valueOf:(F)Ljava/lang/Float;` @kind static;
  #L3c7430.  v2:= temp @kind object;
  #L3c7432.  v1.`com.bumptech.glide.RequestBuilder.L` @type ^`java.lang.Float` := v2 @kind object;
  #L3c7436.  return v1 @kind object;
  #L3c7438.  v2:= new `java.lang.IllegalArgumentException`;
  #L3c743c.  v0:= "sizeMultiplier must be between 0 and 1" @kind object;
  #L3c7440.  call `<init>`(v2, v0) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c7446.  throw v2;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.RequestBuilder` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c73a0.  v0.`com.bumptech.glide.RequestBuilder.J` @type ^`com.bumptech.glide.RequestBuilder` := v1 @kind object;
  #L3c73a4.  return v0 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `thumbnail`(`com.bumptech.glide.RequestBuilder` v3 @kind this, `com.bumptech.glide.RequestBuilder`[] v4 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:([Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c73b8.  v0:= 0I;
  #L3c73ba.  if v4 == 0 then goto L3c73fa;
  #L3c73be.  v1:= length @variable v4;
  #L3c73c0.  if v1 != 0 then goto L3c73c6;
  #L3c73c4.  goto L3c73fa;
  #L3c73c6.  v1:= length @variable v4;
  #L3c73c8.  v1:= v1 + -1;
  #L3c73cc.  if v1 < 0 then goto L3c73f0;
  #L3c73d0.  v2:= v4[v1] @kind object;
  #L3c73d4.  if v2 != 0 then goto L3c73da;
  #L3c73d8.  goto L3c73ea;
  #L3c73da.  if v0 != 0 then goto L3c73e2;
  #L3c73de.  v0:= v2 @kind object;
  #L3c73e0.  goto L3c73ea;
  #L3c73e2.  call temp:= `thumbnail`(v2, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c73e8.  v0:= temp @kind object;
  #L3c73ea.  v1:= v1 + -1;
  #L3c73ee.  goto L3c73cc;
  #L3c73f0.  call temp:= `thumbnail`(v3, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c73f6.  v4:= temp @kind object;
  #L3c73f8.  return v4 @kind object;
  #L3c73fa.  call temp:= `thumbnail`(v3, v0) @signature `Lcom/bumptech/glide/RequestBuilder;.thumbnail:(Lcom/bumptech/glide/RequestBuilder;)Lcom/bumptech/glide/RequestBuilder;` @kind virtual;
  #L3c7400.  v4:= temp @kind object;
  #L3c7402.  return v4 @kind object;
}
procedure `com.bumptech.glide.RequestBuilder` `transition`(`com.bumptech.glide.RequestBuilder` v0 @kind this, `com.bumptech.glide.TransitionOptions` v1 @kind object) @signature `Lcom/bumptech/glide/RequestBuilder;.transition:(Lcom/bumptech/glide/TransitionOptions;)Lcom/bumptech/glide/RequestBuilder;` @AccessFlag PUBLIC {
    temp;

  #L3c7458.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c745e.  v1:= temp @kind object;
  #L3c7460.  v1:= (`com.bumptech.glide.TransitionOptions`) v1 @kind object;
  #L3c7464.  v0.`com.bumptech.glide.RequestBuilder.F` @type ^`com.bumptech.glide.TransitionOptions` := v1 @kind object;
  #L3c7468.  v1:= 0I;
  #L3c746a.  v0.`com.bumptech.glide.RequestBuilder.M` @type ^`boolean` := v1 @kind boolean;
  #L3c746e.  return v0 @kind object;
}
