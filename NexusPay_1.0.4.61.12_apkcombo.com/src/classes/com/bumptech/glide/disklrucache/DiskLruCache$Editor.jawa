record `com.bumptech.glide.disklrucache.DiskLruCache$Editor` @kind class @AccessFlag PUBLIC_FINAL {
  `com.bumptech.glide.disklrucache.DiskLruCache$c` `com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @AccessFlag PRIVATE_FINAL;
  `boolean`[] `com.bumptech.glide.disklrucache.DiskLruCache$Editor.b` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.disklrucache.DiskLruCache$Editor.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.disklrucache.DiskLruCache` `com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v0 @kind this, `com.bumptech.glide.disklrucache.DiskLruCache` v1 @kind object, `com.bumptech.glide.disklrucache.DiskLruCache$c` v2 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.<init>:(Lcom/bumptech/glide/disklrucache/DiskLruCache;Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3c8de4.  v0.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` := v1 @kind object;
  #L3c8de8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c8dee.  v0.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` := v2 @kind object;
  #L3c8df2.  call temp:= `e`(v2) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.e:(Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)Z` @kind static;
  #L3c8df8.  v2:= temp;
  #L3c8dfa.  if v2 == 0 then goto L3c8e02;
  #L3c8dfe.  v1:= 0I;
  #L3c8e00.  goto L3c8e0e;
  #L3c8e02.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.d:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)I` @kind static;
  #L3c8e08.  v1:= temp;
  #L3c8e0a.  v1:= new `boolean`[v1];
  #L3c8e0e.  v0.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.b` @type ^`boolean`[] := v1 @kind object;
  #L3c8e12.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v0 @kind this, `com.bumptech.glide.disklrucache.DiskLruCache` v1 @kind object, `com.bumptech.glide.disklrucache.DiskLruCache$c` v2 @kind object, `com.bumptech.glide.disklrucache.DiskLruCache$a` v3 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.<init>:(Lcom/bumptech/glide/disklrucache/DiskLruCache;Lcom/bumptech/glide/disklrucache/DiskLruCache$c;Lcom/bumptech/glide/disklrucache/DiskLruCache$a;)V` @AccessFlag SYNTHETIC_CONSTRUCTOR {
    temp;

  #L3c8e24.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.<init>:(Lcom/bumptech/glide/disklrucache/DiskLruCache;Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)V` @kind direct;
  #L3c8e2a.  return @kind void;
}
procedure `com.bumptech.glide.disklrucache.DiskLruCache$c` `a`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v0 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.a:(Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;)Lcom/bumptech/glide/disklrucache/DiskLruCache$c;` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c8c7c.  v0:= v0.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8c80.  return v0 @kind object;
}
procedure `boolean`[] `b`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v0 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.b:(Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;)[Z` @AccessFlag STATIC_SYNTHETIC {
    temp;

  #L3c8c64.  v0:= v0.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.b` @type ^`boolean`[] @kind object;
  #L3c8c68.  return v0 @kind object;
}
procedure `java.io.InputStream` `c`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.c:(I)Ljava/io/InputStream;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c8d2c.  v0:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8d30.  @monitorenter v0
  #L3c8d32.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8d36.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.g:(Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;` @kind static;
  #L3c8d3c.  v1:= temp @kind object;
  #L3c8d3e.  if v1 != v4 then goto L3c8d76;
  #L3c8d42.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8d46.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.e:(Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)Z` @kind static;
  #L3c8d4c.  v1:= temp;
  #L3c8d4e.  v2:= 0I;
  #L3c8d50.  if v1 != 0 then goto L3c8d58;
  #L3c8d54.  @monitorexit v0
  #L3c8d56.  return v2 @kind object;
  #L3c8d58.  v1:= new `java.io.FileInputStream`;
  #L3c8d5c.  v3:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8d60.  call temp:= `j`(v3, v5) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.j:(I)Ljava/io/File;` @kind virtual;
  #L3c8d66.  v5:= temp @kind object;
  #L3c8d68.  call `<init>`(v1, v5) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3c8d6e.  @monitorexit v0
  #L3c8d70.  return v1 @kind object;
  #L3c8d72.  @monitorexit v0
  #L3c8d74.  return v2 @kind object;
  #L3c8d76.  v5:= new `java.lang.IllegalStateException`;
  #L3c8d7a.  call `<init>`(v5) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3c8d80.  throw v5;
  #L3c8d82.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c8d84.  @monitorexit v0
  #L3c8d86.  throw v5;
  catch `java.lang.Throwable` @[L3c8d32..L3c8d56] goto L3c8d82;
  catch `java.io.FileNotFoundException` @[L3c8d58..L3c8d6e] goto L3c8d72;
  catch `java.lang.Throwable` @[L3c8d58..L3c8d6e] goto L3c8d82;
  catch `java.lang.Throwable` @[L3c8d6e..L3c8d86] goto L3c8d82;
}
procedure `void` `abort`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v2 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.abort:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c8e3c.  v0:= v2.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8e40.  v1:= 0I;
  #L3c8e42.  call `g`(v0, v2, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.g:(Lcom/bumptech/glide/disklrucache/DiskLruCache;Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;Z)V` @kind static;
  #L3c8e48.  return @kind void;
}
procedure `void` `abortUnlessCommitted`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v1 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.abortUnlessCommitted:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3c8e5c.  v0:= v1.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.c` @type ^`boolean` @kind boolean;
  #L3c8e60.  if v0 != 0 then goto L3c8e6a;
  #L3c8e64.  call `abort`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.abort:()V` @kind virtual;
  #L3c8e6a.  return @kind void;
  catch `java.io.IOException` @[L3c8e64..L3c8e6a] goto L3c8e6a;
}
procedure `void` `commit`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v2 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.commit:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c8e8c.  v0:= v2.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8e90.  v1:= 1I;
  #L3c8e92.  call `g`(v0, v2, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.g:(Lcom/bumptech/glide/disklrucache/DiskLruCache;Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;Z)V` @kind static;
  #L3c8e98.  v2.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.c` @type ^`boolean` := v1 @kind boolean;
  #L3c8e9c.  return @kind void;
}
procedure `java.io.File` `getFile`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v3 @kind this, `int` v4 ) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.getFile:(I)Ljava/io/File;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c8c94.  v0:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8c98.  @monitorenter v0
  #L3c8c9a.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8c9e.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.g:(Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;` @kind static;
  #L3c8ca4.  v1:= temp @kind object;
  #L3c8ca6.  if v1 != v3 then goto L3c8cfe;
  #L3c8caa.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8cae.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.e:(Lcom/bumptech/glide/disklrucache/DiskLruCache$c;)Z` @kind static;
  #L3c8cb4.  v1:= temp;
  #L3c8cb6.  if v1 != 0 then goto L3c8cc4;
  #L3c8cba.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.b` @type ^`boolean`[] @kind object;
  #L3c8cbe.  v2:= 1I;
  #L3c8cc0.  v1[v4]:= v2 @kind boolean;
  #L3c8cc4.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache$c` @kind object;
  #L3c8cc8.  call temp:= `k`(v1, v4) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$c;.k:(I)Ljava/io/File;` @kind virtual;
  #L3c8cce.  v4:= temp @kind object;
  #L3c8cd0.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8cd4.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.f:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Ljava/io/File;` @kind static;
  #L3c8cda.  v1:= temp @kind object;
  #L3c8cdc.  call temp:= `exists`(v1) @signature `Ljava/io/File;.exists:()Z` @kind virtual;
  #L3c8ce2.  v1:= temp;
  #L3c8ce4.  if v1 != 0 then goto L3c8cfa;
  #L3c8ce8.  v1:= v3.`com.bumptech.glide.disklrucache.DiskLruCache$Editor.d` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8cec.  call temp:= `f`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.f:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Ljava/io/File;` @kind static;
  #L3c8cf2.  v1:= temp @kind object;
  #L3c8cf4.  call temp:= `mkdirs`(v1) @signature `Ljava/io/File;.mkdirs:()Z` @kind virtual;
  #L3c8cfa.  @monitorexit v0
  #L3c8cfc.  return v4 @kind object;
  #L3c8cfe.  v4:= new `java.lang.IllegalStateException`;
  #L3c8d02.  call `<init>`(v4) @signature `Ljava/lang/IllegalStateException;.<init>:()V` @kind direct;
  #L3c8d08.  throw v4;
  #L3c8d0a.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c8d0c.  @monitorexit v0
  #L3c8d0e.  throw v4;
  catch `java.lang.Throwable` @[L3c8c9a..L3c8d0e] goto L3c8d0a;
}
procedure `java.lang.String` `getString`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.getString:(I)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3c8db8.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.c:(I)Ljava/io/InputStream;` @kind direct;
  #L3c8dbe.  v1:= temp @kind object;
  #L3c8dc0.  if v1 == 0 then goto L3c8dce;
  #L3c8dc4.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.c:(Ljava/io/InputStream;)Ljava/lang/String;` @kind static;
  #L3c8dca.  v1:= temp @kind object;
  #L3c8dcc.  goto L3c8dd0;
  #L3c8dce.  v1:= 0I;
  #L3c8dd0.  return v1 @kind object;
}
procedure `void` `set`(`com.bumptech.glide.disklrucache.DiskLruCache$Editor` v3 @kind this, `int` v4 , `java.lang.String` v5 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.set:(ILjava/lang/String;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3c8eb0.  v0:= 0I;
  #L3c8eb2.  v1:= new `java.io.FileOutputStream`;
  #L3c8eb6.  call temp:= `getFile`(v3, v4) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$Editor;.getFile:(I)Ljava/io/File;` @kind virtual;
  #L3c8ebc.  v4:= temp @kind object;
  #L3c8ebe.  call `<init>`(v1, v4) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3c8ec4.  v4:= new `java.io.OutputStreamWriter`;
  #L3c8ec8.  v2:= `@@com.bumptech.glide.disklrucache.b.b` @type ^`java.nio.charset.Charset` @kind object;
  #L3c8ecc.  call `<init>`(v4, v1, v2) @signature `Ljava/io/OutputStreamWriter;.<init>:(Ljava/io/OutputStream;Ljava/nio/charset/Charset;)V` @kind direct;
  #L3c8ed2.  call `write`(v4, v5) @signature `Ljava/io/Writer;.write:(Ljava/lang/String;)V` @kind virtual;
  #L3c8ed8.  call `a`(v4) @signature `Lcom/bumptech/glide/disklrucache/b;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3c8ede.  return @kind void;
  #L3c8ee0.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c8ee2.  v0:= v4 @kind object;
  #L3c8ee4.  goto L3c8ee8;
  #L3c8ee6.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c8ee8.  call `a`(v0) @signature `Lcom/bumptech/glide/disklrucache/b;.a:(Ljava/io/Closeable;)V` @kind static;
  #L3c8eee.  throw v5;
  catch `java.lang.Throwable` @[L3c8eb2..L3c8ed2] goto L3c8ee6;
  catch `java.lang.Throwable` @[L3c8ed2..L3c8ed8] goto L3c8ee0;
}
