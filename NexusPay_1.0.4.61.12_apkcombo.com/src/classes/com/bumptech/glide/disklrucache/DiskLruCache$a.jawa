record `com.bumptech.glide.disklrucache.DiskLruCache$a` @kind class @AccessFlag  extends `java.util.concurrent.Callable` @kind interface {
  `com.bumptech.glide.disklrucache.DiskLruCache` `com.bumptech.glide.disklrucache.DiskLruCache$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v0 @kind this, `com.bumptech.glide.disklrucache.DiskLruCache` v1 @kind object) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.<init>:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c8bd8.  v0.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` := v1 @kind object;
  #L3c8bdc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c8be2.  return @kind void;
}
procedure `java.lang.Void` `a`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v4 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.a:()Ljava/lang/Void;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c8b64.  v0:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8b68.  @monitorenter v0
  #L3c8b6a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8b6e.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.a:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Ljava/io/Writer;` @kind static;
  #L3c8b74.  v1:= temp @kind object;
  #L3c8b76.  v2:= 0I;
  #L3c8b78.  if v1 != 0 then goto L3c8b80;
  #L3c8b7c.  @monitorexit v0
  #L3c8b7e.  return v2 @kind object;
  #L3c8b80.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8b84.  call `e`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.e:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @kind static;
  #L3c8b8a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8b8e.  call temp:= `h`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.h:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)Z` @kind static;
  #L3c8b94.  v1:= temp;
  #L3c8b96.  if v1 == 0 then goto L3c8bb0;
  #L3c8b9a.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8b9e.  call `i`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.i:(Lcom/bumptech/glide/disklrucache/DiskLruCache;)V` @kind static;
  #L3c8ba4.  v1:= v4.`com.bumptech.glide.disklrucache.DiskLruCache$a.a` @type ^`com.bumptech.glide.disklrucache.DiskLruCache` @kind object;
  #L3c8ba8.  v3:= 0I;
  #L3c8baa.  call temp:= `j`(v1, v3) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache;.j:(Lcom/bumptech/glide/disklrucache/DiskLruCache;I)I` @kind static;
  #L3c8bb0.  @monitorexit v0
  #L3c8bb2.  return v2 @kind object;
  #L3c8bb4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c8bb6.  @monitorexit v0
  #L3c8bb8.  throw v1;
  catch `java.lang.Throwable` @[L3c8b6a..L3c8bb8] goto L3c8bb4;
}
procedure `java.lang.Object` `call`(`com.bumptech.glide.disklrucache.DiskLruCache$a` v1 @kind this) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.call:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c8b48.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/disklrucache/DiskLruCache$a;.a:()Ljava/lang/Void;` @kind virtual;
  #L3c8b4e.  v0:= temp @kind object;
  #L3c8b50.  return v0 @kind object;
}
