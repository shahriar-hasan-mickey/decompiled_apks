record `com.bumptech.glide.RequestManager$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.RequestManager` `com.bumptech.glide.RequestManager$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.RequestManager$a` v0 @kind this, `com.bumptech.glide.RequestManager` v1 @kind object) @signature `Lcom/bumptech/glide/RequestManager$a;.<init>:(Lcom/bumptech/glide/RequestManager;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3c7d68.  v0.`com.bumptech.glide.RequestManager$a.a` @type ^`com.bumptech.glide.RequestManager` := v1 @kind object;
  #L3c7d6c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c7d72.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.RequestManager$a` v2 @kind this) @signature `Lcom/bumptech/glide/RequestManager$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3c7d84.  v0:= v2.`com.bumptech.glide.RequestManager$a.a` @type ^`com.bumptech.glide.RequestManager` @kind object;
  #L3c7d88.  v1:= v0.`com.bumptech.glide.RequestManager.a` @type ^`com.bumptech.glide.manager.Lifecycle` @kind object;
  #L3c7d8c.  call `addListener`(v1, v0) @signature `Lcom/bumptech/glide/manager/Lifecycle;.addListener:(Lcom/bumptech/glide/manager/LifecycleListener;)V` @kind interface;
  #L3c7d92.  return @kind void;
}
