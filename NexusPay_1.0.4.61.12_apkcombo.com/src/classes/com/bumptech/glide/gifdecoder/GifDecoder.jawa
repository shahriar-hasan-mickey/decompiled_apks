record `com.bumptech.glide.gifdecoder.GifDecoder` @kind interface @AccessFlag PUBLIC_ABSTRACT_INTERFACE {
}
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_FORMAT_ERROR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_OK` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_OPEN_ERROR` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.STATUS_PARTIAL_DECODE` @AccessFlag PUBLIC_STATIC_FINAL;
global `int` `@@com.bumptech.glide.gifdecoder.GifDecoder.TOTAL_ITERATION_COUNT_FOREVER` @AccessFlag PUBLIC_STATIC_FINAL;
procedure `void` `advance`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.advance:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `clear`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.clear:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getByteSize`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getByteSize:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getCurrentFrameIndex`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getCurrentFrameIndex:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `java.nio.ByteBuffer` `getData`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getData:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getDelay`(`int` v0 ) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getDelay:(I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getFrameCount`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getFrameCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getHeight`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getHeight:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getLoopCount`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getLoopCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getNetscapeLoopCount`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNetscapeLoopCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getNextDelay`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextDelay:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `android.graphics.Bitmap` `getNextFrame`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getNextFrame:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getStatus`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getStatus:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getTotalIterationCount`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getTotalIterationCount:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `getWidth`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.getWidth:()I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `read`(`java.io.InputStream` v0 @kind object, `int` v1 ) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:(Ljava/io/InputStream;I)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `int` `read`(`byte`[] v0 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.read:([B)I` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `resetFrameIndex`() @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.resetFrameIndex:()V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.GifHeader` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.GifHeader` v0 @kind object, `java.nio.ByteBuffer` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.GifHeader` v0 @kind object, `byte`[] v1 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
procedure `void` `setDefaultBitmapConfig`(`android.graphics.Bitmap$Config` v0 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder;.setDefaultBitmapConfig:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC_ABSTRACT {

  # return;
}
