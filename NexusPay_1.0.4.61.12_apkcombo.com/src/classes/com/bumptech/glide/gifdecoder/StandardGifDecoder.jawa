record `com.bumptech.glide.gifdecoder.StandardGifDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.gifdecoder.GifDecoder` @kind interface {
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @AccessFlag PRIVATE;
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` `com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @AccessFlag PRIVATE_FINAL;
  `java.nio.ByteBuffer` `com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeaderParser` `com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @AccessFlag PRIVATE;
  `short`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @AccessFlag PRIVATE;
  `byte`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @AccessFlag PRIVATE;
  `int`[] `com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @AccessFlag PRIVATE;
  `com.bumptech.glide.gifdecoder.GifHeader` `com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @AccessFlag PRIVATE;
  `android.graphics.Bitmap` `com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @AccessFlag PRIVATE;
  `java.lang.Boolean` `com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @AccessFlag PRIVATE;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @AccessFlag PRIVATE;
}
global `java.lang.String` `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3cbbec.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cbc00.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cbc06.  v0:= 256I;
  #L3cbc0a.  v0:= new `int`[v0];
  #L3cbc0e.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] := v0 @kind object;
  #L3cbc12.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cbc16.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L3cbc1a.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` := v2 @kind object;
  #L3cbc1e.  v2:= new `com.bumptech.glide.gifdecoder.GifHeader`;
  #L3cbc22.  call `<init>`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeader;.<init>:()V` @kind direct;
  #L3cbc28.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v2 @kind object;
  #L3cbc2c.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v2 @kind object, `com.bumptech.glide.gifdecoder.GifHeader` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cbc40.  v0:= 1I;
  #L3cbc42.  call `<init>`(v1, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind direct;
  #L3cbc48.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v0 @kind this, `com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` v1 @kind object, `com.bumptech.glide.gifdecoder.GifHeader` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3cbc5c.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.<init>:(Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;)V` @kind direct;
  #L3cbc62.  call `setData`(v0, v2, v3, v4) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind virtual;
  #L3cbc68.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v9 @kind this, `int` v10 , `int` v11 , `int` v12 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.a:(III)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3cb7d4.  v0:= 0I;
  #L3cb7d6.  v1:= v10;
  #L3cb7d8.  v2:= 0I;
  #L3cb7da.  v3:= 0I;
  #L3cb7dc.  v4:= 0I;
  #L3cb7de.  v5:= 0I;
  #L3cb7e0.  v6:= 0I;
  #L3cb7e2.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cb7e6.  v7:= v7 + v10 @kind int;
  #L3cb7e8.  if v1 >= v7 then goto L3cb83c;
  #L3cb7ec.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cb7f0.  v8:= length @variable v7;
  #L3cb7f2.  if v1 >= v8 then goto L3cb83c;
  #L3cb7f6.  if v1 >= v11 then goto L3cb83c;
  #L3cb7fa.  v7:= v7[v1] @kind byte;
  #L3cb7fe.  v7:= v7 ^& 255;
  #L3cb802.  v8:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3cb806.  v7:= v8[v7];
  #L3cb80a.  if v7 == 0 then goto L3cb836;
  #L3cb80e.  v8:= v7 ^> 24;
  #L3cb812.  v8:= v8 ^& 255;
  #L3cb816.  v2:= v2 + v8 @kind int;
  #L3cb818.  v8:= v7 ^> 16;
  #L3cb81c.  v8:= v8 ^& 255;
  #L3cb820.  v3:= v3 + v8 @kind int;
  #L3cb822.  v8:= v7 ^> 8;
  #L3cb826.  v8:= v8 ^& 255;
  #L3cb82a.  v4:= v4 + v8 @kind int;
  #L3cb82c.  v7:= v7 ^& 255;
  #L3cb830.  v5:= v5 + v7 @kind int;
  #L3cb832.  v6:= v6 + 1;
  #L3cb836.  v1:= v1 + 1;
  #L3cb83a.  goto L3cb7e2;
  #L3cb83c.  v10:= v10 + v12 @kind int;
  #L3cb83e.  v12:= v10;
  #L3cb840.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cb844.  v1:= v1 + v10 @kind int;
  #L3cb846.  if v12 >= v1 then goto L3cb89a;
  #L3cb84a.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cb84e.  v7:= length @variable v1;
  #L3cb850.  if v12 >= v7 then goto L3cb89a;
  #L3cb854.  if v12 >= v11 then goto L3cb89a;
  #L3cb858.  v1:= v1[v12] @kind byte;
  #L3cb85c.  v1:= v1 ^& 255;
  #L3cb860.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3cb864.  v1:= v7[v1];
  #L3cb868.  if v1 == 0 then goto L3cb894;
  #L3cb86c.  v7:= v1 ^> 24;
  #L3cb870.  v7:= v7 ^& 255;
  #L3cb874.  v2:= v2 + v7 @kind int;
  #L3cb876.  v7:= v1 ^> 16;
  #L3cb87a.  v7:= v7 ^& 255;
  #L3cb87e.  v3:= v3 + v7 @kind int;
  #L3cb880.  v7:= v1 ^> 8;
  #L3cb884.  v7:= v7 ^& 255;
  #L3cb888.  v4:= v4 + v7 @kind int;
  #L3cb88a.  v1:= v1 ^& 255;
  #L3cb88e.  v5:= v5 + v1 @kind int;
  #L3cb890.  v6:= v6 + 1;
  #L3cb894.  v12:= v12 + 1;
  #L3cb898.  goto L3cb840;
  #L3cb89a.  if v6 != 0 then goto L3cb8a0;
  #L3cb89e.  return v0;
  #L3cb8a0.  v2:= v2 / v6 @kind int;
  #L3cb8a2.  v10:= v2 ^< 24;
  #L3cb8a6.  v3:= v3 / v6 @kind int;
  #L3cb8a8.  v11:= v3 ^< 16;
  #L3cb8ac.  v10:= v10 ^| v11 @kind int;
  #L3cb8ae.  v4:= v4 / v6 @kind int;
  #L3cb8b0.  v11:= v4 ^< 8;
  #L3cb8b4.  v10:= v10 ^| v11 @kind int;
  #L3cb8b6.  v5:= v5 / v6 @kind int;
  #L3cb8b8.  v10:= v10 ^| v5 @kind int;
  #L3cb8ba.  return v10;
}
procedure `void` `b`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v23 @kind this, `com.bumptech.glide.gifdecoder.a` v24 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.b:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;

  #L3cbd10.  v0:= v23 @kind object;
  #L3cbd14.  v1:= v24 @kind object;
  #L3cbd18.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3cbd1c.  v3:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3cbd20.  v4:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cbd24.  v3:= v3 / v4 @kind int;
  #L3cbd26.  v5:= v1.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3cbd2a.  v5:= v5 / v4 @kind int;
  #L3cbd2c.  v6:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cbd30.  v6:= v6 / v4 @kind int;
  #L3cbd32.  v7:= v1.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3cbd36.  v7:= v7 / v4 @kind int;
  #L3cbd38.  v4:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cbd3c.  if v4 != 0 then goto L3cbd44;
  #L3cbd40.  v4:= 1I;
  #L3cbd42.  goto L3cbd46;
  #L3cbd44.  v4:= 0I;
  #L3cbd46.  v10:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cbd4a.  v11:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cbd4e.  v12:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cbd52.  v13:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cbd56.  v14:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3cbd5a.  v15:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3cbd5e.  v16:= 8I;
  #L3cbd62.  v8:= 0I;
  #L3cbd64.  v9:= 0I;
  #L3cbd66.  v18:= 1I;
  #L3cbd6a.  if v8 >= v3 then goto L3cbec4;
  #L3cbd6e.  v19:= v15 @kind object;
  #L3cbd72.  v15:= v1.`com.bumptech.glide.gifdecoder.a.e` @type ^`boolean` @kind boolean;
  #L3cbd76.  if v15 == 0 then goto L3cbdcc;
  #L3cbd7a.  v15:= 2I;
  #L3cbd7c.  if v9 < v3 then goto L3cbdc2;
  #L3cbd80.  v21:= v3;
  #L3cbd84.  v3:= v18 + 1;
  #L3cbd88.  if v3 == v15 then goto L3cbdb8;
  #L3cbd8c.  v15:= 3I;
  #L3cbd8e.  if v3 == v15 then goto L3cbdaa;
  #L3cbd92.  v15:= 4I;
  #L3cbd94.  if v3 == v15 then goto L3cbd9e;
  #L3cbd98.  v18:= v3;
  #L3cbd9c.  goto L3cbdc6;
  #L3cbd9e.  v18:= v3;
  #L3cbda2.  v9:= 1I;
  #L3cbda4.  v16:= 2I;
  #L3cbda8.  goto L3cbdc6;
  #L3cbdaa.  v15:= 4I;
  #L3cbdac.  v18:= v3;
  #L3cbdb0.  v9:= 2I;
  #L3cbdb2.  v16:= 4I;
  #L3cbdb6.  goto L3cbdc6;
  #L3cbdb8.  v15:= 4I;
  #L3cbdba.  v18:= v3;
  #L3cbdbe.  v9:= 4I;
  #L3cbdc0.  goto L3cbdc6;
  #L3cbdc2.  v21:= v3;
  #L3cbdc6.  v3:= v9 + v16 @kind int;
  #L3cbdca.  goto L3cbdd4;
  #L3cbdcc.  v21:= v3;
  #L3cbdd0.  v3:= v9;
  #L3cbdd2.  v9:= v8;
  #L3cbdd4.  v9:= v9 + v5 @kind int;
  #L3cbdd6.  v15:= 1I;
  #L3cbdd8.  if v10 != v15 then goto L3cbde2;
  #L3cbddc.  v17:= 1I;
  #L3cbde0.  goto L3cbde6;
  #L3cbde2.  v17:= 0I;
  #L3cbde6.  if v9 >= v12 then goto L3cbe9c;
  #L3cbdea.  v9:= v9 * v11 @kind int;
  #L3cbdee.  v20:= v9 + v7 @kind int;
  #L3cbdf2.  v15:= v20 + v6 @kind int;
  #L3cbdf6.  v9:= v9 + v11 @kind int;
  #L3cbdf8.  if v9 >= v15 then goto L3cbdfe;
  #L3cbdfc.  v15:= v9;
  #L3cbdfe.  v9:= v8 * v10 @kind int;
  #L3cbe02.  v22:= v3;
  #L3cbe06.  v3:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cbe0a.  v9:= v9 * v3 @kind int;
  #L3cbe0e.  if v17 == 0 then goto L3cbe50;
  #L3cbe12.  v3:= v20;
  #L3cbe16.  if v3 >= v15 then goto L3cbea0;
  #L3cbe1a.  v17:= v5;
  #L3cbe1e.  v5:= v13[v9] @kind byte;
  #L3cbe22.  v5:= v5 ^& 255;
  #L3cbe26.  v5:= v14[v5];
  #L3cbe2a.  if v5 == 0 then goto L3cbe34;
  #L3cbe2e.  v2[v3]:= v5;
  #L3cbe32.  goto L3cbe44;
  #L3cbe34.  if v4 == 0 then goto L3cbe44;
  #L3cbe38.  if v19 != 0 then goto L3cbe44;
  #L3cbe3c.  v5:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3cbe40.  v19:= v5 @kind object;
  #L3cbe44.  v9:= v9 + v10 @kind int;
  #L3cbe46.  v3:= v3 + 1;
  #L3cbe4a.  v5:= v17;
  #L3cbe4e.  goto L3cbe16;
  #L3cbe50.  v17:= v5;
  #L3cbe54.  v3:= v15 - v20 @kind int;
  #L3cbe58.  v3:= v3 * v10 @kind int;
  #L3cbe5c.  v3:= v3 + v9 @kind int;
  #L3cbe5e.  v5:= v20;
  #L3cbe62.  v20:= v6;
  #L3cbe66.  if v5 >= v15 then goto L3cbea8;
  #L3cbe6a.  v6:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cbe6e.  call temp:= `a`(v0, v9, v3, v6) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.a:(III)I` @kind direct;
  #L3cbe74.  v6:= temp;
  #L3cbe76.  if v6 == 0 then goto L3cbe80;
  #L3cbe7a.  v2[v5]:= v6;
  #L3cbe7e.  goto L3cbe90;
  #L3cbe80.  if v4 == 0 then goto L3cbe90;
  #L3cbe84.  if v19 != 0 then goto L3cbe90;
  #L3cbe88.  v6:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3cbe8c.  v19:= v6 @kind object;
  #L3cbe90.  v9:= v9 + v10 @kind int;
  #L3cbe92.  v5:= v5 + 1;
  #L3cbe96.  v6:= v20;
  #L3cbe9a.  goto L3cbe62;
  #L3cbe9c.  v22:= v3;
  #L3cbea0.  v17:= v5;
  #L3cbea4.  v20:= v6;
  #L3cbea8.  v15:= v19 @kind object;
  #L3cbeac.  v8:= v8 + 1;
  #L3cbeb0.  v5:= v17;
  #L3cbeb4.  v6:= v20;
  #L3cbeb8.  v3:= v21;
  #L3cbebc.  v9:= v22;
  #L3cbec0.  goto L3cbd6a;
  #L3cbec4.  v19:= v15 @kind object;
  #L3cbec8.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3cbecc.  if v1 != 0 then goto L3cbeec;
  #L3cbed0.  if v19 != 0 then goto L3cbed8;
  #L3cbed4.  v8:= 0I;
  #L3cbed6.  goto L3cbee0;
  #L3cbed8.  call temp:= `booleanValue`(v19) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3cbede.  v8:= temp;
  #L3cbee0.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3cbee6.  v1:= temp @kind object;
  #L3cbee8.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3cbeec.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v18 @kind this, `com.bumptech.glide.gifdecoder.a` v19 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.c:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;

  #L3cbf00.  v0:= v18 @kind object;
  #L3cbf04.  v1:= v19 @kind object;
  #L3cbf08.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3cbf0c.  v3:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3cbf10.  v4:= v1.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3cbf14.  v5:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cbf18.  v6:= v1.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3cbf1c.  v7:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cbf20.  if v7 != 0 then goto L3cbf28;
  #L3cbf24.  v7:= 1I;
  #L3cbf26.  goto L3cbf2a;
  #L3cbf28.  v7:= 0I;
  #L3cbf2a.  v10:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cbf2e.  v11:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cbf32.  v12:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] @kind object;
  #L3cbf36.  v14:= 0I;
  #L3cbf38.  v15:= -1I;
  #L3cbf3a.  if v14 >= v3 then goto L3cbfa8;
  #L3cbf3e.  v16:= v14 + v4 @kind int;
  #L3cbf42.  v16:= v16 * v10 @kind int;
  #L3cbf46.  v17:= v16 + v6 @kind int;
  #L3cbf4a.  v8:= v17 + v5 @kind int;
  #L3cbf4e.  v9:= v16 + v10 @kind int;
  #L3cbf52.  if v9 >= v8 then goto L3cbf58;
  #L3cbf56.  v8:= v9;
  #L3cbf58.  v9:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cbf5c.  v9:= v9 * v14 @kind int;
  #L3cbf60.  v13:= v17;
  #L3cbf64.  if v13 >= v8 then goto L3cbf9a;
  #L3cbf68.  v1:= v11[v9] @kind byte;
  #L3cbf6c.  v17:= v3;
  #L3cbf70.  v3:= v1 ^& 255;
  #L3cbf74.  if v3 == v15 then goto L3cbf88;
  #L3cbf78.  v3:= v12[v3];
  #L3cbf7c.  if v3 == 0 then goto L3cbf86;
  #L3cbf80.  v2[v13]:= v3;
  #L3cbf84.  goto L3cbf88;
  #L3cbf86.  v15:= v1;
  #L3cbf88.  v9:= v9 + 1;
  #L3cbf8c.  v13:= v13 + 1;
  #L3cbf90.  v1:= v19 @kind object;
  #L3cbf94.  v3:= v17;
  #L3cbf98.  goto L3cbf64;
  #L3cbf9a.  v17:= v3;
  #L3cbf9e.  v14:= v14 + 1;
  #L3cbfa2.  v1:= v19 @kind object;
  #L3cbfa6.  goto L3cbf3a;
  #L3cbfa8.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3cbfac.  if v1 == 0 then goto L3cbfbc;
  #L3cbfb0.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3cbfb6.  v1:= temp;
  #L3cbfb8.  if v1 != 0 then goto L3cbfce;
  #L3cbfbc.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3cbfc0.  if v1 != 0 then goto L3cbfd2;
  #L3cbfc4.  if v7 == 0 then goto L3cbfd2;
  #L3cbfc8.  v1:= -1I;
  #L3cbfca.  if v15 == v1 then goto L3cbfd2;
  #L3cbfce.  v8:= 1I;
  #L3cbfd0.  goto L3cbfd4;
  #L3cbfd2.  v8:= 0I;
  #L3cbfd4.  call temp:= `valueOf`(v8) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3cbfda.  v1:= temp @kind object;
  #L3cbfdc.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v1 @kind object;
  #L3cbfe0.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v28 @kind this, `com.bumptech.glide.gifdecoder.a` v29 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.d:(Lcom/bumptech/glide/gifdecoder/a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;

  #L3cbff4.  v0:= v28 @kind object;
  #L3cbff8.  v1:= v29 @kind object;
  #L3cbffc.  if v1 == 0 then goto L3cc00e;
  #L3cc000.  v2:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cc004.  v3:= v1.`com.bumptech.glide.gifdecoder.a.j` @type ^`int`;
  #L3cc008.  call temp:= `position`(v2, v3) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3cc00e.  if v1 != 0 then goto L3cc020;
  #L3cc012.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cc016.  v2:= v1.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3cc01a.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3cc01e.  goto L3cc028;
  #L3cc020.  v2:= v1.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cc024.  v1:= v1.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3cc028.  v2:= v2 * v1 @kind int;
  #L3cc02c.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cc030.  if v1 == 0 then goto L3cc03a;
  #L3cc034.  v1:= length @variable v1;
  #L3cc036.  if v1 >= v2 then goto L3cc04a;
  #L3cc03a.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cc03e.  call temp:= `obtainByteArray`(v1, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3cc044.  v1:= temp @kind object;
  #L3cc046.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] := v1 @kind object;
  #L3cc04a.  v1:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cc04e.  v3:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] @kind object;
  #L3cc052.  v4:= 4096I;
  #L3cc056.  if v3 != 0 then goto L3cc062;
  #L3cc05a.  v3:= new `short`[v4];
  #L3cc05e.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] := v3 @kind object;
  #L3cc062.  v3:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.g` @type ^`short`[] @kind object;
  #L3cc066.  v5:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] @kind object;
  #L3cc06a.  if v5 != 0 then goto L3cc076;
  #L3cc06e.  v5:= new `byte`[v4];
  #L3cc072.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] := v5 @kind object;
  #L3cc076.  v5:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.h` @type ^`byte`[] @kind object;
  #L3cc07a.  v6:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] @kind object;
  #L3cc07e.  if v6 != 0 then goto L3cc08e;
  #L3cc082.  v6:= 4097I;
  #L3cc086.  v6:= new `byte`[v6];
  #L3cc08a.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] := v6 @kind object;
  #L3cc08e.  v6:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.i` @type ^`byte`[] @kind object;
  #L3cc092.  call temp:= `h`(v28) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @kind direct;
  #L3cc098.  v7:= temp;
  #L3cc09a.  v8:= 1I;
  #L3cc09c.  v9:= v8 ^< v7 @kind int;
  #L3cc0a0.  v10:= v9 + 1;
  #L3cc0a4.  v11:= v9 + 2;
  #L3cc0a8.  v7:= v7 + v8 @kind int;
  #L3cc0aa.  v12:= v8 ^< v7 @kind int;
  #L3cc0ae.  v12:= v12 - v8 @kind int;
  #L3cc0b0.  v13:= 0I;
  #L3cc0b2.  v14:= 0I;
  #L3cc0b4.  if v14 >= v9 then goto L3cc0c8;
  #L3cc0b8.  v3[v14]:= v13 @kind short;
  #L3cc0bc.  v15:= (`byte`) v14 @kind i2b;
  #L3cc0be.  v5[v14]:= v15 @kind byte;
  #L3cc0c2.  v14:= v14 + 1;
  #L3cc0c6.  goto L3cc0b4;
  #L3cc0c8.  v14:= v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3cc0cc.  v15:= -1I;
  #L3cc0ce.  v23:= v7;
  #L3cc0d2.  v21:= v11;
  #L3cc0d6.  v22:= v12;
  #L3cc0da.  v16:= 0I;
  #L3cc0de.  v17:= 0I;
  #L3cc0e2.  v18:= 0I;
  #L3cc0e6.  v19:= 0I;
  #L3cc0ea.  v20:= 0I;
  #L3cc0ee.  v24:= -1I;
  #L3cc0f2.  v25:= 0I;
  #L3cc0f6.  v26:= 0I;
  #L3cc0fa.  if v13 >= v2 then goto L3cc28c;
  #L3cc0fe.  if v16 != 0 then goto L3cc11c;
  #L3cc102.  call temp:= `g`(v28) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.g:()I` @kind direct;
  #L3cc108.  v16:= temp;
  #L3cc10a.  if v16 > 0 then goto L3cc118;
  #L3cc10e.  v3:= 3I;
  #L3cc110.  v0.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v3;
  #L3cc114.  goto L3cc28c;
  #L3cc118.  v17:= 0I;
  #L3cc11c.  v4:= v14[v17] @kind byte;
  #L3cc120.  v4:= v4 ^& 255;
  #L3cc124.  v4:= v4 ^< v18 @kind int;
  #L3cc128.  v19:= v19 + v4 @kind int;
  #L3cc12c.  v18:= v18 + 8;
  #L3cc130.  v17:= v17 + 1;
  #L3cc134.  v16:= v16 + -1;
  #L3cc138.  v4:= v18;
  #L3cc13c.  v8:= v21;
  #L3cc140.  v15:= v23;
  #L3cc144.  v0:= v24;
  #L3cc148.  v23:= v7;
  #L3cc14c.  v7:= v25;
  #L3cc150.  if v4 < v15 then goto L3cc260;
  #L3cc154.  v24:= v11;
  #L3cc158.  v11:= v19 ^& v22 @kind int;
  #L3cc15c.  v19:= v19 ^> v15 @kind int;
  #L3cc160.  v4:= v4 - v15 @kind int;
  #L3cc162.  if v11 != v9 then goto L3cc178;
  #L3cc166.  v22:= v12;
  #L3cc16a.  v15:= v23;
  #L3cc16e.  v8:= v24;
  #L3cc172.  v11:= v8;
  #L3cc174.  v0:= -1I;
  #L3cc176.  goto L3cc150;
  #L3cc178.  if v11 != v10 then goto L3cc1a6;
  #L3cc17c.  v18:= v4;
  #L3cc180.  v25:= v7;
  #L3cc184.  v21:= v8;
  #L3cc188.  v7:= v23;
  #L3cc18c.  v11:= v24;
  #L3cc190.  v4:= 4096I;
  #L3cc194.  v8:= 1I;
  #L3cc196.  v24:= v0;
  #L3cc19a.  v23:= v15;
  #L3cc19e.  v15:= -1I;
  #L3cc1a0.  v0:= v28 @kind object;
  #L3cc1a4.  goto L3cc0fa;
  #L3cc1a6.  v25:= v4;
  #L3cc1aa.  v4:= -1I;
  #L3cc1ac.  if v0 != v4 then goto L3cc1ce;
  #L3cc1b0.  v0:= v5[v11] @kind byte;
  #L3cc1b4.  v1[v20]:= v0 @kind byte;
  #L3cc1b8.  v20:= v20 + 1;
  #L3cc1bc.  v13:= v13 + 1;
  #L3cc1c0.  v0:= v11;
  #L3cc1c2.  v7:= v0;
  #L3cc1c4.  v11:= v24;
  #L3cc1c8.  v4:= v25;
  #L3cc1cc.  goto L3cc150;
  #L3cc1ce.  if v11 < v8 then goto L3cc1e0;
  #L3cc1d2.  v7:= (`byte`) v7 @kind i2b;
  #L3cc1d4.  v6[v26]:= v7 @kind byte;
  #L3cc1d8.  v26:= v26 + 1;
  #L3cc1dc.  v7:= v0;
  #L3cc1de.  goto L3cc1e2;
  #L3cc1e0.  v7:= v11;
  #L3cc1e2.  if v7 < v9 then goto L3cc1f8;
  #L3cc1e6.  v21:= v5[v7] @kind byte;
  #L3cc1ea.  v6[v26]:= v21 @kind byte;
  #L3cc1ee.  v26:= v26 + 1;
  #L3cc1f2.  v7:= v3[v7] @kind short;
  #L3cc1f6.  goto L3cc1e2;
  #L3cc1f8.  v7:= v5[v7] @kind byte;
  #L3cc1fc.  v7:= v7 ^& 255;
  #L3cc200.  v4:= (`byte`) v7 @kind i2b;
  #L3cc202.  v1[v20]:= v4 @kind byte;
  #L3cc206.  v20:= v20 + 1;
  #L3cc20a.  v13:= v13 + 1;
  #L3cc20e.  if v26 <= 0 then goto L3cc220;
  #L3cc212.  v26:= v26 + -1;
  #L3cc216.  v27:= v6[v26] @kind byte;
  #L3cc21a.  v1[v20]:= v27 @kind byte;
  #L3cc21e.  goto L3cc206;
  #L3cc220.  v27:= v6 @kind object;
  #L3cc224.  v6:= 4096I;
  #L3cc228.  if v8 >= v6 then goto L3cc24e;
  #L3cc22c.  v0:= (`short`) v0 @kind i2s;
  #L3cc22e.  v3[v8]:= v0 @kind short;
  #L3cc232.  v5[v8]:= v4 @kind byte;
  #L3cc236.  v8:= v8 + 1;
  #L3cc23a.  v0:= v8 ^& v22 @kind int;
  #L3cc23e.  if v0 != 0 then goto L3cc24e;
  #L3cc242.  if v8 >= v6 then goto L3cc24e;
  #L3cc246.  v15:= v15 + 1;
  #L3cc24a.  v22:= v22 + v8 @kind int;
  #L3cc24e.  v0:= v11;
  #L3cc250.  v11:= v24;
  #L3cc254.  v4:= v25;
  #L3cc258.  v6:= v27 @kind object;
  #L3cc25c.  goto L3cc150;
  #L3cc260.  v25:= v4;
  #L3cc264.  v24:= v0;
  #L3cc268.  v21:= v8;
  #L3cc26c.  v18:= v25;
  #L3cc270.  v4:= 4096I;
  #L3cc274.  v8:= 1I;
  #L3cc276.  v0:= v28 @kind object;
  #L3cc27a.  v25:= v7;
  #L3cc27e.  v7:= v23;
  #L3cc282.  v23:= v15;
  #L3cc286.  v15:= -1I;
  #L3cc288.  goto L3cc0fa;
  #L3cc28c.  v13:= v20;
  #L3cc290.  v0:= 0I;
  #L3cc292.  call `fill`(v1, v13, v2, v0) @signature `Ljava/util/Arrays;.fill:([BIIB)V` @kind static;
  #L3cc298.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifHeaderParser` `e`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.e:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cb7a8.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L3cb7ac.  if v0 != 0 then goto L3cb7be;
  #L3cb7b0.  v0:= new `com.bumptech.glide.gifdecoder.GifHeaderParser`;
  #L3cb7b4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.<init>:()V` @kind direct;
  #L3cb7ba.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` := v0 @kind object;
  #L3cb7be.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.f` @type ^`com.bumptech.glide.gifdecoder.GifHeaderParser` @kind object;
  #L3cb7c2.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `f`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v4 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cb3b8.  v0:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` @kind object;
  #L3cb3bc.  if v0 == 0 then goto L3cb3d4;
  #L3cb3c0.  call temp:= `booleanValue`(v0) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3cb3c6.  v0:= temp;
  #L3cb3c8.  if v0 == 0 then goto L3cb3ce;
  #L3cb3cc.  goto L3cb3d4;
  #L3cb3ce.  v0:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cb3d2.  goto L3cb3d8;
  #L3cb3d4.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cb3d8.  v1:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cb3dc.  v2:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb3e0.  v3:= v4.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cb3e4.  call temp:= `obtain`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtain:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3cb3ea.  v0:= temp @kind object;
  #L3cb3ec.  v1:= 1I;
  #L3cb3ee.  call `setHasAlpha`(v0, v1) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3cb3f4.  return v0 @kind object;
}
procedure `int` `g`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v5 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.g:()I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cbb70.  call temp:= `h`(v5) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @kind direct;
  #L3cbb76.  v0:= temp;
  #L3cbb78.  if v0 > 0 then goto L3cbb7e;
  #L3cbb7c.  return v0;
  #L3cbb7e.  v1:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cbb82.  v2:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3cbb86.  v3:= 0I;
  #L3cbb88.  call temp:= `remaining`(v1) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3cbb8e.  v4:= temp;
  #L3cbb90.  call temp:= `min`(v0, v4) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3cbb96.  v4:= temp;
  #L3cbb98.  call temp:= `get`(v1, v2, v3, v4) @signature `Ljava/nio/ByteBuffer;.get:([BII)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3cbb9e.  return v0;
}
procedure `int` `h`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.h:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3cbbb0.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cbbb4.  call temp:= `get`(v0) @signature `Ljava/nio/ByteBuffer;.get:()B` @kind virtual;
  #L3cbbba.  v0:= temp;
  #L3cbbbc.  v0:= v0 ^& 255;
  #L3cbbc0.  return v0;
}
procedure `android.graphics.Bitmap` `i`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v9 @kind this, `com.bumptech.glide.gifdecoder.a` v10 @kind object, `com.bumptech.glide.gifdecoder.a` v11 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.i:(Lcom/bumptech/glide/gifdecoder/a;Lcom/bumptech/glide/gifdecoder/a;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3cb618.  v8:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3cb61c.  v0:= 0I;
  #L3cb61e.  if v11 != 0 then goto L3cb640;
  #L3cb622.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cb626.  if v1 == 0 then goto L3cb634;
  #L3cb62a.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cb62e.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3cb634.  v1:= 0I;
  #L3cb636.  v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v1 @kind object;
  #L3cb63a.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L3cb640.  v1:= 3I;
  #L3cb642.  if v11 == 0 then goto L3cb65c;
  #L3cb646.  v2:= v11.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3cb64a.  if v2 != v1 then goto L3cb65c;
  #L3cb64e.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cb652.  if v2 != 0 then goto L3cb65c;
  #L3cb656.  call `fill`(v8, v0) @signature `Ljava/util/Arrays;.fill:([II)V` @kind static;
  #L3cb65c.  if v11 == 0 then goto L3cb706;
  #L3cb660.  v2:= v11.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3cb664.  if v2 <= 0 then goto L3cb706;
  #L3cb668.  v3:= 2I;
  #L3cb66a.  if v2 != v3 then goto L3cb6e2;
  #L3cb66e.  v1:= v10.`com.bumptech.glide.gifdecoder.a.f` @type ^`boolean` @kind boolean;
  #L3cb672.  if v1 != 0 then goto L3cb696;
  #L3cb676.  v1:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb67a.  v2:= v1.`com.bumptech.glide.gifdecoder.GifHeader.l` @type ^`int`;
  #L3cb67e.  v3:= v10.`com.bumptech.glide.gifdecoder.a.k` @type ^`int`[] @kind object;
  #L3cb682.  if v3 == 0 then goto L3cb694;
  #L3cb686.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.j` @type ^`int`;
  #L3cb68a.  v3:= v10.`com.bumptech.glide.gifdecoder.a.h` @type ^`int`;
  #L3cb68e.  if v1 != v3 then goto L3cb694;
  #L3cb692.  goto L3cb696;
  #L3cb694.  v0:= v2;
  #L3cb696.  v1:= v11.`com.bumptech.glide.gifdecoder.a.d` @type ^`int`;
  #L3cb69a.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cb69e.  v1:= v1 / v2 @kind int;
  #L3cb6a0.  v3:= v11.`com.bumptech.glide.gifdecoder.a.b` @type ^`int`;
  #L3cb6a4.  v3:= v3 / v2 @kind int;
  #L3cb6a6.  v4:= v11.`com.bumptech.glide.gifdecoder.a.c` @type ^`int`;
  #L3cb6aa.  v4:= v4 / v2 @kind int;
  #L3cb6ac.  v11:= v11.`com.bumptech.glide.gifdecoder.a.a` @type ^`int`;
  #L3cb6b0.  v11:= v11 / v2 @kind int;
  #L3cb6b2.  v2:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb6b6.  v3:= v3 * v2 @kind int;
  #L3cb6ba.  v3:= v3 + v11 @kind int;
  #L3cb6bc.  v1:= v1 * v2 @kind int;
  #L3cb6c0.  v1:= v1 + v3 @kind int;
  #L3cb6c2.  if v3 >= v1 then goto L3cb706;
  #L3cb6c6.  v11:= v3 + v4 @kind int;
  #L3cb6ca.  v2:= v3;
  #L3cb6cc.  if v2 >= v11 then goto L3cb6da;
  #L3cb6d0.  v8[v2]:= v0;
  #L3cb6d4.  v2:= v2 + 1;
  #L3cb6d8.  goto L3cb6cc;
  #L3cb6da.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb6de.  v3:= v3 + v11 @kind int;
  #L3cb6e0.  goto L3cb6c2;
  #L3cb6e2.  if v2 != v1 then goto L3cb706;
  #L3cb6e6.  v0:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cb6ea.  if v0 == 0 then goto L3cb706;
  #L3cb6ee.  v2:= 0I;
  #L3cb6f0.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb6f4.  v4:= 0I;
  #L3cb6f6.  v5:= 0I;
  #L3cb6f8.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cb6fc.  v1:= v8 @kind object;
  #L3cb6fe.  v3:= v6;
  #L3cb700.  call `getPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.getPixels:([IIIIIII)V` @kind virtual;
  #L3cb706.  call `d`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.d:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3cb70c.  v11:= v10.`com.bumptech.glide.gifdecoder.a.e` @type ^`boolean` @kind boolean;
  #L3cb710.  v0:= 1I;
  #L3cb712.  if v11 != 0 then goto L3cb728;
  #L3cb716.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int`;
  #L3cb71a.  if v11 == v0 then goto L3cb720;
  #L3cb71e.  goto L3cb728;
  #L3cb720.  call `c`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.c:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3cb726.  goto L3cb72e;
  #L3cb728.  call `b`(v9, v10) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.b:(Lcom/bumptech/glide/gifdecoder/a;)V` @kind direct;
  #L3cb72e.  v11:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` @kind boolean;
  #L3cb732.  if v11 == 0 then goto L3cb772;
  #L3cb736.  v10:= v10.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3cb73a.  if v10 == 0 then goto L3cb742;
  #L3cb73e.  if v10 != v0 then goto L3cb772;
  #L3cb742.  v10:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cb746.  if v10 != 0 then goto L3cb756;
  #L3cb74a.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @kind direct;
  #L3cb750.  v10:= temp @kind object;
  #L3cb752.  v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v10 @kind object;
  #L3cb756.  v0:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cb75a.  v2:= 0I;
  #L3cb75c.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb760.  v4:= 0I;
  #L3cb762.  v5:= 0I;
  #L3cb764.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cb768.  v1:= v8 @kind object;
  #L3cb76a.  v3:= v6;
  #L3cb76c.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L3cb772.  call temp:= `f`(v9) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.f:()Landroid/graphics/Bitmap;` @kind direct;
  #L3cb778.  v10:= temp @kind object;
  #L3cb77a.  v2:= 0I;
  #L3cb77c.  v6:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cb780.  v4:= 0I;
  #L3cb782.  v5:= 0I;
  #L3cb784.  v7:= v9.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cb788.  v0:= v10 @kind object;
  #L3cb78a.  v1:= v8 @kind object;
  #L3cb78c.  v3:= v6;
  #L3cb78e.  call `setPixels`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Landroid/graphics/Bitmap;.setPixels:([IIIIIII)V` @kind virtual;
  #L3cb794.  return v10 @kind object;
}
procedure `void` `advance`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.advance:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cbc7c.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cbc80.  v0:= v0 + 1;
  #L3cbc84.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cbc88.  v1:= v1.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cbc8c.  v0:= v0 %% v1 @kind int;
  #L3cbc8e.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v0;
  #L3cbc92.  return @kind void;
}
procedure `void` `clear`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.clear:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cbca4.  v0:= 0I;
  #L3cbca6.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L3cbcaa.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cbcae.  if v1 == 0 then goto L3cbcbc;
  #L3cbcb2.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cbcb6.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([B)V` @kind interface;
  #L3cbcbc.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3cbcc0.  if v1 == 0 then goto L3cbcce;
  #L3cbcc4.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cbcc8.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([I)V` @kind interface;
  #L3cbcce.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` @kind object;
  #L3cbcd2.  if v1 == 0 then goto L3cbce0;
  #L3cbcd6.  v2:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cbcda.  call `release`(v2, v1) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3cbce0.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.n` @type ^`android.graphics.Bitmap` := v0 @kind object;
  #L3cbce4.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` := v0 @kind object;
  #L3cbce8.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v0 @kind object;
  #L3cbcec.  v0:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3cbcf0.  if v0 == 0 then goto L3cbcfe;
  #L3cbcf4.  v1:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cbcf8.  call `release`(v1, v0) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.release:([B)V` @kind interface;
  #L3cbcfe.  return @kind void;
}
procedure `int` `getByteSize`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getByteSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb8cc.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cb8d0.  call temp:= `limit`(v0) @signature `Ljava/nio/ByteBuffer;.limit:()I` @kind virtual;
  #L3cb8d6.  v0:= temp;
  #L3cb8d8.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] @kind object;
  #L3cb8dc.  v1:= length @variable v1;
  #L3cb8de.  v0:= v0 + v1 @kind int;
  #L3cb8e0.  v1:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] @kind object;
  #L3cb8e4.  v1:= length @variable v1;
  #L3cb8e6.  v1:= v1 * 4;
  #L3cb8ea.  v0:= v0 + v1 @kind int;
  #L3cb8ec.  return v0;
}
procedure `int` `getCurrentFrameIndex`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getCurrentFrameIndex:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb900.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb904.  return v0;
}
procedure `java.nio.ByteBuffer` `getData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getData:()Ljava/nio/ByteBuffer;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cbbd4.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cbbd8.  return v0 @kind object;
}
procedure `int` `getDelay`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this, `int` v3 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getDelay:(I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb918.  if v3 < 0 then goto L3cb93e;
  #L3cb91c.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb920.  v1:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cb924.  if v3 >= v1 then goto L3cb93e;
  #L3cb928.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3cb92c.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cb932.  v3:= temp @kind object;
  #L3cb934.  v3:= (`com.bumptech.glide.gifdecoder.a`) v3 @kind object;
  #L3cb938.  v3:= v3.`com.bumptech.glide.gifdecoder.a.i` @type ^`int`;
  #L3cb93c.  goto L3cb940;
  #L3cb93e.  v3:= -1I;
  #L3cb940.  return v3;
}
procedure `int` `getFrameCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getFrameCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb954.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb958.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cb95c.  return v0;
}
procedure `int` `getHeight`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getHeight:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb970.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb974.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3cb978.  return v0;
}
procedure `int` `getLoopCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getLoopCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cb98c.  v0:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb990.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3cb994.  v1:= -1I;
  #L3cb996.  if v0 != v1 then goto L3cb99c;
  #L3cb99a.  v0:= 1I;
  #L3cb99c.  return v0;
}
procedure `int` `getNetscapeLoopCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNetscapeLoopCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb9b0.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb9b4.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3cb9b8.  return v0;
}
procedure `int` `getNextDelay`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNextDelay:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cb9cc.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb9d0.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cb9d4.  if v0 <= 0 then goto L3cb9ec;
  #L3cb9d8.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb9dc.  if v0 >= 0 then goto L3cb9e2;
  #L3cb9e0.  goto L3cb9ec;
  #L3cb9e2.  call temp:= `getDelay`(v1, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getDelay:(I)I` @kind virtual;
  #L3cb9e8.  v0:= temp;
  #L3cb9ea.  return v0;
  #L3cb9ec.  v0:= 0I;
  #L3cb9ee.  return v0;
}
procedure `android.graphics.Bitmap` `getNextFrame`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v8 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getNextFrame:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3cb408.  @monitorenter v8
  #L3cb40a.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb40e.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cb412.  v1:= 3I;
  #L3cb414.  v2:= 1I;
  #L3cb416.  if v0 <= 0 then goto L3cb422;
  #L3cb41a.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb41e.  if v0 >= 0 then goto L3cb47e;
  #L3cb422.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb426.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3cb42c.  v0:= temp;
  #L3cb42e.  if v0 == 0 then goto L3cb47a;
  #L3cb432.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb436.  v3:= new `java.lang.StringBuilder`;
  #L3cb43a.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb440.  v4:= "Unable to decode frame, frameCount=" @kind object;
  #L3cb444.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb44a.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb44e.  v4:= v4.`com.bumptech.glide.gifdecoder.GifHeader.c` @type ^`int`;
  #L3cb452.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb458.  v4:= ", framePointer=" @kind object;
  #L3cb45c.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb462.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb466.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb46c.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb472.  v3:= temp @kind object;
  #L3cb474.  call temp:= `d`(v0, v3) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3cb47a.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v2;
  #L3cb47e.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cb482.  v3:= 0I;
  #L3cb484.  if v0 == v2 then goto L3cb5a0;
  #L3cb488.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cb48c.  v4:= 2I;
  #L3cb48e.  if v0 != v4 then goto L3cb496;
  #L3cb492.  goto L3cb5a0;
  #L3cb496.  v0:= 0I;
  #L3cb498.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v0;
  #L3cb49c.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] @kind object;
  #L3cb4a0.  if v5 != 0 then goto L3cb4b8;
  #L3cb4a4.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cb4a8.  v6:= 255I;
  #L3cb4ac.  call temp:= `obtainByteArray`(v5, v6) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3cb4b2.  v5:= temp @kind object;
  #L3cb4b4.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.e` @type ^`byte`[] := v5 @kind object;
  #L3cb4b8.  v5:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb4bc.  v5:= v5.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3cb4c0.  v6:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb4c4.  call temp:= `get`(v5, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cb4ca.  v5:= temp @kind object;
  #L3cb4cc.  v5:= (`com.bumptech.glide.gifdecoder.a`) v5 @kind object;
  #L3cb4d0.  v6:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb4d4.  v6:= v6 - v2 @kind int;
  #L3cb4d6.  if v6 < 0 then goto L3cb4f0;
  #L3cb4da.  v7:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb4de.  v7:= v7.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3cb4e2.  call temp:= `get`(v7, v6) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cb4e8.  v6:= temp @kind object;
  #L3cb4ea.  v6:= (`com.bumptech.glide.gifdecoder.a`) v6 @kind object;
  #L3cb4ee.  goto L3cb4f2;
  #L3cb4f0.  v6:= v3 @kind object;
  #L3cb4f2.  v7:= v5.`com.bumptech.glide.gifdecoder.a.k` @type ^`int`[] @kind object;
  #L3cb4f6.  if v7 == 0 then goto L3cb500;
  #L3cb4fa.  v7:= v5.`com.bumptech.glide.gifdecoder.a.k` @type ^`int`[] @kind object;
  #L3cb4fe.  goto L3cb508;
  #L3cb500.  v7:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cb504.  v7:= v7.`com.bumptech.glide.gifdecoder.GifHeader.a` @type ^`int`[] @kind object;
  #L3cb508.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] := v7 @kind object;
  #L3cb50c.  if v7 != 0 then goto L3cb558;
  #L3cb510.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb514.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3cb51a.  v0:= temp;
  #L3cb51c.  if v0 == 0 then goto L3cb550;
  #L3cb520.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb524.  v1:= new `java.lang.StringBuilder`;
  #L3cb528.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb52e.  v4:= "No valid color table found for frame #" @kind object;
  #L3cb532.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb538.  v4:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb53c.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb542.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb548.  v1:= temp @kind object;
  #L3cb54a.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3cb550.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v2;
  #L3cb554.  @monitorexit v8
  #L3cb556.  return v3 @kind object;
  #L3cb558.  v1:= v5.`com.bumptech.glide.gifdecoder.a.f` @type ^`boolean` @kind boolean;
  #L3cb55c.  if v1 == 0 then goto L3cb594;
  #L3cb560.  v1:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] @kind object;
  #L3cb564.  v2:= length @variable v7;
  #L3cb566.  call `arraycopy`(v7, v0, v1, v0, v2) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3cb56c.  v1:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.b` @type ^`int`[] @kind object;
  #L3cb570.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.a` @type ^`int`[] := v1 @kind object;
  #L3cb574.  v2:= v5.`com.bumptech.glide.gifdecoder.a.h` @type ^`int`;
  #L3cb578.  v1[v2]:= v0;
  #L3cb57c.  v0:= v5.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3cb580.  if v0 != v4 then goto L3cb594;
  #L3cb584.  v0:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int`;
  #L3cb588.  if v0 != 0 then goto L3cb594;
  #L3cb58c.  v0:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L3cb590.  v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.t` @type ^`java.lang.Boolean` := v0 @kind object;
  #L3cb594.  call temp:= `i`(v8, v5, v6) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.i:(Lcom/bumptech/glide/gifdecoder/a;Lcom/bumptech/glide/gifdecoder/a;)Landroid/graphics/Bitmap;` @kind direct;
  #L3cb59a.  v0:= temp @kind object;
  #L3cb59c.  @monitorexit v8
  #L3cb59e.  return v0 @kind object;
  #L3cb5a0.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb5a4.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3cb5aa.  v0:= temp;
  #L3cb5ac.  if v0 == 0 then goto L3cb5e0;
  #L3cb5b0.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cb5b4.  v1:= new `java.lang.StringBuilder`;
  #L3cb5b8.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cb5be.  v2:= "Unable to decode frame, status=" @kind object;
  #L3cb5c2.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb5c8.  v2:= v8.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cb5cc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cb5d2.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cb5d8.  v1:= temp @kind object;
  #L3cb5da.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3cb5e0.  @monitorexit v8
  #L3cb5e2.  return v3 @kind object;
  #L3cb5e4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cb5e6.  @monitorexit v8
  #L3cb5e8.  throw v0;
  catch `java.lang.Throwable` @[L3cb40a..L3cb554] goto L3cb5e4;
  catch `java.lang.Throwable` @[L3cb558..L3cb59c] goto L3cb5e4;
  catch `java.lang.Throwable` @[L3cb5a0..L3cb5e0] goto L3cb5e4;
}
procedure `int` `getStatus`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getStatus:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cba00.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cba04.  return v0;
}
procedure `int` `getTotalIterationCount`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getTotalIterationCount:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cba18.  v0:= v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cba1c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.m` @type ^`int`;
  #L3cba20.  v1:= 1I;
  #L3cba22.  v2:= -1I;
  #L3cba24.  if v0 != v2 then goto L3cba2a;
  #L3cba28.  return v1;
  #L3cba2a.  if v0 != 0 then goto L3cba32;
  #L3cba2e.  v0:= 0I;
  #L3cba30.  return v0;
  #L3cba32.  v0:= v0 + v1 @kind int;
  #L3cba34.  return v0;
}
procedure `int` `getWidth`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.getWidth:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cba48.  v0:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` @kind object;
  #L3cba4c.  v0:= v0.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3cba50.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v5 @kind this, `java.io.InputStream` v6 @kind object, `int` v7 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:(Ljava/io/InputStream;I)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cbab8.  if v6 == 0 then goto L3cbb1c;
  #L3cbabc.  v0:= 16384I;
  #L3cbac0.  if v7 <= 0 then goto L3cbaca;
  #L3cbac4.  v7:= v7 + 4096;
  #L3cbac8.  goto L3cbace;
  #L3cbaca.  v7:= 16384I;
  #L3cbace.  v1:= new `java.io.ByteArrayOutputStream`;
  #L3cbad2.  call `<init>`(v1, v7) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L3cbad8.  v7:= new `byte`[v0];
  #L3cbadc.  v2:= 0I;
  #L3cbade.  call temp:= `read`(v6, v7, v2, v0) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3cbae4.  v3:= temp;
  #L3cbae6.  v4:= -1I;
  #L3cbae8.  if v3 == v4 then goto L3cbaf4;
  #L3cbaec.  call `write`(v1, v7, v2, v3) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3cbaf2.  goto L3cbadc;
  #L3cbaf4.  call `flush`(v1) @signature `Ljava/io/ByteArrayOutputStream;.flush:()V` @kind virtual;
  #L3cbafa.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3cbb00.  v7:= temp @kind object;
  #L3cbb02.  call temp:= `read`(v5, v7) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:([B)I` @kind virtual;
  #L3cbb08.  goto L3cbb22;
  #L3cbb0a.  v7:= Exception @type ^`java.io.IOException` @kind object;
  #L3cbb0c.  v0:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cbb10.  v1:= "Error reading data from stream" @kind object;
  #L3cbb14.  call temp:= `w`(v0, v1, v7) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3cbb1a.  goto L3cbb22;
  #L3cbb1c.  v7:= 2I;
  #L3cbb1e.  v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v7;
  #L3cbb22.  if v6 == 0 then goto L3cbb3e;
  #L3cbb26.  call `close`(v6) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3cbb2c.  goto L3cbb3e;
  #L3cbb2e.  v6:= Exception @type ^`java.io.IOException` @kind object;
  #L3cbb30.  v7:= `@@com.bumptech.glide.gifdecoder.StandardGifDecoder.v` @type ^`java.lang.String` @kind object;
  #L3cbb34.  v0:= "Error closing stream" @kind object;
  #L3cbb38.  call temp:= `w`(v7, v0, v6) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3cbb3e.  v6:= v5.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cbb42.  return v6;
  catch `java.io.IOException` @[L3cbace..L3cbb08] goto L3cbb0a;
  catch `java.io.IOException` @[L3cbb26..L3cbb2c] goto L3cbb2e;
}
procedure `int` `read`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.read:([B)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cba64.  @monitorenter v1
  #L3cba66.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.e:()Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind direct;
  #L3cba6c.  v0:= temp @kind object;
  #L3cba6e.  call temp:= `setData`(v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:([B)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L3cba74.  v0:= temp @kind object;
  #L3cba76.  call temp:= `parseHeader`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.parseHeader:()Lcom/bumptech/glide/gifdecoder/GifHeader;` @kind virtual;
  #L3cba7c.  v0:= temp @kind object;
  #L3cba7e.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v0 @kind object;
  #L3cba82.  if v2 == 0 then goto L3cba8c;
  #L3cba86.  call `setData`(v1, v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @kind virtual;
  #L3cba8c.  v2:= v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int`;
  #L3cba90.  @monitorexit v1
  #L3cba92.  return v2;
  #L3cba94.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cba96.  @monitorexit v1
  #L3cba98.  throw v2;
  catch `java.lang.Throwable` @[L3cba66..L3cba90] goto L3cba94;
}
procedure `void` `resetFrameIndex`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.resetFrameIndex:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc2ac.  v0:= -1I;
  #L3cc2ae.  v1.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v0;
  #L3cc2b2.  return @kind void;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v1 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v2 @kind object, `java.nio.ByteBuffer` v3 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc2fc.  @monitorenter v1
  #L3cc2fe.  v0:= 1I;
  #L3cc300.  call `setData`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @kind virtual;
  #L3cc306.  @monitorexit v1
  #L3cc308.  return @kind void;
  #L3cc30a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cc30c.  @monitorexit v1
  #L3cc30e.  throw v2;
  catch `java.lang.Throwable` @[L3cc300..L3cc306] goto L3cc30a;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v2 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v3 @kind object, `java.nio.ByteBuffer` v4 @kind object, `int` v5 ) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cc32c.  @monitorenter v2
  #L3cc32e.  if v5 <= 0 then goto L3cc3fa;
  #L3cc332.  call temp:= `highestOneBit`(v5) @signature `Ljava/lang/Integer;.highestOneBit:(I)I` @kind static;
  #L3cc338.  v5:= temp;
  #L3cc33a.  v0:= 0I;
  #L3cc33c.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.p` @type ^`int` := v0;
  #L3cc340.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.m` @type ^`com.bumptech.glide.gifdecoder.GifHeader` := v3 @kind object;
  #L3cc344.  v1:= -1I;
  #L3cc346.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.l` @type ^`int` := v1;
  #L3cc34a.  call temp:= `asReadOnlyBuffer`(v4) @signature `Ljava/nio/ByteBuffer;.asReadOnlyBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L3cc350.  v4:= temp @kind object;
  #L3cc352.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` := v4 @kind object;
  #L3cc356.  call temp:= `position`(v4, v0) @signature `Ljava/nio/ByteBuffer;.position:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3cc35c.  v4:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.d` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cc360.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3cc364.  call temp:= `order`(v4, v1) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3cc36a.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` := v0 @kind boolean;
  #L3cc36e.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.e` @type ^`java.util.List` @kind object;
  #L3cc372.  call temp:= `iterator`(v4) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cc378.  v4:= temp @kind object;
  #L3cc37a.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cc380.  v0:= temp;
  #L3cc382.  if v0 == 0 then goto L3cc3a2;
  #L3cc386.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cc38c.  v0:= temp @kind object;
  #L3cc38e.  v0:= (`com.bumptech.glide.gifdecoder.a`) v0 @kind object;
  #L3cc392.  v0:= v0.`com.bumptech.glide.gifdecoder.a.g` @type ^`int`;
  #L3cc396.  v1:= 3I;
  #L3cc398.  if v0 != v1 then goto L3cc37a;
  #L3cc39c.  v4:= 1I;
  #L3cc39e.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.o` @type ^`boolean` := v4 @kind boolean;
  #L3cc3a2.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.q` @type ^`int` := v5;
  #L3cc3a6.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3cc3aa.  v4:= v4 / v5 @kind int;
  #L3cc3ac.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int` := v4;
  #L3cc3b0.  v4:= v3.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3cc3b4.  v4:= v4 / v5 @kind int;
  #L3cc3b6.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int` := v4;
  #L3cc3ba.  v4:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cc3be.  v5:= v3.`com.bumptech.glide.gifdecoder.GifHeader.f` @type ^`int`;
  #L3cc3c2.  v3:= v3.`com.bumptech.glide.gifdecoder.GifHeader.g` @type ^`int`;
  #L3cc3c6.  v5:= v5 * v3 @kind int;
  #L3cc3ca.  call temp:= `obtainByteArray`(v4, v5) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainByteArray:(I)[B` @kind interface;
  #L3cc3d0.  v3:= temp @kind object;
  #L3cc3d2.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.j` @type ^`byte`[] := v3 @kind object;
  #L3cc3d6.  v3:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.c` @type ^`com.bumptech.glide.gifdecoder.GifDecoder$BitmapProvider` @kind object;
  #L3cc3da.  v4:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.s` @type ^`int`;
  #L3cc3de.  v5:= v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.r` @type ^`int`;
  #L3cc3e2.  v4:= v4 * v5 @kind int;
  #L3cc3e6.  call temp:= `obtainIntArray`(v3, v4) @signature `Lcom/bumptech/glide/gifdecoder/GifDecoder$BitmapProvider;.obtainIntArray:(I)[I` @kind interface;
  #L3cc3ec.  v3:= temp @kind object;
  #L3cc3ee.  v2.`com.bumptech.glide.gifdecoder.StandardGifDecoder.k` @type ^`int`[] := v3 @kind object;
  #L3cc3f2.  @monitorexit v2
  #L3cc3f4.  return @kind void;
  #L3cc3f6.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cc3f8.  goto L3cc428;
  #L3cc3fa.  v3:= new `java.lang.IllegalArgumentException`;
  #L3cc3fe.  v4:= new `java.lang.StringBuilder`;
  #L3cc402.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cc408.  v0:= "Sample size must be >=0, not: " @kind object;
  #L3cc40c.  call temp:= `append`(v4, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc412.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc418.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cc41e.  v4:= temp @kind object;
  #L3cc420.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cc426.  throw v3;
  #L3cc428.  @monitorexit v2
  #L3cc42a.  throw v3;
  catch `java.lang.Throwable` @[L3cc332..L3cc3f2] goto L3cc3f6;
  catch `java.lang.Throwable` @[L3cc3fa..L3cc428] goto L3cc3f6;
}
procedure `void` `setData`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v0 @kind this, `com.bumptech.glide.gifdecoder.GifHeader` v1 @kind object, `byte`[] v2 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;[B)V` @AccessFlag PUBLIC {
    temp;

  #L3cc2c4.  @monitorenter v0
  #L3cc2c6.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3cc2cc.  v2:= temp @kind object;
  #L3cc2ce.  call `setData`(v0, v1, v2) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setData:(Lcom/bumptech/glide/gifdecoder/GifHeader;Ljava/nio/ByteBuffer;)V` @kind virtual;
  #L3cc2d4.  @monitorexit v0
  #L3cc2d6.  return @kind void;
  #L3cc2d8.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cc2da.  @monitorexit v0
  #L3cc2dc.  throw v1;
  catch `java.lang.Throwable` @[L3cc2c6..L3cc2d4] goto L3cc2d8;
}
procedure `void` `setDefaultBitmapConfig`(`com.bumptech.glide.gifdecoder.StandardGifDecoder` v3 @kind this, `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/gifdecoder/StandardGifDecoder;.setDefaultBitmapConfig:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cc450.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cc454.  if v4 == v0 then goto L3cc4b8;
  #L3cc458.  v0:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cc45c.  if v4 != v0 then goto L3cc462;
  #L3cc460.  goto L3cc4b8;
  #L3cc462.  v0:= new `java.lang.IllegalArgumentException`;
  #L3cc466.  v1:= new `java.lang.StringBuilder`;
  #L3cc46a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cc470.  v2:= "Unsupported format: " @kind object;
  #L3cc474.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc47a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc480.  v4:= ", must be one of " @kind object;
  #L3cc484.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc48a.  v4:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cc48e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc494.  v4:= " or " @kind object;
  #L3cc498.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc49e.  v4:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3cc4a2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cc4a8.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cc4ae.  v4:= temp @kind object;
  #L3cc4b0.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cc4b6.  throw v0;
  #L3cc4b8.  v3.`com.bumptech.glide.gifdecoder.StandardGifDecoder.u` @type ^`android.graphics.Bitmap$Config` := v4 @kind object;
  #L3cc4bc.  return @kind void;
}
