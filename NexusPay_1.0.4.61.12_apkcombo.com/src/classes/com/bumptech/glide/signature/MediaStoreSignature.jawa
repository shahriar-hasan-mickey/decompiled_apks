record `com.bumptech.glide.signature.MediaStoreSignature` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Key` @kind interface {
  `java.lang.String` `com.bumptech.glide.signature.MediaStoreSignature.a` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.signature.MediaStoreSignature.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.signature.MediaStoreSignature.c` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.signature.MediaStoreSignature` v0 @kind this, `java.lang.String` v1 @kind object, `long` v2 , `int` v4 ) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.<init>:(Ljava/lang/String;JI)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ef580.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3ef586.  if v1 != 0 then goto L3ef58e;
  #L3ef58a.  v1:= "" @kind object;
  #L3ef58e.  v0.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` := v1 @kind object;
  #L3ef592.  v0.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` := v2 @kind wide;
  #L3ef596.  v0.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int` := v4;
  #L3ef59a.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.signature.MediaStoreSignature` v7 @kind this, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3ef4d0.  v0:= 1I;
  #L3ef4d2.  if v7 != v8 then goto L3ef4d8;
  #L3ef4d6.  return v0;
  #L3ef4d8.  v1:= 0I;
  #L3ef4da.  if v8 == 0 then goto L3ef52c;
  #L3ef4de.  v2:= constclass @type ^`com.bumptech.glide.signature.MediaStoreSignature` @kind object;
  #L3ef4e2.  call temp:= `getClass`(v8) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3ef4e8.  v3:= temp @kind object;
  #L3ef4ea.  if v2 == v3 then goto L3ef4f0;
  #L3ef4ee.  goto L3ef52c;
  #L3ef4f0.  v8:= (`com.bumptech.glide.signature.MediaStoreSignature`) v8 @kind object;
  #L3ef4f4.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3ef4f8.  v4:= v8.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3ef4fc.  v6:= lcmp(v2, v4);
  #L3ef500.  if v6 == 0 then goto L3ef506;
  #L3ef504.  return v1;
  #L3ef506.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3ef50a.  v3:= v8.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3ef50e.  if v2 == v3 then goto L3ef514;
  #L3ef512.  return v1;
  #L3ef514.  v2:= v7.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3ef518.  v8:= v8.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3ef51c.  call temp:= `equals`(v2, v8) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ef522.  v8:= temp;
  #L3ef524.  if v8 != 0 then goto L3ef52a;
  #L3ef528.  return v1;
  #L3ef52a.  return v0;
  #L3ef52c.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.signature.MediaStoreSignature` v5 @kind this) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3ef540.  v0:= v5.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3ef544.  call temp:= `hashCode`(v0) @signature `Ljava/lang/String;.hashCode:()I` @kind virtual;
  #L3ef54a.  v0:= temp;
  #L3ef54c.  v0:= v0 * 31;
  #L3ef550.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3ef554.  v3:= 32I;
  #L3ef558.  v3:= v1 ^>> v3 @kind long;
  #L3ef55c.  v1:= v1 ^~ v3 @kind long;
  #L3ef55e.  v2:= (`int`) v1 @kind l2i;
  #L3ef560.  v0:= v0 + v2 @kind int;
  #L3ef562.  v0:= v0 * 31;
  #L3ef566.  v1:= v5.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3ef56a.  v0:= v0 + v1 @kind int;
  #L3ef56c.  return v0;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.signature.MediaStoreSignature` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/signature/MediaStoreSignature;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3ef5ac.  v0:= 12I;
  #L3ef5b0.  call temp:= `allocate`(v0) @signature `Ljava/nio/ByteBuffer;.allocate:(I)Ljava/nio/ByteBuffer;` @kind static;
  #L3ef5b6.  v0:= temp @kind object;
  #L3ef5b8.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.b` @type ^`long` @kind wide;
  #L3ef5bc.  call temp:= `putLong`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putLong:(J)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ef5c2.  v0:= temp @kind object;
  #L3ef5c4.  v1:= v3.`com.bumptech.glide.signature.MediaStoreSignature.c` @type ^`int`;
  #L3ef5c8.  call temp:= `putInt`(v0, v1) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ef5ce.  v0:= temp @kind object;
  #L3ef5d0.  call temp:= `array`(v0) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3ef5d6.  v0:= temp @kind object;
  #L3ef5d8.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3ef5de.  v0:= v3.`com.bumptech.glide.signature.MediaStoreSignature.a` @type ^`java.lang.String` @kind object;
  #L3ef5e2.  v1:= `@@com.bumptech.glide.load.Key.CHARSET` @type ^`java.nio.charset.Charset` @kind object;
  #L3ef5e6.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3ef5ec.  v0:= temp @kind object;
  #L3ef5ee.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3ef5f4.  return @kind void;
}
