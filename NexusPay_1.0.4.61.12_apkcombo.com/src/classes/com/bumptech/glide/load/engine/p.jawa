record `com.bumptech.glide.load.engine.p` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.Key` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.engine.p.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.p.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.p.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.p.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.p.e` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.engine.p.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.load.engine.p.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.engine.p.h` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.util.LruCache` `@@com.bumptech.glide.load.engine.p.i` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/p;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d48b8.  v0:= new `com.bumptech.glide.util.LruCache`;
  #L3d48bc.  v1:= 50L;
  #L3d48c0.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.<init>:(J)V` @kind direct;
  #L3d48c6.  `@@com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.util.LruCache` := v0 @kind object;
  #L3d48ca.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.p` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v1 @kind object, `com.bumptech.glide.load.Key` v2 @kind object, `com.bumptech.glide.load.Key` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.Transformation` v6 @kind object, `java.lang.Class` v7 @kind object, `com.bumptech.glide.load.Options` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/p;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/Transformation;Ljava/lang/Class;Lcom/bumptech/glide/load/Options;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d48dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d48e2.  v0.`com.bumptech.glide.load.engine.p.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3d48e6.  v0.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L3d48ea.  v0.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` := v3 @kind object;
  #L3d48ee.  v0.`com.bumptech.glide.load.engine.p.d` @type ^`int` := v4;
  #L3d48f2.  v0.`com.bumptech.glide.load.engine.p.e` @type ^`int` := v5;
  #L3d48f6.  v0.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` := v6 @kind object;
  #L3d48fa.  v0.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` := v7 @kind object;
  #L3d48fe.  v0.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` := v8 @kind object;
  #L3d4902.  return @kind void;
}
procedure `byte`[] `a`(`com.bumptech.glide.load.engine.p` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.a:()[B` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d4724.  v0:= `@@com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.util.LruCache` @kind object;
  #L3d4728.  v1:= v3.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d472c.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3d4732.  v0:= temp @kind object;
  #L3d4734.  v0:= (`byte`[]) v0 @kind object;
  #L3d4738.  if v0 != 0 then goto L3d4762;
  #L3d473c.  v0:= v3.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d4740.  call temp:= `getName`(v0) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L3d4746.  v0:= temp @kind object;
  #L3d4748.  v1:= `@@com.bumptech.glide.load.Key.CHARSET` @type ^`java.nio.charset.Charset` @kind object;
  #L3d474c.  call temp:= `getBytes`(v0, v1) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3d4752.  v0:= temp @kind object;
  #L3d4754.  v1:= `@@com.bumptech.glide.load.engine.p.i` @type ^`com.bumptech.glide.util.LruCache` @kind object;
  #L3d4758.  v2:= v3.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d475c.  call temp:= `put`(v1, v2, v0) @signature `Lcom/bumptech/glide/util/LruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3d4762.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.p` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/p;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d4684.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.p` @kind boolean;
  #L3d4688.  v1:= 0I;
  #L3d468a.  if v0 == 0 then goto L3d4710;
  #L3d468e.  v4:= (`com.bumptech.glide.load.engine.p`) v4 @kind object;
  #L3d4692.  v0:= v3.`com.bumptech.glide.load.engine.p.e` @type ^`int`;
  #L3d4696.  v2:= v4.`com.bumptech.glide.load.engine.p.e` @type ^`int`;
  #L3d469a.  if v0 != v2 then goto L3d4710;
  #L3d469e.  v0:= v3.`com.bumptech.glide.load.engine.p.d` @type ^`int`;
  #L3d46a2.  v2:= v4.`com.bumptech.glide.load.engine.p.d` @type ^`int`;
  #L3d46a6.  if v0 != v2 then goto L3d4710;
  #L3d46aa.  v0:= v3.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3d46ae.  v2:= v4.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3d46b2.  call temp:= `bothNullOrEqual`(v0, v2) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3d46b8.  v0:= temp;
  #L3d46ba.  if v0 == 0 then goto L3d4710;
  #L3d46be.  v0:= v3.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d46c2.  v2:= v4.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d46c6.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d46cc.  v0:= temp;
  #L3d46ce.  if v0 == 0 then goto L3d4710;
  #L3d46d2.  v0:= v3.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d46d6.  v2:= v4.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d46da.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3d46e0.  v0:= temp;
  #L3d46e2.  if v0 == 0 then goto L3d4710;
  #L3d46e6.  v0:= v3.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d46ea.  v2:= v4.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d46ee.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3d46f4.  v0:= temp;
  #L3d46f6.  if v0 == 0 then goto L3d4710;
  #L3d46fa.  v0:= v3.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d46fe.  v4:= v4.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d4702.  call temp:= `equals`(v0, v4) @signature `Lcom/bumptech/glide/load/Options;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d4708.  v4:= temp;
  #L3d470a.  if v4 == 0 then goto L3d4710;
  #L3d470e.  v1:= 1I;
  #L3d4710.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4774.  v0:= v2.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4778.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3d477e.  v0:= temp;
  #L3d4780.  v0:= v0 * 31;
  #L3d4784.  v1:= v2.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4788.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3d478e.  v1:= temp;
  #L3d4790.  v0:= v0 + v1 @kind int;
  #L3d4792.  v0:= v0 * 31;
  #L3d4796.  v1:= v2.`com.bumptech.glide.load.engine.p.d` @type ^`int`;
  #L3d479a.  v0:= v0 + v1 @kind int;
  #L3d479c.  v0:= v0 * 31;
  #L3d47a0.  v1:= v2.`com.bumptech.glide.load.engine.p.e` @type ^`int`;
  #L3d47a4.  v0:= v0 + v1 @kind int;
  #L3d47a6.  v1:= v2.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3d47aa.  if v1 == 0 then goto L3d47bc;
  #L3d47ae.  v0:= v0 * 31;
  #L3d47b2.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3d47b8.  v1:= temp;
  #L3d47ba.  v0:= v0 + v1 @kind int;
  #L3d47bc.  v0:= v0 * 31;
  #L3d47c0.  v1:= v2.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d47c4.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3d47ca.  v1:= temp;
  #L3d47cc.  v0:= v0 + v1 @kind int;
  #L3d47ce.  v0:= v0 * 31;
  #L3d47d2.  v1:= v2.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d47d6.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/Options;.hashCode:()I` @kind virtual;
  #L3d47dc.  v1:= temp;
  #L3d47de.  v0:= v0 + v1 @kind int;
  #L3d47e0.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.p` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/p;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d47f4.  v0:= new `java.lang.StringBuilder`;
  #L3d47f8.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d47fe.  v1:= "ResourceCacheKey{sourceKey=" @kind object;
  #L3d4802.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4808.  v1:= v2.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d480c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4812.  v1:= ", signature=" @kind object;
  #L3d4816.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d481c.  v1:= v2.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4820.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4826.  v1:= ", width=" @kind object;
  #L3d482a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4830.  v1:= v2.`com.bumptech.glide.load.engine.p.d` @type ^`int`;
  #L3d4834.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d483a.  v1:= ", height=" @kind object;
  #L3d483e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4844.  v1:= v2.`com.bumptech.glide.load.engine.p.e` @type ^`int`;
  #L3d4848.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d484e.  v1:= ", decodedResourceClass=" @kind object;
  #L3d4852.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4858.  v1:= v2.`com.bumptech.glide.load.engine.p.f` @type ^`java.lang.Class` @kind object;
  #L3d485c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4862.  v1:= ", transformation='" @kind object;
  #L3d4866.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d486c.  v1:= v2.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3d4870.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4876.  v1:= 39I;
  #L3d487a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4880.  v1:= ", options=" @kind object;
  #L3d4884.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d488a.  v1:= v2.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d488e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4894.  v1:= 125I;
  #L3d4898.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d489e.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d48a4.  v0:= temp @kind object;
  #L3d48a6.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.engine.p` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/p;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d4914.  v0:= v3.`com.bumptech.glide.load.engine.p.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3d4918.  v1:= constclass @type ^`byte`[] @kind object;
  #L3d491c.  v2:= 8I;
  #L3d4920.  call temp:= `getExact`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.getExact:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3d4926.  v0:= temp @kind object;
  #L3d4928.  v0:= (`byte`[]) v0 @kind object;
  #L3d492c.  call temp:= `wrap`(v0) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3d4932.  v1:= temp @kind object;
  #L3d4934.  v2:= v3.`com.bumptech.glide.load.engine.p.d` @type ^`int`;
  #L3d4938.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d493e.  v1:= temp @kind object;
  #L3d4940.  v2:= v3.`com.bumptech.glide.load.engine.p.e` @type ^`int`;
  #L3d4944.  call temp:= `putInt`(v1, v2) @signature `Ljava/nio/ByteBuffer;.putInt:(I)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3d494a.  v1:= temp @kind object;
  #L3d494c.  call temp:= `array`(v1) @signature `Ljava/nio/ByteBuffer;.array:()[B` @kind virtual;
  #L3d4952.  v1:= v3.`com.bumptech.glide.load.engine.p.c` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4956.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3d495c.  v1:= v3.`com.bumptech.glide.load.engine.p.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4960.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3d4966.  call `update`(v4, v0) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3d496c.  v1:= v3.`com.bumptech.glide.load.engine.p.h` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3d4970.  if v1 == 0 then goto L3d497a;
  #L3d4974.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3d497a.  v1:= v3.`com.bumptech.glide.load.engine.p.g` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d497e.  call `updateDiskCacheKey`(v1, v4) @signature `Lcom/bumptech/glide/load/Options;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind virtual;
  #L3d4984.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/engine/p;.a:()[B` @kind direct;
  #L3d498a.  v1:= temp @kind object;
  #L3d498c.  call `update`(v4, v1) @signature `Ljava/security/MessageDigest;.update:([B)V` @kind virtual;
  #L3d4992.  v4:= v3.`com.bumptech.glide.load.engine.p.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3d4996.  call `put`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3d499c.  return @kind void;
}
