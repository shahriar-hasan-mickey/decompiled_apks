record `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.f` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @AccessFlag ;
  `java.lang.Class` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d5998.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d599e.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v1 @kind object;
  #L3d59a2.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d59d0.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3d59d4.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)V` @kind virtual;
  #L3d59da.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v0 @kind this, `int` v1 , `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.b:(ILjava/lang/Class;)V` @AccessFlag  {
    temp;

  #L3d59b4.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int` := v1;
  #L3d59b8.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` := v2 @kind object;
  #L3d59bc.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d58d4.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` @kind boolean;
  #L3d58d8.  v1:= 0I;
  #L3d58da.  if v0 == 0 then goto L3d58fc;
  #L3d58de.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a`) v4 @kind object;
  #L3d58e2.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d58e6.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d58ea.  if v0 != v2 then goto L3d58fc;
  #L3d58ee.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3d58f2.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3d58f6.  if v0 != v4 then goto L3d58fc;
  #L3d58fa.  v1:= 1I;
  #L3d58fc.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5910.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5914.  v0:= v0 * 31;
  #L3d5918.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3d591c.  if v1 == 0 then goto L3d592a;
  #L3d5920.  call temp:= `hashCode`(v1) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3d5926.  v1:= temp;
  #L3d5928.  goto L3d592c;
  #L3d592a.  v1:= 0I;
  #L3d592c.  v0:= v0 + v1 @kind int;
  #L3d592e.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5940.  v0:= new `java.lang.StringBuilder`;
  #L3d5944.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d594a.  v1:= "Key{size=" @kind object;
  #L3d594e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5954.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5958.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d595e.  v1:= "array=" @kind object;
  #L3d5962.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5968.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.c` @type ^`java.lang.Class` @kind object;
  #L3d596c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5972.  v1:= 125I;
  #L3d5976.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d597c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5982.  v0:= temp @kind object;
  #L3d5984.  return v0 @kind object;
}
