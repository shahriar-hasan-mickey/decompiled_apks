record `com.bumptech.glide.load.engine.f` @kind class @AccessFlag FINAL {
  `java.util.List` `com.bumptech.glide.load.engine.f.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.f.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.load.engine.f.c` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.f.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.f.e` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.f.f` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.f.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.g$e` `com.bumptech.glide.load.engine.f.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.load.engine.f.i` @AccessFlag PRIVATE;
  `java.util.Map` `com.bumptech.glide.load.engine.f.j` @AccessFlag PRIVATE;
  `java.lang.Class` `com.bumptech.glide.load.engine.f.k` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.l` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.f.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.load.engine.f.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.load.engine.f.p` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.q` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.f.r` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d023c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0242.  v0:= new `java.util.ArrayList`;
  #L3d0246.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d024c.  v1.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` := v0 @kind object;
  #L3d0250.  v0:= new `java.util.ArrayList`;
  #L3d0254.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d025a.  v1.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` := v0 @kind object;
  #L3d025e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.f` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d0270.  v0:= 0I;
  #L3d0272.  v2.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` := v0 @kind object;
  #L3d0276.  v2.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` := v0 @kind object;
  #L3d027a.  v2.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3d027e.  v2.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` := v0 @kind object;
  #L3d0282.  v2.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` := v0 @kind object;
  #L3d0286.  v2.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` := v0 @kind object;
  #L3d028a.  v2.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` := v0 @kind object;
  #L3d028e.  v2.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` := v0 @kind object;
  #L3d0292.  v2.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v0 @kind object;
  #L3d0296.  v0:= v2.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3d029a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d02a0.  v0:= 0I;
  #L3d02a2.  v2.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` := v0 @kind boolean;
  #L3d02a6.  v1:= v2.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d02aa.  call `clear`(v1) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d02b0.  v2.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` := v0 @kind boolean;
  #L3d02b4.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `b`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.b:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @AccessFlag  {
    temp;
    v0;

  #L3cffe0.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3cffe4.  call temp:= `getArrayPool`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getArrayPool:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @kind virtual;
  #L3cffea.  v0:= temp @kind object;
  #L3cffec.  return v0 @kind object;
}
procedure `java.util.List` `c`(`com.bumptech.glide.load.engine.f` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d0088.  v0:= v8.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` @kind boolean;
  #L3d008c.  if v0 != 0 then goto L3d0136;
  #L3d0090.  v0:= 1I;
  #L3d0092.  v8.`com.bumptech.glide.load.engine.f.m` @type ^`boolean` := v0 @kind boolean;
  #L3d0096.  v0:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d009a.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d00a0.  call temp:= `g`(v8) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3d00a6.  v0:= temp @kind object;
  #L3d00a8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d00ae.  v1:= temp;
  #L3d00b0.  v2:= 0I;
  #L3d00b2.  v3:= 0I;
  #L3d00b4.  if v3 >= v1 then goto L3d0136;
  #L3d00b8.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d00be.  v4:= temp @kind object;
  #L3d00c0.  v4:= (`com.bumptech.glide.load.model.ModelLoader$LoadData`) v4 @kind object;
  #L3d00c4.  v5:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d00c8.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d00cc.  call temp:= `contains`(v5, v6) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d00d2.  v5:= temp;
  #L3d00d4.  if v5 != 0 then goto L3d00e6;
  #L3d00d8.  v5:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d00dc.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d00e0.  call temp:= `add`(v5, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d00e6.  v5:= 0I;
  #L3d00e8.  v6:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3d00ec.  call temp:= `size`(v6) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d00f2.  v6:= temp;
  #L3d00f4.  if v5 >= v6 then goto L3d0130;
  #L3d00f8.  v6:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d00fc.  v7:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3d0100.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d0106.  v7:= temp @kind object;
  #L3d0108.  call temp:= `contains`(v6, v7) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d010e.  v6:= temp;
  #L3d0110.  if v6 != 0 then goto L3d012a;
  #L3d0114.  v6:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d0118.  v7:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` @kind object;
  #L3d011c.  call temp:= `get`(v7, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d0122.  v7:= temp @kind object;
  #L3d0124.  call temp:= `add`(v6, v7) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d012a.  v5:= v5 + 1;
  #L3d012e.  goto L3d00e8;
  #L3d0130.  v3:= v3 + 1;
  #L3d0134.  goto L3d00b4;
  #L3d0136.  v0:= v8.`com.bumptech.glide.load.engine.f.b` @type ^`java.util.List` @kind object;
  #L3d013a.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCache` `d`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @AccessFlag  {
    temp;
    v0;

  #L3d0000.  v0:= v1.`com.bumptech.glide.load.engine.f.h` @type ^`com.bumptech.glide.load.engine.g$e` @kind object;
  #L3d0004.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/g$e;.a:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L3d000a.  v0:= temp @kind object;
  #L3d000c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.DiskCacheStrategy` `e`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @AccessFlag  {
    temp;
    v0;

  #L3cff98.  v0:= v1.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3cff9c.  return v0 @kind object;
}
procedure `int` `f`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @AccessFlag  {
    temp;
    v0;

  #L3d0020.  v0:= v1.`com.bumptech.glide.load.engine.f.f` @type ^`int`;
  #L3d0024.  return v0;
}
procedure `java.util.List` `g`(`com.bumptech.glide.load.engine.f` v8 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d014c.  v0:= v8.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` @kind boolean;
  #L3d0150.  if v0 != 0 then goto L3d01c2;
  #L3d0154.  v0:= 1I;
  #L3d0156.  v8.`com.bumptech.glide.load.engine.f.l` @type ^`boolean` := v0 @kind boolean;
  #L3d015a.  v0:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3d015e.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d0164.  v0:= v8.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d0168.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3d016e.  v0:= temp @kind object;
  #L3d0170.  v1:= v8.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3d0174.  call temp:= `getModelLoaders`(v0, v1) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L3d017a.  v0:= temp @kind object;
  #L3d017c.  v1:= 0I;
  #L3d017e.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d0184.  v2:= temp;
  #L3d0186.  if v1 >= v2 then goto L3d01c2;
  #L3d018a.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d0190.  v3:= temp @kind object;
  #L3d0192.  v3:= (`com.bumptech.glide.load.model.ModelLoader`) v3 @kind object;
  #L3d0196.  v4:= v8.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3d019a.  v5:= v8.`com.bumptech.glide.load.engine.f.e` @type ^`int`;
  #L3d019e.  v6:= v8.`com.bumptech.glide.load.engine.f.f` @type ^`int`;
  #L3d01a2.  v7:= v8.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d01a6.  call temp:= `buildLoadData`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3d01ac.  v3:= temp @kind object;
  #L3d01ae.  if v3 == 0 then goto L3d01bc;
  #L3d01b2.  v4:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3d01b6.  call temp:= `add`(v4, v3) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d01bc.  v1:= v1 + 1;
  #L3d01c0.  goto L3d0186;
  #L3d01c2.  v0:= v8.`com.bumptech.glide.load.engine.f.a` @type ^`java.util.List` @kind object;
  #L3d01c6.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.LoadPath` `h`(`com.bumptech.glide.load.engine.f` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3cffb0.  v0:= v3.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3cffb4.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3cffba.  v0:= temp @kind object;
  #L3cffbc.  v1:= v3.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` @kind object;
  #L3cffc0.  v2:= v3.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3cffc4.  call temp:= `getLoadPath`(v0, v4, v1, v2) @signature `Lcom/bumptech/glide/Registry;.getLoadPath:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @kind virtual;
  #L3cffca.  v4:= temp @kind object;
  #L3cffcc.  return v4 @kind object;
}
procedure `java.lang.Class` `i`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.i:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L3d0050.  v0:= v1.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3d0054.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d005a.  v0:= temp @kind object;
  #L3d005c.  return v0 @kind object;
}
procedure `java.util.List` `j`(`com.bumptech.glide.load.engine.f` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @AccessFlag  {
    temp;
    v0;

  #L3d01d8.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d01dc.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3d01e2.  v0:= temp @kind object;
  #L3d01e4.  call temp:= `getModelLoaders`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getModelLoaders:(Ljava/lang/Object;)Ljava/util/List;` @kind virtual;
  #L3d01ea.  v2:= temp @kind object;
  #L3d01ec.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.Options` `k`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @AccessFlag  {
    temp;
    v0;

  #L3cfe80.  v0:= v1.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3cfe84.  return v0 @kind object;
}
procedure `com.bumptech.glide.Priority` `l`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @AccessFlag  {
    temp;
    v0;

  #L3cfe28.  v0:= v1.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3cfe2c.  return v0 @kind object;
}
procedure `java.util.List` `m`(`com.bumptech.glide.load.engine.f` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.m:()Ljava/util/List;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d0200.  v0:= v4.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d0204.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3d020a.  v0:= temp @kind object;
  #L3d020c.  v1:= v4.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` @kind object;
  #L3d0210.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d0216.  v1:= temp @kind object;
  #L3d0218.  v2:= v4.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` @kind object;
  #L3d021c.  v3:= v4.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3d0220.  call temp:= `getRegisteredResourceClasses`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/Registry;.getRegisteredResourceClasses:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @kind virtual;
  #L3d0226.  v0:= temp @kind object;
  #L3d0228.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.ResourceEncoder` `n`(`com.bumptech.glide.load.engine.f` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.n:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;` @AccessFlag  {
    temp;
    v0;

  #L3cfe98.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3cfe9c.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3cfea2.  v0:= temp @kind object;
  #L3cfea4.  call temp:= `getResultEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getResultEncoder:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;` @kind virtual;
  #L3cfeaa.  v2:= temp @kind object;
  #L3cfeac.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.Key` `o`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lcom/bumptech/glide/load/Key;` @AccessFlag  {
    temp;
    v0;

  #L3cfe68.  v0:= v1.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfe6c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Encoder` `p`(`com.bumptech.glide.load.engine.f` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.p:(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;` @AccessFlag  {
    temp;
    v0;

  #L3cfe40.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3cfe44.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3cfe4a.  v0:= temp @kind object;
  #L3cfe4c.  call temp:= `getSourceEncoder`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.getSourceEncoder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;` @kind virtual;
  #L3cfe52.  v2:= temp @kind object;
  #L3cfe54.  return v2 @kind object;
}
procedure `java.lang.Class` `q`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.q:()Ljava/lang/Class;` @AccessFlag  {
    temp;
    v0;

  #L3d0070.  v0:= v1.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` @kind object;
  #L3d0074.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.Transformation` `r`(`com.bumptech.glide.load.engine.f` v4 @kind this, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.r:(Ljava/lang/Class;)Lcom/bumptech/glide/load/Transformation;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cfec0.  v0:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3cfec4.  call temp:= `get`(v0, v5) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3cfeca.  v0:= temp @kind object;
  #L3cfecc.  v0:= (`com.bumptech.glide.load.Transformation`) v0 @kind object;
  #L3cfed0.  if v0 != 0 then goto L3cff24;
  #L3cfed4.  v1:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3cfed8.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3cfede.  v1:= temp @kind object;
  #L3cfee0.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3cfee6.  v1:= temp @kind object;
  #L3cfee8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3cfeee.  v2:= temp;
  #L3cfef0.  if v2 == 0 then goto L3cff24;
  #L3cfef4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3cfefa.  v2:= temp @kind object;
  #L3cfefc.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3cff00.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3cff06.  v3:= temp @kind object;
  #L3cff08.  v3:= (`java.lang.Class`) v3 @kind object;
  #L3cff0c.  call temp:= `isAssignableFrom`(v3, v5) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3cff12.  v3:= temp;
  #L3cff14.  if v3 == 0 then goto L3cfee8;
  #L3cff18.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3cff1e.  v0:= temp @kind object;
  #L3cff20.  v0:= (`com.bumptech.glide.load.Transformation`) v0 @kind object;
  #L3cff24.  if v0 != 0 then goto L3cff84;
  #L3cff28.  v0:= v4.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` @kind object;
  #L3cff2c.  call temp:= `isEmpty`(v0) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3cff32.  v0:= temp;
  #L3cff34.  if v0 == 0 then goto L3cff7a;
  #L3cff38.  v0:= v4.`com.bumptech.glide.load.engine.f.q` @type ^`boolean` @kind boolean;
  #L3cff3c.  if v0 != 0 then goto L3cff42;
  #L3cff40.  goto L3cff7a;
  #L3cff42.  v0:= new `java.lang.IllegalArgumentException`;
  #L3cff46.  v1:= new `java.lang.StringBuilder`;
  #L3cff4a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cff50.  v2:= "Missing transformation for " @kind object;
  #L3cff54.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cff5a.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cff60.  v5:= ". If you wish to ignore unknown resource types, use the optional transformation methods." @kind object;
  #L3cff64.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cff6a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cff70.  v5:= temp @kind object;
  #L3cff72.  call `<init>`(v0, v5) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3cff78.  throw v0;
  #L3cff7a.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/UnitTransformation;.get:()Lcom/bumptech/glide/load/resource/UnitTransformation;` @kind static;
  #L3cff80.  v5:= temp @kind object;
  #L3cff82.  return v5 @kind object;
  #L3cff84.  return v0 @kind object;
}
procedure `int` `s`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.s:()I` @AccessFlag  {
    temp;
    v0;

  #L3d0038.  v0:= v1.`com.bumptech.glide.load.engine.f.e` @type ^`int`;
  #L3d003c.  return v0;
}
procedure `boolean` `t`(`com.bumptech.glide.load.engine.f` v0 @kind this, `java.lang.Class` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @AccessFlag  {
    temp;

  #L3cfd74.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @kind virtual;
  #L3cfd7a.  v1:= temp @kind object;
  #L3cfd7c.  if v1 == 0 then goto L3cfd84;
  #L3cfd80.  v1:= 1I;
  #L3cfd82.  goto L3cfd86;
  #L3cfd84.  v1:= 0I;
  #L3cfd86.  return v1;
}
procedure `void` `u`(`com.bumptech.glide.load.engine.f` v0 @kind this, `com.bumptech.glide.GlideContext` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.Key` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.engine.DiskCacheStrategy` v6 @kind object, `java.lang.Class` v7 @kind object, `java.lang.Class` v8 @kind object, `com.bumptech.glide.Priority` v9 @kind object, `com.bumptech.glide.load.Options` v10 @kind object, `java.util.Map` v11 @kind object, `boolean` v12 , `boolean` v13 , `com.bumptech.glide.load.engine.g$e` v14 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.u:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/Options;Ljava/util/Map;ZZLcom/bumptech/glide/load/engine/g$e;)V` @AccessFlag  {
    temp;

  #L3d02c8.  v0.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3d02cc.  v0.`com.bumptech.glide.load.engine.f.d` @type ^`java.lang.Object` := v2 @kind object;
  #L3d02d0.  v0.`com.bumptech.glide.load.engine.f.n` @type ^`com.bumptech.glide.load.Key` := v3 @kind object;
  #L3d02d4.  v0.`com.bumptech.glide.load.engine.f.e` @type ^`int` := v4;
  #L3d02d8.  v0.`com.bumptech.glide.load.engine.f.f` @type ^`int` := v5;
  #L3d02dc.  v0.`com.bumptech.glide.load.engine.f.p` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v6 @kind object;
  #L3d02e0.  v0.`com.bumptech.glide.load.engine.f.g` @type ^`java.lang.Class` := v7 @kind object;
  #L3d02e4.  v0.`com.bumptech.glide.load.engine.f.h` @type ^`com.bumptech.glide.load.engine.g$e` := v14 @kind object;
  #L3d02e8.  v0.`com.bumptech.glide.load.engine.f.k` @type ^`java.lang.Class` := v8 @kind object;
  #L3d02ec.  v0.`com.bumptech.glide.load.engine.f.o` @type ^`com.bumptech.glide.Priority` := v9 @kind object;
  #L3d02f0.  v0.`com.bumptech.glide.load.engine.f.i` @type ^`com.bumptech.glide.load.Options` := v10 @kind object;
  #L3d02f4.  v0.`com.bumptech.glide.load.engine.f.j` @type ^`java.util.Map` := v11 @kind object;
  #L3d02f8.  v0.`com.bumptech.glide.load.engine.f.q` @type ^`boolean` := v12 @kind boolean;
  #L3d02fc.  v0.`com.bumptech.glide.load.engine.f.r` @type ^`boolean` := v13 @kind boolean;
  #L3d0300.  return @kind void;
}
procedure `boolean` `v`(`com.bumptech.glide.load.engine.f` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.v:(Lcom/bumptech/glide/load/engine/Resource;)Z` @AccessFlag  {
    temp;
    v0;

  #L3cfd98.  v0:= v1.`com.bumptech.glide.load.engine.f.c` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3cfd9c.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3cfda2.  v0:= temp @kind object;
  #L3cfda4.  call temp:= `isResourceEncoderAvailable`(v0, v2) @signature `Lcom/bumptech/glide/Registry;.isResourceEncoderAvailable:(Lcom/bumptech/glide/load/engine/Resource;)Z` @kind virtual;
  #L3cfdaa.  v2:= temp;
  #L3cfdac.  return v2;
}
procedure `boolean` `w`(`com.bumptech.glide.load.engine.f` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/f;.w:()Z` @AccessFlag  {
    temp;
    v0;

  #L3cfdc0.  v0:= v1.`com.bumptech.glide.load.engine.f.r` @type ^`boolean` @kind boolean;
  #L3cfdc4.  return v0;
}
procedure `boolean` `x`(`com.bumptech.glide.load.engine.f` v5 @kind this, `com.bumptech.glide.load.Key` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/f;.x:(Lcom/bumptech/glide/load/Key;)Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3cfdd8.  call temp:= `g`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3cfdde.  v0:= temp @kind object;
  #L3cfde0.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3cfde6.  v1:= temp;
  #L3cfde8.  v2:= 0I;
  #L3cfdea.  v3:= 0I;
  #L3cfdec.  if v3 >= v1 then goto L3cfe16;
  #L3cfdf0.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cfdf6.  v4:= temp @kind object;
  #L3cfdf8.  v4:= (`com.bumptech.glide.load.model.ModelLoader$LoadData`) v4 @kind object;
  #L3cfdfc.  v4:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfe00.  call temp:= `equals`(v4, v6) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfe06.  v4:= temp;
  #L3cfe08.  if v4 == 0 then goto L3cfe10;
  #L3cfe0c.  v6:= 1I;
  #L3cfe0e.  return v6;
  #L3cfe10.  v3:= v3 + 1;
  #L3cfe14.  goto L3cfdec;
  #L3cfe16.  return v2;
}
