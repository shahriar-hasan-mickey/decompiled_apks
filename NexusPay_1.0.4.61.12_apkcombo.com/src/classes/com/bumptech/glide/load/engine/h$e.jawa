record `com.bumptech.glide.load.engine.h$e` @kind class @AccessFlag FINAL extends `java.lang.Iterable` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.h$e.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$e` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d2304.  v0:= new `java.util.ArrayList`;
  #L3d2308.  v1:= 2I;
  #L3d230a.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3d2310.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3d2316.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$e` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2328.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d232e.  v0.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` := v1 @kind object;
  #L3d2332.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h$d` `d`(`com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d2274.  v0:= new `com.bumptech.glide.load.engine.h$d`;
  #L3d2278.  call temp:= `directExecutor`() @signature `Lcom/bumptech/glide/util/Executors;.directExecutor:()Ljava/util/concurrent/Executor;` @kind static;
  #L3d227e.  v1:= temp @kind object;
  #L3d2280.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3d2286.  return v0 @kind object;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.h$e` v2 @kind this, `com.bumptech.glide.request.ResourceCallback` v3 @kind object, `java.util.concurrent.Executor` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.a:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d2344.  v0:= v2.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d2348.  v1:= new `com.bumptech.glide.load.engine.h$d`;
  #L3d234c.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/load/engine/h$d;.<init>:(Lcom/bumptech/glide/request/ResourceCallback;Ljava/util/concurrent/Executor;)V` @kind direct;
  #L3d2352.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d2358.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.h$e` v1 @kind this, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.b:(Lcom/bumptech/glide/request/ResourceCallback;)Z` @AccessFlag  {
    temp;
    v0;

  #L3d222c.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d2230.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @kind static;
  #L3d2236.  v2:= temp @kind object;
  #L3d2238.  call temp:= `contains`(v0, v2) @signature `Ljava/util/List;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d223e.  v2:= temp;
  #L3d2240.  return v2;
}
procedure `com.bumptech.glide.load.engine.h$e` `c`(`com.bumptech.glide.load.engine.h$e` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.c:()Lcom/bumptech/glide/load/engine/h$e;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3d2298.  v0:= new `com.bumptech.glide.load.engine.h$e`;
  #L3d229c.  v1:= new `java.util.ArrayList`;
  #L3d22a0.  v2:= v3.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d22a4.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d22aa.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/h$e;.<init>:(Ljava/util/List;)V` @kind direct;
  #L3d22b0.  return v0 @kind object;
}
procedure `void` `clear`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.clear:()V` @AccessFlag  {
    temp;
    v0;

  #L3d236c.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d2370.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d2376.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.h$e` v1 @kind this, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$e;.e:(Lcom/bumptech/glide/request/ResourceCallback;)V` @AccessFlag  {
    temp;
    v0;

  #L3d2388.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d238c.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/h$e;.d:(Lcom/bumptech/glide/request/ResourceCallback;)Lcom/bumptech/glide/load/engine/h$d;` @kind static;
  #L3d2392.  v2:= temp @kind object;
  #L3d2394.  call temp:= `remove`(v0, v2) @signature `Ljava/util/List;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3d239a.  return @kind void;
}
procedure `boolean` `isEmpty`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.isEmpty:()Z` @AccessFlag  {
    temp;
    v0;

  #L3d2254.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d2258.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3d225e.  v0:= temp;
  #L3d2260.  return v0;
}
procedure `java.util.Iterator` `iterator`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.iterator:()Ljava/util/Iterator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d22e4.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d22e8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d22ee.  v0:= temp @kind object;
  #L3d22f0.  return v0 @kind object;
}
procedure `int` `size`(`com.bumptech.glide.load.engine.h$e` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$e;.size:()I` @AccessFlag  {
    temp;
    v0;

  #L3d22c4.  v0:= v1.`com.bumptech.glide.load.engine.h$e.a` @type ^`java.util.List` @kind object;
  #L3d22c8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d22ce.  v0:= temp;
  #L3d22d0.  return v0;
}
