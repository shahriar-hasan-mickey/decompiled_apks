record `com.bumptech.glide.load.engine.r$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.data.DataFetcher$DataCallback` @kind interface {
  `com.bumptech.glide.load.model.ModelLoader$LoadData` `com.bumptech.glide.load.engine.r$a.a` @AccessFlag FINAL_SYNTHETIC;
  `com.bumptech.glide.load.engine.r` `com.bumptech.glide.load.engine.r$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.r$a` v0 @kind this, `com.bumptech.glide.load.engine.r` v1 @kind object, `com.bumptech.glide.load.model.ModelLoader$LoadData` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/r$a;.<init>:(Lcom/bumptech/glide/load/engine/r;Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d4a8c.  v0.`com.bumptech.glide.load.engine.r$a.b` @type ^`com.bumptech.glide.load.engine.r` := v1 @kind object;
  #L3d4a90.  v0.`com.bumptech.glide.load.engine.r$a.a` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v2 @kind object;
  #L3d4a94.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d4a9a.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.r$a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/r$a;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4aac.  v0:= v2.`com.bumptech.glide.load.engine.r$a.b` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L3d4ab0.  v1:= v2.`com.bumptech.glide.load.engine.r$a.a` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4ab4.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/r;.d:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)Z` @kind virtual;
  #L3d4aba.  v0:= temp;
  #L3d4abc.  if v0 == 0 then goto L3d4ace;
  #L3d4ac0.  v0:= v2.`com.bumptech.glide.load.engine.r$a.b` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L3d4ac4.  v1:= v2.`com.bumptech.glide.load.engine.r$a.a` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4ac8.  call `e`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/r;.e:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;Ljava/lang/Object;)V` @kind virtual;
  #L3d4ace.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.r$a` v2 @kind this, `java.lang.Exception` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/r$a;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4ae0.  v0:= v2.`com.bumptech.glide.load.engine.r$a.b` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L3d4ae4.  v1:= v2.`com.bumptech.glide.load.engine.r$a.a` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4ae8.  call temp:= `d`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/r;.d:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)Z` @kind virtual;
  #L3d4aee.  v0:= temp;
  #L3d4af0.  if v0 == 0 then goto L3d4b02;
  #L3d4af4.  v0:= v2.`com.bumptech.glide.load.engine.r$a.b` @type ^`com.bumptech.glide.load.engine.r` @kind object;
  #L3d4af8.  v1:= v2.`com.bumptech.glide.load.engine.r$a.a` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4afc.  call `f`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/r;.f:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;Ljava/lang/Exception;)V` @kind virtual;
  #L3d4b02.  return @kind void;
}
