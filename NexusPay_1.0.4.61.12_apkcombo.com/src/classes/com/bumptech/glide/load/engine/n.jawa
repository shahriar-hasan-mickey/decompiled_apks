record `com.bumptech.glide.load.engine.n` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.Resource` @kind interface, `com.bumptech.glide.util.pool.FactoryPools$Poolable` @kind interface {
  `com.bumptech.glide.util.pool.StateVerifier` `com.bumptech.glide.load.engine.n.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.engine.n.b` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.n.c` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.n.d` @AccessFlag PRIVATE;
}
global `androidx.core.util.Pools$Pool` `@@com.bumptech.glide.load.engine.n.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/n;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d41f4.  v0:= new `com.bumptech.glide.load.engine.n$a`;
  #L3d41f8.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/n$a;.<init>:()V` @kind direct;
  #L3d41fe.  v1:= 20I;
  #L3d4202.  call temp:= `threadSafe`(v1, v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafe:(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3d4208.  v0:= temp @kind object;
  #L3d420a.  `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` := v0 @kind object;
  #L3d420e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d4220.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d4226.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.newInstance:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind static;
  #L3d422c.  v0:= temp @kind object;
  #L3d422e.  v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` := v0 @kind object;
  #L3d4232.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.n` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/n;.a:(Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d4244.  v0:= 0I;
  #L3d4246.  v1.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3d424a.  v0:= 1I;
  #L3d424c.  v1.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` := v0 @kind boolean;
  #L3d4250.  v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` := v2 @kind object;
  #L3d4254.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.n` `b`(`com.bumptech.glide.load.engine.Resource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/n;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/n;` @AccessFlag STATIC {
    temp;
    v0;

  #L3d4148.  v0:= `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d414c.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3d4152.  v0:= temp @kind object;
  #L3d4154.  v0:= (`com.bumptech.glide.load.engine.n`) v0 @kind object;
  #L3d4158.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d415e.  v0:= temp @kind object;
  #L3d4160.  v0:= (`com.bumptech.glide.load.engine.n`) v0 @kind object;
  #L3d4164.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/n;.a:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind direct;
  #L3d416a.  return v0 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d42b8.  v0:= 0I;
  #L3d42ba.  v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` := v0 @kind object;
  #L3d42be.  v0:= `@@com.bumptech.glide.load.engine.n.e` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d42c2.  call temp:= `release`(v0, v1) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d42c8.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.n` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d42dc.  @monitorenter v2
  #L3d42de.  v0:= v2.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3d42e2.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3d42e8.  v0:= v2.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` @kind boolean;
  #L3d42ec.  if v0 == 0 then goto L3d4308;
  #L3d42f0.  v0:= 0I;
  #L3d42f2.  v2.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` := v0 @kind boolean;
  #L3d42f6.  v0:= v2.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` @kind boolean;
  #L3d42fa.  if v0 == 0 then goto L3d4304;
  #L3d42fe.  call `recycle`(v2) @signature `Lcom/bumptech/glide/load/engine/n;.recycle:()V` @kind virtual;
  #L3d4304.  @monitorexit v2
  #L3d4306.  return @kind void;
  #L3d4308.  v0:= new `java.lang.IllegalStateException`;
  #L3d430c.  v1:= "Already unlocked" @kind object;
  #L3d4310.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d4316.  throw v0;
  #L3d4318.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d431a.  @monitorexit v2
  #L3d431c.  throw v0;
  catch `java.lang.Throwable` @[L3d42de..L3d4304] goto L3d4318;
  catch `java.lang.Throwable` @[L3d4308..L3d4318] goto L3d4318;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d41d4.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d41d8.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3d41de.  v0:= temp @kind object;
  #L3d41e0.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d41b4.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d41b8.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L3d41be.  v0:= temp @kind object;
  #L3d41c0.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4194.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d4198.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3d419e.  v0:= temp;
  #L3d41a0.  return v0;
}
procedure `com.bumptech.glide.util.pool.StateVerifier` `getVerifier`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.getVerifier:()Lcom/bumptech/glide/util/pool/StateVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d417c.  v0:= v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3d4180.  return v0 @kind object;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.n` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/n;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4268.  @monitorenter v1
  #L3d426a.  v0:= v1.`com.bumptech.glide.load.engine.n.a` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3d426e.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3d4274.  v0:= 1I;
  #L3d4276.  v1.`com.bumptech.glide.load.engine.n.d` @type ^`boolean` := v0 @kind boolean;
  #L3d427a.  v0:= v1.`com.bumptech.glide.load.engine.n.c` @type ^`boolean` @kind boolean;
  #L3d427e.  if v0 != 0 then goto L3d4292;
  #L3d4282.  v0:= v1.`com.bumptech.glide.load.engine.n.b` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d4286.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3d428c.  call `c`(v1) @signature `Lcom/bumptech/glide/load/engine/n;.c:()V` @kind direct;
  #L3d4292.  @monitorexit v1
  #L3d4294.  return @kind void;
  #L3d4296.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d4298.  @monitorexit v1
  #L3d429a.  throw v0;
  catch `java.lang.Throwable` @[L3d426a..L3d4292] goto L3d4296;
}
