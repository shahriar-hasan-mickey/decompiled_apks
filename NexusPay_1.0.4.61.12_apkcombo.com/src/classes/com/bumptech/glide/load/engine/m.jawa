record `com.bumptech.glide.load.engine.m` @kind class @AccessFlag FINAL {
  `java.util.Map` `com.bumptech.glide.load.engine.m.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.m.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.m` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/m;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d3e5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d3e62.  v0:= new `java.util.HashMap`;
  #L3d3e66.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d3e6c.  v1.`com.bumptech.glide.load.engine.m.a` @type ^`java.util.Map` := v0 @kind object;
  #L3d3e70.  v0:= new `java.util.HashMap`;
  #L3d3e74.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d3e7a.  v1.`com.bumptech.glide.load.engine.m.b` @type ^`java.util.Map` := v0 @kind object;
  #L3d3e7e.  return @kind void;
}
procedure `java.util.Map` `b`(`com.bumptech.glide.load.engine.m` v0 @kind this, `boolean` v1 ) @signature `Lcom/bumptech/glide/load/engine/m;.b:(Z)Ljava/util/Map;` @AccessFlag PRIVATE {
    temp;

  #L3d3e3c.  if v1 == 0 then goto L3d3e46;
  #L3d3e40.  v1:= v0.`com.bumptech.glide.load.engine.m.b` @type ^`java.util.Map` @kind object;
  #L3d3e44.  goto L3d3e4a;
  #L3d3e46.  v1:= v0.`com.bumptech.glide.load.engine.m.a` @type ^`java.util.Map` @kind object;
  #L3d3e4a.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.h` `a`(`com.bumptech.glide.load.engine.m` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/m;.a:(Lcom/bumptech/glide/load/Key;Z)Lcom/bumptech/glide/load/engine/h;` @AccessFlag  {
    temp;

  #L3d3e14.  call temp:= `b`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/m;.b:(Z)Ljava/util/Map;` @kind direct;
  #L3d3e1a.  v2:= temp @kind object;
  #L3d3e1c.  call temp:= `get`(v2, v1) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d3e22.  v1:= temp @kind object;
  #L3d3e24.  v1:= (`com.bumptech.glide.load.engine.h`) v1 @kind object;
  #L3d3e28.  return v1 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.m` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `com.bumptech.glide.load.engine.h` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/m;.c:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/h;)V` @AccessFlag  {
    temp;
    v0;

  #L3d3e90.  call temp:= `m`(v3) @signature `Lcom/bumptech/glide/load/engine/h;.m:()Z` @kind virtual;
  #L3d3e96.  v0:= temp;
  #L3d3e98.  call temp:= `b`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/m;.b:(Z)Ljava/util/Map;` @kind direct;
  #L3d3e9e.  v0:= temp @kind object;
  #L3d3ea0.  call temp:= `put`(v0, v2, v3) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d3ea6.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.m` v2 @kind this, `com.bumptech.glide.load.Key` v3 @kind object, `com.bumptech.glide.load.engine.h` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/m;.d:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/h;)V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d3eb8.  call temp:= `m`(v4) @signature `Lcom/bumptech/glide/load/engine/h;.m:()Z` @kind virtual;
  #L3d3ebe.  v0:= temp;
  #L3d3ec0.  call temp:= `b`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/m;.b:(Z)Ljava/util/Map;` @kind direct;
  #L3d3ec6.  v0:= temp @kind object;
  #L3d3ec8.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d3ece.  v1:= temp @kind object;
  #L3d3ed0.  call temp:= `equals`(v4, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d3ed6.  v4:= temp;
  #L3d3ed8.  if v4 == 0 then goto L3d3ee2;
  #L3d3edc.  call temp:= `remove`(v0, v3) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d3ee2.  return @kind void;
}
