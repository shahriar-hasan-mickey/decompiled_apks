record `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$b` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$b` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d8828.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d882e.  return @kind void;
}
procedure `void` `handle`(`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy$b` v2 @kind this, `java.lang.Throwable` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy$b;.handle:(Ljava/lang/Throwable;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d8840.  if v3 == 0 then goto L3d8860;
  #L3d8844.  v0:= 6I;
  #L3d8846.  v1:= "GlideExecutor" @kind object;
  #L3d884a.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d8850.  v0:= temp;
  #L3d8852.  if v0 == 0 then goto L3d8860;
  #L3d8856.  v0:= "Request threw uncaught throwable" @kind object;
  #L3d885a.  call temp:= `e`(v1, v0, v3) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d8860.  return @kind void;
}
