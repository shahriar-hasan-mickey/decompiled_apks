record `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.e` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @AccessFlag PRIVATE;
}
global `android.graphics.Bitmap$Config` `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d63a0.  v0:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d63a4.  `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` := v0 @kind object;
  #L3d63a8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this, `long` v3 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d63bc.  call temp:= `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/e;` @kind static;
  #L3d63c2.  v0:= temp @kind object;
  #L3d63c4.  call temp:= `f`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.f:()Ljava/util/Set;` @kind static;
  #L3d63ca.  v1:= temp @kind object;
  #L3d63cc.  call `<init>`(v2, v3, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/e;Ljava/util/Set;)V` @kind direct;
  #L3d63d2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v0 @kind this, `long` v1 , `com.bumptech.glide.load.engine.bitmap_recycle.e` v3 @kind object, `java.util.Set` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/e;Ljava/util/Set;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d63e4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d63ea.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @type ^`long` := v1 @kind wide;
  #L3d63ee.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` := v1 @kind wide;
  #L3d63f2.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` := v3 @kind object;
  #L3d63f6.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` := v4 @kind object;
  #L3d63fa.  v1:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$b`;
  #L3d63fe.  call `<init>`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$b;.<init>:()V` @kind direct;
  #L3d6404.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` := v1 @kind object;
  #L3d6408.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `long` v2 , `java.util.Set` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLjava/util/Set;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d641c.  call temp:= `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/e;` @kind static;
  #L3d6422.  v0:= temp @kind object;
  #L3d6424.  call `<init>`(v1, v2, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.<init>:(JLcom/bumptech/glide/load/engine/bitmap_recycle/e;Ljava/util/Set;)V` @kind direct;
  #L3d642a.  return @kind void;
}
procedure `void` `a`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.a:(Landroid/graphics/Bitmap$Config;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d643c.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d6440.  v1:= 26I;
  #L3d6444.  if v0 >= v1 then goto L3d644a;
  #L3d6448.  return @kind void;
  #L3d644a.  v0:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d644e.  if v3 == v0 then goto L3d6454;
  #L3d6452.  return @kind void;
  #L3d6454.  v0:= new `java.lang.IllegalArgumentException`;
  #L3d6458.  v1:= new `java.lang.StringBuilder`;
  #L3d645c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6462.  v2:= "Cannot create a mutable Bitmap with config: " @kind object;
  #L3d6466.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d646c.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6472.  v3:= ". Consider setting Downsampler#ALLOW_HARDWARE_CONFIG to false in your RequestOptions and/or in GlideBuilder.setDefaultRequestOptions" @kind object;
  #L3d6476.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d647c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6482.  v3:= temp @kind object;
  #L3d6484.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d648a.  throw v0;
}
procedure `android.graphics.Bitmap` `b`(`int` v0 , `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3d60f0.  if v2 == 0 then goto L3d60f6;
  #L3d60f4.  goto L3d60fa;
  #L3d60f6.  v2:= `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d60fa.  call temp:= `createBitmap`(v0, v1, v2) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3d6100.  v0:= temp @kind object;
  #L3d6102.  return v0 @kind object;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d64d4.  v0:= "LruBitmapPool" @kind object;
  #L3d64d8.  v1:= 2I;
  #L3d64da.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d64e0.  v0:= temp;
  #L3d64e2.  if v0 == 0 then goto L3d64ec;
  #L3d64e6.  call `d`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @kind direct;
  #L3d64ec.  return @kind void;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d6500.  v0:= new `java.lang.StringBuilder`;
  #L3d6504.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d650a.  v1:= "Hits=" @kind object;
  #L3d650e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6514.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3d6518.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d651e.  v1:= ", misses=" @kind object;
  #L3d6522.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6528.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3d652c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6532.  v1:= ", puts=" @kind object;
  #L3d6536.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d653c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int`;
  #L3d6540.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6546.  v1:= ", evictions=" @kind object;
  #L3d654a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6550.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3d6554.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d655a.  v1:= ", currentSize=" @kind object;
  #L3d655e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6564.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d6568.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d656e.  v1:= ", maxSize=" @kind object;
  #L3d6572.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6578.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3d657c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6582.  v1:= "\nStrategy=" @kind object;
  #L3d6586.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d658c.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6590.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6596.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d659c.  v0:= temp @kind object;
  #L3d659e.  v1:= "LruBitmapPool" @kind object;
  #L3d65a2.  call temp:= `v`(v1, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d65a8.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d65bc.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3d65c0.  call `k`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3d65c6.  return @kind void;
}
procedure `java.util.Set` `f`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.f:()Ljava/util/Set;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d62c8.  v0:= new `java.util.HashSet`;
  #L3d62cc.  call temp:= `values`() @signature `Landroid/graphics/Bitmap$Config;.values:()[Landroid/graphics/Bitmap$Config;` @kind static;
  #L3d62d2.  v1:= temp @kind object;
  #L3d62d4.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3d62da.  v1:= temp @kind object;
  #L3d62dc.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d62e2.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d62e6.  v2:= 19I;
  #L3d62ea.  if v1 < v2 then goto L3d62f6;
  #L3d62ee.  v1:= 0I;
  #L3d62f0.  call temp:= `add`(v0, v1) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d62f6.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d62fa.  v2:= 26I;
  #L3d62fe.  if v1 < v2 then goto L3d630c;
  #L3d6302.  v1:= `@@android.graphics.Bitmap$Config.HARDWARE` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6306.  call temp:= `remove`(v0, v1) @signature `Ljava/util/Set;.remove:(Ljava/lang/Object;)Z` @kind interface;
  #L3d630c.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3d6312.  v0:= temp @kind object;
  #L3d6314.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.e` `g`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.g:()Lcom/bumptech/glide/load/engine/bitmap_recycle/e;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d6294.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d6298.  v1:= 19I;
  #L3d629c.  if v0 < v1 then goto L3d62ac;
  #L3d62a0.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy`;
  #L3d62a4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<init>:()V` @kind direct;
  #L3d62aa.  goto L3d62b6;
  #L3d62ac.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.b`;
  #L3d62b0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/b;.<init>:()V` @kind direct;
  #L3d62b6.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v5 @kind this, `int` v6 , `int` v7 , `android.graphics.Bitmap$Config` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d616c.  @monitorenter v5
  #L3d616e.  call `a`(v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.a:(Landroid/graphics/Bitmap$Config;)V` @kind static;
  #L3d6174.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6178.  if v8 == 0 then goto L3d6180;
  #L3d617c.  v1:= v8 @kind object;
  #L3d617e.  goto L3d6184;
  #L3d6180.  v1:= `@@com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.k` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6184.  call temp:= `get`(v0, v6, v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3d618a.  v0:= temp @kind object;
  #L3d618c.  if v0 != 0 then goto L3d61e8;
  #L3d6190.  v1:= "LruBitmapPool" @kind object;
  #L3d6194.  v2:= 3I;
  #L3d6196.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d619c.  v1:= temp;
  #L3d619e.  if v1 == 0 then goto L3d61da;
  #L3d61a2.  v1:= "LruBitmapPool" @kind object;
  #L3d61a6.  v2:= new `java.lang.StringBuilder`;
  #L3d61aa.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d61b0.  v3:= "Missing bitmap=" @kind object;
  #L3d61b4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d61ba.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d61be.  call temp:= `logBitmap`(v3, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L3d61c4.  v3:= temp @kind object;
  #L3d61c6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d61cc.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d61d2.  v2:= temp @kind object;
  #L3d61d4.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d61da.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3d61de.  v1:= v1 + 1;
  #L3d61e2.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int` := v1;
  #L3d61e6.  goto L3d621c;
  #L3d61e8.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3d61ec.  v1:= v1 + 1;
  #L3d61f0.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int` := v1;
  #L3d61f4.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d61f8.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d61fc.  call temp:= `getSize`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3d6202.  v3:= temp;
  #L3d6204.  v3:= (`long`) v3 @kind i2l;
  #L3d6206.  v1:= v1 - v3 @kind long;
  #L3d6208.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v1 @kind wide;
  #L3d620c.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3d6210.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d6216.  call `j`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.j:(Landroid/graphics/Bitmap;)V` @kind static;
  #L3d621c.  v1:= "LruBitmapPool" @kind object;
  #L3d6220.  v2:= 2I;
  #L3d6222.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d6228.  v1:= temp;
  #L3d622a.  if v1 == 0 then goto L3d6266;
  #L3d622e.  v1:= "LruBitmapPool" @kind object;
  #L3d6232.  v2:= new `java.lang.StringBuilder`;
  #L3d6236.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d623c.  v3:= "Get bitmap=" @kind object;
  #L3d6240.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6246.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d624a.  call temp:= `logBitmap`(v3, v6, v7, v8) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind interface;
  #L3d6250.  v6:= temp @kind object;
  #L3d6252.  call temp:= `append`(v2, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6258.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d625e.  v6:= temp @kind object;
  #L3d6260.  call temp:= `v`(v1, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d6266.  call `c`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3d626c.  @monitorexit v5
  #L3d626e.  return v0 @kind object;
  #L3d6270.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d6272.  @monitorexit v5
  #L3d6274.  throw v6;
  catch `java.lang.Throwable` @[L3d616e..L3d626c] goto L3d6270;
}
procedure `void` `i`(`android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.i:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d65d8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d65dc.  v1:= 19I;
  #L3d65e0.  if v0 < v1 then goto L3d65ec;
  #L3d65e4.  v0:= 1I;
  #L3d65e6.  call `setPremultiplied`(v2, v0) @signature `Landroid/graphics/Bitmap;.setPremultiplied:(Z)V` @kind virtual;
  #L3d65ec.  return @kind void;
}
procedure `void` `j`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.j:(Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3d6600.  v0:= 1I;
  #L3d6602.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3d6608.  call `i`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.i:(Landroid/graphics/Bitmap;)V` @kind static;
  #L3d660e.  return @kind void;
}
procedure `void` `k`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v5 @kind this, `long` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d68c4.  @monitorenter v5
  #L3d68c6.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d68ca.  v2:= lcmp(v0, v6);
  #L3d68ce.  if v2 <= 0 then goto L3d699a;
  #L3d68d2.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d68d6.  call temp:= `removeLast`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.removeLast:()Landroid/graphics/Bitmap;` @kind interface;
  #L3d68dc.  v0:= temp @kind object;
  #L3d68de.  if v0 != 0 then goto L3d6914;
  #L3d68e2.  v6:= "LruBitmapPool" @kind object;
  #L3d68e6.  v7:= 5I;
  #L3d68e8.  call temp:= `isLoggable`(v6, v7) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d68ee.  v6:= temp;
  #L3d68f0.  if v6 == 0 then goto L3d6908;
  #L3d68f4.  v6:= "LruBitmapPool" @kind object;
  #L3d68f8.  v7:= "Size mismatch, resetting" @kind object;
  #L3d68fc.  call temp:= `w`(v6, v7) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d6902.  call `d`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.d:()V` @kind direct;
  #L3d6908.  v6:= 0L;
  #L3d690c.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v6 @kind wide;
  #L3d6910.  @monitorexit v5
  #L3d6912.  return @kind void;
  #L3d6914.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3d6918.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.a:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d691e.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d6922.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6926.  call temp:= `getSize`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3d692c.  v3:= temp;
  #L3d692e.  v3:= (`long`) v3 @kind i2l;
  #L3d6930.  v1:= v1 - v3 @kind long;
  #L3d6932.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v1 @kind wide;
  #L3d6936.  v1:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3d693a.  v1:= v1 + 1;
  #L3d693e.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int` := v1;
  #L3d6942.  v1:= "LruBitmapPool" @kind object;
  #L3d6946.  v2:= 3I;
  #L3d6948.  call temp:= `isLoggable`(v1, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d694e.  v1:= temp;
  #L3d6950.  if v1 == 0 then goto L3d698c;
  #L3d6954.  v1:= "LruBitmapPool" @kind object;
  #L3d6958.  v2:= new `java.lang.StringBuilder`;
  #L3d695c.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6962.  v3:= "Evicting bitmap=" @kind object;
  #L3d6966.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d696c.  v3:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6970.  call temp:= `logBitmap`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3d6976.  v3:= temp @kind object;
  #L3d6978.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d697e.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6984.  v2:= temp @kind object;
  #L3d6986.  call temp:= `d`(v1, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d698c.  call `c`(v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3d6992.  call `recycle`(v0) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3d6998.  goto L3d68c6;
  #L3d699a.  @monitorexit v5
  #L3d699c.  return @kind void;
  #L3d699e.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d69a0.  @monitorexit v5
  #L3d69a2.  throw v6;
  catch `java.lang.Throwable` @[L3d68c6..L3d6910] goto L3d699e;
  catch `java.lang.Throwable` @[L3d6914..L3d6998] goto L3d699e;
}
procedure `void` `clearMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.clearMemory:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d649c.  v0:= "LruBitmapPool" @kind object;
  #L3d64a0.  v1:= 3I;
  #L3d64a2.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d64a8.  v1:= temp;
  #L3d64aa.  if v1 == 0 then goto L3d64b8;
  #L3d64ae.  v1:= "clearMemory" @kind object;
  #L3d64b2.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d64b8.  v0:= 0L;
  #L3d64bc.  call `k`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3d64c2.  return @kind void;
}
procedure `long` `evictionCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.evictionCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6328.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.j` @type ^`int`;
  #L3d632c.  v0:= (`long`) v0 @kind i2l;
  #L3d632e.  return v0 @kind wide;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6114.  call temp:= `h`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L3d611a.  v0:= temp @kind object;
  #L3d611c.  if v0 == 0 then goto L3d612a;
  #L3d6120.  v2:= 0I;
  #L3d6122.  call `eraseColor`(v0, v2) @signature `Landroid/graphics/Bitmap;.eraseColor:(I)V` @kind virtual;
  #L3d6128.  goto L3d6132;
  #L3d612a.  call temp:= `b`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3d6130.  v0:= temp @kind object;
  #L3d6132.  return v0 @kind object;
}
procedure `long` `getCurrentSize`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getCurrentSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6340.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d6344.  return v0 @kind wide;
}
procedure `android.graphics.Bitmap` `getDirty`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v1 @kind this, `int` v2 , `int` v3 , `android.graphics.Bitmap$Config` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6144.  call temp:= `h`(v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.h:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind direct;
  #L3d614a.  v0:= temp @kind object;
  #L3d614c.  if v0 != 0 then goto L3d6158;
  #L3d6150.  call temp:= `b`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.b:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3d6156.  v0:= temp @kind object;
  #L3d6158.  return v0 @kind object;
}
procedure `long` `getMaxSize`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getMaxSize:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6358.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3d635c.  return v0 @kind wide;
}
procedure `long` `hitCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.hitCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6370.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.g` @type ^`int`;
  #L3d6374.  v0:= (`long`) v0 @kind i2l;
  #L3d6376.  return v0 @kind wide;
}
procedure `long` `missCount`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.missCount:()J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6388.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.h` @type ^`int`;
  #L3d638c.  v0:= (`long`) v0 @kind i2l;
  #L3d638e.  return v0 @kind wide;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v6 @kind this, `android.graphics.Bitmap` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d6620.  @monitorenter v6
  #L3d6622.  if v7 == 0 then goto L3d67a6;
  #L3d6626.  call temp:= `isRecycled`(v7) @signature `Landroid/graphics/Bitmap;.isRecycled:()Z` @kind virtual;
  #L3d662c.  v0:= temp;
  #L3d662e.  if v0 != 0 then goto L3d6792;
  #L3d6632.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L3d6638.  v0:= temp;
  #L3d663a.  v1:= 2I;
  #L3d663c.  if v0 == 0 then goto L3d6704;
  #L3d6640.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6644.  call temp:= `getSize`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3d664a.  v0:= temp;
  #L3d664c.  v2:= (`long`) v0 @kind i2l;
  #L3d664e.  v4:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` @kind wide;
  #L3d6652.  v0:= lcmp(v2, v4);
  #L3d6656.  if v0 > 0 then goto L3d6704;
  #L3d665a.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` @kind object;
  #L3d665e.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d6664.  v2:= temp @kind object;
  #L3d6666.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d666c.  v0:= temp;
  #L3d666e.  if v0 != 0 then goto L3d6674;
  #L3d6672.  goto L3d6704;
  #L3d6674.  v0:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6678.  call temp:= `getSize`(v0, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.getSize:(Landroid/graphics/Bitmap;)I` @kind interface;
  #L3d667e.  v0:= temp;
  #L3d6680.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6684.  call `put`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d668a.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool$a` @kind object;
  #L3d668e.  call `b`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool$a;.b:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d6694.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int`;
  #L3d6698.  v2:= v2 + 1;
  #L3d669c.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.i` @type ^`int` := v2;
  #L3d66a0.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` @kind wide;
  #L3d66a4.  v4:= (`long`) v0 @kind i2l;
  #L3d66a6.  v2:= v2 + v4 @kind long;
  #L3d66a8.  v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.f` @type ^`long` := v2 @kind wide;
  #L3d66ac.  v0:= "LruBitmapPool" @kind object;
  #L3d66b0.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d66b6.  v0:= temp;
  #L3d66b8.  if v0 == 0 then goto L3d66f4;
  #L3d66bc.  v0:= "LruBitmapPool" @kind object;
  #L3d66c0.  v1:= new `java.lang.StringBuilder`;
  #L3d66c4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d66ca.  v2:= "Put bitmap in pool=" @kind object;
  #L3d66ce.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d66d4.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d66d8.  call temp:= `logBitmap`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3d66de.  v7:= temp @kind object;
  #L3d66e0.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d66e6.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d66ec.  v7:= temp @kind object;
  #L3d66ee.  call temp:= `v`(v0, v7) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d66f4.  call `c`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.c:()V` @kind direct;
  #L3d66fa.  call `e`(v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @kind direct;
  #L3d6700.  @monitorexit v6
  #L3d6702.  return @kind void;
  #L3d6704.  v0:= "LruBitmapPool" @kind object;
  #L3d6708.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d670e.  v0:= temp;
  #L3d6710.  if v0 == 0 then goto L3d6788;
  #L3d6714.  v0:= "LruBitmapPool" @kind object;
  #L3d6718.  v1:= new `java.lang.StringBuilder`;
  #L3d671c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6722.  v2:= "Reject bitmap from pool, bitmap: " @kind object;
  #L3d6726.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d672c.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.e` @kind object;
  #L3d6730.  call temp:= `logBitmap`(v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/e;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind interface;
  #L3d6736.  v2:= temp @kind object;
  #L3d6738.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d673e.  v2:= ", is mutable: " @kind object;
  #L3d6742.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6748.  call temp:= `isMutable`(v7) @signature `Landroid/graphics/Bitmap;.isMutable:()Z` @kind virtual;
  #L3d674e.  v2:= temp;
  #L3d6750.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6756.  v2:= ", is allowed config: " @kind object;
  #L3d675a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6760.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.b` @type ^`java.util.Set` @kind object;
  #L3d6764.  call temp:= `getConfig`(v7) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d676a.  v3:= temp @kind object;
  #L3d676c.  call temp:= `contains`(v2, v3) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d6772.  v2:= temp;
  #L3d6774.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d677a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6780.  v1:= temp @kind object;
  #L3d6782.  call temp:= `v`(v0, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d6788.  call `recycle`(v7) @signature `Landroid/graphics/Bitmap;.recycle:()V` @kind virtual;
  #L3d678e.  @monitorexit v6
  #L3d6790.  return @kind void;
  #L3d6792.  v7:= new `java.lang.IllegalStateException`;
  #L3d6796.  v0:= "Cannot pool recycled bitmap" @kind object;
  #L3d679a.  call `<init>`(v7, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d67a0.  throw v7;
  #L3d67a2.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d67a4.  goto L3d67b6;
  #L3d67a6.  v7:= new `java.lang.NullPointerException`;
  #L3d67aa.  v0:= "Bitmap must not be null" @kind object;
  #L3d67ae.  call `<init>`(v7, v0) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d67b4.  throw v7;
  #L3d67b6.  @monitorexit v6
  #L3d67b8.  throw v7;
  catch `java.lang.Throwable` @[L3d6626..L3d6700] goto L3d67a2;
  catch `java.lang.Throwable` @[L3d6704..L3d678e] goto L3d67a2;
  catch `java.lang.Throwable` @[L3d6792..L3d67b6] goto L3d67a2;
}
procedure `void` `setSizeMultiplier`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.setSizeMultiplier:(F)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d67e8.  @monitorenter v2
  #L3d67ea.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.c` @type ^`long` @kind wide;
  #L3d67ee.  v0:= (`float`) v0 @kind l2f;
  #L3d67f0.  v0:= v0 * v3 @kind float;
  #L3d67f4.  call temp:= `round`(v0) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3d67fa.  v3:= temp;
  #L3d67fc.  v0:= (`long`) v3 @kind i2l;
  #L3d67fe.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool.e` @type ^`long` := v0 @kind wide;
  #L3d6802.  call `e`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.e:()V` @kind direct;
  #L3d6808.  @monitorexit v2
  #L3d680a.  return @kind void;
  #L3d680c.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d680e.  @monitorexit v2
  #L3d6810.  throw v3;
  catch `java.lang.Throwable` @[L3d67ea..L3d6808] goto L3d680c;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruBitmapPool` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d6830.  v0:= "LruBitmapPool" @kind object;
  #L3d6834.  v1:= 3I;
  #L3d6836.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d683c.  v1:= temp;
  #L3d683e.  if v1 == 0 then goto L3d686a;
  #L3d6842.  v1:= new `java.lang.StringBuilder`;
  #L3d6846.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d684c.  v2:= "trimMemory, level=" @kind object;
  #L3d6850.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6856.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d685c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6862.  v1:= temp @kind object;
  #L3d6864.  call temp:= `d`(v0, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d686a.  v0:= 40I;
  #L3d686e.  if v5 >= v0 then goto L3d68aa;
  #L3d6872.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d6876.  v1:= 23I;
  #L3d687a.  v2:= 20I;
  #L3d687e.  if v0 < v1 then goto L3d6888;
  #L3d6882.  if v5 < v2 then goto L3d6888;
  #L3d6886.  goto L3d68aa;
  #L3d6888.  if v5 >= v2 then goto L3d6894;
  #L3d688c.  v0:= 15I;
  #L3d6890.  if v5 != v0 then goto L3d68b0;
  #L3d6894.  call temp:= `getMaxSize`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.getMaxSize:()J` @kind virtual;
  #L3d689a.  v0:= temp @kind wide;
  #L3d689c.  v2:= 2L;
  #L3d68a0.  v0:= v0 / v2 @kind long;
  #L3d68a2.  call `k`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.k:(J)V` @kind direct;
  #L3d68a8.  goto L3d68b0;
  #L3d68aa.  call `clearMemory`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruBitmapPool;.clearMemory:()V` @kind virtual;
  #L3d68b0.  return @kind void;
}
