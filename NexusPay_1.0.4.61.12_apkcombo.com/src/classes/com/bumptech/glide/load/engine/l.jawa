record `com.bumptech.glide.load.engine.l` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.Resource` @kind interface {
  `boolean` `com.bumptech.glide.load.engine.l.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.engine.l.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.Resource` `com.bumptech.glide.load.engine.l.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.l$a` `com.bumptech.glide.load.engine.l.d` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.l.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.l.f` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.l.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.l` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object, `boolean` v2 , `boolean` v3 , `com.bumptech.glide.load.Key` v4 @kind object, `com.bumptech.glide.load.engine.l$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/l;.<init>:(Lcom/bumptech/glide/load/engine/Resource;ZZLcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/l$a;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d2ffc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d3002.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d3008.  v1:= temp @kind object;
  #L3d300a.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3d300e.  v0.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` := v1 @kind object;
  #L3d3012.  v0.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` := v2 @kind boolean;
  #L3d3016.  v0.`com.bumptech.glide.load.engine.l.b` @type ^`boolean` := v3 @kind boolean;
  #L3d301a.  v0.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` := v4 @kind object;
  #L3d301e.  call temp:= `checkNotNull`(v5) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d3024.  v1:= temp @kind object;
  #L3d3026.  v1:= (`com.bumptech.glide.load.engine.l$a`) v1 @kind object;
  #L3d302a.  v0.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` := v1 @kind object;
  #L3d302e.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.a:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d3040.  @monitorenter v2
  #L3d3042.  v0:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3d3046.  if v0 != 0 then goto L3d305a;
  #L3d304a.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3d304e.  v0:= v0 + 1;
  #L3d3052.  v2.`com.bumptech.glide.load.engine.l.f` @type ^`int` := v0;
  #L3d3056.  @monitorexit v2
  #L3d3058.  return @kind void;
  #L3d305a.  v0:= new `java.lang.IllegalStateException`;
  #L3d305e.  v1:= "Cannot acquire a recycled resource" @kind object;
  #L3d3062.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d3068.  throw v0;
  #L3d306a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d306c.  @monitorexit v2
  #L3d306e.  throw v0;
  catch `java.lang.Throwable` @[L3d3042..L3d3056] goto L3d306a;
  catch `java.lang.Throwable` @[L3d305a..L3d306a] goto L3d306a;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.b:()Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag  {
    temp;
    v0;

  #L3d2ec8.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d2ecc.  return v0 @kind object;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L3d2eb0.  v0:= v1.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` @kind boolean;
  #L3d2eb4.  return v0;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.d:()V` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d310c.  @monitorenter v2
  #L3d310e.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3d3112.  if v0 <= 0 then goto L3d3140;
  #L3d3116.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3d311a.  v1:= 1I;
  #L3d311c.  v0:= v0 - v1 @kind int;
  #L3d311e.  v2.`com.bumptech.glide.load.engine.l.f` @type ^`int` := v0;
  #L3d3122.  if v0 != 0 then goto L3d3128;
  #L3d3126.  goto L3d312a;
  #L3d3128.  v1:= 0I;
  #L3d312a.  @monitorexit v2
  #L3d312c.  if v1 == 0 then goto L3d313e;
  #L3d3130.  v0:= v2.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` @kind object;
  #L3d3134.  v1:= v2.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d3138.  call `onResourceReleased`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/l$a;.onResourceReleased:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/l;)V` @kind interface;
  #L3d313e.  return @kind void;
  #L3d3140.  v0:= new `java.lang.IllegalStateException`;
  #L3d3144.  v1:= "Cannot release a recycled or not yet acquired resource" @kind object;
  #L3d3148.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d314e.  throw v0;
  #L3d3150.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3152.  @monitorexit v2
  #L3d3154.  throw v0;
  catch `java.lang.Throwable` @[L3d310e..L3d312c] goto L3d3150;
  catch `java.lang.Throwable` @[L3d3140..L3d3154] goto L3d3150;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2f20.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d2f24.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3d2f2a.  v0:= temp @kind object;
  #L3d2f2c.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2f00.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d2f04.  call temp:= `getResourceClass`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getResourceClass:()Ljava/lang/Class;` @kind interface;
  #L3d2f0a.  v0:= temp @kind object;
  #L3d2f0c.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.l` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d2ee0.  v0:= v1.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d2ee4.  call temp:= `getSize`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3d2eea.  v0:= temp;
  #L3d2eec.  return v0;
}
procedure `void` `recycle`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d3094.  @monitorenter v2
  #L3d3096.  v0:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3d309a.  if v0 > 0 then goto L3d30d2;
  #L3d309e.  v0:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3d30a2.  if v0 != 0 then goto L3d30c2;
  #L3d30a6.  v0:= 1I;
  #L3d30a8.  v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` := v0 @kind boolean;
  #L3d30ac.  v0:= v2.`com.bumptech.glide.load.engine.l.b` @type ^`boolean` @kind boolean;
  #L3d30b0.  if v0 == 0 then goto L3d30be;
  #L3d30b4.  v0:= v2.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d30b8.  call `recycle`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3d30be.  @monitorexit v2
  #L3d30c0.  return @kind void;
  #L3d30c2.  v0:= new `java.lang.IllegalStateException`;
  #L3d30c6.  v1:= "Cannot recycle a resource that has already been recycled" @kind object;
  #L3d30ca.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d30d0.  throw v0;
  #L3d30d2.  v0:= new `java.lang.IllegalStateException`;
  #L3d30d6.  v1:= "Cannot recycle a resource while it is still acquired" @kind object;
  #L3d30da.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d30e0.  throw v0;
  #L3d30e2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d30e4.  @monitorexit v2
  #L3d30e6.  throw v0;
  catch `java.lang.Throwable` @[L3d3096..L3d30be] goto L3d30e2;
  catch `java.lang.Throwable` @[L3d30c2..L3d30e2] goto L3d30e2;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.l` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/l;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d2f40.  @monitorenter v2
  #L3d2f42.  v0:= new `java.lang.StringBuilder`;
  #L3d2f46.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d2f4c.  v1:= "EngineResource{isMemoryCacheable=" @kind object;
  #L3d2f50.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f56.  v1:= v2.`com.bumptech.glide.load.engine.l.a` @type ^`boolean` @kind boolean;
  #L3d2f5a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f60.  v1:= ", listener=" @kind object;
  #L3d2f64.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f6a.  v1:= v2.`com.bumptech.glide.load.engine.l.d` @type ^`com.bumptech.glide.load.engine.l$a` @kind object;
  #L3d2f6e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f74.  v1:= ", key=" @kind object;
  #L3d2f78.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f7e.  v1:= v2.`com.bumptech.glide.load.engine.l.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d2f82.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f88.  v1:= ", acquired=" @kind object;
  #L3d2f8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f92.  v1:= v2.`com.bumptech.glide.load.engine.l.f` @type ^`int`;
  #L3d2f96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2f9c.  v1:= ", isRecycled=" @kind object;
  #L3d2fa0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2fa6.  v1:= v2.`com.bumptech.glide.load.engine.l.g` @type ^`boolean` @kind boolean;
  #L3d2faa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2fb0.  v1:= ", resource=" @kind object;
  #L3d2fb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2fba.  v1:= v2.`com.bumptech.glide.load.engine.l.c` @type ^`com.bumptech.glide.load.engine.Resource` @kind object;
  #L3d2fbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2fc4.  v1:= 125I;
  #L3d2fc8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d2fce.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d2fd4.  v0:= temp @kind object;
  #L3d2fd6.  @monitorexit v2
  #L3d2fd8.  return v0 @kind object;
  #L3d2fda.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2fdc.  @monitorexit v2
  #L3d2fde.  throw v0;
  catch `java.lang.Throwable` @[L3d2f42..L3d2fd6] goto L3d2fda;
}
