record `com.bumptech.glide.load.engine.executor.a` @kind class @AccessFlag FINAL {
}
procedure `int` `a`() @signature `Lcom/bumptech/glide/load/engine/executor/a;.a:()I` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d8dec.  call temp:= `getRuntime`() @signature `Ljava/lang/Runtime;.getRuntime:()Ljava/lang/Runtime;` @kind static;
  #L3d8df2.  v0:= temp @kind object;
  #L3d8df4.  call temp:= `availableProcessors`(v0) @signature `Ljava/lang/Runtime;.availableProcessors:()I` @kind virtual;
  #L3d8dfa.  v0:= temp;
  #L3d8dfc.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d8e00.  v2:= 17I;
  #L3d8e04.  if v1 >= v2 then goto L3d8e18;
  #L3d8e08.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/engine/executor/a;.b:()I` @kind static;
  #L3d8e0e.  v1:= temp;
  #L3d8e10.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3d8e16.  v0:= temp;
  #L3d8e18.  return v0;
}
procedure `int` `b`() @signature `Lcom/bumptech/glide/load/engine/executor/a;.b:()I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d8e2c.  v0:= "GlideRuntimeCompat" @kind object;
  #L3d8e30.  call temp:= `allowThreadDiskReads`() @signature `Landroid/os/StrictMode;.allowThreadDiskReads:()Landroid/os/StrictMode$ThreadPolicy;` @kind static;
  #L3d8e36.  v1:= temp @kind object;
  #L3d8e38.  v2:= new `java.io.File`;
  #L3d8e3c.  v3:= "/sys/devices/system/cpu/" @kind object;
  #L3d8e40.  call `<init>`(v2, v3) @signature `Ljava/io/File;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d8e46.  v3:= "cpu[0-9]+" @kind object;
  #L3d8e4a.  call temp:= `compile`(v3) @signature `Ljava/util/regex/Pattern;.compile:(Ljava/lang/String;)Ljava/util/regex/Pattern;` @kind static;
  #L3d8e50.  v3:= temp @kind object;
  #L3d8e52.  v4:= new `com.bumptech.glide.load.engine.executor.a$a`;
  #L3d8e56.  call `<init>`(v4, v3) @signature `Lcom/bumptech/glide/load/engine/executor/a$a;.<init>:(Ljava/util/regex/Pattern;)V` @kind direct;
  #L3d8e5c.  call temp:= `listFiles`(v2, v4) @signature `Ljava/io/File;.listFiles:(Ljava/io/FilenameFilter;)[Ljava/io/File;` @kind virtual;
  #L3d8e62.  v0:= temp @kind object;
  #L3d8e64.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3d8e6a.  goto L3d8e8e;
  #L3d8e6c.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d8e6e.  v3:= 6I;
  #L3d8e70.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d8e76.  v3:= temp;
  #L3d8e78.  if v3 == 0 then goto L3d8e86;
  #L3d8e7c.  v3:= "Failed to calculate accurate cpu count" @kind object;
  #L3d8e80.  call temp:= `e`(v0, v3, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d8e86.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3d8e8c.  v0:= 0I;
  #L3d8e8e.  v1:= 1I;
  #L3d8e90.  if v0 == 0 then goto L3d8e98;
  #L3d8e94.  v0:= length @variable v0;
  #L3d8e96.  goto L3d8e9a;
  #L3d8e98.  v0:= 0I;
  #L3d8e9a.  call temp:= `max`(v1, v0) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3d8ea0.  v0:= temp;
  #L3d8ea2.  return v0;
  #L3d8ea4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d8ea6.  call `setThreadPolicy`(v1) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3d8eac.  throw v0;
  catch `java.lang.Throwable` @[L3d8e38..L3d8e64] goto L3d8e6c;
  catch `java.lang.Throwable` @[L3d8e70..L3d8e86] goto L3d8ea4;
}
