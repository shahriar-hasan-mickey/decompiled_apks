record `com.bumptech.glide.load.engine.LoadPath` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.LoadPath.a` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.LoadPath.b` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.LoadPath.c` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.LoadPath.d` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.LoadPath` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `androidx.core.util.Pools$Pool` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d4064.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d406a.  v0.`com.bumptech.glide.load.engine.LoadPath.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3d406e.  v0.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` := v5 @kind object;
  #L3d4072.  call temp:= `checkNotEmpty`(v4) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotEmpty:(Ljava/util/Collection;)Ljava/util/Collection;` @kind static;
  #L3d4078.  v4:= temp @kind object;
  #L3d407a.  v4:= (`java.util.List`) v4 @kind object;
  #L3d407e.  v0.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` := v4 @kind object;
  #L3d4082.  v4:= new `java.lang.StringBuilder`;
  #L3d4086.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d408c.  v5:= "Failed LoadPath{" @kind object;
  #L3d4090.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4096.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d409c.  v1:= temp @kind object;
  #L3d409e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40a4.  v1:= "->" @kind object;
  #L3d40a8.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40ae.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d40b4.  v2:= temp @kind object;
  #L3d40b6.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40bc.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40c2.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d40c8.  v1:= temp @kind object;
  #L3d40ca.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40d0.  v1:= "}" @kind object;
  #L3d40d4.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d40da.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d40e0.  v1:= temp @kind object;
  #L3d40e2.  v0.`com.bumptech.glide.load.engine.LoadPath.d` @type ^`java.lang.String` := v1 @kind object;
  #L3d40e6.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.LoadPath` v12 @kind this, `com.bumptech.glide.load.data.DataRewinder` v13 @kind object, `com.bumptech.glide.load.Options` v14 @kind object, `int` v15 , `int` v16 , `com.bumptech.glide.load.engine.DecodePath$a` v17 @kind object, `java.util.List` v18 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3d3f58.  v1:= v12 @kind object;
  #L3d3f5a.  v2:= v18 @kind object;
  #L3d3f5e.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3d3f62.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d3f68.  v3:= temp;
  #L3d3f6a.  v0:= 0I;
  #L3d3f6c.  v4:= 0I;
  #L3d3f6e.  v4:= v0 @kind object;
  #L3d3f70.  v5:= 0I;
  #L3d3f72.  if v5 >= v3 then goto L3d3fb8;
  #L3d3f76.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3d3f7a.  call temp:= `get`(v0, v5) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d3f80.  v0:= temp @kind object;
  #L3d3f82.  v6:= v0 @kind object;
  #L3d3f84.  v6:= (`com.bumptech.glide.load.engine.DecodePath`) v6 @kind object;
  #L3d3f88.  v7:= v13 @kind object;
  #L3d3f8a.  v8:= v15;
  #L3d3f8c.  v9:= v16;
  #L3d3f90.  v10:= v14 @kind object;
  #L3d3f92.  v11:= v17 @kind object;
  #L3d3f96.  call temp:= `decode`(v6, v7, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.decode:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3d3f9c.  v0:= temp @kind object;
  #L3d3f9e.  v4:= v0 @kind object;
  #L3d3fa0.  goto L3d3fac;
  #L3d3fa2.  v0:= Exception @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L3d3fa4.  v6:= v0 @kind object;
  #L3d3fa6.  call temp:= `add`(v2, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d3fac.  if v4 == 0 then goto L3d3fb2;
  #L3d3fb0.  goto L3d3fb8;
  #L3d3fb2.  v5:= v5 + 1;
  #L3d3fb6.  goto L3d3f72;
  #L3d3fb8.  if v4 == 0 then goto L3d3fbe;
  #L3d3fbc.  return v4 @kind object;
  #L3d3fbe.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3d3fc2.  v3:= v1.`com.bumptech.glide.load.engine.LoadPath.d` @type ^`java.lang.String` @kind object;
  #L3d3fc6.  v4:= new `java.util.ArrayList`;
  #L3d3fca.  call `<init>`(v4, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d3fd0.  call `<init>`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3d3fd6.  throw v0;
  catch `com.bumptech.glide.load.engine.GlideException` @[L3d3f96..L3d3f9e] goto L3d3fa2;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.engine.LoadPath` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d3ff8.  v0:= v1.`com.bumptech.glide.load.engine.LoadPath.a` @type ^`java.lang.Class` @kind object;
  #L3d3ffc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `load`(`com.bumptech.glide.load.engine.LoadPath` v8 @kind this, `com.bumptech.glide.load.data.DataRewinder` v9 @kind object, `com.bumptech.glide.load.Options` v10 @kind object, `int` v11 , `int` v12 , `com.bumptech.glide.load.engine.DecodePath$a` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.load:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d3ef4.  v0:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d3ef8.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3d3efe.  v0:= temp @kind object;
  #L3d3f00.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d3f06.  v0:= temp @kind object;
  #L3d3f08.  v0:= (`java.util.List`) v0 @kind object;
  #L3d3f0c.  v1:= v8 @kind object;
  #L3d3f0e.  v2:= v9 @kind object;
  #L3d3f10.  v3:= v10 @kind object;
  #L3d3f12.  v4:= v11;
  #L3d3f14.  v5:= v12;
  #L3d3f16.  v6:= v13 @kind object;
  #L3d3f18.  v7:= v0 @kind object;
  #L3d3f1a.  call temp:= `a`(v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d3f20.  v9:= temp @kind object;
  #L3d3f22.  v10:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d3f26.  call temp:= `release`(v10, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d3f2c.  return v9 @kind object;
  #L3d3f2e.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d3f30.  v10:= v8.`com.bumptech.glide.load.engine.LoadPath.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d3f34.  call temp:= `release`(v10, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d3f3a.  throw v9;
  catch `java.lang.Throwable` @[L3d3f1a..L3d3f22] goto L3d3f2e;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.LoadPath` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d4010.  v0:= new `java.lang.StringBuilder`;
  #L3d4014.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d401a.  v1:= "LoadPath{decodePaths=" @kind object;
  #L3d401e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4024.  v1:= v2.`com.bumptech.glide.load.engine.LoadPath.c` @type ^`java.util.List` @kind object;
  #L3d4028.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3d402e.  v1:= temp @kind object;
  #L3d4030.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3d4036.  v1:= temp @kind object;
  #L3d4038.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d403e.  v1:= 125I;
  #L3d4042.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4048.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d404e.  v0:= temp @kind object;
  #L3d4050.  return v0 @kind object;
}
