record `com.bumptech.glide.load.engine.prefill.a` @kind class @AccessFlag FINAL extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.engine.prefill.a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.MemoryCache` `com.bumptech.glide.load.engine.prefill.a.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.prefill.b` `com.bumptech.glide.load.engine.prefill.a.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.prefill.a$a` `com.bumptech.glide.load.engine.prefill.a.d` @AccessFlag PRIVATE_FINAL;
  `java.util.Set` `com.bumptech.glide.load.engine.prefill.a.e` @AccessFlag PRIVATE_FINAL;
  `android.os.Handler` `com.bumptech.glide.load.engine.prefill.a.f` @AccessFlag PRIVATE_FINAL;
  `long` `com.bumptech.glide.load.engine.prefill.a.g` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.prefill.a.h` @AccessFlag PRIVATE;
}
global `com.bumptech.glide.load.engine.prefill.a$a` `@@com.bumptech.glide.load.engine.prefill.a.i` @AccessFlag PRIVATE_STATIC_FINAL;
global `long` `@@com.bumptech.glide.load.engine.prefill.a.j` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3d9160.  v0:= new `com.bumptech.glide.load.engine.prefill.a$a`;
  #L3d9164.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.<init>:()V` @kind direct;
  #L3d916a.  `@@com.bumptech.glide.load.engine.prefill.a.i` @type ^`com.bumptech.glide.load.engine.prefill.a$a` := v0 @kind object;
  #L3d916e.  v0:= `@@java.util.concurrent.TimeUnit.SECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L3d9172.  v1:= 1L;
  #L3d9176.  call temp:= `toMillis`(v0, v1) @signature `Ljava/util/concurrent/TimeUnit;.toMillis:(J)J` @kind virtual;
  #L3d917c.  v0:= temp @kind wide;
  #L3d917e.  `@@com.bumptech.glide.load.engine.prefill.a.j` @type ^`long` := v0 @kind wide;
  #L3d9182.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.a` v6 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v7 @kind object, `com.bumptech.glide.load.engine.cache.MemoryCache` v8 @kind object, `com.bumptech.glide.load.engine.prefill.b` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d9194.  v4:= `@@com.bumptech.glide.load.engine.prefill.a.i` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3d9198.  v5:= new `android.os.Handler`;
  #L3d919c.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3d91a2.  v0:= temp @kind object;
  #L3d91a4.  call `<init>`(v5, v0) @signature `Landroid/os/Handler;.<init>:(Landroid/os/Looper;)V` @kind direct;
  #L3d91aa.  v0:= v6 @kind object;
  #L3d91ac.  v1:= v7 @kind object;
  #L3d91ae.  v2:= v8 @kind object;
  #L3d91b0.  v3:= v9 @kind object;
  #L3d91b2.  call `<init>`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;Lcom/bumptech/glide/load/engine/prefill/a$a;Landroid/os/Handler;)V` @kind direct;
  #L3d91b8.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.prefill.a` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `com.bumptech.glide.load.engine.cache.MemoryCache` v4 @kind object, `com.bumptech.glide.load.engine.prefill.b` v5 @kind object, `com.bumptech.glide.load.engine.prefill.a$a` v6 @kind object, `android.os.Handler` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/engine/cache/MemoryCache;Lcom/bumptech/glide/load/engine/prefill/b;Lcom/bumptech/glide/load/engine/prefill/a$a;Landroid/os/Handler;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d91cc.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d91d2.  v0:= new `java.util.HashSet`;
  #L3d91d6.  call `<init>`(v0) @signature `Ljava/util/HashSet;.<init>:()V` @kind direct;
  #L3d91dc.  v2.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` := v0 @kind object;
  #L3d91e0.  v0:= 40L;
  #L3d91e4.  v2.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` := v0 @kind wide;
  #L3d91e8.  v2.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v3 @kind object;
  #L3d91ec.  v2.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` := v4 @kind object;
  #L3d91f0.  v2.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` := v5 @kind object;
  #L3d91f4.  v2.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` := v6 @kind object;
  #L3d91f8.  v2.`com.bumptech.glide.load.engine.prefill.a.f` @type ^`android.os.Handler` := v7 @kind object;
  #L3d91fc.  return @kind void;
}
procedure `long` `c`(`com.bumptech.glide.load.engine.prefill.a` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.c:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d9104.  v0:= v4.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d9108.  call temp:= `getMaxSize`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getMaxSize:()J` @kind interface;
  #L3d910e.  v0:= temp @kind wide;
  #L3d9110.  v2:= v4.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d9114.  call temp:= `getCurrentSize`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.getCurrentSize:()J` @kind interface;
  #L3d911a.  v2:= temp @kind wide;
  #L3d911c.  v0:= v0 - v2 @kind long;
  #L3d911e.  return v0 @kind wide;
}
procedure `long` `d`(`com.bumptech.glide.load.engine.prefill.a` v6 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.d:()J` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d9130.  v0:= v6.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` @kind wide;
  #L3d9134.  v2:= 4L;
  #L3d9138.  v2:= v2 * v0 @kind long;
  #L3d913c.  v4:= `@@com.bumptech.glide.load.engine.prefill.a.j` @type ^`long` @kind wide;
  #L3d9140.  call temp:= `min`(v2, v4) @signature `Ljava/lang/Math;.min:(JJ)J` @kind static;
  #L3d9146.  v2:= temp @kind wide;
  #L3d9148.  v6.`com.bumptech.glide.load.engine.prefill.a.g` @type ^`long` := v2 @kind wide;
  #L3d914c.  return v0 @kind wide;
}
procedure `boolean` `e`(`com.bumptech.glide.load.engine.prefill.a` v3 @kind this, `long` v4 ) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.e:(J)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d90d0.  v0:= v3.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3d90d4.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.a:()J` @kind virtual;
  #L3d90da.  v0:= temp @kind wide;
  #L3d90dc.  v0:= v0 - v4 @kind long;
  #L3d90de.  v4:= 32L;
  #L3d90e2.  v2:= lcmp(v0, v4);
  #L3d90e6.  if v2 < 0 then goto L3d90ee;
  #L3d90ea.  v4:= 1I;
  #L3d90ec.  goto L3d90f0;
  #L3d90ee.  v4:= 0I;
  #L3d90f0.  return v4;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.prefill.a` v10 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.a:()Z` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3d8f40.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.d` @type ^`com.bumptech.glide.load.engine.prefill.a$a` @kind object;
  #L3d8f44.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a$a;.a:()J` @kind virtual;
  #L3d8f4a.  v0:= temp @kind wide;
  #L3d8f4c.  v2:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3d8f50.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.a:()Z` @kind virtual;
  #L3d8f56.  v2:= temp;
  #L3d8f58.  if v2 != 0 then goto L3d90a0;
  #L3d8f5c.  call temp:= `e`(v10, v0) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.e:(J)Z` @kind direct;
  #L3d8f62.  v2:= temp;
  #L3d8f64.  if v2 != 0 then goto L3d90a0;
  #L3d8f68.  v2:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3d8f6c.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.b:()Lcom/bumptech/glide/load/engine/prefill/PreFillType;` @kind virtual;
  #L3d8f72.  v2:= temp @kind object;
  #L3d8f74.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` @kind object;
  #L3d8f78.  call temp:= `contains`(v3, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3d8f7e.  v3:= temp;
  #L3d8f80.  if v3 != 0 then goto L3d8fb4;
  #L3d8f84.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.e` @type ^`java.util.Set` @kind object;
  #L3d8f88.  call temp:= `add`(v3, v2) @signature `Ljava/util/Set;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d8f8e.  v3:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3d8f92.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3d8f98.  v4:= temp;
  #L3d8f9a.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3d8fa0.  v5:= temp;
  #L3d8fa2.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d8fa8.  v6:= temp @kind object;
  #L3d8faa.  call temp:= `getDirty`(v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.getDirty:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3d8fb0.  v3:= temp @kind object;
  #L3d8fb2.  goto L3d8fd4;
  #L3d8fb4.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3d8fba.  v3:= temp;
  #L3d8fbc.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3d8fc2.  v4:= temp;
  #L3d8fc4.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d8fca.  v5:= temp @kind object;
  #L3d8fcc.  call temp:= `createBitmap`(v3, v4, v5) @signature `Landroid/graphics/Bitmap;.createBitmap:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind static;
  #L3d8fd2.  v3:= temp @kind object;
  #L3d8fd4.  call temp:= `getBitmapByteSize`(v3) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3d8fda.  v4:= temp;
  #L3d8fdc.  call temp:= `c`(v10) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.c:()J` @kind direct;
  #L3d8fe2.  v5:= temp @kind wide;
  #L3d8fe4.  v7:= (`long`) v4 @kind i2l;
  #L3d8fe6.  v9:= lcmp(v5, v7);
  #L3d8fea.  if v9 < 0 then goto L3d9010;
  #L3d8fee.  v5:= new `com.bumptech.glide.load.engine.prefill.a$b`;
  #L3d8ff2.  call `<init>`(v5) @signature `Lcom/bumptech/glide/load/engine/prefill/a$b;.<init>:()V` @kind direct;
  #L3d8ff8.  v6:= v10.`com.bumptech.glide.load.engine.prefill.a.b` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache` @kind object;
  #L3d8ffc.  v7:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3d9000.  call temp:= `obtain`(v3, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @kind static;
  #L3d9006.  v3:= temp @kind object;
  #L3d9008.  call temp:= `put`(v6, v5, v3) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3d900e.  goto L3d901a;
  #L3d9010.  v5:= v10.`com.bumptech.glide.load.engine.prefill.a.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3d9014.  call `put`(v5, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3d901a.  v3:= 3I;
  #L3d901c.  v5:= "PreFillRunner" @kind object;
  #L3d9020.  call temp:= `isLoggable`(v5, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d9026.  v3:= temp;
  #L3d9028.  if v3 == 0 then goto L3d8f4c;
  #L3d902c.  v3:= new `java.lang.StringBuilder`;
  #L3d9030.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d9036.  v6:= "allocated [" @kind object;
  #L3d903a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9040.  call temp:= `d`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.d:()I` @kind virtual;
  #L3d9046.  v6:= temp;
  #L3d9048.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d904e.  v6:= "x" @kind object;
  #L3d9052.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9058.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.b:()I` @kind virtual;
  #L3d905e.  v6:= temp;
  #L3d9060.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9066.  v6:= "] " @kind object;
  #L3d906a.  call temp:= `append`(v3, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9070.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/engine/prefill/PreFillType;.a:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d9076.  v2:= temp @kind object;
  #L3d9078.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d907e.  v2:= " size: " @kind object;
  #L3d9082.  call temp:= `append`(v3, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d9088.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d908e.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d9094.  v2:= temp @kind object;
  #L3d9096.  call temp:= `d`(v5, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d909c.  goto L3d8f4c;
  #L3d90a0.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.h` @type ^`boolean` @kind boolean;
  #L3d90a4.  if v0 != 0 then goto L3d90bc;
  #L3d90a8.  v0:= v10.`com.bumptech.glide.load.engine.prefill.a.c` @type ^`com.bumptech.glide.load.engine.prefill.b` @kind object;
  #L3d90ac.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/prefill/b;.a:()Z` @kind virtual;
  #L3d90b2.  v0:= temp;
  #L3d90b4.  if v0 != 0 then goto L3d90bc;
  #L3d90b8.  v0:= 1I;
  #L3d90ba.  goto L3d90be;
  #L3d90bc.  v0:= 0I;
  #L3d90be.  return v0;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.prefill.a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.b:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9210.  v0:= 1I;
  #L3d9212.  v1.`com.bumptech.glide.load.engine.prefill.a.h` @type ^`boolean` := v0 @kind boolean;
  #L3d9216.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.prefill.a` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d9228.  call temp:= `a`(v3) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.a:()Z` @kind virtual;
  #L3d922e.  v0:= temp;
  #L3d9230.  if v0 == 0 then goto L3d9246;
  #L3d9234.  v0:= v3.`com.bumptech.glide.load.engine.prefill.a.f` @type ^`android.os.Handler` @kind object;
  #L3d9238.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/prefill/a;.d:()J` @kind direct;
  #L3d923e.  v1:= temp @kind wide;
  #L3d9240.  call temp:= `postDelayed`(v0, v3, v1) @signature `Landroid/os/Handler;.postDelayed:(Ljava/lang/Runnable;J)Z` @kind virtual;
  #L3d9246.  return @kind void;
}
