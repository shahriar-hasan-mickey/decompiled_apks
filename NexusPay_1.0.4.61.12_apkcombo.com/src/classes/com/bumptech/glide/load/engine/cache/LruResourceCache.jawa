record `com.bumptech.glide.load.engine.cache.LruResourceCache` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.util.LruCache` @kind class, `com.bumptech.glide.load.engine.cache.MemoryCache` @kind interface {
  `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` `com.bumptech.glide.load.engine.cache.LruResourceCache.e` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `long` v1 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.<init>:(J)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d7d5c.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.<init>:(J)V` @kind direct;
  #L3d7d62.  return @kind void;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @AccessFlag PROTECTED {
    temp;

  #L3d7d10.  if v1 != 0 then goto L3d7d20;
  #L3d7d14.  v1:= 0I;
  #L3d7d16.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.getSize:(Ljava/lang/Object;)I` @kind super;
  #L3d7d1c.  v1:= temp;
  #L3d7d1e.  return v1;
  #L3d7d20.  call temp:= `getSize`(v1) @signature `Lcom/bumptech/glide/load/engine/Resource;.getSize:()I` @kind interface;
  #L3d7d26.  v1:= temp;
  #L3d7d28.  return v1;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Ljava/lang/Object;)I` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3d7d3c.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3d7d40.  call temp:= `getSize`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.getSize:(Lcom/bumptech/glide/load/engine/Resource;)I` @kind virtual;
  #L3d7d46.  v1:= temp;
  #L3d7d48.  return v1;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @AccessFlag PROTECTED {
    temp;

  #L3d7d74.  v1:= v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` @kind object;
  #L3d7d78.  if v1 == 0 then goto L3d7d86;
  #L3d7d7c.  if v2 == 0 then goto L3d7d86;
  #L3d7d80.  call `onResourceRemoved`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;.onResourceRemoved:(Lcom/bumptech/glide/load/engine/Resource;)V` @kind interface;
  #L3d7d86.  return @kind void;
}
procedure `void` `onItemEvicted`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Ljava/lang/Object;Ljava/lang/Object;)V` @AccessFlag PROTECTED_SYNTHETIC {
    temp;

  #L3d7d98.  v1:= (`com.bumptech.glide.load.Key`) v1 @kind object;
  #L3d7d9c.  v2:= (`com.bumptech.glide.load.engine.Resource`) v2 @kind object;
  #L3d7da0.  call `onItemEvicted`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.onItemEvicted:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)V` @kind virtual;
  #L3d7da6.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `put`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d7cd0.  call temp:= `put`(v0, v1, v2) @signature `Lcom/bumptech/glide/util/LruCache;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L3d7cd6.  v1:= temp @kind object;
  #L3d7cd8.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3d7cdc.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `remove`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.remove:(Lcom/bumptech/glide/load/Key;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d7cf0.  call temp:= `remove`(v0, v1) @signature `Lcom/bumptech/glide/util/LruCache;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind super;
  #L3d7cf6.  v1:= temp @kind object;
  #L3d7cf8.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3d7cfc.  return v1 @kind object;
}
procedure `void` `setResourceRemovedListener`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v0 @kind this, `com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.setResourceRemovedListener:(Lcom/bumptech/glide/load/engine/cache/MemoryCache$ResourceRemovedListener;)V` @AccessFlag PUBLIC {
    temp;

  #L3d7db8.  v0.`com.bumptech.glide.load.engine.cache.LruResourceCache.e` @type ^`com.bumptech.glide.load.engine.cache.MemoryCache$ResourceRemovedListener` := v1 @kind object;
  #L3d7dbc.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.cache.LruResourceCache` v4 @kind this, `int` v5 ) @signature `Lcom/bumptech/glide/load/engine/cache/LruResourceCache;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d7dd0.  v0:= 40I;
  #L3d7dd4.  if v5 < v0 then goto L3d7de0;
  #L3d7dd8.  call `clearMemory`(v4) @signature `Lcom/bumptech/glide/util/LruCache;.clearMemory:()V` @kind virtual;
  #L3d7dde.  goto L3d7e04;
  #L3d7de0.  v0:= 20I;
  #L3d7de4.  if v5 >= v0 then goto L3d7df0;
  #L3d7de8.  v0:= 15I;
  #L3d7dec.  if v5 != v0 then goto L3d7e04;
  #L3d7df0.  call temp:= `getMaxSize`(v4) @signature `Lcom/bumptech/glide/util/LruCache;.getMaxSize:()J` @kind virtual;
  #L3d7df6.  v0:= temp @kind wide;
  #L3d7df8.  v2:= 2L;
  #L3d7dfc.  v0:= v0 / v2 @kind long;
  #L3d7dfe.  call `trimToSize`(v4, v0) @signature `Lcom/bumptech/glide/util/LruCache;.trimToSize:(J)V` @kind virtual;
  #L3d7e04.  return @kind void;
}
