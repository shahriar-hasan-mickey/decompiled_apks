record `com.bumptech.glide.load.engine.Engine$b$a` @kind class @AccessFlag  extends `com.bumptech.glide.util.pool.FactoryPools$Factory` @kind interface {
  `com.bumptech.glide.load.engine.Engine$b` `com.bumptech.glide.load.engine.Engine$b$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine$b$a` v0 @kind this, `com.bumptech.glide.load.engine.Engine$b` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine$b$a;.<init>:(Lcom/bumptech/glide/load/engine/Engine$b;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d1de0.  v0.`com.bumptech.glide.load.engine.Engine$b$a.a` @type ^`com.bumptech.glide.load.engine.Engine$b` := v1 @kind object;
  #L3d1de4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1dea.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h` `a`(`com.bumptech.glide.load.engine.Engine$b$a` v9 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$b$a;.a:()Lcom/bumptech/glide/load/engine/h;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3d1d84.  v8:= new `com.bumptech.glide.load.engine.h`;
  #L3d1d88.  v0:= v9.`com.bumptech.glide.load.engine.Engine$b$a.a` @type ^`com.bumptech.glide.load.engine.Engine$b` @kind object;
  #L3d1d8c.  v1:= v0.`com.bumptech.glide.load.engine.Engine$b.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1d90.  v2:= v0.`com.bumptech.glide.load.engine.Engine$b.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1d94.  v3:= v0.`com.bumptech.glide.load.engine.Engine$b.c` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1d98.  v4:= v0.`com.bumptech.glide.load.engine.Engine$b.d` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1d9c.  v5:= v0.`com.bumptech.glide.load.engine.Engine$b.e` @type ^`com.bumptech.glide.load.engine.i` @kind object;
  #L3d1da0.  v6:= v0.`com.bumptech.glide.load.engine.Engine$b.f` @type ^`com.bumptech.glide.load.engine.l$a` @kind object;
  #L3d1da4.  v7:= v0.`com.bumptech.glide.load.engine.Engine$b.g` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d1da8.  v0:= v8 @kind object;
  #L3d1daa.  call `<init>`(v0, v1, v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/h;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/i;Lcom/bumptech/glide/load/engine/l$a;Landroidx/core/util/Pools$Pool;)V` @kind direct;
  #L3d1db0.  return v8 @kind object;
}
procedure `java.lang.Object` `create`(`com.bumptech.glide.load.engine.Engine$b$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$b$a;.create:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3d1dc4.  call temp:= `a`(v1) @signature `Lcom/bumptech/glide/load/engine/Engine$b$a;.a:()Lcom/bumptech/glide/load/engine/h;` @kind virtual;
  #L3d1dca.  v0:= temp @kind object;
  #L3d1dcc.  return v0 @kind object;
}
