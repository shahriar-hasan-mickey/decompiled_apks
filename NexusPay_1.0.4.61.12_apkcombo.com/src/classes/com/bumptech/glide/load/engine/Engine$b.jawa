record `com.bumptech.glide.load.engine.Engine$b` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.load.engine.Engine$b.a` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.load.engine.Engine$b.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.load.engine.Engine$b.c` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.executor.GlideExecutor` `com.bumptech.glide.load.engine.Engine$b.d` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.i` `com.bumptech.glide.load.engine.Engine$b.e` @AccessFlag FINAL;
  `com.bumptech.glide.load.engine.l$a` `com.bumptech.glide.load.engine.Engine$b.f` @AccessFlag FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.Engine$b.g` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine$b` v2 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor` v3 @kind object, `com.bumptech.glide.load.engine.executor.GlideExecutor` v4 @kind object, `com.bumptech.glide.load.engine.executor.GlideExecutor` v5 @kind object, `com.bumptech.glide.load.engine.executor.GlideExecutor` v6 @kind object, `com.bumptech.glide.load.engine.i` v7 @kind object, `com.bumptech.glide.load.engine.l$a` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine$b;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/executor/GlideExecutor;Lcom/bumptech/glide/load/engine/i;Lcom/bumptech/glide/load/engine/l$a;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d1e3c.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1e42.  v0:= new `com.bumptech.glide.load.engine.Engine$b$a`;
  #L3d1e46.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/Engine$b$a;.<init>:(Lcom/bumptech/glide/load/engine/Engine$b;)V` @kind direct;
  #L3d1e4c.  v1:= 150I;
  #L3d1e50.  call temp:= `threadSafe`(v1, v0) @signature `Lcom/bumptech/glide/util/pool/FactoryPools;.threadSafe:(ILcom/bumptech/glide/util/pool/FactoryPools$Factory;)Landroidx/core/util/Pools$Pool;` @kind static;
  #L3d1e56.  v0:= temp @kind object;
  #L3d1e58.  v2.`com.bumptech.glide.load.engine.Engine$b.g` @type ^`androidx.core.util.Pools$Pool` := v0 @kind object;
  #L3d1e5c.  v2.`com.bumptech.glide.load.engine.Engine$b.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v3 @kind object;
  #L3d1e60.  v2.`com.bumptech.glide.load.engine.Engine$b.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v4 @kind object;
  #L3d1e64.  v2.`com.bumptech.glide.load.engine.Engine$b.c` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v5 @kind object;
  #L3d1e68.  v2.`com.bumptech.glide.load.engine.Engine$b.d` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` := v6 @kind object;
  #L3d1e6c.  v2.`com.bumptech.glide.load.engine.Engine$b.e` @type ^`com.bumptech.glide.load.engine.i` := v7 @kind object;
  #L3d1e70.  v2.`com.bumptech.glide.load.engine.Engine$b.f` @type ^`com.bumptech.glide.load.engine.l$a` := v8 @kind object;
  #L3d1e74.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.h` `a`(`com.bumptech.glide.load.engine.Engine$b` v7 @kind this, `com.bumptech.glide.load.Key` v8 @kind object, `boolean` v9 , `boolean` v10 , `boolean` v11 , `boolean` v12 ) @signature `Lcom/bumptech/glide/load/engine/Engine$b;.a:(Lcom/bumptech/glide/load/Key;ZZZZ)Lcom/bumptech/glide/load/engine/h;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d1dfc.  v0:= v7.`com.bumptech.glide.load.engine.Engine$b.g` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d1e00.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3d1e06.  v0:= temp @kind object;
  #L3d1e08.  v0:= (`com.bumptech.glide.load.engine.h`) v0 @kind object;
  #L3d1e0c.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d1e12.  v0:= temp @kind object;
  #L3d1e14.  v0:= (`com.bumptech.glide.load.engine.h`) v0 @kind object;
  #L3d1e18.  v1:= v0 @kind object;
  #L3d1e1a.  v2:= v8 @kind object;
  #L3d1e1c.  v3:= v9;
  #L3d1e1e.  v4:= v10;
  #L3d1e20.  v5:= v11;
  #L3d1e22.  v6:= v12;
  #L3d1e24.  call temp:= `i`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/h;.i:(Lcom/bumptech/glide/load/Key;ZZZZ)Lcom/bumptech/glide/load/engine/h;` @kind virtual;
  #L3d1e2a.  return v0 @kind object;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.Engine$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$b;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L3d1e88.  v0:= v1.`com.bumptech.glide.load.engine.Engine$b.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1e8c.  call `shutdownAndAwaitTermination`(v0) @signature `Lcom/bumptech/glide/util/Executors;.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;)V` @kind static;
  #L3d1e92.  v0:= v1.`com.bumptech.glide.load.engine.Engine$b.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1e96.  call `shutdownAndAwaitTermination`(v0) @signature `Lcom/bumptech/glide/util/Executors;.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;)V` @kind static;
  #L3d1e9c.  v0:= v1.`com.bumptech.glide.load.engine.Engine$b.c` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1ea0.  call `shutdownAndAwaitTermination`(v0) @signature `Lcom/bumptech/glide/util/Executors;.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;)V` @kind static;
  #L3d1ea6.  v0:= v1.`com.bumptech.glide.load.engine.Engine$b.d` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor` @kind object;
  #L3d1eaa.  call `shutdownAndAwaitTermination`(v0) @signature `Lcom/bumptech/glide/util/Executors;.shutdownAndAwaitTermination:(Ljava/util/concurrent/ExecutorService;)V` @kind static;
  #L3d1eb0.  return @kind void;
}
