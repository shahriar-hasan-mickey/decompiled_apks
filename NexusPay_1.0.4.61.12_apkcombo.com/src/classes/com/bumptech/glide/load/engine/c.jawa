record `com.bumptech.glide.load.engine.c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.DataFetcherGenerator` @kind interface, `com.bumptech.glide.load.data.DataFetcher$DataCallback` @kind interface {
  `java.util.List` `com.bumptech.glide.load.engine.c.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.c.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` `com.bumptech.glide.load.engine.c.c` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.c.d` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.c.e` @AccessFlag PRIVATE;
  `java.util.List` `com.bumptech.glide.load.engine.c.f` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.c.g` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.model.ModelLoader$LoadData` `com.bumptech.glide.load.engine.c.h` @AccessFlag PRIVATE_VOLATILE;
  `java.io.File` `com.bumptech.glide.load.engine.c.i` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.c` v1 @kind this, `com.bumptech.glide.load.engine.f` v2 @kind object, `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cfb3c.  call temp:= `c`(v2) @signature `Lcom/bumptech/glide/load/engine/f;.c:()Ljava/util/List;` @kind virtual;
  #L3cfb42.  v0:= temp @kind object;
  #L3cfb44.  call `<init>`(v1, v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @kind direct;
  #L3cfb4a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.c` v1 @kind this, `java.util.List` v2 @kind object, `com.bumptech.glide.load.engine.f` v3 @kind object, `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3cfb5c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cfb62.  v0:= -1I;
  #L3cfb64.  v1.`com.bumptech.glide.load.engine.c.d` @type ^`int` := v0;
  #L3cfb68.  v1.`com.bumptech.glide.load.engine.c.a` @type ^`java.util.List` := v2 @kind object;
  #L3cfb6c.  v1.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` := v3 @kind object;
  #L3cfb70.  v1.`com.bumptech.glide.load.engine.c.c` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` := v4 @kind object;
  #L3cfb74.  return @kind void;
}
procedure `boolean` `b`(`com.bumptech.glide.load.engine.c` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.b:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3cf9b8.  v0:= v2.`com.bumptech.glide.load.engine.c.g` @type ^`int`;
  #L3cf9bc.  v1:= v2.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` @kind object;
  #L3cf9c0.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3cf9c6.  v1:= temp;
  #L3cf9c8.  if v0 >= v1 then goto L3cf9d0;
  #L3cf9cc.  v0:= 1I;
  #L3cf9ce.  goto L3cf9d2;
  #L3cf9d0.  v0:= 0I;
  #L3cf9d2.  return v0;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.c` v7 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3cf9e4.  v0:= v7.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` @kind object;
  #L3cf9e8.  v1:= 0I;
  #L3cf9ea.  v2:= 1I;
  #L3cf9ec.  if v0 == 0 then goto L3cfaac;
  #L3cf9f0.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/load/engine/c;.b:()Z` @kind direct;
  #L3cf9f6.  v0:= temp;
  #L3cf9f8.  if v0 != 0 then goto L3cf9fe;
  #L3cf9fc.  goto L3cfaac;
  #L3cf9fe.  v0:= 0I;
  #L3cfa00.  v7.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v0 @kind object;
  #L3cfa04.  if v1 != 0 then goto L3cfaaa;
  #L3cfa08.  call temp:= `b`(v7) @signature `Lcom/bumptech/glide/load/engine/c;.b:()Z` @kind direct;
  #L3cfa0e.  v0:= temp;
  #L3cfa10.  if v0 == 0 then goto L3cfaaa;
  #L3cfa14.  v0:= v7.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` @kind object;
  #L3cfa18.  v3:= v7.`com.bumptech.glide.load.engine.c.g` @type ^`int`;
  #L3cfa1c.  v4:= v3 + 1;
  #L3cfa20.  v7.`com.bumptech.glide.load.engine.c.g` @type ^`int` := v4;
  #L3cfa24.  call temp:= `get`(v0, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cfa2a.  v0:= temp @kind object;
  #L3cfa2c.  v0:= (`com.bumptech.glide.load.model.ModelLoader`) v0 @kind object;
  #L3cfa30.  v3:= v7.`com.bumptech.glide.load.engine.c.i` @type ^`java.io.File` @kind object;
  #L3cfa34.  v4:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfa38.  call temp:= `s`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.s:()I` @kind virtual;
  #L3cfa3e.  v4:= temp;
  #L3cfa40.  v5:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfa44.  call temp:= `f`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.f:()I` @kind virtual;
  #L3cfa4a.  v5:= temp;
  #L3cfa4c.  v6:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfa50.  call temp:= `k`(v6) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3cfa56.  v6:= temp @kind object;
  #L3cfa58.  call temp:= `buildLoadData`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3cfa5e.  v0:= temp @kind object;
  #L3cfa60.  v7.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v0 @kind object;
  #L3cfa64.  v0:= v7.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfa68.  if v0 == 0 then goto L3cfa04;
  #L3cfa6c.  v0:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfa70.  v3:= v7.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfa74.  v3:= v3.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3cfa78.  call temp:= `getDataClass`(v3) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L3cfa7e.  v3:= temp @kind object;
  #L3cfa80.  call temp:= `t`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L3cfa86.  v0:= temp;
  #L3cfa88.  if v0 == 0 then goto L3cfa04;
  #L3cfa8c.  v0:= v7.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfa90.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3cfa94.  v1:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfa98.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3cfa9e.  v1:= temp @kind object;
  #L3cfaa0.  call `loadData`(v0, v1, v7) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.loadData:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V` @kind interface;
  #L3cfaa6.  v1:= 1I;
  #L3cfaa8.  goto L3cfa04;
  #L3cfaaa.  return v1;
  #L3cfaac.  v0:= v7.`com.bumptech.glide.load.engine.c.d` @type ^`int`;
  #L3cfab0.  v0:= v0 + v2 @kind int;
  #L3cfab2.  v7.`com.bumptech.glide.load.engine.c.d` @type ^`int` := v0;
  #L3cfab6.  v2:= v7.`com.bumptech.glide.load.engine.c.a` @type ^`java.util.List` @kind object;
  #L3cfaba.  call temp:= `size`(v2) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3cfac0.  v2:= temp;
  #L3cfac2.  if v0 < v2 then goto L3cfac8;
  #L3cfac6.  return v1;
  #L3cfac8.  v0:= v7.`com.bumptech.glide.load.engine.c.a` @type ^`java.util.List` @kind object;
  #L3cfacc.  v2:= v7.`com.bumptech.glide.load.engine.c.d` @type ^`int`;
  #L3cfad0.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3cfad6.  v0:= temp @kind object;
  #L3cfad8.  v0:= (`com.bumptech.glide.load.Key`) v0 @kind object;
  #L3cfadc.  v2:= new `com.bumptech.glide.load.engine.d`;
  #L3cfae0.  v3:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfae4.  call temp:= `o`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L3cfaea.  v3:= temp @kind object;
  #L3cfaec.  call `<init>`(v2, v0, v3) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;)V` @kind direct;
  #L3cfaf2.  v3:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfaf6.  call temp:= `d`(v3) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind virtual;
  #L3cfafc.  v3:= temp @kind object;
  #L3cfafe.  call temp:= `get`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.get:(Lcom/bumptech/glide/load/Key;)Ljava/io/File;` @kind interface;
  #L3cfb04.  v2:= temp @kind object;
  #L3cfb06.  v7.`com.bumptech.glide.load.engine.c.i` @type ^`java.io.File` := v2 @kind object;
  #L3cfb0a.  if v2 == 0 then goto L3cf9e4;
  #L3cfb0e.  v7.`com.bumptech.glide.load.engine.c.e` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3cfb12.  v0:= v7.`com.bumptech.glide.load.engine.c.b` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3cfb16.  call temp:= `j`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/f;.j:(Ljava/io/File;)Ljava/util/List;` @kind virtual;
  #L3cfb1c.  v0:= temp @kind object;
  #L3cfb1e.  v7.`com.bumptech.glide.load.engine.c.f` @type ^`java.util.List` := v0 @kind object;
  #L3cfb22.  v7.`com.bumptech.glide.load.engine.c.g` @type ^`int` := v1;
  #L3cfb26.  goto L3cf9e4;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/c;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cfb88.  v0:= v1.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfb8c.  if v0 == 0 then goto L3cfb9a;
  #L3cfb90.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3cfb94.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cancel:()V` @kind interface;
  #L3cfb9a.  return @kind void;
}
procedure `void` `onDataReady`(`com.bumptech.glide.load.engine.c` v6 @kind this, `java.lang.Object` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.onDataReady:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3cfbac.  v0:= v6.`com.bumptech.glide.load.engine.c.c` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3cfbb0.  v1:= v6.`com.bumptech.glide.load.engine.c.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfbb4.  v2:= v6.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfbb8.  v3:= v2.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3cfbbc.  v4:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3cfbc0.  v5:= v6.`com.bumptech.glide.load.engine.c.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfbc4.  v2:= v7 @kind object;
  #L3cfbc6.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L3cfbcc.  return @kind void;
}
procedure `void` `onLoadFailed`(`com.bumptech.glide.load.engine.c` v4 @kind this, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/c;.onLoadFailed:(Ljava/lang/Exception;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3cfbe0.  v0:= v4.`com.bumptech.glide.load.engine.c.c` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3cfbe4.  v1:= v4.`com.bumptech.glide.load.engine.c.e` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfbe8.  v2:= v4.`com.bumptech.glide.load.engine.c.h` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3cfbec.  v2:= v2.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3cfbf0.  v3:= `@@com.bumptech.glide.load.DataSource.DATA_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3cfbf4.  call `onDataFetcherFailed`(v0, v1, v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L3cfbfa.  return @kind void;
}
