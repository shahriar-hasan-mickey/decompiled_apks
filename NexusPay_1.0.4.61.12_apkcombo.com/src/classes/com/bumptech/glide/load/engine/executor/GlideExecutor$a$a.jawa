record `com.bumptech.glide.load.engine.executor.GlideExecutor$a$a` @kind class @AccessFlag  extends `java.lang.Thread` @kind class {
  `com.bumptech.glide.load.engine.executor.GlideExecutor$a` `com.bumptech.glide.load.engine.executor.GlideExecutor$a$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.executor.GlideExecutor$a$a` v0 @kind this, `com.bumptech.glide.load.engine.executor.GlideExecutor$a` v1 @kind object, `java.lang.Runnable` v2 @kind object, `java.lang.String` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$a$a;.<init>:(Lcom/bumptech/glide/load/engine/executor/GlideExecutor$a;Ljava/lang/Runnable;Ljava/lang/String;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d86d0.  v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$a$a.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$a` := v1 @kind object;
  #L3d86d4.  call `<init>`(v0, v2, v3) @signature `Ljava/lang/Thread;.<init>:(Ljava/lang/Runnable;Ljava/lang/String;)V` @kind direct;
  #L3d86da.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.executor.GlideExecutor$a$a` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$a$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d86ec.  v0:= 9I;
  #L3d86f0.  call `setThreadPriority`(v0) @signature `Landroid/os/Process;.setThreadPriority:(I)V` @kind static;
  #L3d86f6.  v0:= v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$a$a.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$a` @kind object;
  #L3d86fa.  v0:= v0.`com.bumptech.glide.load.engine.executor.GlideExecutor$a.c` @type ^`boolean` @kind boolean;
  #L3d86fe.  if v0 == 0 then goto L3d872a;
  #L3d8702.  v0:= new `android.os.StrictMode$ThreadPolicy$Builder`;
  #L3d8706.  call `<init>`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.<init>:()V` @kind direct;
  #L3d870c.  call temp:= `detectNetwork`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.detectNetwork:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L3d8712.  v0:= temp @kind object;
  #L3d8714.  call temp:= `penaltyDeath`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.penaltyDeath:()Landroid/os/StrictMode$ThreadPolicy$Builder;` @kind virtual;
  #L3d871a.  v0:= temp @kind object;
  #L3d871c.  call temp:= `build`(v0) @signature `Landroid/os/StrictMode$ThreadPolicy$Builder;.build:()Landroid/os/StrictMode$ThreadPolicy;` @kind virtual;
  #L3d8722.  v0:= temp @kind object;
  #L3d8724.  call `setThreadPolicy`(v0) @signature `Landroid/os/StrictMode;.setThreadPolicy:(Landroid/os/StrictMode$ThreadPolicy;)V` @kind static;
  #L3d872a.  call `run`(v2) @signature `Ljava/lang/Thread;.run:()V` @kind super;
  #L3d8730.  goto L3d8742;
  #L3d8732.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d8734.  v1:= v2.`com.bumptech.glide.load.engine.executor.GlideExecutor$a$a.a` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$a` @kind object;
  #L3d8738.  v1:= v1.`com.bumptech.glide.load.engine.executor.GlideExecutor$a.b` @type ^`com.bumptech.glide.load.engine.executor.GlideExecutor$UncaughtThrowableStrategy` @kind object;
  #L3d873c.  call `handle`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/executor/GlideExecutor$UncaughtThrowableStrategy;.handle:(Ljava/lang/Throwable;)V` @kind interface;
  #L3d8742.  return @kind void;
  catch `java.lang.Throwable` @[L3d872a..L3d8730] goto L3d8732;
}
