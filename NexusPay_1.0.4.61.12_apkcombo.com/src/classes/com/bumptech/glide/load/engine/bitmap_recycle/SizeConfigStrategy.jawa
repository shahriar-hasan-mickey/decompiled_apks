record `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.bitmap_recycle.e` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.d` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @AccessFlag PRIVATE_FINAL;
}
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.e` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.f` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.g` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Bitmap$Config`[] `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.h` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d6f5c.  v0:= 2I;
  #L3d6f5e.  v0:= new `android.graphics.Bitmap$Config`[v0];
  #L3d6f62.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6f66.  v2:= 0I;
  #L3d6f68.  v0[v2]:= v1 @kind object;
  #L3d6f6c.  v1:= 0I;
  #L3d6f6e.  v3:= 1I;
  #L3d6f70.  v0[v3]:= v1 @kind object;
  #L3d6f74.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d6f78.  v4:= 26I;
  #L3d6f7c.  if v1 < v4 then goto L3d6f9a;
  #L3d6f80.  v1:= 3I;
  #L3d6f82.  call temp:= `copyOf`(v0, v1) @signature `Ljava/util/Arrays;.copyOf:([Ljava/lang/Object;I)[Ljava/lang/Object;` @kind static;
  #L3d6f88.  v0:= temp @kind object;
  #L3d6f8a.  v0:= (`android.graphics.Bitmap$Config`[]) v0 @kind object;
  #L3d6f8e.  v1:= length @variable v0;
  #L3d6f90.  v1:= v1 - v3 @kind int;
  #L3d6f92.  v4:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6f96.  v0[v1]:= v4 @kind object;
  #L3d6f9a.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.d` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L3d6f9e.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.e` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L3d6fa2.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L3d6fa6.  v1:= `@@android.graphics.Bitmap$Config.RGB_565` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6faa.  v0[v2]:= v1 @kind object;
  #L3d6fae.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.f` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L3d6fb2.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L3d6fb6.  v1:= `@@android.graphics.Bitmap$Config.ARGB_4444` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6fba.  v0[v2]:= v1 @kind object;
  #L3d6fbe.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.g` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L3d6fc2.  v0:= new `android.graphics.Bitmap$Config`[v3];
  #L3d6fc6.  v1:= `@@android.graphics.Bitmap$Config.ALPHA_8` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6fca.  v0[v2]:= v1 @kind object;
  #L3d6fce.  `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.h` @type ^`android.graphics.Bitmap$Config`[] := v0 @kind object;
  #L3d6fd2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d6fe4.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d6fea.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c`;
  #L3d6fee.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;.<init>:()V` @kind direct;
  #L3d6ff4.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` := v0 @kind object;
  #L3d6ff8.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d`;
  #L3d6ffc.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.<init>:()V` @kind direct;
  #L3d7002.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` := v0 @kind object;
  #L3d7006.  v0:= new `java.util.HashMap`;
  #L3d700a.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d7010.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @type ^`java.util.Map` := v0 @kind object;
  #L3d7014.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v3 @kind this, `java.lang.Integer` v4 @kind object, `android.graphics.Bitmap` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d7028.  call temp:= `getConfig`(v5) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d702e.  v0:= temp @kind object;
  #L3d7030.  call temp:= `e`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.e:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L3d7036.  v0:= temp @kind object;
  #L3d7038.  call temp:= `get`(v0, v4) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d703e.  v1:= temp @kind object;
  #L3d7040.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3d7044.  if v1 == 0 then goto L3d7078;
  #L3d7048.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d704e.  v5:= temp;
  #L3d7050.  v2:= 1I;
  #L3d7052.  if v5 != v2 then goto L3d705e;
  #L3d7056.  call temp:= `remove`(v0, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d705c.  goto L3d7076;
  #L3d705e.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d7064.  v5:= temp;
  #L3d7066.  v5:= v5 - v2 @kind int;
  #L3d7068.  call temp:= `valueOf`(v5) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d706e.  v5:= temp @kind object;
  #L3d7070.  call temp:= `put`(v0, v4, v5) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d7076.  return @kind void;
  #L3d7078.  v0:= new `java.lang.NullPointerException`;
  #L3d707c.  v1:= new `java.lang.StringBuilder`;
  #L3d7080.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d7086.  v2:= "Tried to decrement empty size, size: " @kind object;
  #L3d708a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7090.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d7096.  v4:= ", removed: " @kind object;
  #L3d709a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d70a0.  call temp:= `logBitmap`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @kind virtual;
  #L3d70a6.  v4:= temp @kind object;
  #L3d70a8.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d70ae.  v4:= ", this: " @kind object;
  #L3d70b2.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d70b8.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d70be.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d70c4.  v4:= temp @kind object;
  #L3d70c6.  call `<init>`(v0, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d70cc.  throw v0;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v8 @kind this, `int` v9 , `android.graphics.Bitmap$Config` v10 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.b:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d6ce0.  v0:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3d6ce4.  call temp:= `e`(v0, v9, v10) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;` @kind virtual;
  #L3d6cea.  v0:= temp @kind object;
  #L3d6cec.  call temp:= `d`(v10) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.d:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @kind static;
  #L3d6cf2.  v1:= temp @kind object;
  #L3d6cf4.  v2:= length @variable v1;
  #L3d6cf6.  v3:= 0I;
  #L3d6cf8.  if v3 >= v2 then goto L3d6d78;
  #L3d6cfc.  v4:= v1[v3] @kind object;
  #L3d6d00.  call temp:= `e`(v8, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.e:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L3d6d06.  v5:= temp @kind object;
  #L3d6d08.  call temp:= `valueOf`(v9) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d6d0e.  v6:= temp @kind object;
  #L3d6d10.  call temp:= `ceilingKey`(v5, v6) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d6d16.  v5:= temp @kind object;
  #L3d6d18.  v5:= (`java.lang.Integer`) v5 @kind object;
  #L3d6d1c.  if v5 == 0 then goto L3d6d72;
  #L3d6d20.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d6d26.  v6:= temp;
  #L3d6d28.  v7:= v9 * 8;
  #L3d6d2c.  if v6 > v7 then goto L3d6d72;
  #L3d6d30.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d6d36.  v1:= temp;
  #L3d6d38.  if v1 != v9 then goto L3d6d52;
  #L3d6d3c.  if v4 != 0 then goto L3d6d46;
  #L3d6d40.  if v10 == 0 then goto L3d6d78;
  #L3d6d44.  goto L3d6d52;
  #L3d6d46.  call temp:= `equals`(v4, v10) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d6d4c.  v9:= temp;
  #L3d6d4e.  if v9 != 0 then goto L3d6d78;
  #L3d6d52.  v9:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3d6d56.  call `c`(v9, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)V` @kind virtual;
  #L3d6d5c.  v9:= v8.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3d6d60.  call temp:= `intValue`(v5) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d6d66.  v10:= temp;
  #L3d6d68.  call temp:= `e`(v9, v10, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;` @kind virtual;
  #L3d6d6e.  v0:= temp @kind object;
  #L3d6d70.  goto L3d6d78;
  #L3d6d72.  v3:= v3 + 1;
  #L3d6d76.  goto L3d6cf8;
  #L3d6d78.  return v0 @kind object;
}
procedure `java.lang.String` `c`(`int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.c:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3d6da8.  v0:= new `java.lang.StringBuilder`;
  #L3d6dac.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6db2.  v1:= "[" @kind object;
  #L3d6db6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6dbc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6dc2.  v2:= "](" @kind object;
  #L3d6dc6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6dcc.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6dd2.  v2:= ")" @kind object;
  #L3d6dd6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6ddc.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6de2.  v2:= temp @kind object;
  #L3d6de4.  return v2 @kind object;
}
procedure `android.graphics.Bitmap$Config`[] `d`(`android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.d:(Landroid/graphics/Bitmap$Config;)[Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3d6c60.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d6c64.  v1:= 26I;
  #L3d6c68.  if v0 < v1 then goto L3d6c82;
  #L3d6c6c.  v0:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6c70.  call temp:= `equals`(v0, v3) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d6c76.  v0:= temp;
  #L3d6c78.  if v0 == 0 then goto L3d6c82;
  #L3d6c7c.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.e` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L3d6c80.  return v3 @kind object;
  #L3d6c82.  v0:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$a.a` @type ^`int`[] @kind object;
  #L3d6c86.  call temp:= `ordinal`(v3) @signature `Landroid/graphics/Bitmap$Config;.ordinal:()I` @kind virtual;
  #L3d6c8c.  v1:= temp;
  #L3d6c8e.  v0:= v0[v1];
  #L3d6c92.  v1:= 1I;
  #L3d6c94.  if v0 == v1 then goto L3d6cc8;
  #L3d6c98.  v2:= 2I;
  #L3d6c9a.  if v0 == v2 then goto L3d6cc2;
  #L3d6c9e.  v2:= 3I;
  #L3d6ca0.  if v0 == v2 then goto L3d6cbc;
  #L3d6ca4.  v2:= 4I;
  #L3d6ca6.  if v0 == v2 then goto L3d6cb6;
  #L3d6caa.  v0:= new `android.graphics.Bitmap$Config`[v1];
  #L3d6cae.  v1:= 0I;
  #L3d6cb0.  v0[v1]:= v3 @kind object;
  #L3d6cb4.  return v0 @kind object;
  #L3d6cb6.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.h` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L3d6cba.  return v3 @kind object;
  #L3d6cbc.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.g` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L3d6cc0.  return v3 @kind object;
  #L3d6cc2.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.f` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L3d6cc6.  return v3 @kind object;
  #L3d6cc8.  v3:= `@@com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.d` @type ^`android.graphics.Bitmap$Config`[] @kind object;
  #L3d6ccc.  return v3 @kind object;
}
procedure `java.util.NavigableMap` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v2 @kind this, `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.e:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d6f20.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @type ^`java.util.Map` @kind object;
  #L3d6f24.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d6f2a.  v0:= temp @kind object;
  #L3d6f2c.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L3d6f30.  if v0 != 0 then goto L3d6f48;
  #L3d6f34.  v0:= new `java.util.TreeMap`;
  #L3d6f38.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3d6f3e.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @type ^`java.util.Map` @kind object;
  #L3d6f42.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d6f48.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v2 @kind this, `int` v3 , `int` v4 , `android.graphics.Bitmap$Config` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6bd4.  call temp:= `getBitmapByteSize`(v3, v4, v5) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L3d6bda.  v0:= temp;
  #L3d6bdc.  call temp:= `b`(v2, v0, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.b:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;` @kind direct;
  #L3d6be2.  v0:= temp @kind object;
  #L3d6be4.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d6be8.  call temp:= `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)Ljava/lang/Object;` @kind virtual;
  #L3d6bee.  v1:= temp @kind object;
  #L3d6bf0.  v1:= (`android.graphics.Bitmap`) v1 @kind object;
  #L3d6bf4.  if v1 == 0 then goto L3d6c10;
  #L3d6bf8.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d6bfc.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d6c02.  v0:= temp @kind object;
  #L3d6c04.  call `a`(v2, v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L3d6c0a.  call `reconfigure`(v1, v3, v4, v5) @signature `Landroid/graphics/Bitmap;.reconfigure:(IILandroid/graphics/Bitmap$Config;)V` @kind virtual;
  #L3d6c10.  return v1 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v0 @kind this, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.getSize:(Landroid/graphics/Bitmap;)I` @AccessFlag PUBLIC {
    temp;

  #L3d6d8c.  call temp:= `getBitmapByteSize`(v1) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3d6d92.  v1:= temp;
  #L3d6d94.  return v1;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v0 @kind this, `int` v1 , `int` v2 , `android.graphics.Bitmap$Config` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.logBitmap:(IILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;

  #L3d6e24.  call temp:= `getBitmapByteSize`(v1, v2, v3) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(IILandroid/graphics/Bitmap$Config;)I` @kind static;
  #L3d6e2a.  v1:= temp;
  #L3d6e2c.  call temp:= `c`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.c:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L3d6e32.  v1:= temp @kind object;
  #L3d6e34.  return v1 @kind object;
}
procedure `java.lang.String` `logBitmap`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v1 @kind this, `android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.logBitmap:(Landroid/graphics/Bitmap;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6df8.  call temp:= `getBitmapByteSize`(v2) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3d6dfe.  v0:= temp;
  #L3d6e00.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d6e06.  v2:= temp @kind object;
  #L3d6e08.  call temp:= `c`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.c:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L3d6e0e.  v2:= temp @kind object;
  #L3d6e10.  return v2 @kind object;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v3 @kind this, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.put:(Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d70e0.  call temp:= `getBitmapByteSize`(v4) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3d70e6.  v0:= temp;
  #L3d70e8.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3d70ec.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d70f2.  v2:= temp @kind object;
  #L3d70f4.  call temp:= `e`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;.e:(ILandroid/graphics/Bitmap$Config;)Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;` @kind virtual;
  #L3d70fa.  v0:= temp @kind object;
  #L3d70fc.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d7100.  call `d`(v1, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;Ljava/lang/Object;)V` @kind virtual;
  #L3d7106.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3d710c.  v4:= temp @kind object;
  #L3d710e.  call temp:= `e`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.e:(Landroid/graphics/Bitmap$Config;)Ljava/util/NavigableMap;` @kind direct;
  #L3d7114.  v4:= temp @kind object;
  #L3d7116.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d711a.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d7120.  v1:= temp @kind object;
  #L3d7122.  call temp:= `get`(v4, v1) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d7128.  v1:= temp @kind object;
  #L3d712a.  v1:= (`java.lang.Integer`) v1 @kind object;
  #L3d712e.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d7132.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d7138.  v0:= temp @kind object;
  #L3d713a.  v2:= 1I;
  #L3d713c.  if v1 != 0 then goto L3d7142;
  #L3d7140.  goto L3d714c;
  #L3d7142.  call temp:= `intValue`(v1) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d7148.  v1:= temp;
  #L3d714a.  v2:= v2 + v1 @kind int;
  #L3d714c.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d7152.  v1:= temp @kind object;
  #L3d7154.  call temp:= `put`(v4, v0, v1) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d715a.  return @kind void;
}
procedure `android.graphics.Bitmap` `removeLast`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.removeLast:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6c24.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d6c28.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.f:()Ljava/lang/Object;` @kind virtual;
  #L3d6c2e.  v0:= temp @kind object;
  #L3d6c30.  v0:= (`android.graphics.Bitmap`) v0 @kind object;
  #L3d6c34.  if v0 == 0 then goto L3d6c4e;
  #L3d6c38.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3d6c3e.  v1:= temp;
  #L3d6c40.  call temp:= `valueOf`(v1) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d6c46.  v1:= temp @kind object;
  #L3d6c48.  call `a`(v2, v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.a:(Ljava/lang/Integer;Landroid/graphics/Bitmap;)V` @kind direct;
  #L3d6c4e.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d6e48.  v0:= new `java.lang.StringBuilder`;
  #L3d6e4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d6e52.  v1:= "SizeConfigStrategy{groupedMap=" @kind object;
  #L3d6e56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6e5c.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d6e60.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6e66.  v1:= ", sortedSizes=(" @kind object;
  #L3d6e6a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6e70.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @type ^`java.util.Map` @kind object;
  #L3d6e74.  call temp:= `entrySet`(v1) @signature `Ljava/util/Map;.entrySet:()Ljava/util/Set;` @kind interface;
  #L3d6e7a.  v1:= temp @kind object;
  #L3d6e7c.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3d6e82.  v1:= temp @kind object;
  #L3d6e84.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3d6e8a.  v2:= temp;
  #L3d6e8c.  if v2 == 0 then goto L3d6ece;
  #L3d6e90.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3d6e96.  v2:= temp @kind object;
  #L3d6e98.  v2:= (`java.util.Map$Entry`) v2 @kind object;
  #L3d6e9c.  call temp:= `getKey`(v2) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L3d6ea2.  v3:= temp @kind object;
  #L3d6ea4.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6eaa.  v3:= 91I;
  #L3d6eae.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6eb4.  call temp:= `getValue`(v2) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L3d6eba.  v2:= temp @kind object;
  #L3d6ebc.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6ec2.  v2:= "], " @kind object;
  #L3d6ec6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6ecc.  goto L3d6e84;
  #L3d6ece.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy.c` @type ^`java.util.Map` @kind object;
  #L3d6ed2.  call temp:= `isEmpty`(v1) @signature `Ljava/util/Map;.isEmpty:()Z` @kind interface;
  #L3d6ed8.  v1:= temp;
  #L3d6eda.  if v1 != 0 then goto L3d6efc;
  #L3d6ede.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d6ee4.  v1:= temp;
  #L3d6ee6.  v1:= v1 + -2;
  #L3d6eea.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d6ef0.  v2:= temp;
  #L3d6ef2.  v3:= "" @kind object;
  #L3d6ef6.  call temp:= `replace`(v0, v1, v2, v3) @signature `Ljava/lang/StringBuilder;.replace:(IILjava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6efc.  v1:= ")}" @kind object;
  #L3d6f00.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d6f06.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d6f0c.  v0:= temp @kind object;
  #L3d6f0e.  return v0 @kind object;
}
