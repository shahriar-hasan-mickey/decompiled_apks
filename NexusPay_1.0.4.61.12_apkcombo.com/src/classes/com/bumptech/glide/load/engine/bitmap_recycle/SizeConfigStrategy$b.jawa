record `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.f` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @AccessFlag ;
  `android.graphics.Bitmap$Config` `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$c;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d6b80.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d6b86.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` := v1 @kind object;
  #L3d6b8a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6bb8.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$c` @kind object;
  #L3d6bbc.  call `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/c;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)V` @kind virtual;
  #L3d6bc2.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v0 @kind this, `int` v1 , `android.graphics.Bitmap$Config` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.b:(ILandroid/graphics/Bitmap$Config;)V` @AccessFlag PUBLIC {
    temp;

  #L3d6b9c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int` := v1;
  #L3d6ba0.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` := v2 @kind object;
  #L3d6ba4.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d6ae8.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` @kind boolean;
  #L3d6aec.  v1:= 0I;
  #L3d6aee.  if v0 == 0 then goto L3d6b18;
  #L3d6af2.  v4:= (`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b`) v4 @kind object;
  #L3d6af6.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d6afa.  v2:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d6afe.  if v0 != v2 then goto L3d6b18;
  #L3d6b02.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6b06.  v4:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6b0a.  call temp:= `bothNullOrEqual`(v0, v4) @signature `Lcom/bumptech/glide/util/Util;.bothNullOrEqual:(Ljava/lang/Object;Ljava/lang/Object;)Z` @kind static;
  #L3d6b10.  v4:= temp;
  #L3d6b12.  if v4 == 0 then goto L3d6b18;
  #L3d6b16.  v1:= 1I;
  #L3d6b18.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6b2c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d6b30.  v0:= v0 * 31;
  #L3d6b34.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6b38.  if v1 == 0 then goto L3d6b46;
  #L3d6b3c.  call temp:= `hashCode`(v1) @signature `Landroid/graphics/Bitmap$Config;.hashCode:()I` @kind virtual;
  #L3d6b42.  v1:= temp;
  #L3d6b44.  goto L3d6b48;
  #L3d6b46.  v1:= 0I;
  #L3d6b48.  v0:= v0 + v1 @kind int;
  #L3d6b4a.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy$b;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d6b5c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.b` @type ^`int`;
  #L3d6b60.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.SizeConfigStrategy$b.c` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3d6b64.  call temp:= `c`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/SizeConfigStrategy;.c:(ILandroid/graphics/Bitmap$Config;)Ljava/lang/String;` @kind static;
  #L3d6b6a.  v0:= temp @kind object;
  #L3d6b6c.  return v0 @kind object;
}
