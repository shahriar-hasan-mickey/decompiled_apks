record `com.bumptech.glide.load.engine.h$a` @kind class @AccessFlag  extends `java.lang.Runnable` @kind interface {
  `com.bumptech.glide.request.ResourceCallback` `com.bumptech.glide.load.engine.h$a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.h` `com.bumptech.glide.load.engine.h$a.b` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.h$a` v0 @kind this, `com.bumptech.glide.load.engine.h` v1 @kind object, `com.bumptech.glide.request.ResourceCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/h$a;.<init>:(Lcom/bumptech/glide/load/engine/h;Lcom/bumptech/glide/request/ResourceCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d1fec.  v0.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` := v1 @kind object;
  #L3d1ff0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1ff6.  v0.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` := v2 @kind object;
  #L3d1ffa.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.h$a` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/h$a;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d200c.  v0:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3d2010.  call temp:= `getLock`(v0) @signature `Lcom/bumptech/glide/request/ResourceCallback;.getLock:()Ljava/lang/Object;` @kind interface;
  #L3d2016.  v0:= temp @kind object;
  #L3d2018.  @monitorenter v0
  #L3d201a.  v1:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3d201e.  @monitorenter v1
  #L3d2020.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3d2024.  v2:= v2.`com.bumptech.glide.load.engine.h.a` @type ^`com.bumptech.glide.load.engine.h$e` @kind object;
  #L3d2028.  v3:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3d202c.  call temp:= `b`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h$e;.b:(Lcom/bumptech/glide/request/ResourceCallback;)Z` @kind virtual;
  #L3d2032.  v2:= temp;
  #L3d2034.  if v2 == 0 then goto L3d2046;
  #L3d2038.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3d203c.  v3:= v4.`com.bumptech.glide.load.engine.h$a.a` @type ^`com.bumptech.glide.request.ResourceCallback` @kind object;
  #L3d2040.  call `c`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/h;.c:(Lcom/bumptech/glide/request/ResourceCallback;)V` @kind virtual;
  #L3d2046.  v2:= v4.`com.bumptech.glide.load.engine.h$a.b` @type ^`com.bumptech.glide.load.engine.h` @kind object;
  #L3d204a.  call `f`(v2) @signature `Lcom/bumptech/glide/load/engine/h;.f:()V` @kind virtual;
  #L3d2050.  @monitorexit v1
  #L3d2052.  @monitorexit v0
  #L3d2054.  return @kind void;
  #L3d2056.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d2058.  @monitorexit v1
  #L3d205a.  throw v2;
  #L3d205c.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d205e.  @monitorexit v0
  #L3d2060.  throw v1;
  catch `java.lang.Throwable` @[L3d201a..L3d2020] goto L3d205c;
  catch `java.lang.Throwable` @[L3d2020..L3d2052] goto L3d2056;
  catch `java.lang.Throwable` @[L3d2052..L3d2054] goto L3d205c;
  catch `java.lang.Throwable` @[L3d2058..L3d205a] goto L3d2056;
  catch `java.lang.Throwable` @[L3d205a..L3d2060] goto L3d205c;
}
