record `com.bumptech.glide.load.engine.DecodePath` @kind class @AccessFlag PUBLIC {
  `java.lang.Class` `com.bumptech.glide.load.engine.DecodePath.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.DecodePath.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` `com.bumptech.glide.load.engine.DecodePath.c` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.DecodePath.d` @AccessFlag PRIVATE_FINAL;
  `java.lang.String` `com.bumptech.glide.load.engine.DecodePath.e` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.DecodePath` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `java.lang.Class` v3 @kind object, `java.util.List` v4 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v5 @kind object, `androidx.core.util.Pools$Pool` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Ljava/lang/Class;Ljava/util/List;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;Landroidx/core/util/Pools$Pool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3d18dc.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d18e2.  v0.`com.bumptech.glide.load.engine.DecodePath.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3d18e6.  v0.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` := v4 @kind object;
  #L3d18ea.  v0.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` := v5 @kind object;
  #L3d18ee.  v0.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` := v6 @kind object;
  #L3d18f2.  v4:= new `java.lang.StringBuilder`;
  #L3d18f6.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d18fc.  v5:= "Failed DecodePath{" @kind object;
  #L3d1900.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1906.  call temp:= `getSimpleName`(v1) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d190c.  v1:= temp @kind object;
  #L3d190e.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1914.  v1:= "->" @kind object;
  #L3d1918.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d191e.  call temp:= `getSimpleName`(v2) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d1924.  v2:= temp @kind object;
  #L3d1926.  call temp:= `append`(v4, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d192c.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1932.  call temp:= `getSimpleName`(v3) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d1938.  v1:= temp @kind object;
  #L3d193a.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1940.  v1:= "}" @kind object;
  #L3d1944.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d194a.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1950.  v1:= temp @kind object;
  #L3d1952.  v0.`com.bumptech.glide.load.engine.DecodePath.e` @type ^`java.lang.String` := v1 @kind object;
  #L3d1956.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.DecodePath` v7 @kind this, `com.bumptech.glide.load.data.DataRewinder` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.Options` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3d1728.  v0:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d172c.  call temp:= `acquire`(v0) @signature `Landroidx/core/util/Pools$Pool;.acquire:()Ljava/lang/Object;` @kind interface;
  #L3d1732.  v0:= temp @kind object;
  #L3d1734.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d173a.  v0:= temp @kind object;
  #L3d173c.  v0:= (`java.util.List`) v0 @kind object;
  #L3d1740.  v1:= v7 @kind object;
  #L3d1742.  v2:= v8 @kind object;
  #L3d1744.  v3:= v9;
  #L3d1746.  v4:= v10;
  #L3d1748.  v5:= v11 @kind object;
  #L3d174a.  v6:= v0 @kind object;
  #L3d174c.  call temp:= `b`(v1, v2, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.b:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d1752.  v8:= temp @kind object;
  #L3d1754.  v9:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d1758.  call temp:= `release`(v9, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d175e.  return v8 @kind object;
  #L3d1760.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1762.  v9:= v7.`com.bumptech.glide.load.engine.DecodePath.d` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d1766.  call temp:= `release`(v9, v0) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d176c.  throw v8;
  catch `java.lang.Throwable` @[L3d174c..L3d1754] goto L3d1760;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.DecodePath` v8 @kind this, `com.bumptech.glide.load.data.DataRewinder` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.load.Options` v12 @kind object, `java.util.List` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.b:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Ljava/util/List;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d178c.  v0:= v8.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3d1790.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d1796.  v0:= temp;
  #L3d1798.  v1:= 0I;
  #L3d179a.  v2:= 0I;
  #L3d179c.  if v2 >= v0 then goto L3d182c;
  #L3d17a0.  v3:= v8.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3d17a4.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d17aa.  v3:= temp @kind object;
  #L3d17ac.  v3:= (`com.bumptech.glide.load.ResourceDecoder`) v3 @kind object;
  #L3d17b0.  call temp:= `rewindAndGet`(v9) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.rewindAndGet:()Ljava/lang/Object;` @kind interface;
  #L3d17b6.  v4:= temp @kind object;
  #L3d17b8.  call temp:= `handles`(v3, v4, v12) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @kind interface;
  #L3d17be.  v4:= temp;
  #L3d17c0.  if v4 == 0 then goto L3d1820;
  #L3d17c4.  call temp:= `rewindAndGet`(v9) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.rewindAndGet:()Ljava/lang/Object;` @kind interface;
  #L3d17ca.  v4:= temp @kind object;
  #L3d17cc.  call temp:= `decode`(v3, v4, v10, v11, v12) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3d17d2.  v1:= temp @kind object;
  #L3d17d4.  goto L3d1820;
  #L3d17d6.  v4:= Exception @type ^`java.lang.OutOfMemoryError` @kind object;
  #L3d17d8.  goto L3d17e0;
  #L3d17da.  v4:= Exception @type ^`java.lang.RuntimeException` @kind object;
  #L3d17dc.  goto L3d17e0;
  #L3d17de.  v4:= Exception @type ^`java.io.IOException` @kind object;
  #L3d17e0.  v5:= 2I;
  #L3d17e2.  v6:= "DecodePath" @kind object;
  #L3d17e6.  call temp:= `isLoggable`(v6, v5) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d17ec.  v5:= temp;
  #L3d17ee.  if v5 == 0 then goto L3d181a;
  #L3d17f2.  v5:= new `java.lang.StringBuilder`;
  #L3d17f6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d17fc.  v7:= "Failed to decode data for " @kind object;
  #L3d1800.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1806.  call temp:= `append`(v5, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d180c.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1812.  v3:= temp @kind object;
  #L3d1814.  call temp:= `v`(v6, v3, v4) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d181a.  call temp:= `add`(v13, v4) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d1820.  if v1 == 0 then goto L3d1826;
  #L3d1824.  goto L3d182c;
  #L3d1826.  v2:= v2 + 1;
  #L3d182a.  goto L3d179c;
  #L3d182c.  if v1 == 0 then goto L3d1832;
  #L3d1830.  return v1 @kind object;
  #L3d1832.  v9:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3d1836.  v10:= v8.`com.bumptech.glide.load.engine.DecodePath.e` @type ^`java.lang.String` @kind object;
  #L3d183a.  v11:= new `java.util.ArrayList`;
  #L3d183e.  call `<init>`(v11, v13) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d1844.  call `<init>`(v9, v10, v11) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3d184a.  throw v9;
  catch `java.io.IOException` @[L3d17b0..L3d17d4] goto L3d17de;
  catch `java.lang.RuntimeException` @[L3d17b0..L3d17d4] goto L3d17da;
  catch `java.lang.OutOfMemoryError` @[L3d17b0..L3d17d4] goto L3d17d6;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.engine.DecodePath` v0 @kind this, `com.bumptech.glide.load.data.DataRewinder` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object, `com.bumptech.glide.load.engine.DecodePath$a` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.decode:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;

  #L3d16f8.  call temp:= `a`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.a:(Lcom/bumptech/glide/load/data/DataRewinder;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d16fe.  v1:= temp @kind object;
  #L3d1700.  call temp:= `a`(v5, v1) @signature `Lcom/bumptech/glide/load/engine/DecodePath$a;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3d1706.  v1:= temp @kind object;
  #L3d1708.  v2:= v0.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L3d170c.  call temp:= `transcode`(v2, v1, v4) @signature `Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;.transcode:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3d1712.  v1:= temp @kind object;
  #L3d1714.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.DecodePath` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/DecodePath;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d1870.  v0:= new `java.lang.StringBuilder`;
  #L3d1874.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d187a.  v1:= "DecodePath{ dataClass=" @kind object;
  #L3d187e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1884.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.a` @type ^`java.lang.Class` @kind object;
  #L3d1888.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d188e.  v1:= ", decoders=" @kind object;
  #L3d1892.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1898.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.b` @type ^`java.util.List` @kind object;
  #L3d189c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18a2.  v1:= ", transcoder=" @kind object;
  #L3d18a6.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18ac.  v1:= v2.`com.bumptech.glide.load.engine.DecodePath.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L3d18b0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18b6.  v1:= 125I;
  #L3d18ba.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d18c0.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d18c6.  v0:= temp @kind object;
  #L3d18c8.  return v0 @kind object;
}
