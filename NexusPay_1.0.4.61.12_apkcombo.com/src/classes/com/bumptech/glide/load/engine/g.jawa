record `com.bumptech.glide.load.engine.g` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind interface, `java.lang.Runnable` @kind interface, `java.lang.Comparable` @kind interface, `com.bumptech.glide.util.pool.FactoryPools$Poolable` @kind interface {
  `com.bumptech.glide.load.DataSource` `com.bumptech.glide.load.engine.g.A` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.data.DataFetcher` `com.bumptech.glide.load.engine.g.B` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DataFetcherGenerator` `com.bumptech.glide.load.engine.g.C` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `com.bumptech.glide.load.engine.g.D` @AccessFlag PRIVATE_VOLATILE;
  `boolean` `com.bumptech.glide.load.engine.g.E` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.g.a` @AccessFlag PRIVATE_FINAL;
  `java.util.List` `com.bumptech.glide.load.engine.g.b` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.util.pool.StateVerifier` `com.bumptech.glide.load.engine.g.c` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.g$e` `com.bumptech.glide.load.engine.g.d` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.engine.g.e` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.g$d` `com.bumptech.glide.load.engine.g.f` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.g$f` `com.bumptech.glide.load.engine.g.g` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.GlideContext` `com.bumptech.glide.load.engine.g.h` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.g.i` @AccessFlag PRIVATE;
  `com.bumptech.glide.Priority` `com.bumptech.glide.load.engine.g.j` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.j` `com.bumptech.glide.load.engine.g.k` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.l` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.m` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.DiskCacheStrategy` `com.bumptech.glide.load.engine.g.n` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Options` `com.bumptech.glide.load.engine.g.o` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.g$b` `com.bumptech.glide.load.engine.g.p` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.engine.g.q` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.g$h` `com.bumptech.glide.load.engine.g.r` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.g$g` `com.bumptech.glide.load.engine.g.s` @AccessFlag PRIVATE;
  `long` `com.bumptech.glide.load.engine.g.t` @AccessFlag PRIVATE;
  `boolean` `com.bumptech.glide.load.engine.g.u` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.g.v` @AccessFlag PRIVATE;
  `java.lang.Thread` `com.bumptech.glide.load.engine.g.w` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.g.x` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.g.y` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.g.z` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g` v1 @kind this, `com.bumptech.glide.load.engine.g$e` v2 @kind object, `androidx.core.util.Pools$Pool` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.<init>:(Lcom/bumptech/glide/load/engine/g$e;Landroidx/core/util/Pools$Pool;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d0f04.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d0f0a.  v0:= new `com.bumptech.glide.load.engine.f`;
  #L3d0f0e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.<init>:()V` @kind direct;
  #L3d0f14.  v1.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` := v0 @kind object;
  #L3d0f18.  v0:= new `java.util.ArrayList`;
  #L3d0f1c.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3d0f22.  v1.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` := v0 @kind object;
  #L3d0f26.  call temp:= `newInstance`() @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.newInstance:()Lcom/bumptech/glide/util/pool/StateVerifier;` @kind static;
  #L3d0f2c.  v0:= temp @kind object;
  #L3d0f2e.  v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` := v0 @kind object;
  #L3d0f32.  v0:= new `com.bumptech.glide.load.engine.g$d`;
  #L3d0f36.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/g$d;.<init>:()V` @kind direct;
  #L3d0f3c.  v1.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` := v0 @kind object;
  #L3d0f40.  v0:= new `com.bumptech.glide.load.engine.g$f`;
  #L3d0f44.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.<init>:()V` @kind direct;
  #L3d0f4a.  v1.`com.bumptech.glide.load.engine.g.g` @type ^`com.bumptech.glide.load.engine.g$f` := v0 @kind object;
  #L3d0f4e.  v1.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.g$e` := v2 @kind object;
  #L3d0f52.  v1.`com.bumptech.glide.load.engine.g.e` @type ^`androidx.core.util.Pools$Pool` := v3 @kind object;
  #L3d0f56.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `c`(`com.bumptech.glide.load.engine.g` v3 @kind this, `com.bumptech.glide.load.data.DataFetcher` v4 @kind object, `java.lang.Object` v5 @kind object, `com.bumptech.glide.load.DataSource` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Lcom/bumptech/glide/load/data/DataFetcher;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d0be0.  if v5 != 0 then goto L3d0bee;
  #L3d0be4.  v5:= 0I;
  #L3d0be6.  call `cleanup`(v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d0bec.  return v5 @kind object;
  #L3d0bee.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3d0bf4.  v0:= temp @kind wide;
  #L3d0bf6.  call temp:= `d`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/engine/g;.d:(Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d0bfc.  v5:= temp @kind object;
  #L3d0bfe.  v6:= "DecodeJob" @kind object;
  #L3d0c02.  v2:= 2I;
  #L3d0c04.  call temp:= `isLoggable`(v6, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d0c0a.  v6:= temp;
  #L3d0c0c.  if v6 == 0 then goto L3d0c38;
  #L3d0c10.  v6:= new `java.lang.StringBuilder`;
  #L3d0c14.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0c1a.  v2:= "Decoded result " @kind object;
  #L3d0c1e.  call temp:= `append`(v6, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c24.  call temp:= `append`(v6, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0c2a.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0c30.  v6:= temp @kind object;
  #L3d0c32.  call `k`(v3, v6, v0) @signature `Lcom/bumptech/glide/load/engine/g;.k:(Ljava/lang/String;J)V` @kind direct;
  #L3d0c38.  call `cleanup`(v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d0c3e.  return v5 @kind object;
  #L3d0c40.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0c42.  call `cleanup`(v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d0c48.  throw v5;
  catch `java.lang.Throwable` @[L3d0bee..L3d0c38] goto L3d0c40;
}
procedure `com.bumptech.glide.load.engine.Resource` `d`(`com.bumptech.glide.load.engine.g` v2 @kind this, `java.lang.Object` v3 @kind object, `com.bumptech.glide.load.DataSource` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.d:(Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d0c68.  v0:= v2.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0c6c.  call temp:= `getClass`(v3) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d0c72.  v1:= temp @kind object;
  #L3d0c74.  call temp:= `h`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/f;.h:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/LoadPath;` @kind virtual;
  #L3d0c7a.  v0:= temp @kind object;
  #L3d0c7c.  call temp:= `v`(v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/engine/g;.v:(Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/engine/LoadPath;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d0c82.  v3:= temp @kind object;
  #L3d0c84.  return v3 @kind object;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.g` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.e:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d0f90.  v0:= "DecodeJob" @kind object;
  #L3d0f94.  v1:= 2I;
  #L3d0f96.  call temp:= `isLoggable`(v0, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d0f9c.  v0:= temp;
  #L3d0f9e.  if v0 == 0 then goto L3d0ffe;
  #L3d0fa2.  v0:= v4.`com.bumptech.glide.load.engine.g.t` @type ^`long` @kind wide;
  #L3d0fa6.  v2:= new `java.lang.StringBuilder`;
  #L3d0faa.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0fb0.  v3:= "data: " @kind object;
  #L3d0fb4.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fba.  v3:= v4.`com.bumptech.glide.load.engine.g.z` @type ^`java.lang.Object` @kind object;
  #L3d0fbe.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fc4.  v3:= ", cache key: " @kind object;
  #L3d0fc8.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fce.  v3:= v4.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0fd2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fd8.  v3:= ", fetcher: " @kind object;
  #L3d0fdc.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fe2.  v3:= v4.`com.bumptech.glide.load.engine.g.B` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d0fe6.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0fec.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0ff2.  v2:= temp @kind object;
  #L3d0ff4.  v3:= "Retrieved data" @kind object;
  #L3d0ff8.  call `l`(v4, v3, v0, v2) @signature `Lcom/bumptech/glide/load/engine/g;.l:(Ljava/lang/String;JLjava/lang/String;)V` @kind direct;
  #L3d0ffe.  v0:= 0I;
  #L3d1000.  v1:= v4.`com.bumptech.glide.load.engine.g.B` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d1004.  v2:= v4.`com.bumptech.glide.load.engine.g.z` @type ^`java.lang.Object` @kind object;
  #L3d1008.  v3:= v4.`com.bumptech.glide.load.engine.g.A` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d100c.  call temp:= `c`(v4, v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/g;.c:(Lcom/bumptech/glide/load/data/DataFetcher;Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3d1012.  v0:= temp @kind object;
  #L3d1014.  goto L3d1030;
  #L3d1016.  v1:= Exception @type ^`com.bumptech.glide.load.engine.GlideException` @kind object;
  #L3d1018.  v2:= v4.`com.bumptech.glide.load.engine.g.y` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d101c.  v3:= v4.`com.bumptech.glide.load.engine.g.A` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d1020.  call `f`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/GlideException;.f:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/DataSource;)V` @kind virtual;
  #L3d1026.  v2:= v4.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d102a.  call temp:= `add`(v2, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d1030.  if v0 == 0 then goto L3d1040;
  #L3d1034.  v1:= v4.`com.bumptech.glide.load.engine.g.A` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d1038.  call `n`(v4, v0, v1) @signature `Lcom/bumptech/glide/load/engine/g;.n:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @kind direct;
  #L3d103e.  goto L3d1046;
  #L3d1040.  call `u`(v4) @signature `Lcom/bumptech/glide/load/engine/g;.u:()V` @kind direct;
  #L3d1046.  return @kind void;
  catch `com.bumptech.glide.load.engine.GlideException` @[L3d1000..L3d1014] goto L3d1016;
}
procedure `com.bumptech.glide.load.engine.DataFetcherGenerator` `f`(`com.bumptech.glide.load.engine.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.f:()Lcom/bumptech/glide/load/engine/DataFetcherGenerator;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d09ac.  v0:= `@@com.bumptech.glide.load.engine.g$a.b` @type ^`int`[] @kind object;
  #L3d09b0.  v1:= v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d09b4.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d09ba.  v1:= temp;
  #L3d09bc.  v0:= v0[v1];
  #L3d09c0.  v1:= 1I;
  #L3d09c2.  if v0 == v1 then goto L3d0a2e;
  #L3d09c6.  v1:= 2I;
  #L3d09c8.  if v0 == v1 then goto L3d0a1e;
  #L3d09cc.  v1:= 3I;
  #L3d09ce.  if v0 == v1 then goto L3d0a0e;
  #L3d09d2.  v1:= 4I;
  #L3d09d4.  if v0 != v1 then goto L3d09dc;
  #L3d09d8.  v0:= 0I;
  #L3d09da.  return v0 @kind object;
  #L3d09dc.  v0:= new `java.lang.IllegalStateException`;
  #L3d09e0.  v1:= new `java.lang.StringBuilder`;
  #L3d09e4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d09ea.  v2:= "Unrecognized stage: " @kind object;
  #L3d09ee.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d09f4.  v2:= v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d09f8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d09fe.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0a04.  v1:= temp @kind object;
  #L3d0a06.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0a0c.  throw v0;
  #L3d0a0e.  v0:= new `com.bumptech.glide.load.engine.r`;
  #L3d0a12.  v1:= v3.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0a16.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/r;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @kind direct;
  #L3d0a1c.  return v0 @kind object;
  #L3d0a1e.  v0:= new `com.bumptech.glide.load.engine.c`;
  #L3d0a22.  v1:= v3.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0a26.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @kind direct;
  #L3d0a2c.  return v0 @kind object;
  #L3d0a2e.  v0:= new `com.bumptech.glide.load.engine.o`;
  #L3d0a32.  v1:= v3.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0a36.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/engine/o;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @kind direct;
  #L3d0a3c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.g$h` `g`(`com.bumptech.glide.load.engine.g` v3 @kind this, `com.bumptech.glide.load.engine.g$h` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d0b10.  v0:= `@@com.bumptech.glide.load.engine.g$a.b` @type ^`int`[] @kind object;
  #L3d0b14.  call temp:= `ordinal`(v4) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d0b1a.  v1:= temp;
  #L3d0b1c.  v0:= v0[v1];
  #L3d0b20.  v1:= 1I;
  #L3d0b22.  if v0 == v1 then goto L3d0baa;
  #L3d0b26.  v1:= 2I;
  #L3d0b28.  if v0 == v1 then goto L3d0b96;
  #L3d0b2c.  v1:= 3I;
  #L3d0b2e.  if v0 == v1 then goto L3d0b90;
  #L3d0b32.  v1:= 4I;
  #L3d0b34.  if v0 == v1 then goto L3d0b90;
  #L3d0b38.  v1:= 5I;
  #L3d0b3a.  if v0 != v1 then goto L3d0b62;
  #L3d0b3e.  v4:= v3.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d0b42.  call temp:= `decodeCachedResource`(v4) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.decodeCachedResource:()Z` @kind virtual;
  #L3d0b48.  v4:= temp;
  #L3d0b4a.  if v4 == 0 then goto L3d0b54;
  #L3d0b4e.  v4:= `@@com.bumptech.glide.load.engine.g$h.RESOURCE_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0b52.  goto L3d0b60;
  #L3d0b54.  v4:= `@@com.bumptech.glide.load.engine.g$h.RESOURCE_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0b58.  call temp:= `g`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @kind direct;
  #L3d0b5e.  v4:= temp @kind object;
  #L3d0b60.  return v4 @kind object;
  #L3d0b62.  v0:= new `java.lang.IllegalArgumentException`;
  #L3d0b66.  v1:= new `java.lang.StringBuilder`;
  #L3d0b6a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0b70.  v2:= "Unrecognized stage: " @kind object;
  #L3d0b74.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0b7a.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0b80.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0b86.  v4:= temp @kind object;
  #L3d0b88.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0b8e.  throw v0;
  #L3d0b90.  v4:= `@@com.bumptech.glide.load.engine.g$h.FINISHED` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0b94.  return v4 @kind object;
  #L3d0b96.  v4:= v3.`com.bumptech.glide.load.engine.g.u` @type ^`boolean` @kind boolean;
  #L3d0b9a.  if v4 == 0 then goto L3d0ba4;
  #L3d0b9e.  v4:= `@@com.bumptech.glide.load.engine.g$h.FINISHED` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0ba2.  goto L3d0ba8;
  #L3d0ba4.  v4:= `@@com.bumptech.glide.load.engine.g$h.SOURCE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0ba8.  return v4 @kind object;
  #L3d0baa.  v4:= v3.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d0bae.  call temp:= `decodeCachedData`(v4) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.decodeCachedData:()Z` @kind virtual;
  #L3d0bb4.  v4:= temp;
  #L3d0bb6.  if v4 == 0 then goto L3d0bc0;
  #L3d0bba.  v4:= `@@com.bumptech.glide.load.engine.g$h.DATA_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0bbe.  goto L3d0bcc;
  #L3d0bc0.  v4:= `@@com.bumptech.glide.load.engine.g$h.DATA_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d0bc4.  call temp:= `g`(v3, v4) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @kind direct;
  #L3d0bca.  v4:= temp @kind object;
  #L3d0bcc.  return v4 @kind object;
}
procedure `com.bumptech.glide.load.Options` `h`(`com.bumptech.glide.load.engine.g` v3 @kind this, `com.bumptech.glide.load.DataSource` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.h:(Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/Options;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d091c.  v0:= v3.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d0920.  v1:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d0924.  v2:= 26I;
  #L3d0928.  if v1 >= v2 then goto L3d092e;
  #L3d092c.  return v0 @kind object;
  #L3d092e.  v1:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d0932.  if v4 == v1 then goto L3d094c;
  #L3d0936.  v4:= v3.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d093a.  call temp:= `w`(v4) @signature `Lcom/bumptech/glide/load/engine/f;.w:()Z` @kind virtual;
  #L3d0940.  v4:= temp;
  #L3d0942.  if v4 == 0 then goto L3d0948;
  #L3d0946.  goto L3d094c;
  #L3d0948.  v4:= 0I;
  #L3d094a.  goto L3d094e;
  #L3d094c.  v4:= 1I;
  #L3d094e.  v1:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.ALLOW_HARDWARE_CONFIG` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3d0952.  call temp:= `get`(v0, v1) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @kind virtual;
  #L3d0958.  v1:= temp @kind object;
  #L3d095a.  v1:= (`java.lang.Boolean`) v1 @kind object;
  #L3d095e.  if v1 == 0 then goto L3d0974;
  #L3d0962.  call temp:= `booleanValue`(v1) @signature `Ljava/lang/Boolean;.booleanValue:()Z` @kind virtual;
  #L3d0968.  v1:= temp;
  #L3d096a.  if v1 == 0 then goto L3d0972;
  #L3d096e.  if v4 == 0 then goto L3d0974;
  #L3d0972.  return v0 @kind object;
  #L3d0974.  v0:= new `com.bumptech.glide.load.Options`;
  #L3d0978.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @kind direct;
  #L3d097e.  v1:= v3.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d0982.  call `putAll`(v0, v1) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3d0988.  v1:= `@@com.bumptech.glide.load.resource.bitmap.Downsampler.ALLOW_HARDWARE_CONFIG` @type ^`com.bumptech.glide.load.Option` @kind object;
  #L3d098c.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Boolean;.valueOf:(Z)Ljava/lang/Boolean;` @kind static;
  #L3d0992.  v4:= temp @kind object;
  #L3d0994.  call temp:= `set`(v0, v1, v4) @signature `Lcom/bumptech/glide/load/Options;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3d099a.  return v0 @kind object;
}
procedure `int` `i`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.i:()I` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d0ee4.  v0:= v1.`com.bumptech.glide.load.engine.g.j` @type ^`com.bumptech.glide.Priority` @kind object;
  #L3d0ee8.  call temp:= `ordinal`(v0) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d0eee.  v0:= temp;
  #L3d0ef0.  return v0;
}
procedure `void` `k`(`com.bumptech.glide.load.engine.g` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 ) @signature `Lcom/bumptech/glide/load/engine/g;.k:(Ljava/lang/String;J)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d1068.  v0:= 0I;
  #L3d106a.  call `l`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/g;.l:(Ljava/lang/String;JLjava/lang/String;)V` @kind direct;
  #L3d1070.  return @kind void;
}
procedure `void` `l`(`com.bumptech.glide.load.engine.g` v1 @kind this, `java.lang.String` v2 @kind object, `long` v3 , `java.lang.String` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.l:(Ljava/lang/String;JLjava/lang/String;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d1084.  v0:= new `java.lang.StringBuilder`;
  #L3d1088.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d108e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1094.  v2:= " in " @kind object;
  #L3d1098.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d109e.  call temp:= `getElapsedMillis`(v3) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3d10a4.  v2:= temp @kind wide;
  #L3d10a6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10ac.  v2:= ", load key: " @kind object;
  #L3d10b0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10b6.  v2:= v1.`com.bumptech.glide.load.engine.g.k` @type ^`com.bumptech.glide.load.engine.j` @kind object;
  #L3d10ba.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10c0.  if v5 == 0 then goto L3d10e8;
  #L3d10c4.  v2:= new `java.lang.StringBuilder`;
  #L3d10c8.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d10ce.  v3:= ", " @kind object;
  #L3d10d2.  call temp:= `append`(v2, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10d8.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10de.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d10e4.  v2:= temp @kind object;
  #L3d10e6.  goto L3d10ec;
  #L3d10e8.  v2:= "" @kind object;
  #L3d10ec.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10f2.  v2:= ", thread: " @kind object;
  #L3d10f6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d10fc.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d1102.  v2:= temp @kind object;
  #L3d1104.  call temp:= `getName`(v2) @signature `Ljava/lang/Thread;.getName:()Ljava/lang/String;` @kind virtual;
  #L3d110a.  v2:= temp @kind object;
  #L3d110c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1112.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d1118.  v2:= temp @kind object;
  #L3d111a.  v3:= "DecodeJob" @kind object;
  #L3d111e.  call temp:= `v`(v3, v2) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d1124.  return @kind void;
}
procedure `void` `m`(`com.bumptech.glide.load.engine.g` v1 @kind this, `com.bumptech.glide.load.engine.Resource` v2 @kind object, `com.bumptech.glide.load.DataSource` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.m:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d1138.  call `x`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.x:()V` @kind direct;
  #L3d113e.  v0:= v1.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` @kind object;
  #L3d1142.  call `onResourceReady`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/g$b;.onResourceReady:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L3d1148.  return @kind void;
}
procedure `void` `n`(`com.bumptech.glide.load.engine.g` v2 @kind this, `com.bumptech.glide.load.engine.Resource` v3 @kind object, `com.bumptech.glide.load.DataSource` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.n:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d115c.  v0:= instanceof @variable v3 @type ^`com.bumptech.glide.load.engine.Initializable` @kind boolean;
  #L3d1160.  if v0 == 0 then goto L3d1170;
  #L3d1164.  v0:= v3 @kind object;
  #L3d1166.  v0:= (`com.bumptech.glide.load.engine.Initializable`) v0 @kind object;
  #L3d116a.  call `initialize`(v0) @signature `Lcom/bumptech/glide/load/engine/Initializable;.initialize:()V` @kind interface;
  #L3d1170.  v0:= 0I;
  #L3d1172.  v1:= v2.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` @kind object;
  #L3d1176.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/engine/g$d;.c:()Z` @kind virtual;
  #L3d117c.  v1:= temp;
  #L3d117e.  if v1 == 0 then goto L3d118c;
  #L3d1182.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/load/engine/n;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/n;` @kind static;
  #L3d1188.  v3:= temp @kind object;
  #L3d118a.  v0:= v3 @kind object;
  #L3d118c.  call `m`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/g;.m:(Lcom/bumptech/glide/load/engine/Resource;Lcom/bumptech/glide/load/DataSource;)V` @kind direct;
  #L3d1192.  v3:= `@@com.bumptech.glide.load.engine.g$h.ENCODE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d1196.  v2.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` := v3 @kind object;
  #L3d119a.  v3:= v2.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` @kind object;
  #L3d119e.  call temp:= `c`(v3) @signature `Lcom/bumptech/glide/load/engine/g$d;.c:()Z` @kind virtual;
  #L3d11a4.  v3:= temp;
  #L3d11a6.  if v3 == 0 then goto L3d11bc;
  #L3d11aa.  v3:= v2.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` @kind object;
  #L3d11ae.  v4:= v2.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.g$e` @kind object;
  #L3d11b2.  v1:= v2.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d11b6.  call `b`(v3, v4, v1) @signature `Lcom/bumptech/glide/load/engine/g$d;.b:(Lcom/bumptech/glide/load/engine/g$e;Lcom/bumptech/glide/load/Options;)V` @kind virtual;
  #L3d11bc.  if v0 == 0 then goto L3d11c6;
  #L3d11c0.  call `d`(v0) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @kind virtual;
  #L3d11c6.  call `p`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.p:()V` @kind direct;
  #L3d11cc.  return @kind void;
  #L3d11ce.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d11d0.  if v0 == 0 then goto L3d11da;
  #L3d11d4.  call `d`(v0) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @kind virtual;
  #L3d11da.  throw v3;
  catch `java.lang.Throwable` @[L3d119a..L3d11bc] goto L3d11ce;
}
procedure `void` `o`(`com.bumptech.glide.load.engine.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.o:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d11f8.  call `x`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.x:()V` @kind direct;
  #L3d11fe.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3d1202.  v1:= new `java.util.ArrayList`;
  #L3d1206.  v2:= v3.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d120a.  call `<init>`(v1, v2) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3d1210.  v2:= "Failed to load resource" @kind object;
  #L3d1214.  call `<init>`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/util/List;)V` @kind direct;
  #L3d121a.  v1:= v3.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` @kind object;
  #L3d121e.  call `onLoadFailed`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/g$b;.onLoadFailed:(Lcom/bumptech/glide/load/engine/GlideException;)V` @kind interface;
  #L3d1224.  call `q`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.q:()V` @kind direct;
  #L3d122a.  return @kind void;
}
procedure `void` `p`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.p:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d131c.  v0:= v1.`com.bumptech.glide.load.engine.g.g` @type ^`com.bumptech.glide.load.engine.g$f` @kind object;
  #L3d1320.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.b:()Z` @kind virtual;
  #L3d1326.  v0:= temp;
  #L3d1328.  if v0 == 0 then goto L3d1332;
  #L3d132c.  call `t`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.t:()V` @kind direct;
  #L3d1332.  return @kind void;
}
procedure `void` `q`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.q:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d1344.  v0:= v1.`com.bumptech.glide.load.engine.g.g` @type ^`com.bumptech.glide.load.engine.g$f` @kind object;
  #L3d1348.  call temp:= `c`(v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.c:()Z` @kind virtual;
  #L3d134e.  v0:= temp;
  #L3d1350.  if v0 == 0 then goto L3d135a;
  #L3d1354.  call `t`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.t:()V` @kind direct;
  #L3d135a.  return @kind void;
}
procedure `void` `t`(`com.bumptech.glide.load.engine.g` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.t:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d1394.  v0:= v4.`com.bumptech.glide.load.engine.g.g` @type ^`com.bumptech.glide.load.engine.g$f` @kind object;
  #L3d1398.  call `e`(v0) @signature `Lcom/bumptech/glide/load/engine/g$f;.e:()V` @kind virtual;
  #L3d139e.  v0:= v4.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` @kind object;
  #L3d13a2.  call `a`(v0) @signature `Lcom/bumptech/glide/load/engine/g$d;.a:()V` @kind virtual;
  #L3d13a8.  v0:= v4.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d13ac.  call `a`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.a:()V` @kind virtual;
  #L3d13b2.  v0:= 0I;
  #L3d13b4.  v4.`com.bumptech.glide.load.engine.g.D` @type ^`boolean` := v0 @kind boolean;
  #L3d13b8.  v1:= 0I;
  #L3d13ba.  v4.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3d13be.  v4.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3d13c2.  v4.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3d13c6.  v4.`com.bumptech.glide.load.engine.g.j` @type ^`com.bumptech.glide.Priority` := v1 @kind object;
  #L3d13ca.  v4.`com.bumptech.glide.load.engine.g.k` @type ^`com.bumptech.glide.load.engine.j` := v1 @kind object;
  #L3d13ce.  v4.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` := v1 @kind object;
  #L3d13d2.  v4.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` := v1 @kind object;
  #L3d13d6.  v4.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` := v1 @kind object;
  #L3d13da.  v4.`com.bumptech.glide.load.engine.g.w` @type ^`java.lang.Thread` := v1 @kind object;
  #L3d13de.  v4.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3d13e2.  v4.`com.bumptech.glide.load.engine.g.z` @type ^`java.lang.Object` := v1 @kind object;
  #L3d13e6.  v4.`com.bumptech.glide.load.engine.g.A` @type ^`com.bumptech.glide.load.DataSource` := v1 @kind object;
  #L3d13ea.  v4.`com.bumptech.glide.load.engine.g.B` @type ^`com.bumptech.glide.load.data.DataFetcher` := v1 @kind object;
  #L3d13ee.  v2:= 0L;
  #L3d13f2.  v4.`com.bumptech.glide.load.engine.g.t` @type ^`long` := v2 @kind wide;
  #L3d13f6.  v4.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` := v0 @kind boolean;
  #L3d13fa.  v4.`com.bumptech.glide.load.engine.g.v` @type ^`java.lang.Object` := v1 @kind object;
  #L3d13fe.  v0:= v4.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d1402.  call `clear`(v0) @signature `Ljava/util/List;.clear:()V` @kind interface;
  #L3d1408.  v0:= v4.`com.bumptech.glide.load.engine.g.e` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3d140c.  call temp:= `release`(v0, v4) @signature `Landroidx/core/util/Pools$Pool;.release:(Ljava/lang/Object;)Z` @kind interface;
  #L3d1412.  return @kind void;
}
procedure `void` `u`(`com.bumptech.glide.load.engine.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.u:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d1558.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d155e.  v0:= temp @kind object;
  #L3d1560.  v3.`com.bumptech.glide.load.engine.g.w` @type ^`java.lang.Thread` := v0 @kind object;
  #L3d1564.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3d156a.  v0:= temp @kind wide;
  #L3d156c.  v3.`com.bumptech.glide.load.engine.g.t` @type ^`long` := v0 @kind wide;
  #L3d1570.  v0:= 0I;
  #L3d1572.  v1:= v3.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` @kind boolean;
  #L3d1576.  if v1 != 0 then goto L3d15c2;
  #L3d157a.  v1:= v3.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` @kind object;
  #L3d157e.  if v1 == 0 then goto L3d15c2;
  #L3d1582.  v0:= v3.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` @kind object;
  #L3d1586.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator;.a:()Z` @kind interface;
  #L3d158c.  v0:= temp;
  #L3d158e.  if v0 != 0 then goto L3d15c2;
  #L3d1592.  v1:= v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d1596.  call temp:= `g`(v3, v1) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @kind direct;
  #L3d159c.  v1:= temp @kind object;
  #L3d159e.  v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` := v1 @kind object;
  #L3d15a2.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.f:()Lcom/bumptech/glide/load/engine/DataFetcherGenerator;` @kind direct;
  #L3d15a8.  v1:= temp @kind object;
  #L3d15aa.  v3.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` := v1 @kind object;
  #L3d15ae.  v1:= v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d15b2.  v2:= `@@com.bumptech.glide.load.engine.g$h.SOURCE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d15b6.  if v1 != v2 then goto L3d1572;
  #L3d15ba.  call `reschedule`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.reschedule:()V` @kind virtual;
  #L3d15c0.  return @kind void;
  #L3d15c2.  v1:= v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d15c6.  v2:= `@@com.bumptech.glide.load.engine.g$h.FINISHED` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d15ca.  if v1 == v2 then goto L3d15d6;
  #L3d15ce.  v1:= v3.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` @kind boolean;
  #L3d15d2.  if v1 == 0 then goto L3d15e0;
  #L3d15d6.  if v0 != 0 then goto L3d15e0;
  #L3d15da.  call `o`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.o:()V` @kind direct;
  #L3d15e0.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `v`(`com.bumptech.glide.load.engine.g` v6 @kind this, `java.lang.Object` v7 @kind object, `com.bumptech.glide.load.DataSource` v8 @kind object, `com.bumptech.glide.load.engine.LoadPath` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.v:(Ljava/lang/Object;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/engine/LoadPath;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d0e10.  call temp:= `h`(v6, v8) @signature `Lcom/bumptech/glide/load/engine/g;.h:(Lcom/bumptech/glide/load/DataSource;)Lcom/bumptech/glide/load/Options;` @kind direct;
  #L3d0e16.  v2:= temp @kind object;
  #L3d0e18.  v0:= v6.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d0e1c.  call temp:= `getRegistry`(v0) @signature `Lcom/bumptech/glide/GlideContext;.getRegistry:()Lcom/bumptech/glide/Registry;` @kind virtual;
  #L3d0e22.  v0:= temp @kind object;
  #L3d0e24.  call temp:= `getRewinder`(v0, v7) @signature `Lcom/bumptech/glide/Registry;.getRewinder:(Ljava/lang/Object;)Lcom/bumptech/glide/load/data/DataRewinder;` @kind virtual;
  #L3d0e2a.  v7:= temp @kind object;
  #L3d0e2c.  v3:= v6.`com.bumptech.glide.load.engine.g.l` @type ^`int`;
  #L3d0e30.  v4:= v6.`com.bumptech.glide.load.engine.g.m` @type ^`int`;
  #L3d0e34.  v5:= new `com.bumptech.glide.load.engine.g$c`;
  #L3d0e38.  call `<init>`(v5, v6, v8) @signature `Lcom/bumptech/glide/load/engine/g$c;.<init>:(Lcom/bumptech/glide/load/engine/g;Lcom/bumptech/glide/load/DataSource;)V` @kind direct;
  #L3d0e3e.  v0:= v9 @kind object;
  #L3d0e40.  v1:= v7 @kind object;
  #L3d0e42.  call temp:= `load`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/LoadPath;.load:(Lcom/bumptech/glide/load/data/DataRewinder;Lcom/bumptech/glide/load/Options;IILcom/bumptech/glide/load/engine/DecodePath$a;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3d0e48.  v8:= temp @kind object;
  #L3d0e4a.  call `cleanup`(v7) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.cleanup:()V` @kind interface;
  #L3d0e50.  return v8 @kind object;
  #L3d0e52.  v8:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d0e54.  call `cleanup`(v7) @signature `Lcom/bumptech/glide/load/data/DataRewinder;.cleanup:()V` @kind interface;
  #L3d0e5a.  throw v8;
  catch `java.lang.Throwable` @[L3d0e2c..L3d0e4a] goto L3d0e52;
}
procedure `void` `w`(`com.bumptech.glide.load.engine.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.w:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d15f4.  v0:= `@@com.bumptech.glide.load.engine.g$a.a` @type ^`int`[] @kind object;
  #L3d15f8.  v1:= v3.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d15fc.  call temp:= `ordinal`(v1) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d1602.  v1:= temp;
  #L3d1604.  v0:= v0[v1];
  #L3d1608.  v1:= 1I;
  #L3d160a.  if v0 == v1 then goto L3d165c;
  #L3d160e.  v1:= 2I;
  #L3d1610.  if v0 == v1 then goto L3d1654;
  #L3d1614.  v1:= 3I;
  #L3d1616.  if v0 != v1 then goto L3d1622;
  #L3d161a.  call `e`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.e:()V` @kind direct;
  #L3d1620.  goto L3d167e;
  #L3d1622.  v0:= new `java.lang.IllegalStateException`;
  #L3d1626.  v1:= new `java.lang.StringBuilder`;
  #L3d162a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d1630.  v2:= "Unrecognized run reason: " @kind object;
  #L3d1634.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d163a.  v2:= v3.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d163e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d1644.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d164a.  v1:= temp @kind object;
  #L3d164c.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d1652.  throw v0;
  #L3d1654.  call `u`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.u:()V` @kind direct;
  #L3d165a.  goto L3d167e;
  #L3d165c.  v0:= `@@com.bumptech.glide.load.engine.g$h.INITIALIZE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d1660.  call temp:= `g`(v3, v0) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @kind direct;
  #L3d1666.  v0:= temp @kind object;
  #L3d1668.  v3.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` := v0 @kind object;
  #L3d166c.  call temp:= `f`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.f:()Lcom/bumptech/glide/load/engine/DataFetcherGenerator;` @kind direct;
  #L3d1672.  v0:= temp @kind object;
  #L3d1674.  v3.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` := v0 @kind object;
  #L3d1678.  call `u`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.u:()V` @kind direct;
  #L3d167e.  return @kind void;
}
procedure `void` `x`(`com.bumptech.glide.load.engine.g` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.x:()V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d1690.  v0:= v3.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3d1694.  call `throwIfRecycled`(v0) @signature `Lcom/bumptech/glide/util/pool/StateVerifier;.throwIfRecycled:()V` @kind virtual;
  #L3d169a.  v0:= v3.`com.bumptech.glide.load.engine.g.D` @type ^`boolean` @kind boolean;
  #L3d169e.  v1:= 1I;
  #L3d16a0.  if v0 == 0 then goto L3d16e2;
  #L3d16a4.  v0:= v3.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d16a8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3d16ae.  v0:= temp;
  #L3d16b0.  if v0 == 0 then goto L3d16b8;
  #L3d16b4.  v0:= 0I;
  #L3d16b6.  goto L3d16d2;
  #L3d16b8.  v0:= v3.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d16bc.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d16c2.  v2:= temp;
  #L3d16c4.  v2:= v2 - v1 @kind int;
  #L3d16c6.  call temp:= `get`(v0, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d16cc.  v0:= temp @kind object;
  #L3d16ce.  v0:= (`java.lang.Throwable`) v0 @kind object;
  #L3d16d2.  v1:= new `java.lang.IllegalStateException`;
  #L3d16d6.  v2:= "Already notified" @kind object;
  #L3d16da.  call `<init>`(v1, v2, v0) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3d16e0.  throw v1;
  #L3d16e2.  v3.`com.bumptech.glide.load.engine.g.D` @type ^`boolean` := v1 @kind boolean;
  #L3d16e6.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.a:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0f68.  v0:= 1I;
  #L3d0f6a.  v1.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` := v0 @kind boolean;
  #L3d0f6e.  v0:= v1.`com.bumptech.glide.load.engine.g.C` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator` @kind object;
  #L3d0f72.  if v0 == 0 then goto L3d0f7c;
  #L3d0f76.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator;.cancel:()V` @kind interface;
  #L3d0f7c.  return @kind void;
}
procedure `int` `b`(`com.bumptech.glide.load.engine.g` v2 @kind this, `com.bumptech.glide.load.engine.g` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Lcom/bumptech/glide/load/engine/g;)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d0e90.  call temp:= `i`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.i:()I` @kind direct;
  #L3d0e96.  v0:= temp;
  #L3d0e98.  call temp:= `i`(v3) @signature `Lcom/bumptech/glide/load/engine/g;.i:()I` @kind direct;
  #L3d0e9e.  v1:= temp;
  #L3d0ea0.  v0:= v0 - v1 @kind int;
  #L3d0ea2.  if v0 != 0 then goto L3d0eb0;
  #L3d0ea6.  v0:= v2.`com.bumptech.glide.load.engine.g.q` @type ^`int`;
  #L3d0eaa.  v3:= v3.`com.bumptech.glide.load.engine.g.q` @type ^`int`;
  #L3d0eae.  v0:= v0 - v3 @kind int;
  #L3d0eb0.  return v0;
}
procedure `int` `compareTo`(`com.bumptech.glide.load.engine.g` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.compareTo:(Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3d0ec4.  v1:= (`com.bumptech.glide.load.engine.g`) v1 @kind object;
  #L3d0ec8.  call temp:= `b`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/g;.b:(Lcom/bumptech/glide/load/engine/g;)I` @kind virtual;
  #L3d0ece.  v1:= temp;
  #L3d0ed0.  return v1;
}
procedure `com.bumptech.glide.util.pool.StateVerifier` `getVerifier`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.getVerifier:()Lcom/bumptech/glide/util/pool/StateVerifier;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d0e78.  v0:= v1.`com.bumptech.glide.load.engine.g.c` @type ^`com.bumptech.glide.util.pool.StateVerifier` @kind object;
  #L3d0e7c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.g` `j`(`com.bumptech.glide.load.engine.g` v16 @kind this, `com.bumptech.glide.GlideContext` v17 @kind object, `java.lang.Object` v18 @kind object, `com.bumptech.glide.load.engine.j` v19 @kind object, `com.bumptech.glide.load.Key` v20 @kind object, `int` v21 , `int` v22 , `java.lang.Class` v23 @kind object, `java.lang.Class` v24 @kind object, `com.bumptech.glide.Priority` v25 @kind object, `com.bumptech.glide.load.engine.DiskCacheStrategy` v26 @kind object, `java.util.Map` v27 @kind object, `boolean` v28 , `boolean` v29 , `boolean` v30 , `com.bumptech.glide.load.Options` v31 @kind object, `com.bumptech.glide.load.engine.g$b` v32 @kind object, `int` v33 ) @signature `Lcom/bumptech/glide/load/engine/g;.j:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/engine/j;Lcom/bumptech/glide/load/Key;IILjava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/util/Map;ZZZLcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/engine/g$b;I)Lcom/bumptech/glide/load/engine/g;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;

  #L3d0a50.  v0:= v16 @kind object;
  #L3d0a54.  v1:= v0.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0a58.  v15:= v0.`com.bumptech.glide.load.engine.g.d` @type ^`com.bumptech.glide.load.engine.g$e` @kind object;
  #L3d0a5c.  v2:= v17 @kind object;
  #L3d0a60.  v3:= v18 @kind object;
  #L3d0a64.  v4:= v20 @kind object;
  #L3d0a68.  v5:= v21;
  #L3d0a6c.  v6:= v22;
  #L3d0a70.  v7:= v26 @kind object;
  #L3d0a74.  v8:= v23 @kind object;
  #L3d0a78.  v9:= v24 @kind object;
  #L3d0a7c.  v10:= v25 @kind object;
  #L3d0a80.  v11:= v31 @kind object;
  #L3d0a84.  v12:= v27 @kind object;
  #L3d0a88.  v13:= v28;
  #L3d0a8c.  v14:= v29;
  #L3d0a90.  call `u`(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15) @signature `Lcom/bumptech/glide/load/engine/f;.u:(Lcom/bumptech/glide/GlideContext;Ljava/lang/Object;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/engine/DiskCacheStrategy;Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/Options;Ljava/util/Map;ZZLcom/bumptech/glide/load/engine/g$e;)V` @kind virtual;
  #L3d0a96.  v1:= v17 @kind object;
  #L3d0a9a.  v0.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.GlideContext` := v1 @kind object;
  #L3d0a9e.  v1:= v20 @kind object;
  #L3d0aa2.  v0.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3d0aa6.  v1:= v25 @kind object;
  #L3d0aaa.  v0.`com.bumptech.glide.load.engine.g.j` @type ^`com.bumptech.glide.Priority` := v1 @kind object;
  #L3d0aae.  v1:= v19 @kind object;
  #L3d0ab2.  v0.`com.bumptech.glide.load.engine.g.k` @type ^`com.bumptech.glide.load.engine.j` := v1 @kind object;
  #L3d0ab6.  v1:= v21;
  #L3d0aba.  v0.`com.bumptech.glide.load.engine.g.l` @type ^`int` := v1;
  #L3d0abe.  v1:= v22;
  #L3d0ac2.  v0.`com.bumptech.glide.load.engine.g.m` @type ^`int` := v1;
  #L3d0ac6.  v1:= v26 @kind object;
  #L3d0aca.  v0.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` := v1 @kind object;
  #L3d0ace.  v1:= v30;
  #L3d0ad2.  v0.`com.bumptech.glide.load.engine.g.u` @type ^`boolean` := v1 @kind boolean;
  #L3d0ad6.  v1:= v31 @kind object;
  #L3d0ada.  v0.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` := v1 @kind object;
  #L3d0ade.  v1:= v32 @kind object;
  #L3d0ae2.  v0.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` := v1 @kind object;
  #L3d0ae6.  v1:= v33;
  #L3d0aea.  v0.`com.bumptech.glide.load.engine.g.q` @type ^`int` := v1;
  #L3d0aee.  v1:= `@@com.bumptech.glide.load.engine.g$g.INITIALIZE` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d0af2.  v0.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` := v1 @kind object;
  #L3d0af6.  v1:= v18 @kind object;
  #L3d0afa.  v0.`com.bumptech.glide.load.engine.g.v` @type ^`java.lang.Object` := v1 @kind object;
  #L3d0afe.  return v0 @kind object;
}
procedure `void` `onDataFetcherFailed`(`com.bumptech.glide.load.engine.g` v2 @kind this, `com.bumptech.glide.load.Key` v3 @kind object, `java.lang.Exception` v4 @kind object, `com.bumptech.glide.load.data.DataFetcher` v5 @kind object, `com.bumptech.glide.load.DataSource` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d123c.  call `cleanup`(v5) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d1242.  v0:= new `com.bumptech.glide.load.engine.GlideException`;
  #L3d1246.  v1:= "Fetching data failed" @kind object;
  #L3d124a.  call `<init>`(v0, v1, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.<init>:(Ljava/lang/String;Ljava/lang/Throwable;)V` @kind direct;
  #L3d1250.  call temp:= `getDataClass`(v5) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L3d1256.  v4:= temp @kind object;
  #L3d1258.  call `g`(v0, v3, v6, v4) @signature `Lcom/bumptech/glide/load/engine/GlideException;.g:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/DataSource;Ljava/lang/Class;)V` @kind virtual;
  #L3d125e.  v3:= v2.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d1262.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d1268.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d126e.  v3:= temp @kind object;
  #L3d1270.  v4:= v2.`com.bumptech.glide.load.engine.g.w` @type ^`java.lang.Thread` @kind object;
  #L3d1274.  if v3 == v4 then goto L3d128c;
  #L3d1278.  v3:= `@@com.bumptech.glide.load.engine.g$g.SWITCH_TO_SOURCE_SERVICE` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d127c.  v2.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` := v3 @kind object;
  #L3d1280.  v3:= v2.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` @kind object;
  #L3d1284.  call `a`(v3, v2) @signature `Lcom/bumptech/glide/load/engine/g$b;.a:(Lcom/bumptech/glide/load/engine/g;)V` @kind interface;
  #L3d128a.  goto L3d1292;
  #L3d128c.  call `u`(v2) @signature `Lcom/bumptech/glide/load/engine/g;.u:()V` @kind direct;
  #L3d1292.  return @kind void;
}
procedure `void` `onDataFetcherReady`(`com.bumptech.glide.load.engine.g` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.data.DataFetcher` v3 @kind object, `com.bumptech.glide.load.DataSource` v4 @kind object, `com.bumptech.glide.load.Key` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @AccessFlag PUBLIC {
    temp;

  #L3d12a4.  v0.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3d12a8.  v0.`com.bumptech.glide.load.engine.g.z` @type ^`java.lang.Object` := v2 @kind object;
  #L3d12ac.  v0.`com.bumptech.glide.load.engine.g.B` @type ^`com.bumptech.glide.load.data.DataFetcher` := v3 @kind object;
  #L3d12b0.  v0.`com.bumptech.glide.load.engine.g.A` @type ^`com.bumptech.glide.load.DataSource` := v4 @kind object;
  #L3d12b4.  v0.`com.bumptech.glide.load.engine.g.y` @type ^`com.bumptech.glide.load.Key` := v5 @kind object;
  #L3d12b8.  call temp:= `currentThread`() @signature `Ljava/lang/Thread;.currentThread:()Ljava/lang/Thread;` @kind static;
  #L3d12be.  v1:= temp @kind object;
  #L3d12c0.  v2:= v0.`com.bumptech.glide.load.engine.g.w` @type ^`java.lang.Thread` @kind object;
  #L3d12c4.  if v1 == v2 then goto L3d12dc;
  #L3d12c8.  v1:= `@@com.bumptech.glide.load.engine.g$g.DECODE_DATA` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d12cc.  v0.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` := v1 @kind object;
  #L3d12d0.  v1:= v0.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` @kind object;
  #L3d12d4.  call `a`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/g$b;.a:(Lcom/bumptech/glide/load/engine/g;)V` @kind interface;
  #L3d12da.  goto L3d12f2;
  #L3d12dc.  v1:= "DecodeJob.decodeFromRetrievedData" @kind object;
  #L3d12e0.  call `beginSection`(v1) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L3d12e6.  call `e`(v0) @signature `Lcom/bumptech/glide/load/engine/g;.e:()V` @kind direct;
  #L3d12ec.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d12f2.  return @kind void;
  #L3d12f4.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d12f6.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d12fc.  throw v1;
  catch `java.lang.Throwable` @[L3d12e6..L3d12ec] goto L3d12f4;
}
procedure `com.bumptech.glide.load.engine.Resource` `r`(`com.bumptech.glide.load.engine.g` v11 @kind this, `com.bumptech.glide.load.DataSource` v12 @kind object, `com.bumptech.glide.load.engine.Resource` v13 @kind object) @signature `Lcom/bumptech/glide/load/engine/g;.r:(Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3d0c98.  call temp:= `get`(v13) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3d0c9e.  v0:= temp @kind object;
  #L3d0ca0.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d0ca6.  v8:= temp @kind object;
  #L3d0ca8.  v0:= `@@com.bumptech.glide.load.DataSource.RESOURCE_DISK_CACHE` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d0cac.  v1:= 0I;
  #L3d0cae.  if v12 == v0 then goto L3d0cd8;
  #L3d0cb2.  v0:= v11.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0cb6.  call temp:= `r`(v0, v8) @signature `Lcom/bumptech/glide/load/engine/f;.r:(Ljava/lang/Class;)Lcom/bumptech/glide/load/Transformation;` @kind virtual;
  #L3d0cbc.  v0:= temp @kind object;
  #L3d0cbe.  v2:= v11.`com.bumptech.glide.load.engine.g.h` @type ^`com.bumptech.glide.GlideContext` @kind object;
  #L3d0cc2.  v3:= v11.`com.bumptech.glide.load.engine.g.l` @type ^`int`;
  #L3d0cc6.  v4:= v11.`com.bumptech.glide.load.engine.g.m` @type ^`int`;
  #L3d0cca.  call temp:= `transform`(v0, v2, v13, v3, v4) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3d0cd0.  v2:= temp @kind object;
  #L3d0cd2.  v7:= v0 @kind object;
  #L3d0cd4.  v0:= v2 @kind object;
  #L3d0cd6.  goto L3d0cdc;
  #L3d0cd8.  v0:= v13 @kind object;
  #L3d0cda.  v7:= v1 @kind object;
  #L3d0cdc.  call temp:= `equals`(v13, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d0ce2.  v2:= temp;
  #L3d0ce4.  if v2 != 0 then goto L3d0cee;
  #L3d0ce8.  call `recycle`(v13) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3d0cee.  v13:= v11.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0cf2.  call temp:= `v`(v13, v0) @signature `Lcom/bumptech/glide/load/engine/f;.v:(Lcom/bumptech/glide/load/engine/Resource;)Z` @kind virtual;
  #L3d0cf8.  v13:= temp;
  #L3d0cfa.  if v13 == 0 then goto L3d0d18;
  #L3d0cfe.  v13:= v11.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0d02.  call temp:= `n`(v13, v0) @signature `Lcom/bumptech/glide/load/engine/f;.n:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/ResourceEncoder;` @kind virtual;
  #L3d0d08.  v1:= temp @kind object;
  #L3d0d0a.  v13:= v11.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d0d0e.  call temp:= `getEncodeStrategy`(v1, v13) @signature `Lcom/bumptech/glide/load/ResourceEncoder;.getEncodeStrategy:(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;` @kind interface;
  #L3d0d14.  v13:= temp @kind object;
  #L3d0d16.  goto L3d0d1c;
  #L3d0d18.  v13:= `@@com.bumptech.glide.load.EncodeStrategy.NONE` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3d0d1c.  v10:= v1 @kind object;
  #L3d0d1e.  v1:= v11.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0d22.  v2:= v11.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0d26.  call temp:= `x`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/f;.x:(Lcom/bumptech/glide/load/Key;)Z` @kind virtual;
  #L3d0d2c.  v1:= temp;
  #L3d0d2e.  v2:= 1I;
  #L3d0d30.  v1:= v1 ^~ v2 @kind int;
  #L3d0d32.  v3:= v11.`com.bumptech.glide.load.engine.g.n` @type ^`com.bumptech.glide.load.engine.DiskCacheStrategy` @kind object;
  #L3d0d36.  call temp:= `isResourceCacheable`(v3, v1, v12, v13) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.isResourceCacheable:(ZLcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/EncodeStrategy;)Z` @kind virtual;
  #L3d0d3c.  v12:= temp;
  #L3d0d3e.  if v12 == 0 then goto L3d0dfe;
  #L3d0d42.  if v10 == 0 then goto L3d0de2;
  #L3d0d46.  v12:= `@@com.bumptech.glide.load.engine.g$a.c` @type ^`int`[] @kind object;
  #L3d0d4a.  call temp:= `ordinal`(v13) @signature `Ljava/lang/Enum;.ordinal:()I` @kind virtual;
  #L3d0d50.  v1:= temp;
  #L3d0d52.  v12:= v12[v1];
  #L3d0d56.  if v12 == v2 then goto L3d0dbc;
  #L3d0d5a.  v1:= 2I;
  #L3d0d5c.  if v12 != v1 then goto L3d0d8e;
  #L3d0d60.  v12:= new `com.bumptech.glide.load.engine.p`;
  #L3d0d64.  v13:= v11.`com.bumptech.glide.load.engine.g.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d0d68.  call temp:= `b`(v13) @signature `Lcom/bumptech/glide/load/engine/f;.b:()Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;` @kind virtual;
  #L3d0d6e.  v2:= temp @kind object;
  #L3d0d70.  v3:= v11.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0d74.  v4:= v11.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0d78.  v5:= v11.`com.bumptech.glide.load.engine.g.l` @type ^`int`;
  #L3d0d7c.  v6:= v11.`com.bumptech.glide.load.engine.g.m` @type ^`int`;
  #L3d0d80.  v9:= v11.`com.bumptech.glide.load.engine.g.o` @type ^`com.bumptech.glide.load.Options` @kind object;
  #L3d0d84.  v1:= v12 @kind object;
  #L3d0d86.  call `<init>`(v1, v2, v3, v4, v5, v6, v7, v8, v9) @signature `Lcom/bumptech/glide/load/engine/p;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;IILcom/bumptech/glide/load/Transformation;Ljava/lang/Class;Lcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3d0d8c.  goto L3d0dce;
  #L3d0d8e.  v12:= new `java.lang.IllegalArgumentException`;
  #L3d0d92.  v0:= new `java.lang.StringBuilder`;
  #L3d0d96.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d0d9c.  v1:= "Unknown strategy: " @kind object;
  #L3d0da0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0da6.  call temp:= `append`(v0, v13) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d0dac.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d0db2.  v13:= temp @kind object;
  #L3d0db4.  call `<init>`(v12, v13) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d0dba.  throw v12;
  #L3d0dbc.  v12:= new `com.bumptech.glide.load.engine.d`;
  #L3d0dc0.  v13:= v11.`com.bumptech.glide.load.engine.g.x` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0dc4.  v1:= v11.`com.bumptech.glide.load.engine.g.i` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0dc8.  call `<init>`(v12, v13, v1) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;)V` @kind direct;
  #L3d0dce.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/n;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/n;` @kind static;
  #L3d0dd4.  v0:= temp @kind object;
  #L3d0dd6.  v13:= v11.`com.bumptech.glide.load.engine.g.f` @type ^`com.bumptech.glide.load.engine.g$d` @kind object;
  #L3d0dda.  call `d`(v13, v12, v10, v0) @signature `Lcom/bumptech/glide/load/engine/g$d;.d:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/ResourceEncoder;Lcom/bumptech/glide/load/engine/n;)V` @kind virtual;
  #L3d0de0.  goto L3d0dfe;
  #L3d0de2.  v12:= new `com.bumptech.glide.Registry$NoResultEncoderAvailableException`;
  #L3d0de6.  call temp:= `get`(v0) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3d0dec.  v13:= temp @kind object;
  #L3d0dee.  call temp:= `getClass`(v13) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d0df4.  v13:= temp @kind object;
  #L3d0df6.  call `<init>`(v12, v13) @signature `Lcom/bumptech/glide/Registry$NoResultEncoderAvailableException;.<init>:(Ljava/lang/Class;)V` @kind direct;
  #L3d0dfc.  throw v12;
  #L3d0dfe.  return v0 @kind object;
}
procedure `void` `reschedule`(`com.bumptech.glide.load.engine.g` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.reschedule:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1424.  v0:= `@@com.bumptech.glide.load.engine.g$g.SWITCH_TO_SOURCE_SERVICE` @type ^`com.bumptech.glide.load.engine.g$g` @kind object;
  #L3d1428.  v1.`com.bumptech.glide.load.engine.g.s` @type ^`com.bumptech.glide.load.engine.g$g` := v0 @kind object;
  #L3d142c.  v0:= v1.`com.bumptech.glide.load.engine.g.p` @type ^`com.bumptech.glide.load.engine.g$b` @kind object;
  #L3d1430.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/g$b;.a:(Lcom/bumptech/glide/load/engine/g;)V` @kind interface;
  #L3d1436.  return @kind void;
}
procedure `void` `run`(`com.bumptech.glide.load.engine.g` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.run:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d1448.  v0:= "DecodeJob" @kind object;
  #L3d144c.  v1:= v5.`com.bumptech.glide.load.engine.g.v` @type ^`java.lang.Object` @kind object;
  #L3d1450.  v2:= "DecodeJob#run(model=%s)" @kind object;
  #L3d1454.  call `beginSectionFormat`(v2, v1) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSectionFormat:(Ljava/lang/String;Ljava/lang/Object;)V` @kind static;
  #L3d145a.  v1:= v5.`com.bumptech.glide.load.engine.g.B` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d145e.  v2:= v5.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` @kind boolean;
  #L3d1462.  if v2 == 0 then goto L3d147e;
  #L3d1466.  call `o`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.o:()V` @kind direct;
  #L3d146c.  if v1 == 0 then goto L3d1476;
  #L3d1470.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d1476.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d147c.  return @kind void;
  #L3d147e.  call `w`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.w:()V` @kind direct;
  #L3d1484.  if v1 == 0 then goto L3d148e;
  #L3d1488.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d148e.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d1494.  return @kind void;
  #L3d1496.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1498.  v3:= 3I;
  #L3d149a.  call temp:= `isLoggable`(v0, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d14a0.  v3:= temp;
  #L3d14a2.  if v3 == 0 then goto L3d14e6;
  #L3d14a6.  v3:= new `java.lang.StringBuilder`;
  #L3d14aa.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d14b0.  v4:= "DecodeJob threw unexpectedly, isCancelled: " @kind object;
  #L3d14b4.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d14ba.  v4:= v5.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` @kind boolean;
  #L3d14be.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Z)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d14c4.  v4:= ", stage: " @kind object;
  #L3d14c8.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d14ce.  v4:= v5.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d14d2.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d14d8.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d14de.  v3:= temp @kind object;
  #L3d14e0.  call temp:= `d`(v0, v3, v2) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3d14e6.  v0:= v5.`com.bumptech.glide.load.engine.g.r` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d14ea.  v3:= `@@com.bumptech.glide.load.engine.g$h.ENCODE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d14ee.  if v0 == v3 then goto L3d1502;
  #L3d14f2.  v0:= v5.`com.bumptech.glide.load.engine.g.b` @type ^`java.util.List` @kind object;
  #L3d14f6.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3d14fc.  call `o`(v5) @signature `Lcom/bumptech/glide/load/engine/g;.o:()V` @kind direct;
  #L3d1502.  v0:= v5.`com.bumptech.glide.load.engine.g.E` @type ^`boolean` @kind boolean;
  #L3d1506.  if v0 != 0 then goto L3d150c;
  #L3d150a.  throw v2;
  #L3d150c.  throw v2;
  #L3d150e.  v0:= Exception @type ^`com.bumptech.glide.load.engine.b` @kind object;
  #L3d1510.  throw v0;
  #L3d1512.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1514.  if v1 == 0 then goto L3d151e;
  #L3d1518.  call `cleanup`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d151e.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d1524.  throw v0;
  catch `com.bumptech.glide.load.engine.b` @[L3d145e..L3d146c] goto L3d150e;
  catch `java.lang.Throwable` @[L3d145e..L3d146c] goto L3d1496;
  catch `com.bumptech.glide.load.engine.b` @[L3d147e..L3d1484] goto L3d150e;
  catch `java.lang.Throwable` @[L3d147e..L3d1484] goto L3d1496;
  catch `java.lang.Throwable` @[L3d149a..L3d1512] goto L3d1512;
}
procedure `void` `s`(`com.bumptech.glide.load.engine.g` v1 @kind this, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/engine/g;.s:(Z)V` @AccessFlag  {
    temp;
    v0;

  #L3d136c.  v0:= v1.`com.bumptech.glide.load.engine.g.g` @type ^`com.bumptech.glide.load.engine.g$f` @kind object;
  #L3d1370.  call temp:= `d`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/g$f;.d:(Z)Z` @kind virtual;
  #L3d1376.  v2:= temp;
  #L3d1378.  if v2 == 0 then goto L3d1382;
  #L3d137c.  call `t`(v1) @signature `Lcom/bumptech/glide/load/engine/g;.t:()V` @kind direct;
  #L3d1382.  return @kind void;
}
procedure `boolean` `y`(`com.bumptech.glide.load.engine.g` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/g;.y:()Z` @AccessFlag  {
    temp;
    v0;
    v1;

  #L3d08e4.  v0:= `@@com.bumptech.glide.load.engine.g$h.INITIALIZE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d08e8.  call temp:= `g`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/g;.g:(Lcom/bumptech/glide/load/engine/g$h;)Lcom/bumptech/glide/load/engine/g$h;` @kind direct;
  #L3d08ee.  v0:= temp @kind object;
  #L3d08f0.  v1:= `@@com.bumptech.glide.load.engine.g$h.RESOURCE_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d08f4.  if v0 == v1 then goto L3d0906;
  #L3d08f8.  v1:= `@@com.bumptech.glide.load.engine.g$h.DATA_CACHE` @type ^`com.bumptech.glide.load.engine.g$h` @kind object;
  #L3d08fc.  if v0 != v1 then goto L3d0902;
  #L3d0900.  goto L3d0906;
  #L3d0902.  v0:= 0I;
  #L3d0904.  goto L3d0908;
  #L3d0906.  v0:= 1I;
  #L3d0908.  return v0;
}
