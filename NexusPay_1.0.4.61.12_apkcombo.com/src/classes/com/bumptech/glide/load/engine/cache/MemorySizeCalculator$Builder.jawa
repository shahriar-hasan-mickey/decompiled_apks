record `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` @kind class @AccessFlag PUBLIC_FINAL {
  `android.content.Context` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.a` @AccessFlag FINAL;
  `android.app.ActivityManager` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @AccessFlag ;
  `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$b` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.c` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @AccessFlag ;
  `float` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @AccessFlag ;
  `int` `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @AccessFlag ;
}
global `int` `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @AccessFlag STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3d7ff8.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d7ffc.  v1:= 26I;
  #L3d8000.  if v0 >= v1 then goto L3d8008;
  #L3d8004.  v0:= 4I;
  #L3d8006.  goto L3d800a;
  #L3d8008.  v0:= 1I;
  #L3d800a.  `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @type ^`int` := v0;
  #L3d800e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind this, `android.content.Context` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.<init>:(Landroid/content/Context;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d8020.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d8026.  v0:= 2.0F;
  #L3d802a.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @type ^`float` := v0;
  #L3d802e.  v0:= `@@com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.i` @type ^`int`;
  #L3d8032.  v0:= (`float`) v0 @kind i2f;
  #L3d8034.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v0;
  #L3d8038.  v0:= 1053609165I;
  #L3d803e.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @type ^`float` := v0;
  #L3d8042.  v0:= 1051260355I;
  #L3d8048.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @type ^`float` := v0;
  #L3d804c.  v0:= 4194304I;
  #L3d8050.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @type ^`int` := v0;
  #L3d8054.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.a` @type ^`android.content.Context` := v2 @kind object;
  #L3d8058.  v0:= "activity" @kind object;
  #L3d805c.  call temp:= `getSystemService`(v2, v0) @signature `Landroid/content/Context;.getSystemService:(Ljava/lang/String;)Ljava/lang/Object;` @kind virtual;
  #L3d8062.  v0:= temp @kind object;
  #L3d8064.  v0:= (`android.app.ActivityManager`) v0 @kind object;
  #L3d8068.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @type ^`android.app.ActivityManager` := v0 @kind object;
  #L3d806c.  v0:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$a`;
  #L3d8070.  call temp:= `getResources`(v2) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3d8076.  v2:= temp @kind object;
  #L3d8078.  call temp:= `getDisplayMetrics`(v2) @signature `Landroid/content/res/Resources;.getDisplayMetrics:()Landroid/util/DisplayMetrics;` @kind virtual;
  #L3d807e.  v2:= temp @kind object;
  #L3d8080.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$a;.<init>:(Landroid/util/DisplayMetrics;)V` @kind direct;
  #L3d8086.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.c` @type ^`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$b` := v0 @kind object;
  #L3d808a.  v2:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3d808e.  v0:= 26I;
  #L3d8092.  if v2 < v0 then goto L3d80ac;
  #L3d8096.  v2:= v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.b` @type ^`android.app.ActivityManager` @kind object;
  #L3d809a.  call temp:= `b`(v2) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.b:(Landroid/app/ActivityManager;)Z` @kind static;
  #L3d80a0.  v2:= temp;
  #L3d80a2.  if v2 == 0 then goto L3d80ac;
  #L3d80a6.  v2:= 0I;
  #L3d80a8.  v1.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v2;
  #L3d80ac.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator` `build`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.build:()Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d7eec.  v0:= new `com.bumptech.glide.load.engine.cache.MemorySizeCalculator`;
  #L3d7ef0.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator;.<init>:(Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;)V` @kind direct;
  #L3d7ef6.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setArrayPoolSize`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v0 @kind this, `int` v1 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setArrayPoolSize:(I)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;

  #L3d7f08.  v0.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.h` @type ^`int` := v1;
  #L3d7f0c.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setBitmapPoolScreens`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setBitmapPoolScreens:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7f20.  v0:= 0I;
  #L3d7f22.  v0:= fcmpl(v3, v0);
  #L3d7f26.  if v0 < 0 then goto L3d7f2e;
  #L3d7f2a.  v0:= 1I;
  #L3d7f2c.  goto L3d7f30;
  #L3d7f2e.  v0:= 0I;
  #L3d7f30.  v1:= "Bitmap pool screens must be greater than or equal to 0" @kind object;
  #L3d7f34.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3d7f3a.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.e` @type ^`float` := v3;
  #L3d7f3e.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setLowMemoryMaxSizeMultiplier`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setLowMemoryMaxSizeMultiplier:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7f50.  v0:= 0I;
  #L3d7f52.  v0:= fcmpl(v3, v0);
  #L3d7f56.  if v0 < 0 then goto L3d7f6a;
  #L3d7f5a.  v0:= 1.0F;
  #L3d7f5e.  v0:= fcmpg(v3, v0);
  #L3d7f62.  if v0 > 0 then goto L3d7f6a;
  #L3d7f66.  v0:= 1I;
  #L3d7f68.  goto L3d7f6c;
  #L3d7f6a.  v0:= 0I;
  #L3d7f6c.  v1:= "Low memory max size multiplier must be between 0 and 1" @kind object;
  #L3d7f70.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3d7f76.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.g` @type ^`float` := v3;
  #L3d7f7a.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setMaxSizeMultiplier`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setMaxSizeMultiplier:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7f8c.  v0:= 0I;
  #L3d7f8e.  v0:= fcmpl(v3, v0);
  #L3d7f92.  if v0 < 0 then goto L3d7fa6;
  #L3d7f96.  v0:= 1.0F;
  #L3d7f9a.  v0:= fcmpg(v3, v0);
  #L3d7f9e.  if v0 > 0 then goto L3d7fa6;
  #L3d7fa2.  v0:= 1I;
  #L3d7fa4.  goto L3d7fa8;
  #L3d7fa6.  v0:= 0I;
  #L3d7fa8.  v1:= "Size multiplier must be between 0 and 1" @kind object;
  #L3d7fac.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3d7fb2.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.f` @type ^`float` := v3;
  #L3d7fb6.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` `setMemoryCacheScreens`(`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder` v2 @kind this, `float` v3 ) @signature `Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;.setMemoryCacheScreens:(F)Lcom/bumptech/glide/load/engine/cache/MemorySizeCalculator$Builder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d7fc8.  v0:= 0I;
  #L3d7fca.  v0:= fcmpl(v3, v0);
  #L3d7fce.  if v0 < 0 then goto L3d7fd6;
  #L3d7fd2.  v0:= 1I;
  #L3d7fd4.  goto L3d7fd8;
  #L3d7fd6.  v0:= 0I;
  #L3d7fd8.  v1:= "Memory cache screens must be greater than or equal to 0" @kind object;
  #L3d7fdc.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3d7fe2.  v2.`com.bumptech.glide.load.engine.cache.MemorySizeCalculator$Builder.d` @type ^`float` := v3;
  #L3d7fe6.  return v2 @kind object;
}
