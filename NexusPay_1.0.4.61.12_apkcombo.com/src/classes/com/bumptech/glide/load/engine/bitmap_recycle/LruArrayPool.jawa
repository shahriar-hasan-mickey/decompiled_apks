record `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.d` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d5d08.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d5d0e.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d`;
  #L3d5d12.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.<init>:()V` @kind direct;
  #L3d5d18.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` := v0 @kind object;
  #L3d5d1c.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b`;
  #L3d5d20.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.<init>:()V` @kind direct;
  #L3d5d26.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v0 @kind object;
  #L3d5d2a.  v0:= new `java.util.HashMap`;
  #L3d5d2e.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d5d34.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` := v0 @kind object;
  #L3d5d38.  v0:= new `java.util.HashMap`;
  #L3d5d3c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d5d42.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` := v0 @kind object;
  #L3d5d46.  v0:= 4194304I;
  #L3d5d4a.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int` := v0;
  #L3d5d4e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.<init>:(I)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3d5d60.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d5d66.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d`;
  #L3d5d6a.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.<init>:()V` @kind direct;
  #L3d5d70.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` := v0 @kind object;
  #L3d5d74.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b`;
  #L3d5d78.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.<init>:()V` @kind direct;
  #L3d5d7e.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` := v0 @kind object;
  #L3d5d82.  v0:= new `java.util.HashMap`;
  #L3d5d86.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d5d8c.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` := v0 @kind object;
  #L3d5d90.  v0:= new `java.util.HashMap`;
  #L3d5d94.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d5d9a.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` := v0 @kind object;
  #L3d5d9e.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int` := v2;
  #L3d5da2.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v3 @kind this, `int` v4 , `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d5de4.  call temp:= `h`(v3, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3d5dea.  v5:= temp @kind object;
  #L3d5dec.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5df2.  v0:= temp @kind object;
  #L3d5df4.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5dfa.  v0:= temp @kind object;
  #L3d5dfc.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3d5e00.  if v0 == 0 then goto L3d5e44;
  #L3d5e04.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d5e0a.  v1:= temp;
  #L3d5e0c.  v2:= 1I;
  #L3d5e0e.  if v1 != v2 then goto L3d5e22;
  #L3d5e12.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5e18.  v4:= temp @kind object;
  #L3d5e1a.  call temp:= `remove`(v5, v4) @signature `Ljava/util/NavigableMap;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5e20.  goto L3d5e42;
  #L3d5e22.  call temp:= `valueOf`(v4) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5e28.  v4:= temp @kind object;
  #L3d5e2a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d5e30.  v0:= temp;
  #L3d5e32.  v0:= v0 - v2 @kind int;
  #L3d5e34.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5e3a.  v0:= temp @kind object;
  #L3d5e3c.  call temp:= `put`(v5, v4, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5e42.  return @kind void;
  #L3d5e44.  v5:= new `java.lang.NullPointerException`;
  #L3d5e48.  v0:= new `java.lang.StringBuilder`;
  #L3d5e4c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5e52.  v1:= "Tried to decrement empty size, size: " @kind object;
  #L3d5e56.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e5c.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e62.  v4:= ", this: " @kind object;
  #L3d5e66.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e6c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5e72.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5e78.  v4:= temp @kind object;
  #L3d5e7a.  call `<init>`(v5, v4) @signature `Ljava/lang/NullPointerException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d5e80.  throw v5;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.b:()V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5e94.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3d5e98.  call `c`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3d5e9e.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v5 @kind this, `int` v6 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d5eb0.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3d5eb4.  if v0 <= v6 then goto L3d5f56;
  #L3d5eb8.  v0:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d5ebc.  call temp:= `f`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.f:()Ljava/lang/Object;` @kind virtual;
  #L3d5ec2.  v0:= temp @kind object;
  #L3d5ec4.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3d5eca.  call temp:= `d`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.d:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3d5ed0.  v1:= temp @kind object;
  #L3d5ed2.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3d5ed6.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5edc.  v3:= temp;
  #L3d5ede.  call temp:= `getElementSizeInBytes`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3d5ee4.  v4:= temp;
  #L3d5ee6.  v3:= v3 * v4 @kind int;
  #L3d5eea.  v2:= v2 - v3 @kind int;
  #L3d5eec.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v2;
  #L3d5ef0.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5ef6.  v2:= temp;
  #L3d5ef8.  call temp:= `getClass`(v0) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d5efe.  v3:= temp @kind object;
  #L3d5f00.  call `a`(v5, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @kind direct;
  #L3d5f06.  call temp:= `getTag`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3d5f0c.  v2:= temp @kind object;
  #L3d5f0e.  v3:= 2I;
  #L3d5f10.  call temp:= `isLoggable`(v2, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d5f16.  v2:= temp;
  #L3d5f18.  if v2 == 0 then goto L3d5eb0;
  #L3d5f1c.  call temp:= `getTag`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3d5f22.  v2:= temp @kind object;
  #L3d5f24.  v3:= new `java.lang.StringBuilder`;
  #L3d5f28.  call `<init>`(v3) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5f2e.  v4:= "evicted: " @kind object;
  #L3d5f32.  call temp:= `append`(v3, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5f38.  call temp:= `getArrayLength`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5f3e.  v0:= temp;
  #L3d5f40.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5f46.  call temp:= `toString`(v3) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5f4c.  v0:= temp @kind object;
  #L3d5f4e.  call temp:= `v`(v2, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d5f54.  goto L3d5eb0;
  #L3d5f56.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.d:(Ljava/lang/Object;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;

  #L3d5a78.  call temp:= `getClass`(v1) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d5a7e.  v1:= temp @kind object;
  #L3d5a80.  call temp:= `e`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3d5a86.  v1:= temp @kind object;
  #L3d5a88.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.bitmap_recycle.a` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d5a9c.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` @kind object;
  #L3d5aa0.  call temp:= `get`(v0, v4) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5aa6.  v0:= temp @kind object;
  #L3d5aa8.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.a`) v0 @kind object;
  #L3d5aac.  if v0 != 0 then goto L3d5b28;
  #L3d5ab0.  v0:= constclass @type ^`int`[] @kind object;
  #L3d5ab4.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d5aba.  v0:= temp;
  #L3d5abc.  if v0 == 0 then goto L3d5acc;
  #L3d5ac0.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.IntegerArrayAdapter`;
  #L3d5ac4.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/IntegerArrayAdapter;.<init>:()V` @kind direct;
  #L3d5aca.  goto L3d5ae6;
  #L3d5acc.  v0:= constclass @type ^`byte`[] @kind object;
  #L3d5ad0.  call temp:= `equals`(v4, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d5ad6.  v0:= temp;
  #L3d5ad8.  if v0 == 0 then goto L3d5af2;
  #L3d5adc.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.ByteArrayAdapter`;
  #L3d5ae0.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ByteArrayAdapter;.<init>:()V` @kind direct;
  #L3d5ae6.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.d` @type ^`java.util.Map` @kind object;
  #L3d5aea.  call temp:= `put`(v1, v4, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5af0.  goto L3d5b28;
  #L3d5af2.  v0:= new `java.lang.IllegalArgumentException`;
  #L3d5af6.  v1:= new `java.lang.StringBuilder`;
  #L3d5afa.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5b00.  v2:= "No array pool found for: " @kind object;
  #L3d5b04.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5b0a.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L3d5b10.  v4:= temp @kind object;
  #L3d5b12.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5b18.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5b1e.  v4:= temp @kind object;
  #L3d5b20.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d5b26.  throw v0;
  #L3d5b28.  return v0 @kind object;
}
procedure `java.lang.Object` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.f:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5bb8.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d5bbc.  call temp:= `a`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)Ljava/lang/Object;` @kind virtual;
  #L3d5bc2.  v2:= temp @kind object;
  #L3d5bc4.  return v2 @kind object;
}
procedure `java.lang.Object` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v5 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a` v6 @kind object, `java.lang.Class` v7 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d5c14.  call temp:= `e`(v5, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3d5c1a.  v0:= temp @kind object;
  #L3d5c1c.  call temp:= `f`(v5, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.f:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;)Ljava/lang/Object;` @kind direct;
  #L3d5c22.  v1:= temp @kind object;
  #L3d5c24.  if v1 == 0 then goto L3d5c54;
  #L3d5c28.  v2:= v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3d5c2c.  call temp:= `getArrayLength`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5c32.  v3:= temp;
  #L3d5c34.  call temp:= `getElementSizeInBytes`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3d5c3a.  v4:= temp;
  #L3d5c3c.  v3:= v3 * v4 @kind int;
  #L3d5c40.  v2:= v2 - v3 @kind int;
  #L3d5c42.  v5.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v2;
  #L3d5c46.  call temp:= `getArrayLength`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5c4c.  v2:= temp;
  #L3d5c4e.  call `a`(v5, v2, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.a:(ILjava/lang/Class;)V` @kind direct;
  #L3d5c54.  if v1 != 0 then goto L3d5cb8;
  #L3d5c58.  call temp:= `getTag`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3d5c5e.  v7:= temp @kind object;
  #L3d5c60.  v1:= 2I;
  #L3d5c62.  call temp:= `isLoggable`(v7, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d5c68.  v7:= temp;
  #L3d5c6a.  if v7 == 0 then goto L3d5cac;
  #L3d5c6e.  call temp:= `getTag`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getTag:()Ljava/lang/String;` @kind interface;
  #L3d5c74.  v7:= temp @kind object;
  #L3d5c76.  v1:= new `java.lang.StringBuilder`;
  #L3d5c7a.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d5c80.  v2:= "Allocated " @kind object;
  #L3d5c84.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5c8a.  v2:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5c8e.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5c94.  v2:= " bytes" @kind object;
  #L3d5c98.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5c9e.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5ca4.  v1:= temp @kind object;
  #L3d5ca6.  call temp:= `v`(v7, v1) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d5cac.  v6:= v6.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5cb0.  call temp:= `newArray`(v0, v6) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.newArray:(I)Ljava/lang/Object;` @kind interface;
  #L3d5cb6.  v1:= temp @kind object;
  #L3d5cb8.  return v1 @kind object;
}
procedure `java.util.NavigableMap` `h`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d5ccc.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` @kind object;
  #L3d5cd0.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5cd6.  v0:= temp @kind object;
  #L3d5cd8.  v0:= (`java.util.NavigableMap`) v0 @kind object;
  #L3d5cdc.  if v0 != 0 then goto L3d5cf4;
  #L3d5ce0.  v0:= new `java.util.TreeMap`;
  #L3d5ce4.  call `<init>`(v0) @signature `Ljava/util/TreeMap;.<init>:()V` @kind direct;
  #L3d5cea.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.c` @type ^`java.util.Map` @kind object;
  #L3d5cee.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5cf4.  return v0 @kind object;
}
procedure `boolean` `i`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.i:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d59ec.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3d59f0.  if v0 == 0 then goto L3d5a06;
  #L3d59f4.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3d59f8.  v1:= v1 / v0 @kind int;
  #L3d59fa.  v0:= 2I;
  #L3d59fc.  if v1 < v0 then goto L3d5a02;
  #L3d5a00.  goto L3d5a06;
  #L3d5a02.  v0:= 0I;
  #L3d5a04.  goto L3d5a08;
  #L3d5a06.  v0:= 1I;
  #L3d5a08.  return v0;
}
procedure `boolean` `j`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.j:(I)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5a1c.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3d5a20.  v0:= v0 / 2;
  #L3d5a24.  if v2 > v0 then goto L3d5a2c;
  #L3d5a28.  v2:= 1I;
  #L3d5a2a.  goto L3d5a2e;
  #L3d5a2c.  v2:= 0I;
  #L3d5a2e.  return v2;
}
procedure `boolean` `k`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 , `java.lang.Integer` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.k:(ILjava/lang/Integer;)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d5a40.  if v3 == 0 then goto L3d5a64;
  #L3d5a44.  call temp:= `i`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.i:()Z` @kind direct;
  #L3d5a4a.  v0:= temp;
  #L3d5a4c.  if v0 != 0 then goto L3d5a60;
  #L3d5a50.  call temp:= `intValue`(v3) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d5a56.  v3:= temp;
  #L3d5a58.  v2:= v2 * 8;
  #L3d5a5c.  if v3 > v2 then goto L3d5a64;
  #L3d5a60.  v2:= 1I;
  #L3d5a62.  goto L3d5a66;
  #L3d5a64.  v2:= 0I;
  #L3d5a66.  return v2;
}
procedure `void` `clearMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.clearMemory:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5db4.  @monitorenter v1
  #L3d5db6.  v0:= 0I;
  #L3d5db8.  call `c`(v1, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3d5dbe.  @monitorexit v1
  #L3d5dc0.  return @kind void;
  #L3d5dc2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d5dc4.  @monitorexit v1
  #L3d5dc6.  throw v0;
  catch `java.lang.Throwable` @[L3d5db8..L3d5dbe] goto L3d5dc2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v2 @kind this, `int` v3 , `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5b3c.  @monitorenter v2
  #L3d5b3e.  call temp:= `h`(v2, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3d5b44.  v0:= temp @kind object;
  #L3d5b46.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5b4c.  v1:= temp @kind object;
  #L3d5b4e.  call temp:= `ceilingKey`(v0, v1) @signature `Ljava/util/NavigableMap;.ceilingKey:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5b54.  v0:= temp @kind object;
  #L3d5b56.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3d5b5a.  call temp:= `k`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.k:(ILjava/lang/Integer;)Z` @kind direct;
  #L3d5b60.  v1:= temp;
  #L3d5b62.  if v1 == 0 then goto L3d5b7c;
  #L3d5b66.  v3:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3d5b6a.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d5b70.  v0:= temp;
  #L3d5b72.  call temp:= `e`(v3, v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3d5b78.  v3:= temp @kind object;
  #L3d5b7a.  goto L3d5b88;
  #L3d5b7c.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3d5b80.  call temp:= `e`(v0, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3d5b86.  v3:= temp @kind object;
  #L3d5b88.  call temp:= `g`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3d5b8e.  v3:= temp @kind object;
  #L3d5b90.  @monitorexit v2
  #L3d5b92.  return v3 @kind object;
  #L3d5b94.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d5b96.  @monitorexit v2
  #L3d5b98.  throw v3;
  catch `java.lang.Throwable` @[L3d5b3e..L3d5b90] goto L3d5b94;
}
procedure `java.lang.Object` `getExact`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 , `java.lang.Class` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.getExact:(ILjava/lang/Class;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d5bd8.  @monitorenter v1
  #L3d5bda.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3d5bde.  call temp:= `e`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3d5be4.  v2:= temp @kind object;
  #L3d5be6.  call temp:= `g`(v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;Ljava/lang/Class;)Ljava/lang/Object;` @kind direct;
  #L3d5bec.  v2:= temp @kind object;
  #L3d5bee.  @monitorexit v1
  #L3d5bf0.  return v2 @kind object;
  #L3d5bf2.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d5bf4.  @monitorexit v1
  #L3d5bf6.  throw v2;
  catch `java.lang.Throwable` @[L3d5bda..L3d5bee] goto L3d5bf2;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v4 @kind this, `java.lang.Object` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d5f68.  @monitorenter v4
  #L3d5f6a.  call temp:= `getClass`(v5) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L3d5f70.  v0:= temp @kind object;
  #L3d5f72.  call temp:= `e`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.e:(Ljava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/a;` @kind direct;
  #L3d5f78.  v1:= temp @kind object;
  #L3d5f7a.  call temp:= `getArrayLength`(v1, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getArrayLength:(Ljava/lang/Object;)I` @kind interface;
  #L3d5f80.  v2:= temp;
  #L3d5f82.  call temp:= `getElementSizeInBytes`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/a;.getElementSizeInBytes:()I` @kind interface;
  #L3d5f88.  v1:= temp;
  #L3d5f8a.  v1:= v1 * v2 @kind int;
  #L3d5f8e.  call temp:= `j`(v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.j:(I)Z` @kind direct;
  #L3d5f94.  v3:= temp;
  #L3d5f96.  if v3 != 0 then goto L3d5f9e;
  #L3d5f9a.  @monitorexit v4
  #L3d5f9c.  return @kind void;
  #L3d5f9e.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$b` @kind object;
  #L3d5fa2.  call temp:= `e`(v3, v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$b;.e:(ILjava/lang/Class;)Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool$a;` @kind virtual;
  #L3d5fa8.  v2:= temp @kind object;
  #L3d5faa.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d` @kind object;
  #L3d5fae.  call `d`(v3, v2, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;Ljava/lang/Object;)V` @kind virtual;
  #L3d5fb4.  call temp:= `h`(v4, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.h:(Ljava/lang/Class;)Ljava/util/NavigableMap;` @kind direct;
  #L3d5fba.  v5:= temp @kind object;
  #L3d5fbc.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5fc0.  call temp:= `valueOf`(v0) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5fc6.  v0:= temp @kind object;
  #L3d5fc8.  call temp:= `get`(v5, v0) @signature `Ljava/util/NavigableMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5fce.  v0:= temp @kind object;
  #L3d5fd0.  v0:= (`java.lang.Integer`) v0 @kind object;
  #L3d5fd4.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool$a.b` @type ^`int`;
  #L3d5fd8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5fde.  v2:= temp @kind object;
  #L3d5fe0.  v3:= 1I;
  #L3d5fe2.  if v0 != 0 then goto L3d5fe8;
  #L3d5fe6.  goto L3d5ff2;
  #L3d5fe8.  call temp:= `intValue`(v0) @signature `Ljava/lang/Integer;.intValue:()I` @kind virtual;
  #L3d5fee.  v0:= temp;
  #L3d5ff0.  v3:= v3 + v0 @kind int;
  #L3d5ff2.  call temp:= `valueOf`(v3) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L3d5ff8.  v0:= temp @kind object;
  #L3d5ffa.  call temp:= `put`(v5, v2, v0) @signature `Ljava/util/NavigableMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d6000.  v5:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int`;
  #L3d6004.  v5:= v5 + v1 @kind int;
  #L3d6006.  v4.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.f` @type ^`int` := v5;
  #L3d600a.  call `b`(v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.b:()V` @kind direct;
  #L3d6010.  @monitorexit v4
  #L3d6012.  return @kind void;
  #L3d6014.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d6016.  @monitorexit v4
  #L3d6018.  throw v5;
  catch `java.lang.Throwable` @[L3d5f6a..L3d5f96] goto L3d6014;
  catch `java.lang.Throwable` @[L3d5f9e..L3d6010] goto L3d6014;
}
procedure `void` `put`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;Ljava/lang/Class;)V` @AccessFlag PUBLIC {
    temp;

  #L3d6040.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.put:(Ljava/lang/Object;)V` @kind virtual;
  #L3d6046.  return @kind void;
}
procedure `void` `trimMemory`(`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.trimMemory:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d6058.  @monitorenter v1
  #L3d605a.  v0:= 40I;
  #L3d605e.  if v2 < v0 then goto L3d606e;
  #L3d6062.  call `clearMemory`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.clearMemory:()V` @kind virtual;
  #L3d6068.  goto L3d608c;
  #L3d606a.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d606c.  goto L3d6090;
  #L3d606e.  v0:= 20I;
  #L3d6072.  if v2 >= v0 then goto L3d607e;
  #L3d6076.  v0:= 15I;
  #L3d607a.  if v2 != v0 then goto L3d608c;
  #L3d607e.  v2:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.LruArrayPool.e` @type ^`int`;
  #L3d6082.  v2:= v2 / 2;
  #L3d6086.  call `c`(v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/LruArrayPool;.c:(I)V` @kind direct;
  #L3d608c.  @monitorexit v1
  #L3d608e.  return @kind void;
  #L3d6090.  @monitorexit v1
  #L3d6092.  throw v2;
  catch `java.lang.Throwable` @[L3d6062..L3d608c] goto L3d606a;
}
