record `com.bumptech.glide.load.engine.d` @kind class @AccessFlag FINAL extends `com.bumptech.glide.load.Key` @kind interface {
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.d.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.d` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.Key` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cfce0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cfce6.  v0.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3cfcea.  v0.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` := v2 @kind object;
  #L3cfcee.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.engine.d` v3 @kind this, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cfc0c.  v0:= instanceof @variable v4 @type ^`com.bumptech.glide.load.engine.d` @kind boolean;
  #L3cfc10.  v1:= 0I;
  #L3cfc12.  if v0 == 0 then goto L3cfc44;
  #L3cfc16.  v4:= (`com.bumptech.glide.load.engine.d`) v4 @kind object;
  #L3cfc1a.  v0:= v3.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc1e.  v2:= v4.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc22.  call temp:= `equals`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfc28.  v0:= temp;
  #L3cfc2a.  if v0 == 0 then goto L3cfc44;
  #L3cfc2e.  v0:= v3.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc32.  v4:= v4.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc36.  call temp:= `equals`(v0, v4) @signature `Lcom/bumptech/glide/load/Key;.equals:(Ljava/lang/Object;)Z` @kind interface;
  #L3cfc3c.  v4:= temp;
  #L3cfc3e.  if v4 == 0 then goto L3cfc44;
  #L3cfc42.  v1:= 1I;
  #L3cfc44.  return v1;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cfc58.  v0:= v2.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc5c.  call temp:= `hashCode`(v0) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3cfc62.  v0:= temp;
  #L3cfc64.  v0:= v0 * 31;
  #L3cfc68.  v1:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfc6c.  call temp:= `hashCode`(v1) @signature `Lcom/bumptech/glide/load/Key;.hashCode:()I` @kind interface;
  #L3cfc72.  v1:= temp;
  #L3cfc74.  v0:= v0 + v1 @kind int;
  #L3cfc76.  return v0;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.d` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cfc88.  v0:= new `java.lang.StringBuilder`;
  #L3cfc8c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cfc92.  v1:= "DataCacheKey{sourceKey=" @kind object;
  #L3cfc96.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfc9c.  v1:= v2.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfca0.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfca6.  v1:= ", signature=" @kind object;
  #L3cfcaa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcb0.  v1:= v2.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfcb4.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcba.  v1:= 125I;
  #L3cfcbe.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cfcc4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cfcca.  v0:= temp @kind object;
  #L3cfccc.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.engine.d` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/d;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cfd00.  v0:= v1.`com.bumptech.glide.load.engine.d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfd04.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3cfd0a.  v0:= v1.`com.bumptech.glide.load.engine.d.b` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3cfd0e.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3cfd14.  return @kind void;
}
