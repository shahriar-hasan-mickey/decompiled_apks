record `com.bumptech.glide.load.engine.bitmap_recycle.d` @kind class @AccessFlag  {
  `com.bumptech.glide.load.engine.bitmap_recycle.d$a` `com.bumptech.glide.load.engine.bitmap_recycle.d.a` @AccessFlag PRIVATE_FINAL;
  `java.util.Map` `com.bumptech.glide.load.engine.bitmap_recycle.d.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3d5684.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d568a.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d$a`;
  #L3d568e.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.<init>:()V` @kind direct;
  #L3d5694.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v0 @kind object;
  #L3d5698.  v0:= new `java.util.HashMap`;
  #L3d569c.  call `<init>`(v0) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L3d56a2.  v1.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` := v0 @kind object;
  #L3d56a6.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.d$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3d56b8.  call `e`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind static;
  #L3d56be.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d56c2.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v0 @kind object;
  #L3d56c6.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d56ca.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v0 @kind object;
  #L3d56ce.  call `g`(v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind static;
  #L3d56d4.  return @kind void;
}
procedure `void` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.d$a` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d56e8.  call `e`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind static;
  #L3d56ee.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d56f2.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d56f6.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v1 @kind object;
  #L3d56fa.  v3.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v0 @kind object;
  #L3d56fe.  call `g`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind static;
  #L3d5704.  return @kind void;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.bitmap_recycle.d$a` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3d5768.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d576c.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5770.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v1 @kind object;
  #L3d5774.  v2:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5778.  v2.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v0 @kind object;
  #L3d577c.  return @kind void;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.d$a` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3d5790.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5794.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v1 @kind object;
  #L3d5798.  v0:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d579c.  v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` := v1 @kind object;
  #L3d57a0.  return @kind void;
}
procedure `java.lang.Object` `a`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.f` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5528.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` @kind object;
  #L3d552c.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5532.  v0:= temp @kind object;
  #L3d5534.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.d$a`) v0 @kind object;
  #L3d5538.  if v0 != 0 then goto L3d5552;
  #L3d553c.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d$a`;
  #L3d5540.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d5546.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` @kind object;
  #L3d554a.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5550.  goto L3d5558;
  #L3d5552.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.a:()V` @kind interface;
  #L3d5558.  call `b`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.b:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind direct;
  #L3d555e.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L3d5564.  v3:= temp @kind object;
  #L3d5566.  return v3 @kind object;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v2 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.f` v3 @kind object, `java.lang.Object` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.d:(Lcom/bumptech/glide/load/engine/bitmap_recycle/f;Ljava/lang/Object;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3d5718.  v0:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` @kind object;
  #L3d571c.  call temp:= `get`(v0, v3) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5722.  v0:= temp @kind object;
  #L3d5724.  v0:= (`com.bumptech.glide.load.engine.bitmap_recycle.d$a`) v0 @kind object;
  #L3d5728.  if v0 != 0 then goto L3d5748;
  #L3d572c.  v0:= new `com.bumptech.glide.load.engine.bitmap_recycle.d$a`;
  #L3d5730.  call `<init>`(v0, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3d5736.  call `c`(v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind direct;
  #L3d573c.  v1:= v2.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` @kind object;
  #L3d5740.  call temp:= `put`(v1, v3, v0) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d5746.  goto L3d574e;
  #L3d5748.  call `a`(v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.a:()V` @kind interface;
  #L3d574e.  call `a`(v0, v4) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.a:(Ljava/lang/Object;)V` @kind virtual;
  #L3d5754.  return @kind void;
}
procedure `java.lang.Object` `f`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v3 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.f:()Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3d5578.  v0:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d557c.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5580.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5584.  call temp:= `equals`(v0, v1) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d558a.  v1:= temp;
  #L3d558c.  if v1 != 0 then goto L3d55c6;
  #L3d5590.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.b:()Ljava/lang/Object;` @kind virtual;
  #L3d5596.  v1:= temp @kind object;
  #L3d5598.  if v1 == 0 then goto L3d559e;
  #L3d559c.  return v1 @kind object;
  #L3d559e.  call `e`(v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.e:(Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;)V` @kind static;
  #L3d55a4.  v1:= v3.`com.bumptech.glide.load.engine.bitmap_recycle.d.b` @type ^`java.util.Map` @kind object;
  #L3d55a8.  v2:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.a` @type ^`java.lang.Object` @kind object;
  #L3d55ac.  call temp:= `remove`(v1, v2) @signature `Ljava/util/Map;.remove:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3d55b2.  v1:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.a` @type ^`java.lang.Object` @kind object;
  #L3d55b6.  v1:= (`com.bumptech.glide.load.engine.bitmap_recycle.f`) v1 @kind object;
  #L3d55ba.  call `a`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/f;.a:()V` @kind interface;
  #L3d55c0.  v0:= v0.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.d` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d55c4.  goto L3d5580;
  #L3d55c6.  v0:= 0I;
  #L3d55c8.  return v0 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.engine.bitmap_recycle.d` v4 @kind this) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d55dc.  v0:= new `java.lang.StringBuilder`;
  #L3d55e0.  v1:= "GroupedLinkedMap( " @kind object;
  #L3d55e4.  call `<init>`(v0, v1) @signature `Ljava/lang/StringBuilder;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3d55ea.  v1:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d55ee.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d55f2.  v2:= 0I;
  #L3d55f4.  v3:= v4.`com.bumptech.glide.load.engine.bitmap_recycle.d.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d55f8.  call temp:= `equals`(v1, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3d55fe.  v3:= temp;
  #L3d5600.  if v3 != 0 then goto L3d5642;
  #L3d5604.  v2:= 1I;
  #L3d5606.  v3:= 123I;
  #L3d560a.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5610.  v3:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.a` @type ^`java.lang.Object` @kind object;
  #L3d5614.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d561a.  v3:= 58I;
  #L3d561e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5624.  call temp:= `c`(v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/d$a;.c:()I` @kind virtual;
  #L3d562a.  v3:= temp;
  #L3d562c.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5632.  v3:= "}, " @kind object;
  #L3d5636.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d563c.  v1:= v1.`com.bumptech.glide.load.engine.bitmap_recycle.d$a.c` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.d$a` @kind object;
  #L3d5640.  goto L3d55f4;
  #L3d5642.  if v2 == 0 then goto L3d5660;
  #L3d5646.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d564c.  v1:= temp;
  #L3d564e.  v1:= v1 + -2;
  #L3d5652.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3d5658.  v2:= temp;
  #L3d565a.  call temp:= `delete`(v0, v1, v2) @signature `Ljava/lang/StringBuilder;.delete:(II)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d5660.  v1:= " )" @kind object;
  #L3d5664.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d566a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d5670.  v0:= temp @kind object;
  #L3d5672.  return v0 @kind object;
}
