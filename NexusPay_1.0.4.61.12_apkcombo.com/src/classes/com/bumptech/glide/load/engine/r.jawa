record `com.bumptech.glide.load.engine.r` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.DataFetcherGenerator` @kind interface, `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind interface {
  `com.bumptech.glide.load.engine.f` `com.bumptech.glide.load.engine.r.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` `com.bumptech.glide.load.engine.r.b` @AccessFlag PRIVATE_FINAL;
  `int` `com.bumptech.glide.load.engine.r.c` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.c` `com.bumptech.glide.load.engine.r.d` @AccessFlag PRIVATE;
  `java.lang.Object` `com.bumptech.glide.load.engine.r.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.model.ModelLoader$LoadData` `com.bumptech.glide.load.engine.r.f` @AccessFlag PRIVATE_VOLATILE;
  `com.bumptech.glide.load.engine.d` `com.bumptech.glide.load.engine.r.g` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.r` v0 @kind this, `com.bumptech.glide.load.engine.f` v1 @kind object, `com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.<init>:(Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d4c4c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d4c52.  v0.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` := v1 @kind object;
  #L3d4c56.  v0.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` := v2 @kind object;
  #L3d4c5a.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.r` v8 @kind this, `java.lang.Object` v9 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.b:(Ljava/lang/Object;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3d4c6c.  v0:= "SourceGenerator" @kind object;
  #L3d4c70.  call temp:= `getLogTime`() @signature `Lcom/bumptech/glide/util/LogTime;.getLogTime:()J` @kind static;
  #L3d4c76.  v1:= temp @kind wide;
  #L3d4c78.  v3:= v8.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4c7c.  call temp:= `p`(v3, v9) @signature `Lcom/bumptech/glide/load/engine/f;.p:(Ljava/lang/Object;)Lcom/bumptech/glide/load/Encoder;` @kind virtual;
  #L3d4c82.  v3:= temp @kind object;
  #L3d4c84.  v4:= new `com.bumptech.glide.load.engine.e`;
  #L3d4c88.  v5:= v8.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4c8c.  call temp:= `k`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.k:()Lcom/bumptech/glide/load/Options;` @kind virtual;
  #L3d4c92.  v5:= temp @kind object;
  #L3d4c94.  call `<init>`(v4, v3, v9, v5) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/Encoder;Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3d4c9a.  v5:= new `com.bumptech.glide.load.engine.d`;
  #L3d4c9e.  v6:= v8.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4ca2.  v6:= v6.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4ca6.  v7:= v8.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4caa.  call temp:= `o`(v7) @signature `Lcom/bumptech/glide/load/engine/f;.o:()Lcom/bumptech/glide/load/Key;` @kind virtual;
  #L3d4cb0.  v7:= temp @kind object;
  #L3d4cb2.  call `<init>`(v5, v6, v7) @signature `Lcom/bumptech/glide/load/engine/d;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/Key;)V` @kind direct;
  #L3d4cb8.  v8.`com.bumptech.glide.load.engine.r.g` @type ^`com.bumptech.glide.load.engine.d` := v5 @kind object;
  #L3d4cbc.  v5:= v8.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4cc0.  call temp:= `d`(v5) @signature `Lcom/bumptech/glide/load/engine/f;.d:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind virtual;
  #L3d4cc6.  v5:= temp @kind object;
  #L3d4cc8.  v6:= v8.`com.bumptech.glide.load.engine.r.g` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L3d4ccc.  call `put`(v5, v6, v4) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V` @kind interface;
  #L3d4cd2.  v4:= 2I;
  #L3d4cd4.  call temp:= `isLoggable`(v0, v4) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3d4cda.  v4:= temp;
  #L3d4cdc.  if v4 == 0 then goto L3d4d44;
  #L3d4ce0.  v4:= new `java.lang.StringBuilder`;
  #L3d4ce4.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3d4cea.  v5:= "Finished encoding source to cache, key: " @kind object;
  #L3d4cee.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4cf4.  v5:= v8.`com.bumptech.glide.load.engine.r.g` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L3d4cf8.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4cfe.  v5:= ", data: " @kind object;
  #L3d4d02.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d08.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d0e.  v9:= ", encoder: " @kind object;
  #L3d4d12.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d18.  call temp:= `append`(v4, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d1e.  v9:= ", duration: " @kind object;
  #L3d4d22.  call temp:= `append`(v4, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d28.  call temp:= `getElapsedMillis`(v1) @signature `Lcom/bumptech/glide/util/LogTime;.getElapsedMillis:(J)D` @kind static;
  #L3d4d2e.  v1:= temp @kind wide;
  #L3d4d30.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(D)Ljava/lang/StringBuilder;` @kind virtual;
  #L3d4d36.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3d4d3c.  v9:= temp @kind object;
  #L3d4d3e.  call temp:= `v`(v0, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3d4d44.  v9:= v8.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4d48.  v9:= v9.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4d4c.  call `cleanup`(v9) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d4d52.  v9:= new `com.bumptech.glide.load.engine.c`;
  #L3d4d56.  v0:= v8.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4d5a.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4d5e.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3d4d64.  v0:= temp @kind object;
  #L3d4d66.  v1:= v8.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4d6a.  call `<init>`(v9, v0, v1, v8) @signature `Lcom/bumptech/glide/load/engine/c;.<init>:(Ljava/util/List;Lcom/bumptech/glide/load/engine/f;Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;)V` @kind direct;
  #L3d4d70.  v8.`com.bumptech.glide.load.engine.r.d` @type ^`com.bumptech.glide.load.engine.c` := v9 @kind object;
  #L3d4d74.  return @kind void;
  #L3d4d76.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d4d78.  v0:= v8.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4d7c.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4d80.  call `cleanup`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cleanup:()V` @kind interface;
  #L3d4d86.  throw v9;
  catch `java.lang.Throwable` @[L3d4c78..L3d4d44] goto L3d4d76;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.r` v2 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.c:()Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3d4b14.  v0:= v2.`com.bumptech.glide.load.engine.r.c` @type ^`int`;
  #L3d4b18.  v1:= v2.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4b1c.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3d4b22.  v1:= temp @kind object;
  #L3d4b24.  call temp:= `size`(v1) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3d4b2a.  v1:= temp;
  #L3d4b2c.  if v0 >= v1 then goto L3d4b34;
  #L3d4b30.  v0:= 1I;
  #L3d4b32.  goto L3d4b36;
  #L3d4b34.  v0:= 0I;
  #L3d4b36.  return v0;
}
procedure `void` `g`(`com.bumptech.glide.load.engine.r` v3 @kind this, `com.bumptech.glide.load.model.ModelLoader$LoadData` v4 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.g:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3d4edc.  v0:= v3.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4ee0.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4ee4.  v1:= v3.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4ee8.  call temp:= `l`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.l:()Lcom/bumptech/glide/Priority;` @kind virtual;
  #L3d4eee.  v1:= temp @kind object;
  #L3d4ef0.  v2:= new `com.bumptech.glide.load.engine.r$a`;
  #L3d4ef4.  call `<init>`(v2, v3, v4) @signature `Lcom/bumptech/glide/load/engine/r$a;.<init>:(Lcom/bumptech/glide/load/engine/r;Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)V` @kind direct;
  #L3d4efa.  call `loadData`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.loadData:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V` @kind interface;
  #L3d4f00.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.engine.r` v5 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.a:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3d4b6c.  v0:= v5.`com.bumptech.glide.load.engine.r.e` @type ^`java.lang.Object` @kind object;
  #L3d4b70.  v1:= 0I;
  #L3d4b72.  if v0 == 0 then goto L3d4b80;
  #L3d4b76.  v5.`com.bumptech.glide.load.engine.r.e` @type ^`java.lang.Object` := v1 @kind object;
  #L3d4b7a.  call `b`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/r;.b:(Ljava/lang/Object;)V` @kind direct;
  #L3d4b80.  v0:= v5.`com.bumptech.glide.load.engine.r.d` @type ^`com.bumptech.glide.load.engine.c` @kind object;
  #L3d4b84.  v2:= 1I;
  #L3d4b86.  if v0 == 0 then goto L3d4b98;
  #L3d4b8a.  call temp:= `a`(v0) @signature `Lcom/bumptech/glide/load/engine/c;.a:()Z` @kind virtual;
  #L3d4b90.  v0:= temp;
  #L3d4b92.  if v0 == 0 then goto L3d4b98;
  #L3d4b96.  return v2;
  #L3d4b98.  v5.`com.bumptech.glide.load.engine.r.d` @type ^`com.bumptech.glide.load.engine.c` := v1 @kind object;
  #L3d4b9c.  v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v1 @kind object;
  #L3d4ba0.  v0:= 0I;
  #L3d4ba2.  if v0 != 0 then goto L3d4c38;
  #L3d4ba6.  call temp:= `c`(v5) @signature `Lcom/bumptech/glide/load/engine/r;.c:()Z` @kind direct;
  #L3d4bac.  v1:= temp;
  #L3d4bae.  if v1 == 0 then goto L3d4c38;
  #L3d4bb2.  v1:= v5.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4bb6.  call temp:= `g`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.g:()Ljava/util/List;` @kind virtual;
  #L3d4bbc.  v1:= temp @kind object;
  #L3d4bbe.  v3:= v5.`com.bumptech.glide.load.engine.r.c` @type ^`int`;
  #L3d4bc2.  v4:= v3 + 1;
  #L3d4bc6.  v5.`com.bumptech.glide.load.engine.r.c` @type ^`int` := v4;
  #L3d4bca.  call temp:= `get`(v1, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3d4bd0.  v1:= temp @kind object;
  #L3d4bd2.  v1:= (`com.bumptech.glide.load.model.ModelLoader$LoadData`) v1 @kind object;
  #L3d4bd6.  v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` := v1 @kind object;
  #L3d4bda.  v1:= v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4bde.  if v1 == 0 then goto L3d4ba2;
  #L3d4be2.  v1:= v5.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4be6.  call temp:= `e`(v1) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @kind virtual;
  #L3d4bec.  v1:= temp @kind object;
  #L3d4bee.  v3:= v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4bf2.  v3:= v3.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4bf6.  call temp:= `getDataSource`(v3) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4bfc.  v3:= temp @kind object;
  #L3d4bfe.  call temp:= `isDataCacheable`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.isDataCacheable:(Lcom/bumptech/glide/load/DataSource;)Z` @kind virtual;
  #L3d4c04.  v1:= temp;
  #L3d4c06.  if v1 != 0 then goto L3d4c2a;
  #L3d4c0a.  v1:= v5.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4c0e.  v3:= v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4c12.  v3:= v3.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4c16.  call temp:= `getDataClass`(v3) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L3d4c1c.  v3:= temp @kind object;
  #L3d4c1e.  call temp:= `t`(v1, v3) @signature `Lcom/bumptech/glide/load/engine/f;.t:(Ljava/lang/Class;)Z` @kind virtual;
  #L3d4c24.  v1:= temp;
  #L3d4c26.  if v1 == 0 then goto L3d4ba2;
  #L3d4c2a.  v0:= v5.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4c2e.  call `g`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/r;.g:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)V` @kind direct;
  #L3d4c34.  v0:= 1I;
  #L3d4c36.  goto L3d4ba2;
  #L3d4c38.  return v0;
}
procedure `void` `cancel`(`com.bumptech.glide.load.engine.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.cancel:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4da4.  v0:= v1.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4da8.  if v0 == 0 then goto L3d4db6;
  #L3d4dac.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4db0.  call `cancel`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.cancel:()V` @kind interface;
  #L3d4db6.  return @kind void;
}
procedure `boolean` `d`(`com.bumptech.glide.load.engine.r` v1 @kind this, `com.bumptech.glide.load.model.ModelLoader$LoadData` v2 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.d:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;)Z` @AccessFlag  {
    temp;
    v0;

  #L3d4b48.  v0:= v1.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4b4c.  if v0 == 0 then goto L3d4b58;
  #L3d4b50.  if v0 != v2 then goto L3d4b58;
  #L3d4b54.  v2:= 1I;
  #L3d4b56.  goto L3d4b5a;
  #L3d4b58.  v2:= 0I;
  #L3d4b5a.  return v2;
}
procedure `void` `e`(`com.bumptech.glide.load.engine.r` v6 @kind this, `com.bumptech.glide.load.model.ModelLoader$LoadData` v7 @kind object, `java.lang.Object` v8 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.e:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d4e28.  v0:= v6.`com.bumptech.glide.load.engine.r.a` @type ^`com.bumptech.glide.load.engine.f` @kind object;
  #L3d4e2c.  call temp:= `e`(v0) @signature `Lcom/bumptech/glide/load/engine/f;.e:()Lcom/bumptech/glide/load/engine/DiskCacheStrategy;` @kind virtual;
  #L3d4e32.  v0:= temp @kind object;
  #L3d4e34.  if v8 == 0 then goto L3d4e60;
  #L3d4e38.  v1:= v7.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4e3c.  call temp:= `getDataSource`(v1) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4e42.  v1:= temp @kind object;
  #L3d4e44.  call temp:= `isDataCacheable`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/DiskCacheStrategy;.isDataCacheable:(Lcom/bumptech/glide/load/DataSource;)Z` @kind virtual;
  #L3d4e4a.  v0:= temp;
  #L3d4e4c.  if v0 == 0 then goto L3d4e60;
  #L3d4e50.  v6.`com.bumptech.glide.load.engine.r.e` @type ^`java.lang.Object` := v8 @kind object;
  #L3d4e54.  v7:= v6.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3d4e58.  call `reschedule`(v7) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.reschedule:()V` @kind interface;
  #L3d4e5e.  goto L3d4e80;
  #L3d4e60.  v0:= v6.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3d4e64.  v1:= v7.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d4e68.  v3:= v7.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4e6c.  call temp:= `getDataSource`(v3) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4e72.  v4:= temp @kind object;
  #L3d4e74.  v5:= v6.`com.bumptech.glide.load.engine.r.g` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L3d4e78.  v2:= v8 @kind object;
  #L3d4e7a.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L3d4e80.  return @kind void;
}
procedure `void` `f`(`com.bumptech.glide.load.engine.r` v3 @kind this, `com.bumptech.glide.load.model.ModelLoader$LoadData` v4 @kind object, `java.lang.Exception` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.f:(Lcom/bumptech/glide/load/model/ModelLoader$LoadData;Ljava/lang/Exception;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;

  #L3d4e94.  v0:= v3.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3d4e98.  v1:= v3.`com.bumptech.glide.load.engine.r.g` @type ^`com.bumptech.glide.load.engine.d` @kind object;
  #L3d4e9c.  v4:= v4.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4ea0.  call temp:= `getDataSource`(v4) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4ea6.  v2:= temp @kind object;
  #L3d4ea8.  call `onDataFetcherFailed`(v0, v1, v5, v4, v2) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L3d4eae.  return @kind void;
}
procedure `void` `onDataFetcherFailed`(`com.bumptech.glide.load.engine.r` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `java.lang.Exception` v3 @kind object, `com.bumptech.glide.load.data.DataFetcher` v4 @kind object, `com.bumptech.glide.load.DataSource` v5 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4dc8.  v5:= v1.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3d4dcc.  v0:= v1.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4dd0.  v0:= v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4dd4.  call temp:= `getDataSource`(v0) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4dda.  v0:= temp @kind object;
  #L3d4ddc.  call `onDataFetcherFailed`(v5, v2, v3, v4, v0) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherFailed:(Lcom/bumptech/glide/load/Key;Ljava/lang/Exception;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;)V` @kind interface;
  #L3d4de2.  return @kind void;
}
procedure `void` `onDataFetcherReady`(`com.bumptech.glide.load.engine.r` v6 @kind this, `com.bumptech.glide.load.Key` v7 @kind object, `java.lang.Object` v8 @kind object, `com.bumptech.glide.load.data.DataFetcher` v9 @kind object, `com.bumptech.glide.load.DataSource` v10 @kind object, `com.bumptech.glide.load.Key` v11 @kind object) @signature `Lcom/bumptech/glide/load/engine/r;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3d4df4.  v0:= v6.`com.bumptech.glide.load.engine.r.b` @type ^`com.bumptech.glide.load.engine.DataFetcherGenerator$FetcherReadyCallback` @kind object;
  #L3d4df8.  v10:= v6.`com.bumptech.glide.load.engine.r.f` @type ^`com.bumptech.glide.load.model.ModelLoader$LoadData` @kind object;
  #L3d4dfc.  v10:= v10.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3d4e00.  call temp:= `getDataSource`(v10) @signature `Lcom/bumptech/glide/load/data/DataFetcher;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @kind interface;
  #L3d4e06.  v4:= temp @kind object;
  #L3d4e08.  v1:= v7 @kind object;
  #L3d4e0a.  v2:= v8 @kind object;
  #L3d4e0c.  v3:= v9 @kind object;
  #L3d4e0e.  v5:= v7 @kind object;
  #L3d4e10.  call `onDataFetcherReady`(v0, v1, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/DataFetcherGenerator$FetcherReadyCallback;.onDataFetcherReady:(Lcom/bumptech/glide/load/Key;Ljava/lang/Object;Lcom/bumptech/glide/load/data/DataFetcher;Lcom/bumptech/glide/load/DataSource;Lcom/bumptech/glide/load/Key;)V` @kind interface;
  #L3d4e16.  return @kind void;
}
procedure `void` `reschedule`(`com.bumptech.glide.load.engine.r` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/r;.reschedule:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d4ec0.  v0:= new `java.lang.UnsupportedOperationException`;
  #L3d4ec4.  call `<init>`(v0) @signature `Ljava/lang/UnsupportedOperationException;.<init>:()V` @kind direct;
  #L3d4eca.  throw v0;
}
