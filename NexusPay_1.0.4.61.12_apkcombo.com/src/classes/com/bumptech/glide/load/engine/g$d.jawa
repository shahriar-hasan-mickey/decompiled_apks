record `com.bumptech.glide.load.engine.g$d` @kind class @AccessFlag  {
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.engine.g$d.a` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.ResourceEncoder` `com.bumptech.glide.load.engine.g$d.b` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.n` `com.bumptech.glide.load.engine.g$d.c` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.g$d` v0 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$d;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d0504.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d050a.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.engine.g$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$d;.a:()V` @AccessFlag  {
    temp;
    v0;

  #L3d051c.  v0:= 0I;
  #L3d051e.  v1.`com.bumptech.glide.load.engine.g$d.a` @type ^`com.bumptech.glide.load.Key` := v0 @kind object;
  #L3d0522.  v1.`com.bumptech.glide.load.engine.g$d.b` @type ^`com.bumptech.glide.load.ResourceEncoder` := v0 @kind object;
  #L3d0526.  v1.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` := v0 @kind object;
  #L3d052a.  return @kind void;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.g$d` v4 @kind this, `com.bumptech.glide.load.engine.g$e` v5 @kind object, `com.bumptech.glide.load.Options` v6 @kind object) @signature `Lcom/bumptech/glide/load/engine/g$d;.b:(Lcom/bumptech/glide/load/engine/g$e;Lcom/bumptech/glide/load/Options;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3d053c.  v0:= "DecodeJob.encode" @kind object;
  #L3d0540.  call `beginSection`(v0) @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.beginSection:(Ljava/lang/String;)V` @kind static;
  #L3d0546.  call temp:= `a`(v5) @signature `Lcom/bumptech/glide/load/engine/g$e;.a:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L3d054c.  v5:= temp @kind object;
  #L3d054e.  v0:= v4.`com.bumptech.glide.load.engine.g$d.a` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3d0552.  v1:= new `com.bumptech.glide.load.engine.e`;
  #L3d0556.  v2:= v4.`com.bumptech.glide.load.engine.g$d.b` @type ^`com.bumptech.glide.load.ResourceEncoder` @kind object;
  #L3d055a.  v3:= v4.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L3d055e.  call `<init>`(v1, v2, v3, v6) @signature `Lcom/bumptech/glide/load/engine/e;.<init>:(Lcom/bumptech/glide/load/Encoder;Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)V` @kind direct;
  #L3d0564.  call `put`(v5, v0, v1) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.put:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/engine/cache/DiskCache$Writer;)V` @kind interface;
  #L3d056a.  v5:= v4.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L3d056e.  call `d`(v5) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @kind virtual;
  #L3d0574.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d057a.  return @kind void;
  #L3d057c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d057e.  v6:= v4.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L3d0582.  call `d`(v6) @signature `Lcom/bumptech/glide/load/engine/n;.d:()V` @kind virtual;
  #L3d0588.  call `endSection`() @signature `Lcom/bumptech/glide/util/pool/GlideTrace;.endSection:()V` @kind static;
  #L3d058e.  throw v5;
  catch `java.lang.Throwable` @[L3d0546..L3d056a] goto L3d057c;
}
procedure `boolean` `c`(`com.bumptech.glide.load.engine.g$d` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/g$d;.c:()Z` @AccessFlag  {
    temp;
    v0;

  #L3d04e4.  v0:= v1.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` @kind object;
  #L3d04e8.  if v0 == 0 then goto L3d04f0;
  #L3d04ec.  v0:= 1I;
  #L3d04ee.  goto L3d04f2;
  #L3d04f0.  v0:= 0I;
  #L3d04f2.  return v0;
}
procedure `void` `d`(`com.bumptech.glide.load.engine.g$d` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `com.bumptech.glide.load.ResourceEncoder` v2 @kind object, `com.bumptech.glide.load.engine.n` v3 @kind object) @signature `Lcom/bumptech/glide/load/engine/g$d;.d:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/ResourceEncoder;Lcom/bumptech/glide/load/engine/n;)V` @AccessFlag  {
    temp;

  #L3d05ac.  v0.`com.bumptech.glide.load.engine.g$d.a` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3d05b0.  v0.`com.bumptech.glide.load.engine.g$d.b` @type ^`com.bumptech.glide.load.ResourceEncoder` := v2 @kind object;
  #L3d05b4.  v0.`com.bumptech.glide.load.engine.g$d.c` @type ^`com.bumptech.glide.load.engine.n` := v3 @kind object;
  #L3d05b8.  return @kind void;
}
