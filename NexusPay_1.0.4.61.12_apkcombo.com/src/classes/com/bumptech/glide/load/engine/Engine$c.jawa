record `com.bumptech.glide.load.engine.Engine$c` @kind class @AccessFlag  extends `com.bumptech.glide.load.engine.g$e` @kind interface {
  `com.bumptech.glide.load.engine.cache.DiskCache$Factory` `com.bumptech.glide.load.engine.Engine$c.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.cache.DiskCache` `com.bumptech.glide.load.engine.Engine$c.b` @AccessFlag PRIVATE_VOLATILE;
}
procedure `void` `<init>`(`com.bumptech.glide.load.engine.Engine$c` v0 @kind this, `com.bumptech.glide.load.engine.cache.DiskCache$Factory` v1 @kind object) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.<init>:(Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d1f28.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d1f2e.  v0.`com.bumptech.glide.load.engine.Engine$c.a` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` := v1 @kind object;
  #L3d1f32.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.cache.DiskCache` `a`(`com.bumptech.glide.load.engine.Engine$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.a:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d1ec4.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1ec8.  if v0 != 0 then goto L3d1f06;
  #L3d1ecc.  @monitorenter v1
  #L3d1ece.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1ed2.  if v0 != 0 then goto L3d1ee6;
  #L3d1ed6.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.a` @type ^`com.bumptech.glide.load.engine.cache.DiskCache$Factory` @kind object;
  #L3d1eda.  call temp:= `build`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache$Factory;.build:()Lcom/bumptech/glide/load/engine/cache/DiskCache;` @kind interface;
  #L3d1ee0.  v0:= temp @kind object;
  #L3d1ee2.  v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` := v0 @kind object;
  #L3d1ee6.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1eea.  if v0 != 0 then goto L3d1efc;
  #L3d1eee.  v0:= new `com.bumptech.glide.load.engine.cache.DiskCacheAdapter`;
  #L3d1ef2.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCacheAdapter;.<init>:()V` @kind direct;
  #L3d1ef8.  v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` := v0 @kind object;
  #L3d1efc.  @monitorexit v1
  #L3d1efe.  goto L3d1f06;
  #L3d1f00.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1f02.  @monitorexit v1
  #L3d1f04.  throw v0;
  #L3d1f06.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1f0a.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3d1ece..L3d1f04] goto L3d1f00;
}
procedure `void` `b`(`com.bumptech.glide.load.engine.Engine$c` v1 @kind this) @signature `Lcom/bumptech/glide/load/engine/Engine$c;.b:()V` @AccessFlag  {
    temp;
    v0;

  #L3d1f44.  @monitorenter v1
  #L3d1f46.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1f4a.  if v0 != 0 then goto L3d1f52;
  #L3d1f4e.  @monitorexit v1
  #L3d1f50.  return @kind void;
  #L3d1f52.  v0:= v1.`com.bumptech.glide.load.engine.Engine$c.b` @type ^`com.bumptech.glide.load.engine.cache.DiskCache` @kind object;
  #L3d1f56.  call `clear`(v0) @signature `Lcom/bumptech/glide/load/engine/cache/DiskCache;.clear:()V` @kind interface;
  #L3d1f5c.  @monitorexit v1
  #L3d1f5e.  return @kind void;
  #L3d1f60.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3d1f62.  @monitorexit v1
  #L3d1f64.  throw v0;
  catch `java.lang.Throwable` @[L3d1f46..L3d1f4a] goto L3d1f60;
  catch `java.lang.Throwable` @[L3d1f52..L3d1f5c] goto L3d1f60;
}
