record `com.bumptech.glide.load.ImageHeaderParserUtils$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.ImageHeaderParserUtils$g` @kind interface {
  `java.io.InputStream` `com.bumptech.glide.load.ImageHeaderParserUtils$a.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.ImageHeaderParserUtils$a` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils$a;.<init>:(Ljava/io/InputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cd014.  v0.`com.bumptech.glide.load.ImageHeaderParserUtils$a.a` @type ^`java.io.InputStream` := v1 @kind object;
  #L3cd018.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cd01e.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `a`(`com.bumptech.glide.load.ImageHeaderParserUtils$a` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils$a;.a:(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ccfd0.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParserUtils$a.a` @type ^`java.io.InputStream` @kind object;
  #L3ccfd4.  call temp:= `getType`(v2, v0) @signature `Lcom/bumptech/glide/load/ImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind interface;
  #L3ccfda.  v2:= temp @kind object;
  #L3ccfdc.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParserUtils$a.a` @type ^`java.io.InputStream` @kind object;
  #L3ccfe0.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L3ccfe6.  return v2 @kind object;
  #L3ccfe8.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3ccfea.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParserUtils$a.a` @type ^`java.io.InputStream` @kind object;
  #L3ccfee.  call `reset`(v0) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L3ccff4.  throw v2;
  catch `java.lang.Throwable` @[L3ccfd0..L3ccfdc] goto L3ccfe8;
}
