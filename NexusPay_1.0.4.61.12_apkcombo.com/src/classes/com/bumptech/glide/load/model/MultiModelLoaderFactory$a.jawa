record `com.bumptech.glide.load.model.MultiModelLoaderFactory$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dba40.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dba46.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$a` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$a;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;

  #L3dba2c.  v1:= 0I;
  #L3dba2e.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$a;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dba18.  v1:= 0I;
  #L3dba1a.  return v1;
}
