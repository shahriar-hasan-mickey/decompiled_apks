record `com.bumptech.glide.load.model.stream.HttpUriLoader` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `com.bumptech.glide.load.model.ModelLoader` `com.bumptech.glide.load.model.stream.HttpUriLoader.a` @AccessFlag PRIVATE_FINAL;
}
global `java.util.Set` `@@com.bumptech.glide.load.model.stream.HttpUriLoader.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L3dd078.  v0:= new `java.util.HashSet`;
  #L3dd07c.  v1:= "http" @kind object;
  #L3dd080.  v2:= "https" @kind object;
  #L3dd084.  temp:= new `java.lang.String`[v1, v2];
  #L3dd08a.  v1:= temp @kind object;
  #L3dd08c.  call temp:= `asList`(v1) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3dd092.  v1:= temp @kind object;
  #L3dd094.  call `<init>`(v0, v1) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3dd09a.  call temp:= `unmodifiableSet`(v0) @signature `Ljava/util/Collections;.unmodifiableSet:(Ljava/util/Set;)Ljava/util/Set;` @kind static;
  #L3dd0a0.  v0:= temp @kind object;
  #L3dd0a2.  `@@com.bumptech.glide.load.model.stream.HttpUriLoader.b` @type ^`java.util.Set` := v0 @kind object;
  #L3dd0a6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.HttpUriLoader` v0 @kind this, `com.bumptech.glide.load.model.ModelLoader` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dd0b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dd0be.  v0.`com.bumptech.glide.load.model.stream.HttpUriLoader.a` @type ^`com.bumptech.glide.load.model.ModelLoader` := v1 @kind object;
  #L3dd0c2.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.stream.HttpUriLoader` v2 @kind this, `android.net.Uri` v3 @kind object, `int` v4 , `int` v5 , `com.bumptech.glide.load.Options` v6 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dd028.  v0:= v2.`com.bumptech.glide.load.model.stream.HttpUriLoader.a` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L3dd02c.  v1:= new `com.bumptech.glide.load.model.GlideUrl`;
  #L3dd030.  call temp:= `toString`(v3) @signature `Landroid/net/Uri;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dd036.  v3:= temp @kind object;
  #L3dd038.  call `<init>`(v1, v3) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dd03e.  call temp:= `buildLoadData`(v0, v1, v4, v5, v6) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3dd044.  v3:= temp @kind object;
  #L3dd046.  return v3 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.stream.HttpUriLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dd058.  v1:= (`android.net.Uri`) v1 @kind object;
  #L3dd05c.  call temp:= `buildLoadData`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.buildLoadData:(Landroid/net/Uri;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind virtual;
  #L3dd062.  v1:= temp @kind object;
  #L3dd064.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.stream.HttpUriLoader` v1 @kind this, `android.net.Uri` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.handles:(Landroid/net/Uri;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dcfe0.  v0:= `@@com.bumptech.glide.load.model.stream.HttpUriLoader.b` @type ^`java.util.Set` @kind object;
  #L3dcfe4.  call temp:= `getScheme`(v2) @signature `Landroid/net/Uri;.getScheme:()Ljava/lang/String;` @kind virtual;
  #L3dcfea.  v2:= temp @kind object;
  #L3dcfec.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3dcff2.  v2:= temp;
  #L3dcff4.  return v2;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.stream.HttpUriLoader` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dd008.  v1:= (`android.net.Uri`) v1 @kind object;
  #L3dd00c.  call temp:= `handles`(v0, v1) @signature `Lcom/bumptech/glide/load/model/stream/HttpUriLoader;.handles:(Landroid/net/Uri;)Z` @kind virtual;
  #L3dd012.  v1:= temp;
  #L3dd014.  return v1;
}
