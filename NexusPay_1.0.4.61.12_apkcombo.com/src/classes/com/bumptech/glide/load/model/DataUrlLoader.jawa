record `com.bumptech.glide.load.model.DataUrlLoader` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `com.bumptech.glide.load.model.DataUrlLoader$DataDecoder` `com.bumptech.glide.load.model.DataUrlLoader.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.DataUrlLoader` v0 @kind this, `com.bumptech.glide.load.model.DataUrlLoader$DataDecoder` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/DataUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/DataUrlLoader$DataDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3da1b8.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3da1be.  v0.`com.bumptech.glide.load.model.DataUrlLoader.a` @type ^`com.bumptech.glide.load.model.DataUrlLoader$DataDecoder` := v1 @kind object;
  #L3da1c2.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.DataUrlLoader` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/model/DataUrlLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da17c.  v3:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3da180.  v4:= new `com.bumptech.glide.signature.ObjectKey`;
  #L3da184.  call `<init>`(v4, v2) @signature `Lcom/bumptech/glide/signature/ObjectKey;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L3da18a.  v5:= new `com.bumptech.glide.load.model.DataUrlLoader$a`;
  #L3da18e.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3da194.  v2:= temp @kind object;
  #L3da196.  v0:= v1.`com.bumptech.glide.load.model.DataUrlLoader.a` @type ^`com.bumptech.glide.load.model.DataUrlLoader$DataDecoder` @kind object;
  #L3da19a.  call `<init>`(v5, v2, v0) @signature `Lcom/bumptech/glide/load/model/DataUrlLoader$a;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/model/DataUrlLoader$DataDecoder;)V` @kind direct;
  #L3da1a0.  call `<init>`(v3, v4, v5) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3da1a6.  return v3 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.DataUrlLoader` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/DataUrlLoader;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da154.  call temp:= `toString`(v2) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L3da15a.  v2:= temp @kind object;
  #L3da15c.  v0:= "data:image" @kind object;
  #L3da160.  call temp:= `startsWith`(v2, v0) @signature `Ljava/lang/String;.startsWith:(Ljava/lang/String;)Z` @kind virtual;
  #L3da166.  v2:= temp;
  #L3da168.  return v2;
}
