record `com.bumptech.glide.load.model.ModelLoader$LoadData` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @AccessFlag PUBLIC_FINAL;
  `com.bumptech.glide.load.data.DataFetcher` `com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @AccessFlag PUBLIC_FINAL;
  `com.bumptech.glide.load.Key` `com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @AccessFlag PUBLIC_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelLoader$LoadData` v1 @kind this, `com.bumptech.glide.load.Key` v2 @kind object, `com.bumptech.glide.load.data.DataFetcher` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3db364.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3db36a.  v0:= temp @kind object;
  #L3db36c.  call `<init>`(v1, v2, v0, v3) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Ljava/util/List;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3db372.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ModelLoader$LoadData` v0 @kind this, `com.bumptech.glide.load.Key` v1 @kind object, `java.util.List` v2 @kind object, `com.bumptech.glide.load.data.DataFetcher` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Ljava/util/List;Lcom/bumptech/glide/load/data/DataFetcher;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3db384.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3db38a.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db390.  v1:= temp @kind object;
  #L3db392.  v1:= (`com.bumptech.glide.load.Key`) v1 @kind object;
  #L3db396.  v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` := v1 @kind object;
  #L3db39a.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db3a0.  v1:= temp @kind object;
  #L3db3a2.  v1:= (`java.util.List`) v1 @kind object;
  #L3db3a6.  v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.alternateKeys` @type ^`java.util.List` := v1 @kind object;
  #L3db3aa.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3db3b0.  v1:= temp @kind object;
  #L3db3b2.  v1:= (`com.bumptech.glide.load.data.DataFetcher`) v1 @kind object;
  #L3db3b6.  v0.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` := v1 @kind object;
  #L3db3ba.  return @kind void;
}
