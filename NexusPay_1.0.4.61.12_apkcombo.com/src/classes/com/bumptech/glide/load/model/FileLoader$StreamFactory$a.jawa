record `com.bumptech.glide.load.model.FileLoader$StreamFactory$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.model.FileLoader$FileOpener` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3da43c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3da442.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.a:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC {
    temp;

  #L3da454.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3da45a.  return @kind void;
}
procedure `java.io.InputStream` `b`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v1 @kind this, `java.io.File` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.b:(Ljava/io/File;)Ljava/io/InputStream;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da3ec.  v0:= new `java.io.FileInputStream`;
  #L3da3f0.  call `<init>`(v0, v2) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3da3f6.  return v0 @kind object;
}
procedure `void` `close`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v0 @kind this, `java.lang.Object` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.close:(Ljava/lang/Object;)V` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3da46c.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L3da470.  call `a`(v0, v1) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.a:(Ljava/io/InputStream;)V` @kind virtual;
  #L3da476.  return @kind void;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3da408.  v0:= constclass @type ^`java.io.InputStream` @kind object;
  #L3da40c.  return v0 @kind object;
}
procedure `java.lang.Object` `open`(`com.bumptech.glide.load.model.FileLoader$StreamFactory$a` v0 @kind this, `java.io.File` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.open:(Ljava/io/File;)Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3da420.  call temp:= `b`(v0, v1) @signature `Lcom/bumptech/glide/load/model/FileLoader$StreamFactory$a;.b:(Ljava/io/File;)Ljava/io/InputStream;` @kind virtual;
  #L3da426.  v1:= temp @kind object;
  #L3da428.  return v1 @kind object;
}
