record `com.bumptech.glide.load.model.a` @kind class @AccessFlag  extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `java.util.List` `com.bumptech.glide.load.model.a.a` @AccessFlag PRIVATE_FINAL;
  `androidx.core.util.Pools$Pool` `com.bumptech.glide.load.model.a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.a` v0 @kind this, `java.util.List` v1 @kind object, `androidx.core.util.Pools$Pool` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/a;.<init>:(Ljava/util/List;Landroidx/core/util/Pools$Pool;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3dc0c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc0c6.  v0.`com.bumptech.glide.load.model.a.a` @type ^`java.util.List` := v1 @kind object;
  #L3dc0ca.  v0.`com.bumptech.glide.load.model.a.b` @type ^`androidx.core.util.Pools$Pool` := v2 @kind object;
  #L3dc0ce.  return @kind void;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.a` v7 @kind this, `java.lang.Object` v8 @kind object, `int` v9 , `int` v10 , `com.bumptech.glide.load.Options` v11 @kind object) @signature `Lcom/bumptech/glide/load/model/a;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3dbfd4.  v0:= v7.`com.bumptech.glide.load.model.a.a` @type ^`java.util.List` @kind object;
  #L3dbfd8.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L3dbfde.  v0:= temp;
  #L3dbfe0.  v1:= new `java.util.ArrayList`;
  #L3dbfe4.  call `<init>`(v1, v0) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3dbfea.  v2:= 0I;
  #L3dbfec.  v3:= 0I;
  #L3dbfee.  v4:= v2 @kind object;
  #L3dbff0.  if v3 >= v0 then goto L3dc030;
  #L3dbff4.  v5:= v7.`com.bumptech.glide.load.model.a.a` @type ^`java.util.List` @kind object;
  #L3dbff8.  call temp:= `get`(v5, v3) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3dbffe.  v5:= temp @kind object;
  #L3dc000.  v5:= (`com.bumptech.glide.load.model.ModelLoader`) v5 @kind object;
  #L3dc004.  call temp:= `handles`(v5, v8) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.handles:(Ljava/lang/Object;)Z` @kind interface;
  #L3dc00a.  v6:= temp;
  #L3dc00c.  if v6 == 0 then goto L3dc02a;
  #L3dc010.  call temp:= `buildLoadData`(v5, v8, v9, v10, v11) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3dc016.  v5:= temp @kind object;
  #L3dc018.  if v5 == 0 then goto L3dc02a;
  #L3dc01c.  v4:= v5.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dc020.  v5:= v5.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3dc024.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dc02a.  v3:= v3 + 1;
  #L3dc02e.  goto L3dbff0;
  #L3dc030.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3dc036.  v8:= temp;
  #L3dc038.  if v8 != 0 then goto L3dc058;
  #L3dc03c.  if v4 == 0 then goto L3dc058;
  #L3dc040.  v2:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3dc044.  v8:= new `com.bumptech.glide.load.model.a$a`;
  #L3dc048.  v9:= v7.`com.bumptech.glide.load.model.a.b` @type ^`androidx.core.util.Pools$Pool` @kind object;
  #L3dc04c.  call `<init>`(v8, v1, v9) @signature `Lcom/bumptech/glide/load/model/a$a;.<init>:(Ljava/util/List;Landroidx/core/util/Pools$Pool;)V` @kind direct;
  #L3dc052.  call `<init>`(v2, v4, v8) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3dc058.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.model.a` v2 @kind this, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/a;.handles:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dbf8c.  v0:= v2.`com.bumptech.glide.load.model.a.a` @type ^`java.util.List` @kind object;
  #L3dbf90.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dbf96.  v0:= temp @kind object;
  #L3dbf98.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dbf9e.  v1:= temp;
  #L3dbfa0.  if v1 == 0 then goto L3dbfc0;
  #L3dbfa4.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dbfaa.  v1:= temp @kind object;
  #L3dbfac.  v1:= (`com.bumptech.glide.load.model.ModelLoader`) v1 @kind object;
  #L3dbfb0.  call temp:= `handles`(v1, v3) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.handles:(Ljava/lang/Object;)Z` @kind interface;
  #L3dbfb6.  v1:= temp;
  #L3dbfb8.  if v1 == 0 then goto L3dbf98;
  #L3dbfbc.  v3:= 1I;
  #L3dbfbe.  return v3;
  #L3dbfc0.  v3:= 0I;
  #L3dbfc2.  return v3;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.model.a` v2 @kind this) @signature `Lcom/bumptech/glide/load/model/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3dc06c.  v0:= new `java.lang.StringBuilder`;
  #L3dc070.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3dc076.  v1:= "MultiModelLoader{modelLoaders=" @kind object;
  #L3dc07a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dc080.  v1:= v2.`com.bumptech.glide.load.model.a.a` @type ^`java.util.List` @kind object;
  #L3dc084.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3dc08a.  v1:= temp @kind object;
  #L3dc08c.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3dc092.  v1:= temp @kind object;
  #L3dc094.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dc09a.  v1:= 125I;
  #L3dc09e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3dc0a4.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3dc0aa.  v0:= temp @kind object;
  #L3dc0ac.  return v0 @kind object;
}
