record `com.bumptech.glide.load.model.StreamEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Encoder` @kind interface {
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.model.StreamEncoder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.StreamEncoder` v0 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/StreamEncoder;.<init>:(Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dc500.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc506.  v0.`com.bumptech.glide.load.model.StreamEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v1 @kind object;
  #L3dc50a.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.model.StreamEncoder` v4 @kind this, `java.io.InputStream` v5 @kind object, `java.io.File` v6 @kind object, `com.bumptech.glide.load.Options` v7 @kind object) @signature `Lcom/bumptech/glide/load/model/StreamEncoder;.encode:(Ljava/io/InputStream;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3dc3e0.  v7:= "StreamEncoder" @kind object;
  #L3dc3e4.  v0:= v4.`com.bumptech.glide.load.model.StreamEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3dc3e8.  v1:= constclass @type ^`byte`[] @kind object;
  #L3dc3ec.  v2:= 65536I;
  #L3dc3f0.  call temp:= `get`(v0, v2, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3dc3f6.  v0:= temp @kind object;
  #L3dc3f8.  v0:= (`byte`[]) v0 @kind object;
  #L3dc3fc.  v1:= 0I;
  #L3dc3fe.  v2:= 0I;
  #L3dc400.  v3:= new `java.io.FileOutputStream`;
  #L3dc404.  call `<init>`(v3, v6) @signature `Ljava/io/FileOutputStream;.<init>:(Ljava/io/File;)V` @kind direct;
  #L3dc40a.  call temp:= `read`(v5, v0) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L3dc410.  v6:= temp;
  #L3dc412.  v2:= -1I;
  #L3dc414.  if v6 == v2 then goto L3dc420;
  #L3dc418.  call `write`(v3, v0, v1, v6) @signature `Ljava/io/OutputStream;.write:([BII)V` @kind virtual;
  #L3dc41e.  goto L3dc40a;
  #L3dc420.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3dc426.  v1:= 1I;
  #L3dc428.  call `close`(v3) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3dc42e.  goto L3dc464;
  #L3dc430.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dc432.  v2:= v3 @kind object;
  #L3dc434.  goto L3dc470;
  #L3dc436.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3dc438.  v2:= v3 @kind object;
  #L3dc43a.  goto L3dc442;
  #L3dc43c.  v5:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3dc43e.  goto L3dc470;
  #L3dc440.  v5:= Exception @type ^`java.io.IOException` @kind object;
  #L3dc442.  v6:= 3I;
  #L3dc444.  call temp:= `isLoggable`(v7, v6) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3dc44a.  v6:= temp;
  #L3dc44c.  if v6 == 0 then goto L3dc45a;
  #L3dc450.  v6:= "Failed to encode data onto the OutputStream" @kind object;
  #L3dc454.  call temp:= `d`(v7, v6, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3dc45a.  if v2 == 0 then goto L3dc464;
  #L3dc45e.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3dc464.  v5:= v4.`com.bumptech.glide.load.model.StreamEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3dc468.  call `put`(v5, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3dc46e.  return v1;
  #L3dc470.  if v2 == 0 then goto L3dc47a;
  #L3dc474.  call `close`(v2) @signature `Ljava/io/OutputStream;.close:()V` @kind virtual;
  #L3dc47a.  v6:= v4.`com.bumptech.glide.load.model.StreamEncoder.a` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3dc47e.  call `put`(v6, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3dc484.  throw v5;
  catch `java.io.IOException` @[L3dc400..L3dc40a] goto L3dc440;
  catch `java.lang.Throwable` @[L3dc400..L3dc40a] goto L3dc43c;
  catch `java.io.IOException` @[L3dc40a..L3dc426] goto L3dc436;
  catch `java.lang.Throwable` @[L3dc40a..L3dc426] goto L3dc430;
  catch `java.io.IOException` @[L3dc428..L3dc42e] goto L3dc464;
  catch `java.lang.Throwable` @[L3dc444..L3dc45a] goto L3dc43c;
  catch `java.io.IOException` @[L3dc45e..L3dc464] goto L3dc464;
  catch `java.io.IOException` @[L3dc474..L3dc47a] goto L3dc47a;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.model.StreamEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/StreamEncoder;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3dc4e0.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L3dc4e4.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/model/StreamEncoder;.encode:(Ljava/io/InputStream;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3dc4ea.  v1:= temp;
  #L3dc4ec.  return v1;
}
