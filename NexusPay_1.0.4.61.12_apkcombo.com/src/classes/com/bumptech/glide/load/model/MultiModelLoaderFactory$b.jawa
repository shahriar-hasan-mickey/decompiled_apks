record `com.bumptech.glide.load.model.MultiModelLoaderFactory$b` @kind class @AccessFlag  {
  `java.lang.Class` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @AccessFlag PRIVATE_FINAL;
  `java.lang.Class` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @AccessFlag FINAL;
  `com.bumptech.glide.load.model.ModelLoaderFactory` `com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object, `com.bumptech.glide.load.model.ModelLoaderFactory` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/model/ModelLoaderFactory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dbaac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dbab2.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @type ^`java.lang.Class` := v1 @kind object;
  #L3dbab6.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` := v2 @kind object;
  #L3dbaba.  v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.c` @type ^`com.bumptech.glide.load.model.ModelLoaderFactory` := v3 @kind object;
  #L3dbabe.  return @kind void;
}
procedure `boolean` `a`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3dba58.  v0:= v1.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.a` @type ^`java.lang.Class` @kind object;
  #L3dba5c.  call temp:= `isAssignableFrom`(v0, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dba62.  v2:= temp;
  #L3dba64.  return v2;
}
procedure `boolean` `b`(`com.bumptech.glide.load.model.MultiModelLoaderFactory$b` v0 @kind this, `java.lang.Class` v1 @kind object, `java.lang.Class` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.b:(Ljava/lang/Class;Ljava/lang/Class;)Z` @AccessFlag PUBLIC {
    temp;

  #L3dba78.  call temp:= `a`(v0, v1) @signature `Lcom/bumptech/glide/load/model/MultiModelLoaderFactory$b;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dba7e.  v1:= temp;
  #L3dba80.  if v1 == 0 then goto L3dba98;
  #L3dba84.  v1:= v0.`com.bumptech.glide.load.model.MultiModelLoaderFactory$b.b` @type ^`java.lang.Class` @kind object;
  #L3dba88.  call temp:= `isAssignableFrom`(v1, v2) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3dba8e.  v1:= temp;
  #L3dba90.  if v1 == 0 then goto L3dba98;
  #L3dba94.  v1:= 1I;
  #L3dba96.  goto L3dba9a;
  #L3dba98.  v1:= 0I;
  #L3dba9a.  return v1;
}
