record `com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` @kind class @AccessFlag PUBLIC_ABSTRACT extends `com.bumptech.glide.load.model.ModelLoader` @kind interface {
  `com.bumptech.glide.load.model.ModelLoader` `com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.model.ModelCache` `com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` v1 @kind this, `com.bumptech.glide.load.model.ModelLoader` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;
    v0;

  #L3dcdc8.  v0:= 0I;
  #L3dcdca.  call `<init>`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelCache;)V` @kind direct;
  #L3dcdd0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` v0 @kind this, `com.bumptech.glide.load.model.ModelLoader` v1 @kind object, `com.bumptech.glide.load.model.ModelCache` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.<init>:(Lcom/bumptech/glide/load/model/ModelLoader;Lcom/bumptech/glide/load/model/ModelCache;)V` @AccessFlag PROTECTED_CONSTRUCTOR {
    temp;

  #L3dcde4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dcdea.  v0.`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.a` @type ^`com.bumptech.glide.load.model.ModelLoader` := v1 @kind object;
  #L3dcdee.  v0.`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.b` @type ^`com.bumptech.glide.load.model.ModelCache` := v2 @kind object;
  #L3dcdf2.  return @kind void;
}
procedure `java.util.List` `a`(`java.util.Collection` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.a:(Ljava/util/Collection;)Ljava/util/List;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3dcd54.  v0:= new `java.util.ArrayList`;
  #L3dcd58.  call temp:= `size`(v3) @signature `Ljava/util/Collection;.size:()I` @kind interface;
  #L3dcd5e.  v1:= temp;
  #L3dcd60.  call `<init>`(v0, v1) @signature `Ljava/util/ArrayList;.<init>:(I)V` @kind direct;
  #L3dcd66.  call temp:= `iterator`(v3) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3dcd6c.  v3:= temp @kind object;
  #L3dcd6e.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3dcd74.  v1:= temp;
  #L3dcd76.  if v1 == 0 then goto L3dcd98;
  #L3dcd7a.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3dcd80.  v1:= temp @kind object;
  #L3dcd82.  v1:= (`java.lang.String`) v1 @kind object;
  #L3dcd86.  v2:= new `com.bumptech.glide.load.model.GlideUrl`;
  #L3dcd8a.  call `<init>`(v2, v1) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3dcd90.  call temp:= `add`(v0, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3dcd96.  goto L3dcd6e;
  #L3dcd98.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader$LoadData` `buildLoadData`(`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` v3 @kind this, `java.lang.Object` v4 @kind object, `int` v5 , `int` v6 , `com.bumptech.glide.load.Options` v7 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3dcca8.  v0:= v3.`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.b` @type ^`com.bumptech.glide.load.model.ModelCache` @kind object;
  #L3dccac.  v1:= 0I;
  #L3dccae.  if v0 == 0 then goto L3dccc0;
  #L3dccb2.  call temp:= `get`(v0, v4, v5, v6) @signature `Lcom/bumptech/glide/load/model/ModelCache;.get:(Ljava/lang/Object;II)Ljava/lang/Object;` @kind virtual;
  #L3dccb8.  v0:= temp @kind object;
  #L3dccba.  v0:= (`com.bumptech.glide.load.model.GlideUrl`) v0 @kind object;
  #L3dccbe.  goto L3dccc2;
  #L3dccc0.  v0:= v1 @kind object;
  #L3dccc2.  if v0 != 0 then goto L3dccfe;
  #L3dccc6.  call temp:= `getUrl`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getUrl:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/lang/String;` @kind virtual;
  #L3dcccc.  v0:= temp @kind object;
  #L3dccce.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L3dccd4.  v2:= temp;
  #L3dccd6.  if v2 == 0 then goto L3dccdc;
  #L3dccda.  return v1 @kind object;
  #L3dccdc.  v1:= new `com.bumptech.glide.load.model.GlideUrl`;
  #L3dcce0.  call temp:= `getHeaders`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getHeaders:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/Headers;` @kind virtual;
  #L3dcce6.  v2:= temp @kind object;
  #L3dcce8.  call `<init>`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/model/GlideUrl;.<init>:(Ljava/lang/String;Lcom/bumptech/glide/load/model/Headers;)V` @kind direct;
  #L3dccee.  v0:= v3.`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.b` @type ^`com.bumptech.glide.load.model.ModelCache` @kind object;
  #L3dccf2.  if v0 == 0 then goto L3dccfc;
  #L3dccf6.  call `put`(v0, v4, v5, v6, v1) @signature `Lcom/bumptech/glide/load/model/ModelCache;.put:(Ljava/lang/Object;IILjava/lang/Object;)V` @kind virtual;
  #L3dccfc.  v0:= v1 @kind object;
  #L3dccfe.  call temp:= `getAlternateUrls`(v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getAlternateUrls:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/util/List;` @kind virtual;
  #L3dcd04.  v4:= temp @kind object;
  #L3dcd06.  v1:= v3.`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader.a` @type ^`com.bumptech.glide.load.model.ModelLoader` @kind object;
  #L3dcd0a.  call temp:= `buildLoadData`(v1, v0, v5, v6, v7) @signature `Lcom/bumptech/glide/load/model/ModelLoader;.buildLoadData:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/ModelLoader$LoadData;` @kind interface;
  #L3dcd10.  v5:= temp @kind object;
  #L3dcd12.  if v5 == 0 then goto L3dcd40;
  #L3dcd16.  call temp:= `isEmpty`(v4) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3dcd1c.  v6:= temp;
  #L3dcd1e.  if v6 == 0 then goto L3dcd24;
  #L3dcd22.  goto L3dcd40;
  #L3dcd24.  v6:= new `com.bumptech.glide.load.model.ModelLoader$LoadData`;
  #L3dcd28.  v7:= v5.`com.bumptech.glide.load.model.ModelLoader$LoadData.sourceKey` @type ^`com.bumptech.glide.load.Key` @kind object;
  #L3dcd2c.  call temp:= `a`(v4) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.a:(Ljava/util/Collection;)Ljava/util/List;` @kind static;
  #L3dcd32.  v4:= temp @kind object;
  #L3dcd34.  v5:= v5.`com.bumptech.glide.load.model.ModelLoader$LoadData.fetcher` @type ^`com.bumptech.glide.load.data.DataFetcher` @kind object;
  #L3dcd38.  call `<init>`(v6, v7, v4, v5) @signature `Lcom/bumptech/glide/load/model/ModelLoader$LoadData;.<init>:(Lcom/bumptech/glide/load/Key;Ljava/util/List;Lcom/bumptech/glide/load/data/DataFetcher;)V` @kind direct;
  #L3dcd3e.  return v6 @kind object;
  #L3dcd40.  return v5 @kind object;
}
procedure `java.util.List` `getAlternateUrls`(`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getAlternateUrls:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/util/List;` @AccessFlag PROTECTED {
    temp;

  #L3dcdac.  call temp:= `emptyList`() @signature `Ljava/util/Collections;.emptyList:()Ljava/util/List;` @kind static;
  #L3dcdb2.  v1:= temp @kind object;
  #L3dcdb4.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.model.Headers` `getHeaders`(`com.bumptech.glide.load.model.stream.BaseGlideUrlLoader` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getHeaders:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/model/Headers;` @AccessFlag PROTECTED {
    temp;

  #L3dcc90.  v1:= `@@com.bumptech.glide.load.model.Headers.DEFAULT` @type ^`com.bumptech.glide.load.model.Headers` @kind object;
  #L3dcc94.  return v1 @kind object;
}
procedure `java.lang.String` `getUrl`(`java.lang.Object` v0 @kind object, `int` v1 , `int` v2 , `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/stream/BaseGlideUrlLoader;.getUrl:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Ljava/lang/String;` @AccessFlag PROTECTED_ABSTRACT {

  # return;
}
