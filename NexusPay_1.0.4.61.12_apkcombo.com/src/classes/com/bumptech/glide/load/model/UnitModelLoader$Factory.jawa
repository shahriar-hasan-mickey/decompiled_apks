record `com.bumptech.glide.load.model.UnitModelLoader$Factory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
}
global `com.bumptech.glide.load.model.UnitModelLoader$Factory` `@@com.bumptech.glide.load.model.UnitModelLoader$Factory.a` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;

  #L3dc78c.  v0:= new `com.bumptech.glide.load.model.UnitModelLoader$Factory`;
  #L3dc790.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.<init>:()V` @kind direct;
  #L3dc796.  `@@com.bumptech.glide.load.model.UnitModelLoader$Factory.a` @type ^`com.bumptech.glide.load.model.UnitModelLoader$Factory` := v0 @kind object;
  #L3dc79a.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.UnitModelLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dc7ac.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dc7b2.  return @kind void;
}
procedure `com.bumptech.glide.load.model.UnitModelLoader$Factory` `getInstance`() @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.getInstance:()Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3dc774.  v0:= `@@com.bumptech.glide.load.model.UnitModelLoader$Factory.a` @type ^`com.bumptech.glide.load.model.UnitModelLoader$Factory` @kind object;
  #L3dc778.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.load.model.UnitModelLoader$Factory` v0 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v1 @kind object) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;

  #L3dc758.  call temp:= `getInstance`() @signature `Lcom/bumptech/glide/load/model/UnitModelLoader;.getInstance:()Lcom/bumptech/glide/load/model/UnitModelLoader;` @kind static;
  #L3dc75e.  v1:= temp @kind object;
  #L3dc760.  return v1 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.load.model.UnitModelLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/UnitModelLoader$Factory;.teardown:()V` @AccessFlag PUBLIC {
    temp;

  #L3dc7c4.  return @kind void;
}
