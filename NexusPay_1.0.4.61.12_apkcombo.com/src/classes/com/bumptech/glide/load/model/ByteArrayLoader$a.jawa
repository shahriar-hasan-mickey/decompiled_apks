record `com.bumptech.glide.load.model.ByteArrayLoader$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.data.DataFetcher` @kind interface {
  `byte`[] `com.bumptech.glide.load.model.ByteArrayLoader$a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.model.ByteArrayLoader$Converter` `com.bumptech.glide.load.model.ByteArrayLoader$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v0 @kind this, `byte`[] v1 @kind object, `com.bumptech.glide.load.model.ByteArrayLoader$Converter` v2 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.<init>:([BLcom/bumptech/glide/load/model/ByteArrayLoader$Converter;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3d9af0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3d9af6.  v0.`com.bumptech.glide.load.model.ByteArrayLoader$a.a` @type ^`byte`[] := v1 @kind object;
  #L3d9afa.  v0.`com.bumptech.glide.load.model.ByteArrayLoader$a.b` @type ^`com.bumptech.glide.load.model.ByteArrayLoader$Converter` := v2 @kind object;
  #L3d9afe.  return @kind void;
}
procedure `void` `cancel`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.cancel:()V` @AccessFlag PUBLIC {
    temp;

  #L3d9b10.  return @kind void;
}
procedure `void` `cleanup`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v0 @kind this) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.cleanup:()V` @AccessFlag PUBLIC {
    temp;

  #L3d9b24.  return @kind void;
}
procedure `java.lang.Class` `getDataClass`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.getDataClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9ad0.  v0:= v1.`com.bumptech.glide.load.model.ByteArrayLoader$a.b` @type ^`com.bumptech.glide.load.model.ByteArrayLoader$Converter` @kind object;
  #L3d9ad4.  call temp:= `getDataClass`(v0) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$Converter;.getDataClass:()Ljava/lang/Class;` @kind interface;
  #L3d9ada.  v0:= temp @kind object;
  #L3d9adc.  return v0 @kind object;
}
procedure `com.bumptech.glide.load.DataSource` `getDataSource`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.getDataSource:()Lcom/bumptech/glide/load/DataSource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9ab8.  v0:= `@@com.bumptech.glide.load.DataSource.LOCAL` @type ^`com.bumptech.glide.load.DataSource` @kind object;
  #L3d9abc.  return v0 @kind object;
}
procedure `void` `loadData`(`com.bumptech.glide.load.model.ByteArrayLoader$a` v1 @kind this, `com.bumptech.glide.Priority` v2 @kind object, `com.bumptech.glide.load.data.DataFetcher$DataCallback` v3 @kind object) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$a;.loadData:(Lcom/bumptech/glide/Priority;Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3d9b38.  v2:= v1.`com.bumptech.glide.load.model.ByteArrayLoader$a.b` @type ^`com.bumptech.glide.load.model.ByteArrayLoader$Converter` @kind object;
  #L3d9b3c.  v0:= v1.`com.bumptech.glide.load.model.ByteArrayLoader$a.a` @type ^`byte`[] @kind object;
  #L3d9b40.  call temp:= `convert`(v2, v0) @signature `Lcom/bumptech/glide/load/model/ByteArrayLoader$Converter;.convert:([B)Ljava/lang/Object;` @kind interface;
  #L3d9b46.  v2:= temp @kind object;
  #L3d9b48.  call `onDataReady`(v3, v2) @signature `Lcom/bumptech/glide/load/data/DataFetcher$DataCallback;.onDataReady:(Ljava/lang/Object;)V` @kind interface;
  #L3d9b4e.  return @kind void;
}
