record `com.bumptech.glide.load.EncodeStrategy` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.bumptech.glide.load.EncodeStrategy`[] `@@com.bumptech.glide.load.EncodeStrategy.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.NONE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.SOURCE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.EncodeStrategy` `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3ccd2c.  v0:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L3ccd30.  v1:= "SOURCE" @kind object;
  #L3ccd34.  v2:= 0I;
  #L3ccd36.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ccd3c.  `@@com.bumptech.glide.load.EncodeStrategy.SOURCE` @type ^`com.bumptech.glide.load.EncodeStrategy` := v0 @kind object;
  #L3ccd40.  v0:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L3ccd44.  v1:= "TRANSFORMED" @kind object;
  #L3ccd48.  v3:= 1I;
  #L3ccd4a.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ccd50.  `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @type ^`com.bumptech.glide.load.EncodeStrategy` := v0 @kind object;
  #L3ccd54.  v0:= new `com.bumptech.glide.load.EncodeStrategy`;
  #L3ccd58.  v1:= "NONE" @kind object;
  #L3ccd5c.  v4:= 2I;
  #L3ccd5e.  call `<init>`(v0, v1, v4) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ccd64.  `@@com.bumptech.glide.load.EncodeStrategy.NONE` @type ^`com.bumptech.glide.load.EncodeStrategy` := v0 @kind object;
  #L3ccd68.  v1:= 3I;
  #L3ccd6a.  v1:= new `com.bumptech.glide.load.EncodeStrategy`[v1];
  #L3ccd6e.  v5:= `@@com.bumptech.glide.load.EncodeStrategy.SOURCE` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3ccd72.  v1[v2]:= v5 @kind object;
  #L3ccd76.  v2:= `@@com.bumptech.glide.load.EncodeStrategy.TRANSFORMED` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3ccd7a.  v1[v3]:= v2 @kind object;
  #L3ccd7e.  v1[v4]:= v0 @kind object;
  #L3ccd82.  `@@com.bumptech.glide.load.EncodeStrategy.$VALUES` @type ^`com.bumptech.glide.load.EncodeStrategy`[] := v1 @kind object;
  #L3ccd86.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.EncodeStrategy` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ccd98.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ccd9e.  return @kind void;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/EncodeStrategy;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ccce4.  v0:= constclass @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3ccce8.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3cccee.  v1:= temp @kind object;
  #L3cccf0.  v1:= (`com.bumptech.glide.load.EncodeStrategy`) v1 @kind object;
  #L3cccf4.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.EncodeStrategy`[] `values`() @signature `Lcom/bumptech/glide/load/EncodeStrategy;.values:()[Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3ccd08.  v0:= `@@com.bumptech.glide.load.EncodeStrategy.$VALUES` @type ^`com.bumptech.glide.load.EncodeStrategy`[] @kind object;
  #L3ccd0c.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/EncodeStrategy;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3ccd12.  v0:= temp @kind object;
  #L3ccd14.  v0:= (`com.bumptech.glide.load.EncodeStrategy`[]) v0 @kind object;
  #L3ccd18.  return v0 @kind object;
}
