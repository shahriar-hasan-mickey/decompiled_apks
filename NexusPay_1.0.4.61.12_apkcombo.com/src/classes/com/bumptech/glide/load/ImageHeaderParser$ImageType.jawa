record `com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `boolean` `com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @AccessFlag PRIVATE_FINAL;
}
global `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.bumptech.glide.load.ImageHeaderParser$ImageType` `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;

  #L3cceb8.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccebc.  v1:= "GIF" @kind object;
  #L3ccec0.  v2:= 0I;
  #L3ccec2.  v3:= 1I;
  #L3ccec4.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3cceca.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccece.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3cced2.  v1:= "JPEG" @kind object;
  #L3cced6.  call `<init>`(v0, v1, v3, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccedc.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccee0.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccee4.  v1:= "RAW" @kind object;
  #L3ccee8.  v4:= 2I;
  #L3cceea.  call `<init>`(v0, v1, v4, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccef0.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccef4.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccef8.  v1:= "PNG_A" @kind object;
  #L3ccefc.  v5:= 3I;
  #L3ccefe.  call `<init>`(v0, v1, v5, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccf04.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccf08.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccf0c.  v1:= "PNG" @kind object;
  #L3ccf10.  v6:= 4I;
  #L3ccf12.  call `<init>`(v0, v1, v6, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccf18.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccf1c.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccf20.  v1:= "WEBP_A" @kind object;
  #L3ccf24.  v7:= 5I;
  #L3ccf26.  call `<init>`(v0, v1, v7, v3) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccf2c.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccf30.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccf34.  v1:= "WEBP" @kind object;
  #L3ccf38.  v8:= 6I;
  #L3ccf3a.  call `<init>`(v0, v1, v8, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccf40.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccf44.  v0:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`;
  #L3ccf48.  v1:= "UNKNOWN" @kind object;
  #L3ccf4c.  v9:= 7I;
  #L3ccf4e.  call `<init>`(v0, v1, v9, v2) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @kind direct;
  #L3ccf54.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` := v0 @kind object;
  #L3ccf58.  v1:= 8I;
  #L3ccf5c.  v1:= new `com.bumptech.glide.load.ImageHeaderParser$ImageType`[v1];
  #L3ccf60.  v10:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf64.  v1[v2]:= v10 @kind object;
  #L3ccf68.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf6c.  v1[v3]:= v2 @kind object;
  #L3ccf70.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.RAW` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf74.  v1[v4]:= v2 @kind object;
  #L3ccf78.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf7c.  v1[v5]:= v2 @kind object;
  #L3ccf80.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf84.  v1[v6]:= v2 @kind object;
  #L3ccf88.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf8c.  v1[v7]:= v2 @kind object;
  #L3ccf90.  v2:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3ccf94.  v1[v8]:= v2 @kind object;
  #L3ccf98.  v1[v9]:= v0 @kind object;
  #L3ccf9c.  `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] := v1 @kind object;
  #L3ccfa0.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `boolean` v3 ) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.<init>:(Ljava/lang/String;IZ)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3ccfb4.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L3ccfba.  v0.`com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` := v3 @kind boolean;
  #L3ccfbe.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.valueOf:(Ljava/lang/String;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cce70.  v0:= constclass @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3cce74.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L3cce7a.  v1:= temp @kind object;
  #L3cce7c.  v1:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`) v1 @kind object;
  #L3cce80.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType`[] `values`() @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.values:()[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3cce94.  v0:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.$VALUES` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType`[] @kind object;
  #L3cce98.  call temp:= `clone`(v0) @signature `[Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L3cce9e.  v0:= temp @kind object;
  #L3ccea0.  v0:= (`com.bumptech.glide.load.ImageHeaderParser$ImageType`[]) v0 @kind object;
  #L3ccea4.  return v0 @kind object;
}
procedure `boolean` `hasAlpha`(`com.bumptech.glide.load.ImageHeaderParser$ImageType` v1 @kind this) @signature `Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;.hasAlpha:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cce58.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParser$ImageType.hasAlpha` @type ^`boolean` @kind boolean;
  #L3cce5c.  return v0;
}
