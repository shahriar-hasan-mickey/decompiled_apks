record `com.bumptech.glide.load.resource.gif.GifDrawableEncoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceEncoder` @kind interface {
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.GifDrawableEncoder` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableEncoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e4c34.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e4c3a.  return @kind void;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.gif.GifDrawableEncoder` v0 @kind this, `com.bumptech.glide.load.engine.Resource` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e4b9c.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3e4ba2.  v1:= temp @kind object;
  #L3e4ba4.  v1:= (`com.bumptech.glide.load.resource.gif.GifDrawable`) v1 @kind object;
  #L3e4ba8.  call temp:= `getBuffer`(v1) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawable;.getBuffer:()Ljava/nio/ByteBuffer;` @kind virtual;
  #L3e4bae.  v1:= temp @kind object;
  #L3e4bb0.  call `toFile`(v1, v2) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.toFile:(Ljava/nio/ByteBuffer;Ljava/io/File;)V` @kind static;
  #L3e4bb6.  v1:= 1I;
  #L3e4bb8.  goto L3e4bda;
  #L3e4bba.  v1:= Exception @type ^`java.io.IOException` @kind object;
  #L3e4bbc.  v2:= 5I;
  #L3e4bbe.  v3:= "GifEncoder" @kind object;
  #L3e4bc2.  call temp:= `isLoggable`(v3, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e4bc8.  v2:= temp;
  #L3e4bca.  if v2 == 0 then goto L3e4bd8;
  #L3e4bce.  v2:= "Failed to encode GIF drawable data" @kind object;
  #L3e4bd2.  call temp:= `w`(v3, v2, v1) @signature `Landroid/util/Log;.w:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3e4bd8.  v1:= 0I;
  #L3e4bda.  return v1;
  catch `java.io.IOException` @[L3e4ba8..L3e4bb6] goto L3e4bba;
}
procedure `boolean` `encode`(`com.bumptech.glide.load.resource.gif.GifDrawableEncoder` v0 @kind this, `java.lang.Object` v1 @kind object, `java.io.File` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableEncoder;.encode:(Ljava/lang/Object;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e4bfc.  v1:= (`com.bumptech.glide.load.engine.Resource`) v1 @kind object;
  #L3e4c00.  call temp:= `encode`(v0, v1, v2, v3) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableEncoder;.encode:(Lcom/bumptech/glide/load/engine/Resource;Ljava/io/File;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3e4c06.  v1:= temp;
  #L3e4c08.  return v1;
}
procedure `com.bumptech.glide.load.EncodeStrategy` `getEncodeStrategy`(`com.bumptech.glide.load.resource.gif.GifDrawableEncoder` v0 @kind this, `com.bumptech.glide.load.Options` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/GifDrawableEncoder;.getEncodeStrategy:(Lcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/EncodeStrategy;` @AccessFlag PUBLIC {
    temp;

  #L3e4c1c.  v1:= `@@com.bumptech.glide.load.EncodeStrategy.SOURCE` @type ^`com.bumptech.glide.load.EncodeStrategy` @kind object;
  #L3e4c20.  return v1 @kind object;
}
