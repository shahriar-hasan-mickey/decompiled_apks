record `com.bumptech.glide.load.resource.bitmap.TransformationUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `int` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.PAINT_FLAGS` @AccessFlag PUBLIC_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @AccessFlag PRIVATE_STATIC_FINAL;
global `android.graphics.Paint` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.Set` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.d` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.concurrent.locks.Lock` `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;
    v12;
    v13;
    v14;
    v15;
    v16;
    v17;
    v18;
    v19;
    v20;
    v21;
    v22;
    v23;
    v24;
    v25;
    v26;
    v27;
    v28;
    v29;
    v30;

  #L3e3084.  v0:= new `android.graphics.Paint`;
  #L3e3088.  v1:= 6I;
  #L3e308a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3e3090.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3e3094.  v0:= new `android.graphics.Paint`;
  #L3e3098.  v1:= 7I;
  #L3e309a.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3e30a0.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3e30a4.  v0:= new `java.util.HashSet`;
  #L3e30a8.  v2:= "XT1085" @kind object;
  #L3e30ac.  v3:= "XT1092" @kind object;
  #L3e30b0.  v4:= "XT1093" @kind object;
  #L3e30b4.  v5:= "XT1094" @kind object;
  #L3e30b8.  v6:= "XT1095" @kind object;
  #L3e30bc.  v7:= "XT1096" @kind object;
  #L3e30c0.  v8:= "XT1097" @kind object;
  #L3e30c4.  v9:= "XT1098" @kind object;
  #L3e30c8.  v10:= "XT1031" @kind object;
  #L3e30cc.  v11:= "XT1028" @kind object;
  #L3e30d0.  v12:= "XT937C" @kind object;
  #L3e30d4.  v13:= "XT1032" @kind object;
  #L3e30d8.  v14:= "XT1008" @kind object;
  #L3e30dc.  v15:= "XT1033" @kind object;
  #L3e30e0.  v16:= "XT1035" @kind object;
  #L3e30e4.  v17:= "XT1034" @kind object;
  #L3e30e8.  v18:= "XT939G" @kind object;
  #L3e30ec.  v19:= "XT1039" @kind object;
  #L3e30f0.  v20:= "XT1040" @kind object;
  #L3e30f4.  v21:= "XT1042" @kind object;
  #L3e30f8.  v22:= "XT1045" @kind object;
  #L3e30fc.  v23:= "XT1063" @kind object;
  #L3e3100.  v24:= "XT1064" @kind object;
  #L3e3104.  v25:= "XT1068" @kind object;
  #L3e3108.  v26:= "XT1069" @kind object;
  #L3e310c.  v27:= "XT1072" @kind object;
  #L3e3110.  v28:= "XT1077" @kind object;
  #L3e3114.  v29:= "XT1078" @kind object;
  #L3e3118.  v30:= "XT1079" @kind object;
  #L3e311c.  temp:= new `java.lang.String`[v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30];
  #L3e3122.  v2:= temp @kind object;
  #L3e3124.  call temp:= `asList`(v2) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L3e312a.  v2:= temp @kind object;
  #L3e312c.  call `<init>`(v0, v2) @signature `Ljava/util/HashSet;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3e3132.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.d` @type ^`java.util.Set` := v0 @kind object;
  #L3e3136.  v2:= `@@android.os.Build.MODEL` @type ^`java.lang.String` @kind object;
  #L3e313a.  call temp:= `contains`(v0, v2) @signature `Ljava/util/Set;.contains:(Ljava/lang/Object;)Z` @kind interface;
  #L3e3140.  v0:= temp;
  #L3e3142.  if v0 == 0 then goto L3e3152;
  #L3e3146.  v0:= new `java.util.concurrent.locks.ReentrantLock`;
  #L3e314a.  call `<init>`(v0) @signature `Ljava/util/concurrent/locks/ReentrantLock;.<init>:()V` @kind direct;
  #L3e3150.  goto L3e315c;
  #L3e3152.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$d`;
  #L3e3156.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$d;.<init>:()V` @kind direct;
  #L3e315c.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` := v0 @kind object;
  #L3e3160.  v0:= new `android.graphics.Paint`;
  #L3e3164.  call `<init>`(v0, v1) @signature `Landroid/graphics/Paint;.<init>:(I)V` @kind direct;
  #L3e316a.  `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @type ^`android.graphics.Paint` := v0 @kind object;
  #L3e316e.  v1:= new `android.graphics.PorterDuffXfermode`;
  #L3e3172.  v2:= `@@android.graphics.PorterDuff$Mode.SRC_IN` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3e3176.  call `<init>`(v1, v2) @signature `Landroid/graphics/PorterDuffXfermode;.<init>:(Landroid/graphics/PorterDuff$Mode;)V` @kind direct;
  #L3e317c.  call temp:= `setXfermode`(v0, v1) @signature `Landroid/graphics/Paint;.setXfermode:(Landroid/graphics/Xfermode;)Landroid/graphics/Xfermode;` @kind virtual;
  #L3e3182.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.TransformationUtils` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3e3194.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e319a.  return @kind void;
}
procedure `void` `a`(`android.graphics.Bitmap` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `android.graphics.Matrix` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e31ac.  v0:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e31b0.  call `lock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3e31b6.  v0:= new `android.graphics.Canvas`;
  #L3e31ba.  call `<init>`(v0, v2) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3e31c0.  v2:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.a` @type ^`android.graphics.Paint` @kind object;
  #L3e31c4.  call `drawBitmap`(v0, v1, v3, v2) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Matrix;Landroid/graphics/Paint;)V` @kind virtual;
  #L3e31ca.  call `b`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3e31d0.  v1:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e31d4.  call `unlock`(v1) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e31da.  return @kind void;
  #L3e31dc.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e31de.  v2:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e31e2.  call `unlock`(v2) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e31e8.  throw v1;
  catch `java.lang.Throwable` @[L3e31b6..L3e31d0] goto L3e31dc;
}
procedure `void` `b`(`android.graphics.Canvas` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e3208.  v0:= 0I;
  #L3e320a.  call `setBitmap`(v1, v0) @signature `Landroid/graphics/Canvas;.setBitmap:(Landroid/graphics/Bitmap;)V` @kind virtual;
  #L3e3210.  return @kind void;
}
procedure `android.graphics.Bitmap` `c`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `android.graphics.Bitmap` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2c90.  call temp:= `d`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e2c96.  v0:= temp @kind object;
  #L3e2c98.  call temp:= `getConfig`(v4) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e2c9e.  v1:= temp @kind object;
  #L3e2ca0.  call temp:= `equals`(v0, v1) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2ca6.  v1:= temp;
  #L3e2ca8.  if v1 == 0 then goto L3e2cae;
  #L3e2cac.  return v4 @kind object;
  #L3e2cae.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2cb4.  v1:= temp;
  #L3e2cb6.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2cbc.  v2:= temp;
  #L3e2cbe.  call temp:= `get`(v3, v1, v2, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e2cc4.  v3:= temp @kind object;
  #L3e2cc6.  v0:= new `android.graphics.Canvas`;
  #L3e2cca.  call `<init>`(v0, v3) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3e2cd0.  v1:= 0I;
  #L3e2cd2.  v2:= 0I;
  #L3e2cd4.  call `drawBitmap`(v0, v4, v2, v2, v1) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;FFLandroid/graphics/Paint;)V` @kind virtual;
  #L3e2cda.  return v3 @kind object;
}
procedure `android.graphics.Bitmap` `centerCrop`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.centerCrop:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2854.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e285a.  v0:= temp;
  #L3e285c.  if v0 != v8 then goto L3e286e;
  #L3e2860.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2866.  v0:= temp;
  #L3e2868.  if v0 != v9 then goto L3e286e;
  #L3e286c.  return v7 @kind object;
  #L3e286e.  v0:= new `android.graphics.Matrix`;
  #L3e2872.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3e2878.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e287e.  v1:= temp;
  #L3e2880.  v1:= v1 * v9 @kind int;
  #L3e2884.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e288a.  v2:= temp;
  #L3e288c.  v2:= v2 * v8 @kind int;
  #L3e2890.  v3:= 0I;
  #L3e2892.  v4:= 0.5F;
  #L3e2896.  if v1 <= v2 then goto L3e28c4;
  #L3e289a.  v1:= (`float`) v9 @kind i2f;
  #L3e289c.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e28a2.  v2:= temp;
  #L3e28a4.  v2:= (`float`) v2 @kind i2f;
  #L3e28a6.  v1:= v1 / v2 @kind float;
  #L3e28a8.  v2:= (`float`) v8 @kind i2f;
  #L3e28aa.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e28b0.  v5:= temp;
  #L3e28b2.  v5:= (`float`) v5 @kind i2f;
  #L3e28b4.  v5:= v5 * v1 @kind float;
  #L3e28b8.  v2:= v2 - v5 @kind float;
  #L3e28ba.  v2:= v2 * v4 @kind float;
  #L3e28be.  v3:= v2;
  #L3e28c0.  v2:= 0I;
  #L3e28c2.  goto L3e28e8;
  #L3e28c4.  v1:= (`float`) v8 @kind i2f;
  #L3e28c6.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e28cc.  v2:= temp;
  #L3e28ce.  v2:= (`float`) v2 @kind i2f;
  #L3e28d0.  v1:= v1 / v2 @kind float;
  #L3e28d2.  v2:= (`float`) v9 @kind i2f;
  #L3e28d4.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e28da.  v5:= temp;
  #L3e28dc.  v5:= (`float`) v5 @kind i2f;
  #L3e28de.  v5:= v5 * v1 @kind float;
  #L3e28e2.  v2:= v2 - v5 @kind float;
  #L3e28e4.  v2:= v2 * v4 @kind float;
  #L3e28e8.  call `setScale`(v0, v1, v1) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3e28ee.  v3:= v3 + v4 @kind float;
  #L3e28f0.  v1:= (`int`) v3 @kind f2i;
  #L3e28f2.  v1:= (`float`) v1 @kind i2f;
  #L3e28f4.  v2:= v2 + v4 @kind float;
  #L3e28f6.  v2:= (`int`) v2 @kind f2i;
  #L3e28f8.  v2:= (`float`) v2 @kind i2f;
  #L3e28fa.  call temp:= `postTranslate`(v0, v1, v2) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3e2900.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e2906.  v1:= temp @kind object;
  #L3e2908.  call temp:= `get`(v6, v8, v9, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e290e.  v6:= temp @kind object;
  #L3e2910.  call `setAlpha`(v7, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L3e2916.  call `a`(v7, v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3e291c.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `centerInside`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object, `android.graphics.Bitmap` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.centerInside:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3e2930.  call temp:= `getWidth`(v4) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2936.  v0:= temp;
  #L3e2938.  v1:= 2I;
  #L3e293a.  v2:= "TransformationUtils" @kind object;
  #L3e293e.  if v0 > v5 then goto L3e2966;
  #L3e2942.  call temp:= `getHeight`(v4) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2948.  v0:= temp;
  #L3e294a.  if v0 > v6 then goto L3e2966;
  #L3e294e.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e2954.  v3:= temp;
  #L3e2956.  if v3 == 0 then goto L3e2964;
  #L3e295a.  v3:= "requested target size larger or equal to input, returning input" @kind object;
  #L3e295e.  call temp:= `v`(v2, v3) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2964.  return v4 @kind object;
  #L3e2966.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e296c.  v0:= temp;
  #L3e296e.  if v0 == 0 then goto L3e297c;
  #L3e2972.  v0:= "requested target size too big for input, fit centering instead" @kind object;
  #L3e2976.  call temp:= `v`(v2, v0) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e297c.  call temp:= `fitCenter`(v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.fitCenter:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @kind static;
  #L3e2982.  v3:= temp @kind object;
  #L3e2984.  return v3 @kind object;
}
procedure `android.graphics.Bitmap` `circleCrop`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.circleCrop:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2998.  call temp:= `min`(v8, v9) @signature `Ljava/lang/Math;.min:(II)I` @kind static;
  #L3e299e.  v8:= temp;
  #L3e29a0.  v9:= (`float`) v8 @kind i2f;
  #L3e29a2.  v0:= 2.0F;
  #L3e29a6.  v1:= v9 / v0 @kind float;
  #L3e29aa.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e29b0.  v2:= temp;
  #L3e29b2.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e29b8.  v3:= temp;
  #L3e29ba.  v2:= (`float`) v2 @kind i2f;
  #L3e29bc.  v4:= v9 / v2 @kind float;
  #L3e29c0.  v3:= (`float`) v3 @kind i2f;
  #L3e29c2.  v5:= v9 / v3 @kind float;
  #L3e29c6.  call temp:= `max`(v4, v5) @signature `Ljava/lang/Math;.max:(FF)F` @kind static;
  #L3e29cc.  v4:= temp;
  #L3e29ce.  v2:= v2 * v4 @kind float;
  #L3e29d2.  v4:= v4 * v3 @kind float;
  #L3e29d6.  v3:= v9 - v2 @kind float;
  #L3e29da.  v3:= v3 / v0 @kind float;
  #L3e29dc.  v9:= v9 - v4 @kind float;
  #L3e29de.  v9:= v9 / v0 @kind float;
  #L3e29e0.  v0:= new `android.graphics.RectF`;
  #L3e29e4.  v2:= v2 + v3 @kind float;
  #L3e29e6.  v4:= v4 + v9 @kind float;
  #L3e29e8.  call `<init>`(v0, v3, v9, v2, v4) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3e29ee.  call temp:= `c`(v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L3e29f4.  v9:= temp @kind object;
  #L3e29f6.  call temp:= `d`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e29fc.  v2:= temp @kind object;
  #L3e29fe.  call temp:= `get`(v6, v8, v8, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e2a04.  v8:= temp @kind object;
  #L3e2a06.  v2:= 1I;
  #L3e2a08.  call `setHasAlpha`(v8, v2) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3e2a0e.  v2:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2a12.  call `lock`(v2) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3e2a18.  v2:= new `android.graphics.Canvas`;
  #L3e2a1c.  call `<init>`(v2, v8) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3e2a22.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.b` @type ^`android.graphics.Paint` @kind object;
  #L3e2a26.  call `drawCircle`(v2, v1, v1, v1, v3) @signature `Landroid/graphics/Canvas;.drawCircle:(FFFLandroid/graphics/Paint;)V` @kind virtual;
  #L3e2a2c.  v1:= 0I;
  #L3e2a2e.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.c` @type ^`android.graphics.Paint` @kind object;
  #L3e2a32.  call `drawBitmap`(v2, v9, v1, v0, v3) @signature `Landroid/graphics/Canvas;.drawBitmap:(Landroid/graphics/Bitmap;Landroid/graphics/Rect;Landroid/graphics/RectF;Landroid/graphics/Paint;)V` @kind virtual;
  #L3e2a38.  call `b`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3e2a3e.  v0:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2a42.  call `unlock`(v0) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e2a48.  call temp:= `equals`(v9, v7) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2a4e.  v7:= temp;
  #L3e2a50.  if v7 != 0 then goto L3e2a5a;
  #L3e2a54.  call `put`(v6, v9) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e2a5a.  return v8 @kind object;
  #L3e2a5c.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2a5e.  v7:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2a62.  call `unlock`(v7) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e2a68.  throw v6;
  catch `java.lang.Throwable` @[L3e2a18..L3e2a3e] goto L3e2a5c;
}
procedure `android.graphics.Bitmap$Config` `d`(`android.graphics.Bitmap` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e2f70.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3e2f74.  v1:= 26I;
  #L3e2f78.  if v0 < v1 then goto L3e2f9a;
  #L3e2f7c.  v0:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e2f80.  call temp:= `getConfig`(v2) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e2f86.  v2:= temp @kind object;
  #L3e2f88.  call temp:= `equals`(v0, v2) @signature `Landroid/graphics/Bitmap$Config;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2f8e.  v2:= temp;
  #L3e2f90.  if v2 == 0 then goto L3e2f9a;
  #L3e2f94.  v2:= `@@android.graphics.Bitmap$Config.RGBA_F16` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e2f98.  return v2 @kind object;
  #L3e2f9a.  v2:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e2f9e.  return v2 @kind object;
}
procedure `android.graphics.Bitmap$Config` `e`(`android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;

  #L3e2fb0.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e2fb6.  v0:= temp @kind object;
  #L3e2fb8.  if v0 == 0 then goto L3e2fc6;
  #L3e2fbc.  call temp:= `getConfig`(v1) @signature `Landroid/graphics/Bitmap;.getConfig:()Landroid/graphics/Bitmap$Config;` @kind virtual;
  #L3e2fc2.  v1:= temp @kind object;
  #L3e2fc4.  goto L3e2fca;
  #L3e2fc6.  v1:= `@@android.graphics.Bitmap$Config.ARGB_8888` @type ^`android.graphics.Bitmap$Config` @kind object;
  #L3e2fca.  return v1 @kind object;
}
procedure `void` `f`(`int` v5 , `android.graphics.Matrix` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.f:(ILandroid/graphics/Matrix;)V` @AccessFlag STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e3224.  v0:= -90.0F;
  #L3e3228.  v1:= 90.0F;
  #L3e322c.  v2:= 180.0F;
  #L3e3230.  v3:= 1.0F;
  #L3e3234.  v4:= -1.0F;
  #L3e3238.  goto L3e328c;
  #L3e323e.  goto L3e3288;
  #L3e3240.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e3246.  goto L3e3288;
  #L3e3248.  call `setRotate`(v6, v0) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e324e.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3e3254.  goto L3e3288;
  #L3e3256.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e325c.  goto L3e3288;
  #L3e325e.  call `setRotate`(v6, v1) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e3264.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3e326a.  goto L3e3288;
  #L3e326c.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e3272.  call temp:= `postScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.postScale:(FF)Z` @kind virtual;
  #L3e3278.  goto L3e3288;
  #L3e327a.  call `setRotate`(v6, v2) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e3280.  goto L3e3288;
  #L3e3282.  call `setScale`(v6, v4, v3) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3e3288.  return @kind void;
  #L3e328a.  
  #L3e328c.  switch v5
                  | 2 => goto L3e3282
                  | 3 => goto L3e327a
                  | 4 => goto L3e326c
                  | 5 => goto L3e325e
                  | 6 => goto L3e3256
                  | 7 => goto L3e3248
                  | 8 => goto L3e3240
                  | else => goto L3e323e;
}
procedure `android.graphics.Bitmap` `fitCenter`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v6 @kind object, `android.graphics.Bitmap` v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.fitCenter:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;II)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e2a88.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2a8e.  v0:= temp;
  #L3e2a90.  v1:= 2I;
  #L3e2a92.  v2:= "TransformationUtils" @kind object;
  #L3e2a96.  if v0 != v8 then goto L3e2abe;
  #L3e2a9a.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2aa0.  v0:= temp;
  #L3e2aa2.  if v0 != v9 then goto L3e2abe;
  #L3e2aa6.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e2aac.  v6:= temp;
  #L3e2aae.  if v6 == 0 then goto L3e2abc;
  #L3e2ab2.  v6:= "requested target size matches input, returning input" @kind object;
  #L3e2ab6.  call temp:= `v`(v2, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2abc.  return v7 @kind object;
  #L3e2abe.  v0:= (`float`) v8 @kind i2f;
  #L3e2ac0.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2ac6.  v3:= temp;
  #L3e2ac8.  v3:= (`float`) v3 @kind i2f;
  #L3e2aca.  v0:= v0 / v3 @kind float;
  #L3e2acc.  v3:= (`float`) v9 @kind i2f;
  #L3e2ace.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2ad4.  v4:= temp;
  #L3e2ad6.  v4:= (`float`) v4 @kind i2f;
  #L3e2ad8.  v3:= v3 / v4 @kind float;
  #L3e2ada.  call temp:= `min`(v0, v3) @signature `Ljava/lang/Math;.min:(FF)F` @kind static;
  #L3e2ae0.  v0:= temp;
  #L3e2ae2.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2ae8.  v3:= temp;
  #L3e2aea.  v3:= (`float`) v3 @kind i2f;
  #L3e2aec.  v3:= v3 * v0 @kind float;
  #L3e2af0.  call temp:= `round`(v3) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e2af6.  v3:= temp;
  #L3e2af8.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2afe.  v4:= temp;
  #L3e2b00.  v4:= (`float`) v4 @kind i2f;
  #L3e2b02.  v4:= v4 * v0 @kind float;
  #L3e2b06.  call temp:= `round`(v4) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e2b0c.  v4:= temp;
  #L3e2b0e.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2b14.  v5:= temp;
  #L3e2b16.  if v5 != v3 then goto L3e2b3e;
  #L3e2b1a.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2b20.  v3:= temp;
  #L3e2b22.  if v3 != v4 then goto L3e2b3e;
  #L3e2b26.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e2b2c.  v6:= temp;
  #L3e2b2e.  if v6 == 0 then goto L3e2b3c;
  #L3e2b32.  v6:= "adjusted target size matches input, returning input" @kind object;
  #L3e2b36.  call temp:= `v`(v2, v6) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2b3c.  return v7 @kind object;
  #L3e2b3e.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2b44.  v3:= temp;
  #L3e2b46.  v3:= (`float`) v3 @kind i2f;
  #L3e2b48.  v3:= v3 * v0 @kind float;
  #L3e2b4c.  v3:= (`int`) v3 @kind f2i;
  #L3e2b4e.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2b54.  v4:= temp;
  #L3e2b56.  v4:= (`float`) v4 @kind i2f;
  #L3e2b58.  v4:= v4 * v0 @kind float;
  #L3e2b5c.  v4:= (`int`) v4 @kind f2i;
  #L3e2b5e.  call temp:= `e`(v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e2b64.  v5:= temp @kind object;
  #L3e2b66.  call temp:= `get`(v6, v3, v4, v5) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e2b6c.  v6:= temp @kind object;
  #L3e2b6e.  call `setAlpha`(v7, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @kind static;
  #L3e2b74.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e2b7a.  v1:= temp;
  #L3e2b7c.  if v1 == 0 then goto L3e2c68;
  #L3e2b80.  v1:= new `java.lang.StringBuilder`;
  #L3e2b84.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2b8a.  v3:= "request: " @kind object;
  #L3e2b8e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2b94.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2b9a.  v8:= "x" @kind object;
  #L3e2b9e.  call temp:= `append`(v1, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2ba4.  call temp:= `append`(v1, v9) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2baa.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2bb0.  v9:= temp @kind object;
  #L3e2bb2.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2bb8.  v9:= new `java.lang.StringBuilder`;
  #L3e2bbc.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2bc2.  v1:= "toFit:   " @kind object;
  #L3e2bc6.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2bcc.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2bd2.  v1:= temp;
  #L3e2bd4.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2bda.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2be0.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2be6.  v1:= temp;
  #L3e2be8.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2bee.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2bf4.  v9:= temp @kind object;
  #L3e2bf6.  call temp:= `v`(v2, v9) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2bfc.  v9:= new `java.lang.StringBuilder`;
  #L3e2c00.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2c06.  v1:= "toReuse: " @kind object;
  #L3e2c0a.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c10.  call temp:= `getWidth`(v6) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2c16.  v1:= temp;
  #L3e2c18.  call temp:= `append`(v9, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c1e.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c24.  call temp:= `getHeight`(v6) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2c2a.  v8:= temp;
  #L3e2c2c.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c32.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2c38.  v8:= temp @kind object;
  #L3e2c3a.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2c40.  v8:= new `java.lang.StringBuilder`;
  #L3e2c44.  call `<init>`(v8) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2c4a.  v9:= "minPct:   " @kind object;
  #L3e2c4e.  call temp:= `append`(v8, v9) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c54.  call temp:= `append`(v8, v0) @signature `Ljava/lang/StringBuilder;.append:(F)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2c5a.  call temp:= `toString`(v8) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2c60.  v8:= temp @kind object;
  #L3e2c62.  call temp:= `v`(v2, v8) @signature `Landroid/util/Log;.v:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3e2c68.  v8:= new `android.graphics.Matrix`;
  #L3e2c6c.  call `<init>`(v8) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3e2c72.  call `setScale`(v8, v0, v0) @signature `Landroid/graphics/Matrix;.setScale:(FF)V` @kind virtual;
  #L3e2c78.  call `a`(v7, v6, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3e2c7e.  return v6 @kind object;
}
procedure `android.graphics.Bitmap` `g`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v7 @kind object, `android.graphics.Bitmap` v8 @kind object, `com.bumptech.glide.load.resource.bitmap.TransformationUtils$c` v9 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e2e10.  call temp:= `d`(v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.d:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e2e16.  v0:= temp @kind object;
  #L3e2e18.  call temp:= `c`(v7, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.c:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap;` @kind static;
  #L3e2e1e.  v1:= temp @kind object;
  #L3e2e20.  call temp:= `getWidth`(v1) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2e26.  v2:= temp;
  #L3e2e28.  call temp:= `getHeight`(v1) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2e2e.  v3:= temp;
  #L3e2e30.  call temp:= `get`(v7, v2, v3, v0) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e2e36.  v0:= temp @kind object;
  #L3e2e38.  v2:= 1I;
  #L3e2e3a.  call `setHasAlpha`(v0, v2) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3e2e40.  v3:= new `android.graphics.BitmapShader`;
  #L3e2e44.  v4:= `@@android.graphics.Shader$TileMode.CLAMP` @type ^`android.graphics.Shader$TileMode` @kind object;
  #L3e2e48.  call `<init>`(v3, v1, v4, v4) @signature `Landroid/graphics/BitmapShader;.<init>:(Landroid/graphics/Bitmap;Landroid/graphics/Shader$TileMode;Landroid/graphics/Shader$TileMode;)V` @kind direct;
  #L3e2e4e.  v4:= new `android.graphics.Paint`;
  #L3e2e52.  call `<init>`(v4) @signature `Landroid/graphics/Paint;.<init>:()V` @kind direct;
  #L3e2e58.  call `setAntiAlias`(v4, v2) @signature `Landroid/graphics/Paint;.setAntiAlias:(Z)V` @kind virtual;
  #L3e2e5e.  call temp:= `setShader`(v4, v3) @signature `Landroid/graphics/Paint;.setShader:(Landroid/graphics/Shader;)Landroid/graphics/Shader;` @kind virtual;
  #L3e2e64.  v2:= new `android.graphics.RectF`;
  #L3e2e68.  call temp:= `getWidth`(v0) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2e6e.  v3:= temp;
  #L3e2e70.  v3:= (`float`) v3 @kind i2f;
  #L3e2e72.  call temp:= `getHeight`(v0) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2e78.  v5:= temp;
  #L3e2e7a.  v5:= (`float`) v5 @kind i2f;
  #L3e2e7c.  v6:= 0I;
  #L3e2e7e.  call `<init>`(v2, v6, v6, v3, v5) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3e2e84.  v3:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2e88.  call `lock`(v3) @signature `Ljava/util/concurrent/locks/Lock;.lock:()V` @kind interface;
  #L3e2e8e.  v3:= new `android.graphics.Canvas`;
  #L3e2e92.  call `<init>`(v3, v0) @signature `Landroid/graphics/Canvas;.<init>:(Landroid/graphics/Bitmap;)V` @kind direct;
  #L3e2e98.  v5:= 0I;
  #L3e2e9a.  v6:= `@@android.graphics.PorterDuff$Mode.CLEAR` @type ^`android.graphics.PorterDuff$Mode` @kind object;
  #L3e2e9e.  call `drawColor`(v3, v5, v6) @signature `Landroid/graphics/Canvas;.drawColor:(ILandroid/graphics/PorterDuff$Mode;)V` @kind virtual;
  #L3e2ea4.  call `a`(v9, v3, v4, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;.a:(Landroid/graphics/Canvas;Landroid/graphics/Paint;Landroid/graphics/RectF;)V` @kind interface;
  #L3e2eaa.  call `b`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.b:(Landroid/graphics/Canvas;)V` @kind static;
  #L3e2eb0.  v9:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2eb4.  call `unlock`(v9) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e2eba.  call temp:= `equals`(v1, v8) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e2ec0.  v8:= temp;
  #L3e2ec2.  if v8 != 0 then goto L3e2ecc;
  #L3e2ec6.  call `put`(v7, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e2ecc.  return v0 @kind object;
  #L3e2ece.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2ed0.  v8:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e2ed4.  call `unlock`(v8) @signature `Ljava/util/concurrent/locks/Lock;.unlock:()V` @kind interface;
  #L3e2eda.  throw v7;
  catch `java.lang.Throwable` @[L3e2e8e..L3e2eb0] goto L3e2ece;
}
procedure `java.util.concurrent.locks.Lock` `getBitmapDrawableLock`() @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getBitmapDrawableLock:()Ljava/util/concurrent/locks/Lock;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e306c.  v0:= `@@com.bumptech.glide.load.resource.bitmap.TransformationUtils.e` @type ^`java.util.concurrent.locks.Lock` @kind object;
  #L3e3070.  return v0 @kind object;
}
procedure `int` `getExifOrientationDegrees`(`int` v0 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.getExifOrientationDegrees:(I)I` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e3020.  goto L3e303c;
  #L3e3026.  v0:= 0I;
  #L3e3028.  goto L3e303a;
  #L3e302a.  v0:= 270I;
  #L3e302e.  goto L3e303a;
  #L3e3030.  v0:= 90I;
  #L3e3034.  goto L3e303a;
  #L3e3036.  v0:= 180I;
  #L3e303a.  return v0;
  #L3e303c.  switch v0
                  | 3 => goto L3e3036
                  | 4 => goto L3e3036
                  | 5 => goto L3e3030
                  | 6 => goto L3e3030
                  | 7 => goto L3e302a
                  | 8 => goto L3e302a
                  | else => goto L3e3026;
}
procedure `boolean` `isExifOrientationRequired`(`int` v0 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.isExifOrientationRequired:(I)Z` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2fdc.  goto L3e2fec;
  #L3e2fe2.  v0:= 0I;
  #L3e2fe4.  return v0;
  #L3e2fe6.  v0:= 1I;
  #L3e2fe8.  return v0;
  #L3e2fea.  
  #L3e2fec.  switch v0
                  | 2 => goto L3e2fe6
                  | 3 => goto L3e2fe6
                  | 4 => goto L3e2fe6
                  | 5 => goto L3e2fe6
                  | 6 => goto L3e2fe6
                  | 7 => goto L3e2fe6
                  | 8 => goto L3e2fe6
                  | else => goto L3e2fe2;
}
procedure `android.graphics.Bitmap` `rotateImage`(`android.graphics.Bitmap` v7 @kind object, `int` v8 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImage:(Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L3e2cec.  if v8 == 0 then goto L3e2d42;
  #L3e2cf0.  v5:= new `android.graphics.Matrix`;
  #L3e2cf4.  call `<init>`(v5) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3e2cfa.  v8:= (`float`) v8 @kind i2f;
  #L3e2cfc.  call `setRotate`(v5, v8) @signature `Landroid/graphics/Matrix;.setRotate:(F)V` @kind virtual;
  #L3e2d02.  v1:= 0I;
  #L3e2d04.  v2:= 0I;
  #L3e2d06.  call temp:= `getWidth`(v7) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2d0c.  v3:= temp;
  #L3e2d0e.  call temp:= `getHeight`(v7) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2d14.  v4:= temp;
  #L3e2d16.  v6:= 1I;
  #L3e2d18.  v0:= v7 @kind object;
  #L3e2d1a.  call temp:= `createBitmap`(v0, v1, v2, v3, v4, v5, v6) @signature `Landroid/graphics/Bitmap;.createBitmap:(Landroid/graphics/Bitmap;IIIILandroid/graphics/Matrix;Z)Landroid/graphics/Bitmap;` @kind static;
  #L3e2d20.  v7:= temp @kind object;
  #L3e2d22.  goto L3e2d42;
  #L3e2d24.  v8:= Exception @type ^`java.lang.Exception` @kind object;
  #L3e2d26.  v0:= 6I;
  #L3e2d28.  v1:= "TransformationUtils" @kind object;
  #L3e2d2c.  call temp:= `isLoggable`(v1, v0) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3e2d32.  v0:= temp;
  #L3e2d34.  if v0 == 0 then goto L3e2d42;
  #L3e2d38.  v0:= "Exception when trying to orient image" @kind object;
  #L3e2d3c.  call temp:= `e`(v1, v0, v8) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L3e2d42.  return v7 @kind object;
  catch `java.lang.Exception` @[L3e2cf0..L3e2d22] goto L3e2d24;
}
procedure `android.graphics.Bitmap` `rotateImageExif`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v4 @kind object, `android.graphics.Bitmap` v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.rotateImageExif:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3e2d64.  call temp:= `isExifOrientationRequired`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.isExifOrientationRequired:(I)Z` @kind static;
  #L3e2d6a.  v0:= temp;
  #L3e2d6c.  if v0 != 0 then goto L3e2d72;
  #L3e2d70.  return v5 @kind object;
  #L3e2d72.  v0:= new `android.graphics.Matrix`;
  #L3e2d76.  call `<init>`(v0) @signature `Landroid/graphics/Matrix;.<init>:()V` @kind direct;
  #L3e2d7c.  call `f`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.f:(ILandroid/graphics/Matrix;)V` @kind static;
  #L3e2d82.  v6:= new `android.graphics.RectF`;
  #L3e2d86.  call temp:= `getWidth`(v5) @signature `Landroid/graphics/Bitmap;.getWidth:()I` @kind virtual;
  #L3e2d8c.  v1:= temp;
  #L3e2d8e.  v1:= (`float`) v1 @kind i2f;
  #L3e2d90.  call temp:= `getHeight`(v5) @signature `Landroid/graphics/Bitmap;.getHeight:()I` @kind virtual;
  #L3e2d96.  v2:= temp;
  #L3e2d98.  v2:= (`float`) v2 @kind i2f;
  #L3e2d9a.  v3:= 0I;
  #L3e2d9c.  call `<init>`(v6, v3, v3, v1, v2) @signature `Landroid/graphics/RectF;.<init>:(FFFF)V` @kind direct;
  #L3e2da2.  call temp:= `mapRect`(v0, v6) @signature `Landroid/graphics/Matrix;.mapRect:(Landroid/graphics/RectF;)Z` @kind virtual;
  #L3e2da8.  call temp:= `width`(v6) @signature `Landroid/graphics/RectF;.width:()F` @kind virtual;
  #L3e2dae.  v1:= temp;
  #L3e2db0.  call temp:= `round`(v1) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e2db6.  v1:= temp;
  #L3e2db8.  call temp:= `height`(v6) @signature `Landroid/graphics/RectF;.height:()F` @kind virtual;
  #L3e2dbe.  v2:= temp;
  #L3e2dc0.  call temp:= `round`(v2) @signature `Ljava/lang/Math;.round:(F)I` @kind static;
  #L3e2dc6.  v2:= temp;
  #L3e2dc8.  call temp:= `e`(v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.e:(Landroid/graphics/Bitmap;)Landroid/graphics/Bitmap$Config;` @kind static;
  #L3e2dce.  v3:= temp @kind object;
  #L3e2dd0.  call temp:= `get`(v4, v1, v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.get:(IILandroid/graphics/Bitmap$Config;)Landroid/graphics/Bitmap;` @kind interface;
  #L3e2dd6.  v4:= temp @kind object;
  #L3e2dd8.  v1:= v6.`android.graphics.RectF.left` @type ^`float`;
  #L3e2ddc.  v1:= -v1 @kind float;
  #L3e2dde.  v6:= v6.`android.graphics.RectF.top` @type ^`float`;
  #L3e2de2.  v6:= -v6 @kind float;
  #L3e2de4.  call temp:= `postTranslate`(v0, v1, v6) @signature `Landroid/graphics/Matrix;.postTranslate:(FF)Z` @kind virtual;
  #L3e2dea.  call temp:= `hasAlpha`(v5) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3e2df0.  v6:= temp;
  #L3e2df2.  call `setHasAlpha`(v4, v6) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3e2df8.  call `a`(v5, v4, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.a:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;Landroid/graphics/Matrix;)V` @kind static;
  #L3e2dfe.  return v4 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v1 @kind object, `android.graphics.Bitmap` v2 @kind object, `float` v3 , `float` v4 , `float` v5 , `float` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;FFFF)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3e2ef8.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$b`;
  #L3e2efc.  call `<init>`(v0, v3, v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$b;.<init>:(FFFF)V` @kind direct;
  #L3e2f02.  call temp:= `g`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @kind static;
  #L3e2f08.  v1:= temp @kind object;
  #L3e2f0a.  return v1 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `android.graphics.Bitmap` v3 @kind object, `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3e2f1c.  if v4 <= 0 then goto L3e2f24;
  #L3e2f20.  v0:= 1I;
  #L3e2f22.  goto L3e2f26;
  #L3e2f24.  v0:= 0I;
  #L3e2f26.  v1:= "roundingRadius must be greater than 0." @kind object;
  #L3e2f2a.  call `checkArgument`(v0, v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkArgument:(ZLjava/lang/String;)V` @kind static;
  #L3e2f30.  v0:= new `com.bumptech.glide.load.resource.bitmap.TransformationUtils$a`;
  #L3e2f34.  call `<init>`(v0, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$a;.<init>:(I)V` @kind direct;
  #L3e2f3a.  call temp:= `g`(v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.g:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils$c;)Landroid/graphics/Bitmap;` @kind static;
  #L3e2f40.  v2:= temp @kind object;
  #L3e2f42.  return v2 @kind object;
}
procedure `android.graphics.Bitmap` `roundedCorners`(`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v0 @kind object, `android.graphics.Bitmap` v1 @kind object, `int` v2 , `int` v3 , `int` v4 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;III)Landroid/graphics/Bitmap;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e2f54.  call temp:= `roundedCorners`(v0, v1, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.roundedCorners:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;I)Landroid/graphics/Bitmap;` @kind static;
  #L3e2f5a.  v0:= temp @kind object;
  #L3e2f5c.  return v0 @kind object;
}
procedure `void` `setAlpha`(`android.graphics.Bitmap` v0 @kind object, `android.graphics.Bitmap` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/TransformationUtils;.setAlpha:(Landroid/graphics/Bitmap;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC_STATIC {
    temp;

  #L3e32c0.  call temp:= `hasAlpha`(v0) @signature `Landroid/graphics/Bitmap;.hasAlpha:()Z` @kind virtual;
  #L3e32c6.  v0:= temp;
  #L3e32c8.  call `setHasAlpha`(v1, v0) @signature `Landroid/graphics/Bitmap;.setHasAlpha:(Z)V` @kind virtual;
  #L3e32ce.  return @kind void;
}
