record `com.bumptech.glide.load.resource.bitmap.DrawableTransformation` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Transformation` @kind interface {
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @AccessFlag PRIVATE_FINAL;
  `boolean` `com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this, `com.bumptech.glide.load.Transformation` v1 @kind object, `boolean` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e106c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e1072.  v0.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` := v1 @kind object;
  #L3e1076.  v0.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @type ^`boolean` := v2 @kind boolean;
  #L3e107a.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.load.engine.Resource` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.a:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE {
    temp;

  #L3e0f84.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3e0f8a.  v1:= temp @kind object;
  #L3e0f8c.  call temp:= `obtain`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource;.obtain:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3e0f92.  v1:= temp @kind object;
  #L3e0f94.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.Transformation` `asBitmapDrawable`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.asBitmapDrawable:()Lcom/bumptech/glide/load/Transformation;` @AccessFlag PUBLIC {
    temp;

  #L3e0f70.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e0f3c.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` @kind boolean;
  #L3e0f40.  if v0 == 0 then goto L3e0f5a;
  #L3e0f44.  v2:= (`com.bumptech.glide.load.resource.bitmap.DrawableTransformation`) v2 @kind object;
  #L3e0f48.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3e0f4c.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3e0f50.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e0f56.  v2:= temp;
  #L3e0f58.  return v2;
  #L3e0f5a.  v2:= 0I;
  #L3e0f5c.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e104c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3e1050.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3e1056.  v0:= temp;
  #L3e1058.  return v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v2 @kind this, `android.content.Context` v3 @kind object, `com.bumptech.glide.load.engine.Resource` v4 @kind object, `int` v5 , `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e0fa8.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/Glide;.get:(Landroid/content/Context;)Lcom/bumptech/glide/Glide;` @kind static;
  #L3e0fae.  v0:= temp @kind object;
  #L3e0fb0.  call temp:= `getBitmapPool`(v0) @signature `Lcom/bumptech/glide/Glide;.getBitmapPool:()Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;` @kind virtual;
  #L3e0fb6.  v0:= temp @kind object;
  #L3e0fb8.  call temp:= `get`(v4) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3e0fbe.  v1:= temp @kind object;
  #L3e0fc0.  v1:= (`android.graphics.drawable.Drawable`) v1 @kind object;
  #L3e0fc4.  call temp:= `a`(v0, v1, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/a;.a:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/drawable/Drawable;II)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3e0fca.  v0:= temp @kind object;
  #L3e0fcc.  if v0 != 0 then goto L3e1012;
  #L3e0fd0.  v3:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.b` @type ^`boolean` @kind boolean;
  #L3e0fd4.  if v3 != 0 then goto L3e0fda;
  #L3e0fd8.  return v4 @kind object;
  #L3e0fda.  v3:= new `java.lang.IllegalArgumentException`;
  #L3e0fde.  v4:= new `java.lang.StringBuilder`;
  #L3e0fe2.  call `<init>`(v4) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e0fe8.  v5:= "Unable to convert " @kind object;
  #L3e0fec.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0ff2.  call temp:= `append`(v4, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e0ff8.  v5:= " to a Bitmap" @kind object;
  #L3e0ffc.  call temp:= `append`(v4, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e1002.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e1008.  v4:= temp @kind object;
  #L3e100a.  call `<init>`(v3, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1010.  throw v3;
  #L3e1012.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3e1016.  call temp:= `transform`(v1, v3, v0, v5, v6) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3e101c.  v5:= temp @kind object;
  #L3e101e.  call temp:= `equals`(v5, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3e1024.  v6:= temp;
  #L3e1026.  if v6 == 0 then goto L3e1032;
  #L3e102a.  call `recycle`(v5) @signature `Lcom/bumptech/glide/load/engine/Resource;.recycle:()V` @kind interface;
  #L3e1030.  return v4 @kind object;
  #L3e1032.  call temp:= `a`(v2, v3, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.a:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind direct;
  #L3e1038.  v3:= temp @kind object;
  #L3e103a.  return v3 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.resource.bitmap.DrawableTransformation` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e108c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3e1090.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3e1096.  return @kind void;
}
