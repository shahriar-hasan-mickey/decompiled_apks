record `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.Downsampler` `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.Downsampler` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/Downsampler;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3e26c0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e26c6.  v0.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` := v1 @kind object;
  #L3e26ca.  v0.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3e26ce.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` v8 @kind this, `java.io.InputStream` v9 @kind object, `int` v10 , `int` v11 , `com.bumptech.glide.load.Options` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e260c.  v0:= instanceof @variable v9 @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind boolean;
  #L3e2610.  if v0 == 0 then goto L3e261c;
  #L3e2614.  v9:= (`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`) v9 @kind object;
  #L3e2618.  v0:= 0I;
  #L3e261a.  goto L3e2630;
  #L3e261c.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream`;
  #L3e2620.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3e2624.  call `<init>`(v0, v9, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @kind direct;
  #L3e262a.  v9:= 1I;
  #L3e262c.  v9:= v0 @kind object;
  #L3e262e.  v0:= 1I;
  #L3e2630.  call temp:= `obtain`(v9) @signature `Lcom/bumptech/glide/util/ExceptionCatchingInputStream;.obtain:(Ljava/io/InputStream;)Lcom/bumptech/glide/util/ExceptionCatchingInputStream;` @kind static;
  #L3e2636.  v1:= temp @kind object;
  #L3e2638.  v3:= new `com.bumptech.glide.util.MarkEnforcingInputStream`;
  #L3e263c.  call `<init>`(v3, v1) @signature `Lcom/bumptech/glide/util/MarkEnforcingInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3e2642.  v7:= new `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a`;
  #L3e2646.  call `<init>`(v7, v9, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder$a;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;Lcom/bumptech/glide/util/ExceptionCatchingInputStream;)V` @kind direct;
  #L3e264c.  v2:= v8.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` @kind object;
  #L3e2650.  v4:= v10;
  #L3e2652.  v5:= v11;
  #L3e2654.  v6:= v12 @kind object;
  #L3e2656.  call temp:= `decode`(v2, v3, v4, v5, v6, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/Downsampler;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;Lcom/bumptech/glide/load/resource/bitmap/Downsampler$DecodeCallbacks;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3e265c.  v10:= temp @kind object;
  #L3e265e.  call `release`(v1) @signature `Lcom/bumptech/glide/util/ExceptionCatchingInputStream;.release:()V` @kind virtual;
  #L3e2664.  if v0 == 0 then goto L3e266e;
  #L3e2668.  call `release`(v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @kind virtual;
  #L3e266e.  return v10 @kind object;
  #L3e2670.  v10:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2672.  call `release`(v1) @signature `Lcom/bumptech/glide/util/ExceptionCatchingInputStream;.release:()V` @kind virtual;
  #L3e2678.  if v0 == 0 then goto L3e2682;
  #L3e267c.  call `release`(v9) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @kind virtual;
  #L3e2682.  throw v10;
  catch `java.lang.Throwable` @[L3e264c..L3e265e] goto L3e2670;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e26a0.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L3e26a4.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3e26aa.  v1:= temp @kind object;
  #L3e26ac.  return v1 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.handles:(Ljava/io/InputStream;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3e25cc.  v2:= v0.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` @kind object;
  #L3e25d0.  call temp:= `handles`(v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/Downsampler;.handles:(Ljava/io/InputStream;)Z` @kind virtual;
  #L3e25d6.  v1:= temp;
  #L3e25d8.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3e25ec.  v1:= (`java.io.InputStream`) v1 @kind object;
  #L3e25f0.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder;.handles:(Ljava/io/InputStream;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3e25f6.  v1:= temp;
  #L3e25f8.  return v1;
}
