record `com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.ResourceDecoder` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.a` @AccessFlag PRIVATE_FINAL;
  `android.content.res.Resources` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` v0 @kind this, `android.content.Context` v1 @kind object, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.<init>:(Landroid/content/Context;Lcom/bumptech/glide/load/ResourceDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3ddda0.  call temp:= `getResources`(v1) @signature `Landroid/content/Context;.getResources:()Landroid/content/res/Resources;` @kind virtual;
  #L3ddda6.  v1:= temp @kind object;
  #L3ddda8.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind direct;
  #L3dddae.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` v0 @kind this, `android.content.res.Resources` v1 @kind object, `com.bumptech.glide.load.ResourceDecoder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/ResourceDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dddc0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3dddc6.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3dddcc.  v1:= temp @kind object;
  #L3dddce.  v1:= (`android.content.res.Resources`) v1 @kind object;
  #L3dddd2.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.b` @type ^`android.content.res.Resources` := v1 @kind object;
  #L3dddd6.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3ddddc.  v1:= temp @kind object;
  #L3dddde.  v1:= (`com.bumptech.glide.load.ResourceDecoder`) v1 @kind object;
  #L3ddde2.  v0.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.a` @type ^`com.bumptech.glide.load.ResourceDecoder` := v1 @kind object;
  #L3ddde6.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` v0 @kind this, `android.content.res.Resources` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `com.bumptech.glide.load.ResourceDecoder` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Lcom/bumptech/glide/load/ResourceDecoder;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3dddf8.  call `<init>`(v0, v1, v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.<init>:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/ResourceDecoder;)V` @kind direct;
  #L3dddfe.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` v1 @kind this, `java.lang.Object` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddd74.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.a` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L3ddd78.  call temp:= `decode`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3ddd7e.  v2:= temp @kind object;
  #L3ddd80.  v3:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.b` @type ^`android.content.res.Resources` @kind object;
  #L3ddd84.  call temp:= `obtain`(v3, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/LazyBitmapDrawableResource;.obtain:(Landroid/content/res/Resources;Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3ddd8a.  v2:= temp @kind object;
  #L3ddd8c.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder` v1 @kind this, `java.lang.Object` v2 @kind object, `com.bumptech.glide.load.Options` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddd54.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableDecoder.a` @type ^`com.bumptech.glide.load.ResourceDecoder` @kind object;
  #L3ddd58.  call temp:= `handles`(v0, v2, v3) @signature `Lcom/bumptech/glide/load/ResourceDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @kind interface;
  #L3ddd5e.  v2:= temp;
  #L3ddd60.  return v2;
}
