record `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a` @kind class @AccessFlag  extends `com.bumptech.glide.load.resource.bitmap.Downsampler$DecodeCallbacks` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.util.ExceptionCatchingInputStream` `com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind object, `com.bumptech.glide.util.ExceptionCatchingInputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder$a;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;Lcom/bumptech/glide/util/ExceptionCatchingInputStream;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e2560.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e2566.  v0.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` := v1 @kind object;
  #L3e256a.  v0.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.b` @type ^`com.bumptech.glide.util.ExceptionCatchingInputStream` := v2 @kind object;
  #L3e256e.  return @kind void;
}
procedure `void` `onDecodeComplete`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a` v1 @kind this, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object, `android.graphics.Bitmap` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder$a;.onDecodeComplete:(Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;Landroid/graphics/Bitmap;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2580.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.b` @type ^`com.bumptech.glide.util.ExceptionCatchingInputStream` @kind object;
  #L3e2584.  call temp:= `getException`(v0) @signature `Lcom/bumptech/glide/util/ExceptionCatchingInputStream;.getException:()Ljava/io/IOException;` @kind virtual;
  #L3e258a.  v0:= temp @kind object;
  #L3e258c.  if v0 == 0 then goto L3e259c;
  #L3e2590.  if v3 == 0 then goto L3e259a;
  #L3e2594.  call `put`(v2, v3) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3e259a.  throw v0;
  #L3e259c.  return @kind void;
}
procedure `void` `onObtainBounds`(`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/StreamBitmapDecoder$a;.onObtainBounds:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e25b0.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.StreamBitmapDecoder$a.a` @type ^`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind object;
  #L3e25b4.  call `fixMarkLimit`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fixMarkLimit:()V` @kind virtual;
  #L3e25ba.  return @kind void;
}
