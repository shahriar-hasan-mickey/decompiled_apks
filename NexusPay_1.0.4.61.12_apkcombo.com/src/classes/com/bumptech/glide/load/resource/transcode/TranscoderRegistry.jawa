record `com.bumptech.glide.load.resource.transcode.TranscoderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.load.resource.transcode.TranscoderRegistry.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e6210.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e6216.  v0:= new `java.util.ArrayList`;
  #L3e621a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e6220.  v1.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.a` @type ^`java.util.List` := v0 @kind object;
  #L3e6224.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` `get`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.get:(Ljava/lang/Class;Ljava/lang/Class;)Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e60c4.  @monitorenter v3
  #L3e60c6.  call temp:= `isAssignableFrom`(v5, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e60cc.  v0:= temp;
  #L3e60ce.  if v0 == 0 then goto L3e60de;
  #L3e60d2.  call temp:= `get`() @signature `Lcom/bumptech/glide/load/resource/transcode/UnitTranscoder;.get:()Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;` @kind static;
  #L3e60d8.  v4:= temp @kind object;
  #L3e60da.  @monitorexit v3
  #L3e60dc.  return v4 @kind object;
  #L3e60de.  v0:= v3.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e60e2.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e60e8.  v0:= temp @kind object;
  #L3e60ea.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e60f0.  v1:= temp;
  #L3e60f2.  if v1 == 0 then goto L3e6116;
  #L3e60f6.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e60fc.  v1:= temp @kind object;
  #L3e60fe.  v1:= (`com.bumptech.glide.load.resource.transcode.TranscoderRegistry$a`) v1 @kind object;
  #L3e6102.  call temp:= `a`(v1, v4, v5) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3e6108.  v2:= temp;
  #L3e610a.  if v2 == 0 then goto L3e60ea;
  #L3e610e.  v4:= v1.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry$a.c` @type ^`com.bumptech.glide.load.resource.transcode.ResourceTranscoder` @kind object;
  #L3e6112.  @monitorexit v3
  #L3e6114.  return v4 @kind object;
  #L3e6116.  v0:= new `java.lang.IllegalArgumentException`;
  #L3e611a.  v1:= new `java.lang.StringBuilder`;
  #L3e611e.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e6124.  v2:= "No transcoder registered to transcode from " @kind object;
  #L3e6128.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e612e.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6134.  v4:= " to " @kind object;
  #L3e6138.  call temp:= `append`(v1, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e613e.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e6144.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e614a.  v4:= temp @kind object;
  #L3e614c.  call `<init>`(v0, v4) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e6152.  throw v0;
  #L3e6154.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e6156.  @monitorexit v3
  #L3e6158.  throw v4;
  catch `java.lang.Throwable` @[L3e60c6..L3e60da] goto L3e6154;
  catch `java.lang.Throwable` @[L3e60de..L3e6112] goto L3e6154;
  catch `java.lang.Throwable` @[L3e6116..L3e6154] goto L3e6154;
}
procedure `java.util.List` `getTranscodeClasses`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object, `java.lang.Class` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.getTranscodeClasses:(Ljava/lang/Class;Ljava/lang/Class;)Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e6188.  @monitorenter v3
  #L3e618a.  v0:= new `java.util.ArrayList`;
  #L3e618e.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e6194.  call temp:= `isAssignableFrom`(v5, v4) @signature `Ljava/lang/Class;.isAssignableFrom:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e619a.  v1:= temp;
  #L3e619c.  if v1 == 0 then goto L3e61aa;
  #L3e61a0.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e61a6.  @monitorexit v3
  #L3e61a8.  return v0 @kind object;
  #L3e61aa.  v1:= v3.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e61ae.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e61b4.  v1:= temp @kind object;
  #L3e61b6.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e61bc.  v2:= temp;
  #L3e61be.  if v2 == 0 then goto L3e61e2;
  #L3e61c2.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e61c8.  v2:= temp @kind object;
  #L3e61ca.  v2:= (`com.bumptech.glide.load.resource.transcode.TranscoderRegistry$a`) v2 @kind object;
  #L3e61ce.  call temp:= `a`(v2, v4, v5) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry$a;.a:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind virtual;
  #L3e61d4.  v2:= temp;
  #L3e61d6.  if v2 == 0 then goto L3e61b6;
  #L3e61da.  call temp:= `add`(v0, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e61e0.  goto L3e61b6;
  #L3e61e2.  @monitorexit v3
  #L3e61e4.  return v0 @kind object;
  #L3e61e6.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e61e8.  @monitorexit v3
  #L3e61ea.  throw v4;
  catch `java.lang.Throwable` @[L3e618a..L3e61a6] goto L3e61e6;
  catch `java.lang.Throwable` @[L3e61aa..L3e61e0] goto L3e61e6;
}
procedure `void` `register`(`com.bumptech.glide.load.resource.transcode.TranscoderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.resource.transcode.ResourceTranscoder` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry;.register:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e6238.  @monitorenter v2
  #L3e623a.  v0:= v2.`com.bumptech.glide.load.resource.transcode.TranscoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e623e.  v1:= new `com.bumptech.glide.load.resource.transcode.TranscoderRegistry$a`;
  #L3e6242.  call `<init>`(v1, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/transcode/TranscoderRegistry$a;.<init>:(Ljava/lang/Class;Ljava/lang/Class;Lcom/bumptech/glide/load/resource/transcode/ResourceTranscoder;)V` @kind direct;
  #L3e6248.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e624e.  @monitorexit v2
  #L3e6250.  return @kind void;
  #L3e6252.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e6254.  @monitorexit v2
  #L3e6256.  throw v3;
  catch `java.lang.Throwable` @[L3e623a..L3e624e] goto L3e6252;
}
