record `com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.Downsampler` `com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` v0 @kind this, `com.bumptech.glide.load.resource.bitmap.Downsampler` v1 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.<init>:(Lcom/bumptech/glide/load/resource/bitmap/Downsampler;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3de874.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de87a.  v0.`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` := v1 @kind object;
  #L3de87e.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3de82c.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3de830.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.decode:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3de836.  v1:= temp @kind object;
  #L3de838.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.decode:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de84c.  call temp:= `toStream`(v2) @signature `Lcom/bumptech/glide/util/ByteBufferUtil;.toStream:(Ljava/nio/ByteBuffer;)Ljava/io/InputStream;` @kind static;
  #L3de852.  v2:= temp @kind object;
  #L3de854.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` @kind object;
  #L3de858.  call temp:= `decode`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/Downsampler;.decode:(Ljava/io/InputStream;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3de85e.  v2:= temp @kind object;
  #L3de860.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3de7ec.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3de7f0.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.handles:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3de7f6.  v1:= temp;
  #L3de7f8.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapDecoder;.handles:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3de80c.  v2:= v0.`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.Downsampler` @kind object;
  #L3de810.  call temp:= `handles`(v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/Downsampler;.handles:(Ljava/nio/ByteBuffer;)Z` @kind virtual;
  #L3de816.  v1:= temp;
  #L3de818.  return v1;
}
