record `com.bumptech.glide.load.resource.bitmap.BitmapResource` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.engine.Resource` @kind interface, `com.bumptech.glide.load.engine.Initializable` @kind interface {
  `android.graphics.Bitmap` `com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @AccessFlag PRIVATE_FINAL;
  `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` `com.bumptech.glide.load.resource.bitmap.BitmapResource.b` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this, `android.graphics.Bitmap` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3de4f8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de4fe.  v0:= "Bitmap must not be null" @kind object;
  #L3de502.  call temp:= `checkNotNull`(v2, v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de508.  v2:= temp @kind object;
  #L3de50a.  v2:= (`android.graphics.Bitmap`) v2 @kind object;
  #L3de50e.  v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @type ^`android.graphics.Bitmap` := v2 @kind object;
  #L3de512.  v2:= "BitmapPool must not be null" @kind object;
  #L3de516.  call temp:= `checkNotNull`(v3, v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;Ljava/lang/String;)Ljava/lang/Object;` @kind static;
  #L3de51c.  v2:= temp @kind object;
  #L3de51e.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool`) v2 @kind object;
  #L3de522.  v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` := v2 @kind object;
  #L3de526.  return @kind void;
}
procedure `com.bumptech.glide.load.resource.bitmap.BitmapResource` `obtain`(`android.graphics.Bitmap` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.obtain:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3de480.  if v1 != 0 then goto L3de488;
  #L3de484.  v1:= 0I;
  #L3de486.  return v1 @kind object;
  #L3de488.  v0:= new `com.bumptech.glide.load.resource.bitmap.BitmapResource`;
  #L3de48c.  call `<init>`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.<init>:(Landroid/graphics/Bitmap;Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;)V` @kind direct;
  #L3de492.  return v0 @kind object;
}
procedure `android.graphics.Bitmap` `get`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Landroid/graphics/Bitmap;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de468.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @type ^`android.graphics.Bitmap` @kind object;
  #L3de46c.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3de4dc.  call temp:= `get`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.get:()Landroid/graphics/Bitmap;` @kind virtual;
  #L3de4e2.  v0:= temp @kind object;
  #L3de4e4.  return v0 @kind object;
}
procedure `java.lang.Class` `getResourceClass`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.getResourceClass:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de4c4.  v0:= constclass @type ^`android.graphics.Bitmap` @kind object;
  #L3de4c8.  return v0 @kind object;
}
procedure `int` `getSize`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.getSize:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de4a4.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @type ^`android.graphics.Bitmap` @kind object;
  #L3de4a8.  call temp:= `getBitmapByteSize`(v0) @signature `Lcom/bumptech/glide/util/Util;.getBitmapByteSize:(Landroid/graphics/Bitmap;)I` @kind static;
  #L3de4ae.  v0:= temp;
  #L3de4b0.  return v0;
}
procedure `void` `initialize`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.initialize:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de538.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @type ^`android.graphics.Bitmap` @kind object;
  #L3de53c.  call `prepareToDraw`(v0) @signature `Landroid/graphics/Bitmap;.prepareToDraw:()V` @kind virtual;
  #L3de542.  return @kind void;
}
procedure `void` `recycle`(`com.bumptech.glide.load.resource.bitmap.BitmapResource` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapResource;.recycle:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3de554.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapResource.b` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.BitmapPool` @kind object;
  #L3de558.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapResource.a` @type ^`android.graphics.Bitmap` @kind object;
  #L3de55c.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/BitmapPool;.put:(Landroid/graphics/Bitmap;)V` @kind interface;
  #L3de562.  return @kind void;
}
