record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` @kind class @AccessFlag FINAL {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `byte`[] v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3dece8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3decee.  call temp:= `wrap`(v2) @signature `Ljava/nio/ByteBuffer;.wrap:([B)Ljava/nio/ByteBuffer;` @kind static;
  #L3decf4.  v2:= temp @kind object;
  #L3decf6.  v0:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3decfa.  call temp:= `order`(v2, v0) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ded00.  v2:= temp @kind object;
  #L3ded02.  call temp:= `limit`(v2, v3) @signature `Ljava/nio/ByteBuffer;.limit:(I)Ljava/nio/Buffer;` @kind virtual;
  #L3ded08.  v2:= temp @kind object;
  #L3ded0a.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L3ded0e.  v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` := v2 @kind object;
  #L3ded12.  return @kind void;
}
procedure `boolean` `c`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 , `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.c:(II)Z` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3dec3c.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3dec40.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3dec46.  v0:= temp;
  #L3dec48.  v0:= v0 - v2 @kind int;
  #L3dec4a.  if v0 < v3 then goto L3dec52;
  #L3dec4e.  v2:= 1I;
  #L3dec50.  goto L3dec54;
  #L3dec52.  v2:= 0I;
  #L3dec54.  return v2;
}
procedure `short` `a`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @AccessFlag  {
    temp;
    v0;

  #L3decb8.  v0:= 2I;
  #L3decba.  call temp:= `c`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.c:(II)Z` @kind direct;
  #L3decc0.  v0:= temp;
  #L3decc2.  if v0 == 0 then goto L3decd4;
  #L3decc6.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3decca.  call temp:= `getShort`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getShort:(I)S` @kind virtual;
  #L3decd0.  v2:= temp;
  #L3decd2.  goto L3decd6;
  #L3decd4.  v2:= -1I;
  #L3decd6.  return v2;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @AccessFlag  {
    temp;
    v0;

  #L3dec68.  v0:= 4I;
  #L3dec6a.  call temp:= `c`(v1, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.c:(II)Z` @kind direct;
  #L3dec70.  v0:= temp;
  #L3dec72.  if v0 == 0 then goto L3dec84;
  #L3dec76.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3dec7a.  call temp:= `getInt`(v0, v2) @signature `Ljava/nio/ByteBuffer;.getInt:(I)I` @kind virtual;
  #L3dec80.  v2:= temp;
  #L3dec82.  goto L3dec86;
  #L3dec84.  v2:= -1I;
  #L3dec86.  return v2;
}
procedure `int` `d`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @AccessFlag  {
    temp;
    v0;

  #L3dec98.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3dec9c.  call temp:= `remaining`(v0) @signature `Ljava/nio/ByteBuffer;.remaining:()I` @kind virtual;
  #L3deca2.  v0:= temp;
  #L3deca4.  return v0;
}
procedure `void` `e`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v1 @kind this, `java.nio.ByteOrder` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.e:(Ljava/nio/ByteOrder;)V` @AccessFlag  {
    temp;
    v0;

  #L3ded24.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3ded28.  call temp:= `order`(v0, v2) @signature `Ljava/nio/ByteBuffer;.order:(Ljava/nio/ByteOrder;)Ljava/nio/ByteBuffer;` @kind virtual;
  #L3ded2e.  return @kind void;
}
