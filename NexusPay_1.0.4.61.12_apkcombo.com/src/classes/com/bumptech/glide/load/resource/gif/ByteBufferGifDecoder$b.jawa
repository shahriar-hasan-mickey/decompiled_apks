record `com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` @kind class @AccessFlag  {
  `java.util.Queue` `com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L3e4538.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e453e.  v0:= 0I;
  #L3e4540.  call temp:= `createQueue`(v0) @signature `Lcom/bumptech/glide/util/Util;.createQueue:(I)Ljava/util/Queue;` @kind static;
  #L3e4546.  v0:= temp @kind object;
  #L3e4548.  v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` := v0 @kind object;
  #L3e454c.  return @kind void;
}
procedure `com.bumptech.glide.gifdecoder.GifHeaderParser` `a`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.a:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @AccessFlag  {
    temp;
    v0;

  #L3e44e8.  @monitorenter v1
  #L3e44ea.  v0:= v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` @kind object;
  #L3e44ee.  call temp:= `poll`(v0) @signature `Ljava/util/Queue;.poll:()Ljava/lang/Object;` @kind interface;
  #L3e44f4.  v0:= temp @kind object;
  #L3e44f6.  v0:= (`com.bumptech.glide.gifdecoder.GifHeaderParser`) v0 @kind object;
  #L3e44fa.  if v0 != 0 then goto L3e4508;
  #L3e44fe.  v0:= new `com.bumptech.glide.gifdecoder.GifHeaderParser`;
  #L3e4502.  call `<init>`(v0) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.<init>:()V` @kind direct;
  #L3e4508.  call temp:= `setData`(v0, v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.setData:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/gifdecoder/GifHeaderParser;` @kind virtual;
  #L3e450e.  v2:= temp @kind object;
  #L3e4510.  @monitorexit v1
  #L3e4512.  return v2 @kind object;
  #L3e4514.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e4516.  @monitorexit v1
  #L3e4518.  throw v2;
  catch `java.lang.Throwable` @[L3e44ea..L3e4510] goto L3e4514;
}
procedure `void` `b`(`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b` v1 @kind this, `com.bumptech.glide.gifdecoder.GifHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/gif/ByteBufferGifDecoder$b;.b:(Lcom/bumptech/glide/gifdecoder/GifHeaderParser;)V` @AccessFlag  {
    temp;
    v0;

  #L3e4560.  @monitorenter v1
  #L3e4562.  call `clear`(v2) @signature `Lcom/bumptech/glide/gifdecoder/GifHeaderParser;.clear:()V` @kind virtual;
  #L3e4568.  v0:= v1.`com.bumptech.glide.load.resource.gif.ByteBufferGifDecoder$b.a` @type ^`java.util.Queue` @kind object;
  #L3e456c.  call temp:= `offer`(v0, v2) @signature `Ljava/util/Queue;.offer:(Ljava/lang/Object;)Z` @kind interface;
  #L3e4572.  @monitorexit v1
  #L3e4574.  return @kind void;
  #L3e4576.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e4578.  @monitorexit v1
  #L3e457a.  throw v2;
  catch `java.lang.Throwable` @[L3e4562..L3e4572] goto L3e4576;
}
