record `com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ResourceDecoder` @kind interface {
  `com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` `com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3de90c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de912.  v0:= new `com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder`;
  #L3de916.  call `<init>`(v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapImageDecoderResourceDecoder;.<init>:()V` @kind direct;
  #L3de91c.  v1.`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` := v0 @kind object;
  #L3de920.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `int` v2 , `int` v3 , `com.bumptech.glide.load.Options` v4 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.decode:(Ljava/lang/Object;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3de8c4.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3de8c8.  call temp:= `decode`(v0, v1, v2, v3, v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.decode:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3de8ce.  v1:= temp @kind object;
  #L3de8d0.  return v1 @kind object;
}
procedure `com.bumptech.glide.load.engine.Resource` `decode`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `int` v3 , `int` v4 , `com.bumptech.glide.load.Options` v5 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.decode:(Ljava/nio/ByteBuffer;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de8e4.  call temp:= `createSource`(v2) @signature `Landroid/graphics/ImageDecoder;.createSource:(Ljava/nio/ByteBuffer;)Landroid/graphics/ImageDecoder$Source;` @kind static;
  #L3de8ea.  v2:= temp @kind object;
  #L3de8ec.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder.a` @type ^`com.bumptech.glide.load.resource.bitmap.BitmapImageDecoderResourceDecoder` @kind object;
  #L3de8f0.  call temp:= `decode`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/resource/ImageDecoderResourceDecoder;.decode:(Landroid/graphics/ImageDecoder$Source;IILcom/bumptech/glide/load/Options;)Lcom/bumptech/glide/load/engine/Resource;` @kind virtual;
  #L3de8f6.  v2:= temp @kind object;
  #L3de8f8.  return v2 @kind object;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` v0 @kind this, `java.lang.Object` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.handles:(Ljava/lang/Object;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L3de890.  v1:= (`java.nio.ByteBuffer`) v1 @kind object;
  #L3de894.  call temp:= `handles`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.handles:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z` @kind virtual;
  #L3de89a.  v1:= temp;
  #L3de89c.  return v1;
}
procedure `boolean` `handles`(`com.bumptech.glide.load.resource.bitmap.ByteBufferBitmapImageDecoderResourceDecoder` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/ByteBufferBitmapImageDecoderResourceDecoder;.handles:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/Options;)Z` @AccessFlag PUBLIC {
    temp;

  #L3de8b0.  v1:= 1I;
  #L3de8b2.  return v1;
}
