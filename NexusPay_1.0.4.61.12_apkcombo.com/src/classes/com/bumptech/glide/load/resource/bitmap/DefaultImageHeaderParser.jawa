record `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.ImageHeaderParser` @kind interface {
}
global `byte`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @AccessFlag STATIC_FINAL;
global `int`[] `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3df69c.  v0:= "UTF-8" @kind object;
  #L3df6a0.  call temp:= `forName`(v0) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3df6a6.  v0:= temp @kind object;
  #L3df6a8.  v1:= "Exif\u0000\u0000" @kind object;
  #L3df6ac.  call temp:= `getBytes`(v1, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3df6b2.  v0:= temp @kind object;
  #L3df6b4.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] := v0 @kind object;
  #L3df6b8.  v0:= 13I;
  #L3df6bc.  v0:= new `int`[v0];
  #L3df6c0.  goto L3df6cc;
  #L3df6c6.  `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] := v0 @kind object;
  #L3df6ca.  return @kind void;
  #L3df6cc.  v0:= (0I, 1I, 1I, 2I, 4I, 8I, 1I, 1I, 2I, 4I, 8I, 4I, 8I) @kind object;
  #L3df707.  goto L3df6c6;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v0 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3df718.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3df71e.  return @kind void;
}
procedure `int` `a`(`int` v0 , `int` v1 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3df0e4.  v0:= v0 + 2;
  #L3df0e8.  v1:= v1 * 12;
  #L3df0ec.  v0:= v0 + v1 @kind int;
  #L3df0ee.  return v0;
}
procedure `int` `b`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3df100.  v0:= -1I;
  #L3df102.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3df108.  v1:= temp;
  #L3df10a.  call temp:= `d`(v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(I)Z` @kind static;
  #L3df110.  v2:= temp;
  #L3df112.  v3:= 3I;
  #L3df114.  v4:= "DfltImageHeaderParser" @kind object;
  #L3df118.  if v2 != 0 then goto L3df152;
  #L3df11c.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df122.  v6:= temp;
  #L3df124.  if v6 == 0 then goto L3df150;
  #L3df128.  v6:= new `java.lang.StringBuilder`;
  #L3df12c.  call `<init>`(v6) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df132.  v7:= "Parser doesn't handle magic number: " @kind object;
  #L3df136.  call temp:= `append`(v6, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df13c.  call temp:= `append`(v6, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df142.  call temp:= `toString`(v6) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df148.  v6:= temp @kind object;
  #L3df14a.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df150.  return v0;
  #L3df152.  call temp:= `f`(v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @kind direct;
  #L3df158.  v1:= temp;
  #L3df15a.  if v1 != v0 then goto L3df176;
  #L3df15e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df164.  v6:= temp;
  #L3df166.  if v6 == 0 then goto L3df174;
  #L3df16a.  v6:= "Failed to parse exif segment length, or exif segment not found" @kind object;
  #L3df16e.  call temp:= `d`(v4, v6) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df174.  return v0;
  #L3df176.  v2:= constclass @type ^`byte`[] @kind object;
  #L3df17a.  call temp:= `get`(v7, v1, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3df180.  v2:= temp @kind object;
  #L3df182.  v2:= (`byte`[]) v2 @kind object;
  #L3df186.  call temp:= `h`(v5, v6, v2, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @kind direct;
  #L3df18c.  v6:= temp;
  #L3df18e.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3df194.  return v6;
  #L3df196.  v6:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3df198.  call `put`(v7, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3df19e.  throw v6;
  #L3df1a0.  return v0;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3df102..L3df112] goto L3df1a0;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3df11c..L3df186] goto L3df1a0;
  catch `java.lang.Throwable` @[L3df186..L3df18e] goto L3df196;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3df18e..L3df1a0] goto L3df1a0;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `c`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v5 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v6 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3def08.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3def0e.  v0:= temp;
  #L3def10.  v1:= 65496I;
  #L3def16.  if v0 != v1 then goto L3def20;
  #L3def1a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.JPEG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def1e.  return v6 @kind object;
  #L3def20.  v0:= v0 ^< 8;
  #L3def24.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3def2a.  v1:= temp;
  #L3def2c.  v0:= v0 ^| v1 @kind int;
  #L3def2e.  v1:= 4671814I;
  #L3def34.  if v0 != v1 then goto L3def3e;
  #L3def38.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.GIF` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def3c.  return v6 @kind object;
  #L3def3e.  v0:= v0 ^< 8;
  #L3def42.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3def48.  v1:= temp;
  #L3def4a.  v0:= v0 ^| v1 @kind int;
  #L3def4c.  v1:= -1991225785I;
  #L3def52.  if v0 != v1 then goto L3def80;
  #L3def56.  v0:= 21L;
  #L3def5a.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3def60.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3def66.  v6:= temp;
  #L3def68.  v0:= 3I;
  #L3def6a.  if v6 < v0 then goto L3def74;
  #L3def6e.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def72.  goto L3def78;
  #L3def74.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def78.  return v6 @kind object;
  #L3def7a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.PNG` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def7e.  return v6 @kind object;
  #L3def80.  v1:= 1380533830I;
  #L3def86.  if v0 == v1 then goto L3def90;
  #L3def8a.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3def8e.  return v6 @kind object;
  #L3def90.  v0:= 4L;
  #L3def94.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3def9a.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3defa0.  v2:= temp;
  #L3defa2.  v2:= v2 ^< 16;
  #L3defa6.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3defac.  v3:= temp;
  #L3defae.  v2:= v2 ^| v3 @kind int;
  #L3defb0.  v3:= 1464156752I;
  #L3defb6.  if v2 == v3 then goto L3defc0;
  #L3defba.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3defbe.  return v6 @kind object;
  #L3defc0.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3defc6.  v2:= temp;
  #L3defc8.  v2:= v2 ^< 16;
  #L3defcc.  call temp:= `getUInt16`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3defd2.  v3:= temp;
  #L3defd4.  v2:= v2 ^| v3 @kind int;
  #L3defd6.  v3:= v2 ^& -256;
  #L3defda.  v4:= 1448097792I;
  #L3defe0.  if v3 == v4 then goto L3defea;
  #L3defe4.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3defe8.  return v6 @kind object;
  #L3defea.  v2:= v2 ^& 255;
  #L3defee.  v3:= 88I;
  #L3deff2.  if v2 != v3 then goto L3df018;
  #L3deff6.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3deffc.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3df002.  v6:= temp;
  #L3df004.  v6:= v6 ^& 16;
  #L3df008.  if v6 == 0 then goto L3df012;
  #L3df00c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df010.  goto L3df016;
  #L3df012.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df016.  return v6 @kind object;
  #L3df018.  v3:= 76I;
  #L3df01c.  if v2 != v3 then goto L3df042;
  #L3df020.  call temp:= `skip`(v6, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3df026.  call temp:= `getUInt8`(v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3df02c.  v6:= temp;
  #L3df02e.  v6:= v6 ^& 8;
  #L3df032.  if v6 == 0 then goto L3df03c;
  #L3df036.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP_A` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df03a.  goto L3df040;
  #L3df03c.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df040.  return v6 @kind object;
  #L3df042.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.WEBP` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df046.  return v6 @kind object;
  #L3df048.  v6:= `@@com.bumptech.glide.load.ImageHeaderParser$ImageType.UNKNOWN` @type ^`com.bumptech.glide.load.ImageHeaderParser$ImageType` @kind object;
  #L3df04c.  return v6 @kind object;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3def08..L3def60] goto L3df048;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3def60..L3def78] goto L3def7a;
  catch `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader$EndOfFileException` @[L3def7a..L3df046] goto L3df048;
}
procedure `boolean` `d`(`int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.d:(I)Z` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3dee80.  v0:= 65496I;
  #L3dee86.  v1:= v2 ^& v0 @kind int;
  #L3dee8a.  if v1 == v0 then goto L3deea4;
  #L3dee8e.  v0:= 19789I;
  #L3dee92.  if v2 == v0 then goto L3deea4;
  #L3dee96.  v0:= 18761I;
  #L3dee9a.  if v2 != v0 then goto L3deea0;
  #L3dee9e.  goto L3deea4;
  #L3deea0.  v2:= 0I;
  #L3deea2.  goto L3deea6;
  #L3deea4.  v2:= 1I;
  #L3deea6.  return v2;
}
procedure `boolean` `e`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v4 @kind this, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:([BI)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3deeb8.  v0:= 0I;
  #L3deeba.  if v5 == 0 then goto L3deecc;
  #L3deebe.  v1:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L3deec2.  v1:= length @variable v1;
  #L3deec4.  if v6 <= v1 then goto L3deecc;
  #L3deec8.  v6:= 1I;
  #L3deeca.  goto L3deece;
  #L3deecc.  v6:= 0I;
  #L3deece.  if v6 == 0 then goto L3deef2;
  #L3deed2.  v1:= 0I;
  #L3deed4.  v2:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.a` @type ^`byte`[] @kind object;
  #L3deed8.  v3:= length @variable v2;
  #L3deeda.  if v1 >= v3 then goto L3deef2;
  #L3deede.  v3:= v5[v1] @kind byte;
  #L3deee2.  v2:= v2[v1] @kind byte;
  #L3deee6.  if v3 == v2 then goto L3deeec;
  #L3deeea.  goto L3deef4;
  #L3deeec.  v1:= v1 + 1;
  #L3deef0.  goto L3deed4;
  #L3deef2.  v0:= v6;
  #L3deef4.  return v0;
}
procedure `int` `f`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v10 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v11 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.f:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;

  #L3df254.  call temp:= `getUInt8`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3df25a.  v0:= temp;
  #L3df25c.  v1:= 255I;
  #L3df260.  v2:= 3I;
  #L3df262.  v3:= -1I;
  #L3df264.  v4:= "DfltImageHeaderParser" @kind object;
  #L3df268.  if v0 == v1 then goto L3df2a2;
  #L3df26c.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df272.  v11:= temp;
  #L3df274.  if v11 == 0 then goto L3df2a0;
  #L3df278.  v11:= new `java.lang.StringBuilder`;
  #L3df27c.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df282.  v1:= "Unknown segmentId=" @kind object;
  #L3df286.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df28c.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df292.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df298.  v11:= temp @kind object;
  #L3df29a.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df2a0.  return v3;
  #L3df2a2.  call temp:= `getUInt8`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt8:()S` @kind interface;
  #L3df2a8.  v0:= temp;
  #L3df2aa.  v1:= 218I;
  #L3df2ae.  if v0 != v1 then goto L3df2b4;
  #L3df2b2.  return v3;
  #L3df2b4.  v1:= 217I;
  #L3df2b8.  if v0 != v1 then goto L3df2d4;
  #L3df2bc.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df2c2.  v11:= temp;
  #L3df2c4.  if v11 == 0 then goto L3df2d2;
  #L3df2c8.  v11:= "Found MARKER_EOI in exif segment" @kind object;
  #L3df2cc.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df2d2.  return v3;
  #L3df2d4.  call temp:= `getUInt16`(v11) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.getUInt16:()I` @kind interface;
  #L3df2da.  v1:= temp;
  #L3df2dc.  v1:= v1 + -2;
  #L3df2e0.  v5:= 225I;
  #L3df2e4.  if v0 == v5 then goto L3df350;
  #L3df2e8.  v5:= (`long`) v1 @kind i2l;
  #L3df2ea.  call temp:= `skip`(v11, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.skip:(J)J` @kind interface;
  #L3df2f0.  v7:= temp @kind wide;
  #L3df2f2.  v9:= lcmp(v7, v5);
  #L3df2f6.  if v9 == 0 then goto L3df254;
  #L3df2fa.  call temp:= `isLoggable`(v4, v2) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df300.  v11:= temp;
  #L3df302.  if v11 == 0 then goto L3df34e;
  #L3df306.  v11:= new `java.lang.StringBuilder`;
  #L3df30a.  call `<init>`(v11) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df310.  v2:= "Unable to skip enough data, type: " @kind object;
  #L3df314.  call temp:= `append`(v11, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df31a.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df320.  v0:= ", wanted to skip: " @kind object;
  #L3df324.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df32a.  call temp:= `append`(v11, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df330.  v0:= ", but actually skipped: " @kind object;
  #L3df334.  call temp:= `append`(v11, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df33a.  call temp:= `append`(v11, v7) @signature `Ljava/lang/StringBuilder;.append:(J)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df340.  call temp:= `toString`(v11) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df346.  v11:= temp @kind object;
  #L3df348.  call temp:= `d`(v4, v11) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df34e.  return v3;
  #L3df350.  return v1;
}
procedure `int` `g`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b` v12 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;
    v9;
    v10;
    v11;

  #L3df364.  v0:= 6I;
  #L3df366.  call temp:= `a`(v12, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3df36c.  v1:= temp;
  #L3df36e.  v2:= 18761I;
  #L3df372.  v3:= 3I;
  #L3df374.  v4:= "DfltImageHeaderParser" @kind object;
  #L3df378.  if v1 == v2 then goto L3df3c4;
  #L3df37c.  v2:= 19789I;
  #L3df380.  if v1 == v2 then goto L3df3be;
  #L3df384.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df38a.  v2:= temp;
  #L3df38c.  if v2 == 0 then goto L3df3b8;
  #L3df390.  v2:= new `java.lang.StringBuilder`;
  #L3df394.  call `<init>`(v2) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df39a.  v5:= "Unknown endianness = " @kind object;
  #L3df39e.  call temp:= `append`(v2, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df3a4.  call temp:= `append`(v2, v1) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df3aa.  call temp:= `toString`(v2) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df3b0.  v1:= temp @kind object;
  #L3df3b2.  call temp:= `d`(v4, v1) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df3b8.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3df3bc.  goto L3df3c8;
  #L3df3be.  v1:= `@@java.nio.ByteOrder.BIG_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3df3c2.  goto L3df3c8;
  #L3df3c4.  v1:= `@@java.nio.ByteOrder.LITTLE_ENDIAN` @type ^`java.nio.ByteOrder` @kind object;
  #L3df3c8.  call `e`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.e:(Ljava/nio/ByteOrder;)V` @kind virtual;
  #L3df3ce.  v1:= 10I;
  #L3df3d2.  call temp:= `b`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L3df3d8.  v1:= temp;
  #L3df3da.  v1:= v1 + v0 @kind int;
  #L3df3dc.  call temp:= `a`(v12, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3df3e2.  v0:= temp;
  #L3df3e4.  v2:= 0I;
  #L3df3e6.  if v2 >= v0 then goto L3df5e2;
  #L3df3ea.  call temp:= `a`(v1, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.a:(II)I` @kind static;
  #L3df3f0.  v5:= temp;
  #L3df3f2.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3df3f8.  v6:= temp;
  #L3df3fa.  v7:= 274I;
  #L3df3fe.  if v6 == v7 then goto L3df406;
  #L3df402.  goto L3df5da;
  #L3df406.  v7:= v5 + 2;
  #L3df40a.  call temp:= `a`(v12, v7) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3df410.  v7:= temp;
  #L3df412.  v8:= 1I;
  #L3df414.  if v7 < v8 then goto L3df5a6;
  #L3df418.  v8:= 12I;
  #L3df41c.  if v7 <= v8 then goto L3df424;
  #L3df420.  goto L3df5a6;
  #L3df424.  v8:= v5 + 4;
  #L3df428.  call temp:= `b`(v12, v8) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.b:(I)I` @kind virtual;
  #L3df42e.  v8:= temp;
  #L3df430.  if v8 >= 0 then goto L3df44e;
  #L3df434.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df43a.  v5:= temp;
  #L3df43c.  if v5 == 0 then goto L3df5da;
  #L3df440.  v5:= "Negative tiff component count" @kind object;
  #L3df444.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df44a.  goto L3df5da;
  #L3df44e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df454.  v9:= temp;
  #L3df456.  v10:= " tagType=" @kind object;
  #L3df45a.  if v9 == 0 then goto L3df4b2;
  #L3df45e.  v9:= new `java.lang.StringBuilder`;
  #L3df462.  call `<init>`(v9) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df468.  v11:= "Got tagIndex=" @kind object;
  #L3df46c.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df472.  call temp:= `append`(v9, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df478.  call temp:= `append`(v9, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df47e.  call temp:= `append`(v9, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df484.  v11:= " formatCode=" @kind object;
  #L3df488.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df48e.  call temp:= `append`(v9, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df494.  v11:= " componentCount=" @kind object;
  #L3df498.  call temp:= `append`(v9, v11) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df49e.  call temp:= `append`(v9, v8) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df4a4.  call temp:= `toString`(v9) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df4aa.  v9:= temp @kind object;
  #L3df4ac.  call temp:= `d`(v4, v9) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df4b2.  v9:= `@@com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser.b` @type ^`int`[] @kind object;
  #L3df4b6.  v9:= v9[v7];
  #L3df4ba.  v8:= v8 + v9 @kind int;
  #L3df4bc.  v9:= 4I;
  #L3df4be.  if v8 <= v9 then goto L3df4fa;
  #L3df4c2.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df4c8.  v5:= temp;
  #L3df4ca.  if v5 == 0 then goto L3df5da;
  #L3df4ce.  v5:= new `java.lang.StringBuilder`;
  #L3df4d2.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df4d8.  v6:= "Got byte count > 4, not orientation, continuing, formatCode=" @kind object;
  #L3df4dc.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df4e2.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df4e8.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df4ee.  v5:= temp @kind object;
  #L3df4f0.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df4f6.  goto L3df5da;
  #L3df4fa.  v5:= v5 + 8;
  #L3df4fe.  if v5 < 0 then goto L3df564;
  #L3df502.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L3df508.  v7:= temp;
  #L3df50a.  if v5 <= v7 then goto L3df510;
  #L3df50e.  goto L3df564;
  #L3df510.  if v8 < 0 then goto L3df52e;
  #L3df514.  v8:= v8 + v5 @kind int;
  #L3df516.  call temp:= `d`(v12) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.d:()I` @kind virtual;
  #L3df51c.  v7:= temp;
  #L3df51e.  if v8 <= v7 then goto L3df524;
  #L3df522.  goto L3df52e;
  #L3df524.  call temp:= `a`(v12, v5) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.a:(I)S` @kind virtual;
  #L3df52a.  v12:= temp;
  #L3df52c.  return v12;
  #L3df52e.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df534.  v5:= temp;
  #L3df536.  if v5 == 0 then goto L3df5da;
  #L3df53a.  v5:= new `java.lang.StringBuilder`;
  #L3df53e.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df544.  v7:= "Illegal number of bytes for TI tag data tagType=" @kind object;
  #L3df548.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df54e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df554.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df55a.  v5:= temp @kind object;
  #L3df55c.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df562.  goto L3df5da;
  #L3df564.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df56a.  v7:= temp;
  #L3df56c.  if v7 == 0 then goto L3df5da;
  #L3df570.  v7:= new `java.lang.StringBuilder`;
  #L3df574.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df57a.  v8:= "Illegal tagValueOffset=" @kind object;
  #L3df57e.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df584.  call temp:= `append`(v7, v5) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df58a.  call temp:= `append`(v7, v10) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df590.  call temp:= `append`(v7, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df596.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df59c.  v5:= temp @kind object;
  #L3df59e.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df5a4.  goto L3df5da;
  #L3df5a6.  call temp:= `isLoggable`(v4, v3) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df5ac.  v5:= temp;
  #L3df5ae.  if v5 == 0 then goto L3df5da;
  #L3df5b2.  v5:= new `java.lang.StringBuilder`;
  #L3df5b6.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df5bc.  v6:= "Got invalid format code = " @kind object;
  #L3df5c0.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df5c6.  call temp:= `append`(v5, v7) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df5cc.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df5d2.  v5:= temp @kind object;
  #L3df5d4.  call temp:= `d`(v4, v5) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df5da.  v2:= v2 + 1;
  #L3df5de.  goto L3df3e6;
  #L3df5e2.  v12:= -1I;
  #L3df5e4.  return v12;
}
procedure `int` `h`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v3 @kind this, `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$Reader` v4 @kind object, `byte`[] v5 @kind object, `int` v6 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.h:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;[BI)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L3df5f8.  call temp:= `read`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;.read:([BI)I` @kind interface;
  #L3df5fe.  v4:= temp;
  #L3df600.  v0:= -1I;
  #L3df602.  v1:= 3I;
  #L3df604.  v2:= "DfltImageHeaderParser" @kind object;
  #L3df608.  if v4 == v6 then goto L3df652;
  #L3df60c.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df612.  v5:= temp;
  #L3df614.  if v5 == 0 then goto L3df650;
  #L3df618.  v5:= new `java.lang.StringBuilder`;
  #L3df61c.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3df622.  v1:= "Unable to read exif segment data, length: " @kind object;
  #L3df626.  call temp:= `append`(v5, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df62c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df632.  v6:= ", actually read: " @kind object;
  #L3df636.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df63c.  call temp:= `append`(v5, v4) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3df642.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3df648.  v4:= temp @kind object;
  #L3df64a.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df650.  return v0;
  #L3df652.  call temp:= `e`(v3, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.e:([BI)Z` @kind direct;
  #L3df658.  v4:= temp;
  #L3df65a.  if v4 == 0 then goto L3df672;
  #L3df65e.  v4:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$b`;
  #L3df662.  call `<init>`(v4, v5, v6) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;.<init>:([BI)V` @kind direct;
  #L3df668.  call temp:= `g`(v4) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.g:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$b;)I` @kind static;
  #L3df66e.  v4:= temp;
  #L3df670.  return v4;
  #L3df672.  call temp:= `isLoggable`(v2, v1) @signature `Landroid/util/Log;.isLoggable:(Ljava/lang/String;I)Z` @kind static;
  #L3df678.  v4:= temp;
  #L3df67a.  if v4 == 0 then goto L3df688;
  #L3df67e.  v4:= "Missing jpeg exif preamble" @kind object;
  #L3df682.  call temp:= `d`(v2, v4) @signature `Landroid/util/Log;.d:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3df688.  return v0;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getOrientation:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df1dc.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L3df1e0.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df1e6.  v2:= temp @kind object;
  #L3df1e8.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L3df1ec.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3df1f2.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df1f8.  v2:= temp @kind object;
  #L3df1fa.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v2 @kind object;
  #L3df1fe.  call temp:= `b`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind direct;
  #L3df204.  v2:= temp;
  #L3df206.  return v2;
}
procedure `int` `getOrientation`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getOrientation:(Ljava/nio/ByteBuffer;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df218.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L3df21c.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df222.  v2:= temp @kind object;
  #L3df224.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L3df228.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L3df22e.  call temp:= `checkNotNull`(v3) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df234.  v2:= temp @kind object;
  #L3df236.  v2:= (`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool`) v2 @kind object;
  #L3df23a.  call temp:= `b`(v1, v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.b:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)I` @kind direct;
  #L3df240.  v2:= temp;
  #L3df242.  return v2;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.io.InputStream` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/io/InputStream;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df084.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$c`;
  #L3df088.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df08e.  v2:= temp @kind object;
  #L3df090.  v2:= (`java.io.InputStream`) v2 @kind object;
  #L3df094.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$c;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3df09a.  call temp:= `c`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L3df0a0.  v2:= temp @kind object;
  #L3df0a2.  return v2 @kind object;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `getType`(`com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser` v1 @kind this, `java.nio.ByteBuffer` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.getType:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3df0b4.  v0:= new `com.bumptech.glide.load.resource.bitmap.DefaultImageHeaderParser$a`;
  #L3df0b8.  call temp:= `checkNotNull`(v2) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3df0be.  v2:= temp @kind object;
  #L3df0c0.  v2:= (`java.nio.ByteBuffer`) v2 @kind object;
  #L3df0c4.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$a;.<init>:(Ljava/nio/ByteBuffer;)V` @kind direct;
  #L3df0ca.  call temp:= `c`(v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser;.c:(Lcom/bumptech/glide/load/resource/bitmap/DefaultImageHeaderParser$Reader;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind direct;
  #L3df0d0.  v2:= temp @kind object;
  #L3df0d2.  return v2 @kind object;
}
