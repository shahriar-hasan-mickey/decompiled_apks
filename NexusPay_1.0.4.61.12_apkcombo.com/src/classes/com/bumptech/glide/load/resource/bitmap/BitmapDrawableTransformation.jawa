record `com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.Transformation` @kind interface {
  `com.bumptech.glide.load.Transformation` `com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v2 @kind this, `com.bumptech.glide.load.Transformation` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3de050.  call `<init>`(v2) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3de056.  v0:= new `com.bumptech.glide.load.resource.bitmap.DrawableTransformation`;
  #L3de05a.  v1:= 0I;
  #L3de05c.  call `<init>`(v0, v3, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/DrawableTransformation;.<init>:(Lcom/bumptech/glide/load/Transformation;Z)V` @kind direct;
  #L3de062.  call temp:= `checkNotNull`(v0) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3de068.  v3:= temp @kind object;
  #L3de06a.  v3:= (`com.bumptech.glide.load.Transformation`) v3 @kind object;
  #L3de06e.  v2.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` := v3 @kind object;
  #L3de072.  return @kind void;
}
procedure `com.bumptech.glide.load.engine.Resource` `a`(`com.bumptech.glide.load.engine.Resource` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3ddf98.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3ddf9e.  v0:= temp @kind object;
  #L3ddfa0.  v0:= instanceof @variable v0 @type ^`android.graphics.drawable.BitmapDrawable` @kind boolean;
  #L3ddfa4.  if v0 == 0 then goto L3ddfaa;
  #L3ddfa8.  return v3 @kind object;
  #L3ddfaa.  v0:= new `java.lang.IllegalArgumentException`;
  #L3ddfae.  v1:= new `java.lang.StringBuilder`;
  #L3ddfb2.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3ddfb8.  v2:= "Wrapped transformation unexpectedly returned a non BitmapDrawable resource: " @kind object;
  #L3ddfbc.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddfc2.  call temp:= `get`(v3) @signature `Lcom/bumptech/glide/load/engine/Resource;.get:()Ljava/lang/Object;` @kind interface;
  #L3ddfc8.  v3:= temp @kind object;
  #L3ddfca.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3ddfd0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3ddfd6.  v3:= temp @kind object;
  #L3ddfd8.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3ddfde.  throw v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `b`(`com.bumptech.glide.load.engine.Resource` v0 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3ddff0.  return v0 @kind object;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3ddf64.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` @kind boolean;
  #L3ddf68.  if v0 == 0 then goto L3ddf82;
  #L3ddf6c.  v2:= (`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation`) v2 @kind object;
  #L3ddf70.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ddf74.  v2:= v2.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3ddf78.  call temp:= `equals`(v0, v2) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3ddf7e.  v2:= temp;
  #L3ddf80.  return v2;
  #L3ddf82.  v2:= 0I;
  #L3ddf84.  return v2;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de030.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3de034.  call temp:= `hashCode`(v0) @signature `Ljava/lang/Object;.hashCode:()I` @kind virtual;
  #L3de03a.  v0:= temp;
  #L3de03c.  return v0;
}
procedure `com.bumptech.glide.load.engine.Resource` `transform`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `android.content.Context` v2 @kind object, `com.bumptech.glide.load.engine.Resource` v3 @kind object, `int` v4 , `int` v5 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de004.  call temp:= `b`(v3) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.b:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3de00a.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3de00e.  call temp:= `transform`(v0, v2, v3, v4, v5) @signature `Lcom/bumptech/glide/load/Transformation;.transform:(Landroid/content/Context;Lcom/bumptech/glide/load/engine/Resource;II)Lcom/bumptech/glide/load/engine/Resource;` @kind interface;
  #L3de014.  v2:= temp @kind object;
  #L3de016.  call temp:= `a`(v2) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.a:(Lcom/bumptech/glide/load/engine/Resource;)Lcom/bumptech/glide/load/engine/Resource;` @kind static;
  #L3de01c.  return v2 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation` v1 @kind this, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/BitmapDrawableTransformation;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3de084.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.BitmapDrawableTransformation.a` @type ^`com.bumptech.glide.load.Transformation` @kind object;
  #L3de088.  call `updateDiskCacheKey`(v0, v2) @signature `Lcom/bumptech/glide/load/Key;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @kind interface;
  #L3de08e.  return @kind void;
}
