record `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` @kind class @AccessFlag PUBLIC extends `java.io.FilterInputStream` @kind class {
  `byte`[] `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @AccessFlag PRIVATE_VOLATILE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @AccessFlag PRIVATE;
  `int` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @AccessFlag PRIVATE;
  `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `java.io.InputStream` v2 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v3 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e2098.  v0:= 65536I;
  #L3e209c.  call `<init>`(v1, v2, v3, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @kind direct;
  #L3e20a2.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v0 @kind this, `java.io.InputStream` v1 @kind object, `com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` v2 @kind object, `int` v3 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.<init>:(Ljava/io/InputStream;Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;I)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3e20b4.  call `<init>`(v0, v1) @signature `Ljava/io/FilterInputStream;.<init>:(Ljava/io/InputStream;)V` @kind direct;
  #L3e20ba.  v1:= -1I;
  #L3e20bc.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L3e20c0.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` := v2 @kind object;
  #L3e20c4.  v1:= constclass @type ^`byte`[] @kind object;
  #L3e20c8.  call temp:= `get`(v2, v3, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3e20ce.  v1:= temp @kind object;
  #L3e20d0.  v1:= (`byte`[]) v1 @kind object;
  #L3e20d4.  v0.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L3e20d8.  return @kind void;
}
procedure `int` `a`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v5 @kind this, `java.io.InputStream` v6 @kind object, `byte`[] v7 @kind object) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3e1c00.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e1c04.  v1:= -1I;
  #L3e1c06.  v2:= 0I;
  #L3e1c08.  if v0 == v1 then goto L3e1cb2;
  #L3e1c0c.  v3:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1c10.  v3:= v3 - v0 @kind int;
  #L3e1c12.  v4:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3e1c16.  if v3 < v4 then goto L3e1c1c;
  #L3e1c1a.  goto L3e1cb2;
  #L3e1c1c.  if v0 != 0 then goto L3e1c6c;
  #L3e1c20.  v0:= length @variable v7;
  #L3e1c22.  if v4 <= v0 then goto L3e1c6c;
  #L3e1c26.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1c2a.  v1:= length @variable v7;
  #L3e1c2c.  if v0 != v1 then goto L3e1c6c;
  #L3e1c30.  v0:= length @variable v7;
  #L3e1c32.  v0:= v0 * 2;
  #L3e1c36.  if v0 <= v4 then goto L3e1c3c;
  #L3e1c3a.  goto L3e1c3e;
  #L3e1c3c.  v4:= v0;
  #L3e1c3e.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3e1c42.  v1:= constclass @type ^`byte`[] @kind object;
  #L3e1c46.  call temp:= `get`(v0, v4, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.get:(ILjava/lang/Class;)Ljava/lang/Object;` @kind interface;
  #L3e1c4c.  v0:= temp @kind object;
  #L3e1c4e.  v0:= (`byte`[]) v0 @kind object;
  #L3e1c52.  v1:= length @variable v7;
  #L3e1c54.  call `arraycopy`(v7, v2, v0, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1c5a.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L3e1c5e.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3e1c62.  call `put`(v1, v7) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3e1c68.  v7:= v0 @kind object;
  #L3e1c6a.  goto L3e1c7e;
  #L3e1c6c.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e1c70.  if v0 <= 0 then goto L3e1c7e;
  #L3e1c74.  v1:= length @variable v7;
  #L3e1c76.  v1:= v1 - v0 @kind int;
  #L3e1c78.  call `arraycopy`(v7, v0, v7, v2, v1) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1c7e.  v0:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1c82.  v1:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e1c86.  v0:= v0 - v1 @kind int;
  #L3e1c88.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L3e1c8c.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L3e1c90.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v2;
  #L3e1c94.  v1:= length @variable v7;
  #L3e1c96.  v1:= v1 - v0 @kind int;
  #L3e1c98.  call temp:= `read`(v6, v7, v0, v1) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3e1c9e.  v6:= temp;
  #L3e1ca0.  v7:= v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1ca4.  if v6 > 0 then goto L3e1caa;
  #L3e1ca8.  goto L3e1cac;
  #L3e1caa.  v7:= v7 + v6 @kind int;
  #L3e1cac.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v7;
  #L3e1cb0.  return v6;
  #L3e1cb2.  call temp:= `read`(v6, v7) @signature `Ljava/io/InputStream;.read:([B)I` @kind virtual;
  #L3e1cb8.  v6:= temp;
  #L3e1cba.  if v6 <= 0 then goto L3e1cca;
  #L3e1cbe.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v1;
  #L3e1cc2.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L3e1cc6.  v5.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int` := v6;
  #L3e1cca.  return v6;
}
procedure `java.io.IOException` `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3e1f30.  v0:= new `java.io.IOException`;
  #L3e1f34.  v1:= "BufferedInputStream is closed" @kind object;
  #L3e1f38.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e1f3e.  throw v0;
}
procedure `int` `available`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.available:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e1ba0.  @monitorenter v3
  #L3e1ba2.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3e1ba6.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1baa.  if v1 == 0 then goto L3e1bca;
  #L3e1bae.  if v0 == 0 then goto L3e1bca;
  #L3e1bb2.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1bb6.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1bba.  v1:= v1 - v2 @kind int;
  #L3e1bbc.  call temp:= `available`(v0) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3e1bc2.  v0:= temp;
  #L3e1bc4.  v1:= v1 + v0 @kind int;
  #L3e1bc6.  @monitorexit v3
  #L3e1bc8.  return v1;
  #L3e1bca.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1bd0.  v0:= 0I;
  #L3e1bd2.  throw v0;
  #L3e1bd4.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1bd6.  @monitorexit v3
  #L3e1bd8.  throw v0;
  catch `java.lang.Throwable` @[L3e1ba2..L3e1bc4] goto L3e1bd4;
  catch `java.lang.Throwable` @[L3e1bca..L3e1bd0] goto L3e1bd4;
}
procedure `void` `close`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.close:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e20ec.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e20f0.  v1:= 0I;
  #L3e20f2.  if v0 == 0 then goto L3e2108;
  #L3e20f6.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3e20fa.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e20fe.  call `put`(v0, v2) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3e2104.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v1 @kind object;
  #L3e2108.  v0:= v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3e210c.  v3.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` := v1 @kind object;
  #L3e2110.  if v0 == 0 then goto L3e211a;
  #L3e2114.  call `close`(v0) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3e211a.  return @kind void;
}
procedure `void` `fixMarkLimit`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.fixMarkLimit:()V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e212c.  @monitorenter v1
  #L3e212e.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e2132.  v0:= length @variable v0;
  #L3e2134.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v0;
  #L3e2138.  @monitorexit v1
  #L3e213a.  return @kind void;
  #L3e213c.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e213e.  @monitorexit v1
  #L3e2140.  throw v0;
  catch `java.lang.Throwable` @[L3e212e..L3e2138] goto L3e213c;
}
procedure `void` `mark`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.mark:(I)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e2160.  @monitorenter v1
  #L3e2162.  v0:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3e2166.  call temp:= `max`(v0, v2) @signature `Ljava/lang/Math;.max:(II)I` @kind static;
  #L3e216c.  v2:= temp;
  #L3e216e.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int` := v2;
  #L3e2172.  v2:= v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e2176.  v1.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int` := v2;
  #L3e217a.  @monitorexit v1
  #L3e217c.  return @kind void;
  #L3e217e.  v2:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2180.  @monitorexit v1
  #L3e2182.  throw v2;
  catch `java.lang.Throwable` @[L3e2162..L3e217a] goto L3e217e;
}
procedure `boolean` `markSupported`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v1 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.markSupported:()Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3e1b8c.  v0:= 1I;
  #L3e1b8e.  return v0;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v6 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e1cdc.  @monitorenter v6
  #L3e1cde.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1ce2.  v1:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3e1ce6.  v2:= 0I;
  #L3e1ce8.  if v0 == 0 then goto L3e1d52;
  #L3e1cec.  if v1 == 0 then goto L3e1d52;
  #L3e1cf0.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1cf4.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1cf8.  v5:= -1I;
  #L3e1cfa.  if v3 < v4 then goto L3e1d0e;
  #L3e1cfe.  call temp:= `a`(v6, v1, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3e1d04.  v1:= temp;
  #L3e1d06.  if v1 != v5 then goto L3e1d0e;
  #L3e1d0a.  @monitorexit v6
  #L3e1d0c.  return v5;
  #L3e1d0e.  v1:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1d12.  if v0 == v1 then goto L3e1d28;
  #L3e1d16.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1d1a.  if v0 == 0 then goto L3e1d20;
  #L3e1d1e.  goto L3e1d28;
  #L3e1d20.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1d26.  throw v2;
  #L3e1d28.  v1:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1d2c.  v2:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1d30.  v1:= v1 - v2 @kind int;
  #L3e1d32.  if v1 <= 0 then goto L3e1d4e;
  #L3e1d36.  v1:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1d3a.  v2:= v1 + 1;
  #L3e1d3e.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v2;
  #L3e1d42.  v0:= v0[v1] @kind byte;
  #L3e1d46.  v0:= v0 ^& 255;
  #L3e1d4a.  @monitorexit v6
  #L3e1d4c.  return v0;
  #L3e1d4e.  @monitorexit v6
  #L3e1d50.  return v5;
  #L3e1d52.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1d58.  throw v2;
  #L3e1d5a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1d5c.  @monitorexit v6
  #L3e1d5e.  throw v0;
  catch `java.lang.Throwable` @[L3e1cde..L3e1d06] goto L3e1d5a;
  catch `java.lang.Throwable` @[L3e1d0e..L3e1d26] goto L3e1d5a;
  catch `java.lang.Throwable` @[L3e1d28..L3e1d46] goto L3e1d5a;
  catch `java.lang.Throwable` @[L3e1d52..L3e1d58] goto L3e1d5a;
}
procedure `int` `read`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v6 @kind this, `byte`[] v7 @kind object, `int` v8 , `int` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.read:([BII)I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3e1d94.  @monitorenter v6
  #L3e1d96.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1d9a.  v1:= 0I;
  #L3e1d9c.  if v0 == 0 then goto L3e1ec4;
  #L3e1da0.  if v9 != 0 then goto L3e1daa;
  #L3e1da4.  v7:= 0I;
  #L3e1da6.  @monitorexit v6
  #L3e1da8.  return v7;
  #L3e1daa.  v2:= v6.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3e1dae.  if v2 == 0 then goto L3e1ebc;
  #L3e1db2.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1db6.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1dba.  if v3 >= v4 then goto L3e1e0c;
  #L3e1dbe.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1dc2.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1dc6.  v3:= v3 - v4 @kind int;
  #L3e1dc8.  if v3 < v9 then goto L3e1dd0;
  #L3e1dcc.  v3:= v9;
  #L3e1dce.  goto L3e1dda;
  #L3e1dd0.  v3:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1dd4.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1dd8.  v3:= v3 - v4 @kind int;
  #L3e1dda.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1dde.  call `arraycopy`(v0, v4, v7, v8, v3) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1de4.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1de8.  v4:= v4 + v3 @kind int;
  #L3e1dea.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v4;
  #L3e1dee.  if v3 == v9 then goto L3e1e08;
  #L3e1df2.  call temp:= `available`(v2) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3e1df8.  v4:= temp;
  #L3e1dfa.  if v4 != 0 then goto L3e1e00;
  #L3e1dfe.  goto L3e1e08;
  #L3e1e00.  v8:= v8 + v3 @kind int;
  #L3e1e02.  v3:= v9 - v3 @kind int;
  #L3e1e06.  goto L3e1e0e;
  #L3e1e08.  @monitorexit v6
  #L3e1e0a.  return v3;
  #L3e1e0c.  v3:= v9;
  #L3e1e0e.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e1e12.  v5:= -1I;
  #L3e1e14.  if v4 != v5 then goto L3e1e38;
  #L3e1e18.  v4:= length @variable v0;
  #L3e1e1a.  if v3 < v4 then goto L3e1e38;
  #L3e1e1e.  call temp:= `read`(v2, v7, v8, v3) @signature `Ljava/io/InputStream;.read:([BII)I` @kind virtual;
  #L3e1e24.  v4:= temp;
  #L3e1e26.  if v4 != v5 then goto L3e1e9c;
  #L3e1e2a.  if v3 != v9 then goto L3e1e30;
  #L3e1e2e.  goto L3e1e34;
  #L3e1e30.  v5:= v9 - v3 @kind int;
  #L3e1e34.  @monitorexit v6
  #L3e1e36.  return v5;
  #L3e1e38.  call temp:= `a`(v6, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3e1e3e.  v4:= temp;
  #L3e1e40.  if v4 != v5 then goto L3e1e52;
  #L3e1e44.  if v3 != v9 then goto L3e1e4a;
  #L3e1e48.  goto L3e1e4e;
  #L3e1e4a.  v5:= v9 - v3 @kind int;
  #L3e1e4e.  @monitorexit v6
  #L3e1e50.  return v5;
  #L3e1e52.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1e56.  if v0 == v4 then goto L3e1e6c;
  #L3e1e5a.  v0:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1e5e.  if v0 == 0 then goto L3e1e64;
  #L3e1e62.  goto L3e1e6c;
  #L3e1e64.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1e6a.  throw v1;
  #L3e1e6c.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1e70.  v5:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1e74.  v4:= v4 - v5 @kind int;
  #L3e1e76.  if v4 < v3 then goto L3e1e7e;
  #L3e1e7a.  v4:= v3;
  #L3e1e7c.  goto L3e1e88;
  #L3e1e7e.  v4:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1e82.  v5:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1e86.  v4:= v4 - v5 @kind int;
  #L3e1e88.  v5:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1e8c.  call `arraycopy`(v0, v5, v7, v8, v4) @signature `Ljava/lang/System;.arraycopy:(Ljava/lang/Object;ILjava/lang/Object;II)V` @kind static;
  #L3e1e92.  v5:= v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1e96.  v5:= v5 + v4 @kind int;
  #L3e1e98.  v6.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v5;
  #L3e1e9c.  v3:= v3 - v4 @kind int;
  #L3e1e9e.  if v3 != 0 then goto L3e1ea6;
  #L3e1ea2.  @monitorexit v6
  #L3e1ea4.  return v9;
  #L3e1ea6.  call temp:= `available`(v2) @signature `Ljava/io/InputStream;.available:()I` @kind virtual;
  #L3e1eac.  v5:= temp;
  #L3e1eae.  if v5 != 0 then goto L3e1eb8;
  #L3e1eb2.  v9:= v9 - v3 @kind int;
  #L3e1eb4.  @monitorexit v6
  #L3e1eb6.  return v9;
  #L3e1eb8.  v8:= v8 + v4 @kind int;
  #L3e1eba.  goto L3e1e0e;
  #L3e1ebc.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1ec2.  throw v1;
  #L3e1ec4.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e1eca.  throw v1;
  #L3e1ecc.  v7:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e1ece.  @monitorexit v6
  #L3e1ed0.  throw v7;
  catch `java.lang.Throwable` @[L3e1d96..L3e1d9a] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1daa..L3e1dfa] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1e0e..L3e1e26] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1e38..L3e1e40] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1e52..L3e1e6a] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1e6c..L3e1e9c] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1ea6..L3e1eae] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1ebc..L3e1ec2] goto L3e1ecc;
  catch `java.lang.Throwable` @[L3e1ec4..L3e1eca] goto L3e1ecc;
}
procedure `void` `release`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v2 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.release:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e21a0.  @monitorenter v2
  #L3e21a2.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e21a6.  if v0 == 0 then goto L3e21be;
  #L3e21aa.  v0:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.f` @type ^`com.bumptech.glide.load.engine.bitmap_recycle.ArrayPool` @kind object;
  #L3e21ae.  v1:= v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e21b2.  call `put`(v0, v1) @signature `Lcom/bumptech/glide/load/engine/bitmap_recycle/ArrayPool;.put:(Ljava/lang/Object;)V` @kind interface;
  #L3e21b8.  v0:= 0I;
  #L3e21ba.  v2.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] := v0 @kind object;
  #L3e21be.  @monitorexit v2
  #L3e21c0.  return @kind void;
  #L3e21c2.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e21c4.  @monitorexit v2
  #L3e21c6.  throw v0;
  catch `java.lang.Throwable` @[L3e21a2..L3e21be] goto L3e21c2;
}
procedure `void` `reset`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v3 @kind this) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.reset:()V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e21e4.  @monitorenter v3
  #L3e21e6.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e21ea.  if v0 == 0 then goto L3e224a;
  #L3e21ee.  v0:= -1I;
  #L3e21f0.  v1:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e21f4.  if v0 == v1 then goto L3e2204;
  #L3e21f8.  v0:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e21fc.  v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v0;
  #L3e2200.  @monitorexit v3
  #L3e2202.  return @kind void;
  #L3e2204.  v0:= new `com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream$a`;
  #L3e2208.  v1:= new `java.lang.StringBuilder`;
  #L3e220c.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3e2212.  v2:= "Mark has been invalidated, pos: " @kind object;
  #L3e2216.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e221c.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e2220.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2226.  v2:= " markLimit: " @kind object;
  #L3e222a.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e2230.  v2:= v3.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3e2234.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3e223a.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3e2240.  v1:= temp @kind object;
  #L3e2242.  call `<init>`(v0, v1) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream$a;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2248.  throw v0;
  #L3e224a.  v0:= new `java.io.IOException`;
  #L3e224e.  v1:= "Stream is closed" @kind object;
  #L3e2252.  call `<init>`(v0, v1) @signature `Ljava/io/IOException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3e2258.  throw v0;
  #L3e225a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e225c.  @monitorexit v3
  #L3e225e.  throw v0;
  catch `java.lang.Throwable` @[L3e21e6..L3e2200] goto L3e225a;
  catch `java.lang.Throwable` @[L3e2204..L3e225a] goto L3e225a;
}
procedure `long` `skip`(`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream` v8 @kind this, `long` v9 ) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.skip:(J)J` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3e1f50.  @monitorenter v8
  #L3e1f52.  v0:= 1L;
  #L3e1f56.  v2:= lcmp(v9, v0);
  #L3e1f5a.  if v2 >= 0 then goto L3e1f66;
  #L3e1f5e.  v9:= 0L;
  #L3e1f62.  @monitorexit v8
  #L3e1f64.  return v9 @kind wide;
  #L3e1f66.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.a` @type ^`byte`[] @kind object;
  #L3e1f6a.  v1:= 0I;
  #L3e1f6c.  if v0 == 0 then goto L3e203c;
  #L3e1f70.  v2:= v8.`java.io.FilterInputStream.in` @type ^`java.io.InputStream` @kind object;
  #L3e1f74.  if v2 == 0 then goto L3e2034;
  #L3e1f78.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1f7c.  v3:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1f80.  v1:= v1 - v3 @kind int;
  #L3e1f82.  v3:= (`long`) v1 @kind i2l;
  #L3e1f84.  v1:= lcmp(v3, v9);
  #L3e1f88.  if v1 < 0 then goto L3e1f9e;
  #L3e1f8c.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1f90.  v0:= (`long`) v0 @kind i2l;
  #L3e1f92.  v0:= v0 + v9 @kind long;
  #L3e1f94.  v1:= (`int`) v0 @kind l2i;
  #L3e1f96.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3e1f9a.  @monitorexit v8
  #L3e1f9c.  return v9 @kind wide;
  #L3e1f9e.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1fa2.  v3:= (`long`) v1 @kind i2l;
  #L3e1fa4.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1fa8.  v5:= (`long`) v1 @kind i2l;
  #L3e1faa.  v3:= v3 - v5 @kind long;
  #L3e1fac.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1fb0.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3e1fb4.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.d` @type ^`int`;
  #L3e1fb8.  v5:= -1I;
  #L3e1fba.  if v1 == v5 then goto L3e2024;
  #L3e1fbe.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.c` @type ^`int`;
  #L3e1fc2.  v6:= (`long`) v1 @kind i2l;
  #L3e1fc4.  v1:= lcmp(v9, v6);
  #L3e1fc8.  if v1 > 0 then goto L3e2024;
  #L3e1fcc.  call temp:= `a`(v8, v2, v0) @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.a:(Ljava/io/InputStream;[B)I` @kind direct;
  #L3e1fd2.  v0:= temp;
  #L3e1fd4.  if v0 != v5 then goto L3e1fdc;
  #L3e1fd8.  @monitorexit v8
  #L3e1fda.  return v3 @kind wide;
  #L3e1fdc.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e1fe0.  v1:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1fe4.  v0:= v0 - v1 @kind int;
  #L3e1fe6.  v0:= (`long`) v0 @kind i2l;
  #L3e1fe8.  v5:= v9 - v3 @kind long;
  #L3e1fec.  v2:= lcmp(v0, v5);
  #L3e1ff0.  if v2 < 0 then goto L3e2008;
  #L3e1ff4.  v0:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e1ff8.  v0:= (`long`) v0 @kind i2l;
  #L3e1ffa.  v0:= v0 + v9 @kind long;
  #L3e1ffc.  v0:= v0 - v3 @kind long;
  #L3e1ffe.  v1:= (`int`) v0 @kind l2i;
  #L3e2000.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v1;
  #L3e2004.  @monitorexit v8
  #L3e2006.  return v9 @kind wide;
  #L3e2008.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e200c.  v9:= (`long`) v9 @kind i2l;
  #L3e200e.  v3:= v3 + v9 @kind long;
  #L3e2010.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int`;
  #L3e2014.  v9:= (`long`) v9 @kind i2l;
  #L3e2016.  v3:= v3 - v9 @kind long;
  #L3e2018.  v9:= v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.b` @type ^`int`;
  #L3e201c.  v8.`com.bumptech.glide.load.resource.bitmap.RecyclableBufferedInputStream.e` @type ^`int` := v9;
  #L3e2020.  @monitorexit v8
  #L3e2022.  return v3 @kind wide;
  #L3e2024.  v9:= v9 - v3 @kind long;
  #L3e2026.  call temp:= `skip`(v2, v9) @signature `Ljava/io/InputStream;.skip:(J)J` @kind virtual;
  #L3e202c.  v9:= temp @kind wide;
  #L3e202e.  v3:= v3 + v9 @kind long;
  #L3e2030.  @monitorexit v8
  #L3e2032.  return v3 @kind wide;
  #L3e2034.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e203a.  throw v1;
  #L3e203c.  call temp:= `b`() @signature `Lcom/bumptech/glide/load/resource/bitmap/RecyclableBufferedInputStream;.b:()Ljava/io/IOException;` @kind static;
  #L3e2042.  throw v1;
  #L3e2044.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e2046.  @monitorexit v8
  #L3e2048.  throw v9;
  catch `java.lang.Throwable` @[L3e1f66..L3e1f9a] goto L3e2044;
  catch `java.lang.Throwable` @[L3e1f9e..L3e1fd4] goto L3e2044;
  catch `java.lang.Throwable` @[L3e1fdc..L3e2004] goto L3e2044;
  catch `java.lang.Throwable` @[L3e2008..L3e2020] goto L3e2044;
  catch `java.lang.Throwable` @[L3e2026..L3e202e] goto L3e2044;
  catch `java.lang.Throwable` @[L3e2034..L3e203a] goto L3e2044;
  catch `java.lang.Throwable` @[L3e203c..L3e2042] goto L3e2044;
}
