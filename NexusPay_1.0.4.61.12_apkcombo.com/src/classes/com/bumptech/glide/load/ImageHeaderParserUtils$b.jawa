record `com.bumptech.glide.load.ImageHeaderParserUtils$b` @kind class @AccessFlag  extends `com.bumptech.glide.load.ImageHeaderParserUtils$g` @kind interface {
  `java.nio.ByteBuffer` `com.bumptech.glide.load.ImageHeaderParserUtils$b.a` @AccessFlag FINAL_SYNTHETIC;
}
procedure `void` `<init>`(`com.bumptech.glide.load.ImageHeaderParserUtils$b` v0 @kind this, `java.nio.ByteBuffer` v1 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils$b;.<init>:(Ljava/nio/ByteBuffer;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L3cd050.  v0.`com.bumptech.glide.load.ImageHeaderParserUtils$b.a` @type ^`java.nio.ByteBuffer` := v1 @kind object;
  #L3cd054.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cd05a.  return @kind void;
}
procedure `com.bumptech.glide.load.ImageHeaderParser$ImageType` `a`(`com.bumptech.glide.load.ImageHeaderParserUtils$b` v1 @kind this, `com.bumptech.glide.load.ImageHeaderParser` v2 @kind object) @signature `Lcom/bumptech/glide/load/ImageHeaderParserUtils$b;.a:(Lcom/bumptech/glide/load/ImageHeaderParser;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd030.  v0:= v1.`com.bumptech.glide.load.ImageHeaderParserUtils$b.a` @type ^`java.nio.ByteBuffer` @kind object;
  #L3cd034.  call temp:= `getType`(v2, v0) @signature `Lcom/bumptech/glide/load/ImageHeaderParser;.getType:(Ljava/nio/ByteBuffer;)Lcom/bumptech/glide/load/ImageHeaderParser$ImageType;` @kind interface;
  #L3cd03a.  v2:= temp @kind object;
  #L3cd03c.  return v2 @kind object;
}
