record `com.bumptech.glide.load.Options` @kind class @AccessFlag PUBLIC_FINAL extends `com.bumptech.glide.load.Key` @kind interface {
  `androidx.collection.ArrayMap` `com.bumptech.glide.load.Options.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.load.Options` v1 @kind this) @signature `Lcom/bumptech/glide/load/Options;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cd85c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cd862.  v0:= new `com.bumptech.glide.util.CachedHashCodeArrayMap`;
  #L3cd866.  call `<init>`(v0) @signature `Lcom/bumptech/glide/util/CachedHashCodeArrayMap;.<init>:()V` @kind direct;
  #L3cd86c.  v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` := v0 @kind object;
  #L3cd870.  return @kind void;
}
procedure `void` `a`(`com.bumptech.glide.load.Option` v0 @kind object, `java.lang.Object` v1 @kind object, `java.security.MessageDigest` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.a:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @AccessFlag PRIVATE_STATIC {
    temp;

  #L3cd8a4.  call `update`(v0, v1, v2) @signature `Lcom/bumptech/glide/load/Option;.update:(Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind virtual;
  #L3cd8aa.  return @kind void;
}
procedure `boolean` `equals`(`com.bumptech.glide.load.Options` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.equals:(Ljava/lang/Object;)Z` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd770.  v0:= instanceof @variable v2 @type ^`com.bumptech.glide.load.Options` @kind boolean;
  #L3cd774.  if v0 == 0 then goto L3cd78e;
  #L3cd778.  v2:= (`com.bumptech.glide.load.Options`) v2 @kind object;
  #L3cd77c.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd780.  v2:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd784.  call temp:= `equals`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cd78a.  v2:= temp;
  #L3cd78c.  return v2;
  #L3cd78e.  v2:= 0I;
  #L3cd790.  return v2;
}
procedure `java.lang.Object` `get`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.get:(Lcom/bumptech/glide/load/Option;)Ljava/lang/Object;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd7e0.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd7e4.  call temp:= `containsKey`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L3cd7ea.  v0:= temp;
  #L3cd7ec.  if v0 == 0 then goto L3cd7fe;
  #L3cd7f0.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd7f4.  call temp:= `get`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3cd7fa.  v2:= temp @kind object;
  #L3cd7fc.  goto L3cd806;
  #L3cd7fe.  call temp:= `getDefaultValue`(v2) @signature `Lcom/bumptech/glide/load/Option;.getDefaultValue:()Ljava/lang/Object;` @kind virtual;
  #L3cd804.  v2:= temp @kind object;
  #L3cd806.  return v2 @kind object;
}
procedure `int` `hashCode`(`com.bumptech.glide.load.Options` v1 @kind this) @signature `Lcom/bumptech/glide/load/Options;.hashCode:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd7c0.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd7c4.  call temp:= `hashCode`(v0) @signature `Landroidx/collection/SimpleArrayMap;.hashCode:()I` @kind virtual;
  #L3cd7ca.  v0:= temp;
  #L3cd7cc.  return v0;
}
procedure `void` `putAll`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Options` v2 @kind object) @signature `Lcom/bumptech/glide/load/Options;.putAll:(Lcom/bumptech/glide/load/Options;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd884.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd888.  v2:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd88c.  call `putAll`(v0, v2) @signature `Landroidx/collection/SimpleArrayMap;.putAll:(Landroidx/collection/SimpleArrayMap;)V` @kind virtual;
  #L3cd892.  return @kind void;
}
procedure `com.bumptech.glide.load.Options` `set`(`com.bumptech.glide.load.Options` v1 @kind this, `com.bumptech.glide.load.Option` v2 @kind object, `java.lang.Object` v3 @kind object) @signature `Lcom/bumptech/glide/load/Options;.set:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;)Lcom/bumptech/glide/load/Options;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cd7a4.  v0:= v1.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd7a8.  call temp:= `put`(v0, v2, v3) @signature `Landroidx/collection/SimpleArrayMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3cd7ae.  return v1 @kind object;
}
procedure `java.lang.String` `toString`(`com.bumptech.glide.load.Options` v2 @kind this) @signature `Lcom/bumptech/glide/load/Options;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3cd818.  v0:= new `java.lang.StringBuilder`;
  #L3cd81c.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3cd822.  v1:= "Options{values=" @kind object;
  #L3cd826.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cd82c.  v1:= v2.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd830.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/Object;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cd836.  v1:= 125I;
  #L3cd83a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L3cd840.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3cd846.  v0:= temp @kind object;
  #L3cd848.  return v0 @kind object;
}
procedure `void` `updateDiskCacheKey`(`com.bumptech.glide.load.Options` v3 @kind this, `java.security.MessageDigest` v4 @kind object) @signature `Lcom/bumptech/glide/load/Options;.updateDiskCacheKey:(Ljava/security/MessageDigest;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3cd8bc.  v0:= 0I;
  #L3cd8be.  v1:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd8c2.  call temp:= `size`(v1) @signature `Landroidx/collection/SimpleArrayMap;.size:()I` @kind virtual;
  #L3cd8c8.  v1:= temp;
  #L3cd8ca.  if v0 >= v1 then goto L3cd8f6;
  #L3cd8ce.  v1:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd8d2.  call temp:= `keyAt`(v1, v0) @signature `Landroidx/collection/SimpleArrayMap;.keyAt:(I)Ljava/lang/Object;` @kind virtual;
  #L3cd8d8.  v1:= temp @kind object;
  #L3cd8da.  v1:= (`com.bumptech.glide.load.Option`) v1 @kind object;
  #L3cd8de.  v2:= v3.`com.bumptech.glide.load.Options.a` @type ^`androidx.collection.ArrayMap` @kind object;
  #L3cd8e2.  call temp:= `valueAt`(v2, v0) @signature `Landroidx/collection/SimpleArrayMap;.valueAt:(I)Ljava/lang/Object;` @kind virtual;
  #L3cd8e8.  v2:= temp @kind object;
  #L3cd8ea.  call `a`(v1, v2, v4) @signature `Lcom/bumptech/glide/load/Options;.a:(Lcom/bumptech/glide/load/Option;Ljava/lang/Object;Ljava/security/MessageDigest;)V` @kind static;
  #L3cd8f0.  v0:= v0 + 1;
  #L3cd8f4.  goto L3cd8be;
  #L3cd8f6.  return @kind void;
}
