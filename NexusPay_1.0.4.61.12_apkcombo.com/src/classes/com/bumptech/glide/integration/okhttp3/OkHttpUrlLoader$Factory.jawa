record `com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` @kind class @AccessFlag PUBLIC extends `com.bumptech.glide.load.model.ModelLoaderFactory` @kind interface {
  `okhttp3.Call$Factory` `com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.a` @AccessFlag PRIVATE_FINAL;
}
global `okhttp3.Call$Factory` `@@com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.b` @AccessFlag PRIVATE_STATIC_VOLATILE;
procedure `void` `<init>`(`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` v1 @kind this) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3cca40.  call temp:= `a`() @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.a:()Lokhttp3/Call$Factory;` @kind static;
  #L3cca46.  v0:= temp @kind object;
  #L3cca48.  call `<init>`(v1, v0) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.<init>:(Lokhttp3/Call$Factory;)V` @kind direct;
  #L3cca4e.  return @kind void;
}
procedure `void` `<init>`(`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` v0 @kind this, `okhttp3.Call$Factory` v1 @kind object) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.<init>:(Lokhttp3/Call$Factory;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3cca60.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3cca66.  v0.`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.a` @type ^`okhttp3.Call$Factory` := v1 @kind object;
  #L3cca6a.  return @kind void;
}
procedure `okhttp3.Call$Factory` `a`() @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.a:()Lokhttp3/Call$Factory;` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3cc9f0.  v0:= `@@com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.b` @type ^`okhttp3.Call$Factory` @kind object;
  #L3cc9f4.  if v0 != 0 then goto L3cca1e;
  #L3cc9f8.  v0:= constclass @type ^`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` @kind object;
  #L3cc9fc.  @monitorenter v0
  #L3cc9fe.  v1:= `@@com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.b` @type ^`okhttp3.Call$Factory` @kind object;
  #L3cca02.  if v1 != 0 then goto L3cca14;
  #L3cca06.  v1:= new `okhttp3.OkHttpClient`;
  #L3cca0a.  call `<init>`(v1) @signature `Lokhttp3/OkHttpClient;.<init>:()V` @kind direct;
  #L3cca10.  `@@com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.b` @type ^`okhttp3.Call$Factory` := v1 @kind object;
  #L3cca14.  @monitorexit v0
  #L3cca16.  goto L3cca1e;
  #L3cca18.  v1:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3cca1a.  @monitorexit v0
  #L3cca1c.  throw v1;
  #L3cca1e.  v0:= `@@com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.b` @type ^`okhttp3.Call$Factory` @kind object;
  #L3cca22.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3cc9fe..L3cca1c] goto L3cca18;
}
procedure `com.bumptech.glide.load.model.ModelLoader` `build`(`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` v1 @kind this, `com.bumptech.glide.load.model.MultiModelLoaderFactory` v2 @kind object) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.build:(Lcom/bumptech/glide/load/model/MultiModelLoaderFactory;)Lcom/bumptech/glide/load/model/ModelLoader;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3cc9d0.  v2:= new `com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader`;
  #L3cc9d4.  v0:= v1.`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory.a` @type ^`okhttp3.Call$Factory` @kind object;
  #L3cc9d8.  call `<init>`(v2, v0) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader;.<init>:(Lokhttp3/Call$Factory;)V` @kind direct;
  #L3cc9de.  return v2 @kind object;
}
procedure `void` `teardown`(`com.bumptech.glide.integration.okhttp3.OkHttpUrlLoader$Factory` v0 @kind this) @signature `Lcom/bumptech/glide/integration/okhttp3/OkHttpUrlLoader$Factory;.teardown:()V` @AccessFlag PUBLIC {
    temp;

  #L3cca7c.  return @kind void;
}
