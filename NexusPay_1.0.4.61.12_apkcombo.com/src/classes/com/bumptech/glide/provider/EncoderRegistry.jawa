record `com.bumptech.glide.provider.EncoderRegistry` @kind class @AccessFlag PUBLIC {
  `java.util.List` `com.bumptech.glide.provider.EncoderRegistry.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.bumptech.glide.provider.EncoderRegistry` v1 @kind this) @signature `Lcom/bumptech/glide/provider/EncoderRegistry;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3e849c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3e84a2.  v0:= new `java.util.ArrayList`;
  #L3e84a6.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3e84ac.  v1.`com.bumptech.glide.provider.EncoderRegistry.a` @type ^`java.util.List` := v0 @kind object;
  #L3e84b0.  return @kind void;
}
procedure `void` `append`(`com.bumptech.glide.provider.EncoderRegistry` v2 @kind this, `java.lang.Class` v3 @kind object, `com.bumptech.glide.load.Encoder` v4 @kind object) @signature `Lcom/bumptech/glide/provider/EncoderRegistry;.append:(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3e84c4.  @monitorenter v2
  #L3e84c6.  v0:= v2.`com.bumptech.glide.provider.EncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e84ca.  v1:= new `com.bumptech.glide.provider.EncoderRegistry$a`;
  #L3e84ce.  call `<init>`(v1, v3, v4) @signature `Lcom/bumptech/glide/provider/EncoderRegistry$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V` @kind direct;
  #L3e84d4.  call temp:= `add`(v0, v1) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3e84da.  @monitorexit v2
  #L3e84dc.  return @kind void;
  #L3e84de.  v3:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e84e0.  @monitorexit v2
  #L3e84e2.  throw v3;
  catch `java.lang.Throwable` @[L3e84c6..L3e84da] goto L3e84de;
}
procedure `com.bumptech.glide.load.Encoder` `getEncoder`(`com.bumptech.glide.provider.EncoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/bumptech/glide/provider/EncoderRegistry;.getEncoder:(Ljava/lang/Class;)Lcom/bumptech/glide/load/Encoder;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8438.  @monitorenter v3
  #L3e843a.  v0:= v3.`com.bumptech.glide.provider.EncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e843e.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3e8444.  v0:= temp @kind object;
  #L3e8446.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3e844c.  v1:= temp;
  #L3e844e.  if v1 == 0 then goto L3e8472;
  #L3e8452.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3e8458.  v1:= temp @kind object;
  #L3e845a.  v1:= (`com.bumptech.glide.provider.EncoderRegistry$a`) v1 @kind object;
  #L3e845e.  call temp:= `a`(v1, v4) @signature `Lcom/bumptech/glide/provider/EncoderRegistry$a;.a:(Ljava/lang/Class;)Z` @kind virtual;
  #L3e8464.  v2:= temp;
  #L3e8466.  if v2 == 0 then goto L3e8446;
  #L3e846a.  v4:= v1.`com.bumptech.glide.provider.EncoderRegistry$a.b` @type ^`com.bumptech.glide.load.Encoder` @kind object;
  #L3e846e.  @monitorexit v3
  #L3e8470.  return v4 @kind object;
  #L3e8472.  v4:= 0I;
  #L3e8474.  @monitorexit v3
  #L3e8476.  return v4 @kind object;
  #L3e8478.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e847a.  @monitorexit v3
  #L3e847c.  throw v4;
  catch `java.lang.Throwable` @[L3e843a..L3e846e] goto L3e8478;
}
procedure `void` `prepend`(`com.bumptech.glide.provider.EncoderRegistry` v3 @kind this, `java.lang.Class` v4 @kind object, `com.bumptech.glide.load.Encoder` v5 @kind object) @signature `Lcom/bumptech/glide/provider/EncoderRegistry;.prepend:(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3e8500.  @monitorenter v3
  #L3e8502.  v0:= v3.`com.bumptech.glide.provider.EncoderRegistry.a` @type ^`java.util.List` @kind object;
  #L3e8506.  v1:= 0I;
  #L3e8508.  v2:= new `com.bumptech.glide.provider.EncoderRegistry$a`;
  #L3e850c.  call `<init>`(v2, v4, v5) @signature `Lcom/bumptech/glide/provider/EncoderRegistry$a;.<init>:(Ljava/lang/Class;Lcom/bumptech/glide/load/Encoder;)V` @kind direct;
  #L3e8512.  call `add`(v0, v1, v2) @signature `Ljava/util/List;.add:(ILjava/lang/Object;)V` @kind interface;
  #L3e8518.  @monitorexit v3
  #L3e851a.  return @kind void;
  #L3e851c.  v4:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3e851e.  @monitorexit v3
  #L3e8520.  throw v4;
  catch `java.lang.Throwable` @[L3e8502..L3e8518] goto L3e851c;
}
