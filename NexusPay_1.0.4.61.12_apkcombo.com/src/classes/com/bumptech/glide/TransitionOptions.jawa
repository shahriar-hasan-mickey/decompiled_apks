record `com.bumptech.glide.TransitionOptions` @kind class @AccessFlag PUBLIC_ABSTRACT extends `java.lang.Cloneable` @kind interface {
  `com.bumptech.glide.request.transition.TransitionFactory` `com.bumptech.glide.TransitionOptions.a` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.bumptech.glide.TransitionOptions` v1 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L3c8b0c.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c8b12.  call temp:= `getFactory`() @signature `Lcom/bumptech/glide/request/transition/NoTransition;.getFactory:()Lcom/bumptech/glide/request/transition/TransitionFactory;` @kind static;
  #L3c8b18.  v0:= temp @kind object;
  #L3c8b1a.  v1.`com.bumptech.glide.TransitionOptions.a` @type ^`com.bumptech.glide.request.transition.TransitionFactory` := v0 @kind object;
  #L3c8b1e.  return @kind void;
}
procedure `com.bumptech.glide.TransitionOptions` `b`(`com.bumptech.glide.TransitionOptions` v0 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.b:()Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PRIVATE {
    temp;

  #L3c8a54.  return v0 @kind object;
}
procedure `com.bumptech.glide.request.transition.TransitionFactory` `a`(`com.bumptech.glide.TransitionOptions` v1 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.a:()Lcom/bumptech/glide/request/transition/TransitionFactory;` @AccessFlag FINAL {
    temp;
    v0;

  #L3c8ad8.  v0:= v1.`com.bumptech.glide.TransitionOptions.a` @type ^`com.bumptech.glide.request.transition.TransitionFactory` @kind object;
  #L3c8adc.  return v0 @kind object;
}
procedure `com.bumptech.glide.TransitionOptions` `clone`(`com.bumptech.glide.TransitionOptions` v2 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.clone:()Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;
    v1;

  #L3c89f4.  call temp:= `clone`(v2) @signature `Ljava/lang/Object;.clone:()Ljava/lang/Object;` @kind super;
  #L3c89fa.  v0:= temp @kind object;
  #L3c89fc.  v0:= (`com.bumptech.glide.TransitionOptions`) v0 @kind object;
  #L3c8a00.  return v0 @kind object;
  #L3c8a02.  v0:= Exception @type ^`java.lang.CloneNotSupportedException` @kind object;
  #L3c8a04.  v1:= new `java.lang.RuntimeException`;
  #L3c8a08.  call `<init>`(v1, v0) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/Throwable;)V` @kind direct;
  #L3c8a0e.  throw v1;
  catch `java.lang.CloneNotSupportedException` @[L3c89f4..L3c8a00] goto L3c8a02;
}
procedure `java.lang.Object` `clone`(`com.bumptech.glide.TransitionOptions` v1 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.clone:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L3c8af0.  call temp:= `clone`(v1) @signature `Lcom/bumptech/glide/TransitionOptions;.clone:()Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c8af6.  v0:= temp @kind object;
  #L3c8af8.  return v0 @kind object;
}
procedure `com.bumptech.glide.TransitionOptions` `dontTransition`(`com.bumptech.glide.TransitionOptions` v1 @kind this) @signature `Lcom/bumptech/glide/TransitionOptions;.dontTransition:()Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c8a30.  call temp:= `getFactory`() @signature `Lcom/bumptech/glide/request/transition/NoTransition;.getFactory:()Lcom/bumptech/glide/request/transition/TransitionFactory;` @kind static;
  #L3c8a36.  v0:= temp @kind object;
  #L3c8a38.  call temp:= `transition`(v1, v0) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c8a3e.  v0:= temp @kind object;
  #L3c8a40.  return v0 @kind object;
}
procedure `com.bumptech.glide.TransitionOptions` `transition`(`com.bumptech.glide.TransitionOptions` v1 @kind this, `int` v2 ) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(I)Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c8ab4.  v0:= new `com.bumptech.glide.request.transition.ViewAnimationFactory`;
  #L3c8ab8.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/transition/ViewAnimationFactory;.<init>:(I)V` @kind direct;
  #L3c8abe.  call temp:= `transition`(v1, v0) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c8ac4.  v2:= temp @kind object;
  #L3c8ac6.  return v2 @kind object;
}
procedure `com.bumptech.glide.TransitionOptions` `transition`(`com.bumptech.glide.TransitionOptions` v0 @kind this, `com.bumptech.glide.request.transition.TransitionFactory` v1 @kind object) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PUBLIC_FINAL {
    temp;

  #L3c8a68.  call temp:= `checkNotNull`(v1) @signature `Lcom/bumptech/glide/util/Preconditions;.checkNotNull:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L3c8a6e.  v1:= temp @kind object;
  #L3c8a70.  v1:= (`com.bumptech.glide.request.transition.TransitionFactory`) v1 @kind object;
  #L3c8a74.  v0.`com.bumptech.glide.TransitionOptions.a` @type ^`com.bumptech.glide.request.transition.TransitionFactory` := v1 @kind object;
  #L3c8a78.  call temp:= `b`(v0) @signature `Lcom/bumptech/glide/TransitionOptions;.b:()Lcom/bumptech/glide/TransitionOptions;` @kind direct;
  #L3c8a7e.  return v0 @kind object;
}
procedure `com.bumptech.glide.TransitionOptions` `transition`(`com.bumptech.glide.TransitionOptions` v1 @kind this, `com.bumptech.glide.request.transition.ViewPropertyTransition$Animator` v2 @kind object) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)Lcom/bumptech/glide/TransitionOptions;` @AccessFlag PUBLIC_FINAL {
    temp;
    v0;

  #L3c8a90.  v0:= new `com.bumptech.glide.request.transition.ViewPropertyAnimationFactory`;
  #L3c8a94.  call `<init>`(v0, v2) @signature `Lcom/bumptech/glide/request/transition/ViewPropertyAnimationFactory;.<init>:(Lcom/bumptech/glide/request/transition/ViewPropertyTransition$Animator;)V` @kind direct;
  #L3c8a9a.  call temp:= `transition`(v1, v0) @signature `Lcom/bumptech/glide/TransitionOptions;.transition:(Lcom/bumptech/glide/request/transition/TransitionFactory;)Lcom/bumptech/glide/TransitionOptions;` @kind virtual;
  #L3c8aa0.  v2:= temp @kind object;
  #L3c8aa2.  return v2 @kind object;
}
