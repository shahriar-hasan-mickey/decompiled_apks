record `com.binimoy.clientsdk.utils.SecurityUtils` @kind class @AccessFlag PUBLIC {
}
global `int` `@@com.binimoy.clientsdk.utils.SecurityUtils.a` @AccessFlag PRIVATE_STATIC;
global `int` `@@com.binimoy.clientsdk.utils.SecurityUtils.b` @AccessFlag PRIVATE_STATIC;
procedure `void` `<init>`(`com.binimoy.clientsdk.utils.SecurityUtils` v0 @kind this) @signature `Lcom/binimoy/clientsdk/utils/SecurityUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c4564.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c456a.  return @kind void;
}
procedure `boolean` `matchedPasswordComplexity`(`com.binimoy.clientsdk.utils.SecurityUtils` v9 @kind this, `java.lang.String` v10 @kind object) @signature `Lcom/binimoy/clientsdk/utils/SecurityUtils;.matchedPasswordComplexity:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c4484.  v0:= 0I;
  #L3c4486.  v1:= "0" @kind object;
  #L3c448a.  call temp:= `parseInt`(v1) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c4490.  v1:= temp;
  #L3c4492.  v2:= 1I;
  #L3c4494.  if v1 == 0 then goto L3c44a0;
  #L3c4498.  v1:= 15I;
  #L3c449c.  v3:= 1I;
  #L3c449e.  goto L3c44a6;
  #L3c44a0.  v1:= 12I;
  #L3c44a4.  v3:= 0I;
  #L3c44a6.  if v1 == 0 then goto L3c44b0;
  #L3c44aa.  v1:= 0I;
  #L3c44ac.  v4:= 0I;
  #L3c44ae.  goto L3c44b4;
  #L3c44b0.  v1:= 1I;
  #L3c44b2.  v4:= 1I;
  #L3c44b4.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c44ba.  v5:= temp;
  #L3c44bc.  v6:= `@@com.binimoy.clientsdk.utils.SecurityUtils.b` @type ^`int`;
  #L3c44c0.  if v5 <= v6 then goto L3c44c6;
  #L3c44c4.  return v0;
  #L3c44c6.  v6:= `@@com.binimoy.clientsdk.utils.SecurityUtils.a` @type ^`int`;
  #L3c44ca.  if v5 >= v6 then goto L3c44d0;
  #L3c44ce.  return v0;
  #L3c44d0.  v5:= 0I;
  #L3c44d2.  v6:= 0I;
  #L3c44d4.  call temp:= `length`(v10) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L3c44da.  v7:= temp;
  #L3c44dc.  if v5 >= v7 then goto L3c4530;
  #L3c44e0.  call temp:= `charAt`(v10, v5) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L3c44e6.  v7:= temp;
  #L3c44e8.  if v4 != 0 then goto L3c44fc;
  #L3c44ec.  call temp:= `isLetterOrDigit`(v7) @signature `Ljava/lang/Character;.isLetterOrDigit:(C)Z` @kind static;
  #L3c44f2.  v8:= temp;
  #L3c44f4.  if v8 != 0 then goto L3c44fc;
  #L3c44f8.  v4:= 1I;
  #L3c44fa.  goto L3c452a;
  #L3c44fc.  if v1 != 0 then goto L3c4510;
  #L3c4500.  call temp:= `isDigit`(v7) @signature `Ljava/lang/Character;.isDigit:(C)Z` @kind static;
  #L3c4506.  v8:= temp;
  #L3c4508.  if v8 == 0 then goto L3c4510;
  #L3c450c.  v1:= 1I;
  #L3c450e.  goto L3c452a;
  #L3c4510.  if v6 == 0 then goto L3c4518;
  #L3c4514.  if v3 != 0 then goto L3c452a;
  #L3c4518.  call temp:= `isUpperCase`(v7) @signature `Ljava/lang/Character;.isUpperCase:(C)Z` @kind static;
  #L3c451e.  v7:= temp;
  #L3c4520.  if v7 == 0 then goto L3c4528;
  #L3c4524.  v6:= 1I;
  #L3c4526.  goto L3c452a;
  #L3c4528.  v3:= 1I;
  #L3c452a.  v5:= v5 + 1;
  #L3c452e.  goto L3c44d4;
  #L3c4530.  if v4 == 0 then goto L3c4542;
  #L3c4534.  if v1 == 0 then goto L3c4542;
  #L3c4538.  if v6 == 0 then goto L3c4542;
  #L3c453c.  if v3 == 0 then goto L3c4542;
  #L3c4540.  return v2;
  #L3c4542.  return v0;
  catch `com.binimoy.clientsdk.utils.SecurityUtils$ArrayOutOfBoundsException` @[L3c4486..L3c4520] goto L3c4542;
}
