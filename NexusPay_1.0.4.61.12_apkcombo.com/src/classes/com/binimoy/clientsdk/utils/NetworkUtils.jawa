record `com.binimoy.clientsdk.utils.NetworkUtils` @kind class @AccessFlag PUBLIC {
}
procedure `void` `<init>`(`com.binimoy.clientsdk.utils.NetworkUtils` v0 @kind this) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3c41b4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3c41ba.  return @kind void;
}
procedure `java.lang.String` `bytesToHex`(`byte`[] v4 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.bytesToHex:([B)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3c3e00.  v0:= new `java.lang.StringBuilder`;
  #L3c3e04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c3e0a.  v1:= 0I;
  #L3c3e0c.  v2:= length @variable v4;
  #L3c3e0e.  if v1 >= v2 then goto L3c3e48;
  #L3c3e12.  v2:= v4[v1] @kind byte;
  #L3c3e16.  v2:= v2 ^& 255;
  #L3c3e1a.  v3:= 16I;
  #L3c3e1e.  if v2 >= v3 then goto L3c3e2c;
  #L3c3e22.  v3:= "0" @kind object;
  #L3c3e26.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3e2c.  call temp:= `toHexString`(v2) @signature `Ljava/lang/Integer;.toHexString:(I)Ljava/lang/String;` @kind static;
  #L3c3e32.  v2:= temp @kind object;
  #L3c3e34.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3c3e3a.  v2:= temp @kind object;
  #L3c3e3c.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c3e42.  v1:= v1 + 1;
  #L3c3e46.  goto L3c3e0c;
  #L3c3e48.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c3e4e.  v4:= temp @kind object;
  #L3c3e50.  return v4 @kind object;
}
procedure `java.lang.String` `getIPAddress`(`boolean` v5 ) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getIPAddress:(Z)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L3c3e64.  call temp:= `getNetworkInterfaces`() @signature `Ljava/net/NetworkInterface;.getNetworkInterfaces:()Ljava/util/Enumeration;` @kind static;
  #L3c3e6a.  v0:= temp @kind object;
  #L3c3e6c.  call temp:= `list`(v0) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3c3e72.  v0:= temp @kind object;
  #L3c3e74.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c3e7a.  v0:= temp @kind object;
  #L3c3e7c.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c3e82.  v1:= temp;
  #L3c3e84.  if v1 == 0 then goto L3c3f3e;
  #L3c3e88.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c3e8e.  v1:= temp @kind object;
  #L3c3e90.  v2:= "0" @kind object;
  #L3c3e94.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c3e9a.  v2:= temp;
  #L3c3e9c.  if v2 == 0 then goto L3c3ea4;
  #L3c3ea0.  v1:= 0I;
  #L3c3ea2.  goto L3c3eb0;
  #L3c3ea4.  v1:= (`java.net.NetworkInterface`) v1 @kind object;
  #L3c3ea8.  call temp:= `getInetAddresses`(v1) @signature `Ljava/net/NetworkInterface;.getInetAddresses:()Ljava/util/Enumeration;` @kind virtual;
  #L3c3eae.  v1:= temp @kind object;
  #L3c3eb0.  call temp:= `list`(v1) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3c3eb6.  v1:= temp @kind object;
  #L3c3eb8.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c3ebe.  v1:= temp @kind object;
  #L3c3ec0.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c3ec6.  v2:= temp;
  #L3c3ec8.  if v2 == 0 then goto L3c3e7c;
  #L3c3ecc.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c3ed2.  v2:= temp @kind object;
  #L3c3ed4.  v2:= (`java.net.InetAddress`) v2 @kind object;
  #L3c3ed8.  call temp:= `isLoopbackAddress`(v2) @signature `Ljava/net/InetAddress;.isLoopbackAddress:()Z` @kind virtual;
  #L3c3ede.  v3:= temp;
  #L3c3ee0.  if v3 != 0 then goto L3c3ec0;
  #L3c3ee4.  call temp:= `getHostAddress`(v2) @signature `Ljava/net/InetAddress;.getHostAddress:()Ljava/lang/String;` @kind virtual;
  #L3c3eea.  v2:= temp @kind object;
  #L3c3eec.  v3:= 58I;
  #L3c3ef0.  call temp:= `indexOf`(v2, v3) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3c3ef6.  v3:= temp;
  #L3c3ef8.  v4:= 0I;
  #L3c3efa.  if v3 >= 0 then goto L3c3f02;
  #L3c3efe.  v3:= 1I;
  #L3c3f00.  goto L3c3f04;
  #L3c3f02.  v3:= 0I;
  #L3c3f04.  if v5 == 0 then goto L3c3f0e;
  #L3c3f08.  if v3 == 0 then goto L3c3ec0;
  #L3c3f0c.  return v2 @kind object;
  #L3c3f0e.  if v3 != 0 then goto L3c3ec0;
  #L3c3f12.  v5:= 37I;
  #L3c3f16.  call temp:= `indexOf`(v2, v5) @signature `Ljava/lang/String;.indexOf:(I)I` @kind virtual;
  #L3c3f1c.  v5:= temp;
  #L3c3f1e.  if v5 >= 0 then goto L3c3f2c;
  #L3c3f22.  call temp:= `toUpperCase`(v2) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3c3f28.  v5:= temp @kind object;
  #L3c3f2a.  goto L3c3f3c;
  #L3c3f2c.  call temp:= `substring`(v2, v4, v5) @signature `Ljava/lang/String;.substring:(II)Ljava/lang/String;` @kind virtual;
  #L3c3f32.  v5:= temp @kind object;
  #L3c3f34.  call temp:= `toUpperCase`(v5) @signature `Ljava/lang/String;.toUpperCase:()Ljava/lang/String;` @kind virtual;
  #L3c3f3a.  v5:= temp @kind object;
  #L3c3f3c.  return v5 @kind object;
  #L3c3f3e.  v5:= "" @kind object;
  #L3c3f42.  return v5 @kind object;
  catch `java.lang.Exception` @[L3c3e64..L3c3f3c] goto L3c3f3e;
}
procedure `java.lang.String` `getMACAddress`(`java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getMACAddress:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c3f64.  v0:= "" @kind object;
  #L3c3f68.  call temp:= `getNetworkInterfaces`() @signature `Ljava/net/NetworkInterface;.getNetworkInterfaces:()Ljava/util/Enumeration;` @kind static;
  #L3c3f6e.  v1:= temp @kind object;
  #L3c3f70.  call temp:= `list`(v1) @signature `Ljava/util/Collections;.list:(Ljava/util/Enumeration;)Ljava/util/ArrayList;` @kind static;
  #L3c3f76.  v1:= temp @kind object;
  #L3c3f78.  call temp:= `iterator`(v1) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3c3f7e.  v1:= temp @kind object;
  #L3c3f80.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3c3f86.  v2:= temp;
  #L3c3f88.  if v2 == 0 then goto L3c4056;
  #L3c3f8c.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3c3f92.  v2:= temp @kind object;
  #L3c3f94.  v2:= (`java.net.NetworkInterface`) v2 @kind object;
  #L3c3f98.  if v9 == 0 then goto L3c3fb2;
  #L3c3f9c.  call temp:= `getName`(v2) @signature `Ljava/net/NetworkInterface;.getName:()Ljava/lang/String;` @kind virtual;
  #L3c3fa2.  v3:= temp @kind object;
  #L3c3fa4.  call temp:= `equalsIgnoreCase`(v3, v9) @signature `Ljava/lang/String;.equalsIgnoreCase:(Ljava/lang/String;)Z` @kind virtual;
  #L3c3faa.  v3:= temp;
  #L3c3fac.  if v3 != 0 then goto L3c3fb2;
  #L3c3fb0.  goto L3c3f80;
  #L3c3fb2.  call temp:= `getHardwareAddress`(v2) @signature `Ljava/net/NetworkInterface;.getHardwareAddress:()[B` @kind virtual;
  #L3c3fb8.  v9:= temp @kind object;
  #L3c3fba.  if v9 != 0 then goto L3c3fc0;
  #L3c3fbe.  return v0 @kind object;
  #L3c3fc0.  v1:= new `java.lang.StringBuilder`;
  #L3c3fc4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3c3fca.  v2:= length @variable v9;
  #L3c3fcc.  v3:= 0I;
  #L3c3fce.  v4:= 0I;
  #L3c3fd0.  v5:= 1I;
  #L3c3fd2.  if v4 >= v2 then goto L3c4030;
  #L3c3fd6.  v6:= v9[v4] @kind byte;
  #L3c3fda.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3c3fe0.  v7:= temp;
  #L3c3fe2.  v8:= v7 * 2;
  #L3c3fe6.  v8:= v8 %% v7 @kind int;
  #L3c3fe8.  if v8 != 0 then goto L3c3ff2;
  #L3c3fec.  v7:= "&47^=" @kind object;
  #L3c3ff0.  goto L3c4002;
  #L3c3ff2.  v7:= 53I;
  #L3c3ff6.  v8:= "ewdknuix," @kind object;
  #L3c3ffa.  call temp:= `regionMatches`(v7, v8) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3c4000.  v7:= temp @kind object;
  #L3c4002.  v8:= 3I;
  #L3c4004.  call temp:= `substring`(v7, v8) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c400a.  v7:= temp @kind object;
  #L3c400c.  v5:= new `java.lang.Object`[v5];
  #L3c4010.  call temp:= `valueOf`(v6) @signature `Ljava/lang/Byte;.valueOf:(B)Ljava/lang/Byte;` @kind static;
  #L3c4016.  v6:= temp @kind object;
  #L3c4018.  v5[v3]:= v6 @kind object;
  #L3c401c.  call temp:= `format`(v7, v5) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3c4022.  v5:= temp @kind object;
  #L3c4024.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c402a.  v4:= v4 + 1;
  #L3c402e.  goto L3c3fd0;
  #L3c4030.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3c4036.  v9:= temp;
  #L3c4038.  if v9 <= 0 then goto L3c404c;
  #L3c403c.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3c4042.  v9:= temp;
  #L3c4044.  v9:= v9 - v5 @kind int;
  #L3c4046.  call temp:= `deleteCharAt`(v1, v9) @signature `Ljava/lang/StringBuilder;.deleteCharAt:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3c404c.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3c4052.  v9:= temp @kind object;
  #L3c4054.  return v9 @kind object;
  #L3c4056.  return v0 @kind object;
  catch `java.lang.Exception` @[L3c3f68..L3c4054] goto L3c4056;
}
procedure `byte`[] `getUTF8Bytes`(`java.lang.String` v2 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.getUTF8Bytes:(Ljava/lang/String;)[B` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3c3da0.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3c3da6.  v0:= temp;
  #L3c3da8.  v1:= v0 * 2;
  #L3c3dac.  v1:= v1 %% v0 @kind int;
  #L3c3dae.  if v1 == 0 then goto L3c3dc4;
  #L3c3db2.  v0:= 103I;
  #L3c3db6.  v1:= "\n\u001C\f3\u00066\u0018z\u0002\u0004\u001C+\u001E\u0000\u0018f" @kind object;
  #L3c3dba.  call temp:= `regionMatches`(v0, v1) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3c3dc0.  v0:= temp @kind object;
  #L3c3dc2.  goto L3c3dc8;
  #L3c3dc4.  v0:= "SSN$2" @kind object;
  #L3c3dc8.  v1:= 6I;
  #L3c3dca.  call temp:= `substring`(v0, v1) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c3dd0.  v0:= temp @kind object;
  #L3c3dd2.  call temp:= `getBytes`(v2, v0) @signature `Ljava/lang/String;.getBytes:(Ljava/lang/String;)[B` @kind virtual;
  #L3c3dd8.  v2:= temp @kind object;
  #L3c3dda.  return v2 @kind object;
  #L3c3ddc.  v2:= 0I;
  #L3c3dde.  return v2 @kind object;
  catch `java.lang.Exception` @[L3c3da0..L3c3dda] goto L3c3ddc;
}
procedure `java.lang.String` `loadFileAsString`(`java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/utils/NetworkUtils;.loadFileAsString:(Ljava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L3c4078.  v0:= new `java.io.BufferedInputStream`;
  #L3c407c.  v1:= new `java.io.FileInputStream`;
  #L3c4080.  call `<init>`(v1, v9) @signature `Ljava/io/FileInputStream;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3c4086.  v9:= 1024I;
  #L3c408a.  call `<init>`(v0, v1, v9) @signature `Ljava/io/BufferedInputStream;.<init>:(Ljava/io/InputStream;I)V` @kind direct;
  #L3c4090.  v1:= new `java.io.ByteArrayOutputStream`;
  #L3c4094.  call `<init>`(v1, v9) @signature `Ljava/io/ByteArrayOutputStream;.<init>:(I)V` @kind direct;
  #L3c409a.  v2:= "0" @kind object;
  #L3c409e.  call temp:= `parseInt`(v2) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3c40a4.  v2:= temp;
  #L3c40a6.  v3:= 0I;
  #L3c40a8.  if v2 == 0 then goto L3c40b0;
  #L3c40ac.  v1:= v3 @kind object;
  #L3c40ae.  goto L3c40b4;
  #L3c40b0.  v3:= new `byte`[v9];
  #L3c40b4.  v9:= 0I;
  #L3c40b6.  v2:= 0I;
  #L3c40b8.  v4:= 0I;
  #L3c40ba.  call temp:= `read`(v0, v3) @signature `Ljava/io/BufferedInputStream;.read:([B)I` @kind virtual;
  #L3c40c0.  v5:= temp;
  #L3c40c2.  v6:= -1I;
  #L3c40c4.  if v5 == v6 then goto L3c410e;
  #L3c40c8.  v6:= 1I;
  #L3c40ca.  if v4 != 0 then goto L3c4104;
  #L3c40ce.  v7:= v3[v9] @kind byte;
  #L3c40d2.  v8:= -17I;
  #L3c40d6.  if v7 != v8 then goto L3c4104;
  #L3c40da.  v7:= v3[v6] @kind byte;
  #L3c40de.  v8:= -69I;
  #L3c40e2.  if v7 != v8 then goto L3c4104;
  #L3c40e6.  v7:= 2I;
  #L3c40e8.  v7:= v3[v7] @kind byte;
  #L3c40ec.  v8:= -65I;
  #L3c40f0.  if v7 != v8 then goto L3c4104;
  #L3c40f4.  v2:= v5 + -3;
  #L3c40f8.  v7:= 3I;
  #L3c40fa.  call `write`(v1, v3, v7, v2) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3c4100.  v2:= 1I;
  #L3c4102.  goto L3c410a;
  #L3c4104.  call `write`(v1, v3, v9, v5) @signature `Ljava/io/ByteArrayOutputStream;.write:([BII)V` @kind virtual;
  #L3c410a.  v4:= v4 + v5 @kind int;
  #L3c410c.  goto L3c40ba;
  #L3c410e.  if v2 == 0 then goto L3c415a;
  #L3c4112.  v9:= new `java.lang.String`;
  #L3c4116.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3c411c.  v1:= temp @kind object;
  #L3c411e.  call temp:= `substring`() @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:()I` @kind static;
  #L3c4124.  v2:= temp;
  #L3c4126.  v3:= v2 * 2;
  #L3c412a.  v3:= v3 %% v2 @kind int;
  #L3c412c.  if v3 != 0 then goto L3c4136;
  #L3c4130.  v2:= "\b\n\u0019-9" @kind object;
  #L3c4134.  goto L3c4146;
  #L3c4136.  v2:= 71I;
  #L3c413a.  v3:= "\u0004=9)*'(" @kind object;
  #L3c413e.  call temp:= `regionMatches`(v2, v3) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @kind static;
  #L3c4144.  v2:= temp @kind object;
  #L3c4146.  v3:= 2301I;
  #L3c414a.  call temp:= `substring`(v2, v3) @signature `Lcom/binimoy/clientsdk/dtos/PairedValues$1;.substring:(Ljava/lang/String;I)Ljava/lang/String;` @kind static;
  #L3c4150.  v2:= temp @kind object;
  #L3c4152.  call `<init>`(v9, v1, v2) @signature `Ljava/lang/String;.<init>:([BLjava/lang/String;)V` @kind direct;
  #L3c4158.  goto L3c416c;
  #L3c415a.  v9:= new `java.lang.String`;
  #L3c415e.  call temp:= `toByteArray`(v1) @signature `Ljava/io/ByteArrayOutputStream;.toByteArray:()[B` @kind virtual;
  #L3c4164.  v1:= temp @kind object;
  #L3c4166.  call `<init>`(v9, v1) @signature `Ljava/lang/String;.<init>:([B)V` @kind direct;
  #L3c416c.  call `close`(v0) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L3c4172.  return v9 @kind object;
  #L3c4174.  v9:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3c4176.  call `close`(v0) @signature `Ljava/io/BufferedInputStream;.close:()V` @kind virtual;
  #L3c417c.  throw v9;
  catch `java.lang.Throwable` @[L3c4090..L3c416c] goto L3c4174;
  catch `java.lang.Exception` @[L3c416c..L3c4172] goto L3c4172;
  catch `java.lang.Exception` @[L3c4176..L3c417c] goto L3c417c;
}
