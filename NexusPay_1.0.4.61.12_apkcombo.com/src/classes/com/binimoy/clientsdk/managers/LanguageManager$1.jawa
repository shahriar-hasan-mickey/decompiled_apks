record `com.binimoy.clientsdk.managers.LanguageManager$1` @kind class @AccessFlag PUBLIC {
}
procedure `int` `regionMatches`() @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:()I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;

  #L3becac.  v0:= new `java.util.Random`;
  #L3becb0.  call `<init>`(v0) @signature `Ljava/util/Random;.<init>:()V` @kind direct;
  #L3becb6.  v1:= 75I;
  #L3becba.  call temp:= `nextInt`(v0, v1) @signature `Ljava/util/Random;.nextInt:(I)I` @kind virtual;
  #L3becc0.  v0:= temp;
  #L3becc2.  v0:= v0 + 1;
  #L3becc6.  return v0;
  #L3becc8.  v0:= 0I;
  #L3becca.  return v0;
  catch `com.binimoy.clientsdk.managers.LanguageManager$ArrayOutOfBoundsException` @[L3becac..L3becc2] goto L3becc8;
}
procedure `java.lang.String` `regionMatches`(`int` v8 , `java.lang.String` v9 @kind object) @signature `Lcom/binimoy/clientsdk/managers/LanguageManager$1;.regionMatches:(ILjava/lang/String;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;

  #L3becec.  v0:= "0" @kind object;
  #L3becf0.  v1:= 0I;
  #L3becf2.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3becf8.  v2:= temp;
  #L3becfa.  v3:= 0I;
  #L3becfc.  v4:= 1I;
  #L3becfe.  if v2 == 0 then goto L3bed0e;
  #L3bed02.  v2:= 12I;
  #L3bed06.  v5:= 2I;
  #L3bed08.  v6:= v0 @kind object;
  #L3bed0a.  v7:= 0I;
  #L3bed0c.  goto L3bed18;
  #L3bed0e.  v5:= 4I;
  #L3bed10.  v2:= 5I;
  #L3bed12.  v6:= "34" @kind object;
  #L3bed16.  v7:= 1I;
  #L3bed18.  if v2 == 0 then goto L3bed2c;
  #L3bed1c.  v7:= v7 + v5 @kind int;
  #L3bed1e.  call temp:= `toCharArray`(v9) @signature `Ljava/lang/String;.toCharArray:()[C` @kind virtual;
  #L3bed24.  v9:= temp @kind object;
  #L3bed26.  v2:= 0I;
  #L3bed28.  v6:= 0I;
  #L3bed2a.  goto L3bed38;
  #L3bed2c.  v2:= v2 + 10;
  #L3bed30.  v9:= v1 @kind object;
  #L3bed32.  v7:= v5;
  #L3bed34.  v0:= v6 @kind object;
  #L3bed36.  v6:= 1I;
  #L3bed38.  call temp:= `parseInt`(v0) @signature `Ljava/lang/Integer;.parseInt:(Ljava/lang/String;)I` @kind static;
  #L3bed3e.  v0:= temp;
  #L3bed40.  if v0 == 0 then goto L3bed4c;
  #L3bed44.  v2:= v2 + 8;
  #L3bed48.  v0:= 1I;
  #L3bed4a.  goto L3bed52;
  #L3bed4c.  v0:= length @variable v9;
  #L3bed4e.  v2:= v2 + 3;
  #L3bed52.  if v2 == 0 then goto L3bed5a;
  #L3bed56.  v5:= v5 ^< v7 @kind int;
  #L3bed58.  goto L3bed5e;
  #L3bed5a.  v9:= v1 @kind object;
  #L3bed5c.  v6:= 1I;
  #L3bed5e.  v5:= v5 + -1;
  #L3bed62.  v2:= v5 ^~ 32;
  #L3bed66.  if v6 == v0 then goto L3bed84;
  #L3bed6a.  v5:= v9[v6] @kind char;
  #L3bed6e.  v7:= v8 ^& v2 @kind int;
  #L3bed72.  v5:= v5 ^~ v7 @kind int;
  #L3bed74.  v8:= v8 + v4 @kind int;
  #L3bed76.  v7:= v6 + 1;
  #L3bed7a.  v5:= (`char`) v5 @kind i2c;
  #L3bed7c.  v9[v6]:= v5 @kind char;
  #L3bed80.  v6:= v7;
  #L3bed82.  goto L3bed66;
  #L3bed84.  call temp:= `valueOf`(v9, v3, v0) @signature `Ljava/lang/String;.valueOf:([CII)Ljava/lang/String;` @kind static;
  #L3bed8a.  v8:= temp @kind object;
  #L3bed8c.  return v8 @kind object;
  #L3bed8e.  return v1 @kind object;
  catch `com.binimoy.clientsdk.managers.LanguageManager$ArrayOutOfBoundsException` @[L3becf2..L3bed8c] goto L3bed8e;
}
