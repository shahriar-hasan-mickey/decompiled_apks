record `com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory` @kind class @AccessFlag PUBLIC_FINAL extends `dagger.internal.Factory` @kind interface {
  `com.dbbl.nexus.pay.injectors.DomainModule` `com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory.a` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory` v0 @kind this, `com.dbbl.nexus.pay.injectors.DomainModule` v1 @kind object) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.<init>:(Lcom/dbbl/nexus/pay/injectors/DomainModule;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L441f84.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L441f8a.  v0.`com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory.a` @type ^`com.dbbl.nexus.pay.injectors.DomainModule` := v1 @kind object;
  #L441f8e.  return @kind void;
}
procedure `com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory` `create`(`com.dbbl.nexus.pay.injectors.DomainModule` v1 @kind object) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.create:(Lcom/dbbl/nexus/pay/injectors/DomainModule;)Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L441f4c.  v0:= new `com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory`;
  #L441f50.  call `<init>`(v0, v1) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.<init>:(Lcom/dbbl/nexus/pay/injectors/DomainModule;)V` @kind direct;
  #L441f56.  return v0 @kind object;
}
procedure `com.dbbl.nexus.pay.dao.TransactionLimitDao` `provideTransactionLimitDataDao`(`com.dbbl.nexus.pay.injectors.DomainModule` v0 @kind object) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.provideTransactionLimitDataDao:(Lcom/dbbl/nexus/pay/injectors/DomainModule;)Lcom/dbbl/nexus/pay/dao/TransactionLimitDao;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L441f24.  call temp:= `provideTransactionLimitDataDao`(v0) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule;.provideTransactionLimitDataDao:()Lcom/dbbl/nexus/pay/dao/TransactionLimitDao;` @kind virtual;
  #L441f2a.  v0:= temp @kind object;
  #L441f2c.  call temp:= `checkNotNullFromProvides`(v0) @signature `Ldagger/internal/Preconditions;.checkNotNullFromProvides:(Ljava/lang/Object;)Ljava/lang/Object;` @kind static;
  #L441f32.  v0:= temp @kind object;
  #L441f34.  v0:= (`com.dbbl.nexus.pay.dao.TransactionLimitDao`) v0 @kind object;
  #L441f38.  return v0 @kind object;
}
procedure `com.dbbl.nexus.pay.dao.TransactionLimitDao` `get`(`com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.get:()Lcom/dbbl/nexus/pay/dao/TransactionLimitDao;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L441f04.  v0:= v1.`com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory.a` @type ^`com.dbbl.nexus.pay.injectors.DomainModule` @kind object;
  #L441f08.  call temp:= `provideTransactionLimitDataDao`(v0) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.provideTransactionLimitDataDao:(Lcom/dbbl/nexus/pay/injectors/DomainModule;)Lcom/dbbl/nexus/pay/dao/TransactionLimitDao;` @kind static;
  #L441f0e.  v0:= temp @kind object;
  #L441f10.  return v0 @kind object;
}
procedure `java.lang.Object` `get`(`com.dbbl.nexus.pay.injectors.DomainModule_ProvideTransactionLimitDataDaoFactory` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.get:()Ljava/lang/Object;` @AccessFlag PUBLIC_SYNTHETIC {
    temp;
    v0;

  #L441f68.  call temp:= `get`(v1) @signature `Lcom/dbbl/nexus/pay/injectors/DomainModule_ProvideTransactionLimitDataDaoFactory;.get:()Lcom/dbbl/nexus/pay/dao/TransactionLimitDao;` @kind virtual;
  #L441f6e.  v0:= temp @kind object;
  #L441f70.  return v0 @kind object;
}
