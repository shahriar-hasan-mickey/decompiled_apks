record `com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` @kind class @AccessFlag PUBLIC extends `com.dbbl.nexus.pay.dao.TransactionLimitDao` @kind interface {
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` v0 @kind this) @signature `Lcom/dbbl/nexus/pay/dao/TransactionLimitDaoImpl;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L41e4e0.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L41e4e6.  return @kind void;
}
procedure `boolean` `deleteAll`(`com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` v2 @kind this) @signature `Lcom/dbbl/nexus/pay/dao/TransactionLimitDaoImpl;.deleteAll:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41e3d8.  v0:= new `com.activeandroid.query.Delete`;
  #L41e3dc.  call `<init>`(v0) @signature `Lcom/activeandroid/query/Delete;.<init>:()V` @kind direct;
  #L41e3e2.  v1:= constclass @type ^`com.dbbl.nexus.pay.dao.models.TransactionLimitModel` @kind object;
  #L41e3e6.  call temp:= `from`(v0, v1) @signature `Lcom/activeandroid/query/Delete;.from:(Ljava/lang/Class;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e3ec.  v0:= temp @kind object;
  #L41e3ee.  call temp:= `execute`(v0) @signature `Lcom/activeandroid/query/From;.execute:()Ljava/util/List;` @kind virtual;
  #L41e3f4.  v0:= "delete from sqlite_sequence where name='TransactionLimits'" @kind object;
  #L41e3f8.  call `execSQL`(v0) @signature `Lcom/activeandroid/ActiveAndroid;.execSQL:(Ljava/lang/String;)V` @kind static;
  #L41e3fe.  v0:= 1I;
  #L41e400.  return v0;
}
procedure `com.dbbl.nexus.pay.data.TransactionLimitData` `getTransactionLimitData`(`com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` v7 @kind this, `java.lang.String` v8 @kind object, `java.lang.String` v9 @kind object, `java.lang.String` v10 @kind object) @signature `Lcom/dbbl/nexus/pay/dao/TransactionLimitDaoImpl;.getTransactionLimitData:(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Lcom/dbbl/nexus/pay/data/TransactionLimitData;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L41e414.  v0:= constclass @type ^`com.dbbl.nexus.pay.dao.models.TransactionLimitModel` @kind object;
  #L41e418.  v1:= 3I;
  #L41e41a.  v2:= new `java.lang.Object`[v1];
  #L41e41e.  v3:= 0I;
  #L41e420.  v2[v3]:= v8 @kind object;
  #L41e424.  v4:= 1I;
  #L41e426.  v2[v4]:= v9 @kind object;
  #L41e42a.  v5:= 2I;
  #L41e42c.  v2[v5]:= v10 @kind object;
  #L41e430.  v6:= "Feature : %s\nSource : %s\nDestination : %s" @kind object;
  #L41e434.  call temp:= `format`(v6, v2) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L41e43a.  v2:= temp @kind object;
  #L41e43c.  v6:= "LIMIT" @kind object;
  #L41e440.  call `debugLog`(v6, v2) @signature `Lcom/konasl/konapayment/sdk/card/KonaLogger;.debugLog:(Ljava/lang/String;Ljava/lang/String;)V` @kind static;
  #L41e446.  if v10 != 0 then goto L41e482;
  #L41e44a.  v10:= new `com.activeandroid.query.Select`;
  #L41e44e.  call `<init>`(v10) @signature `Lcom/activeandroid/query/Select;.<init>:()V` @kind direct;
  #L41e454.  call temp:= `from`(v10, v0) @signature `Lcom/activeandroid/query/Select;.from:(Ljava/lang/Class;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e45a.  v10:= temp @kind object;
  #L41e45c.  v0:= new `java.lang.Object`[v5];
  #L41e460.  v0[v3]:= v8 @kind object;
  #L41e464.  v0[v4]:= v9 @kind object;
  #L41e468.  v8:= "serviceName=? AND sourceAccount=? AND destinationAccount IS NULL" @kind object;
  #L41e46c.  call temp:= `where`(v10, v8, v0) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e472.  v8:= temp @kind object;
  #L41e474.  call temp:= `executeSingle`(v8) @signature `Lcom/activeandroid/query/From;.executeSingle:()Lcom/activeandroid/Model;` @kind virtual;
  #L41e47a.  v8:= temp @kind object;
  #L41e47c.  v8:= (`com.dbbl.nexus.pay.dao.models.TransactionLimitModel`) v8 @kind object;
  #L41e480.  goto L41e4bc;
  #L41e482.  v2:= new `com.activeandroid.query.Select`;
  #L41e486.  call `<init>`(v2) @signature `Lcom/activeandroid/query/Select;.<init>:()V` @kind direct;
  #L41e48c.  call temp:= `from`(v2, v0) @signature `Lcom/activeandroid/query/Select;.from:(Ljava/lang/Class;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e492.  v0:= temp @kind object;
  #L41e494.  v1:= new `java.lang.Object`[v1];
  #L41e498.  v1[v3]:= v8 @kind object;
  #L41e49c.  v1[v4]:= v9 @kind object;
  #L41e4a0.  v1[v5]:= v10 @kind object;
  #L41e4a4.  v8:= "serviceName=? AND sourceAccount=? AND destinationAccount=?" @kind object;
  #L41e4a8.  call temp:= `where`(v0, v8, v1) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e4ae.  v8:= temp @kind object;
  #L41e4b0.  call temp:= `executeSingle`(v8) @signature `Lcom/activeandroid/query/From;.executeSingle:()Lcom/activeandroid/Model;` @kind virtual;
  #L41e4b6.  v8:= temp @kind object;
  #L41e4b8.  v8:= (`com.dbbl.nexus.pay.dao.models.TransactionLimitModel`) v8 @kind object;
  #L41e4bc.  if v8 != 0 then goto L41e4c4;
  #L41e4c0.  v8:= 0I;
  #L41e4c2.  return v8 @kind object;
  #L41e4c4.  call temp:= `getTransactionLimitData`(v8) @signature `Lcom/dbbl/nexus/pay/dao/models/TransactionLimitModel;.getTransactionLimitData:()Lcom/dbbl/nexus/pay/data/TransactionLimitData;` @kind virtual;
  #L41e4ca.  v8:= temp @kind object;
  #L41e4cc.  return v8 @kind object;
}
procedure `void` `setTransactionLimit`(`com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` v1 @kind this, `com.dbbl.nexus.pay.data.TransactionLimitData` v2 @kind object) @signature `Lcom/dbbl/nexus/pay/dao/TransactionLimitDaoImpl;.setTransactionLimit:(Lcom/dbbl/nexus/pay/data/TransactionLimitData;)V` @AccessFlag PUBLIC {
    temp;
    v0;

  #L41e4f8.  v0:= new `com.dbbl.nexus.pay.dao.models.TransactionLimitModel`;
  #L41e4fc.  call `<init>`(v0) @signature `Lcom/dbbl/nexus/pay/dao/models/TransactionLimitModel;.<init>:()V` @kind direct;
  #L41e502.  call `setTransactionModelLimit`(v0, v2) @signature `Lcom/dbbl/nexus/pay/dao/models/TransactionLimitModel;.setTransactionModelLimit:(Lcom/dbbl/nexus/pay/data/TransactionLimitData;)V` @kind virtual;
  #L41e508.  call temp:= `save`(v0) @signature `Lcom/activeandroid/Model;.save:()Ljava/lang/Long;` @kind virtual;
  #L41e50e.  return @kind void;
}
procedure `void` `setTransactionLimitList`(`com.dbbl.nexus.pay.dao.TransactionLimitDaoImpl` v2 @kind this, `java.util.List` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/dao/TransactionLimitDaoImpl;.setTransactionLimitList:(Ljava/util/List;)V` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L41e520.  v0:= new `com.activeandroid.query.Delete`;
  #L41e524.  call `<init>`(v0) @signature `Lcom/activeandroid/query/Delete;.<init>:()V` @kind direct;
  #L41e52a.  v1:= constclass @type ^`com.dbbl.nexus.pay.dao.models.TransactionLimitModel` @kind object;
  #L41e52e.  call temp:= `from`(v0, v1) @signature `Lcom/activeandroid/query/Delete;.from:(Ljava/lang/Class;)Lcom/activeandroid/query/From;` @kind virtual;
  #L41e534.  v0:= temp @kind object;
  #L41e536.  call temp:= `execute`(v0) @signature `Lcom/activeandroid/query/From;.execute:()Ljava/util/List;` @kind virtual;
  #L41e53c.  call temp:= `iterator`(v3) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L41e542.  v3:= temp @kind object;
  #L41e544.  call temp:= `hasNext`(v3) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L41e54a.  v0:= temp;
  #L41e54c.  if v0 == 0 then goto L41e574;
  #L41e550.  call temp:= `next`(v3) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L41e556.  v0:= temp @kind object;
  #L41e558.  v0:= (`com.dbbl.nexus.pay.data.TransactionLimitData`) v0 @kind object;
  #L41e55c.  v1:= new `com.dbbl.nexus.pay.dao.models.TransactionLimitModel`;
  #L41e560.  call `<init>`(v1) @signature `Lcom/dbbl/nexus/pay/dao/models/TransactionLimitModel;.<init>:()V` @kind direct;
  #L41e566.  call `setTransactionModelLimit`(v1, v0) @signature `Lcom/dbbl/nexus/pay/dao/models/TransactionLimitModel;.setTransactionModelLimit:(Lcom/dbbl/nexus/pay/data/TransactionLimitData;)V` @kind virtual;
  #L41e56c.  call temp:= `save`(v1) @signature `Lcom/activeandroid/Model;.save:()Ljava/lang/Long;` @kind virtual;
  #L41e572.  goto L41e544;
  #L41e574.  return @kind void;
}
