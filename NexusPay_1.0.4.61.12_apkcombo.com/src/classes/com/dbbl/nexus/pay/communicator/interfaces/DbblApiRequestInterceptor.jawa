record `com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor` @kind class @AccessFlag PUBLIC extends `okhttp3.Interceptor` @kind interface {
  `java.util.List` `com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @AccessFlag ;
}
global `java.lang.String` `@@com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.b` @AccessFlag PRIVATE_STATIC_FINAL;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L4170d4.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L4170e8.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L4170ee.  v0:= new `java.util.ArrayList`;
  #L4170f2.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L4170f8.  v1.`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @type ^`java.util.List` := v0 @kind object;
  #L4170fc.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor` v1 @kind this, `java.util.List` v2 @kind object) @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.<init>:(Ljava/util/List;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L417110.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L417116.  v0:= new `java.util.ArrayList`;
  #L41711a.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L417120.  v1.`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @type ^`java.util.List` := v0 @kind object;
  #L417124.  v1.`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @type ^`java.util.List` := v2 @kind object;
  #L417128.  return @kind void;
}
procedure `boolean` `a`(`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.a:(Ljava/lang/String;)Z` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L416fc0.  v0:= v2.`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @type ^`java.util.List` @kind object;
  #L416fc4.  if v0 == 0 then goto L417008;
  #L416fc8.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L416fce.  v0:= temp;
  #L416fd0.  if v0 != 0 then goto L417008;
  #L416fd4.  v0:= v2.`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.a` @type ^`java.util.List` @kind object;
  #L416fd8.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L416fde.  v0:= temp @kind object;
  #L416fe0.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L416fe6.  v1:= temp;
  #L416fe8.  if v1 == 0 then goto L417008;
  #L416fec.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L416ff2.  v1:= temp @kind object;
  #L416ff4.  v1:= (`java.lang.String`) v1 @kind object;
  #L416ff8.  call temp:= `contains`(v3, v1) @signature `Ljava/lang/String;.contains:(Ljava/lang/CharSequence;)Z` @kind virtual;
  #L416ffe.  v1:= temp;
  #L417000.  if v1 == 0 then goto L416fe0;
  #L417004.  v3:= 1I;
  #L417006.  return v3;
  #L417008.  v3:= 0I;
  #L41700a.  return v3;
}
procedure `okhttp3.Response` `intercept`(`com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor` v3 @kind this, `okhttp3.Interceptor$Chain` v4 @kind object) @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.intercept:(Lokhttp3/Interceptor$Chain;)Lokhttp3/Response;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L41701c.  v0:= new `java.lang.StringBuilder`;
  #L417020.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L417026.  v1:= "Called interceptor: " @kind object;
  #L41702a.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L417030.  v1:= `@@com.dbbl.nexus.pay.communicator.interfaces.DbblApiRequestInterceptor.b` @type ^`java.lang.String` @kind object;
  #L417034.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L41703a.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L417040.  v0:= temp @kind object;
  #L417042.  call `logMethodName`(v0) @signature `Lcom/konasl/konapayment/sdk/utils/KonaLogger;.logMethodName:(Ljava/lang/String;)V` @kind static;
  #L417048.  call temp:= `request`(v4) @signature `Lokhttp3/Interceptor$Chain;.request:()Lokhttp3/Request;` @kind interface;
  #L41704e.  v0:= temp @kind object;
  #L417050.  call temp:= `url`(v0) @signature `Lokhttp3/Request;.url:()Lokhttp3/HttpUrl;` @kind virtual;
  #L417056.  v1:= temp @kind object;
  #L417058.  call temp:= `toString`(v1) @signature `Lokhttp3/HttpUrl;.toString:()Ljava/lang/String;` @kind virtual;
  #L41705e.  v1:= temp @kind object;
  #L417060.  call temp:= `newBuilder`(v0) @signature `Lokhttp3/Request;.newBuilder:()Lokhttp3/Request$Builder;` @kind virtual;
  #L417066.  v0:= temp @kind object;
  #L417068.  call temp:= `a`(v3, v1) @signature `Lcom/dbbl/nexus/pay/communicator/interfaces/DbblApiRequestInterceptor;.a:(Ljava/lang/String;)Z` @kind direct;
  #L41706e.  v1:= temp;
  #L417070.  if v1 == 0 then goto L4170b2;
  #L417074.  call temp:= `getInstance`() @signature `Lcom/dbbl/nexus/pay/NexusPayApplication;.getInstance:()Lcom/dbbl/nexus/pay/NexusPayApplication;` @kind static;
  #L41707a.  v1:= temp @kind object;
  #L41707c.  call temp:= `getApplicationContext`(v1) @signature `Landroid/app/Application;.getApplicationContext:()Landroid/content/Context;` @kind virtual;
  #L417082.  v1:= temp @kind object;
  #L417084.  call temp:= `getPreferenceManager`(v1) @signature `Lcom/dbbl/nexus/pay/utils/PreferenceManager;.getPreferenceManager:(Landroid/content/Context;)Lcom/dbbl/nexus/pay/utils/PreferenceManager;` @kind static;
  #L41708a.  v1:= temp @kind object;
  #L41708c.  call temp:= `getTransactionApiReadTimeout`(v1) @signature `Lcom/dbbl/nexus/pay/utils/PreferenceManager;.getTransactionApiReadTimeout:()I` @kind virtual;
  #L417092.  v1:= temp;
  #L417094.  v2:= `@@java.util.concurrent.TimeUnit.MILLISECONDS` @type ^`java.util.concurrent.TimeUnit` @kind object;
  #L417098.  call temp:= `withReadTimeout`(v4, v1, v2) @signature `Lokhttp3/Interceptor$Chain;.withReadTimeout:(ILjava/util/concurrent/TimeUnit;)Lokhttp3/Interceptor$Chain;` @kind interface;
  #L41709e.  v4:= temp @kind object;
  #L4170a0.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L4170a6.  v0:= temp @kind object;
  #L4170a8.  call temp:= `proceed`(v4, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L4170ae.  v4:= temp @kind object;
  #L4170b0.  return v4 @kind object;
  #L4170b2.  call temp:= `build`(v0) @signature `Lokhttp3/Request$Builder;.build:()Lokhttp3/Request;` @kind virtual;
  #L4170b8.  v0:= temp @kind object;
  #L4170ba.  call temp:= `proceed`(v4, v0) @signature `Lokhttp3/Interceptor$Chain;.proceed:(Lokhttp3/Request;)Lokhttp3/Response;` @kind interface;
  #L4170c0.  v4:= temp @kind object;
  #L4170c2.  return v4 @kind object;
}
