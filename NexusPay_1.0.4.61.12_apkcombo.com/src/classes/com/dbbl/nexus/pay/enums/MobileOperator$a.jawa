record `com.dbbl.nexus.pay.enums.MobileOperator$a` @kind class @AccessFlag  extends `java.util.Comparator` @kind interface {
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.enums.MobileOperator$a` v0 @kind this) @signature `Lcom/dbbl/nexus/pay/enums/MobileOperator$a;.<init>:()V` @AccessFlag CONSTRUCTOR {
    temp;

  #L43e0d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L43e0da.  return @kind void;
}
procedure `int` `a`(`com.dbbl.nexus.pay.enums.MobileOperator$a` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.String` v2 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/MobileOperator$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @AccessFlag PUBLIC {
    temp;

  #L43e0a8.  call temp:= `toLowerCase`(v1) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L43e0ae.  v1:= temp @kind object;
  #L43e0b0.  call temp:= `toLowerCase`(v2) @signature `Ljava/lang/String;.toLowerCase:()Ljava/lang/String;` @kind virtual;
  #L43e0b6.  v2:= temp @kind object;
  #L43e0b8.  call temp:= `compareTo`(v1, v2) @signature `Ljava/lang/String;.compareTo:(Ljava/lang/String;)I` @kind virtual;
  #L43e0be.  v1:= temp;
  #L43e0c0.  return v1;
}
procedure `int` `compare`(`com.dbbl.nexus.pay.enums.MobileOperator$a` v0 @kind this, `java.lang.Object` v1 @kind object, `java.lang.Object` v2 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/MobileOperator$a;.compare:(Ljava/lang/Object;Ljava/lang/Object;)I` @AccessFlag PUBLIC_SYNTHETIC {
    temp;

  #L43e084.  v1:= (`java.lang.String`) v1 @kind object;
  #L43e088.  v2:= (`java.lang.String`) v2 @kind object;
  #L43e08c.  call temp:= `a`(v0, v1, v2) @signature `Lcom/dbbl/nexus/pay/enums/MobileOperator$a;.a:(Ljava/lang/String;Ljava/lang/String;)I` @kind virtual;
  #L43e092.  v1:= temp;
  #L43e094.  return v1;
}
