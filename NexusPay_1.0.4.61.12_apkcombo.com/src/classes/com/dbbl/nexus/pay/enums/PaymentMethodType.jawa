record `com.dbbl.nexus.pay.enums.PaymentMethodType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.dbbl.nexus.pay.enums.PaymentMethodType.type` @AccessFlag ;
}
global `com.dbbl.nexus.pay.enums.PaymentMethodType`[] `@@com.dbbl.nexus.pay.enums.PaymentMethodType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.dbbl.nexus.pay.enums.PaymentMethodType` `@@com.dbbl.nexus.pay.enums.PaymentMethodType.NFC` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.PaymentMethodType` `@@com.dbbl.nexus.pay.enums.PaymentMethodType.QR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.PaymentMethodType` `@@com.dbbl.nexus.pay.enums.PaymentMethodType.SCAN_QR` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.PaymentMethodType` `@@com.dbbl.nexus.pay.enums.PaymentMethodType.UNKNOWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L43eadc.  v0:= new `com.dbbl.nexus.pay.enums.PaymentMethodType`;
  #L43eae0.  v1:= "SCAN_QR" @kind object;
  #L43eae4.  v2:= 0I;
  #L43eae6.  call `<init>`(v0, v1, v2, v1) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43eaec.  `@@com.dbbl.nexus.pay.enums.PaymentMethodType.SCAN_QR` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` := v0 @kind object;
  #L43eaf0.  v0:= new `com.dbbl.nexus.pay.enums.PaymentMethodType`;
  #L43eaf4.  v1:= "QR" @kind object;
  #L43eaf8.  v3:= 1I;
  #L43eafa.  call `<init>`(v0, v1, v3, v1) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43eb00.  `@@com.dbbl.nexus.pay.enums.PaymentMethodType.QR` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` := v0 @kind object;
  #L43eb04.  v0:= new `com.dbbl.nexus.pay.enums.PaymentMethodType`;
  #L43eb08.  v1:= "NFC" @kind object;
  #L43eb0c.  v4:= 2I;
  #L43eb0e.  call `<init>`(v0, v1, v4, v1) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43eb14.  `@@com.dbbl.nexus.pay.enums.PaymentMethodType.NFC` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` := v0 @kind object;
  #L43eb18.  v0:= new `com.dbbl.nexus.pay.enums.PaymentMethodType`;
  #L43eb1c.  v1:= "UNKNOWN" @kind object;
  #L43eb20.  v5:= 3I;
  #L43eb22.  call `<init>`(v0, v1, v5, v1) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43eb28.  `@@com.dbbl.nexus.pay.enums.PaymentMethodType.UNKNOWN` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` := v0 @kind object;
  #L43eb2c.  v1:= 4I;
  #L43eb2e.  v1:= new `com.dbbl.nexus.pay.enums.PaymentMethodType`[v1];
  #L43eb32.  v6:= `@@com.dbbl.nexus.pay.enums.PaymentMethodType.SCAN_QR` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` @kind object;
  #L43eb36.  v1[v2]:= v6 @kind object;
  #L43eb3a.  v2:= `@@com.dbbl.nexus.pay.enums.PaymentMethodType.QR` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` @kind object;
  #L43eb3e.  v1[v3]:= v2 @kind object;
  #L43eb42.  v2:= `@@com.dbbl.nexus.pay.enums.PaymentMethodType.NFC` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` @kind object;
  #L43eb46.  v1[v4]:= v2 @kind object;
  #L43eb4a.  v1[v5]:= v0 @kind object;
  #L43eb4e.  `@@com.dbbl.nexus.pay.enums.PaymentMethodType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType`[] := v1 @kind object;
  #L43eb52.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.enums.PaymentMethodType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43eb64.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43eb6a.  v0.`com.dbbl.nexus.pay.enums.PaymentMethodType.type` @type ^`java.lang.String` := v3 @kind object;
  #L43eb6e.  return @kind void;
}
procedure `com.dbbl.nexus.pay.enums.PaymentMethodType` `getPaymentMethodType`(`java.lang.String` v5 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.getPaymentMethodType:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/PaymentMethodType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43ea34.  call temp:= `values`() @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.values:()[Lcom/dbbl/nexus/pay/enums/PaymentMethodType;` @kind static;
  #L43ea3a.  v0:= temp @kind object;
  #L43ea3c.  v1:= length @variable v0;
  #L43ea3e.  v2:= 0I;
  #L43ea40.  if v2 >= v1 then goto L43ea64;
  #L43ea44.  v3:= v0[v2] @kind object;
  #L43ea48.  call temp:= `getType`(v3) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.getType:()Ljava/lang/String;` @kind virtual;
  #L43ea4e.  v4:= temp @kind object;
  #L43ea50.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43ea56.  v4:= temp;
  #L43ea58.  if v4 == 0 then goto L43ea5e;
  #L43ea5c.  return v3 @kind object;
  #L43ea5e.  v2:= v2 + 1;
  #L43ea62.  goto L43ea40;
  #L43ea64.  v5:= `@@com.dbbl.nexus.pay.enums.PaymentMethodType.UNKNOWN` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` @kind object;
  #L43ea68.  return v5 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.PaymentMethodType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.valueOf:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/PaymentMethodType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43ea7c.  v0:= constclass @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType` @kind object;
  #L43ea80.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43ea86.  v1:= temp @kind object;
  #L43ea88.  v1:= (`com.dbbl.nexus.pay.enums.PaymentMethodType`) v1 @kind object;
  #L43ea8c.  return v1 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.PaymentMethodType`[] `values`() @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.values:()[Lcom/dbbl/nexus/pay/enums/PaymentMethodType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43eaa0.  v0:= `@@com.dbbl.nexus.pay.enums.PaymentMethodType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.PaymentMethodType`[] @kind object;
  #L43eaa4.  call temp:= `clone`(v0) @signature `[Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43eaaa.  v0:= temp @kind object;
  #L43eaac.  v0:= (`com.dbbl.nexus.pay.enums.PaymentMethodType`[]) v0 @kind object;
  #L43eab0.  return v0 @kind object;
}
procedure `java.lang.String` `getType`(`com.dbbl.nexus.pay.enums.PaymentMethodType` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/enums/PaymentMethodType;.getType:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43eac4.  v0:= v1.`com.dbbl.nexus.pay.enums.PaymentMethodType.type` @type ^`java.lang.String` @kind object;
  #L43eac8.  return v0 @kind object;
}
