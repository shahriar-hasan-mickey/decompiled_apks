record `com.dbbl.nexus.pay.enums.FundTransferAccountType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.dbbl.nexus.pay.enums.FundTransferAccountType.code` @AccessFlag ;
}
global `com.dbbl.nexus.pay.enums.FundTransferAccountType`[] `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.dbbl.nexus.pay.enums.FundTransferAccountType` `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OTHER` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.FundTransferAccountType` `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OTHER_BANK` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.FundTransferAccountType` `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OWN` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43da40.  v0:= new `com.dbbl.nexus.pay.enums.FundTransferAccountType`;
  #L43da44.  v1:= "OWN" @kind object;
  #L43da48.  v2:= 0I;
  #L43da4a.  call `<init>`(v0, v1, v2, v1) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43da50.  `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OWN` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` := v0 @kind object;
  #L43da54.  v0:= new `com.dbbl.nexus.pay.enums.FundTransferAccountType`;
  #L43da58.  v1:= "OTHER" @kind object;
  #L43da5c.  v3:= 1I;
  #L43da5e.  call `<init>`(v0, v1, v3, v1) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43da64.  `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OTHER` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` := v0 @kind object;
  #L43da68.  v0:= new `com.dbbl.nexus.pay.enums.FundTransferAccountType`;
  #L43da6c.  v1:= "OTHER_BANK" @kind object;
  #L43da70.  v4:= 2I;
  #L43da72.  call `<init>`(v0, v1, v4, v1) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43da78.  `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OTHER_BANK` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` := v0 @kind object;
  #L43da7c.  v1:= 3I;
  #L43da7e.  v1:= new `com.dbbl.nexus.pay.enums.FundTransferAccountType`[v1];
  #L43da82.  v5:= `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OWN` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` @kind object;
  #L43da86.  v1[v2]:= v5 @kind object;
  #L43da8a.  v2:= `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.OTHER` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` @kind object;
  #L43da8e.  v1[v3]:= v2 @kind object;
  #L43da92.  v1[v4]:= v0 @kind object;
  #L43da96.  `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType`[] := v1 @kind object;
  #L43da9a.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.enums.FundTransferAccountType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43daac.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43dab2.  v0.`com.dbbl.nexus.pay.enums.FundTransferAccountType.code` @type ^`java.lang.String` := v3 @kind object;
  #L43dab6.  return @kind void;
}
procedure `com.dbbl.nexus.pay.enums.FundTransferAccountType` `getFundTransferAccountType`(`java.lang.String` v5 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.getFundTransferAccountType:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43d99c.  call temp:= `values`() @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.values:()[Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;` @kind static;
  #L43d9a2.  v0:= temp @kind object;
  #L43d9a4.  v1:= length @variable v0;
  #L43d9a6.  v2:= 0I;
  #L43d9a8.  if v2 >= v1 then goto L43d9cc;
  #L43d9ac.  v3:= v0[v2] @kind object;
  #L43d9b0.  call temp:= `getCode`(v3) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.getCode:()Ljava/lang/String;` @kind virtual;
  #L43d9b6.  v4:= temp @kind object;
  #L43d9b8.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43d9be.  v4:= temp;
  #L43d9c0.  if v4 == 0 then goto L43d9c6;
  #L43d9c4.  return v3 @kind object;
  #L43d9c6.  v2:= v2 + 1;
  #L43d9ca.  goto L43d9a8;
  #L43d9cc.  v5:= 0I;
  #L43d9ce.  return v5 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.FundTransferAccountType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.valueOf:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43d9e0.  v0:= constclass @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType` @kind object;
  #L43d9e4.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43d9ea.  v1:= temp @kind object;
  #L43d9ec.  v1:= (`com.dbbl.nexus.pay.enums.FundTransferAccountType`) v1 @kind object;
  #L43d9f0.  return v1 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.FundTransferAccountType`[] `values`() @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.values:()[Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43da04.  v0:= `@@com.dbbl.nexus.pay.enums.FundTransferAccountType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.FundTransferAccountType`[] @kind object;
  #L43da08.  call temp:= `clone`(v0) @signature `[Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43da0e.  v0:= temp @kind object;
  #L43da10.  v0:= (`com.dbbl.nexus.pay.enums.FundTransferAccountType`[]) v0 @kind object;
  #L43da14.  return v0 @kind object;
}
procedure `java.lang.String` `getCode`(`com.dbbl.nexus.pay.enums.FundTransferAccountType` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/enums/FundTransferAccountType;.getCode:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43da28.  v0:= v1.`com.dbbl.nexus.pay.enums.FundTransferAccountType.code` @type ^`java.lang.String` @kind object;
  #L43da2c.  return v0 @kind object;
}
