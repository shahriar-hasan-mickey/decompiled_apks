record `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
  `java.lang.String` `com.dbbl.nexus.pay.enums.PurposeOfTransactionType.code` @AccessFlag ;
}
global `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[] `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.DEPOSIT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.PURCHASE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.WITHDRAWAL` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L43f090.  v0:= new `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`;
  #L43f094.  v1:= "PURCHASE" @kind object;
  #L43f098.  v2:= 0I;
  #L43f09a.  v3:= "00" @kind object;
  #L43f09e.  call `<init>`(v0, v1, v2, v3) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43f0a4.  `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.PURCHASE` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` := v0 @kind object;
  #L43f0a8.  v0:= new `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`;
  #L43f0ac.  v1:= "WITHDRAWAL" @kind object;
  #L43f0b0.  v3:= 1I;
  #L43f0b2.  v4:= "01" @kind object;
  #L43f0b6.  call `<init>`(v0, v1, v3, v4) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43f0bc.  `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.WITHDRAWAL` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` := v0 @kind object;
  #L43f0c0.  v0:= new `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`;
  #L43f0c4.  v1:= "DEPOSIT" @kind object;
  #L43f0c8.  v4:= 2I;
  #L43f0ca.  v5:= "21" @kind object;
  #L43f0ce.  call `<init>`(v0, v1, v4, v5) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @kind direct;
  #L43f0d4.  `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.DEPOSIT` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` := v0 @kind object;
  #L43f0d8.  v1:= 3I;
  #L43f0da.  v1:= new `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[v1];
  #L43f0de.  v5:= `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.PURCHASE` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` @kind object;
  #L43f0e2.  v1[v2]:= v5 @kind object;
  #L43f0e6.  v2:= `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.WITHDRAWAL` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` @kind object;
  #L43f0ea.  v1[v3]:= v2 @kind object;
  #L43f0ee.  v1[v4]:= v0 @kind object;
  #L43f0f2.  `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[] := v1 @kind object;
  #L43f0f6.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 , `java.lang.String` v3 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.<init>:(Ljava/lang/String;ILjava/lang/String;)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L43f108.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L43f10e.  v0.`com.dbbl.nexus.pay.enums.PurposeOfTransactionType.code` @type ^`java.lang.String` := v3 @kind object;
  #L43f112.  return @kind void;
}
procedure `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` `getPurposeOfTransactionType`(`java.lang.String` v5 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.getPurposeOfTransactionType:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L43efec.  call temp:= `values`() @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.values:()[Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;` @kind static;
  #L43eff2.  v0:= temp @kind object;
  #L43eff4.  v1:= length @variable v0;
  #L43eff6.  v2:= 0I;
  #L43eff8.  if v2 >= v1 then goto L43f01c;
  #L43effc.  v3:= v0[v2] @kind object;
  #L43f000.  call temp:= `getCode`(v3) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.getCode:()Ljava/lang/String;` @kind virtual;
  #L43f006.  v4:= temp @kind object;
  #L43f008.  call temp:= `equals`(v4, v5) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L43f00e.  v4:= temp;
  #L43f010.  if v4 == 0 then goto L43f016;
  #L43f014.  return v3 @kind object;
  #L43f016.  v2:= v2 + 1;
  #L43f01a.  goto L43eff8;
  #L43f01c.  v5:= 0I;
  #L43f01e.  return v5 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.PurposeOfTransactionType` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.valueOf:(Ljava/lang/String;)Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f030.  v0:= constclass @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` @kind object;
  #L43f034.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L43f03a.  v1:= temp @kind object;
  #L43f03c.  v1:= (`com.dbbl.nexus.pay.enums.PurposeOfTransactionType`) v1 @kind object;
  #L43f040.  return v1 @kind object;
}
procedure `com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[] `values`() @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.values:()[Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L43f054.  v0:= `@@com.dbbl.nexus.pay.enums.PurposeOfTransactionType.$VALUES` @type ^`com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[] @kind object;
  #L43f058.  call temp:= `clone`(v0) @signature `[Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.clone:()Ljava/lang/Object;` @kind virtual;
  #L43f05e.  v0:= temp @kind object;
  #L43f060.  v0:= (`com.dbbl.nexus.pay.enums.PurposeOfTransactionType`[]) v0 @kind object;
  #L43f064.  return v0 @kind object;
}
procedure `java.lang.String` `getCode`(`com.dbbl.nexus.pay.enums.PurposeOfTransactionType` v1 @kind this) @signature `Lcom/dbbl/nexus/pay/enums/PurposeOfTransactionType;.getCode:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L43f078.  v0:= v1.`com.dbbl.nexus.pay.enums.PurposeOfTransactionType.code` @type ^`java.lang.String` @kind object;
  #L43f07c.  return v0 @kind object;
}
