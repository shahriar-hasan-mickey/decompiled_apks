record `com.dbbl.ekycapp.Base.CipherUtil` @kind class @AccessFlag PUBLIC {
}
global `javax.net.ssl.SSLSocketFactory` `@@com.dbbl.ekycapp.Base.CipherUtil.sslSocketFactory` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/dbbl/ekycapp/Base/CipherUtil;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;

  #L3fd378.  return @kind void;
}
procedure `void` `<init>`(`com.dbbl.ekycapp.Base.CipherUtil` v0 @kind this) @signature `Lcom/dbbl/ekycapp/Base/CipherUtil;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3fd38c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3fd392.  return @kind void;
}
procedure `javax.net.ssl.SSLSocketFactory` `getSslSocketFactory`() @signature `Lcom/dbbl/ekycapp/Base/CipherUtil;.getSslSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L3fd28c.  v0:= `@@com.dbbl.ekycapp.Base.CipherUtil.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3fd290.  if v0 != 0 then goto L3fd342;
  #L3fd294.  v0:= "X.509" @kind object;
  #L3fd298.  call temp:= `getInstance`(v0) @signature `Ljava/security/cert/CertificateFactory;.getInstance:(Ljava/lang/String;)Ljava/security/cert/CertificateFactory;` @kind static;
  #L3fd29e.  v0:= temp @kind object;
  #L3fd2a0.  v1:= new `java.io.ByteArrayInputStream`;
  #L3fd2a4.  v2:= `@@com.dbbl.ekycapp.Base.EkycConstants.CERTIFICATE` @type ^`java.lang.String` @kind object;
  #L3fd2a8.  v3:= "UTF-8" @kind object;
  #L3fd2ac.  call temp:= `forName`(v3) @signature `Ljava/nio/charset/Charset;.forName:(Ljava/lang/String;)Ljava/nio/charset/Charset;` @kind static;
  #L3fd2b2.  v3:= temp @kind object;
  #L3fd2b4.  call temp:= `getBytes`(v2, v3) @signature `Ljava/lang/String;.getBytes:(Ljava/nio/charset/Charset;)[B` @kind virtual;
  #L3fd2ba.  v2:= temp @kind object;
  #L3fd2bc.  call `<init>`(v1, v2) @signature `Ljava/io/ByteArrayInputStream;.<init>:([B)V` @kind direct;
  #L3fd2c2.  call temp:= `generateCertificate`(v0, v1) @signature `Ljava/security/cert/CertificateFactory;.generateCertificate:(Ljava/io/InputStream;)Ljava/security/cert/Certificate;` @kind virtual;
  #L3fd2c8.  v0:= temp @kind object;
  #L3fd2ca.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3fd2d0.  call temp:= `getDefaultType`() @signature `Ljava/security/KeyStore;.getDefaultType:()Ljava/lang/String;` @kind static;
  #L3fd2d6.  v1:= temp @kind object;
  #L3fd2d8.  call temp:= `getInstance`(v1) @signature `Ljava/security/KeyStore;.getInstance:(Ljava/lang/String;)Ljava/security/KeyStore;` @kind static;
  #L3fd2de.  v1:= temp @kind object;
  #L3fd2e0.  v2:= 0I;
  #L3fd2e2.  call `load`(v1, v2, v2) @signature `Ljava/security/KeyStore;.load:(Ljava/io/InputStream;[C)V` @kind virtual;
  #L3fd2e8.  v3:= "ca" @kind object;
  #L3fd2ec.  call `setCertificateEntry`(v1, v3, v0) @signature `Ljava/security/KeyStore;.setCertificateEntry:(Ljava/lang/String;Ljava/security/cert/Certificate;)V` @kind virtual;
  #L3fd2f2.  call temp:= `getDefaultAlgorithm`() @signature `Ljavax/net/ssl/TrustManagerFactory;.getDefaultAlgorithm:()Ljava/lang/String;` @kind static;
  #L3fd2f8.  v0:= temp @kind object;
  #L3fd2fa.  call temp:= `getInstance`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/TrustManagerFactory;` @kind static;
  #L3fd300.  v0:= temp @kind object;
  #L3fd302.  call `init`(v0, v1) @signature `Ljavax/net/ssl/TrustManagerFactory;.init:(Ljava/security/KeyStore;)V` @kind virtual;
  #L3fd308.  v1:= "TLSv1.2" @kind object;
  #L3fd30c.  call temp:= `getInstance`(v1) @signature `Ljavax/net/ssl/SSLContext;.getInstance:(Ljava/lang/String;)Ljavax/net/ssl/SSLContext;` @kind static;
  #L3fd312.  v1:= temp @kind object;
  #L3fd314.  call temp:= `getTrustManagers`(v0) @signature `Ljavax/net/ssl/TrustManagerFactory;.getTrustManagers:()[Ljavax/net/ssl/TrustManager;` @kind virtual;
  #L3fd31a.  v0:= temp @kind object;
  #L3fd31c.  call `init`(v1, v2, v0, v2) @signature `Ljavax/net/ssl/SSLContext;.init:([Ljavax/net/ssl/KeyManager;[Ljavax/net/ssl/TrustManager;Ljava/security/SecureRandom;)V` @kind virtual;
  #L3fd322.  call temp:= `getSocketFactory`(v1) @signature `Ljavax/net/ssl/SSLContext;.getSocketFactory:()Ljavax/net/ssl/SSLSocketFactory;` @kind virtual;
  #L3fd328.  v0:= temp @kind object;
  #L3fd32a.  `@@com.dbbl.ekycapp.Base.CipherUtil.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` := v0 @kind object;
  #L3fd32e.  goto L3fd342;
  #L3fd330.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fd332.  call `close`(v1) @signature `Ljava/io/InputStream;.close:()V` @kind virtual;
  #L3fd338.  throw v0;
  #L3fd33a.  v0:= Exception @type ^`java.lang.Throwable` @kind object;
  #L3fd33c.  call `printStackTrace`(v0) @signature `Ljava/lang/Throwable;.printStackTrace:()V` @kind virtual;
  #L3fd342.  v0:= `@@com.dbbl.ekycapp.Base.CipherUtil.sslSocketFactory` @type ^`javax.net.ssl.SSLSocketFactory` @kind object;
  #L3fd346.  return v0 @kind object;
  catch `java.lang.Throwable` @[L3fd294..L3fd2c2] goto L3fd33a;
  catch `java.lang.Throwable` @[L3fd2c2..L3fd2ca] goto L3fd330;
  catch `java.lang.Throwable` @[L3fd2ca..L3fd33a] goto L3fd33a;
}
