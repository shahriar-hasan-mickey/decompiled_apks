record `com.activeandroid.TableInfo` @kind class @AccessFlag PUBLIC_FINAL {
  `java.util.Map` `com.activeandroid.TableInfo.mColumnNames` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.TableInfo.mIdName` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.TableInfo.mTableName` @AccessFlag PRIVATE;
  `java.lang.Class` `com.activeandroid.TableInfo.mType` @AccessFlag PRIVATE;
}
procedure `void` `<init>`(`com.activeandroid.TableInfo` v3 @kind this, `java.lang.Class` v4 @kind object) @signature `Lcom/activeandroid/TableInfo;.<init>:(Ljava/lang/Class;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;

  #L38113c.  call `<init>`(v3) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L381142.  v0:= "Id" @kind object;
  #L381146.  v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` := v0 @kind object;
  #L38114a.  v0:= new `java.util.LinkedHashMap`;
  #L38114e.  call `<init>`(v0) @signature `Ljava/util/LinkedHashMap;.<init>:()V` @kind direct;
  #L381154.  v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` := v0 @kind object;
  #L381158.  v3.`com.activeandroid.TableInfo.mType` @type ^`java.lang.Class` := v4 @kind object;
  #L38115c.  v0:= constclass @type ^`com.activeandroid.annotation.Table` @kind object;
  #L381160.  call temp:= `getAnnotation`(v4, v0) @signature `Ljava/lang/Class;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L381166.  v0:= temp @kind object;
  #L381168.  v0:= (`com.activeandroid.annotation.Table`) v0 @kind object;
  #L38116c.  if v0 == 0 then goto L38118a;
  #L381170.  call temp:= `name`(v0) @signature `Lcom/activeandroid/annotation/Table;.name:()Ljava/lang/String;` @kind interface;
  #L381176.  v1:= temp @kind object;
  #L381178.  v3.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` := v1 @kind object;
  #L38117c.  call temp:= `id`(v0) @signature `Lcom/activeandroid/annotation/Table;.id:()Ljava/lang/String;` @kind interface;
  #L381182.  v0:= temp @kind object;
  #L381184.  v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` := v0 @kind object;
  #L381188.  goto L381196;
  #L38118a.  call temp:= `getSimpleName`(v4) @signature `Ljava/lang/Class;.getSimpleName:()Ljava/lang/String;` @kind virtual;
  #L381190.  v0:= temp @kind object;
  #L381192.  v3.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` := v0 @kind object;
  #L381196.  call temp:= `getIdField`(v3, v4) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @kind direct;
  #L38119c.  v0:= temp @kind object;
  #L38119e.  v1:= v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L3811a2.  v2:= v3.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` @kind object;
  #L3811a6.  call temp:= `put`(v1, v0, v2) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L3811ac.  v0:= new `java.util.LinkedList`;
  #L3811b0.  call temp:= `getDeclaredColumnFields`(v4) @signature `Lcom/activeandroid/util/ReflectionUtils;.getDeclaredColumnFields:(Ljava/lang/Class;)Ljava/util/Set;` @kind static;
  #L3811b6.  v4:= temp @kind object;
  #L3811b8.  call `<init>`(v0, v4) @signature `Ljava/util/LinkedList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L3811be.  call `reverse`(v0) @signature `Ljava/util/Collections;.reverse:(Ljava/util/List;)V` @kind static;
  #L3811c4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3811ca.  v4:= temp @kind object;
  #L3811cc.  call temp:= `hasNext`(v4) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3811d2.  v0:= temp;
  #L3811d4.  if v0 == 0 then goto L38122c;
  #L3811d8.  call temp:= `next`(v4) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3811de.  v0:= temp @kind object;
  #L3811e0.  v0:= (`java.lang.reflect.Field`) v0 @kind object;
  #L3811e4.  v1:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L3811e8.  call temp:= `isAnnotationPresent`(v0, v1) @signature `Ljava/lang/reflect/Field;.isAnnotationPresent:(Ljava/lang/Class;)Z` @kind virtual;
  #L3811ee.  v1:= temp;
  #L3811f0.  if v1 == 0 then goto L3811cc;
  #L3811f4.  v1:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L3811f8.  call temp:= `getAnnotation`(v0, v1) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3811fe.  v1:= temp @kind object;
  #L381200.  v1:= (`com.activeandroid.annotation.Column`) v1 @kind object;
  #L381204.  call temp:= `name`(v1) @signature `Lcom/activeandroid/annotation/Column;.name:()Ljava/lang/String;` @kind interface;
  #L38120a.  v1:= temp @kind object;
  #L38120c.  call temp:= `isEmpty`(v1) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L381212.  v2:= temp;
  #L381214.  if v2 == 0 then goto L381220;
  #L381218.  call temp:= `getName`(v0) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L38121e.  v1:= temp @kind object;
  #L381220.  v2:= v3.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L381224.  call temp:= `put`(v2, v0, v1) @signature `Ljava/util/Map;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38122a.  goto L3811cc;
  #L38122c.  return @kind void;
}
procedure `java.lang.reflect.Field` `getIdField`(`com.activeandroid.TableInfo` v1 @kind this, `java.lang.Class` v2 @kind object) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3810a4.  v0:= constclass @type ^`com.activeandroid.Model` @kind object;
  #L3810a8.  call temp:= `equals`(v2, v0) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L3810ae.  v0:= temp;
  #L3810b0.  if v0 == 0 then goto L3810d8;
  #L3810b4.  v0:= "mId" @kind object;
  #L3810b8.  call temp:= `getDeclaredField`(v2, v0) @signature `Ljava/lang/Class;.getDeclaredField:(Ljava/lang/String;)Ljava/lang/reflect/Field;` @kind virtual;
  #L3810be.  v2:= temp @kind object;
  #L3810c0.  return v2 @kind object;
  #L3810c2.  v2:= Exception @type ^`java.lang.NoSuchFieldException` @kind object;
  #L3810c4.  call temp:= `toString`(v2) @signature `Ljava/lang/NoSuchFieldException;.toString:()Ljava/lang/String;` @kind virtual;
  #L3810ca.  v2:= temp @kind object;
  #L3810cc.  v0:= "Impossible!" @kind object;
  #L3810d0.  call temp:= `e`(v0, v2) @signature `Landroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/String;)I` @kind static;
  #L3810d6.  goto L3810f6;
  #L3810d8.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3810de.  v0:= temp @kind object;
  #L3810e0.  if v0 == 0 then goto L3810f6;
  #L3810e4.  call temp:= `getSuperclass`(v2) @signature `Ljava/lang/Class;.getSuperclass:()Ljava/lang/Class;` @kind virtual;
  #L3810ea.  v2:= temp @kind object;
  #L3810ec.  call temp:= `getIdField`(v1, v2) @signature `Lcom/activeandroid/TableInfo;.getIdField:(Ljava/lang/Class;)Ljava/lang/reflect/Field;` @kind direct;
  #L3810f2.  v2:= temp @kind object;
  #L3810f4.  return v2 @kind object;
  #L3810f6.  v2:= 0I;
  #L3810f8.  return v2 @kind object;
  catch `java.lang.NoSuchFieldException` @[L3810b4..L3810c0] goto L3810c2;
}
procedure `java.lang.String` `getColumnName`(`com.activeandroid.TableInfo` v1 @kind this, `java.lang.reflect.Field` v2 @kind object) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L381050.  v0:= v1.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L381054.  call temp:= `get`(v0, v2) @signature `Ljava/util/Map;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind interface;
  #L38105a.  v2:= temp @kind object;
  #L38105c.  v2:= (`java.lang.String`) v2 @kind object;
  #L381060.  return v2 @kind object;
}
procedure `java.util.Collection` `getFields`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38111c.  v0:= v1.`com.activeandroid.TableInfo.mColumnNames` @type ^`java.util.Map` @kind object;
  #L381120.  call temp:= `keySet`(v0) @signature `Ljava/util/Map;.keySet:()Ljava/util/Set;` @kind interface;
  #L381126.  v0:= temp @kind object;
  #L381128.  return v0 @kind object;
}
procedure `java.lang.String` `getIdName`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L381074.  v0:= v1.`com.activeandroid.TableInfo.mIdName` @type ^`java.lang.String` @kind object;
  #L381078.  return v0 @kind object;
}
procedure `java.lang.String` `getTableName`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L38108c.  v0:= v1.`com.activeandroid.TableInfo.mTableName` @type ^`java.lang.String` @kind object;
  #L381090.  return v0 @kind object;
}
procedure `java.lang.Class` `getType`(`com.activeandroid.TableInfo` v1 @kind this) @signature `Lcom/activeandroid/TableInfo;.getType:()Ljava/lang/Class;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L381038.  v0:= v1.`com.activeandroid.TableInfo.mType` @type ^`java.lang.Class` @kind object;
  #L38103c.  return v0 @kind object;
}
