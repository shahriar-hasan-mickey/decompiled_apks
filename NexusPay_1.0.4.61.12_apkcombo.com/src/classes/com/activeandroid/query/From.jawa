record `com.activeandroid.query.From` @kind class @AccessFlag PUBLIC_FINAL extends `com.activeandroid.query.Sqlable` @kind interface {
  `java.lang.String` `com.activeandroid.query.From.mAlias` @AccessFlag PRIVATE;
  `java.util.List` `com.activeandroid.query.From.mArguments` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mGroupBy` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mHaving` @AccessFlag PRIVATE;
  `java.util.List` `com.activeandroid.query.From.mJoins` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mLimit` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mOffset` @AccessFlag PRIVATE;
  `java.lang.String` `com.activeandroid.query.From.mOrderBy` @AccessFlag PRIVATE;
  `com.activeandroid.query.Sqlable` `com.activeandroid.query.From.mQueryBase` @AccessFlag PRIVATE;
  `java.lang.Class` `com.activeandroid.query.From.mType` @AccessFlag PRIVATE;
  `java.lang.StringBuilder` `com.activeandroid.query.From.mWhere` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.activeandroid.query.From` v1 @kind this, `java.lang.Class` v2 @kind object, `com.activeandroid.query.Sqlable` v3 @kind object) @signature `Lcom/activeandroid/query/From;.<init>:(Ljava/lang/Class;Lcom/activeandroid/query/Sqlable;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;
    v0;

  #L381f28.  call `<init>`(v1) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L381f2e.  v0:= new `java.lang.StringBuilder`;
  #L381f32.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381f38.  v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` := v0 @kind object;
  #L381f3c.  v1.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` := v2 @kind object;
  #L381f40.  v2:= new `java.util.ArrayList`;
  #L381f44.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L381f4a.  v1.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` := v2 @kind object;
  #L381f4e.  v1.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` := v3 @kind object;
  #L381f52.  v2:= new `java.util.ArrayList`;
  #L381f56.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L381f5c.  v1.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` := v2 @kind object;
  #L381f60.  v2:= new `java.util.ArrayList`;
  #L381f64.  call `<init>`(v2) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L381f6a.  v1.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` := v2 @kind object;
  #L381f6e.  return @kind void;
}
procedure `void` `addFrom`(`com.activeandroid.query.From` v2 @kind this, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L381fe4.  v0:= "FROM " @kind object;
  #L381fe8.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381fee.  v0:= v2.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L381ff2.  call temp:= `getTableName`(v0) @signature `Lcom/activeandroid/Cache;.getTableName:(Ljava/lang/Class;)Ljava/lang/String;` @kind static;
  #L381ff8.  v0:= temp @kind object;
  #L381ffa.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382000.  v0:= " " @kind object;
  #L382004.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38200a.  v1:= v2.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` @kind object;
  #L38200e.  if v1 == 0 then goto L38202c;
  #L382012.  v1:= "AS " @kind object;
  #L382016.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38201c.  v1:= v2.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` @kind object;
  #L382020.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382026.  call temp:= `append`(v3, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38202c.  return @kind void;
}
procedure `void` `addGroupBy`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L382040.  v0:= v1.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` @kind object;
  #L382044.  if v0 == 0 then goto L382066;
  #L382048.  v0:= "GROUP BY " @kind object;
  #L38204c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382052.  v0:= v1.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` @kind object;
  #L382056.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38205c.  v0:= " " @kind object;
  #L382060.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382066.  return @kind void;
}
procedure `void` `addHaving`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L382078.  v0:= v1.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` @kind object;
  #L38207c.  if v0 == 0 then goto L38209e;
  #L382080.  v0:= "HAVING " @kind object;
  #L382084.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38208a.  v0:= v1.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` @kind object;
  #L38208e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382094.  v0:= " " @kind object;
  #L382098.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38209e.  return @kind void;
}
procedure `void` `addJoins`(`com.activeandroid.query.From` v2 @kind this, `java.lang.StringBuilder` v3 @kind object) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;

  #L3820b0.  v0:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L3820b4.  call temp:= `iterator`(v0) @signature `Ljava/util/List;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L3820ba.  v0:= temp @kind object;
  #L3820bc.  call temp:= `hasNext`(v0) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L3820c2.  v1:= temp;
  #L3820c4.  if v1 == 0 then goto L3820e4;
  #L3820c8.  call temp:= `next`(v0) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L3820ce.  v1:= temp @kind object;
  #L3820d0.  v1:= (`com.activeandroid.query.Join`) v1 @kind object;
  #L3820d4.  call temp:= `toSql`(v1) @signature `Lcom/activeandroid/query/Join;.toSql:()Ljava/lang/String;` @kind virtual;
  #L3820da.  v1:= temp @kind object;
  #L3820dc.  call temp:= `append`(v3, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3820e2.  goto L3820bc;
  #L3820e4.  return @kind void;
}
procedure `void` `addLimit`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3820f8.  v0:= v1.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` @kind object;
  #L3820fc.  if v0 == 0 then goto L38211e;
  #L382100.  v0:= "LIMIT " @kind object;
  #L382104.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38210a.  v0:= v1.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` @kind object;
  #L38210e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382114.  v0:= " " @kind object;
  #L382118.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38211e.  return @kind void;
}
procedure `void` `addOffset`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L382130.  v0:= v1.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` @kind object;
  #L382134.  if v0 == 0 then goto L382156;
  #L382138.  v0:= "OFFSET " @kind object;
  #L38213c.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382142.  v0:= v1.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` @kind object;
  #L382146.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38214c.  v0:= " " @kind object;
  #L382150.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382156.  return @kind void;
}
procedure `void` `addOrderBy`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addOrderBy:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L382168.  v0:= v1.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` @kind object;
  #L38216c.  if v0 == 0 then goto L38218e;
  #L382170.  v0:= "ORDER BY " @kind object;
  #L382174.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38217a.  v0:= v1.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` @kind object;
  #L38217e.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L382184.  v0:= " " @kind object;
  #L382188.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38218e.  return @kind void;
}
procedure `void` `addWhere`(`com.activeandroid.query.From` v1 @kind this, `java.lang.StringBuilder` v2 @kind object) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @AccessFlag PRIVATE {
    temp;
    v0;

  #L3821a0.  v0:= v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L3821a4.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L3821aa.  v0:= temp;
  #L3821ac.  if v0 <= 0 then goto L3821ce;
  #L3821b0.  v0:= "WHERE " @kind object;
  #L3821b4.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3821ba.  v0:= v1.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L3821be.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/CharSequence;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3821c4.  v0:= " " @kind object;
  #L3821c8.  call temp:= `append`(v2, v0) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3821ce.  return @kind void;
}
procedure `java.lang.String` `sqlString`(`com.activeandroid.query.From` v3 @kind this, `java.lang.StringBuilder` v4 @kind object) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @AccessFlag PRIVATE {
    temp;
    v0;
    v1;
    v2;

  #L381cd4.  call temp:= `toString`(v4) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L381cda.  v4:= temp @kind object;
  #L381cdc.  call temp:= `trim`(v4) @signature `Ljava/lang/String;.trim:()Ljava/lang/String;` @kind virtual;
  #L381ce2.  v4:= temp @kind object;
  #L381ce4.  call temp:= `isEnabled`() @signature `Lcom/activeandroid/util/Log;.isEnabled:()Z` @kind static;
  #L381cea.  v0:= temp;
  #L381cec.  if v0 == 0 then goto L381d32;
  #L381cf0.  v0:= new `java.lang.StringBuilder`;
  #L381cf4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381cfa.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381d00.  v1:= " " @kind object;
  #L381d04.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381d0a.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L381d10.  v1:= temp @kind object;
  #L381d12.  v2:= "," @kind object;
  #L381d16.  call temp:= `join`(v2, v1) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L381d1c.  v1:= temp @kind object;
  #L381d1e.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381d24.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L381d2a.  v0:= temp @kind object;
  #L381d2c.  call temp:= `v`(v0) @signature `Lcom/activeandroid/util/Log;.v:(Ljava/lang/String;)I` @kind static;
  #L381d32.  return v4 @kind object;
}
procedure `void` `addArguments`(`com.activeandroid.query.From` v5 @kind this, `java.lang.Object`[] v6 @kind object) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @AccessFlag  {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L381f80.  v0:= length @variable v6;
  #L381f82.  v1:= 0I;
  #L381f84.  if v1 >= v0 then goto L381fd0;
  #L381f88.  v2:= v6[v1] @kind object;
  #L381f8c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L381f92.  v3:= temp @kind object;
  #L381f94.  v4:= `@@java.lang.Boolean.TYPE` @type ^`java.lang.Class` @kind object;
  #L381f98.  if v3 == v4 then goto L381fac;
  #L381f9c.  call temp:= `getClass`(v2) @signature `Ljava/lang/Object;.getClass:()Ljava/lang/Class;` @kind virtual;
  #L381fa2.  v3:= temp @kind object;
  #L381fa4.  v4:= constclass @type ^`java.lang.Boolean` @kind object;
  #L381fa8.  if v3 != v4 then goto L381fc0;
  #L381fac.  v3:= `@@java.lang.Boolean.TRUE` @type ^`java.lang.Boolean` @kind object;
  #L381fb0.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/Object;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L381fb6.  v2:= temp;
  #L381fb8.  call temp:= `valueOf`(v2) @signature `Ljava/lang/Integer;.valueOf:(I)Ljava/lang/Integer;` @kind static;
  #L381fbe.  v2:= temp @kind object;
  #L381fc0.  v3:= v5.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L381fc4.  call temp:= `add`(v3, v2) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381fca.  v1:= v1 + 1;
  #L381fce.  goto L381f84;
  #L381fd0.  return @kind void;
}
procedure `com.activeandroid.query.From` `and`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.and:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a08.  call temp:= `where`(v0, v1) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381a0e.  v1:= temp @kind object;
  #L381a10.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `and`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.and:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a24.  call temp:= `where`(v0, v1, v2) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381a2a.  v1:= temp @kind object;
  #L381a2c.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `as`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.as:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a40.  v0.`com.activeandroid.query.From.mAlias` @type ^`java.lang.String` := v1 @kind object;
  #L381a44.  return v0 @kind object;
}
procedure `int` `count`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.count:()I` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381ca8.  call temp:= `toCountSql`(v2) @signature `Lcom/activeandroid/query/From;.toCountSql:()Ljava/lang/String;` @kind virtual;
  #L381cae.  v0:= temp @kind object;
  #L381cb0.  call temp:= `getArguments`(v2) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L381cb6.  v1:= temp @kind object;
  #L381cb8.  call temp:= `intQuery`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @kind static;
  #L381cbe.  v0:= temp;
  #L381cc0.  return v0;
}
procedure `com.activeandroid.query.Join` `crossJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.crossJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381bd0.  v0:= new `com.activeandroid.query.Join`;
  #L381bd4.  v1:= `@@com.activeandroid.query.Join$JoinType.CROSS` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L381bd8.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L381bde.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L381be2.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381be8.  return v0 @kind object;
}
procedure `java.util.List` `execute`(`com.activeandroid.query.From` v3 @kind this) @signature `Lcom/activeandroid/query/From;.execute:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L381eb0.  v0:= v3.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L381eb4.  v0:= instanceof @variable v0 @type ^`com.activeandroid.query.Select` @kind boolean;
  #L381eb8.  if v0 == 0 then goto L381eda;
  #L381ebc.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L381ec0.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L381ec6.  v1:= temp @kind object;
  #L381ec8.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L381ece.  v2:= temp @kind object;
  #L381ed0.  call temp:= `rawQuery`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L381ed6.  v0:= temp @kind object;
  #L381ed8.  return v0 @kind object;
  #L381eda.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L381ee0.  v0:= temp @kind object;
  #L381ee2.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L381ee8.  v1:= temp @kind object;
  #L381eea.  call `execSql`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind static;
  #L381ef0.  call temp:= `getContext`() @signature `Lcom/activeandroid/Cache;.getContext:()Landroid/content/Context;` @kind static;
  #L381ef6.  v0:= temp @kind object;
  #L381ef8.  call temp:= `getContentResolver`(v0) @signature `Landroid/content/Context;.getContentResolver:()Landroid/content/ContentResolver;` @kind virtual;
  #L381efe.  v0:= temp @kind object;
  #L381f00.  v1:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L381f04.  v2:= 0I;
  #L381f06.  call temp:= `createUri`(v1, v2) @signature `Lcom/activeandroid/content/ContentProvider;.createUri:(Ljava/lang/Class;Ljava/lang/Long;)Landroid/net/Uri;` @kind static;
  #L381f0c.  v1:= temp @kind object;
  #L381f0e.  call `notifyChange`(v0, v1, v2) @signature `Landroid/content/ContentResolver;.notifyChange:(Landroid/net/Uri;Landroid/database/ContentObserver;)V` @kind virtual;
  #L381f14.  return v2 @kind object;
}
procedure `com.activeandroid.Model` `executeSingle`(`com.activeandroid.query.From` v3 @kind this) @signature `Lcom/activeandroid/query/From;.executeSingle:()Lcom/activeandroid/Model;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L381998.  v0:= v3.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L38199c.  v0:= instanceof @variable v0 @type ^`com.activeandroid.query.Select` @kind boolean;
  #L3819a0.  v1:= 1I;
  #L3819a2.  if v0 == 0 then goto L3819ca;
  #L3819a6.  call temp:= `limit`(v3, v1) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @kind virtual;
  #L3819ac.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L3819b0.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L3819b6.  v1:= temp @kind object;
  #L3819b8.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L3819be.  v2:= temp @kind object;
  #L3819c0.  call temp:= `rawQuerySingle`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @kind static;
  #L3819c6.  v0:= temp @kind object;
  #L3819c8.  return v0 @kind object;
  #L3819ca.  call temp:= `limit`(v3, v1) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @kind virtual;
  #L3819d0.  v0:= v3.`com.activeandroid.query.From.mType` @type ^`java.lang.Class` @kind object;
  #L3819d4.  call temp:= `toSql`(v3) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @kind virtual;
  #L3819da.  v1:= temp @kind object;
  #L3819dc.  call temp:= `getArguments`(v3) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L3819e2.  v2:= temp @kind object;
  #L3819e4.  call temp:= `rawQuerySingle`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @kind static;
  #L3819ea.  v0:= temp @kind object;
  #L3819ec.  call `delete`(v0) @signature `Lcom/activeandroid/Model;.delete:()V` @kind virtual;
  #L3819f2.  v0:= 0I;
  #L3819f4.  return v0 @kind object;
}
procedure `boolean` `exists`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.exists:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381964.  call temp:= `toExistsSql`(v2) @signature `Lcom/activeandroid/query/From;.toExistsSql:()Ljava/lang/String;` @kind virtual;
  #L38196a.  v0:= temp @kind object;
  #L38196c.  call temp:= `getArguments`(v2) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @kind virtual;
  #L381972.  v1:= temp @kind object;
  #L381974.  call temp:= `intQuery`(v0, v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @kind static;
  #L38197a.  v0:= temp;
  #L38197c.  if v0 == 0 then goto L381984;
  #L381980.  v0:= 1I;
  #L381982.  goto L381986;
  #L381984.  v0:= 0I;
  #L381986.  return v0;
}
procedure `java.lang.String`[] `getArguments`(`com.activeandroid.query.From` v4 @kind this) @signature `Lcom/activeandroid/query/From;.getArguments:()[Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L381e68.  v0:= v4.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L381e6c.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L381e72.  v0:= temp;
  #L381e74.  v1:= new `java.lang.String`[v0];
  #L381e78.  v2:= 0I;
  #L381e7a.  if v2 >= v0 then goto L381e9c;
  #L381e7e.  v3:= v4.`com.activeandroid.query.From.mArguments` @type ^`java.util.List` @kind object;
  #L381e82.  call temp:= `get`(v3, v2) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L381e88.  v3:= temp @kind object;
  #L381e8a.  call temp:= `toString`(v3) @signature `Ljava/lang/Object;.toString:()Ljava/lang/String;` @kind virtual;
  #L381e90.  v3:= temp @kind object;
  #L381e92.  v1[v2]:= v3 @kind object;
  #L381e96.  v2:= v2 + 1;
  #L381e9a.  goto L381e7a;
  #L381e9c.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `groupBy`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.groupBy:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a58.  v0.`com.activeandroid.query.From.mGroupBy` @type ^`java.lang.String` := v1 @kind object;
  #L381a5c.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `having`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.having:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a70.  v0.`com.activeandroid.query.From.mHaving` @type ^`java.lang.String` := v1 @kind object;
  #L381a74.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `innerJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.innerJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381bfc.  v0:= new `com.activeandroid.query.Join`;
  #L381c00.  v1:= `@@com.activeandroid.query.Join$JoinType.INNER` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L381c04.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L381c0a.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L381c0e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381c14.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `join`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.join:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381c28.  v0:= new `com.activeandroid.query.Join`;
  #L381c2c.  v1:= 0I;
  #L381c2e.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L381c34.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L381c38.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381c3e.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `leftJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.leftJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381c50.  v0:= new `com.activeandroid.query.Join`;
  #L381c54.  v1:= `@@com.activeandroid.query.Join$JoinType.LEFT` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L381c58.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L381c5e.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L381c62.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381c68.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `limit`(`com.activeandroid.query.From` v0 @kind this, `int` v1 ) @signature `Lcom/activeandroid/query/From;.limit:(I)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381a88.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L381a8e.  v1:= temp @kind object;
  #L381a90.  call temp:= `limit`(v0, v1) @signature `Lcom/activeandroid/query/From;.limit:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381a96.  v1:= temp @kind object;
  #L381a98.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `limit`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.limit:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381aac.  v0.`com.activeandroid.query.From.mLimit` @type ^`java.lang.String` := v1 @kind object;
  #L381ab0.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `offset`(`com.activeandroid.query.From` v0 @kind this, `int` v1 ) @signature `Lcom/activeandroid/query/From;.offset:(I)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381ac4.  call temp:= `valueOf`(v1) @signature `Ljava/lang/String;.valueOf:(I)Ljava/lang/String;` @kind static;
  #L381aca.  v1:= temp @kind object;
  #L381acc.  call temp:= `offset`(v0, v1) @signature `Lcom/activeandroid/query/From;.offset:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381ad2.  v1:= temp @kind object;
  #L381ad4.  return v1 @kind object;
}
procedure `com.activeandroid.query.From` `offset`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.offset:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381ae8.  v0.`com.activeandroid.query.From.mOffset` @type ^`java.lang.String` := v1 @kind object;
  #L381aec.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `or`(`com.activeandroid.query.From` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381b00.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b04.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L381b0a.  v0:= temp;
  #L381b0c.  if v0 <= 0 then goto L381b1e;
  #L381b10.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b14.  v1:= " OR " @kind object;
  #L381b18.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381b1e.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b22.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381b28.  return v2 @kind object;
}
procedure `com.activeandroid.query.From` `or`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381b3c.  call temp:= `or`(v0, v1) @signature `Lcom/activeandroid/query/From;.or:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381b42.  v1:= temp @kind object;
  #L381b44.  call `addArguments`(v1, v2) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @kind virtual;
  #L381b4a.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `orderBy`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/query/From;.orderBy:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381b5c.  v0.`com.activeandroid.query.From.mOrderBy` @type ^`java.lang.String` := v1 @kind object;
  #L381b60.  return v0 @kind object;
}
procedure `com.activeandroid.query.Join` `outerJoin`(`com.activeandroid.query.From` v2 @kind this, `java.lang.Class` v3 @kind object) @signature `Lcom/activeandroid/query/From;.outerJoin:(Ljava/lang/Class;)Lcom/activeandroid/query/Join;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381c7c.  v0:= new `com.activeandroid.query.Join`;
  #L381c80.  v1:= `@@com.activeandroid.query.Join$JoinType.OUTER` @type ^`com.activeandroid.query.Join$JoinType` @kind object;
  #L381c84.  call `<init>`(v0, v2, v3, v1) @signature `Lcom/activeandroid/query/Join;.<init>:(Lcom/activeandroid/query/From;Ljava/lang/Class;Lcom/activeandroid/query/Join$JoinType;)V` @kind direct;
  #L381c8a.  v3:= v2.`com.activeandroid.query.From.mJoins` @type ^`java.util.List` @kind object;
  #L381c8e.  call temp:= `add`(v3, v0) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L381c94.  return v0 @kind object;
}
procedure `java.lang.String` `toCountSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toCountSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381d44.  v0:= new `java.lang.StringBuilder`;
  #L381d48.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381d4e.  v1:= "SELECT COUNT(*) " @kind object;
  #L381d52.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381d58.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d5e.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d64.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d6a.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d70.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d76.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d7c.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381d82.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L381d88.  v0:= temp @kind object;
  #L381d8a.  return v0 @kind object;
}
procedure `java.lang.String` `toExistsSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toExistsSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381d9c.  v0:= new `java.lang.StringBuilder`;
  #L381da0.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381da6.  v1:= "SELECT EXISTS(SELECT 1 " @kind object;
  #L381daa.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381db0.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381db6.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dbc.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dc2.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dc8.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dce.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dd4.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381dda.  v1:= ")" @kind object;
  #L381dde.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381de4.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L381dea.  v0:= temp @kind object;
  #L381dec.  return v0 @kind object;
}
procedure `java.lang.String` `toSql`(`com.activeandroid.query.From` v2 @kind this) @signature `Lcom/activeandroid/query/From;.toSql:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381e00.  v0:= new `java.lang.StringBuilder`;
  #L381e04.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L381e0a.  v1:= v2.`com.activeandroid.query.From.mQueryBase` @type ^`com.activeandroid.query.Sqlable` @kind object;
  #L381e0e.  call temp:= `toSql`(v1) @signature `Lcom/activeandroid/query/Sqlable;.toSql:()Ljava/lang/String;` @kind interface;
  #L381e14.  v1:= temp @kind object;
  #L381e16.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381e1c.  call `addFrom`(v2, v0) @signature `Lcom/activeandroid/query/From;.addFrom:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e22.  call `addJoins`(v2, v0) @signature `Lcom/activeandroid/query/From;.addJoins:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e28.  call `addWhere`(v2, v0) @signature `Lcom/activeandroid/query/From;.addWhere:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e2e.  call `addGroupBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addGroupBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e34.  call `addHaving`(v2, v0) @signature `Lcom/activeandroid/query/From;.addHaving:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e3a.  call `addOrderBy`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOrderBy:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e40.  call `addLimit`(v2, v0) @signature `Lcom/activeandroid/query/From;.addLimit:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e46.  call `addOffset`(v2, v0) @signature `Lcom/activeandroid/query/From;.addOffset:(Ljava/lang/StringBuilder;)V` @kind direct;
  #L381e4c.  call temp:= `sqlString`(v2, v0) @signature `Lcom/activeandroid/query/From;.sqlString:(Ljava/lang/StringBuilder;)Ljava/lang/String;` @kind direct;
  #L381e52.  v0:= temp @kind object;
  #L381e54.  return v0 @kind object;
}
procedure `com.activeandroid.query.From` `where`(`com.activeandroid.query.From` v2 @kind this, `java.lang.String` v3 @kind object) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L381b74.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b78.  call temp:= `length`(v0) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L381b7e.  v0:= temp;
  #L381b80.  if v0 <= 0 then goto L381b92;
  #L381b84.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b88.  v1:= " AND " @kind object;
  #L381b8c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381b92.  v0:= v2.`com.activeandroid.query.From.mWhere` @type ^`java.lang.StringBuilder` @kind object;
  #L381b96.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L381b9c.  return v2 @kind object;
}
procedure `com.activeandroid.query.From` `where`(`com.activeandroid.query.From` v0 @kind this, `java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;[Ljava/lang/Object;)Lcom/activeandroid/query/From;` @AccessFlag PUBLIC {
    temp;

  #L381bb0.  call temp:= `where`(v0, v1) @signature `Lcom/activeandroid/query/From;.where:(Ljava/lang/String;)Lcom/activeandroid/query/From;` @kind virtual;
  #L381bb6.  v1:= temp @kind object;
  #L381bb8.  call `addArguments`(v1, v2) @signature `Lcom/activeandroid/query/From;.addArguments:([Ljava/lang/Object;)V` @kind virtual;
  #L381bbe.  return v0 @kind object;
}
