record `com.activeandroid.util.Tokenizer` @kind class @AccessFlag PUBLIC {
  `int` `com.activeandroid.util.Tokenizer.mCurrent` @AccessFlag PRIVATE;
  `boolean` `com.activeandroid.util.Tokenizer.mIsNext` @AccessFlag PRIVATE;
  `java.io.InputStream` `com.activeandroid.util.Tokenizer.mStream` @AccessFlag PRIVATE_FINAL;
}
procedure `void` `<init>`(`com.activeandroid.util.Tokenizer` v0 @kind this, `java.io.InputStream` v1 @kind object) @signature `Lcom/activeandroid/util/Tokenizer;.<init>:(Ljava/io/InputStream;)V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L3845d4.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3845da.  v0.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` := v1 @kind object;
  #L3845de.  return @kind void;
}
procedure `boolean` `hasNext`(`com.activeandroid.util.Tokenizer` v3 @kind this) @signature `Lcom/activeandroid/util/Tokenizer;.hasNext:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L3844dc.  v0:= v3.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` @kind boolean;
  #L3844e0.  v1:= 1I;
  #L3844e2.  if v0 != 0 then goto L3844fa;
  #L3844e6.  v3.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` := v1 @kind boolean;
  #L3844ea.  v0:= v3.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L3844ee.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3844f4.  v0:= temp;
  #L3844f6.  v3.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int` := v0;
  #L3844fa.  v0:= v3.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L3844fe.  v2:= -1I;
  #L384500.  if v0 == v2 then goto L384506;
  #L384504.  goto L384508;
  #L384506.  v1:= 0I;
  #L384508.  return v1;
}
procedure `int` `next`(`com.activeandroid.util.Tokenizer` v1 @kind this) @signature `Lcom/activeandroid/util/Tokenizer;.next:()I` @AccessFlag PUBLIC {
    temp;
    v0;

  #L3845a0.  v0:= v1.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` @kind boolean;
  #L3845a4.  if v0 != 0 then goto L3845b8;
  #L3845a8.  v0:= v1.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L3845ac.  call temp:= `read`(v0) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L3845b2.  v0:= temp;
  #L3845b4.  v1.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int` := v0;
  #L3845b8.  v0:= 0I;
  #L3845ba.  v1.`com.activeandroid.util.Tokenizer.mIsNext` @type ^`boolean` := v0 @kind boolean;
  #L3845be.  v0:= v1.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L3845c2.  return v0;
}
procedure `boolean` `skip`(`com.activeandroid.util.Tokenizer` v6 @kind this, `java.lang.String` v7 @kind object) @signature `Lcom/activeandroid/util/Tokenizer;.skip:(Ljava/lang/String;)Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L38451c.  v0:= 0I;
  #L38451e.  if v7 == 0 then goto L38458c;
  #L384522.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L384528.  v1:= temp;
  #L38452a.  if v1 != 0 then goto L384530;
  #L38452e.  goto L38458c;
  #L384530.  call temp:= `charAt`(v7, v0) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L384536.  v1:= temp;
  #L384538.  v2:= v6.`com.activeandroid.util.Tokenizer.mCurrent` @type ^`int`;
  #L38453c.  if v1 == v2 then goto L384542;
  #L384540.  return v0;
  #L384542.  call temp:= `length`(v7) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L384548.  v1:= temp;
  #L38454a.  v2:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L38454e.  v3:= v1 + -1;
  #L384552.  call `mark`(v2, v3) @signature `Ljava/io/InputStream;.mark:(I)V` @kind virtual;
  #L384558.  v2:= 1I;
  #L38455a.  v3:= 1I;
  #L38455c.  if v3 >= v1 then goto L38458a;
  #L384560.  v4:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L384564.  call temp:= `read`(v4) @signature `Ljava/io/InputStream;.read:()I` @kind virtual;
  #L38456a.  v4:= temp;
  #L38456c.  call temp:= `charAt`(v7, v3) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L384572.  v5:= temp;
  #L384574.  if v4 == v5 then goto L384584;
  #L384578.  v7:= v6.`com.activeandroid.util.Tokenizer.mStream` @type ^`java.io.InputStream` @kind object;
  #L38457c.  call `reset`(v7) @signature `Ljava/io/InputStream;.reset:()V` @kind virtual;
  #L384582.  return v0;
  #L384584.  v3:= v3 + 1;
  #L384588.  goto L38455c;
  #L38458a.  return v2;
  #L38458c.  return v0;
}
