record `com.activeandroid.util.SQLiteUtils` @kind class @AccessFlag PUBLIC_FINAL {
}
global `boolean` `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @AccessFlag PUBLIC_STATIC_FINAL;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @AccessFlag PRIVATE_STATIC_FINAL;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @AccessFlag PRIVATE_STATIC;
global `java.util.HashMap` `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @AccessFlag PRIVATE_STATIC;
procedure `void` `<clinit>`() @signature `Lcom/activeandroid/util/SQLiteUtils;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;

  #L3840cc.  v0:= `@@android.os.Build$VERSION.SDK_INT` @type ^`int`;
  #L3840d0.  v1:= 8I;
  #L3840d4.  if v0 < v1 then goto L3840dc;
  #L3840d8.  v0:= 1I;
  #L3840da.  goto L3840de;
  #L3840dc.  v0:= 0I;
  #L3840de.  `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @type ^`boolean` := v0 @kind boolean;
  #L3840e2.  v0:= new `com.activeandroid.util.SQLiteUtils$1`;
  #L3840e6.  call `<init>`(v0) @signature `Lcom/activeandroid/util/SQLiteUtils$1;.<init>:()V` @kind direct;
  #L3840ec.  `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` := v0 @kind object;
  #L3840f0.  return @kind void;
}
procedure `void` `<init>`(`com.activeandroid.util.SQLiteUtils` v0 @kind this) @signature `Lcom/activeandroid/util/SQLiteUtils;.<init>:()V` @AccessFlag PUBLIC_CONSTRUCTOR {
    temp;

  #L384104.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L38410a.  return @kind void;
}
procedure `java.lang.String` `createColumnDefinition`(`com.activeandroid.TableInfo` v7 @kind object, `java.lang.reflect.Field` v8 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L383924.  v0:= new `java.lang.StringBuilder`;
  #L383928.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L38392e.  call temp:= `getType`(v8) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L383934.  v1:= temp @kind object;
  #L383936.  call temp:= `getColumnName`(v7, v8) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L38393c.  v2:= temp @kind object;
  #L38393e.  call temp:= `getType`(v8) @signature `Ljava/lang/reflect/Field;.getType:()Ljava/lang/Class;` @kind virtual;
  #L383944.  v3:= temp @kind object;
  #L383946.  call temp:= `getParserForType`(v3) @signature `Lcom/activeandroid/Cache;.getParserForType:(Ljava/lang/Class;)Lcom/activeandroid/serializer/TypeSerializer;` @kind static;
  #L38394c.  v3:= temp @kind object;
  #L38394e.  v4:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L383952.  call temp:= `getAnnotation`(v8, v4) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L383958.  v8:= temp @kind object;
  #L38395a.  v8:= (`com.activeandroid.annotation.Column`) v8 @kind object;
  #L38395e.  if v3 == 0 then goto L38396a;
  #L383962.  call temp:= `getSerializedType`(v3) @signature `Lcom/activeandroid/serializer/TypeSerializer;.getSerializedType:()Ljava/lang/Class;` @kind virtual;
  #L383968.  v1:= temp @kind object;
  #L38396a.  v3:= `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` @kind object;
  #L38396e.  call temp:= `containsKey`(v3, v1) @signature `Ljava/util/HashMap;.containsKey:(Ljava/lang/Object;)Z` @kind virtual;
  #L383974.  v3:= temp;
  #L383976.  v4:= " " @kind object;
  #L38397a.  if v3 == 0 then goto L3839aa;
  #L38397e.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383984.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38398a.  v3:= `@@com.activeandroid.util.SQLiteUtils.TYPE_MAP` @type ^`java.util.HashMap` @kind object;
  #L38398e.  call temp:= `get`(v3, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383994.  v3:= temp @kind object;
  #L383996.  v3:= (`com.activeandroid.util.SQLiteUtils$SQLiteType`) v3 @kind object;
  #L38399a.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L3839a0.  v3:= temp @kind object;
  #L3839a2.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839a8.  goto L383a04;
  #L3839aa.  call temp:= `isModel`(v1) @signature `Lcom/activeandroid/util/ReflectionUtils;.isModel:(Ljava/lang/Class;)Z` @kind static;
  #L3839b0.  v3:= temp;
  #L3839b2.  if v3 == 0 then goto L3839d6;
  #L3839b6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839bc.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839c2.  v3:= `@@com.activeandroid.util.SQLiteUtils$SQLiteType.INTEGER` @type ^`com.activeandroid.util.SQLiteUtils$SQLiteType` @kind object;
  #L3839c6.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L3839cc.  v3:= temp @kind object;
  #L3839ce.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839d4.  goto L383a04;
  #L3839d6.  v3:= constclass @type ^`java.lang.Enum` @kind object;
  #L3839da.  call temp:= `isSubclassOf`(v1, v3) @signature `Lcom/activeandroid/util/ReflectionUtils;.isSubclassOf:(Ljava/lang/Class;Ljava/lang/Class;)Z` @kind static;
  #L3839e0.  v3:= temp;
  #L3839e2.  if v3 == 0 then goto L383a04;
  #L3839e6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839ec.  call temp:= `append`(v0, v4) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3839f2.  v3:= `@@com.activeandroid.util.SQLiteUtils$SQLiteType.TEXT` @type ^`com.activeandroid.util.SQLiteUtils$SQLiteType` @kind object;
  #L3839f6.  call temp:= `toString`(v3) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L3839fc.  v3:= temp @kind object;
  #L3839fe.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a04.  call temp:= `isEmpty`(v0) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L383a0a.  v3:= temp;
  #L383a0c.  if v3 != 0 then goto L383b78;
  #L383a10.  call temp:= `getIdName`(v7) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L383a16.  v3:= temp @kind object;
  #L383a18.  call temp:= `equals`(v2, v3) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L383a1e.  v2:= temp;
  #L383a20.  v3:= ")" @kind object;
  #L383a24.  v5:= "(" @kind object;
  #L383a28.  if v2 == 0 then goto L383a38;
  #L383a2c.  v2:= " PRIMARY KEY AUTOINCREMENT" @kind object;
  #L383a30.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a36.  goto L383abc;
  #L383a38.  if v8 == 0 then goto L383abc;
  #L383a3c.  call temp:= `length`(v8) @signature `Lcom/activeandroid/annotation/Column;.length:()I` @kind interface;
  #L383a42.  v2:= temp;
  #L383a44.  v6:= -1I;
  #L383a46.  if v2 <= v6 then goto L383a64;
  #L383a4a.  call temp:= `append`(v0, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a50.  call temp:= `length`(v8) @signature `Lcom/activeandroid/annotation/Column;.length:()I` @kind interface;
  #L383a56.  v2:= temp;
  #L383a58.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a5e.  call temp:= `append`(v0, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a64.  call temp:= `notNull`(v8) @signature `Lcom/activeandroid/annotation/Column;.notNull:()Z` @kind interface;
  #L383a6a.  v2:= temp;
  #L383a6c.  if v2 == 0 then goto L383a90;
  #L383a70.  v2:= " NOT NULL ON CONFLICT " @kind object;
  #L383a74.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a7a.  call temp:= `onNullConflict`(v8) @signature `Lcom/activeandroid/annotation/Column;.onNullConflict:()Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L383a80.  v2:= temp @kind object;
  #L383a82.  call temp:= `toString`(v2) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L383a88.  v2:= temp @kind object;
  #L383a8a.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383a90.  call temp:= `unique`(v8) @signature `Lcom/activeandroid/annotation/Column;.unique:()Z` @kind interface;
  #L383a96.  v2:= temp;
  #L383a98.  if v2 == 0 then goto L383abc;
  #L383a9c.  v2:= " UNIQUE ON CONFLICT " @kind object;
  #L383aa0.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383aa6.  call temp:= `onUniqueConflict`(v8) @signature `Lcom/activeandroid/annotation/Column;.onUniqueConflict:()Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L383aac.  v2:= temp @kind object;
  #L383aae.  call temp:= `toString`(v2) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L383ab4.  v2:= temp @kind object;
  #L383ab6.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383abc.  v2:= `@@com.activeandroid.util.SQLiteUtils.FOREIGN_KEYS_SUPPORTED` @type ^`boolean` @kind boolean;
  #L383ac0.  if v2 == 0 then goto L383ba8;
  #L383ac4.  call temp:= `isModel`(v1) @signature `Lcom/activeandroid/util/ReflectionUtils;.isModel:(Ljava/lang/Class;)Z` @kind static;
  #L383aca.  v2:= temp;
  #L383acc.  if v2 == 0 then goto L383ba8;
  #L383ad0.  v2:= " REFERENCES " @kind object;
  #L383ad4.  call temp:= `append`(v0, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383ada.  call temp:= `getTableInfo`(v1) @signature `Lcom/activeandroid/Cache;.getTableInfo:(Ljava/lang/Class;)Lcom/activeandroid/TableInfo;` @kind static;
  #L383ae0.  v1:= temp @kind object;
  #L383ae2.  call temp:= `getTableName`(v1) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L383ae8.  v1:= temp @kind object;
  #L383aea.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383af0.  v1:= new `java.lang.StringBuilder`;
  #L383af4.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L383afa.  call temp:= `append`(v1, v5) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b00.  call temp:= `getIdName`(v7) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L383b06.  v7:= temp @kind object;
  #L383b08.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b0e.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b14.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383b1a.  v7:= temp @kind object;
  #L383b1c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b22.  v7:= " ON DELETE " @kind object;
  #L383b26.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b2c.  call temp:= `onDelete`(v8) @signature `Lcom/activeandroid/annotation/Column;.onDelete:()Lcom/activeandroid/annotation/Column$ForeignKeyAction;` @kind interface;
  #L383b32.  v7:= temp @kind object;
  #L383b34.  call temp:= `toString`(v7) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L383b3a.  v7:= temp @kind object;
  #L383b3c.  v1:= "_" @kind object;
  #L383b40.  call temp:= `replace`(v7, v1, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L383b46.  v7:= temp @kind object;
  #L383b48.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b4e.  v7:= " ON UPDATE " @kind object;
  #L383b52.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b58.  call temp:= `onUpdate`(v8) @signature `Lcom/activeandroid/annotation/Column;.onUpdate:()Lcom/activeandroid/annotation/Column$ForeignKeyAction;` @kind interface;
  #L383b5e.  v7:= temp @kind object;
  #L383b60.  call temp:= `toString`(v7) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L383b66.  v7:= temp @kind object;
  #L383b68.  call temp:= `replace`(v7, v1, v4) @signature `Ljava/lang/String;.replace:(Ljava/lang/CharSequence;Ljava/lang/CharSequence;)Ljava/lang/String;` @kind virtual;
  #L383b6e.  v7:= temp @kind object;
  #L383b70.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b76.  goto L383ba8;
  #L383b78.  v7:= new `java.lang.StringBuilder`;
  #L383b7c.  call `<init>`(v7) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L383b82.  v8:= "No type mapping for: " @kind object;
  #L383b86.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b8c.  call temp:= `toString`(v1) @signature `Ljava/lang/Class;.toString:()Ljava/lang/String;` @kind virtual;
  #L383b92.  v8:= temp @kind object;
  #L383b94.  call temp:= `append`(v7, v8) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383b9a.  call temp:= `toString`(v7) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383ba0.  v7:= temp @kind object;
  #L383ba2.  call temp:= `e`(v7) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;)I` @kind static;
  #L383ba8.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383bae.  v7:= temp @kind object;
  #L383bb0.  return v7 @kind object;
}
procedure `void` `createIndexColumnDefinition`(`com.activeandroid.TableInfo` v5 @kind object, `java.lang.reflect.Field` v6 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L38411c.  call temp:= `getColumnName`(v5, v6) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L384122.  v5:= temp @kind object;
  #L384124.  v0:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L384128.  call temp:= `getAnnotation`(v6, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L38412e.  v0:= temp @kind object;
  #L384130.  v0:= (`com.activeandroid.annotation.Column`) v0 @kind object;
  #L384134.  call temp:= `getName`(v6) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L38413a.  v6:= temp @kind object;
  #L38413c.  v1:= "mId" @kind object;
  #L384140.  call temp:= `equals`(v6, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L384146.  v6:= temp;
  #L384148.  if v6 == 0 then goto L38414e;
  #L38414c.  return @kind void;
  #L38414e.  call temp:= `index`(v0) @signature `Lcom/activeandroid/annotation/Column;.index:()Z` @kind interface;
  #L384154.  v6:= temp;
  #L384156.  if v6 == 0 then goto L384174;
  #L38415a.  v6:= new `java.util.ArrayList`;
  #L38415e.  call `<init>`(v6) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L384164.  call temp:= `add`(v6, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38416a.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L38416e.  call temp:= `put`(v1, v5, v6) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L384174.  call temp:= `indexGroups`(v0) @signature `Lcom/activeandroid/annotation/Column;.indexGroups:()[Ljava/lang/String;` @kind interface;
  #L38417a.  v6:= temp @kind object;
  #L38417c.  v0:= length @variable v6;
  #L38417e.  v1:= 0I;
  #L384180.  if v1 >= v0 then goto L3841ca;
  #L384184.  v2:= v6[v1] @kind object;
  #L384188.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L38418e.  v3:= temp;
  #L384190.  if v3 == 0 then goto L384196;
  #L384194.  goto L3841c4;
  #L384196.  v3:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L38419a.  call temp:= `get`(v3, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3841a0.  v3:= temp @kind object;
  #L3841a2.  v3:= (`java.util.List`) v3 @kind object;
  #L3841a6.  if v3 != 0 then goto L3841b4;
  #L3841aa.  v3:= new `java.util.ArrayList`;
  #L3841ae.  call `<init>`(v3) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L3841b4.  call temp:= `add`(v3, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L3841ba.  v4:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L3841be.  call temp:= `put`(v4, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L3841c4.  v1:= v1 + 1;
  #L3841c8.  goto L384180;
  #L3841ca.  return @kind void;
}
procedure `java.lang.String`[] `createIndexDefinition`(`com.activeandroid.TableInfo` v7 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexDefinition:(Lcom/activeandroid/TableInfo;)[Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L383c64.  v0:= new `java.util.ArrayList`;
  #L383c68.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L383c6e.  v1:= new `java.util.HashMap`;
  #L383c72.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L383c78.  `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L383c7c.  call temp:= `getFields`(v7) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L383c82.  v1:= temp @kind object;
  #L383c84.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L383c8a.  v1:= temp @kind object;
  #L383c8c.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L383c92.  v2:= temp;
  #L383c94.  if v2 == 0 then goto L383cac;
  #L383c98.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L383c9e.  v2:= temp @kind object;
  #L383ca0.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L383ca4.  call `createIndexColumnDefinition`(v7, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createIndexColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @kind static;
  #L383caa.  goto L383c8c;
  #L383cac.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L383cb0.  call temp:= `isEmpty`(v1) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L383cb6.  v1:= temp;
  #L383cb8.  v2:= 0I;
  #L383cba.  if v1 == 0 then goto L383cc4;
  #L383cbe.  v7:= new `java.lang.String`[v2];
  #L383cc2.  return v7 @kind object;
  #L383cc4.  v1:= `@@com.activeandroid.util.SQLiteUtils.sIndexGroupMap` @type ^`java.util.HashMap` @kind object;
  #L383cc8.  call temp:= `entrySet`(v1) @signature `Ljava/util/HashMap;.entrySet:()Ljava/util/Set;` @kind virtual;
  #L383cce.  v1:= temp @kind object;
  #L383cd0.  call temp:= `iterator`(v1) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L383cd6.  v1:= temp @kind object;
  #L383cd8.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L383cde.  v3:= temp;
  #L383ce0.  if v3 == 0 then goto L383d80;
  #L383ce4.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L383cea.  v3:= temp @kind object;
  #L383cec.  v3:= (`java.util.Map$Entry`) v3 @kind object;
  #L383cf0.  v4:= 3I;
  #L383cf2.  v4:= new `java.lang.Object`[v4];
  #L383cf6.  v5:= new `java.lang.StringBuilder`;
  #L383cfa.  call `<init>`(v5) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L383d00.  v6:= "index_" @kind object;
  #L383d04.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383d0a.  call temp:= `getTableName`(v7) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L383d10.  v6:= temp @kind object;
  #L383d12.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383d18.  v6:= "_" @kind object;
  #L383d1c.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383d22.  call temp:= `getKey`(v3) @signature `Ljava/util/Map$Entry;.getKey:()Ljava/lang/Object;` @kind interface;
  #L383d28.  v6:= temp @kind object;
  #L383d2a.  v6:= (`java.lang.String`) v6 @kind object;
  #L383d2e.  call temp:= `append`(v5, v6) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L383d34.  call temp:= `toString`(v5) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383d3a.  v5:= temp @kind object;
  #L383d3c.  v4[v2]:= v5 @kind object;
  #L383d40.  v5:= 1I;
  #L383d42.  call temp:= `getTableName`(v7) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L383d48.  v6:= temp @kind object;
  #L383d4a.  v4[v5]:= v6 @kind object;
  #L383d4e.  v5:= 2I;
  #L383d50.  call temp:= `getValue`(v3) @signature `Ljava/util/Map$Entry;.getValue:()Ljava/lang/Object;` @kind interface;
  #L383d56.  v3:= temp @kind object;
  #L383d58.  v3:= (`java.lang.Iterable`) v3 @kind object;
  #L383d5c.  v6:= ", " @kind object;
  #L383d60.  call temp:= `join`(v6, v3) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L383d66.  v3:= temp @kind object;
  #L383d68.  v4[v5]:= v3 @kind object;
  #L383d6c.  v3:= "CREATE INDEX IF NOT EXISTS %s on %s(%s);" @kind object;
  #L383d70.  call temp:= `format`(v3, v4) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L383d76.  v3:= temp @kind object;
  #L383d78.  call temp:= `add`(v0, v3) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L383d7e.  goto L383cd8;
  #L383d80.  call temp:= `size`(v0) @signature `Ljava/util/ArrayList;.size:()I` @kind virtual;
  #L383d86.  v7:= temp;
  #L383d88.  v7:= new `java.lang.String`[v7];
  #L383d8c.  call temp:= `toArray`(v0, v7) @signature `Ljava/util/ArrayList;.toArray:([Ljava/lang/Object;)[Ljava/lang/Object;` @kind virtual;
  #L383d92.  v7:= temp @kind object;
  #L383d94.  v7:= (`java.lang.String`[]) v7 @kind object;
  #L383d98.  return v7 @kind object;
}
procedure `java.lang.String` `createTableDefinition`(`com.activeandroid.TableInfo` v4 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createTableDefinition:(Lcom/activeandroid/TableInfo;)Ljava/lang/String;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;

  #L383bc4.  v0:= new `java.util.ArrayList`;
  #L383bc8.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L383bce.  call temp:= `getFields`(v4) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L383bd4.  v1:= temp @kind object;
  #L383bd6.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L383bdc.  v1:= temp @kind object;
  #L383bde.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L383be4.  v2:= temp;
  #L383be6.  if v2 == 0 then goto L383c12;
  #L383bea.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L383bf0.  v2:= temp @kind object;
  #L383bf2.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L383bf6.  call temp:= `createColumnDefinition`(v4, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind static;
  #L383bfc.  v2:= temp @kind object;
  #L383bfe.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L383c04.  v3:= temp;
  #L383c06.  if v3 != 0 then goto L383bde;
  #L383c0a.  call temp:= `add`(v0, v2) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L383c10.  goto L383bde;
  #L383c12.  call temp:= `createUniqueDefinition`(v4) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueDefinition:(Lcom/activeandroid/TableInfo;)Ljava/util/ArrayList;` @kind static;
  #L383c18.  v1:= temp @kind object;
  #L383c1a.  call temp:= `addAll`(v0, v1) @signature `Ljava/util/ArrayList;.addAll:(Ljava/util/Collection;)Z` @kind virtual;
  #L383c20.  v1:= 2I;
  #L383c22.  v1:= new `java.lang.Object`[v1];
  #L383c26.  v2:= 0I;
  #L383c28.  call temp:= `getTableName`(v4) @signature `Lcom/activeandroid/TableInfo;.getTableName:()Ljava/lang/String;` @kind virtual;
  #L383c2e.  v4:= temp @kind object;
  #L383c30.  v1[v2]:= v4 @kind object;
  #L383c34.  v4:= 1I;
  #L383c36.  v2:= ", " @kind object;
  #L383c3a.  call temp:= `join`(v2, v0) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L383c40.  v0:= temp @kind object;
  #L383c42.  v1[v4]:= v0 @kind object;
  #L383c46.  v4:= "CREATE TABLE IF NOT EXISTS %s (%s);" @kind object;
  #L383c4a.  call temp:= `format`(v4, v1) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L383c50.  v4:= temp @kind object;
  #L383c52.  return v4 @kind object;
}
procedure `void` `createUniqueColumnDefinition`(`com.activeandroid.TableInfo` v6 @kind object, `java.lang.reflect.Field` v7 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L3841dc.  call temp:= `getColumnName`(v6, v7) @signature `Lcom/activeandroid/TableInfo;.getColumnName:(Ljava/lang/reflect/Field;)Ljava/lang/String;` @kind virtual;
  #L3841e2.  v6:= temp @kind object;
  #L3841e4.  v0:= constclass @type ^`com.activeandroid.annotation.Column` @kind object;
  #L3841e8.  call temp:= `getAnnotation`(v7, v0) @signature `Ljava/lang/reflect/Field;.getAnnotation:(Ljava/lang/Class;)Ljava/lang/annotation/Annotation;` @kind virtual;
  #L3841ee.  v0:= temp @kind object;
  #L3841f0.  v0:= (`com.activeandroid.annotation.Column`) v0 @kind object;
  #L3841f4.  call temp:= `getName`(v7) @signature `Ljava/lang/reflect/Field;.getName:()Ljava/lang/String;` @kind virtual;
  #L3841fa.  v7:= temp @kind object;
  #L3841fc.  v1:= "mId" @kind object;
  #L384200.  call temp:= `equals`(v7, v1) @signature `Ljava/lang/String;.equals:(Ljava/lang/Object;)Z` @kind virtual;
  #L384206.  v7:= temp;
  #L384208.  if v7 == 0 then goto L38420e;
  #L38420c.  return @kind void;
  #L38420e.  call temp:= `uniqueGroups`(v0) @signature `Lcom/activeandroid/annotation/Column;.uniqueGroups:()[Ljava/lang/String;` @kind interface;
  #L384214.  v7:= temp @kind object;
  #L384216.  call temp:= `onUniqueConflicts`(v0) @signature `Lcom/activeandroid/annotation/Column;.onUniqueConflicts:()[Lcom/activeandroid/annotation/Column$ConflictAction;` @kind interface;
  #L38421c.  v0:= temp @kind object;
  #L38421e.  v1:= length @variable v7;
  #L384220.  v2:= length @variable v0;
  #L384222.  if v1 == v2 then goto L384228;
  #L384226.  return @kind void;
  #L384228.  v1:= 0I;
  #L38422a.  v2:= length @variable v7;
  #L38422c.  if v1 >= v2 then goto L384284;
  #L384230.  v2:= v7[v1] @kind object;
  #L384234.  v3:= v0[v1] @kind object;
  #L384238.  call temp:= `isEmpty`(v2) @signature `Landroid/text/TextUtils;.isEmpty:(Ljava/lang/CharSequence;)Z` @kind static;
  #L38423e.  v4:= temp;
  #L384240.  if v4 == 0 then goto L384246;
  #L384244.  goto L38427e;
  #L384246.  v4:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L38424a.  call temp:= `get`(v4, v2) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L384250.  v4:= temp @kind object;
  #L384252.  v4:= (`java.util.List`) v4 @kind object;
  #L384256.  if v4 != 0 then goto L384264;
  #L38425a.  v4:= new `java.util.ArrayList`;
  #L38425e.  call `<init>`(v4) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L384264.  call temp:= `add`(v4, v6) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L38426a.  v5:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L38426e.  call temp:= `put`(v5, v2, v4) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L384274.  v4:= `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` @kind object;
  #L384278.  call temp:= `put`(v4, v2, v3) @signature `Ljava/util/HashMap;.put:(Ljava/lang/Object;Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L38427e.  v1:= v1 + 1;
  #L384282.  goto L38422a;
  #L384284.  return @kind void;
}
procedure `java.util.ArrayList` `createUniqueDefinition`(`com.activeandroid.TableInfo` v6 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueDefinition:(Lcom/activeandroid/TableInfo;)Ljava/util/ArrayList;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;

  #L383dac.  v0:= new `java.util.ArrayList`;
  #L383db0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L383db6.  v1:= new `java.util.HashMap`;
  #L383dba.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L383dc0.  `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L383dc4.  v1:= new `java.util.HashMap`;
  #L383dc8.  call `<init>`(v1) @signature `Ljava/util/HashMap;.<init>:()V` @kind direct;
  #L383dce.  `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` := v1 @kind object;
  #L383dd2.  call temp:= `getFields`(v6) @signature `Lcom/activeandroid/TableInfo;.getFields:()Ljava/util/Collection;` @kind virtual;
  #L383dd8.  v1:= temp @kind object;
  #L383dda.  call temp:= `iterator`(v1) @signature `Ljava/util/Collection;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L383de0.  v1:= temp @kind object;
  #L383de2.  call temp:= `hasNext`(v1) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L383de8.  v2:= temp;
  #L383dea.  if v2 == 0 then goto L383e02;
  #L383dee.  call temp:= `next`(v1) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L383df4.  v2:= temp @kind object;
  #L383df6.  v2:= (`java.lang.reflect.Field`) v2 @kind object;
  #L383dfa.  call `createUniqueColumnDefinition`(v6, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.createUniqueColumnDefinition:(Lcom/activeandroid/TableInfo;Ljava/lang/reflect/Field;)V` @kind static;
  #L383e00.  goto L383de2;
  #L383e02.  v6:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L383e06.  call temp:= `isEmpty`(v6) @signature `Ljava/util/HashMap;.isEmpty:()Z` @kind virtual;
  #L383e0c.  v6:= temp;
  #L383e0e.  if v6 == 0 then goto L383e14;
  #L383e12.  return v0 @kind object;
  #L383e14.  v6:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L383e18.  call temp:= `keySet`(v6) @signature `Ljava/util/HashMap;.keySet:()Ljava/util/Set;` @kind virtual;
  #L383e1e.  v6:= temp @kind object;
  #L383e20.  call temp:= `iterator`(v6) @signature `Ljava/util/Set;.iterator:()Ljava/util/Iterator;` @kind interface;
  #L383e26.  v6:= temp @kind object;
  #L383e28.  call temp:= `hasNext`(v6) @signature `Ljava/util/Iterator;.hasNext:()Z` @kind interface;
  #L383e2e.  v1:= temp;
  #L383e30.  if v1 == 0 then goto L383e9a;
  #L383e34.  call temp:= `next`(v6) @signature `Ljava/util/Iterator;.next:()Ljava/lang/Object;` @kind interface;
  #L383e3a.  v1:= temp @kind object;
  #L383e3c.  v1:= (`java.lang.String`) v1 @kind object;
  #L383e40.  v2:= `@@com.activeandroid.util.SQLiteUtils.sUniqueGroupMap` @type ^`java.util.HashMap` @kind object;
  #L383e44.  call temp:= `get`(v2, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383e4a.  v2:= temp @kind object;
  #L383e4c.  v2:= (`java.util.List`) v2 @kind object;
  #L383e50.  v3:= `@@com.activeandroid.util.SQLiteUtils.sOnUniqueConflictsMap` @type ^`java.util.HashMap` @kind object;
  #L383e54.  call temp:= `get`(v3, v1) @signature `Ljava/util/HashMap;.get:(Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383e5a.  v1:= temp @kind object;
  #L383e5c.  v1:= (`com.activeandroid.annotation.Column$ConflictAction`) v1 @kind object;
  #L383e60.  v3:= 2I;
  #L383e62.  v3:= new `java.lang.Object`[v3];
  #L383e66.  v4:= 0I;
  #L383e68.  v5:= ", " @kind object;
  #L383e6c.  call temp:= `join`(v5, v2) @signature `Landroid/text/TextUtils;.join:(Ljava/lang/CharSequence;Ljava/lang/Iterable;)Ljava/lang/String;` @kind static;
  #L383e72.  v2:= temp @kind object;
  #L383e74.  v3[v4]:= v2 @kind object;
  #L383e78.  v2:= 1I;
  #L383e7a.  call temp:= `toString`(v1) @signature `Ljava/lang/Enum;.toString:()Ljava/lang/String;` @kind virtual;
  #L383e80.  v1:= temp @kind object;
  #L383e82.  v3[v2]:= v1 @kind object;
  #L383e86.  v1:= "UNIQUE (%s) ON CONFLICT %s" @kind object;
  #L383e8a.  call temp:= `format`(v1, v3) @signature `Ljava/lang/String;.format:(Ljava/lang/String;[Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L383e90.  v1:= temp @kind object;
  #L383e92.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L383e98.  goto L383e28;
  #L383e9a.  return v0 @kind object;
}
procedure `void` `execSql`(`java.lang.String` v1 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L384298.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L38429e.  v0:= temp @kind object;
  #L3842a0.  call `execSQL`(v0, v1) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;)V` @kind virtual;
  #L3842a6.  return @kind void;
}
procedure `void` `execSql`(`java.lang.String` v1 @kind object, `java.lang.Object`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.execSql:(Ljava/lang/String;[Ljava/lang/Object;)V` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3842b8.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L3842be.  v0:= temp @kind object;
  #L3842c0.  call `execSQL`(v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.execSQL:(Ljava/lang/String;[Ljava/lang/Object;)V` @kind virtual;
  #L3842c6.  return @kind void;
}
procedure `int` `intQuery`(`java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.intQuery:(Ljava/lang/String;[Ljava/lang/String;)I` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3838c8.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L3838ce.  v0:= temp @kind object;
  #L3838d0.  call temp:= `rawQuery`(v0, v1, v2) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L3838d6.  v1:= temp @kind object;
  #L3838d8.  call temp:= `processIntCursor`(v1) @signature `Lcom/activeandroid/util/SQLiteUtils;.processIntCursor:(Landroid/database/Cursor;)I` @kind static;
  #L3838de.  v2:= temp;
  #L3838e0.  call `close`(v1) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3838e6.  return v2;
}
procedure `java.util.List` `lexSqlScript`(`java.lang.String` v9 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.lexSqlScript:(Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;
    v7;
    v8;

  #L383eac.  v0:= new `java.util.ArrayList`;
  #L383eb0.  call `<init>`(v0) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L383eb6.  v1:= new `java.lang.StringBuilder`;
  #L383eba.  v2:= 100I;
  #L383ebe.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L383ec4.  v3:= 0I;
  #L383ec6.  v4:= 0I;
  #L383ec8.  v5:= 0I;
  #L383eca.  v6:= 0I;
  #L383ecc.  call temp:= `length`(v9) @signature `Ljava/lang/String;.length:()I` @kind virtual;
  #L383ed2.  v7:= temp;
  #L383ed4.  if v4 >= v7 then goto L383f3c;
  #L383ed8.  call temp:= `charAt`(v9, v4) @signature `Ljava/lang/String;.charAt:(I)C` @kind virtual;
  #L383ede.  v7:= temp;
  #L383ee0.  v8:= 59I;
  #L383ee4.  if v7 != v8 then goto L383f0e;
  #L383ee8.  if v5 != 0 then goto L383f0e;
  #L383eec.  if v6 != 0 then goto L383f0e;
  #L383ef0.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383ef6.  v1:= temp @kind object;
  #L383ef8.  call temp:= `add`(v0, v1) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L383efe.  v1:= new `java.lang.StringBuilder`;
  #L383f02.  call `<init>`(v1, v2) @signature `Ljava/lang/StringBuilder;.<init>:(I)V` @kind direct;
  #L383f08.  v5:= 0I;
  #L383f0a.  v6:= 0I;
  #L383f0c.  goto L383f36;
  #L383f0e.  v8:= 39I;
  #L383f12.  if v7 != v8 then goto L383f1e;
  #L383f16.  if v6 != 0 then goto L383f1e;
  #L383f1a.  v5:= v5 ^~ 1;
  #L383f1e.  v8:= 92I;
  #L383f22.  if v7 != v8 then goto L383f2e;
  #L383f26.  if v6 != 0 then goto L383f2e;
  #L383f2a.  v6:= 1I;
  #L383f2c.  goto L383f30;
  #L383f2e.  v6:= 0I;
  #L383f30.  call temp:= `append`(v1, v7) @signature `Ljava/lang/StringBuilder;.append:(C)Ljava/lang/StringBuilder;` @kind virtual;
  #L383f36.  v4:= v4 + 1;
  #L383f3a.  goto L383ecc;
  #L383f3c.  call temp:= `length`(v1) @signature `Ljava/lang/StringBuilder;.length:()I` @kind virtual;
  #L383f42.  v9:= temp;
  #L383f44.  if v9 <= 0 then goto L383f56;
  #L383f48.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L383f4e.  v9:= temp @kind object;
  #L383f50.  call temp:= `add`(v0, v9) @signature `Ljava/util/ArrayList;.add:(Ljava/lang/Object;)Z` @kind virtual;
  #L383f56.  return v0 @kind object;
}
procedure `java.util.List` `processCursor`(`java.lang.Class` v7 @kind object, `android.database.Cursor` v8 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.processCursor:(Ljava/lang/Class;Landroid/database/Cursor;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L383f68.  call temp:= `getTableInfo`(v7) @signature `Lcom/activeandroid/Cache;.getTableInfo:(Ljava/lang/Class;)Lcom/activeandroid/TableInfo;` @kind static;
  #L383f6e.  v0:= temp @kind object;
  #L383f70.  call temp:= `getIdName`(v0) @signature `Lcom/activeandroid/TableInfo;.getIdName:()Ljava/lang/String;` @kind virtual;
  #L383f76.  v0:= temp @kind object;
  #L383f78.  v1:= new `java.util.ArrayList`;
  #L383f7c.  call `<init>`(v1) @signature `Ljava/util/ArrayList;.<init>:()V` @kind direct;
  #L383f82.  v2:= 0I;
  #L383f84.  v3:= new `java.lang.Class`[v2];
  #L383f88.  call temp:= `getConstructor`(v7, v3) @signature `Ljava/lang/Class;.getConstructor:([Ljava/lang/Class;)Ljava/lang/reflect/Constructor;` @kind virtual;
  #L383f8e.  v3:= temp @kind object;
  #L383f90.  call temp:= `moveToFirst`(v8) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L383f96.  v4:= temp;
  #L383f98.  if v4 == 0 then goto L384008;
  #L383f9c.  v4:= new `java.util.ArrayList`;
  #L383fa0.  call temp:= `getColumnNames`(v8) @signature `Landroid/database/Cursor;.getColumnNames:()[Ljava/lang/String;` @kind interface;
  #L383fa6.  v5:= temp @kind object;
  #L383fa8.  call temp:= `asList`(v5) @signature `Ljava/util/Arrays;.asList:([Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L383fae.  v5:= temp @kind object;
  #L383fb0.  call `<init>`(v4, v5) @signature `Ljava/util/ArrayList;.<init>:(Ljava/util/Collection;)V` @kind direct;
  #L383fb6.  call temp:= `indexOf`(v4, v0) @signature `Ljava/util/List;.indexOf:(Ljava/lang/Object;)I` @kind interface;
  #L383fbc.  v5:= temp;
  #L383fbe.  call temp:= `getLong`(v8, v5) @signature `Landroid/database/Cursor;.getLong:(I)J` @kind interface;
  #L383fc4.  v5:= temp @kind wide;
  #L383fc6.  call temp:= `getEntity`(v7, v5) @signature `Lcom/activeandroid/Cache;.getEntity:(Ljava/lang/Class;J)Lcom/activeandroid/Model;` @kind static;
  #L383fcc.  v5:= temp @kind object;
  #L383fce.  if v5 != 0 then goto L383fe2;
  #L383fd2.  v5:= new `java.lang.Object`[v2];
  #L383fd6.  call temp:= `newInstance`(v3, v5) @signature `Ljava/lang/reflect/Constructor;.newInstance:([Ljava/lang/Object;)Ljava/lang/Object;` @kind virtual;
  #L383fdc.  v5:= temp @kind object;
  #L383fde.  v5:= (`com.activeandroid.Model`) v5 @kind object;
  #L383fe2.  call `loadFromCursor`(v5, v8) @signature `Lcom/activeandroid/Model;.loadFromCursor:(Landroid/database/Cursor;)V` @kind virtual;
  #L383fe8.  call temp:= `add`(v1, v5) @signature `Ljava/util/List;.add:(Ljava/lang/Object;)Z` @kind interface;
  #L383fee.  call temp:= `moveToNext`(v8) @signature `Landroid/database/Cursor;.moveToNext:()Z` @kind interface;
  #L383ff4.  v5:= temp;
  #L383ff6.  if v5 != 0 then goto L383fb6;
  #L383ffa.  goto L384008;
  #L383ffc.  v7:= Exception @type ^`java.lang.Exception` @kind object;
  #L383ffe.  v8:= "Failed to process cursor." @kind object;
  #L384002.  call temp:= `e`(v8, v7) @signature `Lcom/activeandroid/util/Log;.e:(Ljava/lang/String;Ljava/lang/Throwable;)I` @kind static;
  #L384008.  return v1 @kind object;
  #L38400a.  v8:= new `java.lang.RuntimeException`;
  #L38400e.  v0:= new `java.lang.StringBuilder`;
  #L384012.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L384018.  v1:= "Your model " @kind object;
  #L38401c.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384022.  call temp:= `getName`(v7) @signature `Ljava/lang/Class;.getName:()Ljava/lang/String;` @kind virtual;
  #L384028.  v7:= temp @kind object;
  #L38402a.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384030.  v7:= " does not define a default " @kind object;
  #L384034.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38403a.  v7:= "constructor. The default constructor is required for " @kind object;
  #L38403e.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384044.  v7:= "now in ActiveAndroid models, as the process to " @kind object;
  #L384048.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38404e.  v7:= "populate the ORM model is : " @kind object;
  #L384052.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384058.  v7:= "1. instantiate default model " @kind object;
  #L38405c.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L384062.  v7:= "2. populate fields" @kind object;
  #L384066.  call temp:= `append`(v0, v7) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L38406c.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L384072.  v7:= temp @kind object;
  #L384074.  call `<init>`(v8, v7) @signature `Ljava/lang/RuntimeException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L38407a.  throw v8;
  catch `java.lang.NoSuchMethodException` @[L383f84..L383ff6] goto L38400a;
  catch `java.lang.Exception` @[L383f84..L383ff6] goto L383ffc;
}
procedure `int` `processIntCursor`(`android.database.Cursor` v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.processIntCursor:(Landroid/database/Cursor;)I` @AccessFlag PRIVATE_STATIC {
    temp;
    v0;
    v1;

  #L3838f8.  call temp:= `moveToFirst`(v2) @signature `Landroid/database/Cursor;.moveToFirst:()Z` @kind interface;
  #L3838fe.  v0:= temp;
  #L383900.  v1:= 0I;
  #L383902.  if v0 == 0 then goto L383910;
  #L383906.  call temp:= `getInt`(v2, v1) @signature `Landroid/database/Cursor;.getInt:(I)I` @kind interface;
  #L38390c.  v2:= temp;
  #L38390e.  return v2;
  #L383910.  return v1;
}
procedure `java.util.List` `rawQuery`(`java.lang.Class` v1 @kind object, `java.lang.String` v2 @kind object, `java.lang.String`[] v3 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L38409c.  call temp:= `openDatabase`() @signature `Lcom/activeandroid/Cache;.openDatabase:()Landroid/database/sqlite/SQLiteDatabase;` @kind static;
  #L3840a2.  v0:= temp @kind object;
  #L3840a4.  call temp:= `rawQuery`(v0, v2, v3) @signature `Landroid/database/sqlite/SQLiteDatabase;.rawQuery:(Ljava/lang/String;[Ljava/lang/String;)Landroid/database/Cursor;` @kind virtual;
  #L3840aa.  v2:= temp @kind object;
  #L3840ac.  call temp:= `processCursor`(v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.processCursor:(Ljava/lang/Class;Landroid/database/Cursor;)Ljava/util/List;` @kind static;
  #L3840b2.  v1:= temp @kind object;
  #L3840b4.  call `close`(v2) @signature `Landroid/database/Cursor;.close:()V` @kind interface;
  #L3840ba.  return v1 @kind object;
}
procedure `com.activeandroid.Model` `rawQuerySingle`(`java.lang.Class` v0 @kind object, `java.lang.String` v1 @kind object, `java.lang.String`[] v2 @kind object) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuerySingle:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Lcom/activeandroid/Model;` @AccessFlag PUBLIC_STATIC {
    temp;

  #L383890.  call temp:= `rawQuery`(v0, v1, v2) @signature `Lcom/activeandroid/util/SQLiteUtils;.rawQuery:(Ljava/lang/Class;Ljava/lang/String;[Ljava/lang/String;)Ljava/util/List;` @kind static;
  #L383896.  v0:= temp @kind object;
  #L383898.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L38389e.  v1:= temp;
  #L3838a0.  if v1 <= 0 then goto L3838b4;
  #L3838a4.  v1:= 0I;
  #L3838a6.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L3838ac.  v0:= temp @kind object;
  #L3838ae.  v0:= (`com.activeandroid.Model`) v0 @kind object;
  #L3838b2.  return v0 @kind object;
  #L3838b4.  v0:= 0I;
  #L3838b6.  return v0 @kind object;
}
