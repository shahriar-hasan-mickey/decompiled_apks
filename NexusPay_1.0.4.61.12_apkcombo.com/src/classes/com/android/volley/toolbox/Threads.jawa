record `com.android.volley.toolbox.Threads` @kind class @AccessFlag FINAL {
}
procedure `void` `<init>`(`com.android.volley.toolbox.Threads` v0 @kind this) @signature `Lcom/android/volley/toolbox/Threads;.<init>:()V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L3b2384.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L3b238a.  return @kind void;
}
procedure `void` `throwIfNotOnMainThread`() @signature `Lcom/android/volley/toolbox/Threads;.throwIfNotOnMainThread:()V` @AccessFlag STATIC {
    temp;
    v0;
    v1;

  #L3b239c.  call temp:= `myLooper`() @signature `Landroid/os/Looper;.myLooper:()Landroid/os/Looper;` @kind static;
  #L3b23a2.  v0:= temp @kind object;
  #L3b23a4.  call temp:= `getMainLooper`() @signature `Landroid/os/Looper;.getMainLooper:()Landroid/os/Looper;` @kind static;
  #L3b23aa.  v1:= temp @kind object;
  #L3b23ac.  if v0 != v1 then goto L3b23b2;
  #L3b23b0.  return @kind void;
  #L3b23b2.  v0:= new `java.lang.IllegalStateException`;
  #L3b23b6.  v1:= "Must be invoked from the main thread." @kind object;
  #L3b23ba.  call `<init>`(v0, v1) @signature `Ljava/lang/IllegalStateException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3b23c0.  throw v0;
}
