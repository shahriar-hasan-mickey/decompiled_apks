record `com.airbnb.lottie.model.content.Mask$MaskMode` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.Mask$MaskMode`[] `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.Mask$MaskMode` `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;
    v5;
    v6;

  #L392f04.  v0:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L392f08.  v1:= "MASK_MODE_ADD" @kind object;
  #L392f0c.  v2:= 0I;
  #L392f0e.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392f14.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v0 @kind object;
  #L392f18.  v0:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L392f1c.  v1:= "MASK_MODE_SUBTRACT" @kind object;
  #L392f20.  v3:= 1I;
  #L392f22.  call `<init>`(v0, v1, v3) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392f28.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v0 @kind object;
  #L392f2c.  v0:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L392f30.  v1:= "MASK_MODE_INTERSECT" @kind object;
  #L392f34.  v4:= 2I;
  #L392f36.  call `<init>`(v0, v1, v4) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392f3c.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v0 @kind object;
  #L392f40.  v0:= new `com.airbnb.lottie.model.content.Mask$MaskMode`;
  #L392f44.  v1:= "MASK_MODE_NONE" @kind object;
  #L392f48.  v5:= 3I;
  #L392f4a.  call `<init>`(v0, v1, v5) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392f50.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_NONE` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` := v0 @kind object;
  #L392f54.  v1:= 4I;
  #L392f56.  v1:= new `com.airbnb.lottie.model.content.Mask$MaskMode`[v1];
  #L392f5a.  v6:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_ADD` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L392f5e.  v1[v2]:= v6 @kind object;
  #L392f62.  v2:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_SUBTRACT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L392f66.  v1[v3]:= v2 @kind object;
  #L392f6a.  v2:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.MASK_MODE_INTERSECT` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L392f6e.  v1[v4]:= v2 @kind object;
  #L392f72.  v1[v5]:= v0 @kind object;
  #L392f76.  `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode`[] := v1 @kind object;
  #L392f7a.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.Mask$MaskMode` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L392f8c.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L392f92.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.Mask$MaskMode` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/Mask$MaskMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L392ebc.  v0:= constclass @type ^`com.airbnb.lottie.model.content.Mask$MaskMode` @kind object;
  #L392ec0.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L392ec6.  v1:= temp @kind object;
  #L392ec8.  v1:= (`com.airbnb.lottie.model.content.Mask$MaskMode`) v1 @kind object;
  #L392ecc.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.Mask$MaskMode`[] `values`() @signature `Lcom/airbnb/lottie/model/content/Mask$MaskMode;.values:()[Lcom/airbnb/lottie/model/content/Mask$MaskMode;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L392ee0.  v0:= `@@com.airbnb.lottie.model.content.Mask$MaskMode.$VALUES` @type ^`com.airbnb.lottie.model.content.Mask$MaskMode`[] @kind object;
  #L392ee4.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/Mask$MaskMode;.clone:()Ljava/lang/Object;` @kind virtual;
  #L392eea.  v0:= temp @kind object;
  #L392eec.  v0:= (`com.airbnb.lottie.model.content.Mask$MaskMode`[]) v0 @kind object;
  #L392ef0.  return v0 @kind object;
}
