record `com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind class @AccessFlag PUBLIC_FINAL_ENUM extends `java.lang.Enum` @kind class {
}
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @AccessFlag PRIVATE_STATIC_FINAL_SYNTHETIC;
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
global `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @AccessFlag PUBLIC_STATIC_FINAL_ENUM;
procedure `void` `<clinit>`() @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<clinit>:()V` @AccessFlag STATIC_CONSTRUCTOR {
    temp;
    v0;
    v1;
    v2;
    v3;
    v4;

  #L394244.  v0:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`;
  #L394248.  v1:= "SIMULTANEOUSLY" @kind object;
  #L39424c.  v2:= 0I;
  #L39424e.  call `<init>`(v0, v1, v2) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L394254.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v0 @kind object;
  #L394258.  v0:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`;
  #L39425c.  v1:= "INDIVIDUALLY" @kind object;
  #L394260.  v3:= 1I;
  #L394262.  call `<init>`(v0, v1, v3) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L394268.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` := v0 @kind object;
  #L39426c.  v1:= 2I;
  #L39426e.  v1:= new `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[v1];
  #L394272.  v4:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L394276.  v1[v2]:= v4 @kind object;
  #L39427a.  v1[v3]:= v0 @kind object;
  #L39427e.  `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] := v1 @kind object;
  #L394282.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.content.ShapeTrimPath$Type` v0 @kind this, `java.lang.String` v1 @kind object, `int` v2 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.<init>:(Ljava/lang/String;I)V` @AccessFlag PRIVATE_CONSTRUCTOR {
    temp;

  #L394294.  call `<init>`(v0, v1, v2) @signature `Ljava/lang/Enum;.<init>:(Ljava/lang/String;I)V` @kind direct;
  #L39429a.  return @kind void;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `forId`(`int` v3 ) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.forId:(I)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;
    v1;
    v2;

  #L3941a4.  v0:= 1I;
  #L3941a6.  if v3 == v0 then goto L3941e4;
  #L3941aa.  v0:= 2I;
  #L3941ac.  if v3 != v0 then goto L3941b6;
  #L3941b0.  v3:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.INDIVIDUALLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L3941b4.  return v3 @kind object;
  #L3941b6.  v0:= new `java.lang.IllegalArgumentException`;
  #L3941ba.  v1:= new `java.lang.StringBuilder`;
  #L3941be.  call `<init>`(v1) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3941c4.  v2:= "Unknown trim path type " @kind object;
  #L3941c8.  call temp:= `append`(v1, v2) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3941ce.  call temp:= `append`(v1, v3) @signature `Ljava/lang/StringBuilder;.append:(I)Ljava/lang/StringBuilder;` @kind virtual;
  #L3941d4.  call temp:= `toString`(v1) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3941da.  v3:= temp @kind object;
  #L3941dc.  call `<init>`(v0, v3) @signature `Ljava/lang/IllegalArgumentException;.<init>:(Ljava/lang/String;)V` @kind direct;
  #L3941e2.  throw v0;
  #L3941e4.  v3:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.SIMULTANEOUSLY` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L3941e8.  return v3 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type` `valueOf`(`java.lang.String` v1 @kind object) @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.valueOf:(Ljava/lang/String;)Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L3941fc.  v0:= constclass @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type` @kind object;
  #L394200.  call temp:= `valueOf`(v0, v1) @signature `Ljava/lang/Enum;.valueOf:(Ljava/lang/Class;Ljava/lang/String;)Ljava/lang/Enum;` @kind static;
  #L394206.  v1:= temp @kind object;
  #L394208.  v1:= (`com.airbnb.lottie.model.content.ShapeTrimPath$Type`) v1 @kind object;
  #L39420c.  return v1 @kind object;
}
procedure `com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] `values`() @signature `Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.values:()[Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;` @AccessFlag PUBLIC_STATIC {
    temp;
    v0;

  #L394220.  v0:= `@@com.airbnb.lottie.model.content.ShapeTrimPath$Type.$VALUES` @type ^`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[] @kind object;
  #L394224.  call temp:= `clone`(v0) @signature `[Lcom/airbnb/lottie/model/content/ShapeTrimPath$Type;.clone:()Ljava/lang/Object;` @kind virtual;
  #L39422a.  v0:= temp @kind object;
  #L39422c.  v0:= (`com.airbnb.lottie.model.content.ShapeTrimPath$Type`[]) v0 @kind object;
  #L394230.  return v0 @kind object;
}
