record `com.airbnb.lottie.model.animatable.a` @kind class @AccessFlag ABSTRACT extends `com.airbnb.lottie.model.animatable.AnimatableValue` @kind interface {
  `java.util.List` `com.airbnb.lottie.model.animatable.a.a` @AccessFlag FINAL;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.animatable.a` v1 @kind this, `java.lang.Object` v2 @kind object) @signature `Lcom/airbnb/lottie/model/animatable/a;.<init>:(Ljava/lang/Object;)V` @AccessFlag CONSTRUCTOR {
    temp;
    v0;

  #L392920.  v0:= new `com.airbnb.lottie.value.Keyframe`;
  #L392924.  call `<init>`(v0, v2) @signature `Lcom/airbnb/lottie/value/Keyframe;.<init>:(Ljava/lang/Object;)V` @kind direct;
  #L39292a.  call temp:= `singletonList`(v0) @signature `Ljava/util/Collections;.singletonList:(Ljava/lang/Object;)Ljava/util/List;` @kind static;
  #L392930.  v2:= temp @kind object;
  #L392932.  call `<init>`(v1, v2) @signature `Lcom/airbnb/lottie/model/animatable/a;.<init>:(Ljava/util/List;)V` @kind direct;
  #L392938.  return @kind void;
}
procedure `void` `<init>`(`com.airbnb.lottie.model.animatable.a` v0 @kind this, `java.util.List` v1 @kind object) @signature `Lcom/airbnb/lottie/model/animatable/a;.<init>:(Ljava/util/List;)V` @AccessFlag CONSTRUCTOR {
    temp;

  #L39294c.  call `<init>`(v0) @signature `Ljava/lang/Object;.<init>:()V` @kind direct;
  #L392952.  v0.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` := v1 @kind object;
  #L392956.  return @kind void;
}
procedure `java.util.List` `getKeyframes`(`com.airbnb.lottie.model.animatable.a` v1 @kind this) @signature `Lcom/airbnb/lottie/model/animatable/a;.getKeyframes:()Ljava/util/List;` @AccessFlag PUBLIC {
    temp;
    v0;

  #L392908.  v0:= v1.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L39290c.  return v0 @kind object;
}
procedure `boolean` `isStatic`(`com.airbnb.lottie.model.animatable.a` v3 @kind this) @signature `Lcom/airbnb/lottie/model/animatable/a;.isStatic:()Z` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;
    v2;

  #L39285c.  v0:= v3.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L392860.  call temp:= `isEmpty`(v0) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L392866.  v0:= temp;
  #L392868.  v1:= 0I;
  #L39286a.  v2:= 1I;
  #L39286c.  if v0 != 0 then goto L39289c;
  #L392870.  v0:= v3.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L392874.  call temp:= `size`(v0) @signature `Ljava/util/List;.size:()I` @kind interface;
  #L39287a.  v0:= temp;
  #L39287c.  if v0 != v2 then goto L39289e;
  #L392880.  v0:= v3.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L392884.  call temp:= `get`(v0, v1) @signature `Ljava/util/List;.get:(I)Ljava/lang/Object;` @kind interface;
  #L39288a.  v0:= temp @kind object;
  #L39288c.  v0:= (`com.airbnb.lottie.value.Keyframe`) v0 @kind object;
  #L392890.  call temp:= `isStatic`(v0) @signature `Lcom/airbnb/lottie/value/Keyframe;.isStatic:()Z` @kind virtual;
  #L392896.  v0:= temp;
  #L392898.  if v0 == 0 then goto L39289e;
  #L39289c.  v1:= 1I;
  #L39289e.  return v1;
}
procedure `java.lang.String` `toString`(`com.airbnb.lottie.model.animatable.a` v2 @kind this) @signature `Lcom/airbnb/lottie/model/animatable/a;.toString:()Ljava/lang/String;` @AccessFlag PUBLIC {
    temp;
    v0;
    v1;

  #L3928b0.  v0:= new `java.lang.StringBuilder`;
  #L3928b4.  call `<init>`(v0) @signature `Ljava/lang/StringBuilder;.<init>:()V` @kind direct;
  #L3928ba.  v1:= v2.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L3928be.  call temp:= `isEmpty`(v1) @signature `Ljava/util/List;.isEmpty:()Z` @kind interface;
  #L3928c4.  v1:= temp;
  #L3928c6.  if v1 != 0 then goto L3928ee;
  #L3928ca.  v1:= "values=" @kind object;
  #L3928ce.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3928d4.  v1:= v2.`com.airbnb.lottie.model.animatable.a.a` @type ^`java.util.List` @kind object;
  #L3928d8.  call temp:= `toArray`(v1) @signature `Ljava/util/List;.toArray:()[Ljava/lang/Object;` @kind interface;
  #L3928de.  v1:= temp @kind object;
  #L3928e0.  call temp:= `toString`(v1) @signature `Ljava/util/Arrays;.toString:([Ljava/lang/Object;)Ljava/lang/String;` @kind static;
  #L3928e6.  v1:= temp @kind object;
  #L3928e8.  call temp:= `append`(v0, v1) @signature `Ljava/lang/StringBuilder;.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;` @kind virtual;
  #L3928ee.  call temp:= `toString`(v0) @signature `Ljava/lang/StringBuilder;.toString:()Ljava/lang/String;` @kind virtual;
  #L3928f4.  v0:= temp @kind object;
  #L3928f6.  return v0 @kind object;
}
